

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat May 27 18:50:40 2023

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    65                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    66                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    67                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    68  0000                     
    69                           ; Version 2.20
    70                           ; Generated 12/02/2020 GMT
    71                           ; 
    72                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F452 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     
   104                           	psect	idataBANK0
   105  007C55                     __pidataBANK0:
   106                           	callstack 0
   107                           
   108                           ;initializer for stoa@F1152
   109  007C55  28                 	db	40
   110  007C56  6E                 	db	110
   111  007C57  75                 	db	117
   112  007C58  6C                 	db	108
   113  007C59  6C                 	db	108
   114  007C5A  29                 	db	41
   115  007C5B  00                 	db	0
   116                           
   117                           ;initializer for _tosc
   118  007C5C  37BD               	dw	14269
   119  007C5E  3486               	dw	13446
   120                           
   121                           	psect	smallconst
   122  000600                     __psmallconst:
   123                           	callstack 0
   124  000600  00                 	db	0
   125  000601  0000               	dw	0
   126  000603  4B00               	dw	19200
   127  000605                     __end_of_toint:
   128                           	callstack 0
   129  000605  0000               	dw	0
   130  000607  4616               	dw	17942
   131  000609                     __end_of_desired_baudrate:
   132                           	callstack 0
   133  000609  2400               	dw	9216
   134  00060B  4A74               	dw	19060
   135  00060D                     __end_of_fosc:
   136                           	callstack 0
   137  0000                     _PORTEbits	set	3972
   138  0000                     _PORTD	set	3971
   139  0000                     _TRISCbits	set	3988
   140  0000                     _PORTC	set	3970
   141  0000                     _LATC	set	3979
   142  0000                     _TRISB	set	3987
   143  0000                     _PORTB	set	3969
   144  0000                     _LATB	set	3978
   145  0000                     _PIR1bits	set	3998
   146  0000                     _PIE1bits	set	3997
   147  0000                     _LATBbits	set	3978
   148  0000                     _RCREG	set	4014
   149  0000                     _INTCONbits	set	4082
   150  0000                     _TXREG	set	4013
   151  0000                     _RCSTAbits	set	4011
   152  0000                     _TXSTAbits	set	4012
   153  0000                     _SPBRG	set	4015
   154  00060D                     STR_1:
   155  00060D  54                 	db	84	;'T'
   156  00060E  68                 	db	104	;'h'
   157  00060F  65                 	db	101	;'e'
   158  000610  20                 	db	32
   159  000611  76                 	db	118	;'v'
   160  000612  61                 	db	97	;'a'
   161  000613  72                 	db	114	;'r'
   162  000614  69                 	db	105	;'i'
   163  000615  61                 	db	97	;'a'
   164  000616  62                 	db	98	;'b'
   165  000617  6C                 	db	108	;'l'
   166  000618  65                 	db	101	;'e'
   167  000619  20                 	db	32
   168  00061A  69                 	db	105	;'i'
   169  00061B  73                 	db	115	;'s'
   170  00061C  20                 	db	32
   171  00061D  25                 	db	37
   172  00061E  63                 	db	99	;'c'
   173  00061F  00                 	db	0
   174  000620                     STR_78:
   175  000620  68                 	db	104	;'h'
   176  000621  68                 	db	104	;'h'
   177  000622  58                 	db	88	;'X'
   178  000623  00                 	db	0
   179  000624                     STR_2:
   180  000624  68                 	db	104	;'h'
   181  000625  68                 	db	104	;'h'
   182  000626  64                 	db	100	;'d'
   183  000627  00                 	db	0
   184  000628                     STR_6:
   185  000628  68                 	db	104	;'h'
   186  000629  68                 	db	104	;'h'
   187  00062A  69                 	db	105	;'i'
   188  00062B  00                 	db	0
   189  00062C                     STR_44:
   190  00062C  68                 	db	104	;'h'
   191  00062D  68                 	db	104	;'h'
   192  00062E  6E                 	db	110	;'n'
   193  00062F  00                 	db	0
   194  000630                     STR_29:
   195  000630  68                 	db	104	;'h'
   196  000631  68                 	db	104	;'h'
   197  000632  6F                 	db	111	;'o'
   198  000633  00                 	db	0
   199  000634                     STR_59:
   200  000634  68                 	db	104	;'h'
   201  000635  68                 	db	104	;'h'
   202  000636  75                 	db	117	;'u'
   203  000637  00                 	db	0
   204  000638                     STR_74:
   205  000638  68                 	db	104	;'h'
   206  000639  68                 	db	104	;'h'
   207  00063A  78                 	db	120	;'x'
   208  00063B  00                 	db	0
   209  00063C                     STR_96:
   210  00063C  7A                 	db	122	;'z'
   211  00063D  58                 	db	88	;'X'
   212  00063E  00                 	db	0
   213  00063F                     STR_20:
   214  00063F  7A                 	db	122	;'z'
   215  000640  64                 	db	100	;'d'
   216  000641  00                 	db	0
   217  000642                     STR_24:
   218  000642  7A                 	db	122	;'z'
   219  000643  69                 	db	105	;'i'
   220  000644  00                 	db	0
   221  000645                     STR_54:
   222  000645  7A                 	db	122	;'z'
   223  000646  6E                 	db	110	;'n'
   224  000647  00                 	db	0
   225  000648                     STR_39:
   226  000648  7A                 	db	122	;'z'
   227  000649  6F                 	db	111	;'o'
   228  00064A  00                 	db	0
   229  00064B                     STR_69:
   230  00064B  7A                 	db	122	;'z'
   231  00064C  75                 	db	117	;'u'
   232  00064D  00                 	db	0
   233  00064E                     STR_92:
   234  00064E  7A                 	db	122	;'z'
   235  00064F  78                 	db	120	;'x'
   236  000650  00                 	db	0
   237  000651  00                 	db	0	; dummy byte at the end
   238  0000                     
   239                           ; #config settings
   240                           
   241                           	psect	cinit
   242  007EE8                     __pcinit:
   243                           	callstack 0
   244  007EE8                     start_initialization:
   245                           	callstack 0
   246  007EE8                     __initialization:
   247                           	callstack 0
   248                           
   249                           ; Initialize objects allocated to BANK0 (11 bytes)
   250                           ; load TBLPTR registers with __pidataBANK0
   251  007EE8  0E55               	movlw	low __pidataBANK0
   252  007EEA  6EF6               	movwf	tblptrl,c
   253  007EEC  0E7C               	movlw	high __pidataBANK0
   254  007EEE  6EF7               	movwf	tblptrh,c
   255  007EF0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   256  007EF2  6EF8               	movwf	tblptru,c
   257  007EF4  EE00  F0C2         	lfsr	0,__pdataBANK0
   258  007EF8  EE10 F00B          	lfsr	1,11
   259  007EFC                     copy_data0:
   260  007EFC  0009               	tblrd		*+
   261  007EFE  CFF5 FFEE          	movff	tablat,postinc0
   262  007F02  50E5               	movf	postdec1,w,c
   263  007F04  50E1               	movf	fsr1l,w,c
   264  007F06  E1FA               	bnz	copy_data0
   265                           
   266                           ; Clear objects allocated to BANK1 (1 bytes)
   267  007F08  0101               	movlb	1
   268  007F0A  6BA1               	clrf	__pbssBANK1& (0+255),b
   269                           
   270                           ; Clear objects allocated to BANK0 (44 bytes)
   271  007F0C  EE00  F080         	lfsr	0,__pbssBANK0
   272  007F10  0E2C               	movlw	44
   273  007F12                     clear_0:
   274  007F12  6AEE               	clrf	postinc0,c
   275  007F14  06E8               	decf	wreg,f,c
   276  007F16  E1FD               	bnz	clear_0
   277                           
   278                           ; Clear objects allocated to COMRAM (2 bytes)
   279  007F18  6A7E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   280  007F1A  6A7D               	clrf	__pbssCOMRAM& (0+255),c
   281  007F1C                     end_of_initialization:
   282                           	callstack 0
   283  007F1C                     __end_of__initialization:
   284                           	callstack 0
   285  007F1C  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   286  007F1E  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   287  007F20  0E00               	movlw	low (__Lmediumconst shr (0+16))
   288  007F22  6EF8               	movwf	tblptru,c
   289  007F24  0100               	movlb	0
   290  007F26  EF04  F001         	goto	_main	;jump to C main() function
   291                           
   292                           	psect	bssCOMRAM
   293  00007D                     __pbssCOMRAM:
   294                           	callstack 0
   295  00007D                     _flags:
   296                           	callstack 0
   297  00007D                     	ds	2
   298                           
   299                           	psect	bssBANK0
   300  000080                     __pbssBANK0:
   301                           	callstack 0
   302  000080                     roundf@F525:
   303                           	callstack 0
   304  000080                     	ds	4
   305  000084                     _nout:
   306                           	callstack 0
   307  000084                     	ds	2
   308  000086                     _width:
   309                           	callstack 0
   310  000086                     	ds	2
   311  000088                     _prec:
   312                           	callstack 0
   313  000088                     	ds	2
   314  00008A                     _errno:
   315                           	callstack 0
   316  00008A                     	ds	2
   317  00008C                     _dbuf:
   318                           	callstack 0
   319  00008C                     	ds	32
   320                           
   321                           	psect	dataBANK0
   322  0000C2                     __pdataBANK0:
   323                           	callstack 0
   324  0000C2                     stoa@F1152:
   325                           	callstack 0
   326  0000C2                     	ds	7
   327  0000C9                     	ds	4
   328                           
   329                           	psect	bssBANK1
   330  0001A1                     __pbssBANK1:
   331                           	callstack 0
   332  0001A1                     _new_char_rx:
   333                           	callstack 0
   334  0001A1                     	ds	1
   335                           
   336                           	psect	cstackBANK1
   337  000100                     __pcstackBANK1:
   338                           	callstack 0
   339  000100                     main@greet_str:
   340                           	callstack 0
   341                           
   342                           ; 160 bytes @ 0x0
   343  000100                     	ds	160
   344  0001A0                     main@rx_char:
   345                           	callstack 0
   346                           
   347                           ; 1 bytes @ 0xA0
   348  0001A0                     	ds	1
   349                           
   350                           	psect	cstackBANK0
   351  0000AC                     __pcstackBANK0:
   352                           	callstack 0
   353  0000AC                     _vsnprintf$1095:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0x0
   357  0000AC                     	ds	2
   358  0000AE                     vsnprintf@cnt:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x2
   362  0000AE                     	ds	2
   363  0000B0                     vsnprintf@f:
   364                           	callstack 0
   365                           
   366                           ; 6 bytes @ 0x4
   367  0000B0                     	ds	6
   368  0000B6                     ?_snprintf:
   369                           	callstack 0
   370  0000B6                     snprintf@s:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0xA
   374  0000B6                     	ds	2
   375  0000B8                     snprintf@n:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0xC
   379  0000B8                     	ds	2
   380  0000BA                     snprintf@fmt:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0xE
   384  0000BA                     	ds	6
   385  0000C0                     snprintf@ap:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x14
   389  0000C0                     	ds	2
   390                           
   391                           	psect	cstackCOMRAM
   392  000001                     __pcstackCOMRAM:
   393                           	callstack 0
   394  000001                     ?_strlen:
   395                           	callstack 0
   396  000001                     ?_isupper:
   397                           	callstack 0
   398  000001                     ?_isalpha:
   399                           	callstack 0
   400  000001                     ?_isdigit:
   401                           	callstack 0
   402  000001                     ?_strncmp:
   403                           	callstack 0
   404  000001                     ?_isspace:
   405                           	callstack 0
   406  000001                     ?_islower:
   407                           	callstack 0
   408  000001                     ?___wmul:
   409                           	callstack 0
   410  000001                     ?___fladd:
   411                           	callstack 0
   412  000001                     ?___flmul:
   413                           	callstack 0
   414  000001                     ?___flneg:
   415                           	callstack 0
   416  000001                     ?___aodiv:
   417                           	callstack 0
   418  000001                     ?___aomod:
   419                           	callstack 0
   420  000001                     ?___lodiv:
   421                           	callstack 0
   422  000001                     ?___lomod:
   423                           	callstack 0
   424  000001                     serial_tx_char@val:
   425                           	callstack 0
   426  000001                     lcd_wr@val:
   427                           	callstack 0
   428  000001                     ___wmul@multiplier:
   429                           	callstack 0
   430  000001                     isalpha@c:
   431                           	callstack 0
   432  000001                     isdigit@c:
   433                           	callstack 0
   434  000001                     isspace@c:
   435                           	callstack 0
   436  000001                     isupper@c:
   437                           	callstack 0
   438  000001                     fputc@c:
   439                           	callstack 0
   440  000001                     strlen@s:
   441                           	callstack 0
   442  000001                     strncmp@_l:
   443                           	callstack 0
   444  000001                     islower@c:
   445                           	callstack 0
   446  000001                     ___flge@ff1:
   447                           	callstack 0
   448  000001                     ___flneg@f1:
   449                           	callstack 0
   450  000001                     ___fladd@b:
   451                           	callstack 0
   452  000001                     ___flmul@b:
   453                           	callstack 0
   454  000001                     ___aodiv@dividend:
   455                           	callstack 0
   456  000001                     ___aomod@dividend:
   457                           	callstack 0
   458  000001                     ___lodiv@dividend:
   459                           	callstack 0
   460  000001                     ___lomod@dividend:
   461                           	callstack 0
   462                           
   463                           ; 8 bytes @ 0x0
   464  000001                     	ds	1
   465  000002                     ??_lcd_cmd:
   466  000002                     ??_lcd_dat:
   467  000002                     serial_tx_string@val:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x1
   471  000002                     	ds	1
   472  000003                     ??_isupper:
   473  000003                     ??_isalpha:
   474  000003                     ??_isdigit:
   475  000003                     ??_isspace:
   476  000003                     ??_islower:
   477  000003                     lcd_cmd@val:
   478                           	callstack 0
   479  000003                     lcd_dat@val:
   480                           	callstack 0
   481  000003                     ___wmul@multiplicand:
   482                           	callstack 0
   483  000003                     fputc@fp:
   484                           	callstack 0
   485  000003                     strlen@a:
   486                           	callstack 0
   487  000003                     strncmp@_r:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x2
   491  000003                     	ds	1
   492  000004                     ??_lcd_init:
   493  000004                     serial_tx_string@i:
   494                           	callstack 0
   495  000004                     lcd_str@str:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x3
   499  000004                     	ds	1
   500  000005                     ??_fputc:
   501  000005                     ___wmul@product:
   502                           	callstack 0
   503  000005                     strncmp@n:
   504                           	callstack 0
   505  000005                     ___flge@ff2:
   506                           	callstack 0
   507  000005                     ___fladd@a:
   508                           	callstack 0
   509  000005                     ___flmul@a:
   510                           	callstack 0
   511                           
   512                           ; 4 bytes @ 0x4
   513  000005                     	ds	1
   514  000006                     lcd_str@i:
   515                           	callstack 0
   516                           
   517                           ; 1 bytes @ 0x5
   518  000006                     	ds	1
   519  000007                     ??_strncmp:
   520  000007                     ?_toupper:
   521                           	callstack 0
   522  000007                     _isspace$1385:
   523                           	callstack 0
   524  000007                     toupper@c:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x6
   528  000007                     	ds	1
   529  000008                     ?_atoi:
   530                           	callstack 0
   531  000008                     atoi@s:
   532                           	callstack 0
   533  000008                     strncmp@l:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x7
   537  000008                     	ds	1
   538  000009                     ??___fladd:
   539  000009                     ??___flmul:
   540  000009                     ??_toupper:
   541  000009                     ??___flge:
   542  000009                     ___aodiv@divisor:
   543                           	callstack 0
   544  000009                     ___aomod@divisor:
   545                           	callstack 0
   546  000009                     ___lodiv@divisor:
   547                           	callstack 0
   548  000009                     ___lomod@divisor:
   549                           	callstack 0
   550                           
   551                           ; 8 bytes @ 0x8
   552  000009                     	ds	1
   553  00000A                     ??_atoi:
   554  00000A                     ?_stoa:
   555                           	callstack 0
   556  00000A                     stoa@fp:
   557                           	callstack 0
   558  00000A                     fputs@s:
   559                           	callstack 0
   560  00000A                     strncmp@r:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x9
   564  00000A                     	ds	2
   565  00000C                     stoa@s:
   566                           	callstack 0
   567  00000C                     fputs@fp:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0xB
   571  00000C                     	ds	1
   572  00000D                     ___fladd@signs:
   573                           	callstack 0
   574  00000D                     ___flmul@sign:
   575                           	callstack 0
   576  00000D                     _toupper$1445:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0xC
   580  00000D                     	ds	1
   581  00000E                     ??_stoa:
   582  00000E                     ___fladd@aexp:
   583                           	callstack 0
   584  00000E                     fputs@c:
   585                           	callstack 0
   586  00000E                     atoi@neg:
   587                           	callstack 0
   588  00000E                     ___flmul@grs:
   589                           	callstack 0
   590                           
   591                           ; 4 bytes @ 0xD
   592  00000E                     	ds	1
   593  00000F                     ___fladd@bexp:
   594                           	callstack 0
   595  00000F                     fputs@i:
   596                           	callstack 0
   597  00000F                     stoa@nuls:
   598                           	callstack 0
   599                           
   600                           ; 7 bytes @ 0xE
   601  00000F                     	ds	1
   602  000010                     ___fladd@grs:
   603                           	callstack 0
   604  000010                     _atoi$1357:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0xF
   608  000010                     	ds	1
   609  000011                     ?_pad:
   610                           	callstack 0
   611  000011                     ?___flsub:
   612                           	callstack 0
   613  000011                     ___aodiv@counter:
   614                           	callstack 0
   615  000011                     ___aomod@counter:
   616                           	callstack 0
   617  000011                     ___lomod@counter:
   618                           	callstack 0
   619  000011                     pad@fp:
   620                           	callstack 0
   621  000011                     ___flsub@b:
   622                           	callstack 0
   623  000011                     ___lodiv@quotient:
   624                           	callstack 0
   625                           
   626                           ; 8 bytes @ 0x10
   627  000011                     	ds	1
   628  000012                     ___aodiv@sign:
   629                           	callstack 0
   630  000012                     ___aomod@sign:
   631                           	callstack 0
   632  000012                     ___flmul@aexp:
   633                           	callstack 0
   634  000012                     _atoi$1359:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x11
   638  000012                     	ds	1
   639  000013                     ?_abs:
   640                           	callstack 0
   641  000013                     ___flmul@bexp:
   642                           	callstack 0
   643  000013                     pad@buf:
   644                           	callstack 0
   645  000013                     abs@a:
   646                           	callstack 0
   647  000013                     ___aodiv@quotient:
   648                           	callstack 0
   649                           
   650                           ; 8 bytes @ 0x12
   651  000013                     	ds	1
   652  000014                     _atoi$1358:
   653                           	callstack 0
   654  000014                     ___flmul@prod:
   655                           	callstack 0
   656                           
   657                           ; 4 bytes @ 0x13
   658  000014                     	ds	1
   659  000015                     ??_abs:
   660  000015                     pad@p:
   661                           	callstack 0
   662  000015                     atoi@n:
   663                           	callstack 0
   664  000015                     ___flsub@a:
   665                           	callstack 0
   666                           
   667                           ; 4 bytes @ 0x14
   668  000015                     	ds	1
   669  000016                     stoa@i:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x15
   673  000016                     	ds	1
   674  000017                     ??_pad:
   675                           
   676                           ; 1 bytes @ 0x16
   677  000017                     	ds	1
   678  000018                     ___flmul@temp:
   679                           	callstack 0
   680  000018                     pad@i:
   681                           	callstack 0
   682  000018                     stoa@w:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x17
   686  000018                     	ds	1
   687  000019                     ___lodiv@counter:
   688                           	callstack 0
   689                           
   690                           ; 1 bytes @ 0x18
   691  000019                     	ds	1
   692  00001A                     ?_roundf:
   693                           	callstack 0
   694  00001A                     pad@w:
   695                           	callstack 0
   696  00001A                     stoa@cp:
   697                           	callstack 0
   698  00001A                     roundf@x:
   699                           	callstack 0
   700                           
   701                           ; 4 bytes @ 0x19
   702  00001A                     	ds	2
   703  00001C                     ?_ctoa:
   704                           	callstack 0
   705  00001C                     ?_dtoa:
   706                           	callstack 0
   707  00001C                     ?_otoa:
   708                           	callstack 0
   709  00001C                     ?_utoa:
   710                           	callstack 0
   711  00001C                     ?_xtoa:
   712                           	callstack 0
   713  00001C                     ctoa@fp:
   714                           	callstack 0
   715  00001C                     dtoa@fp:
   716                           	callstack 0
   717  00001C                     otoa@fp:
   718                           	callstack 0
   719  00001C                     stoa@p:
   720                           	callstack 0
   721  00001C                     utoa@fp:
   722                           	callstack 0
   723  00001C                     xtoa@fp:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x1B
   727  00001C                     	ds	2
   728  00001E                     ??_roundf:
   729  00001E                     ctoa@c:
   730                           	callstack 0
   731  00001E                     stoa@l:
   732                           	callstack 0
   733  00001E                     dtoa@d:
   734                           	callstack 0
   735  00001E                     otoa@d:
   736                           	callstack 0
   737  00001E                     utoa@d:
   738                           	callstack 0
   739  00001E                     xtoa@d:
   740                           	callstack 0
   741                           
   742                           ; 8 bytes @ 0x1D
   743  00001E                     	ds	1
   744  00001F                     ctoa@w:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x1E
   748  00001F                     	ds	3
   749  000022                     _roundf$1675:
   750                           	callstack 0
   751                           
   752                           ; 4 bytes @ 0x21
   753  000022                     	ds	4
   754  000026                     ??_dtoa:
   755  000026                     ??_otoa:
   756  000026                     ??_utoa:
   757  000026                     xtoa@x:
   758                           	callstack 0
   759  000026                     roundf@e:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x25
   763  000026                     	ds	1
   764  000027                     ??_xtoa:
   765                           
   766                           ; 1 bytes @ 0x26
   767  000027                     	ds	1
   768  000028                     _roundf$1674:
   769                           	callstack 0
   770                           
   771                           ; 4 bytes @ 0x27
   772  000028                     	ds	4
   773  00002C                     roundf@u:
   774                           	callstack 0
   775                           
   776                           ; 4 bytes @ 0x2B
   777  00002C                     	ds	2
   778  00002E                     _dtoa$1181:
   779                           	callstack 0
   780  00002E                     otoa@p:
   781                           	callstack 0
   782  00002E                     utoa@p:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x2D
   786  00002E                     	ds	1
   787  00002F                     _xtoa$1217:
   788                           	callstack 0
   789                           
   790                           ; 2 bytes @ 0x2E
   791  00002F                     	ds	1
   792  000030                     dtoa@p:
   793                           	callstack 0
   794  000030                     otoa@t:
   795                           	callstack 0
   796  000030                     utoa@w:
   797                           	callstack 0
   798  000030                     roundf@y:
   799                           	callstack 0
   800                           
   801                           ; 4 bytes @ 0x2F
   802  000030                     	ds	1
   803  000031                     _xtoa$1218:
   804                           	callstack 0
   805                           
   806                           ; 2 bytes @ 0x30
   807  000031                     	ds	1
   808  000032                     dtoa@w:
   809                           	callstack 0
   810  000032                     otoa@w:
   811                           	callstack 0
   812  000032                     utoa@n:
   813                           	callstack 0
   814                           
   815                           ; 8 bytes @ 0x31
   816  000032                     	ds	1
   817  000033                     xtoa@p:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x32
   821  000033                     	ds	1
   822  000034                     ?___fltol:
   823                           	callstack 0
   824  000034                     dtoa@s:
   825                           	callstack 0
   826  000034                     ___fltol@f1:
   827                           	callstack 0
   828  000034                     otoa@n:
   829                           	callstack 0
   830                           
   831                           ; 8 bytes @ 0x33
   832  000034                     	ds	1
   833  000035                     xtoa@w:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x34
   837  000035                     	ds	1
   838  000036                     dtoa@n:
   839                           	callstack 0
   840                           
   841                           ; 8 bytes @ 0x35
   842  000036                     	ds	1
   843  000037                     xtoa@n:
   844                           	callstack 0
   845                           
   846                           ; 8 bytes @ 0x36
   847  000037                     	ds	1
   848  000038                     ??___fltol:
   849                           
   850                           ; 1 bytes @ 0x37
   851  000038                     	ds	2
   852  00003A                     utoa@i:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x39
   856  00003A                     	ds	2
   857  00003C                     ___fltol@sign1:
   858                           	callstack 0
   859  00003C                     otoa@i:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0x3B
   863  00003C                     	ds	1
   864  00003D                     ___fltol@exp1:
   865                           	callstack 0
   866                           
   867                           ; 1 bytes @ 0x3C
   868  00003D                     	ds	1
   869  00003E                     dtoa@i:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0x3D
   873  00003E                     	ds	1
   874  00003F                     xtoa@i:
   875                           	callstack 0
   876                           
   877                           ; 2 bytes @ 0x3E
   878  00003F                     	ds	2
   879  000041                     xtoa@c:
   880                           	callstack 0
   881                           
   882                           ; 2 bytes @ 0x40
   883  000041                     	ds	2
   884  000043                     ?_vfpfcnvrt:
   885                           	callstack 0
   886  000043                     vfpfcnvrt@fp:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x42
   890  000043                     	ds	2
   891  000045                     vfpfcnvrt@fmt:
   892                           	callstack 0
   893                           
   894                           ; 2 bytes @ 0x44
   895  000045                     	ds	2
   896  000047                     vfpfcnvrt@ap:
   897                           	callstack 0
   898                           
   899                           ; 2 bytes @ 0x46
   900  000047                     	ds	2
   901  000049                     ??_vfpfcnvrt:
   902                           
   903                           ; 1 bytes @ 0x48
   904  000049                     	ds	4
   905  00004D                     vfpfcnvrt@cp:
   906                           	callstack 0
   907                           
   908                           ; 2 bytes @ 0x4C
   909  00004D                     	ds	2
   910  00004F                     vfpfcnvrt@done:
   911                           	callstack 0
   912                           
   913                           ; 2 bytes @ 0x4E
   914  00004F                     	ds	2
   915  000051                     _vfpfcnvrt$1232:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0x50
   919  000051                     	ds	2
   920  000053                     _vfpfcnvrt$1233:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x52
   924  000053                     	ds	2
   925  000055                     vfpfcnvrt@ll:
   926                           	callstack 0
   927                           
   928                           ; 8 bytes @ 0x54
   929  000055                     	ds	8
   930  00005D                     vfpfcnvrt@vp:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x5C
   934  00005D                     	ds	2
   935  00005F                     vfpfcnvrt@c:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x5E
   939  00005F                     	ds	1
   940  000060                     vfpfcnvrt@llu:
   941                           	callstack 0
   942                           
   943                           ; 8 bytes @ 0x5F
   944  000060                     	ds	8
   945  000068                     ?_vfprintf:
   946                           	callstack 0
   947  000068                     vfprintf@fp:
   948                           	callstack 0
   949                           
   950                           ; 2 bytes @ 0x67
   951  000068                     	ds	2
   952  00006A                     vfprintf@fmt:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x69
   956  00006A                     	ds	2
   957  00006C                     vfprintf@ap:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0x6B
   961  00006C                     	ds	2
   962  00006E                     vfprintf@cfmt:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x6D
   966  00006E                     	ds	2
   967  000070                     ?_vsnprintf:
   968                           	callstack 0
   969  000070                     vsnprintf@s:
   970                           	callstack 0
   971                           
   972                           ; 2 bytes @ 0x6F
   973  000070                     	ds	2
   974  000072                     vsnprintf@n:
   975                           	callstack 0
   976                           
   977                           ; 2 bytes @ 0x71
   978  000072                     	ds	2
   979  000074                     vsnprintf@fmt:
   980                           	callstack 0
   981                           
   982                           ; 2 bytes @ 0x73
   983  000074                     	ds	2
   984  000076                     vsnprintf@ap:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0x75
   988  000076                     	ds	2
   989  000078                     ??_vsnprintf:
   990                           
   991                           ; 1 bytes @ 0x77
   992  000078                     	ds	4
   993  00007C                     ??_main:
   994                           
   995                           ; 1 bytes @ 0x7B
   996  00007C                     	ds	1
   997                           
   998 ;;
   999 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1000 ;;
  1001 ;; *************** function _main *****************
  1002 ;; Defined at:
  1003 ;;		line 26 in file "main.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;		None
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;  greet_str     160    0[BANK1 ] PTR const unsigned char 
  1008 ;;		 -> ?_snprintf(2), 
  1009 ;;  rx_char         1  160[BANK1 ] unsigned char 
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      void 
  1012 ;; Registers used:
  1013 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1019 ;;      Params:         0       0       0       0       0       0       0
  1020 ;;      Locals:         0       0     161       0       0       0       0
  1021 ;;      Temps:          1       0       0       0       0       0       0
  1022 ;;      Totals:         1       0     161       0       0       0       0
  1023 ;;Total ram usage:      162 bytes
  1024 ;; Hardware stack levels required when called:   10
  1025 ;; This function calls:
  1026 ;;		_init_PORTS
  1027 ;;		_init_USART
  1028 ;;		_init_interrupts
  1029 ;;		_lcd_cmd
  1030 ;;		_lcd_init
  1031 ;;		_lcd_str
  1032 ;;		_serial_tx_char
  1033 ;;		_serial_tx_string
  1034 ;;		_snprintf
  1035 ;; This function is called by:
  1036 ;;		Startup code after reset
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           	psect	text0
  1041  000208                     __ptext0:
  1042                           	callstack 0
  1043  000208                     _main:
  1044                           	callstack 21
  1045  000208  FFFF               	dw	65535	; assembler added errata NOP
  1046                           
  1047                           ;main.c: 28:     init_PORTS();
  1048  00020A  EC3C  F03E         	call	_init_PORTS	;wreg free
  1049  00020E                     
  1050                           ;main.c: 29:     init_USART();
  1051  00020E  ECAF  F03E         	call	_init_USART	;wreg free
  1052  000212                     
  1053                           ;main.c: 30:     init_interrupts();
  1054  000212  EC30  F03E         	call	_init_interrupts	;wreg free
  1055  000216                     
  1056                           ;main.c: 31:     lcd_init();
  1057  000216  EC62  F001         	call	_lcd_init	;wreg free
  1058  00021A                     
  1059                           ;main.c: 32:     lcd_cmd(0x0C);
  1060  00021A  0E0C               	movlw	12
  1061  00021C  EC75  F03E         	call	_lcd_cmd
  1062  000220                     
  1063                           ;main.c: 34:     (INTCONbits.GIE = 1);
  1064  000220  8EF2               	bsf	242,7,c	;volatile
  1065  000222                     l4209:
  1066  000222  FFFF               	dw	65535	; assembler added errata NOP
  1067                           
  1068                           ;main.c: 38:         if (new_char_rx){
  1069  000224  0101               	movlb	1	; () banked
  1070  000226  51A1               	movf	_new_char_rx& (0+255),w,b
  1071  000228  B4D8               	btfsc	status,2,c
  1072  00022A  EF19  F001         	goto	u5041
  1073  00022E  EF1C  F001         	goto	u5040
  1074  000232                     u5041:
  1075  000232  FFFF               	dw	65535	; assembler added errata NOP
  1076  000234  EF11  F001         	goto	l4209
  1077  000238                     u5040:
  1078  000238  FFFF               	dw	65535	; assembler added errata NOP
  1079  00023A                     
  1080                           ; BSR set to: 1
  1081                           ;main.c: 39:             rx_char = RCREG;
  1082  00023A  CFAE F1A0          	movff	4014,main@rx_char	;volatile
  1083  00023E                     
  1084                           ; BSR set to: 1
  1085                           ;main.c: 40:             RCREG = 0;
  1086  00023E  0E00               	movlw	0
  1087  000240  6EAE               	movwf	174,c	;volatile
  1088  000242                     
  1089                           ; BSR set to: 1
  1090                           ;main.c: 41:             const char* greet_str[80];;main.c: 42:             snprintf(gre
      +                          et_str, sizeof(greet_str), "The variable is %c", rx_char);
  1091  000242  0E00               	movlw	low main@greet_str
  1092  000244  0100               	movlb	0	; () banked
  1093  000246  6FB6               	movwf	snprintf@s& (0+255),b
  1094  000248  0E01               	movlw	high main@greet_str
  1095  00024A  6FB7               	movwf	(snprintf@s+1)& (0+255),b
  1096  00024C  0E00               	movlw	0
  1097  00024E  6FB9               	movwf	(snprintf@n+1)& (0+255),b
  1098  000250  0EA0               	movlw	160
  1099  000252  6FB8               	movwf	snprintf@n& (0+255),b
  1100  000254  0E0D               	movlw	low STR_1
  1101  000256  6FBA               	movwf	snprintf@fmt& (0+255),b
  1102  000258  0E06               	movlw	high STR_1
  1103  00025A  6FBB               	movwf	(snprintf@fmt+1)& (0+255),b
  1104  00025C  C1A0  F0BC         	movff	main@rx_char,?_snprintf+6
  1105  000260  6BBD               	clrf	(?_snprintf+7)& (0+255),b
  1106  000262  EC5B  F03E         	call	_snprintf	;wreg free
  1107  000266                     
  1108                           ;main.c: 43:             serial_tx_string(greet_str);
  1109  000266  0E00               	movlw	low main@greet_str
  1110  000268  6E02               	movwf	serial_tx_string@val^0,c
  1111  00026A  0E01               	movlw	high main@greet_str
  1112  00026C  6E03               	movwf	(serial_tx_string@val+1)^0,c
  1113  00026E  ECC2  F002         	call	_serial_tx_string	;wreg free
  1114  000272                     
  1115                           ;main.c: 44:             serial_tx_char(rx_char);
  1116  000272  0101               	movlb	1	; () banked
  1117  000274  51A0               	movf	main@rx_char& (0+255),w,b
  1118  000276  EC4B  F03E         	call	_serial_tx_char
  1119  00027A                     
  1120                           ;main.c: 46:             LATBbits.LATB0 =! LATBbits.LATB0;
  1121  00027A  A08A               	btfss	138,0,c	;volatile
  1122  00027C  EF42  F001         	goto	u5051
  1123  000280  EF47  F001         	goto	u5050
  1124  000284                     u5051:
  1125  000284  FFFF               	dw	65535	; assembler added errata NOP
  1126  000286  6A7C               	clrf	??_main^0,c
  1127  000288  2A7C               	incf	??_main^0,f,c
  1128  00028A  EF49  F001         	goto	u5068
  1129  00028E                     u5050:
  1130  00028E  FFFF               	dw	65535	; assembler added errata NOP
  1131  000290  6A7C               	clrf	??_main^0,c
  1132  000292                     u5068:
  1133  000292  FFFF               	dw	65535	; assembler added errata NOP
  1134  000294  508A               	movf	138,w,c	;volatile
  1135  000296  187C               	xorwf	??_main^0,w,c
  1136  000298  0BFE               	andlw	-2
  1137  00029A  187C               	xorwf	??_main^0,w,c
  1138  00029C  6E8A               	movwf	138,c	;volatile
  1139  00029E                     
  1140                           ;main.c: 47:             new_char_rx = 0;
  1141  00029E  0E00               	movlw	0
  1142  0002A0  0101               	movlb	1	; () banked
  1143  0002A2  6FA1               	movwf	_new_char_rx& (0+255),b
  1144  0002A4                     
  1145                           ; BSR set to: 1
  1146                           ;main.c: 48:             lcd_cmd(0x01);
  1147  0002A4  0E01               	movlw	1
  1148  0002A6  EC75  F03E         	call	_lcd_cmd
  1149  0002AA                     
  1150                           ;main.c: 49:             lcd_cmd(0x80);
  1151  0002AA  0E80               	movlw	128
  1152  0002AC  EC75  F03E         	call	_lcd_cmd
  1153  0002B0                     
  1154                           ;main.c: 50:             lcd_str(greet_str);
  1155  0002B0  0E00               	movlw	low main@greet_str
  1156  0002B2  6E04               	movwf	lcd_str@str^0,c
  1157  0002B4  0E01               	movlw	high main@greet_str
  1158  0002B6  6E05               	movwf	(lcd_str@str+1)^0,c
  1159  0002B8  EC95  F03F         	call	_lcd_str	;wreg free
  1160  0002BC  EF11  F001         	goto	l4209
  1161  0002C0  EF20  F000         	goto	start
  1162  0002C4                     __end_of_main:
  1163                           	callstack 0
  1164                           
  1165 ;; *************** function _snprintf *****************
  1166 ;; Defined at:
  1167 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\snprintf.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;  s               2   10[BANK0 ] PTR unsigned char 
  1170 ;;		 -> main@greet_str(160), 
  1171 ;;  n               2   12[BANK0 ] unsigned int 
  1172 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  1173 ;;		 -> STR_1(19), 
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;  ap              2   20[BANK0 ] PTR void [1]
  1176 ;;		 -> ?_snprintf(2), 
  1177 ;;  ret             2    0        int 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  2   10[BANK0 ] int 
  1180 ;; Registers used:
  1181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1187 ;;      Params:         0       8       0       0       0       0       0
  1188 ;;      Locals:         0       4       0       0       0       0       0
  1189 ;;      Temps:          0       0       0       0       0       0       0
  1190 ;;      Totals:         0      12       0       0       0       0       0
  1191 ;;Total ram usage:       12 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; Hardware stack levels required when called:    9
  1194 ;; This function calls:
  1195 ;;		_vsnprintf
  1196 ;; This function is called by:
  1197 ;;		_main
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           	psect	text1
  1202  007CB6                     __ptext1:
  1203                           	callstack 0
  1204  007CB6                     _snprintf:
  1205                           	callstack 0
  1206  007CB6  FFFF               	dw	65535	; assembler added errata NOP
  1207  007CB8  0EBC               	movlw	low (?_snprintf+6)
  1208  007CBA  0100               	movlb	0	; () banked
  1209  007CBC  6FC0               	movwf	snprintf@ap& (0+255),b
  1210  007CBE  0E00               	movlw	high (?_snprintf+6)
  1211  007CC0  6FC1               	movwf	(snprintf@ap+1)& (0+255),b
  1212  007CC2                     
  1213                           ; BSR set to: 0
  1214  007CC2  C0B6  F070         	movff	snprintf@s,vsnprintf@s
  1215  007CC6  C0B7  F071         	movff	snprintf@s+1,vsnprintf@s+1
  1216  007CCA  C0B8  F072         	movff	snprintf@n,vsnprintf@n
  1217  007CCE  C0B9  F073         	movff	snprintf@n+1,vsnprintf@n+1
  1218  007CD2  C0BA  F074         	movff	snprintf@fmt,vsnprintf@fmt
  1219  007CD6  C0BB  F075         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  1220  007CDA  0EC0               	movlw	low snprintf@ap
  1221  007CDC  6E76               	movwf	vsnprintf@ap^0,c
  1222  007CDE  0E00               	movlw	high snprintf@ap
  1223  007CE0  6E77               	movwf	(vsnprintf@ap+1)^0,c
  1224  007CE2  ECB1  F01C         	call	_vsnprintf	;wreg free
  1225  007CE6  0012               	return		;funcret
  1226  007CE8  FFFF               	dw	65535	; errata NOP
  1227  007CEA                     __end_of_snprintf:
  1228                           	callstack 0
  1229                           
  1230 ;; *************** function _vsnprintf *****************
  1231 ;; Defined at:
  1232 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_vsnprintf.c"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;  s               2  111[COMRAM] PTR unsigned char 
  1235 ;;		 -> main@greet_str(160), 
  1236 ;;  n               2  113[COMRAM] unsigned int 
  1237 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  1238 ;;		 -> STR_1(19), 
  1239 ;;  ap              2  117[COMRAM] PTR PTR void 
  1240 ;;		 -> snprintf@ap(2), 
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;  f               6    4[BANK0 ] struct _IO_FILE
  1243 ;;  cnt             2    2[BANK0 ] int 
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  2  111[COMRAM] int 
  1246 ;; Registers used:
  1247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1253 ;;      Params:         8       0       0       0       0       0       0
  1254 ;;      Locals:         0      10       0       0       0       0       0
  1255 ;;      Temps:          4       0       0       0       0       0       0
  1256 ;;      Totals:        12      10       0       0       0       0       0
  1257 ;;Total ram usage:       22 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; Hardware stack levels required when called:    8
  1260 ;; This function calls:
  1261 ;;		_vfprintf
  1262 ;; This function is called by:
  1263 ;;		_snprintf
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           	psect	text2
  1268  003962                     __ptext2:
  1269                           	callstack 0
  1270  003962                     _vsnprintf:
  1271                           	callstack 0
  1272  003962  FFFF               	dw	65535	; assembler added errata NOP
  1273  003964  0E80               	movlw	128
  1274  003966  5C73               	subwf	(vsnprintf@n+1)^0,w,c
  1275  003968  A0D8               	btfss	status,0,c
  1276  00396A  EFB9  F01C         	goto	u4971
  1277  00396E  EFBC  F01C         	goto	u4970
  1278  003972                     u4971:
  1279  003972  FFFF               	dw	65535	; assembler added errata NOP
  1280  003974  EFC6  F01C         	goto	l4097
  1281  003978                     u4970:
  1282  003978  FFFF               	dw	65535	; assembler added errata NOP
  1283  00397A  0E00               	movlw	0
  1284  00397C  0100               	movlb	0	; () banked
  1285  00397E  6F8B               	movwf	(_errno+1)& (0+255),b
  1286  003980  0E4B               	movlw	75
  1287  003982  6F8A               	movwf	_errno& (0+255),b
  1288  003984                     
  1289                           ; BSR set to: 0
  1290  003984  6870               	setf	?_vsnprintf^0,c
  1291  003986  6871               	setf	(?_vsnprintf+1)^0,c
  1292  003988  EF4B  F01D         	goto	l828
  1293  00398C                     l4097:
  1294  00398C  FFFF               	dw	65535	; assembler added errata NOP
  1295  00398E  C070  F0B0         	movff	vsnprintf@s,vsnprintf@f
  1296  003992  C071  F0B1         	movff	vsnprintf@s+1,vsnprintf@f+1
  1297  003996  5073               	movf	(vsnprintf@n+1)^0,w,c
  1298  003998  E10A               	bnz	u4980
  1299  00399A  0E02               	movlw	2
  1300  00399C  5C72               	subwf	vsnprintf@n^0,w,c
  1301  00399E  A0D8               	btfss	status,0,c
  1302  0039A0  EFD4  F01C         	goto	u4981
  1303  0039A4  EFD7  F01C         	goto	u4980
  1304  0039A8                     u4981:
  1305  0039A8  FFFF               	dw	65535	; assembler added errata NOP
  1306  0039AA  EFE5  F01C         	goto	l4103
  1307  0039AE                     u4980:
  1308  0039AE  FFFF               	dw	65535	; assembler added errata NOP
  1309  0039B0  0EFF               	movlw	255
  1310  0039B2  2472               	addwf	vsnprintf@n^0,w,c
  1311  0039B4  0100               	movlb	0	; () banked
  1312  0039B6  6FB4               	movwf	(vsnprintf@f+4)& (0+255),b
  1313  0039B8  0EFF               	movlw	255
  1314  0039BA  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  1315  0039BC  6FB5               	movwf	(vsnprintf@f+5)& (0+255),b
  1316  0039BE                     
  1317                           ; BSR set to: 0
  1318  0039BE  0E00               	movlw	0
  1319  0039C0  6FB3               	movwf	(vsnprintf@f+3)& (0+255),b
  1320  0039C2  0E00               	movlw	0
  1321  0039C4  6FB2               	movwf	(vsnprintf@f+2)& (0+255),b
  1322  0039C6  EFEF  F01C         	goto	l4105
  1323  0039CA                     l4103:
  1324  0039CA  FFFF               	dw	65535	; assembler added errata NOP
  1325  0039CC  0E00               	movlw	0
  1326  0039CE  0100               	movlb	0	; () banked
  1327  0039D0  6FB5               	movwf	(vsnprintf@f+5)& (0+255),b
  1328  0039D2  0E01               	movlw	1
  1329  0039D4  6FB4               	movwf	(vsnprintf@f+4)& (0+255),b
  1330  0039D6  0E00               	movlw	0
  1331  0039D8  6FB3               	movwf	(vsnprintf@f+3)& (0+255),b
  1332  0039DA  0E01               	movlw	1
  1333  0039DC  6FB2               	movwf	(vsnprintf@f+2)& (0+255),b
  1334  0039DE                     l4105:
  1335  0039DE  FFFF               	dw	65535	; assembler added errata NOP
  1336                           
  1337                           ; BSR set to: 0
  1338  0039E0  0EB0               	movlw	low vsnprintf@f
  1339  0039E2  6E68               	movwf	vfprintf@fp^0,c
  1340  0039E4  0E00               	movlw	high vsnprintf@f
  1341  0039E6  6E69               	movwf	(vfprintf@fp+1)^0,c
  1342  0039E8  C074  F06A         	movff	vsnprintf@fmt,vfprintf@fmt
  1343  0039EC  C075  F06B         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  1344  0039F0  C076  F06C         	movff	vsnprintf@ap,vfprintf@ap
  1345  0039F4  C077  F06D         	movff	vsnprintf@ap+1,vfprintf@ap+1
  1346  0039F8  ECA1  F001         	call	_vfprintf	;wreg free
  1347  0039FC  C068  F0AE         	movff	?_vfprintf,vsnprintf@cnt
  1348  003A00  C069  F0AF         	movff	?_vfprintf+1,vsnprintf@cnt+1
  1349  003A04  5072               	movf	vsnprintf@n^0,w,c
  1350  003A06  1073               	iorwf	(vsnprintf@n+1)^0,w,c
  1351  003A08  B4D8               	btfsc	status,2,c
  1352  003A0A  EF09  F01D         	goto	u4991
  1353  003A0E  EF0C  F01D         	goto	u4990
  1354  003A12                     u4991:
  1355  003A12  FFFF               	dw	65535	; assembler added errata NOP
  1356  003A14  EF46  F01D         	goto	l4117
  1357  003A18                     u4990:
  1358  003A18  FFFF               	dw	65535	; assembler added errata NOP
  1359  003A1A  0100               	movlb	0	; () banked
  1360  003A1C  BFAF               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  1361  003A1E  EF13  F01D         	goto	u5001
  1362  003A22  EF16  F01D         	goto	u5000
  1363  003A26                     u5001:
  1364  003A26  FFFF               	dw	65535	; assembler added errata NOP
  1365  003A28  EF46  F01D         	goto	l4117
  1366  003A2C                     u5000:
  1367  003A2C  FFFF               	dw	65535	; assembler added errata NOP
  1368  003A2E                     
  1369                           ; BSR set to: 0
  1370  003A2E  0EFF               	movlw	255
  1371  003A30  6E78               	movwf	??_vsnprintf^0,c
  1372  003A32  0EFF               	movlw	255
  1373  003A34  6E79               	movwf	(??_vsnprintf+1)^0,c
  1374  003A36  C072  F07A         	movff	vsnprintf@n,??_vsnprintf+2
  1375  003A3A  C073  F07B         	movff	vsnprintf@n+1,??_vsnprintf+3
  1376  003A3E  5078               	movf	??_vsnprintf^0,w,c
  1377  003A40  267A               	addwf	(??_vsnprintf+2)^0,f,c
  1378  003A42  5079               	movf	(??_vsnprintf+1)^0,w,c
  1379  003A44  227B               	addwfc	(??_vsnprintf+3)^0,f,c
  1380  003A46  507A               	movf	(??_vsnprintf+2)^0,w,c
  1381  003A48  5DAE               	subwf	vsnprintf@cnt& (0+255),w,b
  1382  003A4A  507B               	movf	(??_vsnprintf+3)^0,w,c
  1383  003A4C  59AF               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  1384  003A4E  A0D8               	btfss	status,0,c
  1385  003A50  EF2C  F01D         	goto	u5011
  1386  003A54  EF2F  F01D         	goto	u5010
  1387  003A58                     u5011:
  1388  003A58  FFFF               	dw	65535	; assembler added errata NOP
  1389  003A5A  EF38  F01D         	goto	l833
  1390  003A5E                     u5010:
  1391  003A5E  FFFF               	dw	65535	; assembler added errata NOP
  1392  003A60                     
  1393                           ; BSR set to: 0
  1394  003A60  0EFF               	movlw	255
  1395  003A62  2472               	addwf	vsnprintf@n^0,w,c
  1396  003A64  6FAC               	movwf	_vsnprintf$1095& (0+255),b
  1397  003A66  0EFF               	movlw	255
  1398  003A68  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  1399  003A6A  6FAD               	movwf	(_vsnprintf$1095+1)& (0+255),b
  1400  003A6C  EF3D  F01D         	goto	l4115
  1401  003A70                     l833:
  1402  003A70  FFFF               	dw	65535	; assembler added errata NOP
  1403                           
  1404                           ; BSR set to: 0
  1405  003A72  C0AE  F0AC         	movff	vsnprintf@cnt,_vsnprintf$1095
  1406  003A76  C0AF  F0AD         	movff	vsnprintf@cnt+1,_vsnprintf$1095+1
  1407  003A7A                     l4115:
  1408  003A7A  FFFF               	dw	65535	; assembler added errata NOP
  1409                           
  1410                           ; BSR set to: 0
  1411  003A7C  51AC               	movf	_vsnprintf$1095& (0+255),w,b
  1412  003A7E  2470               	addwf	vsnprintf@s^0,w,c
  1413  003A80  6ED9               	movwf	fsr2l,c
  1414  003A82  51AD               	movf	(_vsnprintf$1095+1)& (0+255),w,b
  1415  003A84  2071               	addwfc	(vsnprintf@s+1)^0,w,c
  1416  003A86  6EDA               	movwf	fsr2h,c
  1417  003A88  0E00               	movlw	0
  1418  003A8A  6EDF               	movwf	indf2,c
  1419  003A8C                     l4117:
  1420  003A8C  FFFF               	dw	65535	; assembler added errata NOP
  1421  003A8E  C0AE  F070         	movff	vsnprintf@cnt,?_vsnprintf
  1422  003A92  C0AF  F071         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  1423  003A96                     l828:
  1424  003A96  FFFF               	dw	65535	; assembler added errata NOP
  1425  003A98  0012               	return		;funcret
  1426  003A9A  FFFF               	dw	65535	; errata NOP
  1427  003A9C                     __end_of_vsnprintf:
  1428                           	callstack 0
  1429                           
  1430 ;; *************** function _vfprintf *****************
  1431 ;; Defined at:
  1432 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;  fp              2  103[COMRAM] PTR struct _IO_FILE
  1435 ;;		 -> vsnprintf@f(6), 
  1436 ;;  fmt             2  105[COMRAM] PTR const unsigned char 
  1437 ;;		 -> STR_1(19), 
  1438 ;;  ap              2  107[COMRAM] PTR PTR void 
  1439 ;;		 -> snprintf@ap(2), 
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;  cfmt            2  109[COMRAM] PTR unsigned char 
  1442 ;;		 -> STR_1(19), 
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  2  103[COMRAM] int 
  1445 ;; Registers used:
  1446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1452 ;;      Params:         6       0       0       0       0       0       0
  1453 ;;      Locals:         2       0       0       0       0       0       0
  1454 ;;      Temps:          0       0       0       0       0       0       0
  1455 ;;      Totals:         8       0       0       0       0       0       0
  1456 ;;Total ram usage:        8 bytes
  1457 ;; Hardware stack levels used:    1
  1458 ;; Hardware stack levels required when called:    7
  1459 ;; This function calls:
  1460 ;;		_vfpfcnvrt
  1461 ;; This function is called by:
  1462 ;;		_vsnprintf
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           	psect	text3
  1467  000342                     __ptext3:
  1468                           	callstack 0
  1469  000342                     _vfprintf:
  1470                           	callstack 0
  1471  000342  FFFF               	dw	65535	; assembler added errata NOP
  1472  000344                     
  1473                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1474  000344  C06A  F06E         	movff	vfprintf@fmt,vfprintf@cfmt
  1475  000348  C06B  F06F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1476  00034C                     
  1477                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  1478  00034C  0E00               	movlw	0
  1479  00034E  0100               	movlb	0	; () banked
  1480  000350  6F85               	movwf	(_nout+1)& (0+255),b
  1481  000352  0E00               	movlw	0
  1482  000354  6F84               	movwf	_nout& (0+255),b
  1483                           
  1484                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1485  000356  EFC1  F001         	goto	l3979
  1486  00035A                     l3977:
  1487  00035A  FFFF               	dw	65535	; assembler added errata NOP
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1491  00035C  C068  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1492  000360  C069  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1493  000364  0E6E               	movlw	low vfprintf@cfmt
  1494  000366  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1495  000368  0E00               	movlw	high vfprintf@cfmt
  1496  00036A  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1497  00036C  C06C  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1498  000370  C06D  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1499  000374  EC29  F003         	call	_vfpfcnvrt	;wreg free
  1500  000378  5043               	movf	?_vfpfcnvrt^0,w,c
  1501  00037A  0100               	movlb	0	; () banked
  1502  00037C  2784               	addwf	_nout& (0+255),f,b
  1503  00037E  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  1504  000380  2385               	addwfc	(_nout+1)& (0+255),f,b
  1505  000382                     l3979:
  1506  000382  FFFF               	dw	65535	; assembler added errata NOP
  1507                           
  1508                           ; BSR set to: 0
  1509                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1510  000384  C06E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1511  000388  C06F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1512  00038C                     	if	0	;tblptru may be non-zero
  1513  00038C                     	endif
  1514  00038C                     	if	0	;tblptru may be non-zero
  1515  00038C                     	endif
  1516  00038C  0008               	tblrd		*
  1517  00038E  FFFF               	dw	65535	; errata NOP
  1518  000390  50F5               	movf	tablat,w,c
  1519  000392  0900               	iorlw	0
  1520  000394  A4D8               	btfss	status,2,c
  1521  000396  EFCF  F001         	goto	u4791
  1522  00039A  EFD2  F001         	goto	u4790
  1523  00039E                     u4791:
  1524  00039E  FFFF               	dw	65535	; assembler added errata NOP
  1525  0003A0  EFAD  F001         	goto	l3977
  1526  0003A4                     u4790:
  1527  0003A4  FFFF               	dw	65535	; assembler added errata NOP
  1528  0003A6                     
  1529                           ; BSR set to: 0
  1530                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  1531  0003A6  C084  F068         	movff	_nout,?_vfprintf
  1532  0003AA  C085  F069         	movff	_nout+1,?_vfprintf+1
  1533  0003AE                     
  1534                           ; BSR set to: 0
  1535  0003AE  0012               	return		;funcret
  1536  0003B0  FFFF               	dw	65535	; errata NOP
  1537  0003B2                     __end_of_vfprintf:
  1538                           	callstack 0
  1539                           
  1540 ;; *************** function _vfpfcnvrt *****************
  1541 ;; Defined at:
  1542 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1545 ;;		 -> vsnprintf@f(6), 
  1546 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1547 ;;		 -> vfprintf@cfmt(2), 
  1548 ;;  ap              2   70[COMRAM] PTR PTR void 
  1549 ;;		 -> snprintf@ap(2), 
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;  llu             8   95[COMRAM] unsigned long long 
  1552 ;;  ll              8   84[COMRAM] long long 
  1553 ;;  f               4    0        long long 
  1554 ;;  ct              3    0        unsigned char [3]
  1555 ;;  vp              2   92[COMRAM] PTR void 
  1556 ;;		 -> ?_snprintf(2), 
  1557 ;;  done            2   78[COMRAM] int 
  1558 ;;  cp              2   76[COMRAM] PTR unsigned char 
  1559 ;;		 -> ?_snprintf(2), 
  1560 ;;  i               2    0        int 
  1561 ;;  c               1   94[COMRAM] unsigned char 
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  2   66[COMRAM] int 
  1564 ;; Registers used:
  1565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1571 ;;      Params:         6       0       0       0       0       0       0
  1572 ;;      Locals:        27       0       0       0       0       0       0
  1573 ;;      Temps:          4       0       0       0       0       0       0
  1574 ;;      Totals:        37       0       0       0       0       0       0
  1575 ;;Total ram usage:       37 bytes
  1576 ;; Hardware stack levels used:    1
  1577 ;; Hardware stack levels required when called:    6
  1578 ;; This function calls:
  1579 ;;		_atoi
  1580 ;;		_ctoa
  1581 ;;		_dtoa
  1582 ;;		_fputc
  1583 ;;		_isdigit
  1584 ;;		_otoa
  1585 ;;		_stoa
  1586 ;;		_strncmp
  1587 ;;		_utoa
  1588 ;;		_xtoa
  1589 ;; This function is called by:
  1590 ;;		_vfprintf
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text4
  1595  000652                     __ptext4:
  1596                           	callstack 0
  1597  000652                     _vfpfcnvrt:
  1598                           	callstack 0
  1599  000652  FFFF               	dw	65535	; assembler added errata NOP
  1600  000654                     
  1601                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  1602  000654  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1603  000658  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1604  00065C  CFDE FFF6          	movff	postinc2,tblptrl
  1605  000660  CFDD FFF7          	movff	postdec2,tblptrh
  1606  000664                     	if	0	;tblptru may be non-zero
  1607  000664                     	endif
  1608  000664                     	if	0	;tblptru may be non-zero
  1609  000664                     	endif
  1610  000664  0008               	tblrd		*
  1611  000666  FFFF               	dw	65535	; errata NOP
  1612  000668  50F5               	movf	tablat,w,c
  1613  00066A  0A25               	xorlw	37
  1614  00066C  A4D8               	btfss	status,2,c
  1615  00066E  EF3B  F003         	goto	u4091
  1616  000672  EF3E  F003         	goto	u4090
  1617  000676                     u4091:
  1618  000676  FFFF               	dw	65535	; assembler added errata NOP
  1619  000678  EFBF  F00C         	goto	l3793
  1620  00067C                     u4090:
  1621  00067C  FFFF               	dw	65535	; assembler added errata NOP
  1622  00067E                     
  1623                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  1624  00067E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1625  000682  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1626  000686  2ADE               	incf	postinc2,f,c
  1627  000688  0E00               	movlw	0
  1628  00068A  22DD               	addwfc	postdec2,f,c
  1629  00068C                     
  1630                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  1631  00068C  0E00               	movlw	0
  1632  00068E  0100               	movlb	0	; () banked
  1633  000690  6F87               	movwf	(_width+1)& (0+255),b
  1634  000692  0E00               	movlw	0
  1635  000694  6F86               	movwf	_width& (0+255),b
  1636  000696  C086  F07D         	movff	_width,_flags
  1637  00069A  C087  F07E         	movff	_width+1,_flags+1
  1638  00069E                     
  1639                           ; BSR set to: 0
  1640                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  1641  00069E  6988               	setf	_prec& (0+255),b
  1642  0006A0  6989               	setf	(_prec+1)& (0+255),b
  1643  0006A2                     
  1644                           ; BSR set to: 0
  1645                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  1646  0006A2  0E00               	movlw	0
  1647  0006A4  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  1648  0006A6  0E00               	movlw	0
  1649  0006A8  6E4F               	movwf	vfpfcnvrt@done^0,c
  1650                           
  1651                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  1652  0006AA  EFA7  F003         	goto	l3511
  1653  0006AE                     l3485:
  1654  0006AE  FFFF               	dw	65535	; assembler added errata NOP
  1655                           
  1656                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  1657  0006B0  807D               	bsf	_flags^0,0,c
  1658  0006B2                     l3487:
  1659  0006B2  FFFF               	dw	65535	; assembler added errata NOP
  1660                           
  1661                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  1662  0006B4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1663  0006B8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1664  0006BC  2ADE               	incf	postinc2,f,c
  1665  0006BE  0E00               	movlw	0
  1666  0006C0  22DD               	addwfc	postdec2,f,c
  1667                           
  1668                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  1669  0006C2  EFA7  F003         	goto	l3511
  1670  0006C6                     l3489:
  1671  0006C6  FFFF               	dw	65535	; assembler added errata NOP
  1672                           
  1673                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  1674  0006C8  827D               	bsf	_flags^0,1,c
  1675  0006CA  EF59  F003         	goto	l3487
  1676  0006CE                     l3493:
  1677  0006CE  FFFF               	dw	65535	; assembler added errata NOP
  1678                           
  1679                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  1680  0006D0  847D               	bsf	_flags^0,2,c
  1681  0006D2  EF59  F003         	goto	l3487
  1682  0006D6                     l3497:
  1683  0006D6  FFFF               	dw	65535	; assembler added errata NOP
  1684                           
  1685                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  1686  0006D8  867D               	bsf	_flags^0,3,c
  1687  0006DA  EF59  F003         	goto	l3487
  1688  0006DE                     l3501:
  1689  0006DE  FFFF               	dw	65535	; assembler added errata NOP
  1690                           
  1691                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  1692  0006E0  887D               	bsf	_flags^0,4,c
  1693  0006E2  EF59  F003         	goto	l3487
  1694  0006E6                     l3505:
  1695  0006E6  FFFF               	dw	65535	; assembler added errata NOP
  1696                           
  1697                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  1698  0006E8  0E00               	movlw	0
  1699  0006EA  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  1700  0006EC  0E01               	movlw	1
  1701  0006EE  6E4F               	movwf	vfpfcnvrt@done^0,c
  1702                           
  1703                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  1704  0006F0  EFA7  F003         	goto	l3511
  1705  0006F4                     l3509:
  1706  0006F4  FFFF               	dw	65535	; assembler added errata NOP
  1707  0006F6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1708  0006FA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1709  0006FE  CFDE FFF6          	movff	postinc2,tblptrl
  1710  000702  CFDD FFF7          	movff	postdec2,tblptrh
  1711  000706                     	if	0	;tblptru may be non-zero
  1712  000706                     	endif
  1713  000706                     	if	0	;tblptru may be non-zero
  1714  000706                     	endif
  1715  000706  0008               	tblrd		*
  1716  000708  FFFF               	dw	65535	; errata NOP
  1717  00070A  50F5               	movf	tablat,w,c
  1718  00070C  6E49               	movwf	??_vfpfcnvrt^0,c
  1719  00070E  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  1720                           
  1721                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1722                           ; Switch size 1, requested type "simple"
  1723                           ; Number of cases is 1, Range of values is 0 to 0
  1724                           ; switch strategies available:
  1725                           ; Name         Instructions Cycles
  1726                           ; simple_byte            4     3 (average)
  1727                           ;	Chosen strategy is simple_byte
  1728  000710  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1729  000712  0A00               	xorlw	0	; case 0
  1730  000714  B4D8               	btfsc	status,2,c
  1731  000716  EF8F  F003         	goto	l4279
  1732  00071A  EF73  F003         	goto	l3505
  1733  00071E                     l4279:
  1734  00071E  FFFF               	dw	65535	; assembler added errata NOP
  1735                           
  1736                           ; Switch size 1, requested type "simple"
  1737                           ; Number of cases is 5, Range of values is 32 to 48
  1738                           ; switch strategies available:
  1739                           ; Name         Instructions Cycles
  1740                           ; simple_byte           16     9 (average)
  1741                           ;	Chosen strategy is simple_byte
  1742  000720  5049               	movf	??_vfpfcnvrt^0,w,c
  1743  000722  0A20               	xorlw	32	; case 32
  1744  000724  B4D8               	btfsc	status,2,c
  1745  000726  EF6B  F003         	goto	l3497
  1746  00072A  0A03               	xorlw	3	; case 35
  1747  00072C  B4D8               	btfsc	status,2,c
  1748  00072E  EF6F  F003         	goto	l3501
  1749  000732  0A08               	xorlw	8	; case 43
  1750  000734  B4D8               	btfsc	status,2,c
  1751  000736  EF67  F003         	goto	l3493
  1752  00073A  0A06               	xorlw	6	; case 45
  1753  00073C  B4D8               	btfsc	status,2,c
  1754  00073E  EF57  F003         	goto	l3485
  1755  000742  0A1D               	xorlw	29	; case 48
  1756  000744  B4D8               	btfsc	status,2,c
  1757  000746  EF63  F003         	goto	l3489
  1758  00074A  EF73  F003         	goto	l3505
  1759  00074E                     l3511:
  1760  00074E  FFFF               	dw	65535	; assembler added errata NOP
  1761                           
  1762                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  1763  000750  504F               	movf	vfpfcnvrt@done^0,w,c
  1764  000752  1050               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1765  000754  B4D8               	btfsc	status,2,c
  1766  000756  EFAF  F003         	goto	u4101
  1767  00075A  EFB2  F003         	goto	u4100
  1768  00075E                     u4101:
  1769  00075E  FFFF               	dw	65535	; assembler added errata NOP
  1770  000760  EF7A  F003         	goto	l3509
  1771  000764                     u4100:
  1772  000764  FFFF               	dw	65535	; assembler added errata NOP
  1773  000766                     
  1774                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  1775  000766  A07D               	btfss	_flags^0,0,c
  1776  000768  EFB8  F003         	goto	u4111
  1777  00076C  EFBB  F003         	goto	u4110
  1778  000770                     u4111:
  1779  000770  FFFF               	dw	65535	; assembler added errata NOP
  1780  000772  EFBD  F003         	goto	l3515
  1781  000776                     u4110:
  1782  000776  FFFF               	dw	65535	; assembler added errata NOP
  1783  000778                     
  1784                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  1785  000778  927D               	bcf	_flags^0,1,c
  1786  00077A                     l3515:
  1787  00077A  FFFF               	dw	65535	; assembler added errata NOP
  1788                           
  1789                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  1790  00077C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1791  000780  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1792  000784  CFDE FFF6          	movff	postinc2,tblptrl
  1793  000788  CFDD FFF7          	movff	postdec2,tblptrh
  1794  00078C                     	if	0	;tblptru may be non-zero
  1795  00078C                     	endif
  1796  00078C                     	if	0	;tblptru may be non-zero
  1797  00078C                     	endif
  1798  00078C  0008               	tblrd		*
  1799  00078E  FFFF               	dw	65535	; errata NOP
  1800  000790  50F5               	movf	tablat,w,c
  1801  000792  0A2A               	xorlw	42
  1802  000794  A4D8               	btfss	status,2,c
  1803  000796  EFCF  F003         	goto	u4121
  1804  00079A  EFD2  F003         	goto	u4120
  1805  00079E                     u4121:
  1806  00079E  FFFF               	dw	65535	; assembler added errata NOP
  1807  0007A0  EFFF  F003         	goto	l3523
  1808  0007A4                     u4120:
  1809  0007A4  FFFF               	dw	65535	; assembler added errata NOP
  1810  0007A6                     
  1811                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  1812  0007A6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1813  0007AA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1814  0007AE  2ADE               	incf	postinc2,f,c
  1815  0007B0  0E00               	movlw	0
  1816  0007B2  22DD               	addwfc	postdec2,f,c
  1817                           
  1818                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1819  0007B4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1820  0007B8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1821  0007BC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1822  0007C0  0E02               	movlw	2
  1823  0007C2  26DE               	addwf	postinc2,f,c
  1824  0007C4  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1825  0007C8  0E00               	movlw	0
  1826  0007CA  22DD               	addwfc	postdec2,f,c
  1827  0007CC  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1828  0007D0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1829  0007D4  CFDE F086          	movff	postinc2,_width
  1830  0007D8  CFDD F087          	movff	postdec2,_width+1
  1831  0007DC                     
  1832                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  1833  0007DC  0100               	movlb	0	; () banked
  1834  0007DE  BF87               	btfsc	(_width+1)& (0+255),7,b
  1835  0007E0  EFF7  F003         	goto	u4130
  1836  0007E4  EFF4  F003         	goto	u4131
  1837  0007E8                     u4131:
  1838  0007E8  FFFF               	dw	65535	; assembler added errata NOP
  1839  0007EA  EF4A  F004         	goto	l3533
  1840  0007EE                     u4130:
  1841  0007EE  FFFF               	dw	65535	; assembler added errata NOP
  1842  0007F0                     
  1843                           ; BSR set to: 0
  1844                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  1845  0007F0  807D               	bsf	_flags^0,0,c
  1846                           
  1847                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  1848  0007F2  6D86               	negf	_width& (0+255),b
  1849  0007F4  1F87               	comf	(_width+1)& (0+255),f,b
  1850  0007F6  B0D8               	btfsc	status,0,c
  1851  0007F8  2B87               	incf	(_width+1)& (0+255),f,b
  1852  0007FA  EF4A  F004         	goto	l3533
  1853  0007FE                     l3523:
  1854  0007FE  FFFF               	dw	65535	; assembler added errata NOP
  1855                           
  1856                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  1857  000800  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1858  000804  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1859  000808  CFDE F008          	movff	postinc2,atoi@s
  1860  00080C  CFDD F009          	movff	postdec2,atoi@s+1
  1861  000810  EC4C  F019         	call	_atoi	;wreg free
  1862  000814  C008  F086         	movff	?_atoi,_width
  1863  000818  C009  F087         	movff	?_atoi+1,_width+1
  1864                           
  1865                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1866  00081C  EF18  F004         	goto	l3527
  1867  000820                     l3525:
  1868  000820  FFFF               	dw	65535	; assembler added errata NOP
  1869                           
  1870                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  1871  000822  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1872  000826  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1873  00082A  2ADE               	incf	postinc2,f,c
  1874  00082C  0E00               	movlw	0
  1875  00082E  22DD               	addwfc	postdec2,f,c
  1876  000830                     l3527:
  1877  000830  FFFF               	dw	65535	; assembler added errata NOP
  1878  000832  0ED0               	movlw	208
  1879  000834  6E49               	movwf	??_vfpfcnvrt^0,c
  1880  000836  0EFF               	movlw	255
  1881  000838  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1882  00083A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1883  00083E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1884  000842  CFDE FFF6          	movff	postinc2,tblptrl
  1885  000846  CFDD FFF7          	movff	postdec2,tblptrh
  1886  00084A                     	if	0	;tblptru may be non-zero
  1887  00084A                     	endif
  1888  00084A                     	if	0	;tblptru may be non-zero
  1889  00084A                     	endif
  1890  00084A  0008               	tblrd		*
  1891  00084C  FFFF               	dw	65535	; errata NOP
  1892  00084E  50F5               	movf	tablat,w,c
  1893  000850  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  1894  000852  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  1895  000854  5049               	movf	??_vfpfcnvrt^0,w,c
  1896  000856  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1897  000858  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1898  00085A  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1899  00085C  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  1900  00085E  E10B               	bnz	u4140
  1901  000860  0E0A               	movlw	10
  1902  000862  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1903  000864  A0D8               	btfss	status,0,c
  1904  000866  EF37  F004         	goto	u4141
  1905  00086A  EF3B  F004         	goto	u4140
  1906  00086E                     u4141:
  1907  00086E  FFFF               	dw	65535	; assembler added errata NOP
  1908  000870  0E01               	movlw	1
  1909  000872  EF3D  F004         	goto	u4150
  1910  000876                     u4140:
  1911  000876  FFFF               	dw	65535	; assembler added errata NOP
  1912  000878  0E00               	movlw	0
  1913  00087A                     u4150:
  1914  00087A  FFFF               	dw	65535	; assembler added errata NOP
  1915  00087C  6E51               	movwf	_vfpfcnvrt$1232^0,c
  1916  00087E  6A52               	clrf	(_vfpfcnvrt$1232+1)^0,c
  1917  000880  5051               	movf	_vfpfcnvrt$1232^0,w,c
  1918  000882  1052               	iorwf	(_vfpfcnvrt$1232+1)^0,w,c
  1919  000884  A4D8               	btfss	status,2,c
  1920  000886  EF47  F004         	goto	u4161
  1921  00088A  EF4A  F004         	goto	u4160
  1922  00088E                     u4161:
  1923  00088E  FFFF               	dw	65535	; assembler added errata NOP
  1924  000890  EF10  F004         	goto	l3525
  1925  000894                     u4160:
  1926  000894                     l3533:
  1927  000894  FFFF               	dw	65535	; assembler added errata NOP
  1928                           
  1929                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  1930  000896  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1931  00089A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1932  00089E  CFDE FFF6          	movff	postinc2,tblptrl
  1933  0008A2  CFDD FFF7          	movff	postdec2,tblptrh
  1934  0008A6                     	if	0	;tblptru may be non-zero
  1935  0008A6                     	endif
  1936  0008A6                     	if	0	;tblptru may be non-zero
  1937  0008A6                     	endif
  1938  0008A6  0008               	tblrd		*
  1939  0008A8  FFFF               	dw	65535	; errata NOP
  1940  0008AA  50F5               	movf	tablat,w,c
  1941  0008AC  0A2E               	xorlw	46
  1942  0008AE  A4D8               	btfss	status,2,c
  1943  0008B0  EF5C  F004         	goto	u4171
  1944  0008B4  EF5F  F004         	goto	u4170
  1945  0008B8                     u4171:
  1946  0008B8  FFFF               	dw	65535	; assembler added errata NOP
  1947  0008BA  EFE9  F004         	goto	l3553
  1948  0008BE                     u4170:
  1949  0008BE  FFFF               	dw	65535	; assembler added errata NOP
  1950  0008C0                     
  1951                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  1952  0008C0  0E00               	movlw	0
  1953  0008C2  0100               	movlb	0	; () banked
  1954  0008C4  6F89               	movwf	(_prec+1)& (0+255),b
  1955  0008C6  0E00               	movlw	0
  1956  0008C8  6F88               	movwf	_prec& (0+255),b
  1957  0008CA                     
  1958                           ; BSR set to: 0
  1959                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  1960  0008CA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1961  0008CE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1962  0008D2  2ADE               	incf	postinc2,f,c
  1963  0008D4  0E00               	movlw	0
  1964  0008D6  22DD               	addwfc	postdec2,f,c
  1965  0008D8                     
  1966                           ; BSR set to: 0
  1967                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  1968  0008D8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1969  0008DC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1970  0008E0  CFDE FFF6          	movff	postinc2,tblptrl
  1971  0008E4  CFDD FFF7          	movff	postdec2,tblptrh
  1972  0008E8                     	if	0	;tblptru may be non-zero
  1973  0008E8                     	endif
  1974  0008E8                     	if	0	;tblptru may be non-zero
  1975  0008E8                     	endif
  1976  0008E8  0008               	tblrd		*
  1977  0008EA  FFFF               	dw	65535	; errata NOP
  1978  0008EC  50F5               	movf	tablat,w,c
  1979  0008EE  0A2A               	xorlw	42
  1980  0008F0  A4D8               	btfss	status,2,c
  1981  0008F2  EF7D  F004         	goto	u4181
  1982  0008F6  EF80  F004         	goto	u4180
  1983  0008FA                     u4181:
  1984  0008FA  FFFF               	dw	65535	; assembler added errata NOP
  1985  0008FC  EF9E  F004         	goto	l3543
  1986  000900                     u4180:
  1987  000900  FFFF               	dw	65535	; assembler added errata NOP
  1988  000902                     
  1989                           ; BSR set to: 0
  1990                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  1991  000902  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1992  000906  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1993  00090A  2ADE               	incf	postinc2,f,c
  1994  00090C  0E00               	movlw	0
  1995  00090E  22DD               	addwfc	postdec2,f,c
  1996                           
  1997                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1998  000910  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1999  000914  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2000  000918  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2001  00091C  0E02               	movlw	2
  2002  00091E  26DE               	addwf	postinc2,f,c
  2003  000920  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2004  000924  0E00               	movlw	0
  2005  000926  22DD               	addwfc	postdec2,f,c
  2006  000928  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2007  00092C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2008  000930  CFDE F088          	movff	postinc2,_prec
  2009  000934  CFDD F089          	movff	postdec2,_prec+1
  2010                           
  2011                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  2012  000938  EFE9  F004         	goto	l3553
  2013  00093C                     l3543:
  2014  00093C  FFFF               	dw	65535	; assembler added errata NOP
  2015                           
  2016                           ; BSR set to: 0
  2017                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  2018  00093E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2019  000942  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2020  000946  CFDE F008          	movff	postinc2,atoi@s
  2021  00094A  CFDD F009          	movff	postdec2,atoi@s+1
  2022  00094E  EC4C  F019         	call	_atoi	;wreg free
  2023  000952  C008  F088         	movff	?_atoi,_prec
  2024  000956  C009  F089         	movff	?_atoi+1,_prec+1
  2025                           
  2026                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2027  00095A  EFB7  F004         	goto	l3547
  2028  00095E                     l3545:
  2029  00095E  FFFF               	dw	65535	; assembler added errata NOP
  2030                           
  2031                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  2032  000960  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2033  000964  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2034  000968  2ADE               	incf	postinc2,f,c
  2035  00096A  0E00               	movlw	0
  2036  00096C  22DD               	addwfc	postdec2,f,c
  2037  00096E                     l3547:
  2038  00096E  FFFF               	dw	65535	; assembler added errata NOP
  2039  000970  0ED0               	movlw	208
  2040  000972  6E49               	movwf	??_vfpfcnvrt^0,c
  2041  000974  0EFF               	movlw	255
  2042  000976  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  2043  000978  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2044  00097C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2045  000980  CFDE FFF6          	movff	postinc2,tblptrl
  2046  000984  CFDD FFF7          	movff	postdec2,tblptrh
  2047  000988                     	if	0	;tblptru may be non-zero
  2048  000988                     	endif
  2049  000988                     	if	0	;tblptru may be non-zero
  2050  000988                     	endif
  2051  000988  0008               	tblrd		*
  2052  00098A  FFFF               	dw	65535	; errata NOP
  2053  00098C  50F5               	movf	tablat,w,c
  2054  00098E  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  2055  000990  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  2056  000992  5049               	movf	??_vfpfcnvrt^0,w,c
  2057  000994  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2058  000996  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  2059  000998  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2060  00099A  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  2061  00099C  E10B               	bnz	u4190
  2062  00099E  0E0A               	movlw	10
  2063  0009A0  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2064  0009A2  A0D8               	btfss	status,0,c
  2065  0009A4  EFD6  F004         	goto	u4191
  2066  0009A8  EFDA  F004         	goto	u4190
  2067  0009AC                     u4191:
  2068  0009AC  FFFF               	dw	65535	; assembler added errata NOP
  2069  0009AE  0E01               	movlw	1
  2070  0009B0  EFDC  F004         	goto	u4200
  2071  0009B4                     u4190:
  2072  0009B4  FFFF               	dw	65535	; assembler added errata NOP
  2073  0009B6  0E00               	movlw	0
  2074  0009B8                     u4200:
  2075  0009B8  FFFF               	dw	65535	; assembler added errata NOP
  2076  0009BA  6E53               	movwf	_vfpfcnvrt$1233^0,c
  2077  0009BC  6A54               	clrf	(_vfpfcnvrt$1233+1)^0,c
  2078  0009BE  5053               	movf	_vfpfcnvrt$1233^0,w,c
  2079  0009C0  1054               	iorwf	(_vfpfcnvrt$1233+1)^0,w,c
  2080  0009C2  A4D8               	btfss	status,2,c
  2081  0009C4  EFE6  F004         	goto	u4211
  2082  0009C8  EFE9  F004         	goto	u4210
  2083  0009CC                     u4211:
  2084  0009CC  FFFF               	dw	65535	; assembler added errata NOP
  2085  0009CE  EFAF  F004         	goto	l3545
  2086  0009D2                     u4210:
  2087  0009D2                     l3553:
  2088  0009D2  FFFF               	dw	65535	; assembler added errata NOP
  2089                           
  2090                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 792:         if (
      +                          *fmt[0] == 'c') {
  2091  0009D4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2092  0009D8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2093  0009DC  CFDE FFF6          	movff	postinc2,tblptrl
  2094  0009E0  CFDD FFF7          	movff	postdec2,tblptrh
  2095  0009E4                     	if	0	;tblptru may be non-zero
  2096  0009E4                     	endif
  2097  0009E4                     	if	0	;tblptru may be non-zero
  2098  0009E4                     	endif
  2099  0009E4  0008               	tblrd		*
  2100  0009E6  FFFF               	dw	65535	; errata NOP
  2101  0009E8  50F5               	movf	tablat,w,c
  2102  0009EA  0A63               	xorlw	99
  2103  0009EC  A4D8               	btfss	status,2,c
  2104  0009EE  EFFB  F004         	goto	u4221
  2105  0009F2  EFFE  F004         	goto	u4220
  2106  0009F6                     u4221:
  2107  0009F6  FFFF               	dw	65535	; assembler added errata NOP
  2108  0009F8  EF26  F005         	goto	l3561
  2109  0009FC                     u4220:
  2110  0009FC  FFFF               	dw	65535	; assembler added errata NOP
  2111  0009FE                     
  2112                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 793:             
      +                          ++*fmt;
  2113  0009FE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2114  000A02  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2115  000A06  2ADE               	incf	postinc2,f,c
  2116  000A08  0E00               	movlw	0
  2117  000A0A  22DD               	addwfc	postdec2,f,c
  2118                           
  2119                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 794:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2120  000A0C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2121  000A10  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2122  000A14  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2123  000A18  0E02               	movlw	2
  2124  000A1A  26DE               	addwf	postinc2,f,c
  2125  000A1C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2126  000A20  0E00               	movlw	0
  2127  000A22  22DD               	addwfc	postdec2,f,c
  2128  000A24  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2129  000A28  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2130  000A2C  50DF               	movf	indf2,w,c
  2131  000A2E  6E5F               	movwf	vfpfcnvrt@c^0,c
  2132  000A30                     
  2133                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 795:             
      +                          return ctoa(fp, c);
  2134  000A30  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  2135  000A34  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2136  000A38  C05F  F01E         	movff	vfpfcnvrt@c,ctoa@c
  2137  000A3C  EC11  F002         	call	_ctoa	;wreg free
  2138  000A40  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  2139  000A44  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2140  000A48  EFDC  F00C         	goto	l1033
  2141  000A4C                     l3561:
  2142  000A4C  FFFF               	dw	65535	; assembler added errata NOP
  2143                           
  2144                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 802:         if (
      +                          !strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((s
      +                          izeof("hhi")/sizeof("hhi"[0]))-1))) {
  2145  000A4E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2146  000A52  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2147  000A56  CFDE F001          	movff	postinc2,strncmp@_l
  2148  000A5A  CFDD F002          	movff	postdec2,strncmp@_l+1
  2149  000A5E  0E24               	movlw	low STR_2
  2150  000A60  6E03               	movwf	strncmp@_r^0,c
  2151  000A62  0E06               	movlw	high STR_2
  2152  000A64  6E04               	movwf	(strncmp@_r+1)^0,c
  2153  000A66  0E00               	movlw	0
  2154  000A68  6E06               	movwf	(strncmp@n+1)^0,c
  2155  000A6A  0E03               	movlw	3
  2156  000A6C  6E05               	movwf	strncmp@n^0,c
  2157  000A6E  EC02  F01F         	call	_strncmp	;wreg free
  2158  000A72  5001               	movf	?_strncmp^0,w,c
  2159  000A74  1002               	iorwf	(?_strncmp+1)^0,w,c
  2160  000A76  B4D8               	btfsc	status,2,c
  2161  000A78  EF40  F005         	goto	u4231
  2162  000A7C  EF43  F005         	goto	u4230
  2163  000A80                     u4231:
  2164  000A80  FFFF               	dw	65535	; assembler added errata NOP
  2165  000A82  EF60  F005         	goto	l3565
  2166  000A86                     u4230:
  2167  000A86  FFFF               	dw	65535	; assembler added errata NOP
  2168  000A88  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2169  000A8C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2170  000A90  CFDE F001          	movff	postinc2,strncmp@_l
  2171  000A94  CFDD F002          	movff	postdec2,strncmp@_l+1
  2172  000A98  0E28               	movlw	low STR_6
  2173  000A9A  6E03               	movwf	strncmp@_r^0,c
  2174  000A9C  0E06               	movlw	high STR_6
  2175  000A9E  6E04               	movwf	(strncmp@_r+1)^0,c
  2176  000AA0  0E00               	movlw	0
  2177  000AA2  6E06               	movwf	(strncmp@n+1)^0,c
  2178  000AA4  0E03               	movlw	3
  2179  000AA6  6E05               	movwf	strncmp@n^0,c
  2180  000AA8  EC02  F01F         	call	_strncmp	;wreg free
  2181  000AAC  5001               	movf	?_strncmp^0,w,c
  2182  000AAE  1002               	iorwf	(?_strncmp+1)^0,w,c
  2183  000AB0  A4D8               	btfss	status,2,c
  2184  000AB2  EF5D  F005         	goto	u4241
  2185  000AB6  EF60  F005         	goto	u4240
  2186  000ABA                     u4241:
  2187  000ABA  FFFF               	dw	65535	; assembler added errata NOP
  2188  000ABC  EFA2  F005         	goto	l3571
  2189  000AC0                     u4240:
  2190  000AC0                     l3565:
  2191  000AC0  FFFF               	dw	65535	; assembler added errata NOP
  2192                           
  2193                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 803: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 805:             *fmt += ((si
      +                          zeof("hhd")/sizeof("hhd"[0]))-1);
  2194  000AC2  0E03               	movlw	3
  2195  000AC4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2196  000AC8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2197  000ACC  26DE               	addwf	postinc2,f,c
  2198  000ACE  0E00               	movlw	0
  2199  000AD0  22DD               	addwfc	postdec2,f,c
  2200                           
  2201                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 806:             
      +                          ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2202  000AD2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2203  000AD6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2204  000ADA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2205  000ADE  0E02               	movlw	2
  2206  000AE0  26DE               	addwf	postinc2,f,c
  2207  000AE2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2208  000AE6  0E00               	movlw	0
  2209  000AE8  22DD               	addwfc	postdec2,f,c
  2210  000AEA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2211  000AEE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2212  000AF2  50DF               	movf	indf2,w,c
  2213  000AF4  6E55               	movwf	vfpfcnvrt@ll^0,c
  2214  000AF6  0E00               	movlw	0
  2215  000AF8  BE55               	btfsc	vfpfcnvrt@ll^0,7,c
  2216  000AFA  0EFF               	movlw	-1
  2217  000AFC  6E56               	movwf	(vfpfcnvrt@ll+1)^0,c
  2218  000AFE  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  2219  000B00  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  2220  000B02  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  2221  000B04  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  2222  000B06  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  2223  000B08  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  2224  000B0A                     l3567:
  2225  000B0A  FFFF               	dw	65535	; assembler added errata NOP
  2226                           
  2227                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 808:             
      +                          return dtoa(fp, ll);
  2228  000B0C  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2229  000B10  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2230  000B14  C055  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2231  000B18  C056  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2232  000B1C  C057  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2233  000B20  C058  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2234  000B24  C059  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2235  000B28  C05A  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2236  000B2C  C05B  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2237  000B30  C05C  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2238  000B34  ECF8  F013         	call	_dtoa	;wreg free
  2239  000B38  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  2240  000B3C  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2241  000B40  EFDC  F00C         	goto	l1033
  2242  000B44                     l3571:
  2243  000B44  FFFF               	dw	65535	; assembler added errata NOP
  2244                           
  2245                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          !strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeo
      +                          f("hi")/sizeof("hi"[0]))-1))) {
  2246  000B46  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2247  000B4A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2248  000B4E  CFDE F001          	movff	postinc2,strncmp@_l
  2249  000B52  CFDD F002          	movff	postdec2,strncmp@_l+1
  2250  000B56  0E25               	movlw	low (STR_2+1)
  2251  000B58  6E03               	movwf	strncmp@_r^0,c
  2252  000B5A  0E06               	movlw	high (STR_2+1)
  2253  000B5C  6E04               	movwf	(strncmp@_r+1)^0,c
  2254  000B5E  0E00               	movlw	0
  2255  000B60  6E06               	movwf	(strncmp@n+1)^0,c
  2256  000B62  0E02               	movlw	2
  2257  000B64  6E05               	movwf	strncmp@n^0,c
  2258  000B66  EC02  F01F         	call	_strncmp	;wreg free
  2259  000B6A  5001               	movf	?_strncmp^0,w,c
  2260  000B6C  1002               	iorwf	(?_strncmp+1)^0,w,c
  2261  000B6E  B4D8               	btfsc	status,2,c
  2262  000B70  EFBC  F005         	goto	u4251
  2263  000B74  EFBF  F005         	goto	u4250
  2264  000B78                     u4251:
  2265  000B78  FFFF               	dw	65535	; assembler added errata NOP
  2266  000B7A  EFDC  F005         	goto	l3575
  2267  000B7E                     u4250:
  2268  000B7E  FFFF               	dw	65535	; assembler added errata NOP
  2269  000B80  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2270  000B84  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2271  000B88  CFDE F001          	movff	postinc2,strncmp@_l
  2272  000B8C  CFDD F002          	movff	postdec2,strncmp@_l+1
  2273  000B90  0E29               	movlw	low (STR_6+1)
  2274  000B92  6E03               	movwf	strncmp@_r^0,c
  2275  000B94  0E06               	movlw	high (STR_6+1)
  2276  000B96  6E04               	movwf	(strncmp@_r+1)^0,c
  2277  000B98  0E00               	movlw	0
  2278  000B9A  6E06               	movwf	(strncmp@n+1)^0,c
  2279  000B9C  0E02               	movlw	2
  2280  000B9E  6E05               	movwf	strncmp@n^0,c
  2281  000BA0  EC02  F01F         	call	_strncmp	;wreg free
  2282  000BA4  5001               	movf	?_strncmp^0,w,c
  2283  000BA6  1002               	iorwf	(?_strncmp+1)^0,w,c
  2284  000BA8  A4D8               	btfss	status,2,c
  2285  000BAA  EFD9  F005         	goto	u4261
  2286  000BAE  EFDC  F005         	goto	u4260
  2287  000BB2                     u4261:
  2288  000BB2  FFFF               	dw	65535	; assembler added errata NOP
  2289  000BB4  EF04  F006         	goto	l3581
  2290  000BB8                     u4260:
  2291  000BB8                     l3575:
  2292  000BB8  FFFF               	dw	65535	; assembler added errata NOP
  2293                           
  2294                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 815: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 817:             *fmt += ((si
      +                          zeof("hd")/sizeof("hd"[0]))-1);
  2295  000BBA  0E02               	movlw	2
  2296  000BBC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2297  000BC0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2298  000BC4  26DE               	addwf	postinc2,f,c
  2299  000BC6  0E00               	movlw	0
  2300  000BC8  22DD               	addwfc	postdec2,f,c
  2301                           
  2302                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 818:             
      +                          ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  2303  000BCA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2304  000BCE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2305  000BD2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2306  000BD6  0E02               	movlw	2
  2307  000BD8  26DE               	addwf	postinc2,f,c
  2308  000BDA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2309  000BDE  0E00               	movlw	0
  2310  000BE0  22DD               	addwfc	postdec2,f,c
  2311  000BE2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2312  000BE6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2313  000BEA  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  2314  000BEE  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  2315  000BF2  0E00               	movlw	0
  2316  000BF4  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2317  000BF6  0EFF               	movlw	-1
  2318  000BF8  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  2319  000BFA  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  2320  000BFC  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  2321  000BFE  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  2322  000C00  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  2323  000C02  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  2324  000C04  EF85  F005         	goto	l3567
  2325  000C08                     l3581:
  2326  000C08  FFFF               	dw	65535	; assembler added errata NOP
  2327                           
  2328                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2329  000C0A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2330  000C0E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2331  000C12  CFDE FFF6          	movff	postinc2,tblptrl
  2332  000C16  CFDD FFF7          	movff	postdec2,tblptrh
  2333  000C1A                     	if	0	;tblptru may be non-zero
  2334  000C1A                     	endif
  2335  000C1A                     	if	0	;tblptru may be non-zero
  2336  000C1A                     	endif
  2337  000C1A  0008               	tblrd		*
  2338  000C1C  FFFF               	dw	65535	; errata NOP
  2339  000C1E  50F5               	movf	tablat,w,c
  2340  000C20  0A64               	xorlw	100
  2341  000C22  B4D8               	btfsc	status,2,c
  2342  000C24  EF16  F006         	goto	u4271
  2343  000C28  EF19  F006         	goto	u4270
  2344  000C2C                     u4271:
  2345  000C2C  FFFF               	dw	65535	; assembler added errata NOP
  2346  000C2E  EF2E  F006         	goto	l3585
  2347  000C32                     u4270:
  2348  000C32  FFFF               	dw	65535	; assembler added errata NOP
  2349  000C34  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2350  000C38  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2351  000C3C  CFDE FFF6          	movff	postinc2,tblptrl
  2352  000C40  CFDD FFF7          	movff	postdec2,tblptrh
  2353  000C44                     	if	0	;tblptru may be non-zero
  2354  000C44                     	endif
  2355  000C44                     	if	0	;tblptru may be non-zero
  2356  000C44                     	endif
  2357  000C44  0008               	tblrd		*
  2358  000C46  FFFF               	dw	65535	; errata NOP
  2359  000C48  50F5               	movf	tablat,w,c
  2360  000C4A  0A69               	xorlw	105
  2361  000C4C  A4D8               	btfss	status,2,c
  2362  000C4E  EF2B  F006         	goto	u4281
  2363  000C52  EF2E  F006         	goto	u4280
  2364  000C56                     u4281:
  2365  000C56  FFFF               	dw	65535	; assembler added errata NOP
  2366  000C58  EF55  F006         	goto	l3591
  2367  000C5C                     u4280:
  2368  000C5C                     l3585:
  2369  000C5C  FFFF               	dw	65535	; assembler added errata NOP
  2370                           
  2371                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  2372  000C5E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2373  000C62  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2374  000C66  2ADE               	incf	postinc2,f,c
  2375  000C68  0E00               	movlw	0
  2376  000C6A  22DD               	addwfc	postdec2,f,c
  2377                           
  2378                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2379  000C6C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2380  000C70  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2381  000C74  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2382  000C78  0E02               	movlw	2
  2383  000C7A  26DE               	addwf	postinc2,f,c
  2384  000C7C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2385  000C80  0E00               	movlw	0
  2386  000C82  22DD               	addwfc	postdec2,f,c
  2387  000C84  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2388  000C88  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2389  000C8C  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  2390  000C90  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  2391  000C94  0E00               	movlw	0
  2392  000C96  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2393  000C98  0EFF               	movlw	-1
  2394  000C9A  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  2395  000C9C  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  2396  000C9E  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  2397  000CA0  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  2398  000CA2  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  2399  000CA4  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  2400  000CA6  EF85  F005         	goto	l3567
  2401  000CAA                     l3591:
  2402  000CAA  FFFF               	dw	65535	; assembler added errata NOP
  2403                           
  2404                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 883:         if (
      +                          !strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeo
      +                          f("zi")/sizeof("zi"[0]))-1))) {
  2405  000CAC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2406  000CB0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2407  000CB4  CFDE F001          	movff	postinc2,strncmp@_l
  2408  000CB8  CFDD F002          	movff	postdec2,strncmp@_l+1
  2409  000CBC  0E3F               	movlw	low STR_20
  2410  000CBE  6E03               	movwf	strncmp@_r^0,c
  2411  000CC0  0E06               	movlw	high STR_20
  2412  000CC2  6E04               	movwf	(strncmp@_r+1)^0,c
  2413  000CC4  0E00               	movlw	0
  2414  000CC6  6E06               	movwf	(strncmp@n+1)^0,c
  2415  000CC8  0E02               	movlw	2
  2416  000CCA  6E05               	movwf	strncmp@n^0,c
  2417  000CCC  EC02  F01F         	call	_strncmp	;wreg free
  2418  000CD0  5001               	movf	?_strncmp^0,w,c
  2419  000CD2  1002               	iorwf	(?_strncmp+1)^0,w,c
  2420  000CD4  B4D8               	btfsc	status,2,c
  2421  000CD6  EF6F  F006         	goto	u4291
  2422  000CDA  EF72  F006         	goto	u4290
  2423  000CDE                     u4291:
  2424  000CDE  FFFF               	dw	65535	; assembler added errata NOP
  2425  000CE0  EF8F  F006         	goto	l3595
  2426  000CE4                     u4290:
  2427  000CE4  FFFF               	dw	65535	; assembler added errata NOP
  2428  000CE6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2429  000CEA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2430  000CEE  CFDE F001          	movff	postinc2,strncmp@_l
  2431  000CF2  CFDD F002          	movff	postdec2,strncmp@_l+1
  2432  000CF6  0E42               	movlw	low STR_24
  2433  000CF8  6E03               	movwf	strncmp@_r^0,c
  2434  000CFA  0E06               	movlw	high STR_24
  2435  000CFC  6E04               	movwf	(strncmp@_r+1)^0,c
  2436  000CFE  0E00               	movlw	0
  2437  000D00  6E06               	movwf	(strncmp@n+1)^0,c
  2438  000D02  0E02               	movlw	2
  2439  000D04  6E05               	movwf	strncmp@n^0,c
  2440  000D06  EC02  F01F         	call	_strncmp	;wreg free
  2441  000D0A  5001               	movf	?_strncmp^0,w,c
  2442  000D0C  1002               	iorwf	(?_strncmp+1)^0,w,c
  2443  000D0E  A4D8               	btfss	status,2,c
  2444  000D10  EF8C  F006         	goto	u4301
  2445  000D14  EF8F  F006         	goto	u4300
  2446  000D18                     u4301:
  2447  000D18  FFFF               	dw	65535	; assembler added errata NOP
  2448  000D1A  EFB8  F006         	goto	l3601
  2449  000D1E                     u4300:
  2450  000D1E                     l3595:
  2451  000D1E  FFFF               	dw	65535	; assembler added errata NOP
  2452                           
  2453                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 884: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 886:             *fmt += ((si
      +                          zeof("zd")/sizeof("zd"[0]))-1);
  2454  000D20  0E02               	movlw	2
  2455  000D22  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2456  000D26  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2457  000D2A  26DE               	addwf	postinc2,f,c
  2458  000D2C  0E00               	movlw	0
  2459  000D2E  22DD               	addwfc	postdec2,f,c
  2460                           
  2461                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 887:             
      +                          ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2462  000D30  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2463  000D34  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2464  000D38  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2465  000D3C  0E02               	movlw	2
  2466  000D3E  26DE               	addwf	postinc2,f,c
  2467  000D40  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2468  000D44  0E00               	movlw	0
  2469  000D46  22DD               	addwfc	postdec2,f,c
  2470  000D48  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2471  000D4C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2472  000D50  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2473  000D54  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2474  000D58  C04B  F055         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  2475  000D5C  C04C  F056         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  2476  000D60  6A57               	clrf	(vfpfcnvrt@ll+2)^0,c
  2477  000D62  6A58               	clrf	(vfpfcnvrt@ll+3)^0,c
  2478  000D64  6A59               	clrf	(vfpfcnvrt@ll+4)^0,c
  2479  000D66  6A5A               	clrf	(vfpfcnvrt@ll+5)^0,c
  2480  000D68  6A5B               	clrf	(vfpfcnvrt@ll+6)^0,c
  2481  000D6A  6A5C               	clrf	(vfpfcnvrt@ll+7)^0,c
  2482  000D6C  EF85  F005         	goto	l3567
  2483  000D70                     l3601:
  2484  000D70  FFFF               	dw	65535	; assembler added errata NOP
  2485                           
  2486                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 969:         if (
      +                          !strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  2487  000D72  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2488  000D76  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2489  000D7A  CFDE F001          	movff	postinc2,strncmp@_l
  2490  000D7E  CFDD F002          	movff	postdec2,strncmp@_l+1
  2491  000D82  0E30               	movlw	low STR_29
  2492  000D84  6E03               	movwf	strncmp@_r^0,c
  2493  000D86  0E06               	movlw	high STR_29
  2494  000D88  6E04               	movwf	(strncmp@_r+1)^0,c
  2495  000D8A  0E00               	movlw	0
  2496  000D8C  6E06               	movwf	(strncmp@n+1)^0,c
  2497  000D8E  0E03               	movlw	3
  2498  000D90  6E05               	movwf	strncmp@n^0,c
  2499  000D92  EC02  F01F         	call	_strncmp	;wreg free
  2500  000D96  5001               	movf	?_strncmp^0,w,c
  2501  000D98  1002               	iorwf	(?_strncmp+1)^0,w,c
  2502  000D9A  A4D8               	btfss	status,2,c
  2503  000D9C  EFD2  F006         	goto	u4311
  2504  000DA0  EFD5  F006         	goto	u4310
  2505  000DA4                     u4311:
  2506  000DA4  FFFF               	dw	65535	; assembler added errata NOP
  2507  000DA6  EF16  F007         	goto	l3609
  2508  000DAA                     u4310:
  2509  000DAA  FFFF               	dw	65535	; assembler added errata NOP
  2510  000DAC                     
  2511                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 971:             
      +                          *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  2512  000DAC  0E03               	movlw	3
  2513  000DAE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2514  000DB2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2515  000DB6  26DE               	addwf	postinc2,f,c
  2516  000DB8  0E00               	movlw	0
  2517  000DBA  22DD               	addwfc	postdec2,f,c
  2518                           
  2519                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 972:             
      +                          llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2520  000DBC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2521  000DC0  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2522  000DC4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2523  000DC8  0E02               	movlw	2
  2524  000DCA  26DE               	addwf	postinc2,f,c
  2525  000DCC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2526  000DD0  0E00               	movlw	0
  2527  000DD2  22DD               	addwfc	postdec2,f,c
  2528  000DD4  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2529  000DD8  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2530  000DDC  50DF               	movf	indf2,w,c
  2531  000DDE  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  2532  000DE0  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  2533  000DE2  6E60               	movwf	vfpfcnvrt@llu^0,c
  2534  000DE4  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  2535  000DE6  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  2536  000DE8  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  2537  000DEA  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  2538  000DEC  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  2539  000DEE  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  2540  000DF0  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  2541  000DF2                     l3605:
  2542  000DF2  FFFF               	dw	65535	; assembler added errata NOP
  2543                           
  2544                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 974:             
      +                          return otoa(fp, llu);
  2545  000DF4  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  2546  000DF8  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  2547  000DFC  C060  F01E         	movff	vfpfcnvrt@llu,otoa@d
  2548  000E00  C061  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  2549  000E04  C062  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  2550  000E08  C063  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  2551  000E0C  C064  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  2552  000E10  C065  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  2553  000E14  C066  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  2554  000E18  C067  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  2555  000E1C  EC3B  F018         	call	_otoa	;wreg free
  2556  000E20  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  2557  000E24  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  2558  000E28  EFDC  F00C         	goto	l1033
  2559  000E2C                     l3609:
  2560  000E2C  FFFF               	dw	65535	; assembler added errata NOP
  2561                           
  2562                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 980:         if (
      +                          !strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  2563  000E2E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2564  000E32  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2565  000E36  CFDE F001          	movff	postinc2,strncmp@_l
  2566  000E3A  CFDD F002          	movff	postdec2,strncmp@_l+1
  2567  000E3E  0E31               	movlw	low (STR_29+1)
  2568  000E40  6E03               	movwf	strncmp@_r^0,c
  2569  000E42  0E06               	movlw	high (STR_29+1)
  2570  000E44  6E04               	movwf	(strncmp@_r+1)^0,c
  2571  000E46  0E00               	movlw	0
  2572  000E48  6E06               	movwf	(strncmp@n+1)^0,c
  2573  000E4A  0E02               	movlw	2
  2574  000E4C  6E05               	movwf	strncmp@n^0,c
  2575  000E4E  EC02  F01F         	call	_strncmp	;wreg free
  2576  000E52  5001               	movf	?_strncmp^0,w,c
  2577  000E54  1002               	iorwf	(?_strncmp+1)^0,w,c
  2578  000E56  A4D8               	btfss	status,2,c
  2579  000E58  EF30  F007         	goto	u4321
  2580  000E5C  EF33  F007         	goto	u4320
  2581  000E60                     u4321:
  2582  000E60  FFFF               	dw	65535	; assembler added errata NOP
  2583  000E62  EF5C  F007         	goto	l3617
  2584  000E66                     u4320:
  2585  000E66  FFFF               	dw	65535	; assembler added errata NOP
  2586  000E68                     
  2587                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 982:             
      +                          *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  2588  000E68  0E02               	movlw	2
  2589  000E6A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2590  000E6E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2591  000E72  26DE               	addwf	postinc2,f,c
  2592  000E74  0E00               	movlw	0
  2593  000E76  22DD               	addwfc	postdec2,f,c
  2594                           
  2595                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 983:             
      +                          llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  2596  000E78  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2597  000E7C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2598  000E80  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2599  000E84  0E02               	movlw	2
  2600  000E86  26DE               	addwf	postinc2,f,c
  2601  000E88  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2602  000E8C  0E00               	movlw	0
  2603  000E8E  22DD               	addwfc	postdec2,f,c
  2604  000E90  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2605  000E94  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2606  000E98  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2607  000E9C  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2608  000EA0  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2609  000EA4  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2610  000EA8  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  2611  000EAA  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  2612  000EAC  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  2613  000EAE  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  2614  000EB0  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  2615  000EB2  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  2616  000EB4  EFF9  F006         	goto	l3605
  2617  000EB8                     l3617:
  2618  000EB8  FFFF               	dw	65535	; assembler added errata NOP
  2619                           
  2620                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 990:         if (
      +                          *fmt[0] == 'o') {
  2621  000EBA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2622  000EBE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2623  000EC2  CFDE FFF6          	movff	postinc2,tblptrl
  2624  000EC6  CFDD FFF7          	movff	postdec2,tblptrh
  2625  000ECA                     	if	0	;tblptru may be non-zero
  2626  000ECA                     	endif
  2627  000ECA                     	if	0	;tblptru may be non-zero
  2628  000ECA                     	endif
  2629  000ECA  0008               	tblrd		*
  2630  000ECC  FFFF               	dw	65535	; errata NOP
  2631  000ECE  50F5               	movf	tablat,w,c
  2632  000ED0  0A6F               	xorlw	111
  2633  000ED2  A4D8               	btfss	status,2,c
  2634  000ED4  EF6E  F007         	goto	u4331
  2635  000ED8  EF71  F007         	goto	u4330
  2636  000EDC                     u4331:
  2637  000EDC  FFFF               	dw	65535	; assembler added errata NOP
  2638  000EDE  EF99  F007         	goto	l3625
  2639  000EE2                     u4330:
  2640  000EE2  FFFF               	dw	65535	; assembler added errata NOP
  2641  000EE4                     
  2642                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 992:             
      +                          ++*fmt;
  2643  000EE4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2644  000EE8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2645  000EEC  2ADE               	incf	postinc2,f,c
  2646  000EEE  0E00               	movlw	0
  2647  000EF0  22DD               	addwfc	postdec2,f,c
  2648                           
  2649                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 993:             
      +                          llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int
      +                          )0));
  2650  000EF2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2651  000EF6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2652  000EFA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2653  000EFE  0E02               	movlw	2
  2654  000F00  26DE               	addwf	postinc2,f,c
  2655  000F02  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2656  000F06  0E00               	movlw	0
  2657  000F08  22DD               	addwfc	postdec2,f,c
  2658  000F0A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2659  000F0E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2660  000F12  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2661  000F16  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2662  000F1A  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2663  000F1E  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2664  000F22  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  2665  000F24  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  2666  000F26  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  2667  000F28  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  2668  000F2A  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  2669  000F2C  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  2670  000F2E  EFF9  F006         	goto	l3605
  2671  000F32                     l3625:
  2672  000F32  FFFF               	dw	65535	; assembler added errata NOP
  2673                           
  2674                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1044:         if 
      +                          (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  2675  000F34  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2676  000F38  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2677  000F3C  CFDE F001          	movff	postinc2,strncmp@_l
  2678  000F40  CFDD F002          	movff	postdec2,strncmp@_l+1
  2679  000F44  0E48               	movlw	low STR_39
  2680  000F46  6E03               	movwf	strncmp@_r^0,c
  2681  000F48  0E06               	movlw	high STR_39
  2682  000F4A  6E04               	movwf	(strncmp@_r+1)^0,c
  2683  000F4C  0E00               	movlw	0
  2684  000F4E  6E06               	movwf	(strncmp@n+1)^0,c
  2685  000F50  0E02               	movlw	2
  2686  000F52  6E05               	movwf	strncmp@n^0,c
  2687  000F54  EC02  F01F         	call	_strncmp	;wreg free
  2688  000F58  5001               	movf	?_strncmp^0,w,c
  2689  000F5A  1002               	iorwf	(?_strncmp+1)^0,w,c
  2690  000F5C  A4D8               	btfss	status,2,c
  2691  000F5E  EFB3  F007         	goto	u4341
  2692  000F62  EFB6  F007         	goto	u4340
  2693  000F66                     u4341:
  2694  000F66  FFFF               	dw	65535	; assembler added errata NOP
  2695  000F68  EFDF  F007         	goto	l3633
  2696  000F6C                     u4340:
  2697  000F6C  FFFF               	dw	65535	; assembler added errata NOP
  2698  000F6E                     
  2699                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1046:            
      +                           *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  2700  000F6E  0E02               	movlw	2
  2701  000F70  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2702  000F74  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2703  000F78  26DE               	addwf	postinc2,f,c
  2704  000F7A  0E00               	movlw	0
  2705  000F7C  22DD               	addwfc	postdec2,f,c
  2706                           
  2707                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1047:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2708  000F7E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2709  000F82  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2710  000F86  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2711  000F8A  0E02               	movlw	2
  2712  000F8C  26DE               	addwf	postinc2,f,c
  2713  000F8E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2714  000F92  0E00               	movlw	0
  2715  000F94  22DD               	addwfc	postdec2,f,c
  2716  000F96  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2717  000F9A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2718  000F9E  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2719  000FA2  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2720  000FA6  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2721  000FAA  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2722  000FAE  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  2723  000FB0  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  2724  000FB2  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  2725  000FB4  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  2726  000FB6  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  2727  000FB8  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  2728  000FBA  EFF9  F006         	goto	l3605
  2729  000FBE                     l3633:
  2730  000FBE  FFFF               	dw	65535	; assembler added errata NOP
  2731                           
  2732                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1058:         if 
      +                          (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  2733  000FC0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2734  000FC4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2735  000FC8  CFDE F001          	movff	postinc2,strncmp@_l
  2736  000FCC  CFDD F002          	movff	postdec2,strncmp@_l+1
  2737  000FD0  0E2C               	movlw	low STR_44
  2738  000FD2  6E03               	movwf	strncmp@_r^0,c
  2739  000FD4  0E06               	movlw	high STR_44
  2740  000FD6  6E04               	movwf	(strncmp@_r+1)^0,c
  2741  000FD8  0E00               	movlw	0
  2742  000FDA  6E06               	movwf	(strncmp@n+1)^0,c
  2743  000FDC  0E03               	movlw	3
  2744  000FDE  6E05               	movwf	strncmp@n^0,c
  2745  000FE0  EC02  F01F         	call	_strncmp	;wreg free
  2746  000FE4  5001               	movf	?_strncmp^0,w,c
  2747  000FE6  1002               	iorwf	(?_strncmp+1)^0,w,c
  2748  000FE8  A4D8               	btfss	status,2,c
  2749  000FEA  EFF9  F007         	goto	u4351
  2750  000FEE  EFFC  F007         	goto	u4350
  2751  000FF2                     u4351:
  2752  000FF2  FFFF               	dw	65535	; assembler added errata NOP
  2753  000FF4  EF26  F008         	goto	l3643
  2754  000FF8                     u4350:
  2755  000FF8  FFFF               	dw	65535	; assembler added errata NOP
  2756  000FFA                     
  2757                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1060:            
      +                           *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  2758  000FFA  0E03               	movlw	3
  2759  000FFC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2760  001000  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2761  001004  26DE               	addwf	postinc2,f,c
  2762  001006  0E00               	movlw	0
  2763  001008  22DD               	addwfc	postdec2,f,c
  2764                           
  2765                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1061:            
      +                           vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  2766  00100A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2767  00100E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2768  001012  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2769  001016  0E02               	movlw	2
  2770  001018  26DE               	addwf	postinc2,f,c
  2771  00101A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2772  00101E  0E00               	movlw	0
  2773  001020  22DD               	addwfc	postdec2,f,c
  2774  001022  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2775  001026  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2776  00102A  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  2777  00102E  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  2778  001032                     
  2779                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1062:            
      +                           *(char *)vp = (char)nout;
  2780  001032  C05D  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2781  001036  C05E  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2782  00103A  C084  FFDF         	movff	_nout,indf2
  2783  00103E                     l3639:
  2784  00103E  FFFF               	dw	65535	; assembler added errata NOP
  2785                           
  2786                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1063:            
      +                           return 0;
  2787  001040  0E00               	movlw	0
  2788  001042  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  2789  001044  0E00               	movlw	0
  2790  001046  6E43               	movwf	?_vfpfcnvrt^0,c
  2791  001048  EFDC  F00C         	goto	l1033
  2792  00104C                     l3643:
  2793  00104C  FFFF               	dw	65535	; assembler added errata NOP
  2794                           
  2795                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1068:         if 
      +                          (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  2796  00104E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2797  001052  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2798  001056  CFDE F001          	movff	postinc2,strncmp@_l
  2799  00105A  CFDD F002          	movff	postdec2,strncmp@_l+1
  2800  00105E  0E2D               	movlw	low (STR_44+1)
  2801  001060  6E03               	movwf	strncmp@_r^0,c
  2802  001062  0E06               	movlw	high (STR_44+1)
  2803  001064  6E04               	movwf	(strncmp@_r+1)^0,c
  2804  001066  0E00               	movlw	0
  2805  001068  6E06               	movwf	(strncmp@n+1)^0,c
  2806  00106A  0E02               	movlw	2
  2807  00106C  6E05               	movwf	strncmp@n^0,c
  2808  00106E  EC02  F01F         	call	_strncmp	;wreg free
  2809  001072  5001               	movf	?_strncmp^0,w,c
  2810  001074  1002               	iorwf	(?_strncmp+1)^0,w,c
  2811  001076  A4D8               	btfss	status,2,c
  2812  001078  EF40  F008         	goto	u4361
  2813  00107C  EF43  F008         	goto	u4360
  2814  001080                     u4361:
  2815  001080  FFFF               	dw	65535	; assembler added errata NOP
  2816  001082  EF6A  F008         	goto	l3653
  2817  001086                     u4360:
  2818  001086  FFFF               	dw	65535	; assembler added errata NOP
  2819  001088                     
  2820                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1070:            
      +                           *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  2821  001088  0E02               	movlw	2
  2822  00108A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2823  00108E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2824  001092  26DE               	addwf	postinc2,f,c
  2825  001094  0E00               	movlw	0
  2826  001096  22DD               	addwfc	postdec2,f,c
  2827                           
  2828                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1071:            
      +                           vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  2829  001098  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2830  00109C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2831  0010A0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2832  0010A4  0E02               	movlw	2
  2833  0010A6  26DE               	addwf	postinc2,f,c
  2834  0010A8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2835  0010AC  0E00               	movlw	0
  2836  0010AE  22DD               	addwfc	postdec2,f,c
  2837  0010B0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2838  0010B4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2839  0010B8  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  2840  0010BC  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  2841  0010C0                     
  2842                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1072:            
      +                           *(short *)vp = (short)nout;
  2843  0010C0  C05D  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2844  0010C4  C05E  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2845  0010C8  C084  FFDE         	movff	_nout,postinc2
  2846  0010CC  C085  FFDD         	movff	_nout+1,postdec2
  2847  0010D0  EF1F  F008         	goto	l3639
  2848  0010D4                     l3653:
  2849  0010D4  FFFF               	dw	65535	; assembler added errata NOP
  2850                           
  2851                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1077:         if 
      +                          (*fmt[0] == 'n') {
  2852  0010D6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2853  0010DA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2854  0010DE  CFDE FFF6          	movff	postinc2,tblptrl
  2855  0010E2  CFDD FFF7          	movff	postdec2,tblptrh
  2856  0010E6                     	if	0	;tblptru may be non-zero
  2857  0010E6                     	endif
  2858  0010E6                     	if	0	;tblptru may be non-zero
  2859  0010E6                     	endif
  2860  0010E6  0008               	tblrd		*
  2861  0010E8  FFFF               	dw	65535	; errata NOP
  2862  0010EA  50F5               	movf	tablat,w,c
  2863  0010EC  0A6E               	xorlw	110
  2864  0010EE  A4D8               	btfss	status,2,c
  2865  0010F0  EF7C  F008         	goto	u4371
  2866  0010F4  EF7F  F008         	goto	u4370
  2867  0010F8                     u4371:
  2868  0010F8  FFFF               	dw	65535	; assembler added errata NOP
  2869  0010FA  EFA5  F008         	goto	l3663
  2870  0010FE                     u4370:
  2871  0010FE  FFFF               	dw	65535	; assembler added errata NOP
  2872  001100                     
  2873                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1078:            
      +                           ++*fmt;
  2874  001100  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2875  001104  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2876  001108  2ADE               	incf	postinc2,f,c
  2877  00110A  0E00               	movlw	0
  2878  00110C  22DD               	addwfc	postdec2,f,c
  2879                           
  2880                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1079:            
      +                           vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  2881  00110E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2882  001112  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2883  001116  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2884  00111A  0E02               	movlw	2
  2885  00111C  26DE               	addwf	postinc2,f,c
  2886  00111E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2887  001122  0E00               	movlw	0
  2888  001124  22DD               	addwfc	postdec2,f,c
  2889  001126  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2890  00112A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2891  00112E  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  2892  001132  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  2893  001136                     
  2894                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1080:            
      +                           *(int *)vp = nout;
  2895  001136  C05D  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2896  00113A  C05E  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2897  00113E  C084  FFDE         	movff	_nout,postinc2
  2898  001142  C085  FFDD         	movff	_nout+1,postdec2
  2899  001146  EF1F  F008         	goto	l3639
  2900  00114A                     l3663:
  2901  00114A  FFFF               	dw	65535	; assembler added errata NOP
  2902                           
  2903                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1125:         if 
      +                          (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  2904  00114C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2905  001150  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2906  001154  CFDE F001          	movff	postinc2,strncmp@_l
  2907  001158  CFDD F002          	movff	postdec2,strncmp@_l+1
  2908  00115C  0E45               	movlw	low STR_54
  2909  00115E  6E03               	movwf	strncmp@_r^0,c
  2910  001160  0E06               	movlw	high STR_54
  2911  001162  6E04               	movwf	(strncmp@_r+1)^0,c
  2912  001164  0E00               	movlw	0
  2913  001166  6E06               	movwf	(strncmp@n+1)^0,c
  2914  001168  0E02               	movlw	2
  2915  00116A  6E05               	movwf	strncmp@n^0,c
  2916  00116C  EC02  F01F         	call	_strncmp	;wreg free
  2917  001170  5001               	movf	?_strncmp^0,w,c
  2918  001172  1002               	iorwf	(?_strncmp+1)^0,w,c
  2919  001174  A4D8               	btfss	status,2,c
  2920  001176  EFBF  F008         	goto	u4381
  2921  00117A  EFC2  F008         	goto	u4380
  2922  00117E                     u4381:
  2923  00117E  FFFF               	dw	65535	; assembler added errata NOP
  2924  001180  EFE9  F008         	goto	l3673
  2925  001184                     u4380:
  2926  001184  FFFF               	dw	65535	; assembler added errata NOP
  2927  001186                     
  2928                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1127:            
      +                           *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  2929  001186  0E02               	movlw	2
  2930  001188  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2931  00118C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2932  001190  26DE               	addwf	postinc2,f,c
  2933  001192  0E00               	movlw	0
  2934  001194  22DD               	addwfc	postdec2,f,c
  2935                           
  2936                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1128:            
      +                           vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  2937  001196  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2938  00119A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2939  00119E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2940  0011A2  0E02               	movlw	2
  2941  0011A4  26DE               	addwf	postinc2,f,c
  2942  0011A6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2943  0011AA  0E00               	movlw	0
  2944  0011AC  22DD               	addwfc	postdec2,f,c
  2945  0011AE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2946  0011B2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2947  0011B6  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  2948  0011BA  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  2949  0011BE                     
  2950                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1129:            
      +                           *(size_t *)vp = (size_t)nout;
  2951  0011BE  C05D  FFD9         	movff	vfpfcnvrt@vp,fsr2l
  2952  0011C2  C05E  FFDA         	movff	vfpfcnvrt@vp+1,fsr2h
  2953  0011C6  C084  FFDE         	movff	_nout,postinc2
  2954  0011CA  C085  FFDD         	movff	_nout+1,postdec2
  2955  0011CE  EF1F  F008         	goto	l3639
  2956  0011D2                     l3673:
  2957  0011D2  FFFF               	dw	65535	; assembler added errata NOP
  2958                           
  2959                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1138:         if 
      +                          (*fmt[0] == 'p') {
  2960  0011D4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2961  0011D8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2962  0011DC  CFDE FFF6          	movff	postinc2,tblptrl
  2963  0011E0  CFDD FFF7          	movff	postdec2,tblptrh
  2964  0011E4                     	if	0	;tblptru may be non-zero
  2965  0011E4                     	endif
  2966  0011E4                     	if	0	;tblptru may be non-zero
  2967  0011E4                     	endif
  2968  0011E4  0008               	tblrd		*
  2969  0011E6  FFFF               	dw	65535	; errata NOP
  2970  0011E8  50F5               	movf	tablat,w,c
  2971  0011EA  0A70               	xorlw	112
  2972  0011EC  A4D8               	btfss	status,2,c
  2973  0011EE  EFFB  F008         	goto	u4391
  2974  0011F2  EFFE  F008         	goto	u4390
  2975  0011F6                     u4391:
  2976  0011F6  FFFF               	dw	65535	; assembler added errata NOP
  2977  0011F8  EF42  F009         	goto	l3681
  2978  0011FC                     u4390:
  2979  0011FC  FFFF               	dw	65535	; assembler added errata NOP
  2980  0011FE                     
  2981                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1140:            
      +                           ++*fmt;
  2982  0011FE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2983  001202  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2984  001206  2ADE               	incf	postinc2,f,c
  2985  001208  0E00               	movlw	0
  2986  00120A  22DD               	addwfc	postdec2,f,c
  2987                           
  2988                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1141:            
      +                           llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  2989  00120C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2990  001210  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2991  001214  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2992  001218  0E02               	movlw	2
  2993  00121A  26DE               	addwf	postinc2,f,c
  2994  00121C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2995  001220  0E00               	movlw	0
  2996  001222  22DD               	addwfc	postdec2,f,c
  2997  001224  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2998  001228  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2999  00122C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3000  001230  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3001  001234  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3002  001238  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3003  00123C  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3004  00123E  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3005  001240  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3006  001242  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3007  001244  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3008  001246  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3009  001248                     
  3010                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1143:            
      +                           return xtoa(fp, llu, 'x');
  3011  001248  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  3012  00124C  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3013  001250  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  3014  001254  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3015  001258  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3016  00125C  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3017  001260  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3018  001264  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3019  001268  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3020  00126C  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3021  001270  0E78               	movlw	120
  3022  001272  6E26               	movwf	xtoa@x^0,c
  3023  001274  EC90  F015         	call	_xtoa	;wreg free
  3024  001278  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  3025  00127C  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3026  001280  EFDC  F00C         	goto	l1033
  3027  001284                     l3681:
  3028  001284  FFFF               	dw	65535	; assembler added errata NOP
  3029                           
  3030                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1149:         if 
      +                          (*fmt[0] == 's') {
  3031  001286  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3032  00128A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3033  00128E  CFDE FFF6          	movff	postinc2,tblptrl
  3034  001292  CFDD FFF7          	movff	postdec2,tblptrh
  3035  001296                     	if	0	;tblptru may be non-zero
  3036  001296                     	endif
  3037  001296                     	if	0	;tblptru may be non-zero
  3038  001296                     	endif
  3039  001296  0008               	tblrd		*
  3040  001298  FFFF               	dw	65535	; errata NOP
  3041  00129A  50F5               	movf	tablat,w,c
  3042  00129C  0A73               	xorlw	115
  3043  00129E  A4D8               	btfss	status,2,c
  3044  0012A0  EF54  F009         	goto	u4401
  3045  0012A4  EF57  F009         	goto	u4400
  3046  0012A8                     u4401:
  3047  0012A8  FFFF               	dw	65535	; assembler added errata NOP
  3048  0012AA  EF83  F009         	goto	l3689
  3049  0012AE                     u4400:
  3050  0012AE  FFFF               	dw	65535	; assembler added errata NOP
  3051  0012B0                     
  3052                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1151:            
      +                           ++*fmt;
  3053  0012B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3054  0012B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3055  0012B8  2ADE               	incf	postinc2,f,c
  3056  0012BA  0E00               	movlw	0
  3057  0012BC  22DD               	addwfc	postdec2,f,c
  3058                           
  3059                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1152:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  3060  0012BE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3061  0012C2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3062  0012C6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3063  0012CA  0E02               	movlw	2
  3064  0012CC  26DE               	addwf	postinc2,f,c
  3065  0012CE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3066  0012D2  0E00               	movlw	0
  3067  0012D4  22DD               	addwfc	postdec2,f,c
  3068  0012D6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3069  0012DA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3070  0012DE  CFDE F04D          	movff	postinc2,vfpfcnvrt@cp
  3071  0012E2  CFDD F04E          	movff	postdec2,vfpfcnvrt@cp+1
  3072  0012E6                     
  3073                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1154:            
      +                           return stoa(fp, cp);
  3074  0012E6  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  3075  0012EA  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3076  0012EE  C04D  F00C         	movff	vfpfcnvrt@cp,stoa@s
  3077  0012F2  C04E  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3078  0012F6  EC33  F01A         	call	_stoa	;wreg free
  3079  0012FA  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  3080  0012FE  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  3081  001302  EFDC  F00C         	goto	l1033
  3082  001306                     l3689:
  3083  001306  FFFF               	dw	65535	; assembler added errata NOP
  3084                           
  3085                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1161:         if 
      +                          (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  3086  001308  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3087  00130C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3088  001310  CFDE F001          	movff	postinc2,strncmp@_l
  3089  001314  CFDD F002          	movff	postdec2,strncmp@_l+1
  3090  001318  0E34               	movlw	low STR_59
  3091  00131A  6E03               	movwf	strncmp@_r^0,c
  3092  00131C  0E06               	movlw	high STR_59
  3093  00131E  6E04               	movwf	(strncmp@_r+1)^0,c
  3094  001320  0E00               	movlw	0
  3095  001322  6E06               	movwf	(strncmp@n+1)^0,c
  3096  001324  0E03               	movlw	3
  3097  001326  6E05               	movwf	strncmp@n^0,c
  3098  001328  EC02  F01F         	call	_strncmp	;wreg free
  3099  00132C  5001               	movf	?_strncmp^0,w,c
  3100  00132E  1002               	iorwf	(?_strncmp+1)^0,w,c
  3101  001330  A4D8               	btfss	status,2,c
  3102  001332  EF9D  F009         	goto	u4411
  3103  001336  EFA0  F009         	goto	u4410
  3104  00133A                     u4411:
  3105  00133A  FFFF               	dw	65535	; assembler added errata NOP
  3106  00133C  EFE1  F009         	goto	l3697
  3107  001340                     u4410:
  3108  001340  FFFF               	dw	65535	; assembler added errata NOP
  3109  001342                     
  3110                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1163:            
      +                           *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  3111  001342  0E03               	movlw	3
  3112  001344  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3113  001348  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3114  00134C  26DE               	addwf	postinc2,f,c
  3115  00134E  0E00               	movlw	0
  3116  001350  22DD               	addwfc	postdec2,f,c
  3117                           
  3118                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1164:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3119  001352  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3120  001356  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3121  00135A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3122  00135E  0E02               	movlw	2
  3123  001360  26DE               	addwf	postinc2,f,c
  3124  001362  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3125  001366  0E00               	movlw	0
  3126  001368  22DD               	addwfc	postdec2,f,c
  3127  00136A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3128  00136E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3129  001372  50DF               	movf	indf2,w,c
  3130  001374  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3131  001376  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  3132  001378  6E60               	movwf	vfpfcnvrt@llu^0,c
  3133  00137A  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  3134  00137C  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3135  00137E  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3136  001380  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3137  001382  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3138  001384  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3139  001386  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3140  001388                     l3693:
  3141  001388  FFFF               	dw	65535	; assembler added errata NOP
  3142                           
  3143                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1166:            
      +                           return utoa(fp, llu);
  3144  00138A  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  3145  00138E  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3146  001392  C060  F01E         	movff	vfpfcnvrt@llu,utoa@d
  3147  001396  C061  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3148  00139A  C062  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3149  00139E  C063  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3150  0013A2  C064  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3151  0013A6  C065  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3152  0013AA  C066  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3153  0013AE  C067  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3154  0013B2  EC26  F017         	call	_utoa	;wreg free
  3155  0013B6  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  3156  0013BA  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  3157  0013BE  EFDC  F00C         	goto	l1033
  3158  0013C2                     l3697:
  3159  0013C2  FFFF               	dw	65535	; assembler added errata NOP
  3160                           
  3161                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1172:         if 
      +                          (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  3162  0013C4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3163  0013C8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3164  0013CC  CFDE F001          	movff	postinc2,strncmp@_l
  3165  0013D0  CFDD F002          	movff	postdec2,strncmp@_l+1
  3166  0013D4  0E35               	movlw	low (STR_59+1)
  3167  0013D6  6E03               	movwf	strncmp@_r^0,c
  3168  0013D8  0E06               	movlw	high (STR_59+1)
  3169  0013DA  6E04               	movwf	(strncmp@_r+1)^0,c
  3170  0013DC  0E00               	movlw	0
  3171  0013DE  6E06               	movwf	(strncmp@n+1)^0,c
  3172  0013E0  0E02               	movlw	2
  3173  0013E2  6E05               	movwf	strncmp@n^0,c
  3174  0013E4  EC02  F01F         	call	_strncmp	;wreg free
  3175  0013E8  5001               	movf	?_strncmp^0,w,c
  3176  0013EA  1002               	iorwf	(?_strncmp+1)^0,w,c
  3177  0013EC  A4D8               	btfss	status,2,c
  3178  0013EE  EFFB  F009         	goto	u4421
  3179  0013F2  EFFE  F009         	goto	u4420
  3180  0013F6                     u4421:
  3181  0013F6  FFFF               	dw	65535	; assembler added errata NOP
  3182  0013F8  EF27  F00A         	goto	l3705
  3183  0013FC                     u4420:
  3184  0013FC  FFFF               	dw	65535	; assembler added errata NOP
  3185  0013FE                     
  3186                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1174:            
      +                           *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  3187  0013FE  0E02               	movlw	2
  3188  001400  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3189  001404  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3190  001408  26DE               	addwf	postinc2,f,c
  3191  00140A  0E00               	movlw	0
  3192  00140C  22DD               	addwfc	postdec2,f,c
  3193                           
  3194                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1175:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  3195  00140E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3196  001412  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3197  001416  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3198  00141A  0E02               	movlw	2
  3199  00141C  26DE               	addwf	postinc2,f,c
  3200  00141E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3201  001422  0E00               	movlw	0
  3202  001424  22DD               	addwfc	postdec2,f,c
  3203  001426  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3204  00142A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3205  00142E  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3206  001432  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3207  001436  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3208  00143A  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3209  00143E  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3210  001440  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3211  001442  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3212  001444  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3213  001446  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3214  001448  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3215  00144A  EFC4  F009         	goto	l3693
  3216  00144E                     l3705:
  3217  00144E  FFFF               	dw	65535	; assembler added errata NOP
  3218                           
  3219                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1182:         if 
      +                          (*fmt[0] == 'u') {
  3220  001450  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3221  001454  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3222  001458  CFDE FFF6          	movff	postinc2,tblptrl
  3223  00145C  CFDD FFF7          	movff	postdec2,tblptrh
  3224  001460                     	if	0	;tblptru may be non-zero
  3225  001460                     	endif
  3226  001460                     	if	0	;tblptru may be non-zero
  3227  001460                     	endif
  3228  001460  0008               	tblrd		*
  3229  001462  FFFF               	dw	65535	; errata NOP
  3230  001464  50F5               	movf	tablat,w,c
  3231  001466  0A75               	xorlw	117
  3232  001468  A4D8               	btfss	status,2,c
  3233  00146A  EF39  F00A         	goto	u4431
  3234  00146E  EF3C  F00A         	goto	u4430
  3235  001472                     u4431:
  3236  001472  FFFF               	dw	65535	; assembler added errata NOP
  3237  001474  EF64  F00A         	goto	l3713
  3238  001478                     u4430:
  3239  001478  FFFF               	dw	65535	; assembler added errata NOP
  3240  00147A                     
  3241                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1184:            
      +                           ++*fmt;
  3242  00147A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3243  00147E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3244  001482  2ADE               	incf	postinc2,f,c
  3245  001484  0E00               	movlw	0
  3246  001486  22DD               	addwfc	postdec2,f,c
  3247                           
  3248                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1185:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3249  001488  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3250  00148C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3251  001490  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3252  001494  0E02               	movlw	2
  3253  001496  26DE               	addwf	postinc2,f,c
  3254  001498  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3255  00149C  0E00               	movlw	0
  3256  00149E  22DD               	addwfc	postdec2,f,c
  3257  0014A0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3258  0014A4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3259  0014A8  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3260  0014AC  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3261  0014B0  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3262  0014B4  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3263  0014B8  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3264  0014BA  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3265  0014BC  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3266  0014BE  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3267  0014C0  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3268  0014C2  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3269  0014C4  EFC4  F009         	goto	l3693
  3270  0014C8                     l3713:
  3271  0014C8  FFFF               	dw	65535	; assembler added errata NOP
  3272                           
  3273                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1236:         if 
      +                          (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  3274  0014CA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3275  0014CE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3276  0014D2  CFDE F001          	movff	postinc2,strncmp@_l
  3277  0014D6  CFDD F002          	movff	postdec2,strncmp@_l+1
  3278  0014DA  0E4B               	movlw	low STR_69
  3279  0014DC  6E03               	movwf	strncmp@_r^0,c
  3280  0014DE  0E06               	movlw	high STR_69
  3281  0014E0  6E04               	movwf	(strncmp@_r+1)^0,c
  3282  0014E2  0E00               	movlw	0
  3283  0014E4  6E06               	movwf	(strncmp@n+1)^0,c
  3284  0014E6  0E02               	movlw	2
  3285  0014E8  6E05               	movwf	strncmp@n^0,c
  3286  0014EA  EC02  F01F         	call	_strncmp	;wreg free
  3287  0014EE  5001               	movf	?_strncmp^0,w,c
  3288  0014F0  1002               	iorwf	(?_strncmp+1)^0,w,c
  3289  0014F2  A4D8               	btfss	status,2,c
  3290  0014F4  EF7E  F00A         	goto	u4441
  3291  0014F8  EF81  F00A         	goto	u4440
  3292  0014FC                     u4441:
  3293  0014FC  FFFF               	dw	65535	; assembler added errata NOP
  3294  0014FE  EFAA  F00A         	goto	l3721
  3295  001502                     u4440:
  3296  001502  FFFF               	dw	65535	; assembler added errata NOP
  3297  001504                     
  3298                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1238:            
      +                           *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  3299  001504  0E02               	movlw	2
  3300  001506  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3301  00150A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3302  00150E  26DE               	addwf	postinc2,f,c
  3303  001510  0E00               	movlw	0
  3304  001512  22DD               	addwfc	postdec2,f,c
  3305                           
  3306                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1239:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3307  001514  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3308  001518  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3309  00151C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3310  001520  0E02               	movlw	2
  3311  001522  26DE               	addwf	postinc2,f,c
  3312  001524  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3313  001528  0E00               	movlw	0
  3314  00152A  22DD               	addwfc	postdec2,f,c
  3315  00152C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3316  001530  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3317  001534  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3318  001538  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3319  00153C  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3320  001540  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3321  001544  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3322  001546  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3323  001548  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3324  00154A  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3325  00154C  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3326  00154E  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3327  001550  EFC4  F009         	goto	l3693
  3328  001554                     l3721:
  3329  001554  FFFF               	dw	65535	; assembler added errata NOP
  3330                           
  3331                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1249:         if 
      +                          (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((
      +                          sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  3332  001556  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3333  00155A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3334  00155E  CFDE F001          	movff	postinc2,strncmp@_l
  3335  001562  CFDD F002          	movff	postdec2,strncmp@_l+1
  3336  001566  0E38               	movlw	low STR_74
  3337  001568  6E03               	movwf	strncmp@_r^0,c
  3338  00156A  0E06               	movlw	high STR_74
  3339  00156C  6E04               	movwf	(strncmp@_r+1)^0,c
  3340  00156E  0E00               	movlw	0
  3341  001570  6E06               	movwf	(strncmp@n+1)^0,c
  3342  001572  0E03               	movlw	3
  3343  001574  6E05               	movwf	strncmp@n^0,c
  3344  001576  EC02  F01F         	call	_strncmp	;wreg free
  3345  00157A  5001               	movf	?_strncmp^0,w,c
  3346  00157C  1002               	iorwf	(?_strncmp+1)^0,w,c
  3347  00157E  B4D8               	btfsc	status,2,c
  3348  001580  EFC4  F00A         	goto	u4451
  3349  001584  EFC7  F00A         	goto	u4450
  3350  001588                     u4451:
  3351  001588  FFFF               	dw	65535	; assembler added errata NOP
  3352  00158A  EFE4  F00A         	goto	l3725
  3353  00158E                     u4450:
  3354  00158E  FFFF               	dw	65535	; assembler added errata NOP
  3355  001590  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3356  001594  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3357  001598  CFDE F001          	movff	postinc2,strncmp@_l
  3358  00159C  CFDD F002          	movff	postdec2,strncmp@_l+1
  3359  0015A0  0E20               	movlw	low STR_78
  3360  0015A2  6E03               	movwf	strncmp@_r^0,c
  3361  0015A4  0E06               	movlw	high STR_78
  3362  0015A6  6E04               	movwf	(strncmp@_r+1)^0,c
  3363  0015A8  0E00               	movlw	0
  3364  0015AA  6E06               	movwf	(strncmp@n+1)^0,c
  3365  0015AC  0E03               	movlw	3
  3366  0015AE  6E05               	movwf	strncmp@n^0,c
  3367  0015B0  EC02  F01F         	call	_strncmp	;wreg free
  3368  0015B4  5001               	movf	?_strncmp^0,w,c
  3369  0015B6  1002               	iorwf	(?_strncmp+1)^0,w,c
  3370  0015B8  A4D8               	btfss	status,2,c
  3371  0015BA  EFE1  F00A         	goto	u4461
  3372  0015BE  EFE4  F00A         	goto	u4460
  3373  0015C2                     u4461:
  3374  0015C2  FFFF               	dw	65535	; assembler added errata NOP
  3375  0015C4  EF3B  F00B         	goto	l3735
  3376  0015C8                     u4460:
  3377  0015C8                     l3725:
  3378  0015C8  FFFF               	dw	65535	; assembler added errata NOP
  3379                           
  3380                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1250: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1252:             c = (*fmt)
      +                          [2];
  3381  0015CA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3382  0015CE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3383  0015D2  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3384  0015D6  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3385  0015DA  0E02               	movlw	2
  3386  0015DC  2649               	addwf	??_vfpfcnvrt^0,f,c
  3387  0015DE  0E00               	movlw	0
  3388  0015E0  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3389  0015E2  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3390  0015E6  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3391  0015EA                     	if	0	;tblptru may be non-zero
  3392  0015EA                     	endif
  3393  0015EA                     	if	0	;tblptru may be non-zero
  3394  0015EA                     	endif
  3395  0015EA  0008               	tblrd		*
  3396  0015EC  FFFF               	dw	65535	; errata NOP
  3397  0015EE  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  3398  0015F2                     
  3399                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1253:            
      +                           *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  3400  0015F2  0E03               	movlw	3
  3401  0015F4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3402  0015F8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3403  0015FC  26DE               	addwf	postinc2,f,c
  3404  0015FE  0E00               	movlw	0
  3405  001600  22DD               	addwfc	postdec2,f,c
  3406  001602                     
  3407                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1254:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3408  001602  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3409  001606  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3410  00160A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3411  00160E  0E02               	movlw	2
  3412  001610  26DE               	addwf	postinc2,f,c
  3413  001612  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3414  001616  0E00               	movlw	0
  3415  001618  22DD               	addwfc	postdec2,f,c
  3416  00161A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3417  00161E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3418  001622  50DF               	movf	indf2,w,c
  3419  001624  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3420  001626  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  3421  001628  6E60               	movwf	vfpfcnvrt@llu^0,c
  3422  00162A  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  3423  00162C  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3424  00162E  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3425  001630  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3426  001632  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3427  001634  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3428  001636  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3429  001638                     l3731:
  3430  001638  FFFF               	dw	65535	; assembler added errata NOP
  3431                           
  3432                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1256:            
      +                           return xtoa(fp, llu, c);
  3433  00163A  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  3434  00163E  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3435  001642  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  3436  001646  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3437  00164A  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3438  00164E  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3439  001652  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3440  001656  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3441  00165A  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3442  00165E  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3443  001662  C05F  F026         	movff	vfpfcnvrt@c,xtoa@x
  3444  001666  EC90  F015         	call	_xtoa	;wreg free
  3445  00166A  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  3446  00166E  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3447  001672  EFDC  F00C         	goto	l1033
  3448  001676                     l3735:
  3449  001676  FFFF               	dw	65535	; assembler added errata NOP
  3450                           
  3451                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1262:         if 
      +                          (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((size
      +                          of("hX")/sizeof("hX"[0]))-1))) {
  3452  001678  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3453  00167C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3454  001680  CFDE F001          	movff	postinc2,strncmp@_l
  3455  001684  CFDD F002          	movff	postdec2,strncmp@_l+1
  3456  001688  0E39               	movlw	low (STR_74+1)
  3457  00168A  6E03               	movwf	strncmp@_r^0,c
  3458  00168C  0E06               	movlw	high (STR_74+1)
  3459  00168E  6E04               	movwf	(strncmp@_r+1)^0,c
  3460  001690  0E00               	movlw	0
  3461  001692  6E06               	movwf	(strncmp@n+1)^0,c
  3462  001694  0E02               	movlw	2
  3463  001696  6E05               	movwf	strncmp@n^0,c
  3464  001698  EC02  F01F         	call	_strncmp	;wreg free
  3465  00169C  5001               	movf	?_strncmp^0,w,c
  3466  00169E  1002               	iorwf	(?_strncmp+1)^0,w,c
  3467  0016A0  B4D8               	btfsc	status,2,c
  3468  0016A2  EF55  F00B         	goto	u4471
  3469  0016A6  EF58  F00B         	goto	u4470
  3470  0016AA                     u4471:
  3471  0016AA  FFFF               	dw	65535	; assembler added errata NOP
  3472  0016AC  EF75  F00B         	goto	l3739
  3473  0016B0                     u4470:
  3474  0016B0  FFFF               	dw	65535	; assembler added errata NOP
  3475  0016B2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3476  0016B6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3477  0016BA  CFDE F001          	movff	postinc2,strncmp@_l
  3478  0016BE  CFDD F002          	movff	postdec2,strncmp@_l+1
  3479  0016C2  0E21               	movlw	low (STR_78+1)
  3480  0016C4  6E03               	movwf	strncmp@_r^0,c
  3481  0016C6  0E06               	movlw	high (STR_78+1)
  3482  0016C8  6E04               	movwf	(strncmp@_r+1)^0,c
  3483  0016CA  0E00               	movlw	0
  3484  0016CC  6E06               	movwf	(strncmp@n+1)^0,c
  3485  0016CE  0E02               	movlw	2
  3486  0016D0  6E05               	movwf	strncmp@n^0,c
  3487  0016D2  EC02  F01F         	call	_strncmp	;wreg free
  3488  0016D6  5001               	movf	?_strncmp^0,w,c
  3489  0016D8  1002               	iorwf	(?_strncmp+1)^0,w,c
  3490  0016DA  A4D8               	btfss	status,2,c
  3491  0016DC  EF72  F00B         	goto	u4481
  3492  0016E0  EF75  F00B         	goto	u4480
  3493  0016E4                     u4481:
  3494  0016E4  FFFF               	dw	65535	; assembler added errata NOP
  3495  0016E6  EFB2  F00B         	goto	l3749
  3496  0016EA                     u4480:
  3497  0016EA                     l3739:
  3498  0016EA  FFFF               	dw	65535	; assembler added errata NOP
  3499                           
  3500                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1263: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1265:             c = (*fmt)
      +                          [1];
  3501  0016EC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3502  0016F0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3503  0016F4  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3504  0016F8  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3505  0016FC  0E01               	movlw	1
  3506  0016FE  2649               	addwf	??_vfpfcnvrt^0,f,c
  3507  001700  0E00               	movlw	0
  3508  001702  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3509  001704  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3510  001708  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3511  00170C                     	if	0	;tblptru may be non-zero
  3512  00170C                     	endif
  3513  00170C                     	if	0	;tblptru may be non-zero
  3514  00170C                     	endif
  3515  00170C  0008               	tblrd		*
  3516  00170E  FFFF               	dw	65535	; errata NOP
  3517  001710  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  3518  001714                     
  3519                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1266:            
      +                           *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  3520  001714  0E02               	movlw	2
  3521  001716  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3522  00171A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3523  00171E  26DE               	addwf	postinc2,f,c
  3524  001720  0E00               	movlw	0
  3525  001722  22DD               	addwfc	postdec2,f,c
  3526  001724                     
  3527                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1267:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  3528  001724  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3529  001728  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3530  00172C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3531  001730  0E02               	movlw	2
  3532  001732  26DE               	addwf	postinc2,f,c
  3533  001734  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3534  001738  0E00               	movlw	0
  3535  00173A  22DD               	addwfc	postdec2,f,c
  3536  00173C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3537  001740  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3538  001744  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3539  001748  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3540  00174C  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3541  001750  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3542  001754  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3543  001756  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3544  001758  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3545  00175A  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3546  00175C  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3547  00175E  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3548  001760  EF1C  F00B         	goto	l3731
  3549  001764                     l3749:
  3550  001764  FFFF               	dw	65535	; assembler added errata NOP
  3551                           
  3552                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1274:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  3553  001766  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3554  00176A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3555  00176E  CFDE FFF6          	movff	postinc2,tblptrl
  3556  001772  CFDD FFF7          	movff	postdec2,tblptrh
  3557  001776                     	if	0	;tblptru may be non-zero
  3558  001776                     	endif
  3559  001776                     	if	0	;tblptru may be non-zero
  3560  001776                     	endif
  3561  001776  0008               	tblrd		*
  3562  001778  FFFF               	dw	65535	; errata NOP
  3563  00177A  50F5               	movf	tablat,w,c
  3564  00177C  0A78               	xorlw	120
  3565  00177E  B4D8               	btfsc	status,2,c
  3566  001780  EFC4  F00B         	goto	u4491
  3567  001784  EFC7  F00B         	goto	u4490
  3568  001788                     u4491:
  3569  001788  FFFF               	dw	65535	; assembler added errata NOP
  3570  00178A  EFDC  F00B         	goto	l3753
  3571  00178E                     u4490:
  3572  00178E  FFFF               	dw	65535	; assembler added errata NOP
  3573  001790  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3574  001794  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3575  001798  CFDE FFF6          	movff	postinc2,tblptrl
  3576  00179C  CFDD FFF7          	movff	postdec2,tblptrh
  3577  0017A0                     	if	0	;tblptru may be non-zero
  3578  0017A0                     	endif
  3579  0017A0                     	if	0	;tblptru may be non-zero
  3580  0017A0                     	endif
  3581  0017A0  0008               	tblrd		*
  3582  0017A2  FFFF               	dw	65535	; errata NOP
  3583  0017A4  50F5               	movf	tablat,w,c
  3584  0017A6  0A58               	xorlw	88
  3585  0017A8  A4D8               	btfss	status,2,c
  3586  0017AA  EFD9  F00B         	goto	u4501
  3587  0017AE  EFDC  F00B         	goto	u4500
  3588  0017B2                     u4501:
  3589  0017B2  FFFF               	dw	65535	; assembler added errata NOP
  3590  0017B4  EF10  F00C         	goto	l3763
  3591  0017B8                     u4500:
  3592  0017B8                     l3753:
  3593  0017B8  FFFF               	dw	65535	; assembler added errata NOP
  3594                           
  3595                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1276:            
      +                           c = (*fmt)[0];
  3596  0017BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3597  0017BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3598  0017C2  CFDE FFF6          	movff	postinc2,tblptrl
  3599  0017C6  CFDD FFF7          	movff	postdec2,tblptrh
  3600  0017CA                     	if	0	;tblptru may be non-zero
  3601  0017CA                     	endif
  3602  0017CA                     	if	0	;tblptru may be non-zero
  3603  0017CA                     	endif
  3604  0017CA  0008               	tblrd		*
  3605  0017CC  FFFF               	dw	65535	; errata NOP
  3606  0017CE  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  3607  0017D2                     
  3608                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1277:            
      +                           ++*fmt;
  3609  0017D2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3610  0017D6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3611  0017DA  2ADE               	incf	postinc2,f,c
  3612  0017DC  0E00               	movlw	0
  3613  0017DE  22DD               	addwfc	postdec2,f,c
  3614  0017E0                     
  3615                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1278:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3616  0017E0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3617  0017E4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3618  0017E8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3619  0017EC  0E02               	movlw	2
  3620  0017EE  26DE               	addwf	postinc2,f,c
  3621  0017F0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3622  0017F4  0E00               	movlw	0
  3623  0017F6  22DD               	addwfc	postdec2,f,c
  3624  0017F8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3625  0017FC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3626  001800  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3627  001804  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3628  001808  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3629  00180C  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3630  001810  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3631  001812  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3632  001814  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3633  001816  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3634  001818  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3635  00181A  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3636  00181C  EF1C  F00B         	goto	l3731
  3637  001820                     l3763:
  3638  001820  FFFF               	dw	65535	; assembler added errata NOP
  3639                           
  3640                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1337:         if 
      +                          (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((size
      +                          of("zX")/sizeof("zX"[0]))-1))) {
  3641  001822  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3642  001826  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3643  00182A  CFDE F001          	movff	postinc2,strncmp@_l
  3644  00182E  CFDD F002          	movff	postdec2,strncmp@_l+1
  3645  001832  0E4E               	movlw	low STR_92
  3646  001834  6E03               	movwf	strncmp@_r^0,c
  3647  001836  0E06               	movlw	high STR_92
  3648  001838  6E04               	movwf	(strncmp@_r+1)^0,c
  3649  00183A  0E00               	movlw	0
  3650  00183C  6E06               	movwf	(strncmp@n+1)^0,c
  3651  00183E  0E02               	movlw	2
  3652  001840  6E05               	movwf	strncmp@n^0,c
  3653  001842  EC02  F01F         	call	_strncmp	;wreg free
  3654  001846  5001               	movf	?_strncmp^0,w,c
  3655  001848  1002               	iorwf	(?_strncmp+1)^0,w,c
  3656  00184A  B4D8               	btfsc	status,2,c
  3657  00184C  EF2A  F00C         	goto	u4511
  3658  001850  EF2D  F00C         	goto	u4510
  3659  001854                     u4511:
  3660  001854  FFFF               	dw	65535	; assembler added errata NOP
  3661  001856  EF4A  F00C         	goto	l3767
  3662  00185A                     u4510:
  3663  00185A  FFFF               	dw	65535	; assembler added errata NOP
  3664  00185C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3665  001860  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3666  001864  CFDE F001          	movff	postinc2,strncmp@_l
  3667  001868  CFDD F002          	movff	postdec2,strncmp@_l+1
  3668  00186C  0E3C               	movlw	low STR_96
  3669  00186E  6E03               	movwf	strncmp@_r^0,c
  3670  001870  0E06               	movlw	high STR_96
  3671  001872  6E04               	movwf	(strncmp@_r+1)^0,c
  3672  001874  0E00               	movlw	0
  3673  001876  6E06               	movwf	(strncmp@n+1)^0,c
  3674  001878  0E02               	movlw	2
  3675  00187A  6E05               	movwf	strncmp@n^0,c
  3676  00187C  EC02  F01F         	call	_strncmp	;wreg free
  3677  001880  5001               	movf	?_strncmp^0,w,c
  3678  001882  1002               	iorwf	(?_strncmp+1)^0,w,c
  3679  001884  A4D8               	btfss	status,2,c
  3680  001886  EF47  F00C         	goto	u4521
  3681  00188A  EF4A  F00C         	goto	u4520
  3682  00188E                     u4521:
  3683  00188E  FFFF               	dw	65535	; assembler added errata NOP
  3684  001890  EF87  F00C         	goto	l3777
  3685  001894                     u4520:
  3686  001894                     l3767:
  3687  001894  FFFF               	dw	65535	; assembler added errata NOP
  3688                           
  3689                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1338: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1340:             c = (*fmt)
      +                          [1];
  3690  001896  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3691  00189A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3692  00189E  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3693  0018A2  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3694  0018A6  0E01               	movlw	1
  3695  0018A8  2649               	addwf	??_vfpfcnvrt^0,f,c
  3696  0018AA  0E00               	movlw	0
  3697  0018AC  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3698  0018AE  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3699  0018B2  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3700  0018B6                     	if	0	;tblptru may be non-zero
  3701  0018B6                     	endif
  3702  0018B6                     	if	0	;tblptru may be non-zero
  3703  0018B6                     	endif
  3704  0018B6  0008               	tblrd		*
  3705  0018B8  FFFF               	dw	65535	; errata NOP
  3706  0018BA  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  3707  0018BE                     
  3708                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1341:            
      +                           *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  3709  0018BE  0E02               	movlw	2
  3710  0018C0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3711  0018C4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3712  0018C8  26DE               	addwf	postinc2,f,c
  3713  0018CA  0E00               	movlw	0
  3714  0018CC  22DD               	addwfc	postdec2,f,c
  3715  0018CE                     
  3716                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1342:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3717  0018CE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3718  0018D2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3719  0018D6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3720  0018DA  0E02               	movlw	2
  3721  0018DC  26DE               	addwf	postinc2,f,c
  3722  0018DE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3723  0018E2  0E00               	movlw	0
  3724  0018E4  22DD               	addwfc	postdec2,f,c
  3725  0018E6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3726  0018EA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3727  0018EE  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3728  0018F2  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3729  0018F6  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3730  0018FA  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3731  0018FE  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3732  001900  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3733  001902  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3734  001904  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3735  001906  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3736  001908  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3737  00190A  EF1C  F00B         	goto	l3731
  3738  00190E                     l3777:
  3739  00190E  FFFF               	dw	65535	; assembler added errata NOP
  3740                           
  3741                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  3742  001910  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3743  001914  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3744  001918  CFDE FFF6          	movff	postinc2,tblptrl
  3745  00191C  CFDD FFF7          	movff	postdec2,tblptrh
  3746  001920                     	if	0	;tblptru may be non-zero
  3747  001920                     	endif
  3748  001920                     	if	0	;tblptru may be non-zero
  3749  001920                     	endif
  3750  001920  0008               	tblrd		*
  3751  001922  FFFF               	dw	65535	; errata NOP
  3752  001924  50F5               	movf	tablat,w,c
  3753  001926  0A25               	xorlw	37
  3754  001928  A4D8               	btfss	status,2,c
  3755  00192A  EF99  F00C         	goto	u4531
  3756  00192E  EF9C  F00C         	goto	u4530
  3757  001932                     u4531:
  3758  001932  FFFF               	dw	65535	; assembler added errata NOP
  3759  001934  EFB5  F00C         	goto	l3787
  3760  001938                     u4530:
  3761  001938  FFFF               	dw	65535	; assembler added errata NOP
  3762  00193A                     
  3763                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  3764  00193A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3765  00193E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3766  001942  2ADE               	incf	postinc2,f,c
  3767  001944  0E00               	movlw	0
  3768  001946  22DD               	addwfc	postdec2,f,c
  3769  001948                     
  3770                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  3771  001948  0E00               	movlw	0
  3772  00194A  6E02               	movwf	(fputc@c+1)^0,c
  3773  00194C  0E25               	movlw	37
  3774  00194E  6E01               	movwf	fputc@c^0,c
  3775  001950  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3776  001954  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3777  001958  EC93  F000         	call	_fputc	;wreg free
  3778  00195C                     l3783:
  3779  00195C  FFFF               	dw	65535	; assembler added errata NOP
  3780                           
  3781                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  3782  00195E  0E00               	movlw	0
  3783  001960  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  3784  001962  0E01               	movlw	1
  3785  001964  6E43               	movwf	?_vfpfcnvrt^0,c
  3786  001966  EFDC  F00C         	goto	l1033
  3787  00196A                     l3787:
  3788  00196A  FFFF               	dw	65535	; assembler added errata NOP
  3789                           
  3790                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  3791  00196C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3792  001970  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3793  001974  2ADE               	incf	postinc2,f,c
  3794  001976  0E00               	movlw	0
  3795  001978  22DD               	addwfc	postdec2,f,c
  3796  00197A  EF1F  F008         	goto	l3639
  3797  00197E                     l3793:
  3798  00197E  FFFF               	dw	65535	; assembler added errata NOP
  3799                           
  3800                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  3801  001980  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3802  001984  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3803  001988  CFDE FFF6          	movff	postinc2,tblptrl
  3804  00198C  CFDD FFF7          	movff	postdec2,tblptrh
  3805  001990                     	if	0	;tblptru may be non-zero
  3806  001990                     	endif
  3807  001990                     	if	0	;tblptru may be non-zero
  3808  001990                     	endif
  3809  001990  0008               	tblrd		*
  3810  001992  FFFF               	dw	65535	; errata NOP
  3811  001994  50F5               	movf	tablat,w,c
  3812  001996  6E01               	movwf	fputc@c^0,c
  3813  001998  6A02               	clrf	(fputc@c+1)^0,c
  3814  00199A  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3815  00199E  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3816  0019A2  EC93  F000         	call	_fputc	;wreg free
  3817  0019A6                     
  3818                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  3819  0019A6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3820  0019AA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3821  0019AE  2ADE               	incf	postinc2,f,c
  3822  0019B0  0E00               	movlw	0
  3823  0019B2  22DD               	addwfc	postdec2,f,c
  3824  0019B4  EFAE  F00C         	goto	l3783
  3825  0019B8                     l1033:
  3826  0019B8  FFFF               	dw	65535	; assembler added errata NOP
  3827  0019BA  0012               	return		;funcret
  3828  0019BC  FFFF               	dw	65535	; errata NOP
  3829  0019BE                     __end_of_vfpfcnvrt:
  3830                           	callstack 0
  3831                           
  3832 ;; *************** function _xtoa *****************
  3833 ;; Defined at:
  3834 ;;		line 623 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3837 ;;		 -> vsnprintf@f(6), 
  3838 ;;  d               8   29[COMRAM] unsigned long long 
  3839 ;;  x               1   37[COMRAM] unsigned char 
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;  n               8   54[COMRAM] unsigned long long 
  3842 ;;  c               2   64[COMRAM] int 
  3843 ;;  i               2   62[COMRAM] int 
  3844 ;;  w               2   52[COMRAM] int 
  3845 ;;  p               2   50[COMRAM] int 
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  2   27[COMRAM] int 
  3848 ;; Registers used:
  3849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3855 ;;      Params:        11       0       0       0       0       0       0
  3856 ;;      Locals:        20       0       0       0       0       0       0
  3857 ;;      Temps:          8       0       0       0       0       0       0
  3858 ;;      Totals:        39       0       0       0       0       0       0
  3859 ;;Total ram usage:       39 bytes
  3860 ;; Hardware stack levels used:    1
  3861 ;; Hardware stack levels required when called:    5
  3862 ;; This function calls:
  3863 ;;		_isalpha
  3864 ;;		_isupper
  3865 ;;		_pad
  3866 ;;		_toupper
  3867 ;; This function is called by:
  3868 ;;		_vfpfcnvrt
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871                           
  3872                           	psect	text5
  3873  002B20                     __ptext5:
  3874                           	callstack 0
  3875  002B20                     _xtoa:
  3876                           	callstack 0
  3877  002B20  FFFF               	dw	65535	; assembler added errata NOP
  3878  002B22                     
  3879                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 623: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 624: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 625:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources
      +                          \c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0)) {
  3880  002B22  0100               	movlb	0	; () banked
  3881  002B24  BF89               	btfsc	(_prec+1)& (0+255),7,b
  3882  002B26  EF97  F015         	goto	u3411
  3883  002B2A  EF9A  F015         	goto	u3410
  3884  002B2E                     u3411:
  3885  002B2E  FFFF               	dw	65535	; assembler added errata NOP
  3886  002B30  EF9C  F015         	goto	l3149
  3887  002B34                     u3410:
  3888  002B34  FFFF               	dw	65535	; assembler added errata NOP
  3889  002B36                     
  3890                           ; BSR set to: 0
  3891                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 630:         flag
      +                          s &= ~(1 << 1);
  3892  002B36  927D               	bcf	_flags^0,1,c
  3893  002B38                     l3149:
  3894  002B38  FFFF               	dw	65535	; assembler added errata NOP
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 632:     p = (0 <
      +                           prec) ? prec : 1;
  3898  002B3A  BF89               	btfsc	(_prec+1)& (0+255),7,b
  3899  002B3C  EFAB  F015         	goto	u3420
  3900  002B40  5189               	movf	(_prec+1)& (0+255),w,b
  3901  002B42  E106               	bnz	u3421
  3902  002B44  0588               	decf	_prec& (0+255),w,b
  3903  002B46  B0D8               	btfsc	status,0,c
  3904  002B48  EFA8  F015         	goto	u3421
  3905  002B4C  EFAB  F015         	goto	u3420
  3906  002B50                     u3421:
  3907  002B50  FFFF               	dw	65535	; assembler added errata NOP
  3908  002B52  EFB2  F015         	goto	l971
  3909  002B56                     u3420:
  3910  002B56  FFFF               	dw	65535	; assembler added errata NOP
  3911  002B58                     
  3912                           ; BSR set to: 0
  3913  002B58  0E00               	movlw	0
  3914  002B5A  6E34               	movwf	(xtoa@p+1)^0,c
  3915  002B5C  0E01               	movlw	1
  3916  002B5E  6E33               	movwf	xtoa@p^0,c
  3917  002B60  EFB7  F015         	goto	l973
  3918  002B64                     l971:
  3919  002B64  FFFF               	dw	65535	; assembler added errata NOP
  3920                           
  3921                           ; BSR set to: 0
  3922  002B66  C088  F033         	movff	_prec,xtoa@p
  3923  002B6A  C089  F034         	movff	_prec+1,xtoa@p+1
  3924  002B6E                     l973:
  3925  002B6E  FFFF               	dw	65535	; assembler added errata NOP
  3926                           
  3927                           ; BSR set to: 0
  3928                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 633:     w = widt
      +                          h;
  3929  002B70  C086  F035         	movff	_width,xtoa@w
  3930  002B74  C087  F036         	movff	_width+1,xtoa@w+1
  3931                           
  3932                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 634:     if (flag
      +                          s & (1 << 4)) {
  3933  002B78  A87D               	btfss	_flags^0,4,c
  3934  002B7A  EFC1  F015         	goto	u3431
  3935  002B7E  EFC4  F015         	goto	u3430
  3936  002B82                     u3431:
  3937  002B82  FFFF               	dw	65535	; assembler added errata NOP
  3938  002B84  EFC9  F015         	goto	l3155
  3939  002B88                     u3430:
  3940  002B88  FFFF               	dw	65535	; assembler added errata NOP
  3941  002B8A                     
  3942                           ; BSR set to: 0
  3943                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 635:         w -=
      +                           2;
  3944  002B8A  0EFE               	movlw	254
  3945  002B8C  2635               	addwf	xtoa@w^0,f,c
  3946  002B8E  0EFF               	movlw	255
  3947  002B90  2236               	addwfc	(xtoa@w+1)^0,f,c
  3948  002B92                     l3155:
  3949  002B92  FFFF               	dw	65535	; assembler added errata NOP
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 639:     n = d;
  3953  002B94  C01E  F037         	movff	xtoa@d,xtoa@n
  3954  002B98  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  3955  002B9C  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  3956  002BA0  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  3957  002BA4  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  3958  002BA8  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  3959  002BAC  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  3960  002BB0  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  3961  002BB4                     
  3962                           ; BSR set to: 0
  3963                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 640:     i = size
      +                          of(dbuf) - 1;
  3964  002BB4  0E00               	movlw	0
  3965  002BB6  6E40               	movwf	(xtoa@i+1)^0,c
  3966  002BB8  0E1F               	movlw	31
  3967  002BBA  6E3F               	movwf	xtoa@i^0,c
  3968  002BBC                     
  3969                           ; BSR set to: 0
  3970                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 641:     dbuf[i] 
      +                          = '\0';
  3971  002BBC  0E00               	movlw	0
  3972  002BBE  6FAB               	movwf	(_dbuf+31)& (0+255),b
  3973                           
  3974                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3975  002BC0  EFA7  F016         	goto	l3191
  3976  002BC4                     l3161:
  3977  002BC4  FFFF               	dw	65535	; assembler added errata NOP
  3978                           
  3979                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 643:         --i;
  3980  002BC6  063F               	decf	xtoa@i^0,f,c
  3981  002BC8  A0D8               	btfss	status,0,c
  3982  002BCA  0640               	decf	(xtoa@i+1)^0,f,c
  3983  002BCC                     
  3984                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 644:         c = 
      +                          n & 0x0f;
  3985  002BCC  0E0F               	movlw	15
  3986  002BCE  1437               	andwf	xtoa@n^0,w,c
  3987  002BD0  6E41               	movwf	xtoa@c^0,c
  3988  002BD2  6A42               	clrf	(xtoa@c+1)^0,c
  3989  002BD4                     
  3990                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 645:         c = 
      +                          (c < 10) ? '0' + c : 'a' + (c - 10);
  3991  002BD4  BE42               	btfsc	(xtoa@c+1)^0,7,c
  3992  002BD6  EFF6  F015         	goto	u3441
  3993  002BDA  5042               	movf	(xtoa@c+1)^0,w,c
  3994  002BDC  E10A               	bnz	u3440
  3995  002BDE  0E0A               	movlw	10
  3996  002BE0  5C41               	subwf	xtoa@c^0,w,c
  3997  002BE2  A0D8               	btfss	status,0,c
  3998  002BE4  EFF6  F015         	goto	u3441
  3999  002BE8  EFF9  F015         	goto	u3440
  4000  002BEC                     u3441:
  4001  002BEC  FFFF               	dw	65535	; assembler added errata NOP
  4002  002BEE  EF02  F016         	goto	l3169
  4003  002BF2                     u3440:
  4004  002BF2  FFFF               	dw	65535	; assembler added errata NOP
  4005  002BF4  0E57               	movlw	87
  4006  002BF6  2441               	addwf	xtoa@c^0,w,c
  4007  002BF8  6E41               	movwf	xtoa@c^0,c
  4008  002BFA  0E00               	movlw	0
  4009  002BFC  2042               	addwfc	(xtoa@c+1)^0,w,c
  4010  002BFE  6E42               	movwf	(xtoa@c+1)^0,c
  4011  002C00  EF09  F016         	goto	l980
  4012  002C04                     l3169:
  4013  002C04  FFFF               	dw	65535	; assembler added errata NOP
  4014  002C06  0E30               	movlw	48
  4015  002C08  2441               	addwf	xtoa@c^0,w,c
  4016  002C0A  6E41               	movwf	xtoa@c^0,c
  4017  002C0C  0E00               	movlw	0
  4018  002C0E  2042               	addwfc	(xtoa@c+1)^0,w,c
  4019  002C10  6E42               	movwf	(xtoa@c+1)^0,c
  4020  002C12                     l980:
  4021  002C12  FFFF               	dw	65535	; assembler added errata NOP
  4022  002C14  0EBF               	movlw	191
  4023  002C16  6E27               	movwf	??_xtoa^0,c
  4024  002C18  0EFF               	movlw	255
  4025  002C1A  6E28               	movwf	(??_xtoa+1)^0,c
  4026  002C1C  5026               	movf	xtoa@x^0,w,c
  4027  002C1E  6E29               	movwf	(??_xtoa+2)^0,c
  4028  002C20  6A2A               	clrf	(??_xtoa+3)^0,c
  4029  002C22  5027               	movf	??_xtoa^0,w,c
  4030  002C24  2629               	addwf	(??_xtoa+2)^0,f,c
  4031  002C26  5028               	movf	(??_xtoa+1)^0,w,c
  4032  002C28  222A               	addwfc	(??_xtoa+3)^0,f,c
  4033  002C2A  502A               	movf	(??_xtoa+3)^0,w,c
  4034  002C2C  E10B               	bnz	u3450
  4035  002C2E  0E1A               	movlw	26
  4036  002C30  5C29               	subwf	(??_xtoa+2)^0,w,c
  4037  002C32  A0D8               	btfss	status,0,c
  4038  002C34  EF1E  F016         	goto	u3451
  4039  002C38  EF22  F016         	goto	u3450
  4040  002C3C                     u3451:
  4041  002C3C  FFFF               	dw	65535	; assembler added errata NOP
  4042  002C3E  0E01               	movlw	1
  4043  002C40  EF24  F016         	goto	u3460
  4044  002C44                     u3450:
  4045  002C44  FFFF               	dw	65535	; assembler added errata NOP
  4046  002C46  0E00               	movlw	0
  4047  002C48                     u3460:
  4048  002C48  FFFF               	dw	65535	; assembler added errata NOP
  4049  002C4A  6E2F               	movwf	_xtoa$1217^0,c
  4050  002C4C  6A30               	clrf	(_xtoa$1217+1)^0,c
  4051  002C4E  502F               	movf	_xtoa$1217^0,w,c
  4052  002C50  1030               	iorwf	(_xtoa$1217+1)^0,w,c
  4053  002C52  B4D8               	btfsc	status,2,c
  4054  002C54  EF2E  F016         	goto	u3471
  4055  002C58  EF31  F016         	goto	u3470
  4056  002C5C                     u3471:
  4057  002C5C  FFFF               	dw	65535	; assembler added errata NOP
  4058  002C5E  EF67  F016         	goto	l3183
  4059  002C62                     u3470:
  4060  002C62  FFFF               	dw	65535	; assembler added errata NOP
  4061  002C64  0E9F               	movlw	159
  4062  002C66  6E27               	movwf	??_xtoa^0,c
  4063  002C68  0EFF               	movlw	255
  4064  002C6A  6E28               	movwf	(??_xtoa+1)^0,c
  4065  002C6C  0E20               	movlw	32
  4066  002C6E  1041               	iorwf	xtoa@c^0,w,c
  4067  002C70  6E29               	movwf	(??_xtoa+2)^0,c
  4068  002C72  0E00               	movlw	0
  4069  002C74  1042               	iorwf	(xtoa@c+1)^0,w,c
  4070  002C76  6E2A               	movwf	(??_xtoa+3)^0,c
  4071  002C78  5027               	movf	??_xtoa^0,w,c
  4072  002C7A  2629               	addwf	(??_xtoa+2)^0,f,c
  4073  002C7C  5028               	movf	(??_xtoa+1)^0,w,c
  4074  002C7E  222A               	addwfc	(??_xtoa+3)^0,f,c
  4075  002C80  502A               	movf	(??_xtoa+3)^0,w,c
  4076  002C82  E10B               	bnz	u3480
  4077  002C84  0E1A               	movlw	26
  4078  002C86  5C29               	subwf	(??_xtoa+2)^0,w,c
  4079  002C88  A0D8               	btfss	status,0,c
  4080  002C8A  EF49  F016         	goto	u3481
  4081  002C8E  EF4D  F016         	goto	u3480
  4082  002C92                     u3481:
  4083  002C92  FFFF               	dw	65535	; assembler added errata NOP
  4084  002C94  0E01               	movlw	1
  4085  002C96  EF4F  F016         	goto	u3490
  4086  002C9A                     u3480:
  4087  002C9A  FFFF               	dw	65535	; assembler added errata NOP
  4088  002C9C  0E00               	movlw	0
  4089  002C9E                     u3490:
  4090  002C9E  FFFF               	dw	65535	; assembler added errata NOP
  4091  002CA0  6E31               	movwf	_xtoa$1218^0,c
  4092  002CA2  6A32               	clrf	(_xtoa$1218+1)^0,c
  4093  002CA4  5031               	movf	_xtoa$1218^0,w,c
  4094  002CA6  1032               	iorwf	(_xtoa$1218+1)^0,w,c
  4095  002CA8  B4D8               	btfsc	status,2,c
  4096  002CAA  EF59  F016         	goto	u3501
  4097  002CAE  EF5C  F016         	goto	u3500
  4098  002CB2                     u3501:
  4099  002CB2  FFFF               	dw	65535	; assembler added errata NOP
  4100  002CB4  EF67  F016         	goto	l3183
  4101  002CB8                     u3500:
  4102  002CB8  FFFF               	dw	65535	; assembler added errata NOP
  4103  002CBA                     
  4104                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 647:             
      +                          c = toupper(c);
  4105  002CBA  C041  F007         	movff	xtoa@c,toupper@c
  4106  002CBE  C042  F008         	movff	xtoa@c+1,toupper@c+1
  4107  002CC2  ECD9  F001         	call	_toupper	;wreg free
  4108  002CC6  C007  F041         	movff	?_toupper,xtoa@c
  4109  002CCA  C008  F042         	movff	?_toupper+1,xtoa@c+1
  4110  002CCE                     l3183:
  4111  002CCE  FFFF               	dw	65535	; assembler added errata NOP
  4112                           
  4113                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 649:         dbuf
      +                          [i] = (char)c;
  4114  002CD0  0E8C               	movlw	low _dbuf
  4115  002CD2  243F               	addwf	xtoa@i^0,w,c
  4116  002CD4  6ED9               	movwf	fsr2l,c
  4117  002CD6  0E00               	movlw	high _dbuf
  4118  002CD8  2040               	addwfc	(xtoa@i+1)^0,w,c
  4119  002CDA  6EDA               	movwf	fsr2h,c
  4120  002CDC  C041  FFDF         	movff	xtoa@c,indf2
  4121  002CE0                     
  4122                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 650:         --p;
  4123  002CE0  0633               	decf	xtoa@p^0,f,c
  4124  002CE2  A0D8               	btfss	status,0,c
  4125  002CE4  0634               	decf	(xtoa@p+1)^0,f,c
  4126  002CE6                     
  4127                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 651:         --w;
  4128  002CE6  0635               	decf	xtoa@w^0,f,c
  4129  002CE8  A0D8               	btfss	status,0,c
  4130  002CEA  0636               	decf	(xtoa@w+1)^0,f,c
  4131  002CEC                     
  4132                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 652:         n = 
      +                          n >> 4;
  4133  002CEC  C037  F027         	movff	xtoa@n,??_xtoa
  4134  002CF0  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  4135  002CF4  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  4136  002CF8  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  4137  002CFC  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  4138  002D00  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  4139  002D04  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  4140  002D08  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  4141  002D0C  0E05               	movlw	5
  4142  002D0E  EF93  F016         	goto	u3510
  4143  002D12                     u3515:
  4144  002D12  FFFF               	dw	65535	; assembler added errata NOP
  4145  002D14  90D8               	bcf	status,0,c
  4146  002D16  322E               	rrcf	(??_xtoa+7)^0,f,c
  4147  002D18  322D               	rrcf	(??_xtoa+6)^0,f,c
  4148  002D1A  322C               	rrcf	(??_xtoa+5)^0,f,c
  4149  002D1C  322B               	rrcf	(??_xtoa+4)^0,f,c
  4150  002D1E  322A               	rrcf	(??_xtoa+3)^0,f,c
  4151  002D20  3229               	rrcf	(??_xtoa+2)^0,f,c
  4152  002D22  3228               	rrcf	(??_xtoa+1)^0,f,c
  4153  002D24  3227               	rrcf	??_xtoa^0,f,c
  4154  002D26                     u3510:
  4155  002D26  FFFF               	dw	65535	; assembler added errata NOP
  4156  002D28  2EE8               	decfsz	wreg,f,c
  4157  002D2A  EF89  F016         	goto	u3515
  4158  002D2E  C027  F037         	movff	??_xtoa,xtoa@n
  4159  002D32  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  4160  002D36  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  4161  002D3A  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  4162  002D3E  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  4163  002D42  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  4164  002D46  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  4165  002D4A  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  4166  002D4E                     l3191:
  4167  002D4E  FFFF               	dw	65535	; assembler added errata NOP
  4168                           
  4169                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4170  002D50  BE40               	btfsc	(xtoa@i+1)^0,7,c
  4171  002D52  EFB4  F016         	goto	u3521
  4172  002D56  5040               	movf	(xtoa@i+1)^0,w,c
  4173  002D58  E10A               	bnz	u3520
  4174  002D5A  0E02               	movlw	2
  4175  002D5C  5C3F               	subwf	xtoa@i^0,w,c
  4176  002D5E  A0D8               	btfss	status,0,c
  4177  002D60  EFB4  F016         	goto	u3521
  4178  002D64  EFB7  F016         	goto	u3520
  4179  002D68                     u3521:
  4180  002D68  FFFF               	dw	65535	; assembler added errata NOP
  4181  002D6A  EFEF  F016         	goto	l994
  4182  002D6E                     u3520:
  4183  002D6E  FFFF               	dw	65535	; assembler added errata NOP
  4184  002D70  5037               	movf	xtoa@n^0,w,c
  4185  002D72  1038               	iorwf	(xtoa@n+1)^0,w,c
  4186  002D74  1039               	iorwf	(xtoa@n+2)^0,w,c
  4187  002D76  103A               	iorwf	(xtoa@n+3)^0,w,c
  4188  002D78  103B               	iorwf	(xtoa@n+4)^0,w,c
  4189  002D7A  103C               	iorwf	(xtoa@n+5)^0,w,c
  4190  002D7C  103D               	iorwf	(xtoa@n+6)^0,w,c
  4191  002D7E  103E               	iorwf	(xtoa@n+7)^0,w,c
  4192  002D80  A4D8               	btfss	status,2,c
  4193  002D82  EFC5  F016         	goto	u3531
  4194  002D86  EFC8  F016         	goto	u3530
  4195  002D8A                     u3531:
  4196  002D8A  FFFF               	dw	65535	; assembler added errata NOP
  4197  002D8C  EFE2  F015         	goto	l3161
  4198  002D90                     u3530:
  4199  002D90  FFFF               	dw	65535	; assembler added errata NOP
  4200  002D92  BE34               	btfsc	(xtoa@p+1)^0,7,c
  4201  002D94  EFD7  F016         	goto	u3540
  4202  002D98  5034               	movf	(xtoa@p+1)^0,w,c
  4203  002D9A  E106               	bnz	u3541
  4204  002D9C  0433               	decf	xtoa@p^0,w,c
  4205  002D9E  B0D8               	btfsc	status,0,c
  4206  002DA0  EFD4  F016         	goto	u3541
  4207  002DA4  EFD7  F016         	goto	u3540
  4208  002DA8                     u3541:
  4209  002DA8  FFFF               	dw	65535	; assembler added errata NOP
  4210  002DAA  EFE2  F015         	goto	l3161
  4211  002DAE                     u3540:
  4212  002DAE  FFFF               	dw	65535	; assembler added errata NOP
  4213  002DB0  BE36               	btfsc	(xtoa@w+1)^0,7,c
  4214  002DB2  EFE3  F016         	goto	u3551
  4215  002DB6  5036               	movf	(xtoa@w+1)^0,w,c
  4216  002DB8  E109               	bnz	u3550
  4217  002DBA  0435               	decf	xtoa@w^0,w,c
  4218  002DBC  A0D8               	btfss	status,0,c
  4219  002DBE  EFE3  F016         	goto	u3551
  4220  002DC2  EFE6  F016         	goto	u3550
  4221  002DC6                     u3551:
  4222  002DC6  FFFF               	dw	65535	; assembler added errata NOP
  4223  002DC8  EFEF  F016         	goto	l994
  4224  002DCC                     u3550:
  4225  002DCC  FFFF               	dw	65535	; assembler added errata NOP
  4226  002DCE  B27D               	btfsc	_flags^0,1,c
  4227  002DD0  EFEC  F016         	goto	u3561
  4228  002DD4  EFEF  F016         	goto	u3560
  4229  002DD8                     u3561:
  4230  002DD8  FFFF               	dw	65535	; assembler added errata NOP
  4231  002DDA  EFE2  F015         	goto	l3161
  4232  002DDE                     u3560:
  4233  002DDE                     l994:
  4234  002DDE  FFFF               	dw	65535	; assembler added errata NOP
  4235                           
  4236                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  4237  002DE0  A87D               	btfss	_flags^0,4,c
  4238  002DE2  EFF5  F016         	goto	u3571
  4239  002DE6  EFF8  F016         	goto	u3570
  4240  002DEA                     u3571:
  4241  002DEA  FFFF               	dw	65535	; assembler added errata NOP
  4242  002DEC  EF0F  F017         	goto	l3207
  4243  002DF0                     u3570:
  4244  002DF0  FFFF               	dw	65535	; assembler added errata NOP
  4245  002DF2                     
  4246                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 657:         --i;
  4247  002DF2  063F               	decf	xtoa@i^0,f,c
  4248  002DF4  A0D8               	btfss	status,0,c
  4249  002DF6  0640               	decf	(xtoa@i+1)^0,f,c
  4250  002DF8                     
  4251                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 658:         dbuf
      +                          [i] = x;
  4252  002DF8  0E8C               	movlw	low _dbuf
  4253  002DFA  243F               	addwf	xtoa@i^0,w,c
  4254  002DFC  6ED9               	movwf	fsr2l,c
  4255  002DFE  0E00               	movlw	high _dbuf
  4256  002E00  2040               	addwfc	(xtoa@i+1)^0,w,c
  4257  002E02  6EDA               	movwf	fsr2h,c
  4258  002E04  C026  FFDF         	movff	xtoa@x,indf2
  4259  002E08                     
  4260                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 659:         --i;
  4261  002E08  063F               	decf	xtoa@i^0,f,c
  4262  002E0A  A0D8               	btfss	status,0,c
  4263  002E0C  0640               	decf	(xtoa@i+1)^0,f,c
  4264                           
  4265                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 660:         dbuf
      +                          [i] = '0';
  4266  002E0E  0E8C               	movlw	low _dbuf
  4267  002E10  243F               	addwf	xtoa@i^0,w,c
  4268  002E12  6ED9               	movwf	fsr2l,c
  4269  002E14  0E00               	movlw	high _dbuf
  4270  002E16  2040               	addwfc	(xtoa@i+1)^0,w,c
  4271  002E18  6EDA               	movwf	fsr2h,c
  4272  002E1A  0E30               	movlw	48
  4273  002E1C  6EDF               	movwf	indf2,c
  4274  002E1E                     l3207:
  4275  002E1E  FFFF               	dw	65535	; assembler added errata NOP
  4276                           
  4277                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 664:     return p
      +                          ad(fp, &dbuf[i], w);
  4278  002E20  C01C  F011         	movff	xtoa@fp,pad@fp
  4279  002E24  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  4280  002E28  0E8C               	movlw	low _dbuf
  4281  002E2A  243F               	addwf	xtoa@i^0,w,c
  4282  002E2C  6E13               	movwf	pad@buf^0,c
  4283  002E2E  0E00               	movlw	high _dbuf
  4284  002E30  2040               	addwfc	(xtoa@i+1)^0,w,c
  4285  002E32  6E14               	movwf	(pad@buf+1)^0,c
  4286  002E34  C035  F015         	movff	xtoa@w,pad@p
  4287  002E38  C036  F016         	movff	xtoa@w+1,pad@p+1
  4288  002E3C  EC22  F000         	call	_pad	;wreg free
  4289  002E40  C011  F01C         	movff	?_pad,?_xtoa
  4290  002E44  C012  F01D         	movff	?_pad+1,?_xtoa+1
  4291  002E48  0012               	return		;funcret
  4292  002E4A  FFFF               	dw	65535	; errata NOP
  4293  002E4C                     __end_of_xtoa:
  4294                           	callstack 0
  4295                           
  4296 ;; *************** function _toupper *****************
  4297 ;; Defined at:
  4298 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\toupper.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;  c               2    6[COMRAM] int 
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;		None
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  2    6[COMRAM] int 
  4305 ;; Registers used:
  4306 ;;		wreg, status,2, status,0
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4312 ;;      Params:         2       0       0       0       0       0       0
  4313 ;;      Locals:         2       0       0       0       0       0       0
  4314 ;;      Temps:          4       0       0       0       0       0       0
  4315 ;;      Totals:         8       0       0       0       0       0       0
  4316 ;;Total ram usage:        8 bytes
  4317 ;; Hardware stack levels used:    1
  4318 ;; Hardware stack levels required when called:    2
  4319 ;; This function calls:
  4320 ;;		_islower
  4321 ;; This function is called by:
  4322 ;;		_xtoa
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           
  4326                           	psect	text6
  4327  0003B2                     __ptext6:
  4328                           	callstack 0
  4329  0003B2                     _toupper:
  4330                           	callstack 0
  4331  0003B2  FFFF               	dw	65535	; assembler added errata NOP
  4332  0003B4  0E9F               	movlw	159
  4333  0003B6  6E09               	movwf	??_toupper^0,c
  4334  0003B8  0EFF               	movlw	255
  4335  0003BA  6E0A               	movwf	(??_toupper+1)^0,c
  4336  0003BC  C007  F00B         	movff	toupper@c,??_toupper+2
  4337  0003C0  C008  F00C         	movff	toupper@c+1,??_toupper+3
  4338  0003C4  5009               	movf	??_toupper^0,w,c
  4339  0003C6  260B               	addwf	(??_toupper+2)^0,f,c
  4340  0003C8  500A               	movf	(??_toupper+1)^0,w,c
  4341  0003CA  220C               	addwfc	(??_toupper+3)^0,f,c
  4342  0003CC  500C               	movf	(??_toupper+3)^0,w,c
  4343  0003CE  E10B               	bnz	u2920
  4344  0003D0  0E1A               	movlw	26
  4345  0003D2  5C0B               	subwf	(??_toupper+2)^0,w,c
  4346  0003D4  A0D8               	btfss	status,0,c
  4347  0003D6  EFEF  F001         	goto	u2921
  4348  0003DA  EFF3  F001         	goto	u2920
  4349  0003DE                     u2921:
  4350  0003DE  FFFF               	dw	65535	; assembler added errata NOP
  4351  0003E0  0E01               	movlw	1
  4352  0003E2  EFF5  F001         	goto	u2930
  4353  0003E6                     u2920:
  4354  0003E6  FFFF               	dw	65535	; assembler added errata NOP
  4355  0003E8  0E00               	movlw	0
  4356  0003EA                     u2930:
  4357  0003EA  FFFF               	dw	65535	; assembler added errata NOP
  4358  0003EC  6E0D               	movwf	_toupper$1445^0,c
  4359  0003EE  6A0E               	clrf	(_toupper$1445+1)^0,c
  4360  0003F0  500D               	movf	_toupper$1445^0,w,c
  4361  0003F2  100E               	iorwf	(_toupper$1445+1)^0,w,c
  4362  0003F4  B4D8               	btfsc	status,2,c
  4363  0003F6  EFFF  F001         	goto	u2941
  4364  0003FA  EF02  F002         	goto	u2940
  4365  0003FE                     u2941:
  4366  0003FE  FFFF               	dw	65535	; assembler added errata NOP
  4367  000400  EF09  F002         	goto	l1187
  4368  000404                     u2940:
  4369  000404  FFFF               	dw	65535	; assembler added errata NOP
  4370  000406  0E5F               	movlw	95
  4371  000408  1407               	andwf	toupper@c^0,w,c
  4372  00040A  6E07               	movwf	?_toupper^0,c
  4373  00040C  6A08               	clrf	(?_toupper+1)^0,c
  4374  00040E  EF0E  F002         	goto	l1192
  4375  000412                     l1187:
  4376  000412  FFFF               	dw	65535	; assembler added errata NOP
  4377  000414  C007  F007         	movff	toupper@c,?_toupper
  4378  000418  C008  F008         	movff	toupper@c+1,?_toupper+1
  4379  00041C                     l1192:
  4380  00041C  FFFF               	dw	65535	; assembler added errata NOP
  4381  00041E  0012               	return		;funcret
  4382  000420  FFFF               	dw	65535	; errata NOP
  4383  000422                     __end_of_toupper:
  4384                           	callstack 0
  4385                           
  4386 ;; *************** function _islower *****************
  4387 ;; Defined at:
  4388 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\islower.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;  c               2    0[COMRAM] int 
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;		None
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  2    0[COMRAM] int 
  4395 ;; Registers used:
  4396 ;;		wreg, status,2, status,0
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4402 ;;      Params:         2       0       0       0       0       0       0
  4403 ;;      Locals:         0       0       0       0       0       0       0
  4404 ;;      Temps:          4       0       0       0       0       0       0
  4405 ;;      Totals:         6       0       0       0       0       0       0
  4406 ;;Total ram usage:        6 bytes
  4407 ;; Hardware stack levels used:    1
  4408 ;; Hardware stack levels required when called:    1
  4409 ;; This function calls:
  4410 ;;		Nothing
  4411 ;; This function is called by:
  4412 ;;		_toupper
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           
  4416                           	psect	text7
  4417  007EA6                     __ptext7:
  4418                           	callstack 0
  4419  007EA6                     _islower:
  4420                           	callstack 23
  4421  007EA6  FFFF               	dw	65535	; assembler added errata NOP
  4422  007EA8  0E9F               	movlw	159
  4423  007EAA  6E03               	movwf	??_islower^0,c
  4424  007EAC  0EFF               	movlw	255
  4425  007EAE  6E04               	movwf	(??_islower+1)^0,c
  4426  007EB0  C001  F005         	movff	islower@c,??_islower+2
  4427  007EB4  C002  F006         	movff	islower@c+1,??_islower+3
  4428  007EB8  5003               	movf	??_islower^0,w,c
  4429  007EBA  2605               	addwf	(??_islower+2)^0,f,c
  4430  007EBC  5004               	movf	(??_islower+1)^0,w,c
  4431  007EBE  2206               	addwfc	(??_islower+3)^0,f,c
  4432  007EC0  5006               	movf	(??_islower+3)^0,w,c
  4433  007EC2  E10B               	bnz	u2610
  4434  007EC4  0E1A               	movlw	26
  4435  007EC6  5C05               	subwf	(??_islower+2)^0,w,c
  4436  007EC8  A0D8               	btfss	status,0,c
  4437  007ECA  EF69  F03F         	goto	u2611
  4438  007ECE  EF6D  F03F         	goto	u2610
  4439  007ED2                     u2611:
  4440  007ED2  FFFF               	dw	65535	; assembler added errata NOP
  4441  007ED4  0E01               	movlw	1
  4442  007ED6  EF6F  F03F         	goto	u2620
  4443  007EDA                     u2610:
  4444  007EDA  FFFF               	dw	65535	; assembler added errata NOP
  4445  007EDC  0E00               	movlw	0
  4446  007EDE                     u2620:
  4447  007EDE  FFFF               	dw	65535	; assembler added errata NOP
  4448  007EE0  6E01               	movwf	?_islower^0,c
  4449  007EE2  6A02               	clrf	(?_islower+1)^0,c
  4450  007EE4  0012               	return		;funcret
  4451  007EE6  FFFF               	dw	65535	; errata NOP
  4452  007EE8                     __end_of_islower:
  4453                           	callstack 0
  4454                           
  4455 ;; *************** function _isupper *****************
  4456 ;; Defined at:
  4457 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;  c               2    0[COMRAM] int 
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;		None
  4462 ;; Return value:  Size  Location     Type
  4463 ;;                  2    0[COMRAM] int 
  4464 ;; Registers used:
  4465 ;;		wreg, status,2, status,0
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4471 ;;      Params:         2       0       0       0       0       0       0
  4472 ;;      Locals:         0       0       0       0       0       0       0
  4473 ;;      Temps:          4       0       0       0       0       0       0
  4474 ;;      Totals:         6       0       0       0       0       0       0
  4475 ;;Total ram usage:        6 bytes
  4476 ;; Hardware stack levels used:    1
  4477 ;; Hardware stack levels required when called:    1
  4478 ;; This function calls:
  4479 ;;		Nothing
  4480 ;; This function is called by:
  4481 ;;		_xtoa
  4482 ;; This function uses a non-reentrant model
  4483 ;;
  4484                           
  4485                           	psect	text8
  4486  007E64                     __ptext8:
  4487                           	callstack 0
  4488  007E64                     _isupper:
  4489                           	callstack 24
  4490  007E64  FFFF               	dw	65535	; assembler added errata NOP
  4491  007E66  0EBF               	movlw	191
  4492  007E68  6E03               	movwf	??_isupper^0,c
  4493  007E6A  0EFF               	movlw	255
  4494  007E6C  6E04               	movwf	(??_isupper+1)^0,c
  4495  007E6E  C001  F005         	movff	isupper@c,??_isupper+2
  4496  007E72  C002  F006         	movff	isupper@c+1,??_isupper+3
  4497  007E76  5003               	movf	??_isupper^0,w,c
  4498  007E78  2605               	addwf	(??_isupper+2)^0,f,c
  4499  007E7A  5004               	movf	(??_isupper+1)^0,w,c
  4500  007E7C  2206               	addwfc	(??_isupper+3)^0,f,c
  4501  007E7E  5006               	movf	(??_isupper+3)^0,w,c
  4502  007E80  E10B               	bnz	u2880
  4503  007E82  0E1A               	movlw	26
  4504  007E84  5C05               	subwf	(??_isupper+2)^0,w,c
  4505  007E86  A0D8               	btfss	status,0,c
  4506  007E88  EF48  F03F         	goto	u2881
  4507  007E8C  EF4C  F03F         	goto	u2880
  4508  007E90                     u2881:
  4509  007E90  FFFF               	dw	65535	; assembler added errata NOP
  4510  007E92  0E01               	movlw	1
  4511  007E94  EF4E  F03F         	goto	u2890
  4512  007E98                     u2880:
  4513  007E98  FFFF               	dw	65535	; assembler added errata NOP
  4514  007E9A  0E00               	movlw	0
  4515  007E9C                     u2890:
  4516  007E9C  FFFF               	dw	65535	; assembler added errata NOP
  4517  007E9E  6E01               	movwf	?_isupper^0,c
  4518  007EA0  6A02               	clrf	(?_isupper+1)^0,c
  4519  007EA2  0012               	return		;funcret
  4520  007EA4  FFFF               	dw	65535	; errata NOP
  4521  007EA6                     __end_of_isupper:
  4522                           	callstack 0
  4523                           
  4524 ;; *************** function _isalpha *****************
  4525 ;; Defined at:
  4526 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isalpha.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;  c               2    0[COMRAM] int 
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;		None
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  2    0[COMRAM] int 
  4533 ;; Registers used:
  4534 ;;		wreg, status,2, status,0
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4540 ;;      Params:         2       0       0       0       0       0       0
  4541 ;;      Locals:         0       0       0       0       0       0       0
  4542 ;;      Temps:          4       0       0       0       0       0       0
  4543 ;;      Totals:         6       0       0       0       0       0       0
  4544 ;;Total ram usage:        6 bytes
  4545 ;; Hardware stack levels used:    1
  4546 ;; Hardware stack levels required when called:    1
  4547 ;; This function calls:
  4548 ;;		Nothing
  4549 ;; This function is called by:
  4550 ;;		_xtoa
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           
  4554                           	psect	text9
  4555  007F70                     __ptext9:
  4556                           	callstack 0
  4557  007F70                     _isalpha:
  4558                           	callstack 24
  4559  007F70  FFFF               	dw	65535	; assembler added errata NOP
  4560  007F72  0E9F               	movlw	159
  4561  007F74  6E03               	movwf	??_isalpha^0,c
  4562  007F76  0EFF               	movlw	255
  4563  007F78  6E04               	movwf	(??_isalpha+1)^0,c
  4564  007F7A  0E20               	movlw	32
  4565  007F7C  1001               	iorwf	isalpha@c^0,w,c
  4566  007F7E  6E05               	movwf	(??_isalpha+2)^0,c
  4567  007F80  0E00               	movlw	0
  4568  007F82  1002               	iorwf	(isalpha@c+1)^0,w,c
  4569  007F84  6E06               	movwf	(??_isalpha+3)^0,c
  4570  007F86  5003               	movf	??_isalpha^0,w,c
  4571  007F88  2605               	addwf	(??_isalpha+2)^0,f,c
  4572  007F8A  5004               	movf	(??_isalpha+1)^0,w,c
  4573  007F8C  2206               	addwfc	(??_isalpha+3)^0,f,c
  4574  007F8E  5006               	movf	(??_isalpha+3)^0,w,c
  4575  007F90  E10B               	bnz	u2900
  4576  007F92  0E1A               	movlw	26
  4577  007F94  5C05               	subwf	(??_isalpha+2)^0,w,c
  4578  007F96  A0D8               	btfss	status,0,c
  4579  007F98  EFD0  F03F         	goto	u2901
  4580  007F9C  EFD4  F03F         	goto	u2900
  4581  007FA0                     u2901:
  4582  007FA0  FFFF               	dw	65535	; assembler added errata NOP
  4583  007FA2  0E01               	movlw	1
  4584  007FA4  EFD6  F03F         	goto	u2910
  4585  007FA8                     u2900:
  4586  007FA8  FFFF               	dw	65535	; assembler added errata NOP
  4587  007FAA  0E00               	movlw	0
  4588  007FAC                     u2910:
  4589  007FAC  FFFF               	dw	65535	; assembler added errata NOP
  4590  007FAE  6E01               	movwf	?_isalpha^0,c
  4591  007FB0  6A02               	clrf	(?_isalpha+1)^0,c
  4592  007FB2  0012               	return		;funcret
  4593  007FB4  FFFF               	dw	65535	; errata NOP
  4594  007FB6                     __end_of_isalpha:
  4595                           	callstack 0
  4596                           
  4597 ;; *************** function _utoa *****************
  4598 ;; Defined at:
  4599 ;;		line 593 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4602 ;;		 -> vsnprintf@f(6), 
  4603 ;;  d               8   29[COMRAM] unsigned long long 
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;  n               8   49[COMRAM] unsigned long long 
  4606 ;;  i               2   57[COMRAM] int 
  4607 ;;  w               2   47[COMRAM] int 
  4608 ;;  p               2   45[COMRAM] int 
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  2   27[COMRAM] int 
  4611 ;; Registers used:
  4612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4618 ;;      Params:        10       0       0       0       0       0       0
  4619 ;;      Locals:        14       0       0       0       0       0       0
  4620 ;;      Temps:          8       0       0       0       0       0       0
  4621 ;;      Totals:        32       0       0       0       0       0       0
  4622 ;;Total ram usage:       32 bytes
  4623 ;; Hardware stack levels used:    1
  4624 ;; Hardware stack levels required when called:    5
  4625 ;; This function calls:
  4626 ;;		___lodiv
  4627 ;;		___lomod
  4628 ;;		_pad
  4629 ;; This function is called by:
  4630 ;;		_vfpfcnvrt
  4631 ;; This function uses a non-reentrant model
  4632 ;;
  4633                           
  4634                           	psect	text10
  4635  002E4C                     __ptext10:
  4636                           	callstack 0
  4637  002E4C                     _utoa:
  4638                           	callstack 0
  4639  002E4C  FFFF               	dw	65535	; assembler added errata NOP
  4640  002E4E                     
  4641                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 593: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 594: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 595:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common
      +                          \doprnt.c: 596:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sourc
      +                          es\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  4642  002E4E  0100               	movlb	0	; () banked
  4643  002E50  BF89               	btfsc	(_prec+1)& (0+255),7,b
  4644  002E52  EF2D  F017         	goto	u3341
  4645  002E56  EF30  F017         	goto	u3340
  4646  002E5A                     u3341:
  4647  002E5A  FFFF               	dw	65535	; assembler added errata NOP
  4648  002E5C  EF32  F017         	goto	l3113
  4649  002E60                     u3340:
  4650  002E60  FFFF               	dw	65535	; assembler added errata NOP
  4651  002E62                     
  4652                           ; BSR set to: 0
  4653                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 600:         flag
      +                          s &= ~(1 << 1);
  4654  002E62  927D               	bcf	_flags^0,1,c
  4655  002E64                     l3113:
  4656  002E64  FFFF               	dw	65535	; assembler added errata NOP
  4657                           
  4658                           ; BSR set to: 0
  4659                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 602:     p = (0 <
      +                           prec) ? prec : 1;
  4660  002E66  BF89               	btfsc	(_prec+1)& (0+255),7,b
  4661  002E68  EF41  F017         	goto	u3350
  4662  002E6C  5189               	movf	(_prec+1)& (0+255),w,b
  4663  002E6E  E106               	bnz	u3351
  4664  002E70  0588               	decf	_prec& (0+255),w,b
  4665  002E72  B0D8               	btfsc	status,0,c
  4666  002E74  EF3E  F017         	goto	u3351
  4667  002E78  EF41  F017         	goto	u3350
  4668  002E7C                     u3351:
  4669  002E7C  FFFF               	dw	65535	; assembler added errata NOP
  4670  002E7E  EF48  F017         	goto	l956
  4671  002E82                     u3350:
  4672  002E82  FFFF               	dw	65535	; assembler added errata NOP
  4673  002E84                     
  4674                           ; BSR set to: 0
  4675  002E84  0E00               	movlw	0
  4676  002E86  6E2F               	movwf	(utoa@p+1)^0,c
  4677  002E88  0E01               	movlw	1
  4678  002E8A  6E2E               	movwf	utoa@p^0,c
  4679  002E8C  EF4D  F017         	goto	l958
  4680  002E90                     l956:
  4681  002E90  FFFF               	dw	65535	; assembler added errata NOP
  4682                           
  4683                           ; BSR set to: 0
  4684  002E92  C088  F02E         	movff	_prec,utoa@p
  4685  002E96  C089  F02F         	movff	_prec+1,utoa@p+1
  4686  002E9A                     l958:
  4687  002E9A  FFFF               	dw	65535	; assembler added errata NOP
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 603:     w = widt
      +                          h;
  4691  002E9C  C086  F030         	movff	_width,utoa@w
  4692  002EA0  C087  F031         	movff	_width+1,utoa@w+1
  4693                           
  4694                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 606:     n = d;
  4695  002EA4  C01E  F032         	movff	utoa@d,utoa@n
  4696  002EA8  C01F  F033         	movff	utoa@d+1,utoa@n+1
  4697  002EAC  C020  F034         	movff	utoa@d+2,utoa@n+2
  4698  002EB0  C021  F035         	movff	utoa@d+3,utoa@n+3
  4699  002EB4  C022  F036         	movff	utoa@d+4,utoa@n+4
  4700  002EB8  C023  F037         	movff	utoa@d+5,utoa@n+5
  4701  002EBC  C024  F038         	movff	utoa@d+6,utoa@n+6
  4702  002EC0  C025  F039         	movff	utoa@d+7,utoa@n+7
  4703  002EC4                     
  4704                           ; BSR set to: 0
  4705                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 607:     i = size
      +                          of(dbuf) - 1;
  4706  002EC4  0E00               	movlw	0
  4707  002EC6  6E3B               	movwf	(utoa@i+1)^0,c
  4708  002EC8  0E1F               	movlw	31
  4709  002ECA  6E3A               	movwf	utoa@i^0,c
  4710  002ECC                     
  4711                           ; BSR set to: 0
  4712                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 608:     dbuf[i] 
      +                          = '\0';
  4713  002ECC  0E00               	movlw	0
  4714  002ECE  6FAB               	movwf	(_dbuf+31)& (0+255),b
  4715                           
  4716                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4717  002ED0  EFE1  F017         	goto	l3131
  4718  002ED4                     l3121:
  4719  002ED4  FFFF               	dw	65535	; assembler added errata NOP
  4720                           
  4721                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 610:         --i;
  4722  002ED6  063A               	decf	utoa@i^0,f,c
  4723  002ED8  A0D8               	btfss	status,0,c
  4724  002EDA  063B               	decf	(utoa@i+1)^0,f,c
  4725  002EDC                     
  4726                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 611:         dbuf
      +                          [i] = '0' + (n % 10);
  4727  002EDC  0E8C               	movlw	low _dbuf
  4728  002EDE  243A               	addwf	utoa@i^0,w,c
  4729  002EE0  6ED9               	movwf	fsr2l,c
  4730  002EE2  0E00               	movlw	high _dbuf
  4731  002EE4  203B               	addwfc	(utoa@i+1)^0,w,c
  4732  002EE6  6EDA               	movwf	fsr2h,c
  4733  002EE8  C032  F001         	movff	utoa@n,___lomod@dividend
  4734  002EEC  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  4735  002EF0  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  4736  002EF4  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  4737  002EF8  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  4738  002EFC  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  4739  002F00  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  4740  002F04  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  4741  002F08  0E0A               	movlw	10
  4742  002F0A  6E09               	movwf	___lomod@divisor^0,c
  4743  002F0C  0E00               	movlw	0
  4744  002F0E  6E0A               	movwf	(___lomod@divisor+1)^0,c
  4745  002F10  0E00               	movlw	0
  4746  002F12  6E0B               	movwf	(___lomod@divisor+2)^0,c
  4747  002F14  0E00               	movlw	0
  4748  002F16  6E0C               	movwf	(___lomod@divisor+3)^0,c
  4749  002F18  0E00               	movlw	0
  4750  002F1A  6E0D               	movwf	(___lomod@divisor+4)^0,c
  4751  002F1C  0E00               	movlw	0
  4752  002F1E  6E0E               	movwf	(___lomod@divisor+5)^0,c
  4753  002F20  0E00               	movlw	0
  4754  002F22  6E0F               	movwf	(___lomod@divisor+6)^0,c
  4755  002F24  0E00               	movlw	0
  4756  002F26  6E10               	movwf	(___lomod@divisor+7)^0,c
  4757  002F28  EC86  F01F         	call	___lomod	;wreg free
  4758  002F2C  C001  F026         	movff	?___lomod,??_utoa
  4759  002F30  C002  F027         	movff	?___lomod+1,??_utoa+1
  4760  002F34  C003  F028         	movff	?___lomod+2,??_utoa+2
  4761  002F38  C004  F029         	movff	?___lomod+3,??_utoa+3
  4762  002F3C  C005  F02A         	movff	?___lomod+4,??_utoa+4
  4763  002F40  C006  F02B         	movff	?___lomod+5,??_utoa+5
  4764  002F44  C007  F02C         	movff	?___lomod+6,??_utoa+6
  4765  002F48  C008  F02D         	movff	?___lomod+7,??_utoa+7
  4766  002F4C  5026               	movf	??_utoa^0,w,c
  4767  002F4E  0F30               	addlw	48
  4768  002F50  6EDF               	movwf	indf2,c
  4769  002F52                     
  4770                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 612:         --p;
  4771  002F52  062E               	decf	utoa@p^0,f,c
  4772  002F54  A0D8               	btfss	status,0,c
  4773  002F56  062F               	decf	(utoa@p+1)^0,f,c
  4774  002F58                     
  4775                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 613:         --w;
  4776  002F58  0630               	decf	utoa@w^0,f,c
  4777  002F5A  A0D8               	btfss	status,0,c
  4778  002F5C  0631               	decf	(utoa@w+1)^0,f,c
  4779  002F5E                     
  4780                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 614:         n = 
      +                          n / 10;
  4781  002F5E  C032  F001         	movff	utoa@n,___lodiv@dividend
  4782  002F62  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  4783  002F66  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  4784  002F6A  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  4785  002F6E  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  4786  002F72  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  4787  002F76  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  4788  002F7A  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  4789  002F7E  0E0A               	movlw	10
  4790  002F80  6E09               	movwf	___lodiv@divisor^0,c
  4791  002F82  0E00               	movlw	0
  4792  002F84  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  4793  002F86  0E00               	movlw	0
  4794  002F88  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  4795  002F8A  0E00               	movlw	0
  4796  002F8C  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  4797  002F8E  0E00               	movlw	0
  4798  002F90  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  4799  002F92  0E00               	movlw	0
  4800  002F94  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  4801  002F96  0E00               	movlw	0
  4802  002F98  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  4803  002F9A  0E00               	movlw	0
  4804  002F9C  6E10               	movwf	(___lodiv@divisor+7)^0,c
  4805  002F9E  EC7D  F01E         	call	___lodiv	;wreg free
  4806  002FA2  C001  F032         	movff	?___lodiv,utoa@n
  4807  002FA6  C002  F033         	movff	?___lodiv+1,utoa@n+1
  4808  002FAA  C003  F034         	movff	?___lodiv+2,utoa@n+2
  4809  002FAE  C004  F035         	movff	?___lodiv+3,utoa@n+3
  4810  002FB2  C005  F036         	movff	?___lodiv+4,utoa@n+4
  4811  002FB6  C006  F037         	movff	?___lodiv+5,utoa@n+5
  4812  002FBA  C007  F038         	movff	?___lodiv+6,utoa@n+6
  4813  002FBE  C008  F039         	movff	?___lodiv+7,utoa@n+7
  4814  002FC2                     l3131:
  4815  002FC2  FFFF               	dw	65535	; assembler added errata NOP
  4816                           
  4817                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4818  002FC4  503A               	movf	utoa@i^0,w,c
  4819  002FC6  103B               	iorwf	(utoa@i+1)^0,w,c
  4820  002FC8  B4D8               	btfsc	status,2,c
  4821  002FCA  EFE9  F017         	goto	u3361
  4822  002FCE  EFEC  F017         	goto	u3360
  4823  002FD2                     u3361:
  4824  002FD2  FFFF               	dw	65535	; assembler added errata NOP
  4825  002FD4  EF24  F018         	goto	l3141
  4826  002FD8                     u3360:
  4827  002FD8  FFFF               	dw	65535	; assembler added errata NOP
  4828  002FDA  5032               	movf	utoa@n^0,w,c
  4829  002FDC  1033               	iorwf	(utoa@n+1)^0,w,c
  4830  002FDE  1034               	iorwf	(utoa@n+2)^0,w,c
  4831  002FE0  1035               	iorwf	(utoa@n+3)^0,w,c
  4832  002FE2  1036               	iorwf	(utoa@n+4)^0,w,c
  4833  002FE4  1037               	iorwf	(utoa@n+5)^0,w,c
  4834  002FE6  1038               	iorwf	(utoa@n+6)^0,w,c
  4835  002FE8  1039               	iorwf	(utoa@n+7)^0,w,c
  4836  002FEA  A4D8               	btfss	status,2,c
  4837  002FEC  EFFA  F017         	goto	u3371
  4838  002FF0  EFFD  F017         	goto	u3370
  4839  002FF4                     u3371:
  4840  002FF4  FFFF               	dw	65535	; assembler added errata NOP
  4841  002FF6  EF6A  F017         	goto	l3121
  4842  002FFA                     u3370:
  4843  002FFA  FFFF               	dw	65535	; assembler added errata NOP
  4844  002FFC  BE2F               	btfsc	(utoa@p+1)^0,7,c
  4845  002FFE  EF0C  F018         	goto	u3380
  4846  003002  502F               	movf	(utoa@p+1)^0,w,c
  4847  003004  E106               	bnz	u3381
  4848  003006  042E               	decf	utoa@p^0,w,c
  4849  003008  B0D8               	btfsc	status,0,c
  4850  00300A  EF09  F018         	goto	u3381
  4851  00300E  EF0C  F018         	goto	u3380
  4852  003012                     u3381:
  4853  003012  FFFF               	dw	65535	; assembler added errata NOP
  4854  003014  EF6A  F017         	goto	l3121
  4855  003018                     u3380:
  4856  003018  FFFF               	dw	65535	; assembler added errata NOP
  4857  00301A  BE31               	btfsc	(utoa@w+1)^0,7,c
  4858  00301C  EF18  F018         	goto	u3391
  4859  003020  5031               	movf	(utoa@w+1)^0,w,c
  4860  003022  E109               	bnz	u3390
  4861  003024  0430               	decf	utoa@w^0,w,c
  4862  003026  A0D8               	btfss	status,0,c
  4863  003028  EF18  F018         	goto	u3391
  4864  00302C  EF1B  F018         	goto	u3390
  4865  003030                     u3391:
  4866  003030  FFFF               	dw	65535	; assembler added errata NOP
  4867  003032  EF24  F018         	goto	l3141
  4868  003036                     u3390:
  4869  003036  FFFF               	dw	65535	; assembler added errata NOP
  4870  003038  B27D               	btfsc	_flags^0,1,c
  4871  00303A  EF21  F018         	goto	u3401
  4872  00303E  EF24  F018         	goto	u3400
  4873  003042                     u3401:
  4874  003042  FFFF               	dw	65535	; assembler added errata NOP
  4875  003044  EF6A  F017         	goto	l3121
  4876  003048                     u3400:
  4877  003048                     l3141:
  4878  003048  FFFF               	dw	65535	; assembler added errata NOP
  4879                           
  4880                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 618:     return p
      +                          ad(fp, &dbuf[i], w);
  4881  00304A  C01C  F011         	movff	utoa@fp,pad@fp
  4882  00304E  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  4883  003052  0E8C               	movlw	low _dbuf
  4884  003054  243A               	addwf	utoa@i^0,w,c
  4885  003056  6E13               	movwf	pad@buf^0,c
  4886  003058  0E00               	movlw	high _dbuf
  4887  00305A  203B               	addwfc	(utoa@i+1)^0,w,c
  4888  00305C  6E14               	movwf	(pad@buf+1)^0,c
  4889  00305E  C030  F015         	movff	utoa@w,pad@p
  4890  003062  C031  F016         	movff	utoa@w+1,pad@p+1
  4891  003066  EC22  F000         	call	_pad	;wreg free
  4892  00306A  C011  F01C         	movff	?_pad,?_utoa
  4893  00306E  C012  F01D         	movff	?_pad+1,?_utoa+1
  4894  003072  0012               	return		;funcret
  4895  003074  FFFF               	dw	65535	; errata NOP
  4896  003076                     __end_of_utoa:
  4897                           	callstack 0
  4898                           
  4899 ;; *************** function ___lomod *****************
  4900 ;; Defined at:
  4901 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lomod.c"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;  dividend        8    0[COMRAM] unsigned long long 
  4904 ;;  divisor         8    8[COMRAM] unsigned long long 
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;  counter         1   16[COMRAM] unsigned char 
  4907 ;; Return value:  Size  Location     Type
  4908 ;;                  8    0[COMRAM] unsigned long long 
  4909 ;; Registers used:
  4910 ;;		wreg, status,2, status,0
  4911 ;; Tracked objects:
  4912 ;;		On entry : 0/0
  4913 ;;		On exit  : 0/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4916 ;;      Params:        16       0       0       0       0       0       0
  4917 ;;      Locals:         1       0       0       0       0       0       0
  4918 ;;      Temps:          0       0       0       0       0       0       0
  4919 ;;      Totals:        17       0       0       0       0       0       0
  4920 ;;Total ram usage:       17 bytes
  4921 ;; Hardware stack levels used:    1
  4922 ;; Hardware stack levels required when called:    1
  4923 ;; This function calls:
  4924 ;;		Nothing
  4925 ;; This function is called by:
  4926 ;;		_utoa
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           
  4930                           	psect	text11
  4931  003F0C                     __ptext11:
  4932                           	callstack 0
  4933  003F0C                     ___lomod:
  4934                           	callstack 0
  4935  003F0C  FFFF               	dw	65535	; assembler added errata NOP
  4936  003F0E  5009               	movf	___lomod@divisor^0,w,c
  4937  003F10  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  4938  003F12  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  4939  003F14  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  4940  003F16  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  4941  003F18  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  4942  003F1A  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  4943  003F1C  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  4944  003F1E  B4D8               	btfsc	status,2,c
  4945  003F20  EF94  F01F         	goto	u2801
  4946  003F24  EF97  F01F         	goto	u2800
  4947  003F28                     u2801:
  4948  003F28  FFFF               	dw	65535	; assembler added errata NOP
  4949  003F2A  EFE8  F01F         	goto	l575
  4950  003F2E                     u2800:
  4951  003F2E  FFFF               	dw	65535	; assembler added errata NOP
  4952  003F30  0E01               	movlw	1
  4953  003F32  6E11               	movwf	___lomod@counter^0,c
  4954  003F34  EFA7  F01F         	goto	l2873
  4955  003F38                     l2871:
  4956  003F38  FFFF               	dw	65535	; assembler added errata NOP
  4957  003F3A  90D8               	bcf	status,0,c
  4958  003F3C  3609               	rlcf	___lomod@divisor^0,f,c
  4959  003F3E  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  4960  003F40  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  4961  003F42  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  4962  003F44  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  4963  003F46  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  4964  003F48  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  4965  003F4A  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  4966  003F4C  2A11               	incf	___lomod@counter^0,f,c
  4967  003F4E                     l2873:
  4968  003F4E  FFFF               	dw	65535	; assembler added errata NOP
  4969  003F50  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  4970  003F52  EFAD  F01F         	goto	u2811
  4971  003F56  EFB0  F01F         	goto	u2810
  4972  003F5A                     u2811:
  4973  003F5A  FFFF               	dw	65535	; assembler added errata NOP
  4974  003F5C  EF9C  F01F         	goto	l2871
  4975  003F60                     u2810:
  4976  003F60  FFFF               	dw	65535	; assembler added errata NOP
  4977  003F62                     l2875:
  4978  003F62  FFFF               	dw	65535	; assembler added errata NOP
  4979  003F64  5009               	movf	___lomod@divisor^0,w,c
  4980  003F66  5C01               	subwf	___lomod@dividend^0,w,c
  4981  003F68  500A               	movf	(___lomod@divisor+1)^0,w,c
  4982  003F6A  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  4983  003F6C  500B               	movf	(___lomod@divisor+2)^0,w,c
  4984  003F6E  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  4985  003F70  500C               	movf	(___lomod@divisor+3)^0,w,c
  4986  003F72  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  4987  003F74  500D               	movf	(___lomod@divisor+4)^0,w,c
  4988  003F76  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  4989  003F78  500E               	movf	(___lomod@divisor+5)^0,w,c
  4990  003F7A  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  4991  003F7C  500F               	movf	(___lomod@divisor+6)^0,w,c
  4992  003F7E  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  4993  003F80  5010               	movf	(___lomod@divisor+7)^0,w,c
  4994  003F82  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  4995  003F84  A0D8               	btfss	status,0,c
  4996  003F86  EFC7  F01F         	goto	u2821
  4997  003F8A  EFCA  F01F         	goto	u2820
  4998  003F8E                     u2821:
  4999  003F8E  FFFF               	dw	65535	; assembler added errata NOP
  5000  003F90  EFDB  F01F         	goto	l2879
  5001  003F94                     u2820:
  5002  003F94  FFFF               	dw	65535	; assembler added errata NOP
  5003  003F96  5009               	movf	___lomod@divisor^0,w,c
  5004  003F98  5E01               	subwf	___lomod@dividend^0,f,c
  5005  003F9A  500A               	movf	(___lomod@divisor+1)^0,w,c
  5006  003F9C  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  5007  003F9E  500B               	movf	(___lomod@divisor+2)^0,w,c
  5008  003FA0  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  5009  003FA2  500C               	movf	(___lomod@divisor+3)^0,w,c
  5010  003FA4  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  5011  003FA6  500D               	movf	(___lomod@divisor+4)^0,w,c
  5012  003FA8  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  5013  003FAA  500E               	movf	(___lomod@divisor+5)^0,w,c
  5014  003FAC  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  5015  003FAE  500F               	movf	(___lomod@divisor+6)^0,w,c
  5016  003FB0  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  5017  003FB2  5010               	movf	(___lomod@divisor+7)^0,w,c
  5018  003FB4  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  5019  003FB6                     l2879:
  5020  003FB6  FFFF               	dw	65535	; assembler added errata NOP
  5021  003FB8  90D8               	bcf	status,0,c
  5022  003FBA  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  5023  003FBC  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  5024  003FBE  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  5025  003FC0  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  5026  003FC2  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  5027  003FC4  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  5028  003FC6  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  5029  003FC8  3209               	rrcf	___lomod@divisor^0,f,c
  5030  003FCA  2E11               	decfsz	___lomod@counter^0,f,c
  5031  003FCC  EFB1  F01F         	goto	l2875
  5032  003FD0                     l575:
  5033  003FD0  FFFF               	dw	65535	; assembler added errata NOP
  5034  003FD2  C001  F001         	movff	___lomod@dividend,?___lomod
  5035  003FD6  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  5036  003FDA  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  5037  003FDE  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  5038  003FE2  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  5039  003FE6  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  5040  003FEA  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  5041  003FEE  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  5042  003FF2  0012               	return		;funcret
  5043  003FF4  FFFF               	dw	65535	; errata NOP
  5044  003FF6                     __end_of___lomod:
  5045                           	callstack 0
  5046                           
  5047 ;; *************** function ___lodiv *****************
  5048 ;; Defined at:
  5049 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lodiv.c"
  5050 ;; Parameters:    Size  Location     Type
  5051 ;;  dividend        8    0[COMRAM] unsigned long long 
  5052 ;;  divisor         8    8[COMRAM] unsigned long long 
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;  quotient        8   16[COMRAM] unsigned long long 
  5055 ;;  counter         1   24[COMRAM] unsigned char 
  5056 ;; Return value:  Size  Location     Type
  5057 ;;                  8    0[COMRAM] unsigned long long 
  5058 ;; Registers used:
  5059 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5060 ;; Tracked objects:
  5061 ;;		On entry : 0/0
  5062 ;;		On exit  : 0/0
  5063 ;;		Unchanged: 0/0
  5064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5065 ;;      Params:        16       0       0       0       0       0       0
  5066 ;;      Locals:         9       0       0       0       0       0       0
  5067 ;;      Temps:          0       0       0       0       0       0       0
  5068 ;;      Totals:        25       0       0       0       0       0       0
  5069 ;;Total ram usage:       25 bytes
  5070 ;; Hardware stack levels used:    1
  5071 ;; Hardware stack levels required when called:    1
  5072 ;; This function calls:
  5073 ;;		Nothing
  5074 ;; This function is called by:
  5075 ;;		_utoa
  5076 ;; This function uses a non-reentrant model
  5077 ;;
  5078                           
  5079                           	psect	text12
  5080  003CFA                     __ptext12:
  5081                           	callstack 0
  5082  003CFA                     ___lodiv:
  5083                           	callstack 0
  5084  003CFA  FFFF               	dw	65535	; assembler added errata NOP
  5085  003CFC  EE20  F011         	lfsr	2,___lodiv@quotient
  5086  003D00  0E07               	movlw	7
  5087  003D02                     u2761:
  5088  003D02  6ADE               	clrf	postinc2,c
  5089  003D04  06E8               	decf	wreg,f,c
  5090  003D06  E2FD               	bc	u2761
  5091  003D08  5009               	movf	___lodiv@divisor^0,w,c
  5092  003D0A  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  5093  003D0C  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  5094  003D0E  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  5095  003D10  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  5096  003D12  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  5097  003D14  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  5098  003D16  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  5099  003D18  B4D8               	btfsc	status,2,c
  5100  003D1A  EF91  F01E         	goto	u2771
  5101  003D1E  EF94  F01E         	goto	u2770
  5102  003D22                     u2771:
  5103  003D22  FFFF               	dw	65535	; assembler added errata NOP
  5104  003D24  EFEF  F01E         	goto	l565
  5105  003D28                     u2770:
  5106  003D28  FFFF               	dw	65535	; assembler added errata NOP
  5107  003D2A  0E01               	movlw	1
  5108  003D2C  6E19               	movwf	___lodiv@counter^0,c
  5109  003D2E  EFA4  F01E         	goto	l2853
  5110  003D32                     l2851:
  5111  003D32  FFFF               	dw	65535	; assembler added errata NOP
  5112  003D34  90D8               	bcf	status,0,c
  5113  003D36  3609               	rlcf	___lodiv@divisor^0,f,c
  5114  003D38  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  5115  003D3A  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  5116  003D3C  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  5117  003D3E  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  5118  003D40  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  5119  003D42  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  5120  003D44  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  5121  003D46  2A19               	incf	___lodiv@counter^0,f,c
  5122  003D48                     l2853:
  5123  003D48  FFFF               	dw	65535	; assembler added errata NOP
  5124  003D4A  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  5125  003D4C  EFAA  F01E         	goto	u2781
  5126  003D50  EFAD  F01E         	goto	u2780
  5127  003D54                     u2781:
  5128  003D54  FFFF               	dw	65535	; assembler added errata NOP
  5129  003D56  EF99  F01E         	goto	l2851
  5130  003D5A                     u2780:
  5131  003D5A  FFFF               	dw	65535	; assembler added errata NOP
  5132  003D5C                     l2855:
  5133  003D5C  FFFF               	dw	65535	; assembler added errata NOP
  5134  003D5E  90D8               	bcf	status,0,c
  5135  003D60  3611               	rlcf	___lodiv@quotient^0,f,c
  5136  003D62  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  5137  003D64  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  5138  003D66  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  5139  003D68  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  5140  003D6A  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  5141  003D6C  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  5142  003D6E  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  5143  003D70  5009               	movf	___lodiv@divisor^0,w,c
  5144  003D72  5C01               	subwf	___lodiv@dividend^0,w,c
  5145  003D74  500A               	movf	(___lodiv@divisor+1)^0,w,c
  5146  003D76  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  5147  003D78  500B               	movf	(___lodiv@divisor+2)^0,w,c
  5148  003D7A  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  5149  003D7C  500C               	movf	(___lodiv@divisor+3)^0,w,c
  5150  003D7E  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  5151  003D80  500D               	movf	(___lodiv@divisor+4)^0,w,c
  5152  003D82  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  5153  003D84  500E               	movf	(___lodiv@divisor+5)^0,w,c
  5154  003D86  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  5155  003D88  500F               	movf	(___lodiv@divisor+6)^0,w,c
  5156  003D8A  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  5157  003D8C  5010               	movf	(___lodiv@divisor+7)^0,w,c
  5158  003D8E  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  5159  003D90  A0D8               	btfss	status,0,c
  5160  003D92  EFCD  F01E         	goto	u2791
  5161  003D96  EFD0  F01E         	goto	u2790
  5162  003D9A                     u2791:
  5163  003D9A  FFFF               	dw	65535	; assembler added errata NOP
  5164  003D9C  EFE2  F01E         	goto	l2863
  5165  003DA0                     u2790:
  5166  003DA0  FFFF               	dw	65535	; assembler added errata NOP
  5167  003DA2  5009               	movf	___lodiv@divisor^0,w,c
  5168  003DA4  5E01               	subwf	___lodiv@dividend^0,f,c
  5169  003DA6  500A               	movf	(___lodiv@divisor+1)^0,w,c
  5170  003DA8  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  5171  003DAA  500B               	movf	(___lodiv@divisor+2)^0,w,c
  5172  003DAC  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  5173  003DAE  500C               	movf	(___lodiv@divisor+3)^0,w,c
  5174  003DB0  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  5175  003DB2  500D               	movf	(___lodiv@divisor+4)^0,w,c
  5176  003DB4  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  5177  003DB6  500E               	movf	(___lodiv@divisor+5)^0,w,c
  5178  003DB8  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  5179  003DBA  500F               	movf	(___lodiv@divisor+6)^0,w,c
  5180  003DBC  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  5181  003DBE  5010               	movf	(___lodiv@divisor+7)^0,w,c
  5182  003DC0  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  5183  003DC2  8011               	bsf	___lodiv@quotient^0,0,c
  5184  003DC4                     l2863:
  5185  003DC4  FFFF               	dw	65535	; assembler added errata NOP
  5186  003DC6  90D8               	bcf	status,0,c
  5187  003DC8  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  5188  003DCA  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  5189  003DCC  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  5190  003DCE  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  5191  003DD0  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  5192  003DD2  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  5193  003DD4  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  5194  003DD6  3209               	rrcf	___lodiv@divisor^0,f,c
  5195  003DD8  2E19               	decfsz	___lodiv@counter^0,f,c
  5196  003DDA  EFAE  F01E         	goto	l2855
  5197  003DDE                     l565:
  5198  003DDE  FFFF               	dw	65535	; assembler added errata NOP
  5199  003DE0  C011  F001         	movff	___lodiv@quotient,?___lodiv
  5200  003DE4  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  5201  003DE8  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  5202  003DEC  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  5203  003DF0  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  5204  003DF4  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  5205  003DF8  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  5206  003DFC  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  5207  003E00  0012               	return		;funcret
  5208  003E02  FFFF               	dw	65535	; errata NOP
  5209  003E04                     __end_of___lodiv:
  5210                           	callstack 0
  5211                           
  5212 ;; *************** function _strncmp *****************
  5213 ;; Defined at:
  5214 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  5217 ;;		 -> STR_1(19), 
  5218 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  5219 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_85(3), 
  5220 ;;		 -> STR_80(4), STR_76(4), STR_71(3), STR_66(3), 
  5221 ;;		 -> STR_61(4), STR_56(3), STR_51(3), STR_46(4), 
  5222 ;;		 -> STR_41(3), STR_36(3), STR_31(4), STR_26(3), 
  5223 ;;		 -> STR_22(3), STR_17(3), STR_13(3), STR_8(4), 
  5224 ;;		 -> STR_4(4), 
  5225 ;;  n               2    4[COMRAM] unsigned int 
  5226 ;; Auto vars:     Size  Location     Type
  5227 ;;  r               2    9[COMRAM] PTR const unsigned char 
  5228 ;;		 -> STR_98(3), STR_94(3), STR_89(3), STR_85(3), 
  5229 ;;		 -> STR_80(4), STR_76(4), STR_71(3), STR_66(3), 
  5230 ;;		 -> STR_61(4), STR_56(3), STR_51(3), STR_46(4), 
  5231 ;;		 -> STR_41(3), STR_36(3), STR_31(4), STR_26(3), 
  5232 ;;		 -> STR_22(3), STR_17(3), STR_13(3), STR_8(4), 
  5233 ;;		 -> STR_4(4), 
  5234 ;;  l               2    7[COMRAM] PTR const unsigned char 
  5235 ;;		 -> STR_1(19), 
  5236 ;; Return value:  Size  Location     Type
  5237 ;;                  2    0[COMRAM] int 
  5238 ;; Registers used:
  5239 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5245 ;;      Params:         6       0       0       0       0       0       0
  5246 ;;      Locals:         4       0       0       0       0       0       0
  5247 ;;      Temps:          1       0       0       0       0       0       0
  5248 ;;      Totals:        11       0       0       0       0       0       0
  5249 ;;Total ram usage:       11 bytes
  5250 ;; Hardware stack levels used:    1
  5251 ;; Hardware stack levels required when called:    1
  5252 ;; This function calls:
  5253 ;;		Nothing
  5254 ;; This function is called by:
  5255 ;;		_vfpfcnvrt
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259                           	psect	text13
  5260  003E04                     __ptext13:
  5261                           	callstack 0
  5262  003E04                     _strncmp:
  5263                           	callstack 0
  5264  003E04  FFFF               	dw	65535	; assembler added errata NOP
  5265  003E06  C001  F008         	movff	strncmp@_l,strncmp@l
  5266  003E0A  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  5267  003E0E  C003  F00A         	movff	strncmp@_r,strncmp@r
  5268  003E12  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  5269  003E16  0605               	decf	strncmp@n^0,f,c
  5270  003E18  A0D8               	btfss	status,0,c
  5271  003E1A  0606               	decf	(strncmp@n+1)^0,f,c
  5272  003E1C  2805               	incf	strncmp@n^0,w,c
  5273  003E1E  E106               	bnz	u3651
  5274  003E20  2806               	incf	(strncmp@n+1)^0,w,c
  5275  003E22  A4D8               	btfss	status,2,c
  5276  003E24  EF16  F01F         	goto	u3651
  5277  003E28  EF19  F01F         	goto	u3650
  5278  003E2C                     u3651:
  5279  003E2C  FFFF               	dw	65535	; assembler added errata NOP
  5280  003E2E  EF28  F01F         	goto	l3261
  5281  003E32                     u3650:
  5282  003E32  FFFF               	dw	65535	; assembler added errata NOP
  5283  003E34  0E00               	movlw	0
  5284  003E36  6E02               	movwf	(?_strncmp+1)^0,c
  5285  003E38  0E00               	movlw	0
  5286  003E3A  6E01               	movwf	?_strncmp^0,c
  5287  003E3C  EF83  F01F         	goto	l1177
  5288  003E40                     l3259:
  5289  003E40  FFFF               	dw	65535	; assembler added errata NOP
  5290  003E42  4A08               	infsnz	strncmp@l^0,f,c
  5291  003E44  2A09               	incf	(strncmp@l+1)^0,f,c
  5292  003E46  4A0A               	infsnz	strncmp@r^0,f,c
  5293  003E48  2A0B               	incf	(strncmp@r+1)^0,f,c
  5294  003E4A  0605               	decf	strncmp@n^0,f,c
  5295  003E4C  A0D8               	btfss	status,0,c
  5296  003E4E  0606               	decf	(strncmp@n+1)^0,f,c
  5297  003E50                     l3261:
  5298  003E50  FFFF               	dw	65535	; assembler added errata NOP
  5299  003E52  C008  FFF6         	movff	strncmp@l,tblptrl
  5300  003E56  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5301  003E5A                     	if	0	;tblptru may be non-zero
  5302  003E5A                     	endif
  5303  003E5A                     	if	0	;tblptru may be non-zero
  5304  003E5A                     	endif
  5305  003E5A  0008               	tblrd		*
  5306  003E5C  FFFF               	dw	65535	; errata NOP
  5307  003E5E  50F5               	movf	tablat,w,c
  5308  003E60  0900               	iorlw	0
  5309  003E62  B4D8               	btfsc	status,2,c
  5310  003E64  EF36  F01F         	goto	u3661
  5311  003E68  EF39  F01F         	goto	u3660
  5312  003E6C                     u3661:
  5313  003E6C  FFFF               	dw	65535	; assembler added errata NOP
  5314  003E6E  EF6E  F01F         	goto	l3269
  5315  003E72                     u3660:
  5316  003E72  FFFF               	dw	65535	; assembler added errata NOP
  5317  003E74  C00A  FFF6         	movff	strncmp@r,tblptrl
  5318  003E78  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5319  003E7C                     	if	0	;tblptru may be non-zero
  5320  003E7C                     	endif
  5321  003E7C                     	if	0	;tblptru may be non-zero
  5322  003E7C                     	endif
  5323  003E7C  0008               	tblrd		*
  5324  003E7E  FFFF               	dw	65535	; errata NOP
  5325  003E80  50F5               	movf	tablat,w,c
  5326  003E82  0900               	iorlw	0
  5327  003E84  B4D8               	btfsc	status,2,c
  5328  003E86  EF47  F01F         	goto	u3671
  5329  003E8A  EF4A  F01F         	goto	u3670
  5330  003E8E                     u3671:
  5331  003E8E  FFFF               	dw	65535	; assembler added errata NOP
  5332  003E90  EF6E  F01F         	goto	l3269
  5333  003E94                     u3670:
  5334  003E94  FFFF               	dw	65535	; assembler added errata NOP
  5335  003E96  5005               	movf	strncmp@n^0,w,c
  5336  003E98  1006               	iorwf	(strncmp@n+1)^0,w,c
  5337  003E9A  B4D8               	btfsc	status,2,c
  5338  003E9C  EF52  F01F         	goto	u3681
  5339  003EA0  EF55  F01F         	goto	u3680
  5340  003EA4                     u3681:
  5341  003EA4  FFFF               	dw	65535	; assembler added errata NOP
  5342  003EA6  EF6E  F01F         	goto	l3269
  5343  003EAA                     u3680:
  5344  003EAA  FFFF               	dw	65535	; assembler added errata NOP
  5345  003EAC  C008  FFF6         	movff	strncmp@l,tblptrl
  5346  003EB0  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5347  003EB4                     	if	0	;tblptru may be non-zero
  5348  003EB4                     	endif
  5349  003EB4                     	if	0	;tblptru may be non-zero
  5350  003EB4                     	endif
  5351  003EB4  0008               	tblrd		*
  5352  003EB6  FFFF               	dw	65535	; errata NOP
  5353  003EB8  CFF5 F007          	movff	tablat,??_strncmp
  5354  003EBC  C00A  FFF6         	movff	strncmp@r,tblptrl
  5355  003EC0  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5356  003EC4                     	if	0	;tblptru may be non-zero
  5357  003EC4                     	endif
  5358  003EC4                     	if	0	;tblptru may be non-zero
  5359  003EC4                     	endif
  5360  003EC4  0008               	tblrd		*
  5361  003EC6  FFFF               	dw	65535	; errata NOP
  5362  003EC8  50F5               	movf	tablat,w,c
  5363  003ECA  1807               	xorwf	??_strncmp^0,w,c
  5364  003ECC  B4D8               	btfsc	status,2,c
  5365  003ECE  EF6B  F01F         	goto	u3691
  5366  003ED2  EF6E  F01F         	goto	u3690
  5367  003ED6                     u3691:
  5368  003ED6  FFFF               	dw	65535	; assembler added errata NOP
  5369  003ED8  EF20  F01F         	goto	l3259
  5370  003EDC                     u3690:
  5371  003EDC                     l3269:
  5372  003EDC  FFFF               	dw	65535	; assembler added errata NOP
  5373  003EDE  C008  FFF6         	movff	strncmp@l,tblptrl
  5374  003EE2  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5375  003EE6                     	if	0	;tblptru may be non-zero
  5376  003EE6                     	endif
  5377  003EE6                     	if	0	;tblptru may be non-zero
  5378  003EE6                     	endif
  5379  003EE6  0008               	tblrd		*
  5380  003EE8  FFFF               	dw	65535	; errata NOP
  5381  003EEA  CFF5 F007          	movff	tablat,??_strncmp
  5382  003EEE  C00A  FFF6         	movff	strncmp@r,tblptrl
  5383  003EF2  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5384  003EF6                     	if	0	;tblptru may be non-zero
  5385  003EF6                     	endif
  5386  003EF6                     	if	0	;tblptru may be non-zero
  5387  003EF6                     	endif
  5388  003EF6  0008               	tblrd		*
  5389  003EF8  FFFF               	dw	65535	; errata NOP
  5390  003EFA  50F5               	movf	tablat,w,c
  5391  003EFC  5C07               	subwf	??_strncmp^0,w,c
  5392  003EFE  6E01               	movwf	?_strncmp^0,c
  5393  003F00  6A02               	clrf	(?_strncmp+1)^0,c
  5394  003F02  A0D8               	btfss	status,0,c
  5395  003F04  0602               	decf	(?_strncmp+1)^0,f,c
  5396  003F06                     l1177:
  5397  003F06  FFFF               	dw	65535	; assembler added errata NOP
  5398  003F08  0012               	return		;funcret
  5399  003F0A  FFFF               	dw	65535	; errata NOP
  5400  003F0C                     __end_of_strncmp:
  5401                           	callstack 0
  5402                           
  5403 ;; *************** function _stoa *****************
  5404 ;; Defined at:
  5405 ;;		line 546 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5406 ;; Parameters:    Size  Location     Type
  5407 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  5408 ;;		 -> vsnprintf@f(6), 
  5409 ;;  s               2   11[COMRAM] PTR unsigned char 
  5410 ;;		 -> ?_snprintf(2), 
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;  nuls            7   14[COMRAM] unsigned char [7]
  5413 ;;  l               2   29[COMRAM] int 
  5414 ;;  p               2   27[COMRAM] int 
  5415 ;;  cp              2   25[COMRAM] PTR unsigned char 
  5416 ;;		 -> stoa@nuls(7), ?_snprintf(2), 
  5417 ;;  w               2   23[COMRAM] int 
  5418 ;;  i               2   21[COMRAM] int 
  5419 ;; Return value:  Size  Location     Type
  5420 ;;                  2    9[COMRAM] int 
  5421 ;; Registers used:
  5422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5423 ;; Tracked objects:
  5424 ;;		On entry : 0/0
  5425 ;;		On exit  : 0/0
  5426 ;;		Unchanged: 0/0
  5427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5428 ;;      Params:         4       0       0       0       0       0       0
  5429 ;;      Locals:        17       0       0       0       0       0       0
  5430 ;;      Temps:          1       0       0       0       0       0       0
  5431 ;;      Totals:        22       0       0       0       0       0       0
  5432 ;;Total ram usage:       22 bytes
  5433 ;; Hardware stack levels used:    1
  5434 ;; Hardware stack levels required when called:    3
  5435 ;; This function calls:
  5436 ;;		_fputc
  5437 ;;		_strlen
  5438 ;; This function is called by:
  5439 ;;		_vfpfcnvrt
  5440 ;; This function uses a non-reentrant model
  5441 ;;
  5442                           
  5443                           	psect	text14
  5444  003466                     __ptext14:
  5445                           	callstack 0
  5446  003466                     _stoa:
  5447                           	callstack 0
  5448  003466  FFFF               	dw	65535	; assembler added errata NOP
  5449  003468                     
  5450                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 546: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 547: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 548:  
      +                             char *cp, nuls[] = "(null)";
  5451  003468  EE20  F0C2         	lfsr	2,stoa@F1152
  5452  00346C  EE10  F00F         	lfsr	1,stoa@nuls
  5453  003470  0E06               	movlw	6
  5454  003472                     u3251:
  5455  003472  CFDB FFE3          	movff	plusw2,plusw1
  5456  003476  06E8               	decf	wreg,f,c
  5457  003478  E2FC               	bc	u3251
  5458  00347A                     
  5459                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 549:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 552:     c
      +                          p = s;
  5460  00347A  C00C  F01A         	movff	stoa@s,stoa@cp
  5461  00347E  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  5462  003482                     
  5463                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 553:     if (!cp)
      +                           {
  5464  003482  501A               	movf	stoa@cp^0,w,c
  5465  003484  101B               	iorwf	(stoa@cp+1)^0,w,c
  5466  003486  A4D8               	btfss	status,2,c
  5467  003488  EF48  F01A         	goto	u3261
  5468  00348C  EF4B  F01A         	goto	u3260
  5469  003490                     u3261:
  5470  003490  FFFF               	dw	65535	; assembler added errata NOP
  5471  003492  EF50  F01A         	goto	l3075
  5472  003496                     u3260:
  5473  003496  FFFF               	dw	65535	; assembler added errata NOP
  5474  003498                     
  5475                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 554:         cp =
      +                           nuls;
  5476  003498  0E0F               	movlw	low stoa@nuls
  5477  00349A  6E1A               	movwf	stoa@cp^0,c
  5478  00349C  0E00               	movlw	high stoa@nuls
  5479  00349E  6E1B               	movwf	(stoa@cp+1)^0,c
  5480  0034A0                     l3075:
  5481  0034A0  FFFF               	dw	65535	; assembler added errata NOP
  5482                           
  5483                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 558:     l = strl
      +                          en(cp);
  5484  0034A2  C01A  F001         	movff	stoa@cp,strlen@s
  5485  0034A6  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  5486  0034AA  EC11  F03F         	call	_strlen	;wreg free
  5487  0034AE  C001  F01E         	movff	?_strlen,stoa@l
  5488  0034B2  C002  F01F         	movff	?_strlen+1,stoa@l+1
  5489  0034B6                     
  5490                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 559:     p = prec
      +                          ;
  5491  0034B6  C088  F01C         	movff	_prec,stoa@p
  5492  0034BA  C089  F01D         	movff	_prec+1,stoa@p+1
  5493  0034BE                     
  5494                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 560:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  5495  0034BE  BE1D               	btfsc	(stoa@p+1)^0,7,c
  5496  0034C0  EF64  F01A         	goto	u3271
  5497  0034C4  EF67  F01A         	goto	u3270
  5498  0034C8                     u3271:
  5499  0034C8  FFFF               	dw	65535	; assembler added errata NOP
  5500  0034CA  EF80  F01A         	goto	l937
  5501  0034CE                     u3270:
  5502  0034CE  FFFF               	dw	65535	; assembler added errata NOP
  5503  0034D0  501E               	movf	stoa@l^0,w,c
  5504  0034D2  5C1C               	subwf	stoa@p^0,w,c
  5505  0034D4  501D               	movf	(stoa@p+1)^0,w,c
  5506  0034D6  0A80               	xorlw	128
  5507  0034D8  6E0E               	movwf	??_stoa^0,c
  5508  0034DA  501F               	movf	(stoa@l+1)^0,w,c
  5509  0034DC  0A80               	xorlw	128
  5510  0034DE  580E               	subwfb	??_stoa^0,w,c
  5511  0034E0  A0D8               	btfss	status,0,c
  5512  0034E2  EF75  F01A         	goto	u3281
  5513  0034E6  EF78  F01A         	goto	u3280
  5514  0034EA                     u3281:
  5515  0034EA  FFFF               	dw	65535	; assembler added errata NOP
  5516  0034EC  EF7B  F01A         	goto	l935
  5517  0034F0                     u3280:
  5518  0034F0  FFFF               	dw	65535	; assembler added errata NOP
  5519  0034F2  EF80  F01A         	goto	l937
  5520  0034F6                     l935:
  5521  0034F6  FFFF               	dw	65535	; assembler added errata NOP
  5522  0034F8  C01C  F01E         	movff	stoa@p,stoa@l
  5523  0034FC  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  5524  003500                     l937:
  5525  003500  FFFF               	dw	65535	; assembler added errata NOP
  5526                           
  5527                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 561:     p = l;
  5528  003502  C01E  F01C         	movff	stoa@l,stoa@p
  5529  003506  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  5530                           
  5531                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 562:     w = widt
      +                          h;
  5532  00350A  C086  F018         	movff	_width,stoa@w
  5533  00350E  C087  F019         	movff	_width+1,stoa@w+1
  5534                           
  5535                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 565:     if (!(fl
      +                          ags & (1 << 0))) {
  5536  003512  B07D               	btfsc	_flags^0,0,c
  5537  003514  EF8E  F01A         	goto	u3291
  5538  003518  EF91  F01A         	goto	u3290
  5539  00351C                     u3291:
  5540  00351C  FFFF               	dw	65535	; assembler added errata NOP
  5541  00351E  EFB2  F01A         	goto	l3091
  5542  003522                     u3290:
  5543  003522  FFFF               	dw	65535	; assembler added errata NOP
  5544  003524  EFA1  F01A         	goto	l3089
  5545  003528                     l3085:
  5546  003528  FFFF               	dw	65535	; assembler added errata NOP
  5547                           
  5548                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 567:             
      +                          fputc(' ', fp);
  5549  00352A  0E00               	movlw	0
  5550  00352C  6E02               	movwf	(fputc@c+1)^0,c
  5551  00352E  0E20               	movlw	32
  5552  003530  6E01               	movwf	fputc@c^0,c
  5553  003532  C00A  F003         	movff	stoa@fp,fputc@fp
  5554  003536  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5555  00353A  EC93  F000         	call	_fputc	;wreg free
  5556  00353E                     
  5557                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 568:             
      +                          ++l;
  5558  00353E  4A1E               	infsnz	stoa@l^0,f,c
  5559  003540  2A1F               	incf	(stoa@l+1)^0,f,c
  5560  003542                     l3089:
  5561  003542  FFFF               	dw	65535	; assembler added errata NOP
  5562                           
  5563                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 566:         whil
      +                          e (l < w) {
  5564  003544  5018               	movf	stoa@w^0,w,c
  5565  003546  5C1E               	subwf	stoa@l^0,w,c
  5566  003548  501F               	movf	(stoa@l+1)^0,w,c
  5567  00354A  0A80               	xorlw	128
  5568  00354C  6E0E               	movwf	??_stoa^0,c
  5569  00354E  5019               	movf	(stoa@w+1)^0,w,c
  5570  003550  0A80               	xorlw	128
  5571  003552  580E               	subwfb	??_stoa^0,w,c
  5572  003554  A0D8               	btfss	status,0,c
  5573  003556  EFAF  F01A         	goto	u3301
  5574  00355A  EFB2  F01A         	goto	u3300
  5575  00355E                     u3301:
  5576  00355E  FFFF               	dw	65535	; assembler added errata NOP
  5577  003560  EF94  F01A         	goto	l3085
  5578  003564                     u3300:
  5579  003564                     l3091:
  5580  003564  FFFF               	dw	65535	; assembler added errata NOP
  5581                           
  5582                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 573:     i = 0;
  5583  003566  0E00               	movlw	0
  5584  003568  6E17               	movwf	(stoa@i+1)^0,c
  5585  00356A  0E00               	movlw	0
  5586  00356C  6E16               	movwf	stoa@i^0,c
  5587                           
  5588                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  5589  00356E  EFCD  F01A         	goto	l3099
  5590  003572                     l3093:
  5591  003572  FFFF               	dw	65535	; assembler added errata NOP
  5592                           
  5593                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 575:         fput
      +                          c(*cp, fp);
  5594  003574  C01A  FFD9         	movff	stoa@cp,fsr2l
  5595  003578  C01B  FFDA         	movff	stoa@cp+1,fsr2h
  5596  00357C  50DF               	movf	indf2,w,c
  5597  00357E  6E0E               	movwf	??_stoa^0,c
  5598  003580  500E               	movf	??_stoa^0,w,c
  5599  003582  6E01               	movwf	fputc@c^0,c
  5600  003584  6A02               	clrf	(fputc@c+1)^0,c
  5601  003586  C00A  F003         	movff	stoa@fp,fputc@fp
  5602  00358A  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5603  00358E  EC93  F000         	call	_fputc	;wreg free
  5604  003592                     
  5605                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 576:         ++cp
      +                          ;
  5606  003592  4A1A               	infsnz	stoa@cp^0,f,c
  5607  003594  2A1B               	incf	(stoa@cp+1)^0,f,c
  5608  003596                     
  5609                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 577:         ++i;
  5610  003596  4A16               	infsnz	stoa@i^0,f,c
  5611  003598  2A17               	incf	(stoa@i+1)^0,f,c
  5612  00359A                     l3099:
  5613  00359A  FFFF               	dw	65535	; assembler added errata NOP
  5614                           
  5615                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  5616  00359C  501C               	movf	stoa@p^0,w,c
  5617  00359E  5C16               	subwf	stoa@i^0,w,c
  5618  0035A0  5017               	movf	(stoa@i+1)^0,w,c
  5619  0035A2  0A80               	xorlw	128
  5620  0035A4  6E0E               	movwf	??_stoa^0,c
  5621  0035A6  501D               	movf	(stoa@p+1)^0,w,c
  5622  0035A8  0A80               	xorlw	128
  5623  0035AA  580E               	subwfb	??_stoa^0,w,c
  5624  0035AC  A0D8               	btfss	status,0,c
  5625  0035AE  EFDB  F01A         	goto	u3311
  5626  0035B2  EFDE  F01A         	goto	u3310
  5627  0035B6                     u3311:
  5628  0035B6  FFFF               	dw	65535	; assembler added errata NOP
  5629  0035B8  EFB9  F01A         	goto	l3093
  5630  0035BC                     u3310:
  5631  0035BC  FFFF               	dw	65535	; assembler added errata NOP
  5632  0035BE                     
  5633                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 581:     if (flag
      +                          s & (1 << 0)) {
  5634  0035BE  A07D               	btfss	_flags^0,0,c
  5635  0035C0  EFE4  F01A         	goto	u3321
  5636  0035C4  EFE7  F01A         	goto	u3320
  5637  0035C8                     u3321:
  5638  0035C8  FFFF               	dw	65535	; assembler added errata NOP
  5639  0035CA  EF08  F01B         	goto	l947
  5640  0035CE                     u3320:
  5641  0035CE  FFFF               	dw	65535	; assembler added errata NOP
  5642  0035D0  EFF7  F01A         	goto	l3107
  5643  0035D4                     l3103:
  5644  0035D4  FFFF               	dw	65535	; assembler added errata NOP
  5645                           
  5646                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 583:             
      +                          fputc(' ', fp);
  5647  0035D6  0E00               	movlw	0
  5648  0035D8  6E02               	movwf	(fputc@c+1)^0,c
  5649  0035DA  0E20               	movlw	32
  5650  0035DC  6E01               	movwf	fputc@c^0,c
  5651  0035DE  C00A  F003         	movff	stoa@fp,fputc@fp
  5652  0035E2  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  5653  0035E6  EC93  F000         	call	_fputc	;wreg free
  5654  0035EA                     
  5655                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 584:             
      +                          ++l;
  5656  0035EA  4A1E               	infsnz	stoa@l^0,f,c
  5657  0035EC  2A1F               	incf	(stoa@l+1)^0,f,c
  5658  0035EE                     l3107:
  5659  0035EE  FFFF               	dw	65535	; assembler added errata NOP
  5660                           
  5661                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 582:         whil
      +                          e (l < w) {
  5662  0035F0  5018               	movf	stoa@w^0,w,c
  5663  0035F2  5C1E               	subwf	stoa@l^0,w,c
  5664  0035F4  501F               	movf	(stoa@l+1)^0,w,c
  5665  0035F6  0A80               	xorlw	128
  5666  0035F8  6E0E               	movwf	??_stoa^0,c
  5667  0035FA  5019               	movf	(stoa@w+1)^0,w,c
  5668  0035FC  0A80               	xorlw	128
  5669  0035FE  580E               	subwfb	??_stoa^0,w,c
  5670  003600  A0D8               	btfss	status,0,c
  5671  003602  EF05  F01B         	goto	u3331
  5672  003606  EF08  F01B         	goto	u3330
  5673  00360A                     u3331:
  5674  00360A  FFFF               	dw	65535	; assembler added errata NOP
  5675  00360C  EFEA  F01A         	goto	l3103
  5676  003610                     u3330:
  5677  003610                     l947:
  5678  003610  FFFF               	dw	65535	; assembler added errata NOP
  5679                           
  5680                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 588:     return l
      +                          ;
  5681  003612  C01E  F00A         	movff	stoa@l,?_stoa
  5682  003616  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  5683  00361A  0012               	return		;funcret
  5684  00361C  FFFF               	dw	65535	; errata NOP
  5685  00361E                     __end_of_stoa:
  5686                           	callstack 0
  5687                           
  5688 ;; *************** function _otoa *****************
  5689 ;; Defined at:
  5690 ;;		line 507 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5691 ;; Parameters:    Size  Location     Type
  5692 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5693 ;;		 -> vsnprintf@f(6), 
  5694 ;;  d               8   29[COMRAM] unsigned long long 
  5695 ;; Auto vars:     Size  Location     Type
  5696 ;;  n               8   51[COMRAM] unsigned long long 
  5697 ;;  i               2   59[COMRAM] int 
  5698 ;;  w               2   49[COMRAM] int 
  5699 ;;  t               2   47[COMRAM] int 
  5700 ;;  p               2   45[COMRAM] int 
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  2   27[COMRAM] int 
  5703 ;; Registers used:
  5704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5710 ;;      Params:        10       0       0       0       0       0       0
  5711 ;;      Locals:        16       0       0       0       0       0       0
  5712 ;;      Temps:          8       0       0       0       0       0       0
  5713 ;;      Totals:        34       0       0       0       0       0       0
  5714 ;;Total ram usage:       34 bytes
  5715 ;; Hardware stack levels used:    1
  5716 ;; Hardware stack levels required when called:    5
  5717 ;; This function calls:
  5718 ;;		_pad
  5719 ;; This function is called by:
  5720 ;;		_vfpfcnvrt
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           
  5724                           	psect	text15
  5725  003076                     __ptext15:
  5726                           	callstack 0
  5727  003076                     _otoa:
  5728                           	callstack 0
  5729  003076  FFFF               	dw	65535	; assembler added errata NOP
  5730  003078                     
  5731                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 507: static int o
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 508: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 509:     int i, p, t, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\com
      +                          mon\doprnt.c: 510:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\so
      +                          urces\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  5732  003078  0100               	movlb	0	; () banked
  5733  00307A  BF89               	btfsc	(_prec+1)& (0+255),7,b
  5734  00307C  EF42  F018         	goto	u3151
  5735  003080  EF45  F018         	goto	u3150
  5736  003084                     u3151:
  5737  003084  FFFF               	dw	65535	; assembler added errata NOP
  5738  003086  EF47  F018         	goto	l3023
  5739  00308A                     u3150:
  5740  00308A  FFFF               	dw	65535	; assembler added errata NOP
  5741  00308C                     
  5742                           ; BSR set to: 0
  5743                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 514:         flag
      +                          s &= ~(1 << 1);
  5744  00308C  927D               	bcf	_flags^0,1,c
  5745  00308E                     l3023:
  5746  00308E  FFFF               	dw	65535	; assembler added errata NOP
  5747                           
  5748                           ; BSR set to: 0
  5749                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 516:     p = (0 <
      +                           prec) ? prec : 1;
  5750  003090  BF89               	btfsc	(_prec+1)& (0+255),7,b
  5751  003092  EF56  F018         	goto	u3160
  5752  003096  5189               	movf	(_prec+1)& (0+255),w,b
  5753  003098  E106               	bnz	u3161
  5754  00309A  0588               	decf	_prec& (0+255),w,b
  5755  00309C  B0D8               	btfsc	status,0,c
  5756  00309E  EF53  F018         	goto	u3161
  5757  0030A2  EF56  F018         	goto	u3160
  5758  0030A6                     u3161:
  5759  0030A6  FFFF               	dw	65535	; assembler added errata NOP
  5760  0030A8  EF5D  F018         	goto	l917
  5761  0030AC                     u3160:
  5762  0030AC  FFFF               	dw	65535	; assembler added errata NOP
  5763  0030AE                     
  5764                           ; BSR set to: 0
  5765  0030AE  0E00               	movlw	0
  5766  0030B0  6E2F               	movwf	(otoa@p+1)^0,c
  5767  0030B2  0E01               	movlw	1
  5768  0030B4  6E2E               	movwf	otoa@p^0,c
  5769  0030B6  EF62  F018         	goto	l919
  5770  0030BA                     l917:
  5771  0030BA  FFFF               	dw	65535	; assembler added errata NOP
  5772                           
  5773                           ; BSR set to: 0
  5774  0030BC  C088  F02E         	movff	_prec,otoa@p
  5775  0030C0  C089  F02F         	movff	_prec+1,otoa@p+1
  5776  0030C4                     l919:
  5777  0030C4  FFFF               	dw	65535	; assembler added errata NOP
  5778                           
  5779                           ; BSR set to: 0
  5780                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 517:     w = widt
      +                          h;
  5781  0030C6  C086  F032         	movff	_width,otoa@w
  5782  0030CA  C087  F033         	movff	_width+1,otoa@w+1
  5783                           
  5784                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 520:     n = d;
  5785  0030CE  C01E  F034         	movff	otoa@d,otoa@n
  5786  0030D2  C01F  F035         	movff	otoa@d+1,otoa@n+1
  5787  0030D6  C020  F036         	movff	otoa@d+2,otoa@n+2
  5788  0030DA  C021  F037         	movff	otoa@d+3,otoa@n+3
  5789  0030DE  C022  F038         	movff	otoa@d+4,otoa@n+4
  5790  0030E2  C023  F039         	movff	otoa@d+5,otoa@n+5
  5791  0030E6  C024  F03A         	movff	otoa@d+6,otoa@n+6
  5792  0030EA  C025  F03B         	movff	otoa@d+7,otoa@n+7
  5793  0030EE                     
  5794                           ; BSR set to: 0
  5795                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 521:     i = size
      +                          of(dbuf) - 1;
  5796  0030EE  0E00               	movlw	0
  5797  0030F0  6E3D               	movwf	(otoa@i+1)^0,c
  5798  0030F2  0E1F               	movlw	31
  5799  0030F4  6E3C               	movwf	otoa@i^0,c
  5800  0030F6                     
  5801                           ; BSR set to: 0
  5802                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 522:     dbuf[i] 
      +                          = '\0';
  5803  0030F6  0E00               	movlw	0
  5804  0030F8  6FAB               	movwf	(_dbuf+31)& (0+255),b
  5805  0030FA                     
  5806                           ; BSR set to: 0
  5807                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 523:     t = 0;
  5808  0030FA  0E00               	movlw	0
  5809  0030FC  6E31               	movwf	(otoa@t+1)^0,c
  5810  0030FE  0E00               	movlw	0
  5811  003100  6E30               	movwf	otoa@t^0,c
  5812                           
  5813                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 524:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5814  003102  EFCB  F018         	goto	l3045
  5815  003106                     l3033:
  5816  003106  FFFF               	dw	65535	; assembler added errata NOP
  5817                           
  5818                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 525:         --i;
  5819  003108  063C               	decf	otoa@i^0,f,c
  5820  00310A  A0D8               	btfss	status,0,c
  5821  00310C  063D               	decf	(otoa@i+1)^0,f,c
  5822  00310E                     
  5823                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 526:         t = 
      +                          n & 07;
  5824  00310E  0E07               	movlw	7
  5825  003110  1434               	andwf	otoa@n^0,w,c
  5826  003112  6E30               	movwf	otoa@t^0,c
  5827  003114  6A31               	clrf	(otoa@t+1)^0,c
  5828  003116                     
  5829                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 527:         dbuf
      +                          [i] = '0' + t;
  5830  003116  0E8C               	movlw	low _dbuf
  5831  003118  243C               	addwf	otoa@i^0,w,c
  5832  00311A  6ED9               	movwf	fsr2l,c
  5833  00311C  0E00               	movlw	high _dbuf
  5834  00311E  203D               	addwfc	(otoa@i+1)^0,w,c
  5835  003120  6EDA               	movwf	fsr2h,c
  5836  003122  5030               	movf	otoa@t^0,w,c
  5837  003124  0F30               	addlw	48
  5838  003126  6EDF               	movwf	indf2,c
  5839  003128                     
  5840                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 528:         --p;
  5841  003128  062E               	decf	otoa@p^0,f,c
  5842  00312A  A0D8               	btfss	status,0,c
  5843  00312C  062F               	decf	(otoa@p+1)^0,f,c
  5844  00312E                     
  5845                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 529:         --w;
  5846  00312E  0632               	decf	otoa@w^0,f,c
  5847  003130  A0D8               	btfss	status,0,c
  5848  003132  0633               	decf	(otoa@w+1)^0,f,c
  5849  003134                     
  5850                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 530:         n = 
      +                          n >> 3;
  5851  003134  C034  F026         	movff	otoa@n,??_otoa
  5852  003138  C035  F027         	movff	otoa@n+1,??_otoa+1
  5853  00313C  C036  F028         	movff	otoa@n+2,??_otoa+2
  5854  003140  C037  F029         	movff	otoa@n+3,??_otoa+3
  5855  003144  C038  F02A         	movff	otoa@n+4,??_otoa+4
  5856  003148  C039  F02B         	movff	otoa@n+5,??_otoa+5
  5857  00314C  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  5858  003150  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  5859  003154  0E04               	movlw	4
  5860  003156  EFB7  F018         	goto	u3170
  5861  00315A                     u3175:
  5862  00315A  FFFF               	dw	65535	; assembler added errata NOP
  5863  00315C  90D8               	bcf	status,0,c
  5864  00315E  322D               	rrcf	(??_otoa+7)^0,f,c
  5865  003160  322C               	rrcf	(??_otoa+6)^0,f,c
  5866  003162  322B               	rrcf	(??_otoa+5)^0,f,c
  5867  003164  322A               	rrcf	(??_otoa+4)^0,f,c
  5868  003166  3229               	rrcf	(??_otoa+3)^0,f,c
  5869  003168  3228               	rrcf	(??_otoa+2)^0,f,c
  5870  00316A  3227               	rrcf	(??_otoa+1)^0,f,c
  5871  00316C  3226               	rrcf	??_otoa^0,f,c
  5872  00316E                     u3170:
  5873  00316E  FFFF               	dw	65535	; assembler added errata NOP
  5874  003170  2EE8               	decfsz	wreg,f,c
  5875  003172  EFAD  F018         	goto	u3175
  5876  003176  C026  F034         	movff	??_otoa,otoa@n
  5877  00317A  C027  F035         	movff	??_otoa+1,otoa@n+1
  5878  00317E  C028  F036         	movff	??_otoa+2,otoa@n+2
  5879  003182  C029  F037         	movff	??_otoa+3,otoa@n+3
  5880  003186  C02A  F038         	movff	??_otoa+4,otoa@n+4
  5881  00318A  C02B  F039         	movff	??_otoa+5,otoa@n+5
  5882  00318E  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  5883  003192  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  5884  003196                     l3045:
  5885  003196  FFFF               	dw	65535	; assembler added errata NOP
  5886                           
  5887                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 524:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5888  003198  BE3D               	btfsc	(otoa@i+1)^0,7,c
  5889  00319A  EFD7  F018         	goto	u3181
  5890  00319E  503D               	movf	(otoa@i+1)^0,w,c
  5891  0031A0  E109               	bnz	u3180
  5892  0031A2  043C               	decf	otoa@i^0,w,c
  5893  0031A4  A0D8               	btfss	status,0,c
  5894  0031A6  EFD7  F018         	goto	u3181
  5895  0031AA  EFDA  F018         	goto	u3180
  5896  0031AE                     u3181:
  5897  0031AE  FFFF               	dw	65535	; assembler added errata NOP
  5898  0031B0  EF12  F019         	goto	l926
  5899  0031B4                     u3180:
  5900  0031B4  FFFF               	dw	65535	; assembler added errata NOP
  5901  0031B6  5034               	movf	otoa@n^0,w,c
  5902  0031B8  1035               	iorwf	(otoa@n+1)^0,w,c
  5903  0031BA  1036               	iorwf	(otoa@n+2)^0,w,c
  5904  0031BC  1037               	iorwf	(otoa@n+3)^0,w,c
  5905  0031BE  1038               	iorwf	(otoa@n+4)^0,w,c
  5906  0031C0  1039               	iorwf	(otoa@n+5)^0,w,c
  5907  0031C2  103A               	iorwf	(otoa@n+6)^0,w,c
  5908  0031C4  103B               	iorwf	(otoa@n+7)^0,w,c
  5909  0031C6  A4D8               	btfss	status,2,c
  5910  0031C8  EFE8  F018         	goto	u3191
  5911  0031CC  EFEB  F018         	goto	u3190
  5912  0031D0                     u3191:
  5913  0031D0  FFFF               	dw	65535	; assembler added errata NOP
  5914  0031D2  EF83  F018         	goto	l3033
  5915  0031D6                     u3190:
  5916  0031D6  FFFF               	dw	65535	; assembler added errata NOP
  5917  0031D8  BE2F               	btfsc	(otoa@p+1)^0,7,c
  5918  0031DA  EFFA  F018         	goto	u3200
  5919  0031DE  502F               	movf	(otoa@p+1)^0,w,c
  5920  0031E0  E106               	bnz	u3201
  5921  0031E2  042E               	decf	otoa@p^0,w,c
  5922  0031E4  B0D8               	btfsc	status,0,c
  5923  0031E6  EFF7  F018         	goto	u3201
  5924  0031EA  EFFA  F018         	goto	u3200
  5925  0031EE                     u3201:
  5926  0031EE  FFFF               	dw	65535	; assembler added errata NOP
  5927  0031F0  EF83  F018         	goto	l3033
  5928  0031F4                     u3200:
  5929  0031F4  FFFF               	dw	65535	; assembler added errata NOP
  5930  0031F6  BE33               	btfsc	(otoa@w+1)^0,7,c
  5931  0031F8  EF06  F019         	goto	u3211
  5932  0031FC  5033               	movf	(otoa@w+1)^0,w,c
  5933  0031FE  E109               	bnz	u3210
  5934  003200  0432               	decf	otoa@w^0,w,c
  5935  003202  A0D8               	btfss	status,0,c
  5936  003204  EF06  F019         	goto	u3211
  5937  003208  EF09  F019         	goto	u3210
  5938  00320C                     u3211:
  5939  00320C  FFFF               	dw	65535	; assembler added errata NOP
  5940  00320E  EF12  F019         	goto	l926
  5941  003212                     u3210:
  5942  003212  FFFF               	dw	65535	; assembler added errata NOP
  5943  003214  B27D               	btfsc	_flags^0,1,c
  5944  003216  EF0F  F019         	goto	u3221
  5945  00321A  EF12  F019         	goto	u3220
  5946  00321E                     u3221:
  5947  00321E  FFFF               	dw	65535	; assembler added errata NOP
  5948  003220  EF83  F018         	goto	l3033
  5949  003224                     u3220:
  5950  003224                     l926:
  5951  003224  FFFF               	dw	65535	; assembler added errata NOP
  5952                           
  5953                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 534:     if ((fla
      +                          gs & (1 << 4)) && t) {
  5954  003226  A87D               	btfss	_flags^0,4,c
  5955  003228  EF18  F019         	goto	u3231
  5956  00322C  EF1B  F019         	goto	u3230
  5957  003230                     u3231:
  5958  003230  FFFF               	dw	65535	; assembler added errata NOP
  5959  003232  EF35  F019         	goto	l3063
  5960  003236                     u3230:
  5961  003236  FFFF               	dw	65535	; assembler added errata NOP
  5962  003238  5030               	movf	otoa@t^0,w,c
  5963  00323A  1031               	iorwf	(otoa@t+1)^0,w,c
  5964  00323C  B4D8               	btfsc	status,2,c
  5965  00323E  EF23  F019         	goto	u3241
  5966  003242  EF26  F019         	goto	u3240
  5967  003246                     u3241:
  5968  003246  FFFF               	dw	65535	; assembler added errata NOP
  5969  003248  EF35  F019         	goto	l3063
  5970  00324C                     u3240:
  5971  00324C  FFFF               	dw	65535	; assembler added errata NOP
  5972  00324E                     
  5973                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 535:         --i;
  5974  00324E  063C               	decf	otoa@i^0,f,c
  5975  003250  A0D8               	btfss	status,0,c
  5976  003252  063D               	decf	(otoa@i+1)^0,f,c
  5977  003254                     
  5978                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 536:         dbuf
      +                          [i] = '0';
  5979  003254  0E8C               	movlw	low _dbuf
  5980  003256  243C               	addwf	otoa@i^0,w,c
  5981  003258  6ED9               	movwf	fsr2l,c
  5982  00325A  0E00               	movlw	high _dbuf
  5983  00325C  203D               	addwfc	(otoa@i+1)^0,w,c
  5984  00325E  6EDA               	movwf	fsr2h,c
  5985  003260  0E30               	movlw	48
  5986  003262  6EDF               	movwf	indf2,c
  5987  003264                     
  5988                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 537:         --w;
  5989  003264  0632               	decf	otoa@w^0,f,c
  5990  003266  A0D8               	btfss	status,0,c
  5991  003268  0633               	decf	(otoa@w+1)^0,f,c
  5992  00326A                     l3063:
  5993  00326A  FFFF               	dw	65535	; assembler added errata NOP
  5994                           
  5995                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 541:     return p
      +                          ad(fp, &dbuf[i], w);
  5996  00326C  C01C  F011         	movff	otoa@fp,pad@fp
  5997  003270  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  5998  003274  0E8C               	movlw	low _dbuf
  5999  003276  243C               	addwf	otoa@i^0,w,c
  6000  003278  6E13               	movwf	pad@buf^0,c
  6001  00327A  0E00               	movlw	high _dbuf
  6002  00327C  203D               	addwfc	(otoa@i+1)^0,w,c
  6003  00327E  6E14               	movwf	(pad@buf+1)^0,c
  6004  003280  C032  F015         	movff	otoa@w,pad@p
  6005  003284  C033  F016         	movff	otoa@w+1,pad@p+1
  6006  003288  EC22  F000         	call	_pad	;wreg free
  6007  00328C  C011  F01C         	movff	?_pad,?_otoa
  6008  003290  C012  F01D         	movff	?_pad+1,?_otoa+1
  6009  003294  0012               	return		;funcret
  6010  003296  FFFF               	dw	65535	; errata NOP
  6011  003298                     __end_of_otoa:
  6012                           	callstack 0
  6013                           
  6014 ;; *************** function _dtoa *****************
  6015 ;; Defined at:
  6016 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6017 ;; Parameters:    Size  Location     Type
  6018 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6019 ;;		 -> vsnprintf@f(6), 
  6020 ;;  d               8   29[COMRAM] long long 
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;  n               8   53[COMRAM] long long 
  6023 ;;  i               2   61[COMRAM] int 
  6024 ;;  s               2   51[COMRAM] int 
  6025 ;;  w               2   49[COMRAM] int 
  6026 ;;  p               2   47[COMRAM] int 
  6027 ;; Return value:  Size  Location     Type
  6028 ;;                  2   27[COMRAM] int 
  6029 ;; Registers used:
  6030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6031 ;; Tracked objects:
  6032 ;;		On entry : 0/0
  6033 ;;		On exit  : 0/0
  6034 ;;		Unchanged: 0/0
  6035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6036 ;;      Params:        10       0       0       0       0       0       0
  6037 ;;      Locals:        18       0       0       0       0       0       0
  6038 ;;      Temps:          8       0       0       0       0       0       0
  6039 ;;      Totals:        36       0       0       0       0       0       0
  6040 ;;Total ram usage:       36 bytes
  6041 ;; Hardware stack levels used:    1
  6042 ;; Hardware stack levels required when called:    5
  6043 ;; This function calls:
  6044 ;;		___aodiv
  6045 ;;		___aomod
  6046 ;;		_abs
  6047 ;;		_pad
  6048 ;; This function is called by:
  6049 ;;		_vfpfcnvrt
  6050 ;; This function uses a non-reentrant model
  6051 ;;
  6052                           
  6053                           	psect	text16
  6054  0027F0                     __ptext16:
  6055                           	callstack 0
  6056  0027F0                     _dtoa:
  6057                           	callstack 0
  6058  0027F0  FFFF               	dw	65535	; assembler added errata NOP
  6059  0027F2                     
  6060                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  6061  0027F2  C01E  F036         	movff	dtoa@d,dtoa@n
  6062  0027F6  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  6063  0027FA  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  6064  0027FE  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  6065  002802  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  6066  002806  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  6067  00280A  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  6068  00280E  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  6069  002812                     
  6070                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  6071  002812  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  6072  002814  EF0E  F014         	goto	u3001
  6073  002818  EF12  F014         	goto	u3000
  6074  00281C                     u3001:
  6075  00281C  FFFF               	dw	65535	; assembler added errata NOP
  6076  00281E  0E01               	movlw	1
  6077  002820  EF14  F014         	goto	u3010
  6078  002824                     u3000:
  6079  002824  FFFF               	dw	65535	; assembler added errata NOP
  6080  002826  0E00               	movlw	0
  6081  002828                     u3010:
  6082  002828  FFFF               	dw	65535	; assembler added errata NOP
  6083  00282A  6E34               	movwf	dtoa@s^0,c
  6084  00282C  6A35               	clrf	(dtoa@s+1)^0,c
  6085                           
  6086                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  6087  00282E  5034               	movf	dtoa@s^0,w,c
  6088  002830  1035               	iorwf	(dtoa@s+1)^0,w,c
  6089  002832  B4D8               	btfsc	status,2,c
  6090  002834  EF1E  F014         	goto	u3021
  6091  002838  EF21  F014         	goto	u3020
  6092  00283C                     u3021:
  6093  00283C  FFFF               	dw	65535	; assembler added errata NOP
  6094  00283E  EF32  F014         	goto	l2963
  6095  002842                     u3020:
  6096  002842  FFFF               	dw	65535	; assembler added errata NOP
  6097  002844                     
  6098                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  6099  002844  1E3D               	comf	(dtoa@n+7)^0,f,c
  6100  002846  1E3C               	comf	(dtoa@n+6)^0,f,c
  6101  002848  1E3B               	comf	(dtoa@n+5)^0,f,c
  6102  00284A  1E3A               	comf	(dtoa@n+4)^0,f,c
  6103  00284C  1E39               	comf	(dtoa@n+3)^0,f,c
  6104  00284E  1E38               	comf	(dtoa@n+2)^0,f,c
  6105  002850  1E37               	comf	(dtoa@n+1)^0,f,c
  6106  002852  6C36               	negf	dtoa@n^0,c
  6107  002854  0E00               	movlw	0
  6108  002856  2237               	addwfc	(dtoa@n+1)^0,f,c
  6109  002858  2238               	addwfc	(dtoa@n+2)^0,f,c
  6110  00285A  2239               	addwfc	(dtoa@n+3)^0,f,c
  6111  00285C  223A               	addwfc	(dtoa@n+4)^0,f,c
  6112  00285E  223B               	addwfc	(dtoa@n+5)^0,f,c
  6113  002860  223C               	addwfc	(dtoa@n+6)^0,f,c
  6114  002862  223D               	addwfc	(dtoa@n+7)^0,f,c
  6115  002864                     l2963:
  6116  002864  FFFF               	dw	65535	; assembler added errata NOP
  6117                           
  6118                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  6119  002866  0100               	movlb	0	; () banked
  6120  002868  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6121  00286A  EF39  F014         	goto	u3031
  6122  00286E  EF3C  F014         	goto	u3030
  6123  002872                     u3031:
  6124  002872  FFFF               	dw	65535	; assembler added errata NOP
  6125  002874  EF3E  F014         	goto	l2967
  6126  002878                     u3030:
  6127  002878  FFFF               	dw	65535	; assembler added errata NOP
  6128  00287A                     
  6129                           ; BSR set to: 0
  6130                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  6131  00287A  927D               	bcf	_flags^0,1,c
  6132  00287C                     l2967:
  6133  00287C  FFFF               	dw	65535	; assembler added errata NOP
  6134                           
  6135                           ; BSR set to: 0
  6136                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  6137  00287E  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6138  002880  EF4D  F014         	goto	u3040
  6139  002884  5189               	movf	(_prec+1)& (0+255),w,b
  6140  002886  E106               	bnz	u3041
  6141  002888  0588               	decf	_prec& (0+255),w,b
  6142  00288A  B0D8               	btfsc	status,0,c
  6143  00288C  EF4A  F014         	goto	u3041
  6144  002890  EF4D  F014         	goto	u3040
  6145  002894                     u3041:
  6146  002894  FFFF               	dw	65535	; assembler added errata NOP
  6147  002896  EF54  F014         	goto	l892
  6148  00289A                     u3040:
  6149  00289A  FFFF               	dw	65535	; assembler added errata NOP
  6150  00289C                     
  6151                           ; BSR set to: 0
  6152  00289C  0E00               	movlw	0
  6153  00289E  6E31               	movwf	(dtoa@p+1)^0,c
  6154  0028A0  0E01               	movlw	1
  6155  0028A2  6E30               	movwf	dtoa@p^0,c
  6156  0028A4  EF59  F014         	goto	l894
  6157  0028A8                     l892:
  6158  0028A8  FFFF               	dw	65535	; assembler added errata NOP
  6159                           
  6160                           ; BSR set to: 0
  6161  0028AA  C088  F030         	movff	_prec,dtoa@p
  6162  0028AE  C089  F031         	movff	_prec+1,dtoa@p+1
  6163  0028B2                     l894:
  6164  0028B2  FFFF               	dw	65535	; assembler added errata NOP
  6165                           
  6166                           ; BSR set to: 0
  6167                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  6168  0028B4  C086  F032         	movff	_width,dtoa@w
  6169  0028B8  C087  F033         	movff	_width+1,dtoa@w+1
  6170  0028BC                     
  6171                           ; BSR set to: 0
  6172                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  6173  0028BC  5034               	movf	dtoa@s^0,w,c
  6174  0028BE  1035               	iorwf	(dtoa@s+1)^0,w,c
  6175  0028C0  A4D8               	btfss	status,2,c
  6176  0028C2  EF65  F014         	goto	u3051
  6177  0028C6  EF68  F014         	goto	u3050
  6178  0028CA                     u3051:
  6179  0028CA  FFFF               	dw	65535	; assembler added errata NOP
  6180  0028CC  EF71  F014         	goto	l2975
  6181  0028D0                     u3050:
  6182  0028D0  FFFF               	dw	65535	; assembler added errata NOP
  6183  0028D2                     
  6184                           ; BSR set to: 0
  6185  0028D2  A47D               	btfss	_flags^0,2,c
  6186  0028D4  EF6E  F014         	goto	u3061
  6187  0028D8  EF71  F014         	goto	u3060
  6188  0028DC                     u3061:
  6189  0028DC  FFFF               	dw	65535	; assembler added errata NOP
  6190  0028DE  EF75  F014         	goto	l2977
  6191  0028E2                     u3060:
  6192  0028E2                     l2975:
  6193  0028E2  FFFF               	dw	65535	; assembler added errata NOP
  6194                           
  6195                           ; BSR set to: 0
  6196                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  6197  0028E4  0632               	decf	dtoa@w^0,f,c
  6198  0028E6  A0D8               	btfss	status,0,c
  6199  0028E8  0633               	decf	(dtoa@w+1)^0,f,c
  6200  0028EA                     l2977:
  6201  0028EA  FFFF               	dw	65535	; assembler added errata NOP
  6202                           
  6203                           ; BSR set to: 0
  6204                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  6205  0028EC  0E00               	movlw	0
  6206  0028EE  6E3F               	movwf	(dtoa@i+1)^0,c
  6207  0028F0  0E1F               	movlw	31
  6208  0028F2  6E3E               	movwf	dtoa@i^0,c
  6209  0028F4                     
  6210                           ; BSR set to: 0
  6211                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  6212  0028F4  0E00               	movlw	0
  6213  0028F6  6FAB               	movwf	(_dbuf+31)& (0+255),b
  6214                           
  6215                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6216  0028F8  EFFB  F014         	goto	l2991
  6217  0028FC                     l2981:
  6218  0028FC  FFFF               	dw	65535	; assembler added errata NOP
  6219                           
  6220                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  6221  0028FE  063E               	decf	dtoa@i^0,f,c
  6222  002900  A0D8               	btfss	status,0,c
  6223  002902  063F               	decf	(dtoa@i+1)^0,f,c
  6224  002904                     
  6225                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  6226  002904  0E8C               	movlw	low _dbuf
  6227  002906  243E               	addwf	dtoa@i^0,w,c
  6228  002908  6ED9               	movwf	fsr2l,c
  6229  00290A  0E00               	movlw	high _dbuf
  6230  00290C  203F               	addwfc	(dtoa@i+1)^0,w,c
  6231  00290E  6EDA               	movwf	fsr2h,c
  6232  002910  C036  F001         	movff	dtoa@n,___aomod@dividend
  6233  002914  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6234  002918  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6235  00291C  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6236  002920  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6237  002924  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6238  002928  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6239  00292C  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6240  002930  0E0A               	movlw	10
  6241  002932  6E09               	movwf	___aomod@divisor^0,c
  6242  002934  0E00               	movlw	0
  6243  002936  6E0A               	movwf	(___aomod@divisor+1)^0,c
  6244  002938  0E00               	movlw	0
  6245  00293A  6E0B               	movwf	(___aomod@divisor+2)^0,c
  6246  00293C  0E00               	movlw	0
  6247  00293E  6E0C               	movwf	(___aomod@divisor+3)^0,c
  6248  002940  0E00               	movlw	0
  6249  002942  6E0D               	movwf	(___aomod@divisor+4)^0,c
  6250  002944  0E00               	movlw	0
  6251  002946  6E0E               	movwf	(___aomod@divisor+5)^0,c
  6252  002948  0E00               	movlw	0
  6253  00294A  6E0F               	movwf	(___aomod@divisor+6)^0,c
  6254  00294C  0E00               	movlw	0
  6255  00294E  6E10               	movwf	(___aomod@divisor+7)^0,c
  6256  002950  ECE9  F01B         	call	___aomod	;wreg free
  6257  002954  C001  F026         	movff	?___aomod,??_dtoa
  6258  002958  C002  F027         	movff	?___aomod+1,??_dtoa+1
  6259  00295C  C003  F028         	movff	?___aomod+2,??_dtoa+2
  6260  002960  C004  F029         	movff	?___aomod+3,??_dtoa+3
  6261  002964  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  6262  002968  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  6263  00296C  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  6264  002970  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  6265  002974  C026  F013         	movff	??_dtoa,abs@a
  6266  002978  C028  F014         	movff	??_dtoa+2,abs@a+1
  6267  00297C  EC9C  F002         	call	_abs	;wreg free
  6268  002980  5013               	movf	?_abs^0,w,c
  6269  002982  0F30               	addlw	48
  6270  002984  6EDF               	movwf	indf2,c
  6271  002986                     
  6272                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  6273  002986  0630               	decf	dtoa@p^0,f,c
  6274  002988  A0D8               	btfss	status,0,c
  6275  00298A  0631               	decf	(dtoa@p+1)^0,f,c
  6276  00298C                     
  6277                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  6278  00298C  0632               	decf	dtoa@w^0,f,c
  6279  00298E  A0D8               	btfss	status,0,c
  6280  002990  0633               	decf	(dtoa@w+1)^0,f,c
  6281  002992                     
  6282                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  6283  002992  C036  F001         	movff	dtoa@n,___aodiv@dividend
  6284  002996  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  6285  00299A  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  6286  00299E  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  6287  0029A2  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  6288  0029A6  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  6289  0029AA  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  6290  0029AE  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  6291  0029B2  0E0A               	movlw	10
  6292  0029B4  6E09               	movwf	___aodiv@divisor^0,c
  6293  0029B6  0E00               	movlw	0
  6294  0029B8  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  6295  0029BA  0E00               	movlw	0
  6296  0029BC  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  6297  0029BE  0E00               	movlw	0
  6298  0029C0  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  6299  0029C2  0E00               	movlw	0
  6300  0029C4  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  6301  0029C6  0E00               	movlw	0
  6302  0029C8  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  6303  0029CA  0E00               	movlw	0
  6304  0029CC  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  6305  0029CE  0E00               	movlw	0
  6306  0029D0  6E10               	movwf	(___aodiv@divisor+7)^0,c
  6307  0029D2  EC0F  F01B         	call	___aodiv	;wreg free
  6308  0029D6  C001  F036         	movff	?___aodiv,dtoa@n
  6309  0029DA  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  6310  0029DE  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  6311  0029E2  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  6312  0029E6  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  6313  0029EA  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  6314  0029EE  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  6315  0029F2  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  6316  0029F6                     l2991:
  6317  0029F6  FFFF               	dw	65535	; assembler added errata NOP
  6318                           
  6319                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6320  0029F8  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  6321  0029FA  EF07  F015         	goto	u3071
  6322  0029FE  503F               	movf	(dtoa@i+1)^0,w,c
  6323  002A00  E109               	bnz	u3070
  6324  002A02  043E               	decf	dtoa@i^0,w,c
  6325  002A04  A0D8               	btfss	status,0,c
  6326  002A06  EF07  F015         	goto	u3071
  6327  002A0A  EF0A  F015         	goto	u3070
  6328  002A0E                     u3071:
  6329  002A0E  FFFF               	dw	65535	; assembler added errata NOP
  6330  002A10  EF42  F015         	goto	l3001
  6331  002A14                     u3070:
  6332  002A14  FFFF               	dw	65535	; assembler added errata NOP
  6333  002A16  5036               	movf	dtoa@n^0,w,c
  6334  002A18  1037               	iorwf	(dtoa@n+1)^0,w,c
  6335  002A1A  1038               	iorwf	(dtoa@n+2)^0,w,c
  6336  002A1C  1039               	iorwf	(dtoa@n+3)^0,w,c
  6337  002A1E  103A               	iorwf	(dtoa@n+4)^0,w,c
  6338  002A20  103B               	iorwf	(dtoa@n+5)^0,w,c
  6339  002A22  103C               	iorwf	(dtoa@n+6)^0,w,c
  6340  002A24  103D               	iorwf	(dtoa@n+7)^0,w,c
  6341  002A26  A4D8               	btfss	status,2,c
  6342  002A28  EF18  F015         	goto	u3081
  6343  002A2C  EF1B  F015         	goto	u3080
  6344  002A30                     u3081:
  6345  002A30  FFFF               	dw	65535	; assembler added errata NOP
  6346  002A32  EF7E  F014         	goto	l2981
  6347  002A36                     u3080:
  6348  002A36  FFFF               	dw	65535	; assembler added errata NOP
  6349  002A38  BE31               	btfsc	(dtoa@p+1)^0,7,c
  6350  002A3A  EF2A  F015         	goto	u3090
  6351  002A3E  5031               	movf	(dtoa@p+1)^0,w,c
  6352  002A40  E106               	bnz	u3091
  6353  002A42  0430               	decf	dtoa@p^0,w,c
  6354  002A44  B0D8               	btfsc	status,0,c
  6355  002A46  EF27  F015         	goto	u3091
  6356  002A4A  EF2A  F015         	goto	u3090
  6357  002A4E                     u3091:
  6358  002A4E  FFFF               	dw	65535	; assembler added errata NOP
  6359  002A50  EF7E  F014         	goto	l2981
  6360  002A54                     u3090:
  6361  002A54  FFFF               	dw	65535	; assembler added errata NOP
  6362  002A56  BE33               	btfsc	(dtoa@w+1)^0,7,c
  6363  002A58  EF36  F015         	goto	u3101
  6364  002A5C  5033               	movf	(dtoa@w+1)^0,w,c
  6365  002A5E  E109               	bnz	u3100
  6366  002A60  0432               	decf	dtoa@w^0,w,c
  6367  002A62  A0D8               	btfss	status,0,c
  6368  002A64  EF36  F015         	goto	u3101
  6369  002A68  EF39  F015         	goto	u3100
  6370  002A6C                     u3101:
  6371  002A6C  FFFF               	dw	65535	; assembler added errata NOP
  6372  002A6E  EF42  F015         	goto	l3001
  6373  002A72                     u3100:
  6374  002A72  FFFF               	dw	65535	; assembler added errata NOP
  6375  002A74  B27D               	btfsc	_flags^0,1,c
  6376  002A76  EF3F  F015         	goto	u3111
  6377  002A7A  EF42  F015         	goto	u3110
  6378  002A7E                     u3111:
  6379  002A7E  FFFF               	dw	65535	; assembler added errata NOP
  6380  002A80  EF7E  F014         	goto	l2981
  6381  002A84                     u3110:
  6382  002A84                     l3001:
  6383  002A84  FFFF               	dw	65535	; assembler added errata NOP
  6384                           
  6385                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  6386  002A86  5034               	movf	dtoa@s^0,w,c
  6387  002A88  1035               	iorwf	(dtoa@s+1)^0,w,c
  6388  002A8A  A4D8               	btfss	status,2,c
  6389  002A8C  EF4A  F015         	goto	u3121
  6390  002A90  EF4D  F015         	goto	u3120
  6391  002A94                     u3121:
  6392  002A94  FFFF               	dw	65535	; assembler added errata NOP
  6393  002A96  EF56  F015         	goto	l3005
  6394  002A9A                     u3120:
  6395  002A9A  FFFF               	dw	65535	; assembler added errata NOP
  6396  002A9C  A47D               	btfss	_flags^0,2,c
  6397  002A9E  EF53  F015         	goto	u3131
  6398  002AA2  EF56  F015         	goto	u3130
  6399  002AA6                     u3131:
  6400  002AA6  FFFF               	dw	65535	; assembler added errata NOP
  6401  002AA8  EF79  F015         	goto	l3015
  6402  002AAC                     u3130:
  6403  002AAC                     l3005:
  6404  002AAC  FFFF               	dw	65535	; assembler added errata NOP
  6405                           
  6406                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  6407  002AAE  063E               	decf	dtoa@i^0,f,c
  6408  002AB0  A0D8               	btfss	status,0,c
  6409  002AB2  063F               	decf	(dtoa@i+1)^0,f,c
  6410  002AB4                     
  6411                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  6412  002AB4  5034               	movf	dtoa@s^0,w,c
  6413  002AB6  1035               	iorwf	(dtoa@s+1)^0,w,c
  6414  002AB8  A4D8               	btfss	status,2,c
  6415  002ABA  EF61  F015         	goto	u3141
  6416  002ABE  EF64  F015         	goto	u3140
  6417  002AC2                     u3141:
  6418  002AC2  FFFF               	dw	65535	; assembler added errata NOP
  6419  002AC4  EF6B  F015         	goto	l3011
  6420  002AC8                     u3140:
  6421  002AC8  FFFF               	dw	65535	; assembler added errata NOP
  6422  002ACA  0E00               	movlw	0
  6423  002ACC  6E2F               	movwf	(_dtoa$1181+1)^0,c
  6424  002ACE  0E2B               	movlw	43
  6425  002AD0  6E2E               	movwf	_dtoa$1181^0,c
  6426  002AD2  EF70  F015         	goto	l3013
  6427  002AD6                     l3011:
  6428  002AD6  FFFF               	dw	65535	; assembler added errata NOP
  6429  002AD8  0E00               	movlw	0
  6430  002ADA  6E2F               	movwf	(_dtoa$1181+1)^0,c
  6431  002ADC  0E2D               	movlw	45
  6432  002ADE  6E2E               	movwf	_dtoa$1181^0,c
  6433  002AE0                     l3013:
  6434  002AE0  FFFF               	dw	65535	; assembler added errata NOP
  6435  002AE2  0E8C               	movlw	low _dbuf
  6436  002AE4  243E               	addwf	dtoa@i^0,w,c
  6437  002AE6  6ED9               	movwf	fsr2l,c
  6438  002AE8  0E00               	movlw	high _dbuf
  6439  002AEA  203F               	addwfc	(dtoa@i+1)^0,w,c
  6440  002AEC  6EDA               	movwf	fsr2h,c
  6441  002AEE  C02E  FFDF         	movff	_dtoa$1181,indf2
  6442  002AF2                     l3015:
  6443  002AF2  FFFF               	dw	65535	; assembler added errata NOP
  6444                           
  6445                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  6446  002AF4  C01C  F011         	movff	dtoa@fp,pad@fp
  6447  002AF8  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6448  002AFC  0E8C               	movlw	low _dbuf
  6449  002AFE  243E               	addwf	dtoa@i^0,w,c
  6450  002B00  6E13               	movwf	pad@buf^0,c
  6451  002B02  0E00               	movlw	high _dbuf
  6452  002B04  203F               	addwfc	(dtoa@i+1)^0,w,c
  6453  002B06  6E14               	movwf	(pad@buf+1)^0,c
  6454  002B08  C032  F015         	movff	dtoa@w,pad@p
  6455  002B0C  C033  F016         	movff	dtoa@w+1,pad@p+1
  6456  002B10  EC22  F000         	call	_pad	;wreg free
  6457  002B14  C011  F01C         	movff	?_pad,?_dtoa
  6458  002B18  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6459  002B1C  0012               	return		;funcret
  6460  002B1E  FFFF               	dw	65535	; errata NOP
  6461  002B20                     __end_of_dtoa:
  6462                           	callstack 0
  6463                           
  6464 ;; *************** function _abs *****************
  6465 ;; Defined at:
  6466 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;  a               2   18[COMRAM] int 
  6469 ;; Auto vars:     Size  Location     Type
  6470 ;;		None
  6471 ;; Return value:  Size  Location     Type
  6472 ;;                  2   18[COMRAM] int 
  6473 ;; Registers used:
  6474 ;;		wreg, status,2, status,0
  6475 ;; Tracked objects:
  6476 ;;		On entry : 0/0
  6477 ;;		On exit  : 0/0
  6478 ;;		Unchanged: 0/0
  6479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6480 ;;      Params:         2       0       0       0       0       0       0
  6481 ;;      Locals:         0       0       0       0       0       0       0
  6482 ;;      Temps:          2       0       0       0       0       0       0
  6483 ;;      Totals:         4       0       0       0       0       0       0
  6484 ;;Total ram usage:        4 bytes
  6485 ;; Hardware stack levels used:    1
  6486 ;; Hardware stack levels required when called:    1
  6487 ;; This function calls:
  6488 ;;		Nothing
  6489 ;; This function is called by:
  6490 ;;		_dtoa
  6491 ;; This function uses a non-reentrant model
  6492 ;;
  6493                           
  6494                           	psect	text17
  6495  000538                     __ptext17:
  6496                           	callstack 0
  6497  000538                     _abs:
  6498                           	callstack 0
  6499  000538  FFFF               	dw	65535	; assembler added errata NOP
  6500  00053A  BE14               	btfsc	(abs@a+1)^0,7,c
  6501  00053C  EFAB  F002         	goto	u2870
  6502  000540  5014               	movf	(abs@a+1)^0,w,c
  6503  000542  E106               	bnz	u2871
  6504  000544  0413               	decf	abs@a^0,w,c
  6505  000546  B0D8               	btfsc	status,0,c
  6506  000548  EFA8  F002         	goto	u2871
  6507  00054C  EFAB  F002         	goto	u2870
  6508  000550                     u2871:
  6509  000550  FFFF               	dw	65535	; assembler added errata NOP
  6510  000552  EFBA  F002         	goto	l1082
  6511  000556                     u2870:
  6512  000556  FFFF               	dw	65535	; assembler added errata NOP
  6513  000558  C013  F015         	movff	abs@a,??_abs
  6514  00055C  C014  F016         	movff	abs@a+1,??_abs+1
  6515  000560  1E15               	comf	??_abs^0,f,c
  6516  000562  1E16               	comf	(??_abs+1)^0,f,c
  6517  000564  4A15               	infsnz	??_abs^0,f,c
  6518  000566  2A16               	incf	(??_abs+1)^0,f,c
  6519  000568  C015  F013         	movff	??_abs,?_abs
  6520  00056C  C016  F014         	movff	??_abs+1,?_abs+1
  6521  000570  EFBF  F002         	goto	l1085
  6522  000574                     l1082:
  6523  000574  FFFF               	dw	65535	; assembler added errata NOP
  6524  000576  C013  F013         	movff	abs@a,?_abs
  6525  00057A  C014  F014         	movff	abs@a+1,?_abs+1
  6526  00057E                     l1085:
  6527  00057E  FFFF               	dw	65535	; assembler added errata NOP
  6528  000580  0012               	return		;funcret
  6529  000582  FFFF               	dw	65535	; errata NOP
  6530  000584                     __end_of_abs:
  6531                           	callstack 0
  6532                           
  6533 ;; *************** function ___aomod *****************
  6534 ;; Defined at:
  6535 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  6536 ;; Parameters:    Size  Location     Type
  6537 ;;  dividend        8    0[COMRAM] long long 
  6538 ;;  divisor         8    8[COMRAM] long long 
  6539 ;; Auto vars:     Size  Location     Type
  6540 ;;  sign            1   17[COMRAM] unsigned char 
  6541 ;;  counter         1   16[COMRAM] unsigned char 
  6542 ;; Return value:  Size  Location     Type
  6543 ;;                  8    0[COMRAM] long long 
  6544 ;; Registers used:
  6545 ;;		wreg, status,2, status,0
  6546 ;; Tracked objects:
  6547 ;;		On entry : 0/0
  6548 ;;		On exit  : 0/0
  6549 ;;		Unchanged: 0/0
  6550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6551 ;;      Params:        16       0       0       0       0       0       0
  6552 ;;      Locals:         2       0       0       0       0       0       0
  6553 ;;      Temps:          0       0       0       0       0       0       0
  6554 ;;      Totals:        18       0       0       0       0       0       0
  6555 ;;Total ram usage:       18 bytes
  6556 ;; Hardware stack levels used:    1
  6557 ;; Hardware stack levels required when called:    1
  6558 ;; This function calls:
  6559 ;;		Nothing
  6560 ;; This function is called by:
  6561 ;;		_dtoa
  6562 ;; This function uses a non-reentrant model
  6563 ;;
  6564                           
  6565                           	psect	text18
  6566  0037D2                     __ptext18:
  6567                           	callstack 0
  6568  0037D2                     ___aomod:
  6569                           	callstack 0
  6570  0037D2  FFFF               	dw	65535	; assembler added errata NOP
  6571  0037D4  0E00               	movlw	0
  6572  0037D6  6E12               	movwf	___aomod@sign^0,c
  6573  0037D8  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6574  0037DA  EFF4  F01B         	goto	u2700
  6575  0037DE  EFF1  F01B         	goto	u2701
  6576  0037E2                     u2701:
  6577  0037E2  FFFF               	dw	65535	; assembler added errata NOP
  6578  0037E4  EF07  F01C         	goto	l2817
  6579  0037E8                     u2700:
  6580  0037E8  FFFF               	dw	65535	; assembler added errata NOP
  6581  0037EA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6582  0037EC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6583  0037EE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6584  0037F0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6585  0037F2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6586  0037F4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6587  0037F6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6588  0037F8  6C01               	negf	___aomod@dividend^0,c
  6589  0037FA  0E00               	movlw	0
  6590  0037FC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6591  0037FE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6592  003800  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6593  003802  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6594  003804  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6595  003806  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6596  003808  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6597  00380A  0E01               	movlw	1
  6598  00380C  6E12               	movwf	___aomod@sign^0,c
  6599  00380E                     l2817:
  6600  00380E  FFFF               	dw	65535	; assembler added errata NOP
  6601  003810  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6602  003812  EF10  F01C         	goto	u2710
  6603  003816  EF0D  F01C         	goto	u2711
  6604  00381A                     u2711:
  6605  00381A  FFFF               	dw	65535	; assembler added errata NOP
  6606  00381C  EF21  F01C         	goto	l2821
  6607  003820                     u2710:
  6608  003820  FFFF               	dw	65535	; assembler added errata NOP
  6609  003822  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6610  003824  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6611  003826  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6612  003828  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6613  00382A  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6614  00382C  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6615  00382E  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6616  003830  6C09               	negf	___aomod@divisor^0,c
  6617  003832  0E00               	movlw	0
  6618  003834  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6619  003836  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6620  003838  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6621  00383A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6622  00383C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6623  00383E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6624  003840  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6625  003842                     l2821:
  6626  003842  FFFF               	dw	65535	; assembler added errata NOP
  6627  003844  5009               	movf	___aomod@divisor^0,w,c
  6628  003846  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6629  003848  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6630  00384A  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6631  00384C  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6632  00384E  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6633  003850  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6634  003852  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6635  003854  B4D8               	btfsc	status,2,c
  6636  003856  EF2F  F01C         	goto	u2721
  6637  00385A  EF32  F01C         	goto	u2720
  6638  00385E                     u2721:
  6639  00385E  FFFF               	dw	65535	; assembler added errata NOP
  6640  003860  EF83  F01C         	goto	l2837
  6641  003864                     u2720:
  6642  003864  FFFF               	dw	65535	; assembler added errata NOP
  6643  003866  0E01               	movlw	1
  6644  003868  6E11               	movwf	___aomod@counter^0,c
  6645  00386A  EF42  F01C         	goto	l2827
  6646  00386E                     l2825:
  6647  00386E  FFFF               	dw	65535	; assembler added errata NOP
  6648  003870  90D8               	bcf	status,0,c
  6649  003872  3609               	rlcf	___aomod@divisor^0,f,c
  6650  003874  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6651  003876  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6652  003878  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6653  00387A  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6654  00387C  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6655  00387E  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6656  003880  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6657  003882  2A11               	incf	___aomod@counter^0,f,c
  6658  003884                     l2827:
  6659  003884  FFFF               	dw	65535	; assembler added errata NOP
  6660  003886  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6661  003888  EF48  F01C         	goto	u2731
  6662  00388C  EF4B  F01C         	goto	u2730
  6663  003890                     u2731:
  6664  003890  FFFF               	dw	65535	; assembler added errata NOP
  6665  003892  EF37  F01C         	goto	l2825
  6666  003896                     u2730:
  6667  003896  FFFF               	dw	65535	; assembler added errata NOP
  6668  003898                     l2829:
  6669  003898  FFFF               	dw	65535	; assembler added errata NOP
  6670  00389A  5009               	movf	___aomod@divisor^0,w,c
  6671  00389C  5C01               	subwf	___aomod@dividend^0,w,c
  6672  00389E  500A               	movf	(___aomod@divisor+1)^0,w,c
  6673  0038A0  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6674  0038A2  500B               	movf	(___aomod@divisor+2)^0,w,c
  6675  0038A4  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6676  0038A6  500C               	movf	(___aomod@divisor+3)^0,w,c
  6677  0038A8  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6678  0038AA  500D               	movf	(___aomod@divisor+4)^0,w,c
  6679  0038AC  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6680  0038AE  500E               	movf	(___aomod@divisor+5)^0,w,c
  6681  0038B0  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6682  0038B2  500F               	movf	(___aomod@divisor+6)^0,w,c
  6683  0038B4  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6684  0038B6  5010               	movf	(___aomod@divisor+7)^0,w,c
  6685  0038B8  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6686  0038BA  A0D8               	btfss	status,0,c
  6687  0038BC  EF62  F01C         	goto	u2741
  6688  0038C0  EF65  F01C         	goto	u2740
  6689  0038C4                     u2741:
  6690  0038C4  FFFF               	dw	65535	; assembler added errata NOP
  6691  0038C6  EF76  F01C         	goto	l2833
  6692  0038CA                     u2740:
  6693  0038CA  FFFF               	dw	65535	; assembler added errata NOP
  6694  0038CC  5009               	movf	___aomod@divisor^0,w,c
  6695  0038CE  5E01               	subwf	___aomod@dividend^0,f,c
  6696  0038D0  500A               	movf	(___aomod@divisor+1)^0,w,c
  6697  0038D2  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6698  0038D4  500B               	movf	(___aomod@divisor+2)^0,w,c
  6699  0038D6  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6700  0038D8  500C               	movf	(___aomod@divisor+3)^0,w,c
  6701  0038DA  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6702  0038DC  500D               	movf	(___aomod@divisor+4)^0,w,c
  6703  0038DE  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6704  0038E0  500E               	movf	(___aomod@divisor+5)^0,w,c
  6705  0038E2  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6706  0038E4  500F               	movf	(___aomod@divisor+6)^0,w,c
  6707  0038E6  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6708  0038E8  5010               	movf	(___aomod@divisor+7)^0,w,c
  6709  0038EA  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6710  0038EC                     l2833:
  6711  0038EC  FFFF               	dw	65535	; assembler added errata NOP
  6712  0038EE  90D8               	bcf	status,0,c
  6713  0038F0  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6714  0038F2  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6715  0038F4  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6716  0038F6  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6717  0038F8  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6718  0038FA  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6719  0038FC  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6720  0038FE  3209               	rrcf	___aomod@divisor^0,f,c
  6721  003900  2E11               	decfsz	___aomod@counter^0,f,c
  6722  003902  EF4C  F01C         	goto	l2829
  6723  003906                     l2837:
  6724  003906  FFFF               	dw	65535	; assembler added errata NOP
  6725  003908  5012               	movf	___aomod@sign^0,w,c
  6726  00390A  B4D8               	btfsc	status,2,c
  6727  00390C  EF8A  F01C         	goto	u2751
  6728  003910  EF8D  F01C         	goto	u2750
  6729  003914                     u2751:
  6730  003914  FFFF               	dw	65535	; assembler added errata NOP
  6731  003916  EF9E  F01C         	goto	l2841
  6732  00391A                     u2750:
  6733  00391A  FFFF               	dw	65535	; assembler added errata NOP
  6734  00391C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6735  00391E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6736  003920  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6737  003922  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6738  003924  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6739  003926  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6740  003928  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6741  00392A  6C01               	negf	___aomod@dividend^0,c
  6742  00392C  0E00               	movlw	0
  6743  00392E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6744  003930  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6745  003932  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6746  003934  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6747  003936  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6748  003938  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6749  00393A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6750  00393C                     l2841:
  6751  00393C  FFFF               	dw	65535	; assembler added errata NOP
  6752  00393E  C001  F001         	movff	___aomod@dividend,?___aomod
  6753  003942  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6754  003946  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6755  00394A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6756  00394E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6757  003952  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6758  003956  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6759  00395A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6760  00395E  0012               	return		;funcret
  6761  003960  FFFF               	dw	65535	; errata NOP
  6762  003962                     __end_of___aomod:
  6763                           	callstack 0
  6764                           
  6765 ;; *************** function ___aodiv *****************
  6766 ;; Defined at:
  6767 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;  dividend        8    0[COMRAM] long long 
  6770 ;;  divisor         8    8[COMRAM] long long 
  6771 ;; Auto vars:     Size  Location     Type
  6772 ;;  quotient        8   18[COMRAM] long long 
  6773 ;;  sign            1   17[COMRAM] unsigned char 
  6774 ;;  counter         1   16[COMRAM] unsigned char 
  6775 ;; Return value:  Size  Location     Type
  6776 ;;                  8    0[COMRAM] long long 
  6777 ;; Registers used:
  6778 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6779 ;; Tracked objects:
  6780 ;;		On entry : 0/0
  6781 ;;		On exit  : 0/0
  6782 ;;		Unchanged: 0/0
  6783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6784 ;;      Params:        16       0       0       0       0       0       0
  6785 ;;      Locals:        10       0       0       0       0       0       0
  6786 ;;      Temps:          0       0       0       0       0       0       0
  6787 ;;      Totals:        26       0       0       0       0       0       0
  6788 ;;Total ram usage:       26 bytes
  6789 ;; Hardware stack levels used:    1
  6790 ;; Hardware stack levels required when called:    1
  6791 ;; This function calls:
  6792 ;;		Nothing
  6793 ;; This function is called by:
  6794 ;;		_dtoa
  6795 ;; This function uses a non-reentrant model
  6796 ;;
  6797                           
  6798                           	psect	text19
  6799  00361E                     __ptext19:
  6800                           	callstack 0
  6801  00361E                     ___aodiv:
  6802                           	callstack 0
  6803  00361E  FFFF               	dw	65535	; assembler added errata NOP
  6804  003620  0E00               	movlw	0
  6805  003622  6E12               	movwf	___aodiv@sign^0,c
  6806  003624  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6807  003626  EF1A  F01B         	goto	u2630
  6808  00362A  EF17  F01B         	goto	u2631
  6809  00362E                     u2631:
  6810  00362E  FFFF               	dw	65535	; assembler added errata NOP
  6811  003630  EF2D  F01B         	goto	l2773
  6812  003634                     u2630:
  6813  003634  FFFF               	dw	65535	; assembler added errata NOP
  6814  003636  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6815  003638  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6816  00363A  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6817  00363C  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6818  00363E  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6819  003640  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6820  003642  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6821  003644  6C09               	negf	___aodiv@divisor^0,c
  6822  003646  0E00               	movlw	0
  6823  003648  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6824  00364A  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6825  00364C  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6826  00364E  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6827  003650  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6828  003652  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6829  003654  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6830  003656  0E01               	movlw	1
  6831  003658  6E12               	movwf	___aodiv@sign^0,c
  6832  00365A                     l2773:
  6833  00365A  FFFF               	dw	65535	; assembler added errata NOP
  6834  00365C  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6835  00365E  EF36  F01B         	goto	u2640
  6836  003662  EF33  F01B         	goto	u2641
  6837  003666                     u2641:
  6838  003666  FFFF               	dw	65535	; assembler added errata NOP
  6839  003668  EF49  F01B         	goto	l2779
  6840  00366C                     u2640:
  6841  00366C  FFFF               	dw	65535	; assembler added errata NOP
  6842  00366E  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6843  003670  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6844  003672  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6845  003674  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6846  003676  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6847  003678  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6848  00367A  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6849  00367C  6C01               	negf	___aodiv@dividend^0,c
  6850  00367E  0E00               	movlw	0
  6851  003680  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6852  003682  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6853  003684  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6854  003686  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6855  003688  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6856  00368A  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6857  00368C  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6858  00368E  0E01               	movlw	1
  6859  003690  1A12               	xorwf	___aodiv@sign^0,f,c
  6860  003692                     l2779:
  6861  003692  FFFF               	dw	65535	; assembler added errata NOP
  6862  003694  EE20  F013         	lfsr	2,___aodiv@quotient
  6863  003698  0E07               	movlw	7
  6864  00369A                     u2651:
  6865  00369A  6ADE               	clrf	postinc2,c
  6866  00369C  06E8               	decf	wreg,f,c
  6867  00369E  E2FD               	bc	u2651
  6868  0036A0  5009               	movf	___aodiv@divisor^0,w,c
  6869  0036A2  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6870  0036A4  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6871  0036A6  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6872  0036A8  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6873  0036AA  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6874  0036AC  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6875  0036AE  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6876  0036B0  B4D8               	btfsc	status,2,c
  6877  0036B2  EF5D  F01B         	goto	u2661
  6878  0036B6  EF60  F01B         	goto	u2660
  6879  0036BA                     u2661:
  6880  0036BA  FFFF               	dw	65535	; assembler added errata NOP
  6881  0036BC  EFBB  F01B         	goto	l2801
  6882  0036C0                     u2660:
  6883  0036C0  FFFF               	dw	65535	; assembler added errata NOP
  6884  0036C2  0E01               	movlw	1
  6885  0036C4  6E11               	movwf	___aodiv@counter^0,c
  6886  0036C6  EF70  F01B         	goto	l2787
  6887  0036CA                     l2785:
  6888  0036CA  FFFF               	dw	65535	; assembler added errata NOP
  6889  0036CC  90D8               	bcf	status,0,c
  6890  0036CE  3609               	rlcf	___aodiv@divisor^0,f,c
  6891  0036D0  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6892  0036D2  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6893  0036D4  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6894  0036D6  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6895  0036D8  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6896  0036DA  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6897  0036DC  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6898  0036DE  2A11               	incf	___aodiv@counter^0,f,c
  6899  0036E0                     l2787:
  6900  0036E0  FFFF               	dw	65535	; assembler added errata NOP
  6901  0036E2  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6902  0036E4  EF76  F01B         	goto	u2671
  6903  0036E8  EF79  F01B         	goto	u2670
  6904  0036EC                     u2671:
  6905  0036EC  FFFF               	dw	65535	; assembler added errata NOP
  6906  0036EE  EF65  F01B         	goto	l2785
  6907  0036F2                     u2670:
  6908  0036F2  FFFF               	dw	65535	; assembler added errata NOP
  6909  0036F4                     l2789:
  6910  0036F4  FFFF               	dw	65535	; assembler added errata NOP
  6911  0036F6  90D8               	bcf	status,0,c
  6912  0036F8  3613               	rlcf	___aodiv@quotient^0,f,c
  6913  0036FA  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6914  0036FC  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6915  0036FE  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6916  003700  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6917  003702  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6918  003704  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6919  003706  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6920  003708  5009               	movf	___aodiv@divisor^0,w,c
  6921  00370A  5C01               	subwf	___aodiv@dividend^0,w,c
  6922  00370C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6923  00370E  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6924  003710  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6925  003712  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6926  003714  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6927  003716  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6928  003718  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6929  00371A  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6930  00371C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6931  00371E  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6932  003720  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6933  003722  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6934  003724  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6935  003726  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6936  003728  A0D8               	btfss	status,0,c
  6937  00372A  EF99  F01B         	goto	u2681
  6938  00372E  EF9C  F01B         	goto	u2680
  6939  003732                     u2681:
  6940  003732  FFFF               	dw	65535	; assembler added errata NOP
  6941  003734  EFAE  F01B         	goto	l2797
  6942  003738                     u2680:
  6943  003738  FFFF               	dw	65535	; assembler added errata NOP
  6944  00373A  5009               	movf	___aodiv@divisor^0,w,c
  6945  00373C  5E01               	subwf	___aodiv@dividend^0,f,c
  6946  00373E  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6947  003740  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6948  003742  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6949  003744  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6950  003746  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6951  003748  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6952  00374A  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6953  00374C  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6954  00374E  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6955  003750  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6956  003752  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6957  003754  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6958  003756  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6959  003758  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6960  00375A  8013               	bsf	___aodiv@quotient^0,0,c
  6961  00375C                     l2797:
  6962  00375C  FFFF               	dw	65535	; assembler added errata NOP
  6963  00375E  90D8               	bcf	status,0,c
  6964  003760  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6965  003762  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6966  003764  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6967  003766  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6968  003768  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6969  00376A  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6970  00376C  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6971  00376E  3209               	rrcf	___aodiv@divisor^0,f,c
  6972  003770  2E11               	decfsz	___aodiv@counter^0,f,c
  6973  003772  EF7A  F01B         	goto	l2789
  6974  003776                     l2801:
  6975  003776  FFFF               	dw	65535	; assembler added errata NOP
  6976  003778  5012               	movf	___aodiv@sign^0,w,c
  6977  00377A  B4D8               	btfsc	status,2,c
  6978  00377C  EFC2  F01B         	goto	u2691
  6979  003780  EFC5  F01B         	goto	u2690
  6980  003784                     u2691:
  6981  003784  FFFF               	dw	65535	; assembler added errata NOP
  6982  003786  EFD6  F01B         	goto	l2805
  6983  00378A                     u2690:
  6984  00378A  FFFF               	dw	65535	; assembler added errata NOP
  6985  00378C  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6986  00378E  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6987  003790  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6988  003792  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6989  003794  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6990  003796  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6991  003798  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6992  00379A  6C13               	negf	___aodiv@quotient^0,c
  6993  00379C  0E00               	movlw	0
  6994  00379E  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6995  0037A0  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6996  0037A2  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6997  0037A4  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6998  0037A6  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6999  0037A8  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  7000  0037AA  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  7001  0037AC                     l2805:
  7002  0037AC  FFFF               	dw	65535	; assembler added errata NOP
  7003  0037AE  C013  F001         	movff	___aodiv@quotient,?___aodiv
  7004  0037B2  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  7005  0037B6  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  7006  0037BA  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  7007  0037BE  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  7008  0037C2  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  7009  0037C6  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  7010  0037CA  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  7011  0037CE  0012               	return		;funcret
  7012  0037D0  FFFF               	dw	65535	; errata NOP
  7013  0037D2                     __end_of___aodiv:
  7014                           	callstack 0
  7015                           
  7016 ;; *************** function _ctoa *****************
  7017 ;; Defined at:
  7018 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7019 ;; Parameters:    Size  Location     Type
  7020 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7021 ;;		 -> vsnprintf@f(6), 
  7022 ;;  c               1   29[COMRAM] unsigned char 
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;  w               2   30[COMRAM] int 
  7025 ;;  l               2    0        int 
  7026 ;; Return value:  Size  Location     Type
  7027 ;;                  2   27[COMRAM] int 
  7028 ;; Registers used:
  7029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7030 ;; Tracked objects:
  7031 ;;		On entry : 0/0
  7032 ;;		On exit  : 0/0
  7033 ;;		Unchanged: 0/0
  7034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7035 ;;      Params:         3       0       0       0       0       0       0
  7036 ;;      Locals:         2       0       0       0       0       0       0
  7037 ;;      Temps:          0       0       0       0       0       0       0
  7038 ;;      Totals:         5       0       0       0       0       0       0
  7039 ;;Total ram usage:        5 bytes
  7040 ;; Hardware stack levels used:    1
  7041 ;; Hardware stack levels required when called:    5
  7042 ;; This function calls:
  7043 ;;		_pad
  7044 ;; This function is called by:
  7045 ;;		_vfpfcnvrt
  7046 ;; This function uses a non-reentrant model
  7047 ;;
  7048                           
  7049                           	psect	text20
  7050  000422                     __ptext20:
  7051                           	callstack 0
  7052  000422                     _ctoa:
  7053                           	callstack 0
  7054  000422  FFFF               	dw	65535	; assembler added errata NOP
  7055  000424                     
  7056                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  7057  000424  0100               	movlb	0	; () banked
  7058  000426  5186               	movf	_width& (0+255),w,b
  7059  000428  1187               	iorwf	(_width+1)& (0+255),w,b
  7060  00042A  A4D8               	btfss	status,2,c
  7061  00042C  EF1A  F002         	goto	u2991
  7062  000430  EF1D  F002         	goto	u2990
  7063  000434                     u2991:
  7064  000434  FFFF               	dw	65535	; assembler added errata NOP
  7065  000436  EF24  F002         	goto	l2947
  7066  00043A                     u2990:
  7067  00043A  FFFF               	dw	65535	; assembler added errata NOP
  7068  00043C                     
  7069                           ; BSR set to: 0
  7070  00043C  C086  F01F         	movff	_width,ctoa@w
  7071  000440  C087  F020         	movff	_width+1,ctoa@w+1
  7072  000444  EF2B  F002         	goto	l2949
  7073  000448                     l2947:
  7074  000448  FFFF               	dw	65535	; assembler added errata NOP
  7075                           
  7076                           ; BSR set to: 0
  7077  00044A  0EFF               	movlw	255
  7078  00044C  2586               	addwf	_width& (0+255),w,b
  7079  00044E  6E1F               	movwf	ctoa@w^0,c
  7080  000450  0EFF               	movlw	255
  7081  000452  2187               	addwfc	(_width+1)& (0+255),w,b
  7082  000454  6E20               	movwf	(ctoa@w+1)^0,c
  7083  000456                     l2949:
  7084  000456  FFFF               	dw	65535	; assembler added errata NOP
  7085                           
  7086                           ; BSR set to: 0
  7087                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 267:     dbuf[0] 
      +                          = c;
  7088  000458  C01E  F08C         	movff	ctoa@c,_dbuf
  7089  00045C                     
  7090                           ; BSR set to: 0
  7091                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 268:     dbuf[1] 
      +                          = '\0';
  7092  00045C  0E00               	movlw	0
  7093  00045E  6F8D               	movwf	(_dbuf+1)& (0+255),b
  7094  000460                     
  7095                           ; BSR set to: 0
  7096                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 269:     return p
      +                          ad(fp, &dbuf[0], w);
  7097  000460  C01C  F011         	movff	ctoa@fp,pad@fp
  7098  000464  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  7099  000468  0E8C               	movlw	low _dbuf
  7100  00046A  6E13               	movwf	pad@buf^0,c
  7101  00046C  0E00               	movlw	high _dbuf
  7102  00046E  6E14               	movwf	(pad@buf+1)^0,c
  7103  000470  C01F  F015         	movff	ctoa@w,pad@p
  7104  000474  C020  F016         	movff	ctoa@w+1,pad@p+1
  7105  000478  EC22  F000         	call	_pad	;wreg free
  7106  00047C  C011  F01C         	movff	?_pad,?_ctoa
  7107  000480  C012  F01D         	movff	?_pad+1,?_ctoa+1
  7108  000484  0012               	return		;funcret
  7109  000486  FFFF               	dw	65535	; errata NOP
  7110  000488                     __end_of_ctoa:
  7111                           	callstack 0
  7112                           
  7113 ;; *************** function _pad *****************
  7114 ;; Defined at:
  7115 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7118 ;;		 -> vsnprintf@f(6), 
  7119 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7120 ;;		 -> dbuf(32), 
  7121 ;;  p               2   20[COMRAM] int 
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;  w               2   25[COMRAM] int 
  7124 ;;  i               2   23[COMRAM] int 
  7125 ;; Return value:  Size  Location     Type
  7126 ;;                  2   16[COMRAM] int 
  7127 ;; Registers used:
  7128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7129 ;; Tracked objects:
  7130 ;;		On entry : 0/0
  7131 ;;		On exit  : 0/0
  7132 ;;		Unchanged: 0/0
  7133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7134 ;;      Params:         6       0       0       0       0       0       0
  7135 ;;      Locals:         4       0       0       0       0       0       0
  7136 ;;      Temps:          1       0       0       0       0       0       0
  7137 ;;      Totals:        11       0       0       0       0       0       0
  7138 ;;Total ram usage:       11 bytes
  7139 ;; Hardware stack levels used:    1
  7140 ;; Hardware stack levels required when called:    4
  7141 ;; This function calls:
  7142 ;;		_fputc
  7143 ;;		_fputs
  7144 ;;		_strlen
  7145 ;; This function is called by:
  7146 ;;		_ctoa
  7147 ;;		_dtoa
  7148 ;;		_otoa
  7149 ;;		_utoa
  7150 ;;		_xtoa
  7151 ;; This function uses a non-reentrant model
  7152 ;;
  7153                           
  7154                           	psect	text21
  7155  000044                     __ptext21:
  7156                           	callstack 0
  7157  000044                     _pad:
  7158                           	callstack 0
  7159  000044  FFFF               	dw	65535	; assembler added errata NOP
  7160  000046                     
  7161                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7162  000046  A07D               	btfss	_flags^0,0,c
  7163  000048  EF28  F000         	goto	u2831
  7164  00004C  EF2B  F000         	goto	u2830
  7165  000050                     u2831:
  7166  000050  FFFF               	dw	65535	; assembler added errata NOP
  7167  000052  EF36  F000         	goto	l2887
  7168  000056                     u2830:
  7169  000056  FFFF               	dw	65535	; assembler added errata NOP
  7170  000058                     
  7171                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7172  000058  C013  F00A         	movff	pad@buf,fputs@s
  7173  00005C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7174  000060  C011  F00C         	movff	pad@fp,fputs@fp
  7175  000064  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7176  000068  EC74  F002         	call	_fputs	;wreg free
  7177  00006C                     l2887:
  7178  00006C  FFFF               	dw	65535	; assembler added errata NOP
  7179                           
  7180                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7181  00006E  BE16               	btfsc	(pad@p+1)^0,7,c
  7182  000070  EF3C  F000         	goto	u2841
  7183  000074  EF3F  F000         	goto	u2840
  7184  000078                     u2841:
  7185  000078  FFFF               	dw	65535	; assembler added errata NOP
  7186  00007A  EF46  F000         	goto	l2891
  7187  00007E                     u2840:
  7188  00007E  FFFF               	dw	65535	; assembler added errata NOP
  7189  000080  C015  F01A         	movff	pad@p,pad@w
  7190  000084  C016  F01B         	movff	pad@p+1,pad@w+1
  7191  000088  EF4B  F000         	goto	l874
  7192  00008C                     l2891:
  7193  00008C  FFFF               	dw	65535	; assembler added errata NOP
  7194  00008E  0E00               	movlw	0
  7195  000090  6E1B               	movwf	(pad@w+1)^0,c
  7196  000092  0E00               	movlw	0
  7197  000094  6E1A               	movwf	pad@w^0,c
  7198  000096                     l874:
  7199  000096  FFFF               	dw	65535	; assembler added errata NOP
  7200                           
  7201                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7202  000098  0E00               	movlw	0
  7203  00009A  6E19               	movwf	(pad@i+1)^0,c
  7204  00009C  0E00               	movlw	0
  7205  00009E  6E18               	movwf	pad@i^0,c
  7206                           
  7207                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7208  0000A0  EF5F  F000         	goto	l2897
  7209  0000A4                     l2893:
  7210  0000A4  FFFF               	dw	65535	; assembler added errata NOP
  7211                           
  7212                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7213  0000A6  0E00               	movlw	0
  7214  0000A8  6E02               	movwf	(fputc@c+1)^0,c
  7215  0000AA  0E20               	movlw	32
  7216  0000AC  6E01               	movwf	fputc@c^0,c
  7217  0000AE  C011  F003         	movff	pad@fp,fputc@fp
  7218  0000B2  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7219  0000B6  EC93  F000         	call	_fputc	;wreg free
  7220  0000BA                     
  7221                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7222  0000BA  4A18               	infsnz	pad@i^0,f,c
  7223  0000BC  2A19               	incf	(pad@i+1)^0,f,c
  7224  0000BE                     l2897:
  7225  0000BE  FFFF               	dw	65535	; assembler added errata NOP
  7226                           
  7227                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7228  0000C0  501A               	movf	pad@w^0,w,c
  7229  0000C2  5C18               	subwf	pad@i^0,w,c
  7230  0000C4  5019               	movf	(pad@i+1)^0,w,c
  7231  0000C6  0A80               	xorlw	128
  7232  0000C8  6E17               	movwf	??_pad^0,c
  7233  0000CA  501B               	movf	(pad@w+1)^0,w,c
  7234  0000CC  0A80               	xorlw	128
  7235  0000CE  5817               	subwfb	??_pad^0,w,c
  7236  0000D0  A0D8               	btfss	status,0,c
  7237  0000D2  EF6D  F000         	goto	u2851
  7238  0000D6  EF70  F000         	goto	u2850
  7239  0000DA                     u2851:
  7240  0000DA  FFFF               	dw	65535	; assembler added errata NOP
  7241  0000DC  EF52  F000         	goto	l2893
  7242  0000E0                     u2850:
  7243  0000E0  FFFF               	dw	65535	; assembler added errata NOP
  7244  0000E2                     
  7245                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7246  0000E2  B07D               	btfsc	_flags^0,0,c
  7247  0000E4  EF76  F000         	goto	u2861
  7248  0000E8  EF79  F000         	goto	u2860
  7249  0000EC                     u2861:
  7250  0000EC  FFFF               	dw	65535	; assembler added errata NOP
  7251  0000EE  EF84  F000         	goto	l2901
  7252  0000F2                     u2860:
  7253  0000F2  FFFF               	dw	65535	; assembler added errata NOP
  7254  0000F4                     
  7255                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7256  0000F4  C013  F00A         	movff	pad@buf,fputs@s
  7257  0000F8  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7258  0000FC  C011  F00C         	movff	pad@fp,fputs@fp
  7259  000100  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7260  000104  EC74  F002         	call	_fputs	;wreg free
  7261  000108                     l2901:
  7262  000108  FFFF               	dw	65535	; assembler added errata NOP
  7263                           
  7264                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  7265  00010A  C013  F001         	movff	pad@buf,strlen@s
  7266  00010E  C014  F002         	movff	pad@buf+1,strlen@s+1
  7267  000112  EC11  F03F         	call	_strlen	;wreg free
  7268  000116  501A               	movf	pad@w^0,w,c
  7269  000118  2401               	addwf	?_strlen^0,w,c
  7270  00011A  6E11               	movwf	?_pad^0,c
  7271  00011C  501B               	movf	(pad@w+1)^0,w,c
  7272  00011E  2002               	addwfc	(?_strlen+1)^0,w,c
  7273  000120  6E12               	movwf	(?_pad+1)^0,c
  7274  000122  0012               	return		;funcret
  7275  000124  FFFF               	dw	65535	; errata NOP
  7276  000126                     __end_of_pad:
  7277                           	callstack 0
  7278                           
  7279 ;; *************** function _strlen *****************
  7280 ;; Defined at:
  7281 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  7282 ;; Parameters:    Size  Location     Type
  7283 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7284 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), 
  7285 ;; Auto vars:     Size  Location     Type
  7286 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7287 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), 
  7288 ;; Return value:  Size  Location     Type
  7289 ;;                  2    0[COMRAM] unsigned int 
  7290 ;; Registers used:
  7291 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7292 ;; Tracked objects:
  7293 ;;		On entry : 0/0
  7294 ;;		On exit  : 0/0
  7295 ;;		Unchanged: 0/0
  7296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7297 ;;      Params:         2       0       0       0       0       0       0
  7298 ;;      Locals:         2       0       0       0       0       0       0
  7299 ;;      Temps:          0       0       0       0       0       0       0
  7300 ;;      Totals:         4       0       0       0       0       0       0
  7301 ;;Total ram usage:        4 bytes
  7302 ;; Hardware stack levels used:    1
  7303 ;; Hardware stack levels required when called:    1
  7304 ;; This function calls:
  7305 ;;		Nothing
  7306 ;; This function is called by:
  7307 ;;		_pad
  7308 ;;		_stoa
  7309 ;; This function uses a non-reentrant model
  7310 ;;
  7311                           
  7312                           	psect	text22
  7313  007E22                     __ptext22:
  7314                           	callstack 0
  7315  007E22                     _strlen:
  7316                           	callstack 0
  7317  007E22  FFFF               	dw	65535	; assembler added errata NOP
  7318  007E24  C001  F003         	movff	strlen@s,strlen@a
  7319  007E28  C002  F004         	movff	strlen@s+1,strlen@a+1
  7320  007E2C  EF1B  F03F         	goto	l2749
  7321  007E30                     l2747:
  7322  007E30  FFFF               	dw	65535	; assembler added errata NOP
  7323  007E32  4A01               	infsnz	strlen@s^0,f,c
  7324  007E34  2A02               	incf	(strlen@s+1)^0,f,c
  7325  007E36                     l2749:
  7326  007E36  FFFF               	dw	65535	; assembler added errata NOP
  7327  007E38  C001  FFD9         	movff	strlen@s,fsr2l
  7328  007E3C  C002  FFDA         	movff	strlen@s+1,fsr2h
  7329  007E40  50DF               	movf	indf2,w,c
  7330  007E42  A4D8               	btfss	status,2,c
  7331  007E44  EF26  F03F         	goto	u2601
  7332  007E48  EF29  F03F         	goto	u2600
  7333  007E4C                     u2601:
  7334  007E4C  FFFF               	dw	65535	; assembler added errata NOP
  7335  007E4E  EF18  F03F         	goto	l2747
  7336  007E52                     u2600:
  7337  007E52  FFFF               	dw	65535	; assembler added errata NOP
  7338  007E54  5003               	movf	strlen@a^0,w,c
  7339  007E56  5C01               	subwf	strlen@s^0,w,c
  7340  007E58  6E01               	movwf	?_strlen^0,c
  7341  007E5A  5004               	movf	(strlen@a+1)^0,w,c
  7342  007E5C  5802               	subwfb	(strlen@s+1)^0,w,c
  7343  007E5E  6E02               	movwf	(?_strlen+1)^0,c
  7344  007E60  0012               	return		;funcret
  7345  007E62  FFFF               	dw	65535	; errata NOP
  7346  007E64                     __end_of_strlen:
  7347                           	callstack 0
  7348                           
  7349 ;; *************** function _fputs *****************
  7350 ;; Defined at:
  7351 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  7352 ;; Parameters:    Size  Location     Type
  7353 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7354 ;;		 -> dbuf(32), 
  7355 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7356 ;;		 -> vsnprintf@f(6), 
  7357 ;; Auto vars:     Size  Location     Type
  7358 ;;  i               2   14[COMRAM] int 
  7359 ;;  c               1   13[COMRAM] unsigned char 
  7360 ;; Return value:  Size  Location     Type
  7361 ;;                  2    9[COMRAM] int 
  7362 ;; Registers used:
  7363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7364 ;; Tracked objects:
  7365 ;;		On entry : 0/0
  7366 ;;		On exit  : 0/0
  7367 ;;		Unchanged: 0/0
  7368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7369 ;;      Params:         4       0       0       0       0       0       0
  7370 ;;      Locals:         3       0       0       0       0       0       0
  7371 ;;      Temps:          0       0       0       0       0       0       0
  7372 ;;      Totals:         7       0       0       0       0       0       0
  7373 ;;Total ram usage:        7 bytes
  7374 ;; Hardware stack levels used:    1
  7375 ;; Hardware stack levels required when called:    3
  7376 ;; This function calls:
  7377 ;;		_fputc
  7378 ;; This function is called by:
  7379 ;;		_pad
  7380 ;; This function uses a non-reentrant model
  7381 ;;
  7382                           
  7383                           	psect	text23
  7384  0004E8                     __ptext23:
  7385                           	callstack 0
  7386  0004E8                     _fputs:
  7387                           	callstack 0
  7388  0004E8  FFFF               	dw	65535	; assembler added errata NOP
  7389  0004EA  0E00               	movlw	0
  7390  0004EC  6E10               	movwf	(fputs@i+1)^0,c
  7391  0004EE  0E00               	movlw	0
  7392  0004F0  6E0F               	movwf	fputs@i^0,c
  7393  0004F2  EF87  F002         	goto	l2743
  7394  0004F6                     l2739:
  7395  0004F6  FFFF               	dw	65535	; assembler added errata NOP
  7396  0004F8  C00E  F001         	movff	fputs@c,fputc@c
  7397  0004FC  6A02               	clrf	(fputc@c+1)^0,c
  7398  0004FE  C00C  F003         	movff	fputs@fp,fputc@fp
  7399  000502  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  7400  000506  EC93  F000         	call	_fputc	;wreg free
  7401  00050A  4A0F               	infsnz	fputs@i^0,f,c
  7402  00050C  2A10               	incf	(fputs@i+1)^0,f,c
  7403  00050E                     l2743:
  7404  00050E  FFFF               	dw	65535	; assembler added errata NOP
  7405  000510  500F               	movf	fputs@i^0,w,c
  7406  000512  240A               	addwf	fputs@s^0,w,c
  7407  000514  6ED9               	movwf	fsr2l,c
  7408  000516  5010               	movf	(fputs@i+1)^0,w,c
  7409  000518  200B               	addwfc	(fputs@s+1)^0,w,c
  7410  00051A  6EDA               	movwf	fsr2h,c
  7411  00051C  50DF               	movf	indf2,w,c
  7412  00051E  6E0E               	movwf	fputs@c^0,c
  7413  000520  500E               	movf	fputs@c^0,w,c
  7414  000522  A4D8               	btfss	status,2,c
  7415  000524  EF96  F002         	goto	u2591
  7416  000528  EF99  F002         	goto	u2590
  7417  00052C                     u2591:
  7418  00052C  FFFF               	dw	65535	; assembler added errata NOP
  7419  00052E  EF7B  F002         	goto	l2739
  7420  000532                     u2590:
  7421  000532  FFFF               	dw	65535	; assembler added errata NOP
  7422  000534  0012               	return		;funcret
  7423  000536  FFFF               	dw	65535	; errata NOP
  7424  000538                     __end_of_fputs:
  7425                           	callstack 0
  7426                           
  7427 ;; *************** function _fputc *****************
  7428 ;; Defined at:
  7429 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;  c               2    0[COMRAM] int 
  7432 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7433 ;;		 -> vsnprintf@f(6), 
  7434 ;; Auto vars:     Size  Location     Type
  7435 ;;		None
  7436 ;; Return value:  Size  Location     Type
  7437 ;;                  2    0[COMRAM] int 
  7438 ;; Registers used:
  7439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7440 ;; Tracked objects:
  7441 ;;		On entry : 0/0
  7442 ;;		On exit  : 0/0
  7443 ;;		Unchanged: 0/0
  7444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7445 ;;      Params:         4       0       0       0       0       0       0
  7446 ;;      Locals:         0       0       0       0       0       0       0
  7447 ;;      Temps:          5       0       0       0       0       0       0
  7448 ;;      Totals:         9       0       0       0       0       0       0
  7449 ;;Total ram usage:        9 bytes
  7450 ;; Hardware stack levels used:    1
  7451 ;; Hardware stack levels required when called:    2
  7452 ;; This function calls:
  7453 ;;		_putch
  7454 ;; This function is called by:
  7455 ;;		_pad
  7456 ;;		_stoa
  7457 ;;		_vfpfcnvrt
  7458 ;;		_fputs
  7459 ;; This function uses a non-reentrant model
  7460 ;;
  7461                           
  7462                           	psect	text24
  7463  000126                     __ptext24:
  7464                           	callstack 0
  7465  000126                     _fputc:
  7466                           	callstack 0
  7467  000126  FFFF               	dw	65535	; assembler added errata NOP
  7468  000128  5003               	movf	fputc@fp^0,w,c
  7469  00012A  1004               	iorwf	(fputc@fp+1)^0,w,c
  7470  00012C  B4D8               	btfsc	status,2,c
  7471  00012E  EF9B  F000         	goto	u2551
  7472  000132  EF9E  F000         	goto	u2550
  7473  000136                     u2551:
  7474  000136  FFFF               	dw	65535	; assembler added errata NOP
  7475  000138  EFA9  F000         	goto	l2727
  7476  00013C                     u2550:
  7477  00013C  FFFF               	dw	65535	; assembler added errata NOP
  7478  00013E  5003               	movf	fputc@fp^0,w,c
  7479  000140  1004               	iorwf	(fputc@fp+1)^0,w,c
  7480  000142  A4D8               	btfss	status,2,c
  7481  000144  EFA6  F000         	goto	u2561
  7482  000148  EFA9  F000         	goto	u2560
  7483  00014C                     u2561:
  7484  00014C  FFFF               	dw	65535	; assembler added errata NOP
  7485  00014E  EFAF  F000         	goto	l2729
  7486  000152                     u2560:
  7487  000152                     l2727:
  7488  000152  FFFF               	dw	65535	; assembler added errata NOP
  7489  000154  5001               	movf	fputc@c^0,w,c
  7490  000156  ECFB  F01F         	call	_putch
  7491  00015A  EF01  F001         	goto	l1156
  7492  00015E                     l2729:
  7493  00015E  FFFF               	dw	65535	; assembler added errata NOP
  7494  000160  EE20 F004          	lfsr	2,4
  7495  000164  5003               	movf	fputc@fp^0,w,c
  7496  000166  26D9               	addwf	fsr2l,f,c
  7497  000168  5004               	movf	(fputc@fp+1)^0,w,c
  7498  00016A  22DA               	addwfc	fsr2h,f,c
  7499  00016C  50DE               	movf	postinc2,w,c
  7500  00016E  10DE               	iorwf	postinc2,w,c
  7501  000170  B4D8               	btfsc	status,2,c
  7502  000172  EFBD  F000         	goto	u2571
  7503  000176  EFC0  F000         	goto	u2570
  7504  00017A                     u2571:
  7505  00017A  FFFF               	dw	65535	; assembler added errata NOP
  7506  00017C  EFDD  F000         	goto	l2733
  7507  000180                     u2570:
  7508  000180  FFFF               	dw	65535	; assembler added errata NOP
  7509  000182  EE20 F004          	lfsr	2,4
  7510  000186  5003               	movf	fputc@fp^0,w,c
  7511  000188  26D9               	addwf	fsr2l,f,c
  7512  00018A  5004               	movf	(fputc@fp+1)^0,w,c
  7513  00018C  22DA               	addwfc	fsr2h,f,c
  7514  00018E  EE10 F002          	lfsr	1,2
  7515  000192  5003               	movf	fputc@fp^0,w,c
  7516  000194  26E1               	addwf	fsr1l,f,c
  7517  000196  5004               	movf	(fputc@fp+1)^0,w,c
  7518  000198  22E2               	addwfc	fsr1h,f,c
  7519  00019A  50DE               	movf	postinc2,w,c
  7520  00019C  5CE6               	subwf	postinc1,w,c
  7521  00019E  50E6               	movf	postinc1,w,c
  7522  0001A0  0A80               	xorlw	128
  7523  0001A2  6E09               	movwf	(??_fputc+4)^0,c
  7524  0001A4  50DE               	movf	postinc2,w,c
  7525  0001A6  0A80               	xorlw	128
  7526  0001A8  5809               	subwfb	(??_fputc+4)^0,w,c
  7527  0001AA  B0D8               	btfsc	status,0,c
  7528  0001AC  EFDA  F000         	goto	u2581
  7529  0001B0  EFDD  F000         	goto	u2580
  7530  0001B4                     u2581:
  7531  0001B4  FFFF               	dw	65535	; assembler added errata NOP
  7532  0001B6  EF01  F001         	goto	l1156
  7533  0001BA                     u2580:
  7534  0001BA                     l2733:
  7535  0001BA  FFFF               	dw	65535	; assembler added errata NOP
  7536  0001BC  EE20 F002          	lfsr	2,2
  7537  0001C0  5003               	movf	fputc@fp^0,w,c
  7538  0001C2  26D9               	addwf	fsr2l,f,c
  7539  0001C4  5004               	movf	(fputc@fp+1)^0,w,c
  7540  0001C6  22DA               	addwfc	fsr2h,f,c
  7541  0001C8  CFDE F005          	movff	postinc2,??_fputc
  7542  0001CC  CFDD F006          	movff	postdec2,??_fputc+1
  7543  0001D0  C003  FFD9         	movff	fputc@fp,fsr2l
  7544  0001D4  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7545  0001D8  CFDE F007          	movff	postinc2,??_fputc+2
  7546  0001DC  CFDD F008          	movff	postdec2,??_fputc+3
  7547  0001E0  5005               	movf	??_fputc^0,w,c
  7548  0001E2  2407               	addwf	(??_fputc+2)^0,w,c
  7549  0001E4  6ED9               	movwf	fsr2l,c
  7550  0001E6  5006               	movf	(??_fputc+1)^0,w,c
  7551  0001E8  2008               	addwfc	(??_fputc+3)^0,w,c
  7552  0001EA  6EDA               	movwf	fsr2h,c
  7553  0001EC  C001  FFDF         	movff	fputc@c,indf2
  7554  0001F0  EE20 F002          	lfsr	2,2
  7555  0001F4  5003               	movf	fputc@fp^0,w,c
  7556  0001F6  26D9               	addwf	fsr2l,f,c
  7557  0001F8  5004               	movf	(fputc@fp+1)^0,w,c
  7558  0001FA  22DA               	addwfc	fsr2h,f,c
  7559  0001FC  2ADE               	incf	postinc2,f,c
  7560  0001FE  0E00               	movlw	0
  7561  000200  22DD               	addwfc	postdec2,f,c
  7562  000202                     l1156:
  7563  000202  FFFF               	dw	65535	; assembler added errata NOP
  7564  000204  0012               	return		;funcret
  7565  000206  FFFF               	dw	65535	; errata NOP
  7566  000208                     __end_of_fputc:
  7567                           	callstack 0
  7568                           
  7569 ;; *************** function _putch *****************
  7570 ;; Defined at:
  7571 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  7572 ;; Parameters:    Size  Location     Type
  7573 ;;  c               1    wreg     unsigned char 
  7574 ;; Auto vars:     Size  Location     Type
  7575 ;;  c               1    0[COMRAM] unsigned char 
  7576 ;; Return value:  Size  Location     Type
  7577 ;;                  1    wreg      void 
  7578 ;; Registers used:
  7579 ;;		wreg
  7580 ;; Tracked objects:
  7581 ;;		On entry : 0/0
  7582 ;;		On exit  : 0/0
  7583 ;;		Unchanged: 0/0
  7584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7585 ;;      Params:         0       0       0       0       0       0       0
  7586 ;;      Locals:         0       0       0       0       0       0       0
  7587 ;;      Temps:          0       0       0       0       0       0       0
  7588 ;;      Totals:         0       0       0       0       0       0       0
  7589 ;;Total ram usage:        0 bytes
  7590 ;; Hardware stack levels used:    1
  7591 ;; Hardware stack levels required when called:    1
  7592 ;; This function calls:
  7593 ;;		Nothing
  7594 ;; This function is called by:
  7595 ;;		_fputc
  7596 ;; This function uses a non-reentrant model
  7597 ;;
  7598                           
  7599                           	psect	text25
  7600  003FF6                     __ptext25:
  7601                           	callstack 0
  7602  003FF6                     _putch:
  7603                           	callstack 0
  7604  003FF6  FFFF               	dw	65535	; assembler added errata NOP
  7605  003FF8  0012               	return		;funcret
  7606  003FFA  FFFF               	dw	65535	; errata NOP
  7607  003FFC                     __end_of_putch:
  7608                           	callstack 0
  7609                           
  7610 ;; *************** function _atoi *****************
  7611 ;; Defined at:
  7612 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  7613 ;; Parameters:    Size  Location     Type
  7614 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7615 ;;		 -> STR_1(19), 
  7616 ;; Auto vars:     Size  Location     Type
  7617 ;;  n               2   20[COMRAM] int 
  7618 ;;  neg             2   13[COMRAM] int 
  7619 ;; Return value:  Size  Location     Type
  7620 ;;                  2    7[COMRAM] int 
  7621 ;; Registers used:
  7622 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7623 ;; Tracked objects:
  7624 ;;		On entry : 0/0
  7625 ;;		On exit  : 0/0
  7626 ;;		Unchanged: 0/0
  7627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7628 ;;      Params:         2       0       0       0       0       0       0
  7629 ;;      Locals:         9       0       0       0       0       0       0
  7630 ;;      Temps:          4       0       0       0       0       0       0
  7631 ;;      Totals:        15       0       0       0       0       0       0
  7632 ;;Total ram usage:       15 bytes
  7633 ;; Hardware stack levels used:    1
  7634 ;; Hardware stack levels required when called:    2
  7635 ;; This function calls:
  7636 ;;		___wmul
  7637 ;;		_isdigit
  7638 ;;		_isspace
  7639 ;; This function is called by:
  7640 ;;		_vfpfcnvrt
  7641 ;; This function uses a non-reentrant model
  7642 ;;
  7643                           
  7644                           	psect	text26
  7645  003298                     __ptext26:
  7646                           	callstack 0
  7647  003298                     _atoi:
  7648                           	callstack 0
  7649  003298  FFFF               	dw	65535	; assembler added errata NOP
  7650  00329A  0E00               	movlw	0
  7651  00329C  6E16               	movwf	(atoi@n+1)^0,c
  7652  00329E  0E00               	movlw	0
  7653  0032A0  6E15               	movwf	atoi@n^0,c
  7654  0032A2  0E00               	movlw	0
  7655  0032A4  6E0F               	movwf	(atoi@neg+1)^0,c
  7656  0032A6  0E00               	movlw	0
  7657  0032A8  6E0E               	movwf	atoi@neg^0,c
  7658  0032AA  EF5A  F019         	goto	l3215
  7659  0032AE                     l3213:
  7660  0032AE  FFFF               	dw	65535	; assembler added errata NOP
  7661  0032B0  4A08               	infsnz	atoi@s^0,f,c
  7662  0032B2  2A09               	incf	(atoi@s+1)^0,f,c
  7663  0032B4                     l3215:
  7664  0032B4  FFFF               	dw	65535	; assembler added errata NOP
  7665  0032B6  0E01               	movlw	1
  7666  0032B8  6E14               	movwf	_atoi$1358^0,c
  7667  0032BA  C008  FFF6         	movff	atoi@s,tblptrl
  7668  0032BE  C009  FFF7         	movff	atoi@s+1,tblptrh
  7669  0032C2                     	if	0	;tblptru may be non-zero
  7670  0032C2                     	endif
  7671  0032C2                     	if	0	;tblptru may be non-zero
  7672  0032C2                     	endif
  7673  0032C2  0008               	tblrd		*
  7674  0032C4  FFFF               	dw	65535	; errata NOP
  7675  0032C6  50F5               	movf	tablat,w,c
  7676  0032C8  0A20               	xorlw	32
  7677  0032CA  B4D8               	btfsc	status,2,c
  7678  0032CC  EF6A  F019         	goto	u3581
  7679  0032D0  EF6D  F019         	goto	u3580
  7680  0032D4                     u3581:
  7681  0032D4  FFFF               	dw	65535	; assembler added errata NOP
  7682  0032D6  EF8E  F019         	goto	l3223
  7683  0032DA                     u3580:
  7684  0032DA  FFFF               	dw	65535	; assembler added errata NOP
  7685  0032DC  0EF7               	movlw	247
  7686  0032DE  6E0A               	movwf	??_atoi^0,c
  7687  0032E0  0EFF               	movlw	255
  7688  0032E2  6E0B               	movwf	(??_atoi+1)^0,c
  7689  0032E4  C008  FFF6         	movff	atoi@s,tblptrl
  7690  0032E8  C009  FFF7         	movff	atoi@s+1,tblptrh
  7691  0032EC                     	if	0	;tblptru may be non-zero
  7692  0032EC                     	endif
  7693  0032EC                     	if	0	;tblptru may be non-zero
  7694  0032EC                     	endif
  7695  0032EC  0008               	tblrd		*
  7696  0032EE  FFFF               	dw	65535	; errata NOP
  7697  0032F0  50F5               	movf	tablat,w,c
  7698  0032F2  6E0C               	movwf	(??_atoi+2)^0,c
  7699  0032F4  6A0D               	clrf	(??_atoi+3)^0,c
  7700  0032F6  500A               	movf	??_atoi^0,w,c
  7701  0032F8  260C               	addwf	(??_atoi+2)^0,f,c
  7702  0032FA  500B               	movf	(??_atoi+1)^0,w,c
  7703  0032FC  220D               	addwfc	(??_atoi+3)^0,f,c
  7704  0032FE  500D               	movf	(??_atoi+3)^0,w,c
  7705  003300  E10A               	bnz	u3590
  7706  003302  0E05               	movlw	5
  7707  003304  5C0C               	subwf	(??_atoi+2)^0,w,c
  7708  003306  A0D8               	btfss	status,0,c
  7709  003308  EF88  F019         	goto	u3591
  7710  00330C  EF8B  F019         	goto	u3590
  7711  003310                     u3591:
  7712  003310  FFFF               	dw	65535	; assembler added errata NOP
  7713  003312  EF8E  F019         	goto	l3223
  7714  003316                     u3590:
  7715  003316  FFFF               	dw	65535	; assembler added errata NOP
  7716  003318  0E00               	movlw	0
  7717  00331A  6E14               	movwf	_atoi$1358^0,c
  7718  00331C                     l3223:
  7719  00331C  FFFF               	dw	65535	; assembler added errata NOP
  7720  00331E  C014  F010         	movff	_atoi$1358,_atoi$1357
  7721  003322  6A11               	clrf	(_atoi$1357+1)^0,c
  7722  003324  5010               	movf	_atoi$1357^0,w,c
  7723  003326  1011               	iorwf	(_atoi$1357+1)^0,w,c
  7724  003328  A4D8               	btfss	status,2,c
  7725  00332A  EF99  F019         	goto	u3601
  7726  00332E  EF9C  F019         	goto	u3600
  7727  003332                     u3601:
  7728  003332  FFFF               	dw	65535	; assembler added errata NOP
  7729  003334  EF57  F019         	goto	l3213
  7730  003338                     u3600:
  7731  003338  FFFF               	dw	65535	; assembler added errata NOP
  7732  00333A  EFA9  F019         	goto	l3233
  7733  00333E                     l3229:
  7734  00333E  FFFF               	dw	65535	; assembler added errata NOP
  7735  003340  0E00               	movlw	0
  7736  003342  6E0F               	movwf	(atoi@neg+1)^0,c
  7737  003344  0E01               	movlw	1
  7738  003346  6E0E               	movwf	atoi@neg^0,c
  7739  003348                     l3231:
  7740  003348  FFFF               	dw	65535	; assembler added errata NOP
  7741  00334A  4A08               	infsnz	atoi@s^0,f,c
  7742  00334C  2A09               	incf	(atoi@s+1)^0,f,c
  7743  00334E  EFE3  F019         	goto	l3239
  7744  003352                     l3233:
  7745  003352  FFFF               	dw	65535	; assembler added errata NOP
  7746  003354  C008  FFF6         	movff	atoi@s,tblptrl
  7747  003358  C009  FFF7         	movff	atoi@s+1,tblptrh
  7748  00335C                     	if	0	;tblptru may be non-zero
  7749  00335C                     	endif
  7750  00335C                     	if	0	;tblptru may be non-zero
  7751  00335C                     	endif
  7752  00335C  0008               	tblrd		*
  7753  00335E  FFFF               	dw	65535	; errata NOP
  7754  003360  50F5               	movf	tablat,w,c
  7755  003362  6E0A               	movwf	??_atoi^0,c
  7756  003364  6A0B               	clrf	(??_atoi+1)^0,c
  7757                           
  7758                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7759                           ; Switch size 1, requested type "simple"
  7760                           ; Number of cases is 1, Range of values is 0 to 0
  7761                           ; switch strategies available:
  7762                           ; Name         Instructions Cycles
  7763                           ; simple_byte            4     3 (average)
  7764                           ;	Chosen strategy is simple_byte
  7765  003366  500B               	movf	(??_atoi+1)^0,w,c
  7766  003368  0A00               	xorlw	0	; case 0
  7767  00336A  B4D8               	btfsc	status,2,c
  7768  00336C  EFBA  F019         	goto	l4281
  7769  003370  EFE3  F019         	goto	l3239
  7770  003374                     l4281:
  7771  003374  FFFF               	dw	65535	; assembler added errata NOP
  7772                           
  7773                           ; Switch size 1, requested type "simple"
  7774                           ; Number of cases is 2, Range of values is 43 to 45
  7775                           ; switch strategies available:
  7776                           ; Name         Instructions Cycles
  7777                           ; simple_byte            7     4 (average)
  7778                           ;	Chosen strategy is simple_byte
  7779  003376  500A               	movf	??_atoi^0,w,c
  7780  003378  0A2B               	xorlw	43	; case 43
  7781  00337A  B4D8               	btfsc	status,2,c
  7782  00337C  EFA4  F019         	goto	l3231
  7783  003380  0A06               	xorlw	6	; case 45
  7784  003382  B4D8               	btfsc	status,2,c
  7785  003384  EF9F  F019         	goto	l3229
  7786  003388  EFE3  F019         	goto	l3239
  7787  00338C                     l3235:
  7788  00338C  FFFF               	dw	65535	; assembler added errata NOP
  7789  00338E  C015  F001         	movff	atoi@n,___wmul@multiplier
  7790  003392  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7791  003396  0E00               	movlw	0
  7792  003398  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7793  00339A  0E0A               	movlw	10
  7794  00339C  6E03               	movwf	___wmul@multiplicand^0,c
  7795  00339E  ECE8  F002         	call	___wmul	;wreg free
  7796  0033A2  C008  FFF6         	movff	atoi@s,tblptrl
  7797  0033A6  C009  FFF7         	movff	atoi@s+1,tblptrh
  7798  0033AA                     	if	0	;tblptru may be non-zero
  7799  0033AA                     	endif
  7800  0033AA                     	if	0	;tblptru may be non-zero
  7801  0033AA                     	endif
  7802  0033AA  0008               	tblrd		*
  7803  0033AC  FFFF               	dw	65535	; errata NOP
  7804  0033AE  50F5               	movf	tablat,w,c
  7805  0033B0  5E01               	subwf	?___wmul^0,f,c
  7806  0033B2  0E00               	movlw	0
  7807  0033B4  5A02               	subwfb	(?___wmul+1)^0,f,c
  7808  0033B6  0E30               	movlw	48
  7809  0033B8  2401               	addwf	?___wmul^0,w,c
  7810  0033BA  6E15               	movwf	atoi@n^0,c
  7811  0033BC  0E00               	movlw	0
  7812  0033BE  2002               	addwfc	(?___wmul+1)^0,w,c
  7813  0033C0  6E16               	movwf	(atoi@n+1)^0,c
  7814  0033C2  EFA4  F019         	goto	l3231
  7815  0033C6                     l3239:
  7816  0033C6  FFFF               	dw	65535	; assembler added errata NOP
  7817  0033C8  0ED0               	movlw	208
  7818  0033CA  6E0A               	movwf	??_atoi^0,c
  7819  0033CC  0EFF               	movlw	255
  7820  0033CE  6E0B               	movwf	(??_atoi+1)^0,c
  7821  0033D0  C008  FFF6         	movff	atoi@s,tblptrl
  7822  0033D4  C009  FFF7         	movff	atoi@s+1,tblptrh
  7823  0033D8                     	if	0	;tblptru may be non-zero
  7824  0033D8                     	endif
  7825  0033D8                     	if	0	;tblptru may be non-zero
  7826  0033D8                     	endif
  7827  0033D8  0008               	tblrd		*
  7828  0033DA  FFFF               	dw	65535	; errata NOP
  7829  0033DC  50F5               	movf	tablat,w,c
  7830  0033DE  6E0C               	movwf	(??_atoi+2)^0,c
  7831  0033E0  6A0D               	clrf	(??_atoi+3)^0,c
  7832  0033E2  500A               	movf	??_atoi^0,w,c
  7833  0033E4  260C               	addwf	(??_atoi+2)^0,f,c
  7834  0033E6  500B               	movf	(??_atoi+1)^0,w,c
  7835  0033E8  220D               	addwfc	(??_atoi+3)^0,f,c
  7836  0033EA  500D               	movf	(??_atoi+3)^0,w,c
  7837  0033EC  E10B               	bnz	u3610
  7838  0033EE  0E0A               	movlw	10
  7839  0033F0  5C0C               	subwf	(??_atoi+2)^0,w,c
  7840  0033F2  A0D8               	btfss	status,0,c
  7841  0033F4  EFFE  F019         	goto	u3611
  7842  0033F8  EF02  F01A         	goto	u3610
  7843  0033FC                     u3611:
  7844  0033FC  FFFF               	dw	65535	; assembler added errata NOP
  7845  0033FE  0E01               	movlw	1
  7846  003400  EF04  F01A         	goto	u3620
  7847  003404                     u3610:
  7848  003404  FFFF               	dw	65535	; assembler added errata NOP
  7849  003406  0E00               	movlw	0
  7850  003408                     u3620:
  7851  003408  FFFF               	dw	65535	; assembler added errata NOP
  7852  00340A  6E12               	movwf	_atoi$1359^0,c
  7853  00340C  6A13               	clrf	(_atoi$1359+1)^0,c
  7854  00340E  5012               	movf	_atoi$1359^0,w,c
  7855  003410  1013               	iorwf	(_atoi$1359+1)^0,w,c
  7856  003412  A4D8               	btfss	status,2,c
  7857  003414  EF0E  F01A         	goto	u3631
  7858  003418  EF11  F01A         	goto	u3630
  7859  00341C                     u3631:
  7860  00341C  FFFF               	dw	65535	; assembler added errata NOP
  7861  00341E  EFC6  F019         	goto	l3235
  7862  003422                     u3630:
  7863  003422  FFFF               	dw	65535	; assembler added errata NOP
  7864  003424  500E               	movf	atoi@neg^0,w,c
  7865  003426  100F               	iorwf	(atoi@neg+1)^0,w,c
  7866  003428  A4D8               	btfss	status,2,c
  7867  00342A  EF19  F01A         	goto	u3641
  7868  00342E  EF1C  F01A         	goto	u3640
  7869  003432                     u3641:
  7870  003432  FFFF               	dw	65535	; assembler added errata NOP
  7871  003434  EF2B  F01A         	goto	l1113
  7872  003438                     u3640:
  7873  003438  FFFF               	dw	65535	; assembler added errata NOP
  7874  00343A  C015  F00A         	movff	atoi@n,??_atoi
  7875  00343E  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7876  003442  1E0A               	comf	??_atoi^0,f,c
  7877  003444  1E0B               	comf	(??_atoi+1)^0,f,c
  7878  003446  4A0A               	infsnz	??_atoi^0,f,c
  7879  003448  2A0B               	incf	(??_atoi+1)^0,f,c
  7880  00344A  C00A  F008         	movff	??_atoi,?_atoi
  7881  00344E  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7882  003452  EF30  F01A         	goto	l1116
  7883  003456                     l1113:
  7884  003456  FFFF               	dw	65535	; assembler added errata NOP
  7885  003458  C015  F008         	movff	atoi@n,?_atoi
  7886  00345C  C016  F009         	movff	atoi@n+1,?_atoi+1
  7887  003460                     l1116:
  7888  003460  FFFF               	dw	65535	; assembler added errata NOP
  7889  003462  0012               	return		;funcret
  7890  003464  FFFF               	dw	65535	; errata NOP
  7891  003466                     __end_of_atoi:
  7892                           	callstack 0
  7893                           
  7894 ;; *************** function _isspace *****************
  7895 ;; Defined at:
  7896 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
  7897 ;; Parameters:    Size  Location     Type
  7898 ;;  c               2    0[COMRAM] int 
  7899 ;; Auto vars:     Size  Location     Type
  7900 ;;		None
  7901 ;; Return value:  Size  Location     Type
  7902 ;;                  2    0[COMRAM] int 
  7903 ;; Registers used:
  7904 ;;		wreg, status,2, status,0
  7905 ;; Tracked objects:
  7906 ;;		On entry : 0/0
  7907 ;;		On exit  : 0/0
  7908 ;;		Unchanged: 0/0
  7909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7910 ;;      Params:         2       0       0       0       0       0       0
  7911 ;;      Locals:         1       0       0       0       0       0       0
  7912 ;;      Temps:          4       0       0       0       0       0       0
  7913 ;;      Totals:         7       0       0       0       0       0       0
  7914 ;;Total ram usage:        7 bytes
  7915 ;; Hardware stack levels used:    1
  7916 ;; Hardware stack levels required when called:    1
  7917 ;; This function calls:
  7918 ;;		Nothing
  7919 ;; This function is called by:
  7920 ;;		_atoi
  7921 ;; This function uses a non-reentrant model
  7922 ;;
  7923                           
  7924                           	psect	text27
  7925  000488                     __ptext27:
  7926                           	callstack 0
  7927  000488                     _isspace:
  7928                           	callstack 24
  7929  000488  FFFF               	dw	65535	; assembler added errata NOP
  7930  00048A  0E01               	movlw	1
  7931  00048C  6E07               	movwf	_isspace$1385^0,c
  7932  00048E  0E20               	movlw	32
  7933  000490  1801               	xorwf	isspace@c^0,w,c
  7934  000492  1002               	iorwf	(isspace@c+1)^0,w,c
  7935  000494  B4D8               	btfsc	status,2,c
  7936  000496  EF4F  F002         	goto	u2971
  7937  00049A  EF52  F002         	goto	u2970
  7938  00049E                     u2971:
  7939  00049E  FFFF               	dw	65535	; assembler added errata NOP
  7940  0004A0  EF6E  F002         	goto	l2939
  7941  0004A4                     u2970:
  7942  0004A4  FFFF               	dw	65535	; assembler added errata NOP
  7943  0004A6  0EF7               	movlw	247
  7944  0004A8  6E03               	movwf	??_isspace^0,c
  7945  0004AA  0EFF               	movlw	255
  7946  0004AC  6E04               	movwf	(??_isspace+1)^0,c
  7947  0004AE  C001  F005         	movff	isspace@c,??_isspace+2
  7948  0004B2  C002  F006         	movff	isspace@c+1,??_isspace+3
  7949  0004B6  5003               	movf	??_isspace^0,w,c
  7950  0004B8  2605               	addwf	(??_isspace+2)^0,f,c
  7951  0004BA  5004               	movf	(??_isspace+1)^0,w,c
  7952  0004BC  2206               	addwfc	(??_isspace+3)^0,f,c
  7953  0004BE  5006               	movf	(??_isspace+3)^0,w,c
  7954  0004C0  E10A               	bnz	u2980
  7955  0004C2  0E05               	movlw	5
  7956  0004C4  5C05               	subwf	(??_isspace+2)^0,w,c
  7957  0004C6  A0D8               	btfss	status,0,c
  7958  0004C8  EF68  F002         	goto	u2981
  7959  0004CC  EF6B  F002         	goto	u2980
  7960  0004D0                     u2981:
  7961  0004D0  FFFF               	dw	65535	; assembler added errata NOP
  7962  0004D2  EF6E  F002         	goto	l2939
  7963  0004D6                     u2980:
  7964  0004D6  FFFF               	dw	65535	; assembler added errata NOP
  7965  0004D8  0E00               	movlw	0
  7966  0004DA  6E07               	movwf	_isspace$1385^0,c
  7967  0004DC                     l2939:
  7968  0004DC  FFFF               	dw	65535	; assembler added errata NOP
  7969  0004DE  C007  F001         	movff	_isspace$1385,?_isspace
  7970  0004E2  6A02               	clrf	(?_isspace+1)^0,c
  7971  0004E4  0012               	return		;funcret
  7972  0004E6  FFFF               	dw	65535	; errata NOP
  7973  0004E8                     __end_of_isspace:
  7974                           	callstack 0
  7975                           
  7976 ;; *************** function _isdigit *****************
  7977 ;; Defined at:
  7978 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  7979 ;; Parameters:    Size  Location     Type
  7980 ;;  c               2    0[COMRAM] int 
  7981 ;; Auto vars:     Size  Location     Type
  7982 ;;		None
  7983 ;; Return value:  Size  Location     Type
  7984 ;;                  2    0[COMRAM] int 
  7985 ;; Registers used:
  7986 ;;		wreg, status,2, status,0
  7987 ;; Tracked objects:
  7988 ;;		On entry : 0/0
  7989 ;;		On exit  : 0/0
  7990 ;;		Unchanged: 0/0
  7991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7992 ;;      Params:         2       0       0       0       0       0       0
  7993 ;;      Locals:         0       0       0       0       0       0       0
  7994 ;;      Temps:          4       0       0       0       0       0       0
  7995 ;;      Totals:         6       0       0       0       0       0       0
  7996 ;;Total ram usage:        6 bytes
  7997 ;; Hardware stack levels used:    1
  7998 ;; Hardware stack levels required when called:    1
  7999 ;; This function calls:
  8000 ;;		Nothing
  8001 ;; This function is called by:
  8002 ;;		_vfpfcnvrt
  8003 ;;		_atoi
  8004 ;; This function uses a non-reentrant model
  8005 ;;
  8006                           
  8007                           	psect	text28
  8008  007DE0                     __ptext28:
  8009                           	callstack 0
  8010  007DE0                     _isdigit:
  8011                           	callstack 25
  8012  007DE0  FFFF               	dw	65535	; assembler added errata NOP
  8013  007DE2  0ED0               	movlw	208
  8014  007DE4  6E03               	movwf	??_isdigit^0,c
  8015  007DE6  0EFF               	movlw	255
  8016  007DE8  6E04               	movwf	(??_isdigit+1)^0,c
  8017  007DEA  C001  F005         	movff	isdigit@c,??_isdigit+2
  8018  007DEE  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  8019  007DF2  5003               	movf	??_isdigit^0,w,c
  8020  007DF4  2605               	addwf	(??_isdigit+2)^0,f,c
  8021  007DF6  5004               	movf	(??_isdigit+1)^0,w,c
  8022  007DF8  2206               	addwfc	(??_isdigit+3)^0,f,c
  8023  007DFA  5006               	movf	(??_isdigit+3)^0,w,c
  8024  007DFC  E10B               	bnz	u2950
  8025  007DFE  0E0A               	movlw	10
  8026  007E00  5C05               	subwf	(??_isdigit+2)^0,w,c
  8027  007E02  A0D8               	btfss	status,0,c
  8028  007E04  EF06  F03F         	goto	u2951
  8029  007E08  EF0A  F03F         	goto	u2950
  8030  007E0C                     u2951:
  8031  007E0C  FFFF               	dw	65535	; assembler added errata NOP
  8032  007E0E  0E01               	movlw	1
  8033  007E10  EF0C  F03F         	goto	u2960
  8034  007E14                     u2950:
  8035  007E14  FFFF               	dw	65535	; assembler added errata NOP
  8036  007E16  0E00               	movlw	0
  8037  007E18                     u2960:
  8038  007E18  FFFF               	dw	65535	; assembler added errata NOP
  8039  007E1A  6E01               	movwf	?_isdigit^0,c
  8040  007E1C  6A02               	clrf	(?_isdigit+1)^0,c
  8041  007E1E  0012               	return		;funcret
  8042  007E20  FFFF               	dw	65535	; errata NOP
  8043  007E22                     __end_of_isdigit:
  8044                           	callstack 0
  8045                           
  8046 ;; *************** function ___wmul *****************
  8047 ;; Defined at:
  8048 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  8049 ;; Parameters:    Size  Location     Type
  8050 ;;  multiplier      2    0[COMRAM] unsigned int 
  8051 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8052 ;; Auto vars:     Size  Location     Type
  8053 ;;  product         2    4[COMRAM] unsigned int 
  8054 ;; Return value:  Size  Location     Type
  8055 ;;                  2    0[COMRAM] unsigned int 
  8056 ;; Registers used:
  8057 ;;		wreg, status,2, status,0, prodl, prodh
  8058 ;; Tracked objects:
  8059 ;;		On entry : 0/0
  8060 ;;		On exit  : 0/0
  8061 ;;		Unchanged: 0/0
  8062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8063 ;;      Params:         4       0       0       0       0       0       0
  8064 ;;      Locals:         2       0       0       0       0       0       0
  8065 ;;      Temps:          0       0       0       0       0       0       0
  8066 ;;      Totals:         6       0       0       0       0       0       0
  8067 ;;Total ram usage:        6 bytes
  8068 ;; Hardware stack levels used:    1
  8069 ;; Hardware stack levels required when called:    1
  8070 ;; This function calls:
  8071 ;;		Nothing
  8072 ;; This function is called by:
  8073 ;;		_atoi
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077                           	psect	text29
  8078  0005D0                     __ptext29:
  8079                           	callstack 0
  8080  0005D0                     ___wmul:
  8081                           	callstack 0
  8082  0005D0  FFFF               	dw	65535	; assembler added errata NOP
  8083  0005D2  5001               	movf	___wmul@multiplier^0,w,c
  8084  0005D4  0203               	mulwf	___wmul@multiplicand^0,c
  8085  0005D6  CFF3 F005          	movff	prodl,___wmul@product
  8086  0005DA  CFF4 F006          	movff	prodh,___wmul@product+1
  8087  0005DE  5001               	movf	___wmul@multiplier^0,w,c
  8088  0005E0  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8089  0005E2  50F3               	movf	243,w,c
  8090  0005E4  2606               	addwf	(___wmul@product+1)^0,f,c
  8091  0005E6  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8092  0005E8  0203               	mulwf	___wmul@multiplicand^0,c
  8093  0005EA  50F3               	movf	243,w,c
  8094  0005EC  2606               	addwf	(___wmul@product+1)^0,f,c
  8095  0005EE  C005  F001         	movff	___wmul@product,?___wmul
  8096  0005F2  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8097  0005F6  0012               	return		;funcret
  8098  0005F8  FFFF               	dw	65535	; errata NOP
  8099  0005FA                     __end_of___wmul:
  8100                           	callstack 0
  8101                           
  8102 ;; *************** function _serial_tx_string *****************
  8103 ;; Defined at:
  8104 ;;		line 45 in file "serial_rs232.c"
  8105 ;; Parameters:    Size  Location     Type
  8106 ;;  val             2    1[COMRAM] PTR const unsigned char 
  8107 ;;		 -> main@greet_str(160), 
  8108 ;; Auto vars:     Size  Location     Type
  8109 ;;  i               2    3[COMRAM] int 
  8110 ;; Return value:  Size  Location     Type
  8111 ;;                  1    wreg      void 
  8112 ;; Registers used:
  8113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8114 ;; Tracked objects:
  8115 ;;		On entry : 0/0
  8116 ;;		On exit  : 0/0
  8117 ;;		Unchanged: 0/0
  8118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8119 ;;      Params:         2       0       0       0       0       0       0
  8120 ;;      Locals:         2       0       0       0       0       0       0
  8121 ;;      Temps:          0       0       0       0       0       0       0
  8122 ;;      Totals:         4       0       0       0       0       0       0
  8123 ;;Total ram usage:        4 bytes
  8124 ;; Hardware stack levels used:    1
  8125 ;; Hardware stack levels required when called:    2
  8126 ;; This function calls:
  8127 ;;		_serial_tx_char
  8128 ;; This function is called by:
  8129 ;;		_main
  8130 ;; This function uses a non-reentrant model
  8131 ;;
  8132                           
  8133                           	psect	text30
  8134  000584                     __ptext30:
  8135                           	callstack 0
  8136  000584                     _serial_tx_string:
  8137                           	callstack 0
  8138  000584  FFFF               	dw	65535	; assembler added errata NOP
  8139  000586                     
  8140                           ;serial_rs232.c: 46:     for (int i=0; val[i] != 0; i++){
  8141  000586  0E00               	movlw	0
  8142  000588  6E05               	movwf	(serial_tx_string@i+1)^0,c
  8143  00058A  0E00               	movlw	0
  8144  00058C  6E04               	movwf	serial_tx_string@i^0,c
  8145  00058E  EFD5  F002         	goto	l4145
  8146  000592                     l4141:
  8147  000592  FFFF               	dw	65535	; assembler added errata NOP
  8148                           
  8149                           ;serial_rs232.c: 47:         serial_tx_char(val[i]);
  8150  000594  5004               	movf	serial_tx_string@i^0,w,c
  8151  000596  2402               	addwf	serial_tx_string@val^0,w,c
  8152  000598  6ED9               	movwf	fsr2l,c
  8153  00059A  5005               	movf	(serial_tx_string@i+1)^0,w,c
  8154  00059C  2003               	addwfc	(serial_tx_string@val+1)^0,w,c
  8155  00059E  6EDA               	movwf	fsr2h,c
  8156  0005A0  50DF               	movf	indf2,w,c
  8157  0005A2  EC4B  F03E         	call	_serial_tx_char
  8158  0005A6                     
  8159                           ;serial_rs232.c: 48:     }
  8160  0005A6  4A04               	infsnz	serial_tx_string@i^0,f,c
  8161  0005A8  2A05               	incf	(serial_tx_string@i+1)^0,f,c
  8162  0005AA                     l4145:
  8163  0005AA  FFFF               	dw	65535	; assembler added errata NOP
  8164  0005AC  5004               	movf	serial_tx_string@i^0,w,c
  8165  0005AE  2402               	addwf	serial_tx_string@val^0,w,c
  8166  0005B0  6ED9               	movwf	fsr2l,c
  8167  0005B2  5005               	movf	(serial_tx_string@i+1)^0,w,c
  8168  0005B4  2003               	addwfc	(serial_tx_string@val+1)^0,w,c
  8169  0005B6  6EDA               	movwf	fsr2h,c
  8170  0005B8  50DF               	movf	indf2,w,c
  8171  0005BA  A4D8               	btfss	status,2,c
  8172  0005BC  EFE2  F002         	goto	u5021
  8173  0005C0  EFE5  F002         	goto	u5020
  8174  0005C4                     u5021:
  8175  0005C4  FFFF               	dw	65535	; assembler added errata NOP
  8176  0005C6  EFC9  F002         	goto	l4141
  8177  0005CA                     u5020:
  8178  0005CA  FFFF               	dw	65535	; assembler added errata NOP
  8179  0005CC  0012               	return		;funcret
  8180  0005CE  FFFF               	dw	65535	; errata NOP
  8181  0005D0                     __end_of_serial_tx_string:
  8182                           	callstack 0
  8183                           
  8184 ;; *************** function _serial_tx_char *****************
  8185 ;; Defined at:
  8186 ;;		line 39 in file "serial_rs232.c"
  8187 ;; Parameters:    Size  Location     Type
  8188 ;;  val             1    wreg     unsigned char 
  8189 ;; Auto vars:     Size  Location     Type
  8190 ;;  val             1    0[COMRAM] unsigned char 
  8191 ;; Return value:  Size  Location     Type
  8192 ;;                  1    wreg      void 
  8193 ;; Registers used:
  8194 ;;		wreg
  8195 ;; Tracked objects:
  8196 ;;		On entry : 0/0
  8197 ;;		On exit  : 0/0
  8198 ;;		Unchanged: 0/0
  8199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8200 ;;      Params:         0       0       0       0       0       0       0
  8201 ;;      Locals:         1       0       0       0       0       0       0
  8202 ;;      Temps:          0       0       0       0       0       0       0
  8203 ;;      Totals:         1       0       0       0       0       0       0
  8204 ;;Total ram usage:        1 bytes
  8205 ;; Hardware stack levels used:    1
  8206 ;; Hardware stack levels required when called:    1
  8207 ;; This function calls:
  8208 ;;		Nothing
  8209 ;; This function is called by:
  8210 ;;		_serial_tx_string
  8211 ;;		_main
  8212 ;; This function uses a non-reentrant model
  8213 ;;
  8214                           
  8215                           	psect	text31
  8216  007C96                     __ptext31:
  8217                           	callstack 0
  8218  007C96                     _serial_tx_char:
  8219                           	callstack 0
  8220  007C96  FFFF               	dw	65535	; assembler added errata NOP
  8221                           
  8222                           ;incstack = 0
  8223                           ;serial_tx_char@val stored from wreg
  8224  007C98  6E01               	movwf	serial_tx_char@val^0,c
  8225  007C9A                     
  8226                           ;serial_rs232.c: 40:     TXREG = val;
  8227  007C9A  C001  FFAD         	movff	serial_tx_char@val,4013	;volatile
  8228  007C9E                     l22:
  8229  007C9E  FFFF               	dw	65535	; assembler added errata NOP
  8230  007CA0  A2AC               	btfss	172,1,c	;volatile
  8231  007CA2  EF55  F03E         	goto	u4891
  8232  007CA6  EF58  F03E         	goto	u4890
  8233  007CAA                     u4891:
  8234  007CAA  FFFF               	dw	65535	; assembler added errata NOP
  8235  007CAC  EF4F  F03E         	goto	l22
  8236  007CB0                     u4890:
  8237  007CB0  FFFF               	dw	65535	; assembler added errata NOP
  8238  007CB2  0012               	return		;funcret
  8239  007CB4  FFFF               	dw	65535	; errata NOP
  8240  007CB6                     __end_of_serial_tx_char:
  8241                           	callstack 0
  8242                           
  8243 ;; *************** function _lcd_str *****************
  8244 ;; Defined at:
  8245 ;;		line 62 in file "lcd.c"
  8246 ;; Parameters:    Size  Location     Type
  8247 ;;  str             2    3[COMRAM] PTR const unsigned char 
  8248 ;;		 -> main@greet_str(160), 
  8249 ;; Auto vars:     Size  Location     Type
  8250 ;;  i               1    5[COMRAM] unsigned char 
  8251 ;; Return value:  Size  Location     Type
  8252 ;;                  1    wreg      void 
  8253 ;; Registers used:
  8254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8255 ;; Tracked objects:
  8256 ;;		On entry : 0/0
  8257 ;;		On exit  : 0/0
  8258 ;;		Unchanged: 0/0
  8259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8260 ;;      Params:         2       0       0       0       0       0       0
  8261 ;;      Locals:         1       0       0       0       0       0       0
  8262 ;;      Temps:          0       0       0       0       0       0       0
  8263 ;;      Totals:         3       0       0       0       0       0       0
  8264 ;;Total ram usage:        3 bytes
  8265 ;; Hardware stack levels used:    1
  8266 ;; Hardware stack levels required when called:    3
  8267 ;; This function calls:
  8268 ;;		_lcd_dat
  8269 ;; This function is called by:
  8270 ;;		_main
  8271 ;; This function uses a non-reentrant model
  8272 ;;
  8273                           
  8274                           	psect	text32
  8275  007F2A                     __ptext32:
  8276                           	callstack 0
  8277  007F2A                     _lcd_str:
  8278                           	callstack 0
  8279  007F2A  FFFF               	dw	65535	; assembler added errata NOP
  8280  007F2C                     
  8281                           ;lcd.c: 62: void lcd_str(const char* str);lcd.c: 63: {;lcd.c: 64:     unsigned char i=0;
  8282  007F2C  0E00               	movlw	0
  8283  007F2E  6E06               	movwf	lcd_str@i^0,c
  8284                           
  8285                           ;lcd.c: 66:     while(str[i] != 0 )
  8286  007F30  EFA5  F03F         	goto	l4193
  8287  007F34                     l4189:
  8288  007F34  FFFF               	dw	65535	; assembler added errata NOP
  8289                           
  8290                           ;lcd.c: 67:     {;lcd.c: 68:       lcd_dat(str[i]);
  8291  007F36  5006               	movf	lcd_str@i^0,w,c
  8292  007F38  2404               	addwf	lcd_str@str^0,w,c
  8293  007F3A  6ED9               	movwf	fsr2l,c
  8294  007F3C  0E00               	movlw	0
  8295  007F3E  2005               	addwfc	(lcd_str@str+1)^0,w,c
  8296  007F40  6EDA               	movwf	fsr2h,c
  8297  007F42  50DF               	movf	indf2,w,c
  8298  007F44  EC92  F03E         	call	_lcd_dat
  8299  007F48                     
  8300                           ;lcd.c: 69:       i++;
  8301  007F48  2A06               	incf	lcd_str@i^0,f,c
  8302  007F4A                     l4193:
  8303  007F4A  FFFF               	dw	65535	; assembler added errata NOP
  8304                           
  8305                           ;lcd.c: 66:     while(str[i] != 0 )
  8306  007F4C  5006               	movf	lcd_str@i^0,w,c
  8307  007F4E  2404               	addwf	lcd_str@str^0,w,c
  8308  007F50  6ED9               	movwf	fsr2l,c
  8309  007F52  0E00               	movlw	0
  8310  007F54  2005               	addwfc	(lcd_str@str+1)^0,w,c
  8311  007F56  6EDA               	movwf	fsr2h,c
  8312  007F58  50DF               	movf	indf2,w,c
  8313  007F5A  A4D8               	btfss	status,2,c
  8314  007F5C  EFB2  F03F         	goto	u5031
  8315  007F60  EFB5  F03F         	goto	u5030
  8316  007F64                     u5031:
  8317  007F64  FFFF               	dw	65535	; assembler added errata NOP
  8318  007F66  EF9A  F03F         	goto	l4189
  8319  007F6A                     u5030:
  8320  007F6A  FFFF               	dw	65535	; assembler added errata NOP
  8321  007F6C  0012               	return		;funcret
  8322  007F6E  FFFF               	dw	65535	; errata NOP
  8323  007F70                     __end_of_lcd_str:
  8324                           	callstack 0
  8325                           
  8326 ;; *************** function _lcd_dat *****************
  8327 ;; Defined at:
  8328 ;;		line 21 in file "lcd.c"
  8329 ;; Parameters:    Size  Location     Type
  8330 ;;  val             1    wreg     unsigned char 
  8331 ;; Auto vars:     Size  Location     Type
  8332 ;;  val             1    2[COMRAM] unsigned char 
  8333 ;; Return value:  Size  Location     Type
  8334 ;;                  1    wreg      void 
  8335 ;; Registers used:
  8336 ;;		wreg, status,2, cstack
  8337 ;; Tracked objects:
  8338 ;;		On entry : 0/0
  8339 ;;		On exit  : 0/0
  8340 ;;		Unchanged: 0/0
  8341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8342 ;;      Params:         0       0       0       0       0       0       0
  8343 ;;      Locals:         1       0       0       0       0       0       0
  8344 ;;      Temps:          1       0       0       0       0       0       0
  8345 ;;      Totals:         2       0       0       0       0       0       0
  8346 ;;Total ram usage:        2 bytes
  8347 ;; Hardware stack levels used:    1
  8348 ;; Hardware stack levels required when called:    2
  8349 ;; This function calls:
  8350 ;;		_lcd_wr
  8351 ;; This function is called by:
  8352 ;;		_lcd_str
  8353 ;; This function uses a non-reentrant model
  8354 ;;
  8355                           
  8356                           	psect	text33
  8357  007D24                     __ptext33:
  8358                           	callstack 0
  8359  007D24                     _lcd_dat:
  8360                           	callstack 0
  8361  007D24  FFFF               	dw	65535	; assembler added errata NOP
  8362                           
  8363                           ;incstack = 0
  8364                           ;lcd_dat@val stored from wreg
  8365  007D26  6E03               	movwf	lcd_dat@val^0,c
  8366  007D28                     
  8367                           ;lcd.c: 21: void lcd_dat(unsigned char val);lcd.c: 22: {;lcd.c: 23:  PORTEbits.RE1=1;
  8368  007D28  8284               	bsf	132,1,c	;volatile
  8369  007D2A                     
  8370                           ;lcd.c: 24:     lcd_wr(val);
  8371  007D2A  5003               	movf	lcd_dat@val^0,w,c
  8372  007D2C  EC36  F03E         	call	_lcd_wr
  8373  007D30                     
  8374                           ;lcd.c: 25:     PORTEbits.RE2=1;
  8375  007D30  8484               	bsf	132,2,c	;volatile
  8376  007D32                     
  8377                           ;lcd.c: 26:     _delay((unsigned long)((30)*(4000000/4000.0)));
  8378  007D32  0E1E               	movlw	30
  8379  007D34  6E02               	movwf	??_lcd_dat^0,c
  8380  007D36  0E3C               	movlw	60
  8381  007D38                     u5097:
  8382  007D38  FFFF               	dw	65535	; errata NOP
  8383  007D3A  2EE8               	decfsz	wreg,f,c
  8384  007D3C  D7FD               	bra	u5097
  8385  007D3E  2E02               	decfsz	??_lcd_dat^0,f,c
  8386  007D40  D7FB               	bra	u5097
  8387  007D42  D000               	nop2	
  8388  007D44                     
  8389                           ;lcd.c: 27:     PORTEbits.RE1=0;
  8390  007D44  9284               	bcf	132,1,c	;volatile
  8391  007D46                     
  8392                           ;lcd.c: 28:     _delay((unsigned long)((30)*(4000000/4000.0)));
  8393  007D46  0E1E               	movlw	30
  8394  007D48  6E02               	movwf	??_lcd_dat^0,c
  8395  007D4A  0E3C               	movlw	60
  8396  007D4C                     u5107:
  8397  007D4C  FFFF               	dw	65535	; errata NOP
  8398  007D4E  2EE8               	decfsz	wreg,f,c
  8399  007D50  D7FD               	bra	u5107
  8400  007D52  2E02               	decfsz	??_lcd_dat^0,f,c
  8401  007D54  D7FB               	bra	u5107
  8402  007D56  D000               	nop2	
  8403  007D58                     
  8404                           ;lcd.c: 29:  PORTEbits.RE1=1;
  8405  007D58  8284               	bsf	132,1,c	;volatile
  8406  007D5A  0012               	return		;funcret
  8407  007D5C  FFFF               	dw	65535	; errata NOP
  8408  007D5E                     __end_of_lcd_dat:
  8409                           	callstack 0
  8410                           
  8411 ;; *************** function _lcd_init *****************
  8412 ;; Defined at:
  8413 ;;		line 32 in file "lcd.c"
  8414 ;; Parameters:    Size  Location     Type
  8415 ;;		None
  8416 ;; Auto vars:     Size  Location     Type
  8417 ;;		None
  8418 ;; Return value:  Size  Location     Type
  8419 ;;                  1    wreg      void 
  8420 ;; Registers used:
  8421 ;;		wreg, status,2, cstack
  8422 ;; Tracked objects:
  8423 ;;		On entry : 0/0
  8424 ;;		On exit  : 0/0
  8425 ;;		Unchanged: 0/0
  8426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8427 ;;      Params:         0       0       0       0       0       0       0
  8428 ;;      Locals:         0       0       0       0       0       0       0
  8429 ;;      Temps:          1       0       0       0       0       0       0
  8430 ;;      Totals:         1       0       0       0       0       0       0
  8431 ;;Total ram usage:        1 bytes
  8432 ;; Hardware stack levels used:    1
  8433 ;; Hardware stack levels required when called:    3
  8434 ;; This function calls:
  8435 ;;		_lcd_cmd
  8436 ;; This function is called by:
  8437 ;;		_main
  8438 ;; This function uses a non-reentrant model
  8439 ;;
  8440                           
  8441                           	psect	text34
  8442  0002C4                     __ptext34:
  8443                           	callstack 0
  8444  0002C4                     _lcd_init:
  8445                           	callstack 0
  8446  0002C4  FFFF               	dw	65535	; assembler added errata NOP
  8447  0002C6  6A83               	clrf	3971,c	;# 
  8448  0002C8  0E00               	movlw	0	;# 
  8449  0002CA  6E95               	movwf	3989,c	;# 
  8450  0002CC  6A84               	clrf	3972,c	;# 
  8451  0002CE  0E00               	movlw	0	;# 
  8452  0002D0  6E96               	movwf	3990,c	;# 
  8453                           
  8454                           ;lcd.c: 45:  PORTEbits.RE1=0;
  8455  0002D2  9284               	bcf	132,1,c	;volatile
  8456                           
  8457                           ;lcd.c: 46:  PORTEbits.RE2=0;
  8458  0002D4  9484               	bcf	132,2,c	;volatile
  8459  0002D6                     
  8460                           ;lcd.c: 47:  _delay((unsigned long)((30)*(4000000/4000.0)));
  8461  0002D6  0E1E               	movlw	30
  8462  0002D8  6E04               	movwf	??_lcd_init^0,c
  8463  0002DA  0E3C               	movlw	60
  8464  0002DC                     u5117:
  8465  0002DC  FFFF               	dw	65535	; errata NOP
  8466  0002DE  2EE8               	decfsz	wreg,f,c
  8467  0002E0  D7FD               	bra	u5117
  8468  0002E2  2E04               	decfsz	??_lcd_init^0,f,c
  8469  0002E4  D7FB               	bra	u5117
  8470  0002E6  D000               	nop2	
  8471  0002E8                     
  8472                           ;lcd.c: 48:  PORTEbits.RE1=1;
  8473  0002E8  8284               	bsf	132,1,c	;volatile
  8474  0002EA                     
  8475                           ;lcd.c: 50:  lcd_cmd(0x38);
  8476  0002EA  0E38               	movlw	56
  8477  0002EC  EC75  F03E         	call	_lcd_cmd
  8478  0002F0                     
  8479                           ;lcd.c: 51:  _delay((unsigned long)((30)*(4000000/4000.0)));
  8480  0002F0  0E1E               	movlw	30
  8481  0002F2  6E04               	movwf	??_lcd_init^0,c
  8482  0002F4  0E3C               	movlw	60
  8483  0002F6                     u5127:
  8484  0002F6  FFFF               	dw	65535	; errata NOP
  8485  0002F8  2EE8               	decfsz	wreg,f,c
  8486  0002FA  D7FD               	bra	u5127
  8487  0002FC  2E04               	decfsz	??_lcd_init^0,f,c
  8488  0002FE  D7FB               	bra	u5127
  8489  000300  D000               	nop2	
  8490                           
  8491                           ;lcd.c: 52:  lcd_cmd(0x38);
  8492  000302  0E38               	movlw	56
  8493  000304  EC75  F03E         	call	_lcd_cmd
  8494  000308                     
  8495                           ;lcd.c: 53:     _delay((unsigned long)((30)*(4000000/4000.0)));
  8496  000308  0E1E               	movlw	30
  8497  00030A  6E04               	movwf	??_lcd_init^0,c
  8498  00030C  0E3C               	movlw	60
  8499  00030E                     u5137:
  8500  00030E  FFFF               	dw	65535	; errata NOP
  8501  000310  2EE8               	decfsz	wreg,f,c
  8502  000312  D7FD               	bra	u5137
  8503  000314  2E04               	decfsz	??_lcd_init^0,f,c
  8504  000316  D7FB               	bra	u5137
  8505  000318  D000               	nop2	
  8506  00031A                     
  8507                           ;lcd.c: 54:  lcd_cmd(0x38);
  8508  00031A  0E38               	movlw	56
  8509  00031C  EC75  F03E         	call	_lcd_cmd
  8510  000320                     
  8511                           ;lcd.c: 55:  lcd_cmd(0x08);
  8512  000320  0E08               	movlw	8
  8513  000322  EC75  F03E         	call	_lcd_cmd
  8514  000326                     
  8515                           ;lcd.c: 56:  lcd_cmd(0x0F);
  8516  000326  0E0F               	movlw	15
  8517  000328  EC75  F03E         	call	_lcd_cmd
  8518  00032C                     
  8519                           ;lcd.c: 57:  lcd_cmd(0x01);
  8520  00032C  0E01               	movlw	1
  8521  00032E  EC75  F03E         	call	_lcd_cmd
  8522  000332                     
  8523                           ;lcd.c: 58:  lcd_cmd(0x38);
  8524  000332  0E38               	movlw	56
  8525  000334  EC75  F03E         	call	_lcd_cmd
  8526  000338                     
  8527                           ;lcd.c: 59:     lcd_cmd(0x80);
  8528  000338  0E80               	movlw	128
  8529  00033A  EC75  F03E         	call	_lcd_cmd
  8530  00033E  0012               	return		;funcret
  8531  000340  FFFF               	dw	65535	; errata NOP
  8532  000342                     __end_of_lcd_init:
  8533                           	callstack 0
  8534                           
  8535 ;; *************** function _lcd_cmd *****************
  8536 ;; Defined at:
  8537 ;;		line 10 in file "lcd.c"
  8538 ;; Parameters:    Size  Location     Type
  8539 ;;  val             1    wreg     unsigned char 
  8540 ;; Auto vars:     Size  Location     Type
  8541 ;;  val             1    2[COMRAM] unsigned char 
  8542 ;; Return value:  Size  Location     Type
  8543 ;;                  1    wreg      void 
  8544 ;; Registers used:
  8545 ;;		wreg, status,2, cstack
  8546 ;; Tracked objects:
  8547 ;;		On entry : 0/0
  8548 ;;		On exit  : 0/0
  8549 ;;		Unchanged: 0/0
  8550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8551 ;;      Params:         0       0       0       0       0       0       0
  8552 ;;      Locals:         1       0       0       0       0       0       0
  8553 ;;      Temps:          1       0       0       0       0       0       0
  8554 ;;      Totals:         2       0       0       0       0       0       0
  8555 ;;Total ram usage:        2 bytes
  8556 ;; Hardware stack levels used:    1
  8557 ;; Hardware stack levels required when called:    2
  8558 ;; This function calls:
  8559 ;;		_lcd_wr
  8560 ;; This function is called by:
  8561 ;;		_main
  8562 ;;		_lcd_init
  8563 ;; This function uses a non-reentrant model
  8564 ;;
  8565                           
  8566                           	psect	text35
  8567  007CEA                     __ptext35:
  8568                           	callstack 0
  8569  007CEA                     _lcd_cmd:
  8570                           	callstack 0
  8571  007CEA  FFFF               	dw	65535	; assembler added errata NOP
  8572                           
  8573                           ;incstack = 0
  8574                           ;lcd_cmd@val stored from wreg
  8575  007CEC  6E03               	movwf	lcd_cmd@val^0,c
  8576  007CEE                     
  8577                           ;lcd.c: 10: void lcd_cmd(unsigned char val);lcd.c: 11: {;lcd.c: 12:  PORTEbits.RE1=1;
  8578  007CEE  8284               	bsf	132,1,c	;volatile
  8579  007CF0                     
  8580                           ;lcd.c: 13:     lcd_wr(val);
  8581  007CF0  5003               	movf	lcd_cmd@val^0,w,c
  8582  007CF2  EC36  F03E         	call	_lcd_wr
  8583  007CF6                     
  8584                           ;lcd.c: 14:     PORTEbits.RE2=0;
  8585  007CF6  9484               	bcf	132,2,c	;volatile
  8586  007CF8                     
  8587                           ;lcd.c: 15:     _delay((unsigned long)((30)*(4000000/4000.0)));
  8588  007CF8  0E1E               	movlw	30
  8589  007CFA  6E02               	movwf	??_lcd_cmd^0,c
  8590  007CFC  0E3C               	movlw	60
  8591  007CFE                     u5147:
  8592  007CFE  FFFF               	dw	65535	; errata NOP
  8593  007D00  2EE8               	decfsz	wreg,f,c
  8594  007D02  D7FD               	bra	u5147
  8595  007D04  2E02               	decfsz	??_lcd_cmd^0,f,c
  8596  007D06  D7FB               	bra	u5147
  8597  007D08  D000               	nop2	
  8598  007D0A                     
  8599                           ;lcd.c: 16:     PORTEbits.RE1=0;
  8600  007D0A  9284               	bcf	132,1,c	;volatile
  8601  007D0C                     
  8602                           ;lcd.c: 17:     _delay((unsigned long)((30)*(4000000/4000.0)));
  8603  007D0C  0E1E               	movlw	30
  8604  007D0E  6E02               	movwf	??_lcd_cmd^0,c
  8605  007D10  0E3C               	movlw	60
  8606  007D12                     u5157:
  8607  007D12  FFFF               	dw	65535	; errata NOP
  8608  007D14  2EE8               	decfsz	wreg,f,c
  8609  007D16  D7FD               	bra	u5157
  8610  007D18  2E02               	decfsz	??_lcd_cmd^0,f,c
  8611  007D1A  D7FB               	bra	u5157
  8612  007D1C  D000               	nop2	
  8613  007D1E                     
  8614                           ;lcd.c: 18:  PORTEbits.RE1=1;
  8615  007D1E  8284               	bsf	132,1,c	;volatile
  8616  007D20  0012               	return		;funcret
  8617  007D22  FFFF               	dw	65535	; errata NOP
  8618  007D24                     __end_of_lcd_cmd:
  8619                           	callstack 0
  8620                           
  8621 ;; *************** function _lcd_wr *****************
  8622 ;; Defined at:
  8623 ;;		line 5 in file "lcd.c"
  8624 ;; Parameters:    Size  Location     Type
  8625 ;;  val             1    wreg     unsigned char 
  8626 ;; Auto vars:     Size  Location     Type
  8627 ;;  val             1    0[COMRAM] unsigned char 
  8628 ;; Return value:  Size  Location     Type
  8629 ;;                  1    wreg      void 
  8630 ;; Registers used:
  8631 ;;		wreg
  8632 ;; Tracked objects:
  8633 ;;		On entry : 0/0
  8634 ;;		On exit  : 0/0
  8635 ;;		Unchanged: 0/0
  8636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8637 ;;      Params:         0       0       0       0       0       0       0
  8638 ;;      Locals:         1       0       0       0       0       0       0
  8639 ;;      Temps:          0       0       0       0       0       0       0
  8640 ;;      Totals:         1       0       0       0       0       0       0
  8641 ;;Total ram usage:        1 bytes
  8642 ;; Hardware stack levels used:    1
  8643 ;; Hardware stack levels required when called:    1
  8644 ;; This function calls:
  8645 ;;		Nothing
  8646 ;; This function is called by:
  8647 ;;		_lcd_cmd
  8648 ;;		_lcd_dat
  8649 ;; This function uses a non-reentrant model
  8650 ;;
  8651                           
  8652                           	psect	text36
  8653  007C6C                     __ptext36:
  8654                           	callstack 0
  8655  007C6C                     _lcd_wr:
  8656                           	callstack 0
  8657  007C6C  FFFF               	dw	65535	; assembler added errata NOP
  8658                           
  8659                           ;incstack = 0
  8660                           ;lcd_wr@val stored from wreg
  8661  007C6E  6E01               	movwf	lcd_wr@val^0,c
  8662  007C70                     
  8663                           ;lcd.c: 5: void lcd_wr(unsigned char val);lcd.c: 6: {;lcd.c: 7:     PORTD=val;
  8664  007C70  C001  FF83         	movff	lcd_wr@val,3971	;volatile
  8665  007C74  0012               	return		;funcret
  8666  007C76  FFFF               	dw	65535	; errata NOP
  8667  007C78                     __end_of_lcd_wr:
  8668                           	callstack 0
  8669                           
  8670 ;; *************** function _init_interrupts *****************
  8671 ;; Defined at:
  8672 ;;		line 76 in file "init_PIC.c"
  8673 ;; Parameters:    Size  Location     Type
  8674 ;;		None
  8675 ;; Auto vars:     Size  Location     Type
  8676 ;;		None
  8677 ;; Return value:  Size  Location     Type
  8678 ;;                  1    wreg      void 
  8679 ;; Registers used:
  8680 ;;		None
  8681 ;; Tracked objects:
  8682 ;;		On entry : 0/0
  8683 ;;		On exit  : 0/0
  8684 ;;		Unchanged: 0/0
  8685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8686 ;;      Params:         0       0       0       0       0       0       0
  8687 ;;      Locals:         0       0       0       0       0       0       0
  8688 ;;      Temps:          0       0       0       0       0       0       0
  8689 ;;      Totals:         0       0       0       0       0       0       0
  8690 ;;Total ram usage:        0 bytes
  8691 ;; Hardware stack levels used:    1
  8692 ;; Hardware stack levels required when called:    1
  8693 ;; This function calls:
  8694 ;;		Nothing
  8695 ;; This function is called by:
  8696 ;;		_main
  8697 ;; This function uses a non-reentrant model
  8698 ;;
  8699                           
  8700                           	psect	text37
  8701  007C60                     __ptext37:
  8702                           	callstack 0
  8703  007C60                     _init_interrupts:
  8704                           	callstack 0
  8705  007C60  FFFF               	dw	65535	; assembler added errata NOP
  8706  007C62                     
  8707                           ;init_PIC.c: 78:     PIR1bits.RCIF = 0;
  8708  007C62  9A9E               	bcf	158,5,c	;volatile
  8709                           
  8710                           ;init_PIC.c: 79:     PIE1bits.RCIE = 1;
  8711  007C64  8A9D               	bsf	157,5,c	;volatile
  8712                           
  8713                           ;init_PIC.c: 80:     INTCONbits.PEIE = 1;
  8714  007C66  8CF2               	bsf	242,6,c	;volatile
  8715  007C68  0012               	return		;funcret
  8716  007C6A  FFFF               	dw	65535	; errata NOP
  8717  007C6C                     __end_of_init_interrupts:
  8718                           	callstack 0
  8719                           
  8720 ;; *************** function _init_USART *****************
  8721 ;; Defined at:
  8722 ;;		line 13 in file "serial_rs232.c"
  8723 ;; Parameters:    Size  Location     Type
  8724 ;;		None
  8725 ;; Auto vars:     Size  Location     Type
  8726 ;;		None
  8727 ;; Return value:  Size  Location     Type
  8728 ;;                  1    wreg      void 
  8729 ;; Registers used:
  8730 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8731 ;; Tracked objects:
  8732 ;;		On entry : 0/0
  8733 ;;		On exit  : 0/0
  8734 ;;		Unchanged: 0/0
  8735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8736 ;;      Params:         0       0       0       0       0       0       0
  8737 ;;      Locals:         0       0       0       0       0       0       0
  8738 ;;      Temps:          0       0       0       0       0       0       0
  8739 ;;      Totals:         0       0       0       0       0       0       0
  8740 ;;Total ram usage:        0 bytes
  8741 ;; Hardware stack levels used:    1
  8742 ;; Hardware stack levels required when called:    4
  8743 ;; This function calls:
  8744 ;;		___fltol
  8745 ;;		_roundf
  8746 ;; This function is called by:
  8747 ;;		_main
  8748 ;; This function uses a non-reentrant model
  8749 ;;
  8750                           
  8751                           	psect	text38
  8752  007D5E                     __ptext38:
  8753                           	callstack 0
  8754  007D5E                     _init_USART:
  8755                           	callstack 0
  8756  007D5E  FFFF               	dw	65535	; assembler added errata NOP
  8757  007D60                     
  8758                           ;serial_rs232.c: 24:     SPBRG = roundf(((fosc / desired_baudrate) / 16) - 1);
  8759  007D60  0E55               	movlw	85
  8760  007D62  6E1A               	movwf	roundf@x^0,c
  8761  007D64  0E55               	movlw	85
  8762  007D66  6E1B               	movwf	(roundf@x+1)^0,c
  8763  007D68  0EC8               	movlw	200
  8764  007D6A  6E1C               	movwf	(roundf@x+2)^0,c
  8765  007D6C  0E41               	movlw	65
  8766  007D6E  6E1D               	movwf	(roundf@x+3)^0,c
  8767  007D70  EC05  F012         	call	_roundf	;wreg free
  8768  007D74  C01A  F034         	movff	?_roundf,___fltol@f1
  8769  007D78  C01B  F035         	movff	?_roundf+1,___fltol@f1+1
  8770  007D7C  C01C  F036         	movff	?_roundf+2,___fltol@f1+2
  8771  007D80  C01D  F037         	movff	?_roundf+3,___fltol@f1+3
  8772  007D84  EC4E  F01D         	call	___fltol	;wreg free
  8773  007D88  5034               	movf	?___fltol^0,w,c
  8774  007D8A  6EAF               	movwf	175,c	;volatile
  8775  007D8C                     
  8776                           ;serial_rs232.c: 28:     TXSTAbits.TX9 = 0;
  8777  007D8C  9CAC               	bcf	172,6,c	;volatile
  8778  007D8E                     
  8779                           ;serial_rs232.c: 29:     TXSTAbits.TXEN = 1;
  8780  007D8E  8AAC               	bsf	172,5,c	;volatile
  8781  007D90                     
  8782                           ;serial_rs232.c: 30:     TXSTAbits.SYNC =0;
  8783  007D90  98AC               	bcf	172,4,c	;volatile
  8784  007D92                     
  8785                           ;serial_rs232.c: 31:     TXSTAbits.BRGH = 1;
  8786  007D92  84AC               	bsf	172,2,c	;volatile
  8787  007D94                     
  8788                           ;serial_rs232.c: 33:     RCSTAbits.SPEN = 1;
  8789  007D94  8EAB               	bsf	171,7,c	;volatile
  8790  007D96                     
  8791                           ;serial_rs232.c: 34:     RCSTAbits.RX9 = 0;
  8792  007D96  9CAB               	bcf	171,6,c	;volatile
  8793  007D98                     
  8794                           ;serial_rs232.c: 35:     RCSTAbits.CREN = 1;
  8795  007D98  88AB               	bsf	171,4,c	;volatile
  8796  007D9A  0012               	return		;funcret
  8797  007D9C  FFFF               	dw	65535	; errata NOP
  8798  007D9E                     __end_of_init_USART:
  8799                           	callstack 0
  8800                           
  8801 ;; *************** function _roundf *****************
  8802 ;; Defined at:
  8803 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\roundf.c"
  8804 ;; Parameters:    Size  Location     Type
  8805 ;;  x               4   25[COMRAM] float 
  8806 ;; Auto vars:     Size  Location     Type
  8807 ;;  y               4   47[COMRAM] float 
  8808 ;;  u               4   43[COMRAM] struct .
  8809 ;;  e               2   37[COMRAM] int 
  8810 ;; Return value:  Size  Location     Type
  8811 ;;                  4   25[COMRAM] float 
  8812 ;; Registers used:
  8813 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8814 ;; Tracked objects:
  8815 ;;		On entry : 0/0
  8816 ;;		On exit  : 0/0
  8817 ;;		Unchanged: 0/0
  8818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8819 ;;      Params:         4       0       0       0       0       0       0
  8820 ;;      Locals:        18       0       0       0       0       0       0
  8821 ;;      Temps:          4       0       0       0       0       0       0
  8822 ;;      Totals:        26       0       0       0       0       0       0
  8823 ;;Total ram usage:       26 bytes
  8824 ;; Hardware stack levels used:    1
  8825 ;; Hardware stack levels required when called:    3
  8826 ;; This function calls:
  8827 ;;		___fladd
  8828 ;;		___flge
  8829 ;;		___flmul
  8830 ;;		___flneg
  8831 ;;		___flsub
  8832 ;; This function is called by:
  8833 ;;		_init_USART
  8834 ;; This function uses a non-reentrant model
  8835 ;;
  8836                           
  8837                           	psect	text39
  8838  00240A                     __ptext39:
  8839                           	callstack 0
  8840  00240A                     _roundf:
  8841                           	callstack 0
  8842  00240A  FFFF               	dw	65535	; assembler added errata NOP
  8843  00240C  C080  F02C         	movff	roundf@F525,roundf@u
  8844  002410  C081  F02D         	movff	roundf@F525+1,roundf@u+1
  8845  002414  C082  F02E         	movff	roundf@F525+2,roundf@u+2
  8846  002418  C083  F02F         	movff	roundf@F525+3,roundf@u+3
  8847  00241C  C01A  F02C         	movff	roundf@x,roundf@u
  8848  002420  C01B  F02D         	movff	roundf@x+1,roundf@u+1
  8849  002424  C01C  F02E         	movff	roundf@x+2,roundf@u+2
  8850  002428  C01D  F02F         	movff	roundf@x+3,roundf@u+3
  8851  00242C  C02C  F01E         	movff	roundf@u,??_roundf
  8852  002430  C02D  F01F         	movff	roundf@u+1,??_roundf+1
  8853  002434  C02E  F020         	movff	roundf@u+2,??_roundf+2
  8854  002438  C02F  F021         	movff	roundf@u+3,??_roundf+3
  8855  00243C  0E18               	movlw	24
  8856  00243E  EF27  F012         	goto	u4800
  8857  002442                     u4805:
  8858  002442  FFFF               	dw	65535	; assembler added errata NOP
  8859  002444  90D8               	bcf	status,0,c
  8860  002446  3221               	rrcf	(??_roundf+3)^0,f,c
  8861  002448  3220               	rrcf	(??_roundf+2)^0,f,c
  8862  00244A  321F               	rrcf	(??_roundf+1)^0,f,c
  8863  00244C  321E               	rrcf	??_roundf^0,f,c
  8864  00244E                     u4800:
  8865  00244E  FFFF               	dw	65535	; assembler added errata NOP
  8866  002450  2EE8               	decfsz	wreg,f,c
  8867  002452  EF21  F012         	goto	u4805
  8868  002456  501E               	movf	??_roundf^0,w,c
  8869  002458  6E26               	movwf	roundf@e^0,c
  8870  00245A  6A27               	clrf	(roundf@e+1)^0,c
  8871  00245C  BE27               	btfsc	(roundf@e+1)^0,7,c
  8872  00245E  EF3A  F012         	goto	u4811
  8873  002462  5027               	movf	(roundf@e+1)^0,w,c
  8874  002464  E10A               	bnz	u4810
  8875  002466  0E96               	movlw	150
  8876  002468  5C26               	subwf	roundf@e^0,w,c
  8877  00246A  A0D8               	btfss	status,0,c
  8878  00246C  EF3A  F012         	goto	u4811
  8879  002470  EF3D  F012         	goto	u4810
  8880  002474                     u4811:
  8881  002474  FFFF               	dw	65535	; assembler added errata NOP
  8882  002476  EF48  F012         	goto	l3987
  8883  00247A                     u4810:
  8884  00247A  FFFF               	dw	65535	; assembler added errata NOP
  8885  00247C  C01A  F01A         	movff	roundf@x,?_roundf
  8886  002480  C01B  F01B         	movff	roundf@x+1,?_roundf+1
  8887  002484  C01C  F01C         	movff	roundf@x+2,?_roundf+2
  8888  002488  C01D  F01D         	movff	roundf@x+3,?_roundf+3
  8889  00248C  EFF5  F013         	goto	l806
  8890  002490                     l3987:
  8891  002490  FFFF               	dw	65535	; assembler added errata NOP
  8892  002492  C02C  F01E         	movff	roundf@u,??_roundf
  8893  002496  C02D  F01F         	movff	roundf@u+1,??_roundf+1
  8894  00249A  C02E  F020         	movff	roundf@u+2,??_roundf+2
  8895  00249E  C02F  F021         	movff	roundf@u+3,??_roundf+3
  8896  0024A2  0E20               	movlw	32
  8897  0024A4  EF5A  F012         	goto	u4820
  8898  0024A8                     u4825:
  8899  0024A8  FFFF               	dw	65535	; assembler added errata NOP
  8900  0024AA  90D8               	bcf	status,0,c
  8901  0024AC  3221               	rrcf	(??_roundf+3)^0,f,c
  8902  0024AE  3220               	rrcf	(??_roundf+2)^0,f,c
  8903  0024B0  321F               	rrcf	(??_roundf+1)^0,f,c
  8904  0024B2  321E               	rrcf	??_roundf^0,f,c
  8905  0024B4                     u4820:
  8906  0024B4  FFFF               	dw	65535	; assembler added errata NOP
  8907  0024B6  2EE8               	decfsz	wreg,f,c
  8908  0024B8  EF54  F012         	goto	u4825
  8909  0024BC  501E               	movf	??_roundf^0,w,c
  8910  0024BE  101F               	iorwf	(??_roundf+1)^0,w,c
  8911  0024C0  1020               	iorwf	(??_roundf+2)^0,w,c
  8912  0024C2  1021               	iorwf	(??_roundf+3)^0,w,c
  8913  0024C4  B4D8               	btfsc	status,2,c
  8914  0024C6  EF67  F012         	goto	u4831
  8915  0024CA  EF6A  F012         	goto	u4830
  8916  0024CE                     u4831:
  8917  0024CE  FFFF               	dw	65535	; assembler added errata NOP
  8918  0024D0  EF7D  F012         	goto	l3991
  8919  0024D4                     u4830:
  8920  0024D4  FFFF               	dw	65535	; assembler added errata NOP
  8921  0024D6  C01A  F001         	movff	roundf@x,___flneg@f1
  8922  0024DA  C01B  F002         	movff	roundf@x+1,___flneg@f1+1
  8923  0024DE  C01C  F003         	movff	roundf@x+2,___flneg@f1+2
  8924  0024E2  C01D  F004         	movff	roundf@x+3,___flneg@f1+3
  8925  0024E6  ECCF  F03E         	call	___flneg	;wreg free
  8926  0024EA  C001  F01A         	movff	?___flneg,roundf@x
  8927  0024EE  C002  F01B         	movff	?___flneg+1,roundf@x+1
  8928  0024F2  C003  F01C         	movff	?___flneg+2,roundf@x+2
  8929  0024F6  C004  F01D         	movff	?___flneg+3,roundf@x+3
  8930  0024FA                     l3991:
  8931  0024FA  FFFF               	dw	65535	; assembler added errata NOP
  8932  0024FC  BE27               	btfsc	(roundf@e+1)^0,7,c
  8933  0024FE  EF8D  F012         	goto	u4840
  8934  002502  5027               	movf	(roundf@e+1)^0,w,c
  8935  002504  E107               	bnz	u4841
  8936  002506  0E7E               	movlw	126
  8937  002508  5C26               	subwf	roundf@e^0,w,c
  8938  00250A  B0D8               	btfsc	status,0,c
  8939  00250C  EF8A  F012         	goto	u4841
  8940  002510  EF8D  F012         	goto	u4840
  8941  002514                     u4841:
  8942  002514  FFFF               	dw	65535	; assembler added errata NOP
  8943  002516  EFAA  F012         	goto	l3997
  8944  00251A                     u4840:
  8945  00251A  FFFF               	dw	65535	; assembler added errata NOP
  8946  00251C  C02C  F001         	movff	roundf@u,___flmul@b
  8947  002520  C02D  F002         	movff	roundf@u+1,___flmul@b+1
  8948  002524  C02E  F003         	movff	roundf@u+2,___flmul@b+2
  8949  002528  C02F  F004         	movff	roundf@u+3,___flmul@b+3
  8950  00252C  0E00               	movlw	0
  8951  00252E  6E05               	movwf	___flmul@a^0,c
  8952  002530  0E00               	movlw	0
  8953  002532  6E06               	movwf	(___flmul@a+1)^0,c
  8954  002534  0E00               	movlw	0
  8955  002536  6E07               	movwf	(___flmul@a+2)^0,c
  8956  002538  0E00               	movlw	0
  8957  00253A  6E08               	movwf	(___flmul@a+3)^0,c
  8958  00253C  ECB3  F00F         	call	___flmul	;wreg free
  8959  002540  C001  F01A         	movff	?___flmul,?_roundf
  8960  002544  C002  F01B         	movff	?___flmul+1,?_roundf+1
  8961  002548  C003  F01C         	movff	?___flmul+2,?_roundf+2
  8962  00254C  C004  F01D         	movff	?___flmul+3,?_roundf+3
  8963  002550  EFF5  F013         	goto	l806
  8964  002554                     l3997:
  8965  002554  FFFF               	dw	65535	; assembler added errata NOP
  8966  002556  0E00               	movlw	0
  8967  002558  6E05               	movwf	___fladd@a^0,c
  8968  00255A  0E00               	movlw	0
  8969  00255C  6E06               	movwf	(___fladd@a+1)^0,c
  8970  00255E  0E00               	movlw	0
  8971  002560  6E07               	movwf	(___fladd@a+2)^0,c
  8972  002562  0E4B               	movlw	75
  8973  002564  6E08               	movwf	(___fladd@a+3)^0,c
  8974  002566  C01A  F001         	movff	roundf@x,___fladd@b
  8975  00256A  C01B  F002         	movff	roundf@x+1,___fladd@b+1
  8976  00256E  C01C  F003         	movff	roundf@x+2,___fladd@b+2
  8977  002572  C01D  F004         	movff	roundf@x+3,___fladd@b+3
  8978  002576  ECDF  F00C         	call	___fladd	;wreg free
  8979  00257A  C001  F028         	movff	?___fladd,_roundf$1674
  8980  00257E  C002  F029         	movff	?___fladd+1,_roundf$1674+1
  8981  002582  C003  F02A         	movff	?___fladd+2,_roundf$1674+2
  8982  002586  C004  F02B         	movff	?___fladd+3,_roundf$1674+3
  8983  00258A  0E00               	movlw	0
  8984  00258C  6E05               	movwf	___fladd@a^0,c
  8985  00258E  0E00               	movlw	0
  8986  002590  6E06               	movwf	(___fladd@a+1)^0,c
  8987  002592  0E00               	movlw	0
  8988  002594  6E07               	movwf	(___fladd@a+2)^0,c
  8989  002596  0ECB               	movlw	203
  8990  002598  6E08               	movwf	(___fladd@a+3)^0,c
  8991  00259A  C028  F001         	movff	_roundf$1674,___fladd@b
  8992  00259E  C029  F002         	movff	_roundf$1674+1,___fladd@b+1
  8993  0025A2  C02A  F003         	movff	_roundf$1674+2,___fladd@b+2
  8994  0025A6  C02B  F004         	movff	_roundf$1674+3,___fladd@b+3
  8995  0025AA  ECDF  F00C         	call	___fladd	;wreg free
  8996  0025AE  C001  F022         	movff	?___fladd,_roundf$1675
  8997  0025B2  C002  F023         	movff	?___fladd+1,_roundf$1675+1
  8998  0025B6  C003  F024         	movff	?___fladd+2,_roundf$1675+2
  8999  0025BA  C004  F025         	movff	?___fladd+3,_roundf$1675+3
  9000  0025BE  C022  F011         	movff	_roundf$1675,___flsub@b
  9001  0025C2  C023  F012         	movff	_roundf$1675+1,___flsub@b+1
  9002  0025C6  C024  F013         	movff	_roundf$1675+2,___flsub@b+2
  9003  0025CA  C025  F014         	movff	_roundf$1675+3,___flsub@b+3
  9004  0025CE  C01A  F015         	movff	roundf@x,___flsub@a
  9005  0025D2  C01B  F016         	movff	roundf@x+1,___flsub@a+1
  9006  0025D6  C01C  F017         	movff	roundf@x+2,___flsub@a+2
  9007  0025DA  C01D  F018         	movff	roundf@x+3,___flsub@a+3
  9008  0025DE  ECDB  F03F         	call	___flsub	;wreg free
  9009  0025E2  C011  F030         	movff	?___flsub,roundf@y
  9010  0025E6  C012  F031         	movff	?___flsub+1,roundf@y+1
  9011  0025EA  C013  F032         	movff	?___flsub+2,roundf@y+2
  9012  0025EE  C014  F033         	movff	?___flsub+3,roundf@y+3
  9013  0025F2  0E00               	movlw	0
  9014  0025F4  6E01               	movwf	___flge@ff1^0,c
  9015  0025F6  0E00               	movlw	0
  9016  0025F8  6E02               	movwf	(___flge@ff1+1)^0,c
  9017  0025FA  0E00               	movlw	0
  9018  0025FC  6E03               	movwf	(___flge@ff1+2)^0,c
  9019  0025FE  0E3F               	movlw	63
  9020  002600  6E04               	movwf	(___flge@ff1+3)^0,c
  9021  002602  C030  F005         	movff	roundf@y,___flge@ff2
  9022  002606  C031  F006         	movff	roundf@y+1,___flge@ff2+1
  9023  00260A  C032  F007         	movff	roundf@y+2,___flge@ff2+2
  9024  00260E  C033  F008         	movff	roundf@y+3,___flge@ff2+3
  9025  002612  ECE9  F01D         	call	___flge	;wreg free
  9026  002616  B0D8               	btfsc	status,0,c
  9027  002618  EF10  F013         	goto	u4851
  9028  00261C  EF13  F013         	goto	u4850
  9029  002620                     u4851:
  9030  002620  FFFF               	dw	65535	; assembler added errata NOP
  9031  002622  EF4A  F013         	goto	l4001
  9032  002626                     u4850:
  9033  002626  FFFF               	dw	65535	; assembler added errata NOP
  9034  002628  C01A  F005         	movff	roundf@x,___fladd@a
  9035  00262C  C01B  F006         	movff	roundf@x+1,___fladd@a+1
  9036  002630  C01C  F007         	movff	roundf@x+2,___fladd@a+2
  9037  002634  C01D  F008         	movff	roundf@x+3,___fladd@a+3
  9038  002638  C030  F001         	movff	roundf@y,___fladd@b
  9039  00263C  C031  F002         	movff	roundf@y+1,___fladd@b+1
  9040  002640  C032  F003         	movff	roundf@y+2,___fladd@b+2
  9041  002644  C033  F004         	movff	roundf@y+3,___fladd@b+3
  9042  002648  ECDF  F00C         	call	___fladd	;wreg free
  9043  00264C  C001  F028         	movff	?___fladd,_roundf$1674
  9044  002650  C002  F029         	movff	?___fladd+1,_roundf$1674+1
  9045  002654  C003  F02A         	movff	?___fladd+2,_roundf$1674+2
  9046  002658  C004  F02B         	movff	?___fladd+3,_roundf$1674+3
  9047  00265C  C028  F001         	movff	_roundf$1674,___fladd@b
  9048  002660  C029  F002         	movff	_roundf$1674+1,___fladd@b+1
  9049  002664  C02A  F003         	movff	_roundf$1674+2,___fladd@b+2
  9050  002668  C02B  F004         	movff	_roundf$1674+3,___fladd@b+3
  9051  00266C  0E00               	movlw	0
  9052  00266E  6E05               	movwf	___fladd@a^0,c
  9053  002670  0E00               	movlw	0
  9054  002672  6E06               	movwf	(___fladd@a+1)^0,c
  9055  002674  0E80               	movlw	128
  9056  002676  6E07               	movwf	(___fladd@a+2)^0,c
  9057  002678  0EBF               	movlw	191
  9058  00267A  6E08               	movwf	(___fladd@a+3)^0,c
  9059  00267C  ECDF  F00C         	call	___fladd	;wreg free
  9060  002680  C001  F030         	movff	?___fladd,roundf@y
  9061  002684  C002  F031         	movff	?___fladd+1,roundf@y+1
  9062  002688  C003  F032         	movff	?___fladd+2,roundf@y+2
  9063  00268C  C004  F033         	movff	?___fladd+3,roundf@y+3
  9064  002690  EFB7  F013         	goto	l4007
  9065  002694                     l4001:
  9066  002694  FFFF               	dw	65535	; assembler added errata NOP
  9067  002696  0E00               	movlw	0
  9068  002698  6E01               	movwf	___flge@ff1^0,c
  9069  00269A  0E00               	movlw	0
  9070  00269C  6E02               	movwf	(___flge@ff1+1)^0,c
  9071  00269E  0E00               	movlw	0
  9072  0026A0  6E03               	movwf	(___flge@ff1+2)^0,c
  9073  0026A2  0EBF               	movlw	191
  9074  0026A4  6E04               	movwf	(___flge@ff1+3)^0,c
  9075  0026A6  C030  F005         	movff	roundf@y,___flge@ff2
  9076  0026AA  C031  F006         	movff	roundf@y+1,___flge@ff2+1
  9077  0026AE  C032  F007         	movff	roundf@y+2,___flge@ff2+2
  9078  0026B2  C033  F008         	movff	roundf@y+3,___flge@ff2+3
  9079  0026B6  ECE9  F01D         	call	___flge	;wreg free
  9080  0026BA  A0D8               	btfss	status,0,c
  9081  0026BC  EF62  F013         	goto	u4861
  9082  0026C0  EF65  F013         	goto	u4860
  9083  0026C4                     u4861:
  9084  0026C4  FFFF               	dw	65535	; assembler added errata NOP
  9085  0026C6  EF9C  F013         	goto	l4005
  9086  0026CA                     u4860:
  9087  0026CA  FFFF               	dw	65535	; assembler added errata NOP
  9088  0026CC  C01A  F005         	movff	roundf@x,___fladd@a
  9089  0026D0  C01B  F006         	movff	roundf@x+1,___fladd@a+1
  9090  0026D4  C01C  F007         	movff	roundf@x+2,___fladd@a+2
  9091  0026D8  C01D  F008         	movff	roundf@x+3,___fladd@a+3
  9092  0026DC  C030  F001         	movff	roundf@y,___fladd@b
  9093  0026E0  C031  F002         	movff	roundf@y+1,___fladd@b+1
  9094  0026E4  C032  F003         	movff	roundf@y+2,___fladd@b+2
  9095  0026E8  C033  F004         	movff	roundf@y+3,___fladd@b+3
  9096  0026EC  ECDF  F00C         	call	___fladd	;wreg free
  9097  0026F0  C001  F028         	movff	?___fladd,_roundf$1674
  9098  0026F4  C002  F029         	movff	?___fladd+1,_roundf$1674+1
  9099  0026F8  C003  F02A         	movff	?___fladd+2,_roundf$1674+2
  9100  0026FC  C004  F02B         	movff	?___fladd+3,_roundf$1674+3
  9101  002700  C028  F001         	movff	_roundf$1674,___fladd@b
  9102  002704  C029  F002         	movff	_roundf$1674+1,___fladd@b+1
  9103  002708  C02A  F003         	movff	_roundf$1674+2,___fladd@b+2
  9104  00270C  C02B  F004         	movff	_roundf$1674+3,___fladd@b+3
  9105  002710  0E00               	movlw	0
  9106  002712  6E05               	movwf	___fladd@a^0,c
  9107  002714  0E00               	movlw	0
  9108  002716  6E06               	movwf	(___fladd@a+1)^0,c
  9109  002718  0E80               	movlw	128
  9110  00271A  6E07               	movwf	(___fladd@a+2)^0,c
  9111  00271C  0E3F               	movlw	63
  9112  00271E  6E08               	movwf	(___fladd@a+3)^0,c
  9113  002720  ECDF  F00C         	call	___fladd	;wreg free
  9114  002724  C001  F030         	movff	?___fladd,roundf@y
  9115  002728  C002  F031         	movff	?___fladd+1,roundf@y+1
  9116  00272C  C003  F032         	movff	?___fladd+2,roundf@y+2
  9117  002730  C004  F033         	movff	?___fladd+3,roundf@y+3
  9118  002734  EFB7  F013         	goto	l4007
  9119  002738                     l4005:
  9120  002738  FFFF               	dw	65535	; assembler added errata NOP
  9121  00273A  C030  F001         	movff	roundf@y,___fladd@b
  9122  00273E  C031  F002         	movff	roundf@y+1,___fladd@b+1
  9123  002742  C032  F003         	movff	roundf@y+2,___fladd@b+2
  9124  002746  C033  F004         	movff	roundf@y+3,___fladd@b+3
  9125  00274A  C01A  F005         	movff	roundf@x,___fladd@a
  9126  00274E  C01B  F006         	movff	roundf@x+1,___fladd@a+1
  9127  002752  C01C  F007         	movff	roundf@x+2,___fladd@a+2
  9128  002756  C01D  F008         	movff	roundf@x+3,___fladd@a+3
  9129  00275A  ECDF  F00C         	call	___fladd	;wreg free
  9130  00275E  C001  F030         	movff	?___fladd,roundf@y
  9131  002762  C002  F031         	movff	?___fladd+1,roundf@y+1
  9132  002766  C003  F032         	movff	?___fladd+2,roundf@y+2
  9133  00276A  C004  F033         	movff	?___fladd+3,roundf@y+3
  9134  00276E                     l4007:
  9135  00276E  FFFF               	dw	65535	; assembler added errata NOP
  9136  002770  C02C  F01E         	movff	roundf@u,??_roundf
  9137  002774  C02D  F01F         	movff	roundf@u+1,??_roundf+1
  9138  002778  C02E  F020         	movff	roundf@u+2,??_roundf+2
  9139  00277C  C02F  F021         	movff	roundf@u+3,??_roundf+3
  9140  002780  0E20               	movlw	32
  9141  002782  EFC9  F013         	goto	u4870
  9142  002786                     u4875:
  9143  002786  FFFF               	dw	65535	; assembler added errata NOP
  9144  002788  90D8               	bcf	status,0,c
  9145  00278A  3221               	rrcf	(??_roundf+3)^0,f,c
  9146  00278C  3220               	rrcf	(??_roundf+2)^0,f,c
  9147  00278E  321F               	rrcf	(??_roundf+1)^0,f,c
  9148  002790  321E               	rrcf	??_roundf^0,f,c
  9149  002792                     u4870:
  9150  002792  FFFF               	dw	65535	; assembler added errata NOP
  9151  002794  2EE8               	decfsz	wreg,f,c
  9152  002796  EFC3  F013         	goto	u4875
  9153  00279A  501E               	movf	??_roundf^0,w,c
  9154  00279C  101F               	iorwf	(??_roundf+1)^0,w,c
  9155  00279E  1020               	iorwf	(??_roundf+2)^0,w,c
  9156  0027A0  1021               	iorwf	(??_roundf+3)^0,w,c
  9157  0027A2  B4D8               	btfsc	status,2,c
  9158  0027A4  EFD6  F013         	goto	u4881
  9159  0027A8  EFD9  F013         	goto	u4880
  9160  0027AC                     u4881:
  9161  0027AC  FFFF               	dw	65535	; assembler added errata NOP
  9162  0027AE  EFEC  F013         	goto	l4011
  9163  0027B2                     u4880:
  9164  0027B2  FFFF               	dw	65535	; assembler added errata NOP
  9165  0027B4  C030  F001         	movff	roundf@y,___flneg@f1
  9166  0027B8  C031  F002         	movff	roundf@y+1,___flneg@f1+1
  9167  0027BC  C032  F003         	movff	roundf@y+2,___flneg@f1+2
  9168  0027C0  C033  F004         	movff	roundf@y+3,___flneg@f1+3
  9169  0027C4  ECCF  F03E         	call	___flneg	;wreg free
  9170  0027C8  C001  F030         	movff	?___flneg,roundf@y
  9171  0027CC  C002  F031         	movff	?___flneg+1,roundf@y+1
  9172  0027D0  C003  F032         	movff	?___flneg+2,roundf@y+2
  9173  0027D4  C004  F033         	movff	?___flneg+3,roundf@y+3
  9174  0027D8                     l4011:
  9175  0027D8  FFFF               	dw	65535	; assembler added errata NOP
  9176  0027DA  C030  F01A         	movff	roundf@y,?_roundf
  9177  0027DE  C031  F01B         	movff	roundf@y+1,?_roundf+1
  9178  0027E2  C032  F01C         	movff	roundf@y+2,?_roundf+2
  9179  0027E6  C033  F01D         	movff	roundf@y+3,?_roundf+3
  9180  0027EA                     l806:
  9181  0027EA  FFFF               	dw	65535	; assembler added errata NOP
  9182  0027EC  0012               	return		;funcret
  9183  0027EE  FFFF               	dw	65535	; errata NOP
  9184  0027F0                     __end_of_roundf:
  9185                           	callstack 0
  9186                           
  9187 ;; *************** function ___flsub *****************
  9188 ;; Defined at:
  9189 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  9190 ;; Parameters:    Size  Location     Type
  9191 ;;  b               4   16[COMRAM] float 
  9192 ;;  a               4   20[COMRAM] float 
  9193 ;; Auto vars:     Size  Location     Type
  9194 ;;		None
  9195 ;; Return value:  Size  Location     Type
  9196 ;;                  4   16[COMRAM] float 
  9197 ;; Registers used:
  9198 ;;		wreg, status,2, status,0, cstack
  9199 ;; Tracked objects:
  9200 ;;		On entry : 0/0
  9201 ;;		On exit  : 0/0
  9202 ;;		Unchanged: 0/0
  9203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9204 ;;      Params:         8       0       0       0       0       0       0
  9205 ;;      Locals:         0       0       0       0       0       0       0
  9206 ;;      Temps:          0       0       0       0       0       0       0
  9207 ;;      Totals:         8       0       0       0       0       0       0
  9208 ;;Total ram usage:        8 bytes
  9209 ;; Hardware stack levels used:    1
  9210 ;; Hardware stack levels required when called:    2
  9211 ;; This function calls:
  9212 ;;		___fladd
  9213 ;; This function is called by:
  9214 ;;		_roundf
  9215 ;; This function uses a non-reentrant model
  9216 ;;
  9217                           
  9218                           	psect	text40
  9219  007FB6                     __ptext40:
  9220                           	callstack 0
  9221  007FB6                     ___flsub:
  9222                           	callstack 0
  9223  007FB6  FFFF               	dw	65535	; assembler added errata NOP
  9224  007FB8  0E00               	movlw	0
  9225  007FBA  1A15               	xorwf	___flsub@a^0,f,c
  9226  007FBC  0E00               	movlw	0
  9227  007FBE  1A16               	xorwf	(___flsub@a+1)^0,f,c
  9228  007FC0  0E00               	movlw	0
  9229  007FC2  1A17               	xorwf	(___flsub@a+2)^0,f,c
  9230  007FC4  0E80               	movlw	128
  9231  007FC6  1A18               	xorwf	(___flsub@a+3)^0,f,c
  9232  007FC8  C011  F001         	movff	___flsub@b,___fladd@b
  9233  007FCC  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  9234  007FD0  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  9235  007FD4  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  9236  007FD8  C015  F005         	movff	___flsub@a,___fladd@a
  9237  007FDC  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  9238  007FE0  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  9239  007FE4  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  9240  007FE8  ECDF  F00C         	call	___fladd	;wreg free
  9241  007FEC  C001  F011         	movff	?___fladd,?___flsub
  9242  007FF0  C002  F012         	movff	?___fladd+1,?___flsub+1
  9243  007FF4  C003  F013         	movff	?___fladd+2,?___flsub+2
  9244  007FF8  C004  F014         	movff	?___fladd+3,?___flsub+3
  9245  007FFC  0012               	return		;funcret
  9246  007FFE  FFFF               	dw	65535	; errata NOP
  9247  008000                     __end_of___flsub:
  9248                           	callstack 0
  9249                           
  9250 ;; *************** function ___fladd *****************
  9251 ;; Defined at:
  9252 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  9253 ;; Parameters:    Size  Location     Type
  9254 ;;  b               4    0[COMRAM] float 
  9255 ;;  a               4    4[COMRAM] float 
  9256 ;; Auto vars:     Size  Location     Type
  9257 ;;  grs             1   15[COMRAM] unsigned char 
  9258 ;;  bexp            1   14[COMRAM] unsigned char 
  9259 ;;  aexp            1   13[COMRAM] unsigned char 
  9260 ;;  signs           1   12[COMRAM] unsigned char 
  9261 ;; Return value:  Size  Location     Type
  9262 ;;                  4    0[COMRAM] unsigned char 
  9263 ;; Registers used:
  9264 ;;		wreg, status,2, status,0
  9265 ;; Tracked objects:
  9266 ;;		On entry : 0/0
  9267 ;;		On exit  : 0/0
  9268 ;;		Unchanged: 0/0
  9269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9270 ;;      Params:         8       0       0       0       0       0       0
  9271 ;;      Locals:         4       0       0       0       0       0       0
  9272 ;;      Temps:          4       0       0       0       0       0       0
  9273 ;;      Totals:        16       0       0       0       0       0       0
  9274 ;;Total ram usage:       16 bytes
  9275 ;; Hardware stack levels used:    1
  9276 ;; Hardware stack levels required when called:    1
  9277 ;; This function calls:
  9278 ;;		Nothing
  9279 ;; This function is called by:
  9280 ;;		___flsub
  9281 ;;		_roundf
  9282 ;; This function uses a non-reentrant model
  9283 ;;
  9284                           
  9285                           	psect	text41
  9286  0019BE                     __ptext41:
  9287                           	callstack 0
  9288  0019BE                     ___fladd:
  9289                           	callstack 0
  9290  0019BE  FFFF               	dw	65535	; assembler added errata NOP
  9291  0019C0  5004               	movf	(___fladd@b+3)^0,w,c
  9292  0019C2  0B80               	andlw	128
  9293  0019C4  6E0D               	movwf	___fladd@signs^0,c
  9294  0019C6  5004               	movf	(___fladd@b+3)^0,w,c
  9295  0019C8  2404               	addwf	(___fladd@b+3)^0,w,c
  9296  0019CA  6E0F               	movwf	___fladd@bexp^0,c
  9297  0019CC  AE03               	btfss	(___fladd@b+2)^0,7,c
  9298  0019CE  EFEB  F00C         	goto	u3701
  9299  0019D2  EFEE  F00C         	goto	u3700
  9300  0019D6                     u3701:
  9301  0019D6  FFFF               	dw	65535	; assembler added errata NOP
  9302  0019D8  EFF0  F00C         	goto	l3279
  9303  0019DC                     u3700:
  9304  0019DC  FFFF               	dw	65535	; assembler added errata NOP
  9305  0019DE  800F               	bsf	___fladd@bexp^0,0,c
  9306  0019E0                     l3279:
  9307  0019E0  FFFF               	dw	65535	; assembler added errata NOP
  9308  0019E2  500F               	movf	___fladd@bexp^0,w,c
  9309  0019E4  B4D8               	btfsc	status,2,c
  9310  0019E6  EFF7  F00C         	goto	u3711
  9311  0019EA  EFFA  F00C         	goto	u3710
  9312  0019EE                     u3711:
  9313  0019EE  FFFF               	dw	65535	; assembler added errata NOP
  9314  0019F0  EF13  F00D         	goto	l3289
  9315  0019F4                     u3710:
  9316  0019F4  FFFF               	dw	65535	; assembler added errata NOP
  9317  0019F6  280F               	incf	___fladd@bexp^0,w,c
  9318  0019F8  A4D8               	btfss	status,2,c
  9319  0019FA  EF01  F00D         	goto	u3721
  9320  0019FE  EF04  F00D         	goto	u3720
  9321  001A02                     u3721:
  9322  001A02  FFFF               	dw	65535	; assembler added errata NOP
  9323  001A04  EF0D  F00D         	goto	l3285
  9324  001A08                     u3720:
  9325  001A08  FFFF               	dw	65535	; assembler added errata NOP
  9326  001A0A  0E00               	movlw	0
  9327  001A0C  6E01               	movwf	___fladd@b^0,c
  9328  001A0E  0E00               	movlw	0
  9329  001A10  6E02               	movwf	(___fladd@b+1)^0,c
  9330  001A12  0E00               	movlw	0
  9331  001A14  6E03               	movwf	(___fladd@b+2)^0,c
  9332  001A16  0E00               	movlw	0
  9333  001A18  6E04               	movwf	(___fladd@b+3)^0,c
  9334  001A1A                     l3285:
  9335  001A1A  FFFF               	dw	65535	; assembler added errata NOP
  9336  001A1C  8E03               	bsf	(___fladd@b+2)^0,7,c
  9337  001A1E  0E00               	movlw	0
  9338  001A20  6E04               	movwf	(___fladd@b+3)^0,c
  9339  001A22  EF1C  F00D         	goto	l3291
  9340  001A26                     l3289:
  9341  001A26  FFFF               	dw	65535	; assembler added errata NOP
  9342  001A28  0E00               	movlw	0
  9343  001A2A  6E01               	movwf	___fladd@b^0,c
  9344  001A2C  0E00               	movlw	0
  9345  001A2E  6E02               	movwf	(___fladd@b+1)^0,c
  9346  001A30  0E00               	movlw	0
  9347  001A32  6E03               	movwf	(___fladd@b+2)^0,c
  9348  001A34  0E00               	movlw	0
  9349  001A36  6E04               	movwf	(___fladd@b+3)^0,c
  9350  001A38                     l3291:
  9351  001A38  FFFF               	dw	65535	; assembler added errata NOP
  9352  001A3A  5008               	movf	(___fladd@a+3)^0,w,c
  9353  001A3C  0B80               	andlw	128
  9354  001A3E  6E0E               	movwf	___fladd@aexp^0,c
  9355  001A40  500D               	movf	___fladd@signs^0,w,c
  9356  001A42  180E               	xorwf	___fladd@aexp^0,w,c
  9357  001A44  B4D8               	btfsc	status,2,c
  9358  001A46  EF27  F00D         	goto	u3731
  9359  001A4A  EF2A  F00D         	goto	u3730
  9360  001A4E                     u3731:
  9361  001A4E  FFFF               	dw	65535	; assembler added errata NOP
  9362  001A50  EF2C  F00D         	goto	l3297
  9363  001A54                     u3730:
  9364  001A54  FFFF               	dw	65535	; assembler added errata NOP
  9365  001A56  8C0D               	bsf	___fladd@signs^0,6,c
  9366  001A58                     l3297:
  9367  001A58  FFFF               	dw	65535	; assembler added errata NOP
  9368  001A5A  5008               	movf	(___fladd@a+3)^0,w,c
  9369  001A5C  2408               	addwf	(___fladd@a+3)^0,w,c
  9370  001A5E  6E0E               	movwf	___fladd@aexp^0,c
  9371  001A60  AE07               	btfss	(___fladd@a+2)^0,7,c
  9372  001A62  EF35  F00D         	goto	u3741
  9373  001A66  EF38  F00D         	goto	u3740
  9374  001A6A                     u3741:
  9375  001A6A  FFFF               	dw	65535	; assembler added errata NOP
  9376  001A6C  EF3A  F00D         	goto	l3303
  9377  001A70                     u3740:
  9378  001A70  FFFF               	dw	65535	; assembler added errata NOP
  9379  001A72  800E               	bsf	___fladd@aexp^0,0,c
  9380  001A74                     l3303:
  9381  001A74  FFFF               	dw	65535	; assembler added errata NOP
  9382  001A76  500E               	movf	___fladd@aexp^0,w,c
  9383  001A78  B4D8               	btfsc	status,2,c
  9384  001A7A  EF41  F00D         	goto	u3751
  9385  001A7E  EF44  F00D         	goto	u3750
  9386  001A82                     u3751:
  9387  001A82  FFFF               	dw	65535	; assembler added errata NOP
  9388  001A84  EF5D  F00D         	goto	l3313
  9389  001A88                     u3750:
  9390  001A88  FFFF               	dw	65535	; assembler added errata NOP
  9391  001A8A  280E               	incf	___fladd@aexp^0,w,c
  9392  001A8C  A4D8               	btfss	status,2,c
  9393  001A8E  EF4B  F00D         	goto	u3761
  9394  001A92  EF4E  F00D         	goto	u3760
  9395  001A96                     u3761:
  9396  001A96  FFFF               	dw	65535	; assembler added errata NOP
  9397  001A98  EF57  F00D         	goto	l3309
  9398  001A9C                     u3760:
  9399  001A9C  FFFF               	dw	65535	; assembler added errata NOP
  9400  001A9E  0E00               	movlw	0
  9401  001AA0  6E05               	movwf	___fladd@a^0,c
  9402  001AA2  0E00               	movlw	0
  9403  001AA4  6E06               	movwf	(___fladd@a+1)^0,c
  9404  001AA6  0E00               	movlw	0
  9405  001AA8  6E07               	movwf	(___fladd@a+2)^0,c
  9406  001AAA  0E00               	movlw	0
  9407  001AAC  6E08               	movwf	(___fladd@a+3)^0,c
  9408  001AAE                     l3309:
  9409  001AAE  FFFF               	dw	65535	; assembler added errata NOP
  9410  001AB0  8E07               	bsf	(___fladd@a+2)^0,7,c
  9411  001AB2  0E00               	movlw	0
  9412  001AB4  6E08               	movwf	(___fladd@a+3)^0,c
  9413  001AB6  EF66  F00D         	goto	l3315
  9414  001ABA                     l3313:
  9415  001ABA  FFFF               	dw	65535	; assembler added errata NOP
  9416  001ABC  0E00               	movlw	0
  9417  001ABE  6E05               	movwf	___fladd@a^0,c
  9418  001AC0  0E00               	movlw	0
  9419  001AC2  6E06               	movwf	(___fladd@a+1)^0,c
  9420  001AC4  0E00               	movlw	0
  9421  001AC6  6E07               	movwf	(___fladd@a+2)^0,c
  9422  001AC8  0E00               	movlw	0
  9423  001ACA  6E08               	movwf	(___fladd@a+3)^0,c
  9424  001ACC                     l3315:
  9425  001ACC  FFFF               	dw	65535	; assembler added errata NOP
  9426  001ACE  500F               	movf	___fladd@bexp^0,w,c
  9427  001AD0  5C0E               	subwf	___fladd@aexp^0,w,c
  9428  001AD2  B0D8               	btfsc	status,0,c
  9429  001AD4  EF6E  F00D         	goto	u3771
  9430  001AD8  EF71  F00D         	goto	u3770
  9431  001ADC                     u3771:
  9432  001ADC  FFFF               	dw	65535	; assembler added errata NOP
  9433  001ADE  EF9C  F00D         	goto	l3351
  9434  001AE2                     u3770:
  9435  001AE2  FFFF               	dw	65535	; assembler added errata NOP
  9436  001AE4  AC0D               	btfss	___fladd@signs^0,6,c
  9437  001AE6  EF77  F00D         	goto	u3781
  9438  001AEA  EF7A  F00D         	goto	u3780
  9439  001AEE                     u3781:
  9440  001AEE  FFFF               	dw	65535	; assembler added errata NOP
  9441  001AF0  EF7D  F00D         	goto	l3321
  9442  001AF4                     u3780:
  9443  001AF4  FFFF               	dw	65535	; assembler added errata NOP
  9444  001AF6  0E80               	movlw	128
  9445  001AF8  1A0D               	xorwf	___fladd@signs^0,f,c
  9446  001AFA                     l3321:
  9447  001AFA  FFFF               	dw	65535	; assembler added errata NOP
  9448  001AFC  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  9449  001B00  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  9450  001B04  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  9451  001B08  C001  F010         	movff	___fladd@b,___fladd@grs
  9452  001B0C  C005  F001         	movff	___fladd@a,___fladd@b
  9453  001B10  C010  F005         	movff	___fladd@grs,___fladd@a
  9454  001B14  C002  F010         	movff	___fladd@b+1,___fladd@grs
  9455  001B18  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  9456  001B1C  C010  F006         	movff	___fladd@grs,___fladd@a+1
  9457  001B20  C003  F010         	movff	___fladd@b+2,___fladd@grs
  9458  001B24  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  9459  001B28  C010  F007         	movff	___fladd@grs,___fladd@a+2
  9460  001B2C  C004  F010         	movff	___fladd@b+3,___fladd@grs
  9461  001B30  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  9462  001B34  C010  F008         	movff	___fladd@grs,___fladd@a+3
  9463  001B38                     l3351:
  9464  001B38  FFFF               	dw	65535	; assembler added errata NOP
  9465  001B3A  0E00               	movlw	0
  9466  001B3C  6E10               	movwf	___fladd@grs^0,c
  9467  001B3E  500F               	movf	___fladd@bexp^0,w,c
  9468  001B40  C00E  F009         	movff	___fladd@aexp,??___fladd
  9469  001B44  6A0A               	clrf	(??___fladd+1)^0,c
  9470  001B46  5E09               	subwf	??___fladd^0,f,c
  9471  001B48  0E00               	movlw	0
  9472  001B4A  5A0A               	subwfb	(??___fladd+1)^0,f,c
  9473  001B4C  BE0A               	btfsc	(??___fladd+1)^0,7,c
  9474  001B4E  EFB2  F00D         	goto	u3791
  9475  001B52  500A               	movf	(??___fladd+1)^0,w,c
  9476  001B54  E10A               	bnz	u3790
  9477  001B56  0E1A               	movlw	26
  9478  001B58  5C09               	subwf	??___fladd^0,w,c
  9479  001B5A  A0D8               	btfss	status,0,c
  9480  001B5C  EFB2  F00D         	goto	u3791
  9481  001B60  EFB5  F00D         	goto	u3790
  9482  001B64                     u3791:
  9483  001B64  FFFF               	dw	65535	; assembler added errata NOP
  9484  001B66  EFF8  F00D         	goto	l656
  9485  001B6A                     u3790:
  9486  001B6A  FFFF               	dw	65535	; assembler added errata NOP
  9487  001B6C  5001               	movf	___fladd@b^0,w,c
  9488  001B6E  1002               	iorwf	(___fladd@b+1)^0,w,c
  9489  001B70  1003               	iorwf	(___fladd@b+2)^0,w,c
  9490  001B72  1004               	iorwf	(___fladd@b+3)^0,w,c
  9491  001B74  A4D8               	btfss	status,2,c
  9492  001B76  EFBF  F00D         	goto	u3801
  9493  001B7A  EFC3  F00D         	goto	u3800
  9494  001B7E                     u3801:
  9495  001B7E  FFFF               	dw	65535	; assembler added errata NOP
  9496  001B80  0E01               	movlw	1
  9497  001B82  EFC5  F00D         	goto	u3810
  9498  001B86                     u3800:
  9499  001B86  FFFF               	dw	65535	; assembler added errata NOP
  9500  001B88  0E00               	movlw	0
  9501  001B8A                     u3810:
  9502  001B8A  FFFF               	dw	65535	; assembler added errata NOP
  9503  001B8C  6E10               	movwf	___fladd@grs^0,c
  9504  001B8E  0E00               	movlw	0
  9505  001B90  6E01               	movwf	___fladd@b^0,c
  9506  001B92  0E00               	movlw	0
  9507  001B94  6E02               	movwf	(___fladd@b+1)^0,c
  9508  001B96  0E00               	movlw	0
  9509  001B98  6E03               	movwf	(___fladd@b+2)^0,c
  9510  001B9A  0E00               	movlw	0
  9511  001B9C  6E04               	movwf	(___fladd@b+3)^0,c
  9512  001B9E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  9513  001BA2  EF03  F00E         	goto	l655
  9514  001BA6                     l657:
  9515  001BA6  FFFF               	dw	65535	; assembler added errata NOP
  9516  001BA8  A010               	btfss	___fladd@grs^0,0,c
  9517  001BAA  EFD9  F00D         	goto	u3821
  9518  001BAE  EFDC  F00D         	goto	u3820
  9519  001BB2                     u3821:
  9520  001BB2  FFFF               	dw	65535	; assembler added errata NOP
  9521  001BB4  EFE3  F00D         	goto	l3363
  9522  001BB8                     u3820:
  9523  001BB8  FFFF               	dw	65535	; assembler added errata NOP
  9524  001BBA  90D8               	bcf	status,0,c
  9525  001BBC  3010               	rrcf	___fladd@grs^0,w,c
  9526  001BBE  0901               	iorlw	1
  9527  001BC0  6E10               	movwf	___fladd@grs^0,c
  9528  001BC2  EFE6  F00D         	goto	l3365
  9529  001BC6                     l3363:
  9530  001BC6  FFFF               	dw	65535	; assembler added errata NOP
  9531  001BC8  90D8               	bcf	status,0,c
  9532  001BCA  3210               	rrcf	___fladd@grs^0,f,c
  9533  001BCC                     l3365:
  9534  001BCC  FFFF               	dw	65535	; assembler added errata NOP
  9535  001BCE  A001               	btfss	___fladd@b^0,0,c
  9536  001BD0  EFEC  F00D         	goto	u3831
  9537  001BD4  EFEF  F00D         	goto	u3830
  9538  001BD8                     u3831:
  9539  001BD8  FFFF               	dw	65535	; assembler added errata NOP
  9540  001BDA  EFF1  F00D         	goto	l3369
  9541  001BDE                     u3830:
  9542  001BDE  FFFF               	dw	65535	; assembler added errata NOP
  9543  001BE0  8E10               	bsf	___fladd@grs^0,7,c
  9544  001BE2                     l3369:
  9545  001BE2  FFFF               	dw	65535	; assembler added errata NOP
  9546  001BE4  3404               	rlcf	(___fladd@b+3)^0,w,c
  9547  001BE6  3204               	rrcf	(___fladd@b+3)^0,f,c
  9548  001BE8  3203               	rrcf	(___fladd@b+2)^0,f,c
  9549  001BEA  3202               	rrcf	(___fladd@b+1)^0,f,c
  9550  001BEC  3201               	rrcf	___fladd@b^0,f,c
  9551  001BEE  2A0F               	incf	___fladd@bexp^0,f,c
  9552  001BF0                     l656:
  9553  001BF0  FFFF               	dw	65535	; assembler added errata NOP
  9554  001BF2  500E               	movf	___fladd@aexp^0,w,c
  9555  001BF4  5C0F               	subwf	___fladd@bexp^0,w,c
  9556  001BF6  A0D8               	btfss	status,0,c
  9557  001BF8  EF00  F00E         	goto	u3841
  9558  001BFC  EF03  F00E         	goto	u3840
  9559  001C00                     u3841:
  9560  001C00  FFFF               	dw	65535	; assembler added errata NOP
  9561  001C02  EFD3  F00D         	goto	l657
  9562  001C06                     u3840:
  9563  001C06                     l655:
  9564  001C06  FFFF               	dw	65535	; assembler added errata NOP
  9565  001C08  BC0D               	btfsc	___fladd@signs^0,6,c
  9566  001C0A  EF09  F00E         	goto	u3851
  9567  001C0E  EF0C  F00E         	goto	u3850
  9568  001C12                     u3851:
  9569  001C12  FFFF               	dw	65535	; assembler added errata NOP
  9570  001C14  EF59  F00E         	goto	l3397
  9571  001C18                     u3850:
  9572  001C18  FFFF               	dw	65535	; assembler added errata NOP
  9573  001C1A  500F               	movf	___fladd@bexp^0,w,c
  9574  001C1C  A4D8               	btfss	status,2,c
  9575  001C1E  EF13  F00E         	goto	u3861
  9576  001C22  EF16  F00E         	goto	u3860
  9577  001C26                     u3861:
  9578  001C26  FFFF               	dw	65535	; assembler added errata NOP
  9579  001C28  EF21  F00E         	goto	l3379
  9580  001C2C                     u3860:
  9581  001C2C  FFFF               	dw	65535	; assembler added errata NOP
  9582  001C2E  0E00               	movlw	0
  9583  001C30  6E01               	movwf	?___fladd^0,c
  9584  001C32  0E00               	movlw	0
  9585  001C34  6E02               	movwf	(?___fladd+1)^0,c
  9586  001C36  0E00               	movlw	0
  9587  001C38  6E03               	movwf	(?___fladd+2)^0,c
  9588  001C3A  0E00               	movlw	0
  9589  001C3C  6E04               	movwf	(?___fladd+3)^0,c
  9590  001C3E  EFB0  F00F         	goto	l664
  9591  001C42                     l3379:
  9592  001C42  FFFF               	dw	65535	; assembler added errata NOP
  9593  001C44  5005               	movf	___fladd@a^0,w,c
  9594  001C46  2601               	addwf	___fladd@b^0,f,c
  9595  001C48  5006               	movf	(___fladd@a+1)^0,w,c
  9596  001C4A  2202               	addwfc	(___fladd@b+1)^0,f,c
  9597  001C4C  5007               	movf	(___fladd@a+2)^0,w,c
  9598  001C4E  2203               	addwfc	(___fladd@b+2)^0,f,c
  9599  001C50  5008               	movf	(___fladd@a+3)^0,w,c
  9600  001C52  2204               	addwfc	(___fladd@b+3)^0,f,c
  9601  001C54  A004               	btfss	(___fladd@b+3)^0,0,c
  9602  001C56  EF2F  F00E         	goto	u3871
  9603  001C5A  EF32  F00E         	goto	u3870
  9604  001C5E                     u3871:
  9605  001C5E  FFFF               	dw	65535	; assembler added errata NOP
  9606  001C60  EFFD  F00E         	goto	l3433
  9607  001C64                     u3870:
  9608  001C64  FFFF               	dw	65535	; assembler added errata NOP
  9609  001C66  A010               	btfss	___fladd@grs^0,0,c
  9610  001C68  EF38  F00E         	goto	u3881
  9611  001C6C  EF3B  F00E         	goto	u3880
  9612  001C70                     u3881:
  9613  001C70  FFFF               	dw	65535	; assembler added errata NOP
  9614  001C72  EF42  F00E         	goto	l3387
  9615  001C76                     u3880:
  9616  001C76  FFFF               	dw	65535	; assembler added errata NOP
  9617  001C78  90D8               	bcf	status,0,c
  9618  001C7A  3010               	rrcf	___fladd@grs^0,w,c
  9619  001C7C  0901               	iorlw	1
  9620  001C7E  6E10               	movwf	___fladd@grs^0,c
  9621  001C80  EF45  F00E         	goto	l3389
  9622  001C84                     l3387:
  9623  001C84  FFFF               	dw	65535	; assembler added errata NOP
  9624  001C86  90D8               	bcf	status,0,c
  9625  001C88  3210               	rrcf	___fladd@grs^0,f,c
  9626  001C8A                     l3389:
  9627  001C8A  FFFF               	dw	65535	; assembler added errata NOP
  9628  001C8C  A001               	btfss	___fladd@b^0,0,c
  9629  001C8E  EF4B  F00E         	goto	u3891
  9630  001C92  EF4E  F00E         	goto	u3890
  9631  001C96                     u3891:
  9632  001C96  FFFF               	dw	65535	; assembler added errata NOP
  9633  001C98  EF50  F00E         	goto	l3393
  9634  001C9C                     u3890:
  9635  001C9C  FFFF               	dw	65535	; assembler added errata NOP
  9636  001C9E  8E10               	bsf	___fladd@grs^0,7,c
  9637  001CA0                     l3393:
  9638  001CA0  FFFF               	dw	65535	; assembler added errata NOP
  9639  001CA2  3404               	rlcf	(___fladd@b+3)^0,w,c
  9640  001CA4  3204               	rrcf	(___fladd@b+3)^0,f,c
  9641  001CA6  3203               	rrcf	(___fladd@b+2)^0,f,c
  9642  001CA8  3202               	rrcf	(___fladd@b+1)^0,f,c
  9643  001CAA  3201               	rrcf	___fladd@b^0,f,c
  9644  001CAC  2A0F               	incf	___fladd@bexp^0,f,c
  9645  001CAE  EFFD  F00E         	goto	l3433
  9646  001CB2                     l3397:
  9647  001CB2  FFFF               	dw	65535	; assembler added errata NOP
  9648  001CB4  5005               	movf	___fladd@a^0,w,c
  9649  001CB6  5C01               	subwf	___fladd@b^0,w,c
  9650  001CB8  5006               	movf	(___fladd@a+1)^0,w,c
  9651  001CBA  5802               	subwfb	(___fladd@b+1)^0,w,c
  9652  001CBC  5007               	movf	(___fladd@a+2)^0,w,c
  9653  001CBE  5803               	subwfb	(___fladd@b+2)^0,w,c
  9654  001CC0  5004               	movf	(___fladd@b+3)^0,w,c
  9655  001CC2  0A80               	xorlw	128
  9656  001CC4  6E09               	movwf	??___fladd^0,c
  9657  001CC6  5008               	movf	(___fladd@a+3)^0,w,c
  9658  001CC8  0A80               	xorlw	128
  9659  001CCA  5809               	subwfb	??___fladd^0,w,c
  9660  001CCC  B0D8               	btfsc	status,0,c
  9661  001CCE  EF6B  F00E         	goto	u3901
  9662  001CD2  EF6E  F00E         	goto	u3900
  9663  001CD6                     u3901:
  9664  001CD6  FFFF               	dw	65535	; assembler added errata NOP
  9665  001CD8  EF9C  F00E         	goto	l3407
  9666  001CDC                     u3900:
  9667  001CDC  FFFF               	dw	65535	; assembler added errata NOP
  9668  001CDE  5001               	movf	___fladd@b^0,w,c
  9669  001CE0  5C05               	subwf	___fladd@a^0,w,c
  9670  001CE2  6E09               	movwf	??___fladd^0,c
  9671  001CE4  5002               	movf	(___fladd@b+1)^0,w,c
  9672  001CE6  5806               	subwfb	(___fladd@a+1)^0,w,c
  9673  001CE8  6E0A               	movwf	(??___fladd+1)^0,c
  9674  001CEA  5003               	movf	(___fladd@b+2)^0,w,c
  9675  001CEC  5807               	subwfb	(___fladd@a+2)^0,w,c
  9676  001CEE  6E0B               	movwf	(??___fladd+2)^0,c
  9677  001CF0  5004               	movf	(___fladd@b+3)^0,w,c
  9678  001CF2  5808               	subwfb	(___fladd@a+3)^0,w,c
  9679  001CF4  6E0C               	movwf	(??___fladd+3)^0,c
  9680  001CF6  0EFF               	movlw	255
  9681  001CF8  2409               	addwf	??___fladd^0,w,c
  9682  001CFA  6E01               	movwf	___fladd@b^0,c
  9683  001CFC  0EFF               	movlw	255
  9684  001CFE  200A               	addwfc	(??___fladd+1)^0,w,c
  9685  001D00  6E02               	movwf	(___fladd@b+1)^0,c
  9686  001D02  0EFF               	movlw	255
  9687  001D04  200B               	addwfc	(??___fladd+2)^0,w,c
  9688  001D06  6E03               	movwf	(___fladd@b+2)^0,c
  9689  001D08  0EFF               	movlw	255
  9690  001D0A  200C               	addwfc	(??___fladd+3)^0,w,c
  9691  001D0C  6E04               	movwf	(___fladd@b+3)^0,c
  9692  001D0E  0E80               	movlw	128
  9693  001D10  1A0D               	xorwf	___fladd@signs^0,f,c
  9694  001D12  6C10               	negf	___fladd@grs^0,c
  9695  001D14  5010               	movf	___fladd@grs^0,w,c
  9696  001D16  A4D8               	btfss	status,2,c
  9697  001D18  EF90  F00E         	goto	u3911
  9698  001D1C  EF93  F00E         	goto	u3910
  9699  001D20                     u3911:
  9700  001D20  FFFF               	dw	65535	; assembler added errata NOP
  9701  001D22  EFA5  F00E         	goto	l672
  9702  001D26                     u3910:
  9703  001D26  FFFF               	dw	65535	; assembler added errata NOP
  9704  001D28  0E01               	movlw	1
  9705  001D2A  2601               	addwf	___fladd@b^0,f,c
  9706  001D2C  0E00               	movlw	0
  9707  001D2E  2202               	addwfc	(___fladd@b+1)^0,f,c
  9708  001D30  2203               	addwfc	(___fladd@b+2)^0,f,c
  9709  001D32  2204               	addwfc	(___fladd@b+3)^0,f,c
  9710  001D34  EFA5  F00E         	goto	l672
  9711  001D38                     l3407:
  9712  001D38  FFFF               	dw	65535	; assembler added errata NOP
  9713  001D3A  5005               	movf	___fladd@a^0,w,c
  9714  001D3C  5E01               	subwf	___fladd@b^0,f,c
  9715  001D3E  5006               	movf	(___fladd@a+1)^0,w,c
  9716  001D40  5A02               	subwfb	(___fladd@b+1)^0,f,c
  9717  001D42  5007               	movf	(___fladd@a+2)^0,w,c
  9718  001D44  5A03               	subwfb	(___fladd@b+2)^0,f,c
  9719  001D46  5008               	movf	(___fladd@a+3)^0,w,c
  9720  001D48  5A04               	subwfb	(___fladd@b+3)^0,f,c
  9721  001D4A                     l672:
  9722  001D4A  FFFF               	dw	65535	; assembler added errata NOP
  9723  001D4C  5001               	movf	___fladd@b^0,w,c
  9724  001D4E  1002               	iorwf	(___fladd@b+1)^0,w,c
  9725  001D50  1003               	iorwf	(___fladd@b+2)^0,w,c
  9726  001D52  1004               	iorwf	(___fladd@b+3)^0,w,c
  9727  001D54  A4D8               	btfss	status,2,c
  9728  001D56  EFAF  F00E         	goto	u3921
  9729  001D5A  EFB2  F00E         	goto	u3920
  9730  001D5E                     u3921:
  9731  001D5E  FFFF               	dw	65535	; assembler added errata NOP
  9732  001D60  EFF4  F00E         	goto	l3431
  9733  001D64                     u3920:
  9734  001D64  FFFF               	dw	65535	; assembler added errata NOP
  9735  001D66  5010               	movf	___fladd@grs^0,w,c
  9736  001D68  A4D8               	btfss	status,2,c
  9737  001D6A  EFB9  F00E         	goto	u3931
  9738  001D6E  EFBC  F00E         	goto	u3930
  9739  001D72                     u3931:
  9740  001D72  FFFF               	dw	65535	; assembler added errata NOP
  9741  001D74  EFF4  F00E         	goto	l3431
  9742  001D78                     u3930:
  9743  001D78  FFFF               	dw	65535	; assembler added errata NOP
  9744  001D7A  0E00               	movlw	0
  9745  001D7C  6E01               	movwf	?___fladd^0,c
  9746  001D7E  0E00               	movlw	0
  9747  001D80  6E02               	movwf	(?___fladd+1)^0,c
  9748  001D82  0E00               	movlw	0
  9749  001D84  6E03               	movwf	(?___fladd+2)^0,c
  9750  001D86  0E00               	movlw	0
  9751  001D88  6E04               	movwf	(?___fladd+3)^0,c
  9752  001D8A  EFB0  F00F         	goto	l664
  9753  001D8E                     l3415:
  9754  001D8E  FFFF               	dw	65535	; assembler added errata NOP
  9755  001D90  90D8               	bcf	status,0,c
  9756  001D92  3601               	rlcf	___fladd@b^0,f,c
  9757  001D94  3602               	rlcf	(___fladd@b+1)^0,f,c
  9758  001D96  3603               	rlcf	(___fladd@b+2)^0,f,c
  9759  001D98  3604               	rlcf	(___fladd@b+3)^0,f,c
  9760  001D9A  AE10               	btfss	___fladd@grs^0,7,c
  9761  001D9C  EFD2  F00E         	goto	u3941
  9762  001DA0  EFD5  F00E         	goto	u3940
  9763  001DA4                     u3941:
  9764  001DA4  FFFF               	dw	65535	; assembler added errata NOP
  9765  001DA6  EFD7  F00E         	goto	l3421
  9766  001DAA                     u3940:
  9767  001DAA  FFFF               	dw	65535	; assembler added errata NOP
  9768  001DAC  8001               	bsf	___fladd@b^0,0,c
  9769  001DAE                     l3421:
  9770  001DAE  FFFF               	dw	65535	; assembler added errata NOP
  9771  001DB0  A010               	btfss	___fladd@grs^0,0,c
  9772  001DB2  EFDD  F00E         	goto	u3951
  9773  001DB6  EFE0  F00E         	goto	u3950
  9774  001DBA                     u3951:
  9775  001DBA  FFFF               	dw	65535	; assembler added errata NOP
  9776  001DBC  EFE5  F00E         	goto	l3425
  9777  001DC0                     u3950:
  9778  001DC0  FFFF               	dw	65535	; assembler added errata NOP
  9779  001DC2  80D8               	bsf	status,0,c
  9780  001DC4  3610               	rlcf	___fladd@grs^0,f,c
  9781  001DC6  EFE8  F00E         	goto	l3427
  9782  001DCA                     l3425:
  9783  001DCA  FFFF               	dw	65535	; assembler added errata NOP
  9784  001DCC  90D8               	bcf	status,0,c
  9785  001DCE  3610               	rlcf	___fladd@grs^0,f,c
  9786  001DD0                     l3427:
  9787  001DD0  FFFF               	dw	65535	; assembler added errata NOP
  9788  001DD2  500F               	movf	___fladd@bexp^0,w,c
  9789  001DD4  B4D8               	btfsc	status,2,c
  9790  001DD6  EFEF  F00E         	goto	u3961
  9791  001DDA  EFF2  F00E         	goto	u3960
  9792  001DDE                     u3961:
  9793  001DDE  FFFF               	dw	65535	; assembler added errata NOP
  9794  001DE0  EFF4  F00E         	goto	l3431
  9795  001DE4                     u3960:
  9796  001DE4  FFFF               	dw	65535	; assembler added errata NOP
  9797  001DE6  060F               	decf	___fladd@bexp^0,f,c
  9798  001DE8                     l3431:
  9799  001DE8  FFFF               	dw	65535	; assembler added errata NOP
  9800  001DEA  AE03               	btfss	(___fladd@b+2)^0,7,c
  9801  001DEC  EFFA  F00E         	goto	u3971
  9802  001DF0  EFFD  F00E         	goto	u3970
  9803  001DF4                     u3971:
  9804  001DF4  FFFF               	dw	65535	; assembler added errata NOP
  9805  001DF6  EFC7  F00E         	goto	l3415
  9806  001DFA                     u3970:
  9807  001DFA                     l3433:
  9808  001DFA  FFFF               	dw	65535	; assembler added errata NOP
  9809  001DFC  0E00               	movlw	0
  9810  001DFE  6E0E               	movwf	___fladd@aexp^0,c
  9811  001E00  AE10               	btfss	___fladd@grs^0,7,c
  9812  001E02  EF05  F00F         	goto	u3981
  9813  001E06  EF08  F00F         	goto	u3980
  9814  001E0A                     u3981:
  9815  001E0A  FFFF               	dw	65535	; assembler added errata NOP
  9816  001E0C  EF27  F00F         	goto	l681
  9817  001E10                     u3980:
  9818  001E10  FFFF               	dw	65535	; assembler added errata NOP
  9819  001E12  C010  F009         	movff	___fladd@grs,??___fladd
  9820  001E16  0E7F               	movlw	127
  9821  001E18  1609               	andwf	??___fladd^0,f,c
  9822  001E1A  B4D8               	btfsc	status,2,c
  9823  001E1C  EF12  F00F         	goto	u3991
  9824  001E20  EF15  F00F         	goto	u3990
  9825  001E24                     u3991:
  9826  001E24  FFFF               	dw	65535	; assembler added errata NOP
  9827  001E26  EF1B  F00F         	goto	l682
  9828  001E2A                     u3990:
  9829  001E2A  FFFF               	dw	65535	; assembler added errata NOP
  9830  001E2C                     l3439:
  9831  001E2C  FFFF               	dw	65535	; assembler added errata NOP
  9832  001E2E  0E01               	movlw	1
  9833  001E30  6E0E               	movwf	___fladd@aexp^0,c
  9834  001E32  EF27  F00F         	goto	l681
  9835  001E36                     l682:
  9836  001E36  FFFF               	dw	65535	; assembler added errata NOP
  9837  001E38  A001               	btfss	___fladd@b^0,0,c
  9838  001E3A  EF21  F00F         	goto	u4001
  9839  001E3E  EF24  F00F         	goto	u4000
  9840  001E42                     u4001:
  9841  001E42  FFFF               	dw	65535	; assembler added errata NOP
  9842  001E44  EF27  F00F         	goto	l681
  9843  001E48                     u4000:
  9844  001E48  FFFF               	dw	65535	; assembler added errata NOP
  9845  001E4A  EF16  F00F         	goto	l3439
  9846  001E4E                     l681:
  9847  001E4E  FFFF               	dw	65535	; assembler added errata NOP
  9848  001E50  500E               	movf	___fladd@aexp^0,w,c
  9849  001E52  B4D8               	btfsc	status,2,c
  9850  001E54  EF2E  F00F         	goto	u4011
  9851  001E58  EF31  F00F         	goto	u4010
  9852  001E5C                     u4011:
  9853  001E5C  FFFF               	dw	65535	; assembler added errata NOP
  9854  001E5E  EF61  F00F         	goto	l3451
  9855  001E62                     u4010:
  9856  001E62  FFFF               	dw	65535	; assembler added errata NOP
  9857  001E64  0E01               	movlw	1
  9858  001E66  2601               	addwf	___fladd@b^0,f,c
  9859  001E68  0E00               	movlw	0
  9860  001E6A  2202               	addwfc	(___fladd@b+1)^0,f,c
  9861  001E6C  2203               	addwfc	(___fladd@b+2)^0,f,c
  9862  001E6E  2204               	addwfc	(___fladd@b+3)^0,f,c
  9863  001E70  A004               	btfss	(___fladd@b+3)^0,0,c
  9864  001E72  EF3D  F00F         	goto	u4021
  9865  001E76  EF40  F00F         	goto	u4020
  9866  001E7A                     u4021:
  9867  001E7A  FFFF               	dw	65535	; assembler added errata NOP
  9868  001E7C  EF61  F00F         	goto	l3451
  9869  001E80                     u4020:
  9870  001E80  FFFF               	dw	65535	; assembler added errata NOP
  9871  001E82  C001  F009         	movff	___fladd@b,??___fladd
  9872  001E86  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  9873  001E8A  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  9874  001E8E  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  9875  001E92  340C               	rlcf	(??___fladd+3)^0,w,c
  9876  001E94  320C               	rrcf	(??___fladd+3)^0,f,c
  9877  001E96  320B               	rrcf	(??___fladd+2)^0,f,c
  9878  001E98  320A               	rrcf	(??___fladd+1)^0,f,c
  9879  001E9A  3209               	rrcf	??___fladd^0,f,c
  9880  001E9C  C009  F001         	movff	??___fladd,___fladd@b
  9881  001EA0  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  9882  001EA4  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  9883  001EA8  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  9884  001EAC  280F               	incf	___fladd@bexp^0,w,c
  9885  001EAE  B4D8               	btfsc	status,2,c
  9886  001EB0  EF5C  F00F         	goto	u4031
  9887  001EB4  EF5F  F00F         	goto	u4030
  9888  001EB8                     u4031:
  9889  001EB8  FFFF               	dw	65535	; assembler added errata NOP
  9890  001EBA  EF61  F00F         	goto	l3451
  9891  001EBE                     u4030:
  9892  001EBE  FFFF               	dw	65535	; assembler added errata NOP
  9893  001EC0  2A0F               	incf	___fladd@bexp^0,f,c
  9894  001EC2                     l3451:
  9895  001EC2  FFFF               	dw	65535	; assembler added errata NOP
  9896  001EC4  280F               	incf	___fladd@bexp^0,w,c
  9897  001EC6  B4D8               	btfsc	status,2,c
  9898  001EC8  EF68  F00F         	goto	u4041
  9899  001ECC  EF6B  F00F         	goto	u4040
  9900  001ED0                     u4041:
  9901  001ED0  FFFF               	dw	65535	; assembler added errata NOP
  9902  001ED2  EF75  F00F         	goto	l3455
  9903  001ED6                     u4040:
  9904  001ED6  FFFF               	dw	65535	; assembler added errata NOP
  9905  001ED8  500F               	movf	___fladd@bexp^0,w,c
  9906  001EDA  A4D8               	btfss	status,2,c
  9907  001EDC  EF72  F00F         	goto	u4051
  9908  001EE0  EF75  F00F         	goto	u4050
  9909  001EE4                     u4051:
  9910  001EE4  FFFF               	dw	65535	; assembler added errata NOP
  9911  001EE6  EF8A  F00F         	goto	l3459
  9912  001EEA                     u4050:
  9913  001EEA                     l3455:
  9914  001EEA  FFFF               	dw	65535	; assembler added errata NOP
  9915  001EEC  0E00               	movlw	0
  9916  001EEE  6E01               	movwf	___fladd@b^0,c
  9917  001EF0  0E00               	movlw	0
  9918  001EF2  6E02               	movwf	(___fladd@b+1)^0,c
  9919  001EF4  0E00               	movlw	0
  9920  001EF6  6E03               	movwf	(___fladd@b+2)^0,c
  9921  001EF8  0E00               	movlw	0
  9922  001EFA  6E04               	movwf	(___fladd@b+3)^0,c
  9923  001EFC  500F               	movf	___fladd@bexp^0,w,c
  9924  001EFE  A4D8               	btfss	status,2,c
  9925  001F00  EF84  F00F         	goto	u4061
  9926  001F04  EF87  F00F         	goto	u4060
  9927  001F08                     u4061:
  9928  001F08  FFFF               	dw	65535	; assembler added errata NOP
  9929  001F0A  EF8A  F00F         	goto	l3459
  9930  001F0E                     u4060:
  9931  001F0E  FFFF               	dw	65535	; assembler added errata NOP
  9932  001F10  0E00               	movlw	0
  9933  001F12  6E0D               	movwf	___fladd@signs^0,c
  9934  001F14                     l3459:
  9935  001F14  FFFF               	dw	65535	; assembler added errata NOP
  9936  001F16  A00F               	btfss	___fladd@bexp^0,0,c
  9937  001F18  EF90  F00F         	goto	u4071
  9938  001F1C  EF93  F00F         	goto	u4070
  9939  001F20                     u4071:
  9940  001F20  FFFF               	dw	65535	; assembler added errata NOP
  9941  001F22  EF97  F00F         	goto	l3463
  9942  001F26                     u4070:
  9943  001F26  FFFF               	dw	65535	; assembler added errata NOP
  9944  001F28  8E03               	bsf	(___fladd@b+2)^0,7,c
  9945  001F2A  EF99  F00F         	goto	l3465
  9946  001F2E                     l3463:
  9947  001F2E  FFFF               	dw	65535	; assembler added errata NOP
  9948  001F30  9E03               	bcf	(___fladd@b+2)^0,7,c
  9949  001F32                     l3465:
  9950  001F32  FFFF               	dw	65535	; assembler added errata NOP
  9951  001F34  90D8               	bcf	status,0,c
  9952  001F36  300F               	rrcf	___fladd@bexp^0,w,c
  9953  001F38  6E04               	movwf	(___fladd@b+3)^0,c
  9954  001F3A  AE0D               	btfss	___fladd@signs^0,7,c
  9955  001F3C  EFA2  F00F         	goto	u4081
  9956  001F40  EFA5  F00F         	goto	u4080
  9957  001F44                     u4081:
  9958  001F44  FFFF               	dw	65535	; assembler added errata NOP
  9959  001F46  EFA7  F00F         	goto	l3471
  9960  001F4A                     u4080:
  9961  001F4A  FFFF               	dw	65535	; assembler added errata NOP
  9962  001F4C  8E04               	bsf	(___fladd@b+3)^0,7,c
  9963  001F4E                     l3471:
  9964  001F4E  FFFF               	dw	65535	; assembler added errata NOP
  9965  001F50  C001  F001         	movff	___fladd@b,?___fladd
  9966  001F54  C002  F002         	movff	___fladd@b+1,?___fladd+1
  9967  001F58  C003  F003         	movff	___fladd@b+2,?___fladd+2
  9968  001F5C  C004  F004         	movff	___fladd@b+3,?___fladd+3
  9969  001F60                     l664:
  9970  001F60  FFFF               	dw	65535	; assembler added errata NOP
  9971  001F62  0012               	return		;funcret
  9972  001F64  FFFF               	dw	65535	; errata NOP
  9973  001F66                     __end_of___fladd:
  9974                           	callstack 0
  9975                           
  9976 ;; *************** function ___flneg *****************
  9977 ;; Defined at:
  9978 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
  9979 ;; Parameters:    Size  Location     Type
  9980 ;;  f1              4    0[COMRAM] unsigned char 
  9981 ;; Auto vars:     Size  Location     Type
  9982 ;;		None
  9983 ;; Return value:  Size  Location     Type
  9984 ;;                  4    0[COMRAM] unsigned char 
  9985 ;; Registers used:
  9986 ;;		wreg, status,2, status,0
  9987 ;; Tracked objects:
  9988 ;;		On entry : 0/0
  9989 ;;		On exit  : 0/0
  9990 ;;		Unchanged: 0/0
  9991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9992 ;;      Params:         4       0       0       0       0       0       0
  9993 ;;      Locals:         0       0       0       0       0       0       0
  9994 ;;      Temps:          0       0       0       0       0       0       0
  9995 ;;      Totals:         4       0       0       0       0       0       0
  9996 ;;Total ram usage:        4 bytes
  9997 ;; Hardware stack levels used:    1
  9998 ;; Hardware stack levels required when called:    1
  9999 ;; This function calls:
 10000 ;;		Nothing
 10001 ;; This function is called by:
 10002 ;;		_roundf
 10003 ;; This function uses a non-reentrant model
 10004 ;;
 10005                           
 10006                           	psect	text42
 10007  007D9E                     __ptext42:
 10008                           	callstack 0
 10009  007D9E                     ___flneg:
 10010                           	callstack 0
 10011  007D9E  FFFF               	dw	65535	; assembler added errata NOP
 10012  007DA0  5001               	movf	___flneg@f1^0,w,c
 10013  007DA2  1002               	iorwf	(___flneg@f1+1)^0,w,c
 10014  007DA4  1003               	iorwf	(___flneg@f1+2)^0,w,c
 10015  007DA6  1004               	iorwf	(___flneg@f1+3)^0,w,c
 10016  007DA8  B4D8               	btfsc	status,2,c
 10017  007DAA  EFD9  F03E         	goto	u4781
 10018  007DAE  EFDC  F03E         	goto	u4780
 10019  007DB2                     u4781:
 10020  007DB2  FFFF               	dw	65535	; assembler added errata NOP
 10021  007DB4  EFE5  F03E         	goto	l3969
 10022  007DB8                     u4780:
 10023  007DB8  FFFF               	dw	65535	; assembler added errata NOP
 10024  007DBA  0E00               	movlw	0
 10025  007DBC  1A01               	xorwf	___flneg@f1^0,f,c
 10026  007DBE  0E00               	movlw	0
 10027  007DC0  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 10028  007DC2  0E00               	movlw	0
 10029  007DC4  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 10030  007DC6  0E80               	movlw	128
 10031  007DC8  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 10032  007DCA                     l3969:
 10033  007DCA  FFFF               	dw	65535	; assembler added errata NOP
 10034  007DCC  C001  F001         	movff	___flneg@f1,?___flneg
 10035  007DD0  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 10036  007DD4  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 10037  007DD8  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 10038  007DDC  0012               	return		;funcret
 10039  007DDE  FFFF               	dw	65535	; errata NOP
 10040  007DE0                     __end_of___flneg:
 10041                           	callstack 0
 10042                           
 10043 ;; *************** function ___flmul *****************
 10044 ;; Defined at:
 10045 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 10046 ;; Parameters:    Size  Location     Type
 10047 ;;  b               4    0[COMRAM] unsigned char 
 10048 ;;  a               4    4[COMRAM] unsigned char 
 10049 ;; Auto vars:     Size  Location     Type
 10050 ;;  prod            4   19[COMRAM] struct .
 10051 ;;  grs             4   13[COMRAM] unsigned long 
 10052 ;;  temp            2   23[COMRAM] struct .
 10053 ;;  bexp            1   18[COMRAM] unsigned char 
 10054 ;;  aexp            1   17[COMRAM] unsigned char 
 10055 ;;  sign            1   12[COMRAM] unsigned char 
 10056 ;; Return value:  Size  Location     Type
 10057 ;;                  4    0[COMRAM] unsigned char 
 10058 ;; Registers used:
 10059 ;;		wreg, status,2, status,0, prodl, prodh
 10060 ;; Tracked objects:
 10061 ;;		On entry : 0/0
 10062 ;;		On exit  : 0/0
 10063 ;;		Unchanged: 0/0
 10064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10065 ;;      Params:         8       0       0       0       0       0       0
 10066 ;;      Locals:        13       0       0       0       0       0       0
 10067 ;;      Temps:          4       0       0       0       0       0       0
 10068 ;;      Totals:        25       0       0       0       0       0       0
 10069 ;;Total ram usage:       25 bytes
 10070 ;; Hardware stack levels used:    1
 10071 ;; Hardware stack levels required when called:    1
 10072 ;; This function calls:
 10073 ;;		Nothing
 10074 ;; This function is called by:
 10075 ;;		_roundf
 10076 ;; This function uses a non-reentrant model
 10077 ;;
 10078                           
 10079                           	psect	text43
 10080  001F66                     __ptext43:
 10081                           	callstack 0
 10082  001F66                     ___flmul:
 10083                           	callstack 0
 10084  001F66  FFFF               	dw	65535	; assembler added errata NOP
 10085  001F68  5004               	movf	(___flmul@b+3)^0,w,c
 10086  001F6A  0B80               	andlw	128
 10087  001F6C  6E0D               	movwf	___flmul@sign^0,c
 10088  001F6E  5004               	movf	(___flmul@b+3)^0,w,c
 10089  001F70  2404               	addwf	(___flmul@b+3)^0,w,c
 10090  001F72  6E13               	movwf	___flmul@bexp^0,c
 10091  001F74  AE03               	btfss	(___flmul@b+2)^0,7,c
 10092  001F76  EFBF  F00F         	goto	u4541
 10093  001F7A  EFC2  F00F         	goto	u4540
 10094  001F7E                     u4541:
 10095  001F7E  FFFF               	dw	65535	; assembler added errata NOP
 10096  001F80  EFC4  F00F         	goto	l3813
 10097  001F84                     u4540:
 10098  001F84  FFFF               	dw	65535	; assembler added errata NOP
 10099  001F86  8013               	bsf	___flmul@bexp^0,0,c
 10100  001F88                     l3813:
 10101  001F88  FFFF               	dw	65535	; assembler added errata NOP
 10102  001F8A  5013               	movf	___flmul@bexp^0,w,c
 10103  001F8C  B4D8               	btfsc	status,2,c
 10104  001F8E  EFCB  F00F         	goto	u4551
 10105  001F92  EFCE  F00F         	goto	u4550
 10106  001F96                     u4551:
 10107  001F96  FFFF               	dw	65535	; assembler added errata NOP
 10108  001F98  EFE5  F00F         	goto	l3821
 10109  001F9C                     u4550:
 10110  001F9C  FFFF               	dw	65535	; assembler added errata NOP
 10111  001F9E  2813               	incf	___flmul@bexp^0,w,c
 10112  001FA0  A4D8               	btfss	status,2,c
 10113  001FA2  EFD5  F00F         	goto	u4561
 10114  001FA6  EFD8  F00F         	goto	u4560
 10115  001FAA                     u4561:
 10116  001FAA  FFFF               	dw	65535	; assembler added errata NOP
 10117  001FAC  EFE1  F00F         	goto	l3819
 10118  001FB0                     u4560:
 10119  001FB0  FFFF               	dw	65535	; assembler added errata NOP
 10120  001FB2  0E00               	movlw	0
 10121  001FB4  6E01               	movwf	___flmul@b^0,c
 10122  001FB6  0E00               	movlw	0
 10123  001FB8  6E02               	movwf	(___flmul@b+1)^0,c
 10124  001FBA  0E00               	movlw	0
 10125  001FBC  6E03               	movwf	(___flmul@b+2)^0,c
 10126  001FBE  0E00               	movlw	0
 10127  001FC0  6E04               	movwf	(___flmul@b+3)^0,c
 10128  001FC2                     l3819:
 10129  001FC2  FFFF               	dw	65535	; assembler added errata NOP
 10130  001FC4  8E03               	bsf	(___flmul@b+2)^0,7,c
 10131  001FC6  EFEE  F00F         	goto	l3823
 10132  001FCA                     l3821:
 10133  001FCA  FFFF               	dw	65535	; assembler added errata NOP
 10134  001FCC  0E00               	movlw	0
 10135  001FCE  6E01               	movwf	___flmul@b^0,c
 10136  001FD0  0E00               	movlw	0
 10137  001FD2  6E02               	movwf	(___flmul@b+1)^0,c
 10138  001FD4  0E00               	movlw	0
 10139  001FD6  6E03               	movwf	(___flmul@b+2)^0,c
 10140  001FD8  0E00               	movlw	0
 10141  001FDA  6E04               	movwf	(___flmul@b+3)^0,c
 10142  001FDC                     l3823:
 10143  001FDC  FFFF               	dw	65535	; assembler added errata NOP
 10144  001FDE  5008               	movf	(___flmul@a+3)^0,w,c
 10145  001FE0  0B80               	andlw	128
 10146  001FE2  1A0D               	xorwf	___flmul@sign^0,f,c
 10147  001FE4  5008               	movf	(___flmul@a+3)^0,w,c
 10148  001FE6  2408               	addwf	(___flmul@a+3)^0,w,c
 10149  001FE8  6E12               	movwf	___flmul@aexp^0,c
 10150  001FEA  AE07               	btfss	(___flmul@a+2)^0,7,c
 10151  001FEC  EFFA  F00F         	goto	u4571
 10152  001FF0  EFFD  F00F         	goto	u4570
 10153  001FF4                     u4571:
 10154  001FF4  FFFF               	dw	65535	; assembler added errata NOP
 10155  001FF6  EFFF  F00F         	goto	l3831
 10156  001FFA                     u4570:
 10157  001FFA  FFFF               	dw	65535	; assembler added errata NOP
 10158  001FFC  8012               	bsf	___flmul@aexp^0,0,c
 10159  001FFE                     l3831:
 10160  001FFE  FFFF               	dw	65535	; assembler added errata NOP
 10161  002000  5012               	movf	___flmul@aexp^0,w,c
 10162  002002  B4D8               	btfsc	status,2,c
 10163  002004  EF06  F010         	goto	u4581
 10164  002008  EF09  F010         	goto	u4580
 10165  00200C                     u4581:
 10166  00200C  FFFF               	dw	65535	; assembler added errata NOP
 10167  00200E  EF20  F010         	goto	l3839
 10168  002012                     u4580:
 10169  002012  FFFF               	dw	65535	; assembler added errata NOP
 10170  002014  2812               	incf	___flmul@aexp^0,w,c
 10171  002016  A4D8               	btfss	status,2,c
 10172  002018  EF10  F010         	goto	u4591
 10173  00201C  EF13  F010         	goto	u4590
 10174  002020                     u4591:
 10175  002020  FFFF               	dw	65535	; assembler added errata NOP
 10176  002022  EF1C  F010         	goto	l3837
 10177  002026                     u4590:
 10178  002026  FFFF               	dw	65535	; assembler added errata NOP
 10179  002028  0E00               	movlw	0
 10180  00202A  6E05               	movwf	___flmul@a^0,c
 10181  00202C  0E00               	movlw	0
 10182  00202E  6E06               	movwf	(___flmul@a+1)^0,c
 10183  002030  0E00               	movlw	0
 10184  002032  6E07               	movwf	(___flmul@a+2)^0,c
 10185  002034  0E00               	movlw	0
 10186  002036  6E08               	movwf	(___flmul@a+3)^0,c
 10187  002038                     l3837:
 10188  002038  FFFF               	dw	65535	; assembler added errata NOP
 10189  00203A  8E07               	bsf	(___flmul@a+2)^0,7,c
 10190  00203C  EF29  F010         	goto	l741
 10191  002040                     l3839:
 10192  002040  FFFF               	dw	65535	; assembler added errata NOP
 10193  002042  0E00               	movlw	0
 10194  002044  6E05               	movwf	___flmul@a^0,c
 10195  002046  0E00               	movlw	0
 10196  002048  6E06               	movwf	(___flmul@a+1)^0,c
 10197  00204A  0E00               	movlw	0
 10198  00204C  6E07               	movwf	(___flmul@a+2)^0,c
 10199  00204E  0E00               	movlw	0
 10200  002050  6E08               	movwf	(___flmul@a+3)^0,c
 10201  002052                     l741:
 10202  002052  FFFF               	dw	65535	; assembler added errata NOP
 10203  002054  5012               	movf	___flmul@aexp^0,w,c
 10204  002056  B4D8               	btfsc	status,2,c
 10205  002058  EF30  F010         	goto	u4601
 10206  00205C  EF33  F010         	goto	u4600
 10207  002060                     u4601:
 10208  002060  FFFF               	dw	65535	; assembler added errata NOP
 10209  002062  EF3D  F010         	goto	l3843
 10210  002066                     u4600:
 10211  002066  FFFF               	dw	65535	; assembler added errata NOP
 10212  002068  5013               	movf	___flmul@bexp^0,w,c
 10213  00206A  A4D8               	btfss	status,2,c
 10214  00206C  EF3A  F010         	goto	u4611
 10215  002070  EF3D  F010         	goto	u4610
 10216  002074                     u4611:
 10217  002074  FFFF               	dw	65535	; assembler added errata NOP
 10218  002076  EF48  F010         	goto	l3847
 10219  00207A                     u4610:
 10220  00207A                     l3843:
 10221  00207A  FFFF               	dw	65535	; assembler added errata NOP
 10222  00207C  0E00               	movlw	0
 10223  00207E  6E01               	movwf	?___flmul^0,c
 10224  002080  0E00               	movlw	0
 10225  002082  6E02               	movwf	(?___flmul+1)^0,c
 10226  002084  0E00               	movlw	0
 10227  002086  6E03               	movwf	(?___flmul+2)^0,c
 10228  002088  0E00               	movlw	0
 10229  00208A  6E04               	movwf	(?___flmul+3)^0,c
 10230  00208C  EF02  F012         	goto	l745
 10231  002090                     l3847:
 10232  002090  FFFF               	dw	65535	; assembler added errata NOP
 10233  002092  5007               	movf	(___flmul@a+2)^0,w,c
 10234  002094  0201               	mulwf	___flmul@b^0,c
 10235  002096  CFF3 F018          	movff	prodl,___flmul@temp
 10236  00209A  CFF4 F019          	movff	prodh,___flmul@temp+1
 10237  00209E  5018               	movf	___flmul@temp^0,w,c
 10238  0020A0  6E0E               	movwf	___flmul@grs^0,c
 10239  0020A2  6A0F               	clrf	(___flmul@grs+1)^0,c
 10240  0020A4  6A10               	clrf	(___flmul@grs+2)^0,c
 10241  0020A6  6A11               	clrf	(___flmul@grs+3)^0,c
 10242  0020A8  5019               	movf	(___flmul@temp+1)^0,w,c
 10243  0020AA  6E14               	movwf	___flmul@prod^0,c
 10244  0020AC  6A15               	clrf	(___flmul@prod+1)^0,c
 10245  0020AE  6A16               	clrf	(___flmul@prod+2)^0,c
 10246  0020B0  6A17               	clrf	(___flmul@prod+3)^0,c
 10247  0020B2  5006               	movf	(___flmul@a+1)^0,w,c
 10248  0020B4  0202               	mulwf	(___flmul@b+1)^0,c
 10249  0020B6  CFF3 F018          	movff	prodl,___flmul@temp
 10250  0020BA  CFF4 F019          	movff	prodh,___flmul@temp+1
 10251  0020BE  5018               	movf	___flmul@temp^0,w,c
 10252  0020C0  260E               	addwf	___flmul@grs^0,f,c
 10253  0020C2  0E00               	movlw	0
 10254  0020C4  220F               	addwfc	(___flmul@grs+1)^0,f,c
 10255  0020C6  2210               	addwfc	(___flmul@grs+2)^0,f,c
 10256  0020C8  2211               	addwfc	(___flmul@grs+3)^0,f,c
 10257  0020CA  5019               	movf	(___flmul@temp+1)^0,w,c
 10258  0020CC  2614               	addwf	___flmul@prod^0,f,c
 10259  0020CE  0E00               	movlw	0
 10260  0020D0  2215               	addwfc	(___flmul@prod+1)^0,f,c
 10261  0020D2  2216               	addwfc	(___flmul@prod+2)^0,f,c
 10262  0020D4  2217               	addwfc	(___flmul@prod+3)^0,f,c
 10263  0020D6  5005               	movf	___flmul@a^0,w,c
 10264  0020D8  0203               	mulwf	(___flmul@b+2)^0,c
 10265  0020DA  CFF3 F018          	movff	prodl,___flmul@temp
 10266  0020DE  CFF4 F019          	movff	prodh,___flmul@temp+1
 10267  0020E2  5018               	movf	___flmul@temp^0,w,c
 10268  0020E4  260E               	addwf	___flmul@grs^0,f,c
 10269  0020E6  0E00               	movlw	0
 10270  0020E8  220F               	addwfc	(___flmul@grs+1)^0,f,c
 10271  0020EA  2210               	addwfc	(___flmul@grs+2)^0,f,c
 10272  0020EC  2211               	addwfc	(___flmul@grs+3)^0,f,c
 10273  0020EE  5019               	movf	(___flmul@temp+1)^0,w,c
 10274  0020F0  2614               	addwf	___flmul@prod^0,f,c
 10275  0020F2  0E00               	movlw	0
 10276  0020F4  2215               	addwfc	(___flmul@prod+1)^0,f,c
 10277  0020F6  2216               	addwfc	(___flmul@prod+2)^0,f,c
 10278  0020F8  2217               	addwfc	(___flmul@prod+3)^0,f,c
 10279  0020FA  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
 10280  0020FE  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
 10281  002102  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
 10282  002106  6A0E               	clrf	___flmul@grs^0,c
 10283  002108  5005               	movf	___flmul@a^0,w,c
 10284  00210A  0202               	mulwf	(___flmul@b+1)^0,c
 10285  00210C  CFF3 F018          	movff	prodl,___flmul@temp
 10286  002110  CFF4 F019          	movff	prodh,___flmul@temp+1
 10287  002114  5018               	movf	___flmul@temp^0,w,c
 10288  002116  260E               	addwf	___flmul@grs^0,f,c
 10289  002118  5019               	movf	(___flmul@temp+1)^0,w,c
 10290  00211A  220F               	addwfc	(___flmul@grs+1)^0,f,c
 10291  00211C  0E00               	movlw	0
 10292  00211E  2210               	addwfc	(___flmul@grs+2)^0,f,c
 10293  002120  0E00               	movlw	0
 10294  002122  2211               	addwfc	(___flmul@grs+3)^0,f,c
 10295  002124  5006               	movf	(___flmul@a+1)^0,w,c
 10296  002126  0201               	mulwf	___flmul@b^0,c
 10297  002128  CFF3 F018          	movff	prodl,___flmul@temp
 10298  00212C  CFF4 F019          	movff	prodh,___flmul@temp+1
 10299  002130  5018               	movf	___flmul@temp^0,w,c
 10300  002132  260E               	addwf	___flmul@grs^0,f,c
 10301  002134  5019               	movf	(___flmul@temp+1)^0,w,c
 10302  002136  220F               	addwfc	(___flmul@grs+1)^0,f,c
 10303  002138  0E00               	movlw	0
 10304  00213A  2210               	addwfc	(___flmul@grs+2)^0,f,c
 10305  00213C  0E00               	movlw	0
 10306  00213E  2211               	addwfc	(___flmul@grs+3)^0,f,c
 10307  002140  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
 10308  002144  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
 10309  002148  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
 10310  00214C  6A0E               	clrf	___flmul@grs^0,c
 10311  00214E  5005               	movf	___flmul@a^0,w,c
 10312  002150  0201               	mulwf	___flmul@b^0,c
 10313  002152  CFF3 F018          	movff	prodl,___flmul@temp
 10314  002156  CFF4 F019          	movff	prodh,___flmul@temp+1
 10315  00215A  5018               	movf	___flmul@temp^0,w,c
 10316  00215C  260E               	addwf	___flmul@grs^0,f,c
 10317  00215E  5019               	movf	(___flmul@temp+1)^0,w,c
 10318  002160  220F               	addwfc	(___flmul@grs+1)^0,f,c
 10319  002162  0E00               	movlw	0
 10320  002164  2210               	addwfc	(___flmul@grs+2)^0,f,c
 10321  002166  0E00               	movlw	0
 10322  002168  2211               	addwfc	(___flmul@grs+3)^0,f,c
 10323  00216A  5007               	movf	(___flmul@a+2)^0,w,c
 10324  00216C  0202               	mulwf	(___flmul@b+1)^0,c
 10325  00216E  CFF3 F018          	movff	prodl,___flmul@temp
 10326  002172  CFF4 F019          	movff	prodh,___flmul@temp+1
 10327  002176  5018               	movf	___flmul@temp^0,w,c
 10328  002178  2614               	addwf	___flmul@prod^0,f,c
 10329  00217A  5019               	movf	(___flmul@temp+1)^0,w,c
 10330  00217C  2215               	addwfc	(___flmul@prod+1)^0,f,c
 10331  00217E  0E00               	movlw	0
 10332  002180  2216               	addwfc	(___flmul@prod+2)^0,f,c
 10333  002182  0E00               	movlw	0
 10334  002184  2217               	addwfc	(___flmul@prod+3)^0,f,c
 10335  002186  5006               	movf	(___flmul@a+1)^0,w,c
 10336  002188  0203               	mulwf	(___flmul@b+2)^0,c
 10337  00218A  CFF3 F018          	movff	prodl,___flmul@temp
 10338  00218E  CFF4 F019          	movff	prodh,___flmul@temp+1
 10339  002192  5018               	movf	___flmul@temp^0,w,c
 10340  002194  2614               	addwf	___flmul@prod^0,f,c
 10341  002196  5019               	movf	(___flmul@temp+1)^0,w,c
 10342  002198  2215               	addwfc	(___flmul@prod+1)^0,f,c
 10343  00219A  0E00               	movlw	0
 10344  00219C  2216               	addwfc	(___flmul@prod+2)^0,f,c
 10345  00219E  0E00               	movlw	0
 10346  0021A0  2217               	addwfc	(___flmul@prod+3)^0,f,c
 10347  0021A2  5007               	movf	(___flmul@a+2)^0,w,c
 10348  0021A4  0203               	mulwf	(___flmul@b+2)^0,c
 10349  0021A6  CFF3 F018          	movff	prodl,___flmul@temp
 10350  0021AA  CFF4 F019          	movff	prodh,___flmul@temp+1
 10351  0021AE  5018               	movf	___flmul@temp^0,w,c
 10352  0021B0  6E09               	movwf	??___flmul^0,c
 10353  0021B2  5019               	movf	(___flmul@temp+1)^0,w,c
 10354  0021B4  6E0A               	movwf	(??___flmul+1)^0,c
 10355  0021B6  6A0B               	clrf	(??___flmul+2)^0,c
 10356  0021B8  6A0C               	clrf	(??___flmul+3)^0,c
 10357  0021BA  C00B  F00C         	movff	??___flmul+2,??___flmul+3
 10358  0021BE  C00A  F00B         	movff	??___flmul+1,??___flmul+2
 10359  0021C2  C009  F00A         	movff	??___flmul,??___flmul+1
 10360  0021C6  6A09               	clrf	??___flmul^0,c
 10361  0021C8  5009               	movf	??___flmul^0,w,c
 10362  0021CA  2614               	addwf	___flmul@prod^0,f,c
 10363  0021CC  500A               	movf	(??___flmul+1)^0,w,c
 10364  0021CE  2215               	addwfc	(___flmul@prod+1)^0,f,c
 10365  0021D0  500B               	movf	(??___flmul+2)^0,w,c
 10366  0021D2  2216               	addwfc	(___flmul@prod+2)^0,f,c
 10367  0021D4  500C               	movf	(??___flmul+3)^0,w,c
 10368  0021D6  2217               	addwfc	(___flmul@prod+3)^0,f,c
 10369  0021D8  C00E  F009         	movff	___flmul@grs,??___flmul
 10370  0021DC  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
 10371  0021E0  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
 10372  0021E4  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
 10373  0021E8  0E19               	movlw	25
 10374  0021EA  EFFD  F010         	goto	u4620
 10375  0021EE                     u4625:
 10376  0021EE  FFFF               	dw	65535	; assembler added errata NOP
 10377  0021F0  90D8               	bcf	status,0,c
 10378  0021F2  320C               	rrcf	(??___flmul+3)^0,f,c
 10379  0021F4  320B               	rrcf	(??___flmul+2)^0,f,c
 10380  0021F6  320A               	rrcf	(??___flmul+1)^0,f,c
 10381  0021F8  3209               	rrcf	??___flmul^0,f,c
 10382  0021FA                     u4620:
 10383  0021FA  FFFF               	dw	65535	; assembler added errata NOP
 10384  0021FC  2EE8               	decfsz	wreg,f,c
 10385  0021FE  EFF7  F010         	goto	u4625
 10386  002202  5009               	movf	??___flmul^0,w,c
 10387  002204  2614               	addwf	___flmul@prod^0,f,c
 10388  002206  500A               	movf	(??___flmul+1)^0,w,c
 10389  002208  2215               	addwfc	(___flmul@prod+1)^0,f,c
 10390  00220A  500B               	movf	(??___flmul+2)^0,w,c
 10391  00220C  2216               	addwfc	(___flmul@prod+2)^0,f,c
 10392  00220E  500C               	movf	(??___flmul+3)^0,w,c
 10393  002210  2217               	addwfc	(___flmul@prod+3)^0,f,c
 10394  002212  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
 10395  002216  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
 10396  00221A  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
 10397  00221E  6A0E               	clrf	___flmul@grs^0,c
 10398  002220  5012               	movf	___flmul@aexp^0,w,c
 10399  002222  C013  F009         	movff	___flmul@bexp,??___flmul
 10400  002226  6A0A               	clrf	(??___flmul+1)^0,c
 10401  002228  2609               	addwf	??___flmul^0,f,c
 10402  00222A  0E00               	movlw	0
 10403  00222C  220A               	addwfc	(??___flmul+1)^0,f,c
 10404  00222E  0E82               	movlw	130
 10405  002230  2409               	addwf	??___flmul^0,w,c
 10406  002232  6E18               	movwf	___flmul@temp^0,c
 10407  002234  0EFF               	movlw	255
 10408  002236  200A               	addwfc	(??___flmul+1)^0,w,c
 10409  002238  6E19               	movwf	(___flmul@temp+1)^0,c
 10410  00223A  EF38  F011         	goto	l3895
 10411  00223E                     l3889:
 10412  00223E  FFFF               	dw	65535	; assembler added errata NOP
 10413  002240  90D8               	bcf	status,0,c
 10414  002242  3614               	rlcf	___flmul@prod^0,f,c
 10415  002244  3615               	rlcf	(___flmul@prod+1)^0,f,c
 10416  002246  3616               	rlcf	(___flmul@prod+2)^0,f,c
 10417  002248  3617               	rlcf	(___flmul@prod+3)^0,f,c
 10418  00224A  AE11               	btfss	(___flmul@grs+3)^0,7,c
 10419  00224C  EF2A  F011         	goto	u4631
 10420  002250  EF2D  F011         	goto	u4630
 10421  002254                     u4631:
 10422  002254  FFFF               	dw	65535	; assembler added errata NOP
 10423  002256  EF2F  F011         	goto	l748
 10424  00225A                     u4630:
 10425  00225A  FFFF               	dw	65535	; assembler added errata NOP
 10426  00225C  8014               	bsf	___flmul@prod^0,0,c
 10427  00225E                     l748:
 10428  00225E  FFFF               	dw	65535	; assembler added errata NOP
 10429  002260  90D8               	bcf	status,0,c
 10430  002262  360E               	rlcf	___flmul@grs^0,f,c
 10431  002264  360F               	rlcf	(___flmul@grs+1)^0,f,c
 10432  002266  3610               	rlcf	(___flmul@grs+2)^0,f,c
 10433  002268  3611               	rlcf	(___flmul@grs+3)^0,f,c
 10434  00226A  0618               	decf	___flmul@temp^0,f,c
 10435  00226C  A0D8               	btfss	status,0,c
 10436  00226E  0619               	decf	(___flmul@temp+1)^0,f,c
 10437  002270                     l3895:
 10438  002270  FFFF               	dw	65535	; assembler added errata NOP
 10439  002272  AE16               	btfss	(___flmul@prod+2)^0,7,c
 10440  002274  EF3E  F011         	goto	u4641
 10441  002278  EF41  F011         	goto	u4640
 10442  00227C                     u4641:
 10443  00227C  FFFF               	dw	65535	; assembler added errata NOP
 10444  00227E  EF1F  F011         	goto	l3889
 10445  002282                     u4640:
 10446  002282  FFFF               	dw	65535	; assembler added errata NOP
 10447  002284  0E00               	movlw	0
 10448  002286  6E12               	movwf	___flmul@aexp^0,c
 10449  002288  AE11               	btfss	(___flmul@grs+3)^0,7,c
 10450  00228A  EF49  F011         	goto	u4651
 10451  00228E  EF4C  F011         	goto	u4650
 10452  002292                     u4651:
 10453  002292  FFFF               	dw	65535	; assembler added errata NOP
 10454  002294  EF77  F011         	goto	l750
 10455  002298                     u4650:
 10456  002298  FFFF               	dw	65535	; assembler added errata NOP
 10457  00229A  0EFF               	movlw	255
 10458  00229C  140E               	andwf	___flmul@grs^0,w,c
 10459  00229E  6E09               	movwf	??___flmul^0,c
 10460  0022A0  0EFF               	movlw	255
 10461  0022A2  140F               	andwf	(___flmul@grs+1)^0,w,c
 10462  0022A4  6E0A               	movwf	(??___flmul+1)^0,c
 10463  0022A6  0EFF               	movlw	255
 10464  0022A8  1410               	andwf	(___flmul@grs+2)^0,w,c
 10465  0022AA  6E0B               	movwf	(??___flmul+2)^0,c
 10466  0022AC  0E7F               	movlw	127
 10467  0022AE  1411               	andwf	(___flmul@grs+3)^0,w,c
 10468  0022B0  6E0C               	movwf	(??___flmul+3)^0,c
 10469  0022B2  5009               	movf	??___flmul^0,w,c
 10470  0022B4  100A               	iorwf	(??___flmul+1)^0,w,c
 10471  0022B6  100B               	iorwf	(??___flmul+2)^0,w,c
 10472  0022B8  100C               	iorwf	(??___flmul+3)^0,w,c
 10473  0022BA  B4D8               	btfsc	status,2,c
 10474  0022BC  EF62  F011         	goto	u4661
 10475  0022C0  EF65  F011         	goto	u4660
 10476  0022C4                     u4661:
 10477  0022C4  FFFF               	dw	65535	; assembler added errata NOP
 10478  0022C6  EF6B  F011         	goto	l751
 10479  0022CA                     u4660:
 10480  0022CA  FFFF               	dw	65535	; assembler added errata NOP
 10481  0022CC                     l3903:
 10482  0022CC  FFFF               	dw	65535	; assembler added errata NOP
 10483  0022CE  0E01               	movlw	1
 10484  0022D0  6E12               	movwf	___flmul@aexp^0,c
 10485  0022D2  EF77  F011         	goto	l750
 10486  0022D6                     l751:
 10487  0022D6  FFFF               	dw	65535	; assembler added errata NOP
 10488  0022D8  A014               	btfss	___flmul@prod^0,0,c
 10489  0022DA  EF71  F011         	goto	u4671
 10490  0022DE  EF74  F011         	goto	u4670
 10491  0022E2                     u4671:
 10492  0022E2  FFFF               	dw	65535	; assembler added errata NOP
 10493  0022E4  EF77  F011         	goto	l750
 10494  0022E8                     u4670:
 10495  0022E8  FFFF               	dw	65535	; assembler added errata NOP
 10496  0022EA  EF66  F011         	goto	l3903
 10497  0022EE                     l750:
 10498  0022EE  FFFF               	dw	65535	; assembler added errata NOP
 10499  0022F0  5012               	movf	___flmul@aexp^0,w,c
 10500  0022F2  B4D8               	btfsc	status,2,c
 10501  0022F4  EF7E  F011         	goto	u4681
 10502  0022F8  EF81  F011         	goto	u4680
 10503  0022FC                     u4681:
 10504  0022FC  FFFF               	dw	65535	; assembler added errata NOP
 10505  0022FE  EFA8  F011         	goto	l3915
 10506  002302                     u4680:
 10507  002302  FFFF               	dw	65535	; assembler added errata NOP
 10508  002304  0E01               	movlw	1
 10509  002306  2614               	addwf	___flmul@prod^0,f,c
 10510  002308  0E00               	movlw	0
 10511  00230A  2215               	addwfc	(___flmul@prod+1)^0,f,c
 10512  00230C  2216               	addwfc	(___flmul@prod+2)^0,f,c
 10513  00230E  2217               	addwfc	(___flmul@prod+3)^0,f,c
 10514  002310  A017               	btfss	(___flmul@prod+3)^0,0,c
 10515  002312  EF8D  F011         	goto	u4691
 10516  002316  EF90  F011         	goto	u4690
 10517  00231A                     u4691:
 10518  00231A  FFFF               	dw	65535	; assembler added errata NOP
 10519  00231C  EFA8  F011         	goto	l3915
 10520  002320                     u4690:
 10521  002320  FFFF               	dw	65535	; assembler added errata NOP
 10522  002322  C014  F009         	movff	___flmul@prod,??___flmul
 10523  002326  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
 10524  00232A  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
 10525  00232E  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
 10526  002332  340C               	rlcf	(??___flmul+3)^0,w,c
 10527  002334  320C               	rrcf	(??___flmul+3)^0,f,c
 10528  002336  320B               	rrcf	(??___flmul+2)^0,f,c
 10529  002338  320A               	rrcf	(??___flmul+1)^0,f,c
 10530  00233A  3209               	rrcf	??___flmul^0,f,c
 10531  00233C  C009  F014         	movff	??___flmul,___flmul@prod
 10532  002340  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
 10533  002344  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
 10534  002348  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
 10535  00234C  4A18               	infsnz	___flmul@temp^0,f,c
 10536  00234E  2A19               	incf	(___flmul@temp+1)^0,f,c
 10537  002350                     l3915:
 10538  002350  FFFF               	dw	65535	; assembler added errata NOP
 10539  002352  BE19               	btfsc	(___flmul@temp+1)^0,7,c
 10540  002354  EFB4  F011         	goto	u4701
 10541  002358  5019               	movf	(___flmul@temp+1)^0,w,c
 10542  00235A  E109               	bnz	u4700
 10543  00235C  2818               	incf	___flmul@temp^0,w,c
 10544  00235E  A0D8               	btfss	status,0,c
 10545  002360  EFB4  F011         	goto	u4701
 10546  002364  EFB7  F011         	goto	u4700
 10547  002368                     u4701:
 10548  002368  FFFF               	dw	65535	; assembler added errata NOP
 10549  00236A  EFC2  F011         	goto	l3919
 10550  00236E                     u4700:
 10551  00236E  FFFF               	dw	65535	; assembler added errata NOP
 10552  002370  0E00               	movlw	0
 10553  002372  6E14               	movwf	___flmul@prod^0,c
 10554  002374  0E00               	movlw	0
 10555  002376  6E15               	movwf	(___flmul@prod+1)^0,c
 10556  002378  0E80               	movlw	128
 10557  00237A  6E16               	movwf	(___flmul@prod+2)^0,c
 10558  00237C  0E7F               	movlw	127
 10559  00237E  6E17               	movwf	(___flmul@prod+3)^0,c
 10560  002380  EFF7  F011         	goto	l3931
 10561  002384                     l3919:
 10562  002384  FFFF               	dw	65535	; assembler added errata NOP
 10563  002386  BE19               	btfsc	(___flmul@temp+1)^0,7,c
 10564  002388  EFD1  F011         	goto	u4710
 10565  00238C  5019               	movf	(___flmul@temp+1)^0,w,c
 10566  00238E  E106               	bnz	u4711
 10567  002390  0418               	decf	___flmul@temp^0,w,c
 10568  002392  B0D8               	btfsc	status,0,c
 10569  002394  EFCE  F011         	goto	u4711
 10570  002398  EFD1  F011         	goto	u4710
 10571  00239C                     u4711:
 10572  00239C  FFFF               	dw	65535	; assembler added errata NOP
 10573  00239E  EFDE  F011         	goto	l758
 10574  0023A2                     u4710:
 10575  0023A2  FFFF               	dw	65535	; assembler added errata NOP
 10576  0023A4  0E00               	movlw	0
 10577  0023A6  6E14               	movwf	___flmul@prod^0,c
 10578  0023A8  0E00               	movlw	0
 10579  0023AA  6E15               	movwf	(___flmul@prod+1)^0,c
 10580  0023AC  0E00               	movlw	0
 10581  0023AE  6E16               	movwf	(___flmul@prod+2)^0,c
 10582  0023B0  0E00               	movlw	0
 10583  0023B2  6E17               	movwf	(___flmul@prod+3)^0,c
 10584  0023B4  0E00               	movlw	0
 10585  0023B6  6E0D               	movwf	___flmul@sign^0,c
 10586  0023B8  EFF7  F011         	goto	l3931
 10587  0023BC                     l758:
 10588  0023BC  FFFF               	dw	65535	; assembler added errata NOP
 10589  0023BE  C018  F013         	movff	___flmul@temp,___flmul@bexp
 10590  0023C2  0EFF               	movlw	255
 10591  0023C4  1614               	andwf	___flmul@prod^0,f,c
 10592  0023C6  0EFF               	movlw	255
 10593  0023C8  1615               	andwf	(___flmul@prod+1)^0,f,c
 10594  0023CA  0E7F               	movlw	127
 10595  0023CC  1616               	andwf	(___flmul@prod+2)^0,f,c
 10596  0023CE  0E00               	movlw	0
 10597  0023D0  1617               	andwf	(___flmul@prod+3)^0,f,c
 10598  0023D2  A013               	btfss	___flmul@bexp^0,0,c
 10599  0023D4  EFEE  F011         	goto	u4721
 10600  0023D8  EFF1  F011         	goto	u4720
 10601  0023DC                     u4721:
 10602  0023DC  FFFF               	dw	65535	; assembler added errata NOP
 10603  0023DE  EFF3  F011         	goto	l3929
 10604  0023E2                     u4720:
 10605  0023E2  FFFF               	dw	65535	; assembler added errata NOP
 10606  0023E4  8E16               	bsf	(___flmul@prod+2)^0,7,c
 10607  0023E6                     l3929:
 10608  0023E6  FFFF               	dw	65535	; assembler added errata NOP
 10609  0023E8  90D8               	bcf	status,0,c
 10610  0023EA  3013               	rrcf	___flmul@bexp^0,w,c
 10611  0023EC  6E17               	movwf	(___flmul@prod+3)^0,c
 10612  0023EE                     l3931:
 10613  0023EE  FFFF               	dw	65535	; assembler added errata NOP
 10614  0023F0  500D               	movf	___flmul@sign^0,w,c
 10615  0023F2  1217               	iorwf	(___flmul@prod+3)^0,f,c
 10616  0023F4  C014  F001         	movff	___flmul@prod,?___flmul
 10617  0023F8  C015  F002         	movff	___flmul@prod+1,?___flmul+1
 10618  0023FC  C016  F003         	movff	___flmul@prod+2,?___flmul+2
 10619  002400  C017  F004         	movff	___flmul@prod+3,?___flmul+3
 10620  002404                     l745:
 10621  002404  FFFF               	dw	65535	; assembler added errata NOP
 10622  002406  0012               	return		;funcret
 10623  002408  FFFF               	dw	65535	; errata NOP
 10624  00240A                     __end_of___flmul:
 10625                           	callstack 0
 10626                           
 10627 ;; *************** function ___flge *****************
 10628 ;; Defined at:
 10629 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 10630 ;; Parameters:    Size  Location     Type
 10631 ;;  ff1             4    0[COMRAM] unsigned char 
 10632 ;;  ff2             4    4[COMRAM] unsigned char 
 10633 ;; Auto vars:     Size  Location     Type
 10634 ;;		None
 10635 ;; Return value:  Size  Location     Type
 10636 ;;		None               void
 10637 ;; Registers used:
 10638 ;;		wreg, status,2, status,0
 10639 ;; Tracked objects:
 10640 ;;		On entry : 0/0
 10641 ;;		On exit  : 0/0
 10642 ;;		Unchanged: 0/0
 10643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10644 ;;      Params:         8       0       0       0       0       0       0
 10645 ;;      Locals:         0       0       0       0       0       0       0
 10646 ;;      Temps:          4       0       0       0       0       0       0
 10647 ;;      Totals:        12       0       0       0       0       0       0
 10648 ;;Total ram usage:       12 bytes
 10649 ;; Hardware stack levels used:    1
 10650 ;; Hardware stack levels required when called:    1
 10651 ;; This function calls:
 10652 ;;		Nothing
 10653 ;; This function is called by:
 10654 ;;		_roundf
 10655 ;; This function uses a non-reentrant model
 10656 ;;
 10657                           
 10658                           	psect	text44
 10659  003BD2                     __ptext44:
 10660                           	callstack 0
 10661  003BD2                     ___flge:
 10662                           	callstack 0
 10663  003BD2  FFFF               	dw	65535	; assembler added errata NOP
 10664  003BD4  0E00               	movlw	0
 10665  003BD6  1401               	andwf	___flge@ff1^0,w,c
 10666  003BD8  6E09               	movwf	??___flge^0,c
 10667  003BDA  0E00               	movlw	0
 10668  003BDC  1402               	andwf	(___flge@ff1+1)^0,w,c
 10669  003BDE  6E0A               	movwf	(??___flge+1)^0,c
 10670  003BE0  0E80               	movlw	128
 10671  003BE2  1403               	andwf	(___flge@ff1+2)^0,w,c
 10672  003BE4  6E0B               	movwf	(??___flge+2)^0,c
 10673  003BE6  0E7F               	movlw	127
 10674  003BE8  1404               	andwf	(___flge@ff1+3)^0,w,c
 10675  003BEA  6E0C               	movwf	(??___flge+3)^0,c
 10676  003BEC  5009               	movf	??___flge^0,w,c
 10677  003BEE  100A               	iorwf	(??___flge+1)^0,w,c
 10678  003BF0  100B               	iorwf	(??___flge+2)^0,w,c
 10679  003BF2  100C               	iorwf	(??___flge+3)^0,w,c
 10680  003BF4  A4D8               	btfss	status,2,c
 10681  003BF6  EFFF  F01D         	goto	u4731
 10682  003BFA  EF02  F01E         	goto	u4730
 10683  003BFE                     u4731:
 10684  003BFE  FFFF               	dw	65535	; assembler added errata NOP
 10685  003C00  EF0B  F01E         	goto	l3947
 10686  003C04                     u4730:
 10687  003C04  FFFF               	dw	65535	; assembler added errata NOP
 10688  003C06  0E00               	movlw	0
 10689  003C08  6E01               	movwf	___flge@ff1^0,c
 10690  003C0A  0E00               	movlw	0
 10691  003C0C  6E02               	movwf	(___flge@ff1+1)^0,c
 10692  003C0E  0E00               	movlw	0
 10693  003C10  6E03               	movwf	(___flge@ff1+2)^0,c
 10694  003C12  0E00               	movlw	0
 10695  003C14  6E04               	movwf	(___flge@ff1+3)^0,c
 10696  003C16                     l3947:
 10697  003C16  FFFF               	dw	65535	; assembler added errata NOP
 10698  003C18  0E00               	movlw	0
 10699  003C1A  1405               	andwf	___flge@ff2^0,w,c
 10700  003C1C  6E09               	movwf	??___flge^0,c
 10701  003C1E  0E00               	movlw	0
 10702  003C20  1406               	andwf	(___flge@ff2+1)^0,w,c
 10703  003C22  6E0A               	movwf	(??___flge+1)^0,c
 10704  003C24  0E80               	movlw	128
 10705  003C26  1407               	andwf	(___flge@ff2+2)^0,w,c
 10706  003C28  6E0B               	movwf	(??___flge+2)^0,c
 10707  003C2A  0E7F               	movlw	127
 10708  003C2C  1408               	andwf	(___flge@ff2+3)^0,w,c
 10709  003C2E  6E0C               	movwf	(??___flge+3)^0,c
 10710  003C30  5009               	movf	??___flge^0,w,c
 10711  003C32  100A               	iorwf	(??___flge+1)^0,w,c
 10712  003C34  100B               	iorwf	(??___flge+2)^0,w,c
 10713  003C36  100C               	iorwf	(??___flge+3)^0,w,c
 10714  003C38  A4D8               	btfss	status,2,c
 10715  003C3A  EF21  F01E         	goto	u4741
 10716  003C3E  EF24  F01E         	goto	u4740
 10717  003C42                     u4741:
 10718  003C42  FFFF               	dw	65535	; assembler added errata NOP
 10719  003C44  EF2D  F01E         	goto	l3951
 10720  003C48                     u4740:
 10721  003C48  FFFF               	dw	65535	; assembler added errata NOP
 10722  003C4A  0E00               	movlw	0
 10723  003C4C  6E05               	movwf	___flge@ff2^0,c
 10724  003C4E  0E00               	movlw	0
 10725  003C50  6E06               	movwf	(___flge@ff2+1)^0,c
 10726  003C52  0E00               	movlw	0
 10727  003C54  6E07               	movwf	(___flge@ff2+2)^0,c
 10728  003C56  0E00               	movlw	0
 10729  003C58  6E08               	movwf	(___flge@ff2+3)^0,c
 10730  003C5A                     l3951:
 10731  003C5A  FFFF               	dw	65535	; assembler added errata NOP
 10732  003C5C  AE04               	btfss	(___flge@ff1+3)^0,7,c
 10733  003C5E  EF33  F01E         	goto	u4751
 10734  003C62  EF36  F01E         	goto	u4750
 10735  003C66                     u4751:
 10736  003C66  FFFF               	dw	65535	; assembler added errata NOP
 10737  003C68  EF40  F01E         	goto	l3955
 10738  003C6C                     u4750:
 10739  003C6C  FFFF               	dw	65535	; assembler added errata NOP
 10740  003C6E  6C01               	negf	___flge@ff1^0,c
 10741  003C70  1E02               	comf	(___flge@ff1+1)^0,f,c
 10742  003C72  B0D8               	btfsc	status,0,c
 10743  003C74  2A02               	incf	(___flge@ff1+1)^0,f,c
 10744  003C76  1E03               	comf	(___flge@ff1+2)^0,f,c
 10745  003C78  B0D8               	btfsc	status,0,c
 10746  003C7A  2A03               	incf	(___flge@ff1+2)^0,f,c
 10747  003C7C  0E80               	movlw	128
 10748  003C7E  5604               	subfwb	(___flge@ff1+3)^0,f,c
 10749  003C80                     l3955:
 10750  003C80  FFFF               	dw	65535	; assembler added errata NOP
 10751  003C82  AE08               	btfss	(___flge@ff2+3)^0,7,c
 10752  003C84  EF46  F01E         	goto	u4761
 10753  003C88  EF49  F01E         	goto	u4760
 10754  003C8C                     u4761:
 10755  003C8C  FFFF               	dw	65535	; assembler added errata NOP
 10756  003C8E  EF53  F01E         	goto	l392
 10757  003C92                     u4760:
 10758  003C92  FFFF               	dw	65535	; assembler added errata NOP
 10759  003C94  6C05               	negf	___flge@ff2^0,c
 10760  003C96  1E06               	comf	(___flge@ff2+1)^0,f,c
 10761  003C98  B0D8               	btfsc	status,0,c
 10762  003C9A  2A06               	incf	(___flge@ff2+1)^0,f,c
 10763  003C9C  1E07               	comf	(___flge@ff2+2)^0,f,c
 10764  003C9E  B0D8               	btfsc	status,0,c
 10765  003CA0  2A07               	incf	(___flge@ff2+2)^0,f,c
 10766  003CA2  0E80               	movlw	128
 10767  003CA4  5608               	subfwb	(___flge@ff2+3)^0,f,c
 10768  003CA6                     l392:
 10769  003CA6  FFFF               	dw	65535	; assembler added errata NOP
 10770  003CA8  0E00               	movlw	0
 10771  003CAA  1A01               	xorwf	___flge@ff1^0,f,c
 10772  003CAC  0E00               	movlw	0
 10773  003CAE  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 10774  003CB0  0E00               	movlw	0
 10775  003CB2  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 10776  003CB4  0E80               	movlw	128
 10777  003CB6  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 10778  003CB8  0E00               	movlw	0
 10779  003CBA  1A05               	xorwf	___flge@ff2^0,f,c
 10780  003CBC  0E00               	movlw	0
 10781  003CBE  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 10782  003CC0  0E00               	movlw	0
 10783  003CC2  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 10784  003CC4  0E80               	movlw	128
 10785  003CC6  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 10786  003CC8  5005               	movf	___flge@ff2^0,w,c
 10787  003CCA  5C01               	subwf	___flge@ff1^0,w,c
 10788  003CCC  5006               	movf	(___flge@ff2+1)^0,w,c
 10789  003CCE  5802               	subwfb	(___flge@ff1+1)^0,w,c
 10790  003CD0  5007               	movf	(___flge@ff2+2)^0,w,c
 10791  003CD2  5803               	subwfb	(___flge@ff1+2)^0,w,c
 10792  003CD4  5008               	movf	(___flge@ff2+3)^0,w,c
 10793  003CD6  5804               	subwfb	(___flge@ff1+3)^0,w,c
 10794  003CD8  B0D8               	btfsc	status,0,c
 10795  003CDA  EF71  F01E         	goto	u4771
 10796  003CDE  EF74  F01E         	goto	u4770
 10797  003CE2                     u4771:
 10798  003CE2  FFFF               	dw	65535	; assembler added errata NOP
 10799  003CE4  EF78  F01E         	goto	l3961
 10800  003CE8                     u4770:
 10801  003CE8  FFFF               	dw	65535	; assembler added errata NOP
 10802  003CEA  90D8               	bcf	status,0,c
 10803  003CEC  EF7A  F01E         	goto	l397
 10804  003CF0                     l3961:
 10805  003CF0  FFFF               	dw	65535	; assembler added errata NOP
 10806  003CF2  80D8               	bsf	status,0,c
 10807  003CF4                     l397:
 10808  003CF4  FFFF               	dw	65535	; assembler added errata NOP
 10809  003CF6  0012               	return		;funcret
 10810  003CF8  FFFF               	dw	65535	; errata NOP
 10811  003CFA                     __end_of___flge:
 10812                           	callstack 0
 10813                           
 10814 ;; *************** function ___fltol *****************
 10815 ;; Defined at:
 10816 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
 10817 ;; Parameters:    Size  Location     Type
 10818 ;;  f1              4   51[COMRAM] unsigned char 
 10819 ;; Auto vars:     Size  Location     Type
 10820 ;;  exp1            1   60[COMRAM] unsigned char 
 10821 ;;  sign1           1   59[COMRAM] unsigned char 
 10822 ;; Return value:  Size  Location     Type
 10823 ;;                  4   51[COMRAM] long 
 10824 ;; Registers used:
 10825 ;;		wreg, status,2, status,0
 10826 ;; Tracked objects:
 10827 ;;		On entry : 0/0
 10828 ;;		On exit  : 0/0
 10829 ;;		Unchanged: 0/0
 10830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10831 ;;      Params:         4       0       0       0       0       0       0
 10832 ;;      Locals:         2       0       0       0       0       0       0
 10833 ;;      Temps:          4       0       0       0       0       0       0
 10834 ;;      Totals:        10       0       0       0       0       0       0
 10835 ;;Total ram usage:       10 bytes
 10836 ;; Hardware stack levels used:    1
 10837 ;; Hardware stack levels required when called:    1
 10838 ;; This function calls:
 10839 ;;		Nothing
 10840 ;; This function is called by:
 10841 ;;		_init_USART
 10842 ;; This function uses a non-reentrant model
 10843 ;;
 10844                           
 10845                           	psect	text45
 10846  003A9C                     __ptext45:
 10847                           	callstack 0
 10848  003A9C                     ___fltol:
 10849                           	callstack 0
 10850  003A9C  FFFF               	dw	65535	; assembler added errata NOP
 10851  003A9E  3436               	rlcf	(___fltol@f1+2)^0,w,c
 10852  003AA0  3437               	rlcf	(___fltol@f1+3)^0,w,c
 10853  003AA2  6E3D               	movwf	___fltol@exp1^0,c
 10854  003AA4  503D               	movf	___fltol@exp1^0,w,c
 10855  003AA6  A4D8               	btfss	status,2,c
 10856  003AA8  EF58  F01D         	goto	u4901
 10857  003AAC  EF5B  F01D         	goto	u4900
 10858  003AB0                     u4901:
 10859  003AB0  FFFF               	dw	65535	; assembler added errata NOP
 10860  003AB2  EF67  F01D         	goto	l4051
 10861  003AB6                     u4900:
 10862  003AB6  FFFF               	dw	65535	; assembler added errata NOP
 10863  003AB8                     l4047:
 10864  003AB8  FFFF               	dw	65535	; assembler added errata NOP
 10865  003ABA  0E00               	movlw	0
 10866  003ABC  6E34               	movwf	?___fltol^0,c
 10867  003ABE  0E00               	movlw	0
 10868  003AC0  6E35               	movwf	(?___fltol+1)^0,c
 10869  003AC2  0E00               	movlw	0
 10870  003AC4  6E36               	movwf	(?___fltol+2)^0,c
 10871  003AC6  0E00               	movlw	0
 10872  003AC8  6E37               	movwf	(?___fltol+3)^0,c
 10873  003ACA  EFE6  F01D         	goto	l424
 10874  003ACE                     l4051:
 10875  003ACE  FFFF               	dw	65535	; assembler added errata NOP
 10876  003AD0  C034  F038         	movff	___fltol@f1,??___fltol
 10877  003AD4  C035  F039         	movff	___fltol@f1+1,??___fltol+1
 10878  003AD8  C036  F03A         	movff	___fltol@f1+2,??___fltol+2
 10879  003ADC  C037  F03B         	movff	___fltol@f1+3,??___fltol+3
 10880  003AE0  0E20               	movlw	32
 10881  003AE2  EF79  F01D         	goto	u4910
 10882  003AE6                     u4915:
 10883  003AE6  FFFF               	dw	65535	; assembler added errata NOP
 10884  003AE8  90D8               	bcf	status,0,c
 10885  003AEA  323B               	rrcf	(??___fltol+3)^0,f,c
 10886  003AEC  323A               	rrcf	(??___fltol+2)^0,f,c
 10887  003AEE  3239               	rrcf	(??___fltol+1)^0,f,c
 10888  003AF0  3238               	rrcf	??___fltol^0,f,c
 10889  003AF2                     u4910:
 10890  003AF2  FFFF               	dw	65535	; assembler added errata NOP
 10891  003AF4  2EE8               	decfsz	wreg,f,c
 10892  003AF6  EF73  F01D         	goto	u4915
 10893  003AFA  5038               	movf	??___fltol^0,w,c
 10894  003AFC  6E3C               	movwf	___fltol@sign1^0,c
 10895  003AFE  8E36               	bsf	(___fltol@f1+2)^0,7,c
 10896  003B00  0EFF               	movlw	255
 10897  003B02  1634               	andwf	___fltol@f1^0,f,c
 10898  003B04  0EFF               	movlw	255
 10899  003B06  1635               	andwf	(___fltol@f1+1)^0,f,c
 10900  003B08  0EFF               	movlw	255
 10901  003B0A  1636               	andwf	(___fltol@f1+2)^0,f,c
 10902  003B0C  0E00               	movlw	0
 10903  003B0E  1637               	andwf	(___fltol@f1+3)^0,f,c
 10904  003B10  0E96               	movlw	150
 10905  003B12  5E3D               	subwf	___fltol@exp1^0,f,c
 10906  003B14  BE3D               	btfsc	___fltol@exp1^0,7,c
 10907  003B16  EF92  F01D         	goto	u4920
 10908  003B1A  EF8F  F01D         	goto	u4921
 10909  003B1E                     u4921:
 10910  003B1E  FFFF               	dw	65535	; assembler added errata NOP
 10911  003B20  EFAC  F01D         	goto	l4071
 10912  003B24                     u4920:
 10913  003B24  FFFF               	dw	65535	; assembler added errata NOP
 10914  003B26  503D               	movf	___fltol@exp1^0,w,c
 10915  003B28  0A80               	xorlw	128
 10916  003B2A  0F97               	addlw	151
 10917  003B2C  B0D8               	btfsc	status,0,c
 10918  003B2E  EF9B  F01D         	goto	u4931
 10919  003B32  EF9E  F01D         	goto	u4930
 10920  003B36                     u4931:
 10921  003B36  FFFF               	dw	65535	; assembler added errata NOP
 10922  003B38  EFA1  F01D         	goto	l4067
 10923  003B3C                     u4930:
 10924  003B3C  FFFF               	dw	65535	; assembler added errata NOP
 10925  003B3E  EF5C  F01D         	goto	l4047
 10926  003B42                     l4067:
 10927  003B42  FFFF               	dw	65535	; assembler added errata NOP
 10928  003B44  90D8               	bcf	status,0,c
 10929  003B46  3237               	rrcf	(___fltol@f1+3)^0,f,c
 10930  003B48  3236               	rrcf	(___fltol@f1+2)^0,f,c
 10931  003B4A  3235               	rrcf	(___fltol@f1+1)^0,f,c
 10932  003B4C  3234               	rrcf	___fltol@f1^0,f,c
 10933  003B4E  3E3D               	incfsz	___fltol@exp1^0,f,c
 10934  003B50  EFA1  F01D         	goto	l4067
 10935  003B54  EFCA  F01D         	goto	l4081
 10936  003B58                     l4071:
 10937  003B58  FFFF               	dw	65535	; assembler added errata NOP
 10938  003B5A  0E1F               	movlw	31
 10939  003B5C  643D               	cpfsgt	___fltol@exp1^0,c
 10940  003B5E  EFB3  F01D         	goto	u4941
 10941  003B62  EFB6  F01D         	goto	u4940
 10942  003B66                     u4941:
 10943  003B66  FFFF               	dw	65535	; assembler added errata NOP
 10944  003B68  EFC0  F01D         	goto	l4079
 10945  003B6C                     u4940:
 10946  003B6C  FFFF               	dw	65535	; assembler added errata NOP
 10947  003B6E  EF5C  F01D         	goto	l4047
 10948  003B72                     l4077:
 10949  003B72  FFFF               	dw	65535	; assembler added errata NOP
 10950  003B74  90D8               	bcf	status,0,c
 10951  003B76  3634               	rlcf	___fltol@f1^0,f,c
 10952  003B78  3635               	rlcf	(___fltol@f1+1)^0,f,c
 10953  003B7A  3636               	rlcf	(___fltol@f1+2)^0,f,c
 10954  003B7C  3637               	rlcf	(___fltol@f1+3)^0,f,c
 10955  003B7E  063D               	decf	___fltol@exp1^0,f,c
 10956  003B80                     l4079:
 10957  003B80  FFFF               	dw	65535	; assembler added errata NOP
 10958  003B82  503D               	movf	___fltol@exp1^0,w,c
 10959  003B84  A4D8               	btfss	status,2,c
 10960  003B86  EFC7  F01D         	goto	u4951
 10961  003B8A  EFCA  F01D         	goto	u4950
 10962  003B8E                     u4951:
 10963  003B8E  FFFF               	dw	65535	; assembler added errata NOP
 10964  003B90  EFB9  F01D         	goto	l4077
 10965  003B94                     u4950:
 10966  003B94                     l4081:
 10967  003B94  FFFF               	dw	65535	; assembler added errata NOP
 10968  003B96  503C               	movf	___fltol@sign1^0,w,c
 10969  003B98  B4D8               	btfsc	status,2,c
 10970  003B9A  EFD1  F01D         	goto	u4961
 10971  003B9E  EFD4  F01D         	goto	u4960
 10972  003BA2                     u4961:
 10973  003BA2  FFFF               	dw	65535	; assembler added errata NOP
 10974  003BA4  EFDD  F01D         	goto	l4085
 10975  003BA8                     u4960:
 10976  003BA8  FFFF               	dw	65535	; assembler added errata NOP
 10977  003BAA  1E37               	comf	(___fltol@f1+3)^0,f,c
 10978  003BAC  1E36               	comf	(___fltol@f1+2)^0,f,c
 10979  003BAE  1E35               	comf	(___fltol@f1+1)^0,f,c
 10980  003BB0  6C34               	negf	___fltol@f1^0,c
 10981  003BB2  0E00               	movlw	0
 10982  003BB4  2235               	addwfc	(___fltol@f1+1)^0,f,c
 10983  003BB6  2236               	addwfc	(___fltol@f1+2)^0,f,c
 10984  003BB8  2237               	addwfc	(___fltol@f1+3)^0,f,c
 10985  003BBA                     l4085:
 10986  003BBA  FFFF               	dw	65535	; assembler added errata NOP
 10987  003BBC  C034  F034         	movff	___fltol@f1,?___fltol
 10988  003BC0  C035  F035         	movff	___fltol@f1+1,?___fltol+1
 10989  003BC4  C036  F036         	movff	___fltol@f1+2,?___fltol+2
 10990  003BC8  C037  F037         	movff	___fltol@f1+3,?___fltol+3
 10991  003BCC                     l424:
 10992  003BCC  FFFF               	dw	65535	; assembler added errata NOP
 10993  003BCE  0012               	return		;funcret
 10994  003BD0  FFFF               	dw	65535	; errata NOP
 10995  003BD2                     __end_of___fltol:
 10996                           	callstack 0
 10997                           
 10998 ;; *************** function _init_PORTS *****************
 10999 ;; Defined at:
 11000 ;;		line 61 in file "init_PIC.c"
 11001 ;; Parameters:    Size  Location     Type
 11002 ;;		None
 11003 ;; Auto vars:     Size  Location     Type
 11004 ;;		None
 11005 ;; Return value:  Size  Location     Type
 11006 ;;                  1    wreg      void 
 11007 ;; Registers used:
 11008 ;;		wreg, status,2
 11009 ;; Tracked objects:
 11010 ;;		On entry : 0/0
 11011 ;;		On exit  : 0/0
 11012 ;;		Unchanged: 0/0
 11013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11014 ;;      Params:         0       0       0       0       0       0       0
 11015 ;;      Locals:         0       0       0       0       0       0       0
 11016 ;;      Temps:          0       0       0       0       0       0       0
 11017 ;;      Totals:         0       0       0       0       0       0       0
 11018 ;;Total ram usage:        0 bytes
 11019 ;; Hardware stack levels used:    1
 11020 ;; Hardware stack levels required when called:    1
 11021 ;; This function calls:
 11022 ;;		Nothing
 11023 ;; This function is called by:
 11024 ;;		_main
 11025 ;; This function uses a non-reentrant model
 11026 ;;
 11027                           
 11028                           	psect	text46
 11029  007C78                     __ptext46:
 11030                           	callstack 0
 11031  007C78                     _init_PORTS:
 11032                           	callstack 0
 11033  007C78  FFFF               	dw	65535	; assembler added errata NOP
 11034  007C7A                     
 11035                           ;init_PIC.c: 63:     LATB = 0;
 11036  007C7A  0E00               	movlw	0
 11037  007C7C  6E8A               	movwf	138,c	;volatile
 11038                           
 11039                           ;init_PIC.c: 64:     PORTB = 0;
 11040  007C7E  0E00               	movlw	0
 11041  007C80  6E81               	movwf	129,c	;volatile
 11042                           
 11043                           ;init_PIC.c: 65:     TRISB = 0xF0;
 11044  007C82  0EF0               	movlw	240
 11045  007C84  6E93               	movwf	147,c	;volatile
 11046                           
 11047                           ;init_PIC.c: 68:     LATC = 0;
 11048  007C86  0E00               	movlw	0
 11049  007C88  6E8B               	movwf	139,c	;volatile
 11050                           
 11051                           ;init_PIC.c: 69:     PORTC = 0;
 11052  007C8A  0E00               	movlw	0
 11053  007C8C  6E82               	movwf	130,c	;volatile
 11054  007C8E                     
 11055                           ;init_PIC.c: 70:     TRISCbits.RC7 = 1;
 11056  007C8E  8E94               	bsf	148,7,c	;volatile
 11057  007C90                     
 11058                           ;init_PIC.c: 71:     TRISCbits.RC6 = 0;
 11059  007C90  9C94               	bcf	148,6,c	;volatile
 11060  007C92  0012               	return		;funcret
 11061  007C94  FFFF               	dw	65535	; errata NOP
 11062  007C96                     __end_of_init_PORTS:
 11063                           	callstack 0
 11064                           
 11065 ;; *************** function _rx_char_usart *****************
 11066 ;; Defined at:
 11067 ;;		line 54 in file "main.c"
 11068 ;; Parameters:    Size  Location     Type
 11069 ;;		None
 11070 ;; Auto vars:     Size  Location     Type
 11071 ;;		None
 11072 ;; Return value:  Size  Location     Type
 11073 ;;                  1    wreg      void 
 11074 ;; Registers used:
 11075 ;;		wreg, status,2
 11076 ;; Tracked objects:
 11077 ;;		On entry : 0/0
 11078 ;;		On exit  : 0/0
 11079 ;;		Unchanged: 0/0
 11080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11081 ;;      Params:         0       0       0       0       0       0       0
 11082 ;;      Locals:         0       0       0       0       0       0       0
 11083 ;;      Temps:          0       0       0       0       0       0       0
 11084 ;;      Totals:         0       0       0       0       0       0       0
 11085 ;;Total ram usage:        0 bytes
 11086 ;; Hardware stack levels used:    1
 11087 ;; This function calls:
 11088 ;;		Nothing
 11089 ;; This function is called by:
 11090 ;;		Interrupt level 2
 11091 ;; This function uses a non-reentrant model
 11092 ;;
 11093                           
 11094                           	psect	intcode
 11095  000008                     __pintcode:
 11096                           	callstack 0
 11097  000008                     _rx_char_usart:
 11098                           	callstack 0
 11099  000008  FFFF               	dw	65535	; assembler added errata NOP
 11100                           
 11101                           ;incstack = 0
 11102  00000A  827F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11103  00000C                     
 11104                           ;main.c: 55:     if(PIE1bits.RCIE && PIR1bits.RCIF){
 11105  00000C  AA9D               	btfss	157,5,c	;volatile
 11106  00000E  EF0B  F000         	goto	i2u507_41
 11107  000012  EF0E  F000         	goto	i2u507_40
 11108  000016                     i2u507_41:
 11109  000016  FFFF               	dw	65535	; assembler added errata NOP
 11110  000018  EF1C  F000         	goto	i2l76
 11111  00001C                     i2u507_40:
 11112  00001C  FFFF               	dw	65535	; assembler added errata NOP
 11113  00001E  AA9E               	btfss	158,5,c	;volatile
 11114  000020  EF14  F000         	goto	i2u508_41
 11115  000024  EF17  F000         	goto	i2u508_40
 11116  000028                     i2u508_41:
 11117  000028  FFFF               	dw	65535	; assembler added errata NOP
 11118  00002A  EF1C  F000         	goto	i2l76
 11119  00002E                     i2u508_40:
 11120  00002E  FFFF               	dw	65535	; assembler added errata NOP
 11121  000030                     
 11122                           ;main.c: 56:         PIR1bits.RCIF = 0;
 11123  000030  9A9E               	bcf	158,5,c	;volatile
 11124  000032                     
 11125                           ;main.c: 57:         new_char_rx = 1;
 11126  000032  0E01               	movlw	1
 11127  000034  0101               	movlb	1	; () banked
 11128  000036  6FA1               	movwf	_new_char_rx& (0+255),b
 11129  000038                     i2l76:
 11130  000038  FFFF               	dw	65535	; assembler added errata NOP
 11131  00003A  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11132  00003C  0011               	retfie		f
 11133  00003E  FFFF               	dw	65535	; errata NOP
 11134  000040                     __end_of_rx_char_usart:
 11135                           	callstack 0
 11136                           
 11137                           	psect	rparam
 11138  0000                     
 11139                           	psect	temp
 11140  00007F                     btemp:
 11141                           	callstack 0
 11142  00007F                     	ds	1
 11143  0000                     int$flags	set	btemp
 11144  0000                     wtemp8	set	btemp+1
 11145  0000                     ttemp5	set	btemp+1
 11146  0000                     ttemp6	set	btemp+4
 11147  0000                     ttemp7	set	btemp+8
 11148                           
 11149                           	psect	idloc
 11150                           
 11151                           ;Config register IDLOC0 @ 0x200000
 11152                           ;	unspecified, using default values
 11153  200000                     	org	2097152
 11154  200000  FF                 	db	255
 11155                           
 11156                           ;Config register IDLOC1 @ 0x200001
 11157                           ;	unspecified, using default values
 11158  200001                     	org	2097153
 11159  200001  FF                 	db	255
 11160                           
 11161                           ;Config register IDLOC2 @ 0x200002
 11162                           ;	unspecified, using default values
 11163  200002                     	org	2097154
 11164  200002  FF                 	db	255
 11165                           
 11166                           ;Config register IDLOC3 @ 0x200003
 11167                           ;	unspecified, using default values
 11168  200003                     	org	2097155
 11169  200003  FF                 	db	255
 11170                           
 11171                           ;Config register IDLOC4 @ 0x200004
 11172                           ;	unspecified, using default values
 11173  200004                     	org	2097156
 11174  200004  FF                 	db	255
 11175                           
 11176                           ;Config register IDLOC5 @ 0x200005
 11177                           ;	unspecified, using default values
 11178  200005                     	org	2097157
 11179  200005  FF                 	db	255
 11180                           
 11181                           ;Config register IDLOC6 @ 0x200006
 11182                           ;	unspecified, using default values
 11183  200006                     	org	2097158
 11184  200006  FF                 	db	255
 11185                           
 11186                           ;Config register IDLOC7 @ 0x200007
 11187                           ;	unspecified, using default values
 11188  200007                     	org	2097159
 11189  200007  FF                 	db	255
 11190                           
 11191                           	psect	config
 11192                           
 11193                           ; Padding undefined space
 11194  300000                     	org	3145728
 11195  300000  FF                 	db	255
 11196                           
 11197                           ;Config register CONFIG1H @ 0x300001
 11198                           ;	Oscillator Selection bits
 11199                           ;	OSC = RCIO, RC oscillator w/ OSC2 configured as RA6
 11200                           ;	Oscillator System Clock Switch Enable bit
 11201                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
 11202  300001                     	org	3145729
 11203  300001  27                 	db	39
 11204                           
 11205                           ;Config register CONFIG2L @ 0x300002
 11206                           ;	Power-up Timer Enable bit
 11207                           ;	PWRT = OFF, PWRT disabled
 11208                           ;	Brown-out Reset Enable bit
 11209                           ;	BOR = ON, Brown-out Reset enabled
 11210                           ;	Brown-out Reset Voltage bits
 11211                           ;	BORV = 20, VBOR set to 2.0V
 11212  300002                     	org	3145730
 11213  300002  0F                 	db	15
 11214                           
 11215                           ;Config register CONFIG2H @ 0x300003
 11216                           ;	Watchdog Timer Enable bit
 11217                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 11218                           ;	Watchdog Timer Postscale Select bits
 11219                           ;	WDTPS = 128, 1:128
 11220  300003                     	org	3145731
 11221  300003  0E                 	db	14
 11222                           
 11223                           ; Padding undefined space
 11224  300004                     	org	3145732
 11225  300004  FF                 	db	255
 11226                           
 11227                           ;Config register CONFIG3H @ 0x300005
 11228                           ;	CCP2 Mux bit
 11229                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
 11230  300005                     	org	3145733
 11231  300005  01                 	db	1
 11232                           
 11233                           ;Config register CONFIG4L @ 0x300006
 11234                           ;	Stack Full/Underflow Reset Enable bit
 11235                           ;	STVR = ON, Stack Full/Underflow will cause RESET
 11236                           ;	Low Voltage ICSP Enable bit
 11237                           ;	LVP = ON, Low Voltage ICSP enabled
 11238                           ;	Background Debugger Enable bit
 11239                           ;	DEBUG = 0x1, unprogrammed default
 11240  300006                     	org	3145734
 11241  300006  85                 	db	133
 11242                           
 11243                           ; Padding undefined space
 11244  300007                     	org	3145735
 11245  300007  FF                 	db	255
 11246                           
 11247                           ;Config register CONFIG5L @ 0x300008
 11248                           ;	Code Protection bit
 11249                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
 11250                           ;	Code Protection bit
 11251                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
 11252                           ;	Code Protection bit
 11253                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
 11254                           ;	Code Protection bit
 11255                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
 11256  300008                     	org	3145736
 11257  300008  0F                 	db	15
 11258                           
 11259                           ;Config register CONFIG5H @ 0x300009
 11260                           ;	Boot Block Code Protection bit
 11261                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
 11262                           ;	Data EEPROM Code Protection bit
 11263                           ;	CPD = OFF, Data EEPROM not code protected
 11264  300009                     	org	3145737
 11265  300009  C0                 	db	192
 11266                           
 11267                           ;Config register CONFIG6L @ 0x30000A
 11268                           ;	Write Protection bit
 11269                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
 11270                           ;	Write Protection bit
 11271                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
 11272                           ;	Write Protection bit
 11273                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
 11274                           ;	Write Protection bit
 11275                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
 11276  30000A                     	org	3145738
 11277  30000A  0F                 	db	15
 11278                           
 11279                           ;Config register CONFIG6H @ 0x30000B
 11280                           ;	Configuration Register Write Protection bit
 11281                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
 11282                           ;	Boot Block Write Protection bit
 11283                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
 11284                           ;	Data EEPROM Write Protection bit
 11285                           ;	WRTD = OFF, Data EEPROM not write protected
 11286  30000B                     	org	3145739
 11287  30000B  E0                 	db	224
 11288                           
 11289                           ;Config register CONFIG7L @ 0x30000C
 11290                           ;	Table Read Protection bit
 11291                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
 11292                           ;	Table Read Protection bit
 11293                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
 11294                           ;	Table Read Protection bit
 11295                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
 11296                           ;	Table Read Protection bit
 11297                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
 11298  30000C                     	org	3145740
 11299  30000C  0F                 	db	15
 11300                           
 11301                           ;Config register CONFIG7H @ 0x30000D
 11302                           ;	Boot Block Table Read Protection bit
 11303                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
 11304  30000D                     	org	3145741
 11305  30000D  40                 	db	64
 11306                           tosu	equ	0xFFF
 11307                           tosh	equ	0xFFE
 11308                           tosl	equ	0xFFD
 11309                           stkptr	equ	0xFFC
 11310                           pclatu	equ	0xFFB
 11311                           pclath	equ	0xFFA
 11312                           pcl	equ	0xFF9
 11313                           tblptru	equ	0xFF8
 11314                           tblptrh	equ	0xFF7
 11315                           tblptrl	equ	0xFF6
 11316                           tablat	equ	0xFF5
 11317                           prodh	equ	0xFF4
 11318                           prodl	equ	0xFF3
 11319                           indf0	equ	0xFEF
 11320                           postinc0	equ	0xFEE
 11321                           postdec0	equ	0xFED
 11322                           preinc0	equ	0xFEC
 11323                           plusw0	equ	0xFEB
 11324                           fsr0h	equ	0xFEA
 11325                           fsr0l	equ	0xFE9
 11326                           wreg	equ	0xFE8
 11327                           indf1	equ	0xFE7
 11328                           postinc1	equ	0xFE6
 11329                           postdec1	equ	0xFE5
 11330                           preinc1	equ	0xFE4
 11331                           plusw1	equ	0xFE3
 11332                           fsr1h	equ	0xFE2
 11333                           fsr1l	equ	0xFE1
 11334                           bsr	equ	0xFE0
 11335                           indf2	equ	0xFDF
 11336                           postinc2	equ	0xFDE
 11337                           postdec2	equ	0xFDD
 11338                           preinc2	equ	0xFDC
 11339                           plusw2	equ	0xFDB
 11340                           fsr2h	equ	0xFDA
 11341                           fsr2l	equ	0xFD9
 11342                           status	equ	0xFD8

Data Sizes:
    Strings     68
    Constant    12
    Data        11
    BSS         47
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    124     126
    BANK0           128     22      77
    BANK1           256    161     162
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[4]), STR_76(CODE[4]), STR_71(CODE[3]), STR_66(CODE[3]), 
		 -> STR_61(CODE[4]), STR_56(CODE[3]), STR_51(CODE[3]), STR_46(CODE[4]), 
		 -> STR_41(CODE[3]), STR_36(CODE[3]), STR_31(CODE[4]), STR_26(CODE[3]), 
		 -> STR_22(CODE[3]), STR_17(CODE[3]), STR_13(CODE[3]), STR_8(CODE[4]), 
		 -> STR_4(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_98(CODE[3]), STR_94(CODE[3]), STR_89(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[4]), STR_76(CODE[4]), STR_71(CODE[3]), STR_66(CODE[3]), 
		 -> STR_61(CODE[4]), STR_56(CODE[3]), STR_51(CODE[3]), STR_46(CODE[4]), 
		 -> STR_41(CODE[3]), STR_36(CODE[3]), STR_31(CODE[4]), STR_26(CODE[3]), 
		 -> STR_22(CODE[3]), STR_17(CODE[3]), STR_13(CODE[3]), STR_8(CODE[4]), 
		 -> STR_4(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_snprintf(BANK0[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    S1071_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    main@greet_str	PTR const unsigned char [80] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    serial_tx_string@val	PTR const unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 


Critical Paths under _main in COMRAM

    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _serial_tx_string->_serial_tx_char
    _lcd_str->_lcd_dat
    _lcd_dat->_lcd_wr
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_wr
    _init_USART->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___fltol->_roundf

Critical Paths under _rx_char_usart in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_snprintf
    _snprintf->_vsnprintf

Critical Paths under _rx_char_usart in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rx_char_usart in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rx_char_usart in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rx_char_usart in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rx_char_usart in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rx_char_usart in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               162   162      0   57187
                                            123 COMRAM     1     1      0
                                              0 BANK1    161   161      0
                         _init_PORTS
                         _init_USART
                    _init_interrupts
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                     _serial_tx_char
                   _serial_tx_string
                           _snprintf
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            12     4      8   46213
                                             10 BANK0     12     4      8
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   45839
                                            111 COMRAM    12     4      8
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   45076
                                            103 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   44615
                                             66 COMRAM    37    31      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7075
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6115
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    5013
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    5560
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6714
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1764
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     771
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _serial_tx_string                                     4     2      2     188
                                              1 COMRAM     4     2      2
                     _serial_tx_char
 ---------------------------------------------------------------------------------
 (2) _serial_tx_char                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              3     1      2     210
                                              3 COMRAM     3     1      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              2     2      0      44
                                              1 COMRAM     2     2      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      44
                                              3 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0      44
                                              1 COMRAM     2     2      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   10346
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   10041
                                             25 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1744
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                             51 COMRAM    10     6      4
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _rx_char_usart                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_PORTS
   _init_USART
     ___fltol
       _roundf (ARG)
         ___fladd
         ___flge
         ___flmul
         ___flneg
         ___flsub
           ___fladd
     _roundf
       ___fladd
       ___flge
       ___flmul
       ___flneg
       ___flsub
         ___fladd
   _init_interrupts
   _lcd_cmd
     _lcd_wr
   _lcd_init
     _lcd_cmd
       _lcd_wr
   _lcd_str
     _lcd_dat
       _lcd_wr
   _serial_tx_char
   _serial_tx_string
     _serial_tx_char
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower

 _rx_char_usart (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A1      A2       7       63.3%
BITBANK0            80      0       0       4        0.0%
BANK0               80     16      4D       5       60.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7C      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16D      15        0.0%
DATA                 0      0     16D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat May 27 18:50:40 2023

                                               l22 7C9E                                                 l31 05CC  
                                               l25 7CB2                                                 l19 7D9A  
                                               l97 7C92                                ___wmul@multiplicand 0003  
                                              l100 7C68                                                l112 7D20  
                                              l115 7D5A                                                l124 7F6C  
                                              l109 7C74                                                l118 033E  
                                              l127 05F6                                                l401 7DDC  
                                              l241 37CE                                                l254 395E  
                                              l424 3BCC                                                l392 3CA6  
                                              l572 3E00                                                l820 7CE6  
                                              l397 3CF4                                                l741 2052  
                                              l565 3DDE                                                l750 22EE  
                                              l806 27EA                                                l582 3FF2  
                                              l751 22D6                                                l655 1C06  
                                              l575 3FD0                                                l672 1D4A  
                                              l664 1F60                                                l656 1BF0  
                                              l912 2B1C                                                l745 2404  
                                              l681 1E4E                                                l657 1BA6  
                                              l833 3A70                                                l682 1E36  
                                              l748 225E                                                l828 3A96  
                                              l917 30BA                                                l758 23BC  
                                              l926 3224                                                l919 30C4  
                                              l951 361A                                                l935 34F6  
                                              l928 3294                                                l697 7FFC  
                                              l937 3500                                                l874 0096  
                                              l946 35BE                                                l947 3610  
                                              l971 2B64                                                l892 28A8  
                                              l956 2E90                                                l980 2C12  
                                              l877 00E2                                                l973 2B6E  
                                              l886 0484                                                l894 28B2  
                                              l966 3072                                                l958 2E9A  
                                              l879 0122                                                l994 2DDE  
                                              l996 2E48                                  ??_init_interrupts 0001  
                                              _abs 0538                                                _pad 0044  
                                              wreg 000FE8                                     ?_rx_char_usart 0001  
                                     ___flmul@aexp 0012                                       ___flmul@bexp 0013  
                                     ___flmul@sign 000D                                       ___flmul@temp 0018  
                                     ___flmul@prod 0014                                       ___fltol@exp1 003D  
                                             l1010 0766                                               l1113 3456  
                                             l1121 7FB2                                               l1033 19B8  
                                             ?_abs 0013                                               l1116 3460  
                                             l1141 7EA2                                               l1127 7E1E  
                                             l1135 04E4                                               l3001 2A84  
                                             l1082 0574                                               l3011 2AD6  
                                             l3003 2A9C                                               l1156 0202  
                                             l1164 0534                                               PORTD 000F83  
                                             l1173 7E60                                               l1085 057E  
                                             l3013 2AE0                                               l3005 2AAC  
                                             l3021 308C                                               l1077 03A6  
                                             PORTE 000F84                                               l1078 03AE  
                                             l1167 3FF8                                               l3007 2AB4  
                                             l3015 2AF2                                               l3031 30FA  
                                             l3023 308E                                               l3103 35D4  
                                             l3111 2E62                                               l1192 041C  
                                             l4001 2694                                               l3009 2ACA  
                                             l3041 312E                                               l3033 3106  
                                             l3025 30AE                                               l3105 35EA  
                                             l1177 3F06                                               l3121 2ED4  
                                             l3113 2E64                                               l3201 2DF2  
                                             l4011 27D8                                               l4003 26CC  
                                             l3211 329A                                               l3051 31F6  
                                             l3043 3134                                               l3035 310E  
                                             l3027 30EE                                               l3019 3078  
                                             l3107 35EE                                               l3123 2EDC  
                                             l3131 2FC2                                               l3115 2E84  
                                             l1187 0412                                               l3203 2DF8  
                                             l3301 1A72                                               l4005 2738  
                                             l4021 7CF6                                               l3221 3318  
                                             l3213 32AE                                               l3061 3264  
                                             l3053 3214                                               l3037 3116  
                                             l3045 3196                                               l3029 30F6  
                                             l3133 2FDA                                               l3141 3048  
                                             l3125 2F52                                               l3117 2EC4  
                                             l3109 2E4E                                               l3205 2E08  
                                             l4101 39BE                                               l1198 7EE4  
                                             l3311 1AB2                                               l3303 1A74  
                                             l4007 276E                                               l4023 7CF8  
                                             l4031 7D28                                               l4015 7C9A  
                                             l3231 3348                                               l3223 331C  
                                             l3215 32B4                                               l3055 3238  
                                             l3063 326A                                               l3047 31B6  
                                             l3039 3128                                               l3071 3482  
                                             l3135 2FFC                                               l3127 2F58  
                                             l3119 2ECC                                               l3207 2E1E  
                                             l3151 2B58                                               l4111 3A2E  
                                             l4103 39CA                                               l3401 1D12  
                                             l3321 1AFA                                               l3305 1A8A  
                                             l3313 1ABA                                               l4009 27B4  
                                             l4121 7D60                                               l4025 7D0A  
                                             l4017 7CEE                                               l4041 7D46  
                                             l4033 7D2A                                               l3233 3352  
                                             l3217 32BA                                               l3057 324E  
                                             l3049 31D8                                               l3081 34D0  
                                             l3073 3498                                               l3137 301A  
                                             l3129 2F5E                                               l3161 2BC4  
                                             l3153 2B8A                                               l3145 2B22  
                                             l4113 3A60                                               l4105 39DE  
                                             l4201 0212                                               l4051 3ACE  
                                             l3411 1D7A                                               l3403 1D14  
                                             l3331 1B10                                               l3323 1B00  
                                             l3315 1ACC                                               l3307 1A9E  
                                             l4131 7D94                                               l4123 7D8C  
                                             l4027 7D0C                                               l4019 7CF0  
                                             l4043 7D58                                               l4035 7D30  
                                             l3243 340E                                               l3235 338C  
                                             l3227 3324                                               l3219 32DC  
                                             l3059 3254                                               l3091 3564  
                                             l3075 34A0                                               l3067 3468  
                                             l3139 3038                                               l3163 2BCC  
                                             l3155 2B92                                               l3147 2B36  
                                             l4115 3A7A                                               l4107 3A04  
                                             l4211 023A                                               l4203 0216  
                                             l4061 3B26                                               l4053 3AFE  
                                             l4045 3A9E                                               l3421 1DAE  
                                             l3405 1D28                                               l3341 1B24  
                                             l3333 1B14                                               l3325 1B04  
                                             l3317 1AE4                                               l3309 1AAE  
                                             l4133 7D96                                               l4125 7D8E  
                                             l4029 7D1E                                               l4037 7D32  
                                             l4141 0592                                               l3245 3424  
                                             l3229 333E                                               l3093 3572  
                                             l3085 3528                                               l3077 34B6  
                                             l3069 347A                                               l3261 3E50  
                                             l3253 3E06                                               l3181 2CBA  
                                             l3173 2C4E                                               l3165 2BD4  
                                             l3157 2BB4                                               l3149 2B38  
                                             l3501 06DE                                               l4109 3A1A  
                                             l4117 3A8C                                               l4221 027A  
                                             l4213 023E                                               l4205 021A  
                                             l4151 7C90                                               l4071 3B58  
                                             l4055 3B00                                               l4047 3AB8  
                                             l3423 1DC2                                               l3415 1D8E  
                                             l3431 1DE8                                               l3407 1D38  
                                             l3343 1B28                                               l3335 1B18  
                                             l3327 1B08                                               l3319 1AF6  
                                             l3351 1B38                                               l4135 7D98  
                                             l4127 7D90                                               l4039 7D44  
                                             l4143 05A6                                               l3247 343A  
                                             l3239 33C6                                               l3095 3592  
                                             l3087 353E                                               l3079 34BE  
                                             l3263 3E74                                               l3255 3E34  
                                             l3175 2C64                                               l3183 2CCE  
                                             l3167 2BF4                                               l3191 2D4E  
                                             l3159 2BBC                                               l3511 074E  
                                             l4223 029E                                               l4215 0242  
                                             l4207 0220                                               l4081 3B94  
                                             l4057 3B10                                               l3425 1DCA  
                                             l3417 1D9A                                               l3409 1D66  
                                             l3433 1DFA                                               l3361 1BBA  
                                             l3353 1B3E                                               l3345 1B2C  
                                             l3337 1B1C                                               l3329 1B0C  
                                             l3281 19F6                                               l3273 19C0  
                                             l4129 7D92                                               l4161 02E8  
                                             l4145 05AA                                               l2801 3776  
                                             l3097 3596                                               l3089 3542  
                                             l3265 3E96                                               l3193 2D70  
                                             l3185 2CE0                                               l3169 2C04  
                                             l3601 0D70                                               l3521 07F0  
                                             l3513 0778                                               l3505 06E6  
                                             l4225 02A4                                               l4217 0266  
                                             l4209 0222                                               l4147 7C7A  
                                             l4083 3BAA                                               l4067 3B42  
                                             l4059 3B14                                               l3443 1E64  
                                             l3451 1EC2                                               l3435 1E00  
                                             l3427 1DD0                                               l3419 1DAC  
                                             l3371 1BEE                                               l3363 1BC6  
                                             l3355 1B6C                                               l3347 1B30  
                                             l3339 1B20                                               l3291 1A38  
                                             l3283 1A0A                                               l3275 19CC  
                                             l4155 7C62                                               l4171 0320  
                                             l4163 02EA                                               l4139 0586  
                                             l2731 0182                                               l2723 0128  
                                             l2803 378C                                               l2811 37D8  
                                             l3099 359A                                               l3267 3EAC  
                                             l3259 3E40                                               l3195 2D92  
                                             l3187 2CE6                                               l3179 2CA4  
                                             l3611 0E68                                               l3603 0DAC  
                                             l3531 0880                                               l3523 07FE  
                                             l3515 077A                                               l4091 397A  
                                             l4227 02AA                                               l4219 0272  
                                             l4149 7C8E                                               l4085 3BBA  
                                             l4077 3B72                                               l4069 3B4E  
                                             l3461 1F28                                               l3453 1ED8  
                                             l3445 1E70                                               l3437 1E12  
                                             l3429 1DE6                                               l3381 1C54  
                                             l3373 1C1A                                               l3365 1BCC  
                                             l3357 1B8E                                               l3349 1B34  
                                             l3293 1A40                                               l3285 1A1A  
                                             l3277 19DE                                               l4173 0326  
                                             l4165 02F0                                               l4157 02C6  
                                             l2733 01BA                                               l2725 013E  
                                             l2741 050A                                               l2901 0108  
                                             l2805 37AC                                               l2821 3842  
                                             l2813 37EA                                               l3269 3EDC  
                                             l3197 2DB0                                               l3189 2CEC  
                                             l3605 0DF2                                               l3541 0902  
                                             l3525 0820                                               l3533 0894  
                                             l3517 07A6                                               l3509 06F4  
                                             l4093 3984                                               l4181 7CB8  
                                             l4229 02B0                                               l4079 3B80  
                                             l3471 1F4E                                               l3463 1F2E  
                                             l3455 1EEA                                               l3447 1E82  
                                             l3439 1E2C                                               l3391 1C9E  
                                             l3383 1C66                                               l3375 1C2E  
                                             l3367 1BE0                                               l3359 1B9E  
                                             l3295 1A56                                               l3287 1A1E  
                                             l3279 19E0                                               l4175 032C  
                                             l4167 0308                                               l4159 02D6  
                                             l4191 7F48                                               l2727 0152  
                                             l2743 050E                                               l2751 7E54  
                                             l2831 38CC                                               l2823 3866  
                                             l2815 380A                                               l3199 2DCE  
                                             l3551 09BE                                               l3543 093C  
                                             l3535 08C0                                               l3527 0830  
                                             l3519 07DC                                               l4183 7CC2  
                                             l3465 1F32                                               l3457 1F10  
                                             l3449 1EC0                                               l3393 1CA0  
                                             l3385 1C78                                               l3369 1BE2  
                                             l3297 1A58                                               l3289 1A26  
                                             l4177 0332                                               l4169 031A  
                                             l4193 7F4A                                               l2761 05EE  
                                             l4281 3374                                               l2729 015E  
                                             l2737 04EA                                               l2745 7E24  
                                             l2841 393C                                               l2833 38EC  
                                             l2825 386E                                               l2817 380E  
                                             l2809 37D4                                               l2905 053A  
                                             l2913 7F70                                               l2921 03F0  
                                             l3721 1554                                               l3713 14C8  
                                             l3705 144E                                               l3633 0FBE  
                                             l3625 0F32                                               l3617 0EB8  
                                             l3609 0E2C                                               l3561 0A4C  
                                             l3545 095E                                               l3537 08CA  
                                             l3553 09D2                                               l3481 069E  
                                             l4097 398C                                               l4089 3964  
                                             l3811 1F86                                               l3467 1F3A  
                                             l3459 1F14                                               l3395 1CAC  
                                             l3387 1C84                                               l3379 1C42  
                                             l3299 1A60                                               l4179 0338  
                                             l4187 7F2C                                               l2931 0488  
                                             l2739 04F6                                               l2747 7E30  
                                             l2771 3656                                               l2835 3900  
                                             l2827 3884                                               l2819 3822  
                                             l2907 0558                                               l2851 3D32  
                                             l2755 7EA6                                               l2923 0406  
                                             l3731 1638                                               l3723 1590  
                                             l3715 1504                                               l3707 147A  
                                             l3635 0FFA                                               l3643 104C  
                                             l3627 0F6E                                               l3619 0EE4  
                                             l3571 0B44                                               l3563 0A88  
                                             l3555 09FE                                               l3547 096E  
                                             l3539 08D8                                               l3483 06A2  
                                             l3475 0654                                               l4099 39B0  
                                             l4195 0208                                               l3901 229A  
                                             l3821 1FCA                                               l3813 1F88  
                                             l3469 1F4C                                               l3389 1C8A  
                                             l3397 1CB2                                               l3805 7C70  
                                             l4189 7F34                                               l2933 048E  
                                             l2749 7E36                                               l2781 36A0  
                                             l2773 365A                                               l2765 3620  
                                             l2829 3898                                               l2837 3906  
                                             l2861 3DC2                                               l2853 3D48  
                                             l2845 3CFC                                               l2909 7E64  
                                             l2917 03B4                                               l3741 1714  
                                             l3725 15C8                                               l3645 1088  
                                             l3653 10D4                                               l3637 1032  
                                             l3581 0C08                                               l3573 0B80  
                                             l3565 0AC0                                               l3557 0A30  
                                             l3493 06CE                                               l3485 06AE  
                                             l3477 067E                                               l4197 0208  
                                             ?_pad 0011                                               l3911 2322  
                                             l3903 22CC                                               l3831 1FFE  
                                             l3823 1FDC                                               l3815 1F9E  
                                             l3807 1F68                                               l3399 1CDE  
                                             l2759 05D2                                               l2927 7DE0  
                                             l2935 04A6                                               l2951 045C  
                                             l2943 0424                                               l2791 3708  
                                             l2783 36C2                                               l2775 366E  
                                             l2767 3624                                               l2839 391C  
                                             l2863 3DC4                                               l2855 3D5C  
                                             l2847 3D08                                               l2871 3F38  
                                             l3751 1790                                               l3743 1724  
                                             l3727 15F2                                               l3735 1676  
                                             l3655 1100                                               l3663 114A  
                                             l3647 10C0                                               l3639 103E  
                                             l3591 0CAA                                               l3583 0C34  
                                             l3575 0BB8                                               l3567 0B0A  
                                             l4279 071E                                               l3487 06B2  
                                             l3479 068C                                               l4199 020E  
                                             l3921 23A4                                               l3913 234C  
                                             l3841 2068                                               l3833 2014  
                                             l3825 1FE4                                               l3817 1FB2  
                                             l3809 1F74                                               l2937 04D8  
                                             l2953 0460                                               l2945 043C  
                                             l2793 373A                                               l2785 36CA  
                                             l2777 368E                                               l2769 3636  
                                             l2961 2844                                               l2865 3DD8  
                                             l2857 3D70                                               l2849 3D2A  
                                             l2881 3FCA                                               l2873 3F4E  
                                             l3753 17B8                                               l3737 16B2  
                                             l3729 1602                                               l3681 1284  
                                             l3665 1186                                               l3673 11D2  
                                             l3657 1136                                               l3593 0CE6  
                                             l3585 0C5C                                               l3497 06D6  
                                             l3489 06C6                                               l3923 23C2  
                                             l3931 23EE                                               l3907 2304  
                                             l3915 2350                                               l3851 20A8  
                                             l3843 207A                                               l3835 2028  
                                             l3827 1FEA                                               l3819 1FC2  
                                             l2939 04DC                                               l2891 008C  
                                             l2883 0046                                               l2947 0448  
                                             l2795 375A                                               l2787 36E0  
                                             l2779 3692                                               l2971 28BC  
                                             l2963 2864                                               l2859 3DA2  
                                             l2875 3F62                                               l2867 3F0E  
                                             l3771 18CE                                               l3755 17D2  
                                             l3763 1820                                               l3739 16EA  
                                             l3691 1342                                               l3683 12B0  
                                             l3675 11FE                                               l3667 11BE  
                                             l3595 0D1E                                               l3933 23F4  
                                             l3925 23D2                                               l3917 2370  
                                             l3909 2310                                               l3861 20FA  
                                             l3853 20BE                                               l3837 2038  
                                             l3829 1FFC                                               l2893 00A4  
                                             l2885 0058                                               l2949 0456  
                                             l2797 375C                                               l2789 36F4  
                                             l2981 28FC                                               l2973 28D2  
                                             l2965 287A                                               l2957 27F2  
                                             l2877 3F96                                               l2869 3F30  
                                             l3781 1948                                               l3765 185C  
                                             l3757 17E0                                               l3749 1764  
                                             l3693 1388                                               l3685 12E6  
                                             l3677 1248                                               l3951 3C5A  
                                             l3943 3BD4                                               l3927 23E4  
                                             l3919 2384                                               l3871 2140  
                                             l3863 2108                                               l3855 20CA  
                                             l3847 2090                                               l3839 2040  
                                             l2895 00BA                                               l2887 006C  
                                             l2799 3770                                               l2983 2904  
                                             l2991 29F6                                               l2975 28E2  
                                             l2967 287C                                               l2959 2812  
                                             l2879 3FB6                                               l3783 195C  
                                             l3767 1894                                               l3961 3CF0  
                                             l3953 3C6E                                               l3945 3C06  
                                             l3929 23E6                                               l3881 21AE  
                                             l3873 215A                                               l3865 2114  
                                             l3857 20E2                                               l3849 209E  
                                             l3937 7FB8                                               l2897 00BE  
                                             l2889 0080                                               l2993 2A16  
                                             l2985 2986                                               l2977 28EA  
                                             l2969 289C                                               l3769 18BE  
                                             l3777 190E                                               l3697 13C2  
                                             l3689 1306                                               l3793 197E  
                                             l3955 3C80                                               l3947 3C16  
                                             l3891 224A                                               l3883 21D8  
                                             l3875 216A                                               l3867 2124  
                                             l3859 20EE                                               l3939 7FC8  
                                             l2899 00F4                                               l2995 2A38  
                                             l2987 298C                                               l2979 28F4  
                                             l3795 19A6                                               l3779 193A  
                                             l3787 196A                                               l3699 13FE  
                                             l3957 3C94                                               l3949 3C4A  
                                             l3893 225C                                               l3885 2212  
                                             l3877 2186                                               l3869 2130  
                                             l3965 7DA0                                               l3981 240C  
                                             l2997 2A56                                               l2989 2992  
                                             l3973 0344                                               TRISD 000F95  
                                             l3959 3CEA                                               l3895 2270  
                                             l3887 2220                                               l3879 2192  
                                             l3967 7DBA                                               l3991 24FA  
                                             l3983 242C                                               l2999 2A74  
                                             l3975 034C                                               TRISE 000F96  
                                             l3897 2284                                               l3889 223E  
                                             l3969 7DCA                                               l3993 251C  
                                             l3985 247C                                               l3977 035A  
                                             l3899 2288                                               l3987 2490  
                                             l3979 0382                                               l3997 2554  
                                             l3989 24D6                                               l3999 2628  
                                             STR_1 060D                                               STR_2 0624  
                                             STR_4 0624                                               STR_6 0628  
                                             STR_8 0628                                               u3000 2824  
                                             u3001 281C                                               u3010 2828  
                                             u3100 2A72                                               u3020 2842  
                                             u3101 2A6C                                               u3021 283C  
                                             u3110 2A84                                               u3030 2878  
                                             _LATB 000F8A                                               u3111 2A7E  
                                             u3031 2872                                               _LATC 000F8B  
                                             u4000 1E48                                               u3120 2A9A  
                                             u3040 289A                                               u3200 31F4  
                                             u4001 1E42                                               u3121 2A94  
                                             u3041 2894                                               u3201 31EE  
                                             u4010 1E62                                               u3130 2AAC  
                                             u3050 28D0                                               u3210 3212  
                                             u4011 1E5C                                               u3131 2AA6  
                                             u3051 28CA                                               u3211 320C  
                                             u4020 1E80                                               u3140 2AC8  
                                             u3060 28E2                                               u3220 3224  
                                             u3300 3564                                               u4100 0764  
                                             u4021 1E7A                                               u3141 2AC2  
                                             u3061 28DC                                               u3221 321E  
                                             u3301 355E                                               u4101 075E  
                                             u4030 1EBE                                               u3070 2A14  
                                             u3230 3236                                               u3150 308A  
                                             u3310 35BC                                               u4110 0776  
                                             u4031 1EB8                                               u3071 2A0E  
                                             u3231 3230                                               u3151 3084  
                                             u3311 35B6                                               u4111 0770  
                                             u4040 1ED6                                               u2600 7E52  
                                             u3080 2A36                                               u3240 324C  
                                             u3160 30AC                                               u3320 35CE  
                                             u3400 3048                                               u4200 09B8  
                                             u4120 07A4                                               u5000 3A2C  
                                             u4041 1ED0                                               u2601 7E4C  
                                             u3081 2A30                                               u3241 3246  
                                             u3161 30A6                                               u3321 35C8  
                                             u3401 3042                                               u4121 079E  
                                             u5001 3A26                                               u4050 1EEA  
                                             u3090 2A54                                               u3170 316E  
                                             u3330 3610                                               u2610 7EDA  
                                             u3410 2B34                                               u4210 09D2  
                                             u4130 07EE                                               u5010 3A5E  
                                             u4051 1EE4                                               u3091 2A4E  
                                             u3331 360A                                               u3251 3472  
                                             u2611 7ED2                                               u3411 2B2E  
                                             u4211 09CC                                               u4131 07E8  
                                             u5011 3A58                                               u4060 1F0E  
                                             u5020 05CA                                               u2700 37E8  
                                             u3180 31B4                                               u3260 3496  
                                             u3340 2E60                                               u2620 7EDE  
                                             u3500 2CB8                                               u3420 2B56  
                                             u4300 0D1E                                               u4220 09FC  
                                             u4140 0876                                               u4061 1F08  
                                             u5021 05C4                                               u2701 37E2  
                                             u3181 31AE                                               u3261 3490  
                                             u3341 2E5A                                               u3501 2CB2  
                                             u3421 2B50                                               u4301 0D18  
                                             u4221 09F6                                               u4141 086E  
                                             u4070 1F26                                               u5030 7F6A  
                                             u2550 013C                                               u2630 3634  
                                             u2710 3820                                               u3190 31D6  
                                             u3270 34CE                                               u3350 2E82  
                                             u3510 2D26                                               u3430 2B88  
                                             u4310 0DAA                                               u4230 0A86  
                                             u4150 087A                                               u4071 1F20  
                                             u5031 7F64                                               u2551 0136  
                                             u2631 362E                                               u2711 381A  
                                             u3191 31D0                                               u3175 315A  
                                             u3271 34C8                                               u3351 2E7C  
                                             u3431 2B82                                               u4311 0DA4  
                                             u4231 0A80                                               u4080 1F4A  
                                             u3600 3338                                               u2560 0152  
                                             u2640 366C                                               u2720 3864  
                                             u3280 34F0                                               u2800 3F2E  
                                             u3360 2FD8                                               u3520 2D6E  
                                             u3440 2BF2                                               u4400 12AE  
                                             u4320 0E66                                               u4240 0AC0  
                                             u4160 0894                                               u5040 0238  
                                             u4081 1F44                                               u3601 3332  
                                             u2561 014C                                               u2641 3666  
                                             u2721 385E                                               u3281 34EA  
                                             u2801 3F28                                               u3361 2FD2  
                                             u3521 2D68                                               u3441 2BEC  
                                             u4401 12A8                                               u4321 0E60  
                                             u4241 0ABA                                               u4161 088E  
                                             u5041 0232                                               u3610 3404  
                                             u2570 0180                                               u2730 3896  
                                             u3290 3522                                               u2810 3F60  
                                             u3370 2FFA                                               u3530 2D90  
                                             u3450 2C44                                               u4410 1340  
                                             u4330 0EE2                                               u4250 0B7E  
                                             u4170 08BE                                               u4090 067C  
                                             u5050 028E                                               u5107 7D4C  
                                             u3611 33FC                                               u2571 017A  
                                             u2651 369A                                               u2731 3890  
                                             u3291 351C                                               u2811 3F5A  
                                             u3371 2FF4                                               u3531 2D8A  
                                             u3515 2D12                                               u3451 2C3C  
                                             u4411 133A                                               u4331 0EDC  
                                             u4251 0B78                                               u4171 08B8  
                                             u4091 0676                                               u5051 0284  
                                             u3700 19DC                                               u3620 3408  
                                             u2580 01BA                                               u2660 36C0  
                                             u2740 38CA                                               u2820 3F94  
                                             u3380 3018                                               u2900 7FA8  
                                             u3540 2DAE                                               u3460 2C48  
                                             u4500 17B8                                               u4420 13FC  
                                             u4340 0F6C                                               u4260 0BB8  
                                             u4180 0900                                               u3701 19D6  
                                             u5117 02DC                                               u2581 01B4  
                                             u2661 36BA                                               u2741 38C4  
                                             u2821 3F8E                                               u3381 3012  
                                             u2901 7FA0                                               u3541 2DA8  
                                             u4501 17B2                                               u4421 13F6  
                                             u4341 0F66                                               u4261 0BB2  
                                             u4181 08FA                                               u3710 19F4  
                                             u3630 3422                                               u2590 0532  
                                             u2830 0056                                               u2670 36F2  
                                             u2750 391A                                               u3390 3036  
                                             u2910 7FAC                                               u3550 2DCC  
                                             u3470 2C62                                               u4510 185A  
                                             u4430 1478                                               u4350 0FF8  
                                             u4270 0C32                                               u4190 09B4  
                                             u3711 19EE                                               u5127 02F6  
                                             u3631 341C                                               u2591 052C  
                                             u2831 0050                                               u2671 36EC  
                                             u2751 3914                                               u3391 3030  
                                             u3551 2DC6                                               u3471 2C5C  
                                             u4511 1854                                               u4431 1472  
                                             u4351 0FF2                                               u4271 0C2C  
                                             u4191 09AC                                               u4600 2066  
                                             u3800 1B86                                               u3720 1A08  
                                             u3640 3438                                               u2840 007E  
                                             u2680 3738                                               u2920 03E6  
                                             u3560 2DDE                                               u3480 2C9A  
                                             u4520 1894                                               u4440 1502  
                                             u4360 1086                                               u4280 0C5C  
                                             u4601 2060                                               u3801 1B7E  
                                             u3721 1A02                                               u5137 030E  
                                             u3641 3432                                               u2841 0078  
                                             u2681 3732                                               u2761 3D02  
                                             u2921 03DE                                               u3561 2DD8  
                                             u3481 2C92                                               u4521 188E  
                                             u4441 14FC                                               u4361 1080  
                                             u4281 0C56                                               u4610 207A  
                                             u3810 1B8A                                               u3730 1A54  
                                             u2850 00E0                                               u2690 378A  
                                             u3650 3E32                                               u2770 3D28  
                                             u2930 03EA                                               u3570 2DF0  
                                             u3490 2C9E                                               u4530 1938  
                                             u4450 158E                                               u4370 10FE  
                                             u4290 0CE4                                               u4611 2074  
                                             u3731 1A4E                                               u5147 7CFE  
                                             u2851 00DA                                               u2691 3784  
                                             u3651 3E2C                                               u2771 3D22  
                                             u3571 2DEA                                               u4531 1932  
                                             u4451 1588                                               u4371 10F8  
                                             u4291 0CDE                                               u4700 236E  
                                             u4620 21FA                                               u4540 1F84  
                                             u3900 1CDC                                               u3820 1BB8  
                                             u3740 1A70                                               u3580 32DA  
                                             u2860 00F2                                               u3660 3E72  
                                             u2780 3D5A                                               u2940 0404  
                                             u4460 15C8                                               u4380 1184  
                                             u5068 0292                                               u4701 2368  
                                             u4541 1F7E                                               u3901 1CD6  
                                             u3821 1BB2                                               u3741 1A6A  
                                             u5157 7D12                                               u3581 32D4  
                                             u2861 00EC                                               u3661 3E6C  
                                             u2781 3D54                                               u2941 03FE  
                                             u4461 15C2                                               u4381 117E  
                                             u4710 23A2                                               u4630 225A  
                                             u4550 1F9C                                               u3910 1D26  
                                             u3830 1BDE                                               u3750 1A88  
                                             u2950 7E14                                               u3590 3316  
                                             u2870 0556                                               u3670 3E94  
                                             u2790 3DA0                                               u4470 16B0  
                                             u4390 11FC                                               u4711 239C  
                                             u4631 2254                                               u4551 1F96  
                                             u3911 1D20                                               u3831 1BD8  
                                             u3751 1A82                                               u2951 7E0C  
                                             u3591 3310                                               u2871 0550  
                                             u3671 3E8E                                               u2791 3D9A  
                                             u4471 16AA                                               u4391 11F6  
                                             u4720 23E2                                               u4640 2282  
                                             u4560 1FB0                                               u3920 1D64  
                                             u3840 1C06                                               u3760 1A9C  
                                             u4800 244E                                               u2960 7E18  
                                             u3680 3EAA                                               u2880 7E98  
                                             u4480 16EA                                               u4721 23DC  
                                             u4641 227C                                               u4625 21EE  
                                             u4561 1FAA                                               u3921 1D5E  
                                             u3841 1C00                                               u3761 1A96  
                                             u5097 7D38                                               u3681 3EA4  
                                             u2881 7E90                                               u4481 16E4  
                                             u4730 3C04                                               u4650 2298  
                                             u4570 1FFA                                               u3930 1D78  
                                             u3850 1C18                                               u3770 1AE2  
                                             u4810 247A                                               u2970 04A4  
                                             u3690 3EDC                                               u2890 7E9C  
                                             u4490 178E                                               u4731 3BFE  
                                             u4651 2292                                               u4571 1FF4  
                                             u3931 1D72                                               u3851 1C12  
                                             u3771 1ADC                                               u4811 2474  
                                             u2971 049E                                               u3691 3ED6  
                                             u4491 1788                                               u4900 3AB6  
                                             u4740 3C48                                               u4660 22CA  
                                             u4580 2012                                               u3940 1DAA  
                                             u3860 1C2C                                               u3780 1AF4  
                                             u4820 24B4                                               u2980 04D6  
                                             u4901 3AB0                                               u4741 3C42  
                                             u4661 22C4                                               u4581 200C  
                                             u3941 1DA4                                               u3861 1C26  
                                             u3781 1AEE                                               u4805 2442  
                                             u2981 04D0                                               u4910 3AF2  
                                             u4750 3C6C                                               u4670 22E8  
                                             u4590 2026                                               u3950 1DC0  
                                             u3870 1C64                                               u3790 1B6A  
                                             u4830 24D4                                               u2990 043A  
                                             u4751 3C66                                               u4671 22E2  
                                             u4591 2020                                               u3951 1DBA  
                                             u3871 1C5E                                               u3791 1B64  
                                             u4831 24CE                                               u2991 0434  
                                             u4920 3B24                                               u4760 3C92  
                                             u4680 2302                                               u3960 1DE4  
                                             u3880 1C76                                               u4840 251A  
                                             u4921 3B1E                                               u4761 3C8C  
                                             u4681 22FC                                               u3961 1DDE  
                                             u3881 1C70                                               u4841 2514  
                                             u4825 24A8                                               u4930 3B3C  
                                             u4770 3CE8                                               u4690 2320  
                                             u3970 1DFA                                               u3890 1C9C  
                                             u4850 2626                                               u4931 3B36  
                                             u4915 3AE6                                               u4771 3CE2  
                                             u4691 231A                                               u3971 1DF4  
                                             u3891 1C96                                               u4851 2620  
                                             u4940 3B6C                                               u4780 7DB8  
                                             u3980 1E10                                               u4860 26CA  
                                             u4941 3B66                                               u4781 7DB2  
                                             u3981 1E0A                                               u4861 26C4  
                                             u4950 3B94                                               u3990 1E2A  
                                             u4870 2792                                               u4790 03A4  
                                             u4951 3B8E                                               u3991 1E24  
                                             u4791 039E                                               u4960 3BA8  
                                             u4880 27B2                                               u4961 3BA2  
                                             u4881 27AC                                               u4890 7CB0  
                                             u4970 3978                                               u4875 2786  
                                             u4891 7CAA                                               u4971 3972  
                                             i2l76 0038                                               u4980 39AE  
                                             u4981 39A8                                               u4990 3A18  
                                             u4991 3A12                                               abs@a 0013  
                                             _dbuf 008C                                               _atoi 3298  
                                             _ctoa 0422                                               _main 0208  
                                             _dtoa 27F0                                               _fosc 0609  
                                             _prec 0088                                               _otoa 3076  
                                             _nout 0084                                               pad@i 0018  
                                             pad@p 0015                                               fsr1h 000FE2  
                                             fsr2h 000FDA                                               indf2 000FDF  
                                             fsr1l 000FE1                                               pad@w 001A  
                                             fsr2l 000FD9                                               _tosc 00C9  
                                             _stoa 3466                                               btemp 007F  
                                             _utoa 2E4C                                               _xtoa 2B20  
                                      main@rx_char 01A0                                               prodh 000FF4  
                                             prodl 000FF3                                               start 0040  
                                     ___param_bank 000000                                              ??_abs 0015  
                                            ??_pad 0017                                      ___fltol@sign1 003C  
                                  __end_of___aodiv 37D2                                              ?_atoi 0008  
                                            ?_ctoa 001C                                    __end_of___fladd 1F66  
                                            ?_main 0001                                              ?_dtoa 001C  
                                  __end_of___aomod 3962                                    __end_of___flneg 7DE0  
                                            STR_20 063F                                              STR_13 0625  
                                            STR_22 063F                                              STR_31 0630  
                                            STR_24 0642                                              STR_17 0629  
                                            STR_41 0648                                              STR_26 0642  
                                            STR_51 062D                                              STR_36 0631  
                                            STR_44 062C                                              STR_61 0634  
                                            STR_29 0630                                              STR_46 062C  
                                            STR_54 0645                                              STR_71 064B  
                                            STR_39 0648                                              STR_80 0620  
                                            STR_56 0645                                              STR_66 0635  
                                            STR_74 0638                                              STR_59 0634  
                                            STR_76 0638                                              STR_92 064E  
                                            STR_85 0639                                              STR_69 064B  
                                            STR_94 064E                                              STR_78 0620  
                                            STR_96 063C                                    __end_of___flmul 240A  
                                            STR_89 0621                                              STR_98 063C  
                                            ?_otoa 001C                                    __end_of___flsub 8000  
                                  __end_of___fltol 3BD2                                              ?_stoa 000A  
                                            ?_utoa 001C                                    __end_of___lodiv 3E04  
                                            ?_xtoa 001C                                    __end_of___lomod 3FF6  
                                            _RCREG 000FAE                                       vfpfcnvrt@fmt 0045  
                                     vfpfcnvrt@llu 0060                                              _SPBRG 000FAF  
                                            _PORTB 000F81                                              _PORTC 000F82  
                                            _PORTD 000F83                                              _TRISB 000F93  
                                            _TXREG 000FAD                                    __end_of_lcd_dat 7D5E  
                                  __end_of_lcd_cmd 7D24                                    __end_of_lcd_str 7F70  
                                            _flags 007D                                              _errno 008A  
                                            _fputc 0126                                    __end_of_isalpha 7FB6  
                                            _fputs 04E8                                    __end_of_isdigit 7E22  
                                            atoi@n 0015                                              pad@fp 0011  
                                            atoi@s 0008                                              _width 0086  
                                            ctoa@c 001E                                              _putch 3FF6  
                                            _toint 0601                                              ctoa@w 001F  
                                            dtoa@d 001E                                              dtoa@i 003E  
                                            dtoa@n 0036                                              dtoa@p 0030  
                                            dtoa@s 0034                                              dtoa@w 0032  
                                  __end_of_islower 7EE8                                    __end_of_isspace 04E8  
                                  __end_of_isupper 7EA6                                              tablat 000FF5  
                                            otoa@d 001E                                              otoa@i 003C  
                                            otoa@n 0034                                              otoa@p 002E  
                                            otoa@t 0030                                              otoa@w 0032  
                                            plusw1 000FE3                                              plusw2 000FDB  
                                            stoa@i 0016                                              stoa@l 001E  
                                            stoa@p 001C                                              stoa@s 000C  
                                            stoa@w 0018                                              ttemp5 0080  
                                            ttemp6 0083                                              ttemp7 0087  
                                            utoa@d 001E                                              utoa@i 003A  
                                            utoa@n 0032                                              utoa@p 002E  
                                            utoa@w 0030                                              status 000FD8  
                                            wtemp8 0080                                              xtoa@c 0041  
                                            xtoa@d 001E                                              xtoa@i 003F  
                                            xtoa@n 0037                                              xtoa@p 0033  
                                            xtoa@w 0035                                              xtoa@x 0026  
                                  __end_of_strncmp 3F0C                                    __end_of_toupper 0422  
                                 ___lodiv@dividend 0001                                       _toupper$1445 000D  
                                  __initialization 7EE8                                       __end_of_atoi 3466  
                                     __end_of_ctoa 0488                                       __end_of_main 02C4  
                                     __end_of_dtoa 2B20                                       __end_of_fosc 060D  
                                     __end_of_otoa 3298                                       __end_of_stoa 361E  
                                     __end_of_utoa 3076                                       __end_of_xtoa 2E4C  
                                           ??_atoi 000A                                             ??_ctoa 001F  
                                           ??_main 007C                                             ??_dtoa 0026  
                                           ??_otoa 0026                                             ??_stoa 000E  
                                           ??_utoa 0026                                             ??_xtoa 0027  
                                    __activetblptr 000002                                    ??_rx_char_usart 0001  
                                 ___lodiv@quotient 0011                                             ?_fputc 0001  
                                           ?_fputs 000A                                             ?_putch 0001  
                                           i2l4231 000C                                             i2l4233 001E  
                                           i2l4235 0030                                             i2l4237 0032  
                                    main@greet_str 0100                                      vfpfcnvrt@done 004F  
                                     vfprintf@cfmt 006E                                   __end_of_lcd_init 0342  
                                           ___flge 3BD2                                          ??___aodiv 0011  
                                        ??___fladd 0009                                          ??___aomod 0011  
                                           ___wmul 05D0                                          ??___flneg 0005  
                                        ??___flmul 0009                                          ??___flsub 0019  
                                        ??___fltol 0038                                          ??___lodiv 0011  
                                        ??___lomod 0011                                             _lcd_wr 7C6C  
                                           clear_0 7F12                                             pad@buf 0013  
                                           ctoa@fp 001C                                             _roundf 240A  
                                        ??_lcd_dat 0002                                          ??_lcd_cmd 0002  
                                           dtoa@fp 001C                                             _strlen 7E22  
                                        ??_lcd_str 0006                                             fputc@c 0001  
                                           fputs@c 000E                                             fputs@i 000F  
                                           fputs@s 000A                                          ??_isalpha 0003  
                                        ??_isdigit 0003                                          ??_islower 0003  
                                     __mediumconst 0000                                          ??_isspace 0003  
                         __end_of_serial_tx_string 05D0                                             otoa@fp 001C  
                                           tblptrh 000FF7                                          ??_isupper 0003  
                                           tblptrl 000FF6                                             tblptru 000FF8  
                                           stoa@cp 001A                                             stoa@fp 000A  
                                           putch@c 0001                                   __end_of_vfprintf 03B2  
                                           utoa@fp 001C                                   __end_of_snprintf 7CEA  
                                           xtoa@fp 001C                                          ??_strncmp 0007  
                                        ??_toupper 0009                                serial_tx_string@val 0002  
                                       ___flge@ff1 0001                                         ___flge@ff2 0005  
                                       __accesstop 0080                            __end_of__initialization 7F1C  
                                       ___flneg@f1 0001                                  serial_tx_char@val 0001  
                                    ___rparam_used 000001                                         ___fltol@f1 0034  
                                  _init_interrupts 7C60                                     __pcstackCOMRAM 0001  
                                     __pidataBANK0 7C55                                      __end_of_fputc 0208  
                                    __end_of_fputs 0538                                      __end_of_putch 3FFC  
                                    __end_of_toint 0605                            __size_of_serial_tx_char 0020  
                                          ??_fputc 0005                                            ??_fputs 000E  
                                          ??_putch 0001                                  serial_tx_string@i 0004  
                                       __pbssBANK0 0080                                         __pbssBANK1 01A1  
                                          ?___flge 0001                                            ?___wmul 0001  
                                          ?_lcd_wr 0001                                            ?_roundf 001A  
                                          ?_strlen 0001                                 __size_of_vfpfcnvrt 136C  
                                 _desired_baudrate 0605                                          ?_lcd_init 0001  
                                 ___lomod@dividend 0001                            __end_of_init_interrupts 7C6C  
                                          __Hparam 0000                                            __Lparam 0000  
                               __size_of_vsnprintf 013A                                         _init_PORTS 7C78  
                                       _init_USART 7D5E                                    __size_of___flge 0128  
                                          ___aodiv 361E                                            ___fladd 19BE  
                                          ___aomod 37D2                                            ___flneg 7D9E  
                                          ___flmul 1F66                                            ___flsub 7FB6  
                                          ___fltol 3A9C                                    __size_of___wmul 002A  
                                          ___lodiv 3CFA                                            ___lomod 3F0C  
                                        ?_vfprintf 0068                                       __psmallconst 0600  
                                        ?_snprintf 00B6                                    __size_of_lcd_wr 000C  
                                          __pcinit 7EE8                                            __ramtop 0600  
                                          __ptext0 0208                                            __ptext1 7CB6  
                                          __ptext2 3962                                            __ptext3 0342  
                                          __ptext4 0652                                            __ptext5 2B20  
                                          __ptext6 03B2                                            __ptext7 7EA6  
                                          __ptext8 7E64                                            __ptext9 7F70  
                                          _lcd_dat 7D24                                            _lcd_cmd 7CEA  
                                          _lcd_str 7F2A                                    __size_of_roundf 03E6  
                                  __size_of_strlen 0042                                       __size_of_abs 004C  
                                     __size_of_pad 00E2                                            _isalpha 7F70  
                                          _isdigit 7DE0                                            _islower 7EA6  
                                          _isspace 0488                                            _isupper 7E64  
                                          atoi@neg 000E                                         ??_lcd_init 0004  
                                          _strncmp 3E04                                            _toupper 03B2  
                             end_of_initialization 7F1C                                            fputc@fp 0003  
                                    __Lmediumconst 0000                                            fputs@fp 000C  
                                __end_of_vfpfcnvrt 19BE                                          _RCSTAbits 000FAB  
                                          postdec1 000FE5                                            postdec2 000FDD  
                                          postinc0 000FEE                                            postinc1 000FE6  
                                          postinc2 000FDE                                            roundf@e 0026  
                                          roundf@u 002C                                            roundf@x 001A  
                                          roundf@y 0030                                         ??_vfprintf 006E  
                                       ??_snprintf 007C                                            strlen@a 0003  
                                          strlen@s 0001                                          _PORTEbits 000F84  
                                      ___fladd@grs 0010                                     _serial_tx_char 7C96  
                            __end_of_rx_char_usart 0040                                          _TRISCbits 000F94  
                                       lcd_dat@val 0003                                  __end_of_vsnprintf 3A9C  
                                ?_serial_tx_string 0002                                         lcd_cmd@val 0003  
                               ??_serial_tx_string 0004                                        ___flmul@grs 000E  
                                 ?_init_interrupts 0001                                          _TXSTAbits 000FAC  
                                       lcd_str@str 0004                                        ?_init_PORTS 0001  
                                      ?_init_USART 0001                                     __end_of___flge 3CFA  
                                      vfpfcnvrt@ap 0047                                        vfpfcnvrt@cp 004D  
                                      vfpfcnvrt@fp 0043                                        vfpfcnvrt@ll 0055  
                                   __end_of___wmul 05FA                                        vfpfcnvrt@vp 005D  
                                   __end_of_lcd_wr 7C78                             __end_of_serial_tx_char 7CB6  
                                   __end_of_roundf 27F0                                     __end_of_strlen 7E64  
                              start_initialization 7EE8                                    ___lodiv@divisor 0009  
                                  ___lodiv@counter 0019                                        __end_of_abs 0584  
                                      __end_of_pad 0126                                        vfprintf@fmt 006A  
                                         ??___flge 0009                           __end_of_desired_baudrate 0609  
                                         ??___wmul 0005                                           ??_lcd_wr 0001  
                                      __pdataBANK0 00C2                                           ??_roundf 001E  
                                         ??_strlen 0003                                    ?_serial_tx_char 0001  
                                        ___fladd@a 0005                                          ___fladd@b 0001  
                                     vsnprintf@cnt 00AE                                       vsnprintf@fmt 0074  
                                        ___flmul@a 0005                                          ___flmul@b 0001  
                                      __pbssCOMRAM 007D                                          ___flsub@a 0015  
                                        ___flsub@b 0011                                      __pcstackBANK0 00AC  
                                    __pcstackBANK1 0100                                   ___aodiv@dividend 0001  
                                      snprintf@fmt 00BA                                __size_of_init_PORTS 001E  
                              __size_of_init_USART 0040                                  __size_of_lcd_init 007E  
                                        _atoi$1357 0010                                          _atoi$1358 0014  
                                        _atoi$1359 0012                                          _dtoa$1181 002E  
                                        __pintcode 0008                                           ?___aodiv 0001  
                                         ?___fladd 0001                                           ?___aomod 0001  
                                 ___aodiv@quotient 0013                                           ?___flneg 0001  
                                         ?___flmul 0001                                           ?___flsub 0011  
                                         ?___fltol 0034                                           ?___lodiv 0001  
                                         ?___lomod 0001                                           ?_lcd_dat 0001  
                                         ?_lcd_cmd 0001                                  __size_of_vfprintf 0070  
                                         ?_lcd_str 0004                                  __size_of_snprintf 0034  
                                  ___lomod@divisor 0009                                        __smallconst 0600  
                                  ___lomod@counter 0011                                           ?_isalpha 0001  
                                         ?_isdigit 0001                                           ?_islower 0001  
                                         ?_isspace 0001                                           ?_isupper 0001  
                                   __size_of_fputc 00E2                                     __size_of_fputs 0050  
                                         ?_strncmp 0001                                           ?_toupper 0007  
                                   __size_of_putch 0006                                     ___wmul@product 0005  
                                         _LATBbits 000F8A                                           _PIE1bits 000F9D  
                                         _PIR1bits 000F9E                                           i2u507_40 001C  
                                         i2u507_41 0016                                           i2u508_40 002E  
                                         i2u508_41 0028                                          _vfpfcnvrt 0652  
                                        _xtoa$1217 002F                                          _xtoa$1218 0031  
                                ___wmul@multiplier 0001                                          lcd_wr@val 0001  
                                     _isspace$1385 0007                                         vfpfcnvrt@c 005F  
                                        copy_data0 7EFC                                          _vsnprintf 3962  
                                       roundf@F525 0080                                           __Hrparam 0000  
                        __size_of_serial_tx_string 004C                                       ??_init_PORTS 0001  
                                     ??_init_USART 003E                                         vfprintf@ap 006C  
                                         __Lrparam 0000                                         vfprintf@fp 0068  
                                 __size_of___aodiv 01B4                                   __size_of___fladd 05A8  
                                 __size_of___aomod 0190                                   __size_of___flneg 0042  
                                      vsnprintf@ap 0076                                   __size_of___flmul 04A4  
                                 __size_of___flsub 004A                                   __size_of___fltol 0136  
                                 __size_of___lodiv 010A                                   __size_of___lomod 00EA  
                                       ?_vfpfcnvrt 0043                                         snprintf@ap 00C0  
                                  ___aodiv@divisor 0009                                    ___aodiv@counter 0011  
                                 __size_of_lcd_dat 003A                                   __size_of_lcd_cmd 003A  
                                 __size_of_lcd_str 0046                                   __size_of_isalpha 0046  
                                 __size_of_isdigit 0042                                   __size_of_islower 0042  
                                 __size_of_isspace 0060                                           __ptext10 2E4C  
                                         __ptext11 3F0C                                           __ptext20 0422  
                                         __ptext12 3CFA                                           __ptext21 0044  
                                         __ptext13 3E04                                           __ptext30 0584  
                                         __ptext22 7E22                                           __ptext14 3466  
                                         __ptext31 7C96                                           __ptext23 04E8  
                                         __ptext15 3076                                           __ptext40 7FB6  
                                         __ptext32 7F2A                                           __ptext24 0126  
                                         __ptext16 27F0                                           __ptext41 19BE  
                                         __ptext33 7D24                                           __ptext25 3FF6  
                                         __ptext17 0538                                           __ptext42 7D9E  
                                         __ptext34 02C4                                           __ptext26 3298  
                                         __ptext18 37D2                                           __ptext43 1F66  
                                         __ptext35 7CEA                                           __ptext27 0488  
                                         __ptext19 361E                                           __ptext44 3BD2  
                                         __ptext36 7C6C                                           __ptext28 7DE0  
                                         __ptext45 3A9C                                           __ptext37 7C60  
                                         __ptext29 05D0                                           __ptext46 7C78  
                                         __ptext38 7D5E                                           __ptext39 240A  
                                 __size_of_isupper 0042                                 __end_of_init_PORTS 7C96  
                                         _lcd_init 02C4                                 __end_of_init_USART 7D9E  
                                 __size_of_strncmp 0108                                   __size_of_toupper 0070  
                                       ?_vsnprintf 0070                                        _new_char_rx 01A1  
                                    __size_of_atoi 01CE                                      __size_of_ctoa 0066  
                                    __size_of_main 00BC                                      __size_of_dtoa 0330  
                                    __size_of_otoa 0222                                      __size_of_stoa 01B8  
                                    __size_of_utoa 022A                                      __size_of_xtoa 032C  
                                        stoa@F1152 00C2                             __size_of_rx_char_usart 0038  
                         __size_of_init_interrupts 000C                                           int$flags 007F  
                                 ??_serial_tx_char 0001                                           _vfprintf 0342  
                                         _snprintf 7CB6                                           lcd_str@i 0006  
                                 ___aomod@dividend 0001                                     _vfpfcnvrt$1232 0051  
                                   _vfpfcnvrt$1233 0053                                         _INTCONbits 000FF2  
                                         isalpha@c 0001                                           isdigit@c 0001  
                                       vsnprintf@f 00B0                                         vsnprintf@n 0072  
                                       vsnprintf@s 0070                                          snprintf@n 00B8  
                                        snprintf@s 00B6                                           intlevel2 3FFC  
                                         islower@c 0001                                           isspace@c 0001  
                                         isupper@c 0001                                          strncmp@_l 0001  
                                        strncmp@_r 0003                                    ___aomod@divisor 0009  
                                      ??_vfpfcnvrt 0049                                           stoa@nuls 000F  
                                  ___aomod@counter 0011                                     _vsnprintf$1095 00AC  
                                         strncmp@l 0008                                           strncmp@n 0005  
                                         strncmp@r 000A                                           toupper@c 0007  
                                    _rx_char_usart 0008                                      ___fladd@signs 000D  
                                     ___aodiv@sign 0012                                        ??_vsnprintf 0078  
                                     ___fladd@aexp 000E                                       ___fladd@bexp 000F  
                                     ___aomod@sign 0012                                        _roundf$1674 0028  
                                      _roundf$1675 0022                                   _serial_tx_string 0584  
