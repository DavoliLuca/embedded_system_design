

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Jun 17 22:11:35 2023

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F452 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     
    60                           	psect	idataCOMRAM
    61  003CF8                     __pidataCOMRAM:
    62                           	callstack 0
    63                           
    64                           ;initializer for _hex_end_effector_values
    65  003CF8  10                 	db	16
    66  003CF9  20                 	db	32
    67  003CFA  40                 	db	64
    68  003CFB  80                 	db	128
    69                           
    70                           ;initializer for _hex_joint_values
    71  003CFC  01                 	db	1
    72  003CFD  02                 	db	2
    73  003CFE  04                 	db	4
    74  003CFF  08                 	db	8
    75                           
    76                           ;initializer for _pwm_period
    77                           ;timer.c: 5: static double const f_osc = 1000000;;timer.c: 6: static double const t_osc 
      +                          = 1/f_osc;;timer.c: 7: static double pwm_period = 20e-3;
    78  003D00  D70A               	dw	55050
    79  003D02  3CA3               	dw	15523
    80                           
    81                           ;initializer for _tosc
    82  003D04  37BD               	dw	14269
    83  003D06  3486               	dw	13446
    84                           
    85                           ;initializer for _tmr2_prescaler
    86  003D08  0000               	dw	0
    87  003D0A  4180               	dw	16768
    88                           
    89                           	psect	mediumconst
    90  007E90                     __pmediumconst:
    91                           	callstack 0
    92  007E90  00                 	db	0
    93  007E91  0000               	dw	0
    94  007E93  4B00               	dw	19200
    95  007E95                     __end_of_toint:
    96                           	callstack 0
    97  007E95                     lcd_update@F2151:
    98                           	callstack 0
    99  007E95  80                 	db	128
   100  007E96  C0                 	db	192
   101  007E97  94                 	db	148
   102  007E98  D4                 	db	212
   103  007E99                     __end_oflcd_update@F2151:
   104                           	callstack 0
   105  007E99  0000               	dw	0
   106  007E9B  4616               	dw	17942
   107  007E9D                     __end_of_desired_baudrate:
   108                           	callstack 0
   109  007E9D                     _const_msgs:
   110                           	callstack 0
   111  007E9D  49                 	db	73
   112  007E9E  44                 	db	68
   113  007E9F  4C                 	db	76
   114  007EA0  45                 	db	69
   115  007EA1  3A                 	db	58
   116  007EA2  20                 	db	32
   117  007EA3  77                 	db	119
   118  007EA4  61                 	db	97
   119  007EA5  69                 	db	105
   120  007EA6  74                 	db	116
   121  007EA7  69                 	db	105
   122  007EA8  6E                 	db	110
   123  007EA9  67                 	db	103
   124  007EAA  20                 	db	32
   125  007EAB  66                 	db	102
   126  007EAC  6F                 	db	111
   127  007EAD  72                 	db	114
   128  007EAE  00                 	db	0
   129  007EAF  00                 	db	0
   130  007EB0  00                 	db	0
   131  007EB1  76                 	db	118
   132  007EB2  69                 	db	105
   133  007EB3  61                 	db	97
   134  007EB4  6C                 	db	108
   135  007EB5  20                 	db	32
   136  007EB6  74                 	db	116
   137  007EB7  6F                 	db	111
   138  007EB8  20                 	db	32
   139  007EB9  62                 	db	98
   140  007EBA  65                 	db	101
   141  007EBB  20                 	db	32
   142  007EBC  70                 	db	112
   143  007EBD  6C                 	db	108
   144  007EBE  61                 	db	97
   145  007EBF  63                 	db	99
   146  007EC0  65                 	db	101
   147  007EC1  64                 	db	100
   148  007EC2  00                 	db	0
   149  007EC3  00                 	db	0
   150  007EC4  00                 	db	0
   151  007EC5  69                 	db	105
   152  007EC6  6E                 	db	110
   153  007EC7  20                 	db	32
   154  007EC8  69                 	db	105
   155  007EC9  6E                 	db	110
   156  007ECA  69                 	db	105
   157  007ECB  74                 	db	116
   158  007ECC  20                 	db	32
   159  007ECD  70                 	db	112
   160  007ECE  6F                 	db	111
   161  007ECF  73                 	db	115
   162  007ED0  00                 	db	0
   163  007ED1  00                 	db	0
   164  007ED2  00                 	db	0
   165  007ED3  00                 	db	0
   166  007ED4  00                 	db	0
   167  007ED5  00                 	db	0
   168  007ED6  00                 	db	0
   169  007ED7  00                 	db	0
   170  007ED8  00                 	db	0
   171  007ED9  00                 	db	0
   172  007EDA  00                 	db	0
   173  007EDB  00                 	db	0
   174  007EDC  00                 	db	0
   175  007EDD  00                 	db	0
   176  007EDE  00                 	db	0
   177  007EDF  00                 	db	0
   178  007EE0  00                 	db	0
   179  007EE1  00                 	db	0
   180  007EE2  00                 	db	0
   181  007EE3  00                 	db	0
   182  007EE4  00                 	db	0
   183  007EE5  00                 	db	0
   184  007EE6  00                 	db	0
   185  007EE7  00                 	db	0
   186  007EE8  00                 	db	0
   187  007EE9  00                 	db	0
   188  007EEA  00                 	db	0
   189  007EEB  00                 	db	0
   190  007EEC  00                 	db	0
   191  007EED  00                 	db	0
   192  007EEE  00                 	db	0
   193  007EEF  00                 	db	0
   194  007EF0  00                 	db	0
   195  007EF1  00                 	db	0
   196  007EF2  00                 	db	0
   197  007EF3  00                 	db	0
   198  007EF4  00                 	db	0
   199  007EF5  00                 	db	0
   200  007EF6  00                 	db	0
   201  007EF7  00                 	db	0
   202  007EF8  00                 	db	0
   203  007EF9  00                 	db	0
   204  007EFA  00                 	db	0
   205  007EFB  00                 	db	0
   206  007EFC  00                 	db	0
   207  007EFD  00                 	db	0
   208  007EFE  00                 	db	0
   209  007EFF  00                 	db	0
   210  007F00  00                 	db	0
   211  007F01  00                 	db	0
   212  007F02  00                 	db	0
   213  007F03  00                 	db	0
   214  007F04  00                 	db	0
   215  007F05  00                 	db	0
   216  007F06  00                 	db	0
   217  007F07  00                 	db	0
   218  007F08  00                 	db	0
   219  007F09  00                 	db	0
   220  007F0A  00                 	db	0
   221  007F0B  00                 	db	0
   222  007F0C  00                 	db	0
   223  007F0D  00                 	db	0
   224  007F0E  00                 	db	0
   225  007F0F  00                 	db	0
   226  007F10  00                 	db	0
   227  007F11  00                 	db	0
   228  007F12  00                 	db	0
   229  007F13  00                 	db	0
   230  007F14  00                 	db	0
   231  007F15  00                 	db	0
   232  007F16  00                 	db	0
   233  007F17  00                 	db	0
   234  007F18  00                 	db	0
   235  007F19  00                 	db	0
   236  007F1A  00                 	db	0
   237  007F1B  00                 	db	0
   238  007F1C  00                 	db	0
   239  007F1D  00                 	db	0
   240  007F1E  00                 	db	0
   241  007F1F  00                 	db	0
   242  007F20  00                 	db	0
   243  007F21  00                 	db	0
   244  007F22  00                 	db	0
   245  007F23  00                 	db	0
   246  007F24  00                 	db	0
   247  007F25  00                 	db	0
   248  007F26  00                 	db	0
   249  007F27  00                 	db	0
   250  007F28  00                 	db	0
   251  007F29  00                 	db	0
   252  007F2A  00                 	db	0
   253  007F2B  00                 	db	0
   254  007F2C  00                 	db	0
   255  007F2D  00                 	db	0
   256  007F2E  00                 	db	0
   257  007F2F  00                 	db	0
   258  007F30  00                 	db	0
   259  007F31  00                 	db	0
   260  007F32  00                 	db	0
   261  007F33  00                 	db	0
   262  007F34  00                 	db	0
   263  007F35  00                 	db	0
   264  007F36  00                 	db	0
   265  007F37  00                 	db	0
   266  007F38  00                 	db	0
   267  007F39  00                 	db	0
   268  007F3A  00                 	db	0
   269  007F3B  00                 	db	0
   270  007F3C  00                 	db	0
   271  007F3D  64                 	db	100
   272  007F3E  65                 	db	101
   273  007F3F  62                 	db	98
   274  007F40  75                 	db	117
   275  007F41  67                 	db	103
   276  007F42  00                 	db	0
   277  007F43  00                 	db	0
   278  007F44  00                 	db	0
   279  007F45  00                 	db	0
   280  007F46  00                 	db	0
   281  007F47  00                 	db	0
   282  007F48  00                 	db	0
   283  007F49  00                 	db	0
   284  007F4A  00                 	db	0
   285  007F4B  00                 	db	0
   286  007F4C  00                 	db	0
   287  007F4D  00                 	db	0
   288  007F4E  00                 	db	0
   289  007F4F  00                 	db	0
   290  007F50  00                 	db	0
   291  007F51  72                 	db	114
   292  007F52  69                 	db	105
   293  007F53  00                 	db	0
   294  007F54  00                 	db	0
   295  007F55  00                 	db	0
   296  007F56  00                 	db	0
   297  007F57  00                 	db	0
   298  007F58  00                 	db	0
   299  007F59  00                 	db	0
   300  007F5A  00                 	db	0
   301  007F5B  00                 	db	0
   302  007F5C  00                 	db	0
   303  007F5D  00                 	db	0
   304  007F5E  00                 	db	0
   305  007F5F  00                 	db	0
   306  007F60  00                 	db	0
   307  007F61  00                 	db	0
   308  007F62  00                 	db	0
   309  007F63  00                 	db	0
   310  007F64  00                 	db	0
   311  007F65  00                 	db	0
   312  007F66  00                 	db	0
   313  007F67  00                 	db	0
   314  007F68  00                 	db	0
   315  007F69  00                 	db	0
   316  007F6A  00                 	db	0
   317  007F6B  00                 	db	0
   318  007F6C  00                 	db	0
   319  007F6D  00                 	db	0
   320  007F6E  00                 	db	0
   321  007F6F  00                 	db	0
   322  007F70  00                 	db	0
   323  007F71  00                 	db	0
   324  007F72  00                 	db	0
   325  007F73  00                 	db	0
   326  007F74  00                 	db	0
   327  007F75  00                 	db	0
   328  007F76  00                 	db	0
   329  007F77  00                 	db	0
   330  007F78  00                 	db	0
   331  007F79  6A                 	db	106
   332  007F7A  65                 	db	101
   333  007F7B  65                 	db	101
   334  007F7C  70                 	db	112
   335  007F7D  00                 	db	0
   336  007F7E  00                 	db	0
   337  007F7F  00                 	db	0
   338  007F80  00                 	db	0
   339  007F81  00                 	db	0
   340  007F82  00                 	db	0
   341  007F83  00                 	db	0
   342  007F84  00                 	db	0
   343  007F85  00                 	db	0
   344  007F86  00                 	db	0
   345  007F87  00                 	db	0
   346  007F88  00                 	db	0
   347  007F89  00                 	db	0
   348  007F8A  00                 	db	0
   349  007F8B  00                 	db	0
   350  007F8C  00                 	db	0
   351  007F8D  00                 	db	0
   352  007F8E  00                 	db	0
   353  007F8F  00                 	db	0
   354  007F90  00                 	db	0
   355  007F91  00                 	db	0
   356  007F92  00                 	db	0
   357  007F93  00                 	db	0
   358  007F94  00                 	db	0
   359  007F95  00                 	db	0
   360  007F96  00                 	db	0
   361  007F97  00                 	db	0
   362  007F98  00                 	db	0
   363  007F99  00                 	db	0
   364  007F9A  00                 	db	0
   365  007F9B  00                 	db	0
   366  007F9C  00                 	db	0
   367  007F9D  00                 	db	0
   368  007F9E  00                 	db	0
   369  007F9F  00                 	db	0
   370  007FA0  00                 	db	0
   371  007FA1  00                 	db	0
   372  007FA2  00                 	db	0
   373  007FA3  00                 	db	0
   374  007FA4  00                 	db	0
   375  007FA5  00                 	db	0
   376  007FA6  00                 	db	0
   377  007FA7  00                 	db	0
   378  007FA8  00                 	db	0
   379  007FA9  00                 	db	0
   380  007FAA  00                 	db	0
   381  007FAB  00                 	db	0
   382  007FAC  00                 	db	0
   383  007FAD  00                 	db	0
   384  007FAE  00                 	db	0
   385  007FAF  00                 	db	0
   386  007FB0  00                 	db	0
   387  007FB1  00                 	db	0
   388  007FB2  00                 	db	0
   389  007FB3  00                 	db	0
   390  007FB4  00                 	db	0
   391  007FB5  00                 	db	0
   392  007FB6  00                 	db	0
   393  007FB7  00                 	db	0
   394  007FB8  00                 	db	0
   395  007FB9  00                 	db	0
   396  007FBA  00                 	db	0
   397  007FBB  00                 	db	0
   398  007FBC  00                 	db	0
   399  007FBD  00                 	db	0
   400  007FBE  00                 	db	0
   401  007FBF  00                 	db	0
   402  007FC0  00                 	db	0
   403  007FC1  00                 	db	0
   404  007FC2  00                 	db	0
   405  007FC3  00                 	db	0
   406  007FC4  00                 	db	0
   407  007FC5  00                 	db	0
   408  007FC6  00                 	db	0
   409  007FC7  00                 	db	0
   410  007FC8  00                 	db	0
   411  007FC9  00                 	db	0
   412  007FCA  00                 	db	0
   413  007FCB  00                 	db	0
   414  007FCC  00                 	db	0
   415  007FCD  00                 	db	0
   416  007FCE  00                 	db	0
   417  007FCF  00                 	db	0
   418  007FD0  00                 	db	0
   419  007FD1  00                 	db	0
   420  007FD2  00                 	db	0
   421  007FD3  00                 	db	0
   422  007FD4  00                 	db	0
   423  007FD5  00                 	db	0
   424  007FD6  00                 	db	0
   425  007FD7  00                 	db	0
   426  007FD8  00                 	db	0
   427  007FD9  00                 	db	0
   428  007FDA  00                 	db	0
   429  007FDB  00                 	db	0
   430  007FDC  00                 	db	0
   431  007FDD                     __end_of_const_msgs:
   432                           	callstack 0
   433  007FDD  37BD               	dw	14269
   434  007FDF  3586               	dw	13702
   435  007FE1                     __end_of_t_osc:
   436                           	callstack 0
   437  007FE1  2400               	dw	9216
   438  007FE3  4974               	dw	18804
   439  007FE5                     __end_of_f_osc:
   440                           	callstack 0
   441  007FE5  2400               	dw	9216
   442  007FE7  4A74               	dw	19060
   443  007FE9                     __end_of_fosc:
   444                           	callstack 0
   445  0000                     _ADCON1	set	4033
   446  0000                     _ADRESL	set	4035
   447  0000                     _ADRESH	set	4036
   448  0000                     _ADCON0bits	set	4034
   449  0000                     _ADCON0	set	4034
   450  0000                     _CCPR1L	set	4030
   451  0000                     _CCP1CONbits	set	4029
   452  0000                     _CCP1CON	set	4029
   453  0000                     _PR2	set	4043
   454  0000                     _T2CONbits	set	4042
   455  0000                     _TMR2	set	4044
   456  0000                     _T2CON	set	4042
   457  0000                     _T0CONbits	set	4053
   458  0000                     _TMR0H	set	4055
   459  0000                     _TMR0L	set	4054
   460  0000                     _T0CON	set	4053
   461  0000                     _PORTEbits	set	3972
   462  0000                     _PORTD	set	3971
   463  0000                     _INTCONbits	set	4082
   464  0000                     _PIE1bits	set	3997
   465  0000                     _PIR1bits	set	3998
   466  0000                     _TRISCbits	set	3988
   467  0000                     _TRISC	set	3988
   468  0000                     _PORTC	set	3970
   469  0000                     _LATC	set	3979
   470  0000                     _TRISB	set	3987
   471  0000                     _PORTB	set	3969
   472  0000                     _LATB	set	3978
   473  0000                     _TRISA	set	3986
   474  0000                     _PORTA	set	3968
   475  0000                     _LATA	set	3977
   476  0000                     _RCREG	set	4014
   477  0000                     _TXREG	set	4013
   478  0000                     _RCSTAbits	set	4011
   479  0000                     _TXSTAbits	set	4012
   480  0000                     _SPBRG	set	4015
   481  007FE9                     STR_1:
   482  007FE9  44                 	db	68	;'D'
   483  007FEA  65                 	db	101	;'e'
   484  007FEB  76                 	db	118	;'v'
   485  007FEC  69                 	db	105	;'i'
   486  007FED  63                 	db	99	;'c'
   487  007FEE  65                 	db	101	;'e'
   488  007FEF  20                 	db	32
   489  007FF0  68                 	db	104	;'h'
   490  007FF1  61                 	db	97	;'a'
   491  007FF2  73                 	db	115	;'s'
   492  007FF3  20                 	db	32
   493  007FF4  62                 	db	98	;'b'
   494  007FF5  65                 	db	101	;'e'
   495  007FF6  65                 	db	101	;'e'
   496  007FF7  6E                 	db	110	;'n'
   497  007FF8  20                 	db	32
   498  007FF9  72                 	db	114	;'r'
   499  007FFA  65                 	db	101	;'e'
   500  007FFB  73                 	db	115	;'s'
   501  007FFC  65                 	db	101	;'e'
   502  007FFD  74                 	db	116	;'t'
   503  007FFE  00                 	db	0
   504  007FFF  00                 	db	0	; dummy byte at the end
   505  0000                     
   506                           ; #config settings
   507                           
   508                           	psect	cinit
   509  003DB6                     __pcinit:
   510                           	callstack 0
   511  003DB6                     start_initialization:
   512                           	callstack 0
   513  003DB6                     __initialization:
   514                           	callstack 0
   515                           
   516                           ; Initialize objects allocated to COMRAM (20 bytes)
   517                           ; load TBLPTR registers with __pidataCOMRAM
   518  003DB6  0EF8               	movlw	low __pidataCOMRAM
   519  003DB8  6EF6               	movwf	tblptrl,c
   520  003DBA  0E3C               	movlw	high __pidataCOMRAM
   521  003DBC  6EF7               	movwf	tblptrh,c
   522  003DBE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   523  003DC0  6EF8               	movwf	tblptru,c
   524  003DC2  EE00  F02C         	lfsr	0,__pdataCOMRAM
   525  003DC6  EE10 F014          	lfsr	1,20
   526  003DCA                     copy_data0:
   527  003DCA  0009               	tblrd		*+
   528  003DCC  CFF5 FFEE          	movff	tablat,postinc0
   529  003DD0  50E5               	movf	postdec1,w,c
   530  003DD2  50E1               	movf	fsr1l,w,c
   531  003DD4  E1FA               	bnz	copy_data0
   532                           
   533                           ; Clear objects allocated to COMRAM (20 bytes)
   534  003DD6  EE00  F018         	lfsr	0,__pbssCOMRAM
   535  003DDA  0E14               	movlw	20
   536  003DDC                     clear_0:
   537  003DDC  6AEE               	clrf	postinc0,c
   538  003DDE  06E8               	decf	wreg,f,c
   539  003DE0  E1FD               	bnz	clear_0
   540  003DE2                     end_of_initialization:
   541                           	callstack 0
   542  003DE2                     __end_of__initialization:
   543                           	callstack 0
   544  003DE2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   545  003DE4  6EF8               	movwf	tblptru,c
   546  003DE6  0100               	movlb	0
   547  003DE8  EF26  F01F         	goto	_main	;jump to C main() function
   548                           
   549                           	psect	bssCOMRAM
   550  000018                     __pbssCOMRAM:
   551                           	callstack 0
   552  000018                     _joint_stepper:
   553                           	callstack 0
   554  000018                     	ds	12
   555  000024                     	ds	4
   556  000028                     _temperature_scaled:
   557                           	callstack 0
   558  000028                     	ds	2
   559  00002A                     _temperature_int:
   560                           	callstack 0
   561  00002A                     	ds	2
   562                           
   563                           	psect	dataCOMRAM
   564  00002C                     __pdataCOMRAM:
   565                           	callstack 0
   566  00002C                     _hex_end_effector_values:
   567                           	callstack 0
   568  00002C                     	ds	4
   569  000030                     _hex_joint_values:
   570                           	callstack 0
   571  000030                     	ds	4
   572  000034                     	ds	4
   573  000038                     	ds	4
   574  00003C                     _tmr2_prescaler:
   575                           	callstack 0
   576  00003C                     	ds	4
   577                           
   578                           	psect	cstackCOMRAM
   579  000001                     __pcstackCOMRAM:
   580                           	callstack 0
   581  000001                     ?___wmul:
   582                           	callstack 0
   583  000001                     lcd_wr@val:
   584                           	callstack 0
   585  000001                     ___wmul@multiplier:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x0
   589  000001                     	ds	1
   590  000002                     lcd_cmd@val:
   591                           	callstack 0
   592  000002                     lcd_dat@val:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0x1
   596  000002                     	ds	1
   597  000003                     ??_lcd_init:
   598  000003                     ___wmul@multiplicand:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x2
   602  000003                     	ds	2
   603  000005                     ___wmul@product:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x4
   607  000005                     	ds	2
   608  000007                     lcd_str@str:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x6
   612  000007                     	ds	2
   613  000009                     ??_lcd_str:
   614                           
   615                           ; 1 bytes @ 0x8
   616  000009                     	ds	2
   617  00000B                     lcd_str@i:
   618                           	callstack 0
   619                           
   620                           ; 1 bytes @ 0xA
   621  00000B                     	ds	1
   622  00000C                     lcd_update@state:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0xB
   626  00000C                     	ds	2
   627  00000E                     ??_lcd_update:
   628                           
   629                           ; 1 bytes @ 0xD
   630  00000E                     	ds	2
   631  000010                     lcd_update@line_select:
   632                           	callstack 0
   633                           
   634                           ; 4 bytes @ 0xF
   635  000010                     	ds	4
   636  000014                     lcd_update@i:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x13
   640  000014                     	ds	2
   641  000016                     ??_main:
   642                           
   643                           ; 1 bytes @ 0x15
   644  000016                     	ds	2
   645                           
   646 ;;
   647 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   648 ;;
   649 ;; *************** function _main *****************
   650 ;; Defined at:
   651 ;;		line 26 in file "debug.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;		None
   654 ;; Auto vars:     Size  Location     Type
   655 ;;		None
   656 ;; Return value:  Size  Location     Type
   657 ;;                  1    wreg      void 
   658 ;; Registers used:
   659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   660 ;; Tracked objects:
   661 ;;		On entry : 0/0
   662 ;;		On exit  : 0/0
   663 ;;		Unchanged: 0/0
   664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   665 ;;      Params:         0       0       0       0       0       0       0
   666 ;;      Locals:         0       0       0       0       0       0       0
   667 ;;      Temps:          2       0       0       0       0       0       0
   668 ;;      Totals:         2       0       0       0       0       0       0
   669 ;;Total ram usage:        2 bytes
   670 ;; Hardware stack levels required when called:    4
   671 ;; This function calls:
   672 ;;		_init_PORTS
   673 ;;		_lcd_cmd
   674 ;;		_lcd_init
   675 ;;		_lcd_str
   676 ;;		_lcd_update
   677 ;; This function is called by:
   678 ;;		Startup code after reset
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           	psect	text0
   683  003E4C                     __ptext0:
   684                           	callstack 0
   685  003E4C                     _main:
   686                           	callstack 27
   687  003E4C  FFFF               	dw	65535	; assembler added errata NOP
   688                           
   689                           ;debug.c: 27:     init_PORTS();
   690  003E4E  ECC5  F01E         	call	_init_PORTS	;wreg free
   691                           
   692                           ;debug.c: 29:     lcd_init();
   693  003E52  EC63  F01F         	call	_lcd_init	;wreg free
   694                           
   695                           ;debug.c: 30:     lcd_cmd(0x0C);
   696  003E56  0E0C               	movlw	12
   697  003E58  EC86  F01E         	call	_lcd_cmd
   698                           
   699                           ;debug.c: 32:     lcd_cmd(0x01);
   700  003E5C  0E01               	movlw	1
   701  003E5E  EC86  F01E         	call	_lcd_cmd
   702                           
   703                           ;debug.c: 33:     lcd_cmd(0x80);
   704  003E62  0E80               	movlw	128
   705  003E64  EC86  F01E         	call	_lcd_cmd
   706  003E68                     
   707                           ;debug.c: 34:     lcd_str("Device has been reset");
   708  003E68  0EE9               	movlw	low STR_1
   709  003E6A  6E07               	movwf	lcd_str@str^0,c
   710  003E6C  0E7F               	movlw	high STR_1
   711  003E6E  6E08               	movwf	(lcd_str@str+1)^0,c
   712  003E70  ECF6  F01E         	call	_lcd_str	;wreg free
   713  003E74                     l1345:
   714  003E74  FFFF               	dw	65535	; assembler added errata NOP
   715                           
   716                           ;debug.c: 37:         lcd_update(0);
   717  003E76  0E00               	movlw	0
   718  003E78  6E0D               	movwf	(lcd_update@state+1)^0,c
   719  003E7A  0E00               	movlw	0
   720  003E7C  6E0C               	movwf	lcd_update@state^0,c
   721  003E7E  ECA2  F01F         	call	_lcd_update	;wreg free
   722  003E82                     
   723                           ;debug.c: 38:         _delay((unsigned long)((2000)*(4000000/4000.0)));
   724  003E82  0E08               	movlw	8
   725  003E84  6E17               	movwf	(??_main+1)^0,c
   726  003E86  0E9E               	movlw	158
   727  003E88  6E16               	movwf	??_main^0,c
   728  003E8A  0E4C               	movlw	76
   729  003E8C                     u257:
   730  003E8C  FFFF               	dw	65535	; errata NOP
   731  003E8E  2EE8               	decfsz	wreg,f,c
   732  003E90  D7FD               	bra	u257
   733  003E92  2E16               	decfsz	??_main^0,f,c
   734  003E94  D7FB               	bra	u257
   735  003E96  2E17               	decfsz	(??_main+1)^0,f,c
   736  003E98  D7F9               	bra	u257
   737  003E9A                     
   738                           ;debug.c: 39:         lcd_update(1);
   739  003E9A  0E00               	movlw	0
   740  003E9C  6E0D               	movwf	(lcd_update@state+1)^0,c
   741  003E9E  0E01               	movlw	1
   742  003EA0  6E0C               	movwf	lcd_update@state^0,c
   743  003EA2  ECA2  F01F         	call	_lcd_update	;wreg free
   744  003EA6                     
   745                           ;debug.c: 40:         _delay((unsigned long)((2000)*(4000000/4000.0)));
   746  003EA6  0E08               	movlw	8
   747  003EA8  6E17               	movwf	(??_main+1)^0,c
   748  003EAA  0E9E               	movlw	158
   749  003EAC  6E16               	movwf	??_main^0,c
   750  003EAE  0E4C               	movlw	76
   751  003EB0                     u267:
   752  003EB0  FFFF               	dw	65535	; errata NOP
   753  003EB2  2EE8               	decfsz	wreg,f,c
   754  003EB4  D7FD               	bra	u267
   755  003EB6  2E16               	decfsz	??_main^0,f,c
   756  003EB8  D7FB               	bra	u267
   757  003EBA  2E17               	decfsz	(??_main+1)^0,f,c
   758  003EBC  D7F9               	bra	u267
   759  003EBE  EF3A  F01F         	goto	l1345
   760  003EC2  EF01  F000         	goto	start
   761  003EC6                     __end_of_main:
   762                           	callstack 0
   763                           
   764 ;; *************** function _lcd_update *****************
   765 ;; Defined at:
   766 ;;		line 95 in file "lcd.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;  state           2   11[COMRAM] int 
   769 ;; Auto vars:     Size  Location     Type
   770 ;;  i               2   19[COMRAM] int 
   771 ;;  line_select     4   15[COMRAM] const unsigned char [4]
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   781 ;;      Params:         2       0       0       0       0       0       0
   782 ;;      Locals:         6       0       0       0       0       0       0
   783 ;;      Temps:          2       0       0       0       0       0       0
   784 ;;      Totals:        10       0       0       0       0       0       0
   785 ;;Total ram usage:       10 bytes
   786 ;; Hardware stack levels used:    1
   787 ;; Hardware stack levels required when called:    3
   788 ;; This function calls:
   789 ;;		___wmul
   790 ;;		_lcd_cmd
   791 ;;		_lcd_str
   792 ;; This function is called by:
   793 ;;		_main
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           	psect	text1
   798  003F44                     __ptext1:
   799                           	callstack 0
   800  003F44                     _lcd_update:
   801                           	callstack 0
   802  003F44  FFFF               	dw	65535	; assembler added errata NOP
   803  003F46                     
   804                           ;lcd.c: 96:     lcd_cmd(0x01);
   805  003F46  0E01               	movlw	1
   806  003F48  EC86  F01E         	call	_lcd_cmd
   807  003F4C                     
   808                           ;lcd.c: 97:     const char line_select[4] = {0x80, 0xC0, 0x94, 0xD4};
   809  003F4C  0E95               	movlw	low lcd_update@F2151
   810  003F4E  6EF6               	movwf	tblptrl,c
   811  003F50                     	if	1	;There is more than 1 active tblptr byte
   812  003F50  0E7E               	movlw	high lcd_update@F2151
   813  003F52  6EF7               	movwf	tblptrh,c
   814  003F54                     	endif
   815  003F54                     	if	0	;There are less than 3 active tblptr bytes
   816  003F54                     	endif
   817  003F54  0009               	tblrd		*+
   818  003F56  FFFF               	dw	65535	; errata NOP
   819  003F58  CFF5 F010          	movff	tablat,lcd_update@line_select
   820  003F5C  0009               	tblrd		*+
   821  003F5E  FFFF               	dw	65535	; errata NOP
   822  003F60  CFF5 F011          	movff	tablat,lcd_update@line_select+1
   823  003F64  0009               	tblrd		*+
   824  003F66  FFFF               	dw	65535	; errata NOP
   825  003F68  CFF5 F012          	movff	tablat,lcd_update@line_select+2
   826  003F6C  000A               	tblrd		*-
   827  003F6E  FFFF               	dw	65535	; errata NOP
   828  003F70  CFF5 F013          	movff	tablat,lcd_update@line_select+3
   829  003F74                     
   830                           ;lcd.c: 98:     for (int i=0;i<4;i++ ){
   831  003F74  0E00               	movlw	0
   832  003F76  6E15               	movwf	(lcd_update@i+1)^0,c
   833  003F78  0E00               	movlw	0
   834  003F7A  6E14               	movwf	lcd_update@i^0,c
   835  003F7C                     l1333:
   836  003F7C  FFFF               	dw	65535	; assembler added errata NOP
   837                           
   838                           ;lcd.c: 99:         lcd_cmd(line_select[i]);
   839  003F7E  0E10               	movlw	low lcd_update@line_select
   840  003F80  2414               	addwf	lcd_update@i^0,w,c
   841  003F82  6ED9               	movwf	fsr2l,c
   842  003F84  0E00               	movlw	high lcd_update@line_select
   843  003F86  2015               	addwfc	(lcd_update@i+1)^0,w,c
   844  003F88  6EDA               	movwf	fsr2h,c
   845  003F8A  50DF               	movf	indf2,w,c
   846  003F8C  EC86  F01E         	call	_lcd_cmd
   847  003F90                     
   848                           ;lcd.c: 100:         lcd_str(const_msgs[state][i]);
   849  003F90  C00C  F001         	movff	lcd_update@state,___wmul@multiplier
   850  003F94  C00D  F002         	movff	lcd_update@state+1,___wmul@multiplier+1
   851  003F98  0E00               	movlw	0
   852  003F9A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   853  003F9C  0EA0               	movlw	160
   854  003F9E  6E03               	movwf	___wmul@multiplicand^0,c
   855  003FA0  EC9B  F01E         	call	___wmul	;wreg free
   856  003FA4  0E9D               	movlw	low _const_msgs
   857  003FA6  6E0E               	movwf	??_lcd_update^0,c
   858  003FA8  0E7E               	movlw	high _const_msgs
   859  003FAA  6E0F               	movwf	(??_lcd_update+1)^0,c
   860  003FAC  5001               	movf	?___wmul^0,w,c
   861  003FAE  260E               	addwf	??_lcd_update^0,f,c
   862  003FB0  5002               	movf	(?___wmul+1)^0,w,c
   863  003FB2  220F               	addwfc	(??_lcd_update+1)^0,f,c
   864  003FB4  C014  F001         	movff	lcd_update@i,___wmul@multiplier
   865  003FB8  C015  F002         	movff	lcd_update@i+1,___wmul@multiplier+1
   866  003FBC  0E00               	movlw	0
   867  003FBE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   868  003FC0  0E14               	movlw	20
   869  003FC2  6E03               	movwf	___wmul@multiplicand^0,c
   870  003FC4  EC9B  F01E         	call	___wmul	;wreg free
   871  003FC8  5001               	movf	?___wmul^0,w,c
   872  003FCA  240E               	addwf	??_lcd_update^0,w,c
   873  003FCC  6E07               	movwf	lcd_str@str^0,c
   874  003FCE  5002               	movf	(?___wmul+1)^0,w,c
   875  003FD0  200F               	addwfc	(??_lcd_update+1)^0,w,c
   876  003FD2  6E08               	movwf	(lcd_str@str+1)^0,c
   877  003FD4  ECF6  F01E         	call	_lcd_str	;wreg free
   878  003FD8                     
   879                           ;lcd.c: 101:     }
   880  003FD8  4A14               	infsnz	lcd_update@i^0,f,c
   881  003FDA  2A15               	incf	(lcd_update@i+1)^0,f,c
   882  003FDC  BE15               	btfsc	(lcd_update@i+1)^0,7,c
   883  003FDE  EFFA  F01F         	goto	u241
   884  003FE2  5015               	movf	(lcd_update@i+1)^0,w,c
   885  003FE4  E10A               	bnz	u240
   886  003FE6  0E04               	movlw	4
   887  003FE8  5C14               	subwf	lcd_update@i^0,w,c
   888  003FEA  A0D8               	btfss	status,0,c
   889  003FEC  EFFA  F01F         	goto	u241
   890  003FF0  EFFD  F01F         	goto	u240
   891  003FF4                     u241:
   892  003FF4  FFFF               	dw	65535	; assembler added errata NOP
   893  003FF6  EFBE  F01F         	goto	l1333
   894  003FFA                     u240:
   895  003FFA  FFFF               	dw	65535	; assembler added errata NOP
   896  003FFC  0012               	return		;funcret
   897  003FFE  FFFF               	dw	65535	; errata NOP
   898  004000                     __end_of_lcd_update:
   899                           	callstack 0
   900                           
   901 ;; *************** function _lcd_str *****************
   902 ;; Defined at:
   903 ;;		line 67 in file "lcd.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;  str             2    6[COMRAM] PTR const unsigned char 
   906 ;;		 -> STR_1(22), const_msgs(320), 
   907 ;; Auto vars:     Size  Location     Type
   908 ;;  i               1   10[COMRAM] unsigned char 
   909 ;; Return value:  Size  Location     Type
   910 ;;                  1    wreg      void 
   911 ;; Registers used:
   912 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   918 ;;      Params:         2       0       0       0       0       0       0
   919 ;;      Locals:         1       0       0       0       0       0       0
   920 ;;      Temps:          2       0       0       0       0       0       0
   921 ;;      Totals:         5       0       0       0       0       0       0
   922 ;;Total ram usage:        5 bytes
   923 ;; Hardware stack levels used:    1
   924 ;; Hardware stack levels required when called:    2
   925 ;; This function calls:
   926 ;;		_lcd_dat
   927 ;; This function is called by:
   928 ;;		_lcd_update
   929 ;;		_main
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           	psect	text2
   934  003DEC                     __ptext2:
   935                           	callstack 0
   936  003DEC                     _lcd_str:
   937                           	callstack 0
   938  003DEC  FFFF               	dw	65535	; assembler added errata NOP
   939  003DEE                     
   940                           ;lcd.c: 67: void lcd_str(const char* str);lcd.c: 68: {;lcd.c: 69:     unsigned char i=0;
   941  003DEE  0E00               	movlw	0
   942  003DF0  6E0B               	movwf	lcd_str@i^0,c
   943                           
   944                           ;lcd.c: 71:     while(str[i] != 0 )
   945  003DF2  EF0C  F01F         	goto	l1315
   946  003DF6                     l1311:
   947  003DF6  FFFF               	dw	65535	; assembler added errata NOP
   948                           
   949                           ;lcd.c: 72:     {;lcd.c: 73:       lcd_dat(str[i]);
   950  003DF8  500B               	movf	lcd_str@i^0,w,c
   951  003DFA  2407               	addwf	lcd_str@str^0,w,c
   952  003DFC  6E09               	movwf	??_lcd_str^0,c
   953  003DFE  0E00               	movlw	0
   954  003E00  2008               	addwfc	(lcd_str@str+1)^0,w,c
   955  003E02  6E0A               	movwf	(??_lcd_str+1)^0,c
   956  003E04  C009  FFF6         	movff	??_lcd_str,tblptrl
   957  003E08  C00A  FFF7         	movff	??_lcd_str+1,tblptrh
   958  003E0C                     	if	0	;tblptru may be non-zero
   959  003E0C                     	endif
   960  003E0C                     	if	0	;tblptru may be non-zero
   961  003E0C                     	endif
   962  003E0C  0008               	tblrd		*
   963  003E0E  FFFF               	dw	65535	; errata NOP
   964  003E10  50F5               	movf	tablat,w,c
   965  003E12  ECB0  F01E         	call	_lcd_dat
   966  003E16                     
   967                           ;lcd.c: 74:       i++;
   968  003E16  2A0B               	incf	lcd_str@i^0,f,c
   969  003E18                     l1315:
   970  003E18  FFFF               	dw	65535	; assembler added errata NOP
   971                           
   972                           ;lcd.c: 71:     while(str[i] != 0 )
   973  003E1A  500B               	movf	lcd_str@i^0,w,c
   974  003E1C  2407               	addwf	lcd_str@str^0,w,c
   975  003E1E  6E09               	movwf	??_lcd_str^0,c
   976  003E20  0E00               	movlw	0
   977  003E22  2008               	addwfc	(lcd_str@str+1)^0,w,c
   978  003E24  6E0A               	movwf	(??_lcd_str+1)^0,c
   979  003E26  C009  FFF6         	movff	??_lcd_str,tblptrl
   980  003E2A  C00A  FFF7         	movff	??_lcd_str+1,tblptrh
   981  003E2E                     	if	0	;tblptru may be non-zero
   982  003E2E                     	endif
   983  003E2E                     	if	0	;tblptru may be non-zero
   984  003E2E                     	endif
   985  003E2E  0008               	tblrd		*
   986  003E30  FFFF               	dw	65535	; errata NOP
   987  003E32  50F5               	movf	tablat,w,c
   988  003E34  0900               	iorlw	0
   989  003E36  A4D8               	btfss	status,2,c
   990  003E38  EF20  F01F         	goto	u231
   991  003E3C  EF23  F01F         	goto	u230
   992  003E40                     u231:
   993  003E40  FFFF               	dw	65535	; assembler added errata NOP
   994  003E42  EFFB  F01E         	goto	l1311
   995  003E46                     u230:
   996  003E46  FFFF               	dw	65535	; assembler added errata NOP
   997  003E48  0012               	return		;funcret
   998  003E4A  FFFF               	dw	65535	; errata NOP
   999  003E4C                     __end_of_lcd_str:
  1000                           	callstack 0
  1001                           
  1002 ;; *************** function _lcd_dat *****************
  1003 ;; Defined at:
  1004 ;;		line 26 in file "lcd.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;  val             1    wreg     unsigned char 
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;  val             1    1[COMRAM] unsigned char 
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, status,2, cstack
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1018 ;;      Params:         0       0       0       0       0       0       0
  1019 ;;      Locals:         1       0       0       0       0       0       0
  1020 ;;      Temps:          0       0       0       0       0       0       0
  1021 ;;      Totals:         1       0       0       0       0       0       0
  1022 ;;Total ram usage:        1 bytes
  1023 ;; Hardware stack levels used:    1
  1024 ;; Hardware stack levels required when called:    1
  1025 ;; This function calls:
  1026 ;;		_lcd_wr
  1027 ;; This function is called by:
  1028 ;;		_lcd_str
  1029 ;;		_state_translator_fpga_to_micro
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033                           	psect	text3
  1034  003D60                     __ptext3:
  1035                           	callstack 0
  1036  003D60                     _lcd_dat:
  1037                           	callstack 0
  1038  003D60  FFFF               	dw	65535	; assembler added errata NOP
  1039                           
  1040                           ;incstack = 0
  1041                           ;lcd_dat@val stored from wreg
  1042  003D62  6E02               	movwf	lcd_dat@val^0,c
  1043  003D64                     
  1044                           ;lcd.c: 26: void lcd_dat(unsigned char val);lcd.c: 27: {;lcd.c: 28:  PORTEbits.RE1=1;
  1045  003D64  8284               	bsf	132,1,c	;volatile
  1046  003D66                     
  1047                           ;lcd.c: 29:     lcd_wr(val);
  1048  003D66  5002               	movf	lcd_dat@val^0,w,c
  1049  003D68  EC76  F01E         	call	_lcd_wr
  1050  003D6C                     
  1051                           ;lcd.c: 30:     PORTEbits.RE2=1;
  1052  003D6C  8484               	bsf	132,2,c	;volatile
  1053  003D6E                     
  1054                           ;lcd.c: 31:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1055  003D6E  0EC8               	movlw	200
  1056  003D70                     u277:
  1057  003D70  FFFF               	dw	65535	; errata NOP
  1058  003D72  F000               	nop	
  1059  003D74  2EE8               	decfsz	wreg,f,c
  1060  003D76  D7FC               	bra	u277
  1061  003D78                     
  1062                           ;lcd.c: 32:     PORTEbits.RE1=0;
  1063  003D78  9284               	bcf	132,1,c	;volatile
  1064  003D7A                     
  1065                           ;lcd.c: 33:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1066  003D7A  0EC8               	movlw	200
  1067  003D7C                     u287:
  1068  003D7C  FFFF               	dw	65535	; errata NOP
  1069  003D7E  F000               	nop	
  1070  003D80  2EE8               	decfsz	wreg,f,c
  1071  003D82  D7FC               	bra	u287
  1072  003D84                     
  1073                           ;lcd.c: 34:  PORTEbits.RE1=1;
  1074  003D84  8284               	bsf	132,1,c	;volatile
  1075  003D86  0012               	return		;funcret
  1076  003D88  FFFF               	dw	65535	; errata NOP
  1077  003D8A                     __end_of_lcd_dat:
  1078                           	callstack 0
  1079                           
  1080 ;; *************** function ___wmul *****************
  1081 ;; Defined at:
  1082 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;  multiplier      2    0[COMRAM] unsigned int 
  1085 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;  product         2    4[COMRAM] unsigned int 
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  2    0[COMRAM] unsigned int 
  1090 ;; Registers used:
  1091 ;;		wreg, status,2, status,0, prodl, prodh
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1097 ;;      Params:         4       0       0       0       0       0       0
  1098 ;;      Locals:         2       0       0       0       0       0       0
  1099 ;;      Temps:          0       0       0       0       0       0       0
  1100 ;;      Totals:         6       0       0       0       0       0       0
  1101 ;;Total ram usage:        6 bytes
  1102 ;; Hardware stack levels used:    1
  1103 ;; This function calls:
  1104 ;;		Nothing
  1105 ;; This function is called by:
  1106 ;;		_lcd_update
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           	psect	text4
  1111  003D36                     __ptext4:
  1112                           	callstack 0
  1113  003D36                     ___wmul:
  1114                           	callstack 0
  1115  003D36  FFFF               	dw	65535	; assembler added errata NOP
  1116  003D38  5001               	movf	___wmul@multiplier^0,w,c
  1117  003D3A  0203               	mulwf	___wmul@multiplicand^0,c
  1118  003D3C  CFF3 F005          	movff	prodl,___wmul@product
  1119  003D40  CFF4 F006          	movff	prodh,___wmul@product+1
  1120  003D44  5001               	movf	___wmul@multiplier^0,w,c
  1121  003D46  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1122  003D48  50F3               	movf	243,w,c
  1123  003D4A  2606               	addwf	(___wmul@product+1)^0,f,c
  1124  003D4C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1125  003D4E  0203               	mulwf	___wmul@multiplicand^0,c
  1126  003D50  50F3               	movf	243,w,c
  1127  003D52  2606               	addwf	(___wmul@product+1)^0,f,c
  1128  003D54  C005  F001         	movff	___wmul@product,?___wmul
  1129  003D58  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1130  003D5C  0012               	return		;funcret
  1131  003D5E  FFFF               	dw	65535	; errata NOP
  1132  003D60                     __end_of___wmul:
  1133                           	callstack 0
  1134                           
  1135 ;; *************** function _lcd_init *****************
  1136 ;; Defined at:
  1137 ;;		line 37 in file "lcd.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;		None
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;		None
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  1    wreg      void 
  1144 ;; Registers used:
  1145 ;;		wreg, status,2, cstack
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1151 ;;      Params:         0       0       0       0       0       0       0
  1152 ;;      Locals:         0       0       0       0       0       0       0
  1153 ;;      Temps:          1       0       0       0       0       0       0
  1154 ;;      Totals:         1       0       0       0       0       0       0
  1155 ;;Total ram usage:        1 bytes
  1156 ;; Hardware stack levels used:    1
  1157 ;; Hardware stack levels required when called:    2
  1158 ;; This function calls:
  1159 ;;		_lcd_cmd
  1160 ;; This function is called by:
  1161 ;;		_main
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           	psect	text5
  1166  003EC6                     __ptext5:
  1167                           	callstack 0
  1168  003EC6                     _lcd_init:
  1169                           	callstack 0
  1170  003EC6  FFFF               	dw	65535	; assembler added errata NOP
  1171  003EC8  6A83               	clrf	3971,c	;# 
  1172  003ECA  0E00               	movlw	0	;# 
  1173  003ECC  6E95               	movwf	3989,c	;# 
  1174  003ECE  6A84               	clrf	3972,c	;# 
  1175  003ED0  0E00               	movlw	0	;# 
  1176  003ED2  6E96               	movwf	3990,c	;# 
  1177                           
  1178                           ;lcd.c: 50:  PORTEbits.RE1=0;
  1179  003ED4  9284               	bcf	132,1,c	;volatile
  1180                           
  1181                           ;lcd.c: 51:  PORTEbits.RE2=0;
  1182  003ED6  9484               	bcf	132,2,c	;volatile
  1183  003ED8                     
  1184                           ;lcd.c: 52:  _delay((unsigned long)((30)*(4000000/4000.0)));
  1185  003ED8  0E1E               	movlw	30
  1186  003EDA  6E03               	movwf	??_lcd_init^0,c
  1187  003EDC  0E3C               	movlw	60
  1188  003EDE                     u297:
  1189  003EDE  FFFF               	dw	65535	; errata NOP
  1190  003EE0  2EE8               	decfsz	wreg,f,c
  1191  003EE2  D7FD               	bra	u297
  1192  003EE4  2E03               	decfsz	??_lcd_init^0,f,c
  1193  003EE6  D7FB               	bra	u297
  1194  003EE8  D000               	nop2	
  1195  003EEA                     
  1196                           ;lcd.c: 53:  PORTEbits.RE1=1;
  1197  003EEA  8284               	bsf	132,1,c	;volatile
  1198  003EEC                     
  1199                           ;lcd.c: 55:  lcd_cmd(0x38);
  1200  003EEC  0E38               	movlw	56
  1201  003EEE  EC86  F01E         	call	_lcd_cmd
  1202  003EF2                     
  1203                           ;lcd.c: 56:  _delay((unsigned long)((30)*(4000000/4000.0)));
  1204  003EF2  0E1E               	movlw	30
  1205  003EF4  6E03               	movwf	??_lcd_init^0,c
  1206  003EF6  0E3C               	movlw	60
  1207  003EF8                     u307:
  1208  003EF8  FFFF               	dw	65535	; errata NOP
  1209  003EFA  2EE8               	decfsz	wreg,f,c
  1210  003EFC  D7FD               	bra	u307
  1211  003EFE  2E03               	decfsz	??_lcd_init^0,f,c
  1212  003F00  D7FB               	bra	u307
  1213  003F02  D000               	nop2	
  1214                           
  1215                           ;lcd.c: 57:  lcd_cmd(0x38);
  1216  003F04  0E38               	movlw	56
  1217  003F06  EC86  F01E         	call	_lcd_cmd
  1218  003F0A                     
  1219                           ;lcd.c: 58:     _delay((unsigned long)((30)*(4000000/4000.0)));
  1220  003F0A  0E1E               	movlw	30
  1221  003F0C  6E03               	movwf	??_lcd_init^0,c
  1222  003F0E  0E3C               	movlw	60
  1223  003F10                     u317:
  1224  003F10  FFFF               	dw	65535	; errata NOP
  1225  003F12  2EE8               	decfsz	wreg,f,c
  1226  003F14  D7FD               	bra	u317
  1227  003F16  2E03               	decfsz	??_lcd_init^0,f,c
  1228  003F18  D7FB               	bra	u317
  1229  003F1A  D000               	nop2	
  1230  003F1C                     
  1231                           ;lcd.c: 59:  lcd_cmd(0x38);
  1232  003F1C  0E38               	movlw	56
  1233  003F1E  EC86  F01E         	call	_lcd_cmd
  1234  003F22                     
  1235                           ;lcd.c: 60:  lcd_cmd(0x08);
  1236  003F22  0E08               	movlw	8
  1237  003F24  EC86  F01E         	call	_lcd_cmd
  1238  003F28                     
  1239                           ;lcd.c: 61:  lcd_cmd(0x0F);
  1240  003F28  0E0F               	movlw	15
  1241  003F2A  EC86  F01E         	call	_lcd_cmd
  1242  003F2E                     
  1243                           ;lcd.c: 62:  lcd_cmd(0x01);
  1244  003F2E  0E01               	movlw	1
  1245  003F30  EC86  F01E         	call	_lcd_cmd
  1246  003F34                     
  1247                           ;lcd.c: 63:  lcd_cmd(0x38);
  1248  003F34  0E38               	movlw	56
  1249  003F36  EC86  F01E         	call	_lcd_cmd
  1250  003F3A                     
  1251                           ;lcd.c: 64:     lcd_cmd(0x80);
  1252  003F3A  0E80               	movlw	128
  1253  003F3C  EC86  F01E         	call	_lcd_cmd
  1254  003F40  0012               	return		;funcret
  1255  003F42  FFFF               	dw	65535	; errata NOP
  1256  003F44                     __end_of_lcd_init:
  1257                           	callstack 0
  1258                           
  1259 ;; *************** function _lcd_cmd *****************
  1260 ;; Defined at:
  1261 ;;		line 15 in file "lcd.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  val             1    wreg     unsigned char 
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  val             1    1[COMRAM] unsigned char 
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  1    wreg      void 
  1268 ;; Registers used:
  1269 ;;		wreg, status,2, cstack
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1275 ;;      Params:         0       0       0       0       0       0       0
  1276 ;;      Locals:         1       0       0       0       0       0       0
  1277 ;;      Temps:          0       0       0       0       0       0       0
  1278 ;;      Totals:         1       0       0       0       0       0       0
  1279 ;;Total ram usage:        1 bytes
  1280 ;; Hardware stack levels used:    1
  1281 ;; Hardware stack levels required when called:    1
  1282 ;; This function calls:
  1283 ;;		_lcd_wr
  1284 ;; This function is called by:
  1285 ;;		_lcd_init
  1286 ;;		_lcd_update
  1287 ;;		_main
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text6
  1292  003D0C                     __ptext6:
  1293                           	callstack 0
  1294  003D0C                     _lcd_cmd:
  1295                           	callstack 0
  1296  003D0C  FFFF               	dw	65535	; assembler added errata NOP
  1297                           
  1298                           ;incstack = 0
  1299                           ;lcd_cmd@val stored from wreg
  1300  003D0E  6E02               	movwf	lcd_cmd@val^0,c
  1301  003D10                     
  1302                           ;lcd.c: 15: void lcd_cmd(unsigned char val);lcd.c: 16: {;lcd.c: 17:  PORTEbits.RE1=1;
  1303  003D10  8284               	bsf	132,1,c	;volatile
  1304  003D12                     
  1305                           ;lcd.c: 18:     lcd_wr(val);
  1306  003D12  5002               	movf	lcd_cmd@val^0,w,c
  1307  003D14  EC76  F01E         	call	_lcd_wr
  1308  003D18                     
  1309                           ;lcd.c: 19:     PORTEbits.RE2=0;
  1310  003D18  9484               	bcf	132,2,c	;volatile
  1311  003D1A                     
  1312                           ;lcd.c: 20:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1313  003D1A  0EC8               	movlw	200
  1314  003D1C                     u327:
  1315  003D1C  FFFF               	dw	65535	; errata NOP
  1316  003D1E  F000               	nop	
  1317  003D20  2EE8               	decfsz	wreg,f,c
  1318  003D22  D7FC               	bra	u327
  1319  003D24                     
  1320                           ;lcd.c: 21:     PORTEbits.RE1=0;
  1321  003D24  9284               	bcf	132,1,c	;volatile
  1322  003D26                     
  1323                           ;lcd.c: 22:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1324  003D26  0EC8               	movlw	200
  1325  003D28                     u337:
  1326  003D28  FFFF               	dw	65535	; errata NOP
  1327  003D2A  F000               	nop	
  1328  003D2C  2EE8               	decfsz	wreg,f,c
  1329  003D2E  D7FC               	bra	u337
  1330  003D30                     
  1331                           ;lcd.c: 23:  PORTEbits.RE1=1;
  1332  003D30  8284               	bsf	132,1,c	;volatile
  1333  003D32  0012               	return		;funcret
  1334  003D34  FFFF               	dw	65535	; errata NOP
  1335  003D36                     __end_of_lcd_cmd:
  1336                           	callstack 0
  1337                           
  1338 ;; *************** function _lcd_wr *****************
  1339 ;; Defined at:
  1340 ;;		line 10 in file "lcd.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;  val             1    wreg     unsigned char 
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  val             1    0[COMRAM] unsigned char 
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  1    wreg      void 
  1347 ;; Registers used:
  1348 ;;		wreg
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1354 ;;      Params:         0       0       0       0       0       0       0
  1355 ;;      Locals:         1       0       0       0       0       0       0
  1356 ;;      Temps:          0       0       0       0       0       0       0
  1357 ;;      Totals:         1       0       0       0       0       0       0
  1358 ;;Total ram usage:        1 bytes
  1359 ;; Hardware stack levels used:    1
  1360 ;; This function calls:
  1361 ;;		Nothing
  1362 ;; This function is called by:
  1363 ;;		_lcd_cmd
  1364 ;;		_lcd_dat
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           	psect	text7
  1369  003CEC                     __ptext7:
  1370                           	callstack 0
  1371  003CEC                     _lcd_wr:
  1372                           	callstack 0
  1373  003CEC  FFFF               	dw	65535	; assembler added errata NOP
  1374                           
  1375                           ;incstack = 0
  1376                           ;lcd_wr@val stored from wreg
  1377  003CEE  6E01               	movwf	lcd_wr@val^0,c
  1378  003CF0                     
  1379                           ;lcd.c: 10: void lcd_wr(unsigned char val);lcd.c: 11: {;lcd.c: 12:     PORTD=val;
  1380  003CF0  C001  FF83         	movff	lcd_wr@val,3971	;volatile
  1381  003CF4  0012               	return		;funcret
  1382  003CF6  FFFF               	dw	65535	; errata NOP
  1383  003CF8                     __end_of_lcd_wr:
  1384                           	callstack 0
  1385                           
  1386 ;; *************** function _init_PORTS *****************
  1387 ;; Defined at:
  1388 ;;		line 61 in file "init_PIC.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;		None
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;		None
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  1    wreg      void 
  1395 ;; Registers used:
  1396 ;;		wreg, status,2
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1402 ;;      Params:         0       0       0       0       0       0       0
  1403 ;;      Locals:         0       0       0       0       0       0       0
  1404 ;;      Temps:          0       0       0       0       0       0       0
  1405 ;;      Totals:         0       0       0       0       0       0       0
  1406 ;;Total ram usage:        0 bytes
  1407 ;; Hardware stack levels used:    1
  1408 ;; This function calls:
  1409 ;;		Nothing
  1410 ;; This function is called by:
  1411 ;;		_main
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           	psect	text8
  1416  003D8A                     __ptext8:
  1417                           	callstack 0
  1418  003D8A                     _init_PORTS:
  1419                           	callstack 0
  1420  003D8A  FFFF               	dw	65535	; assembler added errata NOP
  1421  003D8C                     
  1422                           ;init_PIC.c: 63:     LATA = 0;
  1423  003D8C  0E00               	movlw	0
  1424  003D8E  6E89               	movwf	137,c	;volatile
  1425                           
  1426                           ;init_PIC.c: 64:     PORTA = 0;
  1427  003D90  0E00               	movlw	0
  1428  003D92  6E80               	movwf	128,c	;volatile
  1429                           
  1430                           ;init_PIC.c: 65:     TRISA = 0xF1;
  1431  003D94  0EF1               	movlw	241
  1432  003D96  6E92               	movwf	146,c	;volatile
  1433                           
  1434                           ;init_PIC.c: 67:     LATB = 0;
  1435  003D98  0E00               	movlw	0
  1436  003D9A  6E8A               	movwf	138,c	;volatile
  1437                           
  1438                           ;init_PIC.c: 68:     PORTB = 0;
  1439  003D9C  0E00               	movlw	0
  1440  003D9E  6E81               	movwf	129,c	;volatile
  1441                           
  1442                           ;init_PIC.c: 69:     TRISB = 0x00;
  1443  003DA0  0E00               	movlw	0
  1444  003DA2  6E93               	movwf	147,c	;volatile
  1445                           
  1446                           ;init_PIC.c: 72:     LATC = 0;
  1447  003DA4  0E00               	movlw	0
  1448  003DA6  6E8B               	movwf	139,c	;volatile
  1449                           
  1450                           ;init_PIC.c: 73:     PORTC = 0;
  1451  003DA8  0E00               	movlw	0
  1452  003DAA  6E82               	movwf	130,c	;volatile
  1453                           
  1454                           ;init_PIC.c: 74:     TRISC = 0xF0;
  1455  003DAC  0EF0               	movlw	240
  1456  003DAE  6E94               	movwf	148,c	;volatile
  1457  003DB0                     
  1458                           ;init_PIC.c: 75:     TRISCbits.RC6 = 0;
  1459  003DB0  9C94               	bcf	148,6,c	;volatile
  1460  003DB2  0012               	return		;funcret
  1461  003DB4  FFFF               	dw	65535	; errata NOP
  1462  003DB6                     __end_of_init_PORTS:
  1463                           	callstack 0
  1464                           
  1465                           	psect	rparam
  1466  0000                     
  1467                           	psect	idloc
  1468                           
  1469                           ;Config register IDLOC0 @ 0x200000
  1470                           ;	unspecified, using default values
  1471  200000                     	org	2097152
  1472  200000  FF                 	db	255
  1473                           
  1474                           ;Config register IDLOC1 @ 0x200001
  1475                           ;	unspecified, using default values
  1476  200001                     	org	2097153
  1477  200001  FF                 	db	255
  1478                           
  1479                           ;Config register IDLOC2 @ 0x200002
  1480                           ;	unspecified, using default values
  1481  200002                     	org	2097154
  1482  200002  FF                 	db	255
  1483                           
  1484                           ;Config register IDLOC3 @ 0x200003
  1485                           ;	unspecified, using default values
  1486  200003                     	org	2097155
  1487  200003  FF                 	db	255
  1488                           
  1489                           ;Config register IDLOC4 @ 0x200004
  1490                           ;	unspecified, using default values
  1491  200004                     	org	2097156
  1492  200004  FF                 	db	255
  1493                           
  1494                           ;Config register IDLOC5 @ 0x200005
  1495                           ;	unspecified, using default values
  1496  200005                     	org	2097157
  1497  200005  FF                 	db	255
  1498                           
  1499                           ;Config register IDLOC6 @ 0x200006
  1500                           ;	unspecified, using default values
  1501  200006                     	org	2097158
  1502  200006  FF                 	db	255
  1503                           
  1504                           ;Config register IDLOC7 @ 0x200007
  1505                           ;	unspecified, using default values
  1506  200007                     	org	2097159
  1507  200007  FF                 	db	255
  1508                           
  1509                           	psect	config
  1510                           
  1511                           ; Padding undefined space
  1512  300000                     	org	3145728
  1513  300000  FF                 	db	255
  1514                           
  1515                           ;Config register CONFIG1H @ 0x300001
  1516                           ;	Oscillator Selection bits
  1517                           ;	OSC = RCIO, RC oscillator w/ OSC2 configured as RA6
  1518                           ;	Oscillator System Clock Switch Enable bit
  1519                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  1520  300001                     	org	3145729
  1521  300001  27                 	db	39
  1522                           
  1523                           ;Config register CONFIG2L @ 0x300002
  1524                           ;	Power-up Timer Enable bit
  1525                           ;	PWRT = OFF, PWRT disabled
  1526                           ;	Brown-out Reset Enable bit
  1527                           ;	BOR = ON, Brown-out Reset enabled
  1528                           ;	Brown-out Reset Voltage bits
  1529                           ;	BORV = 20, VBOR set to 2.0V
  1530  300002                     	org	3145730
  1531  300002  0F                 	db	15
  1532                           
  1533                           ;Config register CONFIG2H @ 0x300003
  1534                           ;	Watchdog Timer Enable bit
  1535                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1536                           ;	Watchdog Timer Postscale Select bits
  1537                           ;	WDTPS = 128, 1:128
  1538  300003                     	org	3145731
  1539  300003  0E                 	db	14
  1540                           
  1541                           ; Padding undefined space
  1542  300004                     	org	3145732
  1543  300004  FF                 	db	255
  1544                           
  1545                           ;Config register CONFIG3H @ 0x300005
  1546                           ;	CCP2 Mux bit
  1547                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
  1548  300005                     	org	3145733
  1549  300005  01                 	db	1
  1550                           
  1551                           ;Config register CONFIG4L @ 0x300006
  1552                           ;	Stack Full/Underflow Reset Enable bit
  1553                           ;	STVR = ON, Stack Full/Underflow will cause RESET
  1554                           ;	Low Voltage ICSP Enable bit
  1555                           ;	LVP = ON, Low Voltage ICSP enabled
  1556                           ;	Background Debugger Enable bit
  1557                           ;	DEBUG = 0x1, unprogrammed default
  1558  300006                     	org	3145734
  1559  300006  85                 	db	133
  1560                           
  1561                           ; Padding undefined space
  1562  300007                     	org	3145735
  1563  300007  FF                 	db	255
  1564                           
  1565                           ;Config register CONFIG5L @ 0x300008
  1566                           ;	Code Protection bit
  1567                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  1568                           ;	Code Protection bit
  1569                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  1570                           ;	Code Protection bit
  1571                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  1572                           ;	Code Protection bit
  1573                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  1574  300008                     	org	3145736
  1575  300008  0F                 	db	15
  1576                           
  1577                           ;Config register CONFIG5H @ 0x300009
  1578                           ;	Boot Block Code Protection bit
  1579                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  1580                           ;	Data EEPROM Code Protection bit
  1581                           ;	CPD = OFF, Data EEPROM not code protected
  1582  300009                     	org	3145737
  1583  300009  C0                 	db	192
  1584                           
  1585                           ;Config register CONFIG6L @ 0x30000A
  1586                           ;	Write Protection bit
  1587                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  1588                           ;	Write Protection bit
  1589                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  1590                           ;	Write Protection bit
  1591                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  1592                           ;	Write Protection bit
  1593                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  1594  30000A                     	org	3145738
  1595  30000A  0F                 	db	15
  1596                           
  1597                           ;Config register CONFIG6H @ 0x30000B
  1598                           ;	Configuration Register Write Protection bit
  1599                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  1600                           ;	Boot Block Write Protection bit
  1601                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  1602                           ;	Data EEPROM Write Protection bit
  1603                           ;	WRTD = OFF, Data EEPROM not write protected
  1604  30000B                     	org	3145739
  1605  30000B  E0                 	db	224
  1606                           
  1607                           ;Config register CONFIG7L @ 0x30000C
  1608                           ;	Table Read Protection bit
  1609                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  1610                           ;	Table Read Protection bit
  1611                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  1612                           ;	Table Read Protection bit
  1613                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  1614                           ;	Table Read Protection bit
  1615                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  1616  30000C                     	org	3145740
  1617  30000C  0F                 	db	15
  1618                           
  1619                           ;Config register CONFIG7H @ 0x30000D
  1620                           ;	Boot Block Table Read Protection bit
  1621                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  1622  30000D                     	org	3145741
  1623  30000D  40                 	db	64
  1624                           tosu	equ	0xFFF
  1625                           tosh	equ	0xFFE
  1626                           tosl	equ	0xFFD
  1627                           stkptr	equ	0xFFC
  1628                           pclatu	equ	0xFFB
  1629                           pclath	equ	0xFFA
  1630                           pcl	equ	0xFF9
  1631                           tblptru	equ	0xFF8
  1632                           tblptrh	equ	0xFF7
  1633                           tblptrl	equ	0xFF6
  1634                           tablat	equ	0xFF5
  1635                           prodh	equ	0xFF4
  1636                           prodl	equ	0xFF3
  1637                           indf0	equ	0xFEF
  1638                           postinc0	equ	0xFEE
  1639                           postdec0	equ	0xFED
  1640                           preinc0	equ	0xFEC
  1641                           plusw0	equ	0xFEB
  1642                           fsr0h	equ	0xFEA
  1643                           fsr0l	equ	0xFE9
  1644                           wreg	equ	0xFE8
  1645                           indf1	equ	0xFE7
  1646                           postinc1	equ	0xFE6
  1647                           postdec1	equ	0xFE5
  1648                           preinc1	equ	0xFE4
  1649                           plusw1	equ	0xFE3
  1650                           fsr1h	equ	0xFE2
  1651                           fsr1l	equ	0xFE1
  1652                           bsr	equ	0xFE0
  1653                           indf2	equ	0xFDF
  1654                           postinc2	equ	0xFDE
  1655                           postdec2	equ	0xFDD
  1656                           preinc2	equ	0xFDC
  1657                           plusw2	equ	0xFDB
  1658                           fsr2h	equ	0xFDA
  1659                           fsr2l	equ	0xFD9
  1660                           status	equ	0xFD8

Data Sizes:
    Strings     22
    Constant    344
    Data        20
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     23      63
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    joint_stepper.register_name	PTR volatile unsigned char  size(2) Largest target is 0

    change_direction@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 0

    reach_goal@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 0

    update_current_coil@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 0

    turn_on_current_coil@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 0

    S646$register_name	PTR volatile unsigned char  size(2) Largest target is 0

    init_stepper@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 0

    S434$current_msg	PTR unsigned char  size(2) Largest target is 0

    lcd_manager_init@lcd_manager.current_msg	PTR unsigned char  size(2) Largest target is 0

    S434$new_msg	PTR unsigned char  size(2) Largest target is 0

    lcd_manager_init@lcd_manager.new_msg	PTR unsigned char  size(2) Largest target is 0

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 320
		 -> STR_1(CODE[22]), const_msgs(CODE[320]), 


Critical Paths under _main in COMRAM

    _main->_lcd_update
    _lcd_update->_lcd_str
    _lcd_str->___wmul
    _lcd_dat->_lcd_wr
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_wr

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1385
                                             21 COMRAM     2     2      0
                         _init_PORTS
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                         _lcd_update
 ---------------------------------------------------------------------------------
 (1) _lcd_update                                          10     8      2    1053
                                             11 COMRAM    10     8      2
                             ___wmul
                            _lcd_cmd
                            _lcd_str
 ---------------------------------------------------------------------------------
 (2) _lcd_str                                              5     3      2     272
                                              6 COMRAM     5     3      2
                             ___wmul (ARG)
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (3) _lcd_dat                                              1     1      0      30
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      30
                                              2 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      30
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (4) _lcd_wr                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_PORTS
   _lcd_cmd
     _lcd_wr
   _lcd_init
     _lcd_cmd
       _lcd_wr
   _lcd_str
     ___wmul (ARG)
     _lcd_dat (ARG)
       _lcd_wr
   _lcd_update
     ___wmul
     _lcd_cmd
       _lcd_wr
     _lcd_str
       ___wmul (ARG)
       _lcd_dat (ARG)
         _lcd_wr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     17      3F       1       49.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3F      15        0.0%
DATA                 0      0      3F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Jun 17 22:11:35 2023

                                             l65 3DB2                                               l82 3D32  
                                             l85 3D86                                               l94 3E48  
                                             l79 3CF4                                               l88 3F40  
                            ___wmul@multiplicand 0003                                              l104 3FFC  
                                            l284 3D5C                                              l981 3D64  
                                            l991 3D7A                                              l983 3D66  
                                            l993 3D84                                              l985 3D6C  
                                            l979 3CF0                                              l995 3D10  
                                            l987 3D6E                                              l997 3D12  
                                            l989 3D78                                              l999 3D18  
                                            u230 3E46                                              u231 3E40  
                                            u240 3FFA                                              u241 3FF4  
                                            u307 3EF8                                              u317 3F10  
                                            _PR2 000FCB                                              u327 3D1C  
                                            u337 3D28                                              u257 3E8C  
                                            u267 3EB0                                              u277 3D70  
                                            u287 3D7C                                              u297 3EDE  
                                            wreg 000FE8                                             l1001 3D1A  
                                           l1003 3D24                                             l1005 3D26  
                                           l1007 3D30                                             l1031 3EC8  
                                           l1025 3D8C                                             l1041 3F0A  
                                           l1033 3ED8                                             l1027 3DB0  
                                           l1051 3F34                                             l1043 3F1C  
                                           l1035 3EEA                                             l1053 3F3A  
                                           l1045 3F22                                             l1037 3EEC  
                                           l1047 3F28                                             l1039 3EF2  
                                           l1311 3DF6                                             l1049 3F2E  
                                           l1313 3E16                                             l1315 3E18  
                                           l1323 3F46                                             PORTD 000F83  
                                           l1317 3D38                                             l1309 3DEE  
                                           l1333 3F7C                                             l1325 3F4C  
                                           l1341 3E4C                                             PORTE 000F84  
                                           l1319 3D54                                             l1335 3F90  
                                           l1327 3F74                                             l1351 3EA6  
                                           l1343 3E68                                             l1337 3FD8  
                                           l1345 3E74                                             l1339 3FDC  
                                           l1347 3E82                                             l1349 3E9A  
                                           TRISD 000F95                                             TRISE 000F96  
                                           STR_1 7FE9                                             _LATA 000F89  
                                           _LATB 000F8A                                             _LATC 000F8B  
                                           _TMR2 000FCC                                      lcd_update@i 0014  
                                           _main 3E4C                                             _fosc 7FE5  
                                           indf2 000FDF                                             fsr1l 000FE1  
                                           fsr2l 000FD9                                             _tosc 0038  
                                           prodh 000FF4                                             prodl 000FF3  
                                           start 0002                                     ___param_bank 000000  
                                          ?_main 0001                                            _T0CON 000FD5  
                                          _T2CON 000FCA                                            _RCREG 000FAE  
                                          _TMR0H 000FD7                                            _TMR0L 000FD6  
                                          _SPBRG 000FAF                                            _PORTA 000F80  
                                          _PORTB 000F81                                            _PORTC 000F82  
                                          _PORTD 000F83                                            _TRISA 000F92  
                                          _TRISB 000F93                                            _TRISC 000F94  
                                          _TXREG 000FAD                                  __end_of_lcd_dat 3D8A  
                                __end_of_lcd_cmd 3D36                                  __end_of_lcd_str 3E4C  
                                          _f_osc 7FE1                                            _t_osc 7FDD  
                                          _toint 7E91                                            tablat 000FF5  
                                          status 000FD8                                  __initialization 3DB6  
                                   __end_of_main 3EC6                                     __end_of_fosc 7FE9  
                          lcd_update@line_select 0010                                           ??_main 0016  
                                  __activetblptr 000002                                           _ADCON0 000FC2  
                                         _ADCON1 000FC1                                           _ADRESH 000FC4  
                                         _ADRESL 000FC3                                           _CCPR1L 000FBE  
                               __end_of_lcd_init 3F44                                           ___wmul 3D36  
                                         _lcd_wr 3CEC                                           clear_0 3DDC  
                                      ??_lcd_dat 0002                                        ??_lcd_cmd 0002  
                                      ??_lcd_str 0009                                     __pdataCOMRAM 002C  
                                   __mediumconst 7E90                                           tblptrh 000FF7  
                                         tblptrl 000FF6                                           tblptru 000FF8  
                                     __accesstop 0080                          __end_of__initialization 3DE2  
                                  ___rparam_used 000001                                   _tmr2_prescaler 003C  
                                 __pcstackCOMRAM 0001                                    __end_of_f_osc 7FE5  
                                  __end_of_t_osc 7FE1                                    __end_of_toint 7E95  
                                _temperature_int 002A                                          ?___wmul 0001  
                                        ?_lcd_wr 0001                                          _CCP1CON 000FBD  
                        _hex_end_effector_values 002C                               _temperature_scaled 0028  
                               _desired_baudrate 7E99                                       _lcd_update 3F44  
                                      ?_lcd_init 0001                                       _const_msgs 7E9D  
                                        __Hparam 0000                                          __Lparam 0000  
                                     _init_PORTS 3D8A                                  __size_of___wmul 002A  
                                __size_of_lcd_wr 000C                                          __pcinit 3DB6  
                                        __ramtop 0600                                          __ptext0 3E4C  
                                        __ptext1 3F44                                          __ptext2 3DEC  
                                        __ptext3 3D60                                          __ptext4 3D36  
                                        __ptext5 3EC6                                          __ptext6 3D0C  
                                        __ptext7 3CEC                                          __ptext8 3D8A  
                                        _lcd_dat 3D60                                          _lcd_cmd 3D0C  
                                        _lcd_str 3DEC                                        _T0CONbits 000FD5  
                                      _T2CONbits 000FCA                                    _joint_stepper 0018  
                                     ??_lcd_init 0003                             end_of_initialization 3DE2  
                                  __Lmediumconst 7E90                                        _RCSTAbits 000FAB  
                                        postdec1 000FE5                                          postinc0 000FEE  
                                      _PORTEbits 000F84                                        _TRISCbits 000F94  
                                     lcd_dat@val 0002                                       lcd_cmd@val 0002  
                                    ?_lcd_update 000C                                       _pwm_period 0034  
                                    _CCP1CONbits 000FBD                                        _TXSTAbits 000FAC  
                                     lcd_str@str 0007                                      ?_init_PORTS 0001  
                                 __end_of___wmul 3D60                                    __pidataCOMRAM 3CF8  
                                 __end_of_lcd_wr 3CF8                              start_initialization 3DB6  
                               _hex_joint_values 0030                         __end_of_desired_baudrate 7E9D  
                                       ??___wmul 0005                              __size_of_lcd_update 00BC  
                                       ??_lcd_wr 0001                                      __pbssCOMRAM 0018  
                            __size_of_init_PORTS 002C                                __size_of_lcd_init 007E  
                                  __pmediumconst 7E90                                         ?_lcd_dat 0001  
                                       ?_lcd_cmd 0001                                         ?_lcd_str 0007  
                                 ___wmul@product 0005                                         _PIE1bits 000F9D  
                                       _PIR1bits 000F9E                                       _ADCON0bits 000FC2  
                              ___wmul@multiplier 0001                                        lcd_wr@val 0001  
                                   ??_lcd_update 000E                                        copy_data0 3DCA  
                                     roundf@F525 0024                                         __Hrparam 0000  
                                   ??_init_PORTS 0001                                         __Lrparam 0000  
                             __end_of_lcd_update 4000                                  lcd_update@F2151 7E95  
                               __size_of_lcd_dat 002A                                 __size_of_lcd_cmd 002A  
                               __size_of_lcd_str 0060                               __end_of_const_msgs 7FDD  
                             __end_of_init_PORTS 3DB6                                         _lcd_init 3EC6  
                                lcd_update@state 000C                                    __size_of_main 007A  
                                       lcd_str@i 000B                                       _INTCONbits 000FF2  
                        __end_oflcd_update@F2151 7E99  
