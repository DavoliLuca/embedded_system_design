

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Jun 18 00:09:37 2023

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60  0000                     
    61                           ; Version 2.20
    62                           ; Generated 12/02/2020 GMT
    63                           ; 
    64                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F452 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     
    96                           	psect	idataBANK0
    97  002D4E                     __pidataBANK0:
    98                           	callstack 0
    99                           
   100                           ;initializer for _pwm_period
   101                           ;timer.c: 5: static double const f_osc = 1000000;;timer.c: 6: static double const t_osc 
      +                          = 1/f_osc;;timer.c: 7: static double pwm_period = 20e-3;
   102  002D4E  D70A               	dw	55050
   103  002D50  3CA3               	dw	15523
   104                           
   105                           ;initializer for _tosc
   106  002D52  37BD               	dw	14269
   107  002D54  3486               	dw	13446
   108                           
   109                           ;initializer for _state_before_error
   110  002D56  0008               	dw	8
   111                           
   112                           ;initializer for _tmr2_prescaler
   113  002D58  0000               	dw	0
   114  002D5A  4180               	dw	16768
   115                           
   116                           ;initializer for _hex_end_effector_values
   117  002D5C  10                 	db	16
   118  002D5D  20                 	db	32
   119  002D5E  40                 	db	64
   120  002D5F  80                 	db	128
   121                           
   122                           ;initializer for _hex_joint_values
   123  002D60  01                 	db	1
   124  002D61  02                 	db	2
   125  002D62  04                 	db	4
   126  002D63  08                 	db	8
   127                           
   128                           	psect	mediumconst
   129  007B20                     __pmediumconst:
   130                           	callstack 0
   131  007B20  00                 	db	0
   132  007B21  0000               	dw	0
   133  007B23  4B00               	dw	19200
   134  007B25                     __end_of_toint:
   135                           	callstack 0
   136  007B25                     lcd_update@F2151:
   137                           	callstack 0
   138  007B25  80                 	db	128
   139  007B26  C0                 	db	192
   140  007B27  94                 	db	148
   141  007B28  D4                 	db	212
   142  007B29                     __end_oflcd_update@F2151:
   143                           	callstack 0
   144  007B29  0000               	dw	0
   145  007B2B  4616               	dw	17942
   146  007B2D                     __end_of_desired_baudrate:
   147                           	callstack 0
   148  007B2D                     _const_msgs:
   149                           	callstack 0
   150  007B2D  49                 	db	73
   151  007B2E  44                 	db	68
   152  007B2F  4C                 	db	76
   153  007B30  45                 	db	69
   154  007B31  3A                 	db	58
   155  007B32  20                 	db	32
   156  007B33  77                 	db	119
   157  007B34  61                 	db	97
   158  007B35  69                 	db	105
   159  007B36  74                 	db	116
   160  007B37  69                 	db	105
   161  007B38  6E                 	db	110
   162  007B39  67                 	db	103
   163  007B3A  20                 	db	32
   164  007B3B  66                 	db	102
   165  007B3C  6F                 	db	111
   166  007B3D  72                 	db	114
   167  007B3E  00                 	db	0
   168  007B3F  00                 	db	0
   169  007B40  00                 	db	0
   170  007B41  76                 	db	118
   171  007B42  69                 	db	105
   172  007B43  61                 	db	97
   173  007B44  6C                 	db	108
   174  007B45  20                 	db	32
   175  007B46  74                 	db	116
   176  007B47  6F                 	db	111
   177  007B48  20                 	db	32
   178  007B49  62                 	db	98
   179  007B4A  65                 	db	101
   180  007B4B  20                 	db	32
   181  007B4C  70                 	db	112
   182  007B4D  6C                 	db	108
   183  007B4E  61                 	db	97
   184  007B4F  63                 	db	99
   185  007B50  65                 	db	101
   186  007B51  64                 	db	100
   187  007B52  00                 	db	0
   188  007B53  00                 	db	0
   189  007B54  00                 	db	0
   190  007B55  69                 	db	105
   191  007B56  6E                 	db	110
   192  007B57  20                 	db	32
   193  007B58  69                 	db	105
   194  007B59  6E                 	db	110
   195  007B5A  69                 	db	105
   196  007B5B  74                 	db	116
   197  007B5C  20                 	db	32
   198  007B5D  70                 	db	112
   199  007B5E  6F                 	db	111
   200  007B5F  73                 	db	115
   201  007B60  00                 	db	0
   202  007B61  00                 	db	0
   203  007B62  00                 	db	0
   204  007B63  00                 	db	0
   205  007B64  00                 	db	0
   206  007B65  00                 	db	0
   207  007B66  00                 	db	0
   208  007B67  00                 	db	0
   209  007B68  00                 	db	0
   210  007B69  00                 	db	0
   211  007B6A  00                 	db	0
   212  007B6B  00                 	db	0
   213  007B6C  00                 	db	0
   214  007B6D  00                 	db	0
   215  007B6E  00                 	db	0
   216  007B6F  00                 	db	0
   217  007B70  00                 	db	0
   218  007B71  00                 	db	0
   219  007B72  00                 	db	0
   220  007B73  00                 	db	0
   221  007B74  00                 	db	0
   222  007B75  00                 	db	0
   223  007B76  00                 	db	0
   224  007B77  00                 	db	0
   225  007B78  00                 	db	0
   226  007B79  00                 	db	0
   227  007B7A  00                 	db	0
   228  007B7B  00                 	db	0
   229  007B7C  00                 	db	0
   230  007B7D  49                 	db	73
   231  007B7E  4E                 	db	78
   232  007B7F  49                 	db	73
   233  007B80  54                 	db	84
   234  007B81  5F                 	db	95
   235  007B82  50                 	db	80
   236  007B83  4F                 	db	79
   237  007B84  53                 	db	83
   238  007B85  3A                 	db	58
   239  007B86  20                 	db	32
   240  007B87  74                 	db	116
   241  007B88  68                 	db	104
   242  007B89  65                 	db	101
   243  007B8A  20                 	db	32
   244  007B8B  76                 	db	118
   245  007B8C  69                 	db	105
   246  007B8D  61                 	db	97
   247  007B8E  6C                 	db	108
   248  007B8F  00                 	db	0
   249  007B90  00                 	db	0
   250  007B91  69                 	db	105
   251  007B92  73                 	db	115
   252  007B93  20                 	db	32
   253  007B94  61                 	db	97
   254  007B95  74                 	db	116
   255  007B96  20                 	db	32
   256  007B97  74                 	db	116
   257  007B98  68                 	db	104
   258  007B99  65                 	db	101
   259  007B9A  20                 	db	32
   260  007B9B  69                 	db	105
   261  007B9C  6E                 	db	110
   262  007B9D  69                 	db	105
   263  007B9E  74                 	db	116
   264  007B9F  20                 	db	32
   265  007BA0  70                 	db	112
   266  007BA1  6F                 	db	111
   267  007BA2  73                 	db	115
   268  007BA3  00                 	db	0
   269  007BA4  00                 	db	0
   270  007BA5  70                 	db	112
   271  007BA6  72                 	db	114
   272  007BA7  6F                 	db	111
   273  007BA8  63                 	db	99
   274  007BA9  65                 	db	101
   275  007BAA  73                 	db	115
   276  007BAB  73                 	db	115
   277  007BAC  20                 	db	32
   278  007BAD  69                 	db	105
   279  007BAE  73                 	db	115
   280  007BAF  20                 	db	32
   281  007BB0  73                 	db	115
   282  007BB1  74                 	db	116
   283  007BB2  61                 	db	97
   284  007BB3  72                 	db	114
   285  007BB4  74                 	db	116
   286  007BB5  69                 	db	105
   287  007BB6  6E                 	db	110
   288  007BB7  67                 	db	103
   289  007BB8  00                 	db	0
   290  007BB9  00                 	db	0
   291  007BBA  00                 	db	0
   292  007BBB  00                 	db	0
   293  007BBC  00                 	db	0
   294  007BBD  00                 	db	0
   295  007BBE  00                 	db	0
   296  007BBF  00                 	db	0
   297  007BC0  00                 	db	0
   298  007BC1  00                 	db	0
   299  007BC2  00                 	db	0
   300  007BC3  00                 	db	0
   301  007BC4  00                 	db	0
   302  007BC5  00                 	db	0
   303  007BC6  00                 	db	0
   304  007BC7  00                 	db	0
   305  007BC8  00                 	db	0
   306  007BC9  00                 	db	0
   307  007BCA  00                 	db	0
   308  007BCB  00                 	db	0
   309  007BCC  00                 	db	0
   310  007BCD  4D                 	db	77
   311  007BCE  4F                 	db	79
   312  007BCF  56                 	db	86
   313  007BD0  45                 	db	69
   314  007BD1  4D                 	db	77
   315  007BD2  45                 	db	69
   316  007BD3  4E                 	db	78
   317  007BD4  54                 	db	84
   318  007BD5  00                 	db	0
   319  007BD6  00                 	db	0
   320  007BD7  00                 	db	0
   321  007BD8  00                 	db	0
   322  007BD9  00                 	db	0
   323  007BDA  00                 	db	0
   324  007BDB  00                 	db	0
   325  007BDC  00                 	db	0
   326  007BDD  00                 	db	0
   327  007BDE  00                 	db	0
   328  007BDF  00                 	db	0
   329  007BE0  00                 	db	0
   330  007BE1  00                 	db	0
   331  007BE2  00                 	db	0
   332  007BE3  00                 	db	0
   333  007BE4  00                 	db	0
   334  007BE5  00                 	db	0
   335  007BE6  00                 	db	0
   336  007BE7  00                 	db	0
   337  007BE8  00                 	db	0
   338  007BE9  00                 	db	0
   339  007BEA  00                 	db	0
   340  007BEB  00                 	db	0
   341  007BEC  00                 	db	0
   342  007BED  00                 	db	0
   343  007BEE  00                 	db	0
   344  007BEF  00                 	db	0
   345  007BF0  00                 	db	0
   346  007BF1  00                 	db	0
   347  007BF2  00                 	db	0
   348  007BF3  00                 	db	0
   349  007BF4  00                 	db	0
   350  007BF5  00                 	db	0
   351  007BF6  00                 	db	0
   352  007BF7  00                 	db	0
   353  007BF8  00                 	db	0
   354  007BF9  00                 	db	0
   355  007BFA  00                 	db	0
   356  007BFB  00                 	db	0
   357  007BFC  00                 	db	0
   358  007BFD  00                 	db	0
   359  007BFE  00                 	db	0
   360  007BFF  00                 	db	0
   361  007C00  00                 	db	0
   362  007C01  00                 	db	0
   363  007C02  00                 	db	0
   364  007C03  00                 	db	0
   365  007C04  00                 	db	0
   366  007C05  00                 	db	0
   367  007C06  00                 	db	0
   368  007C07  00                 	db	0
   369  007C08  00                 	db	0
   370  007C09  00                 	db	0
   371  007C0A  00                 	db	0
   372  007C0B  00                 	db	0
   373  007C0C  00                 	db	0
   374  007C0D  00                 	db	0
   375  007C0E  00                 	db	0
   376  007C0F  00                 	db	0
   377  007C10  00                 	db	0
   378  007C11  00                 	db	0
   379  007C12  00                 	db	0
   380  007C13  00                 	db	0
   381  007C14  00                 	db	0
   382  007C15  00                 	db	0
   383  007C16  00                 	db	0
   384  007C17  00                 	db	0
   385  007C18  00                 	db	0
   386  007C19  00                 	db	0
   387  007C1A  00                 	db	0
   388  007C1B  00                 	db	0
   389  007C1C  00                 	db	0
   390  007C1D  4F                 	db	79
   391  007C1E  56                 	db	86
   392  007C1F  45                 	db	69
   393  007C20  4E                 	db	78
   394  007C21  3A                 	db	58
   395  007C22  00                 	db	0
   396  007C23  00                 	db	0
   397  007C24  00                 	db	0
   398  007C25  00                 	db	0
   399  007C26  00                 	db	0
   400  007C27  00                 	db	0
   401  007C28  00                 	db	0
   402  007C29  00                 	db	0
   403  007C2A  00                 	db	0
   404  007C2B  00                 	db	0
   405  007C2C  00                 	db	0
   406  007C2D  00                 	db	0
   407  007C2E  00                 	db	0
   408  007C2F  00                 	db	0
   409  007C30  00                 	db	0
   410  007C31  76                 	db	118
   411  007C32  69                 	db	105
   412  007C33  61                 	db	97
   413  007C34  6C                 	db	108
   414  007C35  20                 	db	32
   415  007C36  68                 	db	104
   416  007C37  61                 	db	97
   417  007C38  73                 	db	115
   418  007C39  20                 	db	32
   419  007C3A  72                 	db	114
   420  007C3B  65                 	db	101
   421  007C3C  61                 	db	97
   422  007C3D  63                 	db	99
   423  007C3E  68                 	db	104
   424  007C3F  65                 	db	101
   425  007C40  64                 	db	100
   426  007C41  00                 	db	0
   427  007C42  00                 	db	0
   428  007C43  00                 	db	0
   429  007C44  00                 	db	0
   430  007C45  74                 	db	116
   431  007C46  68                 	db	104
   432  007C47  65                 	db	101
   433  007C48  20                 	db	32
   434  007C49  6F                 	db	111
   435  007C4A  76                 	db	118
   436  007C4B  65                 	db	101
   437  007C4C  6E                 	db	110
   438  007C4D  00                 	db	0
   439  007C4E  00                 	db	0
   440  007C4F  00                 	db	0
   441  007C50  00                 	db	0
   442  007C51  00                 	db	0
   443  007C52  00                 	db	0
   444  007C53  00                 	db	0
   445  007C54  00                 	db	0
   446  007C55  00                 	db	0
   447  007C56  00                 	db	0
   448  007C57  00                 	db	0
   449  007C58  00                 	db	0
   450  007C59  00                 	db	0
   451  007C5A  00                 	db	0
   452  007C5B  00                 	db	0
   453  007C5C  00                 	db	0
   454  007C5D  00                 	db	0
   455  007C5E  00                 	db	0
   456  007C5F  00                 	db	0
   457  007C60  00                 	db	0
   458  007C61  00                 	db	0
   459  007C62  00                 	db	0
   460  007C63  00                 	db	0
   461  007C64  00                 	db	0
   462  007C65  00                 	db	0
   463  007C66  00                 	db	0
   464  007C67  00                 	db	0
   465  007C68  00                 	db	0
   466  007C69  00                 	db	0
   467  007C6A  00                 	db	0
   468  007C6B  00                 	db	0
   469  007C6C  00                 	db	0
   470  007C6D  4F                 	db	79
   471  007C6E  56                 	db	86
   472  007C6F  45                 	db	69
   473  007C70  4E                 	db	78
   474  007C71  3A                 	db	58
   475  007C72  20                 	db	32
   476  007C73  72                 	db	114
   477  007C74  65                 	db	101
   478  007C75  61                 	db	97
   479  007C76  63                 	db	99
   480  007C77  68                 	db	104
   481  007C78  69                 	db	105
   482  007C79  6E                 	db	110
   483  007C7A  67                 	db	103
   484  007C7B  20                 	db	32
   485  007C7C  74                 	db	116
   486  007C7D  68                 	db	104
   487  007C7E  65                 	db	101
   488  007C7F  00                 	db	0
   489  007C80  00                 	db	0
   490  007C81  63                 	db	99
   491  007C82  6F                 	db	111
   492  007C83  72                 	db	114
   493  007C84  72                 	db	114
   494  007C85  65                 	db	101
   495  007C86  63                 	db	99
   496  007C87  74                 	db	116
   497  007C88  20                 	db	32
   498  007C89  74                 	db	116
   499  007C8A  65                 	db	101
   500  007C8B  6D                 	db	109
   501  007C8C  70                 	db	112
   502  007C8D  65                 	db	101
   503  007C8E  72                 	db	114
   504  007C8F  61                 	db	97
   505  007C90  74                 	db	116
   506  007C91  75                 	db	117
   507  007C92  72                 	db	114
   508  007C93  65                 	db	101
   509  007C94  00                 	db	0
   510  007C95  00                 	db	0
   511  007C96  00                 	db	0
   512  007C97  00                 	db	0
   513  007C98  00                 	db	0
   514  007C99  00                 	db	0
   515  007C9A  00                 	db	0
   516  007C9B  00                 	db	0
   517  007C9C  00                 	db	0
   518  007C9D  00                 	db	0
   519  007C9E  00                 	db	0
   520  007C9F  00                 	db	0
   521  007CA0  00                 	db	0
   522  007CA1  00                 	db	0
   523  007CA2  00                 	db	0
   524  007CA3  00                 	db	0
   525  007CA4  00                 	db	0
   526  007CA5  00                 	db	0
   527  007CA6  00                 	db	0
   528  007CA7  00                 	db	0
   529  007CA8  00                 	db	0
   530  007CA9  00                 	db	0
   531  007CAA  00                 	db	0
   532  007CAB  00                 	db	0
   533  007CAC  00                 	db	0
   534  007CAD  00                 	db	0
   535  007CAE  00                 	db	0
   536  007CAF  00                 	db	0
   537  007CB0  00                 	db	0
   538  007CB1  00                 	db	0
   539  007CB2  00                 	db	0
   540  007CB3  00                 	db	0
   541  007CB4  00                 	db	0
   542  007CB5  00                 	db	0
   543  007CB6  00                 	db	0
   544  007CB7  00                 	db	0
   545  007CB8  00                 	db	0
   546  007CB9  00                 	db	0
   547  007CBA  00                 	db	0
   548  007CBB  00                 	db	0
   549  007CBC  00                 	db	0
   550  007CBD  47                 	db	71
   551  007CBE  52                 	db	82
   552  007CBF  41                 	db	65
   553  007CC0  53                 	db	83
   554  007CC1  50                 	db	80
   555  007CC2  49                 	db	73
   556  007CC3  4E                 	db	78
   557  007CC4  47                 	db	71
   558  007CC5  3A                 	db	58
   559  007CC6  20                 	db	32
   560  007CC7  74                 	db	116
   561  007CC8  68                 	db	104
   562  007CC9  65                 	db	101
   563  007CCA  20                 	db	32
   564  007CCB  76                 	db	118
   565  007CCC  69                 	db	105
   566  007CCD  61                 	db	97
   567  007CCE  6C                 	db	108
   568  007CCF  00                 	db	0
   569  007CD0  00                 	db	0
   570  007CD1  68                 	db	104
   571  007CD2  61                 	db	97
   572  007CD3  73                 	db	115
   573  007CD4  20                 	db	32
   574  007CD5  72                 	db	114
   575  007CD6  65                 	db	101
   576  007CD7  61                 	db	97
   577  007CD8  63                 	db	99
   578  007CD9  68                 	db	104
   579  007CDA  65                 	db	101
   580  007CDB  64                 	db	100
   581  007CDC  20                 	db	32
   582  007CDD  74                 	db	116
   583  007CDE  68                 	db	104
   584  007CDF  65                 	db	101
   585  007CE0  00                 	db	0
   586  007CE1  00                 	db	0
   587  007CE2  00                 	db	0
   588  007CE3  00                 	db	0
   589  007CE4  00                 	db	0
   590  007CE5  6D                 	db	109
   591  007CE6  69                 	db	105
   592  007CE7  78                 	db	120
   593  007CE8  69                 	db	105
   594  007CE9  6E                 	db	110
   595  007CEA  67                 	db	103
   596  007CEB  20                 	db	32
   597  007CEC  73                 	db	115
   598  007CED  74                 	db	116
   599  007CEE  61                 	db	97
   600  007CEF  74                 	db	116
   601  007CF0  69                 	db	105
   602  007CF1  6F                 	db	111
   603  007CF2  6E                 	db	110
   604  007CF3  00                 	db	0
   605  007CF4  00                 	db	0
   606  007CF5  00                 	db	0
   607  007CF6  00                 	db	0
   608  007CF7  00                 	db	0
   609  007CF8  00                 	db	0
   610  007CF9  00                 	db	0
   611  007CFA  00                 	db	0
   612  007CFB  00                 	db	0
   613  007CFC  00                 	db	0
   614  007CFD  00                 	db	0
   615  007CFE  00                 	db	0
   616  007CFF  00                 	db	0
   617  007D00  00                 	db	0
   618  007D01  00                 	db	0
   619  007D02  00                 	db	0
   620  007D03  00                 	db	0
   621  007D04  00                 	db	0
   622  007D05  00                 	db	0
   623  007D06  00                 	db	0
   624  007D07  00                 	db	0
   625  007D08  00                 	db	0
   626  007D09  00                 	db	0
   627  007D0A  00                 	db	0
   628  007D0B  00                 	db	0
   629  007D0C  00                 	db	0
   630  007D0D  47                 	db	71
   631  007D0E  52                 	db	82
   632  007D0F  41                 	db	65
   633  007D10  53                 	db	83
   634  007D11  50                 	db	80
   635  007D12  49                 	db	73
   636  007D13  4E                 	db	78
   637  007D14  47                 	db	71
   638  007D15  3A                 	db	58
   639  007D16  00                 	db	0
   640  007D17  00                 	db	0
   641  007D18  00                 	db	0
   642  007D19  00                 	db	0
   643  007D1A  00                 	db	0
   644  007D1B  00                 	db	0
   645  007D1C  00                 	db	0
   646  007D1D  00                 	db	0
   647  007D1E  00                 	db	0
   648  007D1F  00                 	db	0
   649  007D20  00                 	db	0
   650  007D21  67                 	db	103
   651  007D22  72                 	db	114
   652  007D23  61                 	db	97
   653  007D24  73                 	db	115
   654  007D25  70                 	db	112
   655  007D26  69                 	db	105
   656  007D27  6E                 	db	110
   657  007D28  67                 	db	103
   658  007D29  20                 	db	32
   659  007D2A  68                 	db	104
   660  007D2B  61                 	db	97
   661  007D2C  73                 	db	115
   662  007D2D  00                 	db	0
   663  007D2E  00                 	db	0
   664  007D2F  00                 	db	0
   665  007D30  00                 	db	0
   666  007D31  00                 	db	0
   667  007D32  00                 	db	0
   668  007D33  00                 	db	0
   669  007D34  00                 	db	0
   670  007D35  73                 	db	115
   671  007D36  74                 	db	116
   672  007D37  61                 	db	97
   673  007D38  72                 	db	114
   674  007D39  74                 	db	116
   675  007D3A  65                 	db	101
   676  007D3B  64                 	db	100
   677  007D3C  00                 	db	0
   678  007D3D  00                 	db	0
   679  007D3E  00                 	db	0
   680  007D3F  00                 	db	0
   681  007D40  00                 	db	0
   682  007D41  00                 	db	0
   683  007D42  00                 	db	0
   684  007D43  00                 	db	0
   685  007D44  00                 	db	0
   686  007D45  00                 	db	0
   687  007D46  00                 	db	0
   688  007D47  00                 	db	0
   689  007D48  00                 	db	0
   690  007D49  00                 	db	0
   691  007D4A  00                 	db	0
   692  007D4B  00                 	db	0
   693  007D4C  00                 	db	0
   694  007D4D  00                 	db	0
   695  007D4E  00                 	db	0
   696  007D4F  00                 	db	0
   697  007D50  00                 	db	0
   698  007D51  00                 	db	0
   699  007D52  00                 	db	0
   700  007D53  00                 	db	0
   701  007D54  00                 	db	0
   702  007D55  00                 	db	0
   703  007D56  00                 	db	0
   704  007D57  00                 	db	0
   705  007D58  00                 	db	0
   706  007D59  00                 	db	0
   707  007D5A  00                 	db	0
   708  007D5B  00                 	db	0
   709  007D5C  00                 	db	0
   710  007D5D  4D                 	db	77
   711  007D5E  49                 	db	73
   712  007D5F  58                 	db	88
   713  007D60  49                 	db	73
   714  007D61  4E                 	db	78
   715  007D62  47                 	db	71
   716  007D63  3A                 	db	58
   717  007D64  20                 	db	32
   718  007D65  74                 	db	116
   719  007D66  68                 	db	104
   720  007D67  65                 	db	101
   721  007D68  20                 	db	32
   722  007D69  76                 	db	118
   723  007D6A  69                 	db	105
   724  007D6B  61                 	db	97
   725  007D6C  6C                 	db	108
   726  007D6D  00                 	db	0
   727  007D6E  00                 	db	0
   728  007D6F  00                 	db	0
   729  007D70  00                 	db	0
   730  007D71  77                 	db	119
   731  007D72  69                 	db	105
   732  007D73  6C                 	db	108
   733  007D74  6C                 	db	108
   734  007D75  20                 	db	32
   735  007D76  6E                 	db	110
   736  007D77  6F                 	db	111
   737  007D78  77                 	db	119
   738  007D79  20                 	db	32
   739  007D7A  62                 	db	98
   740  007D7B  65                 	db	101
   741  007D7C  00                 	db	0
   742  007D7D  00                 	db	0
   743  007D7E  00                 	db	0
   744  007D7F  00                 	db	0
   745  007D80  00                 	db	0
   746  007D81  00                 	db	0
   747  007D82  00                 	db	0
   748  007D83  00                 	db	0
   749  007D84  00                 	db	0
   750  007D85  74                 	db	116
   751  007D86  69                 	db	105
   752  007D87  6C                 	db	108
   753  007D88  74                 	db	116
   754  007D89  65                 	db	101
   755  007D8A  64                 	db	100
   756  007D8B  20                 	db	32
   757  007D8C  31                 	db	49
   758  007D8D  30                 	db	48
   759  007D8E  20                 	db	32
   760  007D8F  74                 	db	116
   761  007D90  69                 	db	105
   762  007D91  6D                 	db	109
   763  007D92  65                 	db	101
   764  007D93  73                 	db	115
   765  007D94  00                 	db	0
   766  007D95  00                 	db	0
   767  007D96  00                 	db	0
   768  007D97  00                 	db	0
   769  007D98  00                 	db	0
   770  007D99  00                 	db	0
   771  007D9A  00                 	db	0
   772  007D9B  00                 	db	0
   773  007D9C  00                 	db	0
   774  007D9D  00                 	db	0
   775  007D9E  00                 	db	0
   776  007D9F  00                 	db	0
   777  007DA0  00                 	db	0
   778  007DA1  00                 	db	0
   779  007DA2  00                 	db	0
   780  007DA3  00                 	db	0
   781  007DA4  00                 	db	0
   782  007DA5  00                 	db	0
   783  007DA6  00                 	db	0
   784  007DA7  00                 	db	0
   785  007DA8  00                 	db	0
   786  007DA9  00                 	db	0
   787  007DAA  00                 	db	0
   788  007DAB  00                 	db	0
   789  007DAC  00                 	db	0
   790  007DAD  44                 	db	68
   791  007DAE  49                 	db	73
   792  007DAF  4C                 	db	76
   793  007DB0  55                 	db	85
   794  007DB1  54                 	db	84
   795  007DB2  49                 	db	73
   796  007DB3  4E                 	db	78
   797  007DB4  47                 	db	71
   798  007DB5  3A                 	db	58
   799  007DB6  20                 	db	32
   800  007DB7  74                 	db	116
   801  007DB8  68                 	db	104
   802  007DB9  65                 	db	101
   803  007DBA  00                 	db	0
   804  007DBB  00                 	db	0
   805  007DBC  00                 	db	0
   806  007DBD  00                 	db	0
   807  007DBE  00                 	db	0
   808  007DBF  00                 	db	0
   809  007DC0  00                 	db	0
   810  007DC1  76                 	db	118
   811  007DC2  61                 	db	97
   812  007DC3  63                 	db	99
   813  007DC4  63                 	db	99
   814  007DC5  69                 	db	105
   815  007DC6  6E                 	db	110
   816  007DC7  65                 	db	101
   817  007DC8  20                 	db	32
   818  007DC9  77                 	db	119
   819  007DCA  69                 	db	105
   820  007DCB  6C                 	db	108
   821  007DCC  6C                 	db	108
   822  007DCD  20                 	db	32
   823  007DCE  6E                 	db	110
   824  007DCF  6F                 	db	111
   825  007DD0  77                 	db	119
   826  007DD1  00                 	db	0
   827  007DD2  00                 	db	0
   828  007DD3  00                 	db	0
   829  007DD4  00                 	db	0
   830  007DD5  62                 	db	98
   831  007DD6  65                 	db	101
   832  007DD7  20                 	db	32
   833  007DD8  64                 	db	100
   834  007DD9  69                 	db	105
   835  007DDA  6C                 	db	108
   836  007DDB  75                 	db	117
   837  007DDC  74                 	db	116
   838  007DDD  65                 	db	101
   839  007DDE  64                 	db	100
   840  007DDF  00                 	db	0
   841  007DE0  00                 	db	0
   842  007DE1  00                 	db	0
   843  007DE2  00                 	db	0
   844  007DE3  00                 	db	0
   845  007DE4  00                 	db	0
   846  007DE5  00                 	db	0
   847  007DE6  00                 	db	0
   848  007DE7  00                 	db	0
   849  007DE8  00                 	db	0
   850  007DE9  00                 	db	0
   851  007DEA  00                 	db	0
   852  007DEB  00                 	db	0
   853  007DEC  00                 	db	0
   854  007DED  00                 	db	0
   855  007DEE  00                 	db	0
   856  007DEF  00                 	db	0
   857  007DF0  00                 	db	0
   858  007DF1  00                 	db	0
   859  007DF2  00                 	db	0
   860  007DF3  00                 	db	0
   861  007DF4  00                 	db	0
   862  007DF5  00                 	db	0
   863  007DF6  00                 	db	0
   864  007DF7  00                 	db	0
   865  007DF8  00                 	db	0
   866  007DF9  00                 	db	0
   867  007DFA  00                 	db	0
   868  007DFB  00                 	db	0
   869  007DFC  00                 	db	0
   870  007DFD  52                 	db	82
   871  007DFE  45                 	db	69
   872  007DFF  4C                 	db	76
   873  007E00  45                 	db	69
   874  007E01  41                 	db	65
   875  007E02  53                 	db	83
   876  007E03  49                 	db	73
   877  007E04  4E                 	db	78
   878  007E05  47                 	db	71
   879  007E06  3A                 	db	58
   880  007E07  00                 	db	0
   881  007E08  00                 	db	0
   882  007E09  00                 	db	0
   883  007E0A  00                 	db	0
   884  007E0B  00                 	db	0
   885  007E0C  00                 	db	0
   886  007E0D  00                 	db	0
   887  007E0E  00                 	db	0
   888  007E0F  00                 	db	0
   889  007E10  00                 	db	0
   890  007E11  72                 	db	114
   891  007E12  65                 	db	101
   892  007E13  6C                 	db	108
   893  007E14  65                 	db	101
   894  007E15  61                 	db	97
   895  007E16  73                 	db	115
   896  007E17  69                 	db	105
   897  007E18  6E                 	db	110
   898  007E19  67                 	db	103
   899  007E1A  20                 	db	32
   900  007E1B  68                 	db	104
   901  007E1C  61                 	db	97
   902  007E1D  73                 	db	115
   903  007E1E  00                 	db	0
   904  007E1F  00                 	db	0
   905  007E20  00                 	db	0
   906  007E21  00                 	db	0
   907  007E22  00                 	db	0
   908  007E23  00                 	db	0
   909  007E24  00                 	db	0
   910  007E25  73                 	db	115
   911  007E26  74                 	db	116
   912  007E27  61                 	db	97
   913  007E28  72                 	db	114
   914  007E29  74                 	db	116
   915  007E2A  65                 	db	101
   916  007E2B  64                 	db	100
   917  007E2C  00                 	db	0
   918  007E2D  00                 	db	0
   919  007E2E  00                 	db	0
   920  007E2F  00                 	db	0
   921  007E30  00                 	db	0
   922  007E31  00                 	db	0
   923  007E32  00                 	db	0
   924  007E33  00                 	db	0
   925  007E34  00                 	db	0
   926  007E35  00                 	db	0
   927  007E36  00                 	db	0
   928  007E37  00                 	db	0
   929  007E38  00                 	db	0
   930  007E39  00                 	db	0
   931  007E3A  00                 	db	0
   932  007E3B  00                 	db	0
   933  007E3C  00                 	db	0
   934  007E3D  00                 	db	0
   935  007E3E  00                 	db	0
   936  007E3F  00                 	db	0
   937  007E40  00                 	db	0
   938  007E41  00                 	db	0
   939  007E42  00                 	db	0
   940  007E43  00                 	db	0
   941  007E44  00                 	db	0
   942  007E45  00                 	db	0
   943  007E46  00                 	db	0
   944  007E47  00                 	db	0
   945  007E48  00                 	db	0
   946  007E49  00                 	db	0
   947  007E4A  00                 	db	0
   948  007E4B  00                 	db	0
   949  007E4C  00                 	db	0
   950  007E4D  50                 	db	80
   951  007E4E  49                 	db	73
   952  007E4F  43                 	db	67
   953  007E50  4B                 	db	75
   954  007E51  5F                 	db	95
   955  007E52  55                 	db	85
   956  007E53  50                 	db	80
   957  007E54  3A                 	db	58
   958  007E55  20                 	db	32
   959  007E56  74                 	db	116
   960  007E57  68                 	db	104
   961  007E58  65                 	db	101
   962  007E59  20                 	db	32
   963  007E5A  76                 	db	118
   964  007E5B  69                 	db	105
   965  007E5C  61                 	db	97
   966  007E5D  6C                 	db	108
   967  007E5E  00                 	db	0
   968  007E5F  00                 	db	0
   969  007E60  00                 	db	0
   970  007E61  68                 	db	104
   971  007E62  61                 	db	97
   972  007E63  73                 	db	115
   973  007E64  20                 	db	32
   974  007E65  72                 	db	114
   975  007E66  65                 	db	101
   976  007E67  61                 	db	97
   977  007E68  63                 	db	99
   978  007E69  68                 	db	104
   979  007E6A  65                 	db	101
   980  007E6B  64                 	db	100
   981  007E6C  20                 	db	32
   982  007E6D  74                 	db	116
   983  007E6E  68                 	db	104
   984  007E6F  65                 	db	101
   985  007E70  00                 	db	0
   986  007E71  00                 	db	0
   987  007E72  00                 	db	0
   988  007E73  00                 	db	0
   989  007E74  00                 	db	0
   990  007E75  70                 	db	112
   991  007E76  69                 	db	105
   992  007E77  63                 	db	99
   993  007E78  6B                 	db	107
   994  007E79  20                 	db	32
   995  007E7A  75                 	db	117
   996  007E7B  70                 	db	112
   997  007E7C  20                 	db	32
   998  007E7D  73                 	db	115
   999  007E7E  74                 	db	116
  1000  007E7F  61                 	db	97
  1001  007E80  74                 	db	116
  1002  007E81  69                 	db	105
  1003  007E82  6F                 	db	111
  1004  007E83  6E                 	db	110
  1005  007E84  00                 	db	0
  1006  007E85  00                 	db	0
  1007  007E86  00                 	db	0
  1008  007E87  00                 	db	0
  1009  007E88  00                 	db	0
  1010  007E89  00                 	db	0
  1011  007E8A  00                 	db	0
  1012  007E8B  00                 	db	0
  1013  007E8C  00                 	db	0
  1014  007E8D  00                 	db	0
  1015  007E8E  00                 	db	0
  1016  007E8F  00                 	db	0
  1017  007E90  00                 	db	0
  1018  007E91  00                 	db	0
  1019  007E92  00                 	db	0
  1020  007E93  00                 	db	0
  1021  007E94  00                 	db	0
  1022  007E95  00                 	db	0
  1023  007E96  00                 	db	0
  1024  007E97  00                 	db	0
  1025  007E98  00                 	db	0
  1026  007E99  00                 	db	0
  1027  007E9A  00                 	db	0
  1028  007E9B  00                 	db	0
  1029  007E9C  00                 	db	0
  1030  007E9D  50                 	db	80
  1031  007E9E  49                 	db	73
  1032  007E9F  43                 	db	67
  1033  007EA0  4B                 	db	75
  1034  007EA1  5F                 	db	95
  1035  007EA2  55                 	db	85
  1036  007EA3  50                 	db	80
  1037  007EA4  3A                 	db	58
  1038  007EA5  20                 	db	32
  1039  007EA6  70                 	db	112
  1040  007EA7  6C                 	db	108
  1041  007EA8  65                 	db	101
  1042  007EA9  61                 	db	97
  1043  007EAA  73                 	db	115
  1044  007EAB  65                 	db	101
  1045  007EAC  00                 	db	0
  1046  007EAD  00                 	db	0
  1047  007EAE  00                 	db	0
  1048  007EAF  00                 	db	0
  1049  007EB0  00                 	db	0
  1050  007EB1  70                 	db	112
  1051  007EB2  69                 	db	105
  1052  007EB3  63                 	db	99
  1053  007EB4  6B                 	db	107
  1054  007EB5  20                 	db	32
  1055  007EB6  75                 	db	117
  1056  007EB7  70                 	db	112
  1057  007EB8  20                 	db	32
  1058  007EB9  74                 	db	116
  1059  007EBA  68                 	db	104
  1060  007EBB  65                 	db	101
  1061  007EBC  00                 	db	0
  1062  007EBD  00                 	db	0
  1063  007EBE  00                 	db	0
  1064  007EBF  00                 	db	0
  1065  007EC0  00                 	db	0
  1066  007EC1  00                 	db	0
  1067  007EC2  00                 	db	0
  1068  007EC3  00                 	db	0
  1069  007EC4  00                 	db	0
  1070  007EC5  76                 	db	118
  1071  007EC6  69                 	db	105
  1072  007EC7  61                 	db	97
  1073  007EC8  6C                 	db	108
  1074  007EC9  20                 	db	32
  1075  007ECA  62                 	db	98
  1076  007ECB  65                 	db	101
  1077  007ECC  66                 	db	102
  1078  007ECD  6F                 	db	111
  1079  007ECE  72                 	db	114
  1080  007ECF  65                 	db	101
  1081  007ED0  00                 	db	0
  1082  007ED1  00                 	db	0
  1083  007ED2  00                 	db	0
  1084  007ED3  00                 	db	0
  1085  007ED4  00                 	db	0
  1086  007ED5  00                 	db	0
  1087  007ED6  00                 	db	0
  1088  007ED7  00                 	db	0
  1089  007ED8  00                 	db	0
  1090  007ED9  74                 	db	116
  1091  007EDA  69                 	db	105
  1092  007EDB  6D                 	db	109
  1093  007EDC  65                 	db	101
  1094  007EDD  6F                 	db	111
  1095  007EDE  75                 	db	117
  1096  007EDF  74                 	db	116
  1097  007EE0  00                 	db	0
  1098  007EE1  00                 	db	0
  1099  007EE2  00                 	db	0
  1100  007EE3  00                 	db	0
  1101  007EE4  00                 	db	0
  1102  007EE5  00                 	db	0
  1103  007EE6  00                 	db	0
  1104  007EE7  00                 	db	0
  1105  007EE8  00                 	db	0
  1106  007EE9  00                 	db	0
  1107  007EEA  00                 	db	0
  1108  007EEB  00                 	db	0
  1109  007EEC  00                 	db	0
  1110  007EED  50                 	db	80
  1111  007EEE  49                 	db	73
  1112  007EEF  43                 	db	67
  1113  007EF0  4B                 	db	75
  1114  007EF1  5F                 	db	95
  1115  007EF2  55                 	db	85
  1116  007EF3  50                 	db	80
  1117  007EF4  3A                 	db	58
  1118  007EF5  20                 	db	32
  1119  007EF6  74                 	db	116
  1120  007EF7  68                 	db	104
  1121  007EF8  65                 	db	101
  1122  007EF9  20                 	db	32
  1123  007EFA  76                 	db	118
  1124  007EFB  69                 	db	105
  1125  007EFC  61                 	db	97
  1126  007EFD  6C                 	db	108
  1127  007EFE  00                 	db	0
  1128  007EFF  00                 	db	0
  1129  007F00  00                 	db	0
  1130  007F01  68                 	db	104
  1131  007F02  61                 	db	97
  1132  007F03  73                 	db	115
  1133  007F04  20                 	db	32
  1134  007F05  62                 	db	98
  1135  007F06  65                 	db	101
  1136  007F07  65                 	db	101
  1137  007F08  6E                 	db	110
  1138  007F09  20                 	db	32
  1139  007F0A  70                 	db	112
  1140  007F0B  69                 	db	105
  1141  007F0C  63                 	db	99
  1142  007F0D  6B                 	db	107
  1143  007F0E  65                 	db	101
  1144  007F0F  64                 	db	100
  1145  007F10  00                 	db	0
  1146  007F11  00                 	db	0
  1147  007F12  00                 	db	0
  1148  007F13  00                 	db	0
  1149  007F14  00                 	db	0
  1150  007F15  67                 	db	103
  1151  007F16  6F                 	db	111
  1152  007F17  69                 	db	105
  1153  007F18  6E                 	db	110
  1154  007F19  67                 	db	103
  1155  007F1A  20                 	db	32
  1156  007F1B  62                 	db	98
  1157  007F1C  61                 	db	97
  1158  007F1D  63                 	db	99
  1159  007F1E  6B                 	db	107
  1160  007F1F  20                 	db	32
  1161  007F20  74                 	db	116
  1162  007F21  6F                 	db	111
  1163  007F22  00                 	db	0
  1164  007F23  00                 	db	0
  1165  007F24  00                 	db	0
  1166  007F25  00                 	db	0
  1167  007F26  00                 	db	0
  1168  007F27  00                 	db	0
  1169  007F28  00                 	db	0
  1170  007F29  69                 	db	105
  1171  007F2A  64                 	db	100
  1172  007F2B  6C                 	db	108
  1173  007F2C  65                 	db	101
  1174  007F2D  00                 	db	0
  1175  007F2E  00                 	db	0
  1176  007F2F  00                 	db	0
  1177  007F30  00                 	db	0
  1178  007F31  00                 	db	0
  1179  007F32  00                 	db	0
  1180  007F33  00                 	db	0
  1181  007F34  00                 	db	0
  1182  007F35  00                 	db	0
  1183  007F36  00                 	db	0
  1184  007F37  00                 	db	0
  1185  007F38  00                 	db	0
  1186  007F39  00                 	db	0
  1187  007F3A  00                 	db	0
  1188  007F3B  00                 	db	0
  1189  007F3C  00                 	db	0
  1190  007F3D  54                 	db	84
  1191  007F3E  52                 	db	82
  1192  007F3F  41                 	db	65
  1193  007F40  53                 	db	83
  1194  007F41  48                 	db	72
  1195  007F42  3A                 	db	58
  1196  007F43  20                 	db	32
  1197  007F44  74                 	db	116
  1198  007F45  69                 	db	105
  1199  007F46  6D                 	db	109
  1200  007F47  65                 	db	101
  1201  007F48  6F                 	db	111
  1202  007F49  75                 	db	117
  1203  007F4A  74                 	db	116
  1204  007F4B  00                 	db	0
  1205  007F4C  00                 	db	0
  1206  007F4D  00                 	db	0
  1207  007F4E  00                 	db	0
  1208  007F4F  00                 	db	0
  1209  007F50  00                 	db	0
  1210  007F51  65                 	db	101
  1211  007F52  78                 	db	120
  1212  007F53  63                 	db	99
  1213  007F54  65                 	db	101
  1214  007F55  65                 	db	101
  1215  007F56  64                 	db	100
  1216  007F57  65                 	db	101
  1217  007F58  64                 	db	100
  1218  007F59  20                 	db	32
  1219  007F5A  74                 	db	116
  1220  007F5B  68                 	db	104
  1221  007F5C  65                 	db	101
  1222  007F5D  00                 	db	0
  1223  007F5E  00                 	db	0
  1224  007F5F  00                 	db	0
  1225  007F60  00                 	db	0
  1226  007F61  00                 	db	0
  1227  007F62  00                 	db	0
  1228  007F63  00                 	db	0
  1229  007F64  00                 	db	0
  1230  007F65  76                 	db	118
  1231  007F66  69                 	db	105
  1232  007F67  61                 	db	97
  1233  007F68  6C                 	db	108
  1234  007F69  20                 	db	32
  1235  007F6A  77                 	db	119
  1236  007F6B  69                 	db	105
  1237  007F6C  6C                 	db	108
  1238  007F6D  6C                 	db	108
  1239  007F6E  20                 	db	32
  1240  007F6F  62                 	db	98
  1241  007F70  65                 	db	101
  1242  007F71  00                 	db	0
  1243  007F72  00                 	db	0
  1244  007F73  00                 	db	0
  1245  007F74  00                 	db	0
  1246  007F75  00                 	db	0
  1247  007F76  00                 	db	0
  1248  007F77  00                 	db	0
  1249  007F78  00                 	db	0
  1250  007F79  74                 	db	116
  1251  007F7A  72                 	db	114
  1252  007F7B  61                 	db	97
  1253  007F7C  73                 	db	115
  1254  007F7D  68                 	db	104
  1255  007F7E  65                 	db	101
  1256  007F7F  64                 	db	100
  1257  007F80  00                 	db	0
  1258  007F81  00                 	db	0
  1259  007F82  00                 	db	0
  1260  007F83  00                 	db	0
  1261  007F84  00                 	db	0
  1262  007F85  00                 	db	0
  1263  007F86  00                 	db	0
  1264  007F87  00                 	db	0
  1265  007F88  00                 	db	0
  1266  007F89  00                 	db	0
  1267  007F8A  00                 	db	0
  1268  007F8B  00                 	db	0
  1269  007F8C  00                 	db	0
  1270  007F8D  45                 	db	69
  1271  007F8E  52                 	db	82
  1272  007F8F  52                 	db	82
  1273  007F90  4F                 	db	79
  1274  007F91  52                 	db	82
  1275  007F92  00                 	db	0
  1276  007F93  00                 	db	0
  1277  007F94  00                 	db	0
  1278  007F95  00                 	db	0
  1279  007F96  00                 	db	0
  1280  007F97  00                 	db	0
  1281  007F98  00                 	db	0
  1282  007F99  00                 	db	0
  1283  007F9A  00                 	db	0
  1284  007F9B  00                 	db	0
  1285  007F9C  00                 	db	0
  1286  007F9D  00                 	db	0
  1287  007F9E  00                 	db	0
  1288  007F9F  00                 	db	0
  1289  007FA0  00                 	db	0
  1290  007FA1  00                 	db	0
  1291  007FA2  00                 	db	0
  1292  007FA3  00                 	db	0
  1293  007FA4  00                 	db	0
  1294  007FA5  00                 	db	0
  1295  007FA6  00                 	db	0
  1296  007FA7  00                 	db	0
  1297  007FA8  00                 	db	0
  1298  007FA9  00                 	db	0
  1299  007FAA  00                 	db	0
  1300  007FAB  00                 	db	0
  1301  007FAC  00                 	db	0
  1302  007FAD  00                 	db	0
  1303  007FAE  00                 	db	0
  1304  007FAF  00                 	db	0
  1305  007FB0  00                 	db	0
  1306  007FB1  00                 	db	0
  1307  007FB2  00                 	db	0
  1308  007FB3  00                 	db	0
  1309  007FB4  00                 	db	0
  1310  007FB5  00                 	db	0
  1311  007FB6  00                 	db	0
  1312  007FB7  00                 	db	0
  1313  007FB8  00                 	db	0
  1314  007FB9  00                 	db	0
  1315  007FBA  00                 	db	0
  1316  007FBB  00                 	db	0
  1317  007FBC  00                 	db	0
  1318  007FBD  00                 	db	0
  1319  007FBE  00                 	db	0
  1320  007FBF  00                 	db	0
  1321  007FC0  00                 	db	0
  1322  007FC1  00                 	db	0
  1323  007FC2  00                 	db	0
  1324  007FC3  00                 	db	0
  1325  007FC4  00                 	db	0
  1326  007FC5  00                 	db	0
  1327  007FC6  00                 	db	0
  1328  007FC7  00                 	db	0
  1329  007FC8  00                 	db	0
  1330  007FC9  00                 	db	0
  1331  007FCA  00                 	db	0
  1332  007FCB  00                 	db	0
  1333  007FCC  00                 	db	0
  1334  007FCD  00                 	db	0
  1335  007FCE  00                 	db	0
  1336  007FCF  00                 	db	0
  1337  007FD0  00                 	db	0
  1338  007FD1  00                 	db	0
  1339  007FD2  00                 	db	0
  1340  007FD3  00                 	db	0
  1341  007FD4  00                 	db	0
  1342  007FD5  00                 	db	0
  1343  007FD6  00                 	db	0
  1344  007FD7  00                 	db	0
  1345  007FD8  00                 	db	0
  1346  007FD9  00                 	db	0
  1347  007FDA  00                 	db	0
  1348  007FDB  00                 	db	0
  1349  007FDC  00                 	db	0
  1350  007FDD                     __end_of_const_msgs:
  1351                           	callstack 0
  1352  007FDD  37BD               	dw	14269
  1353  007FDF  3586               	dw	13702
  1354  007FE1                     __end_of_t_osc:
  1355                           	callstack 0
  1356  007FE1  2400               	dw	9216
  1357  007FE3  4974               	dw	18804
  1358  007FE5                     __end_of_f_osc:
  1359                           	callstack 0
  1360  007FE5  2400               	dw	9216
  1361  007FE7  4A74               	dw	19060
  1362  007FE9                     __end_of_fosc:
  1363                           	callstack 0
  1364  0000                     _ADCON1	set	4033
  1365  0000                     _ADRESL	set	4035
  1366  0000                     _ADRESH	set	4036
  1367  0000                     _ADCON0bits	set	4034
  1368  0000                     _ADCON0	set	4034
  1369  0000                     _CCPR1L	set	4030
  1370  0000                     _CCP1CONbits	set	4029
  1371  0000                     _CCP1CON	set	4029
  1372  0000                     _PR2	set	4043
  1373  0000                     _T2CONbits	set	4042
  1374  0000                     _TMR2	set	4044
  1375  0000                     _T2CON	set	4042
  1376  0000                     _TMR0H	set	4055
  1377  0000                     _TMR0L	set	4054
  1378  0000                     _PORTEbits	set	3972
  1379  0000                     _PORTD	set	3971
  1380  0000                     _TRISCbits	set	3988
  1381  0000                     _TRISC	set	3988
  1382  0000                     _PORTC	set	3970
  1383  0000                     _TRISB	set	3987
  1384  0000                     _PORTB	set	3969
  1385  0000                     _TRISA	set	3986
  1386  0000                     _PORTA	set	3968
  1387  0000                     _LATA	set	3977
  1388  0000                     _T0CON	set	4053
  1389  0000                     _PIR1bits	set	3998
  1390  0000                     _PIE1bits	set	3997
  1391  0000                     _T0CONbits	set	4053
  1392  0000                     _LATAbits	set	3977
  1393  0000                     _INTCONbits	set	4082
  1394  0000                     _RCREG	set	4014
  1395  0000                     _TXREG	set	4013
  1396  0000                     _RCSTAbits	set	4011
  1397  0000                     _TXSTAbits	set	4012
  1398  0000                     _SPBRG	set	4015
  1399  0000                     _LATC	set	3979
  1400  0000                     _LATB	set	3978
  1401  007FE9                     STR_1:
  1402  007FE9  44                 	db	68	;'D'
  1403  007FEA  65                 	db	101	;'e'
  1404  007FEB  76                 	db	118	;'v'
  1405  007FEC  69                 	db	105	;'i'
  1406  007FED  63                 	db	99	;'c'
  1407  007FEE  65                 	db	101	;'e'
  1408  007FEF  20                 	db	32
  1409  007FF0  68                 	db	104	;'h'
  1410  007FF1  61                 	db	97	;'a'
  1411  007FF2  73                 	db	115	;'s'
  1412  007FF3  20                 	db	32
  1413  007FF4  62                 	db	98	;'b'
  1414  007FF5  65                 	db	101	;'e'
  1415  007FF6  65                 	db	101	;'e'
  1416  007FF7  6E                 	db	110	;'n'
  1417  007FF8  20                 	db	32
  1418  007FF9  72                 	db	114	;'r'
  1419  007FFA  65                 	db	101	;'e'
  1420  007FFB  73                 	db	115	;'s'
  1421  007FFC  65                 	db	101	;'e'
  1422  007FFD  74                 	db	116	;'t'
  1423  007FFE  00                 	db	0
  1424  007FFF  00                 	db	0	; dummy byte at the end
  1425  0000                     
  1426                           ; #config settings
  1427                           
  1428                           	psect	cinit
  1429  002ADE                     __pcinit:
  1430                           	callstack 0
  1431  002ADE                     start_initialization:
  1432                           	callstack 0
  1433  002ADE                     __initialization:
  1434                           	callstack 0
  1435                           
  1436                           ; Initialize objects allocated to BANK0 (22 bytes)
  1437                           ; load TBLPTR registers with __pidataBANK0
  1438  002ADE  0E4E               	movlw	low __pidataBANK0
  1439  002AE0  6EF6               	movwf	tblptrl,c
  1440  002AE2  0E2D               	movlw	high __pidataBANK0
  1441  002AE4  6EF7               	movwf	tblptrh,c
  1442  002AE6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1443  002AE8  6EF8               	movwf	tblptru,c
  1444  002AEA  EE00  F0E3         	lfsr	0,__pdataBANK0
  1445  002AEE  EE10 F016          	lfsr	1,22
  1446  002AF2                     copy_data0:
  1447  002AF2  0009               	tblrd		*+
  1448  002AF4  CFF5 FFEE          	movff	tablat,postinc0
  1449  002AF8  50E5               	movf	postdec1,w,c
  1450  002AFA  50E1               	movf	fsr1l,w,c
  1451  002AFC  E1FA               	bnz	copy_data0
  1452                           
  1453                           ; Clear objects allocated to BANK1 (12 bytes)
  1454  002AFE  EE01  F000         	lfsr	0,__pbssBANK1
  1455  002B02  0E0C               	movlw	12
  1456  002B04                     clear_0:
  1457  002B04  6AEE               	clrf	postinc0,c
  1458  002B06  06E8               	decf	wreg,f,c
  1459  002B08  E1FD               	bnz	clear_0
  1460                           
  1461                           ; Clear objects allocated to BANK0 (64 bytes)
  1462  002B0A  EE00  F080         	lfsr	0,__pbssBANK0
  1463  002B0E  0E40               	movlw	64
  1464  002B10                     clear_1:
  1465  002B10  6AEE               	clrf	postinc0,c
  1466  002B12  06E8               	decf	wreg,f,c
  1467  002B14  E1FD               	bnz	clear_1
  1468  002B16                     end_of_initialization:
  1469                           	callstack 0
  1470  002B16                     __end_of__initialization:
  1471                           	callstack 0
  1472  002B16  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1473  002B18  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1474  002B1A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1475  002B1C  6EF8               	movwf	tblptru,c
  1476  002B1E  0100               	movlb	0
  1477  002B20  EF3E  F000         	goto	_main	;jump to C main() function
  1478                           
  1479                           	psect	bssBANK0
  1480  000080                     __pbssBANK0:
  1481                           	callstack 0
  1482  000080                     roundf@F525:
  1483                           	callstack 0
  1484  000080                     	ds	4
  1485  000084                     _temperature_scaled:
  1486                           	callstack 0
  1487  000084                     	ds	2
  1488  000086                     _temperature_int:
  1489                           	callstack 0
  1490  000086                     	ds	2
  1491  000088                     _tank_error:
  1492                           	callstack 0
  1493  000088                     	ds	2
  1494  00008A                     _joint_dilutor_homed:
  1495                           	callstack 0
  1496  00008A                     	ds	2
  1497  00008C                     _end_effector_homed:
  1498                           	callstack 0
  1499  00008C                     	ds	2
  1500  00008E                     _joint_homed:
  1501                           	callstack 0
  1502  00008E                     	ds	2
  1503  000090                     _diluting_position_reached:
  1504                           	callstack 0
  1505  000090                     	ds	2
  1506  000092                     _grasping_ee_position_reached:
  1507                           	callstack 0
  1508  000092                     	ds	2
  1509  000094                     _grasping_joint_position_reached:
  1510                           	callstack 0
  1511  000094                     	ds	2
  1512  000096                     _trash_counter:
  1513                           	callstack 0
  1514  000096                     	ds	2
  1515  000098                     _dilution_done:
  1516                           	callstack 0
  1517  000098                     	ds	2
  1518  00009A                     _mix_counter:
  1519                           	callstack 0
  1520  00009A                     	ds	2
  1521  00009C                     _mix_step_counter:
  1522                           	callstack 0
  1523  00009C                     	ds	2
  1524  00009E                     _mix_direction:
  1525                           	callstack 0
  1526  00009E                     	ds	2
  1527  0000A0                     _mix_current_step:
  1528                           	callstack 0
  1529  0000A0                     	ds	2
  1530  0000A2                     _timer_done:
  1531                           	callstack 0
  1532  0000A2                     	ds	1
  1533  0000A3                     _read_new_char:
  1534                           	callstack 0
  1535  0000A3                     	ds	1
  1536  0000A4                     _idle_msg_sent:
  1537                           	callstack 0
  1538  0000A4                     	ds	1
  1539  0000A5                     _state_changed:
  1540                           	callstack 0
  1541  0000A5                     	ds	1
  1542  0000A6                     _end_effector_stepper:
  1543                           	callstack 0
  1544  0000A6                     	ds	12
  1545  0000B2                     _joint_stepper:
  1546                           	callstack 0
  1547  0000B2                     	ds	12
  1548  0000BE                     _state:
  1549                           	callstack 0
  1550  0000BE                     	ds	2
  1551                           
  1552                           	psect	dataBANK0
  1553  0000E3                     __pdataBANK0:
  1554                           	callstack 0
  1555  0000E3                     	ds	4
  1556  0000E7                     	ds	4
  1557  0000EB                     _state_before_error:
  1558                           	callstack 0
  1559  0000EB                     	ds	2
  1560  0000ED                     _tmr2_prescaler:
  1561                           	callstack 0
  1562  0000ED                     	ds	4
  1563  0000F1                     _hex_end_effector_values:
  1564                           	callstack 0
  1565  0000F1                     	ds	4
  1566  0000F5                     _hex_joint_values:
  1567                           	callstack 0
  1568  0000F5                     	ds	4
  1569                           
  1570                           	psect	bssBANK1
  1571  000100                     __pbssBANK1:
  1572                           	callstack 0
  1573  000100                     _joint_dilutor_stepper:
  1574                           	callstack 0
  1575  000100                     	ds	12
  1576                           
  1577                           	psect	cstackBANK0
  1578  0000C0                     __pcstackBANK0:
  1579                           	callstack 0
  1580  0000C0                     ?_roundf:
  1581                           	callstack 0
  1582  0000C0                     check_temperature@grad:
  1583                           	callstack 0
  1584  0000C0                     roundf@x:
  1585                           	callstack 0
  1586                           
  1587                           ; 4 bytes @ 0x0
  1588  0000C0                     	ds	4
  1589  0000C4                     ??_roundf:
  1590                           
  1591                           ; 1 bytes @ 0x4
  1592  0000C4                     	ds	4
  1593  0000C8                     _roundf$1738:
  1594                           	callstack 0
  1595                           
  1596                           ; 4 bytes @ 0x8
  1597  0000C8                     	ds	4
  1598  0000CC                     roundf@e:
  1599                           	callstack 0
  1600                           
  1601                           ; 2 bytes @ 0xC
  1602  0000CC                     	ds	2
  1603  0000CE                     _roundf$1737:
  1604                           	callstack 0
  1605                           
  1606                           ; 4 bytes @ 0xE
  1607  0000CE                     	ds	4
  1608  0000D2                     roundf@u:
  1609                           	callstack 0
  1610                           
  1611                           ; 4 bytes @ 0x12
  1612  0000D2                     	ds	4
  1613  0000D6                     roundf@y:
  1614                           	callstack 0
  1615                           
  1616                           ; 4 bytes @ 0x16
  1617  0000D6                     	ds	4
  1618  0000DA                     ??_main:
  1619                           
  1620                           ; 1 bytes @ 0x1A
  1621  0000DA                     	ds	2
  1622  0000DC                     main@current_temp:
  1623                           	callstack 0
  1624                           
  1625                           ; 2 bytes @ 0x1C
  1626  0000DC                     	ds	2
  1627  0000DE                     _main$1735:
  1628                           	callstack 0
  1629                           
  1630                           ; 4 bytes @ 0x1E
  1631  0000DE                     	ds	4
  1632  0000E2                     main@rx_char:
  1633                           	callstack 0
  1634                           
  1635                           ; 1 bytes @ 0x22
  1636  0000E2                     	ds	1
  1637                           
  1638                           	psect	cstackCOMRAM
  1639  000001                     __pcstackCOMRAM:
  1640                           	callstack 0
  1641  000001                     ?_abs:
  1642                           	callstack 0
  1643  000001                     ?___wmul:
  1644                           	callstack 0
  1645  000001                     ?___flneg:
  1646                           	callstack 0
  1647  000001                     serial_tx_char@val:
  1648                           	callstack 0
  1649  000001                     get_reg_value@rx_char:
  1650                           	callstack 0
  1651  000001                     lcd_wr@val:
  1652                           	callstack 0
  1653  000001                     state_translator_micro_to_fpga@state:
  1654                           	callstack 0
  1655  000001                     init_stepper@stepper_motor:
  1656                           	callstack 0
  1657  000001                     turn_on_current_coil@stepper_motor:
  1658                           	callstack 0
  1659  000001                     update_current_coil@stepper_motor:
  1660                           	callstack 0
  1661  000001                     change_direction@stepper_motor:
  1662                           	callstack 0
  1663  000001                     ___wmul@multiplier:
  1664                           	callstack 0
  1665  000001                     abs@a:
  1666                           	callstack 0
  1667  000001                     ___flneg@f1:
  1668                           	callstack 0
  1669                           
  1670                           ; 4 bytes @ 0x0
  1671  000001                     	ds	1
  1672  000002                     lcd_cmd@val:
  1673                           	callstack 0
  1674  000002                     lcd_dat@val:
  1675                           	callstack 0
  1676                           
  1677                           ; 1 bytes @ 0x1
  1678  000002                     	ds	1
  1679  000003                     ??_lcd_init:
  1680  000003                     ??_change_direction:
  1681  000003                     ??_abs:
  1682  000003                     ??_turn_on_current_coil:
  1683  000003                     ??_update_current_coil:
  1684  000003                     state_translator_fpga_to_micro@state:
  1685                           	callstack 0
  1686  000003                     init_stepper@current_coil:
  1687                           	callstack 0
  1688  000003                     ___wmul@multiplicand:
  1689                           	callstack 0
  1690                           
  1691                           ; 2 bytes @ 0x2
  1692  000003                     	ds	2
  1693  000005                     ?___awdiv:
  1694                           	callstack 0
  1695  000005                     state_translator_fpga_to_micro@state_machine_code:
  1696                           	callstack 0
  1697  000005                     state_translator_micro_to_fpga@state_machine_code:
  1698                           	callstack 0
  1699  000005                     init_stepper@step_counter:
  1700                           	callstack 0
  1701  000005                     ___wmul@product:
  1702                           	callstack 0
  1703  000005                     ___awdiv@dividend:
  1704                           	callstack 0
  1705                           
  1706                           ; 2 bytes @ 0x4
  1707  000005                     	ds	2
  1708  000007                     lcd_str@str:
  1709                           	callstack 0
  1710  000007                     init_stepper@direction:
  1711                           	callstack 0
  1712  000007                     ___awdiv@divisor:
  1713                           	callstack 0
  1714                           
  1715                           ; 2 bytes @ 0x6
  1716  000007                     	ds	2
  1717  000009                     ??_lcd_str:
  1718  000009                     ?_reach_goal:
  1719                           	callstack 0
  1720  000009                     ___awdiv@counter:
  1721                           	callstack 0
  1722  000009                     init_stepper@hex_coil_register_values:
  1723                           	callstack 0
  1724  000009                     reach_goal@stepper_motor:
  1725                           	callstack 0
  1726                           
  1727                           ; 2 bytes @ 0x8
  1728  000009                     	ds	1
  1729  00000A                     ___awdiv@sign:
  1730                           	callstack 0
  1731                           
  1732                           ; 1 bytes @ 0x9
  1733  00000A                     	ds	1
  1734  00000B                     lcd_str@i:
  1735                           	callstack 0
  1736  00000B                     init_stepper@register_name:
  1737                           	callstack 0
  1738  00000B                     reach_goal@goal_to_reach:
  1739                           	callstack 0
  1740  00000B                     ___awdiv@quotient:
  1741                           	callstack 0
  1742                           
  1743                           ; 2 bytes @ 0xA
  1744  00000B                     	ds	1
  1745  00000C                     lcd_update@state:
  1746                           	callstack 0
  1747                           
  1748                           ; 2 bytes @ 0xB
  1749  00000C                     	ds	1
  1750  00000D                     ??_init_stepper:
  1751  00000D                     ??_reach_goal:
  1752  00000D                     ?___xxtofl:
  1753                           	callstack 0
  1754  00000D                     ___xxtofl@val:
  1755                           	callstack 0
  1756                           
  1757                           ; 4 bytes @ 0xC
  1758  00000D                     	ds	1
  1759  00000E                     ??_lcd_update:
  1760                           
  1761                           ; 1 bytes @ 0xD
  1762  00000E                     	ds	1
  1763  00000F                     init_stepper@i:
  1764                           	callstack 0
  1765                           
  1766                           ; 2 bytes @ 0xE
  1767  00000F                     	ds	1
  1768  000010                     lcd_update@line_select:
  1769                           	callstack 0
  1770                           
  1771                           ; 4 bytes @ 0xF
  1772  000010                     	ds	1
  1773  000011                     ??___xxtofl:
  1774                           
  1775                           ; 1 bytes @ 0x10
  1776  000011                     	ds	3
  1777  000014                     lcd_update@i:
  1778                           	callstack 0
  1779                           
  1780                           ; 2 bytes @ 0x13
  1781  000014                     	ds	1
  1782  000015                     ___xxtofl@sign:
  1783                           	callstack 0
  1784                           
  1785                           ; 1 bytes @ 0x14
  1786  000015                     	ds	1
  1787  000016                     ___xxtofl@exp:
  1788                           	callstack 0
  1789                           
  1790                           ; 1 bytes @ 0x15
  1791  000016                     	ds	1
  1792  000017                     ___xxtofl@arg:
  1793                           	callstack 0
  1794                           
  1795                           ; 4 bytes @ 0x16
  1796  000017                     	ds	4
  1797  00001B                     ?___flmul:
  1798                           	callstack 0
  1799  00001B                     ___flmul@b:
  1800                           	callstack 0
  1801                           
  1802                           ; 4 bytes @ 0x1A
  1803  00001B                     	ds	4
  1804  00001F                     ___flmul@a:
  1805                           	callstack 0
  1806                           
  1807                           ; 4 bytes @ 0x1E
  1808  00001F                     	ds	4
  1809  000023                     ??___flmul:
  1810                           
  1811                           ; 1 bytes @ 0x22
  1812  000023                     	ds	4
  1813  000027                     ___flmul@sign:
  1814                           	callstack 0
  1815                           
  1816                           ; 1 bytes @ 0x26
  1817  000027                     	ds	1
  1818  000028                     ___flmul@grs:
  1819                           	callstack 0
  1820                           
  1821                           ; 4 bytes @ 0x27
  1822  000028                     	ds	4
  1823  00002C                     ___flmul@aexp:
  1824                           	callstack 0
  1825                           
  1826                           ; 1 bytes @ 0x2B
  1827  00002C                     	ds	1
  1828  00002D                     ___flmul@bexp:
  1829                           	callstack 0
  1830                           
  1831                           ; 1 bytes @ 0x2C
  1832  00002D                     	ds	1
  1833  00002E                     ___flmul@prod:
  1834                           	callstack 0
  1835                           
  1836                           ; 4 bytes @ 0x2D
  1837  00002E                     	ds	4
  1838  000032                     ___flmul@temp:
  1839                           	callstack 0
  1840                           
  1841                           ; 2 bytes @ 0x31
  1842  000032                     	ds	2
  1843  000034                     ?___fldiv:
  1844                           	callstack 0
  1845  000034                     ___fldiv@b:
  1846                           	callstack 0
  1847                           
  1848                           ; 4 bytes @ 0x33
  1849  000034                     	ds	4
  1850  000038                     ___fldiv@a:
  1851                           	callstack 0
  1852                           
  1853                           ; 4 bytes @ 0x37
  1854  000038                     	ds	4
  1855  00003C                     ??___fldiv:
  1856                           
  1857                           ; 1 bytes @ 0x3B
  1858  00003C                     	ds	4
  1859  000040                     ___fldiv@rem:
  1860                           	callstack 0
  1861                           
  1862                           ; 4 bytes @ 0x3F
  1863  000040                     	ds	4
  1864  000044                     ___fldiv@sign:
  1865                           	callstack 0
  1866                           
  1867                           ; 1 bytes @ 0x43
  1868  000044                     	ds	1
  1869  000045                     ___fldiv@new_exp:
  1870                           	callstack 0
  1871                           
  1872                           ; 2 bytes @ 0x44
  1873  000045                     	ds	2
  1874  000047                     ___fldiv@grs:
  1875                           	callstack 0
  1876                           
  1877                           ; 4 bytes @ 0x46
  1878  000047                     	ds	4
  1879  00004B                     ___fldiv@bexp:
  1880                           	callstack 0
  1881                           
  1882                           ; 1 bytes @ 0x4A
  1883  00004B                     	ds	1
  1884  00004C                     ___fldiv@aexp:
  1885                           	callstack 0
  1886                           
  1887                           ; 1 bytes @ 0x4B
  1888  00004C                     	ds	1
  1889  00004D                     ?___fladd:
  1890                           	callstack 0
  1891  00004D                     ___fladd@b:
  1892                           	callstack 0
  1893                           
  1894                           ; 4 bytes @ 0x4C
  1895  00004D                     	ds	4
  1896  000051                     ___fladd@a:
  1897                           	callstack 0
  1898                           
  1899                           ; 4 bytes @ 0x50
  1900  000051                     	ds	4
  1901  000055                     ??___fladd:
  1902                           
  1903                           ; 1 bytes @ 0x54
  1904  000055                     	ds	4
  1905  000059                     ___fladd@signs:
  1906                           	callstack 0
  1907                           
  1908                           ; 1 bytes @ 0x58
  1909  000059                     	ds	1
  1910  00005A                     ___fladd@aexp:
  1911                           	callstack 0
  1912                           
  1913                           ; 1 bytes @ 0x59
  1914  00005A                     	ds	1
  1915  00005B                     ___fladd@bexp:
  1916                           	callstack 0
  1917                           
  1918                           ; 1 bytes @ 0x5A
  1919  00005B                     	ds	1
  1920  00005C                     ___fladd@grs:
  1921                           	callstack 0
  1922                           
  1923                           ; 1 bytes @ 0x5B
  1924  00005C                     	ds	1
  1925  00005D                     ?___flsub:
  1926                           	callstack 0
  1927  00005D                     ___flsub@b:
  1928                           	callstack 0
  1929                           
  1930                           ; 4 bytes @ 0x5C
  1931  00005D                     	ds	4
  1932  000061                     ___flsub@a:
  1933                           	callstack 0
  1934                           
  1935                           ; 4 bytes @ 0x60
  1936  000061                     	ds	4
  1937  000065                     ?___fltol:
  1938                           	callstack 0
  1939  000065                     ___fltol@f1:
  1940                           	callstack 0
  1941                           
  1942                           ; 4 bytes @ 0x64
  1943  000065                     	ds	4
  1944  000069                     ??___fltol:
  1945                           
  1946                           ; 1 bytes @ 0x68
  1947  000069                     	ds	4
  1948  00006D                     ___fltol@sign1:
  1949                           	callstack 0
  1950                           
  1951                           ; 1 bytes @ 0x6C
  1952  00006D                     	ds	1
  1953  00006E                     ___fltol@exp1:
  1954                           	callstack 0
  1955                           
  1956                           ; 1 bytes @ 0x6D
  1957  00006E                     	ds	1
  1958  00006F                     ?_get_liters:
  1959                           	callstack 0
  1960  00006F                     ?_get_temperature:
  1961                           	callstack 0
  1962  00006F                     update_pwm_duty_ccp1@time_up:
  1963                           	callstack 0
  1964  00006F                     _init_timer_2$1736:
  1965                           	callstack 0
  1966                           
  1967                           ; 4 bytes @ 0x6E
  1968  00006F                     	ds	2
  1969  000071                     ___flge@ff1:
  1970                           	callstack 0
  1971                           
  1972                           ; 4 bytes @ 0x70
  1973  000071                     	ds	2
  1974  000073                     ??_update_pwm_duty_ccp1:
  1975                           
  1976                           ; 1 bytes @ 0x72
  1977  000073                     	ds	2
  1978  000075                     update_pwm_duty_ccp1@new_duty:
  1979                           	callstack 0
  1980  000075                     ___flge@ff2:
  1981                           	callstack 0
  1982                           
  1983                           ; 4 bytes @ 0x74
  1984  000075                     	ds	2
  1985  000077                     update_pwm_duty_ccp1@lsbs_duty:
  1986                           	callstack 0
  1987                           
  1988                           ; 1 bytes @ 0x76
  1989  000077                     	ds	1
  1990  000078                     
  1991                           ; 1 bytes @ 0x77
  1992  000078                     	ds	1
  1993  000079                     ??___flge:
  1994                           
  1995                           ; 1 bytes @ 0x78
  1996  000079                     	ds	4
  1997  00007D                     ?_check_temperature:
  1998                           	callstack 0
  1999  00007D                     check_temperature@temp_to_be_checked:
  2000                           	callstack 0
  2001                           
  2002                           ; 2 bytes @ 0x7C
  2003  00007D                     	ds	2
  2004  00007F                     
  2005                           ; 1 bytes @ 0x7E
  2006 ;;
  2007 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2008 ;;
  2009 ;; *************** function _main *****************
  2010 ;; Defined at:
  2011 ;;		line 57 in file "main.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;		None
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;  current_temp    2   28[BANK0 ] int 
  2016 ;;  greet_str     240    0        PTR const unsigned char 
  2017 ;;  rx_char         1   34[BANK0 ] unsigned char 
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  1    wreg      void 
  2020 ;; Registers used:
  2021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2027 ;;      Params:         0       0       0       0       0       0       0
  2028 ;;      Locals:         0       7       0       0       0       0       0
  2029 ;;      Temps:          0       2       0       0       0       0       0
  2030 ;;      Totals:         0       9       0       0       0       0       0
  2031 ;;Total ram usage:        9 bytes
  2032 ;; Hardware stack levels required when called:    5
  2033 ;; This function calls:
  2034 ;;		___flge
  2035 ;;		___wmul
  2036 ;;		___xxtofl
  2037 ;;		_change_direction
  2038 ;;		_check_temperature
  2039 ;;		_configure_ad_conversion_oven
  2040 ;;		_configure_ad_conversion_tank
  2041 ;;		_get_liters
  2042 ;;		_get_reg_value
  2043 ;;		_get_temperature
  2044 ;;		_init_PORTS
  2045 ;;		_init_USART
  2046 ;;		_init_ccp1
  2047 ;;		_init_interrupts
  2048 ;;		_init_stepper
  2049 ;;		_init_timer_0
  2050 ;;		_init_timer_2
  2051 ;;		_lcd_cmd
  2052 ;;		_lcd_init
  2053 ;;		_lcd_str
  2054 ;;		_lcd_update
  2055 ;;		_reach_goal
  2056 ;;		_serial_tx_char
  2057 ;;		_state_translator_fpga_to_micro
  2058 ;;		_state_translator_micro_to_fpga
  2059 ;;		_wait_for_zero
  2060 ;; This function is called by:
  2061 ;;		Startup code after reset
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           	psect	text0
  2066  00007C                     __ptext0:
  2067                           	callstack 0
  2068  00007C                     _main:
  2069                           	callstack 26
  2070  00007C  FFFF               	dw	65535	; assembler added errata NOP
  2071                           
  2072                           ;main.c: 59:     init_PORTS();
  2073  00007E  ECEF  F015         	call	_init_PORTS	;wreg free
  2074  000082                     
  2075                           ;main.c: 60:     init_USART();
  2076  000082  EC92  F015         	call	_init_USART	;wreg free
  2077  000086                     
  2078                           ;main.c: 61:     init_timer_2();
  2079  000086  EC24  F012         	call	_init_timer_2	;wreg free
  2080  00008A                     
  2081                           ;main.c: 62:     init_ccp1();
  2082  00008A  EC68  F016         	call	_init_ccp1	;wreg free
  2083  00008E                     
  2084                           ;main.c: 63:     init_interrupts();
  2085  00008E  ECC0  F016         	call	_init_interrupts	;wreg free
  2086  000092                     
  2087                           ;main.c: 65:     init_stepper(&joint_stepper, 0, 0, 1, hex_joint_values, &LATB);
  2088  000092  0EB2               	movlw	low _joint_stepper
  2089  000094  6E01               	movwf	init_stepper@stepper_motor^0,c
  2090  000096  0E00               	movlw	high _joint_stepper
  2091  000098  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  2092  00009A  0E00               	movlw	0
  2093  00009C  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  2094  00009E  0E00               	movlw	0
  2095  0000A0  6E03               	movwf	init_stepper@current_coil^0,c
  2096  0000A2  0E00               	movlw	0
  2097  0000A4  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  2098  0000A6  0E00               	movlw	0
  2099  0000A8  6E05               	movwf	init_stepper@step_counter^0,c
  2100  0000AA  0E00               	movlw	0
  2101  0000AC  6E08               	movwf	(init_stepper@direction+1)^0,c
  2102  0000AE  0E01               	movlw	1
  2103  0000B0  6E07               	movwf	init_stepper@direction^0,c
  2104  0000B2  0EF5               	movlw	low _hex_joint_values
  2105  0000B4  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  2106  0000B6  0E00               	movlw	high _hex_joint_values
  2107  0000B8  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  2108  0000BA  0E8A               	movlw	138
  2109  0000BC  6E0B               	movwf	init_stepper@register_name^0,c
  2110  0000BE  0E0F               	movlw	15
  2111  0000C0  6E0C               	movwf	(init_stepper@register_name+1)^0,c
  2112  0000C2  EC49  F013         	call	_init_stepper	;wreg free
  2113  0000C6                     
  2114                           ;main.c: 66:     init_stepper(&end_effector_stepper, 0, 0, 1, hex_end_effector_values, &
      +                          LATB);
  2115  0000C6  0EA6               	movlw	low _end_effector_stepper
  2116  0000C8  6E01               	movwf	init_stepper@stepper_motor^0,c
  2117  0000CA  0E00               	movlw	high _end_effector_stepper
  2118  0000CC  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  2119  0000CE  0E00               	movlw	0
  2120  0000D0  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  2121  0000D2  0E00               	movlw	0
  2122  0000D4  6E03               	movwf	init_stepper@current_coil^0,c
  2123  0000D6  0E00               	movlw	0
  2124  0000D8  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  2125  0000DA  0E00               	movlw	0
  2126  0000DC  6E05               	movwf	init_stepper@step_counter^0,c
  2127  0000DE  0E00               	movlw	0
  2128  0000E0  6E08               	movwf	(init_stepper@direction+1)^0,c
  2129  0000E2  0E01               	movlw	1
  2130  0000E4  6E07               	movwf	init_stepper@direction^0,c
  2131  0000E6  0EF1               	movlw	low _hex_end_effector_values
  2132  0000E8  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  2133  0000EA  0E00               	movlw	high _hex_end_effector_values
  2134  0000EC  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  2135  0000EE  0E8A               	movlw	138
  2136  0000F0  6E0B               	movwf	init_stepper@register_name^0,c
  2137  0000F2  0E0F               	movlw	15
  2138  0000F4  6E0C               	movwf	(init_stepper@register_name+1)^0,c
  2139  0000F6  EC49  F013         	call	_init_stepper	;wreg free
  2140  0000FA                     
  2141                           ;main.c: 67:     init_stepper(&joint_dilutor_stepper, 0, 0, 1, hex_joint_values, &LATC);
  2142  0000FA  0E00               	movlw	low _joint_dilutor_stepper
  2143  0000FC  6E01               	movwf	init_stepper@stepper_motor^0,c
  2144  0000FE  0E01               	movlw	high _joint_dilutor_stepper
  2145  000100  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  2146  000102  0E00               	movlw	0
  2147  000104  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  2148  000106  0E00               	movlw	0
  2149  000108  6E03               	movwf	init_stepper@current_coil^0,c
  2150  00010A  0E00               	movlw	0
  2151  00010C  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  2152  00010E  0E00               	movlw	0
  2153  000110  6E05               	movwf	init_stepper@step_counter^0,c
  2154  000112  0E00               	movlw	0
  2155  000114  6E08               	movwf	(init_stepper@direction+1)^0,c
  2156  000116  0E01               	movlw	1
  2157  000118  6E07               	movwf	init_stepper@direction^0,c
  2158  00011A  0EF5               	movlw	low _hex_joint_values
  2159  00011C  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  2160  00011E  0E00               	movlw	high _hex_joint_values
  2161  000120  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  2162  000122  0E8B               	movlw	139
  2163  000124  6E0B               	movwf	init_stepper@register_name^0,c
  2164  000126  0E0F               	movlw	15
  2165  000128  6E0C               	movwf	(init_stepper@register_name+1)^0,c
  2166  00012A  EC49  F013         	call	_init_stepper	;wreg free
  2167  00012E                     
  2168                           ;main.c: 69:     lcd_init();
  2169  00012E  ECE2  F013         	call	_lcd_init	;wreg free
  2170  000132                     
  2171                           ;main.c: 70:     lcd_cmd(0x0C);
  2172  000132  0E0C               	movlw	12
  2173  000134  EC2F  F016         	call	_lcd_cmd
  2174  000138                     
  2175                           ;main.c: 72:     lcd_cmd(0x01);
  2176  000138  0E01               	movlw	1
  2177  00013A  EC2F  F016         	call	_lcd_cmd
  2178  00013E                     
  2179                           ;main.c: 73:     lcd_cmd(0x80);
  2180  00013E  0E80               	movlw	128
  2181  000140  EC2F  F016         	call	_lcd_cmd
  2182  000144                     
  2183                           ;main.c: 74:     lcd_str("Device has been reset");
  2184  000144  0EE9               	movlw	low STR_1
  2185  000146  6E07               	movwf	lcd_str@str^0,c
  2186  000148  0E7F               	movlw	high STR_1
  2187  00014A  6E08               	movwf	(lcd_str@str+1)^0,c
  2188  00014C  ECCB  F014         	call	_lcd_str	;wreg free
  2189  000150                     
  2190                           ;main.c: 76:     (INTCONbits.GIE = 1);
  2191  000150  8EF2               	bsf	242,7,c	;volatile
  2192  000152                     
  2193                           ;main.c: 78:     mix_counter = 0;
  2194  000152  0E00               	movlw	0
  2195  000154  0100               	movlb	0	; () banked
  2196  000156  6F9B               	movwf	(_mix_counter+1)& (0+255),b
  2197  000158  0E00               	movlw	0
  2198  00015A  6F9A               	movwf	_mix_counter& (0+255),b
  2199  00015C                     l3462:
  2200  00015C  FFFF               	dw	65535	; assembler added errata NOP
  2201                           
  2202                           ; BSR set to: 0
  2203                           ;main.c: 81:         if (state_changed){
  2204  00015E  51A5               	movf	_state_changed& (0+255),w,b
  2205  000160  B4D8               	btfsc	status,2,c
  2206  000162  EFB5  F000         	goto	u3421
  2207  000166  EFB8  F000         	goto	u3420
  2208  00016A                     u3421:
  2209  00016A  FFFF               	dw	65535	; assembler added errata NOP
  2210  00016C  EFE8  F000         	goto	l3480
  2211  000170                     u3420:
  2212  000170  FFFF               	dw	65535	; assembler added errata NOP
  2213  000172                     
  2214                           ; BSR set to: 0
  2215                           ;main.c: 82:             const char* greet_str[80];;main.c: 83:             if (read_new
      +                          _char){
  2216  000172  51A3               	movf	_read_new_char& (0+255),w,b
  2217  000174  B4D8               	btfsc	status,2,c
  2218  000176  EFBF  F000         	goto	u3431
  2219  00017A  EFC2  F000         	goto	u3430
  2220  00017E                     u3431:
  2221  00017E  FFFF               	dw	65535	; assembler added errata NOP
  2222  000180  EFD3  F000         	goto	l3472
  2223  000184                     u3430:
  2224  000184  FFFF               	dw	65535	; assembler added errata NOP
  2225  000186                     
  2226                           ; BSR set to: 0
  2227                           ;main.c: 84:                 rx_char = get_reg_value();
  2228  000186  ECB2  F016         	call	_get_reg_value	;wreg free
  2229  00018A  0100               	movlb	0	; () banked
  2230  00018C  6FE2               	movwf	main@rx_char& (0+255),b
  2231  00018E                     
  2232                           ; BSR set to: 0
  2233                           ;main.c: 85:                 state_translator_fpga_to_micro(rx_char, &state);
  2234  00018E  0EBE               	movlw	low _state
  2235  000190  6E03               	movwf	state_translator_fpga_to_micro@state^0,c
  2236  000192  0E00               	movlw	high _state
  2237  000194  6E04               	movwf	(state_translator_fpga_to_micro@state+1)^0,c
  2238  000196  51E2               	movf	main@rx_char& (0+255),w,b
  2239  000198  ECEE  F00E         	call	_state_translator_fpga_to_micro
  2240  00019C                     
  2241                           ;main.c: 86:                 read_new_char = 0;
  2242  00019C  0E00               	movlw	0
  2243  00019E  0100               	movlb	0	; () banked
  2244  0001A0  6FA3               	movwf	_read_new_char& (0+255),b
  2245                           
  2246                           ;main.c: 87:             } else {
  2247  0001A2  EFDC  F000         	goto	l3474
  2248  0001A6                     l3472:
  2249  0001A6  FFFF               	dw	65535	; assembler added errata NOP
  2250                           
  2251                           ; BSR set to: 0
  2252                           ;main.c: 88:                 serial_tx_char(state_translator_micro_to_fpga(&state));
  2253  0001A8  0EBE               	movlw	low _state
  2254  0001AA  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  2255  0001AC  0E00               	movlw	high _state
  2256  0001AE  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  2257  0001B0  EC9D  F013         	call	_state_translator_micro_to_fpga	;wreg free
  2258  0001B4  EC79  F016         	call	_serial_tx_char
  2259  0001B8                     l3474:
  2260  0001B8  FFFF               	dw	65535	; assembler added errata NOP
  2261                           
  2262                           ;main.c: 90:             lcd_update(state);
  2263  0001BA  C0BE  F00C         	movff	_state,lcd_update@state
  2264  0001BE  C0BF  F00D         	movff	_state+1,lcd_update@state+1
  2265  0001C2  ECEB  F012         	call	_lcd_update	;wreg free
  2266  0001C6                     
  2267                           ;main.c: 91:             state_changed = 0;
  2268  0001C6  0E00               	movlw	0
  2269  0001C8  0100               	movlb	0	; () banked
  2270  0001CA  6FA5               	movwf	_state_changed& (0+255),b
  2271  0001CC                     
  2272                           ; BSR set to: 0
  2273                           ;main.c: 92:             idle_msg_sent = 0;
  2274  0001CC  0E00               	movlw	0
  2275  0001CE  6FA4               	movwf	_idle_msg_sent& (0+255),b
  2276  0001D0                     l3480:
  2277  0001D0  FFFF               	dw	65535	; assembler added errata NOP
  2278                           
  2279                           ; BSR set to: 0
  2280                           ;main.c: 95:         tank_error = 0;
  2281  0001D2  0E00               	movlw	0
  2282  0001D4  6F89               	movwf	(_tank_error+1)& (0+255),b
  2283  0001D6  0E00               	movlw	0
  2284  0001D8  6F88               	movwf	_tank_error& (0+255),b
  2285  0001DA                     
  2286                           ; BSR set to: 0
  2287                           ;main.c: 107:         if (state == 2){
  2288  0001DA  0E02               	movlw	2
  2289  0001DC  19BE               	xorwf	_state& (0+255),w,b
  2290  0001DE  11BF               	iorwf	(_state+1)& (0+255),w,b
  2291  0001E0  A4D8               	btfss	status,2,c
  2292  0001E2  EFF5  F000         	goto	u3441
  2293  0001E6  EFF8  F000         	goto	u3440
  2294  0001EA                     u3441:
  2295  0001EA  FFFF               	dw	65535	; assembler added errata NOP
  2296  0001EC  EFFC  F000         	goto	l157
  2297  0001F0                     u3440:
  2298  0001F0  FFFF               	dw	65535	; assembler added errata NOP
  2299  0001F2                     
  2300                           ; BSR set to: 0
  2301                           ;main.c: 108:             LATAbits.LATA1 = 1;
  2302  0001F2  8289               	bsf	137,1,c	;volatile
  2303                           
  2304                           ;main.c: 109:         } else {
  2305  0001F4  EFAE  F000         	goto	l3462
  2306  0001F8                     l157:
  2307  0001F8  FFFF               	dw	65535	; assembler added errata NOP
  2308                           
  2309                           ; BSR set to: 0
  2310                           ;main.c: 110:             LATAbits.LATA1 = 0;
  2311  0001FA  9289               	bcf	137,1,c	;volatile
  2312  0001FC                     
  2313                           ; BSR set to: 0
  2314                           ;main.c: 111:             if (state == 0) {
  2315  0001FC  51BE               	movf	_state& (0+255),w,b
  2316  0001FE  11BF               	iorwf	(_state+1)& (0+255),w,b
  2317  000200  A4D8               	btfss	status,2,c
  2318  000202  EF05  F001         	goto	u3451
  2319  000206  EF08  F001         	goto	u3450
  2320  00020A                     u3451:
  2321  00020A  FFFF               	dw	65535	; assembler added errata NOP
  2322  00020C  EF51  F001         	goto	l3496
  2323  000210                     u3450:
  2324  000210  FFFF               	dw	65535	; assembler added errata NOP
  2325  000212                     
  2326                           ; BSR set to: 0
  2327                           ;main.c: 113:                 configure_ad_conversion_tank();
  2328  000212  EC89  F016         	call	_configure_ad_conversion_tank	;wreg free
  2329  000216                     
  2330                           ;main.c: 114:                 if (get_liters() < 0.1){
  2331  000216  EC95  F014         	call	_get_liters	;wreg free
  2332  00021A  C06F  F0DE         	movff	?_get_liters,_main$1735
  2333  00021E  C070  F0DF         	movff	?_get_liters+1,_main$1735+1
  2334  000222  0100               	movlb	0	; () banked
  2335  000224  0E00               	movlw	0
  2336  000226  BFDF               	btfsc	(_main$1735+1)& (0+255),7,b
  2337  000228  0EFF               	movlw	-1
  2338  00022A  6FE0               	movwf	(_main$1735+2)& (0+255),b
  2339  00022C  6FE1               	movwf	(_main$1735+3)& (0+255),b
  2340  00022E                     
  2341                           ; BSR set to: 0
  2342                           ;main.c: 114:                 if (get_liters() < 0.1){
  2343  00022E  C0DE  F00D         	movff	_main$1735,___xxtofl@val
  2344  000232  C0DF  F00E         	movff	_main$1735+1,___xxtofl@val+1
  2345  000236  C0E0  F00F         	movff	_main$1735+2,___xxtofl@val+2
  2346  00023A  C0E1  F010         	movff	_main$1735+3,___xxtofl@val+3
  2347  00023E  0E01               	movlw	1
  2348  000240  ECF2  F00D         	call	___xxtofl
  2349  000244  C00D  F071         	movff	?___xxtofl,___flge@ff1
  2350  000248  C00E  F072         	movff	?___xxtofl+1,___flge@ff1+1
  2351  00024C  C00F  F073         	movff	?___xxtofl+2,___flge@ff1+2
  2352  000250  C010  F074         	movff	?___xxtofl+3,___flge@ff1+3
  2353  000254  0ECD               	movlw	205
  2354  000256  6E75               	movwf	___flge@ff2^0,c
  2355  000258  0ECC               	movlw	204
  2356  00025A  6E76               	movwf	(___flge@ff2+1)^0,c
  2357  00025C  0ECC               	movlw	204
  2358  00025E  6E77               	movwf	(___flge@ff2+2)^0,c
  2359  000260  0E3D               	movlw	61
  2360  000262  6E78               	movwf	(___flge@ff2+3)^0,c
  2361  000264  EC40  F010         	call	___flge	;wreg free
  2362  000268  B0D8               	btfsc	status,0,c
  2363  00026A  EF39  F001         	goto	u3461
  2364  00026E  EF3C  F001         	goto	u3460
  2365  000272                     u3461:
  2366  000272  FFFF               	dw	65535	; assembler added errata NOP
  2367  000274  EF99  F004         	goto	l3646
  2368  000278                     u3460:
  2369  000278  FFFF               	dw	65535	; assembler added errata NOP
  2370  00027A                     
  2371                           ;main.c: 115:                     state = 14;
  2372  00027A  0E00               	movlw	0
  2373  00027C  0100               	movlb	0	; () banked
  2374  00027E  6FBF               	movwf	(_state+1)& (0+255),b
  2375  000280  0E0E               	movlw	14
  2376  000282  6FBE               	movwf	_state& (0+255),b
  2377                           
  2378                           ;main.c: 116:                     state_changed = 1;
  2379  000284  0E01               	movlw	1
  2380  000286  6FA5               	movwf	_state_changed& (0+255),b
  2381                           
  2382                           ;main.c: 117:                     tank_error = 1;
  2383  000288  0E00               	movlw	0
  2384  00028A  6F89               	movwf	(_tank_error+1)& (0+255),b
  2385  00028C  0E01               	movlw	1
  2386  00028E  6F88               	movwf	_tank_error& (0+255),b
  2387                           
  2388                           ;main.c: 118:                     state_before_error = 0;
  2389  000290  0E00               	movlw	0
  2390  000292  6FEC               	movwf	(_state_before_error+1)& (0+255),b
  2391  000294  0E00               	movlw	0
  2392  000296  6FEB               	movwf	_state_before_error& (0+255),b
  2393  000298  EF99  F004         	goto	l3646
  2394  00029C                     l160:
  2395  00029C  FFFF               	dw	65535	; assembler added errata NOP
  2396                           
  2397                           ;main.c: 120:             } else if (state == 1){
  2398  00029E  EF99  F004         	goto	l3646
  2399  0002A2                     l3496:
  2400  0002A2  FFFF               	dw	65535	; assembler added errata NOP
  2401                           
  2402                           ; BSR set to: 0
  2403  0002A4  05BE               	decf	_state& (0+255),w,b
  2404  0002A6  11BF               	iorwf	(_state+1)& (0+255),w,b
  2405  0002A8  A4D8               	btfss	status,2,c
  2406  0002AA  EF59  F001         	goto	u3471
  2407  0002AE  EF5C  F001         	goto	u3470
  2408  0002B2                     u3471:
  2409  0002B2  FFFF               	dw	65535	; assembler added errata NOP
  2410  0002B4  EF67  F001         	goto	l3500
  2411  0002B8                     u3470:
  2412  0002B8  FFFF               	dw	65535	; assembler added errata NOP
  2413  0002BA                     l3498:
  2414  0002BA  FFFF               	dw	65535	; assembler added errata NOP
  2415                           
  2416                           ;main.c: 121:                 state = 2;
  2417  0002BC  0E00               	movlw	0
  2418  0002BE  0100               	movlb	0	; () banked
  2419  0002C0  6FBF               	movwf	(_state+1)& (0+255),b
  2420  0002C2  0E02               	movlw	2
  2421  0002C4  6FBE               	movwf	_state& (0+255),b
  2422                           
  2423                           ;main.c: 122:                 state_changed = 1;
  2424  0002C6  0E01               	movlw	1
  2425  0002C8  6FA5               	movwf	_state_changed& (0+255),b
  2426                           
  2427                           ;main.c: 123:             } else if (state == 3){
  2428  0002CA  EF99  F004         	goto	l3646
  2429  0002CE                     l3500:
  2430  0002CE  FFFF               	dw	65535	; assembler added errata NOP
  2431                           
  2432                           ; BSR set to: 0
  2433  0002D0  0E03               	movlw	3
  2434  0002D2  19BE               	xorwf	_state& (0+255),w,b
  2435  0002D4  11BF               	iorwf	(_state+1)& (0+255),w,b
  2436  0002D6  A4D8               	btfss	status,2,c
  2437  0002D8  EF70  F001         	goto	u3481
  2438  0002DC  EF73  F001         	goto	u3480
  2439  0002E0                     u3481:
  2440  0002E0  FFFF               	dw	65535	; assembler added errata NOP
  2441  0002E2  EF7C  F001         	goto	l3504
  2442  0002E6                     u3480:
  2443  0002E6  FFFF               	dw	65535	; assembler added errata NOP
  2444  0002E8                     
  2445                           ; BSR set to: 0
  2446                           ;main.c: 124:                 state = 4;
  2447  0002E8  0E00               	movlw	0
  2448  0002EA  6FBF               	movwf	(_state+1)& (0+255),b
  2449  0002EC  0E04               	movlw	4
  2450  0002EE  6FBE               	movwf	_state& (0+255),b
  2451                           
  2452                           ;main.c: 125:                 state_changed = 1;
  2453  0002F0  0E01               	movlw	1
  2454  0002F2  6FA5               	movwf	_state_changed& (0+255),b
  2455                           
  2456                           ;main.c: 126:             } else if (state == 4){
  2457  0002F4  EF99  F004         	goto	l3646
  2458  0002F8                     l3504:
  2459  0002F8  FFFF               	dw	65535	; assembler added errata NOP
  2460                           
  2461                           ; BSR set to: 0
  2462  0002FA  0E04               	movlw	4
  2463  0002FC  19BE               	xorwf	_state& (0+255),w,b
  2464  0002FE  11BF               	iorwf	(_state+1)& (0+255),w,b
  2465  000300  A4D8               	btfss	status,2,c
  2466  000302  EF85  F001         	goto	u3491
  2467  000306  EF88  F001         	goto	u3490
  2468  00030A                     u3491:
  2469  00030A  FFFF               	dw	65535	; assembler added errata NOP
  2470  00030C  EFCA  F001         	goto	l3518
  2471  000310                     u3490:
  2472  000310  FFFF               	dw	65535	; assembler added errata NOP
  2473  000312                     
  2474                           ; BSR set to: 0
  2475                           ;main.c: 127:                 if (timer_done){
  2476  000312  51A2               	movf	_timer_done& (0+255),w,b
  2477  000314  B4D8               	btfsc	status,2,c
  2478  000316  EF8F  F001         	goto	u3501
  2479  00031A  EF92  F001         	goto	u3500
  2480  00031E                     u3501:
  2481  00031E  FFFF               	dw	65535	; assembler added errata NOP
  2482  000320  EFB1  F001         	goto	l167
  2483  000324                     u3500:
  2484  000324  FFFF               	dw	65535	; assembler added errata NOP
  2485  000326                     
  2486                           ; BSR set to: 0
  2487                           ;main.c: 128:                     if(check_temperature(get_temperature())){
  2488  000326  EC5D  F014         	call	_get_temperature	;wreg free
  2489  00032A  C06F  F07D         	movff	?_get_temperature,check_temperature@temp_to_be_checked
  2490  00032E  C070  F07E         	movff	?_get_temperature+1,check_temperature@temp_to_be_checked+1
  2491  000332  ECB9  F011         	call	_check_temperature	;wreg free
  2492  000336  507D               	movf	?_check_temperature^0,w,c
  2493  000338  107E               	iorwf	(?_check_temperature+1)^0,w,c
  2494  00033A  B4D8               	btfsc	status,2,c
  2495  00033C  EFA2  F001         	goto	u3511
  2496  000340  EFA5  F001         	goto	u3510
  2497  000344                     u3511:
  2498  000344  FFFF               	dw	65535	; assembler added errata NOP
  2499  000346  EF4E  F001         	goto	l160
  2500  00034A                     u3510:
  2501  00034A  FFFF               	dw	65535	; assembler added errata NOP
  2502  00034C                     
  2503                           ;main.c: 129:                         state = 2;
  2504  00034C  0E00               	movlw	0
  2505  00034E  0100               	movlb	0	; () banked
  2506  000350  6FBF               	movwf	(_state+1)& (0+255),b
  2507  000352  0E02               	movlw	2
  2508  000354  6FBE               	movwf	_state& (0+255),b
  2509                           
  2510                           ;main.c: 130:                         state_changed = 1;
  2511  000356  0E01               	movlw	1
  2512  000358  6FA5               	movwf	_state_changed& (0+255),b
  2513                           
  2514                           ;main.c: 131:                         timer_done = 0;
  2515  00035A  0E00               	movlw	0
  2516  00035C  6FA2               	movwf	_timer_done& (0+255),b
  2517                           
  2518                           ;main.c: 132:                     } else{
  2519  00035E  EF99  F004         	goto	l3646
  2520  000362                     l167:
  2521  000362  FFFF               	dw	65535	; assembler added errata NOP
  2522                           
  2523                           ; BSR set to: 0
  2524                           ;main.c: 137:                     if (T0CONbits.TMR0ON == 0){
  2525  000364  BED5               	btfsc	213,7,c	;volatile
  2526  000366  EFB7  F001         	goto	u3521
  2527  00036A  EFBA  F001         	goto	u3520
  2528  00036E                     u3521:
  2529  00036E  FFFF               	dw	65535	; assembler added errata NOP
  2530  000370  EFC1  F001         	goto	l171
  2531  000374                     u3520:
  2532  000374  FFFF               	dw	65535	; assembler added errata NOP
  2533  000376                     
  2534                           ; BSR set to: 0
  2535                           ;main.c: 138:                         configure_ad_conversion_oven();
  2536  000376  EC98  F016         	call	_configure_ad_conversion_oven	;wreg free
  2537  00037A                     
  2538                           ;main.c: 139:                         wait_for_zero();
  2539  00037A  EC44  F016         	call	_wait_for_zero	;wreg free
  2540  00037E                     
  2541                           ;main.c: 140:                         init_timer_0();
  2542  00037E  EC57  F016         	call	_init_timer_0	;wreg free
  2543  000382                     l171:
  2544  000382  FFFF               	dw	65535	; assembler added errata NOP
  2545                           
  2546                           ;main.c: 142:                     int current_temp = get_temperature();
  2547  000384  EC5D  F014         	call	_get_temperature	;wreg free
  2548  000388  C06F  F0DC         	movff	?_get_temperature,main@current_temp
  2549  00038C  C070  F0DD         	movff	?_get_temperature+1,main@current_temp+1
  2550  000390  EF99  F004         	goto	l3646
  2551  000394                     l3518:
  2552  000394  FFFF               	dw	65535	; assembler added errata NOP
  2553                           
  2554                           ; BSR set to: 0
  2555  000396  0E05               	movlw	5
  2556  000398  19BE               	xorwf	_state& (0+255),w,b
  2557  00039A  11BF               	iorwf	(_state+1)& (0+255),w,b
  2558  00039C  A4D8               	btfss	status,2,c
  2559  00039E  EFD3  F001         	goto	u3531
  2560  0003A2  EFD6  F001         	goto	u3530
  2561  0003A6                     u3531:
  2562  0003A6  FFFF               	dw	65535	; assembler added errata NOP
  2563  0003A8  EFDF  F001         	goto	l3522
  2564  0003AC                     u3530:
  2565  0003AC  FFFF               	dw	65535	; assembler added errata NOP
  2566  0003AE                     
  2567                           ; BSR set to: 0
  2568                           ;main.c: 146:                 state = 6;
  2569  0003AE  0E00               	movlw	0
  2570  0003B0  6FBF               	movwf	(_state+1)& (0+255),b
  2571  0003B2  0E06               	movlw	6
  2572  0003B4  6FBE               	movwf	_state& (0+255),b
  2573                           
  2574                           ;main.c: 147:                 state_changed = 1;
  2575  0003B6  0E01               	movlw	1
  2576  0003B8  6FA5               	movwf	_state_changed& (0+255),b
  2577                           
  2578                           ;main.c: 148:             }else if (state == 6){
  2579  0003BA  EF99  F004         	goto	l3646
  2580  0003BE                     l3522:
  2581  0003BE  FFFF               	dw	65535	; assembler added errata NOP
  2582                           
  2583                           ; BSR set to: 0
  2584  0003C0  0E06               	movlw	6
  2585  0003C2  19BE               	xorwf	_state& (0+255),w,b
  2586  0003C4  11BF               	iorwf	(_state+1)& (0+255),w,b
  2587  0003C6  A4D8               	btfss	status,2,c
  2588  0003C8  EFE8  F001         	goto	u3541
  2589  0003CC  EFEB  F001         	goto	u3540
  2590  0003D0                     u3541:
  2591  0003D0  FFFF               	dw	65535	; assembler added errata NOP
  2592  0003D2  EF56  F002         	goto	l3540
  2593  0003D6                     u3540:
  2594  0003D6  FFFF               	dw	65535	; assembler added errata NOP
  2595  0003D8                     
  2596                           ; BSR set to: 0
  2597                           ;main.c: 149:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2598  0003D8  0E03               	movlw	3
  2599  0003DA  0100               	movlb	0	; () banked
  2600  0003DC  6FDA               	movwf	??_main& (0+255),b
  2601  0003DE  0EEB               	movlw	235
  2602  0003E0                     u3917:
  2603  0003E0  FFFF               	dw	65535	; errata NOP
  2604  0003E2  2EE8               	decfsz	wreg,f,c
  2605  0003E4  D7FD               	bra	u3917
  2606  0003E6  2FDA               	decfsz	??_main& (0+255),f,b
  2607  0003E8  D7FB               	bra	u3917
  2608  0003EA  D000               	nop2	
  2609  0003EC  F000               	nop	
  2610  0003EE                     
  2611                           ;main.c: 150:                 if (!grasping_joint_position_reached){
  2612  0003EE  0100               	movlb	0	; () banked
  2613  0003F0  5194               	movf	_grasping_joint_position_reached& (0+255),w,b
  2614  0003F2  1195               	iorwf	(_grasping_joint_position_reached+1)& (0+255),w,b
  2615  0003F4  A4D8               	btfss	status,2,c
  2616  0003F6  EFFF  F001         	goto	u3551
  2617  0003FA  EF02  F002         	goto	u3550
  2618  0003FE                     u3551:
  2619  0003FE  FFFF               	dw	65535	; assembler added errata NOP
  2620  000400  EF11  F002         	goto	l3530
  2621  000404                     u3550:
  2622  000404  FFFF               	dw	65535	; assembler added errata NOP
  2623  000406                     
  2624                           ; BSR set to: 0
  2625                           ;main.c: 151:                     grasping_joint_position_reached = reach_goal(&joint_st
      +                          epper, 50);
  2626  000406  0EB2               	movlw	low _joint_stepper
  2627  000408  6E09               	movwf	reach_goal@stepper_motor^0,c
  2628  00040A  0E00               	movlw	high _joint_stepper
  2629  00040C  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2630  00040E  0E00               	movlw	0
  2631  000410  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2632  000412  0E32               	movlw	50
  2633  000414  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2634  000416  EC21  F014         	call	_reach_goal	;wreg free
  2635  00041A  C009  F094         	movff	?_reach_goal,_grasping_joint_position_reached
  2636  00041E  C00A  F095         	movff	?_reach_goal+1,_grasping_joint_position_reached+1
  2637  000422                     l3530:
  2638  000422  FFFF               	dw	65535	; assembler added errata NOP
  2639                           
  2640                           ;main.c: 154:                 if (grasping_joint_position_reached && !grasping_ee_positi
      +                          on_reached){
  2641  000424  0100               	movlb	0	; () banked
  2642  000426  5194               	movf	_grasping_joint_position_reached& (0+255),w,b
  2643  000428  1195               	iorwf	(_grasping_joint_position_reached+1)& (0+255),w,b
  2644  00042A  B4D8               	btfsc	status,2,c
  2645  00042C  EF1A  F002         	goto	u3561
  2646  000430  EF1D  F002         	goto	u3560
  2647  000434                     u3561:
  2648  000434  FFFF               	dw	65535	; assembler added errata NOP
  2649  000436  EF37  F002         	goto	l3536
  2650  00043A                     u3560:
  2651  00043A  FFFF               	dw	65535	; assembler added errata NOP
  2652  00043C                     
  2653                           ; BSR set to: 0
  2654  00043C  5192               	movf	_grasping_ee_position_reached& (0+255),w,b
  2655  00043E  1193               	iorwf	(_grasping_ee_position_reached+1)& (0+255),w,b
  2656  000440  A4D8               	btfss	status,2,c
  2657  000442  EF25  F002         	goto	u3571
  2658  000446  EF28  F002         	goto	u3570
  2659  00044A                     u3571:
  2660  00044A  FFFF               	dw	65535	; assembler added errata NOP
  2661  00044C  EF37  F002         	goto	l3536
  2662  000450                     u3570:
  2663  000450  FFFF               	dw	65535	; assembler added errata NOP
  2664  000452                     
  2665                           ; BSR set to: 0
  2666                           ;main.c: 155:                     grasping_ee_position_reached = reach_goal(&end_effecto
      +                          r_stepper, 100);
  2667  000452  0EA6               	movlw	low _end_effector_stepper
  2668  000454  6E09               	movwf	reach_goal@stepper_motor^0,c
  2669  000456  0E00               	movlw	high _end_effector_stepper
  2670  000458  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2671  00045A  0E00               	movlw	0
  2672  00045C  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2673  00045E  0E64               	movlw	100
  2674  000460  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2675  000462  EC21  F014         	call	_reach_goal	;wreg free
  2676  000466  C009  F092         	movff	?_reach_goal,_grasping_ee_position_reached
  2677  00046A  C00A  F093         	movff	?_reach_goal+1,_grasping_ee_position_reached+1
  2678  00046E                     l3536:
  2679  00046E  FFFF               	dw	65535	; assembler added errata NOP
  2680                           
  2681                           ;main.c: 157:                 if (grasping_joint_position_reached * grasping_ee_position
      +                          _reached){
  2682  000470  C094  F001         	movff	_grasping_joint_position_reached,___wmul@multiplier
  2683  000474  C095  F002         	movff	_grasping_joint_position_reached+1,___wmul@multiplier+1
  2684  000478  C092  F003         	movff	_grasping_ee_position_reached,___wmul@multiplicand
  2685  00047C  C093  F004         	movff	_grasping_ee_position_reached+1,___wmul@multiplicand+1
  2686  000480  EC1A  F016         	call	___wmul	;wreg free
  2687  000484  5001               	movf	?___wmul^0,w,c
  2688  000486  1002               	iorwf	(?___wmul+1)^0,w,c
  2689  000488  B4D8               	btfsc	status,2,c
  2690  00048A  EF49  F002         	goto	u3581
  2691  00048E  EF4C  F002         	goto	u3580
  2692  000492                     u3581:
  2693  000492  FFFF               	dw	65535	; assembler added errata NOP
  2694  000494  EF99  F004         	goto	l3646
  2695  000498                     u3580:
  2696  000498  FFFF               	dw	65535	; assembler added errata NOP
  2697  00049A                     
  2698                           ;main.c: 158:                     state = 7;
  2699  00049A  0E00               	movlw	0
  2700  00049C  0100               	movlb	0	; () banked
  2701  00049E  6FBF               	movwf	(_state+1)& (0+255),b
  2702  0004A0  0E07               	movlw	7
  2703  0004A2  6FBE               	movwf	_state& (0+255),b
  2704                           
  2705                           ;main.c: 159:                     state_changed = 1;
  2706  0004A4  0E01               	movlw	1
  2707  0004A6  6FA5               	movwf	_state_changed& (0+255),b
  2708  0004A8  EF99  F004         	goto	l3646
  2709  0004AC                     l3540:
  2710  0004AC  FFFF               	dw	65535	; assembler added errata NOP
  2711                           
  2712                           ; BSR set to: 0
  2713  0004AE  0E07               	movlw	7
  2714  0004B0  19BE               	xorwf	_state& (0+255),w,b
  2715  0004B2  11BF               	iorwf	(_state+1)& (0+255),w,b
  2716  0004B4  A4D8               	btfss	status,2,c
  2717  0004B6  EF5F  F002         	goto	u3591
  2718  0004BA  EF62  F002         	goto	u3590
  2719  0004BE                     u3591:
  2720  0004BE  FFFF               	dw	65535	; assembler added errata NOP
  2721  0004C0  EFD6  F002         	goto	l3564
  2722  0004C4                     u3590:
  2723  0004C4  FFFF               	dw	65535	; assembler added errata NOP
  2724  0004C6                     
  2725                           ; BSR set to: 0
  2726                           ;main.c: 162:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2727  0004C6  0E03               	movlw	3
  2728  0004C8  0100               	movlb	0	; () banked
  2729  0004CA  6FDA               	movwf	??_main& (0+255),b
  2730  0004CC  0EEB               	movlw	235
  2731  0004CE                     u3927:
  2732  0004CE  FFFF               	dw	65535	; errata NOP
  2733  0004D0  2EE8               	decfsz	wreg,f,c
  2734  0004D2  D7FD               	bra	u3927
  2735  0004D4  2FDA               	decfsz	??_main& (0+255),f,b
  2736  0004D6  D7FB               	bra	u3927
  2737  0004D8  D000               	nop2	
  2738  0004DA  F000               	nop	
  2739  0004DC                     
  2740                           ;main.c: 163:                 if (reach_goal(&joint_stepper, 100)) {
  2741  0004DC  0EB2               	movlw	low _joint_stepper
  2742  0004DE  6E09               	movwf	reach_goal@stepper_motor^0,c
  2743  0004E0  0E00               	movlw	high _joint_stepper
  2744  0004E2  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2745  0004E4  0E00               	movlw	0
  2746  0004E6  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2747  0004E8  0E64               	movlw	100
  2748  0004EA  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2749  0004EC  EC21  F014         	call	_reach_goal	;wreg free
  2750  0004F0  5009               	movf	?_reach_goal^0,w,c
  2751  0004F2  100A               	iorwf	(?_reach_goal+1)^0,w,c
  2752  0004F4  B4D8               	btfsc	status,2,c
  2753  0004F6  EF7F  F002         	goto	u3601
  2754  0004FA  EF82  F002         	goto	u3600
  2755  0004FE                     u3601:
  2756  0004FE  FFFF               	dw	65535	; assembler added errata NOP
  2757  000500  EF8C  F002         	goto	l3550
  2758  000504                     u3600:
  2759  000504  FFFF               	dw	65535	; assembler added errata NOP
  2760  000506                     
  2761                           ;main.c: 164:                     change_direction(&joint_stepper);
  2762  000506  0EB2               	movlw	low _joint_stepper
  2763  000508  6E01               	movwf	change_direction@stepper_motor^0,c
  2764  00050A  0E00               	movlw	high _joint_stepper
  2765  00050C  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2766  00050E  ECD4  F015         	call	_change_direction	;wreg free
  2767  000512                     
  2768                           ;main.c: 165:                     mix_counter++;
  2769  000512  0100               	movlb	0	; () banked
  2770  000514  4B9A               	infsnz	_mix_counter& (0+255),f,b
  2771  000516  2B9B               	incf	(_mix_counter+1)& (0+255),f,b
  2772  000518                     l3550:
  2773  000518  FFFF               	dw	65535	; assembler added errata NOP
  2774                           
  2775                           ;main.c: 168:                 if (mix_counter == 20 && !dilution_done){
  2776  00051A  0E14               	movlw	20
  2777  00051C  0100               	movlb	0	; () banked
  2778  00051E  199A               	xorwf	_mix_counter& (0+255),w,b
  2779  000520  119B               	iorwf	(_mix_counter+1)& (0+255),w,b
  2780  000522  A4D8               	btfss	status,2,c
  2781  000524  EF96  F002         	goto	u3611
  2782  000528  EF99  F002         	goto	u3610
  2783  00052C                     u3611:
  2784  00052C  FFFF               	dw	65535	; assembler added errata NOP
  2785  00052E  EFAD  F002         	goto	l3556
  2786  000532                     u3610:
  2787  000532  FFFF               	dw	65535	; assembler added errata NOP
  2788  000534                     
  2789                           ; BSR set to: 0
  2790  000534  5198               	movf	_dilution_done& (0+255),w,b
  2791  000536  1199               	iorwf	(_dilution_done+1)& (0+255),w,b
  2792  000538  A4D8               	btfss	status,2,c
  2793  00053A  EFA1  F002         	goto	u3621
  2794  00053E  EFA4  F002         	goto	u3620
  2795  000542                     u3621:
  2796  000542  FFFF               	dw	65535	; assembler added errata NOP
  2797  000544  EFAD  F002         	goto	l3556
  2798  000548                     u3620:
  2799  000548  FFFF               	dw	65535	; assembler added errata NOP
  2800  00054A                     
  2801                           ; BSR set to: 0
  2802                           ;main.c: 169:                     state = 8;
  2803  00054A  0E00               	movlw	0
  2804  00054C  6FBF               	movwf	(_state+1)& (0+255),b
  2805  00054E  0E08               	movlw	8
  2806  000550  6FBE               	movwf	_state& (0+255),b
  2807                           
  2808                           ;main.c: 170:                     state_changed = 1;
  2809  000552  0E01               	movlw	1
  2810  000554  6FA5               	movwf	_state_changed& (0+255),b
  2811                           
  2812                           ;main.c: 171:                 } else if (mix_counter == 40) {
  2813  000556  EF99  F004         	goto	l3646
  2814  00055A                     l3556:
  2815  00055A  FFFF               	dw	65535	; assembler added errata NOP
  2816                           
  2817                           ; BSR set to: 0
  2818  00055C  0E28               	movlw	40
  2819  00055E  199A               	xorwf	_mix_counter& (0+255),w,b
  2820  000560  119B               	iorwf	(_mix_counter+1)& (0+255),w,b
  2821  000562  A4D8               	btfss	status,2,c
  2822  000564  EFB6  F002         	goto	u3631
  2823  000568  EFB9  F002         	goto	u3630
  2824  00056C                     u3631:
  2825  00056C  FFFF               	dw	65535	; assembler added errata NOP
  2826  00056E  EF4E  F001         	goto	l160
  2827  000572                     u3630:
  2828  000572  FFFF               	dw	65535	; assembler added errata NOP
  2829  000574                     
  2830                           ; BSR set to: 0
  2831                           ;main.c: 172:                     dilution_done = 0;
  2832  000574  0E00               	movlw	0
  2833  000576  6F99               	movwf	(_dilution_done+1)& (0+255),b
  2834  000578  0E00               	movlw	0
  2835  00057A  6F98               	movwf	_dilution_done& (0+255),b
  2836                           
  2837                           ;main.c: 173:                     state = 9;
  2838  00057C  0E00               	movlw	0
  2839  00057E  6FBF               	movwf	(_state+1)& (0+255),b
  2840  000580  0E09               	movlw	9
  2841  000582  6FBE               	movwf	_state& (0+255),b
  2842                           
  2843                           ;main.c: 174:                     state_changed = 1;
  2844  000584  0E01               	movlw	1
  2845  000586  6FA5               	movwf	_state_changed& (0+255),b
  2846                           
  2847                           ;main.c: 175:                     mix_counter = 0;
  2848  000588  0E00               	movlw	0
  2849  00058A  6F9B               	movwf	(_mix_counter+1)& (0+255),b
  2850  00058C  0E00               	movlw	0
  2851  00058E  6F9A               	movwf	_mix_counter& (0+255),b
  2852  000590                     
  2853                           ; BSR set to: 0
  2854                           ;main.c: 177:                     change_direction(&joint_stepper);
  2855  000590  0EB2               	movlw	low _joint_stepper
  2856  000592  6E01               	movwf	change_direction@stepper_motor^0,c
  2857  000594  0E00               	movlw	high _joint_stepper
  2858  000596  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2859  000598  ECD4  F015         	call	_change_direction	;wreg free
  2860  00059C                     
  2861                           ;main.c: 178:                     change_direction(&end_effector_stepper);
  2862  00059C  0EA6               	movlw	low _end_effector_stepper
  2863  00059E  6E01               	movwf	change_direction@stepper_motor^0,c
  2864  0005A0  0E00               	movlw	high _end_effector_stepper
  2865  0005A2  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2866  0005A4  ECD4  F015         	call	_change_direction	;wreg free
  2867  0005A8  EF99  F004         	goto	l3646
  2868  0005AC                     l3564:
  2869  0005AC  FFFF               	dw	65535	; assembler added errata NOP
  2870                           
  2871                           ; BSR set to: 0
  2872  0005AE  0E08               	movlw	8
  2873  0005B0  19BE               	xorwf	_state& (0+255),w,b
  2874  0005B2  11BF               	iorwf	(_state+1)& (0+255),w,b
  2875  0005B4  A4D8               	btfss	status,2,c
  2876  0005B6  EFDF  F002         	goto	u3641
  2877  0005BA  EFE2  F002         	goto	u3640
  2878  0005BE                     u3641:
  2879  0005BE  FFFF               	dw	65535	; assembler added errata NOP
  2880  0005C0  EF86  F003         	goto	l3594
  2881  0005C4                     u3640:
  2882  0005C4  FFFF               	dw	65535	; assembler added errata NOP
  2883  0005C6                     
  2884                           ; BSR set to: 0
  2885                           ;main.c: 181:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2886  0005C6  0E03               	movlw	3
  2887  0005C8  0100               	movlb	0	; () banked
  2888  0005CA  6FDA               	movwf	??_main& (0+255),b
  2889  0005CC  0EEB               	movlw	235
  2890  0005CE                     u3937:
  2891  0005CE  FFFF               	dw	65535	; errata NOP
  2892  0005D0  2EE8               	decfsz	wreg,f,c
  2893  0005D2  D7FD               	bra	u3937
  2894  0005D4  2FDA               	decfsz	??_main& (0+255),f,b
  2895  0005D6  D7FB               	bra	u3937
  2896  0005D8  D000               	nop2	
  2897  0005DA  F000               	nop	
  2898  0005DC                     
  2899                           ;main.c: 182:                 if (!diluting_position_reached){
  2900  0005DC  0100               	movlb	0	; () banked
  2901  0005DE  5190               	movf	_diluting_position_reached& (0+255),w,b
  2902  0005E0  1191               	iorwf	(_diluting_position_reached+1)& (0+255),w,b
  2903  0005E2  A4D8               	btfss	status,2,c
  2904  0005E4  EFF6  F002         	goto	u3651
  2905  0005E8  EFF9  F002         	goto	u3650
  2906  0005EC                     u3651:
  2907  0005EC  FFFF               	dw	65535	; assembler added errata NOP
  2908  0005EE  EF0A  F003         	goto	l3572
  2909  0005F2                     u3650:
  2910  0005F2  FFFF               	dw	65535	; assembler added errata NOP
  2911  0005F4                     
  2912                           ; BSR set to: 0
  2913                           ;main.c: 183:                     diluting_position_reached = reach_goal(&joint_dilutor_
      +                          stepper, 200);
  2914  0005F4  0E00               	movlw	low _joint_dilutor_stepper
  2915  0005F6  6E09               	movwf	reach_goal@stepper_motor^0,c
  2916  0005F8  0E01               	movlw	high _joint_dilutor_stepper
  2917  0005FA  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2918  0005FC  0E00               	movlw	0
  2919  0005FE  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2920  000600  0EC8               	movlw	200
  2921  000602  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2922  000604  EC21  F014         	call	_reach_goal	;wreg free
  2923  000608  C009  F090         	movff	?_reach_goal,_diluting_position_reached
  2924  00060C  C00A  F091         	movff	?_reach_goal+1,_diluting_position_reached+1
  2925                           
  2926                           ;main.c: 184:                 } else if (!dilution_done && diluting_position_reached){
  2927  000610  EF99  F004         	goto	l3646
  2928  000614                     l3572:
  2929  000614  FFFF               	dw	65535	; assembler added errata NOP
  2930                           
  2931                           ; BSR set to: 0
  2932  000616  5198               	movf	_dilution_done& (0+255),w,b
  2933  000618  1199               	iorwf	(_dilution_done+1)& (0+255),w,b
  2934  00061A  A4D8               	btfss	status,2,c
  2935  00061C  EF12  F003         	goto	u3661
  2936  000620  EF15  F003         	goto	u3660
  2937  000624                     u3661:
  2938  000624  FFFF               	dw	65535	; assembler added errata NOP
  2939  000626  EF3C  F003         	goto	l3582
  2940  00062A                     u3660:
  2941  00062A  FFFF               	dw	65535	; assembler added errata NOP
  2942  00062C                     
  2943                           ; BSR set to: 0
  2944  00062C  5190               	movf	_diluting_position_reached& (0+255),w,b
  2945  00062E  1191               	iorwf	(_diluting_position_reached+1)& (0+255),w,b
  2946  000630  B4D8               	btfsc	status,2,c
  2947  000632  EF1D  F003         	goto	u3671
  2948  000636  EF20  F003         	goto	u3670
  2949  00063A                     u3671:
  2950  00063A  FFFF               	dw	65535	; assembler added errata NOP
  2951  00063C  EF3C  F003         	goto	l3582
  2952  000640                     u3670:
  2953  000640  FFFF               	dw	65535	; assembler added errata NOP
  2954  000642                     
  2955                           ; BSR set to: 0
  2956                           ;main.c: 187:                     _delay((unsigned long)((1000)*(4000000/4000.0)));
  2957  000642  0E04               	movlw	4
  2958  000644  0100               	movlb	0	; () banked
  2959  000646  6FDB               	movwf	(??_main+1)& (0+255),b
  2960  000648  0ECF               	movlw	207
  2961  00064A  6FDA               	movwf	??_main& (0+255),b
  2962  00064C  0EA5               	movlw	165
  2963  00064E                     u3947:
  2964  00064E  FFFF               	dw	65535	; errata NOP
  2965  000650  2EE8               	decfsz	wreg,f,c
  2966  000652  D7FD               	bra	u3947
  2967  000654  2FDA               	decfsz	??_main& (0+255),f,b
  2968  000656  D7FB               	bra	u3947
  2969  000658  2FDB               	decfsz	(??_main+1)& (0+255),f,b
  2970  00065A  D7F9               	bra	u3947
  2971  00065C  F000               	nop	
  2972  00065E                     
  2973                           ;main.c: 188:                     dilution_done = 1;
  2974  00065E  0E00               	movlw	0
  2975  000660  0100               	movlb	0	; () banked
  2976  000662  6F99               	movwf	(_dilution_done+1)& (0+255),b
  2977  000664  0E01               	movlw	1
  2978  000666  6F98               	movwf	_dilution_done& (0+255),b
  2979  000668                     
  2980                           ; BSR set to: 0
  2981                           ;main.c: 189:                     change_direction(&joint_dilutor_stepper);
  2982  000668  0E00               	movlw	low _joint_dilutor_stepper
  2983  00066A  6E01               	movwf	change_direction@stepper_motor^0,c
  2984  00066C  0E01               	movlw	high _joint_dilutor_stepper
  2985  00066E  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2986  000670  ECD4  F015         	call	_change_direction	;wreg free
  2987                           
  2988                           ;main.c: 190:                 } else if (dilution_done && !joint_dilutor_homed){
  2989  000674  EF99  F004         	goto	l3646
  2990  000678                     l3582:
  2991  000678  FFFF               	dw	65535	; assembler added errata NOP
  2992                           
  2993                           ; BSR set to: 0
  2994  00067A  5198               	movf	_dilution_done& (0+255),w,b
  2995  00067C  1199               	iorwf	(_dilution_done+1)& (0+255),w,b
  2996  00067E  B4D8               	btfsc	status,2,c
  2997  000680  EF44  F003         	goto	u3681
  2998  000684  EF47  F003         	goto	u3680
  2999  000688                     u3681:
  3000  000688  FFFF               	dw	65535	; assembler added errata NOP
  3001  00068A  EF63  F003         	goto	l3588
  3002  00068E                     u3680:
  3003  00068E  FFFF               	dw	65535	; assembler added errata NOP
  3004  000690                     
  3005                           ; BSR set to: 0
  3006  000690  518A               	movf	_joint_dilutor_homed& (0+255),w,b
  3007  000692  118B               	iorwf	(_joint_dilutor_homed+1)& (0+255),w,b
  3008  000694  A4D8               	btfss	status,2,c
  3009  000696  EF4F  F003         	goto	u3691
  3010  00069A  EF52  F003         	goto	u3690
  3011  00069E                     u3691:
  3012  00069E  FFFF               	dw	65535	; assembler added errata NOP
  3013  0006A0  EF63  F003         	goto	l3588
  3014  0006A4                     u3690:
  3015  0006A4  FFFF               	dw	65535	; assembler added errata NOP
  3016  0006A6                     
  3017                           ; BSR set to: 0
  3018                           ;main.c: 191:                     joint_dilutor_homed = reach_goal(&joint_dilutor_steppe
      +                          r, 200);
  3019  0006A6  0E00               	movlw	low _joint_dilutor_stepper
  3020  0006A8  6E09               	movwf	reach_goal@stepper_motor^0,c
  3021  0006AA  0E01               	movlw	high _joint_dilutor_stepper
  3022  0006AC  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  3023  0006AE  0E00               	movlw	0
  3024  0006B0  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  3025  0006B2  0EC8               	movlw	200
  3026  0006B4  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  3027  0006B6  EC21  F014         	call	_reach_goal	;wreg free
  3028  0006BA  C009  F08A         	movff	?_reach_goal,_joint_dilutor_homed
  3029  0006BE  C00A  F08B         	movff	?_reach_goal+1,_joint_dilutor_homed+1
  3030                           
  3031                           ;main.c: 192:                 } else if (dilution_done && joint_dilutor_homed){
  3032  0006C2  EF99  F004         	goto	l3646
  3033  0006C6                     l3588:
  3034  0006C6  FFFF               	dw	65535	; assembler added errata NOP
  3035                           
  3036                           ; BSR set to: 0
  3037  0006C8  5198               	movf	_dilution_done& (0+255),w,b
  3038  0006CA  1199               	iorwf	(_dilution_done+1)& (0+255),w,b
  3039  0006CC  B4D8               	btfsc	status,2,c
  3040  0006CE  EF6B  F003         	goto	u3701
  3041  0006D2  EF6E  F003         	goto	u3700
  3042  0006D6                     u3701:
  3043  0006D6  FFFF               	dw	65535	; assembler added errata NOP
  3044  0006D8  EF4E  F001         	goto	l160
  3045  0006DC                     u3700:
  3046  0006DC  FFFF               	dw	65535	; assembler added errata NOP
  3047  0006DE                     
  3048                           ; BSR set to: 0
  3049  0006DE  518A               	movf	_joint_dilutor_homed& (0+255),w,b
  3050  0006E0  118B               	iorwf	(_joint_dilutor_homed+1)& (0+255),w,b
  3051  0006E2  B4D8               	btfsc	status,2,c
  3052  0006E4  EF76  F003         	goto	u3711
  3053  0006E8  EF79  F003         	goto	u3710
  3054  0006EC                     u3711:
  3055  0006EC  FFFF               	dw	65535	; assembler added errata NOP
  3056  0006EE  EF4E  F001         	goto	l160
  3057  0006F2                     u3710:
  3058  0006F2  FFFF               	dw	65535	; assembler added errata NOP
  3059  0006F4                     
  3060                           ; BSR set to: 0
  3061                           ;main.c: 193:                     state = 7;
  3062  0006F4  0E00               	movlw	0
  3063  0006F6  6FBF               	movwf	(_state+1)& (0+255),b
  3064  0006F8  0E07               	movlw	7
  3065  0006FA  6FBE               	movwf	_state& (0+255),b
  3066                           
  3067                           ;main.c: 194:                     state_changed = 1;
  3068  0006FC  0E01               	movlw	1
  3069  0006FE  6FA5               	movwf	_state_changed& (0+255),b
  3070                           
  3071                           ;main.c: 195:                     diluting_position_reached = 0;
  3072  000700  0E00               	movlw	0
  3073  000702  6F91               	movwf	(_diluting_position_reached+1)& (0+255),b
  3074  000704  0E00               	movlw	0
  3075  000706  6F90               	movwf	_diluting_position_reached& (0+255),b
  3076  000708  EF99  F004         	goto	l3646
  3077  00070C                     l3594:
  3078  00070C  FFFF               	dw	65535	; assembler added errata NOP
  3079                           
  3080                           ; BSR set to: 0
  3081  00070E  0E09               	movlw	9
  3082  000710  19BE               	xorwf	_state& (0+255),w,b
  3083  000712  11BF               	iorwf	(_state+1)& (0+255),w,b
  3084  000714  A4D8               	btfss	status,2,c
  3085  000716  EF8F  F003         	goto	u3721
  3086  00071A  EF92  F003         	goto	u3720
  3087  00071E                     u3721:
  3088  00071E  FFFF               	dw	65535	; assembler added errata NOP
  3089  000720  EFF6  F003         	goto	l3612
  3090  000724                     u3720:
  3091  000724  FFFF               	dw	65535	; assembler added errata NOP
  3092  000726                     
  3093                           ; BSR set to: 0
  3094                           ;main.c: 199:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  3095  000726  0E03               	movlw	3
  3096  000728  0100               	movlb	0	; () banked
  3097  00072A  6FDA               	movwf	??_main& (0+255),b
  3098  00072C  0EEB               	movlw	235
  3099  00072E                     u3957:
  3100  00072E  FFFF               	dw	65535	; errata NOP
  3101  000730  2EE8               	decfsz	wreg,f,c
  3102  000732  D7FD               	bra	u3957
  3103  000734  2FDA               	decfsz	??_main& (0+255),f,b
  3104  000736  D7FB               	bra	u3957
  3105  000738  D000               	nop2	
  3106  00073A  F000               	nop	
  3107  00073C                     
  3108                           ;main.c: 201:                 if (!end_effector_homed){
  3109  00073C  0100               	movlb	0	; () banked
  3110  00073E  518C               	movf	_end_effector_homed& (0+255),w,b
  3111  000740  118D               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  3112  000742  A4D8               	btfss	status,2,c
  3113  000744  EFA6  F003         	goto	u3731
  3114  000748  EFA9  F003         	goto	u3730
  3115  00074C                     u3731:
  3116  00074C  FFFF               	dw	65535	; assembler added errata NOP
  3117  00074E  EFB8  F003         	goto	l3602
  3118  000752                     u3730:
  3119  000752  FFFF               	dw	65535	; assembler added errata NOP
  3120  000754                     
  3121                           ; BSR set to: 0
  3122                           ;main.c: 202:                     end_effector_homed = reach_goal(&end_effector_stepper,
      +                           100);
  3123  000754  0EA6               	movlw	low _end_effector_stepper
  3124  000756  6E09               	movwf	reach_goal@stepper_motor^0,c
  3125  000758  0E00               	movlw	high _end_effector_stepper
  3126  00075A  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  3127  00075C  0E00               	movlw	0
  3128  00075E  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  3129  000760  0E64               	movlw	100
  3130  000762  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  3131  000764  EC21  F014         	call	_reach_goal	;wreg free
  3132  000768  C009  F08C         	movff	?_reach_goal,_end_effector_homed
  3133  00076C  C00A  F08D         	movff	?_reach_goal+1,_end_effector_homed+1
  3134  000770                     l3602:
  3135  000770  FFFF               	dw	65535	; assembler added errata NOP
  3136                           
  3137                           ;main.c: 205:                 if (end_effector_homed && !joint_homed){
  3138  000772  0100               	movlb	0	; () banked
  3139  000774  518C               	movf	_end_effector_homed& (0+255),w,b
  3140  000776  118D               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  3141  000778  B4D8               	btfsc	status,2,c
  3142  00077A  EFC1  F003         	goto	u3741
  3143  00077E  EFC4  F003         	goto	u3740
  3144  000782                     u3741:
  3145  000782  FFFF               	dw	65535	; assembler added errata NOP
  3146  000784  EFDE  F003         	goto	l3608
  3147  000788                     u3740:
  3148  000788  FFFF               	dw	65535	; assembler added errata NOP
  3149  00078A                     
  3150                           ; BSR set to: 0
  3151  00078A  518E               	movf	_joint_homed& (0+255),w,b
  3152  00078C  118F               	iorwf	(_joint_homed+1)& (0+255),w,b
  3153  00078E  A4D8               	btfss	status,2,c
  3154  000790  EFCC  F003         	goto	u3751
  3155  000794  EFCF  F003         	goto	u3750
  3156  000798                     u3751:
  3157  000798  FFFF               	dw	65535	; assembler added errata NOP
  3158  00079A  EFDE  F003         	goto	l3608
  3159  00079E                     u3750:
  3160  00079E  FFFF               	dw	65535	; assembler added errata NOP
  3161  0007A0                     
  3162                           ; BSR set to: 0
  3163                           ;main.c: 206:                     joint_homed = reach_goal(&joint_stepper, 50);
  3164  0007A0  0EB2               	movlw	low _joint_stepper
  3165  0007A2  6E09               	movwf	reach_goal@stepper_motor^0,c
  3166  0007A4  0E00               	movlw	high _joint_stepper
  3167  0007A6  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  3168  0007A8  0E00               	movlw	0
  3169  0007AA  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  3170  0007AC  0E32               	movlw	50
  3171  0007AE  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  3172  0007B0  EC21  F014         	call	_reach_goal	;wreg free
  3173  0007B4  C009  F08E         	movff	?_reach_goal,_joint_homed
  3174  0007B8  C00A  F08F         	movff	?_reach_goal+1,_joint_homed+1
  3175  0007BC                     l3608:
  3176  0007BC  FFFF               	dw	65535	; assembler added errata NOP
  3177                           
  3178                           ;main.c: 209:                 if (end_effector_homed * joint_homed){
  3179  0007BE  C08C  F001         	movff	_end_effector_homed,___wmul@multiplier
  3180  0007C2  C08D  F002         	movff	_end_effector_homed+1,___wmul@multiplier+1
  3181  0007C6  C08E  F003         	movff	_joint_homed,___wmul@multiplicand
  3182  0007CA  C08F  F004         	movff	_joint_homed+1,___wmul@multiplicand+1
  3183  0007CE  EC1A  F016         	call	___wmul	;wreg free
  3184  0007D2  5001               	movf	?___wmul^0,w,c
  3185  0007D4  1002               	iorwf	(?___wmul+1)^0,w,c
  3186  0007D6  B4D8               	btfsc	status,2,c
  3187  0007D8  EFF0  F003         	goto	u3761
  3188  0007DC  EFF3  F003         	goto	u3760
  3189  0007E0                     u3761:
  3190  0007E0  FFFF               	dw	65535	; assembler added errata NOP
  3191  0007E2  EF99  F004         	goto	l3646
  3192  0007E6                     u3760:
  3193  0007E6  FFFF               	dw	65535	; assembler added errata NOP
  3194  0007E8  EF5D  F001         	goto	l3498
  3195  0007EC                     l3612:
  3196  0007EC  FFFF               	dw	65535	; assembler added errata NOP
  3197                           
  3198                           ; BSR set to: 0
  3199  0007EE  0E0A               	movlw	10
  3200  0007F0  19BE               	xorwf	_state& (0+255),w,b
  3201  0007F2  11BF               	iorwf	(_state+1)& (0+255),w,b
  3202  0007F4  A4D8               	btfss	status,2,c
  3203  0007F6  EFFF  F003         	goto	u3771
  3204  0007FA  EF02  F004         	goto	u3770
  3205  0007FE                     u3771:
  3206  0007FE  FFFF               	dw	65535	; assembler added errata NOP
  3207  000800  EF0B  F004         	goto	l3616
  3208  000804                     u3770:
  3209  000804  FFFF               	dw	65535	; assembler added errata NOP
  3210  000806                     
  3211                           ; BSR set to: 0
  3212                           ;main.c: 214:                 state = 11;
  3213  000806  0E00               	movlw	0
  3214  000808  6FBF               	movwf	(_state+1)& (0+255),b
  3215  00080A  0E0B               	movlw	11
  3216  00080C  6FBE               	movwf	_state& (0+255),b
  3217                           
  3218                           ;main.c: 215:                 state_changed = 1;
  3219  00080E  0E01               	movlw	1
  3220  000810  6FA5               	movwf	_state_changed& (0+255),b
  3221                           
  3222                           ;main.c: 216:             }else if (state == 11){
  3223  000812  EF99  F004         	goto	l3646
  3224  000816                     l3616:
  3225  000816  FFFF               	dw	65535	; assembler added errata NOP
  3226                           
  3227                           ; BSR set to: 0
  3228  000818  0E0B               	movlw	11
  3229  00081A  19BE               	xorwf	_state& (0+255),w,b
  3230  00081C  11BF               	iorwf	(_state+1)& (0+255),w,b
  3231  00081E  A4D8               	btfss	status,2,c
  3232  000820  EF14  F004         	goto	u3781
  3233  000824  EF17  F004         	goto	u3780
  3234  000828                     u3781:
  3235  000828  FFFF               	dw	65535	; assembler added errata NOP
  3236  00082A  EF3E  F004         	goto	l3624
  3237  00082E                     u3780:
  3238  00082E  FFFF               	dw	65535	; assembler added errata NOP
  3239  000830                     
  3240                           ; BSR set to: 0
  3241                           ;main.c: 217:                 if (timer_done){
  3242  000830  51A2               	movf	_timer_done& (0+255),w,b
  3243  000832  B4D8               	btfsc	status,2,c
  3244  000834  EF1E  F004         	goto	u3791
  3245  000838  EF21  F004         	goto	u3790
  3246  00083C                     u3791:
  3247  00083C  FFFF               	dw	65535	; assembler added errata NOP
  3248  00083E  EF30  F004         	goto	l203
  3249  000842                     u3790:
  3250  000842  FFFF               	dw	65535	; assembler added errata NOP
  3251  000844                     
  3252                           ; BSR set to: 0
  3253                           ;main.c: 218:                     state_changed = 1;
  3254  000844  0E01               	movlw	1
  3255  000846  6FA5               	movwf	_state_changed& (0+255),b
  3256                           
  3257                           ;main.c: 219:                     state = 13;
  3258  000848  0E00               	movlw	0
  3259  00084A  6FBF               	movwf	(_state+1)& (0+255),b
  3260  00084C  0E0D               	movlw	13
  3261  00084E  6FBE               	movwf	_state& (0+255),b
  3262                           
  3263                           ;main.c: 220:                     trash_counter = 0;
  3264  000850  0E00               	movlw	0
  3265  000852  6F97               	movwf	(_trash_counter+1)& (0+255),b
  3266  000854  0E00               	movlw	0
  3267  000856  6F96               	movwf	_trash_counter& (0+255),b
  3268                           
  3269                           ;main.c: 221:                     timer_done = 0;
  3270  000858  0E00               	movlw	0
  3271  00085A  6FA2               	movwf	_timer_done& (0+255),b
  3272                           
  3273                           ;main.c: 222:                 } else {
  3274  00085C  EF99  F004         	goto	l3646
  3275  000860                     l203:
  3276  000860  FFFF               	dw	65535	; assembler added errata NOP
  3277                           
  3278                           ; BSR set to: 0
  3279                           ;main.c: 223:                     if (T0CONbits.TMR0ON == 0){
  3280  000862  BED5               	btfsc	213,7,c	;volatile
  3281  000864  EF36  F004         	goto	u3801
  3282  000868  EF39  F004         	goto	u3800
  3283  00086C                     u3801:
  3284  00086C  FFFF               	dw	65535	; assembler added errata NOP
  3285  00086E  EF4E  F001         	goto	l160
  3286  000872                     u3800:
  3287  000872  FFFF               	dw	65535	; assembler added errata NOP
  3288  000874                     
  3289                           ; BSR set to: 0
  3290                           ;main.c: 224:                         init_timer_0();
  3291  000874  EC57  F016         	call	_init_timer_0	;wreg free
  3292  000878  EF99  F004         	goto	l3646
  3293  00087C                     l3624:
  3294  00087C  FFFF               	dw	65535	; assembler added errata NOP
  3295                           
  3296                           ; BSR set to: 0
  3297  00087E  0E0C               	movlw	12
  3298  000880  19BE               	xorwf	_state& (0+255),w,b
  3299  000882  11BF               	iorwf	(_state+1)& (0+255),w,b
  3300  000884  A4D8               	btfss	status,2,c
  3301  000886  EF47  F004         	goto	u3811
  3302  00088A  EF4A  F004         	goto	u3810
  3303  00088E                     u3811:
  3304  00088E  FFFF               	dw	65535	; assembler added errata NOP
  3305  000890  EF54  F004         	goto	l3630
  3306  000894                     u3810:
  3307  000894  FFFF               	dw	65535	; assembler added errata NOP
  3308  000896                     
  3309                           ; BSR set to: 0
  3310                           ;main.c: 229:                 state = 0;
  3311  000896  0E00               	movlw	0
  3312  000898  6FBF               	movwf	(_state+1)& (0+255),b
  3313  00089A  0E00               	movlw	0
  3314  00089C  6FBE               	movwf	_state& (0+255),b
  3315                           
  3316                           ;main.c: 230:                 state_changed = 1;
  3317  00089E  0E01               	movlw	1
  3318  0008A0  6FA5               	movwf	_state_changed& (0+255),b
  3319  0008A2                     
  3320                           ; BSR set to: 0
  3321                           ;main.c: 231:                 T0CONbits.TMR0ON = 0;
  3322  0008A2  9ED5               	bcf	213,7,c	;volatile
  3323                           
  3324                           ;main.c: 232:             } else if (state == 13){
  3325  0008A4  EF99  F004         	goto	l3646
  3326  0008A8                     l3630:
  3327  0008A8  FFFF               	dw	65535	; assembler added errata NOP
  3328                           
  3329                           ; BSR set to: 0
  3330  0008AA  0E0D               	movlw	13
  3331  0008AC  19BE               	xorwf	_state& (0+255),w,b
  3332  0008AE  11BF               	iorwf	(_state+1)& (0+255),w,b
  3333  0008B0  A4D8               	btfss	status,2,c
  3334  0008B2  EF5D  F004         	goto	u3821
  3335  0008B6  EF60  F004         	goto	u3820
  3336  0008BA                     u3821:
  3337  0008BA  FFFF               	dw	65535	; assembler added errata NOP
  3338  0008BC  EF99  F004         	goto	l3646
  3339  0008C0                     u3820:
  3340  0008C0  FFFF               	dw	65535	; assembler added errata NOP
  3341  0008C2                     
  3342                           ; BSR set to: 0
  3343                           ;main.c: 233:                 LATAbits.LATA1 = 1;
  3344  0008C2  8289               	bsf	137,1,c	;volatile
  3345  0008C4                     
  3346                           ; BSR set to: 0
  3347                           ;main.c: 234:                 if ( trash_counter < 100){
  3348  0008C4  BF97               	btfsc	(_trash_counter+1)& (0+255),7,b
  3349  0008C6  EF71  F004         	goto	u3830
  3350  0008CA  5197               	movf	(_trash_counter+1)& (0+255),w,b
  3351  0008CC  E107               	bnz	u3831
  3352  0008CE  0E64               	movlw	100
  3353  0008D0  5D96               	subwf	_trash_counter& (0+255),w,b
  3354  0008D2  B0D8               	btfsc	status,0,c
  3355  0008D4  EF6E  F004         	goto	u3831
  3356  0008D8  EF71  F004         	goto	u3830
  3357  0008DC                     u3831:
  3358  0008DC  FFFF               	dw	65535	; assembler added errata NOP
  3359  0008DE  EF81  F004         	goto	l3640
  3360  0008E2                     u3830:
  3361  0008E2  FFFF               	dw	65535	; assembler added errata NOP
  3362  0008E4                     
  3363                           ; BSR set to: 0
  3364                           ;main.c: 235:                     _delay((unsigned long)((10)*(4000000/4000.0)));
  3365  0008E4  0E0A               	movlw	10
  3366  0008E6  0100               	movlb	0	; () banked
  3367  0008E8  6FDA               	movwf	??_main& (0+255),b
  3368  0008EA  0EBE               	movlw	190
  3369  0008EC                     u3967:
  3370  0008EC  FFFF               	dw	65535	; errata NOP
  3371  0008EE  2EE8               	decfsz	wreg,f,c
  3372  0008F0  D7FD               	bra	u3967
  3373  0008F2  2FDA               	decfsz	??_main& (0+255),f,b
  3374  0008F4  D7FB               	bra	u3967
  3375  0008F6  F000               	nop	
  3376  0008F8                     
  3377                           ;main.c: 236:                     trash_counter++;
  3378  0008F8  0100               	movlb	0	; () banked
  3379  0008FA  4B96               	infsnz	_trash_counter& (0+255),f,b
  3380  0008FC  2B97               	incf	(_trash_counter+1)& (0+255),f,b
  3381                           
  3382                           ;main.c: 237:                 } else if (trash_counter >= 100){
  3383  0008FE  EF99  F004         	goto	l3646
  3384  000902                     l3640:
  3385  000902  FFFF               	dw	65535	; assembler added errata NOP
  3386                           
  3387                           ; BSR set to: 0
  3388  000904  BF97               	btfsc	(_trash_counter+1)& (0+255),7,b
  3389  000906  EF8E  F004         	goto	u3841
  3390  00090A  5197               	movf	(_trash_counter+1)& (0+255),w,b
  3391  00090C  E10A               	bnz	u3840
  3392  00090E  0E64               	movlw	100
  3393  000910  5D96               	subwf	_trash_counter& (0+255),w,b
  3394  000912  A0D8               	btfss	status,0,c
  3395  000914  EF8E  F004         	goto	u3841
  3396  000918  EF91  F004         	goto	u3840
  3397  00091C                     u3841:
  3398  00091C  FFFF               	dw	65535	; assembler added errata NOP
  3399  00091E  EF4E  F001         	goto	l160
  3400  000922                     u3840:
  3401  000922  FFFF               	dw	65535	; assembler added errata NOP
  3402  000924                     
  3403                           ; BSR set to: 0
  3404                           ;main.c: 238:                     state = 0;
  3405  000924  0E00               	movlw	0
  3406  000926  6FBF               	movwf	(_state+1)& (0+255),b
  3407  000928  0E00               	movlw	0
  3408  00092A  6FBE               	movwf	_state& (0+255),b
  3409                           
  3410                           ;main.c: 239:                     state_changed = 1;
  3411  00092C  0E01               	movlw	1
  3412  00092E  6FA5               	movwf	_state_changed& (0+255),b
  3413  000930                     
  3414                           ; BSR set to: 0
  3415                           ;main.c: 240:                     T0CONbits.TMR0ON = 0;
  3416  000930  9ED5               	bcf	213,7,c	;volatile
  3417  000932                     l3646:
  3418  000932  FFFF               	dw	65535	; assembler added errata NOP
  3419  000934  0E0E               	movlw	14
  3420  000936  0100               	movlb	0	; () banked
  3421  000938  19BE               	xorwf	_state& (0+255),w,b
  3422  00093A  11BF               	iorwf	(_state+1)& (0+255),w,b
  3423  00093C  A4D8               	btfss	status,2,c
  3424  00093E  EFA3  F004         	goto	u3851
  3425  000942  EFA6  F004         	goto	u3850
  3426  000946                     u3851:
  3427  000946  FFFF               	dw	65535	; assembler added errata NOP
  3428  000948  EFAE  F000         	goto	l3462
  3429  00094C                     u3850:
  3430  00094C  FFFF               	dw	65535	; assembler added errata NOP
  3431  00094E                     
  3432                           ; BSR set to: 0
  3433                           ;main.c: 244:                 if (tank_error == 0){
  3434  00094E  5188               	movf	_tank_error& (0+255),w,b
  3435  000950  1189               	iorwf	(_tank_error+1)& (0+255),w,b
  3436  000952  A4D8               	btfss	status,2,c
  3437  000954  EFAE  F004         	goto	u3861
  3438  000958  EFB1  F004         	goto	u3860
  3439  00095C                     u3861:
  3440  00095C  FFFF               	dw	65535	; assembler added errata NOP
  3441  00095E  EFB8  F004         	goto	l158
  3442  000962                     u3860:
  3443  000962  FFFF               	dw	65535	; assembler added errata NOP
  3444  000964                     
  3445                           ; BSR set to: 0
  3446                           ;main.c: 245:                     state = state_before_error;
  3447  000964  C0EB  F0BE         	movff	_state_before_error,_state
  3448  000968  C0EC  F0BF         	movff	_state_before_error+1,_state+1
  3449  00096C  EFAE  F000         	goto	l3462
  3450  000970                     l158:
  3451  000970  FFFF               	dw	65535	; assembler added errata NOP
  3452                           
  3453                           ; BSR set to: 0
  3454  000972  EFAE  F000         	goto	l3462
  3455  000976  EF3C  F000         	goto	start
  3456  00097A                     __end_of_main:
  3457                           	callstack 0
  3458                           
  3459 ;; *************** function _wait_for_zero *****************
  3460 ;; Defined at:
  3461 ;;		line 42 in file "oven.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;		None
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;		None
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  1    wreg      void 
  3468 ;; Registers used:
  3469 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3475 ;;      Params:         0       0       0       0       0       0       0
  3476 ;;      Locals:         0       0       0       0       0       0       0
  3477 ;;      Temps:          0       0       0       0       0       0       0
  3478 ;;      Totals:         0       0       0       0       0       0       0
  3479 ;;Total ram usage:        0 bytes
  3480 ;; Hardware stack levels used:    1
  3481 ;; Hardware stack levels required when called:    3
  3482 ;; This function calls:
  3483 ;;		_get_temperature
  3484 ;; This function is called by:
  3485 ;;		_main
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text1
  3490  002C88                     __ptext1:
  3491                           	callstack 0
  3492  002C88                     _wait_for_zero:
  3493                           	callstack 0
  3494  002C88  FFFF               	dw	65535	; assembler added errata NOP
  3495  002C8A                     l431:
  3496  002C8A  FFFF               	dw	65535	; assembler added errata NOP
  3497  002C8C                     
  3498                           ;oven.c: 44:         if (get_temperature() == -55){
  3499  002C8C  EC5D  F014         	call	_get_temperature	;wreg free
  3500  002C90  0EC9               	movlw	201
  3501  002C92  186F               	xorwf	?_get_temperature^0,w,c
  3502  002C94  E106               	bnz	u3391
  3503  002C96  2870               	incf	(?_get_temperature+1)^0,w,c
  3504  002C98  A4D8               	btfss	status,2,c
  3505  002C9A  EF51  F016         	goto	u3391
  3506  002C9E  EF54  F016         	goto	u3390
  3507  002CA2                     u3391:
  3508  002CA2  FFFF               	dw	65535	; assembler added errata NOP
  3509  002CA4  EF45  F016         	goto	l431
  3510  002CA8                     u3390:
  3511  002CA8  FFFF               	dw	65535	; assembler added errata NOP
  3512  002CAA  0012               	return		;funcret
  3513  002CAC  FFFF               	dw	65535	; errata NOP
  3514  002CAE                     __end_of_wait_for_zero:
  3515                           	callstack 0
  3516                           
  3517 ;; *************** function _get_temperature *****************
  3518 ;; Defined at:
  3519 ;;		line 30 in file "oven.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;		None
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;		None
  3524 ;; Return value:  Size  Location     Type
  3525 ;;                  2  110[COMRAM] int 
  3526 ;; Registers used:
  3527 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3533 ;;      Params:         2       0       0       0       0       0       0
  3534 ;;      Locals:         0       0       0       0       0       0       0
  3535 ;;      Temps:          0       0       0       0       0       0       0
  3536 ;;      Totals:         2       0       0       0       0       0       0
  3537 ;;Total ram usage:        2 bytes
  3538 ;; Hardware stack levels used:    1
  3539 ;; Hardware stack levels required when called:    2
  3540 ;; This function calls:
  3541 ;;		___flmul
  3542 ;;		___fltol
  3543 ;;		___xxtofl
  3544 ;; This function is called by:
  3545 ;;		_main
  3546 ;;		_wait_for_zero
  3547 ;; This function uses a non-reentrant model
  3548 ;;
  3549                           
  3550                           	psect	text2
  3551  0028BA                     __ptext2:
  3552                           	callstack 0
  3553  0028BA                     _get_temperature:
  3554                           	callstack 0
  3555  0028BA  FFFF               	dw	65535	; assembler added errata NOP
  3556  0028BC                     
  3557                           ;oven.c: 31:     ADCON0bits.GO = 1;
  3558  0028BC  84C2               	bsf	194,2,c	;volatile
  3559  0028BE                     l419:
  3560  0028BE  FFFF               	dw	65535	; assembler added errata NOP
  3561  0028C0  B4C2               	btfsc	194,2,c	;volatile
  3562  0028C2  EF65  F014         	goto	u3101
  3563  0028C6  EF68  F014         	goto	u3100
  3564  0028CA                     u3101:
  3565  0028CA  FFFF               	dw	65535	; assembler added errata NOP
  3566  0028CC  EF5F  F014         	goto	l419
  3567  0028D0                     u3100:
  3568  0028D0  FFFF               	dw	65535	; assembler added errata NOP
  3569  0028D2                     
  3570                           ;oven.c: 33:     return (int) (ADRESH * 0.25) + -55;
  3571  0028D2  0E00               	movlw	0
  3572  0028D4  6E1F               	movwf	___flmul@a^0,c
  3573  0028D6  0E00               	movlw	0
  3574  0028D8  6E20               	movwf	(___flmul@a+1)^0,c
  3575  0028DA  0E80               	movlw	128
  3576  0028DC  6E21               	movwf	(___flmul@a+2)^0,c
  3577  0028DE  0E3E               	movlw	62
  3578  0028E0  6E22               	movwf	(___flmul@a+3)^0,c
  3579  0028E2  50C4               	movf	196,w,c	;volatile
  3580  0028E4  6E0D               	movwf	___xxtofl@val^0,c
  3581  0028E6  6A0E               	clrf	(___xxtofl@val+1)^0,c
  3582  0028E8  6A0F               	clrf	(___xxtofl@val+2)^0,c
  3583  0028EA  6A10               	clrf	(___xxtofl@val+3)^0,c
  3584  0028EC  0E01               	movlw	1
  3585  0028EE  ECF2  F00D         	call	___xxtofl
  3586  0028F2  C00D  F01B         	movff	?___xxtofl,___flmul@b
  3587  0028F6  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  3588  0028FA  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  3589  0028FE  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  3590  002902  EC91  F007         	call	___flmul	;wreg free
  3591  002906  C01B  F065         	movff	?___flmul,___fltol@f1
  3592  00290A  C01C  F066         	movff	?___flmul+1,___fltol@f1+1
  3593  00290E  C01D  F067         	movff	?___flmul+2,___fltol@f1+2
  3594  002912  C01E  F068         	movff	?___flmul+3,___fltol@f1+3
  3595  002916  ECA5  F00F         	call	___fltol	;wreg free
  3596  00291A  0EC9               	movlw	201
  3597  00291C  2465               	addwf	?___fltol^0,w,c
  3598  00291E  6E6F               	movwf	?_get_temperature^0,c
  3599  002920  0EFF               	movlw	255
  3600  002922  2066               	addwfc	(?___fltol+1)^0,w,c
  3601  002924  6E70               	movwf	(?_get_temperature+1)^0,c
  3602  002926  0012               	return		;funcret
  3603  002928  FFFF               	dw	65535	; errata NOP
  3604  00292A                     __end_of_get_temperature:
  3605                           	callstack 0
  3606                           
  3607 ;; *************** function _state_translator_micro_to_fpga *****************
  3608 ;; Defined at:
  3609 ;;		line 26 in file "utils.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;  state           2    0[COMRAM] PTR int 
  3612 ;;		 -> state(2), 
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;  state_machin    1    4[COMRAM] unsigned char 
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  1    wreg      unsigned char 
  3617 ;; Registers used:
  3618 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3624 ;;      Params:         2       0       0       0       0       0       0
  3625 ;;      Locals:         1       0       0       0       0       0       0
  3626 ;;      Temps:          2       0       0       0       0       0       0
  3627 ;;      Totals:         5       0       0       0       0       0       0
  3628 ;;Total ram usage:        5 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; Hardware stack levels required when called:    1
  3631 ;; This function calls:
  3632 ;;		Nothing
  3633 ;; This function is called by:
  3634 ;;		_main
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637                           
  3638                           	psect	text3
  3639  00273A                     __ptext3:
  3640                           	callstack 0
  3641  00273A                     _state_translator_micro_to_fpga:
  3642                           	callstack 0
  3643  00273A  FFFF               	dw	65535	; assembler added errata NOP
  3644  00273C                     
  3645                           ;utils.c: 27:     unsigned char state_machine_code;;utils.c: 28:     if (*state == 2){
  3646  00273C  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  3647  002740  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  3648  002744  0E02               	movlw	2
  3649  002746  18DE               	xorwf	postinc2,w,c
  3650  002748  10DE               	iorwf	postinc2,w,c
  3651  00274A  A4D8               	btfss	status,2,c
  3652  00274C  EFAA  F013         	goto	u3321
  3653  002750  EFAD  F013         	goto	u3320
  3654  002754                     u3321:
  3655  002754  FFFF               	dw	65535	; assembler added errata NOP
  3656  002756  EFB2  F013         	goto	l3308
  3657  00275A                     u3320:
  3658  00275A  FFFF               	dw	65535	; assembler added errata NOP
  3659  00275C                     
  3660                           ;utils.c: 29:         state_machine_code = 0x10;
  3661  00275C  0E10               	movlw	16
  3662  00275E  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3663                           
  3664                           ;utils.c: 30:     } else if (*state == 0) {
  3665  002760  EFDE  F013         	goto	l317
  3666  002764                     l3308:
  3667  002764  FFFF               	dw	65535	; assembler added errata NOP
  3668  002766  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  3669  00276A  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  3670  00276E  50DE               	movf	postinc2,w,c
  3671  002770  10DE               	iorwf	postinc2,w,c
  3672  002772  A4D8               	btfss	status,2,c
  3673  002774  EFBE  F013         	goto	u3331
  3674  002778  EFC1  F013         	goto	u3330
  3675  00277C                     u3331:
  3676  00277C  FFFF               	dw	65535	; assembler added errata NOP
  3677  00277E  EFC6  F013         	goto	l3312
  3678  002782                     u3330:
  3679  002782  FFFF               	dw	65535	; assembler added errata NOP
  3680  002784                     
  3681                           ;utils.c: 31:         state_machine_code = 0x09;
  3682  002784  0E09               	movlw	9
  3683  002786  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3684                           
  3685                           ;utils.c: 32:     } else if (*state == 14) {
  3686  002788  EFDE  F013         	goto	l317
  3687  00278C                     l3312:
  3688  00278C  FFFF               	dw	65535	; assembler added errata NOP
  3689  00278E  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  3690  002792  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  3691  002796  0E0E               	movlw	14
  3692  002798  18DE               	xorwf	postinc2,w,c
  3693  00279A  10DE               	iorwf	postinc2,w,c
  3694  00279C  A4D8               	btfss	status,2,c
  3695  00279E  EFD3  F013         	goto	u3341
  3696  0027A2  EFD6  F013         	goto	u3340
  3697  0027A6                     u3341:
  3698  0027A6  FFFF               	dw	65535	; assembler added errata NOP
  3699  0027A8  EFDB  F013         	goto	l3316
  3700  0027AC                     u3340:
  3701  0027AC  FFFF               	dw	65535	; assembler added errata NOP
  3702  0027AE                     
  3703                           ;utils.c: 33:         state_machine_code = 0x40;
  3704  0027AE  0E40               	movlw	64
  3705  0027B0  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3706                           
  3707                           ;utils.c: 34:     } else {
  3708  0027B2  EFDE  F013         	goto	l317
  3709  0027B6                     l3316:
  3710  0027B6  FFFF               	dw	65535	; assembler added errata NOP
  3711                           
  3712                           ;utils.c: 35:         state_machine_code = 0x80;
  3713  0027B8  0E80               	movlw	128
  3714  0027BA  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3715  0027BC                     l317:
  3716  0027BC  FFFF               	dw	65535	; assembler added errata NOP
  3717                           
  3718                           ;utils.c: 37:     return state_machine_code;
  3719  0027BE  5005               	movf	state_translator_micro_to_fpga@state_machine_code^0,w,c
  3720  0027C0  0012               	return		;funcret
  3721  0027C2  FFFF               	dw	65535	; errata NOP
  3722  0027C4                     __end_of_state_translator_micro_to_fpga:
  3723                           	callstack 0
  3724                           
  3725 ;; *************** function _state_translator_fpga_to_micro *****************
  3726 ;; Defined at:
  3727 ;;		line 2 in file "utils.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;  state_machin    1    wreg     unsigned char 
  3730 ;;  state           2    2[COMRAM] PTR int 
  3731 ;;		 -> state(2), 
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;  state_machin    1    4[COMRAM] unsigned char 
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  1    wreg      void 
  3736 ;; Registers used:
  3737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3743 ;;      Params:         2       0       0       0       0       0       0
  3744 ;;      Locals:         1       0       0       0       0       0       0
  3745 ;;      Temps:          0       0       0       0       0       0       0
  3746 ;;      Totals:         3       0       0       0       0       0       0
  3747 ;;Total ram usage:        3 bytes
  3748 ;; Hardware stack levels used:    1
  3749 ;; Hardware stack levels required when called:    3
  3750 ;; This function calls:
  3751 ;;		_lcd_dat
  3752 ;; This function is called by:
  3753 ;;		_main
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           	psect	text4
  3758  001DDC                     __ptext4:
  3759                           	callstack 0
  3760  001DDC                     _state_translator_fpga_to_micro:
  3761                           	callstack 0
  3762  001DDC  FFFF               	dw	65535	; assembler added errata NOP
  3763                           
  3764                           ;incstack = 0
  3765                           ;state_translator_fpga_to_micro@state_machine_code stored from wreg
  3766  001DDE  6E05               	movwf	state_translator_fpga_to_micro@state_machine_code^0,c
  3767  001DE0                     
  3768                           ;utils.c: 3:     lcd_dat(state_machine_code);
  3769  001DE0  5005               	movf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3770  001DE2  EC05  F016         	call	_lcd_dat
  3771  001DE6                     
  3772                           ;utils.c: 4:     if (state_machine_code == 0x01){
  3773  001DE6  0405               	decf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3774  001DE8  A4D8               	btfss	status,2,c
  3775  001DEA  EFF9  F00E         	goto	u3241
  3776  001DEE  EFFC  F00E         	goto	u3240
  3777  001DF2                     u3241:
  3778  001DF2  FFFF               	dw	65535	; assembler added errata NOP
  3779  001DF4  EF07  F00F         	goto	l3272
  3780  001DF8                     u3240:
  3781  001DF8  FFFF               	dw	65535	; assembler added errata NOP
  3782  001DFA                     
  3783                           ;utils.c: 5:         *state = 1;
  3784  001DFA  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3785  001DFE  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3786  001E02  0E01               	movlw	1
  3787  001E04  6EDE               	movwf	postinc2,c
  3788  001E06  0E00               	movlw	0
  3789  001E08  6EDD               	movwf	postdec2,c
  3790                           
  3791                           ;utils.c: 6:     } else if (state_machine_code == 0x02){
  3792  001E0A  EFA2  F00F         	goto	l313
  3793  001E0E                     l3272:
  3794  001E0E  FFFF               	dw	65535	; assembler added errata NOP
  3795  001E10  0E02               	movlw	2
  3796  001E12  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3797  001E14  A4D8               	btfss	status,2,c
  3798  001E16  EF0F  F00F         	goto	u3251
  3799  001E1A  EF12  F00F         	goto	u3250
  3800  001E1E                     u3251:
  3801  001E1E  FFFF               	dw	65535	; assembler added errata NOP
  3802  001E20  EF1D  F00F         	goto	l3276
  3803  001E24                     u3250:
  3804  001E24  FFFF               	dw	65535	; assembler added errata NOP
  3805  001E26                     
  3806                           ;utils.c: 7:         *state = 3;
  3807  001E26  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3808  001E2A  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3809  001E2E  0E03               	movlw	3
  3810  001E30  6EDE               	movwf	postinc2,c
  3811  001E32  0E00               	movlw	0
  3812  001E34  6EDD               	movwf	postdec2,c
  3813                           
  3814                           ;utils.c: 8:     } else if (state_machine_code == 0x04){
  3815  001E36  EFA2  F00F         	goto	l313
  3816  001E3A                     l3276:
  3817  001E3A  FFFF               	dw	65535	; assembler added errata NOP
  3818  001E3C  0E04               	movlw	4
  3819  001E3E  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3820  001E40  A4D8               	btfss	status,2,c
  3821  001E42  EF25  F00F         	goto	u3261
  3822  001E46  EF28  F00F         	goto	u3260
  3823  001E4A                     u3261:
  3824  001E4A  FFFF               	dw	65535	; assembler added errata NOP
  3825  001E4C  EF33  F00F         	goto	l3280
  3826  001E50                     u3260:
  3827  001E50  FFFF               	dw	65535	; assembler added errata NOP
  3828  001E52                     
  3829                           ;utils.c: 9:         *state = 5;
  3830  001E52  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3831  001E56  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3832  001E5A  0E05               	movlw	5
  3833  001E5C  6EDE               	movwf	postinc2,c
  3834  001E5E  0E00               	movlw	0
  3835  001E60  6EDD               	movwf	postdec2,c
  3836                           
  3837                           ;utils.c: 10:     } else if (state_machine_code == 0x08){
  3838  001E62  EFA2  F00F         	goto	l313
  3839  001E66                     l3280:
  3840  001E66  FFFF               	dw	65535	; assembler added errata NOP
  3841  001E68  0E08               	movlw	8
  3842  001E6A  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3843  001E6C  A4D8               	btfss	status,2,c
  3844  001E6E  EF3B  F00F         	goto	u3271
  3845  001E72  EF3E  F00F         	goto	u3270
  3846  001E76                     u3271:
  3847  001E76  FFFF               	dw	65535	; assembler added errata NOP
  3848  001E78  EF49  F00F         	goto	l3284
  3849  001E7C                     u3270:
  3850  001E7C  FFFF               	dw	65535	; assembler added errata NOP
  3851  001E7E                     
  3852                           ;utils.c: 11:         *state = 10;
  3853  001E7E  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3854  001E82  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3855  001E86  0E0A               	movlw	10
  3856  001E88  6EDE               	movwf	postinc2,c
  3857  001E8A  0E00               	movlw	0
  3858  001E8C  6EDD               	movwf	postdec2,c
  3859                           
  3860                           ;utils.c: 12:     } else if (state_machine_code == 0x10){
  3861  001E8E  EFA2  F00F         	goto	l313
  3862  001E92                     l3284:
  3863  001E92  FFFF               	dw	65535	; assembler added errata NOP
  3864  001E94  0E10               	movlw	16
  3865  001E96  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3866  001E98  A4D8               	btfss	status,2,c
  3867  001E9A  EF51  F00F         	goto	u3281
  3868  001E9E  EF54  F00F         	goto	u3280
  3869  001EA2                     u3281:
  3870  001EA2  FFFF               	dw	65535	; assembler added errata NOP
  3871  001EA4  EF5F  F00F         	goto	l3288
  3872  001EA8                     u3280:
  3873  001EA8  FFFF               	dw	65535	; assembler added errata NOP
  3874  001EAA                     
  3875                           ;utils.c: 13:         *state = 2;
  3876  001EAA  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3877  001EAE  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3878  001EB2  0E02               	movlw	2
  3879  001EB4  6EDE               	movwf	postinc2,c
  3880  001EB6  0E00               	movlw	0
  3881  001EB8  6EDD               	movwf	postdec2,c
  3882                           
  3883                           ;utils.c: 14:     } else if (state_machine_code == 0x40){
  3884  001EBA  EFA2  F00F         	goto	l313
  3885  001EBE                     l3288:
  3886  001EBE  FFFF               	dw	65535	; assembler added errata NOP
  3887  001EC0  0E40               	movlw	64
  3888  001EC2  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3889  001EC4  A4D8               	btfss	status,2,c
  3890  001EC6  EF67  F00F         	goto	u3291
  3891  001ECA  EF6A  F00F         	goto	u3290
  3892  001ECE                     u3291:
  3893  001ECE  FFFF               	dw	65535	; assembler added errata NOP
  3894  001ED0  EF75  F00F         	goto	l3292
  3895  001ED4                     u3290:
  3896  001ED4  FFFF               	dw	65535	; assembler added errata NOP
  3897  001ED6                     
  3898                           ;utils.c: 15:         *state = 14;
  3899  001ED6  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3900  001EDA  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3901  001EDE  0E0E               	movlw	14
  3902  001EE0  6EDE               	movwf	postinc2,c
  3903  001EE2  0E00               	movlw	0
  3904  001EE4  6EDD               	movwf	postdec2,c
  3905                           
  3906                           ;utils.c: 16:     } else if (state_machine_code == 0x80){
  3907  001EE6  EFA2  F00F         	goto	l313
  3908  001EEA                     l3292:
  3909  001EEA  FFFF               	dw	65535	; assembler added errata NOP
  3910  001EEC  0E80               	movlw	128
  3911  001EEE  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3912  001EF0  A4D8               	btfss	status,2,c
  3913  001EF2  EF7D  F00F         	goto	u3301
  3914  001EF6  EF80  F00F         	goto	u3300
  3915  001EFA                     u3301:
  3916  001EFA  FFFF               	dw	65535	; assembler added errata NOP
  3917  001EFC  EF83  F00F         	goto	l3296
  3918  001F00                     u3300:
  3919  001F00  FFFF               	dw	65535	; assembler added errata NOP
  3920  001F02  EFA2  F00F         	goto	l313
  3921  001F06                     l3296:
  3922  001F06  FFFF               	dw	65535	; assembler added errata NOP
  3923  001F08  0E20               	movlw	32
  3924  001F0A  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3925  001F0C  A4D8               	btfss	status,2,c
  3926  001F0E  EF8B  F00F         	goto	u3311
  3927  001F12  EF8E  F00F         	goto	u3310
  3928  001F16                     u3311:
  3929  001F16  FFFF               	dw	65535	; assembler added errata NOP
  3930  001F18  EF99  F00F         	goto	l3300
  3931  001F1C                     u3310:
  3932  001F1C  FFFF               	dw	65535	; assembler added errata NOP
  3933  001F1E                     
  3934                           ;utils.c: 19:         *state = 12;
  3935  001F1E  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3936  001F22  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3937  001F26  0E0C               	movlw	12
  3938  001F28  6EDE               	movwf	postinc2,c
  3939  001F2A  0E00               	movlw	0
  3940  001F2C  6EDD               	movwf	postdec2,c
  3941                           
  3942                           ;utils.c: 20:     } else {
  3943  001F2E  EFA2  F00F         	goto	l313
  3944  001F32                     l3300:
  3945  001F32  FFFF               	dw	65535	; assembler added errata NOP
  3946                           
  3947                           ;utils.c: 21:         *state = 0;
  3948  001F34  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3949  001F38  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3950  001F3C  0E00               	movlw	0
  3951  001F3E  6EDE               	movwf	postinc2,c
  3952  001F40  0E00               	movlw	0
  3953  001F42  6EDD               	movwf	postdec2,c
  3954  001F44                     l313:
  3955  001F44  FFFF               	dw	65535	; assembler added errata NOP
  3956  001F46  0012               	return		;funcret
  3957  001F48  FFFF               	dw	65535	; errata NOP
  3958  001F4A                     __end_of_state_translator_fpga_to_micro:
  3959                           	callstack 0
  3960                           
  3961 ;; *************** function _serial_tx_char *****************
  3962 ;; Defined at:
  3963 ;;		line 39 in file "serial_rs232.c"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;  val             1    wreg     unsigned char 
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;  val             1    0[COMRAM] unsigned char 
  3968 ;; Return value:  Size  Location     Type
  3969 ;;                  1    wreg      void 
  3970 ;; Registers used:
  3971 ;;		wreg
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3977 ;;      Params:         0       0       0       0       0       0       0
  3978 ;;      Locals:         1       0       0       0       0       0       0
  3979 ;;      Temps:          0       0       0       0       0       0       0
  3980 ;;      Totals:         1       0       0       0       0       0       0
  3981 ;;Total ram usage:        1 bytes
  3982 ;; Hardware stack levels used:    1
  3983 ;; Hardware stack levels required when called:    1
  3984 ;; This function calls:
  3985 ;;		Nothing
  3986 ;; This function is called by:
  3987 ;;		_main
  3988 ;;		_serial_tx_string
  3989 ;; This function uses a non-reentrant model
  3990 ;;
  3991                           
  3992                           	psect	text5
  3993  002CF2                     __ptext5:
  3994                           	callstack 0
  3995  002CF2                     _serial_tx_char:
  3996                           	callstack 0
  3997  002CF2  FFFF               	dw	65535	; assembler added errata NOP
  3998                           
  3999                           ;incstack = 0
  4000                           ;serial_tx_char@val stored from wreg
  4001  002CF4  6E01               	movwf	serial_tx_char@val^0,c
  4002  002CF6                     
  4003                           ;serial_rs232.c: 40:     TXREG = val;
  4004  002CF6  C001  FFAD         	movff	serial_tx_char@val,4013	;volatile
  4005  002CFA                     l24:
  4006  002CFA  FFFF               	dw	65535	; assembler added errata NOP
  4007  002CFC  A2AC               	btfss	172,1,c	;volatile
  4008  002CFE  EF83  F016         	goto	u3221
  4009  002D02  EF86  F016         	goto	u3220
  4010  002D06                     u3221:
  4011  002D06  FFFF               	dw	65535	; assembler added errata NOP
  4012  002D08  EF7D  F016         	goto	l24
  4013  002D0C                     u3220:
  4014  002D0C  FFFF               	dw	65535	; assembler added errata NOP
  4015  002D0E  0012               	return		;funcret
  4016  002D10  FFFF               	dw	65535	; errata NOP
  4017  002D12                     __end_of_serial_tx_char:
  4018                           	callstack 0
  4019                           
  4020 ;; *************** function _reach_goal *****************
  4021 ;; Defined at:
  4022 ;;		line 30 in file "stepper_motor.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  stepper_moto    2    8[COMRAM] PTR struct .
  4025 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
  4026 ;;  goal_to_reac    2   10[COMRAM] int 
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;		None
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  2    8[COMRAM] int 
  4031 ;; Registers used:
  4032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4038 ;;      Params:         4       0       0       0       0       0       0
  4039 ;;      Locals:         0       0       0       0       0       0       0
  4040 ;;      Temps:          3       0       0       0       0       0       0
  4041 ;;      Totals:         7       0       0       0       0       0       0
  4042 ;;Total ram usage:        7 bytes
  4043 ;; Hardware stack levels used:    1
  4044 ;; Hardware stack levels required when called:    2
  4045 ;; This function calls:
  4046 ;;		_turn_on_current_coil
  4047 ;;		_update_current_coil
  4048 ;; This function is called by:
  4049 ;;		_main
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           	psect	text6
  4054  002842                     __ptext6:
  4055                           	callstack 0
  4056  002842                     _reach_goal:
  4057                           	callstack 0
  4058  002842  FFFF               	dw	65535	; assembler added errata NOP
  4059  002844                     
  4060                           ;stepper_motor.c: 31:     if(stepper_motor -> step_counter >= goal_to_reach){
  4061  002844  EE20 F002          	lfsr	2,2
  4062  002848  5009               	movf	reach_goal@stepper_motor^0,w,c
  4063  00284A  26D9               	addwf	fsr2l,f,c
  4064  00284C  500A               	movf	(reach_goal@stepper_motor+1)^0,w,c
  4065  00284E  22DA               	addwfc	fsr2h,f,c
  4066  002850  500B               	movf	reach_goal@goal_to_reach^0,w,c
  4067  002852  5CDE               	subwf	postinc2,w,c
  4068  002854  50DE               	movf	postinc2,w,c
  4069  002856  0A80               	xorlw	128
  4070  002858  6E0F               	movwf	(??_reach_goal+2)^0,c
  4071  00285A  500C               	movf	(reach_goal@goal_to_reach+1)^0,w,c
  4072  00285C  0A80               	xorlw	128
  4073  00285E  580F               	subwfb	(??_reach_goal+2)^0,w,c
  4074  002860  A0D8               	btfss	status,0,c
  4075  002862  EF35  F014         	goto	u3401
  4076  002866  EF38  F014         	goto	u3400
  4077  00286A                     u3401:
  4078  00286A  FFFF               	dw	65535	; assembler added errata NOP
  4079  00286C  EF49  F014         	goto	l3410
  4080  002870                     u3400:
  4081  002870  FFFF               	dw	65535	; assembler added errata NOP
  4082  002872                     
  4083                           ;stepper_motor.c: 32:         stepper_motor -> step_counter = 0;
  4084  002872  EE20 F002          	lfsr	2,2
  4085  002876  5009               	movf	reach_goal@stepper_motor^0,w,c
  4086  002878  26D9               	addwf	fsr2l,f,c
  4087  00287A  500A               	movf	(reach_goal@stepper_motor+1)^0,w,c
  4088  00287C  22DA               	addwfc	fsr2h,f,c
  4089  00287E  0E00               	movlw	0
  4090  002880  6EDE               	movwf	postinc2,c
  4091  002882  0E00               	movlw	0
  4092  002884  6EDD               	movwf	postdec2,c
  4093  002886                     
  4094                           ;stepper_motor.c: 33:         return 1;
  4095  002886  0E00               	movlw	0
  4096  002888  6E0A               	movwf	(?_reach_goal+1)^0,c
  4097  00288A  0E01               	movlw	1
  4098  00288C  6E09               	movwf	?_reach_goal^0,c
  4099  00288E  EF5A  F014         	goto	l390
  4100  002892                     l3410:
  4101  002892  FFFF               	dw	65535	; assembler added errata NOP
  4102                           
  4103                           ;stepper_motor.c: 35:         turn_on_current_coil(stepper_motor);
  4104  002894  C009  F001         	movff	reach_goal@stepper_motor,turn_on_current_coil@stepper_motor
  4105  002898  C00A  F002         	movff	reach_goal@stepper_motor+1,turn_on_current_coil@stepper_motor+1
  4106  00289C  ECFB  F014         	call	_turn_on_current_coil	;wreg free
  4107  0028A0                     
  4108                           ;stepper_motor.c: 36:         update_current_coil(stepper_motor);
  4109  0028A0  C009  F001         	movff	reach_goal@stepper_motor,update_current_coil@stepper_motor
  4110  0028A4  C00A  F002         	movff	reach_goal@stepper_motor+1,update_current_coil@stepper_motor+1
  4111  0028A8  EC4C  F011         	call	_update_current_coil	;wreg free
  4112  0028AC                     
  4113                           ;stepper_motor.c: 37:         return 0;
  4114  0028AC  0E00               	movlw	0
  4115  0028AE  6E0A               	movwf	(?_reach_goal+1)^0,c
  4116  0028B0  0E00               	movlw	0
  4117  0028B2  6E09               	movwf	?_reach_goal^0,c
  4118  0028B4                     l390:
  4119  0028B4  FFFF               	dw	65535	; assembler added errata NOP
  4120  0028B6  0012               	return		;funcret
  4121  0028B8  FFFF               	dw	65535	; errata NOP
  4122  0028BA                     __end_of_reach_goal:
  4123                           	callstack 0
  4124                           
  4125 ;; *************** function _update_current_coil *****************
  4126 ;; Defined at:
  4127 ;;		line 19 in file "stepper_motor.c"
  4128 ;; Parameters:    Size  Location     Type
  4129 ;;  stepper_moto    2    0[COMRAM] PTR struct .
  4130 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;		None
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  1    wreg      void 
  4135 ;; Registers used:
  4136 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4142 ;;      Params:         2       0       0       0       0       0       0
  4143 ;;      Locals:         0       0       0       0       0       0       0
  4144 ;;      Temps:          4       0       0       0       0       0       0
  4145 ;;      Totals:         6       0       0       0       0       0       0
  4146 ;;Total ram usage:        6 bytes
  4147 ;; Hardware stack levels used:    1
  4148 ;; Hardware stack levels required when called:    1
  4149 ;; This function calls:
  4150 ;;		Nothing
  4151 ;; This function is called by:
  4152 ;;		_reach_goal
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           	psect	text7
  4157  002298                     __ptext7:
  4158                           	callstack 0
  4159  002298                     _update_current_coil:
  4160                           	callstack 0
  4161  002298  FFFF               	dw	65535	; assembler added errata NOP
  4162  00229A                     
  4163                           ;stepper_motor.c: 20:     stepper_motor -> current_coil = stepper_motor -> current_coil 
      +                          + stepper_motor -> direction;
  4164  00229A  EE20 F004          	lfsr	2,4
  4165  00229E  5001               	movf	update_current_coil@stepper_motor^0,w,c
  4166  0022A0  26D9               	addwf	fsr2l,f,c
  4167  0022A2  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
  4168  0022A4  22DA               	addwfc	fsr2h,f,c
  4169  0022A6  CFDE F003          	movff	postinc2,??_update_current_coil
  4170  0022AA  CFDD F004          	movff	postdec2,??_update_current_coil+1
  4171  0022AE  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4172  0022B2  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4173  0022B6  CFDE F005          	movff	postinc2,??_update_current_coil+2
  4174  0022BA  CFDD F006          	movff	postdec2,??_update_current_coil+3
  4175  0022BE  5003               	movf	??_update_current_coil^0,w,c
  4176  0022C0  2605               	addwf	(??_update_current_coil+2)^0,f,c
  4177  0022C2  5004               	movf	(??_update_current_coil+1)^0,w,c
  4178  0022C4  2206               	addwfc	(??_update_current_coil+3)^0,f,c
  4179  0022C6  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4180  0022CA  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4181  0022CE  C005  FFDE         	movff	??_update_current_coil+2,postinc2
  4182  0022D2  C006  FFDD         	movff	??_update_current_coil+3,postdec2
  4183                           
  4184                           ;stepper_motor.c: 21:     stepper_motor -> step_counter = stepper_motor -> step_counter 
      +                          + 1;
  4185  0022D6  EE20 F002          	lfsr	2,2
  4186  0022DA  5001               	movf	update_current_coil@stepper_motor^0,w,c
  4187  0022DC  26D9               	addwf	fsr2l,f,c
  4188  0022DE  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
  4189  0022E0  22DA               	addwfc	fsr2h,f,c
  4190  0022E2  CFDE F003          	movff	postinc2,??_update_current_coil
  4191  0022E6  CFDD F004          	movff	postdec2,??_update_current_coil+1
  4192  0022EA  0E01               	movlw	1
  4193  0022EC  2603               	addwf	??_update_current_coil^0,f,c
  4194  0022EE  0E00               	movlw	0
  4195  0022F0  2204               	addwfc	(??_update_current_coil+1)^0,f,c
  4196  0022F2  EE20 F002          	lfsr	2,2
  4197  0022F6  5001               	movf	update_current_coil@stepper_motor^0,w,c
  4198  0022F8  26D9               	addwf	fsr2l,f,c
  4199  0022FA  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
  4200  0022FC  22DA               	addwfc	fsr2h,f,c
  4201  0022FE  C003  FFDE         	movff	??_update_current_coil,postinc2
  4202  002302  C004  FFDD         	movff	??_update_current_coil+1,postdec2
  4203                           
  4204                           ;stepper_motor.c: 22:     if (stepper_motor -> current_coil == -1) {
  4205  002306  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4206  00230A  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4207  00230E  28DE               	incf	postinc2,w,c
  4208  002310  E106               	bnz	u3131
  4209  002312  28DE               	incf	postinc2,w,c
  4210  002314  A4D8               	btfss	status,2,c
  4211  002316  EF8F  F011         	goto	u3131
  4212  00231A  EF92  F011         	goto	u3130
  4213  00231E                     u3131:
  4214  00231E  FFFF               	dw	65535	; assembler added errata NOP
  4215  002320  EF9D  F011         	goto	l3104
  4216  002324                     u3130:
  4217  002324  FFFF               	dw	65535	; assembler added errata NOP
  4218  002326                     
  4219                           ;stepper_motor.c: 23:         stepper_motor -> current_coil = 3;
  4220  002326  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4221  00232A  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4222  00232E  0E03               	movlw	3
  4223  002330  6EDE               	movwf	postinc2,c
  4224  002332  0E00               	movlw	0
  4225  002334  6EDD               	movwf	postdec2,c
  4226                           
  4227                           ;stepper_motor.c: 24:     } else if(stepper_motor -> current_coil == 4) {
  4228  002336  EFB6  F011         	goto	l386
  4229  00233A                     l3104:
  4230  00233A  FFFF               	dw	65535	; assembler added errata NOP
  4231  00233C  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4232  002340  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4233  002344  0E04               	movlw	4
  4234  002346  18DE               	xorwf	postinc2,w,c
  4235  002348  10DE               	iorwf	postinc2,w,c
  4236  00234A  A4D8               	btfss	status,2,c
  4237  00234C  EFAA  F011         	goto	u3141
  4238  002350  EFAD  F011         	goto	u3140
  4239  002354                     u3141:
  4240  002354  FFFF               	dw	65535	; assembler added errata NOP
  4241  002356  EFB6  F011         	goto	l386
  4242  00235A                     u3140:
  4243  00235A  FFFF               	dw	65535	; assembler added errata NOP
  4244  00235C                     
  4245                           ;stepper_motor.c: 25:         stepper_motor -> current_coil = 0;
  4246  00235C  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4247  002360  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4248  002364  0E00               	movlw	0
  4249  002366  6EDE               	movwf	postinc2,c
  4250  002368  0E00               	movlw	0
  4251  00236A  6EDD               	movwf	postdec2,c
  4252  00236C                     l386:
  4253  00236C  FFFF               	dw	65535	; assembler added errata NOP
  4254  00236E  0012               	return		;funcret
  4255  002370  FFFF               	dw	65535	; errata NOP
  4256  002372                     __end_of_update_current_coil:
  4257                           	callstack 0
  4258                           
  4259 ;; *************** function _turn_on_current_coil *****************
  4260 ;; Defined at:
  4261 ;;		line 14 in file "stepper_motor.c"
  4262 ;; Parameters:    Size  Location     Type
  4263 ;;  stepper_moto    2    0[COMRAM] PTR struct .
  4264 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
  4265 ;; Auto vars:     Size  Location     Type
  4266 ;;		None
  4267 ;; Return value:  Size  Location     Type
  4268 ;;                  1    wreg      void 
  4269 ;; Registers used:
  4270 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4271 ;; Tracked objects:
  4272 ;;		On entry : 0/0
  4273 ;;		On exit  : 0/0
  4274 ;;		Unchanged: 0/0
  4275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4276 ;;      Params:         2       0       0       0       0       0       0
  4277 ;;      Locals:         0       0       0       0       0       0       0
  4278 ;;      Temps:          6       0       0       0       0       0       0
  4279 ;;      Totals:         8       0       0       0       0       0       0
  4280 ;;Total ram usage:        8 bytes
  4281 ;; Hardware stack levels used:    1
  4282 ;; Hardware stack levels required when called:    1
  4283 ;; This function calls:
  4284 ;;		Nothing
  4285 ;; This function is called by:
  4286 ;;		_reach_goal
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290                           	psect	text8
  4291  0029F6                     __ptext8:
  4292                           	callstack 0
  4293  0029F6                     _turn_on_current_coil:
  4294                           	callstack 0
  4295  0029F6  FFFF               	dw	65535	; assembler added errata NOP
  4296  0029F8                     
  4297                           ;stepper_motor.c: 15:     *(stepper_motor -> register_name) = stepper_motor -> hex_coil_
      +                          register_values[stepper_motor -> current_coil];
  4298  0029F8  C001  FFD9         	movff	turn_on_current_coil@stepper_motor,fsr2l
  4299  0029FC  C002  FFDA         	movff	turn_on_current_coil@stepper_motor+1,fsr2h
  4300  002A00  CFDE F003          	movff	postinc2,??_turn_on_current_coil
  4301  002A04  CFDD F004          	movff	postdec2,??_turn_on_current_coil+1
  4302  002A08  C001  F005         	movff	turn_on_current_coil@stepper_motor,??_turn_on_current_coil+2
  4303  002A0C  C002  F006         	movff	turn_on_current_coil@stepper_motor+1,??_turn_on_current_coil+3
  4304  002A10  5003               	movf	??_turn_on_current_coil^0,w,c
  4305  002A12  2605               	addwf	(??_turn_on_current_coil+2)^0,f,c
  4306  002A14  5004               	movf	(??_turn_on_current_coil+1)^0,w,c
  4307  002A16  2206               	addwfc	(??_turn_on_current_coil+3)^0,f,c
  4308  002A18  0E06               	movlw	6
  4309  002A1A  2405               	addwf	(??_turn_on_current_coil+2)^0,w,c
  4310  002A1C  6ED9               	movwf	fsr2l,c
  4311  002A1E  0E00               	movlw	0
  4312  002A20  2006               	addwfc	(??_turn_on_current_coil+3)^0,w,c
  4313  002A22  6EDA               	movwf	fsr2h,c
  4314  002A24  EE10 F00A          	lfsr	1,10
  4315  002A28  5001               	movf	turn_on_current_coil@stepper_motor^0,w,c
  4316  002A2A  26E1               	addwf	fsr1l,f,c
  4317  002A2C  5002               	movf	(turn_on_current_coil@stepper_motor+1)^0,w,c
  4318  002A2E  22E2               	addwfc	fsr1h,f,c
  4319  002A30  CFE6 F007          	movff	postinc1,??_turn_on_current_coil+4
  4320  002A34  CFE5 F008          	movff	postdec1,??_turn_on_current_coil+5
  4321  002A38  C007  FFE1         	movff	??_turn_on_current_coil+4,fsr1l
  4322  002A3C  C008  FFE2         	movff	??_turn_on_current_coil+5,fsr1h
  4323  002A40  CFDF FFE7          	movff	indf2,indf1
  4324  002A44  0012               	return		;funcret
  4325  002A46  FFFF               	dw	65535	; errata NOP
  4326  002A48                     __end_of_turn_on_current_coil:
  4327                           	callstack 0
  4328                           
  4329 ;; *************** function _lcd_update *****************
  4330 ;; Defined at:
  4331 ;;		line 108 in file "lcd.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;  state           2   11[COMRAM] int 
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;  i               2   19[COMRAM] int 
  4336 ;;  line_select     4   15[COMRAM] const unsigned char [4]
  4337 ;; Return value:  Size  Location     Type
  4338 ;;                  1    wreg      void 
  4339 ;; Registers used:
  4340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4341 ;; Tracked objects:
  4342 ;;		On entry : 0/0
  4343 ;;		On exit  : 0/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4346 ;;      Params:         2       0       0       0       0       0       0
  4347 ;;      Locals:         6       0       0       0       0       0       0
  4348 ;;      Temps:          2       0       0       0       0       0       0
  4349 ;;      Totals:        10       0       0       0       0       0       0
  4350 ;;Total ram usage:       10 bytes
  4351 ;; Hardware stack levels used:    1
  4352 ;; Hardware stack levels required when called:    4
  4353 ;; This function calls:
  4354 ;;		___wmul
  4355 ;;		_lcd_cmd
  4356 ;;		_lcd_str
  4357 ;; This function is called by:
  4358 ;;		_main
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362                           	psect	text9
  4363  0025D6                     __ptext9:
  4364                           	callstack 0
  4365  0025D6                     _lcd_update:
  4366                           	callstack 0
  4367  0025D6  FFFF               	dw	65535	; assembler added errata NOP
  4368  0025D8                     
  4369                           ;lcd.c: 109:     lcd_cmd(0x01);
  4370  0025D8  0E01               	movlw	1
  4371  0025DA  EC2F  F016         	call	_lcd_cmd
  4372  0025DE                     
  4373                           ;lcd.c: 110:     const char line_select[4] = {0x80, 0xC0, 0x94, 0xD4};
  4374  0025DE  0E25               	movlw	low lcd_update@F2151
  4375  0025E0  6EF6               	movwf	tblptrl,c
  4376  0025E2                     	if	1	;There is more than 1 active tblptr byte
  4377  0025E2  0E7B               	movlw	high lcd_update@F2151
  4378  0025E4  6EF7               	movwf	tblptrh,c
  4379  0025E6                     	endif
  4380  0025E6                     	if	0	;There are less than 3 active tblptr bytes
  4381  0025E6                     	endif
  4382  0025E6  0009               	tblrd		*+
  4383  0025E8  FFFF               	dw	65535	; errata NOP
  4384  0025EA  CFF5 F010          	movff	tablat,lcd_update@line_select
  4385  0025EE  0009               	tblrd		*+
  4386  0025F0  FFFF               	dw	65535	; errata NOP
  4387  0025F2  CFF5 F011          	movff	tablat,lcd_update@line_select+1
  4388  0025F6  0009               	tblrd		*+
  4389  0025F8  FFFF               	dw	65535	; errata NOP
  4390  0025FA  CFF5 F012          	movff	tablat,lcd_update@line_select+2
  4391  0025FE  000A               	tblrd		*-
  4392  002600  FFFF               	dw	65535	; errata NOP
  4393  002602  CFF5 F013          	movff	tablat,lcd_update@line_select+3
  4394  002606                     
  4395                           ;lcd.c: 111:     for (int i=0;i<4;i++ ){
  4396  002606  0E00               	movlw	0
  4397  002608  6E15               	movwf	(lcd_update@i+1)^0,c
  4398  00260A  0E00               	movlw	0
  4399  00260C  6E14               	movwf	lcd_update@i^0,c
  4400  00260E                     l3330:
  4401  00260E  FFFF               	dw	65535	; assembler added errata NOP
  4402                           
  4403                           ;lcd.c: 112:         lcd_cmd(line_select[i]);
  4404  002610  0E10               	movlw	low lcd_update@line_select
  4405  002612  2414               	addwf	lcd_update@i^0,w,c
  4406  002614  6ED9               	movwf	fsr2l,c
  4407  002616  0E00               	movlw	high lcd_update@line_select
  4408  002618  2015               	addwfc	(lcd_update@i+1)^0,w,c
  4409  00261A  6EDA               	movwf	fsr2h,c
  4410  00261C  50DF               	movf	indf2,w,c
  4411  00261E  EC2F  F016         	call	_lcd_cmd
  4412  002622                     
  4413                           ;lcd.c: 113:         lcd_str(const_msgs[state][i]);
  4414  002622  C00C  F001         	movff	lcd_update@state,___wmul@multiplier
  4415  002626  C00D  F002         	movff	lcd_update@state+1,___wmul@multiplier+1
  4416  00262A  0E00               	movlw	0
  4417  00262C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4418  00262E  0E50               	movlw	80
  4419  002630  6E03               	movwf	___wmul@multiplicand^0,c
  4420  002632  EC1A  F016         	call	___wmul	;wreg free
  4421  002636  0E2D               	movlw	low _const_msgs
  4422  002638  6E0E               	movwf	??_lcd_update^0,c
  4423  00263A  0E7B               	movlw	high _const_msgs
  4424  00263C  6E0F               	movwf	(??_lcd_update+1)^0,c
  4425  00263E  5001               	movf	?___wmul^0,w,c
  4426  002640  260E               	addwf	??_lcd_update^0,f,c
  4427  002642  5002               	movf	(?___wmul+1)^0,w,c
  4428  002644  220F               	addwfc	(??_lcd_update+1)^0,f,c
  4429  002646  C014  F001         	movff	lcd_update@i,___wmul@multiplier
  4430  00264A  C015  F002         	movff	lcd_update@i+1,___wmul@multiplier+1
  4431  00264E  0E00               	movlw	0
  4432  002650  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4433  002652  0E14               	movlw	20
  4434  002654  6E03               	movwf	___wmul@multiplicand^0,c
  4435  002656  EC1A  F016         	call	___wmul	;wreg free
  4436  00265A  5001               	movf	?___wmul^0,w,c
  4437  00265C  240E               	addwf	??_lcd_update^0,w,c
  4438  00265E  6E07               	movwf	lcd_str@str^0,c
  4439  002660  5002               	movf	(?___wmul+1)^0,w,c
  4440  002662  200F               	addwfc	(??_lcd_update+1)^0,w,c
  4441  002664  6E08               	movwf	(lcd_str@str+1)^0,c
  4442  002666  ECCB  F014         	call	_lcd_str	;wreg free
  4443  00266A                     
  4444                           ;lcd.c: 114:     }
  4445  00266A  4A14               	infsnz	lcd_update@i^0,f,c
  4446  00266C  2A15               	incf	(lcd_update@i+1)^0,f,c
  4447  00266E  BE15               	btfsc	(lcd_update@i+1)^0,7,c
  4448  002670  EF43  F013         	goto	u3351
  4449  002674  5015               	movf	(lcd_update@i+1)^0,w,c
  4450  002676  E10A               	bnz	u3350
  4451  002678  0E04               	movlw	4
  4452  00267A  5C14               	subwf	lcd_update@i^0,w,c
  4453  00267C  A0D8               	btfss	status,0,c
  4454  00267E  EF43  F013         	goto	u3351
  4455  002682  EF46  F013         	goto	u3350
  4456  002686                     u3351:
  4457  002686  FFFF               	dw	65535	; assembler added errata NOP
  4458  002688  EF07  F013         	goto	l3330
  4459  00268C                     u3350:
  4460  00268C  FFFF               	dw	65535	; assembler added errata NOP
  4461  00268E  0012               	return		;funcret
  4462  002690  FFFF               	dw	65535	; errata NOP
  4463  002692                     __end_of_lcd_update:
  4464                           	callstack 0
  4465                           
  4466 ;; *************** function _lcd_str *****************
  4467 ;; Defined at:
  4468 ;;		line 80 in file "lcd.c"
  4469 ;; Parameters:    Size  Location     Type
  4470 ;;  str             2    6[COMRAM] PTR const unsigned char 
  4471 ;;		 -> const_msgs(1200), STR_1(22), 
  4472 ;; Auto vars:     Size  Location     Type
  4473 ;;  i               1   10[COMRAM] unsigned char 
  4474 ;; Return value:  Size  Location     Type
  4475 ;;                  1    wreg      void 
  4476 ;; Registers used:
  4477 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4483 ;;      Params:         2       0       0       0       0       0       0
  4484 ;;      Locals:         1       0       0       0       0       0       0
  4485 ;;      Temps:          2       0       0       0       0       0       0
  4486 ;;      Totals:         5       0       0       0       0       0       0
  4487 ;;Total ram usage:        5 bytes
  4488 ;; Hardware stack levels used:    1
  4489 ;; Hardware stack levels required when called:    3
  4490 ;; This function calls:
  4491 ;;		_lcd_dat
  4492 ;; This function is called by:
  4493 ;;		_main
  4494 ;;		_lcd_update
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           
  4498                           	psect	text10
  4499  002996                     __ptext10:
  4500                           	callstack 0
  4501  002996                     _lcd_str:
  4502                           	callstack 0
  4503  002996  FFFF               	dw	65535	; assembler added errata NOP
  4504  002998                     
  4505                           ;lcd.c: 80: void lcd_str(const char* str);lcd.c: 81: {;lcd.c: 82:     unsigned char i=0;
  4506  002998  0E00               	movlw	0
  4507  00299A  6E0B               	movwf	lcd_str@i^0,c
  4508                           
  4509                           ;lcd.c: 84:     while(str[i] != 0 )
  4510  00299C  EFE1  F014         	goto	l3070
  4511  0029A0                     l3066:
  4512  0029A0  FFFF               	dw	65535	; assembler added errata NOP
  4513                           
  4514                           ;lcd.c: 85:     {;lcd.c: 86:       lcd_dat(str[i]);
  4515  0029A2  500B               	movf	lcd_str@i^0,w,c
  4516  0029A4  2407               	addwf	lcd_str@str^0,w,c
  4517  0029A6  6E09               	movwf	??_lcd_str^0,c
  4518  0029A8  0E00               	movlw	0
  4519  0029AA  2008               	addwfc	(lcd_str@str+1)^0,w,c
  4520  0029AC  6E0A               	movwf	(??_lcd_str+1)^0,c
  4521  0029AE  C009  FFF6         	movff	??_lcd_str,tblptrl
  4522  0029B2  C00A  FFF7         	movff	??_lcd_str+1,tblptrh
  4523  0029B6                     	if	0	;tblptru may be non-zero
  4524  0029B6                     	endif
  4525  0029B6                     	if	0	;tblptru may be non-zero
  4526  0029B6                     	endif
  4527  0029B6  0008               	tblrd		*
  4528  0029B8  FFFF               	dw	65535	; errata NOP
  4529  0029BA  50F5               	movf	tablat,w,c
  4530  0029BC  EC05  F016         	call	_lcd_dat
  4531  0029C0                     
  4532                           ;lcd.c: 87:       i++;
  4533  0029C0  2A0B               	incf	lcd_str@i^0,f,c
  4534  0029C2                     l3070:
  4535  0029C2  FFFF               	dw	65535	; assembler added errata NOP
  4536                           
  4537                           ;lcd.c: 84:     while(str[i] != 0 )
  4538  0029C4  500B               	movf	lcd_str@i^0,w,c
  4539  0029C6  2407               	addwf	lcd_str@str^0,w,c
  4540  0029C8  6E09               	movwf	??_lcd_str^0,c
  4541  0029CA  0E00               	movlw	0
  4542  0029CC  2008               	addwfc	(lcd_str@str+1)^0,w,c
  4543  0029CE  6E0A               	movwf	(??_lcd_str+1)^0,c
  4544  0029D0  C009  FFF6         	movff	??_lcd_str,tblptrl
  4545  0029D4  C00A  FFF7         	movff	??_lcd_str+1,tblptrh
  4546  0029D8                     	if	0	;tblptru may be non-zero
  4547  0029D8                     	endif
  4548  0029D8                     	if	0	;tblptru may be non-zero
  4549  0029D8                     	endif
  4550  0029D8  0008               	tblrd		*
  4551  0029DA  FFFF               	dw	65535	; errata NOP
  4552  0029DC  50F5               	movf	tablat,w,c
  4553  0029DE  0900               	iorlw	0
  4554  0029E0  A4D8               	btfss	status,2,c
  4555  0029E2  EFF5  F014         	goto	u3091
  4556  0029E6  EFF8  F014         	goto	u3090
  4557  0029EA                     u3091:
  4558  0029EA  FFFF               	dw	65535	; assembler added errata NOP
  4559  0029EC  EFD0  F014         	goto	l3066
  4560  0029F0                     u3090:
  4561  0029F0  FFFF               	dw	65535	; assembler added errata NOP
  4562  0029F2  0012               	return		;funcret
  4563  0029F4  FFFF               	dw	65535	; errata NOP
  4564  0029F6                     __end_of_lcd_str:
  4565                           	callstack 0
  4566                           
  4567 ;; *************** function _lcd_dat *****************
  4568 ;; Defined at:
  4569 ;;		line 39 in file "lcd.c"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;  val             1    wreg     unsigned char 
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;  val             1    1[COMRAM] unsigned char 
  4574 ;; Return value:  Size  Location     Type
  4575 ;;                  1    wreg      void 
  4576 ;; Registers used:
  4577 ;;		wreg, status,2, cstack
  4578 ;; Tracked objects:
  4579 ;;		On entry : 0/0
  4580 ;;		On exit  : 0/0
  4581 ;;		Unchanged: 0/0
  4582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4583 ;;      Params:         0       0       0       0       0       0       0
  4584 ;;      Locals:         1       0       0       0       0       0       0
  4585 ;;      Temps:          0       0       0       0       0       0       0
  4586 ;;      Totals:         1       0       0       0       0       0       0
  4587 ;;Total ram usage:        1 bytes
  4588 ;; Hardware stack levels used:    1
  4589 ;; Hardware stack levels required when called:    2
  4590 ;; This function calls:
  4591 ;;		_lcd_wr
  4592 ;; This function is called by:
  4593 ;;		_lcd_str
  4594 ;;		_state_translator_fpga_to_micro
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           	psect	text11
  4599  002C0A                     __ptext11:
  4600                           	callstack 0
  4601  002C0A                     _lcd_dat:
  4602                           	callstack 0
  4603  002C0A  FFFF               	dw	65535	; assembler added errata NOP
  4604                           
  4605                           ;incstack = 0
  4606                           ;lcd_dat@val stored from wreg
  4607  002C0C  6E02               	movwf	lcd_dat@val^0,c
  4608  002C0E                     
  4609                           ;lcd.c: 39: void lcd_dat(unsigned char val);lcd.c: 40: {;lcd.c: 41:  PORTEbits.RE1=1;
  4610  002C0E  8284               	bsf	132,1,c	;volatile
  4611  002C10                     
  4612                           ;lcd.c: 42:     lcd_wr(val);
  4613  002C10  5002               	movf	lcd_dat@val^0,w,c
  4614  002C12  ECBA  F016         	call	_lcd_wr
  4615  002C16                     
  4616                           ;lcd.c: 43:     PORTEbits.RE2=1;
  4617  002C16  8484               	bsf	132,2,c	;volatile
  4618  002C18                     
  4619                           ;lcd.c: 44:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4620  002C18  0EC8               	movlw	200
  4621  002C1A                     u3977:
  4622  002C1A  FFFF               	dw	65535	; errata NOP
  4623  002C1C  F000               	nop	
  4624  002C1E  2EE8               	decfsz	wreg,f,c
  4625  002C20  D7FC               	bra	u3977
  4626  002C22                     
  4627                           ;lcd.c: 45:     PORTEbits.RE1=0;
  4628  002C22  9284               	bcf	132,1,c	;volatile
  4629  002C24                     
  4630                           ;lcd.c: 46:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4631  002C24  0EC8               	movlw	200
  4632  002C26                     u3987:
  4633  002C26  FFFF               	dw	65535	; errata NOP
  4634  002C28  F000               	nop	
  4635  002C2A  2EE8               	decfsz	wreg,f,c
  4636  002C2C  D7FC               	bra	u3987
  4637  002C2E                     
  4638                           ;lcd.c: 47:  PORTEbits.RE1=1;
  4639  002C2E  8284               	bsf	132,1,c	;volatile
  4640  002C30  0012               	return		;funcret
  4641  002C32  FFFF               	dw	65535	; errata NOP
  4642  002C34                     __end_of_lcd_dat:
  4643                           	callstack 0
  4644                           
  4645 ;; *************** function ___wmul *****************
  4646 ;; Defined at:
  4647 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;  multiplier      2    0[COMRAM] unsigned int 
  4650 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;  product         2    4[COMRAM] unsigned int 
  4653 ;; Return value:  Size  Location     Type
  4654 ;;                  2    0[COMRAM] unsigned int 
  4655 ;; Registers used:
  4656 ;;		wreg, status,2, status,0, prodl, prodh
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4662 ;;      Params:         4       0       0       0       0       0       0
  4663 ;;      Locals:         2       0       0       0       0       0       0
  4664 ;;      Temps:          0       0       0       0       0       0       0
  4665 ;;      Totals:         6       0       0       0       0       0       0
  4666 ;;Total ram usage:        6 bytes
  4667 ;; Hardware stack levels used:    1
  4668 ;; Hardware stack levels required when called:    1
  4669 ;; This function calls:
  4670 ;;		Nothing
  4671 ;; This function is called by:
  4672 ;;		_main
  4673 ;;		_lcd_update
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           	psect	text12
  4678  002C34                     __ptext12:
  4679                           	callstack 0
  4680  002C34                     ___wmul:
  4681                           	callstack 0
  4682  002C34  FFFF               	dw	65535	; assembler added errata NOP
  4683  002C36  5001               	movf	___wmul@multiplier^0,w,c
  4684  002C38  0203               	mulwf	___wmul@multiplicand^0,c
  4685  002C3A  CFF3 F005          	movff	prodl,___wmul@product
  4686  002C3E  CFF4 F006          	movff	prodh,___wmul@product+1
  4687  002C42  5001               	movf	___wmul@multiplier^0,w,c
  4688  002C44  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4689  002C46  50F3               	movf	243,w,c
  4690  002C48  2606               	addwf	(___wmul@product+1)^0,f,c
  4691  002C4A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4692  002C4C  0203               	mulwf	___wmul@multiplicand^0,c
  4693  002C4E  50F3               	movf	243,w,c
  4694  002C50  2606               	addwf	(___wmul@product+1)^0,f,c
  4695  002C52  C005  F001         	movff	___wmul@product,?___wmul
  4696  002C56  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4697  002C5A  0012               	return		;funcret
  4698  002C5C  FFFF               	dw	65535	; errata NOP
  4699  002C5E                     __end_of___wmul:
  4700                           	callstack 0
  4701                           
  4702 ;; *************** function _lcd_init *****************
  4703 ;; Defined at:
  4704 ;;		line 50 in file "lcd.c"
  4705 ;; Parameters:    Size  Location     Type
  4706 ;;		None
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;		None
  4709 ;; Return value:  Size  Location     Type
  4710 ;;                  1    wreg      void 
  4711 ;; Registers used:
  4712 ;;		wreg, status,2, cstack
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4718 ;;      Params:         0       0       0       0       0       0       0
  4719 ;;      Locals:         0       0       0       0       0       0       0
  4720 ;;      Temps:          1       0       0       0       0       0       0
  4721 ;;      Totals:         1       0       0       0       0       0       0
  4722 ;;Total ram usage:        1 bytes
  4723 ;; Hardware stack levels used:    1
  4724 ;; Hardware stack levels required when called:    3
  4725 ;; This function calls:
  4726 ;;		_lcd_cmd
  4727 ;; This function is called by:
  4728 ;;		_main
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           	psect	text13
  4733  0027C4                     __ptext13:
  4734                           	callstack 0
  4735  0027C4                     _lcd_init:
  4736                           	callstack 0
  4737  0027C4  FFFF               	dw	65535	; assembler added errata NOP
  4738  0027C6  6A83               	clrf	3971,c	;# 
  4739  0027C8  0E00               	movlw	0	;# 
  4740  0027CA  6E95               	movwf	3989,c	;# 
  4741  0027CC  6A84               	clrf	3972,c	;# 
  4742  0027CE  0E00               	movlw	0	;# 
  4743  0027D0  6E96               	movwf	3990,c	;# 
  4744                           
  4745                           ;lcd.c: 63:  PORTEbits.RE1=0;
  4746  0027D2  9284               	bcf	132,1,c	;volatile
  4747                           
  4748                           ;lcd.c: 64:  PORTEbits.RE2=0;
  4749  0027D4  9484               	bcf	132,2,c	;volatile
  4750  0027D6                     
  4751                           ;lcd.c: 65:  _delay((unsigned long)((30)*(4000000/4000.0)));
  4752  0027D6  0E1E               	movlw	30
  4753  0027D8  6E03               	movwf	??_lcd_init^0,c
  4754  0027DA  0E3C               	movlw	60
  4755  0027DC                     u3997:
  4756  0027DC  FFFF               	dw	65535	; errata NOP
  4757  0027DE  2EE8               	decfsz	wreg,f,c
  4758  0027E0  D7FD               	bra	u3997
  4759  0027E2  2E03               	decfsz	??_lcd_init^0,f,c
  4760  0027E4  D7FB               	bra	u3997
  4761  0027E6  D000               	nop2	
  4762  0027E8                     
  4763                           ;lcd.c: 66:  PORTEbits.RE1=1;
  4764  0027E8  8284               	bsf	132,1,c	;volatile
  4765  0027EA                     
  4766                           ;lcd.c: 68:  lcd_cmd(0x38);
  4767  0027EA  0E38               	movlw	56
  4768  0027EC  EC2F  F016         	call	_lcd_cmd
  4769  0027F0                     
  4770                           ;lcd.c: 69:  _delay((unsigned long)((30)*(4000000/4000.0)));
  4771  0027F0  0E1E               	movlw	30
  4772  0027F2  6E03               	movwf	??_lcd_init^0,c
  4773  0027F4  0E3C               	movlw	60
  4774  0027F6                     u4007:
  4775  0027F6  FFFF               	dw	65535	; errata NOP
  4776  0027F8  2EE8               	decfsz	wreg,f,c
  4777  0027FA  D7FD               	bra	u4007
  4778  0027FC  2E03               	decfsz	??_lcd_init^0,f,c
  4779  0027FE  D7FB               	bra	u4007
  4780  002800  D000               	nop2	
  4781                           
  4782                           ;lcd.c: 70:  lcd_cmd(0x38);
  4783  002802  0E38               	movlw	56
  4784  002804  EC2F  F016         	call	_lcd_cmd
  4785  002808                     
  4786                           ;lcd.c: 71:     _delay((unsigned long)((30)*(4000000/4000.0)));
  4787  002808  0E1E               	movlw	30
  4788  00280A  6E03               	movwf	??_lcd_init^0,c
  4789  00280C  0E3C               	movlw	60
  4790  00280E                     u4017:
  4791  00280E  FFFF               	dw	65535	; errata NOP
  4792  002810  2EE8               	decfsz	wreg,f,c
  4793  002812  D7FD               	bra	u4017
  4794  002814  2E03               	decfsz	??_lcd_init^0,f,c
  4795  002816  D7FB               	bra	u4017
  4796  002818  D000               	nop2	
  4797  00281A                     
  4798                           ;lcd.c: 72:  lcd_cmd(0x38);
  4799  00281A  0E38               	movlw	56
  4800  00281C  EC2F  F016         	call	_lcd_cmd
  4801  002820                     
  4802                           ;lcd.c: 73:  lcd_cmd(0x08);
  4803  002820  0E08               	movlw	8
  4804  002822  EC2F  F016         	call	_lcd_cmd
  4805  002826                     
  4806                           ;lcd.c: 74:  lcd_cmd(0x0F);
  4807  002826  0E0F               	movlw	15
  4808  002828  EC2F  F016         	call	_lcd_cmd
  4809  00282C                     
  4810                           ;lcd.c: 75:  lcd_cmd(0x01);
  4811  00282C  0E01               	movlw	1
  4812  00282E  EC2F  F016         	call	_lcd_cmd
  4813  002832                     
  4814                           ;lcd.c: 76:  lcd_cmd(0x38);
  4815  002832  0E38               	movlw	56
  4816  002834  EC2F  F016         	call	_lcd_cmd
  4817  002838                     
  4818                           ;lcd.c: 77:     lcd_cmd(0x80);
  4819  002838  0E80               	movlw	128
  4820  00283A  EC2F  F016         	call	_lcd_cmd
  4821  00283E  0012               	return		;funcret
  4822  002840  FFFF               	dw	65535	; errata NOP
  4823  002842                     __end_of_lcd_init:
  4824                           	callstack 0
  4825                           
  4826 ;; *************** function _lcd_cmd *****************
  4827 ;; Defined at:
  4828 ;;		line 28 in file "lcd.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;  val             1    wreg     unsigned char 
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;  val             1    1[COMRAM] unsigned char 
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  1    wreg      void 
  4835 ;; Registers used:
  4836 ;;		wreg, status,2, cstack
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4842 ;;      Params:         0       0       0       0       0       0       0
  4843 ;;      Locals:         1       0       0       0       0       0       0
  4844 ;;      Temps:          0       0       0       0       0       0       0
  4845 ;;      Totals:         1       0       0       0       0       0       0
  4846 ;;Total ram usage:        1 bytes
  4847 ;; Hardware stack levels used:    1
  4848 ;; Hardware stack levels required when called:    2
  4849 ;; This function calls:
  4850 ;;		_lcd_wr
  4851 ;; This function is called by:
  4852 ;;		_main
  4853 ;;		_lcd_init
  4854 ;;		_lcd_update
  4855 ;; This function uses a non-reentrant model
  4856 ;;
  4857                           
  4858                           	psect	text14
  4859  002C5E                     __ptext14:
  4860                           	callstack 0
  4861  002C5E                     _lcd_cmd:
  4862                           	callstack 0
  4863  002C5E  FFFF               	dw	65535	; assembler added errata NOP
  4864                           
  4865                           ;incstack = 0
  4866                           ;lcd_cmd@val stored from wreg
  4867  002C60  6E02               	movwf	lcd_cmd@val^0,c
  4868  002C62                     
  4869                           ;lcd.c: 28: void lcd_cmd(unsigned char val);lcd.c: 29: {;lcd.c: 30:  PORTEbits.RE1=1;
  4870  002C62  8284               	bsf	132,1,c	;volatile
  4871  002C64                     
  4872                           ;lcd.c: 31:     lcd_wr(val);
  4873  002C64  5002               	movf	lcd_cmd@val^0,w,c
  4874  002C66  ECBA  F016         	call	_lcd_wr
  4875  002C6A                     
  4876                           ;lcd.c: 32:     PORTEbits.RE2=0;
  4877  002C6A  9484               	bcf	132,2,c	;volatile
  4878  002C6C                     
  4879                           ;lcd.c: 33:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4880  002C6C  0EC8               	movlw	200
  4881  002C6E                     u4027:
  4882  002C6E  FFFF               	dw	65535	; errata NOP
  4883  002C70  F000               	nop	
  4884  002C72  2EE8               	decfsz	wreg,f,c
  4885  002C74  D7FC               	bra	u4027
  4886  002C76                     
  4887                           ;lcd.c: 34:     PORTEbits.RE1=0;
  4888  002C76  9284               	bcf	132,1,c	;volatile
  4889  002C78                     
  4890                           ;lcd.c: 35:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4891  002C78  0EC8               	movlw	200
  4892  002C7A                     u4037:
  4893  002C7A  FFFF               	dw	65535	; errata NOP
  4894  002C7C  F000               	nop	
  4895  002C7E  2EE8               	decfsz	wreg,f,c
  4896  002C80  D7FC               	bra	u4037
  4897  002C82                     
  4898                           ;lcd.c: 36:  PORTEbits.RE1=1;
  4899  002C82  8284               	bsf	132,1,c	;volatile
  4900  002C84  0012               	return		;funcret
  4901  002C86  FFFF               	dw	65535	; errata NOP
  4902  002C88                     __end_of_lcd_cmd:
  4903                           	callstack 0
  4904                           
  4905 ;; *************** function _lcd_wr *****************
  4906 ;; Defined at:
  4907 ;;		line 23 in file "lcd.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;  val             1    wreg     unsigned char 
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;  val             1    0[COMRAM] unsigned char 
  4912 ;; Return value:  Size  Location     Type
  4913 ;;                  1    wreg      void 
  4914 ;; Registers used:
  4915 ;;		wreg
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4921 ;;      Params:         0       0       0       0       0       0       0
  4922 ;;      Locals:         1       0       0       0       0       0       0
  4923 ;;      Temps:          0       0       0       0       0       0       0
  4924 ;;      Totals:         1       0       0       0       0       0       0
  4925 ;;Total ram usage:        1 bytes
  4926 ;; Hardware stack levels used:    1
  4927 ;; Hardware stack levels required when called:    1
  4928 ;; This function calls:
  4929 ;;		Nothing
  4930 ;; This function is called by:
  4931 ;;		_lcd_cmd
  4932 ;;		_lcd_dat
  4933 ;; This function uses a non-reentrant model
  4934 ;;
  4935                           
  4936                           	psect	text15
  4937  002D74                     __ptext15:
  4938                           	callstack 0
  4939  002D74                     _lcd_wr:
  4940                           	callstack 0
  4941  002D74  FFFF               	dw	65535	; assembler added errata NOP
  4942                           
  4943                           ;incstack = 0
  4944                           ;lcd_wr@val stored from wreg
  4945  002D76  6E01               	movwf	lcd_wr@val^0,c
  4946  002D78                     
  4947                           ;lcd.c: 23: void lcd_wr(unsigned char val);lcd.c: 24: {;lcd.c: 25:     PORTD=val;
  4948  002D78  C001  FF83         	movff	lcd_wr@val,3971	;volatile
  4949  002D7C  0012               	return		;funcret
  4950  002D7E  FFFF               	dw	65535	; errata NOP
  4951  002D80                     __end_of_lcd_wr:
  4952                           	callstack 0
  4953                           
  4954 ;; *************** function _init_timer_2 *****************
  4955 ;; Defined at:
  4956 ;;		line 27 in file "timer.c"
  4957 ;; Parameters:    Size  Location     Type
  4958 ;;		None
  4959 ;; Auto vars:     Size  Location     Type
  4960 ;;		None
  4961 ;; Return value:  Size  Location     Type
  4962 ;;                  1    wreg      void 
  4963 ;; Registers used:
  4964 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4965 ;; Tracked objects:
  4966 ;;		On entry : 0/0
  4967 ;;		On exit  : 0/0
  4968 ;;		Unchanged: 0/0
  4969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4970 ;;      Params:         0       0       0       0       0       0       0
  4971 ;;      Locals:         4       0       0       0       0       0       0
  4972 ;;      Temps:          0       0       0       0       0       0       0
  4973 ;;      Totals:         4       0       0       0       0       0       0
  4974 ;;Total ram usage:        4 bytes
  4975 ;; Hardware stack levels used:    1
  4976 ;; Hardware stack levels required when called:    2
  4977 ;; This function calls:
  4978 ;;		___fladd
  4979 ;;		___fldiv
  4980 ;;		___flmul
  4981 ;;		___fltol
  4982 ;; This function is called by:
  4983 ;;		_main
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           
  4987                           	psect	text16
  4988  002448                     __ptext16:
  4989                           	callstack 0
  4990  002448                     _init_timer_2:
  4991                           	callstack 0
  4992  002448  FFFF               	dw	65535	; assembler added errata NOP
  4993  00244A                     
  4994                           ;timer.c: 29:     T2CON = 0;
  4995  00244A  0E00               	movlw	0
  4996  00244C  6ECA               	movwf	202,c	;volatile
  4997                           
  4998                           ;timer.c: 30:     TMR2 = 0;
  4999  00244E  0E00               	movlw	0
  5000  002450  6ECC               	movwf	204,c	;volatile
  5001  002452                     
  5002                           ;timer.c: 32:     T2CONbits.TMR2ON = 1;
  5003  002452  84CA               	bsf	202,2,c	;volatile
  5004  002454                     
  5005                           ;timer.c: 33:     T2CONbits.T2CKPS0 = 1;
  5006  002454  80CA               	bsf	202,0,c	;volatile
  5007  002456                     
  5008                           ;timer.c: 34:     T2CONbits.T2CKPS1 = 1;
  5009  002456  82CA               	bsf	202,1,c	;volatile
  5010  002458                     
  5011                           ;timer.c: 36:     PR2 = (uint8_t) (((pwm_period / (4*t_osc*tmr2_prescaler)) - 1)*4);
  5012  002458  0E00               	movlw	0
  5013  00245A  6E51               	movwf	___fladd@a^0,c
  5014  00245C  0E00               	movlw	0
  5015  00245E  6E52               	movwf	(___fladd@a+1)^0,c
  5016  002460  0E80               	movlw	128
  5017  002462  6E53               	movwf	(___fladd@a+2)^0,c
  5018  002464  0EBF               	movlw	191
  5019  002466  6E54               	movwf	(___fladd@a+3)^0,c
  5020  002468  0EBD               	movlw	189
  5021  00246A  6E1F               	movwf	___flmul@a^0,c
  5022  00246C  0E37               	movlw	55
  5023  00246E  6E20               	movwf	(___flmul@a+1)^0,c
  5024  002470  0E86               	movlw	134
  5025  002472  6E21               	movwf	(___flmul@a+2)^0,c
  5026  002474  0E36               	movlw	54
  5027  002476  6E22               	movwf	(___flmul@a+3)^0,c
  5028  002478  C0ED  F01B         	movff	_tmr2_prescaler,___flmul@b
  5029  00247C  C0EE  F01C         	movff	_tmr2_prescaler+1,___flmul@b+1
  5030  002480  C0EF  F01D         	movff	_tmr2_prescaler+2,___flmul@b+2
  5031  002484  C0F0  F01E         	movff	_tmr2_prescaler+3,___flmul@b+3
  5032  002488  EC91  F007         	call	___flmul	;wreg free
  5033  00248C  C01B  F038         	movff	?___flmul,___fldiv@a
  5034  002490  C01C  F039         	movff	?___flmul+1,___fldiv@a+1
  5035  002494  C01D  F03A         	movff	?___flmul+2,___fldiv@a+2
  5036  002498  C01E  F03B         	movff	?___flmul+3,___fldiv@a+3
  5037  00249C  0E0A               	movlw	10
  5038  00249E  6E34               	movwf	___fldiv@b^0,c
  5039  0024A0  0ED7               	movlw	215
  5040  0024A2  6E35               	movwf	(___fldiv@b+1)^0,c
  5041  0024A4  0EA3               	movlw	163
  5042  0024A6  6E36               	movwf	(___fldiv@b+2)^0,c
  5043  0024A8  0E3C               	movlw	60
  5044  0024AA  6E37               	movwf	(___fldiv@b+3)^0,c
  5045  0024AC  ECE3  F009         	call	___fldiv	;wreg free
  5046  0024B0  C034  F04D         	movff	?___fldiv,___fladd@b
  5047  0024B4  C035  F04E         	movff	?___fldiv+1,___fladd@b+1
  5048  0024B8  C036  F04F         	movff	?___fldiv+2,___fladd@b+2
  5049  0024BC  C037  F050         	movff	?___fldiv+3,___fladd@b+3
  5050  0024C0  ECBD  F004         	call	___fladd	;wreg free
  5051  0024C4  C04D  F06F         	movff	?___fladd,_init_timer_2$1736
  5052  0024C8  C04E  F070         	movff	?___fladd+1,_init_timer_2$1736+1
  5053  0024CC  C04F  F071         	movff	?___fladd+2,_init_timer_2$1736+2
  5054  0024D0  C050  F072         	movff	?___fladd+3,_init_timer_2$1736+3
  5055  0024D4                     
  5056                           ;timer.c: 36:     PR2 = (uint8_t) (((pwm_period / (4*t_osc*tmr2_prescaler)) - 1)*4);
  5057  0024D4  0E00               	movlw	0
  5058  0024D6  6E1F               	movwf	___flmul@a^0,c
  5059  0024D8  0E00               	movlw	0
  5060  0024DA  6E20               	movwf	(___flmul@a+1)^0,c
  5061  0024DC  0E80               	movlw	128
  5062  0024DE  6E21               	movwf	(___flmul@a+2)^0,c
  5063  0024E0  0E40               	movlw	64
  5064  0024E2  6E22               	movwf	(___flmul@a+3)^0,c
  5065  0024E4  C06F  F01B         	movff	_init_timer_2$1736,___flmul@b
  5066  0024E8  C070  F01C         	movff	_init_timer_2$1736+1,___flmul@b+1
  5067  0024EC  C071  F01D         	movff	_init_timer_2$1736+2,___flmul@b+2
  5068  0024F0  C072  F01E         	movff	_init_timer_2$1736+3,___flmul@b+3
  5069  0024F4  EC91  F007         	call	___flmul	;wreg free
  5070  0024F8  C01B  F065         	movff	?___flmul,___fltol@f1
  5071  0024FC  C01C  F066         	movff	?___flmul+1,___fltol@f1+1
  5072  002500  C01D  F067         	movff	?___flmul+2,___fltol@f1+2
  5073  002504  C01E  F068         	movff	?___flmul+3,___fltol@f1+3
  5074  002508  ECA5  F00F         	call	___fltol	;wreg free
  5075  00250C  5065               	movf	?___fltol^0,w,c
  5076  00250E  6ECB               	movwf	203,c	;volatile
  5077  002510  0012               	return		;funcret
  5078  002512  FFFF               	dw	65535	; errata NOP
  5079  002514                     __end_of_init_timer_2:
  5080                           	callstack 0
  5081                           
  5082 ;; *************** function _init_timer_0 *****************
  5083 ;; Defined at:
  5084 ;;		line 11 in file "timer.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;		None
  5087 ;; Auto vars:     Size  Location     Type
  5088 ;;		None
  5089 ;; Return value:  Size  Location     Type
  5090 ;;                  1    wreg      void 
  5091 ;; Registers used:
  5092 ;;		wreg, status,2
  5093 ;; Tracked objects:
  5094 ;;		On entry : 0/0
  5095 ;;		On exit  : 0/0
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5098 ;;      Params:         0       0       0       0       0       0       0
  5099 ;;      Locals:         0       0       0       0       0       0       0
  5100 ;;      Temps:          0       0       0       0       0       0       0
  5101 ;;      Totals:         0       0       0       0       0       0       0
  5102 ;;Total ram usage:        0 bytes
  5103 ;; Hardware stack levels used:    1
  5104 ;; Hardware stack levels required when called:    1
  5105 ;; This function calls:
  5106 ;;		Nothing
  5107 ;; This function is called by:
  5108 ;;		_main
  5109 ;; This function uses a non-reentrant model
  5110 ;;
  5111                           
  5112                           	psect	text17
  5113  002CAE                     __ptext17:
  5114                           	callstack 0
  5115  002CAE                     _init_timer_0:
  5116                           	callstack 0
  5117  002CAE  FFFF               	dw	65535	; assembler added errata NOP
  5118  002CB0                     
  5119                           ;timer.c: 13:     T0CON = 0;
  5120  002CB0  0E00               	movlw	0
  5121  002CB2  6ED5               	movwf	213,c	;volatile
  5122                           
  5123                           ;timer.c: 15:     TMR0L = 0x96;
  5124  002CB4  0E96               	movlw	150
  5125  002CB6  6ED6               	movwf	214,c	;volatile
  5126                           
  5127                           ;timer.c: 16:     TMR0H = 0x98;
  5128  002CB8  0E98               	movlw	152
  5129  002CBA  6ED7               	movwf	215,c	;volatile
  5130  002CBC                     
  5131                           ;timer.c: 17:     INTCONbits.TMR0IE = 1;
  5132  002CBC  8AF2               	bsf	242,5,c	;volatile
  5133  002CBE                     
  5134                           ;timer.c: 18:     T0CONbits.T08BIT = 0;
  5135  002CBE  9CD5               	bcf	213,6,c	;volatile
  5136  002CC0                     
  5137                           ;timer.c: 19:     T0CONbits.T0CS = 0;
  5138  002CC0  9AD5               	bcf	213,5,c	;volatile
  5139  002CC2                     
  5140                           ;timer.c: 20:     T0CONbits.PSA = 0;
  5141  002CC2  96D5               	bcf	213,3,c	;volatile
  5142  002CC4                     
  5143                           ;timer.c: 21:     T0CONbits.T0PS0 = 1;
  5144  002CC4  80D5               	bsf	213,0,c	;volatile
  5145  002CC6                     
  5146                           ;timer.c: 22:     T0CONbits.T0PS1 = 1;
  5147  002CC6  82D5               	bsf	213,1,c	;volatile
  5148  002CC8                     
  5149                           ;timer.c: 23:     T0CONbits.T0PS2 = 1;
  5150  002CC8  84D5               	bsf	213,2,c	;volatile
  5151  002CCA                     
  5152                           ;timer.c: 24:     T0CONbits.TMR0ON = 1;
  5153  002CCA  8ED5               	bsf	213,7,c	;volatile
  5154  002CCC  0012               	return		;funcret
  5155  002CCE  FFFF               	dw	65535	; errata NOP
  5156  002CD0                     __end_of_init_timer_0:
  5157                           	callstack 0
  5158                           
  5159 ;; *************** function _init_stepper *****************
  5160 ;; Defined at:
  5161 ;;		line 4 in file "stepper_motor.c"
  5162 ;; Parameters:    Size  Location     Type
  5163 ;;  stepper_moto    2    0[COMRAM] PTR struct .
  5164 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
  5165 ;;  current_coil    2    2[COMRAM] int 
  5166 ;;  step_counter    2    4[COMRAM] int 
  5167 ;;  direction       2    6[COMRAM] int 
  5168 ;;  hex_coil_reg    2    8[COMRAM] PTR unsigned char 
  5169 ;;		 -> hex_end_effector_values(4), hex_joint_values(4), 
  5170 ;;  register_nam    2   10[COMRAM] PTR volatile unsigned ch
  5171 ;;		 -> LATC(1), LATB(1), 
  5172 ;; Auto vars:     Size  Location     Type
  5173 ;;  i               2   14[COMRAM] int 
  5174 ;; Return value:  Size  Location     Type
  5175 ;;                  1    wreg      void 
  5176 ;; Registers used:
  5177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/0
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5183 ;;      Params:        12       0       0       0       0       0       0
  5184 ;;      Locals:         2       0       0       0       0       0       0
  5185 ;;      Temps:          2       0       0       0       0       0       0
  5186 ;;      Totals:        16       0       0       0       0       0       0
  5187 ;;Total ram usage:       16 bytes
  5188 ;; Hardware stack levels used:    1
  5189 ;; Hardware stack levels required when called:    1
  5190 ;; This function calls:
  5191 ;;		Nothing
  5192 ;; This function is called by:
  5193 ;;		_main
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           
  5197                           	psect	text18
  5198  002692                     __ptext18:
  5199                           	callstack 0
  5200  002692                     _init_stepper:
  5201                           	callstack 0
  5202  002692  FFFF               	dw	65535	; assembler added errata NOP
  5203  002694                     
  5204                           ;stepper_motor.c: 5:     for (int i = 0; i < 4; i++) {
  5205  002694  0E00               	movlw	0
  5206  002696  6E10               	movwf	(init_stepper@i+1)^0,c
  5207  002698  0E00               	movlw	0
  5208  00269A  6E0F               	movwf	init_stepper@i^0,c
  5209  00269C                     l3228:
  5210  00269C  FFFF               	dw	65535	; assembler added errata NOP
  5211                           
  5212                           ;stepper_motor.c: 6:        stepper_motor -> hex_coil_register_values[i] = hex_coil_regi
      +                          ster_values[i];
  5213  00269E  500F               	movf	init_stepper@i^0,w,c
  5214  0026A0  2409               	addwf	init_stepper@hex_coil_register_values^0,w,c
  5215  0026A2  6ED9               	movwf	fsr2l,c
  5216  0026A4  5010               	movf	(init_stepper@i+1)^0,w,c
  5217  0026A6  200A               	addwfc	(init_stepper@hex_coil_register_values+1)^0,w,c
  5218  0026A8  6EDA               	movwf	fsr2h,c
  5219  0026AA  500F               	movf	init_stepper@i^0,w,c
  5220  0026AC  2401               	addwf	init_stepper@stepper_motor^0,w,c
  5221  0026AE  6E0D               	movwf	??_init_stepper^0,c
  5222  0026B0  5010               	movf	(init_stepper@i+1)^0,w,c
  5223  0026B2  2002               	addwfc	(init_stepper@stepper_motor+1)^0,w,c
  5224  0026B4  6E0E               	movwf	(??_init_stepper+1)^0,c
  5225  0026B6  0E06               	movlw	6
  5226  0026B8  240D               	addwf	??_init_stepper^0,w,c
  5227  0026BA  6EE1               	movwf	fsr1l,c
  5228  0026BC  0E00               	movlw	0
  5229  0026BE  200E               	addwfc	(??_init_stepper+1)^0,w,c
  5230  0026C0  6EE2               	movwf	fsr1h,c
  5231  0026C2  CFDF FFE7          	movff	indf2,indf1
  5232  0026C6                     
  5233                           ;stepper_motor.c: 7:     }
  5234  0026C6  4A0F               	infsnz	init_stepper@i^0,f,c
  5235  0026C8  2A10               	incf	(init_stepper@i+1)^0,f,c
  5236  0026CA  BE10               	btfsc	(init_stepper@i+1)^0,7,c
  5237  0026CC  EF71  F013         	goto	u3231
  5238  0026D0  5010               	movf	(init_stepper@i+1)^0,w,c
  5239  0026D2  E10A               	bnz	u3230
  5240  0026D4  0E04               	movlw	4
  5241  0026D6  5C0F               	subwf	init_stepper@i^0,w,c
  5242  0026D8  A0D8               	btfss	status,0,c
  5243  0026DA  EF71  F013         	goto	u3231
  5244  0026DE  EF74  F013         	goto	u3230
  5245  0026E2                     u3231:
  5246  0026E2  FFFF               	dw	65535	; assembler added errata NOP
  5247  0026E4  EF4E  F013         	goto	l3228
  5248  0026E8                     u3230:
  5249  0026E8  FFFF               	dw	65535	; assembler added errata NOP
  5250  0026EA                     
  5251                           ;stepper_motor.c: 8:     stepper_motor -> current_coil = current_coil;
  5252  0026EA  C001  FFD9         	movff	init_stepper@stepper_motor,fsr2l
  5253  0026EE  C002  FFDA         	movff	init_stepper@stepper_motor+1,fsr2h
  5254  0026F2  C003  FFDE         	movff	init_stepper@current_coil,postinc2
  5255  0026F6  C004  FFDD         	movff	init_stepper@current_coil+1,postdec2
  5256  0026FA                     
  5257                           ;stepper_motor.c: 9:     stepper_motor -> step_counter = step_counter;
  5258  0026FA  EE20 F002          	lfsr	2,2
  5259  0026FE  5001               	movf	init_stepper@stepper_motor^0,w,c
  5260  002700  26D9               	addwf	fsr2l,f,c
  5261  002702  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
  5262  002704  22DA               	addwfc	fsr2h,f,c
  5263  002706  C005  FFDE         	movff	init_stepper@step_counter,postinc2
  5264  00270A  C006  FFDD         	movff	init_stepper@step_counter+1,postdec2
  5265  00270E                     
  5266                           ;stepper_motor.c: 10:     stepper_motor -> direction = direction;
  5267  00270E  EE20 F004          	lfsr	2,4
  5268  002712  5001               	movf	init_stepper@stepper_motor^0,w,c
  5269  002714  26D9               	addwf	fsr2l,f,c
  5270  002716  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
  5271  002718  22DA               	addwfc	fsr2h,f,c
  5272  00271A  C007  FFDE         	movff	init_stepper@direction,postinc2
  5273  00271E  C008  FFDD         	movff	init_stepper@direction+1,postdec2
  5274  002722                     
  5275                           ;stepper_motor.c: 11:     stepper_motor -> register_name = register_name;
  5276  002722  EE20 F00A          	lfsr	2,10
  5277  002726  5001               	movf	init_stepper@stepper_motor^0,w,c
  5278  002728  26D9               	addwf	fsr2l,f,c
  5279  00272A  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
  5280  00272C  22DA               	addwfc	fsr2h,f,c
  5281  00272E  C00B  FFDE         	movff	init_stepper@register_name,postinc2
  5282  002732  C00C  FFDD         	movff	init_stepper@register_name+1,postdec2
  5283  002736  0012               	return		;funcret
  5284  002738  FFFF               	dw	65535	; errata NOP
  5285  00273A                     __end_of_init_stepper:
  5286                           	callstack 0
  5287                           
  5288 ;; *************** function _init_interrupts *****************
  5289 ;; Defined at:
  5290 ;;		line 80 in file "init_PIC.c"
  5291 ;; Parameters:    Size  Location     Type
  5292 ;;		None
  5293 ;; Auto vars:     Size  Location     Type
  5294 ;;		None
  5295 ;; Return value:  Size  Location     Type
  5296 ;;                  1    wreg      void 
  5297 ;; Registers used:
  5298 ;;		None
  5299 ;; Tracked objects:
  5300 ;;		On entry : 0/0
  5301 ;;		On exit  : 0/0
  5302 ;;		Unchanged: 0/0
  5303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5304 ;;      Params:         0       0       0       0       0       0       0
  5305 ;;      Locals:         0       0       0       0       0       0       0
  5306 ;;      Temps:          0       0       0       0       0       0       0
  5307 ;;      Totals:         0       0       0       0       0       0       0
  5308 ;;Total ram usage:        0 bytes
  5309 ;; Hardware stack levels used:    1
  5310 ;; Hardware stack levels required when called:    1
  5311 ;; This function calls:
  5312 ;;		Nothing
  5313 ;; This function is called by:
  5314 ;;		_main
  5315 ;; This function uses a non-reentrant model
  5316 ;;
  5317                           
  5318                           	psect	text19
  5319  002D80                     __ptext19:
  5320                           	callstack 0
  5321  002D80                     _init_interrupts:
  5322                           	callstack 0
  5323  002D80  FFFF               	dw	65535	; assembler added errata NOP
  5324  002D82                     
  5325                           ;init_PIC.c: 82:     PIR1bits.RCIF = 0;
  5326  002D82  9A9E               	bcf	158,5,c	;volatile
  5327                           
  5328                           ;init_PIC.c: 83:     PIE1bits.RCIE = 1;
  5329  002D84  8A9D               	bsf	157,5,c	;volatile
  5330                           
  5331                           ;init_PIC.c: 84:     INTCONbits.PEIE = 1;
  5332  002D86  8CF2               	bsf	242,6,c	;volatile
  5333  002D88  0012               	return		;funcret
  5334  002D8A  FFFF               	dw	65535	; errata NOP
  5335  002D8C                     __end_of_init_interrupts:
  5336                           	callstack 0
  5337                           
  5338 ;; *************** function _init_ccp1 *****************
  5339 ;; Defined at:
  5340 ;;		line 41 in file "timer.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;		None
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;		None
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  1    wreg      void 
  5347 ;; Registers used:
  5348 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5354 ;;      Params:         0       0       0       0       0       0       0
  5355 ;;      Locals:         0       0       0       0       0       0       0
  5356 ;;      Temps:          0       0       0       0       0       0       0
  5357 ;;      Totals:         0       0       0       0       0       0       0
  5358 ;;Total ram usage:        0 bytes
  5359 ;; Hardware stack levels used:    1
  5360 ;; Hardware stack levels required when called:    3
  5361 ;; This function calls:
  5362 ;;		_update_pwm_duty_ccp1
  5363 ;; This function is called by:
  5364 ;;		_main
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           	psect	text20
  5369  002CD0                     __ptext20:
  5370                           	callstack 0
  5371  002CD0                     _init_ccp1:
  5372                           	callstack 0
  5373  002CD0  FFFF               	dw	65535	; assembler added errata NOP
  5374  002CD2                     
  5375                           ;timer.c: 42:     CCP1CON = 0x00;
  5376  002CD2  0E00               	movlw	0
  5377  002CD4  6EBD               	movwf	189,c	;volatile
  5378  002CD6                     
  5379                           ;timer.c: 45:     update_pwm_duty_ccp1(5e-3);
  5380  002CD6  0E0A               	movlw	10
  5381  002CD8  6E6F               	movwf	update_pwm_duty_ccp1@time_up^0,c
  5382  002CDA  0ED7               	movlw	215
  5383  002CDC  6E70               	movwf	(update_pwm_duty_ccp1@time_up+1)^0,c
  5384  002CDE  0EA3               	movlw	163
  5385  002CE0  6E71               	movwf	(update_pwm_duty_ccp1@time_up+2)^0,c
  5386  002CE2  0E3B               	movlw	59
  5387  002CE4  6E72               	movwf	(update_pwm_duty_ccp1@time_up+3)^0,c
  5388  002CE6  EC8A  F012         	call	_update_pwm_duty_ccp1	;wreg free
  5389  002CEA                     
  5390                           ;timer.c: 48:     CCP1CONbits.CCP1M3 = 1;
  5391  002CEA  86BD               	bsf	189,3,c	;volatile
  5392  002CEC                     
  5393                           ;timer.c: 49:     CCP1CONbits.CCP1M2 = 1;
  5394  002CEC  84BD               	bsf	189,2,c	;volatile
  5395  002CEE  0012               	return		;funcret
  5396  002CF0  FFFF               	dw	65535	; errata NOP
  5397  002CF2                     __end_of_init_ccp1:
  5398                           	callstack 0
  5399                           
  5400 ;; *************** function _update_pwm_duty_ccp1 *****************
  5401 ;; Defined at:
  5402 ;;		line 53 in file "timer.c"
  5403 ;; Parameters:    Size  Location     Type
  5404 ;;  time_up         4  110[COMRAM] void 
  5405 ;; Auto vars:     Size  Location     Type
  5406 ;;  new_duty        2  116[COMRAM] unsigned short 
  5407 ;;  lsbs_duty       1  118[COMRAM] unsigned char 
  5408 ;; Return value:  Size  Location     Type
  5409 ;;                  1    wreg      void 
  5410 ;; Registers used:
  5411 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5412 ;; Tracked objects:
  5413 ;;		On entry : 0/0
  5414 ;;		On exit  : 0/0
  5415 ;;		Unchanged: 0/0
  5416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5417 ;;      Params:         4       0       0       0       0       0       0
  5418 ;;      Locals:         3       0       0       0       0       0       0
  5419 ;;      Temps:          2       0       0       0       0       0       0
  5420 ;;      Totals:         9       0       0       0       0       0       0
  5421 ;;Total ram usage:        9 bytes
  5422 ;; Hardware stack levels used:    1
  5423 ;; Hardware stack levels required when called:    2
  5424 ;; This function calls:
  5425 ;;		___fldiv
  5426 ;;		___flmul
  5427 ;;		___fltol
  5428 ;; This function is called by:
  5429 ;;		_init_ccp1
  5430 ;; This function uses a non-reentrant model
  5431 ;;
  5432                           
  5433                           	psect	text21
  5434  002514                     __ptext21:
  5435                           	callstack 0
  5436  002514                     _update_pwm_duty_ccp1:
  5437                           	callstack 0
  5438  002514  FFFF               	dw	65535	; assembler added errata NOP
  5439  002516                     
  5440                           ;timer.c: 56:     uint16_t new_duty;;timer.c: 57:     uint8_t lsbs_duty;;timer.c: 59:   
      +                            new_duty = (0.001) / (t_osc * tmr2_prescaler);
  5441  002516  0EBD               	movlw	189
  5442  002518  6E1F               	movwf	___flmul@a^0,c
  5443  00251A  0E37               	movlw	55
  5444  00251C  6E20               	movwf	(___flmul@a+1)^0,c
  5445  00251E  0E86               	movlw	134
  5446  002520  6E21               	movwf	(___flmul@a+2)^0,c
  5447  002522  0E35               	movlw	53
  5448  002524  6E22               	movwf	(___flmul@a+3)^0,c
  5449  002526  C0ED  F01B         	movff	_tmr2_prescaler,___flmul@b
  5450  00252A  C0EE  F01C         	movff	_tmr2_prescaler+1,___flmul@b+1
  5451  00252E  C0EF  F01D         	movff	_tmr2_prescaler+2,___flmul@b+2
  5452  002532  C0F0  F01E         	movff	_tmr2_prescaler+3,___flmul@b+3
  5453  002536  EC91  F007         	call	___flmul	;wreg free
  5454  00253A  C01B  F038         	movff	?___flmul,___fldiv@a
  5455  00253E  C01C  F039         	movff	?___flmul+1,___fldiv@a+1
  5456  002542  C01D  F03A         	movff	?___flmul+2,___fldiv@a+2
  5457  002546  C01E  F03B         	movff	?___flmul+3,___fldiv@a+3
  5458  00254A  0E6F               	movlw	111
  5459  00254C  6E34               	movwf	___fldiv@b^0,c
  5460  00254E  0E12               	movlw	18
  5461  002550  6E35               	movwf	(___fldiv@b+1)^0,c
  5462  002552  0E83               	movlw	131
  5463  002554  6E36               	movwf	(___fldiv@b+2)^0,c
  5464  002556  0E3A               	movlw	58
  5465  002558  6E37               	movwf	(___fldiv@b+3)^0,c
  5466  00255A  ECE3  F009         	call	___fldiv	;wreg free
  5467  00255E  C034  F065         	movff	?___fldiv,___fltol@f1
  5468  002562  C035  F066         	movff	?___fldiv+1,___fltol@f1+1
  5469  002566  C036  F067         	movff	?___fldiv+2,___fltol@f1+2
  5470  00256A  C037  F068         	movff	?___fldiv+3,___fltol@f1+3
  5471  00256E  ECA5  F00F         	call	___fltol	;wreg free
  5472  002572  C065  F075         	movff	?___fltol,update_pwm_duty_ccp1@new_duty
  5473  002576  C066  F076         	movff	?___fltol+1,update_pwm_duty_ccp1@new_duty+1
  5474  00257A                     
  5475                           ;timer.c: 60:     lsbs_duty = (uint8_t) new_duty;
  5476  00257A  C075  F077         	movff	update_pwm_duty_ccp1@new_duty,update_pwm_duty_ccp1@lsbs_duty
  5477  00257E                     
  5478                           ;timer.c: 64:     if (lsbs_duty & 0x01) CCP1CON |= (1u << 4);
  5479  00257E  A077               	btfss	update_pwm_duty_ccp1@lsbs_duty^0,0,c
  5480  002580  EFC4  F012         	goto	u3111
  5481  002584  EFC7  F012         	goto	u3110
  5482  002588                     u3111:
  5483  002588  FFFF               	dw	65535	; assembler added errata NOP
  5484  00258A  EFCB  F012         	goto	l3086
  5485  00258E                     u3110:
  5486  00258E  FFFF               	dw	65535	; assembler added errata NOP
  5487  002590  88BD               	bsf	189,4,c	;volatile
  5488  002592  EFCD  F012         	goto	l3088
  5489  002596                     l3086:
  5490  002596  FFFF               	dw	65535	; assembler added errata NOP
  5491  002598  98BD               	bcf	189,4,c	;volatile
  5492  00259A                     l3088:
  5493  00259A  FFFF               	dw	65535	; assembler added errata NOP
  5494                           
  5495                           ;timer.c: 67:     if (lsbs_duty & 0x02) CCP1CON |= (1u << 5);
  5496  00259C  A277               	btfss	update_pwm_duty_ccp1@lsbs_duty^0,1,c
  5497  00259E  EFD3  F012         	goto	u3121
  5498  0025A2  EFD6  F012         	goto	u3120
  5499  0025A6                     u3121:
  5500  0025A6  FFFF               	dw	65535	; assembler added errata NOP
  5501  0025A8  EFDA  F012         	goto	l3092
  5502  0025AC                     u3120:
  5503  0025AC  FFFF               	dw	65535	; assembler added errata NOP
  5504  0025AE  8ABD               	bsf	189,5,c	;volatile
  5505  0025B0  EFDC  F012         	goto	l3094
  5506  0025B4                     l3092:
  5507  0025B4  FFFF               	dw	65535	; assembler added errata NOP
  5508  0025B6  9ABD               	bcf	189,5,c	;volatile
  5509  0025B8                     l3094:
  5510  0025B8  FFFF               	dw	65535	; assembler added errata NOP
  5511                           
  5512                           ;timer.c: 71:     CCPR1L = (uint8_t) (new_duty >> 2);
  5513  0025BA  C075  F073         	movff	update_pwm_duty_ccp1@new_duty,??_update_pwm_duty_ccp1
  5514  0025BE  C076  F074         	movff	update_pwm_duty_ccp1@new_duty+1,??_update_pwm_duty_ccp1+1
  5515  0025C2  90D8               	bcf	status,0,c
  5516  0025C4  3274               	rrcf	(??_update_pwm_duty_ccp1+1)^0,f,c
  5517  0025C6  3273               	rrcf	??_update_pwm_duty_ccp1^0,f,c
  5518  0025C8  90D8               	bcf	status,0,c
  5519  0025CA  3274               	rrcf	(??_update_pwm_duty_ccp1+1)^0,f,c
  5520  0025CC  3273               	rrcf	??_update_pwm_duty_ccp1^0,f,c
  5521  0025CE  5073               	movf	??_update_pwm_duty_ccp1^0,w,c
  5522  0025D0  6EBE               	movwf	190,c	;volatile
  5523  0025D2  0012               	return		;funcret
  5524  0025D4  FFFF               	dw	65535	; errata NOP
  5525  0025D6                     __end_of_update_pwm_duty_ccp1:
  5526                           	callstack 0
  5527                           
  5528 ;; *************** function ___fldiv *****************
  5529 ;; Defined at:
  5530 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;  b               4   51[COMRAM] void 
  5533 ;;  a               4   55[COMRAM] void 
  5534 ;; Auto vars:     Size  Location     Type
  5535 ;;  grs             4   70[COMRAM] unsigned long 
  5536 ;;  rem             4   63[COMRAM] unsigned long 
  5537 ;;  new_exp         2   68[COMRAM] short 
  5538 ;;  aexp            1   75[COMRAM] unsigned char 
  5539 ;;  bexp            1   74[COMRAM] unsigned char 
  5540 ;;  sign            1   67[COMRAM] unsigned char 
  5541 ;; Return value:  Size  Location     Type
  5542 ;;                  4   51[COMRAM] unsigned char 
  5543 ;; Registers used:
  5544 ;;		wreg, status,2, status,0
  5545 ;; Tracked objects:
  5546 ;;		On entry : 0/0
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5550 ;;      Params:         8       0       0       0       0       0       0
  5551 ;;      Locals:        13       0       0       0       0       0       0
  5552 ;;      Temps:          4       0       0       0       0       0       0
  5553 ;;      Totals:        25       0       0       0       0       0       0
  5554 ;;Total ram usage:       25 bytes
  5555 ;; Hardware stack levels used:    1
  5556 ;; Hardware stack levels required when called:    1
  5557 ;; This function calls:
  5558 ;;		Nothing
  5559 ;; This function is called by:
  5560 ;;		_init_timer_2
  5561 ;;		_update_pwm_duty_ccp1
  5562 ;; This function uses a non-reentrant model
  5563 ;;
  5564                           
  5565                           	psect	text22
  5566  0013C6                     __ptext22:
  5567                           	callstack 0
  5568  0013C6                     ___fldiv:
  5569                           	callstack 0
  5570  0013C6  FFFF               	dw	65535	; assembler added errata NOP
  5571  0013C8  5037               	movf	(___fldiv@b+3)^0,w,c
  5572  0013CA  0B80               	andlw	128
  5573  0013CC  6E44               	movwf	___fldiv@sign^0,c
  5574  0013CE  5037               	movf	(___fldiv@b+3)^0,w,c
  5575  0013D0  2437               	addwf	(___fldiv@b+3)^0,w,c
  5576  0013D2  6E4B               	movwf	___fldiv@bexp^0,c
  5577  0013D4  AE36               	btfss	(___fldiv@b+2)^0,7,c
  5578  0013D6  EFEF  F009         	goto	u2351
  5579  0013DA  EFF2  F009         	goto	u2350
  5580  0013DE                     u2351:
  5581  0013DE  FFFF               	dw	65535	; assembler added errata NOP
  5582  0013E0  EFF4  F009         	goto	l2628
  5583  0013E4                     u2350:
  5584  0013E4  FFFF               	dw	65535	; assembler added errata NOP
  5585  0013E6  804B               	bsf	___fldiv@bexp^0,0,c
  5586  0013E8                     l2628:
  5587  0013E8  FFFF               	dw	65535	; assembler added errata NOP
  5588  0013EA  504B               	movf	___fldiv@bexp^0,w,c
  5589  0013EC  B4D8               	btfsc	status,2,c
  5590  0013EE  EFFB  F009         	goto	u2361
  5591  0013F2  EFFE  F009         	goto	u2360
  5592  0013F6                     u2361:
  5593  0013F6  FFFF               	dw	65535	; assembler added errata NOP
  5594  0013F8  EF17  F00A         	goto	l2638
  5595  0013FC                     u2360:
  5596  0013FC  FFFF               	dw	65535	; assembler added errata NOP
  5597  0013FE  284B               	incf	___fldiv@bexp^0,w,c
  5598  001400  A4D8               	btfss	status,2,c
  5599  001402  EF05  F00A         	goto	u2371
  5600  001406  EF08  F00A         	goto	u2370
  5601  00140A                     u2371:
  5602  00140A  FFFF               	dw	65535	; assembler added errata NOP
  5603  00140C  EF11  F00A         	goto	l2634
  5604  001410                     u2370:
  5605  001410  FFFF               	dw	65535	; assembler added errata NOP
  5606  001412  0E00               	movlw	0
  5607  001414  6E34               	movwf	___fldiv@b^0,c
  5608  001416  0E00               	movlw	0
  5609  001418  6E35               	movwf	(___fldiv@b+1)^0,c
  5610  00141A  0E00               	movlw	0
  5611  00141C  6E36               	movwf	(___fldiv@b+2)^0,c
  5612  00141E  0E00               	movlw	0
  5613  001420  6E37               	movwf	(___fldiv@b+3)^0,c
  5614  001422                     l2634:
  5615  001422  FFFF               	dw	65535	; assembler added errata NOP
  5616  001424  8E36               	bsf	(___fldiv@b+2)^0,7,c
  5617  001426  0E00               	movlw	0
  5618  001428  6E37               	movwf	(___fldiv@b+3)^0,c
  5619  00142A  EF20  F00A         	goto	l2640
  5620  00142E                     l2638:
  5621  00142E  FFFF               	dw	65535	; assembler added errata NOP
  5622  001430  0E00               	movlw	0
  5623  001432  6E34               	movwf	___fldiv@b^0,c
  5624  001434  0E00               	movlw	0
  5625  001436  6E35               	movwf	(___fldiv@b+1)^0,c
  5626  001438  0E00               	movlw	0
  5627  00143A  6E36               	movwf	(___fldiv@b+2)^0,c
  5628  00143C  0E00               	movlw	0
  5629  00143E  6E37               	movwf	(___fldiv@b+3)^0,c
  5630  001440                     l2640:
  5631  001440  FFFF               	dw	65535	; assembler added errata NOP
  5632  001442  503B               	movf	(___fldiv@a+3)^0,w,c
  5633  001444  0B80               	andlw	128
  5634  001446  1A44               	xorwf	___fldiv@sign^0,f,c
  5635  001448  503B               	movf	(___fldiv@a+3)^0,w,c
  5636  00144A  243B               	addwf	(___fldiv@a+3)^0,w,c
  5637  00144C  6E4C               	movwf	___fldiv@aexp^0,c
  5638  00144E  AE3A               	btfss	(___fldiv@a+2)^0,7,c
  5639  001450  EF2C  F00A         	goto	u2381
  5640  001454  EF2F  F00A         	goto	u2380
  5641  001458                     u2381:
  5642  001458  FFFF               	dw	65535	; assembler added errata NOP
  5643  00145A  EF31  F00A         	goto	l2648
  5644  00145E                     u2380:
  5645  00145E  FFFF               	dw	65535	; assembler added errata NOP
  5646  001460  804C               	bsf	___fldiv@aexp^0,0,c
  5647  001462                     l2648:
  5648  001462  FFFF               	dw	65535	; assembler added errata NOP
  5649  001464  504C               	movf	___fldiv@aexp^0,w,c
  5650  001466  B4D8               	btfsc	status,2,c
  5651  001468  EF38  F00A         	goto	u2391
  5652  00146C  EF3B  F00A         	goto	u2390
  5653  001470                     u2391:
  5654  001470  FFFF               	dw	65535	; assembler added errata NOP
  5655  001472  EF54  F00A         	goto	l2658
  5656  001476                     u2390:
  5657  001476  FFFF               	dw	65535	; assembler added errata NOP
  5658  001478  284C               	incf	___fldiv@aexp^0,w,c
  5659  00147A  A4D8               	btfss	status,2,c
  5660  00147C  EF42  F00A         	goto	u2401
  5661  001480  EF45  F00A         	goto	u2400
  5662  001484                     u2401:
  5663  001484  FFFF               	dw	65535	; assembler added errata NOP
  5664  001486  EF4E  F00A         	goto	l2654
  5665  00148A                     u2400:
  5666  00148A  FFFF               	dw	65535	; assembler added errata NOP
  5667  00148C  0E00               	movlw	0
  5668  00148E  6E38               	movwf	___fldiv@a^0,c
  5669  001490  0E00               	movlw	0
  5670  001492  6E39               	movwf	(___fldiv@a+1)^0,c
  5671  001494  0E00               	movlw	0
  5672  001496  6E3A               	movwf	(___fldiv@a+2)^0,c
  5673  001498  0E00               	movlw	0
  5674  00149A  6E3B               	movwf	(___fldiv@a+3)^0,c
  5675  00149C                     l2654:
  5676  00149C  FFFF               	dw	65535	; assembler added errata NOP
  5677  00149E  8E3A               	bsf	(___fldiv@a+2)^0,7,c
  5678  0014A0  0E00               	movlw	0
  5679  0014A2  6E3B               	movwf	(___fldiv@a+3)^0,c
  5680  0014A4  EF5D  F00A         	goto	l2660
  5681  0014A8                     l2658:
  5682  0014A8  FFFF               	dw	65535	; assembler added errata NOP
  5683  0014AA  0E00               	movlw	0
  5684  0014AC  6E38               	movwf	___fldiv@a^0,c
  5685  0014AE  0E00               	movlw	0
  5686  0014B0  6E39               	movwf	(___fldiv@a+1)^0,c
  5687  0014B2  0E00               	movlw	0
  5688  0014B4  6E3A               	movwf	(___fldiv@a+2)^0,c
  5689  0014B6  0E00               	movlw	0
  5690  0014B8  6E3B               	movwf	(___fldiv@a+3)^0,c
  5691  0014BA                     l2660:
  5692  0014BA  FFFF               	dw	65535	; assembler added errata NOP
  5693  0014BC  5038               	movf	___fldiv@a^0,w,c
  5694  0014BE  1039               	iorwf	(___fldiv@a+1)^0,w,c
  5695  0014C0  103A               	iorwf	(___fldiv@a+2)^0,w,c
  5696  0014C2  103B               	iorwf	(___fldiv@a+3)^0,w,c
  5697  0014C4  A4D8               	btfss	status,2,c
  5698  0014C6  EF67  F00A         	goto	u2411
  5699  0014CA  EF6A  F00A         	goto	u2410
  5700  0014CE                     u2411:
  5701  0014CE  FFFF               	dw	65535	; assembler added errata NOP
  5702  0014D0  EF84  F00A         	goto	l2672
  5703  0014D4                     u2410:
  5704  0014D4  FFFF               	dw	65535	; assembler added errata NOP
  5705  0014D6  0E00               	movlw	0
  5706  0014D8  6E34               	movwf	___fldiv@b^0,c
  5707  0014DA  0E00               	movlw	0
  5708  0014DC  6E35               	movwf	(___fldiv@b+1)^0,c
  5709  0014DE  0E00               	movlw	0
  5710  0014E0  6E36               	movwf	(___fldiv@b+2)^0,c
  5711  0014E2  0E00               	movlw	0
  5712  0014E4  6E37               	movwf	(___fldiv@b+3)^0,c
  5713  0014E6  0E80               	movlw	128
  5714  0014E8  1236               	iorwf	(___fldiv@b+2)^0,f,c
  5715  0014EA  0E7F               	movlw	127
  5716  0014EC  1237               	iorwf	(___fldiv@b+3)^0,f,c
  5717  0014EE                     l2666:
  5718  0014EE  FFFF               	dw	65535	; assembler added errata NOP
  5719  0014F0  5044               	movf	___fldiv@sign^0,w,c
  5720  0014F2  1237               	iorwf	(___fldiv@b+3)^0,f,c
  5721  0014F4  C034  F034         	movff	___fldiv@b,?___fldiv
  5722  0014F8  C035  F035         	movff	___fldiv@b+1,?___fldiv+1
  5723  0014FC  C036  F036         	movff	___fldiv@b+2,?___fldiv+2
  5724  001500  C037  F037         	movff	___fldiv@b+3,?___fldiv+3
  5725  001504  EFF9  F00B         	goto	l1025
  5726  001508                     l2672:
  5727  001508  FFFF               	dw	65535	; assembler added errata NOP
  5728  00150A  504B               	movf	___fldiv@bexp^0,w,c
  5729  00150C  A4D8               	btfss	status,2,c
  5730  00150E  EF8B  F00A         	goto	u2421
  5731  001512  EF8E  F00A         	goto	u2420
  5732  001516                     u2421:
  5733  001516  FFFF               	dw	65535	; assembler added errata NOP
  5734  001518  EF99  F00A         	goto	l2680
  5735  00151C                     u2420:
  5736  00151C  FFFF               	dw	65535	; assembler added errata NOP
  5737  00151E  0E00               	movlw	0
  5738  001520  6E34               	movwf	?___fldiv^0,c
  5739  001522  0E00               	movlw	0
  5740  001524  6E35               	movwf	(?___fldiv+1)^0,c
  5741  001526  0E00               	movlw	0
  5742  001528  6E36               	movwf	(?___fldiv+2)^0,c
  5743  00152A  0E00               	movlw	0
  5744  00152C  6E37               	movwf	(?___fldiv+3)^0,c
  5745  00152E  EFF9  F00B         	goto	l1025
  5746  001532                     l2680:
  5747  001532  FFFF               	dw	65535	; assembler added errata NOP
  5748  001534  504C               	movf	___fldiv@aexp^0,w,c
  5749  001536  C04B  F03C         	movff	___fldiv@bexp,??___fldiv
  5750  00153A  6A3D               	clrf	(??___fldiv+1)^0,c
  5751  00153C  5E3C               	subwf	??___fldiv^0,f,c
  5752  00153E  0E00               	movlw	0
  5753  001540  5A3D               	subwfb	(??___fldiv+1)^0,f,c
  5754  001542  0E7F               	movlw	127
  5755  001544  243C               	addwf	??___fldiv^0,w,c
  5756  001546  6E45               	movwf	___fldiv@new_exp^0,c
  5757  001548  0E00               	movlw	0
  5758  00154A  203D               	addwfc	(??___fldiv+1)^0,w,c
  5759  00154C  6E46               	movwf	(___fldiv@new_exp+1)^0,c
  5760  00154E  C034  F040         	movff	___fldiv@b,___fldiv@rem
  5761  001552  C035  F041         	movff	___fldiv@b+1,___fldiv@rem+1
  5762  001556  C036  F042         	movff	___fldiv@b+2,___fldiv@rem+2
  5763  00155A  C037  F043         	movff	___fldiv@b+3,___fldiv@rem+3
  5764  00155E  0E00               	movlw	0
  5765  001560  6E34               	movwf	___fldiv@b^0,c
  5766  001562  0E00               	movlw	0
  5767  001564  6E35               	movwf	(___fldiv@b+1)^0,c
  5768  001566  0E00               	movlw	0
  5769  001568  6E36               	movwf	(___fldiv@b+2)^0,c
  5770  00156A  0E00               	movlw	0
  5771  00156C  6E37               	movwf	(___fldiv@b+3)^0,c
  5772  00156E  0E00               	movlw	0
  5773  001570  6E47               	movwf	___fldiv@grs^0,c
  5774  001572  0E00               	movlw	0
  5775  001574  6E48               	movwf	(___fldiv@grs+1)^0,c
  5776  001576  0E00               	movlw	0
  5777  001578  6E49               	movwf	(___fldiv@grs+2)^0,c
  5778  00157A  0E00               	movlw	0
  5779  00157C  6E4A               	movwf	(___fldiv@grs+3)^0,c
  5780  00157E  0E00               	movlw	0
  5781  001580  6E4C               	movwf	___fldiv@aexp^0,c
  5782  001582  EF05  F00B         	goto	l1027
  5783  001586                     l2690:
  5784  001586  FFFF               	dw	65535	; assembler added errata NOP
  5785  001588  504C               	movf	___fldiv@aexp^0,w,c
  5786  00158A  B4D8               	btfsc	status,2,c
  5787  00158C  EFCA  F00A         	goto	u2431
  5788  001590  EFCD  F00A         	goto	u2430
  5789  001594                     u2431:
  5790  001594  FFFF               	dw	65535	; assembler added errata NOP
  5791  001596  EFE8  F00A         	goto	l2698
  5792  00159A                     u2430:
  5793  00159A  FFFF               	dw	65535	; assembler added errata NOP
  5794  00159C  90D8               	bcf	status,0,c
  5795  00159E  3640               	rlcf	___fldiv@rem^0,f,c
  5796  0015A0  3641               	rlcf	(___fldiv@rem+1)^0,f,c
  5797  0015A2  3642               	rlcf	(___fldiv@rem+2)^0,f,c
  5798  0015A4  3643               	rlcf	(___fldiv@rem+3)^0,f,c
  5799  0015A6  90D8               	bcf	status,0,c
  5800  0015A8  3634               	rlcf	___fldiv@b^0,f,c
  5801  0015AA  3635               	rlcf	(___fldiv@b+1)^0,f,c
  5802  0015AC  3636               	rlcf	(___fldiv@b+2)^0,f,c
  5803  0015AE  3637               	rlcf	(___fldiv@b+3)^0,f,c
  5804  0015B0  AE4A               	btfss	(___fldiv@grs+3)^0,7,c
  5805  0015B2  EFDD  F00A         	goto	u2441
  5806  0015B6  EFE0  F00A         	goto	u2440
  5807  0015BA                     u2441:
  5808  0015BA  FFFF               	dw	65535	; assembler added errata NOP
  5809  0015BC  EFE2  F00A         	goto	l1030
  5810  0015C0                     u2440:
  5811  0015C0  FFFF               	dw	65535	; assembler added errata NOP
  5812  0015C2  8034               	bsf	___fldiv@b^0,0,c
  5813  0015C4                     l1030:
  5814  0015C4  FFFF               	dw	65535	; assembler added errata NOP
  5815  0015C6  90D8               	bcf	status,0,c
  5816  0015C8  3647               	rlcf	___fldiv@grs^0,f,c
  5817  0015CA  3648               	rlcf	(___fldiv@grs+1)^0,f,c
  5818  0015CC  3649               	rlcf	(___fldiv@grs+2)^0,f,c
  5819  0015CE  364A               	rlcf	(___fldiv@grs+3)^0,f,c
  5820  0015D0                     l2698:
  5821  0015D0  FFFF               	dw	65535	; assembler added errata NOP
  5822  0015D2  5038               	movf	___fldiv@a^0,w,c
  5823  0015D4  5C40               	subwf	___fldiv@rem^0,w,c
  5824  0015D6  5039               	movf	(___fldiv@a+1)^0,w,c
  5825  0015D8  5841               	subwfb	(___fldiv@rem+1)^0,w,c
  5826  0015DA  503A               	movf	(___fldiv@a+2)^0,w,c
  5827  0015DC  5842               	subwfb	(___fldiv@rem+2)^0,w,c
  5828  0015DE  503B               	movf	(___fldiv@a+3)^0,w,c
  5829  0015E0  5843               	subwfb	(___fldiv@rem+3)^0,w,c
  5830  0015E2  A0D8               	btfss	status,0,c
  5831  0015E4  EFF6  F00A         	goto	u2451
  5832  0015E8  EFF9  F00A         	goto	u2450
  5833  0015EC                     u2451:
  5834  0015EC  FFFF               	dw	65535	; assembler added errata NOP
  5835  0015EE  EF03  F00B         	goto	l2704
  5836  0015F2                     u2450:
  5837  0015F2  FFFF               	dw	65535	; assembler added errata NOP
  5838  0015F4  8C4A               	bsf	(___fldiv@grs+3)^0,6,c
  5839  0015F6  5038               	movf	___fldiv@a^0,w,c
  5840  0015F8  5E40               	subwf	___fldiv@rem^0,f,c
  5841  0015FA  5039               	movf	(___fldiv@a+1)^0,w,c
  5842  0015FC  5A41               	subwfb	(___fldiv@rem+1)^0,f,c
  5843  0015FE  503A               	movf	(___fldiv@a+2)^0,w,c
  5844  001600  5A42               	subwfb	(___fldiv@rem+2)^0,f,c
  5845  001602  503B               	movf	(___fldiv@a+3)^0,w,c
  5846  001604  5A43               	subwfb	(___fldiv@rem+3)^0,f,c
  5847  001606                     l2704:
  5848  001606  FFFF               	dw	65535	; assembler added errata NOP
  5849  001608  2A4C               	incf	___fldiv@aexp^0,f,c
  5850  00160A                     l1027:
  5851  00160A  FFFF               	dw	65535	; assembler added errata NOP
  5852  00160C  0E19               	movlw	25
  5853  00160E  644C               	cpfsgt	___fldiv@aexp^0,c
  5854  001610  EF0C  F00B         	goto	u2461
  5855  001614  EF0F  F00B         	goto	u2460
  5856  001618                     u2461:
  5857  001618  FFFF               	dw	65535	; assembler added errata NOP
  5858  00161A  EFC3  F00A         	goto	l2690
  5859  00161E                     u2460:
  5860  00161E  FFFF               	dw	65535	; assembler added errata NOP
  5861  001620  5040               	movf	___fldiv@rem^0,w,c
  5862  001622  1041               	iorwf	(___fldiv@rem+1)^0,w,c
  5863  001624  1042               	iorwf	(___fldiv@rem+2)^0,w,c
  5864  001626  1043               	iorwf	(___fldiv@rem+3)^0,w,c
  5865  001628  B4D8               	btfsc	status,2,c
  5866  00162A  EF19  F00B         	goto	u2471
  5867  00162E  EF1C  F00B         	goto	u2470
  5868  001632                     u2471:
  5869  001632  FFFF               	dw	65535	; assembler added errata NOP
  5870  001634  EF39  F00B         	goto	l2716
  5871  001638                     u2470:
  5872  001638  FFFF               	dw	65535	; assembler added errata NOP
  5873  00163A  8047               	bsf	___fldiv@grs^0,0,c
  5874  00163C  EF39  F00B         	goto	l2716
  5875  001640                     l2710:
  5876  001640  FFFF               	dw	65535	; assembler added errata NOP
  5877  001642  90D8               	bcf	status,0,c
  5878  001644  3634               	rlcf	___fldiv@b^0,f,c
  5879  001646  3635               	rlcf	(___fldiv@b+1)^0,f,c
  5880  001648  3636               	rlcf	(___fldiv@b+2)^0,f,c
  5881  00164A  3637               	rlcf	(___fldiv@b+3)^0,f,c
  5882  00164C  AE4A               	btfss	(___fldiv@grs+3)^0,7,c
  5883  00164E  EF2B  F00B         	goto	u2481
  5884  001652  EF2E  F00B         	goto	u2480
  5885  001656                     u2481:
  5886  001656  FFFF               	dw	65535	; assembler added errata NOP
  5887  001658  EF30  F00B         	goto	l1036
  5888  00165C                     u2480:
  5889  00165C  FFFF               	dw	65535	; assembler added errata NOP
  5890  00165E  8034               	bsf	___fldiv@b^0,0,c
  5891  001660                     l1036:
  5892  001660  FFFF               	dw	65535	; assembler added errata NOP
  5893  001662  90D8               	bcf	status,0,c
  5894  001664  3647               	rlcf	___fldiv@grs^0,f,c
  5895  001666  3648               	rlcf	(___fldiv@grs+1)^0,f,c
  5896  001668  3649               	rlcf	(___fldiv@grs+2)^0,f,c
  5897  00166A  364A               	rlcf	(___fldiv@grs+3)^0,f,c
  5898  00166C  0645               	decf	___fldiv@new_exp^0,f,c
  5899  00166E  A0D8               	btfss	status,0,c
  5900  001670  0646               	decf	(___fldiv@new_exp+1)^0,f,c
  5901  001672                     l2716:
  5902  001672  FFFF               	dw	65535	; assembler added errata NOP
  5903  001674  AE36               	btfss	(___fldiv@b+2)^0,7,c
  5904  001676  EF3F  F00B         	goto	u2491
  5905  00167A  EF42  F00B         	goto	u2490
  5906  00167E                     u2491:
  5907  00167E  FFFF               	dw	65535	; assembler added errata NOP
  5908  001680  EF20  F00B         	goto	l2710
  5909  001684                     u2490:
  5910  001684  FFFF               	dw	65535	; assembler added errata NOP
  5911  001686  0E00               	movlw	0
  5912  001688  6E4C               	movwf	___fldiv@aexp^0,c
  5913  00168A  AE4A               	btfss	(___fldiv@grs+3)^0,7,c
  5914  00168C  EF4A  F00B         	goto	u2501
  5915  001690  EF4D  F00B         	goto	u2500
  5916  001694                     u2501:
  5917  001694  FFFF               	dw	65535	; assembler added errata NOP
  5918  001696  EF78  F00B         	goto	l1038
  5919  00169A                     u2500:
  5920  00169A  FFFF               	dw	65535	; assembler added errata NOP
  5921  00169C  0EFF               	movlw	255
  5922  00169E  1447               	andwf	___fldiv@grs^0,w,c
  5923  0016A0  6E3C               	movwf	??___fldiv^0,c
  5924  0016A2  0EFF               	movlw	255
  5925  0016A4  1448               	andwf	(___fldiv@grs+1)^0,w,c
  5926  0016A6  6E3D               	movwf	(??___fldiv+1)^0,c
  5927  0016A8  0EFF               	movlw	255
  5928  0016AA  1449               	andwf	(___fldiv@grs+2)^0,w,c
  5929  0016AC  6E3E               	movwf	(??___fldiv+2)^0,c
  5930  0016AE  0E7F               	movlw	127
  5931  0016B0  144A               	andwf	(___fldiv@grs+3)^0,w,c
  5932  0016B2  6E3F               	movwf	(??___fldiv+3)^0,c
  5933  0016B4  503C               	movf	??___fldiv^0,w,c
  5934  0016B6  103D               	iorwf	(??___fldiv+1)^0,w,c
  5935  0016B8  103E               	iorwf	(??___fldiv+2)^0,w,c
  5936  0016BA  103F               	iorwf	(??___fldiv+3)^0,w,c
  5937  0016BC  B4D8               	btfsc	status,2,c
  5938  0016BE  EF63  F00B         	goto	u2511
  5939  0016C2  EF66  F00B         	goto	u2510
  5940  0016C6                     u2511:
  5941  0016C6  FFFF               	dw	65535	; assembler added errata NOP
  5942  0016C8  EF6C  F00B         	goto	l1039
  5943  0016CC                     u2510:
  5944  0016CC  FFFF               	dw	65535	; assembler added errata NOP
  5945  0016CE                     l2724:
  5946  0016CE  FFFF               	dw	65535	; assembler added errata NOP
  5947  0016D0  0E01               	movlw	1
  5948  0016D2  6E4C               	movwf	___fldiv@aexp^0,c
  5949  0016D4  EF78  F00B         	goto	l1038
  5950  0016D8                     l1039:
  5951  0016D8  FFFF               	dw	65535	; assembler added errata NOP
  5952  0016DA  A034               	btfss	___fldiv@b^0,0,c
  5953  0016DC  EF72  F00B         	goto	u2521
  5954  0016E0  EF75  F00B         	goto	u2520
  5955  0016E4                     u2521:
  5956  0016E4  FFFF               	dw	65535	; assembler added errata NOP
  5957  0016E6  EF78  F00B         	goto	l1038
  5958  0016EA                     u2520:
  5959  0016EA  FFFF               	dw	65535	; assembler added errata NOP
  5960  0016EC  EF67  F00B         	goto	l2724
  5961  0016F0                     l1038:
  5962  0016F0  FFFF               	dw	65535	; assembler added errata NOP
  5963  0016F2  504C               	movf	___fldiv@aexp^0,w,c
  5964  0016F4  B4D8               	btfsc	status,2,c
  5965  0016F6  EF7F  F00B         	goto	u2531
  5966  0016FA  EF82  F00B         	goto	u2530
  5967  0016FE                     u2531:
  5968  0016FE  FFFF               	dw	65535	; assembler added errata NOP
  5969  001700  EFA9  F00B         	goto	l2736
  5970  001704                     u2530:
  5971  001704  FFFF               	dw	65535	; assembler added errata NOP
  5972  001706  0E01               	movlw	1
  5973  001708  2634               	addwf	___fldiv@b^0,f,c
  5974  00170A  0E00               	movlw	0
  5975  00170C  2235               	addwfc	(___fldiv@b+1)^0,f,c
  5976  00170E  2236               	addwfc	(___fldiv@b+2)^0,f,c
  5977  001710  2237               	addwfc	(___fldiv@b+3)^0,f,c
  5978  001712  A037               	btfss	(___fldiv@b+3)^0,0,c
  5979  001714  EF8E  F00B         	goto	u2541
  5980  001718  EF91  F00B         	goto	u2540
  5981  00171C                     u2541:
  5982  00171C  FFFF               	dw	65535	; assembler added errata NOP
  5983  00171E  EFA9  F00B         	goto	l2736
  5984  001722                     u2540:
  5985  001722  FFFF               	dw	65535	; assembler added errata NOP
  5986  001724  C034  F03C         	movff	___fldiv@b,??___fldiv
  5987  001728  C035  F03D         	movff	___fldiv@b+1,??___fldiv+1
  5988  00172C  C036  F03E         	movff	___fldiv@b+2,??___fldiv+2
  5989  001730  C037  F03F         	movff	___fldiv@b+3,??___fldiv+3
  5990  001734  343F               	rlcf	(??___fldiv+3)^0,w,c
  5991  001736  323F               	rrcf	(??___fldiv+3)^0,f,c
  5992  001738  323E               	rrcf	(??___fldiv+2)^0,f,c
  5993  00173A  323D               	rrcf	(??___fldiv+1)^0,f,c
  5994  00173C  323C               	rrcf	??___fldiv^0,f,c
  5995  00173E  C03C  F034         	movff	??___fldiv,___fldiv@b
  5996  001742  C03D  F035         	movff	??___fldiv+1,___fldiv@b+1
  5997  001746  C03E  F036         	movff	??___fldiv+2,___fldiv@b+2
  5998  00174A  C03F  F037         	movff	??___fldiv+3,___fldiv@b+3
  5999  00174E  4A45               	infsnz	___fldiv@new_exp^0,f,c
  6000  001750  2A46               	incf	(___fldiv@new_exp+1)^0,f,c
  6001  001752                     l2736:
  6002  001752  FFFF               	dw	65535	; assembler added errata NOP
  6003  001754  BE46               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6004  001756  EFB5  F00B         	goto	u2551
  6005  00175A  5046               	movf	(___fldiv@new_exp+1)^0,w,c
  6006  00175C  E109               	bnz	u2550
  6007  00175E  2845               	incf	___fldiv@new_exp^0,w,c
  6008  001760  A0D8               	btfss	status,0,c
  6009  001762  EFB5  F00B         	goto	u2551
  6010  001766  EFB8  F00B         	goto	u2550
  6011  00176A                     u2551:
  6012  00176A  FFFF               	dw	65535	; assembler added errata NOP
  6013  00176C  EFC4  F00B         	goto	l2740
  6014  001770                     u2550:
  6015  001770  FFFF               	dw	65535	; assembler added errata NOP
  6016  001772  0E00               	movlw	0
  6017  001774  6E46               	movwf	(___fldiv@new_exp+1)^0,c
  6018  001776  6845               	setf	___fldiv@new_exp^0,c
  6019  001778  0E00               	movlw	0
  6020  00177A  6E34               	movwf	___fldiv@b^0,c
  6021  00177C  0E00               	movlw	0
  6022  00177E  6E35               	movwf	(___fldiv@b+1)^0,c
  6023  001780  0E00               	movlw	0
  6024  001782  6E36               	movwf	(___fldiv@b+2)^0,c
  6025  001784  0E00               	movlw	0
  6026  001786  6E37               	movwf	(___fldiv@b+3)^0,c
  6027  001788                     l2740:
  6028  001788  FFFF               	dw	65535	; assembler added errata NOP
  6029  00178A  BE46               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6030  00178C  EFD3  F00B         	goto	u2560
  6031  001790  5046               	movf	(___fldiv@new_exp+1)^0,w,c
  6032  001792  E106               	bnz	u2561
  6033  001794  0445               	decf	___fldiv@new_exp^0,w,c
  6034  001796  B0D8               	btfsc	status,0,c
  6035  001798  EFD0  F00B         	goto	u2561
  6036  00179C  EFD3  F00B         	goto	u2560
  6037  0017A0                     u2561:
  6038  0017A0  FFFF               	dw	65535	; assembler added errata NOP
  6039  0017A2  EFE2  F00B         	goto	l2744
  6040  0017A6                     u2560:
  6041  0017A6  FFFF               	dw	65535	; assembler added errata NOP
  6042  0017A8  0E00               	movlw	0
  6043  0017AA  6E46               	movwf	(___fldiv@new_exp+1)^0,c
  6044  0017AC  0E00               	movlw	0
  6045  0017AE  6E45               	movwf	___fldiv@new_exp^0,c
  6046  0017B0  0E00               	movlw	0
  6047  0017B2  6E34               	movwf	___fldiv@b^0,c
  6048  0017B4  0E00               	movlw	0
  6049  0017B6  6E35               	movwf	(___fldiv@b+1)^0,c
  6050  0017B8  0E00               	movlw	0
  6051  0017BA  6E36               	movwf	(___fldiv@b+2)^0,c
  6052  0017BC  0E00               	movlw	0
  6053  0017BE  6E37               	movwf	(___fldiv@b+3)^0,c
  6054  0017C0  0E00               	movlw	0
  6055  0017C2  6E44               	movwf	___fldiv@sign^0,c
  6056  0017C4                     l2744:
  6057  0017C4  FFFF               	dw	65535	; assembler added errata NOP
  6058  0017C6  C045  F04B         	movff	___fldiv@new_exp,___fldiv@bexp
  6059  0017CA  A04B               	btfss	___fldiv@bexp^0,0,c
  6060  0017CC  EFEA  F00B         	goto	u2571
  6061  0017D0  EFED  F00B         	goto	u2570
  6062  0017D4                     u2571:
  6063  0017D4  FFFF               	dw	65535	; assembler added errata NOP
  6064  0017D6  EFF1  F00B         	goto	l2750
  6065  0017DA                     u2570:
  6066  0017DA  FFFF               	dw	65535	; assembler added errata NOP
  6067  0017DC  8E36               	bsf	(___fldiv@b+2)^0,7,c
  6068  0017DE  EFF3  F00B         	goto	l2752
  6069  0017E2                     l2750:
  6070  0017E2  FFFF               	dw	65535	; assembler added errata NOP
  6071  0017E4  9E36               	bcf	(___fldiv@b+2)^0,7,c
  6072  0017E6                     l2752:
  6073  0017E6  FFFF               	dw	65535	; assembler added errata NOP
  6074  0017E8  90D8               	bcf	status,0,c
  6075  0017EA  304B               	rrcf	___fldiv@bexp^0,w,c
  6076  0017EC  6E37               	movwf	(___fldiv@b+3)^0,c
  6077  0017EE  EF77  F00A         	goto	l2666
  6078  0017F2                     l1025:
  6079  0017F2  FFFF               	dw	65535	; assembler added errata NOP
  6080  0017F4  0012               	return		;funcret
  6081  0017F6  FFFF               	dw	65535	; errata NOP
  6082  0017F8                     __end_of___fldiv:
  6083                           	callstack 0
  6084                           
  6085 ;; *************** function _init_USART *****************
  6086 ;; Defined at:
  6087 ;;		line 13 in file "serial_rs232.c"
  6088 ;; Parameters:    Size  Location     Type
  6089 ;;		None
  6090 ;; Auto vars:     Size  Location     Type
  6091 ;;		None
  6092 ;; Return value:  Size  Location     Type
  6093 ;;                  1    wreg      void 
  6094 ;; Registers used:
  6095 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6096 ;; Tracked objects:
  6097 ;;		On entry : 0/0
  6098 ;;		On exit  : 0/0
  6099 ;;		Unchanged: 0/0
  6100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6101 ;;      Params:         0       0       0       0       0       0       0
  6102 ;;      Locals:         0       0       0       0       0       0       0
  6103 ;;      Temps:          0       0       0       0       0       0       0
  6104 ;;      Totals:         0       0       0       0       0       0       0
  6105 ;;Total ram usage:        0 bytes
  6106 ;; Hardware stack levels used:    1
  6107 ;; Hardware stack levels required when called:    4
  6108 ;; This function calls:
  6109 ;;		___fltol
  6110 ;;		_roundf
  6111 ;; This function is called by:
  6112 ;;		_main
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115                           
  6116                           	psect	text23
  6117  002B24                     __ptext23:
  6118                           	callstack 0
  6119  002B24                     _init_USART:
  6120                           	callstack 0
  6121  002B24  FFFF               	dw	65535	; assembler added errata NOP
  6122  002B26                     
  6123                           ;serial_rs232.c: 24:     SPBRG = roundf(((fosc / desired_baudrate) / 16) - 1);
  6124  002B26  0E55               	movlw	85
  6125  002B28  0100               	movlb	0	; () banked
  6126  002B2A  6FC0               	movwf	roundf@x& (0+255),b
  6127  002B2C  0E55               	movlw	85
  6128  002B2E  6FC1               	movwf	(roundf@x+1)& (0+255),b
  6129  002B30  0EC8               	movlw	200
  6130  002B32  6FC2               	movwf	(roundf@x+2)& (0+255),b
  6131  002B34  0E41               	movlw	65
  6132  002B36  6FC3               	movwf	(roundf@x+3)& (0+255),b
  6133  002B38  ECFC  F00B         	call	_roundf	;wreg free
  6134  002B3C  C0C0  F065         	movff	?_roundf,___fltol@f1
  6135  002B40  C0C1  F066         	movff	?_roundf+1,___fltol@f1+1
  6136  002B44  C0C2  F067         	movff	?_roundf+2,___fltol@f1+2
  6137  002B48  C0C3  F068         	movff	?_roundf+3,___fltol@f1+3
  6138  002B4C  ECA5  F00F         	call	___fltol	;wreg free
  6139  002B50  5065               	movf	?___fltol^0,w,c
  6140  002B52  6EAF               	movwf	175,c	;volatile
  6141  002B54                     
  6142                           ;serial_rs232.c: 28:     TXSTAbits.TX9 = 0;
  6143  002B54  9CAC               	bcf	172,6,c	;volatile
  6144  002B56                     
  6145                           ;serial_rs232.c: 29:     TXSTAbits.TXEN = 1;
  6146  002B56  8AAC               	bsf	172,5,c	;volatile
  6147  002B58                     
  6148                           ;serial_rs232.c: 30:     TXSTAbits.SYNC =0;
  6149  002B58  98AC               	bcf	172,4,c	;volatile
  6150  002B5A                     
  6151                           ;serial_rs232.c: 31:     TXSTAbits.BRGH = 1;
  6152  002B5A  84AC               	bsf	172,2,c	;volatile
  6153  002B5C                     
  6154                           ;serial_rs232.c: 33:     RCSTAbits.SPEN = 1;
  6155  002B5C  8EAB               	bsf	171,7,c	;volatile
  6156  002B5E                     
  6157                           ;serial_rs232.c: 34:     RCSTAbits.RX9 = 0;
  6158  002B5E  9CAB               	bcf	171,6,c	;volatile
  6159  002B60                     
  6160                           ;serial_rs232.c: 35:     RCSTAbits.CREN = 1;
  6161  002B60  88AB               	bsf	171,4,c	;volatile
  6162  002B62  0012               	return		;funcret
  6163  002B64  FFFF               	dw	65535	; errata NOP
  6164  002B66                     __end_of_init_USART:
  6165                           	callstack 0
  6166                           
  6167 ;; *************** function _roundf *****************
  6168 ;; Defined at:
  6169 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\roundf.c"
  6170 ;; Parameters:    Size  Location     Type
  6171 ;;  x               4    0[BANK0 ] float 
  6172 ;; Auto vars:     Size  Location     Type
  6173 ;;  y               4   22[BANK0 ] float 
  6174 ;;  u               4   18[BANK0 ] struct .
  6175 ;;  e               2   12[BANK0 ] int 
  6176 ;; Return value:  Size  Location     Type
  6177 ;;                  4    0[BANK0 ] float 
  6178 ;; Registers used:
  6179 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6180 ;; Tracked objects:
  6181 ;;		On entry : 0/0
  6182 ;;		On exit  : 0/0
  6183 ;;		Unchanged: 0/0
  6184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6185 ;;      Params:         0       4       0       0       0       0       0
  6186 ;;      Locals:         0      18       0       0       0       0       0
  6187 ;;      Temps:          0       4       0       0       0       0       0
  6188 ;;      Totals:         0      26       0       0       0       0       0
  6189 ;;Total ram usage:       26 bytes
  6190 ;; Hardware stack levels used:    1
  6191 ;; Hardware stack levels required when called:    3
  6192 ;; This function calls:
  6193 ;;		___fladd
  6194 ;;		___flge
  6195 ;;		___flmul
  6196 ;;		___flneg
  6197 ;;		___flsub
  6198 ;; This function is called by:
  6199 ;;		_init_USART
  6200 ;; This function uses a non-reentrant model
  6201 ;;
  6202                           
  6203                           	psect	text24
  6204  0017F8                     __ptext24:
  6205                           	callstack 0
  6206  0017F8                     _roundf:
  6207                           	callstack 0
  6208  0017F8  FFFF               	dw	65535	; assembler added errata NOP
  6209  0017FA  C080  F0D2         	movff	roundf@F525,roundf@u
  6210  0017FE  C081  F0D3         	movff	roundf@F525+1,roundf@u+1
  6211  001802  C082  F0D4         	movff	roundf@F525+2,roundf@u+2
  6212  001806  C083  F0D5         	movff	roundf@F525+3,roundf@u+3
  6213  00180A  C0C0  F0D2         	movff	roundf@x,roundf@u
  6214  00180E  C0C1  F0D3         	movff	roundf@x+1,roundf@u+1
  6215  001812  C0C2  F0D4         	movff	roundf@x+2,roundf@u+2
  6216  001816  C0C3  F0D5         	movff	roundf@x+3,roundf@u+3
  6217  00181A  C0D2  F0C4         	movff	roundf@u,??_roundf
  6218  00181E  C0D3  F0C5         	movff	roundf@u+1,??_roundf+1
  6219  001822  C0D4  F0C6         	movff	roundf@u+2,??_roundf+2
  6220  001826  C0D5  F0C7         	movff	roundf@u+3,??_roundf+3
  6221  00182A  0E18               	movlw	24
  6222  00182C  EF1F  F00C         	goto	u3000
  6223  001830                     u3005:
  6224  001830  FFFF               	dw	65535	; assembler added errata NOP
  6225  001832  0100               	movlb	0	; () banked
  6226  001834  90D8               	bcf	status,0,c
  6227  001836  33C7               	rrcf	(??_roundf+3)& (0+255),f,b
  6228  001838  33C6               	rrcf	(??_roundf+2)& (0+255),f,b
  6229  00183A  33C5               	rrcf	(??_roundf+1)& (0+255),f,b
  6230  00183C  33C4               	rrcf	??_roundf& (0+255),f,b
  6231  00183E                     u3000:
  6232  00183E  FFFF               	dw	65535	; assembler added errata NOP
  6233  001840  2EE8               	decfsz	wreg,f,c
  6234  001842  EF18  F00C         	goto	u3005
  6235  001846  51C4               	movf	??_roundf& (0+255),w,b
  6236  001848  6FCC               	movwf	roundf@e& (0+255),b
  6237  00184A  6BCD               	clrf	(roundf@e+1)& (0+255),b
  6238  00184C  BFCD               	btfsc	(roundf@e+1)& (0+255),7,b
  6239  00184E  EF32  F00C         	goto	u3011
  6240  001852  51CD               	movf	(roundf@e+1)& (0+255),w,b
  6241  001854  E10A               	bnz	u3010
  6242  001856  0E96               	movlw	150
  6243  001858  5DCC               	subwf	roundf@e& (0+255),w,b
  6244  00185A  A0D8               	btfss	status,0,c
  6245  00185C  EF32  F00C         	goto	u3011
  6246  001860  EF35  F00C         	goto	u3010
  6247  001864                     u3011:
  6248  001864  FFFF               	dw	65535	; assembler added errata NOP
  6249  001866  EF40  F00C         	goto	l3022
  6250  00186A                     u3010:
  6251  00186A  FFFF               	dw	65535	; assembler added errata NOP
  6252  00186C                     
  6253                           ; BSR set to: 0
  6254  00186C  C0C0  F0C0         	movff	roundf@x,?_roundf
  6255  001870  C0C1  F0C1         	movff	roundf@x+1,?_roundf+1
  6256  001874  C0C2  F0C2         	movff	roundf@x+2,?_roundf+2
  6257  001878  C0C3  F0C3         	movff	roundf@x+3,?_roundf+3
  6258  00187C  EFEF  F00D         	goto	l1129
  6259  001880                     l3022:
  6260  001880  FFFF               	dw	65535	; assembler added errata NOP
  6261                           
  6262                           ; BSR set to: 0
  6263  001882  C0D2  F0C4         	movff	roundf@u,??_roundf
  6264  001886  C0D3  F0C5         	movff	roundf@u+1,??_roundf+1
  6265  00188A  C0D4  F0C6         	movff	roundf@u+2,??_roundf+2
  6266  00188E  C0D5  F0C7         	movff	roundf@u+3,??_roundf+3
  6267  001892  0E20               	movlw	32
  6268  001894  EF52  F00C         	goto	u3020
  6269  001898                     u3025:
  6270  001898  FFFF               	dw	65535	; assembler added errata NOP
  6271  00189A  90D8               	bcf	status,0,c
  6272  00189C  33C7               	rrcf	(??_roundf+3)& (0+255),f,b
  6273  00189E  33C6               	rrcf	(??_roundf+2)& (0+255),f,b
  6274  0018A0  33C5               	rrcf	(??_roundf+1)& (0+255),f,b
  6275  0018A2  33C4               	rrcf	??_roundf& (0+255),f,b
  6276  0018A4                     u3020:
  6277  0018A4  FFFF               	dw	65535	; assembler added errata NOP
  6278  0018A6  2EE8               	decfsz	wreg,f,c
  6279  0018A8  EF4C  F00C         	goto	u3025
  6280  0018AC  51C4               	movf	??_roundf& (0+255),w,b
  6281  0018AE  11C5               	iorwf	(??_roundf+1)& (0+255),w,b
  6282  0018B0  11C6               	iorwf	(??_roundf+2)& (0+255),w,b
  6283  0018B2  11C7               	iorwf	(??_roundf+3)& (0+255),w,b
  6284  0018B4  B4D8               	btfsc	status,2,c
  6285  0018B6  EF5F  F00C         	goto	u3031
  6286  0018BA  EF62  F00C         	goto	u3030
  6287  0018BE                     u3031:
  6288  0018BE  FFFF               	dw	65535	; assembler added errata NOP
  6289  0018C0  EF75  F00C         	goto	l3026
  6290  0018C4                     u3030:
  6291  0018C4  FFFF               	dw	65535	; assembler added errata NOP
  6292  0018C6                     
  6293                           ; BSR set to: 0
  6294  0018C6  C0C0  F001         	movff	roundf@x,___flneg@f1
  6295  0018CA  C0C1  F002         	movff	roundf@x+1,___flneg@f1+1
  6296  0018CE  C0C2  F003         	movff	roundf@x+2,___flneg@f1+2
  6297  0018D2  C0C3  F004         	movff	roundf@x+3,___flneg@f1+3
  6298  0018D6  ECB3  F015         	call	___flneg	;wreg free
  6299  0018DA  C001  F0C0         	movff	?___flneg,roundf@x
  6300  0018DE  C002  F0C1         	movff	?___flneg+1,roundf@x+1
  6301  0018E2  C003  F0C2         	movff	?___flneg+2,roundf@x+2
  6302  0018E6  C004  F0C3         	movff	?___flneg+3,roundf@x+3
  6303  0018EA                     l3026:
  6304  0018EA  FFFF               	dw	65535	; assembler added errata NOP
  6305  0018EC  0100               	movlb	0	; () banked
  6306  0018EE  BFCD               	btfsc	(roundf@e+1)& (0+255),7,b
  6307  0018F0  EF86  F00C         	goto	u3040
  6308  0018F4  51CD               	movf	(roundf@e+1)& (0+255),w,b
  6309  0018F6  E107               	bnz	u3041
  6310  0018F8  0E7E               	movlw	126
  6311  0018FA  5DCC               	subwf	roundf@e& (0+255),w,b
  6312  0018FC  B0D8               	btfsc	status,0,c
  6313  0018FE  EF83  F00C         	goto	u3041
  6314  001902  EF86  F00C         	goto	u3040
  6315  001906                     u3041:
  6316  001906  FFFF               	dw	65535	; assembler added errata NOP
  6317  001908  EFA3  F00C         	goto	l3032
  6318  00190C                     u3040:
  6319  00190C  FFFF               	dw	65535	; assembler added errata NOP
  6320  00190E                     
  6321                           ; BSR set to: 0
  6322  00190E  C0D2  F01B         	movff	roundf@u,___flmul@b
  6323  001912  C0D3  F01C         	movff	roundf@u+1,___flmul@b+1
  6324  001916  C0D4  F01D         	movff	roundf@u+2,___flmul@b+2
  6325  00191A  C0D5  F01E         	movff	roundf@u+3,___flmul@b+3
  6326  00191E  0E00               	movlw	0
  6327  001920  6E1F               	movwf	___flmul@a^0,c
  6328  001922  0E00               	movlw	0
  6329  001924  6E20               	movwf	(___flmul@a+1)^0,c
  6330  001926  0E00               	movlw	0
  6331  001928  6E21               	movwf	(___flmul@a+2)^0,c
  6332  00192A  0E00               	movlw	0
  6333  00192C  6E22               	movwf	(___flmul@a+3)^0,c
  6334  00192E  EC91  F007         	call	___flmul	;wreg free
  6335  001932  C01B  F0C0         	movff	?___flmul,?_roundf
  6336  001936  C01C  F0C1         	movff	?___flmul+1,?_roundf+1
  6337  00193A  C01D  F0C2         	movff	?___flmul+2,?_roundf+2
  6338  00193E  C01E  F0C3         	movff	?___flmul+3,?_roundf+3
  6339  001942  EFEF  F00D         	goto	l1129
  6340  001946                     l3032:
  6341  001946  FFFF               	dw	65535	; assembler added errata NOP
  6342                           
  6343                           ; BSR set to: 0
  6344  001948  0E00               	movlw	0
  6345  00194A  6E51               	movwf	___fladd@a^0,c
  6346  00194C  0E00               	movlw	0
  6347  00194E  6E52               	movwf	(___fladd@a+1)^0,c
  6348  001950  0E00               	movlw	0
  6349  001952  6E53               	movwf	(___fladd@a+2)^0,c
  6350  001954  0E4B               	movlw	75
  6351  001956  6E54               	movwf	(___fladd@a+3)^0,c
  6352  001958  C0C0  F04D         	movff	roundf@x,___fladd@b
  6353  00195C  C0C1  F04E         	movff	roundf@x+1,___fladd@b+1
  6354  001960  C0C2  F04F         	movff	roundf@x+2,___fladd@b+2
  6355  001964  C0C3  F050         	movff	roundf@x+3,___fladd@b+3
  6356  001968  ECBD  F004         	call	___fladd	;wreg free
  6357  00196C  C04D  F0CE         	movff	?___fladd,_roundf$1737
  6358  001970  C04E  F0CF         	movff	?___fladd+1,_roundf$1737+1
  6359  001974  C04F  F0D0         	movff	?___fladd+2,_roundf$1737+2
  6360  001978  C050  F0D1         	movff	?___fladd+3,_roundf$1737+3
  6361  00197C  0E00               	movlw	0
  6362  00197E  6E51               	movwf	___fladd@a^0,c
  6363  001980  0E00               	movlw	0
  6364  001982  6E52               	movwf	(___fladd@a+1)^0,c
  6365  001984  0E00               	movlw	0
  6366  001986  6E53               	movwf	(___fladd@a+2)^0,c
  6367  001988  0ECB               	movlw	203
  6368  00198A  6E54               	movwf	(___fladd@a+3)^0,c
  6369  00198C  C0CE  F04D         	movff	_roundf$1737,___fladd@b
  6370  001990  C0CF  F04E         	movff	_roundf$1737+1,___fladd@b+1
  6371  001994  C0D0  F04F         	movff	_roundf$1737+2,___fladd@b+2
  6372  001998  C0D1  F050         	movff	_roundf$1737+3,___fladd@b+3
  6373  00199C  ECBD  F004         	call	___fladd	;wreg free
  6374  0019A0  C04D  F0C8         	movff	?___fladd,_roundf$1738
  6375  0019A4  C04E  F0C9         	movff	?___fladd+1,_roundf$1738+1
  6376  0019A8  C04F  F0CA         	movff	?___fladd+2,_roundf$1738+2
  6377  0019AC  C050  F0CB         	movff	?___fladd+3,_roundf$1738+3
  6378  0019B0  C0C8  F05D         	movff	_roundf$1738,___flsub@b
  6379  0019B4  C0C9  F05E         	movff	_roundf$1738+1,___flsub@b+1
  6380  0019B8  C0CA  F05F         	movff	_roundf$1738+2,___flsub@b+2
  6381  0019BC  C0CB  F060         	movff	_roundf$1738+3,___flsub@b+3
  6382  0019C0  C0C0  F061         	movff	roundf@x,___flsub@a
  6383  0019C4  C0C1  F062         	movff	roundf@x+1,___flsub@a+1
  6384  0019C8  C0C2  F063         	movff	roundf@x+2,___flsub@a+2
  6385  0019CC  C0C3  F064         	movff	roundf@x+3,___flsub@a+3
  6386  0019D0  EC4A  F015         	call	___flsub	;wreg free
  6387  0019D4  C05D  F0D6         	movff	?___flsub,roundf@y
  6388  0019D8  C05E  F0D7         	movff	?___flsub+1,roundf@y+1
  6389  0019DC  C05F  F0D8         	movff	?___flsub+2,roundf@y+2
  6390  0019E0  C060  F0D9         	movff	?___flsub+3,roundf@y+3
  6391  0019E4  0E00               	movlw	0
  6392  0019E6  6E71               	movwf	___flge@ff1^0,c
  6393  0019E8  0E00               	movlw	0
  6394  0019EA  6E72               	movwf	(___flge@ff1+1)^0,c
  6395  0019EC  0E00               	movlw	0
  6396  0019EE  6E73               	movwf	(___flge@ff1+2)^0,c
  6397  0019F0  0E3F               	movlw	63
  6398  0019F2  6E74               	movwf	(___flge@ff1+3)^0,c
  6399  0019F4  C0D6  F075         	movff	roundf@y,___flge@ff2
  6400  0019F8  C0D7  F076         	movff	roundf@y+1,___flge@ff2+1
  6401  0019FC  C0D8  F077         	movff	roundf@y+2,___flge@ff2+2
  6402  001A00  C0D9  F078         	movff	roundf@y+3,___flge@ff2+3
  6403  001A04  EC40  F010         	call	___flge	;wreg free
  6404  001A08  B0D8               	btfsc	status,0,c
  6405  001A0A  EF09  F00D         	goto	u3051
  6406  001A0E  EF0C  F00D         	goto	u3050
  6407  001A12                     u3051:
  6408  001A12  FFFF               	dw	65535	; assembler added errata NOP
  6409  001A14  EF43  F00D         	goto	l3036
  6410  001A18                     u3050:
  6411  001A18  FFFF               	dw	65535	; assembler added errata NOP
  6412  001A1A  C0C0  F051         	movff	roundf@x,___fladd@a
  6413  001A1E  C0C1  F052         	movff	roundf@x+1,___fladd@a+1
  6414  001A22  C0C2  F053         	movff	roundf@x+2,___fladd@a+2
  6415  001A26  C0C3  F054         	movff	roundf@x+3,___fladd@a+3
  6416  001A2A  C0D6  F04D         	movff	roundf@y,___fladd@b
  6417  001A2E  C0D7  F04E         	movff	roundf@y+1,___fladd@b+1
  6418  001A32  C0D8  F04F         	movff	roundf@y+2,___fladd@b+2
  6419  001A36  C0D9  F050         	movff	roundf@y+3,___fladd@b+3
  6420  001A3A  ECBD  F004         	call	___fladd	;wreg free
  6421  001A3E  C04D  F0CE         	movff	?___fladd,_roundf$1737
  6422  001A42  C04E  F0CF         	movff	?___fladd+1,_roundf$1737+1
  6423  001A46  C04F  F0D0         	movff	?___fladd+2,_roundf$1737+2
  6424  001A4A  C050  F0D1         	movff	?___fladd+3,_roundf$1737+3
  6425  001A4E  C0CE  F04D         	movff	_roundf$1737,___fladd@b
  6426  001A52  C0CF  F04E         	movff	_roundf$1737+1,___fladd@b+1
  6427  001A56  C0D0  F04F         	movff	_roundf$1737+2,___fladd@b+2
  6428  001A5A  C0D1  F050         	movff	_roundf$1737+3,___fladd@b+3
  6429  001A5E  0E00               	movlw	0
  6430  001A60  6E51               	movwf	___fladd@a^0,c
  6431  001A62  0E00               	movlw	0
  6432  001A64  6E52               	movwf	(___fladd@a+1)^0,c
  6433  001A66  0E80               	movlw	128
  6434  001A68  6E53               	movwf	(___fladd@a+2)^0,c
  6435  001A6A  0EBF               	movlw	191
  6436  001A6C  6E54               	movwf	(___fladd@a+3)^0,c
  6437  001A6E  ECBD  F004         	call	___fladd	;wreg free
  6438  001A72  C04D  F0D6         	movff	?___fladd,roundf@y
  6439  001A76  C04E  F0D7         	movff	?___fladd+1,roundf@y+1
  6440  001A7A  C04F  F0D8         	movff	?___fladd+2,roundf@y+2
  6441  001A7E  C050  F0D9         	movff	?___fladd+3,roundf@y+3
  6442  001A82  EFB0  F00D         	goto	l3042
  6443  001A86                     l3036:
  6444  001A86  FFFF               	dw	65535	; assembler added errata NOP
  6445  001A88  0E00               	movlw	0
  6446  001A8A  6E71               	movwf	___flge@ff1^0,c
  6447  001A8C  0E00               	movlw	0
  6448  001A8E  6E72               	movwf	(___flge@ff1+1)^0,c
  6449  001A90  0E00               	movlw	0
  6450  001A92  6E73               	movwf	(___flge@ff1+2)^0,c
  6451  001A94  0EBF               	movlw	191
  6452  001A96  6E74               	movwf	(___flge@ff1+3)^0,c
  6453  001A98  C0D6  F075         	movff	roundf@y,___flge@ff2
  6454  001A9C  C0D7  F076         	movff	roundf@y+1,___flge@ff2+1
  6455  001AA0  C0D8  F077         	movff	roundf@y+2,___flge@ff2+2
  6456  001AA4  C0D9  F078         	movff	roundf@y+3,___flge@ff2+3
  6457  001AA8  EC40  F010         	call	___flge	;wreg free
  6458  001AAC  A0D8               	btfss	status,0,c
  6459  001AAE  EF5B  F00D         	goto	u3061
  6460  001AB2  EF5E  F00D         	goto	u3060
  6461  001AB6                     u3061:
  6462  001AB6  FFFF               	dw	65535	; assembler added errata NOP
  6463  001AB8  EF95  F00D         	goto	l3040
  6464  001ABC                     u3060:
  6465  001ABC  FFFF               	dw	65535	; assembler added errata NOP
  6466  001ABE  C0C0  F051         	movff	roundf@x,___fladd@a
  6467  001AC2  C0C1  F052         	movff	roundf@x+1,___fladd@a+1
  6468  001AC6  C0C2  F053         	movff	roundf@x+2,___fladd@a+2
  6469  001ACA  C0C3  F054         	movff	roundf@x+3,___fladd@a+3
  6470  001ACE  C0D6  F04D         	movff	roundf@y,___fladd@b
  6471  001AD2  C0D7  F04E         	movff	roundf@y+1,___fladd@b+1
  6472  001AD6  C0D8  F04F         	movff	roundf@y+2,___fladd@b+2
  6473  001ADA  C0D9  F050         	movff	roundf@y+3,___fladd@b+3
  6474  001ADE  ECBD  F004         	call	___fladd	;wreg free
  6475  001AE2  C04D  F0CE         	movff	?___fladd,_roundf$1737
  6476  001AE6  C04E  F0CF         	movff	?___fladd+1,_roundf$1737+1
  6477  001AEA  C04F  F0D0         	movff	?___fladd+2,_roundf$1737+2
  6478  001AEE  C050  F0D1         	movff	?___fladd+3,_roundf$1737+3
  6479  001AF2  C0CE  F04D         	movff	_roundf$1737,___fladd@b
  6480  001AF6  C0CF  F04E         	movff	_roundf$1737+1,___fladd@b+1
  6481  001AFA  C0D0  F04F         	movff	_roundf$1737+2,___fladd@b+2
  6482  001AFE  C0D1  F050         	movff	_roundf$1737+3,___fladd@b+3
  6483  001B02  0E00               	movlw	0
  6484  001B04  6E51               	movwf	___fladd@a^0,c
  6485  001B06  0E00               	movlw	0
  6486  001B08  6E52               	movwf	(___fladd@a+1)^0,c
  6487  001B0A  0E80               	movlw	128
  6488  001B0C  6E53               	movwf	(___fladd@a+2)^0,c
  6489  001B0E  0E3F               	movlw	63
  6490  001B10  6E54               	movwf	(___fladd@a+3)^0,c
  6491  001B12  ECBD  F004         	call	___fladd	;wreg free
  6492  001B16  C04D  F0D6         	movff	?___fladd,roundf@y
  6493  001B1A  C04E  F0D7         	movff	?___fladd+1,roundf@y+1
  6494  001B1E  C04F  F0D8         	movff	?___fladd+2,roundf@y+2
  6495  001B22  C050  F0D9         	movff	?___fladd+3,roundf@y+3
  6496  001B26  EFB0  F00D         	goto	l3042
  6497  001B2A                     l3040:
  6498  001B2A  FFFF               	dw	65535	; assembler added errata NOP
  6499  001B2C  C0D6  F04D         	movff	roundf@y,___fladd@b
  6500  001B30  C0D7  F04E         	movff	roundf@y+1,___fladd@b+1
  6501  001B34  C0D8  F04F         	movff	roundf@y+2,___fladd@b+2
  6502  001B38  C0D9  F050         	movff	roundf@y+3,___fladd@b+3
  6503  001B3C  C0C0  F051         	movff	roundf@x,___fladd@a
  6504  001B40  C0C1  F052         	movff	roundf@x+1,___fladd@a+1
  6505  001B44  C0C2  F053         	movff	roundf@x+2,___fladd@a+2
  6506  001B48  C0C3  F054         	movff	roundf@x+3,___fladd@a+3
  6507  001B4C  ECBD  F004         	call	___fladd	;wreg free
  6508  001B50  C04D  F0D6         	movff	?___fladd,roundf@y
  6509  001B54  C04E  F0D7         	movff	?___fladd+1,roundf@y+1
  6510  001B58  C04F  F0D8         	movff	?___fladd+2,roundf@y+2
  6511  001B5C  C050  F0D9         	movff	?___fladd+3,roundf@y+3
  6512  001B60                     l3042:
  6513  001B60  FFFF               	dw	65535	; assembler added errata NOP
  6514  001B62  C0D2  F0C4         	movff	roundf@u,??_roundf
  6515  001B66  C0D3  F0C5         	movff	roundf@u+1,??_roundf+1
  6516  001B6A  C0D4  F0C6         	movff	roundf@u+2,??_roundf+2
  6517  001B6E  C0D5  F0C7         	movff	roundf@u+3,??_roundf+3
  6518  001B72  0E20               	movlw	32
  6519  001B74  EFC3  F00D         	goto	u3070
  6520  001B78                     u3075:
  6521  001B78  FFFF               	dw	65535	; assembler added errata NOP
  6522  001B7A  0100               	movlb	0	; () banked
  6523  001B7C  90D8               	bcf	status,0,c
  6524  001B7E  33C7               	rrcf	(??_roundf+3)& (0+255),f,b
  6525  001B80  33C6               	rrcf	(??_roundf+2)& (0+255),f,b
  6526  001B82  33C5               	rrcf	(??_roundf+1)& (0+255),f,b
  6527  001B84  33C4               	rrcf	??_roundf& (0+255),f,b
  6528  001B86                     u3070:
  6529  001B86  FFFF               	dw	65535	; assembler added errata NOP
  6530  001B88  2EE8               	decfsz	wreg,f,c
  6531  001B8A  EFBC  F00D         	goto	u3075
  6532  001B8E  51C4               	movf	??_roundf& (0+255),w,b
  6533  001B90  11C5               	iorwf	(??_roundf+1)& (0+255),w,b
  6534  001B92  11C6               	iorwf	(??_roundf+2)& (0+255),w,b
  6535  001B94  11C7               	iorwf	(??_roundf+3)& (0+255),w,b
  6536  001B96  B4D8               	btfsc	status,2,c
  6537  001B98  EFD0  F00D         	goto	u3081
  6538  001B9C  EFD3  F00D         	goto	u3080
  6539  001BA0                     u3081:
  6540  001BA0  FFFF               	dw	65535	; assembler added errata NOP
  6541  001BA2  EFE6  F00D         	goto	l3046
  6542  001BA6                     u3080:
  6543  001BA6  FFFF               	dw	65535	; assembler added errata NOP
  6544  001BA8                     
  6545                           ; BSR set to: 0
  6546  001BA8  C0D6  F001         	movff	roundf@y,___flneg@f1
  6547  001BAC  C0D7  F002         	movff	roundf@y+1,___flneg@f1+1
  6548  001BB0  C0D8  F003         	movff	roundf@y+2,___flneg@f1+2
  6549  001BB4  C0D9  F004         	movff	roundf@y+3,___flneg@f1+3
  6550  001BB8  ECB3  F015         	call	___flneg	;wreg free
  6551  001BBC  C001  F0D6         	movff	?___flneg,roundf@y
  6552  001BC0  C002  F0D7         	movff	?___flneg+1,roundf@y+1
  6553  001BC4  C003  F0D8         	movff	?___flneg+2,roundf@y+2
  6554  001BC8  C004  F0D9         	movff	?___flneg+3,roundf@y+3
  6555  001BCC                     l3046:
  6556  001BCC  FFFF               	dw	65535	; assembler added errata NOP
  6557  001BCE  C0D6  F0C0         	movff	roundf@y,?_roundf
  6558  001BD2  C0D7  F0C1         	movff	roundf@y+1,?_roundf+1
  6559  001BD6  C0D8  F0C2         	movff	roundf@y+2,?_roundf+2
  6560  001BDA  C0D9  F0C3         	movff	roundf@y+3,?_roundf+3
  6561  001BDE                     l1129:
  6562  001BDE  FFFF               	dw	65535	; assembler added errata NOP
  6563  001BE0  0012               	return		;funcret
  6564  001BE2  FFFF               	dw	65535	; errata NOP
  6565  001BE4                     __end_of_roundf:
  6566                           	callstack 0
  6567                           
  6568 ;; *************** function ___flsub *****************
  6569 ;; Defined at:
  6570 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  6571 ;; Parameters:    Size  Location     Type
  6572 ;;  b               4   92[COMRAM] float 
  6573 ;;  a               4   96[COMRAM] float 
  6574 ;; Auto vars:     Size  Location     Type
  6575 ;;		None
  6576 ;; Return value:  Size  Location     Type
  6577 ;;                  4   92[COMRAM] float 
  6578 ;; Registers used:
  6579 ;;		wreg, status,2, status,0, cstack
  6580 ;; Tracked objects:
  6581 ;;		On entry : 0/0
  6582 ;;		On exit  : 0/0
  6583 ;;		Unchanged: 0/0
  6584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6585 ;;      Params:         8       0       0       0       0       0       0
  6586 ;;      Locals:         0       0       0       0       0       0       0
  6587 ;;      Temps:          0       0       0       0       0       0       0
  6588 ;;      Totals:         8       0       0       0       0       0       0
  6589 ;;Total ram usage:        8 bytes
  6590 ;; Hardware stack levels used:    1
  6591 ;; Hardware stack levels required when called:    2
  6592 ;; This function calls:
  6593 ;;		___fladd
  6594 ;; This function is called by:
  6595 ;;		_roundf
  6596 ;; This function uses a non-reentrant model
  6597 ;;
  6598                           
  6599                           	psect	text25
  6600  002A94                     __ptext25:
  6601                           	callstack 0
  6602  002A94                     ___flsub:
  6603                           	callstack 0
  6604  002A94  FFFF               	dw	65535	; assembler added errata NOP
  6605  002A96  0E00               	movlw	0
  6606  002A98  1A61               	xorwf	___flsub@a^0,f,c
  6607  002A9A  0E00               	movlw	0
  6608  002A9C  1A62               	xorwf	(___flsub@a+1)^0,f,c
  6609  002A9E  0E00               	movlw	0
  6610  002AA0  1A63               	xorwf	(___flsub@a+2)^0,f,c
  6611  002AA2  0E80               	movlw	128
  6612  002AA4  1A64               	xorwf	(___flsub@a+3)^0,f,c
  6613  002AA6  C05D  F04D         	movff	___flsub@b,___fladd@b
  6614  002AAA  C05E  F04E         	movff	___flsub@b+1,___fladd@b+1
  6615  002AAE  C05F  F04F         	movff	___flsub@b+2,___fladd@b+2
  6616  002AB2  C060  F050         	movff	___flsub@b+3,___fladd@b+3
  6617  002AB6  C061  F051         	movff	___flsub@a,___fladd@a
  6618  002ABA  C062  F052         	movff	___flsub@a+1,___fladd@a+1
  6619  002ABE  C063  F053         	movff	___flsub@a+2,___fladd@a+2
  6620  002AC2  C064  F054         	movff	___flsub@a+3,___fladd@a+3
  6621  002AC6  ECBD  F004         	call	___fladd	;wreg free
  6622  002ACA  C04D  F05D         	movff	?___fladd,?___flsub
  6623  002ACE  C04E  F05E         	movff	?___fladd+1,?___flsub+1
  6624  002AD2  C04F  F05F         	movff	?___fladd+2,?___flsub+2
  6625  002AD6  C050  F060         	movff	?___fladd+3,?___flsub+3
  6626  002ADA  0012               	return		;funcret
  6627  002ADC  FFFF               	dw	65535	; errata NOP
  6628  002ADE                     __end_of___flsub:
  6629                           	callstack 0
  6630                           
  6631 ;; *************** function ___fladd *****************
  6632 ;; Defined at:
  6633 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;  b               4   76[COMRAM] float 
  6636 ;;  a               4   80[COMRAM] float 
  6637 ;; Auto vars:     Size  Location     Type
  6638 ;;  grs             1   91[COMRAM] unsigned char 
  6639 ;;  bexp            1   90[COMRAM] unsigned char 
  6640 ;;  aexp            1   89[COMRAM] unsigned char 
  6641 ;;  signs           1   88[COMRAM] unsigned char 
  6642 ;; Return value:  Size  Location     Type
  6643 ;;                  4   76[COMRAM] unsigned char 
  6644 ;; Registers used:
  6645 ;;		wreg, status,2, status,0
  6646 ;; Tracked objects:
  6647 ;;		On entry : 0/0
  6648 ;;		On exit  : 0/0
  6649 ;;		Unchanged: 0/0
  6650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6651 ;;      Params:         8       0       0       0       0       0       0
  6652 ;;      Locals:         4       0       0       0       0       0       0
  6653 ;;      Temps:          4       0       0       0       0       0       0
  6654 ;;      Totals:        16       0       0       0       0       0       0
  6655 ;;Total ram usage:       16 bytes
  6656 ;; Hardware stack levels used:    1
  6657 ;; Hardware stack levels required when called:    1
  6658 ;; This function calls:
  6659 ;;		Nothing
  6660 ;; This function is called by:
  6661 ;;		_init_timer_2
  6662 ;;		___flsub
  6663 ;;		_roundf
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           
  6667                           	psect	text26
  6668  00097A                     __ptext26:
  6669                           	callstack 0
  6670  00097A                     ___fladd:
  6671                           	callstack 0
  6672  00097A  FFFF               	dw	65535	; assembler added errata NOP
  6673  00097C  5050               	movf	(___fladd@b+3)^0,w,c
  6674  00097E  0B80               	andlw	128
  6675  000980  6E59               	movwf	___fladd@signs^0,c
  6676  000982  5050               	movf	(___fladd@b+3)^0,w,c
  6677  000984  2450               	addwf	(___fladd@b+3)^0,w,c
  6678  000986  6E5B               	movwf	___fladd@bexp^0,c
  6679  000988  AE4F               	btfss	(___fladd@b+2)^0,7,c
  6680  00098A  EFC9  F004         	goto	u1961
  6681  00098E  EFCC  F004         	goto	u1960
  6682  000992                     u1961:
  6683  000992  FFFF               	dw	65535	; assembler added errata NOP
  6684  000994  EFCE  F004         	goto	l2412
  6685  000998                     u1960:
  6686  000998  FFFF               	dw	65535	; assembler added errata NOP
  6687  00099A  805B               	bsf	___fladd@bexp^0,0,c
  6688  00099C                     l2412:
  6689  00099C  FFFF               	dw	65535	; assembler added errata NOP
  6690  00099E  505B               	movf	___fladd@bexp^0,w,c
  6691  0009A0  B4D8               	btfsc	status,2,c
  6692  0009A2  EFD5  F004         	goto	u1971
  6693  0009A6  EFD8  F004         	goto	u1970
  6694  0009AA                     u1971:
  6695  0009AA  FFFF               	dw	65535	; assembler added errata NOP
  6696  0009AC  EFF1  F004         	goto	l2422
  6697  0009B0                     u1970:
  6698  0009B0  FFFF               	dw	65535	; assembler added errata NOP
  6699  0009B2  285B               	incf	___fladd@bexp^0,w,c
  6700  0009B4  A4D8               	btfss	status,2,c
  6701  0009B6  EFDF  F004         	goto	u1981
  6702  0009BA  EFE2  F004         	goto	u1980
  6703  0009BE                     u1981:
  6704  0009BE  FFFF               	dw	65535	; assembler added errata NOP
  6705  0009C0  EFEB  F004         	goto	l2418
  6706  0009C4                     u1980:
  6707  0009C4  FFFF               	dw	65535	; assembler added errata NOP
  6708  0009C6  0E00               	movlw	0
  6709  0009C8  6E4D               	movwf	___fladd@b^0,c
  6710  0009CA  0E00               	movlw	0
  6711  0009CC  6E4E               	movwf	(___fladd@b+1)^0,c
  6712  0009CE  0E00               	movlw	0
  6713  0009D0  6E4F               	movwf	(___fladd@b+2)^0,c
  6714  0009D2  0E00               	movlw	0
  6715  0009D4  6E50               	movwf	(___fladd@b+3)^0,c
  6716  0009D6                     l2418:
  6717  0009D6  FFFF               	dw	65535	; assembler added errata NOP
  6718  0009D8  8E4F               	bsf	(___fladd@b+2)^0,7,c
  6719  0009DA  0E00               	movlw	0
  6720  0009DC  6E50               	movwf	(___fladd@b+3)^0,c
  6721  0009DE  EFFA  F004         	goto	l2424
  6722  0009E2                     l2422:
  6723  0009E2  FFFF               	dw	65535	; assembler added errata NOP
  6724  0009E4  0E00               	movlw	0
  6725  0009E6  6E4D               	movwf	___fladd@b^0,c
  6726  0009E8  0E00               	movlw	0
  6727  0009EA  6E4E               	movwf	(___fladd@b+1)^0,c
  6728  0009EC  0E00               	movlw	0
  6729  0009EE  6E4F               	movwf	(___fladd@b+2)^0,c
  6730  0009F0  0E00               	movlw	0
  6731  0009F2  6E50               	movwf	(___fladd@b+3)^0,c
  6732  0009F4                     l2424:
  6733  0009F4  FFFF               	dw	65535	; assembler added errata NOP
  6734  0009F6  5054               	movf	(___fladd@a+3)^0,w,c
  6735  0009F8  0B80               	andlw	128
  6736  0009FA  6E5A               	movwf	___fladd@aexp^0,c
  6737  0009FC  5059               	movf	___fladd@signs^0,w,c
  6738  0009FE  185A               	xorwf	___fladd@aexp^0,w,c
  6739  000A00  B4D8               	btfsc	status,2,c
  6740  000A02  EF05  F005         	goto	u1991
  6741  000A06  EF08  F005         	goto	u1990
  6742  000A0A                     u1991:
  6743  000A0A  FFFF               	dw	65535	; assembler added errata NOP
  6744  000A0C  EF0A  F005         	goto	l2430
  6745  000A10                     u1990:
  6746  000A10  FFFF               	dw	65535	; assembler added errata NOP
  6747  000A12  8C59               	bsf	___fladd@signs^0,6,c
  6748  000A14                     l2430:
  6749  000A14  FFFF               	dw	65535	; assembler added errata NOP
  6750  000A16  5054               	movf	(___fladd@a+3)^0,w,c
  6751  000A18  2454               	addwf	(___fladd@a+3)^0,w,c
  6752  000A1A  6E5A               	movwf	___fladd@aexp^0,c
  6753  000A1C  AE53               	btfss	(___fladd@a+2)^0,7,c
  6754  000A1E  EF13  F005         	goto	u2001
  6755  000A22  EF16  F005         	goto	u2000
  6756  000A26                     u2001:
  6757  000A26  FFFF               	dw	65535	; assembler added errata NOP
  6758  000A28  EF18  F005         	goto	l2436
  6759  000A2C                     u2000:
  6760  000A2C  FFFF               	dw	65535	; assembler added errata NOP
  6761  000A2E  805A               	bsf	___fladd@aexp^0,0,c
  6762  000A30                     l2436:
  6763  000A30  FFFF               	dw	65535	; assembler added errata NOP
  6764  000A32  505A               	movf	___fladd@aexp^0,w,c
  6765  000A34  B4D8               	btfsc	status,2,c
  6766  000A36  EF1F  F005         	goto	u2011
  6767  000A3A  EF22  F005         	goto	u2010
  6768  000A3E                     u2011:
  6769  000A3E  FFFF               	dw	65535	; assembler added errata NOP
  6770  000A40  EF3B  F005         	goto	l2446
  6771  000A44                     u2010:
  6772  000A44  FFFF               	dw	65535	; assembler added errata NOP
  6773  000A46  285A               	incf	___fladd@aexp^0,w,c
  6774  000A48  A4D8               	btfss	status,2,c
  6775  000A4A  EF29  F005         	goto	u2021
  6776  000A4E  EF2C  F005         	goto	u2020
  6777  000A52                     u2021:
  6778  000A52  FFFF               	dw	65535	; assembler added errata NOP
  6779  000A54  EF35  F005         	goto	l2442
  6780  000A58                     u2020:
  6781  000A58  FFFF               	dw	65535	; assembler added errata NOP
  6782  000A5A  0E00               	movlw	0
  6783  000A5C  6E51               	movwf	___fladd@a^0,c
  6784  000A5E  0E00               	movlw	0
  6785  000A60  6E52               	movwf	(___fladd@a+1)^0,c
  6786  000A62  0E00               	movlw	0
  6787  000A64  6E53               	movwf	(___fladd@a+2)^0,c
  6788  000A66  0E00               	movlw	0
  6789  000A68  6E54               	movwf	(___fladd@a+3)^0,c
  6790  000A6A                     l2442:
  6791  000A6A  FFFF               	dw	65535	; assembler added errata NOP
  6792  000A6C  8E53               	bsf	(___fladd@a+2)^0,7,c
  6793  000A6E  0E00               	movlw	0
  6794  000A70  6E54               	movwf	(___fladd@a+3)^0,c
  6795  000A72  EF44  F005         	goto	l2448
  6796  000A76                     l2446:
  6797  000A76  FFFF               	dw	65535	; assembler added errata NOP
  6798  000A78  0E00               	movlw	0
  6799  000A7A  6E51               	movwf	___fladd@a^0,c
  6800  000A7C  0E00               	movlw	0
  6801  000A7E  6E52               	movwf	(___fladd@a+1)^0,c
  6802  000A80  0E00               	movlw	0
  6803  000A82  6E53               	movwf	(___fladd@a+2)^0,c
  6804  000A84  0E00               	movlw	0
  6805  000A86  6E54               	movwf	(___fladd@a+3)^0,c
  6806  000A88                     l2448:
  6807  000A88  FFFF               	dw	65535	; assembler added errata NOP
  6808  000A8A  505B               	movf	___fladd@bexp^0,w,c
  6809  000A8C  5C5A               	subwf	___fladd@aexp^0,w,c
  6810  000A8E  B0D8               	btfsc	status,0,c
  6811  000A90  EF4C  F005         	goto	u2031
  6812  000A94  EF4F  F005         	goto	u2030
  6813  000A98                     u2031:
  6814  000A98  FFFF               	dw	65535	; assembler added errata NOP
  6815  000A9A  EF7A  F005         	goto	l2484
  6816  000A9E                     u2030:
  6817  000A9E  FFFF               	dw	65535	; assembler added errata NOP
  6818  000AA0  AC59               	btfss	___fladd@signs^0,6,c
  6819  000AA2  EF55  F005         	goto	u2041
  6820  000AA6  EF58  F005         	goto	u2040
  6821  000AAA                     u2041:
  6822  000AAA  FFFF               	dw	65535	; assembler added errata NOP
  6823  000AAC  EF5B  F005         	goto	l2454
  6824  000AB0                     u2040:
  6825  000AB0  FFFF               	dw	65535	; assembler added errata NOP
  6826  000AB2  0E80               	movlw	128
  6827  000AB4  1A59               	xorwf	___fladd@signs^0,f,c
  6828  000AB6                     l2454:
  6829  000AB6  FFFF               	dw	65535	; assembler added errata NOP
  6830  000AB8  C05B  F05C         	movff	___fladd@bexp,___fladd@grs
  6831  000ABC  C05A  F05B         	movff	___fladd@aexp,___fladd@bexp
  6832  000AC0  C05C  F05A         	movff	___fladd@grs,___fladd@aexp
  6833  000AC4  C04D  F05C         	movff	___fladd@b,___fladd@grs
  6834  000AC8  C051  F04D         	movff	___fladd@a,___fladd@b
  6835  000ACC  C05C  F051         	movff	___fladd@grs,___fladd@a
  6836  000AD0  C04E  F05C         	movff	___fladd@b+1,___fladd@grs
  6837  000AD4  C052  F04E         	movff	___fladd@a+1,___fladd@b+1
  6838  000AD8  C05C  F052         	movff	___fladd@grs,___fladd@a+1
  6839  000ADC  C04F  F05C         	movff	___fladd@b+2,___fladd@grs
  6840  000AE0  C053  F04F         	movff	___fladd@a+2,___fladd@b+2
  6841  000AE4  C05C  F053         	movff	___fladd@grs,___fladd@a+2
  6842  000AE8  C050  F05C         	movff	___fladd@b+3,___fladd@grs
  6843  000AEC  C054  F050         	movff	___fladd@a+3,___fladd@b+3
  6844  000AF0  C05C  F054         	movff	___fladd@grs,___fladd@a+3
  6845  000AF4                     l2484:
  6846  000AF4  FFFF               	dw	65535	; assembler added errata NOP
  6847  000AF6  0E00               	movlw	0
  6848  000AF8  6E5C               	movwf	___fladd@grs^0,c
  6849  000AFA  505B               	movf	___fladd@bexp^0,w,c
  6850  000AFC  C05A  F055         	movff	___fladd@aexp,??___fladd
  6851  000B00  6A56               	clrf	(??___fladd+1)^0,c
  6852  000B02  5E55               	subwf	??___fladd^0,f,c
  6853  000B04  0E00               	movlw	0
  6854  000B06  5A56               	subwfb	(??___fladd+1)^0,f,c
  6855  000B08  BE56               	btfsc	(??___fladd+1)^0,7,c
  6856  000B0A  EF90  F005         	goto	u2051
  6857  000B0E  5056               	movf	(??___fladd+1)^0,w,c
  6858  000B10  E10A               	bnz	u2050
  6859  000B12  0E1A               	movlw	26
  6860  000B14  5C55               	subwf	??___fladd^0,w,c
  6861  000B16  A0D8               	btfss	status,0,c
  6862  000B18  EF90  F005         	goto	u2051
  6863  000B1C  EF93  F005         	goto	u2050
  6864  000B20                     u2051:
  6865  000B20  FFFF               	dw	65535	; assembler added errata NOP
  6866  000B22  EFD6  F005         	goto	l972
  6867  000B26                     u2050:
  6868  000B26  FFFF               	dw	65535	; assembler added errata NOP
  6869  000B28  504D               	movf	___fladd@b^0,w,c
  6870  000B2A  104E               	iorwf	(___fladd@b+1)^0,w,c
  6871  000B2C  104F               	iorwf	(___fladd@b+2)^0,w,c
  6872  000B2E  1050               	iorwf	(___fladd@b+3)^0,w,c
  6873  000B30  A4D8               	btfss	status,2,c
  6874  000B32  EF9D  F005         	goto	u2061
  6875  000B36  EFA1  F005         	goto	u2060
  6876  000B3A                     u2061:
  6877  000B3A  FFFF               	dw	65535	; assembler added errata NOP
  6878  000B3C  0E01               	movlw	1
  6879  000B3E  EFA3  F005         	goto	u2070
  6880  000B42                     u2060:
  6881  000B42  FFFF               	dw	65535	; assembler added errata NOP
  6882  000B44  0E00               	movlw	0
  6883  000B46                     u2070:
  6884  000B46  FFFF               	dw	65535	; assembler added errata NOP
  6885  000B48  6E5C               	movwf	___fladd@grs^0,c
  6886  000B4A  0E00               	movlw	0
  6887  000B4C  6E4D               	movwf	___fladd@b^0,c
  6888  000B4E  0E00               	movlw	0
  6889  000B50  6E4E               	movwf	(___fladd@b+1)^0,c
  6890  000B52  0E00               	movlw	0
  6891  000B54  6E4F               	movwf	(___fladd@b+2)^0,c
  6892  000B56  0E00               	movlw	0
  6893  000B58  6E50               	movwf	(___fladd@b+3)^0,c
  6894  000B5A  C05A  F05B         	movff	___fladd@aexp,___fladd@bexp
  6895  000B5E  EFE1  F005         	goto	l971
  6896  000B62                     l973:
  6897  000B62  FFFF               	dw	65535	; assembler added errata NOP
  6898  000B64  A05C               	btfss	___fladd@grs^0,0,c
  6899  000B66  EFB7  F005         	goto	u2081
  6900  000B6A  EFBA  F005         	goto	u2080
  6901  000B6E                     u2081:
  6902  000B6E  FFFF               	dw	65535	; assembler added errata NOP
  6903  000B70  EFC1  F005         	goto	l2496
  6904  000B74                     u2080:
  6905  000B74  FFFF               	dw	65535	; assembler added errata NOP
  6906  000B76  90D8               	bcf	status,0,c
  6907  000B78  305C               	rrcf	___fladd@grs^0,w,c
  6908  000B7A  0901               	iorlw	1
  6909  000B7C  6E5C               	movwf	___fladd@grs^0,c
  6910  000B7E  EFC4  F005         	goto	l2498
  6911  000B82                     l2496:
  6912  000B82  FFFF               	dw	65535	; assembler added errata NOP
  6913  000B84  90D8               	bcf	status,0,c
  6914  000B86  325C               	rrcf	___fladd@grs^0,f,c
  6915  000B88                     l2498:
  6916  000B88  FFFF               	dw	65535	; assembler added errata NOP
  6917  000B8A  A04D               	btfss	___fladd@b^0,0,c
  6918  000B8C  EFCA  F005         	goto	u2091
  6919  000B90  EFCD  F005         	goto	u2090
  6920  000B94                     u2091:
  6921  000B94  FFFF               	dw	65535	; assembler added errata NOP
  6922  000B96  EFCF  F005         	goto	l2502
  6923  000B9A                     u2090:
  6924  000B9A  FFFF               	dw	65535	; assembler added errata NOP
  6925  000B9C  8E5C               	bsf	___fladd@grs^0,7,c
  6926  000B9E                     l2502:
  6927  000B9E  FFFF               	dw	65535	; assembler added errata NOP
  6928  000BA0  3450               	rlcf	(___fladd@b+3)^0,w,c
  6929  000BA2  3250               	rrcf	(___fladd@b+3)^0,f,c
  6930  000BA4  324F               	rrcf	(___fladd@b+2)^0,f,c
  6931  000BA6  324E               	rrcf	(___fladd@b+1)^0,f,c
  6932  000BA8  324D               	rrcf	___fladd@b^0,f,c
  6933  000BAA  2A5B               	incf	___fladd@bexp^0,f,c
  6934  000BAC                     l972:
  6935  000BAC  FFFF               	dw	65535	; assembler added errata NOP
  6936  000BAE  505A               	movf	___fladd@aexp^0,w,c
  6937  000BB0  5C5B               	subwf	___fladd@bexp^0,w,c
  6938  000BB2  A0D8               	btfss	status,0,c
  6939  000BB4  EFDE  F005         	goto	u2101
  6940  000BB8  EFE1  F005         	goto	u2100
  6941  000BBC                     u2101:
  6942  000BBC  FFFF               	dw	65535	; assembler added errata NOP
  6943  000BBE  EFB1  F005         	goto	l973
  6944  000BC2                     u2100:
  6945  000BC2                     l971:
  6946  000BC2  FFFF               	dw	65535	; assembler added errata NOP
  6947  000BC4  BC59               	btfsc	___fladd@signs^0,6,c
  6948  000BC6  EFE7  F005         	goto	u2111
  6949  000BCA  EFEA  F005         	goto	u2110
  6950  000BCE                     u2111:
  6951  000BCE  FFFF               	dw	65535	; assembler added errata NOP
  6952  000BD0  EF37  F006         	goto	l2530
  6953  000BD4                     u2110:
  6954  000BD4  FFFF               	dw	65535	; assembler added errata NOP
  6955  000BD6  505B               	movf	___fladd@bexp^0,w,c
  6956  000BD8  A4D8               	btfss	status,2,c
  6957  000BDA  EFF1  F005         	goto	u2121
  6958  000BDE  EFF4  F005         	goto	u2120
  6959  000BE2                     u2121:
  6960  000BE2  FFFF               	dw	65535	; assembler added errata NOP
  6961  000BE4  EFFF  F005         	goto	l2512
  6962  000BE8                     u2120:
  6963  000BE8  FFFF               	dw	65535	; assembler added errata NOP
  6964  000BEA  0E00               	movlw	0
  6965  000BEC  6E4D               	movwf	?___fladd^0,c
  6966  000BEE  0E00               	movlw	0
  6967  000BF0  6E4E               	movwf	(?___fladd+1)^0,c
  6968  000BF2  0E00               	movlw	0
  6969  000BF4  6E4F               	movwf	(?___fladd+2)^0,c
  6970  000BF6  0E00               	movlw	0
  6971  000BF8  6E50               	movwf	(?___fladd+3)^0,c
  6972  000BFA  EF8E  F007         	goto	l980
  6973  000BFE                     l2512:
  6974  000BFE  FFFF               	dw	65535	; assembler added errata NOP
  6975  000C00  5051               	movf	___fladd@a^0,w,c
  6976  000C02  264D               	addwf	___fladd@b^0,f,c
  6977  000C04  5052               	movf	(___fladd@a+1)^0,w,c
  6978  000C06  224E               	addwfc	(___fladd@b+1)^0,f,c
  6979  000C08  5053               	movf	(___fladd@a+2)^0,w,c
  6980  000C0A  224F               	addwfc	(___fladd@b+2)^0,f,c
  6981  000C0C  5054               	movf	(___fladd@a+3)^0,w,c
  6982  000C0E  2250               	addwfc	(___fladd@b+3)^0,f,c
  6983  000C10  A050               	btfss	(___fladd@b+3)^0,0,c
  6984  000C12  EF0D  F006         	goto	u2131
  6985  000C16  EF10  F006         	goto	u2130
  6986  000C1A                     u2131:
  6987  000C1A  FFFF               	dw	65535	; assembler added errata NOP
  6988  000C1C  EFDB  F006         	goto	l2566
  6989  000C20                     u2130:
  6990  000C20  FFFF               	dw	65535	; assembler added errata NOP
  6991  000C22  A05C               	btfss	___fladd@grs^0,0,c
  6992  000C24  EF16  F006         	goto	u2141
  6993  000C28  EF19  F006         	goto	u2140
  6994  000C2C                     u2141:
  6995  000C2C  FFFF               	dw	65535	; assembler added errata NOP
  6996  000C2E  EF20  F006         	goto	l2520
  6997  000C32                     u2140:
  6998  000C32  FFFF               	dw	65535	; assembler added errata NOP
  6999  000C34  90D8               	bcf	status,0,c
  7000  000C36  305C               	rrcf	___fladd@grs^0,w,c
  7001  000C38  0901               	iorlw	1
  7002  000C3A  6E5C               	movwf	___fladd@grs^0,c
  7003  000C3C  EF23  F006         	goto	l2522
  7004  000C40                     l2520:
  7005  000C40  FFFF               	dw	65535	; assembler added errata NOP
  7006  000C42  90D8               	bcf	status,0,c
  7007  000C44  325C               	rrcf	___fladd@grs^0,f,c
  7008  000C46                     l2522:
  7009  000C46  FFFF               	dw	65535	; assembler added errata NOP
  7010  000C48  A04D               	btfss	___fladd@b^0,0,c
  7011  000C4A  EF29  F006         	goto	u2151
  7012  000C4E  EF2C  F006         	goto	u2150
  7013  000C52                     u2151:
  7014  000C52  FFFF               	dw	65535	; assembler added errata NOP
  7015  000C54  EF2E  F006         	goto	l2526
  7016  000C58                     u2150:
  7017  000C58  FFFF               	dw	65535	; assembler added errata NOP
  7018  000C5A  8E5C               	bsf	___fladd@grs^0,7,c
  7019  000C5C                     l2526:
  7020  000C5C  FFFF               	dw	65535	; assembler added errata NOP
  7021  000C5E  3450               	rlcf	(___fladd@b+3)^0,w,c
  7022  000C60  3250               	rrcf	(___fladd@b+3)^0,f,c
  7023  000C62  324F               	rrcf	(___fladd@b+2)^0,f,c
  7024  000C64  324E               	rrcf	(___fladd@b+1)^0,f,c
  7025  000C66  324D               	rrcf	___fladd@b^0,f,c
  7026  000C68  2A5B               	incf	___fladd@bexp^0,f,c
  7027  000C6A  EFDB  F006         	goto	l2566
  7028  000C6E                     l2530:
  7029  000C6E  FFFF               	dw	65535	; assembler added errata NOP
  7030  000C70  5051               	movf	___fladd@a^0,w,c
  7031  000C72  5C4D               	subwf	___fladd@b^0,w,c
  7032  000C74  5052               	movf	(___fladd@a+1)^0,w,c
  7033  000C76  584E               	subwfb	(___fladd@b+1)^0,w,c
  7034  000C78  5053               	movf	(___fladd@a+2)^0,w,c
  7035  000C7A  584F               	subwfb	(___fladd@b+2)^0,w,c
  7036  000C7C  5050               	movf	(___fladd@b+3)^0,w,c
  7037  000C7E  0A80               	xorlw	128
  7038  000C80  6E55               	movwf	??___fladd^0,c
  7039  000C82  5054               	movf	(___fladd@a+3)^0,w,c
  7040  000C84  0A80               	xorlw	128
  7041  000C86  5855               	subwfb	??___fladd^0,w,c
  7042  000C88  B0D8               	btfsc	status,0,c
  7043  000C8A  EF49  F006         	goto	u2161
  7044  000C8E  EF4C  F006         	goto	u2160
  7045  000C92                     u2161:
  7046  000C92  FFFF               	dw	65535	; assembler added errata NOP
  7047  000C94  EF7A  F006         	goto	l2540
  7048  000C98                     u2160:
  7049  000C98  FFFF               	dw	65535	; assembler added errata NOP
  7050  000C9A  504D               	movf	___fladd@b^0,w,c
  7051  000C9C  5C51               	subwf	___fladd@a^0,w,c
  7052  000C9E  6E55               	movwf	??___fladd^0,c
  7053  000CA0  504E               	movf	(___fladd@b+1)^0,w,c
  7054  000CA2  5852               	subwfb	(___fladd@a+1)^0,w,c
  7055  000CA4  6E56               	movwf	(??___fladd+1)^0,c
  7056  000CA6  504F               	movf	(___fladd@b+2)^0,w,c
  7057  000CA8  5853               	subwfb	(___fladd@a+2)^0,w,c
  7058  000CAA  6E57               	movwf	(??___fladd+2)^0,c
  7059  000CAC  5050               	movf	(___fladd@b+3)^0,w,c
  7060  000CAE  5854               	subwfb	(___fladd@a+3)^0,w,c
  7061  000CB0  6E58               	movwf	(??___fladd+3)^0,c
  7062  000CB2  0EFF               	movlw	255
  7063  000CB4  2455               	addwf	??___fladd^0,w,c
  7064  000CB6  6E4D               	movwf	___fladd@b^0,c
  7065  000CB8  0EFF               	movlw	255
  7066  000CBA  2056               	addwfc	(??___fladd+1)^0,w,c
  7067  000CBC  6E4E               	movwf	(___fladd@b+1)^0,c
  7068  000CBE  0EFF               	movlw	255
  7069  000CC0  2057               	addwfc	(??___fladd+2)^0,w,c
  7070  000CC2  6E4F               	movwf	(___fladd@b+2)^0,c
  7071  000CC4  0EFF               	movlw	255
  7072  000CC6  2058               	addwfc	(??___fladd+3)^0,w,c
  7073  000CC8  6E50               	movwf	(___fladd@b+3)^0,c
  7074  000CCA  0E80               	movlw	128
  7075  000CCC  1A59               	xorwf	___fladd@signs^0,f,c
  7076  000CCE  6C5C               	negf	___fladd@grs^0,c
  7077  000CD0  505C               	movf	___fladd@grs^0,w,c
  7078  000CD2  A4D8               	btfss	status,2,c
  7079  000CD4  EF6E  F006         	goto	u2171
  7080  000CD8  EF71  F006         	goto	u2170
  7081  000CDC                     u2171:
  7082  000CDC  FFFF               	dw	65535	; assembler added errata NOP
  7083  000CDE  EF83  F006         	goto	l988
  7084  000CE2                     u2170:
  7085  000CE2  FFFF               	dw	65535	; assembler added errata NOP
  7086  000CE4  0E01               	movlw	1
  7087  000CE6  264D               	addwf	___fladd@b^0,f,c
  7088  000CE8  0E00               	movlw	0
  7089  000CEA  224E               	addwfc	(___fladd@b+1)^0,f,c
  7090  000CEC  224F               	addwfc	(___fladd@b+2)^0,f,c
  7091  000CEE  2250               	addwfc	(___fladd@b+3)^0,f,c
  7092  000CF0  EF83  F006         	goto	l988
  7093  000CF4                     l2540:
  7094  000CF4  FFFF               	dw	65535	; assembler added errata NOP
  7095  000CF6  5051               	movf	___fladd@a^0,w,c
  7096  000CF8  5E4D               	subwf	___fladd@b^0,f,c
  7097  000CFA  5052               	movf	(___fladd@a+1)^0,w,c
  7098  000CFC  5A4E               	subwfb	(___fladd@b+1)^0,f,c
  7099  000CFE  5053               	movf	(___fladd@a+2)^0,w,c
  7100  000D00  5A4F               	subwfb	(___fladd@b+2)^0,f,c
  7101  000D02  5054               	movf	(___fladd@a+3)^0,w,c
  7102  000D04  5A50               	subwfb	(___fladd@b+3)^0,f,c
  7103  000D06                     l988:
  7104  000D06  FFFF               	dw	65535	; assembler added errata NOP
  7105  000D08  504D               	movf	___fladd@b^0,w,c
  7106  000D0A  104E               	iorwf	(___fladd@b+1)^0,w,c
  7107  000D0C  104F               	iorwf	(___fladd@b+2)^0,w,c
  7108  000D0E  1050               	iorwf	(___fladd@b+3)^0,w,c
  7109  000D10  A4D8               	btfss	status,2,c
  7110  000D12  EF8D  F006         	goto	u2181
  7111  000D16  EF90  F006         	goto	u2180
  7112  000D1A                     u2181:
  7113  000D1A  FFFF               	dw	65535	; assembler added errata NOP
  7114  000D1C  EFD2  F006         	goto	l2564
  7115  000D20                     u2180:
  7116  000D20  FFFF               	dw	65535	; assembler added errata NOP
  7117  000D22  505C               	movf	___fladd@grs^0,w,c
  7118  000D24  A4D8               	btfss	status,2,c
  7119  000D26  EF97  F006         	goto	u2191
  7120  000D2A  EF9A  F006         	goto	u2190
  7121  000D2E                     u2191:
  7122  000D2E  FFFF               	dw	65535	; assembler added errata NOP
  7123  000D30  EFD2  F006         	goto	l2564
  7124  000D34                     u2190:
  7125  000D34  FFFF               	dw	65535	; assembler added errata NOP
  7126  000D36  0E00               	movlw	0
  7127  000D38  6E4D               	movwf	?___fladd^0,c
  7128  000D3A  0E00               	movlw	0
  7129  000D3C  6E4E               	movwf	(?___fladd+1)^0,c
  7130  000D3E  0E00               	movlw	0
  7131  000D40  6E4F               	movwf	(?___fladd+2)^0,c
  7132  000D42  0E00               	movlw	0
  7133  000D44  6E50               	movwf	(?___fladd+3)^0,c
  7134  000D46  EF8E  F007         	goto	l980
  7135  000D4A                     l2548:
  7136  000D4A  FFFF               	dw	65535	; assembler added errata NOP
  7137  000D4C  90D8               	bcf	status,0,c
  7138  000D4E  364D               	rlcf	___fladd@b^0,f,c
  7139  000D50  364E               	rlcf	(___fladd@b+1)^0,f,c
  7140  000D52  364F               	rlcf	(___fladd@b+2)^0,f,c
  7141  000D54  3650               	rlcf	(___fladd@b+3)^0,f,c
  7142  000D56  AE5C               	btfss	___fladd@grs^0,7,c
  7143  000D58  EFB0  F006         	goto	u2201
  7144  000D5C  EFB3  F006         	goto	u2200
  7145  000D60                     u2201:
  7146  000D60  FFFF               	dw	65535	; assembler added errata NOP
  7147  000D62  EFB5  F006         	goto	l2554
  7148  000D66                     u2200:
  7149  000D66  FFFF               	dw	65535	; assembler added errata NOP
  7150  000D68  804D               	bsf	___fladd@b^0,0,c
  7151  000D6A                     l2554:
  7152  000D6A  FFFF               	dw	65535	; assembler added errata NOP
  7153  000D6C  A05C               	btfss	___fladd@grs^0,0,c
  7154  000D6E  EFBB  F006         	goto	u2211
  7155  000D72  EFBE  F006         	goto	u2210
  7156  000D76                     u2211:
  7157  000D76  FFFF               	dw	65535	; assembler added errata NOP
  7158  000D78  EFC3  F006         	goto	l2558
  7159  000D7C                     u2210:
  7160  000D7C  FFFF               	dw	65535	; assembler added errata NOP
  7161  000D7E  80D8               	bsf	status,0,c
  7162  000D80  365C               	rlcf	___fladd@grs^0,f,c
  7163  000D82  EFC6  F006         	goto	l2560
  7164  000D86                     l2558:
  7165  000D86  FFFF               	dw	65535	; assembler added errata NOP
  7166  000D88  90D8               	bcf	status,0,c
  7167  000D8A  365C               	rlcf	___fladd@grs^0,f,c
  7168  000D8C                     l2560:
  7169  000D8C  FFFF               	dw	65535	; assembler added errata NOP
  7170  000D8E  505B               	movf	___fladd@bexp^0,w,c
  7171  000D90  B4D8               	btfsc	status,2,c
  7172  000D92  EFCD  F006         	goto	u2221
  7173  000D96  EFD0  F006         	goto	u2220
  7174  000D9A                     u2221:
  7175  000D9A  FFFF               	dw	65535	; assembler added errata NOP
  7176  000D9C  EFD2  F006         	goto	l2564
  7177  000DA0                     u2220:
  7178  000DA0  FFFF               	dw	65535	; assembler added errata NOP
  7179  000DA2  065B               	decf	___fladd@bexp^0,f,c
  7180  000DA4                     l2564:
  7181  000DA4  FFFF               	dw	65535	; assembler added errata NOP
  7182  000DA6  AE4F               	btfss	(___fladd@b+2)^0,7,c
  7183  000DA8  EFD8  F006         	goto	u2231
  7184  000DAC  EFDB  F006         	goto	u2230
  7185  000DB0                     u2231:
  7186  000DB0  FFFF               	dw	65535	; assembler added errata NOP
  7187  000DB2  EFA5  F006         	goto	l2548
  7188  000DB6                     u2230:
  7189  000DB6                     l2566:
  7190  000DB6  FFFF               	dw	65535	; assembler added errata NOP
  7191  000DB8  0E00               	movlw	0
  7192  000DBA  6E5A               	movwf	___fladd@aexp^0,c
  7193  000DBC  AE5C               	btfss	___fladd@grs^0,7,c
  7194  000DBE  EFE3  F006         	goto	u2241
  7195  000DC2  EFE6  F006         	goto	u2240
  7196  000DC6                     u2241:
  7197  000DC6  FFFF               	dw	65535	; assembler added errata NOP
  7198  000DC8  EF05  F007         	goto	l997
  7199  000DCC                     u2240:
  7200  000DCC  FFFF               	dw	65535	; assembler added errata NOP
  7201  000DCE  C05C  F055         	movff	___fladd@grs,??___fladd
  7202  000DD2  0E7F               	movlw	127
  7203  000DD4  1655               	andwf	??___fladd^0,f,c
  7204  000DD6  B4D8               	btfsc	status,2,c
  7205  000DD8  EFF0  F006         	goto	u2251
  7206  000DDC  EFF3  F006         	goto	u2250
  7207  000DE0                     u2251:
  7208  000DE0  FFFF               	dw	65535	; assembler added errata NOP
  7209  000DE2  EFF9  F006         	goto	l998
  7210  000DE6                     u2250:
  7211  000DE6  FFFF               	dw	65535	; assembler added errata NOP
  7212  000DE8                     l2572:
  7213  000DE8  FFFF               	dw	65535	; assembler added errata NOP
  7214  000DEA  0E01               	movlw	1
  7215  000DEC  6E5A               	movwf	___fladd@aexp^0,c
  7216  000DEE  EF05  F007         	goto	l997
  7217  000DF2                     l998:
  7218  000DF2  FFFF               	dw	65535	; assembler added errata NOP
  7219  000DF4  A04D               	btfss	___fladd@b^0,0,c
  7220  000DF6  EFFF  F006         	goto	u2261
  7221  000DFA  EF02  F007         	goto	u2260
  7222  000DFE                     u2261:
  7223  000DFE  FFFF               	dw	65535	; assembler added errata NOP
  7224  000E00  EF05  F007         	goto	l997
  7225  000E04                     u2260:
  7226  000E04  FFFF               	dw	65535	; assembler added errata NOP
  7227  000E06  EFF4  F006         	goto	l2572
  7228  000E0A                     l997:
  7229  000E0A  FFFF               	dw	65535	; assembler added errata NOP
  7230  000E0C  505A               	movf	___fladd@aexp^0,w,c
  7231  000E0E  B4D8               	btfsc	status,2,c
  7232  000E10  EF0C  F007         	goto	u2271
  7233  000E14  EF0F  F007         	goto	u2270
  7234  000E18                     u2271:
  7235  000E18  FFFF               	dw	65535	; assembler added errata NOP
  7236  000E1A  EF3F  F007         	goto	l2584
  7237  000E1E                     u2270:
  7238  000E1E  FFFF               	dw	65535	; assembler added errata NOP
  7239  000E20  0E01               	movlw	1
  7240  000E22  264D               	addwf	___fladd@b^0,f,c
  7241  000E24  0E00               	movlw	0
  7242  000E26  224E               	addwfc	(___fladd@b+1)^0,f,c
  7243  000E28  224F               	addwfc	(___fladd@b+2)^0,f,c
  7244  000E2A  2250               	addwfc	(___fladd@b+3)^0,f,c
  7245  000E2C  A050               	btfss	(___fladd@b+3)^0,0,c
  7246  000E2E  EF1B  F007         	goto	u2281
  7247  000E32  EF1E  F007         	goto	u2280
  7248  000E36                     u2281:
  7249  000E36  FFFF               	dw	65535	; assembler added errata NOP
  7250  000E38  EF3F  F007         	goto	l2584
  7251  000E3C                     u2280:
  7252  000E3C  FFFF               	dw	65535	; assembler added errata NOP
  7253  000E3E  C04D  F055         	movff	___fladd@b,??___fladd
  7254  000E42  C04E  F056         	movff	___fladd@b+1,??___fladd+1
  7255  000E46  C04F  F057         	movff	___fladd@b+2,??___fladd+2
  7256  000E4A  C050  F058         	movff	___fladd@b+3,??___fladd+3
  7257  000E4E  3458               	rlcf	(??___fladd+3)^0,w,c
  7258  000E50  3258               	rrcf	(??___fladd+3)^0,f,c
  7259  000E52  3257               	rrcf	(??___fladd+2)^0,f,c
  7260  000E54  3256               	rrcf	(??___fladd+1)^0,f,c
  7261  000E56  3255               	rrcf	??___fladd^0,f,c
  7262  000E58  C055  F04D         	movff	??___fladd,___fladd@b
  7263  000E5C  C056  F04E         	movff	??___fladd+1,___fladd@b+1
  7264  000E60  C057  F04F         	movff	??___fladd+2,___fladd@b+2
  7265  000E64  C058  F050         	movff	??___fladd+3,___fladd@b+3
  7266  000E68  285B               	incf	___fladd@bexp^0,w,c
  7267  000E6A  B4D8               	btfsc	status,2,c
  7268  000E6C  EF3A  F007         	goto	u2291
  7269  000E70  EF3D  F007         	goto	u2290
  7270  000E74                     u2291:
  7271  000E74  FFFF               	dw	65535	; assembler added errata NOP
  7272  000E76  EF3F  F007         	goto	l2584
  7273  000E7A                     u2290:
  7274  000E7A  FFFF               	dw	65535	; assembler added errata NOP
  7275  000E7C  2A5B               	incf	___fladd@bexp^0,f,c
  7276  000E7E                     l2584:
  7277  000E7E  FFFF               	dw	65535	; assembler added errata NOP
  7278  000E80  285B               	incf	___fladd@bexp^0,w,c
  7279  000E82  B4D8               	btfsc	status,2,c
  7280  000E84  EF46  F007         	goto	u2301
  7281  000E88  EF49  F007         	goto	u2300
  7282  000E8C                     u2301:
  7283  000E8C  FFFF               	dw	65535	; assembler added errata NOP
  7284  000E8E  EF53  F007         	goto	l2588
  7285  000E92                     u2300:
  7286  000E92  FFFF               	dw	65535	; assembler added errata NOP
  7287  000E94  505B               	movf	___fladd@bexp^0,w,c
  7288  000E96  A4D8               	btfss	status,2,c
  7289  000E98  EF50  F007         	goto	u2311
  7290  000E9C  EF53  F007         	goto	u2310
  7291  000EA0                     u2311:
  7292  000EA0  FFFF               	dw	65535	; assembler added errata NOP
  7293  000EA2  EF68  F007         	goto	l2592
  7294  000EA6                     u2310:
  7295  000EA6                     l2588:
  7296  000EA6  FFFF               	dw	65535	; assembler added errata NOP
  7297  000EA8  0E00               	movlw	0
  7298  000EAA  6E4D               	movwf	___fladd@b^0,c
  7299  000EAC  0E00               	movlw	0
  7300  000EAE  6E4E               	movwf	(___fladd@b+1)^0,c
  7301  000EB0  0E00               	movlw	0
  7302  000EB2  6E4F               	movwf	(___fladd@b+2)^0,c
  7303  000EB4  0E00               	movlw	0
  7304  000EB6  6E50               	movwf	(___fladd@b+3)^0,c
  7305  000EB8  505B               	movf	___fladd@bexp^0,w,c
  7306  000EBA  A4D8               	btfss	status,2,c
  7307  000EBC  EF62  F007         	goto	u2321
  7308  000EC0  EF65  F007         	goto	u2320
  7309  000EC4                     u2321:
  7310  000EC4  FFFF               	dw	65535	; assembler added errata NOP
  7311  000EC6  EF68  F007         	goto	l2592
  7312  000ECA                     u2320:
  7313  000ECA  FFFF               	dw	65535	; assembler added errata NOP
  7314  000ECC  0E00               	movlw	0
  7315  000ECE  6E59               	movwf	___fladd@signs^0,c
  7316  000ED0                     l2592:
  7317  000ED0  FFFF               	dw	65535	; assembler added errata NOP
  7318  000ED2  A05B               	btfss	___fladd@bexp^0,0,c
  7319  000ED4  EF6E  F007         	goto	u2331
  7320  000ED8  EF71  F007         	goto	u2330
  7321  000EDC                     u2331:
  7322  000EDC  FFFF               	dw	65535	; assembler added errata NOP
  7323  000EDE  EF75  F007         	goto	l2596
  7324  000EE2                     u2330:
  7325  000EE2  FFFF               	dw	65535	; assembler added errata NOP
  7326  000EE4  8E4F               	bsf	(___fladd@b+2)^0,7,c
  7327  000EE6  EF77  F007         	goto	l2598
  7328  000EEA                     l2596:
  7329  000EEA  FFFF               	dw	65535	; assembler added errata NOP
  7330  000EEC  9E4F               	bcf	(___fladd@b+2)^0,7,c
  7331  000EEE                     l2598:
  7332  000EEE  FFFF               	dw	65535	; assembler added errata NOP
  7333  000EF0  90D8               	bcf	status,0,c
  7334  000EF2  305B               	rrcf	___fladd@bexp^0,w,c
  7335  000EF4  6E50               	movwf	(___fladd@b+3)^0,c
  7336  000EF6  AE59               	btfss	___fladd@signs^0,7,c
  7337  000EF8  EF80  F007         	goto	u2341
  7338  000EFC  EF83  F007         	goto	u2340
  7339  000F00                     u2341:
  7340  000F00  FFFF               	dw	65535	; assembler added errata NOP
  7341  000F02  EF85  F007         	goto	l2604
  7342  000F06                     u2340:
  7343  000F06  FFFF               	dw	65535	; assembler added errata NOP
  7344  000F08  8E50               	bsf	(___fladd@b+3)^0,7,c
  7345  000F0A                     l2604:
  7346  000F0A  FFFF               	dw	65535	; assembler added errata NOP
  7347  000F0C  C04D  F04D         	movff	___fladd@b,?___fladd
  7348  000F10  C04E  F04E         	movff	___fladd@b+1,?___fladd+1
  7349  000F14  C04F  F04F         	movff	___fladd@b+2,?___fladd+2
  7350  000F18  C050  F050         	movff	___fladd@b+3,?___fladd+3
  7351  000F1C                     l980:
  7352  000F1C  FFFF               	dw	65535	; assembler added errata NOP
  7353  000F1E  0012               	return		;funcret
  7354  000F20  FFFF               	dw	65535	; errata NOP
  7355  000F22                     __end_of___fladd:
  7356                           	callstack 0
  7357                           
  7358 ;; *************** function ___flneg *****************
  7359 ;; Defined at:
  7360 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;  f1              4    0[COMRAM] unsigned char 
  7363 ;; Auto vars:     Size  Location     Type
  7364 ;;		None
  7365 ;; Return value:  Size  Location     Type
  7366 ;;                  4    0[COMRAM] unsigned char 
  7367 ;; Registers used:
  7368 ;;		wreg, status,2, status,0
  7369 ;; Tracked objects:
  7370 ;;		On entry : 0/0
  7371 ;;		On exit  : 0/0
  7372 ;;		Unchanged: 0/0
  7373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7374 ;;      Params:         4       0       0       0       0       0       0
  7375 ;;      Locals:         0       0       0       0       0       0       0
  7376 ;;      Temps:          0       0       0       0       0       0       0
  7377 ;;      Totals:         4       0       0       0       0       0       0
  7378 ;;Total ram usage:        4 bytes
  7379 ;; Hardware stack levels used:    1
  7380 ;; Hardware stack levels required when called:    1
  7381 ;; This function calls:
  7382 ;;		Nothing
  7383 ;; This function is called by:
  7384 ;;		_roundf
  7385 ;; This function uses a non-reentrant model
  7386 ;;
  7387                           
  7388                           	psect	text27
  7389  002B66                     __ptext27:
  7390                           	callstack 0
  7391  002B66                     ___flneg:
  7392                           	callstack 0
  7393  002B66  FFFF               	dw	65535	; assembler added errata NOP
  7394  002B68  5001               	movf	___flneg@f1^0,w,c
  7395  002B6A  1002               	iorwf	(___flneg@f1+1)^0,w,c
  7396  002B6C  1003               	iorwf	(___flneg@f1+2)^0,w,c
  7397  002B6E  1004               	iorwf	(___flneg@f1+3)^0,w,c
  7398  002B70  B4D8               	btfsc	status,2,c
  7399  002B72  EFBD  F015         	goto	u2821
  7400  002B76  EFC0  F015         	goto	u2820
  7401  002B7A                     u2821:
  7402  002B7A  FFFF               	dw	65535	; assembler added errata NOP
  7403  002B7C  EFC9  F015         	goto	l2922
  7404  002B80                     u2820:
  7405  002B80  FFFF               	dw	65535	; assembler added errata NOP
  7406  002B82  0E00               	movlw	0
  7407  002B84  1A01               	xorwf	___flneg@f1^0,f,c
  7408  002B86  0E00               	movlw	0
  7409  002B88  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  7410  002B8A  0E00               	movlw	0
  7411  002B8C  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  7412  002B8E  0E80               	movlw	128
  7413  002B90  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  7414  002B92                     l2922:
  7415  002B92  FFFF               	dw	65535	; assembler added errata NOP
  7416  002B94  C001  F001         	movff	___flneg@f1,?___flneg
  7417  002B98  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  7418  002B9C  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  7419  002BA0  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  7420  002BA4  0012               	return		;funcret
  7421  002BA6  FFFF               	dw	65535	; errata NOP
  7422  002BA8                     __end_of___flneg:
  7423                           	callstack 0
  7424                           
  7425 ;; *************** function _init_PORTS *****************
  7426 ;; Defined at:
  7427 ;;		line 61 in file "init_PIC.c"
  7428 ;; Parameters:    Size  Location     Type
  7429 ;;		None
  7430 ;; Auto vars:     Size  Location     Type
  7431 ;;		None
  7432 ;; Return value:  Size  Location     Type
  7433 ;;                  1    wreg      void 
  7434 ;; Registers used:
  7435 ;;		wreg, status,2
  7436 ;; Tracked objects:
  7437 ;;		On entry : 0/0
  7438 ;;		On exit  : 0/0
  7439 ;;		Unchanged: 0/0
  7440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7441 ;;      Params:         0       0       0       0       0       0       0
  7442 ;;      Locals:         0       0       0       0       0       0       0
  7443 ;;      Temps:          0       0       0       0       0       0       0
  7444 ;;      Totals:         0       0       0       0       0       0       0
  7445 ;;Total ram usage:        0 bytes
  7446 ;; Hardware stack levels used:    1
  7447 ;; Hardware stack levels required when called:    1
  7448 ;; This function calls:
  7449 ;;		Nothing
  7450 ;; This function is called by:
  7451 ;;		_main
  7452 ;; This function uses a non-reentrant model
  7453 ;;
  7454                           
  7455                           	psect	text28
  7456  002BDE                     __ptext28:
  7457                           	callstack 0
  7458  002BDE                     _init_PORTS:
  7459                           	callstack 0
  7460  002BDE  FFFF               	dw	65535	; assembler added errata NOP
  7461  002BE0                     
  7462                           ;init_PIC.c: 63:     LATA = 0;
  7463  002BE0  0E00               	movlw	0
  7464  002BE2  6E89               	movwf	137,c	;volatile
  7465                           
  7466                           ;init_PIC.c: 64:     PORTA = 0;
  7467  002BE4  0E00               	movlw	0
  7468  002BE6  6E80               	movwf	128,c	;volatile
  7469                           
  7470                           ;init_PIC.c: 65:     TRISA = 0xF1;
  7471  002BE8  0EF1               	movlw	241
  7472  002BEA  6E92               	movwf	146,c	;volatile
  7473                           
  7474                           ;init_PIC.c: 67:     LATB = 0;
  7475  002BEC  0E00               	movlw	0
  7476  002BEE  6E8A               	movwf	138,c	;volatile
  7477                           
  7478                           ;init_PIC.c: 68:     PORTB = 0;
  7479  002BF0  0E00               	movlw	0
  7480  002BF2  6E81               	movwf	129,c	;volatile
  7481                           
  7482                           ;init_PIC.c: 69:     TRISB = 0x00;
  7483  002BF4  0E00               	movlw	0
  7484  002BF6  6E93               	movwf	147,c	;volatile
  7485                           
  7486                           ;init_PIC.c: 72:     LATC = 0;
  7487  002BF8  0E00               	movlw	0
  7488  002BFA  6E8B               	movwf	139,c	;volatile
  7489                           
  7490                           ;init_PIC.c: 73:     PORTC = 0;
  7491  002BFC  0E00               	movlw	0
  7492  002BFE  6E82               	movwf	130,c	;volatile
  7493                           
  7494                           ;init_PIC.c: 74:     TRISC = 0xF0;
  7495  002C00  0EF0               	movlw	240
  7496  002C02  6E94               	movwf	148,c	;volatile
  7497  002C04                     
  7498                           ;init_PIC.c: 75:     TRISCbits.RC6 = 0;
  7499  002C04  9C94               	bcf	148,6,c	;volatile
  7500  002C06  0012               	return		;funcret
  7501  002C08  FFFF               	dw	65535	; errata NOP
  7502  002C0A                     __end_of_init_PORTS:
  7503                           	callstack 0
  7504                           
  7505 ;; *************** function _get_reg_value *****************
  7506 ;; Defined at:
  7507 ;;		line 51 in file "serial_rs232.c"
  7508 ;; Parameters:    Size  Location     Type
  7509 ;;		None
  7510 ;; Auto vars:     Size  Location     Type
  7511 ;;  rx_char         1    0[COMRAM] unsigned char 
  7512 ;; Return value:  Size  Location     Type
  7513 ;;                  1    wreg      unsigned char 
  7514 ;; Registers used:
  7515 ;;		wreg, status,2
  7516 ;; Tracked objects:
  7517 ;;		On entry : 0/0
  7518 ;;		On exit  : 0/0
  7519 ;;		Unchanged: 0/0
  7520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7521 ;;      Params:         0       0       0       0       0       0       0
  7522 ;;      Locals:         1       0       0       0       0       0       0
  7523 ;;      Temps:          0       0       0       0       0       0       0
  7524 ;;      Totals:         1       0       0       0       0       0       0
  7525 ;;Total ram usage:        1 bytes
  7526 ;; Hardware stack levels used:    1
  7527 ;; Hardware stack levels required when called:    1
  7528 ;; This function calls:
  7529 ;;		Nothing
  7530 ;; This function is called by:
  7531 ;;		_main
  7532 ;; This function uses a non-reentrant model
  7533 ;;
  7534                           
  7535                           	psect	text29
  7536  002D64                     __ptext29:
  7537                           	callstack 0
  7538  002D64                     _get_reg_value:
  7539                           	callstack 0
  7540  002D64  FFFF               	dw	65535	; assembler added errata NOP
  7541  002D66                     
  7542                           ;serial_rs232.c: 52:     unsigned char rx_char = RCREG;
  7543  002D66  CFAE F001          	movff	4014,get_reg_value@rx_char	;volatile
  7544  002D6A                     
  7545                           ;serial_rs232.c: 53:     RCREG = 0;
  7546  002D6A  0E00               	movlw	0
  7547  002D6C  6EAE               	movwf	174,c	;volatile
  7548                           
  7549                           ;serial_rs232.c: 54:     return rx_char;
  7550  002D6E  5001               	movf	get_reg_value@rx_char^0,w,c
  7551  002D70  0012               	return		;funcret
  7552  002D72  FFFF               	dw	65535	; errata NOP
  7553  002D74                     __end_of_get_reg_value:
  7554                           	callstack 0
  7555                           
  7556 ;; *************** function _get_liters *****************
  7557 ;; Defined at:
  7558 ;;		line 36 in file "oven.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;		None
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;		None
  7563 ;; Return value:  Size  Location     Type
  7564 ;;                  2  110[COMRAM] int 
  7565 ;; Registers used:
  7566 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7567 ;; Tracked objects:
  7568 ;;		On entry : 0/0
  7569 ;;		On exit  : 0/0
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7572 ;;      Params:         2       0       0       0       0       0       0
  7573 ;;      Locals:         0       0       0       0       0       0       0
  7574 ;;      Temps:          0       0       0       0       0       0       0
  7575 ;;      Totals:         2       0       0       0       0       0       0
  7576 ;;Total ram usage:        2 bytes
  7577 ;; Hardware stack levels used:    1
  7578 ;; Hardware stack levels required when called:    2
  7579 ;; This function calls:
  7580 ;;		___flmul
  7581 ;;		___fltol
  7582 ;;		___xxtofl
  7583 ;; This function is called by:
  7584 ;;		_main
  7585 ;; This function uses a non-reentrant model
  7586 ;;
  7587                           
  7588                           	psect	text30
  7589  00292A                     __ptext30:
  7590                           	callstack 0
  7591  00292A                     _get_liters:
  7592                           	callstack 0
  7593  00292A  FFFF               	dw	65535	; assembler added errata NOP
  7594  00292C                     
  7595                           ;oven.c: 37:     ADCON0bits.GO = 1;
  7596  00292C  84C2               	bsf	194,2,c	;volatile
  7597  00292E                     l425:
  7598  00292E  FFFF               	dw	65535	; assembler added errata NOP
  7599  002930  B4C2               	btfsc	194,2,c	;volatile
  7600  002932  EF9D  F014         	goto	u3361
  7601  002936  EFA0  F014         	goto	u3360
  7602  00293A                     u3361:
  7603  00293A  FFFF               	dw	65535	; assembler added errata NOP
  7604  00293C  EF97  F014         	goto	l425
  7605  002940                     u3360:
  7606  002940  FFFF               	dw	65535	; assembler added errata NOP
  7607  002942                     
  7608                           ;oven.c: 39:     return (int) (ADRESH * 0.01);
  7609  002942  0E0A               	movlw	10
  7610  002944  6E1F               	movwf	___flmul@a^0,c
  7611  002946  0ED7               	movlw	215
  7612  002948  6E20               	movwf	(___flmul@a+1)^0,c
  7613  00294A  0E23               	movlw	35
  7614  00294C  6E21               	movwf	(___flmul@a+2)^0,c
  7615  00294E  0E3C               	movlw	60
  7616  002950  6E22               	movwf	(___flmul@a+3)^0,c
  7617  002952  50C4               	movf	196,w,c	;volatile
  7618  002954  6E0D               	movwf	___xxtofl@val^0,c
  7619  002956  6A0E               	clrf	(___xxtofl@val+1)^0,c
  7620  002958  6A0F               	clrf	(___xxtofl@val+2)^0,c
  7621  00295A  6A10               	clrf	(___xxtofl@val+3)^0,c
  7622  00295C  0E01               	movlw	1
  7623  00295E  ECF2  F00D         	call	___xxtofl
  7624  002962  C00D  F01B         	movff	?___xxtofl,___flmul@b
  7625  002966  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  7626  00296A  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  7627  00296E  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  7628  002972  EC91  F007         	call	___flmul	;wreg free
  7629  002976  C01B  F065         	movff	?___flmul,___fltol@f1
  7630  00297A  C01C  F066         	movff	?___flmul+1,___fltol@f1+1
  7631  00297E  C01D  F067         	movff	?___flmul+2,___fltol@f1+2
  7632  002982  C01E  F068         	movff	?___flmul+3,___fltol@f1+3
  7633  002986  ECA5  F00F         	call	___fltol	;wreg free
  7634  00298A  C065  F06F         	movff	?___fltol,?_get_liters
  7635  00298E  C066  F070         	movff	?___fltol+1,?_get_liters+1
  7636  002992  0012               	return		;funcret
  7637  002994  FFFF               	dw	65535	; errata NOP
  7638  002996                     __end_of_get_liters:
  7639                           	callstack 0
  7640                           
  7641 ;; *************** function ___fltol *****************
  7642 ;; Defined at:
  7643 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  7644 ;; Parameters:    Size  Location     Type
  7645 ;;  f1              4  100[COMRAM] int 
  7646 ;; Auto vars:     Size  Location     Type
  7647 ;;  exp1            1  109[COMRAM] unsigned char 
  7648 ;;  sign1           1  108[COMRAM] unsigned char 
  7649 ;; Return value:  Size  Location     Type
  7650 ;;                  4  100[COMRAM] long 
  7651 ;; Registers used:
  7652 ;;		wreg, status,2, status,0
  7653 ;; Tracked objects:
  7654 ;;		On entry : 0/0
  7655 ;;		On exit  : 0/0
  7656 ;;		Unchanged: 0/0
  7657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7658 ;;      Params:         4       0       0       0       0       0       0
  7659 ;;      Locals:         2       0       0       0       0       0       0
  7660 ;;      Temps:          4       0       0       0       0       0       0
  7661 ;;      Totals:        10       0       0       0       0       0       0
  7662 ;;Total ram usage:       10 bytes
  7663 ;; Hardware stack levels used:    1
  7664 ;; Hardware stack levels required when called:    1
  7665 ;; This function calls:
  7666 ;;		Nothing
  7667 ;; This function is called by:
  7668 ;;		_init_USART
  7669 ;;		_init_timer_2
  7670 ;;		_update_pwm_duty_ccp1
  7671 ;;		_get_temperature
  7672 ;;		_get_liters
  7673 ;; This function uses a non-reentrant model
  7674 ;;
  7675                           
  7676                           	psect	text31
  7677  001F4A                     __ptext31:
  7678                           	callstack 0
  7679  001F4A                     ___fltol:
  7680                           	callstack 0
  7681  001F4A  FFFF               	dw	65535	; assembler added errata NOP
  7682  001F4C  3467               	rlcf	(___fltol@f1+2)^0,w,c
  7683  001F4E  3468               	rlcf	(___fltol@f1+3)^0,w,c
  7684  001F50  6E6E               	movwf	___fltol@exp1^0,c
  7685  001F52  506E               	movf	___fltol@exp1^0,w,c
  7686  001F54  A4D8               	btfss	status,2,c
  7687  001F56  EFAF  F00F         	goto	u2831
  7688  001F5A  EFB2  F00F         	goto	u2830
  7689  001F5E                     u2831:
  7690  001F5E  FFFF               	dw	65535	; assembler added errata NOP
  7691  001F60  EFBE  F00F         	goto	l2932
  7692  001F64                     u2830:
  7693  001F64  FFFF               	dw	65535	; assembler added errata NOP
  7694  001F66                     l2928:
  7695  001F66  FFFF               	dw	65535	; assembler added errata NOP
  7696  001F68  0E00               	movlw	0
  7697  001F6A  6E65               	movwf	?___fltol^0,c
  7698  001F6C  0E00               	movlw	0
  7699  001F6E  6E66               	movwf	(?___fltol+1)^0,c
  7700  001F70  0E00               	movlw	0
  7701  001F72  6E67               	movwf	(?___fltol+2)^0,c
  7702  001F74  0E00               	movlw	0
  7703  001F76  6E68               	movwf	(?___fltol+3)^0,c
  7704  001F78  EF3D  F010         	goto	l740
  7705  001F7C                     l2932:
  7706  001F7C  FFFF               	dw	65535	; assembler added errata NOP
  7707  001F7E  C065  F069         	movff	___fltol@f1,??___fltol
  7708  001F82  C066  F06A         	movff	___fltol@f1+1,??___fltol+1
  7709  001F86  C067  F06B         	movff	___fltol@f1+2,??___fltol+2
  7710  001F8A  C068  F06C         	movff	___fltol@f1+3,??___fltol+3
  7711  001F8E  0E20               	movlw	32
  7712  001F90  EFD0  F00F         	goto	u2840
  7713  001F94                     u2845:
  7714  001F94  FFFF               	dw	65535	; assembler added errata NOP
  7715  001F96  90D8               	bcf	status,0,c
  7716  001F98  326C               	rrcf	(??___fltol+3)^0,f,c
  7717  001F9A  326B               	rrcf	(??___fltol+2)^0,f,c
  7718  001F9C  326A               	rrcf	(??___fltol+1)^0,f,c
  7719  001F9E  3269               	rrcf	??___fltol^0,f,c
  7720  001FA0                     u2840:
  7721  001FA0  FFFF               	dw	65535	; assembler added errata NOP
  7722  001FA2  2EE8               	decfsz	wreg,f,c
  7723  001FA4  EFCA  F00F         	goto	u2845
  7724  001FA8  5069               	movf	??___fltol^0,w,c
  7725  001FAA  6E6D               	movwf	___fltol@sign1^0,c
  7726  001FAC  8E67               	bsf	(___fltol@f1+2)^0,7,c
  7727  001FAE  0EFF               	movlw	255
  7728  001FB0  1665               	andwf	___fltol@f1^0,f,c
  7729  001FB2  0EFF               	movlw	255
  7730  001FB4  1666               	andwf	(___fltol@f1+1)^0,f,c
  7731  001FB6  0EFF               	movlw	255
  7732  001FB8  1667               	andwf	(___fltol@f1+2)^0,f,c
  7733  001FBA  0E00               	movlw	0
  7734  001FBC  1668               	andwf	(___fltol@f1+3)^0,f,c
  7735  001FBE  0E96               	movlw	150
  7736  001FC0  5E6E               	subwf	___fltol@exp1^0,f,c
  7737  001FC2  BE6E               	btfsc	___fltol@exp1^0,7,c
  7738  001FC4  EFE9  F00F         	goto	u2850
  7739  001FC8  EFE6  F00F         	goto	u2851
  7740  001FCC                     u2851:
  7741  001FCC  FFFF               	dw	65535	; assembler added errata NOP
  7742  001FCE  EF03  F010         	goto	l2952
  7743  001FD2                     u2850:
  7744  001FD2  FFFF               	dw	65535	; assembler added errata NOP
  7745  001FD4  506E               	movf	___fltol@exp1^0,w,c
  7746  001FD6  0A80               	xorlw	128
  7747  001FD8  0F97               	addlw	151
  7748  001FDA  B0D8               	btfsc	status,0,c
  7749  001FDC  EFF2  F00F         	goto	u2861
  7750  001FE0  EFF5  F00F         	goto	u2860
  7751  001FE4                     u2861:
  7752  001FE4  FFFF               	dw	65535	; assembler added errata NOP
  7753  001FE6  EFF8  F00F         	goto	l2948
  7754  001FEA                     u2860:
  7755  001FEA  FFFF               	dw	65535	; assembler added errata NOP
  7756  001FEC  EFB3  F00F         	goto	l2928
  7757  001FF0                     l2948:
  7758  001FF0  FFFF               	dw	65535	; assembler added errata NOP
  7759  001FF2  90D8               	bcf	status,0,c
  7760  001FF4  3268               	rrcf	(___fltol@f1+3)^0,f,c
  7761  001FF6  3267               	rrcf	(___fltol@f1+2)^0,f,c
  7762  001FF8  3266               	rrcf	(___fltol@f1+1)^0,f,c
  7763  001FFA  3265               	rrcf	___fltol@f1^0,f,c
  7764  001FFC  3E6E               	incfsz	___fltol@exp1^0,f,c
  7765  001FFE  EFF8  F00F         	goto	l2948
  7766  002002  EF21  F010         	goto	l2962
  7767  002006                     l2952:
  7768  002006  FFFF               	dw	65535	; assembler added errata NOP
  7769  002008  0E1F               	movlw	31
  7770  00200A  646E               	cpfsgt	___fltol@exp1^0,c
  7771  00200C  EF0A  F010         	goto	u2871
  7772  002010  EF0D  F010         	goto	u2870
  7773  002014                     u2871:
  7774  002014  FFFF               	dw	65535	; assembler added errata NOP
  7775  002016  EF17  F010         	goto	l2960
  7776  00201A                     u2870:
  7777  00201A  FFFF               	dw	65535	; assembler added errata NOP
  7778  00201C  EFB3  F00F         	goto	l2928
  7779  002020                     l2958:
  7780  002020  FFFF               	dw	65535	; assembler added errata NOP
  7781  002022  90D8               	bcf	status,0,c
  7782  002024  3665               	rlcf	___fltol@f1^0,f,c
  7783  002026  3666               	rlcf	(___fltol@f1+1)^0,f,c
  7784  002028  3667               	rlcf	(___fltol@f1+2)^0,f,c
  7785  00202A  3668               	rlcf	(___fltol@f1+3)^0,f,c
  7786  00202C  066E               	decf	___fltol@exp1^0,f,c
  7787  00202E                     l2960:
  7788  00202E  FFFF               	dw	65535	; assembler added errata NOP
  7789  002030  506E               	movf	___fltol@exp1^0,w,c
  7790  002032  A4D8               	btfss	status,2,c
  7791  002034  EF1E  F010         	goto	u2881
  7792  002038  EF21  F010         	goto	u2880
  7793  00203C                     u2881:
  7794  00203C  FFFF               	dw	65535	; assembler added errata NOP
  7795  00203E  EF10  F010         	goto	l2958
  7796  002042                     u2880:
  7797  002042                     l2962:
  7798  002042  FFFF               	dw	65535	; assembler added errata NOP
  7799  002044  506D               	movf	___fltol@sign1^0,w,c
  7800  002046  B4D8               	btfsc	status,2,c
  7801  002048  EF28  F010         	goto	u2891
  7802  00204C  EF2B  F010         	goto	u2890
  7803  002050                     u2891:
  7804  002050  FFFF               	dw	65535	; assembler added errata NOP
  7805  002052  EF34  F010         	goto	l2966
  7806  002056                     u2890:
  7807  002056  FFFF               	dw	65535	; assembler added errata NOP
  7808  002058  1E68               	comf	(___fltol@f1+3)^0,f,c
  7809  00205A  1E67               	comf	(___fltol@f1+2)^0,f,c
  7810  00205C  1E66               	comf	(___fltol@f1+1)^0,f,c
  7811  00205E  6C65               	negf	___fltol@f1^0,c
  7812  002060  0E00               	movlw	0
  7813  002062  2266               	addwfc	(___fltol@f1+1)^0,f,c
  7814  002064  2267               	addwfc	(___fltol@f1+2)^0,f,c
  7815  002066  2268               	addwfc	(___fltol@f1+3)^0,f,c
  7816  002068                     l2966:
  7817  002068  FFFF               	dw	65535	; assembler added errata NOP
  7818  00206A  C065  F065         	movff	___fltol@f1,?___fltol
  7819  00206E  C066  F066         	movff	___fltol@f1+1,?___fltol+1
  7820  002072  C067  F067         	movff	___fltol@f1+2,?___fltol+2
  7821  002076  C068  F068         	movff	___fltol@f1+3,?___fltol+3
  7822  00207A                     l740:
  7823  00207A  FFFF               	dw	65535	; assembler added errata NOP
  7824  00207C  0012               	return		;funcret
  7825  00207E  FFFF               	dw	65535	; errata NOP
  7826  002080                     __end_of___fltol:
  7827                           	callstack 0
  7828                           
  7829 ;; *************** function ___flmul *****************
  7830 ;; Defined at:
  7831 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  7832 ;; Parameters:    Size  Location     Type
  7833 ;;  b               4   26[COMRAM] long 
  7834 ;;  a               4   30[COMRAM] long 
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;  prod            4   45[COMRAM] struct .
  7837 ;;  grs             4   39[COMRAM] unsigned long 
  7838 ;;  temp            2   49[COMRAM] struct .
  7839 ;;  bexp            1   44[COMRAM] unsigned char 
  7840 ;;  aexp            1   43[COMRAM] unsigned char 
  7841 ;;  sign            1   38[COMRAM] unsigned char 
  7842 ;; Return value:  Size  Location     Type
  7843 ;;                  4   26[COMRAM] unsigned char 
  7844 ;; Registers used:
  7845 ;;		wreg, status,2, status,0, prodl, prodh
  7846 ;; Tracked objects:
  7847 ;;		On entry : 0/0
  7848 ;;		On exit  : 0/0
  7849 ;;		Unchanged: 0/0
  7850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7851 ;;      Params:         8       0       0       0       0       0       0
  7852 ;;      Locals:        13       0       0       0       0       0       0
  7853 ;;      Temps:          4       0       0       0       0       0       0
  7854 ;;      Totals:        25       0       0       0       0       0       0
  7855 ;;Total ram usage:       25 bytes
  7856 ;; Hardware stack levels used:    1
  7857 ;; Hardware stack levels required when called:    1
  7858 ;; This function calls:
  7859 ;;		Nothing
  7860 ;; This function is called by:
  7861 ;;		_init_timer_2
  7862 ;;		_update_pwm_duty_ccp1
  7863 ;;		_get_temperature
  7864 ;;		_get_liters
  7865 ;;		_roundf
  7866 ;; This function uses a non-reentrant model
  7867 ;;
  7868                           
  7869                           	psect	text32
  7870  000F22                     __ptext32:
  7871                           	callstack 0
  7872  000F22                     ___flmul:
  7873                           	callstack 0
  7874  000F22  FFFF               	dw	65535	; assembler added errata NOP
  7875  000F24  501E               	movf	(___flmul@b+3)^0,w,c
  7876  000F26  0B80               	andlw	128
  7877  000F28  6E27               	movwf	___flmul@sign^0,c
  7878  000F2A  501E               	movf	(___flmul@b+3)^0,w,c
  7879  000F2C  241E               	addwf	(___flmul@b+3)^0,w,c
  7880  000F2E  6E2D               	movwf	___flmul@bexp^0,c
  7881  000F30  AE1D               	btfss	(___flmul@b+2)^0,7,c
  7882  000F32  EF9D  F007         	goto	u2581
  7883  000F36  EFA0  F007         	goto	u2580
  7884  000F3A                     u2581:
  7885  000F3A  FFFF               	dw	65535	; assembler added errata NOP
  7886  000F3C  EFA2  F007         	goto	l2766
  7887  000F40                     u2580:
  7888  000F40  FFFF               	dw	65535	; assembler added errata NOP
  7889  000F42  802D               	bsf	___flmul@bexp^0,0,c
  7890  000F44                     l2766:
  7891  000F44  FFFF               	dw	65535	; assembler added errata NOP
  7892  000F46  502D               	movf	___flmul@bexp^0,w,c
  7893  000F48  B4D8               	btfsc	status,2,c
  7894  000F4A  EFA9  F007         	goto	u2591
  7895  000F4E  EFAC  F007         	goto	u2590
  7896  000F52                     u2591:
  7897  000F52  FFFF               	dw	65535	; assembler added errata NOP
  7898  000F54  EFC3  F007         	goto	l2774
  7899  000F58                     u2590:
  7900  000F58  FFFF               	dw	65535	; assembler added errata NOP
  7901  000F5A  282D               	incf	___flmul@bexp^0,w,c
  7902  000F5C  A4D8               	btfss	status,2,c
  7903  000F5E  EFB3  F007         	goto	u2601
  7904  000F62  EFB6  F007         	goto	u2600
  7905  000F66                     u2601:
  7906  000F66  FFFF               	dw	65535	; assembler added errata NOP
  7907  000F68  EFBF  F007         	goto	l2772
  7908  000F6C                     u2600:
  7909  000F6C  FFFF               	dw	65535	; assembler added errata NOP
  7910  000F6E  0E00               	movlw	0
  7911  000F70  6E1B               	movwf	___flmul@b^0,c
  7912  000F72  0E00               	movlw	0
  7913  000F74  6E1C               	movwf	(___flmul@b+1)^0,c
  7914  000F76  0E00               	movlw	0
  7915  000F78  6E1D               	movwf	(___flmul@b+2)^0,c
  7916  000F7A  0E00               	movlw	0
  7917  000F7C  6E1E               	movwf	(___flmul@b+3)^0,c
  7918  000F7E                     l2772:
  7919  000F7E  FFFF               	dw	65535	; assembler added errata NOP
  7920  000F80  8E1D               	bsf	(___flmul@b+2)^0,7,c
  7921  000F82  EFCC  F007         	goto	l2776
  7922  000F86                     l2774:
  7923  000F86  FFFF               	dw	65535	; assembler added errata NOP
  7924  000F88  0E00               	movlw	0
  7925  000F8A  6E1B               	movwf	___flmul@b^0,c
  7926  000F8C  0E00               	movlw	0
  7927  000F8E  6E1C               	movwf	(___flmul@b+1)^0,c
  7928  000F90  0E00               	movlw	0
  7929  000F92  6E1D               	movwf	(___flmul@b+2)^0,c
  7930  000F94  0E00               	movlw	0
  7931  000F96  6E1E               	movwf	(___flmul@b+3)^0,c
  7932  000F98                     l2776:
  7933  000F98  FFFF               	dw	65535	; assembler added errata NOP
  7934  000F9A  5022               	movf	(___flmul@a+3)^0,w,c
  7935  000F9C  0B80               	andlw	128
  7936  000F9E  1A27               	xorwf	___flmul@sign^0,f,c
  7937  000FA0  5022               	movf	(___flmul@a+3)^0,w,c
  7938  000FA2  2422               	addwf	(___flmul@a+3)^0,w,c
  7939  000FA4  6E2C               	movwf	___flmul@aexp^0,c
  7940  000FA6  AE21               	btfss	(___flmul@a+2)^0,7,c
  7941  000FA8  EFD8  F007         	goto	u2611
  7942  000FAC  EFDB  F007         	goto	u2610
  7943  000FB0                     u2611:
  7944  000FB0  FFFF               	dw	65535	; assembler added errata NOP
  7945  000FB2  EFDD  F007         	goto	l2784
  7946  000FB6                     u2610:
  7947  000FB6  FFFF               	dw	65535	; assembler added errata NOP
  7948  000FB8  802C               	bsf	___flmul@aexp^0,0,c
  7949  000FBA                     l2784:
  7950  000FBA  FFFF               	dw	65535	; assembler added errata NOP
  7951  000FBC  502C               	movf	___flmul@aexp^0,w,c
  7952  000FBE  B4D8               	btfsc	status,2,c
  7953  000FC0  EFE4  F007         	goto	u2621
  7954  000FC4  EFE7  F007         	goto	u2620
  7955  000FC8                     u2621:
  7956  000FC8  FFFF               	dw	65535	; assembler added errata NOP
  7957  000FCA  EFFE  F007         	goto	l2792
  7958  000FCE                     u2620:
  7959  000FCE  FFFF               	dw	65535	; assembler added errata NOP
  7960  000FD0  282C               	incf	___flmul@aexp^0,w,c
  7961  000FD2  A4D8               	btfss	status,2,c
  7962  000FD4  EFEE  F007         	goto	u2631
  7963  000FD8  EFF1  F007         	goto	u2630
  7964  000FDC                     u2631:
  7965  000FDC  FFFF               	dw	65535	; assembler added errata NOP
  7966  000FDE  EFFA  F007         	goto	l2790
  7967  000FE2                     u2630:
  7968  000FE2  FFFF               	dw	65535	; assembler added errata NOP
  7969  000FE4  0E00               	movlw	0
  7970  000FE6  6E1F               	movwf	___flmul@a^0,c
  7971  000FE8  0E00               	movlw	0
  7972  000FEA  6E20               	movwf	(___flmul@a+1)^0,c
  7973  000FEC  0E00               	movlw	0
  7974  000FEE  6E21               	movwf	(___flmul@a+2)^0,c
  7975  000FF0  0E00               	movlw	0
  7976  000FF2  6E22               	movwf	(___flmul@a+3)^0,c
  7977  000FF4                     l2790:
  7978  000FF4  FFFF               	dw	65535	; assembler added errata NOP
  7979  000FF6  8E21               	bsf	(___flmul@a+2)^0,7,c
  7980  000FF8  EF07  F008         	goto	l1057
  7981  000FFC                     l2792:
  7982  000FFC  FFFF               	dw	65535	; assembler added errata NOP
  7983  000FFE  0E00               	movlw	0
  7984  001000  6E1F               	movwf	___flmul@a^0,c
  7985  001002  0E00               	movlw	0
  7986  001004  6E20               	movwf	(___flmul@a+1)^0,c
  7987  001006  0E00               	movlw	0
  7988  001008  6E21               	movwf	(___flmul@a+2)^0,c
  7989  00100A  0E00               	movlw	0
  7990  00100C  6E22               	movwf	(___flmul@a+3)^0,c
  7991  00100E                     l1057:
  7992  00100E  FFFF               	dw	65535	; assembler added errata NOP
  7993  001010  502C               	movf	___flmul@aexp^0,w,c
  7994  001012  B4D8               	btfsc	status,2,c
  7995  001014  EF0E  F008         	goto	u2641
  7996  001018  EF11  F008         	goto	u2640
  7997  00101C                     u2641:
  7998  00101C  FFFF               	dw	65535	; assembler added errata NOP
  7999  00101E  EF1B  F008         	goto	l2796
  8000  001022                     u2640:
  8001  001022  FFFF               	dw	65535	; assembler added errata NOP
  8002  001024  502D               	movf	___flmul@bexp^0,w,c
  8003  001026  A4D8               	btfss	status,2,c
  8004  001028  EF18  F008         	goto	u2651
  8005  00102C  EF1B  F008         	goto	u2650
  8006  001030                     u2651:
  8007  001030  FFFF               	dw	65535	; assembler added errata NOP
  8008  001032  EF26  F008         	goto	l2800
  8009  001036                     u2650:
  8010  001036                     l2796:
  8011  001036  FFFF               	dw	65535	; assembler added errata NOP
  8012  001038  0E00               	movlw	0
  8013  00103A  6E1B               	movwf	?___flmul^0,c
  8014  00103C  0E00               	movlw	0
  8015  00103E  6E1C               	movwf	(?___flmul+1)^0,c
  8016  001040  0E00               	movlw	0
  8017  001042  6E1D               	movwf	(?___flmul+2)^0,c
  8018  001044  0E00               	movlw	0
  8019  001046  6E1E               	movwf	(?___flmul+3)^0,c
  8020  001048  EFE0  F009         	goto	l1061
  8021  00104C                     l2800:
  8022  00104C  FFFF               	dw	65535	; assembler added errata NOP
  8023  00104E  5021               	movf	(___flmul@a+2)^0,w,c
  8024  001050  021B               	mulwf	___flmul@b^0,c
  8025  001052  CFF3 F032          	movff	prodl,___flmul@temp
  8026  001056  CFF4 F033          	movff	prodh,___flmul@temp+1
  8027  00105A  5032               	movf	___flmul@temp^0,w,c
  8028  00105C  6E28               	movwf	___flmul@grs^0,c
  8029  00105E  6A29               	clrf	(___flmul@grs+1)^0,c
  8030  001060  6A2A               	clrf	(___flmul@grs+2)^0,c
  8031  001062  6A2B               	clrf	(___flmul@grs+3)^0,c
  8032  001064  5033               	movf	(___flmul@temp+1)^0,w,c
  8033  001066  6E2E               	movwf	___flmul@prod^0,c
  8034  001068  6A2F               	clrf	(___flmul@prod+1)^0,c
  8035  00106A  6A30               	clrf	(___flmul@prod+2)^0,c
  8036  00106C  6A31               	clrf	(___flmul@prod+3)^0,c
  8037  00106E  5020               	movf	(___flmul@a+1)^0,w,c
  8038  001070  021C               	mulwf	(___flmul@b+1)^0,c
  8039  001072  CFF3 F032          	movff	prodl,___flmul@temp
  8040  001076  CFF4 F033          	movff	prodh,___flmul@temp+1
  8041  00107A  5032               	movf	___flmul@temp^0,w,c
  8042  00107C  2628               	addwf	___flmul@grs^0,f,c
  8043  00107E  0E00               	movlw	0
  8044  001080  2229               	addwfc	(___flmul@grs+1)^0,f,c
  8045  001082  222A               	addwfc	(___flmul@grs+2)^0,f,c
  8046  001084  222B               	addwfc	(___flmul@grs+3)^0,f,c
  8047  001086  5033               	movf	(___flmul@temp+1)^0,w,c
  8048  001088  262E               	addwf	___flmul@prod^0,f,c
  8049  00108A  0E00               	movlw	0
  8050  00108C  222F               	addwfc	(___flmul@prod+1)^0,f,c
  8051  00108E  2230               	addwfc	(___flmul@prod+2)^0,f,c
  8052  001090  2231               	addwfc	(___flmul@prod+3)^0,f,c
  8053  001092  501F               	movf	___flmul@a^0,w,c
  8054  001094  021D               	mulwf	(___flmul@b+2)^0,c
  8055  001096  CFF3 F032          	movff	prodl,___flmul@temp
  8056  00109A  CFF4 F033          	movff	prodh,___flmul@temp+1
  8057  00109E  5032               	movf	___flmul@temp^0,w,c
  8058  0010A0  2628               	addwf	___flmul@grs^0,f,c
  8059  0010A2  0E00               	movlw	0
  8060  0010A4  2229               	addwfc	(___flmul@grs+1)^0,f,c
  8061  0010A6  222A               	addwfc	(___flmul@grs+2)^0,f,c
  8062  0010A8  222B               	addwfc	(___flmul@grs+3)^0,f,c
  8063  0010AA  5033               	movf	(___flmul@temp+1)^0,w,c
  8064  0010AC  262E               	addwf	___flmul@prod^0,f,c
  8065  0010AE  0E00               	movlw	0
  8066  0010B0  222F               	addwfc	(___flmul@prod+1)^0,f,c
  8067  0010B2  2230               	addwfc	(___flmul@prod+2)^0,f,c
  8068  0010B4  2231               	addwfc	(___flmul@prod+3)^0,f,c
  8069  0010B6  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  8070  0010BA  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  8071  0010BE  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  8072  0010C2  6A28               	clrf	___flmul@grs^0,c
  8073  0010C4  501F               	movf	___flmul@a^0,w,c
  8074  0010C6  021C               	mulwf	(___flmul@b+1)^0,c
  8075  0010C8  CFF3 F032          	movff	prodl,___flmul@temp
  8076  0010CC  CFF4 F033          	movff	prodh,___flmul@temp+1
  8077  0010D0  5032               	movf	___flmul@temp^0,w,c
  8078  0010D2  2628               	addwf	___flmul@grs^0,f,c
  8079  0010D4  5033               	movf	(___flmul@temp+1)^0,w,c
  8080  0010D6  2229               	addwfc	(___flmul@grs+1)^0,f,c
  8081  0010D8  0E00               	movlw	0
  8082  0010DA  222A               	addwfc	(___flmul@grs+2)^0,f,c
  8083  0010DC  0E00               	movlw	0
  8084  0010DE  222B               	addwfc	(___flmul@grs+3)^0,f,c
  8085  0010E0  5020               	movf	(___flmul@a+1)^0,w,c
  8086  0010E2  021B               	mulwf	___flmul@b^0,c
  8087  0010E4  CFF3 F032          	movff	prodl,___flmul@temp
  8088  0010E8  CFF4 F033          	movff	prodh,___flmul@temp+1
  8089  0010EC  5032               	movf	___flmul@temp^0,w,c
  8090  0010EE  2628               	addwf	___flmul@grs^0,f,c
  8091  0010F0  5033               	movf	(___flmul@temp+1)^0,w,c
  8092  0010F2  2229               	addwfc	(___flmul@grs+1)^0,f,c
  8093  0010F4  0E00               	movlw	0
  8094  0010F6  222A               	addwfc	(___flmul@grs+2)^0,f,c
  8095  0010F8  0E00               	movlw	0
  8096  0010FA  222B               	addwfc	(___flmul@grs+3)^0,f,c
  8097  0010FC  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  8098  001100  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  8099  001104  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  8100  001108  6A28               	clrf	___flmul@grs^0,c
  8101  00110A  501F               	movf	___flmul@a^0,w,c
  8102  00110C  021B               	mulwf	___flmul@b^0,c
  8103  00110E  CFF3 F032          	movff	prodl,___flmul@temp
  8104  001112  CFF4 F033          	movff	prodh,___flmul@temp+1
  8105  001116  5032               	movf	___flmul@temp^0,w,c
  8106  001118  2628               	addwf	___flmul@grs^0,f,c
  8107  00111A  5033               	movf	(___flmul@temp+1)^0,w,c
  8108  00111C  2229               	addwfc	(___flmul@grs+1)^0,f,c
  8109  00111E  0E00               	movlw	0
  8110  001120  222A               	addwfc	(___flmul@grs+2)^0,f,c
  8111  001122  0E00               	movlw	0
  8112  001124  222B               	addwfc	(___flmul@grs+3)^0,f,c
  8113  001126  5021               	movf	(___flmul@a+2)^0,w,c
  8114  001128  021C               	mulwf	(___flmul@b+1)^0,c
  8115  00112A  CFF3 F032          	movff	prodl,___flmul@temp
  8116  00112E  CFF4 F033          	movff	prodh,___flmul@temp+1
  8117  001132  5032               	movf	___flmul@temp^0,w,c
  8118  001134  262E               	addwf	___flmul@prod^0,f,c
  8119  001136  5033               	movf	(___flmul@temp+1)^0,w,c
  8120  001138  222F               	addwfc	(___flmul@prod+1)^0,f,c
  8121  00113A  0E00               	movlw	0
  8122  00113C  2230               	addwfc	(___flmul@prod+2)^0,f,c
  8123  00113E  0E00               	movlw	0
  8124  001140  2231               	addwfc	(___flmul@prod+3)^0,f,c
  8125  001142  5020               	movf	(___flmul@a+1)^0,w,c
  8126  001144  021D               	mulwf	(___flmul@b+2)^0,c
  8127  001146  CFF3 F032          	movff	prodl,___flmul@temp
  8128  00114A  CFF4 F033          	movff	prodh,___flmul@temp+1
  8129  00114E  5032               	movf	___flmul@temp^0,w,c
  8130  001150  262E               	addwf	___flmul@prod^0,f,c
  8131  001152  5033               	movf	(___flmul@temp+1)^0,w,c
  8132  001154  222F               	addwfc	(___flmul@prod+1)^0,f,c
  8133  001156  0E00               	movlw	0
  8134  001158  2230               	addwfc	(___flmul@prod+2)^0,f,c
  8135  00115A  0E00               	movlw	0
  8136  00115C  2231               	addwfc	(___flmul@prod+3)^0,f,c
  8137  00115E  5021               	movf	(___flmul@a+2)^0,w,c
  8138  001160  021D               	mulwf	(___flmul@b+2)^0,c
  8139  001162  CFF3 F032          	movff	prodl,___flmul@temp
  8140  001166  CFF4 F033          	movff	prodh,___flmul@temp+1
  8141  00116A  5032               	movf	___flmul@temp^0,w,c
  8142  00116C  6E23               	movwf	??___flmul^0,c
  8143  00116E  5033               	movf	(___flmul@temp+1)^0,w,c
  8144  001170  6E24               	movwf	(??___flmul+1)^0,c
  8145  001172  6A25               	clrf	(??___flmul+2)^0,c
  8146  001174  6A26               	clrf	(??___flmul+3)^0,c
  8147  001176  C025  F026         	movff	??___flmul+2,??___flmul+3
  8148  00117A  C024  F025         	movff	??___flmul+1,??___flmul+2
  8149  00117E  C023  F024         	movff	??___flmul,??___flmul+1
  8150  001182  6A23               	clrf	??___flmul^0,c
  8151  001184  5023               	movf	??___flmul^0,w,c
  8152  001186  262E               	addwf	___flmul@prod^0,f,c
  8153  001188  5024               	movf	(??___flmul+1)^0,w,c
  8154  00118A  222F               	addwfc	(___flmul@prod+1)^0,f,c
  8155  00118C  5025               	movf	(??___flmul+2)^0,w,c
  8156  00118E  2230               	addwfc	(___flmul@prod+2)^0,f,c
  8157  001190  5026               	movf	(??___flmul+3)^0,w,c
  8158  001192  2231               	addwfc	(___flmul@prod+3)^0,f,c
  8159  001194  C028  F023         	movff	___flmul@grs,??___flmul
  8160  001198  C029  F024         	movff	___flmul@grs+1,??___flmul+1
  8161  00119C  C02A  F025         	movff	___flmul@grs+2,??___flmul+2
  8162  0011A0  C02B  F026         	movff	___flmul@grs+3,??___flmul+3
  8163  0011A4  0E19               	movlw	25
  8164  0011A6  EFDB  F008         	goto	u2660
  8165  0011AA                     u2665:
  8166  0011AA  FFFF               	dw	65535	; assembler added errata NOP
  8167  0011AC  90D8               	bcf	status,0,c
  8168  0011AE  3226               	rrcf	(??___flmul+3)^0,f,c
  8169  0011B0  3225               	rrcf	(??___flmul+2)^0,f,c
  8170  0011B2  3224               	rrcf	(??___flmul+1)^0,f,c
  8171  0011B4  3223               	rrcf	??___flmul^0,f,c
  8172  0011B6                     u2660:
  8173  0011B6  FFFF               	dw	65535	; assembler added errata NOP
  8174  0011B8  2EE8               	decfsz	wreg,f,c
  8175  0011BA  EFD5  F008         	goto	u2665
  8176  0011BE  5023               	movf	??___flmul^0,w,c
  8177  0011C0  262E               	addwf	___flmul@prod^0,f,c
  8178  0011C2  5024               	movf	(??___flmul+1)^0,w,c
  8179  0011C4  222F               	addwfc	(___flmul@prod+1)^0,f,c
  8180  0011C6  5025               	movf	(??___flmul+2)^0,w,c
  8181  0011C8  2230               	addwfc	(___flmul@prod+2)^0,f,c
  8182  0011CA  5026               	movf	(??___flmul+3)^0,w,c
  8183  0011CC  2231               	addwfc	(___flmul@prod+3)^0,f,c
  8184  0011CE  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  8185  0011D2  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  8186  0011D6  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  8187  0011DA  6A28               	clrf	___flmul@grs^0,c
  8188  0011DC  502C               	movf	___flmul@aexp^0,w,c
  8189  0011DE  C02D  F023         	movff	___flmul@bexp,??___flmul
  8190  0011E2  6A24               	clrf	(??___flmul+1)^0,c
  8191  0011E4  2623               	addwf	??___flmul^0,f,c
  8192  0011E6  0E00               	movlw	0
  8193  0011E8  2224               	addwfc	(??___flmul+1)^0,f,c
  8194  0011EA  0E82               	movlw	130
  8195  0011EC  2423               	addwf	??___flmul^0,w,c
  8196  0011EE  6E32               	movwf	___flmul@temp^0,c
  8197  0011F0  0EFF               	movlw	255
  8198  0011F2  2024               	addwfc	(??___flmul+1)^0,w,c
  8199  0011F4  6E33               	movwf	(___flmul@temp+1)^0,c
  8200  0011F6  EF16  F009         	goto	l2848
  8201  0011FA                     l2842:
  8202  0011FA  FFFF               	dw	65535	; assembler added errata NOP
  8203  0011FC  90D8               	bcf	status,0,c
  8204  0011FE  362E               	rlcf	___flmul@prod^0,f,c
  8205  001200  362F               	rlcf	(___flmul@prod+1)^0,f,c
  8206  001202  3630               	rlcf	(___flmul@prod+2)^0,f,c
  8207  001204  3631               	rlcf	(___flmul@prod+3)^0,f,c
  8208  001206  AE2B               	btfss	(___flmul@grs+3)^0,7,c
  8209  001208  EF08  F009         	goto	u2671
  8210  00120C  EF0B  F009         	goto	u2670
  8211  001210                     u2671:
  8212  001210  FFFF               	dw	65535	; assembler added errata NOP
  8213  001212  EF0D  F009         	goto	l1064
  8214  001216                     u2670:
  8215  001216  FFFF               	dw	65535	; assembler added errata NOP
  8216  001218  802E               	bsf	___flmul@prod^0,0,c
  8217  00121A                     l1064:
  8218  00121A  FFFF               	dw	65535	; assembler added errata NOP
  8219  00121C  90D8               	bcf	status,0,c
  8220  00121E  3628               	rlcf	___flmul@grs^0,f,c
  8221  001220  3629               	rlcf	(___flmul@grs+1)^0,f,c
  8222  001222  362A               	rlcf	(___flmul@grs+2)^0,f,c
  8223  001224  362B               	rlcf	(___flmul@grs+3)^0,f,c
  8224  001226  0632               	decf	___flmul@temp^0,f,c
  8225  001228  A0D8               	btfss	status,0,c
  8226  00122A  0633               	decf	(___flmul@temp+1)^0,f,c
  8227  00122C                     l2848:
  8228  00122C  FFFF               	dw	65535	; assembler added errata NOP
  8229  00122E  AE30               	btfss	(___flmul@prod+2)^0,7,c
  8230  001230  EF1C  F009         	goto	u2681
  8231  001234  EF1F  F009         	goto	u2680
  8232  001238                     u2681:
  8233  001238  FFFF               	dw	65535	; assembler added errata NOP
  8234  00123A  EFFD  F008         	goto	l2842
  8235  00123E                     u2680:
  8236  00123E  FFFF               	dw	65535	; assembler added errata NOP
  8237  001240  0E00               	movlw	0
  8238  001242  6E2C               	movwf	___flmul@aexp^0,c
  8239  001244  AE2B               	btfss	(___flmul@grs+3)^0,7,c
  8240  001246  EF27  F009         	goto	u2691
  8241  00124A  EF2A  F009         	goto	u2690
  8242  00124E                     u2691:
  8243  00124E  FFFF               	dw	65535	; assembler added errata NOP
  8244  001250  EF55  F009         	goto	l1066
  8245  001254                     u2690:
  8246  001254  FFFF               	dw	65535	; assembler added errata NOP
  8247  001256  0EFF               	movlw	255
  8248  001258  1428               	andwf	___flmul@grs^0,w,c
  8249  00125A  6E23               	movwf	??___flmul^0,c
  8250  00125C  0EFF               	movlw	255
  8251  00125E  1429               	andwf	(___flmul@grs+1)^0,w,c
  8252  001260  6E24               	movwf	(??___flmul+1)^0,c
  8253  001262  0EFF               	movlw	255
  8254  001264  142A               	andwf	(___flmul@grs+2)^0,w,c
  8255  001266  6E25               	movwf	(??___flmul+2)^0,c
  8256  001268  0E7F               	movlw	127
  8257  00126A  142B               	andwf	(___flmul@grs+3)^0,w,c
  8258  00126C  6E26               	movwf	(??___flmul+3)^0,c
  8259  00126E  5023               	movf	??___flmul^0,w,c
  8260  001270  1024               	iorwf	(??___flmul+1)^0,w,c
  8261  001272  1025               	iorwf	(??___flmul+2)^0,w,c
  8262  001274  1026               	iorwf	(??___flmul+3)^0,w,c
  8263  001276  B4D8               	btfsc	status,2,c
  8264  001278  EF40  F009         	goto	u2701
  8265  00127C  EF43  F009         	goto	u2700
  8266  001280                     u2701:
  8267  001280  FFFF               	dw	65535	; assembler added errata NOP
  8268  001282  EF49  F009         	goto	l1067
  8269  001286                     u2700:
  8270  001286  FFFF               	dw	65535	; assembler added errata NOP
  8271  001288                     l2856:
  8272  001288  FFFF               	dw	65535	; assembler added errata NOP
  8273  00128A  0E01               	movlw	1
  8274  00128C  6E2C               	movwf	___flmul@aexp^0,c
  8275  00128E  EF55  F009         	goto	l1066
  8276  001292                     l1067:
  8277  001292  FFFF               	dw	65535	; assembler added errata NOP
  8278  001294  A02E               	btfss	___flmul@prod^0,0,c
  8279  001296  EF4F  F009         	goto	u2711
  8280  00129A  EF52  F009         	goto	u2710
  8281  00129E                     u2711:
  8282  00129E  FFFF               	dw	65535	; assembler added errata NOP
  8283  0012A0  EF55  F009         	goto	l1066
  8284  0012A4                     u2710:
  8285  0012A4  FFFF               	dw	65535	; assembler added errata NOP
  8286  0012A6  EF44  F009         	goto	l2856
  8287  0012AA                     l1066:
  8288  0012AA  FFFF               	dw	65535	; assembler added errata NOP
  8289  0012AC  502C               	movf	___flmul@aexp^0,w,c
  8290  0012AE  B4D8               	btfsc	status,2,c
  8291  0012B0  EF5C  F009         	goto	u2721
  8292  0012B4  EF5F  F009         	goto	u2720
  8293  0012B8                     u2721:
  8294  0012B8  FFFF               	dw	65535	; assembler added errata NOP
  8295  0012BA  EF86  F009         	goto	l2868
  8296  0012BE                     u2720:
  8297  0012BE  FFFF               	dw	65535	; assembler added errata NOP
  8298  0012C0  0E01               	movlw	1
  8299  0012C2  262E               	addwf	___flmul@prod^0,f,c
  8300  0012C4  0E00               	movlw	0
  8301  0012C6  222F               	addwfc	(___flmul@prod+1)^0,f,c
  8302  0012C8  2230               	addwfc	(___flmul@prod+2)^0,f,c
  8303  0012CA  2231               	addwfc	(___flmul@prod+3)^0,f,c
  8304  0012CC  A031               	btfss	(___flmul@prod+3)^0,0,c
  8305  0012CE  EF6B  F009         	goto	u2731
  8306  0012D2  EF6E  F009         	goto	u2730
  8307  0012D6                     u2731:
  8308  0012D6  FFFF               	dw	65535	; assembler added errata NOP
  8309  0012D8  EF86  F009         	goto	l2868
  8310  0012DC                     u2730:
  8311  0012DC  FFFF               	dw	65535	; assembler added errata NOP
  8312  0012DE  C02E  F023         	movff	___flmul@prod,??___flmul
  8313  0012E2  C02F  F024         	movff	___flmul@prod+1,??___flmul+1
  8314  0012E6  C030  F025         	movff	___flmul@prod+2,??___flmul+2
  8315  0012EA  C031  F026         	movff	___flmul@prod+3,??___flmul+3
  8316  0012EE  3426               	rlcf	(??___flmul+3)^0,w,c
  8317  0012F0  3226               	rrcf	(??___flmul+3)^0,f,c
  8318  0012F2  3225               	rrcf	(??___flmul+2)^0,f,c
  8319  0012F4  3224               	rrcf	(??___flmul+1)^0,f,c
  8320  0012F6  3223               	rrcf	??___flmul^0,f,c
  8321  0012F8  C023  F02E         	movff	??___flmul,___flmul@prod
  8322  0012FC  C024  F02F         	movff	??___flmul+1,___flmul@prod+1
  8323  001300  C025  F030         	movff	??___flmul+2,___flmul@prod+2
  8324  001304  C026  F031         	movff	??___flmul+3,___flmul@prod+3
  8325  001308  4A32               	infsnz	___flmul@temp^0,f,c
  8326  00130A  2A33               	incf	(___flmul@temp+1)^0,f,c
  8327  00130C                     l2868:
  8328  00130C  FFFF               	dw	65535	; assembler added errata NOP
  8329  00130E  BE33               	btfsc	(___flmul@temp+1)^0,7,c
  8330  001310  EF92  F009         	goto	u2741
  8331  001314  5033               	movf	(___flmul@temp+1)^0,w,c
  8332  001316  E109               	bnz	u2740
  8333  001318  2832               	incf	___flmul@temp^0,w,c
  8334  00131A  A0D8               	btfss	status,0,c
  8335  00131C  EF92  F009         	goto	u2741
  8336  001320  EF95  F009         	goto	u2740
  8337  001324                     u2741:
  8338  001324  FFFF               	dw	65535	; assembler added errata NOP
  8339  001326  EFA0  F009         	goto	l2872
  8340  00132A                     u2740:
  8341  00132A  FFFF               	dw	65535	; assembler added errata NOP
  8342  00132C  0E00               	movlw	0
  8343  00132E  6E2E               	movwf	___flmul@prod^0,c
  8344  001330  0E00               	movlw	0
  8345  001332  6E2F               	movwf	(___flmul@prod+1)^0,c
  8346  001334  0E80               	movlw	128
  8347  001336  6E30               	movwf	(___flmul@prod+2)^0,c
  8348  001338  0E7F               	movlw	127
  8349  00133A  6E31               	movwf	(___flmul@prod+3)^0,c
  8350  00133C  EFD5  F009         	goto	l2884
  8351  001340                     l2872:
  8352  001340  FFFF               	dw	65535	; assembler added errata NOP
  8353  001342  BE33               	btfsc	(___flmul@temp+1)^0,7,c
  8354  001344  EFAF  F009         	goto	u2750
  8355  001348  5033               	movf	(___flmul@temp+1)^0,w,c
  8356  00134A  E106               	bnz	u2751
  8357  00134C  0432               	decf	___flmul@temp^0,w,c
  8358  00134E  B0D8               	btfsc	status,0,c
  8359  001350  EFAC  F009         	goto	u2751
  8360  001354  EFAF  F009         	goto	u2750
  8361  001358                     u2751:
  8362  001358  FFFF               	dw	65535	; assembler added errata NOP
  8363  00135A  EFBC  F009         	goto	l1074
  8364  00135E                     u2750:
  8365  00135E  FFFF               	dw	65535	; assembler added errata NOP
  8366  001360  0E00               	movlw	0
  8367  001362  6E2E               	movwf	___flmul@prod^0,c
  8368  001364  0E00               	movlw	0
  8369  001366  6E2F               	movwf	(___flmul@prod+1)^0,c
  8370  001368  0E00               	movlw	0
  8371  00136A  6E30               	movwf	(___flmul@prod+2)^0,c
  8372  00136C  0E00               	movlw	0
  8373  00136E  6E31               	movwf	(___flmul@prod+3)^0,c
  8374  001370  0E00               	movlw	0
  8375  001372  6E27               	movwf	___flmul@sign^0,c
  8376  001374  EFD5  F009         	goto	l2884
  8377  001378                     l1074:
  8378  001378  FFFF               	dw	65535	; assembler added errata NOP
  8379  00137A  C032  F02D         	movff	___flmul@temp,___flmul@bexp
  8380  00137E  0EFF               	movlw	255
  8381  001380  162E               	andwf	___flmul@prod^0,f,c
  8382  001382  0EFF               	movlw	255
  8383  001384  162F               	andwf	(___flmul@prod+1)^0,f,c
  8384  001386  0E7F               	movlw	127
  8385  001388  1630               	andwf	(___flmul@prod+2)^0,f,c
  8386  00138A  0E00               	movlw	0
  8387  00138C  1631               	andwf	(___flmul@prod+3)^0,f,c
  8388  00138E  A02D               	btfss	___flmul@bexp^0,0,c
  8389  001390  EFCC  F009         	goto	u2761
  8390  001394  EFCF  F009         	goto	u2760
  8391  001398                     u2761:
  8392  001398  FFFF               	dw	65535	; assembler added errata NOP
  8393  00139A  EFD1  F009         	goto	l2882
  8394  00139E                     u2760:
  8395  00139E  FFFF               	dw	65535	; assembler added errata NOP
  8396  0013A0  8E30               	bsf	(___flmul@prod+2)^0,7,c
  8397  0013A2                     l2882:
  8398  0013A2  FFFF               	dw	65535	; assembler added errata NOP
  8399  0013A4  90D8               	bcf	status,0,c
  8400  0013A6  302D               	rrcf	___flmul@bexp^0,w,c
  8401  0013A8  6E31               	movwf	(___flmul@prod+3)^0,c
  8402  0013AA                     l2884:
  8403  0013AA  FFFF               	dw	65535	; assembler added errata NOP
  8404  0013AC  5027               	movf	___flmul@sign^0,w,c
  8405  0013AE  1231               	iorwf	(___flmul@prod+3)^0,f,c
  8406  0013B0  C02E  F01B         	movff	___flmul@prod,?___flmul
  8407  0013B4  C02F  F01C         	movff	___flmul@prod+1,?___flmul+1
  8408  0013B8  C030  F01D         	movff	___flmul@prod+2,?___flmul+2
  8409  0013BC  C031  F01E         	movff	___flmul@prod+3,?___flmul+3
  8410  0013C0                     l1061:
  8411  0013C0  FFFF               	dw	65535	; assembler added errata NOP
  8412  0013C2  0012               	return		;funcret
  8413  0013C4  FFFF               	dw	65535	; errata NOP
  8414  0013C6                     __end_of___flmul:
  8415                           	callstack 0
  8416                           
  8417 ;; *************** function _configure_ad_conversion_tank *****************
  8418 ;; Defined at:
  8419 ;;		line 19 in file "oven.c"
  8420 ;; Parameters:    Size  Location     Type
  8421 ;;		None
  8422 ;; Auto vars:     Size  Location     Type
  8423 ;;		None
  8424 ;; Return value:  Size  Location     Type
  8425 ;;                  1    wreg      void 
  8426 ;; Registers used:
  8427 ;;		wreg, status,2
  8428 ;; Tracked objects:
  8429 ;;		On entry : 0/0
  8430 ;;		On exit  : 0/0
  8431 ;;		Unchanged: 0/0
  8432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8433 ;;      Params:         0       0       0       0       0       0       0
  8434 ;;      Locals:         0       0       0       0       0       0       0
  8435 ;;      Temps:          0       0       0       0       0       0       0
  8436 ;;      Totals:         0       0       0       0       0       0       0
  8437 ;;Total ram usage:        0 bytes
  8438 ;; Hardware stack levels used:    1
  8439 ;; Hardware stack levels required when called:    1
  8440 ;; This function calls:
  8441 ;;		Nothing
  8442 ;; This function is called by:
  8443 ;;		_main
  8444 ;; This function uses a non-reentrant model
  8445 ;;
  8446                           
  8447                           	psect	text33
  8448  002D12                     __ptext33:
  8449                           	callstack 0
  8450  002D12                     _configure_ad_conversion_tank:
  8451                           	callstack 0
  8452  002D12  FFFF               	dw	65535	; assembler added errata NOP
  8453  002D14                     
  8454                           ;oven.c: 20:     ADCON0 = 0;
  8455  002D14  0E00               	movlw	0
  8456  002D16  6EC2               	movwf	194,c	;volatile
  8457  002D18                     
  8458                           ;oven.c: 21:     ADCON0bits.CHS0 = 0;
  8459  002D18  96C2               	bcf	194,3,c	;volatile
  8460  002D1A                     
  8461                           ;oven.c: 22:     ADCON0bits.CHS1 = 0;
  8462  002D1A  98C2               	bcf	194,4,c	;volatile
  8463  002D1C                     
  8464                           ;oven.c: 23:     ADCON0bits.CHS2 = 0;
  8465  002D1C  9AC2               	bcf	194,5,c	;volatile
  8466  002D1E                     
  8467                           ;oven.c: 24:     ADCON0bits.ADON = 1;
  8468  002D1E  80C2               	bsf	194,0,c	;volatile
  8469                           
  8470                           ;oven.c: 25:     ADRESH = 0;
  8471  002D20  0E00               	movlw	0
  8472  002D22  6EC4               	movwf	196,c	;volatile
  8473                           
  8474                           ;oven.c: 26:     ADRESL = 0;
  8475  002D24  0E00               	movlw	0
  8476  002D26  6EC3               	movwf	195,c	;volatile
  8477                           
  8478                           ;oven.c: 27:     ADCON1 = 0;
  8479  002D28  0E00               	movlw	0
  8480  002D2A  6EC1               	movwf	193,c	;volatile
  8481  002D2C  0012               	return		;funcret
  8482  002D2E  FFFF               	dw	65535	; errata NOP
  8483  002D30                     __end_of_configure_ad_conversion_tank:
  8484                           	callstack 0
  8485                           
  8486 ;; *************** function _configure_ad_conversion_oven *****************
  8487 ;; Defined at:
  8488 ;;		line 8 in file "oven.c"
  8489 ;; Parameters:    Size  Location     Type
  8490 ;;		None
  8491 ;; Auto vars:     Size  Location     Type
  8492 ;;		None
  8493 ;; Return value:  Size  Location     Type
  8494 ;;                  1    wreg      void 
  8495 ;; Registers used:
  8496 ;;		wreg, status,2
  8497 ;; Tracked objects:
  8498 ;;		On entry : 0/0
  8499 ;;		On exit  : 0/0
  8500 ;;		Unchanged: 0/0
  8501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8502 ;;      Params:         0       0       0       0       0       0       0
  8503 ;;      Locals:         0       0       0       0       0       0       0
  8504 ;;      Temps:          0       0       0       0       0       0       0
  8505 ;;      Totals:         0       0       0       0       0       0       0
  8506 ;;Total ram usage:        0 bytes
  8507 ;; Hardware stack levels used:    1
  8508 ;; Hardware stack levels required when called:    1
  8509 ;; This function calls:
  8510 ;;		Nothing
  8511 ;; This function is called by:
  8512 ;;		_main
  8513 ;; This function uses a non-reentrant model
  8514 ;;
  8515                           
  8516                           	psect	text34
  8517  002D30                     __ptext34:
  8518                           	callstack 0
  8519  002D30                     _configure_ad_conversion_oven:
  8520                           	callstack 0
  8521  002D30  FFFF               	dw	65535	; assembler added errata NOP
  8522  002D32                     
  8523                           ;oven.c: 9:     ADCON0 = 0;
  8524  002D32  0E00               	movlw	0
  8525  002D34  6EC2               	movwf	194,c	;volatile
  8526  002D36                     
  8527                           ;oven.c: 10:     ADCON0bits.CHS0 = 0;
  8528  002D36  96C2               	bcf	194,3,c	;volatile
  8529  002D38                     
  8530                           ;oven.c: 11:     ADCON0bits.CHS1 = 0;
  8531  002D38  98C2               	bcf	194,4,c	;volatile
  8532  002D3A                     
  8533                           ;oven.c: 12:     ADCON0bits.CHS2 = 1;
  8534  002D3A  8AC2               	bsf	194,5,c	;volatile
  8535  002D3C                     
  8536                           ;oven.c: 13:     ADCON0bits.ADON = 1;
  8537  002D3C  80C2               	bsf	194,0,c	;volatile
  8538                           
  8539                           ;oven.c: 14:     ADRESH = 0;
  8540  002D3E  0E00               	movlw	0
  8541  002D40  6EC4               	movwf	196,c	;volatile
  8542                           
  8543                           ;oven.c: 15:     ADRESL = 0;
  8544  002D42  0E00               	movlw	0
  8545  002D44  6EC3               	movwf	195,c	;volatile
  8546                           
  8547                           ;oven.c: 16:     ADCON1 = 0;
  8548  002D46  0E00               	movlw	0
  8549  002D48  6EC1               	movwf	193,c	;volatile
  8550  002D4A  0012               	return		;funcret
  8551  002D4C  FFFF               	dw	65535	; errata NOP
  8552  002D4E                     __end_of_configure_ad_conversion_oven:
  8553                           	callstack 0
  8554                           
  8555 ;; *************** function _check_temperature *****************
  8556 ;; Defined at:
  8557 ;;		line 50 in file "oven.c"
  8558 ;; Parameters:    Size  Location     Type
  8559 ;;  temp_to_be_c    2  124[COMRAM] int 
  8560 ;; Auto vars:     Size  Location     Type
  8561 ;;  grad            4    0[BANK0 ] float 
  8562 ;; Return value:  Size  Location     Type
  8563 ;;                  2  124[COMRAM] int 
  8564 ;; Registers used:
  8565 ;;		wreg, status,2, status,0, cstack
  8566 ;; Tracked objects:
  8567 ;;		On entry : 0/0
  8568 ;;		On exit  : 0/0
  8569 ;;		Unchanged: 0/0
  8570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8571 ;;      Params:         2       0       0       0       0       0       0
  8572 ;;      Locals:         0       4       0       0       0       0       0
  8573 ;;      Temps:          0       0       0       0       0       0       0
  8574 ;;      Totals:         2       4       0       0       0       0       0
  8575 ;;Total ram usage:        6 bytes
  8576 ;; Hardware stack levels used:    1
  8577 ;; Hardware stack levels required when called:    2
  8578 ;; This function calls:
  8579 ;;		___awdiv
  8580 ;;		___flge
  8581 ;;		___xxtofl
  8582 ;;		_abs
  8583 ;; This function is called by:
  8584 ;;		_main
  8585 ;; This function uses a non-reentrant model
  8586 ;;
  8587                           
  8588                           	psect	text35
  8589  002372                     __ptext35:
  8590                           	callstack 0
  8591  002372                     _check_temperature:
  8592                           	callstack 0
  8593  002372  FFFF               	dw	65535	; assembler added errata NOP
  8594  002374                     
  8595                           ;oven.c: 51:     float grad = abs(temp_to_be_checked - (-63))/5;
  8596  002374  0E00               	movlw	0
  8597  002376  6E08               	movwf	(___awdiv@divisor+1)^0,c
  8598  002378  0E05               	movlw	5
  8599  00237A  6E07               	movwf	___awdiv@divisor^0,c
  8600  00237C  0E3F               	movlw	63
  8601  00237E  247D               	addwf	check_temperature@temp_to_be_checked^0,w,c
  8602  002380  6E01               	movwf	abs@a^0,c
  8603  002382  0E00               	movlw	0
  8604  002384  207E               	addwfc	(check_temperature@temp_to_be_checked+1)^0,w,c
  8605  002386  6E02               	movwf	(abs@a+1)^0,c
  8606  002388  EC24  F015         	call	_abs	;wreg free
  8607  00238C  C001  F005         	movff	?_abs,___awdiv@dividend
  8608  002390  C002  F006         	movff	?_abs+1,___awdiv@dividend+1
  8609  002394  ECD4  F010         	call	___awdiv	;wreg free
  8610  002398  C005  F00D         	movff	?___awdiv,___xxtofl@val
  8611  00239C  C006  F00E         	movff	?___awdiv+1,___xxtofl@val+1
  8612  0023A0  0E00               	movlw	0
  8613  0023A2  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  8614  0023A4  0EFF               	movlw	-1
  8615  0023A6  6E0F               	movwf	(___xxtofl@val+2)^0,c
  8616  0023A8  6E10               	movwf	(___xxtofl@val+3)^0,c
  8617  0023AA  0E01               	movlw	1
  8618  0023AC  ECF2  F00D         	call	___xxtofl
  8619  0023B0  C00D  F0C0         	movff	?___xxtofl,check_temperature@grad
  8620  0023B4  C00E  F0C1         	movff	?___xxtofl+1,check_temperature@grad+1
  8621  0023B8  C00F  F0C2         	movff	?___xxtofl+2,check_temperature@grad+2
  8622  0023BC  C010  F0C3         	movff	?___xxtofl+3,check_temperature@grad+3
  8623                           
  8624                           ;oven.c: 52:     if (grad >= 12 && grad <= 13){
  8625  0023C0  C0C0  F071         	movff	check_temperature@grad,___flge@ff1
  8626  0023C4  C0C1  F072         	movff	check_temperature@grad+1,___flge@ff1+1
  8627  0023C8  C0C2  F073         	movff	check_temperature@grad+2,___flge@ff1+2
  8628  0023CC  C0C3  F074         	movff	check_temperature@grad+3,___flge@ff1+3
  8629  0023D0  0E00               	movlw	0
  8630  0023D2  6E75               	movwf	___flge@ff2^0,c
  8631  0023D4  0E00               	movlw	0
  8632  0023D6  6E76               	movwf	(___flge@ff2+1)^0,c
  8633  0023D8  0E40               	movlw	64
  8634  0023DA  6E77               	movwf	(___flge@ff2+2)^0,c
  8635  0023DC  0E41               	movlw	65
  8636  0023DE  6E78               	movwf	(___flge@ff2+3)^0,c
  8637  0023E0  EC40  F010         	call	___flge	;wreg free
  8638  0023E4  A0D8               	btfss	status,0,c
  8639  0023E6  EFF7  F011         	goto	u3371
  8640  0023EA  EFFA  F011         	goto	u3370
  8641  0023EE                     u3371:
  8642  0023EE  FFFF               	dw	65535	; assembler added errata NOP
  8643  0023F0  EF1C  F012         	goto	l3364
  8644  0023F4                     u3370:
  8645  0023F4  FFFF               	dw	65535	; assembler added errata NOP
  8646  0023F6  0E00               	movlw	0
  8647  0023F8  6E71               	movwf	___flge@ff1^0,c
  8648  0023FA  0E00               	movlw	0
  8649  0023FC  6E72               	movwf	(___flge@ff1+1)^0,c
  8650  0023FE  0E50               	movlw	80
  8651  002400  6E73               	movwf	(___flge@ff1+2)^0,c
  8652  002402  0E41               	movlw	65
  8653  002404  6E74               	movwf	(___flge@ff1+3)^0,c
  8654  002406  C0C0  F075         	movff	check_temperature@grad,___flge@ff2
  8655  00240A  C0C1  F076         	movff	check_temperature@grad+1,___flge@ff2+1
  8656  00240E  C0C2  F077         	movff	check_temperature@grad+2,___flge@ff2+2
  8657  002412  C0C3  F078         	movff	check_temperature@grad+3,___flge@ff2+3
  8658  002416  EC40  F010         	call	___flge	;wreg free
  8659  00241A  A0D8               	btfss	status,0,c
  8660  00241C  EF12  F012         	goto	u3381
  8661  002420  EF15  F012         	goto	u3380
  8662  002424                     u3381:
  8663  002424  FFFF               	dw	65535	; assembler added errata NOP
  8664  002426  EF1C  F012         	goto	l3364
  8665  00242A                     u3380:
  8666  00242A  FFFF               	dw	65535	; assembler added errata NOP
  8667  00242C                     
  8668                           ;oven.c: 53:         return 1;
  8669  00242C  0E00               	movlw	0
  8670  00242E  6E7E               	movwf	(?_check_temperature+1)^0,c
  8671  002430  0E01               	movlw	1
  8672  002432  6E7D               	movwf	?_check_temperature^0,c
  8673  002434  EF21  F012         	goto	l439
  8674  002438                     l3364:
  8675  002438  FFFF               	dw	65535	; assembler added errata NOP
  8676                           
  8677                           ;oven.c: 55:         return 0;
  8678  00243A  0E00               	movlw	0
  8679  00243C  6E7E               	movwf	(?_check_temperature+1)^0,c
  8680  00243E  0E00               	movlw	0
  8681  002440  6E7D               	movwf	?_check_temperature^0,c
  8682  002442                     l439:
  8683  002442  FFFF               	dw	65535	; assembler added errata NOP
  8684  002444  0012               	return		;funcret
  8685  002446  FFFF               	dw	65535	; errata NOP
  8686  002448                     __end_of_check_temperature:
  8687                           	callstack 0
  8688                           
  8689 ;; *************** function _abs *****************
  8690 ;; Defined at:
  8691 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  8692 ;; Parameters:    Size  Location     Type
  8693 ;;  a               2    0[COMRAM] int 
  8694 ;; Auto vars:     Size  Location     Type
  8695 ;;		None
  8696 ;; Return value:  Size  Location     Type
  8697 ;;                  2    0[COMRAM] int 
  8698 ;; Registers used:
  8699 ;;		wreg, status,2, status,0
  8700 ;; Tracked objects:
  8701 ;;		On entry : 0/0
  8702 ;;		On exit  : 0/0
  8703 ;;		Unchanged: 0/0
  8704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8705 ;;      Params:         2       0       0       0       0       0       0
  8706 ;;      Locals:         0       0       0       0       0       0       0
  8707 ;;      Temps:          2       0       0       0       0       0       0
  8708 ;;      Totals:         4       0       0       0       0       0       0
  8709 ;;Total ram usage:        4 bytes
  8710 ;; Hardware stack levels used:    1
  8711 ;; Hardware stack levels required when called:    1
  8712 ;; This function calls:
  8713 ;;		Nothing
  8714 ;; This function is called by:
  8715 ;;		_check_temperature
  8716 ;; This function uses a non-reentrant model
  8717 ;;
  8718                           
  8719                           	psect	text36
  8720  002A48                     __ptext36:
  8721                           	callstack 0
  8722  002A48                     _abs:
  8723                           	callstack 0
  8724  002A48  FFFF               	dw	65535	; assembler added errata NOP
  8725  002A4A  BE02               	btfsc	(abs@a+1)^0,7,c
  8726  002A4C  EF33  F015         	goto	u3150
  8727  002A50  5002               	movf	(abs@a+1)^0,w,c
  8728  002A52  E106               	bnz	u3151
  8729  002A54  0401               	decf	abs@a^0,w,c
  8730  002A56  B0D8               	btfsc	status,0,c
  8731  002A58  EF30  F015         	goto	u3151
  8732  002A5C  EF33  F015         	goto	u3150
  8733  002A60                     u3151:
  8734  002A60  FFFF               	dw	65535	; assembler added errata NOP
  8735  002A62  EF42  F015         	goto	l1118
  8736  002A66                     u3150:
  8737  002A66  FFFF               	dw	65535	; assembler added errata NOP
  8738  002A68  C001  F003         	movff	abs@a,??_abs
  8739  002A6C  C002  F004         	movff	abs@a+1,??_abs+1
  8740  002A70  1E03               	comf	??_abs^0,f,c
  8741  002A72  1E04               	comf	(??_abs+1)^0,f,c
  8742  002A74  4A03               	infsnz	??_abs^0,f,c
  8743  002A76  2A04               	incf	(??_abs+1)^0,f,c
  8744  002A78  C003  F001         	movff	??_abs,?_abs
  8745  002A7C  C004  F002         	movff	??_abs+1,?_abs+1
  8746  002A80  EF47  F015         	goto	l1121
  8747  002A84                     l1118:
  8748  002A84  FFFF               	dw	65535	; assembler added errata NOP
  8749  002A86  C001  F001         	movff	abs@a,?_abs
  8750  002A8A  C002  F002         	movff	abs@a+1,?_abs+1
  8751  002A8E                     l1121:
  8752  002A8E  FFFF               	dw	65535	; assembler added errata NOP
  8753  002A90  0012               	return		;funcret
  8754  002A92  FFFF               	dw	65535	; errata NOP
  8755  002A94                     __end_of_abs:
  8756                           	callstack 0
  8757                           
  8758 ;; *************** function ___xxtofl *****************
  8759 ;; Defined at:
  8760 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  8761 ;; Parameters:    Size  Location     Type
  8762 ;;  sign            1    wreg     unsigned char 
  8763 ;;  val             4   12[COMRAM] long 
  8764 ;; Auto vars:     Size  Location     Type
  8765 ;;  sign            1   20[COMRAM] unsigned char 
  8766 ;;  arg             4   22[COMRAM] unsigned long 
  8767 ;;  exp             1   21[COMRAM] unsigned char 
  8768 ;; Return value:  Size  Location     Type
  8769 ;;                  4   12[COMRAM] unsigned char 
  8770 ;; Registers used:
  8771 ;;		wreg, status,2, status,0
  8772 ;; Tracked objects:
  8773 ;;		On entry : 0/0
  8774 ;;		On exit  : 0/0
  8775 ;;		Unchanged: 0/0
  8776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8777 ;;      Params:         4       0       0       0       0       0       0
  8778 ;;      Locals:         6       0       0       0       0       0       0
  8779 ;;      Temps:          4       0       0       0       0       0       0
  8780 ;;      Totals:        14       0       0       0       0       0       0
  8781 ;;Total ram usage:       14 bytes
  8782 ;; Hardware stack levels used:    1
  8783 ;; Hardware stack levels required when called:    1
  8784 ;; This function calls:
  8785 ;;		Nothing
  8786 ;; This function is called by:
  8787 ;;		_main
  8788 ;;		_get_temperature
  8789 ;;		_get_liters
  8790 ;;		_check_temperature
  8791 ;; This function uses a non-reentrant model
  8792 ;;
  8793                           
  8794                           	psect	text37
  8795  001BE4                     __ptext37:
  8796                           	callstack 0
  8797  001BE4                     ___xxtofl:
  8798                           	callstack 0
  8799  001BE4  FFFF               	dw	65535	; assembler added errata NOP
  8800                           
  8801                           ;incstack = 0
  8802                           ;___xxtofl@sign stored from wreg
  8803  001BE6  6E15               	movwf	___xxtofl@sign^0,c
  8804  001BE8  5015               	movf	___xxtofl@sign^0,w,c
  8805  001BEA  B4D8               	btfsc	status,2,c
  8806  001BEC  EFFA  F00D         	goto	u2901
  8807  001BF0  EFFD  F00D         	goto	u2900
  8808  001BF4                     u2901:
  8809  001BF4  FFFF               	dw	65535	; assembler added errata NOP
  8810  001BF6  EF22  F00E         	goto	l1098
  8811  001BFA                     u2900:
  8812  001BFA  FFFF               	dw	65535	; assembler added errata NOP
  8813  001BFC  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  8814  001BFE  EF06  F00E         	goto	u2910
  8815  001C02  EF03  F00E         	goto	u2911
  8816  001C06                     u2911:
  8817  001C06  FFFF               	dw	65535	; assembler added errata NOP
  8818  001C08  EF22  F00E         	goto	l1098
  8819  001C0C                     u2910:
  8820  001C0C  FFFF               	dw	65535	; assembler added errata NOP
  8821  001C0E  C00D  F011         	movff	___xxtofl@val,??___xxtofl
  8822  001C12  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
  8823  001C16  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
  8824  001C1A  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
  8825  001C1E  1E11               	comf	??___xxtofl^0,f,c
  8826  001C20  1E12               	comf	(??___xxtofl+1)^0,f,c
  8827  001C22  1E13               	comf	(??___xxtofl+2)^0,f,c
  8828  001C24  1E14               	comf	(??___xxtofl+3)^0,f,c
  8829  001C26  2A11               	incf	??___xxtofl^0,f,c
  8830  001C28  0E00               	movlw	0
  8831  001C2A  2212               	addwfc	(??___xxtofl+1)^0,f,c
  8832  001C2C  2213               	addwfc	(??___xxtofl+2)^0,f,c
  8833  001C2E  2214               	addwfc	(??___xxtofl+3)^0,f,c
  8834  001C30  C011  F017         	movff	??___xxtofl,___xxtofl@arg
  8835  001C34  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
  8836  001C38  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
  8837  001C3C  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
  8838  001C40  EF2B  F00E         	goto	l2976
  8839  001C44                     l1098:
  8840  001C44  FFFF               	dw	65535	; assembler added errata NOP
  8841  001C46  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
  8842  001C4A  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8843  001C4E  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8844  001C52  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8845  001C56                     l2976:
  8846  001C56  FFFF               	dw	65535	; assembler added errata NOP
  8847  001C58  500D               	movf	___xxtofl@val^0,w,c
  8848  001C5A  100E               	iorwf	(___xxtofl@val+1)^0,w,c
  8849  001C5C  100F               	iorwf	(___xxtofl@val+2)^0,w,c
  8850  001C5E  1010               	iorwf	(___xxtofl@val+3)^0,w,c
  8851  001C60  A4D8               	btfss	status,2,c
  8852  001C62  EF35  F00E         	goto	u2921
  8853  001C66  EF38  F00E         	goto	u2920
  8854  001C6A                     u2921:
  8855  001C6A  FFFF               	dw	65535	; assembler added errata NOP
  8856  001C6C  EF43  F00E         	goto	l2982
  8857  001C70                     u2920:
  8858  001C70  FFFF               	dw	65535	; assembler added errata NOP
  8859  001C72  0E00               	movlw	0
  8860  001C74  6E0D               	movwf	?___xxtofl^0,c
  8861  001C76  0E00               	movlw	0
  8862  001C78  6E0E               	movwf	(?___xxtofl+1)^0,c
  8863  001C7A  0E00               	movlw	0
  8864  001C7C  6E0F               	movwf	(?___xxtofl+2)^0,c
  8865  001C7E  0E00               	movlw	0
  8866  001C80  6E10               	movwf	(?___xxtofl+3)^0,c
  8867  001C82  EFEB  F00E         	goto	l1101
  8868  001C86                     l2982:
  8869  001C86  FFFF               	dw	65535	; assembler added errata NOP
  8870  001C88  0E96               	movlw	150
  8871  001C8A  6E16               	movwf	___xxtofl@exp^0,c
  8872  001C8C  EF4F  F00E         	goto	l2986
  8873  001C90                     l2984:
  8874  001C90  FFFF               	dw	65535	; assembler added errata NOP
  8875  001C92  2A16               	incf	___xxtofl@exp^0,f,c
  8876  001C94  90D8               	bcf	status,0,c
  8877  001C96  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  8878  001C98  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  8879  001C9A  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  8880  001C9C  3217               	rrcf	___xxtofl@arg^0,f,c
  8881  001C9E                     l2986:
  8882  001C9E  FFFF               	dw	65535	; assembler added errata NOP
  8883  001CA0  0E00               	movlw	0
  8884  001CA2  1417               	andwf	___xxtofl@arg^0,w,c
  8885  001CA4  6E11               	movwf	??___xxtofl^0,c
  8886  001CA6  0E00               	movlw	0
  8887  001CA8  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  8888  001CAA  6E12               	movwf	(??___xxtofl+1)^0,c
  8889  001CAC  0E00               	movlw	0
  8890  001CAE  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  8891  001CB0  6E13               	movwf	(??___xxtofl+2)^0,c
  8892  001CB2  0EFE               	movlw	254
  8893  001CB4  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  8894  001CB6  6E14               	movwf	(??___xxtofl+3)^0,c
  8895  001CB8  5011               	movf	??___xxtofl^0,w,c
  8896  001CBA  1012               	iorwf	(??___xxtofl+1)^0,w,c
  8897  001CBC  1013               	iorwf	(??___xxtofl+2)^0,w,c
  8898  001CBE  1014               	iorwf	(??___xxtofl+3)^0,w,c
  8899  001CC0  A4D8               	btfss	status,2,c
  8900  001CC2  EF65  F00E         	goto	u2931
  8901  001CC6  EF68  F00E         	goto	u2930
  8902  001CCA                     u2931:
  8903  001CCA  FFFF               	dw	65535	; assembler added errata NOP
  8904  001CCC  EF48  F00E         	goto	l2984
  8905  001CD0                     u2930:
  8906  001CD0  FFFF               	dw	65535	; assembler added errata NOP
  8907  001CD2  EF78  F00E         	goto	l1105
  8908  001CD6                     l2988:
  8909  001CD6  FFFF               	dw	65535	; assembler added errata NOP
  8910  001CD8  2A16               	incf	___xxtofl@exp^0,f,c
  8911  001CDA  0E01               	movlw	1
  8912  001CDC  2617               	addwf	___xxtofl@arg^0,f,c
  8913  001CDE  0E00               	movlw	0
  8914  001CE0  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
  8915  001CE2  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
  8916  001CE4  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
  8917  001CE6  90D8               	bcf	status,0,c
  8918  001CE8  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  8919  001CEA  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  8920  001CEC  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  8921  001CEE  3217               	rrcf	___xxtofl@arg^0,f,c
  8922  001CF0                     l1105:
  8923  001CF0  FFFF               	dw	65535	; assembler added errata NOP
  8924  001CF2  0E00               	movlw	0
  8925  001CF4  1417               	andwf	___xxtofl@arg^0,w,c
  8926  001CF6  6E11               	movwf	??___xxtofl^0,c
  8927  001CF8  0E00               	movlw	0
  8928  001CFA  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  8929  001CFC  6E12               	movwf	(??___xxtofl+1)^0,c
  8930  001CFE  0E00               	movlw	0
  8931  001D00  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  8932  001D02  6E13               	movwf	(??___xxtofl+2)^0,c
  8933  001D04  0EFF               	movlw	255
  8934  001D06  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  8935  001D08  6E14               	movwf	(??___xxtofl+3)^0,c
  8936  001D0A  5011               	movf	??___xxtofl^0,w,c
  8937  001D0C  1012               	iorwf	(??___xxtofl+1)^0,w,c
  8938  001D0E  1013               	iorwf	(??___xxtofl+2)^0,w,c
  8939  001D10  1014               	iorwf	(??___xxtofl+3)^0,w,c
  8940  001D12  A4D8               	btfss	status,2,c
  8941  001D14  EF8E  F00E         	goto	u2941
  8942  001D18  EF91  F00E         	goto	u2940
  8943  001D1C                     u2941:
  8944  001D1C  FFFF               	dw	65535	; assembler added errata NOP
  8945  001D1E  EF6B  F00E         	goto	l2988
  8946  001D22                     u2940:
  8947  001D22  FFFF               	dw	65535	; assembler added errata NOP
  8948  001D24  EF9B  F00E         	goto	l2996
  8949  001D28                     l2994:
  8950  001D28  FFFF               	dw	65535	; assembler added errata NOP
  8951  001D2A  0616               	decf	___xxtofl@exp^0,f,c
  8952  001D2C  90D8               	bcf	status,0,c
  8953  001D2E  3617               	rlcf	___xxtofl@arg^0,f,c
  8954  001D30  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
  8955  001D32  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
  8956  001D34  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
  8957  001D36                     l2996:
  8958  001D36  FFFF               	dw	65535	; assembler added errata NOP
  8959  001D38  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
  8960  001D3A  EFA1  F00E         	goto	u2951
  8961  001D3E  EFA4  F00E         	goto	u2950
  8962  001D42                     u2951:
  8963  001D42  FFFF               	dw	65535	; assembler added errata NOP
  8964  001D44  EFAE  F00E         	goto	l1112
  8965  001D48                     u2950:
  8966  001D48  FFFF               	dw	65535	; assembler added errata NOP
  8967  001D4A  0E02               	movlw	2
  8968  001D4C  6016               	cpfslt	___xxtofl@exp^0,c
  8969  001D4E  EFAB  F00E         	goto	u2961
  8970  001D52  EFAE  F00E         	goto	u2960
  8971  001D56                     u2961:
  8972  001D56  FFFF               	dw	65535	; assembler added errata NOP
  8973  001D58  EF94  F00E         	goto	l2994
  8974  001D5C                     u2960:
  8975  001D5C                     l1112:
  8976  001D5C  FFFF               	dw	65535	; assembler added errata NOP
  8977  001D5E  B016               	btfsc	___xxtofl@exp^0,0,c
  8978  001D60  EFB4  F00E         	goto	u2971
  8979  001D64  EFB7  F00E         	goto	u2970
  8980  001D68                     u2971:
  8981  001D68  FFFF               	dw	65535	; assembler added errata NOP
  8982  001D6A  EFB9  F00E         	goto	l3002
  8983  001D6E                     u2970:
  8984  001D6E  FFFF               	dw	65535	; assembler added errata NOP
  8985  001D70  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
  8986  001D72                     l3002:
  8987  001D72  FFFF               	dw	65535	; assembler added errata NOP
  8988  001D74  90D8               	bcf	status,0,c
  8989  001D76  3216               	rrcf	___xxtofl@exp^0,f,c
  8990  001D78  C016  F011         	movff	___xxtofl@exp,??___xxtofl
  8991  001D7C  6A12               	clrf	(??___xxtofl+1)^0,c
  8992  001D7E  6A13               	clrf	(??___xxtofl+2)^0,c
  8993  001D80  6A14               	clrf	(??___xxtofl+3)^0,c
  8994  001D82  C011  F014         	movff	??___xxtofl,??___xxtofl+3
  8995  001D86  6A13               	clrf	(??___xxtofl+2)^0,c
  8996  001D88  6A12               	clrf	(??___xxtofl+1)^0,c
  8997  001D8A  6A11               	clrf	??___xxtofl^0,c
  8998  001D8C  5011               	movf	??___xxtofl^0,w,c
  8999  001D8E  1217               	iorwf	___xxtofl@arg^0,f,c
  9000  001D90  5012               	movf	(??___xxtofl+1)^0,w,c
  9001  001D92  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
  9002  001D94  5013               	movf	(??___xxtofl+2)^0,w,c
  9003  001D96  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
  9004  001D98  5014               	movf	(??___xxtofl+3)^0,w,c
  9005  001D9A  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
  9006  001D9C  5015               	movf	___xxtofl@sign^0,w,c
  9007  001D9E  B4D8               	btfsc	status,2,c
  9008  001DA0  EFD4  F00E         	goto	u2981
  9009  001DA4  EFD7  F00E         	goto	u2980
  9010  001DA8                     u2981:
  9011  001DA8  FFFF               	dw	65535	; assembler added errata NOP
  9012  001DAA  EFE2  F00E         	goto	l3012
  9013  001DAE                     u2980:
  9014  001DAE  FFFF               	dw	65535	; assembler added errata NOP
  9015  001DB0  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  9016  001DB2  EFE0  F00E         	goto	u2990
  9017  001DB6  EFDD  F00E         	goto	u2991
  9018  001DBA                     u2991:
  9019  001DBA  FFFF               	dw	65535	; assembler added errata NOP
  9020  001DBC  EFE2  F00E         	goto	l3012
  9021  001DC0                     u2990:
  9022  001DC0  FFFF               	dw	65535	; assembler added errata NOP
  9023  001DC2  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
  9024  001DC4                     l3012:
  9025  001DC4  FFFF               	dw	65535	; assembler added errata NOP
  9026  001DC6  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
  9027  001DCA  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
  9028  001DCE  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
  9029  001DD2  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
  9030  001DD6                     l1101:
  9031  001DD6  FFFF               	dw	65535	; assembler added errata NOP
  9032  001DD8  0012               	return		;funcret
  9033  001DDA  FFFF               	dw	65535	; errata NOP
  9034  001DDC                     __end_of___xxtofl:
  9035                           	callstack 0
  9036                           
  9037 ;; *************** function ___flge *****************
  9038 ;; Defined at:
  9039 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
  9040 ;; Parameters:    Size  Location     Type
  9041 ;;  ff1             4  112[COMRAM] unsigned char 
  9042 ;;  ff2             4  116[COMRAM] unsigned char 
  9043 ;; Auto vars:     Size  Location     Type
  9044 ;;		None
  9045 ;; Return value:  Size  Location     Type
  9046 ;;		None               void
  9047 ;; Registers used:
  9048 ;;		wreg, status,2, status,0
  9049 ;; Tracked objects:
  9050 ;;		On entry : 0/0
  9051 ;;		On exit  : 0/0
  9052 ;;		Unchanged: 0/0
  9053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9054 ;;      Params:         8       0       0       0       0       0       0
  9055 ;;      Locals:         0       0       0       0       0       0       0
  9056 ;;      Temps:          4       0       0       0       0       0       0
  9057 ;;      Totals:        12       0       0       0       0       0       0
  9058 ;;Total ram usage:       12 bytes
  9059 ;; Hardware stack levels used:    1
  9060 ;; Hardware stack levels required when called:    1
  9061 ;; This function calls:
  9062 ;;		Nothing
  9063 ;; This function is called by:
  9064 ;;		_main
  9065 ;;		_check_temperature
  9066 ;;		_roundf
  9067 ;; This function uses a non-reentrant model
  9068 ;;
  9069                           
  9070                           	psect	text38
  9071  002080                     __ptext38:
  9072                           	callstack 0
  9073  002080                     ___flge:
  9074                           	callstack 0
  9075  002080  FFFF               	dw	65535	; assembler added errata NOP
  9076  002082  0E00               	movlw	0
  9077  002084  1471               	andwf	___flge@ff1^0,w,c
  9078  002086  6E79               	movwf	??___flge^0,c
  9079  002088  0E00               	movlw	0
  9080  00208A  1472               	andwf	(___flge@ff1+1)^0,w,c
  9081  00208C  6E7A               	movwf	(??___flge+1)^0,c
  9082  00208E  0E80               	movlw	128
  9083  002090  1473               	andwf	(___flge@ff1+2)^0,w,c
  9084  002092  6E7B               	movwf	(??___flge+2)^0,c
  9085  002094  0E7F               	movlw	127
  9086  002096  1474               	andwf	(___flge@ff1+3)^0,w,c
  9087  002098  6E7C               	movwf	(??___flge+3)^0,c
  9088  00209A  5079               	movf	??___flge^0,w,c
  9089  00209C  107A               	iorwf	(??___flge+1)^0,w,c
  9090  00209E  107B               	iorwf	(??___flge+2)^0,w,c
  9091  0020A0  107C               	iorwf	(??___flge+3)^0,w,c
  9092  0020A2  A4D8               	btfss	status,2,c
  9093  0020A4  EF56  F010         	goto	u2771
  9094  0020A8  EF59  F010         	goto	u2770
  9095  0020AC                     u2771:
  9096  0020AC  FFFF               	dw	65535	; assembler added errata NOP
  9097  0020AE  EF62  F010         	goto	l2900
  9098  0020B2                     u2770:
  9099  0020B2  FFFF               	dw	65535	; assembler added errata NOP
  9100  0020B4  0E00               	movlw	0
  9101  0020B6  6E71               	movwf	___flge@ff1^0,c
  9102  0020B8  0E00               	movlw	0
  9103  0020BA  6E72               	movwf	(___flge@ff1+1)^0,c
  9104  0020BC  0E00               	movlw	0
  9105  0020BE  6E73               	movwf	(___flge@ff1+2)^0,c
  9106  0020C0  0E00               	movlw	0
  9107  0020C2  6E74               	movwf	(___flge@ff1+3)^0,c
  9108  0020C4                     l2900:
  9109  0020C4  FFFF               	dw	65535	; assembler added errata NOP
  9110  0020C6  0E00               	movlw	0
  9111  0020C8  1475               	andwf	___flge@ff2^0,w,c
  9112  0020CA  6E79               	movwf	??___flge^0,c
  9113  0020CC  0E00               	movlw	0
  9114  0020CE  1476               	andwf	(___flge@ff2+1)^0,w,c
  9115  0020D0  6E7A               	movwf	(??___flge+1)^0,c
  9116  0020D2  0E80               	movlw	128
  9117  0020D4  1477               	andwf	(___flge@ff2+2)^0,w,c
  9118  0020D6  6E7B               	movwf	(??___flge+2)^0,c
  9119  0020D8  0E7F               	movlw	127
  9120  0020DA  1478               	andwf	(___flge@ff2+3)^0,w,c
  9121  0020DC  6E7C               	movwf	(??___flge+3)^0,c
  9122  0020DE  5079               	movf	??___flge^0,w,c
  9123  0020E0  107A               	iorwf	(??___flge+1)^0,w,c
  9124  0020E2  107B               	iorwf	(??___flge+2)^0,w,c
  9125  0020E4  107C               	iorwf	(??___flge+3)^0,w,c
  9126  0020E6  A4D8               	btfss	status,2,c
  9127  0020E8  EF78  F010         	goto	u2781
  9128  0020EC  EF7B  F010         	goto	u2780
  9129  0020F0                     u2781:
  9130  0020F0  FFFF               	dw	65535	; assembler added errata NOP
  9131  0020F2  EF84  F010         	goto	l2904
  9132  0020F6                     u2780:
  9133  0020F6  FFFF               	dw	65535	; assembler added errata NOP
  9134  0020F8  0E00               	movlw	0
  9135  0020FA  6E75               	movwf	___flge@ff2^0,c
  9136  0020FC  0E00               	movlw	0
  9137  0020FE  6E76               	movwf	(___flge@ff2+1)^0,c
  9138  002100  0E00               	movlw	0
  9139  002102  6E77               	movwf	(___flge@ff2+2)^0,c
  9140  002104  0E00               	movlw	0
  9141  002106  6E78               	movwf	(___flge@ff2+3)^0,c
  9142  002108                     l2904:
  9143  002108  FFFF               	dw	65535	; assembler added errata NOP
  9144  00210A  AE74               	btfss	(___flge@ff1+3)^0,7,c
  9145  00210C  EF8A  F010         	goto	u2791
  9146  002110  EF8D  F010         	goto	u2790
  9147  002114                     u2791:
  9148  002114  FFFF               	dw	65535	; assembler added errata NOP
  9149  002116  EF97  F010         	goto	l2908
  9150  00211A                     u2790:
  9151  00211A  FFFF               	dw	65535	; assembler added errata NOP
  9152  00211C  6C71               	negf	___flge@ff1^0,c
  9153  00211E  1E72               	comf	(___flge@ff1+1)^0,f,c
  9154  002120  B0D8               	btfsc	status,0,c
  9155  002122  2A72               	incf	(___flge@ff1+1)^0,f,c
  9156  002124  1E73               	comf	(___flge@ff1+2)^0,f,c
  9157  002126  B0D8               	btfsc	status,0,c
  9158  002128  2A73               	incf	(___flge@ff1+2)^0,f,c
  9159  00212A  0E80               	movlw	128
  9160  00212C  5674               	subfwb	(___flge@ff1+3)^0,f,c
  9161  00212E                     l2908:
  9162  00212E  FFFF               	dw	65535	; assembler added errata NOP
  9163  002130  AE78               	btfss	(___flge@ff2+3)^0,7,c
  9164  002132  EF9D  F010         	goto	u2801
  9165  002136  EFA0  F010         	goto	u2800
  9166  00213A                     u2801:
  9167  00213A  FFFF               	dw	65535	; assembler added errata NOP
  9168  00213C  EFAA  F010         	goto	l708
  9169  002140                     u2800:
  9170  002140  FFFF               	dw	65535	; assembler added errata NOP
  9171  002142  6C75               	negf	___flge@ff2^0,c
  9172  002144  1E76               	comf	(___flge@ff2+1)^0,f,c
  9173  002146  B0D8               	btfsc	status,0,c
  9174  002148  2A76               	incf	(___flge@ff2+1)^0,f,c
  9175  00214A  1E77               	comf	(___flge@ff2+2)^0,f,c
  9176  00214C  B0D8               	btfsc	status,0,c
  9177  00214E  2A77               	incf	(___flge@ff2+2)^0,f,c
  9178  002150  0E80               	movlw	128
  9179  002152  5678               	subfwb	(___flge@ff2+3)^0,f,c
  9180  002154                     l708:
  9181  002154  FFFF               	dw	65535	; assembler added errata NOP
  9182  002156  0E00               	movlw	0
  9183  002158  1A71               	xorwf	___flge@ff1^0,f,c
  9184  00215A  0E00               	movlw	0
  9185  00215C  1A72               	xorwf	(___flge@ff1+1)^0,f,c
  9186  00215E  0E00               	movlw	0
  9187  002160  1A73               	xorwf	(___flge@ff1+2)^0,f,c
  9188  002162  0E80               	movlw	128
  9189  002164  1A74               	xorwf	(___flge@ff1+3)^0,f,c
  9190  002166  0E00               	movlw	0
  9191  002168  1A75               	xorwf	___flge@ff2^0,f,c
  9192  00216A  0E00               	movlw	0
  9193  00216C  1A76               	xorwf	(___flge@ff2+1)^0,f,c
  9194  00216E  0E00               	movlw	0
  9195  002170  1A77               	xorwf	(___flge@ff2+2)^0,f,c
  9196  002172  0E80               	movlw	128
  9197  002174  1A78               	xorwf	(___flge@ff2+3)^0,f,c
  9198  002176  5075               	movf	___flge@ff2^0,w,c
  9199  002178  5C71               	subwf	___flge@ff1^0,w,c
  9200  00217A  5076               	movf	(___flge@ff2+1)^0,w,c
  9201  00217C  5872               	subwfb	(___flge@ff1+1)^0,w,c
  9202  00217E  5077               	movf	(___flge@ff2+2)^0,w,c
  9203  002180  5873               	subwfb	(___flge@ff1+2)^0,w,c
  9204  002182  5078               	movf	(___flge@ff2+3)^0,w,c
  9205  002184  5874               	subwfb	(___flge@ff1+3)^0,w,c
  9206  002186  B0D8               	btfsc	status,0,c
  9207  002188  EFC8  F010         	goto	u2811
  9208  00218C  EFCB  F010         	goto	u2810
  9209  002190                     u2811:
  9210  002190  FFFF               	dw	65535	; assembler added errata NOP
  9211  002192  EFCF  F010         	goto	l2914
  9212  002196                     u2810:
  9213  002196  FFFF               	dw	65535	; assembler added errata NOP
  9214  002198  90D8               	bcf	status,0,c
  9215  00219A  EFD1  F010         	goto	l713
  9216  00219E                     l2914:
  9217  00219E  FFFF               	dw	65535	; assembler added errata NOP
  9218  0021A0  80D8               	bsf	status,0,c
  9219  0021A2                     l713:
  9220  0021A2  FFFF               	dw	65535	; assembler added errata NOP
  9221  0021A4  0012               	return		;funcret
  9222  0021A6  FFFF               	dw	65535	; errata NOP
  9223  0021A8                     __end_of___flge:
  9224                           	callstack 0
  9225                           
  9226 ;; *************** function ___awdiv *****************
  9227 ;; Defined at:
  9228 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  9229 ;; Parameters:    Size  Location     Type
  9230 ;;  dividend        2    4[COMRAM] int 
  9231 ;;  divisor         2    6[COMRAM] int 
  9232 ;; Auto vars:     Size  Location     Type
  9233 ;;  quotient        2   10[COMRAM] int 
  9234 ;;  sign            1    9[COMRAM] unsigned char 
  9235 ;;  counter         1    8[COMRAM] unsigned char 
  9236 ;; Return value:  Size  Location     Type
  9237 ;;                  2    4[COMRAM] int 
  9238 ;; Registers used:
  9239 ;;		wreg, status,2, status,0
  9240 ;; Tracked objects:
  9241 ;;		On entry : 0/0
  9242 ;;		On exit  : 0/0
  9243 ;;		Unchanged: 0/0
  9244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9245 ;;      Params:         4       0       0       0       0       0       0
  9246 ;;      Locals:         4       0       0       0       0       0       0
  9247 ;;      Temps:          0       0       0       0       0       0       0
  9248 ;;      Totals:         8       0       0       0       0       0       0
  9249 ;;Total ram usage:        8 bytes
  9250 ;; Hardware stack levels used:    1
  9251 ;; Hardware stack levels required when called:    1
  9252 ;; This function calls:
  9253 ;;		Nothing
  9254 ;; This function is called by:
  9255 ;;		_check_temperature
  9256 ;; This function uses a non-reentrant model
  9257 ;;
  9258                           
  9259                           	psect	text39
  9260  0021A8                     __ptext39:
  9261                           	callstack 0
  9262  0021A8                     ___awdiv:
  9263                           	callstack 0
  9264  0021A8  FFFF               	dw	65535	; assembler added errata NOP
  9265  0021AA  0E00               	movlw	0
  9266  0021AC  6E0A               	movwf	___awdiv@sign^0,c
  9267  0021AE  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  9268  0021B0  EFDF  F010         	goto	u3160
  9269  0021B4  EFDC  F010         	goto	u3161
  9270  0021B8                     u3161:
  9271  0021B8  FFFF               	dw	65535	; assembler added errata NOP
  9272  0021BA  EFE6  F010         	goto	l3128
  9273  0021BE                     u3160:
  9274  0021BE  FFFF               	dw	65535	; assembler added errata NOP
  9275  0021C0  6C07               	negf	___awdiv@divisor^0,c
  9276  0021C2  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  9277  0021C4  B0D8               	btfsc	status,0,c
  9278  0021C6  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  9279  0021C8  0E01               	movlw	1
  9280  0021CA  6E0A               	movwf	___awdiv@sign^0,c
  9281  0021CC                     l3128:
  9282  0021CC  FFFF               	dw	65535	; assembler added errata NOP
  9283  0021CE  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  9284  0021D0  EFEF  F010         	goto	u3170
  9285  0021D4  EFEC  F010         	goto	u3171
  9286  0021D8                     u3171:
  9287  0021D8  FFFF               	dw	65535	; assembler added errata NOP
  9288  0021DA  EFF6  F010         	goto	l3134
  9289  0021DE                     u3170:
  9290  0021DE  FFFF               	dw	65535	; assembler added errata NOP
  9291  0021E0  6C05               	negf	___awdiv@dividend^0,c
  9292  0021E2  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  9293  0021E4  B0D8               	btfsc	status,0,c
  9294  0021E6  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  9295  0021E8  0E01               	movlw	1
  9296  0021EA  1A0A               	xorwf	___awdiv@sign^0,f,c
  9297  0021EC                     l3134:
  9298  0021EC  FFFF               	dw	65535	; assembler added errata NOP
  9299  0021EE  0E00               	movlw	0
  9300  0021F0  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  9301  0021F2  0E00               	movlw	0
  9302  0021F4  6E0B               	movwf	___awdiv@quotient^0,c
  9303  0021F6  5007               	movf	___awdiv@divisor^0,w,c
  9304  0021F8  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  9305  0021FA  B4D8               	btfsc	status,2,c
  9306  0021FC  EF02  F011         	goto	u3181
  9307  002200  EF05  F011         	goto	u3180
  9308  002204                     u3181:
  9309  002204  FFFF               	dw	65535	; assembler added errata NOP
  9310  002206  EF36  F011         	goto	l3156
  9311  00220A                     u3180:
  9312  00220A  FFFF               	dw	65535	; assembler added errata NOP
  9313  00220C  0E01               	movlw	1
  9314  00220E  6E09               	movwf	___awdiv@counter^0,c
  9315  002210  EF0F  F011         	goto	l3142
  9316  002214                     l3140:
  9317  002214  FFFF               	dw	65535	; assembler added errata NOP
  9318  002216  90D8               	bcf	status,0,c
  9319  002218  3607               	rlcf	___awdiv@divisor^0,f,c
  9320  00221A  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  9321  00221C  2A09               	incf	___awdiv@counter^0,f,c
  9322  00221E                     l3142:
  9323  00221E  FFFF               	dw	65535	; assembler added errata NOP
  9324  002220  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  9325  002222  EF15  F011         	goto	u3191
  9326  002226  EF18  F011         	goto	u3190
  9327  00222A                     u3191:
  9328  00222A  FFFF               	dw	65535	; assembler added errata NOP
  9329  00222C  EF0A  F011         	goto	l3140
  9330  002230                     u3190:
  9331  002230  FFFF               	dw	65535	; assembler added errata NOP
  9332  002232                     l3144:
  9333  002232  FFFF               	dw	65535	; assembler added errata NOP
  9334  002234  90D8               	bcf	status,0,c
  9335  002236  360B               	rlcf	___awdiv@quotient^0,f,c
  9336  002238  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  9337  00223A  5007               	movf	___awdiv@divisor^0,w,c
  9338  00223C  5C05               	subwf	___awdiv@dividend^0,w,c
  9339  00223E  5008               	movf	(___awdiv@divisor+1)^0,w,c
  9340  002240  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  9341  002242  A0D8               	btfss	status,0,c
  9342  002244  EF26  F011         	goto	u3201
  9343  002248  EF29  F011         	goto	u3200
  9344  00224C                     u3201:
  9345  00224C  FFFF               	dw	65535	; assembler added errata NOP
  9346  00224E  EF2F  F011         	goto	l3152
  9347  002252                     u3200:
  9348  002252  FFFF               	dw	65535	; assembler added errata NOP
  9349  002254  5007               	movf	___awdiv@divisor^0,w,c
  9350  002256  5E05               	subwf	___awdiv@dividend^0,f,c
  9351  002258  5008               	movf	(___awdiv@divisor+1)^0,w,c
  9352  00225A  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  9353  00225C  800B               	bsf	___awdiv@quotient^0,0,c
  9354  00225E                     l3152:
  9355  00225E  FFFF               	dw	65535	; assembler added errata NOP
  9356  002260  90D8               	bcf	status,0,c
  9357  002262  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  9358  002264  3207               	rrcf	___awdiv@divisor^0,f,c
  9359  002266  2E09               	decfsz	___awdiv@counter^0,f,c
  9360  002268  EF19  F011         	goto	l3144
  9361  00226C                     l3156:
  9362  00226C  FFFF               	dw	65535	; assembler added errata NOP
  9363  00226E  500A               	movf	___awdiv@sign^0,w,c
  9364  002270  B4D8               	btfsc	status,2,c
  9365  002272  EF3D  F011         	goto	u3211
  9366  002276  EF40  F011         	goto	u3210
  9367  00227A                     u3211:
  9368  00227A  FFFF               	dw	65535	; assembler added errata NOP
  9369  00227C  EF45  F011         	goto	l3160
  9370  002280                     u3210:
  9371  002280  FFFF               	dw	65535	; assembler added errata NOP
  9372  002282  6C0B               	negf	___awdiv@quotient^0,c
  9373  002284  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  9374  002286  B0D8               	btfsc	status,0,c
  9375  002288  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  9376  00228A                     l3160:
  9377  00228A  FFFF               	dw	65535	; assembler added errata NOP
  9378  00228C  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  9379  002290  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  9380  002294  0012               	return		;funcret
  9381  002296  FFFF               	dw	65535	; errata NOP
  9382  002298                     __end_of___awdiv:
  9383                           	callstack 0
  9384                           
  9385 ;; *************** function _change_direction *****************
  9386 ;; Defined at:
  9387 ;;		line 41 in file "stepper_motor.c"
  9388 ;; Parameters:    Size  Location     Type
  9389 ;;  stepper_moto    2    0[COMRAM] PTR struct .
  9390 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
  9391 ;; Auto vars:     Size  Location     Type
  9392 ;;		None
  9393 ;; Return value:  Size  Location     Type
  9394 ;;                  1    wreg      void 
  9395 ;; Registers used:
  9396 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9397 ;; Tracked objects:
  9398 ;;		On entry : 0/0
  9399 ;;		On exit  : 0/0
  9400 ;;		Unchanged: 0/0
  9401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9402 ;;      Params:         2       0       0       0       0       0       0
  9403 ;;      Locals:         0       0       0       0       0       0       0
  9404 ;;      Temps:          2       0       0       0       0       0       0
  9405 ;;      Totals:         4       0       0       0       0       0       0
  9406 ;;Total ram usage:        4 bytes
  9407 ;; Hardware stack levels used:    1
  9408 ;; Hardware stack levels required when called:    1
  9409 ;; This function calls:
  9410 ;;		Nothing
  9411 ;; This function is called by:
  9412 ;;		_main
  9413 ;; This function uses a non-reentrant model
  9414 ;;
  9415                           
  9416                           	psect	text40
  9417  002BA8                     __ptext40:
  9418                           	callstack 0
  9419  002BA8                     _change_direction:
  9420                           	callstack 0
  9421  002BA8  FFFF               	dw	65535	; assembler added errata NOP
  9422  002BAA                     
  9423                           ;stepper_motor.c: 42:     stepper_motor -> direction = stepper_motor -> direction*(-1);
  9424  002BAA  EE20 F004          	lfsr	2,4
  9425  002BAE  5001               	movf	change_direction@stepper_motor^0,w,c
  9426  002BB0  26D9               	addwf	fsr2l,f,c
  9427  002BB2  5002               	movf	(change_direction@stepper_motor+1)^0,w,c
  9428  002BB4  22DA               	addwfc	fsr2h,f,c
  9429  002BB6  CFDE F003          	movff	postinc2,??_change_direction
  9430  002BBA  CFDD F004          	movff	postdec2,??_change_direction+1
  9431  002BBE  1E03               	comf	??_change_direction^0,f,c
  9432  002BC0  1E04               	comf	(??_change_direction+1)^0,f,c
  9433  002BC2  4A03               	infsnz	??_change_direction^0,f,c
  9434  002BC4  2A04               	incf	(??_change_direction+1)^0,f,c
  9435  002BC6  EE20 F004          	lfsr	2,4
  9436  002BCA  5001               	movf	change_direction@stepper_motor^0,w,c
  9437  002BCC  26D9               	addwf	fsr2l,f,c
  9438  002BCE  5002               	movf	(change_direction@stepper_motor+1)^0,w,c
  9439  002BD0  22DA               	addwfc	fsr2h,f,c
  9440  002BD2  C003  FFDE         	movff	??_change_direction,postinc2
  9441  002BD6  C004  FFDD         	movff	??_change_direction+1,postdec2
  9442  002BDA  0012               	return		;funcret
  9443  002BDC  FFFF               	dw	65535	; errata NOP
  9444  002BDE                     __end_of_change_direction:
  9445                           	callstack 0
  9446                           
  9447 ;; *************** function _rx_char_usart *****************
  9448 ;; Defined at:
  9449 ;;		line 254 in file "main.c"
  9450 ;; Parameters:    Size  Location     Type
  9451 ;;		None
  9452 ;; Auto vars:     Size  Location     Type
  9453 ;;		None
  9454 ;; Return value:  Size  Location     Type
  9455 ;;                  1    wreg      void 
  9456 ;; Registers used:
  9457 ;;		wreg, status,2
  9458 ;; Tracked objects:
  9459 ;;		On entry : 0/0
  9460 ;;		On exit  : 0/0
  9461 ;;		Unchanged: 0/0
  9462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9463 ;;      Params:         0       0       0       0       0       0       0
  9464 ;;      Locals:         0       0       0       0       0       0       0
  9465 ;;      Temps:          0       0       0       0       0       0       0
  9466 ;;      Totals:         0       0       0       0       0       0       0
  9467 ;;Total ram usage:        0 bytes
  9468 ;; Hardware stack levels used:    1
  9469 ;; This function calls:
  9470 ;;		Nothing
  9471 ;; This function is called by:
  9472 ;;		Interrupt level 2
  9473 ;; This function uses a non-reentrant model
  9474 ;;
  9475                           
  9476                           	psect	intcode
  9477  000008                     __pintcode:
  9478                           	callstack 0
  9479  000008                     _rx_char_usart:
  9480                           	callstack 0
  9481  000008  FFFF               	dw	65535	; assembler added errata NOP
  9482                           
  9483                           ;incstack = 0
  9484  00000A  827F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9485  00000C                     
  9486                           ;main.c: 255:     if(PIE1bits.RCIE && PIR1bits.RCIF){
  9487  00000C  AA9D               	btfss	157,5,c	;volatile
  9488  00000E  EF0B  F000         	goto	i2u387_41
  9489  000012  EF0E  F000         	goto	i2u387_40
  9490  000016                     i2u387_41:
  9491  000016  FFFF               	dw	65535	; assembler added errata NOP
  9492  000018  EF1E  F000         	goto	i2l3660
  9493  00001C                     i2u387_40:
  9494  00001C  FFFF               	dw	65535	; assembler added errata NOP
  9495  00001E  AA9E               	btfss	158,5,c	;volatile
  9496  000020  EF14  F000         	goto	i2u388_41
  9497  000024  EF17  F000         	goto	i2u388_40
  9498  000028                     i2u388_41:
  9499  000028  FFFF               	dw	65535	; assembler added errata NOP
  9500  00002A  EF1E  F000         	goto	i2l3660
  9501  00002E                     i2u388_40:
  9502  00002E  FFFF               	dw	65535	; assembler added errata NOP
  9503  000030                     
  9504                           ;main.c: 256:         PIR1bits.RCIF = 0;
  9505  000030  9A9E               	bcf	158,5,c	;volatile
  9506  000032                     
  9507                           ;main.c: 257:         state_changed = 1;
  9508  000032  0E01               	movlw	1
  9509  000034  0100               	movlb	0	; () banked
  9510  000036  6FA5               	movwf	_state_changed& (0+255),b
  9511                           
  9512                           ;main.c: 258:         read_new_char = 1;
  9513  000038  0E01               	movlw	1
  9514  00003A  6FA3               	movwf	_read_new_char& (0+255),b
  9515  00003C                     i2l3660:
  9516  00003C  FFFF               	dw	65535	; assembler added errata NOP
  9517                           
  9518                           ;main.c: 260:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF){
  9519  00003E  AAF2               	btfss	242,5,c	;volatile
  9520  000040  EF24  F000         	goto	i2u389_41
  9521  000044  EF27  F000         	goto	i2u389_40
  9522  000048                     i2u389_41:
  9523  000048  FFFF               	dw	65535	; assembler added errata NOP
  9524  00004A  EF38  F000         	goto	i2l224
  9525  00004E                     i2u389_40:
  9526  00004E  FFFF               	dw	65535	; assembler added errata NOP
  9527  000050  A4F2               	btfss	242,2,c	;volatile
  9528  000052  EF2D  F000         	goto	i2u390_41
  9529  000056  EF30  F000         	goto	i2u390_40
  9530  00005A                     i2u390_41:
  9531  00005A  FFFF               	dw	65535	; assembler added errata NOP
  9532  00005C  EF38  F000         	goto	i2l224
  9533  000060                     i2u390_40:
  9534  000060  FFFF               	dw	65535	; assembler added errata NOP
  9535  000062                     
  9536                           ;main.c: 261:         T0CON = 0;
  9537  000062  0E00               	movlw	0
  9538  000064  6ED5               	movwf	213,c	;volatile
  9539  000066                     
  9540                           ;main.c: 262:         INTCONbits.TMR0IF = 0;
  9541  000066  94F2               	bcf	242,2,c	;volatile
  9542                           
  9543                           ;main.c: 263:         timer_done = 1;
  9544  000068  0E01               	movlw	1
  9545  00006A  0100               	movlb	0	; () banked
  9546  00006C  6FA2               	movwf	_timer_done& (0+255),b
  9547  00006E                     
  9548                           ; BSR set to: 0
  9549                           ;main.c: 264:         T0CONbits.TMR0ON = 0;
  9550  00006E  9ED5               	bcf	213,7,c	;volatile
  9551  000070                     i2l224:
  9552  000070  FFFF               	dw	65535	; assembler added errata NOP
  9553  000072  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9554  000074  0011               	retfie		f
  9555  000076  FFFF               	dw	65535	; errata NOP
  9556  000078                     __end_of_rx_char_usart:
  9557                           	callstack 0
  9558                           
  9559                           	psect	rparam
  9560  0000                     
  9561                           	psect	temp
  9562  00007F                     btemp:
  9563                           	callstack 0
  9564  00007F                     	ds	1
  9565  0000                     int$flags	set	btemp
  9566  0000                     wtemp8	set	btemp+1
  9567  0000                     ttemp5	set	btemp+1
  9568  0000                     ttemp6	set	btemp+4
  9569  0000                     ttemp7	set	btemp+8
  9570                           
  9571                           	psect	idloc
  9572                           
  9573                           ;Config register IDLOC0 @ 0x200000
  9574                           ;	unspecified, using default values
  9575  200000                     	org	2097152
  9576  200000  FF                 	db	255
  9577                           
  9578                           ;Config register IDLOC1 @ 0x200001
  9579                           ;	unspecified, using default values
  9580  200001                     	org	2097153
  9581  200001  FF                 	db	255
  9582                           
  9583                           ;Config register IDLOC2 @ 0x200002
  9584                           ;	unspecified, using default values
  9585  200002                     	org	2097154
  9586  200002  FF                 	db	255
  9587                           
  9588                           ;Config register IDLOC3 @ 0x200003
  9589                           ;	unspecified, using default values
  9590  200003                     	org	2097155
  9591  200003  FF                 	db	255
  9592                           
  9593                           ;Config register IDLOC4 @ 0x200004
  9594                           ;	unspecified, using default values
  9595  200004                     	org	2097156
  9596  200004  FF                 	db	255
  9597                           
  9598                           ;Config register IDLOC5 @ 0x200005
  9599                           ;	unspecified, using default values
  9600  200005                     	org	2097157
  9601  200005  FF                 	db	255
  9602                           
  9603                           ;Config register IDLOC6 @ 0x200006
  9604                           ;	unspecified, using default values
  9605  200006                     	org	2097158
  9606  200006  FF                 	db	255
  9607                           
  9608                           ;Config register IDLOC7 @ 0x200007
  9609                           ;	unspecified, using default values
  9610  200007                     	org	2097159
  9611  200007  FF                 	db	255
  9612                           
  9613                           	psect	config
  9614                           
  9615                           ; Padding undefined space
  9616  300000                     	org	3145728
  9617  300000  FF                 	db	255
  9618                           
  9619                           ;Config register CONFIG1H @ 0x300001
  9620                           ;	Oscillator Selection bits
  9621                           ;	OSC = RCIO, RC oscillator w/ OSC2 configured as RA6
  9622                           ;	Oscillator System Clock Switch Enable bit
  9623                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  9624  300001                     	org	3145729
  9625  300001  27                 	db	39
  9626                           
  9627                           ;Config register CONFIG2L @ 0x300002
  9628                           ;	Power-up Timer Enable bit
  9629                           ;	PWRT = OFF, PWRT disabled
  9630                           ;	Brown-out Reset Enable bit
  9631                           ;	BOR = ON, Brown-out Reset enabled
  9632                           ;	Brown-out Reset Voltage bits
  9633                           ;	BORV = 20, VBOR set to 2.0V
  9634  300002                     	org	3145730
  9635  300002  0F                 	db	15
  9636                           
  9637                           ;Config register CONFIG2H @ 0x300003
  9638                           ;	Watchdog Timer Enable bit
  9639                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9640                           ;	Watchdog Timer Postscale Select bits
  9641                           ;	WDTPS = 128, 1:128
  9642  300003                     	org	3145731
  9643  300003  0E                 	db	14
  9644                           
  9645                           ; Padding undefined space
  9646  300004                     	org	3145732
  9647  300004  FF                 	db	255
  9648                           
  9649                           ;Config register CONFIG3H @ 0x300005
  9650                           ;	CCP2 Mux bit
  9651                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
  9652  300005                     	org	3145733
  9653  300005  01                 	db	1
  9654                           
  9655                           ;Config register CONFIG4L @ 0x300006
  9656                           ;	Stack Full/Underflow Reset Enable bit
  9657                           ;	STVR = ON, Stack Full/Underflow will cause RESET
  9658                           ;	Low Voltage ICSP Enable bit
  9659                           ;	LVP = ON, Low Voltage ICSP enabled
  9660                           ;	Background Debugger Enable bit
  9661                           ;	DEBUG = 0x1, unprogrammed default
  9662  300006                     	org	3145734
  9663  300006  85                 	db	133
  9664                           
  9665                           ; Padding undefined space
  9666  300007                     	org	3145735
  9667  300007  FF                 	db	255
  9668                           
  9669                           ;Config register CONFIG5L @ 0x300008
  9670                           ;	Code Protection bit
  9671                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  9672                           ;	Code Protection bit
  9673                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  9674                           ;	Code Protection bit
  9675                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  9676                           ;	Code Protection bit
  9677                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  9678  300008                     	org	3145736
  9679  300008  0F                 	db	15
  9680                           
  9681                           ;Config register CONFIG5H @ 0x300009
  9682                           ;	Boot Block Code Protection bit
  9683                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  9684                           ;	Data EEPROM Code Protection bit
  9685                           ;	CPD = OFF, Data EEPROM not code protected
  9686  300009                     	org	3145737
  9687  300009  C0                 	db	192
  9688                           
  9689                           ;Config register CONFIG6L @ 0x30000A
  9690                           ;	Write Protection bit
  9691                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  9692                           ;	Write Protection bit
  9693                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  9694                           ;	Write Protection bit
  9695                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  9696                           ;	Write Protection bit
  9697                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  9698  30000A                     	org	3145738
  9699  30000A  0F                 	db	15
  9700                           
  9701                           ;Config register CONFIG6H @ 0x30000B
  9702                           ;	Configuration Register Write Protection bit
  9703                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  9704                           ;	Boot Block Write Protection bit
  9705                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  9706                           ;	Data EEPROM Write Protection bit
  9707                           ;	WRTD = OFF, Data EEPROM not write protected
  9708  30000B                     	org	3145739
  9709  30000B  E0                 	db	224
  9710                           
  9711                           ;Config register CONFIG7L @ 0x30000C
  9712                           ;	Table Read Protection bit
  9713                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  9714                           ;	Table Read Protection bit
  9715                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  9716                           ;	Table Read Protection bit
  9717                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  9718                           ;	Table Read Protection bit
  9719                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  9720  30000C                     	org	3145740
  9721  30000C  0F                 	db	15
  9722                           
  9723                           ;Config register CONFIG7H @ 0x30000D
  9724                           ;	Boot Block Table Read Protection bit
  9725                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  9726  30000D                     	org	3145741
  9727  30000D  40                 	db	64
  9728                           tosu	equ	0xFFF
  9729                           tosh	equ	0xFFE
  9730                           tosl	equ	0xFFD
  9731                           stkptr	equ	0xFFC
  9732                           pclatu	equ	0xFFB
  9733                           pclath	equ	0xFFA
  9734                           pcl	equ	0xFF9
  9735                           tblptru	equ	0xFF8
  9736                           tblptrh	equ	0xFF7
  9737                           tblptrl	equ	0xFF6
  9738                           tablat	equ	0xFF5
  9739                           prodh	equ	0xFF4
  9740                           prodl	equ	0xFF3
  9741                           indf0	equ	0xFEF
  9742                           postinc0	equ	0xFEE
  9743                           postdec0	equ	0xFED
  9744                           preinc0	equ	0xFEC
  9745                           plusw0	equ	0xFEB
  9746                           fsr0h	equ	0xFEA
  9747                           fsr0l	equ	0xFE9
  9748                           wreg	equ	0xFE8
  9749                           indf1	equ	0xFE7
  9750                           postinc1	equ	0xFE6
  9751                           postdec1	equ	0xFE5
  9752                           preinc1	equ	0xFE4
  9753                           plusw1	equ	0xFE3
  9754                           fsr1h	equ	0xFE2
  9755                           fsr1l	equ	0xFE1
  9756                           bsr	equ	0xFE0
  9757                           indf2	equ	0xFDF
  9758                           postinc2	equ	0xFDE
  9759                           postdec2	equ	0xFDD
  9760                           preinc2	equ	0xFDC
  9761                           plusw2	equ	0xFDB
  9762                           fsr2h	equ	0xFDA
  9763                           fsr2l	equ	0xFD9
  9764                           status	equ	0xFD8

Data Sizes:
    Strings     22
    Constant    1224
    Data        22
    BSS         76
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    126     126
    BANK0           128     35     121
    BANK1           256      0      12
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    change_direction@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    change_direction@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK1[12]), end_effector_stepper(BANK0[12]), joint_stepper(BANK0[12]), 

    reach_goal@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    reach_goal@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK1[12]), end_effector_stepper(BANK0[12]), joint_stepper(BANK0[12]), 

    update_current_coil@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    update_current_coil@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK1[12]), end_effector_stepper(BANK0[12]), joint_stepper(BANK0[12]), 

    turn_on_current_coil@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    turn_on_current_coil@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK1[12]), end_effector_stepper(BANK0[12]), joint_stepper(BANK0[12]), 

    init_stepper@register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    init_stepper@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    init_stepper@hex_coil_register_values	PTR unsigned char  size(2) Largest target is 4
		 -> hex_end_effector_values(BANK0[4]), hex_joint_values(BANK0[4]), 

    init_stepper@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK1[12]), end_effector_stepper(BANK0[12]), joint_stepper(BANK0[12]), 

    state_translator_micro_to_fpga@state	PTR int  size(2) Largest target is 2
		 -> state(BANK0[2]), 

    state_translator_fpga_to_micro@state	PTR int  size(2) Largest target is 2
		 -> state(BANK0[2]), 

    S743$current_msg	PTR unsigned char  size(2) Largest target is 0

    lcd_manager_init@lcd_manager.current_msg	PTR unsigned char  size(2) Largest target is 0

    S743$new_msg	PTR unsigned char  size(2) Largest target is 0

    lcd_manager_init@lcd_manager.new_msg	PTR unsigned char  size(2) Largest target is 0

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 1200
		 -> const_msgs(CODE[1200]), STR_1(CODE[22]), 

    joint_dilutor_stepper.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    end_effector_stepper.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    S181$register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    joint_stepper.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_check_temperature
    _wait_for_zero->_get_temperature
    _get_temperature->___fltol
    _state_translator_fpga_to_micro->_lcd_dat
    _reach_goal->_turn_on_current_coil
    _lcd_update->_lcd_str
    _lcd_str->___wmul
    _lcd_dat->_lcd_wr
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_wr
    _init_timer_2->___fltol
    _init_ccp1->_update_pwm_duty_ccp1
    _update_pwm_duty_ccp1->___fltol
    ___fldiv->___flmul
    _roundf->___flge
    ___flsub->___fladd
    ___fladd->___fldiv
    _get_liters->___fltol
    ___fltol->___flsub
    ___flmul->___xxtofl
    _check_temperature->___flge
    ___xxtofl->___awdiv
    ___flge->_get_liters
    ___awdiv->_abs

Critical Paths under _rx_char_usart in COMRAM

    None.

Critical Paths under _main in BANK0

    _init_USART->_roundf

Critical Paths under _rx_char_usart in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rx_char_usart in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rx_char_usart in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rx_char_usart in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rx_char_usart in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rx_char_usart in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               249   249      0   47076
                                             26 BANK0      9     9      0
                             ___flge
                             ___wmul
                           ___xxtofl
                   _change_direction
                  _check_temperature
       _configure_ad_conversion_oven
       _configure_ad_conversion_tank
                         _get_liters
                      _get_reg_value
                    _get_temperature
                         _init_PORTS
                         _init_USART
                          _init_ccp1
                    _init_interrupts
                       _init_stepper
                       _init_timer_0
                       _init_timer_2
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                         _lcd_update
                         _reach_goal
                     _serial_tx_char
     _state_translator_fpga_to_micro
     _state_translator_micro_to_fpga
                      _wait_for_zero
 ---------------------------------------------------------------------------------
 (1) _wait_for_zero                                        0     0      0    3739
                    _get_temperature
 ---------------------------------------------------------------------------------
 (2) _get_temperature                                      2     0      2    3739
                                            110 COMRAM     2     0      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _state_translator_micro_to_fpga                       5     3      2     168
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _state_translator_fpga_to_micro                       3     1      2     494
                                              2 COMRAM     3     1      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (1) _serial_tx_char                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _reach_goal                                           7     3      4    1590
                                              8 COMRAM     7     3      4
               _turn_on_current_coil
                _update_current_coil
 ---------------------------------------------------------------------------------
 (2) _update_current_coil                                  6     4      2     274
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _turn_on_current_coil                                 8     6      2     142
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _lcd_update                                          10     8      2    1309
                                             11 COMRAM    10     8      2
                             ___wmul
                            _lcd_cmd
                            _lcd_str
 ---------------------------------------------------------------------------------
 (2) _lcd_str                                              5     3      2     286
                                              6 COMRAM     5     3      2
                             ___wmul (ARG)
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     767
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      44
                                              2 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_timer_2                                         4     4      0    8165
                                            110 COMRAM     4     4      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _init_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_stepper                                        16     4     12    1678
                                              0 COMRAM    16     4     12
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ccp1                                            0     0      0    4830
               _update_pwm_duty_ccp1
 ---------------------------------------------------------------------------------
 (2) _update_pwm_duty_ccp1                                 9     5      4    4830
                                            110 COMRAM     9     5      4
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1551
                                             51 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   12170
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   11561
                                              0 BANK0     26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3801
                                             92 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    3478
                                             76 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_reg_value                                        1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _get_liters                                           2     0      2    3739
                                            110 COMRAM     2     0      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     609
                                            100 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2504
                                             26 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _configure_ad_conversion_tank                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configure_ad_conversion_oven                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_temperature                                    6     4      2    2305
                                            124 COMRAM     2     0      2
                                              0 BANK0      4     4      0
                            ___awdiv
                             ___flge
                           ___xxtofl
                                _abs
                    _get_temperature (ARG)
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     626
                                             12 COMRAM    14    10      4
                            ___awdiv (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     942
                                            112 COMRAM    12     4      8
                            ___fltol (ARG)
                           ___xxtofl (ARG)
                         _get_liters (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              4 COMRAM     8     4      4
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (1) _change_direction                                     4     2      2     348
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _rx_char_usart                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flge
     ___fltol (ARG)
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     ___xxtofl (ARG)
       ___awdiv (ARG)
         _abs (ARG)
       _abs (ARG)
     _get_liters (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                   _abs (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
   ___wmul
   ___xxtofl
     ___awdiv (ARG)
       _abs (ARG)
     _abs (ARG)
   _change_direction
   _check_temperature
     ___awdiv
       _abs (ARG)
     ___flge
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                   _abs (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
       _get_liters (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                   _abs (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
           ___flneg (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                     _abs (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                   _abs (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___xxtofl
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
       _abs (ARG)
     _abs
     _get_temperature (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                   _abs (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
   _configure_ad_conversion_oven
   _configure_ad_conversion_tank
   _get_liters
     ___flmul
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
       _abs (ARG)
   _get_reg_value
   _get_temperature
     ___flmul
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
       _abs (ARG)
   _init_PORTS
   _init_USART
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     _roundf
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___flge
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                   _abs (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
           ___flneg (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                     _abs (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                   _abs (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
         _get_liters (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                     _abs (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                   _abs (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                   _abs (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
             ___flneg (ARG)
             ___flsub (ARG)
               ___fladd
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___awdiv (ARG)
                         _abs (ARG)
                       _abs (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                     _abs (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
           ___xxtofl
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                   _abs (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
   _init_ccp1
     _update_pwm_duty_ccp1
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                   _abs (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
   _init_interrupts
   _init_stepper
   _init_timer_0
   _init_timer_2
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
     ___flmul
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
   _lcd_cmd
     _lcd_wr
   _lcd_init
     _lcd_cmd
       _lcd_wr
   _lcd_str
     ___wmul (ARG)
     _lcd_dat (ARG)
       _lcd_wr
   _lcd_update
     ___wmul
     _lcd_cmd
       _lcd_wr
     _lcd_str
       ___wmul (ARG)
       _lcd_dat (ARG)
         _lcd_wr
   _reach_goal
     _turn_on_current_coil
     _update_current_coil
   _serial_tx_char
   _state_translator_fpga_to_micro
     _lcd_dat
       _lcd_wr
   _state_translator_micro_to_fpga
   _wait_for_zero
     _get_temperature
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                   _abs (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)

 _rx_char_usart (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       C       7        4.7%
BITBANK0            80      0       0       4        0.0%
BANK0               80     23      79       5       94.5%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7E      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     103      15        0.0%
DATA                 0      0     103       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Jun 18 00:09:37 2023

                                  ?_get_reg_value 0001                                   ??_wait_for_zero 0071  
                                    ___fldiv@aexp 004C                                      ___fldiv@bexp 004B  
                                    ___fldiv@sign 0044                                                l21 2B62  
                                              l24 2CFA                                                l27 2D0E  
                                              l36 2D70                                      ___awdiv@sign 000A  
                             ___wmul@multiplicand 0003                                               l203 0860  
                                             l160 029C                                               l313 1F44  
                                             l322 27C0                                               l171 0382  
                                             l413 2D4A                                               l253 2C06  
                                             l317 27BC                                               l157 01F8  
                                             l270 2C84                                               l422 2926  
                                             l158 0970                                               l431 2C8A  
                                             l167 0362                                               l416 2D2C  
                                             l256 2D88                                               l425 292E  
                                             l273 2C30                                               l362 2510  
                                             l282 29F2                                               l267 2D7C  
                                             l443 2C5A                                               l419 28BE  
                                             l435 2CAA                                               l428 2992  
                                             l372 25D2                                               l276 283E  
                                             l292 268E                                               l380 2A44  
                                             l365 2CEE                                               l390 28B4  
                                             l439 2442                                               l359 2CCC  
                                             l713 21A2                                               l377 2736  
                                             l394 2BDA                                               l386 236C  
                                             l708 2154                                               l740 207A  
                                             l717 2BA4                                               l674 2294  
                                             l971 0BC2                                               l980 0F1C  
                                             l972 0BAC                                               l973 0B62  
                                             l988 0D06                                               l997 0E0A  
                                             l998 0DF2                                 ??_init_interrupts 0001  
                                             _PR2 000FCB                                               _abs 2A48  
                       init_stepper@register_name 000B                                               wreg 000FE8  
                                  ?_rx_char_usart 0001                                      ___flmul@aexp 002C  
                                    ___flmul@bexp 002D                                      ___flmul@sign 0027  
                                    ___flmul@temp 0032                                      ___flmul@prod 002E  
                                    ___fltol@exp1 006E                                              l1101 1DD6  
                                            l1013 2ADA                                              l1030 15C4  
                                            l1112 1D5C                                              l1105 1CF0  
                                            l1121 2A8E                                              l1025 17F2  
                                            l1027 160A                                              ?_abs 0001  
                                            l1036 1660                                              l1061 13C0  
                                            l1118 2A84                                              l1038 16F0  
                                            l1039 16D8                                              l3000 1D70  
                                            l1064 121A                                              l1057 100E  
                                            l1129 1BDE                                              l3010 1DC2  
                                            l3002 1D72                                              l1074 1378  
                                            l1066 12AA                                              l1067 1292  
                                            l3012 1DC4                                              l3004 1D78  
                                            l3020 186C                                              l3100 229A  
                                            PORTD 000F83                                              PORTE 000F84  
                                            l3006 1D9C                                              l3110 2A4A  
                                            l3022 1880                                              l3102 2326  
                                            l3120 21AA                                              l3008 1DB0  
                                            l3112 2A68                                              l3040 1B2A  
                                            l3032 1946                                              l3024 18C6  
                                            l3016 17FA                                              l3200 2454  
                                            l3104 233A                                              l3130 21E0  
                                            l3122 21AE                                              l1098 1C44  
                                            l2410 099A                                              l3042 1B60  
                                            l3034 1A1A                                              l3026 18EA  
                                            l3018 181A                                              l3210 2CD2  
                                            l3202 2456                                              l3050 2C62  
                                            l3114 2C36                                              l3106 235C  
                                            l3140 2214                                              l3132 21E8  
                                            l3124 21C0                                              l2500 0B9C  
                                            l2420 09DA                                              l2412 099C  
                                            l3044 1BA8                                              l3036 1A86  
                                            l3028 190E                                              l3212 2CD6  
                                            l3220 2D82                                              l3204 2458  
                                            l2404 2D78                                              l3060 2C78  
                                            l3052 2C64                                              l3116 2C52  
                                            l3300 1F32                                              l3150 225C  
                                            l3142 221E                                              l3134 21EC  
                                            l3126 21C8                                              l2502 0B9E  
                                            l2430 0A14                                              l2414 09B2  
                                            l2422 09E2                                              l2406 097C  
                                            l3046 1BCC                                              l3038 1ABE  
                                            l3214 2CEA                                              l3230 26C6  
                                            l3222 2694                                              l3206 24D4  
                                            l3062 2C82                                              l3054 2C6A  
                                            l3070 29C2                                              l3310 2784  
                                            l3160 228A                                              l3152 225E  
                                            l3144 2232                                              l3136 21F6  
                                            l3128 21CC                                              l2600 0EF6  
                                            l2520 0C40                                              l2512 0BFE  
                                            l2504 0BAA                                              l2440 0A5A  
                                            l2432 0A1C                                              l2424 09F4  
                                            l2416 09C6                                              l2408 0988  
                                            l3080 257A                                              l3216 2CEC  
                                            l3240 2722                                              l3232 26CA  
                                            l3056 2C6C                                              l3064 2998  
                                            l3320 25D8                                              l3400 2844  
                                            l3312 278C                                              l3304 273C  
                                            l3072 28BC                                              l3154 2266  
                                            l3146 223A                                              l3138 220C  
                                            l2602 0F08                                              l2522 0C46  
                                            l2514 0C10                                              l2506 0BD6  
                                            l2530 0C6E                                              l2450 0AA0  
                                            l2442 0A6A                                              l2434 0A2E  
                                            l2426 09FC                                              l2418 09D6  
                                            l3170 2B58                                              l3090 25AE  
                                            l3082 257E                                              l3234 26EA  
                                            l3058 2C76                                              l3250 27F0  
                                            l3242 27C6                                              l2610 2C10  
                                            l3066 29A0                                              l3330 260E  
                                            l3322 25DE                                              l3402 2872  
                                            l3410 2892                                              l3314 27AE  
                                            l3306 275C                                              l3074 28D2  
                                            l3148 2254                                              l3156 226C  
                                            l3340 2D18                                              l2604 0F0A  
                                            l2532 0C9A                                              l2540 0CF4  
                                            l2524 0C5A                                              l2516 0C22  
                                            l2508 0BEA                                              l2460 0AC4  
                                            l2452 0AB2                                              l2444 0A6E  
                                            l2436 0A30                                              l2428 0A12  
                                            l3172 2B5A                                              l3164 2B26  
                                            l2700 15F4                                              l3092 25B4  
                                            l3084 2590                                              l3236 26FA  
                                            l3228 269C                                              l3260 282C  
                                            l3252 2808                                              l3244 27D6  
                                            l2620 2C2E                                              l2612 2C16  
                                            l3068 29C0                                              l3332 2622  
                                            l3324 2606                                              l3412 28A0  
                                            l3404 2886                                              l3316 27B6  
                                            l3308 2764                                              l3500 02CE  
                                            l3158 2282                                              l3342 2D1A  
                                            l3350 2942                                              l3190 2BE0  
                                            l2550 0D56                                              l2542 0D22  
                                            l2534 0CCE                                              l2526 0C5C  
                                            l2518 0C34                                              l2470 0AD8  
                                            l2462 0AC8                                              l2454 0AB6  
                                            l2438 0A46                                              l2446 0A76  
                                            l3174 2B5C                                              l3166 2B54  
                                            l2710 1640                                              l2702 15F6  
                                            l2630 13FE                                              l2622 13C8  
                                            l3094 25B8                                              l3086 2596  
                                            l3078 2516                                              l3238 270E  
                                            l3262 2832                                              l3254 281A  
                                            l3246 27E8                                              l2614 2C18  
                                            l3334 266A                                              l3414 28AC  
                                            l3182 2CF6                                              l3270 1DFA  
                                            l3510 034C                                              l3502 02E8  
                                            l3430 007C                                              l3344 2D1C  
                                            l2800 104C                                              l3184 2D66  
                                            l3192 2C04                                              l2560 0D8C  
                                            l2552 0D68                                              l2544 0D36  
                                            l2536 0CD0                                              l2528 0C68  
                                            l2480 0AEC                                              l2472 0ADC  
                                            l2464 0ACC                                              l2456 0ABC  
                                            l2448 0A88                                              l3176 2B5E  
                                            l3168 2B56                                              l2720 168A  
                                            l2712 164C                                              l2704 1606  
                                            l2640 1440                                              l2632 1412  
                                            l2624 13D4                                              l3088 259A  
                                            l3264 2838                                              l3256 2820  
                                            l3248 27EA                                              l2616 2C22  
                                            l2608 2C0E                                              l3336 266E  
                                            l3096 29F8                                              l3280 1E66  
                                            l3272 1E0E                                              l3600 0754  
                                            l3520 03AE                                              l3512 0376  
                                            l3504 02F8                                              l3440 008E  
                                            l3432 007C                                              l3418 2BAA  
                                            l3354 2374                                              l3370 2D36  
                                            l3346 2D1E                                              l3338 2D14  
                                            l2810 109E                                              l2802 105A  
                                            l3186 2D6A                                              l2570 0DCE  
                                            l2562 0DA2                                              l2554 0D6A  
                                            l2538 0CE4                                              l2490 0B4A  
                                            l2482 0AF0                                              l2474 0AE0  
                                            l2466 0AD0                                              l2458 0AC0  
                                            l3178 2B60                                              l2730 1712  
                                            l2722 169C                                              l2714 165E  
                                            l2706 1620                                              l2650 1478  
                                            l2642 1448                                              l2634 1422  
                                            l2626 13E6                                              l3258 2826  
                                            l2618 2C24                                              l3290 1ED6  
                                            l3282 1E7E                                              l3274 1E26  
                                            l3266 1DE0                                              l3602 0770  
                                            l3530 0422                                              l3522 03BE  
                                            l3514 037A                                              l3506 0312  
                                            l3450 0132                                              l3442 0092  
                                            l3434 0082                                              l2900 20C4  
                                            l3356 23F6                                              l3364 2438  
                                            l3372 2D38                                              l2820 10E0  
                                            l2812 10AA                                              l2804 1064  
                                            l3348 292C                                              l2580 0E3E  
                                            l2572 0DE8                                              l2556 0D7E  
                                            l2548 0D4A                                              l2564 0DA4  
                                            l2492 0B5A                                              l2476 0AE4  
                                            l2468 0AD4                                              l2484 0AF4  
                                            l2740 1788                                              l2732 1724  
                                            l2724 16CE                                              l2708 163A  
                                            l2716 1672                                              l2660 14BA  
                                            l2652 148C                                              l2644 144E  
                                            l2636 1426                                              l2628 13E8  
                                            l3196 244A                                              l3292 1EEA  
                                            l3284 1E92                                              l3276 1E3A  
                                            l3268 1DE6                                              l3620 0844  
                                            l3604 078A                                              l3612 07EC  
                                            l3532 043C                                              l3524 03D8  
                                            l3540 04AC                                              l3516 037E  
                                            l3508 0326                                              l3460 0152  
                                            l3452 0138                                              l3444 00C6  
                                            l3436 0086                                              l2910 2142  
                                            l2902 20F8                                              l3358 242C  
                                            l3374 2D3A                                              l2830 1142  
                                            l2822 10EC                                              l2814 10B6  
                                            l2806 107A                                              l2590 0ECC  
                                            l2582 0E7C                                              l2558 0D86  
                                            l2566 0DB6                                              l2494 0B76  
                                            l2486 0AFA                                              l2478 0AE8  
                                            l2750 17E2                                              l2742 17A8  
                                            l2734 174E                                              l2718 1686  
                                            l2662 14D6                                              l2654 149C  
                                            l2646 1460                                              l2638 142E  
                                            l3390 2CC2                                              l3382 2CB0  
                                            l3198 2452                                              l3286 1EAA  
                                            l3278 1E52                                              l3630 08A8  
                                            l3622 0874                                              l3614 0806  
                                            l3606 07A0                                              l3550 0518  
                                            l3542 04C6                                              l3534 0452  
                                            l3526 03EE                                              l3518 0394  
                                            l3470 019C                                              l3462 015C  
                                            l3454 013E                                              l3446 00FA  
                                            l3438 008A                                              l2912 2198  
                                            l2904 2108                                              l3376 2D3C  
                                            l3368 2D32                                              l2840 11DC  
                                            l2832 114E                                              l2824 10FC  
                                            l2816 10C4                                              l2808 1086  
                                            l2760 0F24                                              l2920 2B82  
                                            l2592 0ED0                                              l2576 0E20  
                                            l2584 0E7E                                              l2568 0DBC  
                                            l2496 0B82                                              l2488 0B28  
                                            l2752 17E6                                              l2744 17C4  
                                            l2728 1706                                              l2736 1752  
                                            l2680 1532                                              l2664 14E6  
                                            l2672 1508                                              l2656 14A0  
                                            l2648 1462                                              l3392 2CC4  
                                            l3384 2CBC                                              l3296 1F06  
                                            l3288 1EBE                                              l3640 0902  
                                            l3632 08C2                                              l3624 087C  
                                            l3616 0816                                              l3608 07BC  
                                            l3560 0590                                              l3552 0534  
                                            l3544 04DC                                              l3536 046E  
                                            l3528 0406                                              l3472 01A6  
                                            l3464 0172                                              l3480 01D0  
                                            l3456 0144                                              l3448 012E  
                                            l2914 219E                                              l2906 211C  
                                            l2850 1240                                              l2842 11FA  
                                            l2834 116A                                              l2826 1116  
                                            l2818 10D0                                              l2770 0F6E  
                                            l2762 0F30                                              l2922 2B92  
                                            l2594 0EE4                                              l2586 0E94  
                                            l2578 0E2C                                              l2498 0B88  
                                            l2746 17CA                                              l2738 1772  
                                            l2690 1586                                              l2682 154E  
                                            l2674 151E                                              l2666 14EE  
                                            l2658 14A8                                              l3394 2CC6  
                                            l3386 2CBE                                              l3298 1F1E  
                                            l3378 2C8C                                              l3650 0964  
                                            l3642 0924                                              l3634 08C4  
                                            l3626 0896                                              l3618 0830  
                                            l3570 05F4                                              l3562 059C  
                                            l3554 054A                                              l3546 0506  
                                            l3538 049A                                              l3490 0216  
                                            l3482 01DA                                              l3474 01B8  
                                            l3466 0186                                              l3458 0150  
                                            l2908 212E                                              l2860 12C0  
                                            l2852 1244                                              l2844 1206  
                                            l2836 1194                                              l2828 1126  
                                            l2780 0FA6                                              l2772 0F7E  
                                            l2764 0F42                                              l2940 1FC2  
                                            l2932 1F7C                                              l2596 0EEA  
                                            l2588 0EA6                                              l2748 17DC  
                                            l2692 159C                                              l2684 155E  
                                            l2676 151E                                              l2668 14F4  
                                            l3396 2CC8                                              l3388 2CC0  
                                            l3644 0930                                              l3636 08E4  
                                            l3628 08A2                                              l3580 0668  
                                            l3572 0614                                              l3556 055A  
                                            l3548 0512                                              l3564 05AC  
                                            l3492 022E                                              l3484 01F2  
                                            l3476 01C6                                              l3468 018E  
                                            l2870 132C                                              l2862 12CC  
                                            l2854 1256                                              l2846 1218  
                                            l2838 11CE                                              l2790 0FF4  
                                            l2782 0FB8                                              l2774 0F86  
                                            l2766 0F44                                              l2950 1FFC  
                                            l2942 1FD4                                              l2934 1FAC  
                                            l2926 1F4C                                              l2918 2B68  
                                            l2598 0EEE                                              l2694 15B0  
                                            l2686 156E                                              l3398 2CCA  
                                            l3638 08F8                                              l3590 06DE  
                                            l3574 062C                                              l3582 0678  
                                            l3566 05C6                                              l3558 0574  
                                            l3494 027A                                              l3646 0932  
                                            l3486 01FC                                              l3478 01CC  
                                            l2880 13A0                                              l2872 1340  
                                            l2864 12DE                                              l2856 1288  
                                            l2848 122C                                              l2792 0FFC  
                                            l2784 0FBA                                              l2776 0F98  
                                            l2768 0F5A                                              l2960 202E  
                                            l2952 2006                                              l2936 1FAE  
                                            l2928 1F66                                              l2696 15C2  
                                            l2688 157E                                              l3648 094E  
                                            l3592 06F4                                              l3584 0690  
                                            l3576 0642                                              l3568 05DC  
                                            l3488 0212                                              l3496 02A2  
                                            l2970 1BE8                                              l2882 13A2  
                                            l2874 1360                                              l2866 1308  
                                            l2794 1024                                              l2786 0FD0  
                                            l2778 0FA0                                              l2962 2042  
                                            l2938 1FBE                                              l2890 2A96  
                                            l2698 15D0                                              l3586 06A6  
                                            l3578 065E                                              l3594 070C  
                                            l3498 02BA                                              l2972 1BFC  
                                            l2876 137E                                              l2884 13AA  
                                            l2868 130C                                              l2796 1036  
                                            l2788 0FE4                                              l2964 2058  
                                            l2948 1FF0                                              l2892 2AA6  
                                            l3596 0726                                              l3588 06C6  
                                            l2990 1CDA                                              l2982 1C86  
                                            l2974 1C0E                                              l2886 13B0  
                                            l2878 138E                                              l2966 2068  
                                            l2958 2020                                              l3598 073C  
                                            l2896 2082                                              l2992 1CE6  
                                            l2984 1C90                                              l2976 1C56  
                                            l2898 20B4                                              l2994 1D28  
                                            l2986 1C9E                                              l2978 1C72  
                                            l2996 1D36                                              l2988 1CD6  
                                            l2998 1D4A                                              TRISD 000F95  
                                            TRISE 000F96                                              STR_1 7FE9  
                                   _state_changed 00A5                                              u2000 0A2C  
                                            u2001 0A26                                              u2010 0A44  
                                            u2011 0A3E                                              u2100 0BC2  
                                            u2020 0A58                                              u2101 0BBC  
                                            u2021 0A52                                              u2110 0BD4  
                                            u2030 0A9E                                              u2111 0BCE  
                                            u2031 0A98                                              u2200 0D66  
                                            u2120 0BE8                                              u2040 0AB0  
                                            u3000 183E                                              u2201 0D60  
                                            u2121 0BE2                                              u2041 0AAA  
                                            u2210 0D7C                                              u2130 0C20  
                                            u2050 0B26                                              u3010 186A  
                                            u2211 0D76                                              u2131 0C1A  
                                            u2051 0B20                                              u3011 1864  
                                            u2300 0E92                                              u2220 0DA0  
                                            u2140 0C32                                              u2060 0B42  
                                            u3020 18A4                                              u3100 28D0  
                                            u2301 0E8C                                              u2221 0D9A  
                                            u2141 0C2C                                              u2061 0B3A  
                                            u3005 1830                                              u3101 28CA  
                                            _LATA 000F89                                              u2310 0EA6  
                                            u2230 0DB6                                              u2150 0C58  
                                            u2070 0B46                                              u3030 18C4  
                                            u3110 258E                                              _LATB 000F8A  
                                            u2311 0EA0                                              u2231 0DB0  
                                            u2151 0C52                                              u3031 18BE  
                                            u3111 2588                                              _LATC 000F8B  
                                            u3200 2252                                              u2320 0ECA  
                                            u2240 0DCC                                              u2160 0C98  
                                            u2080 0B74                                              u3040 190C  
                                            u2400 148A                                              u3120 25AC  
                                            u3201 224C                                              u2321 0EC4  
                                            u2241 0DC6                                              u2161 0C92  
                                            u2081 0B6E                                              u3041 1906  
                                            u3025 1898                                              u2401 1484  
                                            u3121 25A6                                              u3210 2280  
                                            u2330 0EE2                                              u2250 0DE6  
                                            u2170 0CE2                                              u2090 0B9A  
                                            u3050 1A18                                              u2410 14D4  
                                            u3130 2324                                              u3211 227A  
                                            u2331 0EDC                                              u2251 0DE0  
                                            u2171 0CDC                                              u2091 0B94  
                                            u3051 1A12                                              u2411 14CE  
                                            u3131 231E                                              u2340 0F06  
                                            u2260 0E04                                              u2180 0D20  
                                            u3060 1ABC                                              u2500 169A  
                                            u2420 151C                                              u3140 235A  
                                            u3220 2D0C                                              u3300 1F00  
                                            u2341 0F00                                              u2261 0DFE  
                                            u2181 0D1A                                              u3061 1AB6  
                                            u2501 1694                                              u2421 1516  
                                            u3141 2354                                              u3221 2D06  
                                            u3301 1EFA                                              u3150 2A66  
                                            u2270 0E1E                                              u2190 0D34  
                                            u3070 1B86                                              u2510 16CC  
                                            u2430 159A                                              u2350 13E4  
                                            u3230 26E8                                              u3310 1F1C  
                                            u3151 2A60                                              u2271 0E18  
                                            u2191 0D2E                                              u2511 16C6  
                                            u2431 1594                                              u2351 13DE  
                                            u3231 26E2                                              u4007 27F6  
                                            u3311 1F16                                              u3160 21BE  
                                            u2600 0F6C                                              u2280 0E3C  
                                            u3080 1BA6                                              u2520 16EA  
                                            u2440 15C0                                              u2360 13FC  
                                            u3400 2870                                              u3240 1DF8  
                                            u3320 275A                                              u3161 21B8  
                                            u2601 0F66                                              u2281 0E36  
                                            u3081 1BA0                                              u2521 16E4  
                                            u2441 15BA                                              u2361 13F6  
                                            u4017 280E                                              u3401 286A  
                                            u3241 1DF2                                              u3321 2754  
                                            u3170 21DE                                              u2610 0FB6  
                                            u2290 0E7A                                              u2530 1704  
                                            u2450 15F2                                              u2370 1410  
                                            u3090 29F0                                              u3250 1E24  
                                            u3330 2782                                              u3171 21D8  
                                            u2611 0FB0                                              u2291 0E74  
                                            u3075 1B78                                              u2531 16FE  
                                            u2451 15EC                                              u2371 140A  
                                            u4027 2C6E                                              u3091 29EA  
                                            u3251 1E1E                                              u3331 277C  
                                            u3180 220A                                              u2700 1286  
                                            u2620 0FCE                                              u2540 1722  
                                            u2460 161E                                              u2380 145E  
                                            u3260 1E50                                              u3340 27AC  
                                            u3500 0324                                              u3420 0170  
                                            u3181 2204                                              u2701 1280  
                                            u2621 0FC8                                              u2541 171C  
                                            u2461 1618                                              u2381 1458  
                                            u4037 2C7A                                              u3261 1E4A  
                                            u3341 27A6                                              u3501 031E  
                                            u3421 016A                                              u3190 2230  
                                            u2710 12A4                                              u2630 0FE2  
                                            u2550 1770                                              u2470 1638  
                                            u2390 1476                                              u3350 268C  
                                            u3270 1E7C                                              u3510 034A  
                                            u3430 0184                                              u3191 222A  
                                            u2711 129E                                              u2631 0FDC  
                                            u2551 176A                                              u2471 1632  
                                            u2391 1470                                              u3351 2686  
                                            u3271 1E76                                              u3511 0344  
                                            u3431 017E                                              u2800 2140  
                                            u2720 12BE                                              u2640 1022  
                                            u3360 2940                                              u2560 17A6  
                                            u2480 165C                                              u3280 1EA8  
                                            u3600 0504                                              u3520 0374  
                                            u3440 01F0                                              u2801 213A  
                                            u2721 12B8                                              u2641 101C  
                                            u3361 293A                                              u2561 17A0  
                                            u2481 1656                                              u3281 1EA2  
                                            u3601 04FE                                              u3521 036E  
                                            u3441 01EA                                              u2810 2196  
                                            u3370 23F4                                              u2730 12DC  
                                            u2650 1036                                              u2570 17DA  
                                            u2490 1684                                              u3290 1ED4  
                                            u3610 0532                                              u3530 03AC  
                                            u3450 0210                                              u2811 2190  
                                            u3371 23EE                                              u2731 12D6  
                                            u2651 1030                                              u2571 17D4  
                                            u2491 167E                                              u3291 1ECE  
                                            u3611 052C                                              u3531 03A6  
                                            u3451 020A                                              u2900 1BFA  
                                            u3380 242A                                              u2740 132A  
                                            u2660 11B6                                              u2580 0F40  
                                            u2820 2B80                                              u3700 06DC  
                                            u3620 0548                                              u3540 03D6  
                                            u3460 0278                                              u2901 1BF4  
                                            u3381 2424                                              u2741 1324  
                                            u2581 0F3A                                              u2821 2B7A  
                                            u3701 06D6                                              u3621 0542  
                                            u3541 03D0                                              u3461 0272  
                                            u2910 1C0C                                              u2750 135E  
                                            u2670 1216                                              u2590 0F58  
                                            u2830 1F64                                              u3390 2CA8  
                                            u3710 06F2                                              u3630 0572  
                                            u3550 0404                                              u3470 02B8  
                                            u2911 1C06                                              u2751 1358  
                                            u2671 1210                                              u2591 0F52  
                                            u2831 1F5E                                              u3391 2CA2  
                                            u3711 06EC                                              u3631 056C  
                                            u3551 03FE                                              u3471 02B2  
                                            u2920 1C70                                              u2760 139E  
                                            u2680 123E                                              u2840 1FA0  
                                            u1960 0998                                              u3800 0872  
                                            u3720 0724                                              u3640 05C4  
                                            u3560 043A                                              u3480 02E6  
                                            u2921 1C6A                                              u2761 1398  
                                            u2681 1238                                              u2665 11AA  
                                            u1961 0992                                              u3801 086C  
                                            u3721 071E                                              u3641 05BE  
                                            u3561 0434                                              u3481 02E0  
                                            u2770 20B2                                              u2930 1CD0  
                                            u2690 1254                                              u2850 1FD2  
                                            u1970 09B0                                              u3810 0894  
                                            u3730 0752                                              u3650 05F2  
                                            u3570 0450                                              u3490 0310  
                                            u2771 20AC                                              u2931 1CCA  
                                            u2691 124E                                              u2851 1FCC  
                                            u1971 09AA                                              u3811 088E  
                                            u3731 074C                                              u3651 05EC  
                                            u3571 044A                                              u3491 030A  
                                            u2780 20F6                                              u2940 1D22  
                                            u2860 1FEA                                              u1980 09C4  
                                            u3820 08C0                                              u3740 0788  
                                            u3660 062A                                              u3580 0498  
                                            u2781 20F0                                              u2941 1D1C  
                                            u2861 1FE4                                              u2845 1F94  
                                            u1981 09BE                                              u3821 08BA  
                                            u3741 0782                                              u3661 0624  
                                            u3581 0492                                              u2790 211A  
                                            u2950 1D48                                              u2870 201A  
                                            u1990 0A10                                              u3830 08E2  
                                            u3750 079E                                              u3670 0640  
                                            u3590 04C4                                              u2791 2114  
                                            u2951 1D42                                              u2871 2014  
                                            u1991 0A0A                                              u3831 08DC  
                                            u3751 0798                                              u3671 063A  
                                            u3591 04BE                                              u2960 1D5C  
                                            u2880 2042                                              u3840 0922  
                                            u3760 07E6                                              u3680 068E  
                                            u2961 1D56                                              u2881 203C  
                                            u3841 091C                                              u3761 07E0  
                                            u3681 0688                                              u2970 1D6E  
                                            u2890 2056                                              u3850 094C  
                                            u3770 0804                                              u3690 06A4  
                                            u2971 1D68                                              u2891 2050  
                                            u3851 0946                                              u3771 07FE  
                                            u3691 069E                                              u2980 1DAE  
                                            u3860 0962                                              u3780 082E  
                                            u2981 1DA8                                              u3861 095C  
                                            u3781 0828                                              u3917 03E0  
                                            u2990 1DC0                                              u3790 0842  
                                            u2991 1DBA                                              u3791 083C  
                                            u3927 04CE                                              u3937 05CE  
                                            u3947 064E                                              u3957 072E  
                                            u3967 08EC                                              u3977 2C1A  
                                            u3987 2C26                                              u3997 27DC  
                                            _TMR2 000FCC                                              abs@a 0001  
                                     lcd_update@i 0014                                              _main 007C  
                                            _fosc 7FE5                                              fsr1h 000FE2  
                                            fsr2h 000FDA                                              indf1 000FE7  
                                            indf2 000FDF                                              fsr1l 000FE1  
                                            fsr2l 000FD9                                              _tosc 00E7  
                                            btemp 007F                       update_pwm_duty_ccp1@time_up 006F  
                                     main@rx_char 00E2                                              prodh 000FF4  
                                   _trash_counter 0096                                              prodl 000FF3  
                                            start 0078                                   ___fldiv@new_exp 0045  
state_translator_fpga_to_micro@state_machine_code 0005                                      ___param_bank 000000  
                                           ??_abs 0003                              _update_pwm_duty_ccp1 2514  
                                   ___fltol@sign1 006D                                   __end_of___fladd 0F22  
                                           ?_main 0001                                   __end_of___fldiv 17F8  
                                 __end_of___awdiv 2298                                   __end_of___flneg 2BA8  
                                 __end_of___flmul 13C6                                   __end_of___flsub 2ADE  
                                 __end_of___fltol 2080                                             _T0CON 000FD5  
                                 ___awdiv@divisor 0007                                             _T2CON 000FCA  
                                           i2l224 0070                       __end_of_update_current_coil 2372  
                                 ___awdiv@counter 0009                                             _RCREG 000FAE  
                                           _TMR0H 000FD7                                             _TMR0L 000FD6  
                                           _SPBRG 000FAF                                             _PORTA 000F80  
                                           _PORTB 000F81                                             _PORTC 000F82  
                                           _PORTD 000F83                                             _TRISA 000F92  
                                           _TRISB 000F93                                             _TRISC 000F94  
                                           _TXREG 000FAD                                  ?_get_temperature 006F  
                                 __end_of_lcd_dat 2C34                                   __end_of_lcd_cmd 2C88  
            __end_of_configure_ad_conversion_tank 2D30             __size_of_configure_ad_conversion_tank 001E  
                    _configure_ad_conversion_tank 2D12              __end_of_configure_ad_conversion_oven 2D4E  
           __size_of_configure_ad_conversion_oven 001E                      _configure_ad_conversion_oven 2D30  
                                 __end_of_lcd_str 29F6                                             _f_osc 7FE1  
                                           _t_osc 7FDD                                             _state 00BE  
                                           _toint 7B21                                             tablat 000FF5  
                                           ttemp5 0080                                             ttemp6 0083  
                                           ttemp7 0087                                             status 000FD8  
                                           wtemp8 0080                                _end_effector_homed 008C  
                                 ??_get_reg_value 0001                              get_reg_value@rx_char 0001  
                                 __initialization 2ADE                                      __end_of_main 097A  
                                    __end_of_fosc 7FE9                             ?_update_pwm_duty_ccp1 006F  
                           lcd_update@line_select 0010                                            ??_main 00DA  
                                   __activetblptr 000002                                   ??_rx_char_usart 0001  
                                          _ADCON0 000FC2                                            _ADCON1 000FC1  
                                _change_direction 2BA8                                            _ADRESH 000FC4  
                                          _ADRESL 000FC3                      __end_of_turn_on_current_coil 2A48  
                                          _CCPR1L 000FBE                     ?_configure_ad_conversion_tank 0001  
                                ___awdiv@dividend 0005                     ?_configure_ad_conversion_oven 0001  
                                          i2l3660 003C                                            i2l3652 000C  
                                          i2l3662 0050                                            i2l3654 001E  
                                          i2l3664 0062                                            i2l3656 0030  
                                          i2l3666 0066                                            i2l3658 0032  
                                          i2l3668 006E                                  __end_of___xxtofl 1DDC  
                                   ?_init_timer_0 0001                                     ?_init_timer_2 0001  
          __end_of_state_translator_fpga_to_micro 1F4A           __size_of_state_translator_fpga_to_micro 016E  
                  _state_translator_fpga_to_micro 1DDC                                     ?_init_stepper 0001  
                                __end_of_lcd_init 2842                                            ___flge 2080  
                               _init_timer_2$1736 006F                                         ??___fladd 0055  
                                          ___wmul 2C34                                         ??___fldiv 003C  
                                       ??___awdiv 0009                                         ??___flneg 0005  
                                       ??___flmul 0023                                         ??___flsub 0065  
                                       ??___fltol 0069                                            _lcd_wr 2D74  
                                          clear_0 2B04                                            clear_1 2B10  
                                ___awdiv@quotient 000B                                            _roundf 17F8  
                                       ??_lcd_dat 0002                                         ??_lcd_cmd 0002  
                                       ??_lcd_str 0009                                      __mediumconst 7B20  
                                          tblptrh 000FF7                                            tblptrl 000FF6  
                                          tblptru 000FF8                           reach_goal@goal_to_reach 000B  
                                      ___flge@ff1 0071                                        ___flge@ff2 0075  
                update_current_coil@stepper_motor 0001                                      ___xxtofl@arg 0017  
                                    ___xxtofl@exp 0016                                      ___xxtofl@val 000D  
                                      __accesstop 0080                           __end_of__initialization 2B16  
                                      ___flneg@f1 0001                                 serial_tx_char@val 0001  
                                  ??_init_timer_0 0001                                    ??_init_timer_2 006F  
                                   ___rparam_used 000001                                        ___fltol@f1 0065  
                                  ??_init_stepper 000D                                    _tmr2_prescaler 00ED  
                                 _init_interrupts 2D80                            ??_update_pwm_duty_ccp1 0073  
                                  __pcstackCOMRAM 0001                                      __pidataBANK0 2D4E  
                                   __end_of_f_osc 7FE5                                     __end_of_t_osc 7FE1  
                                   __end_of_toint 7B25                                   _temperature_int 0086  
                         __size_of_serial_tx_char 0020               state_translator_fpga_to_micro@state 0003  
                                _mix_current_step 00A0                                        __pbssBANK0 0080  
                                      __pbssBANK1 0100                    ??_configure_ad_conversion_tank 0001  
                  ??_configure_ad_conversion_oven 0001                                __size_of_init_ccp1 0022  
                                         ?___flge 0071                                           ?___wmul 0001  
             check_temperature@temp_to_be_checked 007D                                           ?_lcd_wr 0001  
                                         _CCP1CON 000FBD                              _turn_on_current_coil 29F6  
                           __end_of_wait_for_zero 2CAE                           _hex_end_effector_values 00F1  
                                   _read_new_char 00A3                   _grasping_joint_position_reached 0094  
                                         ?_roundf 00C0                                _temperature_scaled 0084  
                                       ?___xxtofl 000D                           reach_goal@stepper_motor 0009  
                                      _get_liters 292A                 turn_on_current_coil@stepper_motor 0001  
                                _desired_baudrate 7B29                                        _lcd_update 25D6  
                                       ?_lcd_init 0001                           __end_of_init_interrupts 2D8C  
                                      _const_msgs 7B2D                                 _check_temperature 2372  
                   change_direction@stepper_motor 0001                                           __Hparam 0000  
                              ?_check_temperature 007D                                           __Lparam 0000  
                                      _init_PORTS 2BDE                                        _init_USART 2B24  
                                 __size_of___flge 0128                                           ___fladd 097A  
                                         ___fldiv 13C6                                           ___awdiv 21A8  
                                         ___flneg 2B66                                           ___flmul 0F22  
                        __end_of_change_direction 2BDE                                           ___flsub 2A94  
                                         ___fltol 1F4A                                   __size_of___wmul 002A  
                           ?_turn_on_current_coil 0001                                _state_before_error 00EB  
                                 __size_of_lcd_wr 000C                               ??_check_temperature 007F  
                                         __pcinit 2ADE              init_stepper@hex_coil_register_values 0009  
                                         __ramtop 0600                                        _reach_goal 2842  
                                         __ptext0 007C                                           __ptext1 2C88  
                                         __ptext2 28BA                                           __ptext3 273A  
                                         __ptext4 1DDC                                           __ptext5 2CF2  
                                         __ptext6 2842                                           __ptext7 2298  
                                         __ptext8 29F6                                           __ptext9 25D6  
                                         _lcd_dat 2C0A                                           _lcd_cmd 2C5E  
                                         _lcd_str 2996                                         _T0CONbits 000FD5  
                                 __size_of_roundf 03EC                                 __end_of_init_ccp1 2CF2  
                                       _T2CONbits 000FCA                                      __size_of_abs 004C  
                                      ??___xxtofl 0011                              __end_of_init_timer_0 2CD0  
                            __end_of_init_timer_2 2514                              __end_of_init_stepper 273A  
                                   _joint_stepper 00B2                                        ??_lcd_init 0003  
                    __size_of_update_current_coil 00DA                              end_of_initialization 2B16  
                       __end_of_check_temperature 2448                          __size_of_get_temperature 0070  
                                   __Lmediumconst 7B20                                        _tank_error 0088  
             state_translator_micro_to_fpga@state 0001                             __end_of_get_reg_value 2D74  
                                       _RCSTAbits 000FAB                                           postdec1 000FE5  
                                         postdec2 000FDD                                           postinc0 000FEE  
                                         postinc1 000FE6                                           postinc2 000FDE  
                                         roundf@e 00CC                                           roundf@u 00D2  
                                         roundf@x 00C0                                           roundf@y 00D6  
                                      _timer_done 00A2                                         _PORTEbits 000F84  
                ??_state_translator_fpga_to_micro 0005                   ?_state_translator_fpga_to_micro 0003  
                                     ___fladd@grs 005C                                    _serial_tx_char 2CF2  
                                   ___xxtofl@sign 0015                             __end_of_rx_char_usart 0078  
                                       _TRISCbits 000F94                                       ?_get_liters 006F  
                                      lcd_dat@val 0002                                        lcd_cmd@val 0002  
                                     ___fldiv@grs 0047                                       ___fldiv@rem 0040  
                                     ?_lcd_update 000C                                        _pwm_period 00E3  
                                   _mix_direction 009E                              _end_effector_stepper 00A6  
                                     ___flmul@grs 0028                                  ?_init_interrupts 0001  
                                     _CCP1CONbits 000FBD                                         _TXSTAbits 000FAC  
                                main@current_temp 00DC                                        lcd_str@str 0007  
                                     ?_init_PORTS 0001                                       ?_init_USART 0001  
                          ??_turn_on_current_coil 0003                                    __end_of___flge 21A8  
          __end_of_state_translator_micro_to_fpga 27C4           __size_of_state_translator_micro_to_fpga 008A  
                  _state_translator_micro_to_fpga 273A                      _grasping_ee_position_reached 0092  
                                  __end_of___wmul 2C5E                                    __end_of_lcd_wr 2D80  
                                     ?_reach_goal 0009  state_translator_micro_to_fpga@state_machine_code 0005  
                          __end_of_serial_tx_char 2D12                                    __end_of_roundf 1BE4  
                             start_initialization 2ADE                                       __end_of_abs 2A94  
                                _hex_joint_values 00F5                        __size_of_check_temperature 00D6  
                        init_stepper@current_coil 0003                         init_stepper@stepper_motor 0001  
                               ??_get_temperature 0071                                          ??___flge 0079  
                        __end_of_desired_baudrate 7B2D                               __size_of_get_liters 006C  
                                        ??___wmul 0005                               __size_of_lcd_update 00BC  
                   __size_of_update_pwm_duty_ccp1 00C2                                          ??_lcd_wr 0001  
                                     __pdataBANK0 00E3                             check_temperature@grad 00C0  
                           __size_of_init_timer_0 0022                             __size_of_init_timer_2 00CC  
                           __size_of_init_stepper 00A8                                          ??_roundf 00C4  
                                 ?_serial_tx_char 0001                                         ___fladd@a 0051  
                                       ___fladd@b 004D                                         ___fldiv@a 0038  
                                       ___fldiv@b 0034                                         ___flmul@a 001F  
                                       ___flmul@b 001B                                         ___flsub@a 0061  
                                       ___flsub@b 005D                                     __pcstackBANK0 00C0  
                               __size_of___xxtofl 01F8                               __size_of_init_PORTS 002C  
                             __size_of_init_USART 0042                                 __size_of_lcd_init 007E  
                             __size_of_reach_goal 0078                                      _init_timer_0 2CAE  
                                    _init_timer_2 2448                                         _main$1735 00DE  
                                    _init_stepper 2692                             init_stepper@direction 0007  
                                       __pintcode 0008                                     __pmediumconst 7B20  
                                        ?___fladd 004D                                          ?___fldiv 0034  
                                        ?___awdiv 0005                                          ?___flneg 0001  
                                        ?___flmul 001B                                          ?___flsub 005D  
                                        ?___fltol 0065                               _update_current_coil 2298  
                               ?_change_direction 0001                                ??_change_direction 0003  
                                        ?_lcd_dat 0001                                          ?_lcd_cmd 0001  
                                        ?_lcd_str 0007                      update_pwm_duty_ccp1@new_duty 0075  
                                _mix_step_counter 009C                                         _init_ccp1 2CD0  
                            ?_update_current_coil 0001                            __size_of_wait_for_zero 0026  
                                  ___wmul@product 0005                                          _LATAbits 000F89  
                                        _PIE1bits 000F9D                             _joint_dilutor_stepper 0100  
                                        _PIR1bits 000F9E                                          i2u390_40 0060  
                                        i2u390_41 005A                                          i2u387_40 001C  
                                        i2u387_41 0016                                          i2u388_40 002E  
                                        i2u388_41 0028                                          i2u389_40 004E  
                                        i2u389_41 0048                                        _ADCON0bits 000FC2  
                               ___wmul@multiplier 0001                                         lcd_wr@val 0001  
                                    ??_get_liters 0071                                      ??_lcd_update 000E  
                                      ?_init_ccp1 0001                             ??_update_current_coil 0003  
                                       copy_data0 2AF2                                        roundf@F525 0080  
                                        __Hrparam 0000                                      ??_init_PORTS 0001  
                                    ??_init_USART 007D                                          __Lrparam 0000  
                              __end_of_get_liters 2996                                  __size_of___fladd 05A8  
                                __size_of___fldiv 0432                                  __size_of___awdiv 00F0  
                                __size_of___flneg 0042                                  __size_of___flmul 04A4  
                                __size_of___flsub 004A                                  __size_of___fltol 0136  
                              __end_of_lcd_update 2692                                     _wait_for_zero 2C88  
                                    ??_reach_goal 000D                                   lcd_update@F2151 7B25  
                                __size_of_lcd_dat 002A                                  __size_of_lcd_cmd 002A  
                                __size_of_lcd_str 0060                                __end_of_const_msgs 7FDD  
                                        ___xxtofl 1BE4                                          __ptext10 2996  
                                        __ptext11 2C0A                                          __ptext20 2CD0  
                                        __ptext12 2C34                                          __ptext21 2514  
                                        __ptext13 27C4                                          __ptext30 292A  
                                        __ptext22 13C6                                          __ptext14 2C5E  
                                        __ptext31 1F4A                                          __ptext23 2B24  
                                        __ptext15 2D74                                          __ptext40 2BA8  
                                        __ptext32 0F22                                          __ptext24 17F8  
                                        __ptext16 2448                                          __ptext33 2D12  
                                        __ptext25 2A94                                          __ptext17 2CAE  
                                        __ptext34 2D30                                          __ptext26 097A  
                                        __ptext18 2692                                          __ptext35 2372  
                                        __ptext27 2B66                                          __ptext19 2D80  
                                        __ptext36 2A48                                          __ptext28 2BDE  
                                        __ptext37 1BE4                                          __ptext29 2D64  
                                        __ptext38 2080                                          __ptext39 21A8  
                ??_state_translator_micro_to_fpga 0003                   ?_state_translator_micro_to_fpga 0001  
                          __size_of_get_reg_value 0010                                __end_of_init_PORTS 2C0A  
                                        _lcd_init 27C4                                __end_of_init_USART 2B66  
                                 _get_temperature 28BA                                   lcd_update@state 000C  
                       _diluting_position_reached 0090                                     __size_of_main 08FE  
                                     _joint_homed 008E                                __end_of_reach_goal 28BA  
                          __size_of_rx_char_usart 0070                          __size_of_init_interrupts 000C  
                                        int$flags 007F                                  ??_serial_tx_char 0001  
                   __size_of_turn_on_current_coil 0052                                    ?_wait_for_zero 0001  
                                        lcd_str@i 000B                                       _mix_counter 009A  
                                      _INTCONbits 000FF2                                       ??_init_ccp1 0078  
                    __end_of_update_pwm_duty_ccp1 25D6                                     _idle_msg_sent 00A4  
                                        intlevel2 2D8C                               _joint_dilutor_homed 008A  
                         __end_oflcd_update@F2151 7B29                                     _get_reg_value 2D64  
                                   init_stepper@i 000F                                     _dilution_done 0098  
                         __end_of_get_temperature 292A                          init_stepper@step_counter 0005  
                                   _rx_char_usart 0008                         __size_of_change_direction 0036  
                                   ___fladd@signs 0059                     update_pwm_duty_ccp1@lsbs_duty 0077  
                                    ___fladd@aexp 005A                                      ___fladd@bexp 005B  
                                     _roundf$1737 00CE                                       _roundf$1738 00C8  
