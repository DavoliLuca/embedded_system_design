

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Jun 17 21:00:02 2023

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=3
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    86                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    87                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    88                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    89                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    90                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    91  0000                     
    92                           ; Version 2.20
    93                           ; Generated 12/02/2020 GMT
    94                           ; 
    95                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    96                           ; All rights reserved.
    97                           ; 
    98                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    99                           ; 
   100                           ; Redistribution and use in source and binary forms, with or without modification, are
   101                           ; permitted provided that the following conditions are met:
   102                           ; 
   103                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   104                           ;        conditions and the following disclaimer.
   105                           ; 
   106                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   107                           ;        of conditions and the following disclaimer in the documentation and/or other
   108                           ;        materials provided with the distribution.
   109                           ; 
   110                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   111                           ;        software without specific prior written permission.
   112                           ; 
   113                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   114                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   115                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   116                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   117                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   118                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   119                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   120                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   121                           ; 
   122                           ; 
   123                           ; Code-generator required, PIC18F452 Definitions
   124                           ; 
   125                           ; SFR Addresses
   126  0000                     
   127                           	psect	idataBANK0
   128  006185                     __pidataBANK0:
   129                           	callstack 0
   130                           
   131                           ;initializer for stoa@F1152
   132  006185  28                 	db	40
   133  006186  6E                 	db	110
   134  006187  75                 	db	117
   135  006188  6C                 	db	108
   136  006189  6C                 	db	108
   137  00618A  29                 	db	41
   138  00618B  00                 	db	0
   139                           
   140                           ;initializer for _pwm_period
   141                           ;timer.c: 5: static double const f_osc = 1000000;;timer.c: 6: static double const t_osc 
      +                          = 1/f_osc;;timer.c: 7: static double pwm_period = 20e-3;
   142  00618C  D70A               	dw	55050
   143  00618E  3CA3               	dw	15523
   144                           
   145                           ;initializer for _tosc
   146  006190  37BD               	dw	14269
   147  006192  3486               	dw	13446
   148                           
   149                           ;initializer for _tmr2_prescaler
   150  006194  0000               	dw	0
   151  006196  4180               	dw	16768
   152                           
   153                           	psect	idataBANK1
   154  006142                     __pidataBANK1:
   155                           	callstack 0
   156                           
   157                           ;initializer for _state_before_error
   158  006142  0008               	dw	8
   159                           
   160                           ;initializer for _hex_end_effector_values
   161  006144  10                 	db	16
   162  006145  20                 	db	32
   163  006146  40                 	db	64
   164  006147  80                 	db	128
   165                           
   166                           ;initializer for _hex_joint_values
   167  006148  01                 	db	1
   168  006149  02                 	db	2
   169  00614A  04                 	db	4
   170  00614B  08                 	db	8
   171                           
   172                           	psect	idataBANK2
   173  006175                     __pidataBANK2:
   174                           	callstack 0
   175                           
   176                           ;initializer for _state_msgs
   177  006175  D9                 	db	low STR_1
   178  006176  7E                 	db	high STR_1
   179  006177  67                 	db	low STR_2
   180  006178  7E                 	db	high STR_2
   181  006179  BB                 	db	low STR_3
   182  00617A  7F                 	db	high STR_3
   183  00617B  36                 	db	low STR_4
   184  00617C  7F                 	db	high STR_4
   185  00617D  A9                 	db	low STR_5
   186  00617E  7F                 	db	high STR_5
   187  00617F  C4                 	db	low STR_6
   188  006180  7F                 	db	high STR_6
   189  006181  B2                 	db	low STR_7
   190  006182  7F                 	db	high STR_7
   191  006183  A7                 	db	low STR_8
   192  006184  7E                 	db	high STR_8
   193                           
   194                           	psect	mediumconst
   195  007E52                     __pmediumconst:
   196                           	callstack 0
   197  007E52  00                 	db	0
   198  007E53  0000               	dw	0
   199  007E55  4B00               	dw	19200
   200  007E57                     __end_of_toint:
   201                           	callstack 0
   202  007E57  0000               	dw	0
   203  007E59  4616               	dw	17942
   204  007E5B                     __end_of_desired_baudrate:
   205                           	callstack 0
   206  007E5B  37BD               	dw	14269
   207  007E5D  3586               	dw	13702
   208  007E5F                     __end_of_t_osc:
   209                           	callstack 0
   210  007E5F  2400               	dw	9216
   211  007E61  4974               	dw	18804
   212  007E63                     __end_of_f_osc:
   213                           	callstack 0
   214  007E63  2400               	dw	9216
   215  007E65  4A74               	dw	19060
   216  007E67                     __end_of_fosc:
   217                           	callstack 0
   218  0000                     _ADCON1	set	4033
   219  0000                     _ADRESL	set	4035
   220  0000                     _ADRESH	set	4036
   221  0000                     _ADCON0bits	set	4034
   222  0000                     _ADCON0	set	4034
   223  0000                     _CCPR1L	set	4030
   224  0000                     _CCP1CONbits	set	4029
   225  0000                     _CCP1CON	set	4029
   226  0000                     _PR2	set	4043
   227  0000                     _T2CONbits	set	4042
   228  0000                     _TMR2	set	4044
   229  0000                     _T2CON	set	4042
   230  0000                     _TMR0H	set	4055
   231  0000                     _TMR0L	set	4054
   232  0000                     _PORTEbits	set	3972
   233  0000                     _PORTD	set	3971
   234  0000                     _TRISCbits	set	3988
   235  0000                     _TRISC	set	3988
   236  0000                     _PORTC	set	3970
   237  0000                     _TRISB	set	3987
   238  0000                     _PORTB	set	3969
   239  0000                     _TRISA	set	3986
   240  0000                     _PORTA	set	3968
   241  0000                     _LATA	set	3977
   242  0000                     _T0CON	set	4053
   243  0000                     _PIR1bits	set	3998
   244  0000                     _PIE1bits	set	3997
   245  0000                     _T0CONbits	set	4053
   246  0000                     _LATAbits	set	3977
   247  0000                     _INTCONbits	set	4082
   248  0000                     _RCREG	set	4014
   249  0000                     _TXREG	set	4013
   250  0000                     _RCSTAbits	set	4011
   251  0000                     _TXSTAbits	set	4012
   252  0000                     _SPBRG	set	4015
   253  0000                     _LATC	set	3979
   254  0000                     _LATB	set	3978
   255  007E67                     STR_2:
   256  007E67  49                 	db	73	;'I'
   257  007E68  4E                 	db	78	;'N'
   258  007E69  49                 	db	73	;'I'
   259  007E6A  54                 	db	84	;'T'
   260  007E6B  5F                 	db	95	;'_'
   261  007E6C  50                 	db	80	;'P'
   262  007E6D  4F                 	db	79	;'O'
   263  007E6E  53                 	db	83	;'S'
   264  007E6F  3A                 	db	58	;':'
   265  007E70  20                 	db	32
   266  007E71  74                 	db	116	;'t'
   267  007E72  68                 	db	104	;'h'
   268  007E73  65                 	db	101	;'e'
   269  007E74  20                 	db	32
   270  007E75  76                 	db	118	;'v'
   271  007E76  69                 	db	105	;'i'
   272  007E77  61                 	db	97	;'a'
   273  007E78  6C                 	db	108	;'l'
   274  007E79  20                 	db	32
   275  007E7A  69                 	db	105	;'i'
   276  007E7B  73                 	db	115	;'s'
   277  007E7C  20                 	db	32
   278  007E7D  61                 	db	97	;'a'
   279  007E7E  74                 	db	116	;'t'
   280  007E7F  20                 	db	32
   281  007E80  74                 	db	116	;'t'
   282  007E81  68                 	db	104	;'h'
   283  007E82  65                 	db	101	;'e'
   284  007E83  20                 	db	32
   285  007E84  69                 	db	105	;'i'
   286  007E85  6E                 	db	110	;'n'
   287  007E86  69                 	db	105	;'i'
   288  007E87  74                 	db	116	;'t'
   289  007E88  20                 	db	32
   290  007E89  70                 	db	112	;'p'
   291  007E8A  6F                 	db	111	;'o'
   292  007E8B  73                 	db	115	;'s'
   293  007E8C  69                 	db	105	;'i'
   294  007E8D  74                 	db	116	;'t'
   295  007E8E  69                 	db	105	;'i'
   296  007E8F  6F                 	db	111	;'o'
   297  007E90  6E                 	db	110	;'n'
   298  007E91  2C                 	db	44
   299  007E92  20                 	db	32
   300  007E93  70                 	db	112	;'p'
   301  007E94  72                 	db	114	;'r'
   302  007E95  6F                 	db	111	;'o'
   303  007E96  63                 	db	99	;'c'
   304  007E97  65                 	db	101	;'e'
   305  007E98  73                 	db	115	;'s'
   306  007E99  73                 	db	115	;'s'
   307  007E9A  20                 	db	32
   308  007E9B  69                 	db	105	;'i'
   309  007E9C  73                 	db	115	;'s'
   310  007E9D  20                 	db	32
   311  007E9E  73                 	db	115	;'s'
   312  007E9F  74                 	db	116	;'t'
   313  007EA0  61                 	db	97	;'a'
   314  007EA1  72                 	db	114	;'r'
   315  007EA2  74                 	db	116	;'t'
   316  007EA3  69                 	db	105	;'i'
   317  007EA4  6E                 	db	110	;'n'
   318  007EA5  67                 	db	103	;'g'
   319  007EA6  00                 	db	0
   320  007EA7                     STR_8:
   321  007EA7  50                 	db	80	;'P'
   322  007EA8  49                 	db	73	;'I'
   323  007EA9  43                 	db	67	;'C'
   324  007EAA  4B                 	db	75	;'K'
   325  007EAB  5F                 	db	95	;'_'
   326  007EAC  55                 	db	85	;'U'
   327  007EAD  50                 	db	80	;'P'
   328  007EAE  3A                 	db	58	;':'
   329  007EAF  20                 	db	32
   330  007EB0  74                 	db	116	;'t'
   331  007EB1  68                 	db	104	;'h'
   332  007EB2  65                 	db	101	;'e'
   333  007EB3  20                 	db	32
   334  007EB4  76                 	db	118	;'v'
   335  007EB5  69                 	db	105	;'i'
   336  007EB6  61                 	db	97	;'a'
   337  007EB7  6C                 	db	108	;'l'
   338  007EB8  20                 	db	32
   339  007EB9  68                 	db	104	;'h'
   340  007EBA  61                 	db	97	;'a'
   341  007EBB  73                 	db	115	;'s'
   342  007EBC  20                 	db	32
   343  007EBD  72                 	db	114	;'r'
   344  007EBE  65                 	db	101	;'e'
   345  007EBF  61                 	db	97	;'a'
   346  007EC0  63                 	db	99	;'c'
   347  007EC1  68                 	db	104	;'h'
   348  007EC2  65                 	db	101	;'e'
   349  007EC3  64                 	db	100	;'d'
   350  007EC4  20                 	db	32
   351  007EC5  74                 	db	116	;'t'
   352  007EC6  68                 	db	104	;'h'
   353  007EC7  65                 	db	101	;'e'
   354  007EC8  20                 	db	32
   355  007EC9  70                 	db	112	;'p'
   356  007ECA  69                 	db	105	;'i'
   357  007ECB  63                 	db	99	;'c'
   358  007ECC  6B                 	db	107	;'k'
   359  007ECD  20                 	db	32
   360  007ECE  75                 	db	117	;'u'
   361  007ECF  70                 	db	112	;'p'
   362  007ED0  20                 	db	32
   363  007ED1  73                 	db	115	;'s'
   364  007ED2  74                 	db	116	;'t'
   365  007ED3  61                 	db	97	;'a'
   366  007ED4  74                 	db	116	;'t'
   367  007ED5  69                 	db	105	;'i'
   368  007ED6  6F                 	db	111	;'o'
   369  007ED7  6E                 	db	110	;'n'
   370  007ED8  00                 	db	0
   371  007ED9                     STR_1:
   372  007ED9  49                 	db	73	;'I'
   373  007EDA  44                 	db	68	;'D'
   374  007EDB  4C                 	db	76	;'L'
   375  007EDC  45                 	db	69	;'E'
   376  007EDD  3A                 	db	58	;':'
   377  007EDE  20                 	db	32
   378  007EDF  77                 	db	119	;'w'
   379  007EE0  61                 	db	97	;'a'
   380  007EE1  69                 	db	105	;'i'
   381  007EE2  74                 	db	116	;'t'
   382  007EE3  69                 	db	105	;'i'
   383  007EE4  6E                 	db	110	;'n'
   384  007EE5  67                 	db	103	;'g'
   385  007EE6  20                 	db	32
   386  007EE7  66                 	db	102	;'f'
   387  007EE8  6F                 	db	111	;'o'
   388  007EE9  72                 	db	114	;'r'
   389  007EEA  20                 	db	32
   390  007EEB  20                 	db	32
   391  007EEC  76                 	db	118	;'v'
   392  007EED  69                 	db	105	;'i'
   393  007EEE  61                 	db	97	;'a'
   394  007EEF  6C                 	db	108	;'l'
   395  007EF0  20                 	db	32
   396  007EF1  74                 	db	116	;'t'
   397  007EF2  6F                 	db	111	;'o'
   398  007EF3  20                 	db	32
   399  007EF4  62                 	db	98	;'b'
   400  007EF5  65                 	db	101	;'e'
   401  007EF6  20                 	db	32
   402  007EF7  70                 	db	112	;'p'
   403  007EF8  6C                 	db	108	;'l'
   404  007EF9  61                 	db	97	;'a'
   405  007EFA  63                 	db	99	;'c'
   406  007EFB  65                 	db	101	;'e'
   407  007EFC  64                 	db	100	;'d'
   408  007EFD  20                 	db	32
   409  007EFE  69                 	db	105	;'i'
   410  007EFF  6E                 	db	110	;'n'
   411  007F00  20                 	db	32
   412  007F01  69                 	db	105	;'i'
   413  007F02  6E                 	db	110	;'n'
   414  007F03  69                 	db	105	;'i'
   415  007F04  74                 	db	116	;'t'
   416  007F05  20                 	db	32
   417  007F06  70                 	db	112	;'p'
   418  007F07  6F                 	db	111	;'o'
   419  007F08  73                 	db	115	;'s'
   420  007F09  00                 	db	0
   421  007F0A                     STR_11:
   422  007F0A  4E                 	db	78	;'N'
   423  007F0B  6F                 	db	111	;'o'
   424  007F0C  74                 	db	116	;'t'
   425  007F0D  20                 	db	32
   426  007F0E  65                 	db	101	;'e'
   427  007F0F  6E                 	db	110	;'n'
   428  007F10  6F                 	db	111	;'o'
   429  007F11  75                 	db	117	;'u'
   430  007F12  67                 	db	103	;'g'
   431  007F13  68                 	db	104	;'h'
   432  007F14  20                 	db	32
   433  007F15  64                 	db	100	;'d'
   434  007F16  69                 	db	105	;'i'
   435  007F17  6C                 	db	108	;'l'
   436  007F18  75                 	db	117	;'u'
   437  007F19  74                 	db	116	;'t'
   438  007F1A  69                 	db	105	;'i'
   439  007F1B  6E                 	db	110	;'n'
   440  007F1C  67                 	db	103	;'g'
   441  007F1D  20                 	db	32
   442  007F1E  73                 	db	115	;'s'
   443  007F1F  6F                 	db	111	;'o'
   444  007F20  6C                 	db	108	;'l'
   445  007F21  75                 	db	117	;'u'
   446  007F22  74                 	db	116	;'t'
   447  007F23  69                 	db	105	;'i'
   448  007F24  6F                 	db	111	;'o'
   449  007F25  6E                 	db	110	;'n'
   450  007F26  2C                 	db	44
   451  007F27  20                 	db	32
   452  007F28  70                 	db	112	;'p'
   453  007F29  6C                 	db	108	;'l'
   454  007F2A  65                 	db	101	;'e'
   455  007F2B  61                 	db	97	;'a'
   456  007F2C  73                 	db	115	;'s'
   457  007F2D  65                 	db	101	;'e'
   458  007F2E  20                 	db	32
   459  007F2F  72                 	db	114	;'r'
   460  007F30  65                 	db	101	;'e'
   461  007F31  66                 	db	102	;'f'
   462  007F32  69                 	db	105	;'i'
   463  007F33  6C                 	db	108	;'l'
   464  007F34  6C                 	db	108	;'l'
   465  007F35  00                 	db	0
   466  007F36                     STR_4:
   467  007F36  4F                 	db	79	;'O'
   468  007F37  56                 	db	86	;'V'
   469  007F38  45                 	db	69	;'E'
   470  007F39  4E                 	db	78	;'N'
   471  007F3A  3A                 	db	58	;':'
   472  007F3B  20                 	db	32
   473  007F3C  72                 	db	114	;'r'
   474  007F3D  65                 	db	101	;'e'
   475  007F3E  61                 	db	97	;'a'
   476  007F3F  63                 	db	99	;'c'
   477  007F40  68                 	db	104	;'h'
   478  007F41  69                 	db	105	;'i'
   479  007F42  6E                 	db	110	;'n'
   480  007F43  67                 	db	103	;'g'
   481  007F44  20                 	db	32
   482  007F45  74                 	db	116	;'t'
   483  007F46  68                 	db	104	;'h'
   484  007F47  65                 	db	101	;'e'
   485  007F48  20                 	db	32
   486  007F49  63                 	db	99	;'c'
   487  007F4A  6F                 	db	111	;'o'
   488  007F4B  72                 	db	114	;'r'
   489  007F4C  72                 	db	114	;'r'
   490  007F4D  65                 	db	101	;'e'
   491  007F4E  63                 	db	99	;'c'
   492  007F4F  74                 	db	116	;'t'
   493  007F50  20                 	db	32
   494  007F51  74                 	db	116	;'t'
   495  007F52  65                 	db	101	;'e'
   496  007F53  6D                 	db	109	;'m'
   497  007F54  70                 	db	112	;'p'
   498  007F55  65                 	db	101	;'e'
   499  007F56  72                 	db	114	;'r'
   500  007F57  61                 	db	97	;'a'
   501  007F58  74                 	db	116	;'t'
   502  007F59  75                 	db	117	;'u'
   503  007F5A  72                 	db	114	;'r'
   504  007F5B  65                 	db	101	;'e'
   505  007F5C  00                 	db	0
   506  007F5D                     STR_13:
   507  007F5D  4D                 	db	77	;'M'
   508  007F5E  6F                 	db	111	;'o'
   509  007F5F  76                 	db	118	;'v'
   510  007F60  65                 	db	101	;'e'
   511  007F61  64                 	db	100	;'d'
   512  007F62  20                 	db	32
   513  007F63  74                 	db	116	;'t'
   514  007F64  6F                 	db	111	;'o'
   515  007F65  20                 	db	32
   516  007F66  74                 	db	116	;'t'
   517  007F67  72                 	db	114	;'r'
   518  007F68  61                 	db	97	;'a'
   519  007F69  73                 	db	115	;'s'
   520  007F6A  68                 	db	104	;'h'
   521  007F6B  21                 	db	33
   522  007F6C  20                 	db	32
   523  007F6D  52                 	db	82	;'R'
   524  007F6E  65                 	db	101	;'e'
   525  007F6F  73                 	db	115	;'s'
   526  007F70  74                 	db	116	;'t'
   527  007F71  61                 	db	97	;'a'
   528  007F72  72                 	db	114	;'r'
   529  007F73  74                 	db	116	;'t'
   530  007F74  69                 	db	105	;'i'
   531  007F75  6E                 	db	110	;'n'
   532  007F76  67                 	db	103	;'g'
   533  007F77  20                 	db	32
   534  007F78  66                 	db	102	;'f'
   535  007F79  72                 	db	114	;'r'
   536  007F7A  6F                 	db	111	;'o'
   537  007F7B  6D                 	db	109	;'m'
   538  007F7C  20                 	db	32
   539  007F7D  49                 	db	73	;'I'
   540  007F7E  64                 	db	100	;'d'
   541  007F7F  6C                 	db	108	;'l'
   542  007F80  65                 	db	101	;'e'
   543  007F81  00                 	db	0
   544  007F82                     STR_9:
   545  007F82  44                 	db	68	;'D'
   546  007F83  65                 	db	101	;'e'
   547  007F84  76                 	db	118	;'v'
   548  007F85  69                 	db	105	;'i'
   549  007F86  63                 	db	99	;'c'
   550  007F87  65                 	db	101	;'e'
   551  007F88  20                 	db	32
   552  007F89  68                 	db	104	;'h'
   553  007F8A  61                 	db	97	;'a'
   554  007F8B  73                 	db	115	;'s'
   555  007F8C  20                 	db	32
   556  007F8D  62                 	db	98	;'b'
   557  007F8E  65                 	db	101	;'e'
   558  007F8F  65                 	db	101	;'e'
   559  007F90  6E                 	db	110	;'n'
   560  007F91  20                 	db	32
   561  007F92  72                 	db	114	;'r'
   562  007F93  65                 	db	101	;'e'
   563  007F94  73                 	db	115	;'s'
   564  007F95  65                 	db	101	;'e'
   565  007F96  74                 	db	116	;'t'
   566  007F97  00                 	db	0
   567  007F98                     STR_12:
   568  007F98  44                 	db	68	;'D'
   569  007F99  69                 	db	105	;'i'
   570  007F9A  6C                 	db	108	;'l'
   571  007F9B  75                 	db	117	;'u'
   572  007F9C  74                 	db	116	;'t'
   573  007F9D  69                 	db	105	;'i'
   574  007F9E  6F                 	db	111	;'o'
   575  007F9F  6E                 	db	110	;'n'
   576  007FA0  20                 	db	32
   577  007FA1  6F                 	db	111	;'o'
   578  007FA2  6E                 	db	110	;'n'
   579  007FA3  67                 	db	103	;'g'
   580  007FA4  6F                 	db	111	;'o'
   581  007FA5  69                 	db	105	;'i'
   582  007FA6  6E                 	db	110	;'n'
   583  007FA7  67                 	db	103	;'g'
   584  007FA8  00                 	db	0
   585  007FA9                     STR_5:
   586  007FA9  47                 	db	71	;'G'
   587  007FAA  52                 	db	82	;'R'
   588  007FAB  41                 	db	65	;'A'
   589  007FAC  53                 	db	83	;'S'
   590  007FAD  50                 	db	80	;'P'
   591  007FAE  49                 	db	73	;'I'
   592  007FAF  4E                 	db	78	;'N'
   593  007FB0  47                 	db	71	;'G'
   594  007FB1  00                 	db	0
   595  007FB2                     STR_7:
   596  007FB2  44                 	db	68	;'D'
   597  007FB3  49                 	db	73	;'I'
   598  007FB4  4C                 	db	76	;'L'
   599  007FB5  55                 	db	85	;'U'
   600  007FB6  54                 	db	84	;'T'
   601  007FB7  49                 	db	73	;'I'
   602  007FB8  4E                 	db	78	;'N'
   603  007FB9  47                 	db	71	;'G'
   604  007FBA  00                 	db	0
   605  007FBB                     STR_3:
   606  007FBB  4D                 	db	77	;'M'
   607  007FBC  4F                 	db	79	;'O'
   608  007FBD  56                 	db	86	;'V'
   609  007FBE  45                 	db	69	;'E'
   610  007FBF  4D                 	db	77	;'M'
   611  007FC0  45                 	db	69	;'E'
   612  007FC1  4E                 	db	78	;'N'
   613  007FC2  54                 	db	84	;'T'
   614  007FC3  00                 	db	0
   615  007FC4                     STR_6:
   616  007FC4  4D                 	db	77	;'M'
   617  007FC5  49                 	db	73	;'I'
   618  007FC6  58                 	db	88	;'X'
   619  007FC7  49                 	db	73	;'I'
   620  007FC8  4E                 	db	78	;'N'
   621  007FC9  47                 	db	71	;'G'
   622  007FCA  00                 	db	0
   623  007FCB                     STR_90:
   624  007FCB  68                 	db	104	;'h'
   625  007FCC  68                 	db	104	;'h'
   626  007FCD  58                 	db	88	;'X'
   627  007FCE  00                 	db	0
   628  007FCF                     STR_14:
   629  007FCF  68                 	db	104	;'h'
   630  007FD0  68                 	db	104	;'h'
   631  007FD1  64                 	db	100	;'d'
   632  007FD2  00                 	db	0
   633  007FD3                     STR_18:
   634  007FD3  68                 	db	104	;'h'
   635  007FD4  68                 	db	104	;'h'
   636  007FD5  69                 	db	105	;'i'
   637  007FD6  00                 	db	0
   638  007FD7                     STR_56:
   639  007FD7  68                 	db	104	;'h'
   640  007FD8  68                 	db	104	;'h'
   641  007FD9  6E                 	db	110	;'n'
   642  007FDA  00                 	db	0
   643  007FDB                     STR_41:
   644  007FDB  68                 	db	104	;'h'
   645  007FDC  68                 	db	104	;'h'
   646  007FDD  6F                 	db	111	;'o'
   647  007FDE  00                 	db	0
   648  007FDF                     STR_71:
   649  007FDF  68                 	db	104	;'h'
   650  007FE0  68                 	db	104	;'h'
   651  007FE1  75                 	db	117	;'u'
   652  007FE2  00                 	db	0
   653  007FE3                     STR_86:
   654  007FE3  68                 	db	104	;'h'
   655  007FE4  68                 	db	104	;'h'
   656  007FE5  78                 	db	120	;'x'
   657  007FE6  00                 	db	0
   658  007FE7                     STR_108:
   659  007FE7  7A                 	db	122	;'z'
   660  007FE8  58                 	db	88	;'X'
   661  007FE9  00                 	db	0
   662  007FEA                     STR_32:
   663  007FEA  7A                 	db	122	;'z'
   664  007FEB  64                 	db	100	;'d'
   665  007FEC  00                 	db	0
   666  007FED                     STR_36:
   667  007FED  7A                 	db	122	;'z'
   668  007FEE  69                 	db	105	;'i'
   669  007FEF  00                 	db	0
   670  007FF0                     STR_66:
   671  007FF0  7A                 	db	122	;'z'
   672  007FF1  6E                 	db	110	;'n'
   673  007FF2  00                 	db	0
   674  007FF3                     STR_51:
   675  007FF3  7A                 	db	122	;'z'
   676  007FF4  6F                 	db	111	;'o'
   677  007FF5  00                 	db	0
   678  007FF6                     STR_81:
   679  007FF6  7A                 	db	122	;'z'
   680  007FF7  75                 	db	117	;'u'
   681  007FF8  00                 	db	0
   682  007FF9                     STR_104:
   683  007FF9  7A                 	db	122	;'z'
   684  007FFA  78                 	db	120	;'x'
   685  007FFB  00                 	db	0
   686  007FFC                     STR_10:
   687  007FFC  25                 	db	37
   688  007FFD  73                 	db	115	;'s'
   689  007FFE  00                 	db	0
   690  007FFF  00                 	db	0	; dummy byte at the end
   691  0000                     
   692                           ; #config settings
   693                           
   694                           	psect	cinit
   695  006A14                     __pcinit:
   696                           	callstack 0
   697  006A14                     start_initialization:
   698                           	callstack 0
   699  006A14                     __initialization:
   700                           	callstack 0
   701                           
   702                           ; Initialize objects allocated to BANK2 (16 bytes)
   703                           ; load TBLPTR registers with __pidataBANK2
   704  006A14  0E75               	movlw	low __pidataBANK2
   705  006A16  6EF6               	movwf	tblptrl,c
   706  006A18  0E61               	movlw	high __pidataBANK2
   707  006A1A  6EF7               	movwf	tblptrh,c
   708  006A1C  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   709  006A1E  6EF8               	movwf	tblptru,c
   710  006A20  EE02  F000         	lfsr	0,__pdataBANK2
   711  006A24  EE10 F010          	lfsr	1,16
   712  006A28                     copy_data0:
   713  006A28  0009               	tblrd		*+
   714  006A2A  CFF5 FFEE          	movff	tablat,postinc0
   715  006A2E  50E5               	movf	postdec1,w,c
   716  006A30  50E1               	movf	fsr1l,w,c
   717  006A32  E1FA               	bnz	copy_data0
   718                           
   719                           ; Initialize objects allocated to BANK1 (10 bytes)
   720                           ; load TBLPTR registers with __pidataBANK1
   721  006A34  0E42               	movlw	low __pidataBANK1
   722  006A36  6EF6               	movwf	tblptrl,c
   723  006A38  0E61               	movlw	high __pidataBANK1
   724  006A3A  6EF7               	movwf	tblptrh,c
   725  006A3C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   726  006A3E  6EF8               	movwf	tblptru,c
   727  006A40  EE01  F0E7         	lfsr	0,__pdataBANK1
   728  006A44  EE10 F00A          	lfsr	1,10
   729  006A48                     copy_data1:
   730  006A48  0009               	tblrd		*+
   731  006A4A  CFF5 FFEE          	movff	tablat,postinc0
   732  006A4E  50E5               	movf	postdec1,w,c
   733  006A50  50E1               	movf	fsr1l,w,c
   734  006A52  E1FA               	bnz	copy_data1
   735                           
   736                           ; Initialize objects allocated to BANK0 (19 bytes)
   737                           ; load TBLPTR registers with __pidataBANK0
   738  006A54  0E85               	movlw	low __pidataBANK0
   739  006A56  6EF6               	movwf	tblptrl,c
   740  006A58  0E61               	movlw	high __pidataBANK0
   741  006A5A  6EF7               	movwf	tblptrh,c
   742  006A5C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   743  006A5E  6EF8               	movwf	tblptru,c
   744  006A60  EE00  F0E4         	lfsr	0,__pdataBANK0
   745  006A64  EE10 F013          	lfsr	1,19
   746  006A68                     copy_data2:
   747  006A68  0009               	tblrd		*+
   748  006A6A  CFF5 FFEE          	movff	tablat,postinc0
   749  006A6E  50E5               	movf	postdec1,w,c
   750  006A70  50E1               	movf	fsr1l,w,c
   751  006A72  E1FA               	bnz	copy_data2
   752                           
   753                           ; Clear objects allocated to BANK1 (64 bytes)
   754  006A74  EE01  F0A7         	lfsr	0,__pbssBANK1
   755  006A78  0E40               	movlw	64
   756  006A7A                     clear_0:
   757  006A7A  6AEE               	clrf	postinc0,c
   758  006A7C  06E8               	decf	wreg,f,c
   759  006A7E  E1FD               	bnz	clear_0
   760                           
   761                           ; Clear objects allocated to BANK0 (56 bytes)
   762  006A80  EE00  F080         	lfsr	0,__pbssBANK0
   763  006A84  0E38               	movlw	56
   764  006A86                     clear_1:
   765  006A86  6AEE               	clrf	postinc0,c
   766  006A88  06E8               	decf	wreg,f,c
   767  006A8A  E1FD               	bnz	clear_1
   768  006A8C                     end_of_initialization:
   769                           	callstack 0
   770  006A8C                     __end_of__initialization:
   771                           	callstack 0
   772  006A8C  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   773  006A8E  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   774  006A90  0E00               	movlw	low (__Lmediumconst shr (0+16))
   775  006A92  6EF8               	movwf	tblptru,c
   776  006A94  0100               	movlb	0
   777  006A96  EF31  F00A         	goto	_main	;jump to C main() function
   778                           
   779                           	psect	bssBANK0
   780  000080                     __pbssBANK0:
   781                           	callstack 0
   782  000080                     roundf@F525:
   783                           	callstack 0
   784  000080                     	ds	4
   785  000084                     _nout:
   786                           	callstack 0
   787  000084                     	ds	2
   788  000086                     _width:
   789                           	callstack 0
   790  000086                     	ds	2
   791  000088                     _prec:
   792                           	callstack 0
   793  000088                     	ds	2
   794  00008A                     _flags:
   795                           	callstack 0
   796  00008A                     	ds	2
   797  00008C                     _errno:
   798                           	callstack 0
   799  00008C                     	ds	2
   800  00008E                     _temperature_scaled:
   801                           	callstack 0
   802  00008E                     	ds	2
   803  000090                     _temperature_int:
   804                           	callstack 0
   805  000090                     	ds	2
   806  000092                     _mix_step_counter:
   807                           	callstack 0
   808  000092                     	ds	2
   809  000094                     _mix_direction:
   810                           	callstack 0
   811  000094                     	ds	2
   812  000096                     _mix_current_step:
   813                           	callstack 0
   814  000096                     	ds	2
   815  000098                     _dbuf:
   816                           	callstack 0
   817  000098                     	ds	32
   818                           
   819                           	psect	dataBANK0
   820  0000E4                     __pdataBANK0:
   821                           	callstack 0
   822  0000E4                     stoa@F1152:
   823                           	callstack 0
   824  0000E4                     	ds	7
   825  0000EB                     	ds	4
   826  0000EF                     	ds	4
   827  0000F3                     _tmr2_prescaler:
   828                           	callstack 0
   829  0000F3                     	ds	4
   830                           
   831                           	psect	bssBANK1
   832  0001A7                     __pbssBANK1:
   833                           	callstack 0
   834  0001A7                     _tank_error:
   835                           	callstack 0
   836  0001A7                     	ds	2
   837  0001A9                     _joint_dilutor_homed:
   838                           	callstack 0
   839  0001A9                     	ds	2
   840  0001AB                     _end_effector_homed:
   841                           	callstack 0
   842  0001AB                     	ds	2
   843  0001AD                     _joint_homed:
   844                           	callstack 0
   845  0001AD                     	ds	2
   846  0001AF                     _diluting_position_reached:
   847                           	callstack 0
   848  0001AF                     	ds	2
   849  0001B1                     _grasping_ee_position_reached:
   850                           	callstack 0
   851  0001B1                     	ds	2
   852  0001B3                     _grasping_joint_position_reached:
   853                           	callstack 0
   854  0001B3                     	ds	2
   855  0001B5                     _move_to_trash:
   856                           	callstack 0
   857  0001B5                     	ds	2
   858  0001B7                     _trash_counter:
   859                           	callstack 0
   860  0001B7                     	ds	2
   861  0001B9                     _dilution_done:
   862                           	callstack 0
   863  0001B9                     	ds	2
   864  0001BB                     _mix_counter:
   865                           	callstack 0
   866  0001BB                     	ds	2
   867  0001BD                     _timer_done:
   868                           	callstack 0
   869  0001BD                     	ds	1
   870  0001BE                     _read_new_char:
   871                           	callstack 0
   872  0001BE                     	ds	1
   873  0001BF                     _idle_msg_sent:
   874                           	callstack 0
   875  0001BF                     	ds	1
   876  0001C0                     _state_changed:
   877                           	callstack 0
   878  0001C0                     	ds	1
   879  0001C1                     _joint_dilutor_stepper:
   880                           	callstack 0
   881  0001C1                     	ds	12
   882  0001CD                     _end_effector_stepper:
   883                           	callstack 0
   884  0001CD                     	ds	12
   885  0001D9                     _joint_stepper:
   886                           	callstack 0
   887  0001D9                     	ds	12
   888  0001E5                     _state:
   889                           	callstack 0
   890  0001E5                     	ds	2
   891                           
   892                           	psect	dataBANK1
   893  0001E7                     __pdataBANK1:
   894                           	callstack 0
   895  0001E7                     _state_before_error:
   896                           	callstack 0
   897  0001E7                     	ds	2
   898  0001E9                     _hex_end_effector_values:
   899                           	callstack 0
   900  0001E9                     	ds	4
   901  0001ED                     _hex_joint_values:
   902                           	callstack 0
   903  0001ED                     	ds	4
   904                           
   905                           	psect	dataBANK2
   906  000200                     __pdataBANK2:
   907                           	callstack 0
   908  000200                     _state_msgs:
   909                           	callstack 0
   910  000200                     	ds	16
   911                           
   912                           	psect	cstackBANK1
   913  000100                     __pcstackBANK1:
   914                           	callstack 0
   915  000100                     main@greet_str:
   916                           	callstack 0
   917                           
   918                           ; 160 bytes @ 0x0
   919  000100                     	ds	160
   920  0001A0                     main@current_temp:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0xA0
   924  0001A0                     	ds	2
   925  0001A2                     _main$2167:
   926                           	callstack 0
   927                           
   928                           ; 4 bytes @ 0xA2
   929  0001A2                     	ds	4
   930  0001A6                     main@rx_char:
   931                           	callstack 0
   932                           
   933                           ; 1 bytes @ 0xA6
   934  0001A6                     	ds	1
   935                           
   936                           	psect	cstackBANK0
   937  0000B8                     __pcstackBANK0:
   938                           	callstack 0
   939  0000B8                     ___fltol@sign1:
   940                           	callstack 0
   941  0000B8                     _vsnprintf$1586:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0x0
   945  0000B8                     	ds	1
   946  0000B9                     ___fltol@exp1:
   947                           	callstack 0
   948                           
   949                           ; 1 bytes @ 0x1
   950  0000B9                     	ds	1
   951  0000BA                     ?_get_liters:
   952                           	callstack 0
   953  0000BA                     ?_get_temperature:
   954                           	callstack 0
   955  0000BA                     vsnprintf@cnt:
   956                           	callstack 0
   957  0000BA                     update_pwm_duty_ccp1@time_up:
   958                           	callstack 0
   959  0000BA                     _init_timer_2$2168:
   960                           	callstack 0
   961                           
   962                           ; 4 bytes @ 0x2
   963  0000BA                     	ds	2
   964  0000BC                     ___flge@ff1:
   965                           	callstack 0
   966  0000BC                     vsnprintf@f:
   967                           	callstack 0
   968                           
   969                           ; 6 bytes @ 0x4
   970  0000BC                     	ds	2
   971  0000BE                     ??_update_pwm_duty_ccp1:
   972                           
   973                           ; 1 bytes @ 0x6
   974  0000BE                     	ds	2
   975  0000C0                     update_pwm_duty_ccp1@new_duty:
   976                           	callstack 0
   977  0000C0                     ___flge@ff2:
   978                           	callstack 0
   979                           
   980                           ; 4 bytes @ 0x8
   981  0000C0                     	ds	2
   982  0000C2                     ?_snprintf:
   983                           	callstack 0
   984  0000C2                     update_pwm_duty_ccp1@lsbs_duty:
   985                           	callstack 0
   986  0000C2                     snprintf@s:
   987                           	callstack 0
   988                           
   989                           ; 2 bytes @ 0xA
   990  0000C2                     	ds	2
   991  0000C4                     ??___flge:
   992  0000C4                     snprintf@n:
   993                           	callstack 0
   994                           
   995                           ; 2 bytes @ 0xC
   996  0000C4                     	ds	2
   997  0000C6                     snprintf@fmt:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0xE
  1001  0000C6                     	ds	2
  1002  0000C8                     ?_check_temperature:
  1003                           	callstack 0
  1004  0000C8                     ?_roundf:
  1005                           	callstack 0
  1006  0000C8                     check_temperature@temp_to_be_checked:
  1007                           	callstack 0
  1008  0000C8                     roundf@x:
  1009                           	callstack 0
  1010                           
  1011                           ; 4 bytes @ 0x10
  1012  0000C8                     	ds	2
  1013  0000CA                     check_temperature@grad:
  1014                           	callstack 0
  1015                           
  1016                           ; 4 bytes @ 0x12
  1017  0000CA                     	ds	2
  1018  0000CC                     ??_roundf:
  1019  0000CC                     snprintf@ap:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x14
  1023  0000CC                     	ds	4
  1024  0000D0                     _roundf$2170:
  1025                           	callstack 0
  1026                           
  1027                           ; 4 bytes @ 0x18
  1028  0000D0                     	ds	4
  1029  0000D4                     roundf@e:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x1C
  1033  0000D4                     	ds	2
  1034  0000D6                     _roundf$2169:
  1035                           	callstack 0
  1036                           
  1037                           ; 4 bytes @ 0x1E
  1038  0000D6                     	ds	4
  1039  0000DA                     roundf@u:
  1040                           	callstack 0
  1041                           
  1042                           ; 4 bytes @ 0x22
  1043  0000DA                     	ds	4
  1044  0000DE                     roundf@y:
  1045                           	callstack 0
  1046                           
  1047                           ; 4 bytes @ 0x26
  1048  0000DE                     	ds	4
  1049  0000E2                     ??_main:
  1050                           
  1051                           ; 1 bytes @ 0x2A
  1052  0000E2                     	ds	2
  1053                           
  1054                           	psect	cstackCOMRAM
  1055  000001                     __pcstackCOMRAM:
  1056                           	callstack 0
  1057  000001                     ?_strlen:
  1058                           	callstack 0
  1059  000001                     ?_isupper:
  1060                           	callstack 0
  1061  000001                     ?_isalpha:
  1062                           	callstack 0
  1063  000001                     ?_isdigit:
  1064                           	callstack 0
  1065  000001                     ?_strncmp:
  1066                           	callstack 0
  1067  000001                     ?_isspace:
  1068                           	callstack 0
  1069  000001                     ?_islower:
  1070                           	callstack 0
  1071  000001                     ?___wmul:
  1072                           	callstack 0
  1073  000001                     ?___flneg:
  1074                           	callstack 0
  1075  000001                     ?___aodiv:
  1076                           	callstack 0
  1077  000001                     ?___aomod:
  1078                           	callstack 0
  1079  000001                     ?___lodiv:
  1080                           	callstack 0
  1081  000001                     ?___lomod:
  1082                           	callstack 0
  1083  000001                     serial_tx_char@val:
  1084                           	callstack 0
  1085  000001                     get_reg_value@rx_char:
  1086                           	callstack 0
  1087  000001                     lcd_wr@val:
  1088                           	callstack 0
  1089  000001                     state_translator_micro_to_fpga@state:
  1090                           	callstack 0
  1091  000001                     init_stepper@stepper_motor:
  1092                           	callstack 0
  1093  000001                     turn_on_current_coil@stepper_motor:
  1094                           	callstack 0
  1095  000001                     update_current_coil@stepper_motor:
  1096                           	callstack 0
  1097  000001                     change_direction@stepper_motor:
  1098                           	callstack 0
  1099  000001                     ___wmul@multiplier:
  1100                           	callstack 0
  1101  000001                     isalpha@c:
  1102                           	callstack 0
  1103  000001                     isdigit@c:
  1104                           	callstack 0
  1105  000001                     isspace@c:
  1106                           	callstack 0
  1107  000001                     isupper@c:
  1108                           	callstack 0
  1109  000001                     fputc@c:
  1110                           	callstack 0
  1111  000001                     strlen@s:
  1112                           	callstack 0
  1113  000001                     strncmp@_l:
  1114                           	callstack 0
  1115  000001                     islower@c:
  1116                           	callstack 0
  1117  000001                     ___flneg@f1:
  1118                           	callstack 0
  1119  000001                     ___aodiv@dividend:
  1120                           	callstack 0
  1121  000001                     ___aomod@dividend:
  1122                           	callstack 0
  1123  000001                     ___lodiv@dividend:
  1124                           	callstack 0
  1125  000001                     ___lomod@dividend:
  1126                           	callstack 0
  1127                           
  1128                           ; 8 bytes @ 0x0
  1129  000001                     	ds	1
  1130  000002                     lcd_cmd@val:
  1131                           	callstack 0
  1132  000002                     lcd_dat@val:
  1133                           	callstack 0
  1134                           
  1135                           ; 1 bytes @ 0x1
  1136  000002                     	ds	1
  1137  000003                     ??_lcd_init:
  1138  000003                     ??_change_direction:
  1139  000003                     ??_isupper:
  1140  000003                     ??_isalpha:
  1141  000003                     ??_isdigit:
  1142  000003                     ??_isspace:
  1143  000003                     ??_islower:
  1144  000003                     ??_turn_on_current_coil:
  1145  000003                     ??_update_current_coil:
  1146  000003                     lcd_str@str:
  1147                           	callstack 0
  1148  000003                     state_translator_fpga_to_micro@state:
  1149                           	callstack 0
  1150  000003                     init_stepper@current_coil:
  1151                           	callstack 0
  1152  000003                     ___wmul@multiplicand:
  1153                           	callstack 0
  1154  000003                     fputc@fp:
  1155                           	callstack 0
  1156  000003                     strlen@a:
  1157                           	callstack 0
  1158  000003                     strncmp@_r:
  1159                           	callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x2
  1162  000003                     	ds	2
  1163  000005                     ??_lcd_str:
  1164  000005                     ??_fputc:
  1165  000005                     state_translator_fpga_to_micro@state_machine_code:
  1166                           	callstack 0
  1167  000005                     state_translator_micro_to_fpga@state_machine_code:
  1168                           	callstack 0
  1169  000005                     init_stepper@step_counter:
  1170                           	callstack 0
  1171  000005                     ___wmul@product:
  1172                           	callstack 0
  1173  000005                     strncmp@n:
  1174                           	callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x4
  1177  000005                     	ds	2
  1178  000007                     ??_strncmp:
  1179  000007                     ?_toupper:
  1180                           	callstack 0
  1181  000007                     lcd_str@i:
  1182                           	callstack 0
  1183  000007                     _isspace$1870:
  1184                           	callstack 0
  1185  000007                     init_stepper@direction:
  1186                           	callstack 0
  1187  000007                     toupper@c:
  1188                           	callstack 0
  1189                           
  1190                           ; 2 bytes @ 0x6
  1191  000007                     	ds	1
  1192  000008                     ?_atoi:
  1193                           	callstack 0
  1194  000008                     atoi@s:
  1195                           	callstack 0
  1196  000008                     strncmp@l:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x7
  1200  000008                     	ds	1
  1201  000009                     ??_toupper:
  1202  000009                     ?_reach_goal:
  1203                           	callstack 0
  1204  000009                     init_stepper@hex_coil_register_values:
  1205                           	callstack 0
  1206  000009                     reach_goal@stepper_motor:
  1207                           	callstack 0
  1208  000009                     ___aodiv@divisor:
  1209                           	callstack 0
  1210  000009                     ___aomod@divisor:
  1211                           	callstack 0
  1212  000009                     ___lodiv@divisor:
  1213                           	callstack 0
  1214  000009                     ___lomod@divisor:
  1215                           	callstack 0
  1216                           
  1217                           ; 8 bytes @ 0x8
  1218  000009                     	ds	1
  1219  00000A                     ??_atoi:
  1220  00000A                     ?_stoa:
  1221                           	callstack 0
  1222  00000A                     stoa@fp:
  1223                           	callstack 0
  1224  00000A                     fputs@s:
  1225                           	callstack 0
  1226  00000A                     strncmp@r:
  1227                           	callstack 0
  1228                           
  1229                           ; 2 bytes @ 0x9
  1230  00000A                     	ds	1
  1231  00000B                     init_stepper@register_name:
  1232                           	callstack 0
  1233  00000B                     reach_goal@goal_to_reach:
  1234                           	callstack 0
  1235                           
  1236                           ; 2 bytes @ 0xA
  1237  00000B                     	ds	1
  1238  00000C                     stoa@s:
  1239                           	callstack 0
  1240  00000C                     fputs@fp:
  1241                           	callstack 0
  1242                           
  1243                           ; 2 bytes @ 0xB
  1244  00000C                     	ds	1
  1245  00000D                     ??_init_stepper:
  1246  00000D                     ??_reach_goal:
  1247  00000D                     _toupper$1930:
  1248                           	callstack 0
  1249                           
  1250                           ; 2 bytes @ 0xC
  1251  00000D                     	ds	1
  1252  00000E                     ??_stoa:
  1253  00000E                     fputs@c:
  1254                           	callstack 0
  1255  00000E                     atoi@neg:
  1256                           	callstack 0
  1257                           
  1258                           ; 2 bytes @ 0xD
  1259  00000E                     	ds	1
  1260  00000F                     init_stepper@i:
  1261                           	callstack 0
  1262  00000F                     fputs@i:
  1263                           	callstack 0
  1264  00000F                     stoa@nuls:
  1265                           	callstack 0
  1266                           
  1267                           ; 7 bytes @ 0xE
  1268  00000F                     	ds	1
  1269  000010                     _atoi$1842:
  1270                           	callstack 0
  1271                           
  1272                           ; 2 bytes @ 0xF
  1273  000010                     	ds	1
  1274  000011                     ?_pad:
  1275                           	callstack 0
  1276  000011                     ___aodiv@counter:
  1277                           	callstack 0
  1278  000011                     ___aomod@counter:
  1279                           	callstack 0
  1280  000011                     ___lomod@counter:
  1281                           	callstack 0
  1282  000011                     pad@fp:
  1283                           	callstack 0
  1284  000011                     ___lodiv@quotient:
  1285                           	callstack 0
  1286                           
  1287                           ; 8 bytes @ 0x10
  1288  000011                     	ds	1
  1289  000012                     ___aodiv@sign:
  1290                           	callstack 0
  1291  000012                     ___aomod@sign:
  1292                           	callstack 0
  1293  000012                     _atoi$1844:
  1294                           	callstack 0
  1295                           
  1296                           ; 2 bytes @ 0x11
  1297  000012                     	ds	1
  1298  000013                     ?_abs:
  1299                           	callstack 0
  1300  000013                     abs@a:
  1301                           	callstack 0
  1302  000013                     pad@buf:
  1303                           	callstack 0
  1304  000013                     ___aodiv@quotient:
  1305                           	callstack 0
  1306                           
  1307                           ; 8 bytes @ 0x12
  1308  000013                     	ds	1
  1309  000014                     _atoi$1843:
  1310                           	callstack 0
  1311                           
  1312                           ; 1 bytes @ 0x13
  1313  000014                     	ds	1
  1314  000015                     ??_abs:
  1315  000015                     pad@p:
  1316                           	callstack 0
  1317  000015                     atoi@n:
  1318                           	callstack 0
  1319                           
  1320                           ; 2 bytes @ 0x14
  1321  000015                     	ds	1
  1322  000016                     stoa@i:
  1323                           	callstack 0
  1324                           
  1325                           ; 2 bytes @ 0x15
  1326  000016                     	ds	1
  1327  000017                     ??_pad:
  1328  000017                     ?___awdiv:
  1329                           	callstack 0
  1330  000017                     ___awdiv@dividend:
  1331                           	callstack 0
  1332                           
  1333                           ; 2 bytes @ 0x16
  1334  000017                     	ds	1
  1335  000018                     pad@i:
  1336                           	callstack 0
  1337  000018                     stoa@w:
  1338                           	callstack 0
  1339                           
  1340                           ; 2 bytes @ 0x17
  1341  000018                     	ds	1
  1342  000019                     ___lodiv@counter:
  1343                           	callstack 0
  1344  000019                     ___awdiv@divisor:
  1345                           	callstack 0
  1346                           
  1347                           ; 2 bytes @ 0x18
  1348  000019                     	ds	1
  1349  00001A                     pad@w:
  1350                           	callstack 0
  1351  00001A                     stoa@cp:
  1352                           	callstack 0
  1353                           
  1354                           ; 2 bytes @ 0x19
  1355  00001A                     	ds	1
  1356  00001B                     ___awdiv@counter:
  1357                           	callstack 0
  1358                           
  1359                           ; 1 bytes @ 0x1A
  1360  00001B                     	ds	1
  1361  00001C                     ?_ctoa:
  1362                           	callstack 0
  1363  00001C                     ?_dtoa:
  1364                           	callstack 0
  1365  00001C                     ?_otoa:
  1366                           	callstack 0
  1367  00001C                     ?_utoa:
  1368                           	callstack 0
  1369  00001C                     ?_xtoa:
  1370                           	callstack 0
  1371  00001C                     ___awdiv@sign:
  1372                           	callstack 0
  1373  00001C                     ctoa@fp:
  1374                           	callstack 0
  1375  00001C                     dtoa@fp:
  1376                           	callstack 0
  1377  00001C                     otoa@fp:
  1378                           	callstack 0
  1379  00001C                     stoa@p:
  1380                           	callstack 0
  1381  00001C                     utoa@fp:
  1382                           	callstack 0
  1383  00001C                     xtoa@fp:
  1384                           	callstack 0
  1385                           
  1386                           ; 2 bytes @ 0x1B
  1387  00001C                     	ds	1
  1388  00001D                     ___awdiv@quotient:
  1389                           	callstack 0
  1390                           
  1391                           ; 2 bytes @ 0x1C
  1392  00001D                     	ds	1
  1393  00001E                     ctoa@c:
  1394                           	callstack 0
  1395  00001E                     stoa@l:
  1396                           	callstack 0
  1397  00001E                     dtoa@d:
  1398                           	callstack 0
  1399  00001E                     otoa@d:
  1400                           	callstack 0
  1401  00001E                     utoa@d:
  1402                           	callstack 0
  1403  00001E                     xtoa@d:
  1404                           	callstack 0
  1405                           
  1406                           ; 8 bytes @ 0x1D
  1407  00001E                     	ds	1
  1408  00001F                     ?___xxtofl:
  1409                           	callstack 0
  1410  00001F                     ctoa@w:
  1411                           	callstack 0
  1412  00001F                     ___xxtofl@val:
  1413                           	callstack 0
  1414                           
  1415                           ; 4 bytes @ 0x1E
  1416  00001F                     	ds	4
  1417  000023                     ??___xxtofl:
  1418                           
  1419                           ; 1 bytes @ 0x22
  1420  000023                     	ds	3
  1421  000026                     ??_dtoa:
  1422  000026                     ??_otoa:
  1423  000026                     ??_utoa:
  1424  000026                     xtoa@x:
  1425                           	callstack 0
  1426                           
  1427                           ; 1 bytes @ 0x25
  1428  000026                     	ds	1
  1429  000027                     ??_xtoa:
  1430  000027                     ___xxtofl@sign:
  1431                           	callstack 0
  1432                           
  1433                           ; 1 bytes @ 0x26
  1434  000027                     	ds	1
  1435  000028                     ___xxtofl@exp:
  1436                           	callstack 0
  1437                           
  1438                           ; 1 bytes @ 0x27
  1439  000028                     	ds	1
  1440  000029                     ___xxtofl@arg:
  1441                           	callstack 0
  1442                           
  1443                           ; 4 bytes @ 0x28
  1444  000029                     	ds	4
  1445  00002D                     ?___flmul:
  1446                           	callstack 0
  1447  00002D                     ___flmul@b:
  1448                           	callstack 0
  1449                           
  1450                           ; 4 bytes @ 0x2C
  1451  00002D                     	ds	1
  1452  00002E                     _dtoa$1668:
  1453                           	callstack 0
  1454  00002E                     otoa@p:
  1455                           	callstack 0
  1456  00002E                     utoa@p:
  1457                           	callstack 0
  1458                           
  1459                           ; 2 bytes @ 0x2D
  1460  00002E                     	ds	1
  1461  00002F                     _xtoa$1704:
  1462                           	callstack 0
  1463                           
  1464                           ; 2 bytes @ 0x2E
  1465  00002F                     	ds	1
  1466  000030                     dtoa@p:
  1467                           	callstack 0
  1468  000030                     otoa@t:
  1469                           	callstack 0
  1470  000030                     utoa@w:
  1471                           	callstack 0
  1472                           
  1473                           ; 2 bytes @ 0x2F
  1474  000030                     	ds	1
  1475  000031                     _xtoa$1705:
  1476                           	callstack 0
  1477  000031                     ___flmul@a:
  1478                           	callstack 0
  1479                           
  1480                           ; 4 bytes @ 0x30
  1481  000031                     	ds	1
  1482  000032                     dtoa@w:
  1483                           	callstack 0
  1484  000032                     otoa@w:
  1485                           	callstack 0
  1486  000032                     utoa@n:
  1487                           	callstack 0
  1488                           
  1489                           ; 8 bytes @ 0x31
  1490  000032                     	ds	1
  1491  000033                     xtoa@p:
  1492                           	callstack 0
  1493                           
  1494                           ; 2 bytes @ 0x32
  1495  000033                     	ds	1
  1496  000034                     dtoa@s:
  1497                           	callstack 0
  1498  000034                     otoa@n:
  1499                           	callstack 0
  1500                           
  1501                           ; 8 bytes @ 0x33
  1502  000034                     	ds	1
  1503  000035                     ??___flmul:
  1504  000035                     xtoa@w:
  1505                           	callstack 0
  1506                           
  1507                           ; 2 bytes @ 0x34
  1508  000035                     	ds	1
  1509  000036                     dtoa@n:
  1510                           	callstack 0
  1511                           
  1512                           ; 8 bytes @ 0x35
  1513  000036                     	ds	1
  1514  000037                     xtoa@n:
  1515                           	callstack 0
  1516                           
  1517                           ; 8 bytes @ 0x36
  1518  000037                     	ds	2
  1519  000039                     ___flmul@sign:
  1520                           	callstack 0
  1521                           
  1522                           ; 1 bytes @ 0x38
  1523  000039                     	ds	1
  1524  00003A                     utoa@i:
  1525                           	callstack 0
  1526  00003A                     ___flmul@grs:
  1527                           	callstack 0
  1528                           
  1529                           ; 4 bytes @ 0x39
  1530  00003A                     	ds	2
  1531  00003C                     otoa@i:
  1532                           	callstack 0
  1533                           
  1534                           ; 2 bytes @ 0x3B
  1535  00003C                     	ds	2
  1536  00003E                     ___flmul@aexp:
  1537                           	callstack 0
  1538  00003E                     dtoa@i:
  1539                           	callstack 0
  1540                           
  1541                           ; 2 bytes @ 0x3D
  1542  00003E                     	ds	1
  1543  00003F                     ___flmul@bexp:
  1544                           	callstack 0
  1545  00003F                     xtoa@i:
  1546                           	callstack 0
  1547                           
  1548                           ; 2 bytes @ 0x3E
  1549  00003F                     	ds	1
  1550  000040                     ___flmul@prod:
  1551                           	callstack 0
  1552                           
  1553                           ; 4 bytes @ 0x3F
  1554  000040                     	ds	1
  1555  000041                     xtoa@c:
  1556                           	callstack 0
  1557                           
  1558                           ; 2 bytes @ 0x40
  1559  000041                     	ds	2
  1560  000043                     ?_vfpfcnvrt:
  1561                           	callstack 0
  1562  000043                     vfpfcnvrt@fp:
  1563                           	callstack 0
  1564                           
  1565                           ; 2 bytes @ 0x42
  1566  000043                     	ds	1
  1567  000044                     ___flmul@temp:
  1568                           	callstack 0
  1569                           
  1570                           ; 2 bytes @ 0x43
  1571  000044                     	ds	1
  1572  000045                     vfpfcnvrt@fmt:
  1573                           	callstack 0
  1574                           
  1575                           ; 2 bytes @ 0x44
  1576  000045                     	ds	1
  1577  000046                     ?___fldiv:
  1578                           	callstack 0
  1579  000046                     ___fldiv@b:
  1580                           	callstack 0
  1581                           
  1582                           ; 4 bytes @ 0x45
  1583  000046                     	ds	1
  1584  000047                     vfpfcnvrt@ap:
  1585                           	callstack 0
  1586                           
  1587                           ; 2 bytes @ 0x46
  1588  000047                     	ds	2
  1589  000049                     ??_vfpfcnvrt:
  1590                           
  1591                           ; 1 bytes @ 0x48
  1592  000049                     	ds	1
  1593  00004A                     ___fldiv@a:
  1594                           	callstack 0
  1595                           
  1596                           ; 4 bytes @ 0x49
  1597  00004A                     	ds	3
  1598  00004D                     vfpfcnvrt@cp:
  1599                           	callstack 0
  1600                           
  1601                           ; 2 bytes @ 0x4C
  1602  00004D                     	ds	1
  1603  00004E                     ??___fldiv:
  1604                           
  1605                           ; 1 bytes @ 0x4D
  1606  00004E                     	ds	1
  1607  00004F                     vfpfcnvrt@done:
  1608                           	callstack 0
  1609                           
  1610                           ; 2 bytes @ 0x4E
  1611  00004F                     	ds	2
  1612  000051                     _vfpfcnvrt$1719:
  1613                           	callstack 0
  1614                           
  1615                           ; 2 bytes @ 0x50
  1616  000051                     	ds	1
  1617  000052                     ___fldiv@rem:
  1618                           	callstack 0
  1619                           
  1620                           ; 4 bytes @ 0x51
  1621  000052                     	ds	1
  1622  000053                     _vfpfcnvrt$1720:
  1623                           	callstack 0
  1624                           
  1625                           ; 2 bytes @ 0x52
  1626  000053                     	ds	2
  1627  000055                     vfpfcnvrt@ll:
  1628                           	callstack 0
  1629                           
  1630                           ; 8 bytes @ 0x54
  1631  000055                     	ds	1
  1632  000056                     ___fldiv@sign:
  1633                           	callstack 0
  1634                           
  1635                           ; 1 bytes @ 0x55
  1636  000056                     	ds	1
  1637  000057                     ___fldiv@new_exp:
  1638                           	callstack 0
  1639                           
  1640                           ; 2 bytes @ 0x56
  1641  000057                     	ds	2
  1642  000059                     ___fldiv@grs:
  1643                           	callstack 0
  1644                           
  1645                           ; 4 bytes @ 0x58
  1646  000059                     	ds	4
  1647  00005D                     ___fldiv@bexp:
  1648                           	callstack 0
  1649  00005D                     vfpfcnvrt@vp:
  1650                           	callstack 0
  1651                           
  1652                           ; 2 bytes @ 0x5C
  1653  00005D                     	ds	1
  1654  00005E                     ___fldiv@aexp:
  1655                           	callstack 0
  1656                           
  1657                           ; 1 bytes @ 0x5D
  1658  00005E                     	ds	1
  1659  00005F                     ?___fladd:
  1660                           	callstack 0
  1661  00005F                     vfpfcnvrt@c:
  1662                           	callstack 0
  1663  00005F                     ___fladd@b:
  1664                           	callstack 0
  1665                           
  1666                           ; 4 bytes @ 0x5E
  1667  00005F                     	ds	1
  1668  000060                     vfpfcnvrt@llu:
  1669                           	callstack 0
  1670                           
  1671                           ; 8 bytes @ 0x5F
  1672  000060                     	ds	3
  1673  000063                     ___fladd@a:
  1674                           	callstack 0
  1675                           
  1676                           ; 4 bytes @ 0x62
  1677  000063                     	ds	4
  1678  000067                     ??___fladd:
  1679                           
  1680                           ; 1 bytes @ 0x66
  1681  000067                     	ds	1
  1682  000068                     ?_vfprintf:
  1683                           	callstack 0
  1684  000068                     vfprintf@fp:
  1685                           	callstack 0
  1686                           
  1687                           ; 2 bytes @ 0x67
  1688  000068                     	ds	2
  1689  00006A                     vfprintf@fmt:
  1690                           	callstack 0
  1691                           
  1692                           ; 2 bytes @ 0x69
  1693  00006A                     	ds	1
  1694  00006B                     ___fladd@signs:
  1695                           	callstack 0
  1696                           
  1697                           ; 1 bytes @ 0x6A
  1698  00006B                     	ds	1
  1699  00006C                     ___fladd@aexp:
  1700                           	callstack 0
  1701  00006C                     vfprintf@ap:
  1702                           	callstack 0
  1703                           
  1704                           ; 2 bytes @ 0x6B
  1705  00006C                     	ds	1
  1706  00006D                     ___fladd@bexp:
  1707                           	callstack 0
  1708                           
  1709                           ; 1 bytes @ 0x6C
  1710  00006D                     	ds	1
  1711  00006E                     ___fladd@grs:
  1712                           	callstack 0
  1713  00006E                     vfprintf@cfmt:
  1714                           	callstack 0
  1715                           
  1716                           ; 2 bytes @ 0x6D
  1717  00006E                     	ds	1
  1718  00006F                     ?___flsub:
  1719                           	callstack 0
  1720  00006F                     ___flsub@b:
  1721                           	callstack 0
  1722                           
  1723                           ; 4 bytes @ 0x6E
  1724  00006F                     	ds	1
  1725  000070                     ?_vsnprintf:
  1726                           	callstack 0
  1727  000070                     vsnprintf@s:
  1728                           	callstack 0
  1729                           
  1730                           ; 2 bytes @ 0x6F
  1731  000070                     	ds	2
  1732  000072                     vsnprintf@n:
  1733                           	callstack 0
  1734                           
  1735                           ; 2 bytes @ 0x71
  1736  000072                     	ds	1
  1737  000073                     ___flsub@a:
  1738                           	callstack 0
  1739                           
  1740                           ; 4 bytes @ 0x72
  1741  000073                     	ds	1
  1742  000074                     vsnprintf@fmt:
  1743                           	callstack 0
  1744                           
  1745                           ; 2 bytes @ 0x73
  1746  000074                     	ds	2
  1747  000076                     vsnprintf@ap:
  1748                           	callstack 0
  1749                           
  1750                           ; 2 bytes @ 0x75
  1751  000076                     	ds	1
  1752  000077                     ?___fltol:
  1753                           	callstack 0
  1754  000077                     ___fltol@f1:
  1755                           	callstack 0
  1756                           
  1757                           ; 4 bytes @ 0x76
  1758  000077                     	ds	1
  1759  000078                     ??_vsnprintf:
  1760                           
  1761                           ; 1 bytes @ 0x77
  1762  000078                     	ds	3
  1763  00007B                     ??___fltol:
  1764                           
  1765                           ; 1 bytes @ 0x7A
  1766  00007B                     	ds	1
  1767  00007C                     
  1768                           ; 1 bytes @ 0x7B
  1769  00007C                     	ds	3
  1770  00007F                     
  1771                           ; 1 bytes @ 0x7E
  1772 ;;
  1773 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1774 ;;
  1775 ;; *************** function _main *****************
  1776 ;; Defined at:
  1777 ;;		line 67 in file "main.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;		None
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;  current_temp    2  160[BANK1 ] int 
  1782 ;;  greet_str     160    0[BANK1 ] PTR const unsigned char 
  1783 ;;		 -> ?_snprintf(2), STR_8(50), STR_7(9), STR_6(7), 
  1784 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  1785 ;;		 -> STR_1(49), 
  1786 ;;  rx_char         1  166[BANK1 ] unsigned char 
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      void 
  1789 ;; Registers used:
  1790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1796 ;;      Params:         0       0       0       0       0       0       0
  1797 ;;      Locals:         0       0     167       0       0       0       0
  1798 ;;      Temps:          0       2       0       0       0       0       0
  1799 ;;      Totals:         0       2     167       0       0       0       0
  1800 ;;Total ram usage:      169 bytes
  1801 ;; Hardware stack levels required when called:   10
  1802 ;; This function calls:
  1803 ;;		___flge
  1804 ;;		___wmul
  1805 ;;		___xxtofl
  1806 ;;		_change_direction
  1807 ;;		_check_temperature
  1808 ;;		_configure_ad_conversion_oven
  1809 ;;		_configure_ad_conversion_tank
  1810 ;;		_get_liters
  1811 ;;		_get_reg_value
  1812 ;;		_get_temperature
  1813 ;;		_init_PORTS
  1814 ;;		_init_USART
  1815 ;;		_init_ccp1
  1816 ;;		_init_interrupts
  1817 ;;		_init_stepper
  1818 ;;		_init_timer_0
  1819 ;;		_init_timer_2
  1820 ;;		_lcd_cmd
  1821 ;;		_lcd_init
  1822 ;;		_lcd_str
  1823 ;;		_reach_goal
  1824 ;;		_serial_tx_char
  1825 ;;		_snprintf
  1826 ;;		_state_translator_fpga_to_micro
  1827 ;;		_state_translator_micro_to_fpga
  1828 ;;		_wait_for_zero
  1829 ;; This function is called by:
  1830 ;;		Startup code after reset
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           	psect	text0
  1835  001462                     __ptext0:
  1836                           	callstack 0
  1837  001462                     _main:
  1838                           	callstack 21
  1839  001462  FFFF               	dw	65535	; assembler added errata NOP
  1840                           
  1841                           ;main.c: 69:     init_PORTS();
  1842  001464  EC70  F031         	call	_init_PORTS	;wreg free
  1843  001468                     
  1844                           ;main.c: 70:     init_USART();
  1845  001468  ECDC  F031         	call	_init_USART	;wreg free
  1846  00146C                     
  1847                           ;main.c: 71:     init_timer_2();
  1848  00146C  EC8C  F036         	call	_init_timer_2	;wreg free
  1849  001470                     
  1850                           ;main.c: 72:     init_ccp1();
  1851  001470  EC0B  F031         	call	_init_ccp1	;wreg free
  1852  001474                     
  1853                           ;main.c: 73:     init_interrupts();
  1854  001474  ECA6  F030         	call	_init_interrupts	;wreg free
  1855  001478                     
  1856                           ;main.c: 75:     init_stepper(&joint_stepper, 0, 0, 1, hex_joint_values, &LATB);
  1857  001478  0ED9               	movlw	low _joint_stepper
  1858  00147A  6E01               	movwf	init_stepper@stepper_motor^0,c
  1859  00147C  0E01               	movlw	high _joint_stepper
  1860  00147E  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  1861  001480  0E00               	movlw	0
  1862  001482  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  1863  001484  0E00               	movlw	0
  1864  001486  6E03               	movwf	init_stepper@current_coil^0,c
  1865  001488  0E00               	movlw	0
  1866  00148A  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  1867  00148C  0E00               	movlw	0
  1868  00148E  6E05               	movwf	init_stepper@step_counter^0,c
  1869  001490  0E00               	movlw	0
  1870  001492  6E08               	movwf	(init_stepper@direction+1)^0,c
  1871  001494  0E01               	movlw	1
  1872  001496  6E07               	movwf	init_stepper@direction^0,c
  1873  001498  0EED               	movlw	low _hex_joint_values
  1874  00149A  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  1875  00149C  0E01               	movlw	high _hex_joint_values
  1876  00149E  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  1877  0014A0  0E8A               	movlw	138
  1878  0014A2  6E0B               	movwf	init_stepper@register_name^0,c
  1879  0014A4  0E0F               	movlw	15
  1880  0014A6  6E0C               	movwf	(init_stepper@register_name+1)^0,c
  1881  0014A8  ECD6  F035         	call	_init_stepper	;wreg free
  1882  0014AC                     
  1883                           ;main.c: 76:     init_stepper(&end_effector_stepper, 0, 0, 1, hex_end_effector_values, &
      +                          LATB);
  1884  0014AC  0ECD               	movlw	low _end_effector_stepper
  1885  0014AE  6E01               	movwf	init_stepper@stepper_motor^0,c
  1886  0014B0  0E01               	movlw	high _end_effector_stepper
  1887  0014B2  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  1888  0014B4  0E00               	movlw	0
  1889  0014B6  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  1890  0014B8  0E00               	movlw	0
  1891  0014BA  6E03               	movwf	init_stepper@current_coil^0,c
  1892  0014BC  0E00               	movlw	0
  1893  0014BE  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  1894  0014C0  0E00               	movlw	0
  1895  0014C2  6E05               	movwf	init_stepper@step_counter^0,c
  1896  0014C4  0E00               	movlw	0
  1897  0014C6  6E08               	movwf	(init_stepper@direction+1)^0,c
  1898  0014C8  0E01               	movlw	1
  1899  0014CA  6E07               	movwf	init_stepper@direction^0,c
  1900  0014CC  0EE9               	movlw	low _hex_end_effector_values
  1901  0014CE  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  1902  0014D0  0E01               	movlw	high _hex_end_effector_values
  1903  0014D2  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  1904  0014D4  0E8A               	movlw	138
  1905  0014D6  6E0B               	movwf	init_stepper@register_name^0,c
  1906  0014D8  0E0F               	movlw	15
  1907  0014DA  6E0C               	movwf	(init_stepper@register_name+1)^0,c
  1908  0014DC  ECD6  F035         	call	_init_stepper	;wreg free
  1909  0014E0                     
  1910                           ;main.c: 77:     init_stepper(&joint_dilutor_stepper, 0, 0, 1, hex_joint_values, &LATC);
  1911  0014E0  0EC1               	movlw	low _joint_dilutor_stepper
  1912  0014E2  6E01               	movwf	init_stepper@stepper_motor^0,c
  1913  0014E4  0E01               	movlw	high _joint_dilutor_stepper
  1914  0014E6  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  1915  0014E8  0E00               	movlw	0
  1916  0014EA  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  1917  0014EC  0E00               	movlw	0
  1918  0014EE  6E03               	movwf	init_stepper@current_coil^0,c
  1919  0014F0  0E00               	movlw	0
  1920  0014F2  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  1921  0014F4  0E00               	movlw	0
  1922  0014F6  6E05               	movwf	init_stepper@step_counter^0,c
  1923  0014F8  0E00               	movlw	0
  1924  0014FA  6E08               	movwf	(init_stepper@direction+1)^0,c
  1925  0014FC  0E01               	movlw	1
  1926  0014FE  6E07               	movwf	init_stepper@direction^0,c
  1927  001500  0EED               	movlw	low _hex_joint_values
  1928  001502  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  1929  001504  0E01               	movlw	high _hex_joint_values
  1930  001506  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  1931  001508  0E8B               	movlw	139
  1932  00150A  6E0B               	movwf	init_stepper@register_name^0,c
  1933  00150C  0E0F               	movlw	15
  1934  00150E  6E0C               	movwf	(init_stepper@register_name+1)^0,c
  1935  001510  ECD6  F035         	call	_init_stepper	;wreg free
  1936  001514                     
  1937                           ;main.c: 79:     lcd_init();
  1938  001514  ECCB  F034         	call	_lcd_init	;wreg free
  1939  001518                     
  1940                           ;main.c: 80:     lcd_cmd(0x0C);
  1941  001518  0E0C               	movlw	12
  1942  00151A  EC31  F031         	call	_lcd_cmd
  1943  00151E                     
  1944                           ;main.c: 82:     lcd_cmd(0x01);
  1945  00151E  0E01               	movlw	1
  1946  001520  EC31  F031         	call	_lcd_cmd
  1947  001524                     
  1948                           ;main.c: 83:     lcd_cmd(0x80);
  1949  001524  0E80               	movlw	128
  1950  001526  EC31  F031         	call	_lcd_cmd
  1951  00152A                     
  1952                           ;main.c: 84:     lcd_str("Device has been reset");
  1953  00152A  0E82               	movlw	low STR_9
  1954  00152C  6E03               	movwf	lcd_str@str^0,c
  1955  00152E  0E7F               	movlw	high STR_9
  1956  001530  6E04               	movwf	(lcd_str@str+1)^0,c
  1957  001532  EC4D  F035         	call	_lcd_str	;wreg free
  1958  001536                     
  1959                           ;main.c: 86:     (INTCONbits.GIE = 1);
  1960  001536  8EF2               	bsf	242,7,c	;volatile
  1961  001538                     
  1962                           ;main.c: 88:     mix_counter = 0;
  1963  001538  0E00               	movlw	0
  1964  00153A  0101               	movlb	1	; () banked
  1965  00153C  6FBC               	movwf	(_mix_counter+1)& (0+255),b
  1966  00153E  0E00               	movlw	0
  1967  001540  6FBB               	movwf	_mix_counter& (0+255),b
  1968  001542                     l5689:
  1969  001542  FFFF               	dw	65535	; assembler added errata NOP
  1970                           
  1971                           ; BSR set to: 1
  1972                           ;main.c: 91:         if (state_changed){
  1973  001544  51C0               	movf	_state_changed& (0+255),w,b
  1974  001546  B4D8               	btfsc	status,2,c
  1975  001548  EFA8  F00A         	goto	u6871
  1976  00154C  EFAB  F00A         	goto	u6870
  1977  001550                     u6871:
  1978  001550  FFFF               	dw	65535	; assembler added errata NOP
  1979  001552  EFFE  F00A         	goto	l5713
  1980  001556                     u6870:
  1981  001556  FFFF               	dw	65535	; assembler added errata NOP
  1982  001558                     
  1983                           ; BSR set to: 1
  1984                           ;main.c: 92:             const char* greet_str[80];;main.c: 93:             if (read_new
      +                          _char){
  1985  001558  51BE               	movf	_read_new_char& (0+255),w,b
  1986  00155A  B4D8               	btfsc	status,2,c
  1987  00155C  EFB2  F00A         	goto	u6881
  1988  001560  EFB5  F00A         	goto	u6880
  1989  001564                     u6881:
  1990  001564  FFFF               	dw	65535	; assembler added errata NOP
  1991  001566  EFEF  F00A         	goto	l5707
  1992  00156A                     u6880:
  1993  00156A  FFFF               	dw	65535	; assembler added errata NOP
  1994  00156C                     
  1995                           ; BSR set to: 1
  1996                           ;main.c: 94:                 rx_char = get_reg_value();
  1997  00156C  ECB2  F030         	call	_get_reg_value	;wreg free
  1998  001570  0101               	movlb	1	; () banked
  1999  001572  6FA6               	movwf	main@rx_char& (0+255),b
  2000  001574                     
  2001                           ; BSR set to: 1
  2002                           ;main.c: 97:                 state_translator_fpga_to_micro(rx_char, &state);
  2003  001574  0EE5               	movlw	low _state
  2004  001576  6E03               	movwf	state_translator_fpga_to_micro@state^0,c
  2005  001578  0E01               	movlw	high _state
  2006  00157A  6E04               	movwf	(state_translator_fpga_to_micro@state+1)^0,c
  2007  00157C  51A6               	movf	main@rx_char& (0+255),w,b
  2008  00157E  ECF1  F03B         	call	_state_translator_fpga_to_micro
  2009  001582                     
  2010                           ;main.c: 98:                 read_new_char = 0;
  2011  001582  0E00               	movlw	0
  2012  001584  0101               	movlb	1	; () banked
  2013  001586  6FBE               	movwf	_read_new_char& (0+255),b
  2014  001588                     
  2015                           ; BSR set to: 1
  2016                           ;main.c: 99:                 snprintf(greet_str, sizeof(greet_str), "%s", state_msgs[sta
      +                          te]);
  2017  001588  0E00               	movlw	low main@greet_str
  2018  00158A  0100               	movlb	0	; () banked
  2019  00158C  6FC2               	movwf	snprintf@s& (0+255),b
  2020  00158E  0E01               	movlw	high main@greet_str
  2021  001590  6FC3               	movwf	(snprintf@s+1)& (0+255),b
  2022  001592  0E00               	movlw	0
  2023  001594  6FC5               	movwf	(snprintf@n+1)& (0+255),b
  2024  001596  0EA0               	movlw	160
  2025  001598  6FC4               	movwf	snprintf@n& (0+255),b
  2026  00159A  0EFC               	movlw	low STR_10
  2027  00159C  6FC6               	movwf	snprintf@fmt& (0+255),b
  2028  00159E  0E7F               	movlw	high STR_10
  2029  0015A0  6FC7               	movwf	(snprintf@fmt+1)& (0+255),b
  2030  0015A2  90D8               	bcf	status,0,c
  2031  0015A4  0101               	movlb	1	; () banked
  2032  0015A6  35E5               	rlcf	_state& (0+255),w,b
  2033  0015A8  6ED9               	movwf	fsr2l,c
  2034  0015AA  35E6               	rlcf	(_state+1)& (0+255),w,b
  2035  0015AC  6EDA               	movwf	fsr2h,c
  2036  0015AE  0E00               	movlw	low _state_msgs
  2037  0015B0  26D9               	addwf	fsr2l,f,c
  2038  0015B2  0E02               	movlw	high _state_msgs
  2039  0015B4  22DA               	addwfc	fsr2h,f,c
  2040  0015B6  CFDE F0C8          	movff	postinc2,?_snprintf+6
  2041  0015BA  CFDD F0C9          	movff	postdec2,?_snprintf+7
  2042  0015BE  EC86  F031         	call	_snprintf	;wreg free
  2043  0015C2                     
  2044                           ;main.c: 100:                 lcd_cmd(0x01);
  2045  0015C2  0E01               	movlw	1
  2046  0015C4  EC31  F031         	call	_lcd_cmd
  2047  0015C8                     
  2048                           ;main.c: 101:                 lcd_cmd(0x80);
  2049  0015C8  0E80               	movlw	128
  2050  0015CA  EC31  F031         	call	_lcd_cmd
  2051  0015CE                     
  2052                           ;main.c: 102:                 lcd_str(greet_str);
  2053  0015CE  0E00               	movlw	low main@greet_str
  2054  0015D0  6E03               	movwf	lcd_str@str^0,c
  2055  0015D2  0E01               	movlw	high main@greet_str
  2056  0015D4  6E04               	movwf	(lcd_str@str+1)^0,c
  2057  0015D6  EC4D  F035         	call	_lcd_str	;wreg free
  2058                           
  2059                           ;main.c: 103:             } else {
  2060  0015DA  EFF8  F00A         	goto	l5709
  2061  0015DE                     l5707:
  2062  0015DE  FFFF               	dw	65535	; assembler added errata NOP
  2063                           
  2064                           ; BSR set to: 1
  2065                           ;main.c: 104:                 serial_tx_char(state_translator_micro_to_fpga(&state));
  2066  0015E0  0EE5               	movlw	low _state
  2067  0015E2  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  2068  0015E4  0E01               	movlw	high _state
  2069  0015E6  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  2070  0015E8  EC91  F035         	call	_state_translator_micro_to_fpga	;wreg free
  2071  0015EC  ECEA  F030         	call	_serial_tx_char
  2072  0015F0                     l5709:
  2073  0015F0  FFFF               	dw	65535	; assembler added errata NOP
  2074                           
  2075                           ;main.c: 107:             state_changed = 0;
  2076  0015F2  0E00               	movlw	0
  2077  0015F4  0101               	movlb	1	; () banked
  2078  0015F6  6FC0               	movwf	_state_changed& (0+255),b
  2079  0015F8                     
  2080                           ; BSR set to: 1
  2081                           ;main.c: 108:             idle_msg_sent = 0;
  2082  0015F8  0E00               	movlw	0
  2083  0015FA  6FBF               	movwf	_idle_msg_sent& (0+255),b
  2084  0015FC                     l5713:
  2085  0015FC  FFFF               	dw	65535	; assembler added errata NOP
  2086                           
  2087                           ; BSR set to: 1
  2088                           ;main.c: 111:         configure_ad_conversion_tank();
  2089  0015FE  ECDB  F030         	call	_configure_ad_conversion_tank	;wreg free
  2090  001602                     
  2091                           ;main.c: 113:         tank_error = 0;
  2092  001602  0E00               	movlw	0
  2093  001604  0101               	movlb	1	; () banked
  2094  001606  6FA8               	movwf	(_tank_error+1)& (0+255),b
  2095  001608  0E00               	movlw	0
  2096  00160A  6FA7               	movwf	_tank_error& (0+255),b
  2097  00160C                     
  2098                           ; BSR set to: 1
  2099                           ;main.c: 115:         if (get_liters() < 0.1){
  2100  00160C  ECB0  F033         	call	_get_liters	;wreg free
  2101  001610  0100               	movlb	0	; () banked
  2102  001612  C0BA  F1A2         	movff	?_get_liters,_main$2167
  2103  001616  C0BB  F1A3         	movff	?_get_liters+1,_main$2167+1
  2104  00161A  0101               	movlb	1	; () banked
  2105  00161C  0E00               	movlw	0
  2106  00161E  BFA3               	btfsc	(_main$2167+1)& (0+255),7,b
  2107  001620  0EFF               	movlw	-1
  2108  001622  6FA4               	movwf	(_main$2167+2)& (0+255),b
  2109  001624  6FA5               	movwf	(_main$2167+3)& (0+255),b
  2110  001626                     
  2111                           ; BSR set to: 1
  2112                           ;main.c: 115:         if (get_liters() < 0.1){
  2113  001626  C1A2  F01F         	movff	_main$2167,___xxtofl@val
  2114  00162A  C1A3  F020         	movff	_main$2167+1,___xxtofl@val+1
  2115  00162E  C1A4  F021         	movff	_main$2167+2,___xxtofl@val+2
  2116  001632  C1A5  F022         	movff	_main$2167+3,___xxtofl@val+3
  2117  001636  0E01               	movlw	1
  2118  001638  EC94  F01D         	call	___xxtofl
  2119  00163C  C01F  F0BC         	movff	?___xxtofl,___flge@ff1
  2120  001640  C020  F0BD         	movff	?___xxtofl+1,___flge@ff1+1
  2121  001644  C021  F0BE         	movff	?___xxtofl+2,___flge@ff1+2
  2122  001648  C022  F0BF         	movff	?___xxtofl+3,___flge@ff1+3
  2123  00164C  0ECD               	movlw	205
  2124  00164E  0100               	movlb	0	; () banked
  2125  001650  6FC0               	movwf	___flge@ff2& (0+255),b
  2126  001652  0ECC               	movlw	204
  2127  001654  6FC1               	movwf	(___flge@ff2+1)& (0+255),b
  2128  001656  0ECC               	movlw	204
  2129  001658  6FC2               	movwf	(___flge@ff2+2)& (0+255),b
  2130  00165A  0E3D               	movlw	61
  2131  00165C  6FC3               	movwf	(___flge@ff2+3)& (0+255),b
  2132  00165E  EC23  F03A         	call	___flge	;wreg free
  2133  001662  0100               	movlb	0	; () banked
  2134  001664  B0D8               	btfsc	status,0,c
  2135  001666  EF37  F00B         	goto	u6891
  2136  00166A  EF3A  F00B         	goto	u6890
  2137  00166E                     u6891:
  2138  00166E  FFFF               	dw	65535	; assembler added errata NOP
  2139  001670  EF54  F00B         	goto	l5731
  2140  001674                     u6890:
  2141  001674  FFFF               	dw	65535	; assembler added errata NOP
  2142  001676                     
  2143                           ; BSR set to: 0
  2144                           ;main.c: 116:             lcd_cmd(0x01);
  2145  001676  0E01               	movlw	1
  2146  001678  EC31  F031         	call	_lcd_cmd
  2147                           
  2148                           ;main.c: 117:             lcd_cmd(0x80);
  2149  00167C  0E80               	movlw	128
  2150  00167E  EC31  F031         	call	_lcd_cmd
  2151  001682                     
  2152                           ;main.c: 118:             lcd_str("Not enough diluting solution, please refill");
  2153  001682  0E0A               	movlw	low STR_11
  2154  001684  6E03               	movwf	lcd_str@str^0,c
  2155  001686  0E7F               	movlw	high STR_11
  2156  001688  6E04               	movwf	(lcd_str@str+1)^0,c
  2157  00168A  EC4D  F035         	call	_lcd_str	;wreg free
  2158  00168E                     
  2159                           ;main.c: 119:             state_before_error = state;
  2160  00168E  C1E5  F1E7         	movff	_state,_state_before_error
  2161  001692  C1E6  F1E8         	movff	_state+1,_state_before_error+1
  2162  001696                     
  2163                           ;main.c: 120:             state = 8;
  2164  001696  0E00               	movlw	0
  2165  001698  0101               	movlb	1	; () banked
  2166  00169A  6FE6               	movwf	(_state+1)& (0+255),b
  2167  00169C  0E08               	movlw	8
  2168  00169E  6FE5               	movwf	_state& (0+255),b
  2169  0016A0                     
  2170                           ; BSR set to: 1
  2171                           ;main.c: 121:             tank_error = 1;
  2172  0016A0  0E00               	movlw	0
  2173  0016A2  6FA8               	movwf	(_tank_error+1)& (0+255),b
  2174  0016A4  0E01               	movlw	1
  2175  0016A6  6FA7               	movwf	_tank_error& (0+255),b
  2176  0016A8                     l5731:
  2177  0016A8  FFFF               	dw	65535	; assembler added errata NOP
  2178                           
  2179                           ;main.c: 125:         if (state == 2){
  2180  0016AA  0E02               	movlw	2
  2181  0016AC  0101               	movlb	1	; () banked
  2182  0016AE  19E5               	xorwf	_state& (0+255),w,b
  2183  0016B0  11E6               	iorwf	(_state+1)& (0+255),w,b
  2184  0016B2  A4D8               	btfss	status,2,c
  2185  0016B4  EF5E  F00B         	goto	u6901
  2186  0016B8  EF61  F00B         	goto	u6900
  2187  0016BC                     u6901:
  2188  0016BC  FFFF               	dw	65535	; assembler added errata NOP
  2189  0016BE  EFB5  F00B         	goto	l162
  2190  0016C2                     u6900:
  2191  0016C2  FFFF               	dw	65535	; assembler added errata NOP
  2192  0016C4                     
  2193                           ; BSR set to: 1
  2194                           ;main.c: 126:             LATAbits.LATA1 = 1;
  2195  0016C4  8289               	bsf	137,1,c	;volatile
  2196  0016C6                     
  2197                           ; BSR set to: 1
  2198                           ;main.c: 127:             if (move_to_trash && trash_counter < 100){
  2199  0016C6  51B5               	movf	_move_to_trash& (0+255),w,b
  2200  0016C8  11B6               	iorwf	(_move_to_trash+1)& (0+255),w,b
  2201  0016CA  B4D8               	btfsc	status,2,c
  2202  0016CC  EF6A  F00B         	goto	u6911
  2203  0016D0  EF6D  F00B         	goto	u6910
  2204  0016D4                     u6911:
  2205  0016D4  FFFF               	dw	65535	; assembler added errata NOP
  2206  0016D6  EF8D  F00B         	goto	l5743
  2207  0016DA                     u6910:
  2208  0016DA  FFFF               	dw	65535	; assembler added errata NOP
  2209  0016DC                     
  2210                           ; BSR set to: 1
  2211  0016DC  BFB8               	btfsc	(_trash_counter+1)& (0+255),7,b
  2212  0016DE  EF7D  F00B         	goto	u6920
  2213  0016E2  51B8               	movf	(_trash_counter+1)& (0+255),w,b
  2214  0016E4  E107               	bnz	u6921
  2215  0016E6  0E64               	movlw	100
  2216  0016E8  5DB7               	subwf	_trash_counter& (0+255),w,b
  2217  0016EA  B0D8               	btfsc	status,0,c
  2218  0016EC  EF7A  F00B         	goto	u6921
  2219  0016F0  EF7D  F00B         	goto	u6920
  2220  0016F4                     u6921:
  2221  0016F4  FFFF               	dw	65535	; assembler added errata NOP
  2222  0016F6  EF8D  F00B         	goto	l5743
  2223  0016FA                     u6920:
  2224  0016FA  FFFF               	dw	65535	; assembler added errata NOP
  2225  0016FC                     
  2226                           ; BSR set to: 1
  2227                           ;main.c: 128:                 _delay((unsigned long)((10)*(4000000/4000.0)));
  2228  0016FC  0E0A               	movlw	10
  2229  0016FE  0100               	movlb	0	; () banked
  2230  001700  6FE2               	movwf	??_main& (0+255),b
  2231  001702  0EBE               	movlw	190
  2232  001704                     u7377:
  2233  001704  FFFF               	dw	65535	; errata NOP
  2234  001706  2EE8               	decfsz	wreg,f,c
  2235  001708  D7FD               	bra	u7377
  2236  00170A  2FE2               	decfsz	??_main& (0+255),f,b
  2237  00170C  D7FB               	bra	u7377
  2238  00170E  F000               	nop	
  2239  001710                     
  2240                           ;main.c: 129:                 trash_counter++;
  2241  001710  0101               	movlb	1	; () banked
  2242  001712  4BB7               	infsnz	_trash_counter& (0+255),f,b
  2243  001714  2BB8               	incf	(_trash_counter+1)& (0+255),f,b
  2244                           
  2245                           ;main.c: 130:             } else if (move_to_trash && trash_counter >= 100){
  2246  001716  EFA1  F00A         	goto	l5689
  2247  00171A                     l5743:
  2248  00171A  FFFF               	dw	65535	; assembler added errata NOP
  2249                           
  2250                           ; BSR set to: 1
  2251  00171C  51B5               	movf	_move_to_trash& (0+255),w,b
  2252  00171E  11B6               	iorwf	(_move_to_trash+1)& (0+255),w,b
  2253  001720  B4D8               	btfsc	status,2,c
  2254  001722  EF95  F00B         	goto	u6931
  2255  001726  EF98  F00B         	goto	u6930
  2256  00172A                     u6931:
  2257  00172A  FFFF               	dw	65535	; assembler added errata NOP
  2258  00172C  EFFC  F00E         	goto	l166
  2259  001730                     u6930:
  2260  001730  FFFF               	dw	65535	; assembler added errata NOP
  2261  001732                     
  2262                           ; BSR set to: 1
  2263  001732  BFB8               	btfsc	(_trash_counter+1)& (0+255),7,b
  2264  001734  EFA5  F00B         	goto	u6941
  2265  001738  51B8               	movf	(_trash_counter+1)& (0+255),w,b
  2266  00173A  E10A               	bnz	u6940
  2267  00173C  0E64               	movlw	100
  2268  00173E  5DB7               	subwf	_trash_counter& (0+255),w,b
  2269  001740  A0D8               	btfss	status,0,c
  2270  001742  EFA5  F00B         	goto	u6941
  2271  001746  EFA8  F00B         	goto	u6940
  2272  00174A                     u6941:
  2273  00174A  FFFF               	dw	65535	; assembler added errata NOP
  2274  00174C  EFFC  F00E         	goto	l166
  2275  001750                     u6940:
  2276  001750  FFFF               	dw	65535	; assembler added errata NOP
  2277  001752                     
  2278                           ; BSR set to: 1
  2279                           ;main.c: 131:                 move_to_trash = 0;
  2280  001752  0E00               	movlw	0
  2281  001754  6FB6               	movwf	(_move_to_trash+1)& (0+255),b
  2282  001756  0E00               	movlw	0
  2283  001758  6FB5               	movwf	_move_to_trash& (0+255),b
  2284                           
  2285                           ;main.c: 132:                 state = 0;
  2286  00175A  0E00               	movlw	0
  2287  00175C  6FE6               	movwf	(_state+1)& (0+255),b
  2288  00175E  0E00               	movlw	0
  2289  001760  6FE5               	movwf	_state& (0+255),b
  2290                           
  2291                           ;main.c: 133:                 state_changed = 1;
  2292  001762  0E01               	movlw	1
  2293  001764  6FC0               	movwf	_state_changed& (0+255),b
  2294  001766  EFA1  F00A         	goto	l5689
  2295  00176A                     l162:
  2296  00176A  FFFF               	dw	65535	; assembler added errata NOP
  2297                           
  2298                           ; BSR set to: 1
  2299                           ;main.c: 136:             LATAbits.LATA1 = 0;
  2300  00176C  9289               	bcf	137,1,c	;volatile
  2301  00176E                     
  2302                           ; BSR set to: 1
  2303                           ;main.c: 137:             if (state == 0) {
  2304  00176E  51E5               	movf	_state& (0+255),w,b
  2305  001770  11E6               	iorwf	(_state+1)& (0+255),w,b
  2306  001772  A4D8               	btfss	status,2,c
  2307  001774  EFBE  F00B         	goto	u6951
  2308  001778  EFC1  F00B         	goto	u6950
  2309  00177C                     u6951:
  2310  00177C  FFFF               	dw	65535	; assembler added errata NOP
  2311  00177E  EFC7  F00B         	goto	l5753
  2312  001782                     u6950:
  2313  001782  FFFF               	dw	65535	; assembler added errata NOP
  2314  001784  EFDD  F00E         	goto	l5897
  2315  001788                     l5751:
  2316  001788  FFFF               	dw	65535	; assembler added errata NOP
  2317                           
  2318                           ;main.c: 139:             } else if (state == 1){
  2319  00178A  EFDD  F00E         	goto	l5897
  2320  00178E                     l5753:
  2321  00178E  FFFF               	dw	65535	; assembler added errata NOP
  2322                           
  2323                           ; BSR set to: 1
  2324  001790  05E5               	decf	_state& (0+255),w,b
  2325  001792  11E6               	iorwf	(_state+1)& (0+255),w,b
  2326  001794  A4D8               	btfss	status,2,c
  2327  001796  EFCF  F00B         	goto	u6961
  2328  00179A  EFD2  F00B         	goto	u6960
  2329  00179E                     u6961:
  2330  00179E  FFFF               	dw	65535	; assembler added errata NOP
  2331  0017A0  EFDD  F00B         	goto	l5757
  2332  0017A4                     u6960:
  2333  0017A4  FFFF               	dw	65535	; assembler added errata NOP
  2334  0017A6                     l5755:
  2335  0017A6  FFFF               	dw	65535	; assembler added errata NOP
  2336                           
  2337                           ;main.c: 140:                 state = 2;
  2338  0017A8  0E00               	movlw	0
  2339  0017AA  0101               	movlb	1	; () banked
  2340  0017AC  6FE6               	movwf	(_state+1)& (0+255),b
  2341  0017AE  0E02               	movlw	2
  2342  0017B0  6FE5               	movwf	_state& (0+255),b
  2343                           
  2344                           ;main.c: 141:                 state_changed = 1;
  2345  0017B2  0E01               	movlw	1
  2346  0017B4  6FC0               	movwf	_state_changed& (0+255),b
  2347                           
  2348                           ;main.c: 142:             } else if (state == 3){
  2349  0017B6  EFDD  F00E         	goto	l5897
  2350  0017BA                     l5757:
  2351  0017BA  FFFF               	dw	65535	; assembler added errata NOP
  2352                           
  2353                           ; BSR set to: 1
  2354  0017BC  0E03               	movlw	3
  2355  0017BE  19E5               	xorwf	_state& (0+255),w,b
  2356  0017C0  11E6               	iorwf	(_state+1)& (0+255),w,b
  2357  0017C2  A4D8               	btfss	status,2,c
  2358  0017C4  EFE6  F00B         	goto	u6971
  2359  0017C8  EFE9  F00B         	goto	u6970
  2360  0017CC                     u6971:
  2361  0017CC  FFFF               	dw	65535	; assembler added errata NOP
  2362  0017CE  EFF2  F00B         	goto	l5761
  2363  0017D2                     u6970:
  2364  0017D2  FFFF               	dw	65535	; assembler added errata NOP
  2365  0017D4                     
  2366                           ; BSR set to: 1
  2367                           ;main.c: 143:                 state = 9;
  2368  0017D4  0E00               	movlw	0
  2369  0017D6  6FE6               	movwf	(_state+1)& (0+255),b
  2370  0017D8  0E09               	movlw	9
  2371  0017DA  6FE5               	movwf	_state& (0+255),b
  2372                           
  2373                           ;main.c: 144:                 state_changed = 1;
  2374  0017DC  0E01               	movlw	1
  2375  0017DE  6FC0               	movwf	_state_changed& (0+255),b
  2376                           
  2377                           ;main.c: 145:             } else if (state == 9){
  2378  0017E0  EFDD  F00E         	goto	l5897
  2379  0017E4                     l5761:
  2380  0017E4  FFFF               	dw	65535	; assembler added errata NOP
  2381                           
  2382                           ; BSR set to: 1
  2383  0017E6  0E09               	movlw	9
  2384  0017E8  19E5               	xorwf	_state& (0+255),w,b
  2385  0017EA  11E6               	iorwf	(_state+1)& (0+255),w,b
  2386  0017EC  A4D8               	btfss	status,2,c
  2387  0017EE  EFFB  F00B         	goto	u6981
  2388  0017F2  EFFE  F00B         	goto	u6980
  2389  0017F6                     u6981:
  2390  0017F6  FFFF               	dw	65535	; assembler added errata NOP
  2391  0017F8  EF41  F00C         	goto	l5775
  2392  0017FC                     u6980:
  2393  0017FC  FFFF               	dw	65535	; assembler added errata NOP
  2394  0017FE                     
  2395                           ; BSR set to: 1
  2396                           ;main.c: 146:                 if (timer_done){
  2397  0017FE  51BD               	movf	_timer_done& (0+255),w,b
  2398  001800  B4D8               	btfsc	status,2,c
  2399  001802  EF05  F00C         	goto	u6991
  2400  001806  EF08  F00C         	goto	u6990
  2401  00180A                     u6991:
  2402  00180A  FFFF               	dw	65535	; assembler added errata NOP
  2403  00180C  EF28  F00C         	goto	l174
  2404  001810                     u6990:
  2405  001810  FFFF               	dw	65535	; assembler added errata NOP
  2406  001812                     
  2407                           ; BSR set to: 1
  2408                           ;main.c: 147:                     if(check_temperature(get_temperature())){
  2409  001812  EC56  F034         	call	_get_temperature	;wreg free
  2410  001816  C0BA  F0C8         	movff	?_get_temperature,check_temperature@temp_to_be_checked
  2411  00181A  C0BB  F0C9         	movff	?_get_temperature+1,check_temperature@temp_to_be_checked+1
  2412  00181E  EC5F  F037         	call	_check_temperature	;wreg free
  2413  001822  0100               	movlb	0	; () banked
  2414  001824  51C8               	movf	?_check_temperature& (0+255),w,b
  2415  001826  11C9               	iorwf	(?_check_temperature+1)& (0+255),w,b
  2416  001828  B4D8               	btfsc	status,2,c
  2417  00182A  EF19  F00C         	goto	u7001
  2418  00182E  EF1C  F00C         	goto	u7000
  2419  001832                     u7001:
  2420  001832  FFFF               	dw	65535	; assembler added errata NOP
  2421  001834  EFC4  F00B         	goto	l5751
  2422  001838                     u7000:
  2423  001838  FFFF               	dw	65535	; assembler added errata NOP
  2424  00183A                     
  2425                           ; BSR set to: 0
  2426                           ;main.c: 148:                         state = 2;
  2427  00183A  0E00               	movlw	0
  2428  00183C  0101               	movlb	1	; () banked
  2429  00183E  6FE6               	movwf	(_state+1)& (0+255),b
  2430  001840  0E02               	movlw	2
  2431  001842  6FE5               	movwf	_state& (0+255),b
  2432                           
  2433                           ;main.c: 149:                         state_changed = 1;
  2434  001844  0E01               	movlw	1
  2435  001846  6FC0               	movwf	_state_changed& (0+255),b
  2436                           
  2437                           ;main.c: 150:                         timer_done = 0;
  2438  001848  0E00               	movlw	0
  2439  00184A  6FBD               	movwf	_timer_done& (0+255),b
  2440                           
  2441                           ;main.c: 151:                     } else{
  2442  00184C  EFDD  F00E         	goto	l5897
  2443  001850                     l174:
  2444  001850  FFFF               	dw	65535	; assembler added errata NOP
  2445                           
  2446                           ; BSR set to: 1
  2447                           ;main.c: 156:                     if (T0CONbits.TMR0ON == 0){
  2448  001852  BED5               	btfsc	213,7,c	;volatile
  2449  001854  EF2E  F00C         	goto	u7011
  2450  001858  EF31  F00C         	goto	u7010
  2451  00185C                     u7011:
  2452  00185C  FFFF               	dw	65535	; assembler added errata NOP
  2453  00185E  EF38  F00C         	goto	l178
  2454  001862                     u7010:
  2455  001862  FFFF               	dw	65535	; assembler added errata NOP
  2456  001864                     
  2457                           ; BSR set to: 1
  2458                           ;main.c: 157:                         configure_ad_conversion_oven();
  2459  001864  ECCC  F030         	call	_configure_ad_conversion_oven	;wreg free
  2460  001868                     
  2461                           ;main.c: 158:                         wait_for_zero();
  2462  001868  EC1D  F031         	call	_wait_for_zero	;wreg free
  2463  00186C                     
  2464                           ;main.c: 159:                         init_timer_0();
  2465  00186C  ECFA  F030         	call	_init_timer_0	;wreg free
  2466  001870                     l178:
  2467  001870  FFFF               	dw	65535	; assembler added errata NOP
  2468                           
  2469                           ;main.c: 161:                     int current_temp = get_temperature();
  2470  001872  EC56  F034         	call	_get_temperature	;wreg free
  2471  001876  C0BA  F1A0         	movff	?_get_temperature,main@current_temp
  2472  00187A  C0BB  F1A1         	movff	?_get_temperature+1,main@current_temp+1
  2473  00187E  EFDD  F00E         	goto	l5897
  2474  001882                     l5775:
  2475  001882  FFFF               	dw	65535	; assembler added errata NOP
  2476                           
  2477                           ; BSR set to: 1
  2478  001884  0E04               	movlw	4
  2479  001886  19E5               	xorwf	_state& (0+255),w,b
  2480  001888  11E6               	iorwf	(_state+1)& (0+255),w,b
  2481  00188A  A4D8               	btfss	status,2,c
  2482  00188C  EF4A  F00C         	goto	u7021
  2483  001890  EF4D  F00C         	goto	u7020
  2484  001894                     u7021:
  2485  001894  FFFF               	dw	65535	; assembler added errata NOP
  2486  001896  EF56  F00C         	goto	l5779
  2487  00189A                     u7020:
  2488  00189A  FFFF               	dw	65535	; assembler added errata NOP
  2489  00189C                     
  2490                           ; BSR set to: 1
  2491                           ;main.c: 165:                 state = 10;
  2492  00189C  0E00               	movlw	0
  2493  00189E  6FE6               	movwf	(_state+1)& (0+255),b
  2494  0018A0  0E0A               	movlw	10
  2495  0018A2  6FE5               	movwf	_state& (0+255),b
  2496                           
  2497                           ;main.c: 166:                 state_changed = 1;
  2498  0018A4  0E01               	movlw	1
  2499  0018A6  6FC0               	movwf	_state_changed& (0+255),b
  2500                           
  2501                           ;main.c: 167:             }else if (state == 10){
  2502  0018A8  EFDD  F00E         	goto	l5897
  2503  0018AC                     l5779:
  2504  0018AC  FFFF               	dw	65535	; assembler added errata NOP
  2505                           
  2506                           ; BSR set to: 1
  2507  0018AE  0E0A               	movlw	10
  2508  0018B0  19E5               	xorwf	_state& (0+255),w,b
  2509  0018B2  11E6               	iorwf	(_state+1)& (0+255),w,b
  2510  0018B4  A4D8               	btfss	status,2,c
  2511  0018B6  EF5F  F00C         	goto	u7031
  2512  0018BA  EF62  F00C         	goto	u7030
  2513  0018BE                     u7031:
  2514  0018BE  FFFF               	dw	65535	; assembler added errata NOP
  2515  0018C0  EFCD  F00C         	goto	l5797
  2516  0018C4                     u7030:
  2517  0018C4  FFFF               	dw	65535	; assembler added errata NOP
  2518  0018C6                     
  2519                           ; BSR set to: 1
  2520                           ;main.c: 168:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2521  0018C6  0E03               	movlw	3
  2522  0018C8  0100               	movlb	0	; () banked
  2523  0018CA  6FE2               	movwf	??_main& (0+255),b
  2524  0018CC  0EEB               	movlw	235
  2525  0018CE                     u7387:
  2526  0018CE  FFFF               	dw	65535	; errata NOP
  2527  0018D0  2EE8               	decfsz	wreg,f,c
  2528  0018D2  D7FD               	bra	u7387
  2529  0018D4  2FE2               	decfsz	??_main& (0+255),f,b
  2530  0018D6  D7FB               	bra	u7387
  2531  0018D8  D000               	nop2	
  2532  0018DA  F000               	nop	
  2533  0018DC                     
  2534                           ;main.c: 169:                 if (!grasping_joint_position_reached){
  2535  0018DC  0101               	movlb	1	; () banked
  2536  0018DE  51B3               	movf	_grasping_joint_position_reached& (0+255),w,b
  2537  0018E0  11B4               	iorwf	(_grasping_joint_position_reached+1)& (0+255),w,b
  2538  0018E2  A4D8               	btfss	status,2,c
  2539  0018E4  EF76  F00C         	goto	u7041
  2540  0018E8  EF79  F00C         	goto	u7040
  2541  0018EC                     u7041:
  2542  0018EC  FFFF               	dw	65535	; assembler added errata NOP
  2543  0018EE  EF88  F00C         	goto	l5787
  2544  0018F2                     u7040:
  2545  0018F2  FFFF               	dw	65535	; assembler added errata NOP
  2546  0018F4                     
  2547                           ; BSR set to: 1
  2548                           ;main.c: 170:                     grasping_joint_position_reached = reach_goal(&joint_st
      +                          epper, 50);
  2549  0018F4  0ED9               	movlw	low _joint_stepper
  2550  0018F6  6E09               	movwf	reach_goal@stepper_motor^0,c
  2551  0018F8  0E01               	movlw	high _joint_stepper
  2552  0018FA  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2553  0018FC  0E00               	movlw	0
  2554  0018FE  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2555  001900  0E32               	movlw	50
  2556  001902  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2557  001904  EC8F  F034         	call	_reach_goal	;wreg free
  2558  001908  C009  F1B3         	movff	?_reach_goal,_grasping_joint_position_reached
  2559  00190C  C00A  F1B4         	movff	?_reach_goal+1,_grasping_joint_position_reached+1
  2560  001910                     l5787:
  2561  001910  FFFF               	dw	65535	; assembler added errata NOP
  2562                           
  2563                           ;main.c: 173:                 if (grasping_joint_position_reached && !grasping_ee_positi
      +                          on_reached){
  2564  001912  0101               	movlb	1	; () banked
  2565  001914  51B3               	movf	_grasping_joint_position_reached& (0+255),w,b
  2566  001916  11B4               	iorwf	(_grasping_joint_position_reached+1)& (0+255),w,b
  2567  001918  B4D8               	btfsc	status,2,c
  2568  00191A  EF91  F00C         	goto	u7051
  2569  00191E  EF94  F00C         	goto	u7050
  2570  001922                     u7051:
  2571  001922  FFFF               	dw	65535	; assembler added errata NOP
  2572  001924  EFAE  F00C         	goto	l5793
  2573  001928                     u7050:
  2574  001928  FFFF               	dw	65535	; assembler added errata NOP
  2575  00192A                     
  2576                           ; BSR set to: 1
  2577  00192A  51B1               	movf	_grasping_ee_position_reached& (0+255),w,b
  2578  00192C  11B2               	iorwf	(_grasping_ee_position_reached+1)& (0+255),w,b
  2579  00192E  A4D8               	btfss	status,2,c
  2580  001930  EF9C  F00C         	goto	u7061
  2581  001934  EF9F  F00C         	goto	u7060
  2582  001938                     u7061:
  2583  001938  FFFF               	dw	65535	; assembler added errata NOP
  2584  00193A  EFAE  F00C         	goto	l5793
  2585  00193E                     u7060:
  2586  00193E  FFFF               	dw	65535	; assembler added errata NOP
  2587  001940                     
  2588                           ; BSR set to: 1
  2589                           ;main.c: 174:                     grasping_ee_position_reached = reach_goal(&end_effecto
      +                          r_stepper, 100);
  2590  001940  0ECD               	movlw	low _end_effector_stepper
  2591  001942  6E09               	movwf	reach_goal@stepper_motor^0,c
  2592  001944  0E01               	movlw	high _end_effector_stepper
  2593  001946  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2594  001948  0E00               	movlw	0
  2595  00194A  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2596  00194C  0E64               	movlw	100
  2597  00194E  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2598  001950  EC8F  F034         	call	_reach_goal	;wreg free
  2599  001954  C009  F1B1         	movff	?_reach_goal,_grasping_ee_position_reached
  2600  001958  C00A  F1B2         	movff	?_reach_goal+1,_grasping_ee_position_reached+1
  2601  00195C                     l5793:
  2602  00195C  FFFF               	dw	65535	; assembler added errata NOP
  2603                           
  2604                           ;main.c: 176:                 if (grasping_joint_position_reached * grasping_ee_position
      +                          _reached){
  2605  00195E  C1B3  F001         	movff	_grasping_joint_position_reached,___wmul@multiplier
  2606  001962  C1B4  F002         	movff	_grasping_joint_position_reached+1,___wmul@multiplier+1
  2607  001966  C1B1  F003         	movff	_grasping_ee_position_reached,___wmul@multiplicand
  2608  00196A  C1B2  F004         	movff	_grasping_ee_position_reached+1,___wmul@multiplicand+1
  2609  00196E  EC5B  F031         	call	___wmul	;wreg free
  2610  001972  5001               	movf	?___wmul^0,w,c
  2611  001974  1002               	iorwf	(?___wmul+1)^0,w,c
  2612  001976  B4D8               	btfsc	status,2,c
  2613  001978  EFC0  F00C         	goto	u7071
  2614  00197C  EFC3  F00C         	goto	u7070
  2615  001980                     u7071:
  2616  001980  FFFF               	dw	65535	; assembler added errata NOP
  2617  001982  EFDD  F00E         	goto	l5897
  2618  001986                     u7070:
  2619  001986  FFFF               	dw	65535	; assembler added errata NOP
  2620  001988                     
  2621                           ;main.c: 177:                     state = 5;
  2622  001988  0E00               	movlw	0
  2623  00198A  0101               	movlb	1	; () banked
  2624  00198C  6FE6               	movwf	(_state+1)& (0+255),b
  2625  00198E  0E05               	movlw	5
  2626  001990  6FE5               	movwf	_state& (0+255),b
  2627                           
  2628                           ;main.c: 178:                     state_changed = 1;
  2629  001992  0E01               	movlw	1
  2630  001994  6FC0               	movwf	_state_changed& (0+255),b
  2631  001996  EFDD  F00E         	goto	l5897
  2632  00199A                     l5797:
  2633  00199A  FFFF               	dw	65535	; assembler added errata NOP
  2634                           
  2635                           ; BSR set to: 1
  2636  00199C  0E05               	movlw	5
  2637  00199E  19E5               	xorwf	_state& (0+255),w,b
  2638  0019A0  11E6               	iorwf	(_state+1)& (0+255),w,b
  2639  0019A2  A4D8               	btfss	status,2,c
  2640  0019A4  EFD6  F00C         	goto	u7081
  2641  0019A8  EFD9  F00C         	goto	u7080
  2642  0019AC                     u7081:
  2643  0019AC  FFFF               	dw	65535	; assembler added errata NOP
  2644  0019AE  EF49  F00D         	goto	l5821
  2645  0019B2                     u7080:
  2646  0019B2  FFFF               	dw	65535	; assembler added errata NOP
  2647  0019B4                     
  2648                           ; BSR set to: 1
  2649                           ;main.c: 181:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2650  0019B4  0E03               	movlw	3
  2651  0019B6  0100               	movlb	0	; () banked
  2652  0019B8  6FE2               	movwf	??_main& (0+255),b
  2653  0019BA  0EEB               	movlw	235
  2654  0019BC                     u7397:
  2655  0019BC  FFFF               	dw	65535	; errata NOP
  2656  0019BE  2EE8               	decfsz	wreg,f,c
  2657  0019C0  D7FD               	bra	u7397
  2658  0019C2  2FE2               	decfsz	??_main& (0+255),f,b
  2659  0019C4  D7FB               	bra	u7397
  2660  0019C6  D000               	nop2	
  2661  0019C8  F000               	nop	
  2662  0019CA                     
  2663                           ;main.c: 182:                 if (reach_goal(&joint_stepper, 100)) {
  2664  0019CA  0ED9               	movlw	low _joint_stepper
  2665  0019CC  6E09               	movwf	reach_goal@stepper_motor^0,c
  2666  0019CE  0E01               	movlw	high _joint_stepper
  2667  0019D0  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2668  0019D2  0E00               	movlw	0
  2669  0019D4  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2670  0019D6  0E64               	movlw	100
  2671  0019D8  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2672  0019DA  EC8F  F034         	call	_reach_goal	;wreg free
  2673  0019DE  5009               	movf	?_reach_goal^0,w,c
  2674  0019E0  100A               	iorwf	(?_reach_goal+1)^0,w,c
  2675  0019E2  B4D8               	btfsc	status,2,c
  2676  0019E4  EFF6  F00C         	goto	u7091
  2677  0019E8  EFF9  F00C         	goto	u7090
  2678  0019EC                     u7091:
  2679  0019EC  FFFF               	dw	65535	; assembler added errata NOP
  2680  0019EE  EF03  F00D         	goto	l5807
  2681  0019F2                     u7090:
  2682  0019F2  FFFF               	dw	65535	; assembler added errata NOP
  2683  0019F4                     
  2684                           ;main.c: 183:                     change_direction(&joint_stepper);
  2685  0019F4  0ED9               	movlw	low _joint_stepper
  2686  0019F6  6E01               	movwf	change_direction@stepper_motor^0,c
  2687  0019F8  0E01               	movlw	high _joint_stepper
  2688  0019FA  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2689  0019FC  ECA0  F031         	call	_change_direction	;wreg free
  2690  001A00                     
  2691                           ;main.c: 184:                     mix_counter++;
  2692  001A00  0101               	movlb	1	; () banked
  2693  001A02  4BBB               	infsnz	_mix_counter& (0+255),f,b
  2694  001A04  2BBC               	incf	(_mix_counter+1)& (0+255),f,b
  2695  001A06                     l5807:
  2696  001A06  FFFF               	dw	65535	; assembler added errata NOP
  2697                           
  2698                           ;main.c: 187:                 if (mix_counter == 20 && !dilution_done){
  2699  001A08  0E14               	movlw	20
  2700  001A0A  0101               	movlb	1	; () banked
  2701  001A0C  19BB               	xorwf	_mix_counter& (0+255),w,b
  2702  001A0E  11BC               	iorwf	(_mix_counter+1)& (0+255),w,b
  2703  001A10  A4D8               	btfss	status,2,c
  2704  001A12  EF0D  F00D         	goto	u7101
  2705  001A16  EF10  F00D         	goto	u7100
  2706  001A1A                     u7101:
  2707  001A1A  FFFF               	dw	65535	; assembler added errata NOP
  2708  001A1C  EF22  F00D         	goto	l5813
  2709  001A20                     u7100:
  2710  001A20  FFFF               	dw	65535	; assembler added errata NOP
  2711  001A22                     
  2712                           ; BSR set to: 1
  2713  001A22  51B9               	movf	_dilution_done& (0+255),w,b
  2714  001A24  11BA               	iorwf	(_dilution_done+1)& (0+255),w,b
  2715  001A26  A4D8               	btfss	status,2,c
  2716  001A28  EF18  F00D         	goto	u7111
  2717  001A2C  EF1B  F00D         	goto	u7110
  2718  001A30                     u7111:
  2719  001A30  FFFF               	dw	65535	; assembler added errata NOP
  2720  001A32  EF22  F00D         	goto	l5813
  2721  001A36                     u7110:
  2722  001A36  FFFF               	dw	65535	; assembler added errata NOP
  2723  001A38                     
  2724                           ; BSR set to: 1
  2725                           ;main.c: 188:                     state = 15;
  2726  001A38  0E00               	movlw	0
  2727  001A3A  6FE6               	movwf	(_state+1)& (0+255),b
  2728  001A3C  0E0F               	movlw	15
  2729  001A3E  6FE5               	movwf	_state& (0+255),b
  2730                           
  2731                           ;main.c: 189:                 } else if (mix_counter == 40) {
  2732  001A40  EFDD  F00E         	goto	l5897
  2733  001A44                     l5813:
  2734  001A44  FFFF               	dw	65535	; assembler added errata NOP
  2735                           
  2736                           ; BSR set to: 1
  2737  001A46  0E28               	movlw	40
  2738  001A48  19BB               	xorwf	_mix_counter& (0+255),w,b
  2739  001A4A  11BC               	iorwf	(_mix_counter+1)& (0+255),w,b
  2740  001A4C  A4D8               	btfss	status,2,c
  2741  001A4E  EF2B  F00D         	goto	u7121
  2742  001A52  EF2E  F00D         	goto	u7120
  2743  001A56                     u7121:
  2744  001A56  FFFF               	dw	65535	; assembler added errata NOP
  2745  001A58  EFC4  F00B         	goto	l5751
  2746  001A5C                     u7120:
  2747  001A5C  FFFF               	dw	65535	; assembler added errata NOP
  2748  001A5E                     
  2749                           ; BSR set to: 1
  2750                           ;main.c: 190:                     dilution_done = 0;
  2751  001A5E  0E00               	movlw	0
  2752  001A60  6FBA               	movwf	(_dilution_done+1)& (0+255),b
  2753  001A62  0E00               	movlw	0
  2754  001A64  6FB9               	movwf	_dilution_done& (0+255),b
  2755                           
  2756                           ;main.c: 191:                     state = 6;
  2757  001A66  0E00               	movlw	0
  2758  001A68  6FE6               	movwf	(_state+1)& (0+255),b
  2759  001A6A  0E06               	movlw	6
  2760  001A6C  6FE5               	movwf	_state& (0+255),b
  2761                           
  2762                           ;main.c: 192:                     mix_counter = 0;
  2763  001A6E  0E00               	movlw	0
  2764  001A70  6FBC               	movwf	(_mix_counter+1)& (0+255),b
  2765  001A72  0E00               	movlw	0
  2766  001A74  6FBB               	movwf	_mix_counter& (0+255),b
  2767  001A76                     
  2768                           ; BSR set to: 1
  2769                           ;main.c: 194:                     change_direction(&joint_stepper);
  2770  001A76  0ED9               	movlw	low _joint_stepper
  2771  001A78  6E01               	movwf	change_direction@stepper_motor^0,c
  2772  001A7A  0E01               	movlw	high _joint_stepper
  2773  001A7C  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2774  001A7E  ECA0  F031         	call	_change_direction	;wreg free
  2775  001A82                     
  2776                           ;main.c: 195:                     change_direction(&end_effector_stepper);
  2777  001A82  0ECD               	movlw	low _end_effector_stepper
  2778  001A84  6E01               	movwf	change_direction@stepper_motor^0,c
  2779  001A86  0E01               	movlw	high _end_effector_stepper
  2780  001A88  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2781  001A8A  ECA0  F031         	call	_change_direction	;wreg free
  2782  001A8E  EFDD  F00E         	goto	l5897
  2783  001A92                     l5821:
  2784  001A92  FFFF               	dw	65535	; assembler added errata NOP
  2785                           
  2786                           ; BSR set to: 1
  2787  001A94  0E06               	movlw	6
  2788  001A96  19E5               	xorwf	_state& (0+255),w,b
  2789  001A98  11E6               	iorwf	(_state+1)& (0+255),w,b
  2790  001A9A  A4D8               	btfss	status,2,c
  2791  001A9C  EF52  F00D         	goto	u7131
  2792  001AA0  EF55  F00D         	goto	u7130
  2793  001AA4                     u7131:
  2794  001AA4  FFFF               	dw	65535	; assembler added errata NOP
  2795  001AA6  EFB9  F00D         	goto	l5839
  2796  001AAA                     u7130:
  2797  001AAA  FFFF               	dw	65535	; assembler added errata NOP
  2798  001AAC                     
  2799                           ; BSR set to: 1
  2800                           ;main.c: 198:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2801  001AAC  0E03               	movlw	3
  2802  001AAE  0100               	movlb	0	; () banked
  2803  001AB0  6FE2               	movwf	??_main& (0+255),b
  2804  001AB2  0EEB               	movlw	235
  2805  001AB4                     u7407:
  2806  001AB4  FFFF               	dw	65535	; errata NOP
  2807  001AB6  2EE8               	decfsz	wreg,f,c
  2808  001AB8  D7FD               	bra	u7407
  2809  001ABA  2FE2               	decfsz	??_main& (0+255),f,b
  2810  001ABC  D7FB               	bra	u7407
  2811  001ABE  D000               	nop2	
  2812  001AC0  F000               	nop	
  2813  001AC2                     
  2814                           ;main.c: 200:                 if (!end_effector_homed){
  2815  001AC2  0101               	movlb	1	; () banked
  2816  001AC4  51AB               	movf	_end_effector_homed& (0+255),w,b
  2817  001AC6  11AC               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  2818  001AC8  A4D8               	btfss	status,2,c
  2819  001ACA  EF69  F00D         	goto	u7141
  2820  001ACE  EF6C  F00D         	goto	u7140
  2821  001AD2                     u7141:
  2822  001AD2  FFFF               	dw	65535	; assembler added errata NOP
  2823  001AD4  EF7B  F00D         	goto	l5829
  2824  001AD8                     u7140:
  2825  001AD8  FFFF               	dw	65535	; assembler added errata NOP
  2826  001ADA                     
  2827                           ; BSR set to: 1
  2828                           ;main.c: 201:                     end_effector_homed = reach_goal(&end_effector_stepper,
      +                           100);
  2829  001ADA  0ECD               	movlw	low _end_effector_stepper
  2830  001ADC  6E09               	movwf	reach_goal@stepper_motor^0,c
  2831  001ADE  0E01               	movlw	high _end_effector_stepper
  2832  001AE0  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2833  001AE2  0E00               	movlw	0
  2834  001AE4  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2835  001AE6  0E64               	movlw	100
  2836  001AE8  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2837  001AEA  EC8F  F034         	call	_reach_goal	;wreg free
  2838  001AEE  C009  F1AB         	movff	?_reach_goal,_end_effector_homed
  2839  001AF2  C00A  F1AC         	movff	?_reach_goal+1,_end_effector_homed+1
  2840  001AF6                     l5829:
  2841  001AF6  FFFF               	dw	65535	; assembler added errata NOP
  2842                           
  2843                           ;main.c: 204:                 if (end_effector_homed && !joint_homed){
  2844  001AF8  0101               	movlb	1	; () banked
  2845  001AFA  51AB               	movf	_end_effector_homed& (0+255),w,b
  2846  001AFC  11AC               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  2847  001AFE  B4D8               	btfsc	status,2,c
  2848  001B00  EF84  F00D         	goto	u7151
  2849  001B04  EF87  F00D         	goto	u7150
  2850  001B08                     u7151:
  2851  001B08  FFFF               	dw	65535	; assembler added errata NOP
  2852  001B0A  EFA1  F00D         	goto	l5835
  2853  001B0E                     u7150:
  2854  001B0E  FFFF               	dw	65535	; assembler added errata NOP
  2855  001B10                     
  2856                           ; BSR set to: 1
  2857  001B10  51AD               	movf	_joint_homed& (0+255),w,b
  2858  001B12  11AE               	iorwf	(_joint_homed+1)& (0+255),w,b
  2859  001B14  A4D8               	btfss	status,2,c
  2860  001B16  EF8F  F00D         	goto	u7161
  2861  001B1A  EF92  F00D         	goto	u7160
  2862  001B1E                     u7161:
  2863  001B1E  FFFF               	dw	65535	; assembler added errata NOP
  2864  001B20  EFA1  F00D         	goto	l5835
  2865  001B24                     u7160:
  2866  001B24  FFFF               	dw	65535	; assembler added errata NOP
  2867  001B26                     
  2868                           ; BSR set to: 1
  2869                           ;main.c: 205:                     joint_homed = reach_goal(&joint_stepper, 50);
  2870  001B26  0ED9               	movlw	low _joint_stepper
  2871  001B28  6E09               	movwf	reach_goal@stepper_motor^0,c
  2872  001B2A  0E01               	movlw	high _joint_stepper
  2873  001B2C  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2874  001B2E  0E00               	movlw	0
  2875  001B30  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2876  001B32  0E32               	movlw	50
  2877  001B34  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2878  001B36  EC8F  F034         	call	_reach_goal	;wreg free
  2879  001B3A  C009  F1AD         	movff	?_reach_goal,_joint_homed
  2880  001B3E  C00A  F1AE         	movff	?_reach_goal+1,_joint_homed+1
  2881  001B42                     l5835:
  2882  001B42  FFFF               	dw	65535	; assembler added errata NOP
  2883                           
  2884                           ;main.c: 208:                 if (end_effector_homed * joint_homed){
  2885  001B44  C1AB  F001         	movff	_end_effector_homed,___wmul@multiplier
  2886  001B48  C1AC  F002         	movff	_end_effector_homed+1,___wmul@multiplier+1
  2887  001B4C  C1AD  F003         	movff	_joint_homed,___wmul@multiplicand
  2888  001B50  C1AE  F004         	movff	_joint_homed+1,___wmul@multiplicand+1
  2889  001B54  EC5B  F031         	call	___wmul	;wreg free
  2890  001B58  5001               	movf	?___wmul^0,w,c
  2891  001B5A  1002               	iorwf	(?___wmul+1)^0,w,c
  2892  001B5C  B4D8               	btfsc	status,2,c
  2893  001B5E  EFB3  F00D         	goto	u7171
  2894  001B62  EFB6  F00D         	goto	u7170
  2895  001B66                     u7171:
  2896  001B66  FFFF               	dw	65535	; assembler added errata NOP
  2897  001B68  EFDD  F00E         	goto	l5897
  2898  001B6C                     u7170:
  2899  001B6C  FFFF               	dw	65535	; assembler added errata NOP
  2900  001B6E  EFD3  F00B         	goto	l5755
  2901  001B72                     l5839:
  2902  001B72  FFFF               	dw	65535	; assembler added errata NOP
  2903                           
  2904                           ; BSR set to: 1
  2905  001B74  0E0F               	movlw	15
  2906  001B76  19E5               	xorwf	_state& (0+255),w,b
  2907  001B78  11E6               	iorwf	(_state+1)& (0+255),w,b
  2908  001B7A  A4D8               	btfss	status,2,c
  2909  001B7C  EFC2  F00D         	goto	u7181
  2910  001B80  EFC5  F00D         	goto	u7180
  2911  001B84                     u7181:
  2912  001B84  FFFF               	dw	65535	; assembler added errata NOP
  2913  001B86  EF73  F00E         	goto	l5873
  2914  001B8A                     u7180:
  2915  001B8A  FFFF               	dw	65535	; assembler added errata NOP
  2916  001B8C                     
  2917                           ; BSR set to: 1
  2918                           ;main.c: 213:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2919  001B8C  0E03               	movlw	3
  2920  001B8E  0100               	movlb	0	; () banked
  2921  001B90  6FE2               	movwf	??_main& (0+255),b
  2922  001B92  0EEB               	movlw	235
  2923  001B94                     u7417:
  2924  001B94  FFFF               	dw	65535	; errata NOP
  2925  001B96  2EE8               	decfsz	wreg,f,c
  2926  001B98  D7FD               	bra	u7417
  2927  001B9A  2FE2               	decfsz	??_main& (0+255),f,b
  2928  001B9C  D7FB               	bra	u7417
  2929  001B9E  D000               	nop2	
  2930  001BA0  F000               	nop	
  2931  001BA2                     
  2932                           ;main.c: 214:                 if (!diluting_position_reached){
  2933  001BA2  0101               	movlb	1	; () banked
  2934  001BA4  51AF               	movf	_diluting_position_reached& (0+255),w,b
  2935  001BA6  11B0               	iorwf	(_diluting_position_reached+1)& (0+255),w,b
  2936  001BA8  A4D8               	btfss	status,2,c
  2937  001BAA  EFD9  F00D         	goto	u7191
  2938  001BAE  EFDC  F00D         	goto	u7190
  2939  001BB2                     u7191:
  2940  001BB2  FFFF               	dw	65535	; assembler added errata NOP
  2941  001BB4  EFED  F00D         	goto	l5847
  2942  001BB8                     u7190:
  2943  001BB8  FFFF               	dw	65535	; assembler added errata NOP
  2944  001BBA                     
  2945                           ; BSR set to: 1
  2946                           ;main.c: 215:                     diluting_position_reached = reach_goal(&joint_dilutor_
      +                          stepper, 200);
  2947  001BBA  0EC1               	movlw	low _joint_dilutor_stepper
  2948  001BBC  6E09               	movwf	reach_goal@stepper_motor^0,c
  2949  001BBE  0E01               	movlw	high _joint_dilutor_stepper
  2950  001BC0  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2951  001BC2  0E00               	movlw	0
  2952  001BC4  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2953  001BC6  0EC8               	movlw	200
  2954  001BC8  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2955  001BCA  EC8F  F034         	call	_reach_goal	;wreg free
  2956  001BCE  C009  F1AF         	movff	?_reach_goal,_diluting_position_reached
  2957  001BD2  C00A  F1B0         	movff	?_reach_goal+1,_diluting_position_reached+1
  2958                           
  2959                           ;main.c: 216:                 } else if (!dilution_done && diluting_position_reached){
  2960  001BD6  EFDD  F00E         	goto	l5897
  2961  001BDA                     l5847:
  2962  001BDA  FFFF               	dw	65535	; assembler added errata NOP
  2963                           
  2964                           ; BSR set to: 1
  2965  001BDC  51B9               	movf	_dilution_done& (0+255),w,b
  2966  001BDE  11BA               	iorwf	(_dilution_done+1)& (0+255),w,b
  2967  001BE0  A4D8               	btfss	status,2,c
  2968  001BE2  EFF5  F00D         	goto	u7201
  2969  001BE6  EFF8  F00D         	goto	u7200
  2970  001BEA                     u7201:
  2971  001BEA  FFFF               	dw	65535	; assembler added errata NOP
  2972  001BEC  EF2B  F00E         	goto	l5861
  2973  001BF0                     u7200:
  2974  001BF0  FFFF               	dw	65535	; assembler added errata NOP
  2975  001BF2                     
  2976                           ; BSR set to: 1
  2977  001BF2  51AF               	movf	_diluting_position_reached& (0+255),w,b
  2978  001BF4  11B0               	iorwf	(_diluting_position_reached+1)& (0+255),w,b
  2979  001BF6  B4D8               	btfsc	status,2,c
  2980  001BF8  EF00  F00E         	goto	u7211
  2981  001BFC  EF03  F00E         	goto	u7210
  2982  001C00                     u7211:
  2983  001C00  FFFF               	dw	65535	; assembler added errata NOP
  2984  001C02  EF2B  F00E         	goto	l5861
  2985  001C06                     u7210:
  2986  001C06  FFFF               	dw	65535	; assembler added errata NOP
  2987  001C08                     
  2988                           ; BSR set to: 1
  2989                           ;main.c: 218:                     lcd_cmd(0x01);
  2990  001C08  0E01               	movlw	1
  2991  001C0A  EC31  F031         	call	_lcd_cmd
  2992                           
  2993                           ;main.c: 219:                     lcd_cmd(0x80);
  2994  001C0E  0E80               	movlw	128
  2995  001C10  EC31  F031         	call	_lcd_cmd
  2996  001C14                     
  2997                           ;main.c: 220:                     lcd_str("Dilution ongoing");
  2998  001C14  0E98               	movlw	low STR_12
  2999  001C16  6E03               	movwf	lcd_str@str^0,c
  3000  001C18  0E7F               	movlw	high STR_12
  3001  001C1A  6E04               	movwf	(lcd_str@str+1)^0,c
  3002  001C1C  EC4D  F035         	call	_lcd_str	;wreg free
  3003  001C20                     
  3004                           ;main.c: 221:                     _delay((unsigned long)((1000)*(4000000/4000.0)));
  3005  001C20  0E04               	movlw	4
  3006  001C22  0100               	movlb	0	; () banked
  3007  001C24  6FE3               	movwf	(??_main+1)& (0+255),b
  3008  001C26  0ECF               	movlw	207
  3009  001C28  6FE2               	movwf	??_main& (0+255),b
  3010  001C2A  0EA5               	movlw	165
  3011  001C2C                     u7427:
  3012  001C2C  FFFF               	dw	65535	; errata NOP
  3013  001C2E  2EE8               	decfsz	wreg,f,c
  3014  001C30  D7FD               	bra	u7427
  3015  001C32  2FE2               	decfsz	??_main& (0+255),f,b
  3016  001C34  D7FB               	bra	u7427
  3017  001C36  2FE3               	decfsz	(??_main+1)& (0+255),f,b
  3018  001C38  D7F9               	bra	u7427
  3019  001C3A  F000               	nop	
  3020  001C3C                     
  3021                           ;main.c: 222:                     dilution_done = 1;
  3022  001C3C  0E00               	movlw	0
  3023  001C3E  0101               	movlb	1	; () banked
  3024  001C40  6FBA               	movwf	(_dilution_done+1)& (0+255),b
  3025  001C42  0E01               	movlw	1
  3026  001C44  6FB9               	movwf	_dilution_done& (0+255),b
  3027  001C46                     
  3028                           ; BSR set to: 1
  3029                           ;main.c: 223:                     change_direction(&joint_dilutor_stepper);
  3030  001C46  0EC1               	movlw	low _joint_dilutor_stepper
  3031  001C48  6E01               	movwf	change_direction@stepper_motor^0,c
  3032  001C4A  0E01               	movlw	high _joint_dilutor_stepper
  3033  001C4C  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  3034  001C4E  ECA0  F031         	call	_change_direction	;wreg free
  3035                           
  3036                           ;main.c: 224:                 } else if (dilution_done && !joint_dilutor_homed){
  3037  001C52  EFDD  F00E         	goto	l5897
  3038  001C56                     l5861:
  3039  001C56  FFFF               	dw	65535	; assembler added errata NOP
  3040                           
  3041                           ; BSR set to: 1
  3042  001C58  51B9               	movf	_dilution_done& (0+255),w,b
  3043  001C5A  11BA               	iorwf	(_dilution_done+1)& (0+255),w,b
  3044  001C5C  B4D8               	btfsc	status,2,c
  3045  001C5E  EF33  F00E         	goto	u7221
  3046  001C62  EF36  F00E         	goto	u7220
  3047  001C66                     u7221:
  3048  001C66  FFFF               	dw	65535	; assembler added errata NOP
  3049  001C68  EF52  F00E         	goto	l5867
  3050  001C6C                     u7220:
  3051  001C6C  FFFF               	dw	65535	; assembler added errata NOP
  3052  001C6E                     
  3053                           ; BSR set to: 1
  3054  001C6E  51A9               	movf	_joint_dilutor_homed& (0+255),w,b
  3055  001C70  11AA               	iorwf	(_joint_dilutor_homed+1)& (0+255),w,b
  3056  001C72  A4D8               	btfss	status,2,c
  3057  001C74  EF3E  F00E         	goto	u7231
  3058  001C78  EF41  F00E         	goto	u7230
  3059  001C7C                     u7231:
  3060  001C7C  FFFF               	dw	65535	; assembler added errata NOP
  3061  001C7E  EF52  F00E         	goto	l5867
  3062  001C82                     u7230:
  3063  001C82  FFFF               	dw	65535	; assembler added errata NOP
  3064  001C84                     
  3065                           ; BSR set to: 1
  3066                           ;main.c: 225:                     joint_dilutor_homed = reach_goal(&joint_dilutor_steppe
      +                          r, 200);
  3067  001C84  0EC1               	movlw	low _joint_dilutor_stepper
  3068  001C86  6E09               	movwf	reach_goal@stepper_motor^0,c
  3069  001C88  0E01               	movlw	high _joint_dilutor_stepper
  3070  001C8A  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  3071  001C8C  0E00               	movlw	0
  3072  001C8E  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  3073  001C90  0EC8               	movlw	200
  3074  001C92  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  3075  001C94  EC8F  F034         	call	_reach_goal	;wreg free
  3076  001C98  C009  F1A9         	movff	?_reach_goal,_joint_dilutor_homed
  3077  001C9C  C00A  F1AA         	movff	?_reach_goal+1,_joint_dilutor_homed+1
  3078                           
  3079                           ;main.c: 226:                 } else if (dilution_done && joint_dilutor_homed){
  3080  001CA0  EFDD  F00E         	goto	l5897
  3081  001CA4                     l5867:
  3082  001CA4  FFFF               	dw	65535	; assembler added errata NOP
  3083                           
  3084                           ; BSR set to: 1
  3085  001CA6  51B9               	movf	_dilution_done& (0+255),w,b
  3086  001CA8  11BA               	iorwf	(_dilution_done+1)& (0+255),w,b
  3087  001CAA  B4D8               	btfsc	status,2,c
  3088  001CAC  EF5A  F00E         	goto	u7241
  3089  001CB0  EF5D  F00E         	goto	u7240
  3090  001CB4                     u7241:
  3091  001CB4  FFFF               	dw	65535	; assembler added errata NOP
  3092  001CB6  EFC4  F00B         	goto	l5751
  3093  001CBA                     u7240:
  3094  001CBA  FFFF               	dw	65535	; assembler added errata NOP
  3095  001CBC                     
  3096                           ; BSR set to: 1
  3097  001CBC  51A9               	movf	_joint_dilutor_homed& (0+255),w,b
  3098  001CBE  11AA               	iorwf	(_joint_dilutor_homed+1)& (0+255),w,b
  3099  001CC0  B4D8               	btfsc	status,2,c
  3100  001CC2  EF65  F00E         	goto	u7251
  3101  001CC6  EF68  F00E         	goto	u7250
  3102  001CCA                     u7251:
  3103  001CCA  FFFF               	dw	65535	; assembler added errata NOP
  3104  001CCC  EFC4  F00B         	goto	l5751
  3105  001CD0                     u7250:
  3106  001CD0  FFFF               	dw	65535	; assembler added errata NOP
  3107  001CD2                     
  3108                           ; BSR set to: 1
  3109                           ;main.c: 227:                     state = 5;
  3110  001CD2  0E00               	movlw	0
  3111  001CD4  6FE6               	movwf	(_state+1)& (0+255),b
  3112  001CD6  0E05               	movlw	5
  3113  001CD8  6FE5               	movwf	_state& (0+255),b
  3114                           
  3115                           ;main.c: 228:                     diluting_position_reached = 0;
  3116  001CDA  0E00               	movlw	0
  3117  001CDC  6FB0               	movwf	(_diluting_position_reached+1)& (0+255),b
  3118  001CDE  0E00               	movlw	0
  3119  001CE0  6FAF               	movwf	_diluting_position_reached& (0+255),b
  3120  001CE2  EFDD  F00E         	goto	l5897
  3121  001CE6                     l5873:
  3122  001CE6  FFFF               	dw	65535	; assembler added errata NOP
  3123                           
  3124                           ; BSR set to: 1
  3125  001CE8  0E07               	movlw	7
  3126  001CEA  19E5               	xorwf	_state& (0+255),w,b
  3127  001CEC  11E6               	iorwf	(_state+1)& (0+255),w,b
  3128  001CEE  A4D8               	btfss	status,2,c
  3129  001CF0  EF7C  F00E         	goto	u7261
  3130  001CF4  EF7F  F00E         	goto	u7260
  3131  001CF8                     u7261:
  3132  001CF8  FFFF               	dw	65535	; assembler added errata NOP
  3133  001CFA  EF88  F00E         	goto	l5877
  3134  001CFE                     u7260:
  3135  001CFE  FFFF               	dw	65535	; assembler added errata NOP
  3136  001D00                     
  3137                           ; BSR set to: 1
  3138                           ;main.c: 232:                 state = 11;
  3139  001D00  0E00               	movlw	0
  3140  001D02  6FE6               	movwf	(_state+1)& (0+255),b
  3141  001D04  0E0B               	movlw	11
  3142  001D06  6FE5               	movwf	_state& (0+255),b
  3143                           
  3144                           ;main.c: 233:                 state_changed = 1;
  3145  001D08  0E01               	movlw	1
  3146  001D0A  6FC0               	movwf	_state_changed& (0+255),b
  3147                           
  3148                           ;main.c: 234:             }else if (state == 11){
  3149  001D0C  EFDD  F00E         	goto	l5897
  3150  001D10                     l5877:
  3151  001D10  FFFF               	dw	65535	; assembler added errata NOP
  3152                           
  3153                           ; BSR set to: 1
  3154  001D12  0E0B               	movlw	11
  3155  001D14  19E5               	xorwf	_state& (0+255),w,b
  3156  001D16  11E6               	iorwf	(_state+1)& (0+255),w,b
  3157  001D18  A4D8               	btfss	status,2,c
  3158  001D1A  EF91  F00E         	goto	u7271
  3159  001D1E  EF94  F00E         	goto	u7270
  3160  001D22                     u7271:
  3161  001D22  FFFF               	dw	65535	; assembler added errata NOP
  3162  001D24  EFC9  F00E         	goto	l5891
  3163  001D28                     u7270:
  3164  001D28  FFFF               	dw	65535	; assembler added errata NOP
  3165  001D2A                     
  3166                           ; BSR set to: 1
  3167                           ;main.c: 235:                 if (timer_done){
  3168  001D2A  51BD               	movf	_timer_done& (0+255),w,b
  3169  001D2C  B4D8               	btfsc	status,2,c
  3170  001D2E  EF9B  F00E         	goto	u7281
  3171  001D32  EF9E  F00E         	goto	u7280
  3172  001D36                     u7281:
  3173  001D36  FFFF               	dw	65535	; assembler added errata NOP
  3174  001D38  EFBB  F00E         	goto	l210
  3175  001D3C                     u7280:
  3176  001D3C  FFFF               	dw	65535	; assembler added errata NOP
  3177  001D3E                     
  3178                           ; BSR set to: 1
  3179                           ;main.c: 236:                     state_changed = 1;
  3180  001D3E  0E01               	movlw	1
  3181  001D40  6FC0               	movwf	_state_changed& (0+255),b
  3182                           
  3183                           ;main.c: 237:                     state = 2;
  3184  001D42  0E00               	movlw	0
  3185  001D44  6FE6               	movwf	(_state+1)& (0+255),b
  3186  001D46  0E02               	movlw	2
  3187  001D48  6FE5               	movwf	_state& (0+255),b
  3188                           
  3189                           ;main.c: 238:                     move_to_trash = 1;
  3190  001D4A  0E00               	movlw	0
  3191  001D4C  6FB6               	movwf	(_move_to_trash+1)& (0+255),b
  3192  001D4E  0E01               	movlw	1
  3193  001D50  6FB5               	movwf	_move_to_trash& (0+255),b
  3194                           
  3195                           ;main.c: 239:                     trash_counter = 0;
  3196  001D52  0E00               	movlw	0
  3197  001D54  6FB8               	movwf	(_trash_counter+1)& (0+255),b
  3198  001D56  0E00               	movlw	0
  3199  001D58  6FB7               	movwf	_trash_counter& (0+255),b
  3200  001D5A                     
  3201                           ; BSR set to: 1
  3202                           ;main.c: 240:                     lcd_cmd(0x01);
  3203  001D5A  0E01               	movlw	1
  3204  001D5C  EC31  F031         	call	_lcd_cmd
  3205  001D60                     
  3206                           ;main.c: 241:                     lcd_cmd(0x80);
  3207  001D60  0E80               	movlw	128
  3208  001D62  EC31  F031         	call	_lcd_cmd
  3209  001D66                     
  3210                           ;main.c: 242:                     lcd_str("Moved to trash! Restarting from Idle");
  3211  001D66  0E5D               	movlw	low STR_13
  3212  001D68  6E03               	movwf	lcd_str@str^0,c
  3213  001D6A  0E7F               	movlw	high STR_13
  3214  001D6C  6E04               	movwf	(lcd_str@str+1)^0,c
  3215  001D6E  EC4D  F035         	call	_lcd_str	;wreg free
  3216                           
  3217                           ;main.c: 243:                 } else {
  3218  001D72  EFDD  F00E         	goto	l5897
  3219  001D76                     l210:
  3220  001D76  FFFF               	dw	65535	; assembler added errata NOP
  3221                           
  3222                           ; BSR set to: 1
  3223                           ;main.c: 244:                     if (T0CONbits.TMR0ON == 0){
  3224  001D78  BED5               	btfsc	213,7,c	;volatile
  3225  001D7A  EFC1  F00E         	goto	u7291
  3226  001D7E  EFC4  F00E         	goto	u7290
  3227  001D82                     u7291:
  3228  001D82  FFFF               	dw	65535	; assembler added errata NOP
  3229  001D84  EFC4  F00B         	goto	l5751
  3230  001D88                     u7290:
  3231  001D88  FFFF               	dw	65535	; assembler added errata NOP
  3232  001D8A                     
  3233                           ; BSR set to: 1
  3234                           ;main.c: 245:                         init_timer_0();
  3235  001D8A  ECFA  F030         	call	_init_timer_0	;wreg free
  3236  001D8E  EFDD  F00E         	goto	l5897
  3237  001D92                     l5891:
  3238  001D92  FFFF               	dw	65535	; assembler added errata NOP
  3239                           
  3240                           ; BSR set to: 1
  3241  001D94  0E0C               	movlw	12
  3242  001D96  19E5               	xorwf	_state& (0+255),w,b
  3243  001D98  11E6               	iorwf	(_state+1)& (0+255),w,b
  3244  001D9A  A4D8               	btfss	status,2,c
  3245  001D9C  EFD2  F00E         	goto	u7301
  3246  001DA0  EFD5  F00E         	goto	u7300
  3247  001DA4                     u7301:
  3248  001DA4  FFFF               	dw	65535	; assembler added errata NOP
  3249  001DA6  EFC4  F00B         	goto	l5751
  3250  001DAA                     u7300:
  3251  001DAA  FFFF               	dw	65535	; assembler added errata NOP
  3252  001DAC                     
  3253                           ; BSR set to: 1
  3254                           ;main.c: 250:                 state = 0;
  3255  001DAC  0E00               	movlw	0
  3256  001DAE  6FE6               	movwf	(_state+1)& (0+255),b
  3257  001DB0  0E00               	movlw	0
  3258  001DB2  6FE5               	movwf	_state& (0+255),b
  3259                           
  3260                           ;main.c: 251:                 state_changed = 1;
  3261  001DB4  0E01               	movlw	1
  3262  001DB6  6FC0               	movwf	_state_changed& (0+255),b
  3263  001DB8                     
  3264                           ; BSR set to: 1
  3265                           ;main.c: 252:                 T0CONbits.TMR0ON = 0;
  3266  001DB8  9ED5               	bcf	213,7,c	;volatile
  3267  001DBA                     l5897:
  3268  001DBA  FFFF               	dw	65535	; assembler added errata NOP
  3269  001DBC  0E08               	movlw	8
  3270  001DBE  0101               	movlb	1	; () banked
  3271  001DC0  19E5               	xorwf	_state& (0+255),w,b
  3272  001DC2  11E6               	iorwf	(_state+1)& (0+255),w,b
  3273  001DC4  A4D8               	btfss	status,2,c
  3274  001DC6  EFE7  F00E         	goto	u7311
  3275  001DCA  EFEA  F00E         	goto	u7310
  3276  001DCE                     u7311:
  3277  001DCE  FFFF               	dw	65535	; assembler added errata NOP
  3278  001DD0  EFA1  F00A         	goto	l5689
  3279  001DD4                     u7310:
  3280  001DD4  FFFF               	dw	65535	; assembler added errata NOP
  3281  001DD6                     
  3282                           ; BSR set to: 1
  3283                           ;main.c: 255:                 if (tank_error == 0){
  3284  001DD6  51A7               	movf	_tank_error& (0+255),w,b
  3285  001DD8  11A8               	iorwf	(_tank_error+1)& (0+255),w,b
  3286  001DDA  A4D8               	btfss	status,2,c
  3287  001DDC  EFF2  F00E         	goto	u7321
  3288  001DE0  EFF5  F00E         	goto	u7320
  3289  001DE4                     u7321:
  3290  001DE4  FFFF               	dw	65535	; assembler added errata NOP
  3291  001DE6  EFFC  F00E         	goto	l166
  3292  001DEA                     u7320:
  3293  001DEA  FFFF               	dw	65535	; assembler added errata NOP
  3294  001DEC                     
  3295                           ; BSR set to: 1
  3296                           ;main.c: 256:                     state = state_before_error;
  3297  001DEC  C1E7  F1E5         	movff	_state_before_error,_state
  3298  001DF0  C1E8  F1E6         	movff	_state_before_error+1,_state+1
  3299  001DF4  EFA1  F00A         	goto	l5689
  3300  001DF8                     l166:
  3301  001DF8  FFFF               	dw	65535	; assembler added errata NOP
  3302                           
  3303                           ; BSR set to: 1
  3304  001DFA  EFA1  F00A         	goto	l5689
  3305  001DFE  EF3B  F000         	goto	start
  3306  001E02                     __end_of_main:
  3307                           	callstack 0
  3308                           
  3309 ;; *************** function _wait_for_zero *****************
  3310 ;; Defined at:
  3311 ;;		line 42 in file "oven.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;		None
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;		None
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      void 
  3318 ;; Registers used:
  3319 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3325 ;;      Params:         0       0       0       0       0       0       0
  3326 ;;      Locals:         0       0       0       0       0       0       0
  3327 ;;      Temps:          0       0       0       0       0       0       0
  3328 ;;      Totals:         0       0       0       0       0       0       0
  3329 ;;Total ram usage:        0 bytes
  3330 ;; Hardware stack levels used:    1
  3331 ;; Hardware stack levels required when called:    3
  3332 ;; This function calls:
  3333 ;;		_get_temperature
  3334 ;; This function is called by:
  3335 ;;		_main
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339                           	psect	text1
  3340  00623A                     __ptext1:
  3341                           	callstack 0
  3342  00623A                     _wait_for_zero:
  3343                           	callstack 0
  3344  00623A  FFFF               	dw	65535	; assembler added errata NOP
  3345  00623C                     l421:
  3346  00623C  FFFF               	dw	65535	; assembler added errata NOP
  3347  00623E                     
  3348                           ;oven.c: 44:         if (get_temperature() == -55){
  3349  00623E  EC56  F034         	call	_get_temperature	;wreg free
  3350  006242  0EC9               	movlw	201
  3351  006244  0100               	movlb	0	; () banked
  3352  006246  19BA               	xorwf	?_get_temperature& (0+255),w,b
  3353  006248  E106               	bnz	u6841
  3354  00624A  29BB               	incf	(?_get_temperature+1)& (0+255),w,b
  3355  00624C  A4D8               	btfss	status,2,c
  3356  00624E  EF2B  F031         	goto	u6841
  3357  006252  EF2E  F031         	goto	u6840
  3358  006256                     u6841:
  3359  006256  FFFF               	dw	65535	; assembler added errata NOP
  3360  006258  EF1E  F031         	goto	l421
  3361  00625C                     u6840:
  3362  00625C  FFFF               	dw	65535	; assembler added errata NOP
  3363  00625E                     
  3364                           ; BSR set to: 0
  3365  00625E  0012               	return		;funcret
  3366  006260  FFFF               	dw	65535	; errata NOP
  3367  006262                     __end_of_wait_for_zero:
  3368                           	callstack 0
  3369                           
  3370 ;; *************** function _get_temperature *****************
  3371 ;; Defined at:
  3372 ;;		line 30 in file "oven.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;		None
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  2    2[BANK0 ] int 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3386 ;;      Params:         0       2       0       0       0       0       0
  3387 ;;      Locals:         0       0       0       0       0       0       0
  3388 ;;      Temps:          0       0       0       0       0       0       0
  3389 ;;      Totals:         0       2       0       0       0       0       0
  3390 ;;Total ram usage:        2 bytes
  3391 ;; Hardware stack levels used:    1
  3392 ;; Hardware stack levels required when called:    2
  3393 ;; This function calls:
  3394 ;;		___flmul
  3395 ;;		___fltol
  3396 ;;		___xxtofl
  3397 ;; This function is called by:
  3398 ;;		_main
  3399 ;;		_wait_for_zero
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403                           	psect	text2
  3404  0068AC                     __ptext2:
  3405                           	callstack 0
  3406  0068AC                     _get_temperature:
  3407                           	callstack 0
  3408  0068AC  FFFF               	dw	65535	; assembler added errata NOP
  3409  0068AE                     
  3410                           ;oven.c: 31:     ADCON0bits.GO = 1;
  3411  0068AE  84C2               	bsf	194,2,c	;volatile
  3412  0068B0                     l409:
  3413  0068B0  FFFF               	dw	65535	; assembler added errata NOP
  3414  0068B2  B4C2               	btfsc	194,2,c	;volatile
  3415  0068B4  EF5E  F034         	goto	u6491
  3416  0068B8  EF61  F034         	goto	u6490
  3417  0068BC                     u6491:
  3418  0068BC  FFFF               	dw	65535	; assembler added errata NOP
  3419  0068BE  EF58  F034         	goto	l409
  3420  0068C2                     u6490:
  3421  0068C2  FFFF               	dw	65535	; assembler added errata NOP
  3422  0068C4                     
  3423                           ;oven.c: 33:     return (int) (ADRESH * 0.25) + -55;
  3424  0068C4  0E00               	movlw	0
  3425  0068C6  6E31               	movwf	___flmul@a^0,c
  3426  0068C8  0E00               	movlw	0
  3427  0068CA  6E32               	movwf	(___flmul@a+1)^0,c
  3428  0068CC  0E80               	movlw	128
  3429  0068CE  6E33               	movwf	(___flmul@a+2)^0,c
  3430  0068D0  0E3E               	movlw	62
  3431  0068D2  6E34               	movwf	(___flmul@a+3)^0,c
  3432  0068D4  50C4               	movf	196,w,c	;volatile
  3433  0068D6  6E1F               	movwf	___xxtofl@val^0,c
  3434  0068D8  6A20               	clrf	(___xxtofl@val+1)^0,c
  3435  0068DA  6A21               	clrf	(___xxtofl@val+2)^0,c
  3436  0068DC  6A22               	clrf	(___xxtofl@val+3)^0,c
  3437  0068DE  0E01               	movlw	1
  3438  0068E0  EC94  F01D         	call	___xxtofl
  3439  0068E4  C01F  F02D         	movff	?___xxtofl,___flmul@b
  3440  0068E8  C020  F02E         	movff	?___xxtofl+1,___flmul@b+1
  3441  0068EC  C021  F02F         	movff	?___xxtofl+2,___flmul@b+2
  3442  0068F0  C022  F030         	movff	?___xxtofl+3,___flmul@b+3
  3443  0068F4  ECD5  F011         	call	___flmul	;wreg free
  3444  0068F8  C02D  F077         	movff	?___flmul,___fltol@f1
  3445  0068FC  C02E  F078         	movff	?___flmul+1,___fltol@f1+1
  3446  006900  C02F  F079         	movff	?___flmul+2,___fltol@f1+2
  3447  006904  C030  F07A         	movff	?___flmul+3,___fltol@f1+3
  3448  006908  ECB8  F03A         	call	___fltol	;wreg free
  3449  00690C  0EC9               	movlw	201
  3450  00690E  2477               	addwf	?___fltol^0,w,c
  3451  006910  0100               	movlb	0	; () banked
  3452  006912  6FBA               	movwf	?_get_temperature& (0+255),b
  3453  006914  0EFF               	movlw	255
  3454  006916  2078               	addwfc	(?___fltol+1)^0,w,c
  3455  006918  6FBB               	movwf	(?_get_temperature+1)& (0+255),b
  3456  00691A                     
  3457                           ; BSR set to: 0
  3458  00691A  0012               	return		;funcret
  3459  00691C  FFFF               	dw	65535	; errata NOP
  3460  00691E                     __end_of_get_temperature:
  3461                           	callstack 0
  3462                           
  3463 ;; *************** function _state_translator_micro_to_fpga *****************
  3464 ;; Defined at:
  3465 ;;		line 26 in file "utils.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;  state           2    0[COMRAM] PTR int 
  3468 ;;		 -> state(2), 
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;  state_machin    1    4[COMRAM] unsigned char 
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  1    wreg      unsigned char 
  3473 ;; Registers used:
  3474 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3480 ;;      Params:         2       0       0       0       0       0       0
  3481 ;;      Locals:         1       0       0       0       0       0       0
  3482 ;;      Temps:          2       0       0       0       0       0       0
  3483 ;;      Totals:         5       0       0       0       0       0       0
  3484 ;;Total ram usage:        5 bytes
  3485 ;; Hardware stack levels used:    1
  3486 ;; Hardware stack levels required when called:    1
  3487 ;; This function calls:
  3488 ;;		Nothing
  3489 ;; This function is called by:
  3490 ;;		_main
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           	psect	text3
  3495  006B22                     __ptext3:
  3496                           	callstack 0
  3497  006B22                     _state_translator_micro_to_fpga:
  3498                           	callstack 0
  3499  006B22  FFFF               	dw	65535	; assembler added errata NOP
  3500  006B24                     
  3501                           ;utils.c: 27:     unsigned char state_machine_code;;utils.c: 28:     if (*state == 2){
  3502  006B24  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  3503  006B28  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  3504  006B2C  0E02               	movlw	2
  3505  006B2E  18DE               	xorwf	postinc2,w,c
  3506  006B30  10DE               	iorwf	postinc2,w,c
  3507  006B32  A4D8               	btfss	status,2,c
  3508  006B34  EF9E  F035         	goto	u6781
  3509  006B38  EFA1  F035         	goto	u6780
  3510  006B3C                     u6781:
  3511  006B3C  FFFF               	dw	65535	; assembler added errata NOP
  3512  006B3E  EFA6  F035         	goto	l5553
  3513  006B42                     u6780:
  3514  006B42  FFFF               	dw	65535	; assembler added errata NOP
  3515  006B44                     
  3516                           ;utils.c: 29:         state_machine_code = 0x10;
  3517  006B44  0E10               	movlw	16
  3518  006B46  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3519                           
  3520                           ;utils.c: 30:     } else if (*state == 0) {
  3521  006B48  EFD2  F035         	goto	l307
  3522  006B4C                     l5553:
  3523  006B4C  FFFF               	dw	65535	; assembler added errata NOP
  3524  006B4E  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  3525  006B52  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  3526  006B56  50DE               	movf	postinc2,w,c
  3527  006B58  10DE               	iorwf	postinc2,w,c
  3528  006B5A  A4D8               	btfss	status,2,c
  3529  006B5C  EFB2  F035         	goto	u6791
  3530  006B60  EFB5  F035         	goto	u6790
  3531  006B64                     u6791:
  3532  006B64  FFFF               	dw	65535	; assembler added errata NOP
  3533  006B66  EFBA  F035         	goto	l5557
  3534  006B6A                     u6790:
  3535  006B6A  FFFF               	dw	65535	; assembler added errata NOP
  3536  006B6C                     
  3537                           ;utils.c: 31:         state_machine_code = 0x09;
  3538  006B6C  0E09               	movlw	9
  3539  006B6E  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3540                           
  3541                           ;utils.c: 32:     } else if (*state == 8) {
  3542  006B70  EFD2  F035         	goto	l307
  3543  006B74                     l5557:
  3544  006B74  FFFF               	dw	65535	; assembler added errata NOP
  3545  006B76  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  3546  006B7A  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  3547  006B7E  0E08               	movlw	8
  3548  006B80  18DE               	xorwf	postinc2,w,c
  3549  006B82  10DE               	iorwf	postinc2,w,c
  3550  006B84  A4D8               	btfss	status,2,c
  3551  006B86  EFC7  F035         	goto	u6801
  3552  006B8A  EFCA  F035         	goto	u6800
  3553  006B8E                     u6801:
  3554  006B8E  FFFF               	dw	65535	; assembler added errata NOP
  3555  006B90  EFCF  F035         	goto	l5561
  3556  006B94                     u6800:
  3557  006B94  FFFF               	dw	65535	; assembler added errata NOP
  3558  006B96                     
  3559                           ;utils.c: 33:         state_machine_code = 0x40;
  3560  006B96  0E40               	movlw	64
  3561  006B98  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3562                           
  3563                           ;utils.c: 34:     } else {
  3564  006B9A  EFD2  F035         	goto	l307
  3565  006B9E                     l5561:
  3566  006B9E  FFFF               	dw	65535	; assembler added errata NOP
  3567                           
  3568                           ;utils.c: 35:         state_machine_code = 0x80;
  3569  006BA0  0E80               	movlw	128
  3570  006BA2  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3571  006BA4                     l307:
  3572  006BA4  FFFF               	dw	65535	; assembler added errata NOP
  3573                           
  3574                           ;utils.c: 37:     return state_machine_code;
  3575  006BA6  5005               	movf	state_translator_micro_to_fpga@state_machine_code^0,w,c
  3576  006BA8  0012               	return		;funcret
  3577  006BAA  FFFF               	dw	65535	; errata NOP
  3578  006BAC                     __end_of_state_translator_micro_to_fpga:
  3579                           	callstack 0
  3580                           
  3581 ;; *************** function _state_translator_fpga_to_micro *****************
  3582 ;; Defined at:
  3583 ;;		line 2 in file "utils.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;  state_machin    1    wreg     unsigned char 
  3586 ;;  state           2    2[COMRAM] PTR int 
  3587 ;;		 -> state(2), 
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;  state_machin    1    4[COMRAM] unsigned char 
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  1    wreg      void 
  3592 ;; Registers used:
  3593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3599 ;;      Params:         2       0       0       0       0       0       0
  3600 ;;      Locals:         1       0       0       0       0       0       0
  3601 ;;      Temps:          0       0       0       0       0       0       0
  3602 ;;      Totals:         3       0       0       0       0       0       0
  3603 ;;Total ram usage:        3 bytes
  3604 ;; Hardware stack levels used:    1
  3605 ;; Hardware stack levels required when called:    3
  3606 ;; This function calls:
  3607 ;;		_lcd_dat
  3608 ;; This function is called by:
  3609 ;;		_main
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           	psect	text4
  3614  0077E2                     __ptext4:
  3615                           	callstack 0
  3616  0077E2                     _state_translator_fpga_to_micro:
  3617                           	callstack 0
  3618  0077E2  FFFF               	dw	65535	; assembler added errata NOP
  3619                           
  3620                           ;incstack = 0
  3621                           ;state_translator_fpga_to_micro@state_machine_code stored from wreg
  3622  0077E4  6E05               	movwf	state_translator_fpga_to_micro@state_machine_code^0,c
  3623  0077E6                     
  3624                           ;utils.c: 3:     lcd_dat(state_machine_code);
  3625  0077E6  5005               	movf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3626  0077E8  EC46  F031         	call	_lcd_dat
  3627  0077EC                     
  3628                           ;utils.c: 4:     if (state_machine_code == 0x01){
  3629  0077EC  0405               	decf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3630  0077EE  A4D8               	btfss	status,2,c
  3631  0077F0  EFFC  F03B         	goto	u6701
  3632  0077F4  EFFF  F03B         	goto	u6700
  3633  0077F8                     u6701:
  3634  0077F8  FFFF               	dw	65535	; assembler added errata NOP
  3635  0077FA  EF0A  F03C         	goto	l5511
  3636  0077FE                     u6700:
  3637  0077FE  FFFF               	dw	65535	; assembler added errata NOP
  3638  007800                     
  3639                           ;utils.c: 5:         *state = 1;
  3640  007800  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3641  007804  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3642  007808  0E01               	movlw	1
  3643  00780A  6EDE               	movwf	postinc2,c
  3644  00780C  0E00               	movlw	0
  3645  00780E  6EDD               	movwf	postdec2,c
  3646                           
  3647                           ;utils.c: 6:     } else if (state_machine_code == 0x02){
  3648  007810  EF9D  F03C         	goto	l303
  3649  007814                     l5511:
  3650  007814  FFFF               	dw	65535	; assembler added errata NOP
  3651  007816  0E02               	movlw	2
  3652  007818  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3653  00781A  A4D8               	btfss	status,2,c
  3654  00781C  EF12  F03C         	goto	u6711
  3655  007820  EF15  F03C         	goto	u6710
  3656  007824                     u6711:
  3657  007824  FFFF               	dw	65535	; assembler added errata NOP
  3658  007826  EF20  F03C         	goto	l5515
  3659  00782A                     u6710:
  3660  00782A  FFFF               	dw	65535	; assembler added errata NOP
  3661  00782C                     
  3662                           ;utils.c: 7:         *state = 3;
  3663  00782C  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3664  007830  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3665  007834  0E03               	movlw	3
  3666  007836  6EDE               	movwf	postinc2,c
  3667  007838  0E00               	movlw	0
  3668  00783A  6EDD               	movwf	postdec2,c
  3669                           
  3670                           ;utils.c: 8:     } else if (state_machine_code == 0x04){
  3671  00783C  EF9D  F03C         	goto	l303
  3672  007840                     l5515:
  3673  007840  FFFF               	dw	65535	; assembler added errata NOP
  3674  007842  0E04               	movlw	4
  3675  007844  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3676  007846  A4D8               	btfss	status,2,c
  3677  007848  EF28  F03C         	goto	u6721
  3678  00784C  EF2B  F03C         	goto	u6720
  3679  007850                     u6721:
  3680  007850  FFFF               	dw	65535	; assembler added errata NOP
  3681  007852  EF36  F03C         	goto	l5519
  3682  007856                     u6720:
  3683  007856  FFFF               	dw	65535	; assembler added errata NOP
  3684  007858                     
  3685                           ;utils.c: 9:         *state = 4;
  3686  007858  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3687  00785C  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3688  007860  0E04               	movlw	4
  3689  007862  6EDE               	movwf	postinc2,c
  3690  007864  0E00               	movlw	0
  3691  007866  6EDD               	movwf	postdec2,c
  3692                           
  3693                           ;utils.c: 10:     } else if (state_machine_code == 0x08){
  3694  007868  EF9D  F03C         	goto	l303
  3695  00786C                     l5519:
  3696  00786C  FFFF               	dw	65535	; assembler added errata NOP
  3697  00786E  0E08               	movlw	8
  3698  007870  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3699  007872  A4D8               	btfss	status,2,c
  3700  007874  EF3E  F03C         	goto	u6731
  3701  007878  EF41  F03C         	goto	u6730
  3702  00787C                     u6731:
  3703  00787C  FFFF               	dw	65535	; assembler added errata NOP
  3704  00787E  EF4C  F03C         	goto	l5523
  3705  007882                     u6730:
  3706  007882  FFFF               	dw	65535	; assembler added errata NOP
  3707  007884                     
  3708                           ;utils.c: 11:         *state = 7;
  3709  007884  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3710  007888  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3711  00788C  0E07               	movlw	7
  3712  00788E  6EDE               	movwf	postinc2,c
  3713  007890  0E00               	movlw	0
  3714  007892  6EDD               	movwf	postdec2,c
  3715                           
  3716                           ;utils.c: 12:     } else if (state_machine_code == 0x10){
  3717  007894  EF9D  F03C         	goto	l303
  3718  007898                     l5523:
  3719  007898  FFFF               	dw	65535	; assembler added errata NOP
  3720  00789A  0E10               	movlw	16
  3721  00789C  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3722  00789E  A4D8               	btfss	status,2,c
  3723  0078A0  EF54  F03C         	goto	u6741
  3724  0078A4  EF57  F03C         	goto	u6740
  3725  0078A8                     u6741:
  3726  0078A8  FFFF               	dw	65535	; assembler added errata NOP
  3727  0078AA  EF62  F03C         	goto	l5527
  3728  0078AE                     u6740:
  3729  0078AE  FFFF               	dw	65535	; assembler added errata NOP
  3730  0078B0                     
  3731                           ;utils.c: 13:         *state = 2;
  3732  0078B0  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3733  0078B4  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3734  0078B8  0E02               	movlw	2
  3735  0078BA  6EDE               	movwf	postinc2,c
  3736  0078BC  0E00               	movlw	0
  3737  0078BE  6EDD               	movwf	postdec2,c
  3738                           
  3739                           ;utils.c: 14:     } else if (state_machine_code == 0x40){
  3740  0078C0  EF9D  F03C         	goto	l303
  3741  0078C4                     l5527:
  3742  0078C4  FFFF               	dw	65535	; assembler added errata NOP
  3743  0078C6  0E40               	movlw	64
  3744  0078C8  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3745  0078CA  A4D8               	btfss	status,2,c
  3746  0078CC  EF6A  F03C         	goto	u6751
  3747  0078D0  EF6D  F03C         	goto	u6750
  3748  0078D4                     u6751:
  3749  0078D4  FFFF               	dw	65535	; assembler added errata NOP
  3750  0078D6  EF78  F03C         	goto	l5531
  3751  0078DA                     u6750:
  3752  0078DA  FFFF               	dw	65535	; assembler added errata NOP
  3753  0078DC                     
  3754                           ;utils.c: 15:         *state = 8;
  3755  0078DC  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3756  0078E0  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3757  0078E4  0E08               	movlw	8
  3758  0078E6  6EDE               	movwf	postinc2,c
  3759  0078E8  0E00               	movlw	0
  3760  0078EA  6EDD               	movwf	postdec2,c
  3761                           
  3762                           ;utils.c: 16:     } else if (state_machine_code == 0x80){
  3763  0078EC  EF9D  F03C         	goto	l303
  3764  0078F0                     l5531:
  3765  0078F0  FFFF               	dw	65535	; assembler added errata NOP
  3766  0078F2  0E80               	movlw	128
  3767  0078F4  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3768  0078F6  A4D8               	btfss	status,2,c
  3769  0078F8  EF80  F03C         	goto	u6761
  3770  0078FC  EF83  F03C         	goto	u6760
  3771  007900                     u6761:
  3772  007900  FFFF               	dw	65535	; assembler added errata NOP
  3773  007902  EF86  F03C         	goto	l5535
  3774  007906                     u6760:
  3775  007906  FFFF               	dw	65535	; assembler added errata NOP
  3776  007908  EF9D  F03C         	goto	l303
  3777  00790C                     l5535:
  3778  00790C  FFFF               	dw	65535	; assembler added errata NOP
  3779  00790E  0E20               	movlw	32
  3780  007910  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3781  007912  A4D8               	btfss	status,2,c
  3782  007914  EF8E  F03C         	goto	u6771
  3783  007918  EF91  F03C         	goto	u6770
  3784  00791C                     u6771:
  3785  00791C  FFFF               	dw	65535	; assembler added errata NOP
  3786  00791E  EF94  F03C         	goto	l5539
  3787  007922                     u6770:
  3788  007922  FFFF               	dw	65535	; assembler added errata NOP
  3789  007924  EF9D  F03C         	goto	l303
  3790  007928                     l5539:
  3791  007928  FFFF               	dw	65535	; assembler added errata NOP
  3792                           
  3793                           ;utils.c: 21:         *state = 0;
  3794  00792A  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3795  00792E  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3796  007932  0E00               	movlw	0
  3797  007934  6EDE               	movwf	postinc2,c
  3798  007936  0E00               	movlw	0
  3799  007938  6EDD               	movwf	postdec2,c
  3800  00793A                     l303:
  3801  00793A  FFFF               	dw	65535	; assembler added errata NOP
  3802  00793C  0012               	return		;funcret
  3803  00793E  FFFF               	dw	65535	; errata NOP
  3804  007940                     __end_of_state_translator_fpga_to_micro:
  3805                           	callstack 0
  3806                           
  3807 ;; *************** function _snprintf *****************
  3808 ;; Defined at:
  3809 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\snprintf.c"
  3810 ;; Parameters:    Size  Location     Type
  3811 ;;  s               2   10[BANK0 ] PTR unsigned char 
  3812 ;;		 -> main@greet_str(160), 
  3813 ;;  n               2   12[BANK0 ] unsigned int 
  3814 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  3815 ;;		 -> STR_10(3), 
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;  ap              2   20[BANK0 ] PTR void [1]
  3818 ;;		 -> ?_snprintf(2), 
  3819 ;;  ret             2    0        int 
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  2   10[BANK0 ] int 
  3822 ;; Registers used:
  3823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3829 ;;      Params:         0       8       0       0       0       0       0
  3830 ;;      Locals:         0       4       0       0       0       0       0
  3831 ;;      Temps:          0       0       0       0       0       0       0
  3832 ;;      Totals:         0      12       0       0       0       0       0
  3833 ;;Total ram usage:       12 bytes
  3834 ;; Hardware stack levels used:    1
  3835 ;; Hardware stack levels required when called:    9
  3836 ;; This function calls:
  3837 ;;		_vsnprintf
  3838 ;; This function is called by:
  3839 ;;		_main
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           	psect	text5
  3844  00630C                     __ptext5:
  3845                           	callstack 0
  3846  00630C                     _snprintf:
  3847                           	callstack 0
  3848  00630C  FFFF               	dw	65535	; assembler added errata NOP
  3849  00630E  0EC8               	movlw	low (?_snprintf+6)
  3850  006310  0100               	movlb	0	; () banked
  3851  006312  6FCC               	movwf	snprintf@ap& (0+255),b
  3852  006314  0E00               	movlw	high (?_snprintf+6)
  3853  006316  6FCD               	movwf	(snprintf@ap+1)& (0+255),b
  3854  006318                     
  3855                           ; BSR set to: 0
  3856  006318  C0C2  F070         	movff	snprintf@s,vsnprintf@s
  3857  00631C  C0C3  F071         	movff	snprintf@s+1,vsnprintf@s+1
  3858  006320  C0C4  F072         	movff	snprintf@n,vsnprintf@n
  3859  006324  C0C5  F073         	movff	snprintf@n+1,vsnprintf@n+1
  3860  006328  C0C6  F074         	movff	snprintf@fmt,vsnprintf@fmt
  3861  00632C  C0C7  F075         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  3862  006330  0ECC               	movlw	low snprintf@ap
  3863  006332  6E76               	movwf	vsnprintf@ap^0,c
  3864  006334  0E00               	movlw	high snprintf@ap
  3865  006336  6E77               	movwf	(vsnprintf@ap+1)^0,c
  3866  006338  EC54  F03B         	call	_vsnprintf	;wreg free
  3867  00633C  0012               	return		;funcret
  3868  00633E  FFFF               	dw	65535	; errata NOP
  3869  006340                     __end_of_snprintf:
  3870                           	callstack 0
  3871                           
  3872 ;; *************** function _vsnprintf *****************
  3873 ;; Defined at:
  3874 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_vsnprintf.c"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;  s               2  111[COMRAM] PTR unsigned char 
  3877 ;;		 -> main@greet_str(160), 
  3878 ;;  n               2  113[COMRAM] unsigned int 
  3879 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  3880 ;;		 -> STR_10(3), 
  3881 ;;  ap              2  117[COMRAM] PTR PTR void 
  3882 ;;		 -> snprintf@ap(2), 
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;  f               6    4[BANK0 ] struct _IO_FILE
  3885 ;;  cnt             2    2[BANK0 ] int 
  3886 ;; Return value:  Size  Location     Type
  3887 ;;                  2  111[COMRAM] int 
  3888 ;; Registers used:
  3889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3890 ;; Tracked objects:
  3891 ;;		On entry : 0/0
  3892 ;;		On exit  : 0/0
  3893 ;;		Unchanged: 0/0
  3894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3895 ;;      Params:         8       0       0       0       0       0       0
  3896 ;;      Locals:         0      10       0       0       0       0       0
  3897 ;;      Temps:          4       0       0       0       0       0       0
  3898 ;;      Totals:        12      10       0       0       0       0       0
  3899 ;;Total ram usage:       22 bytes
  3900 ;; Hardware stack levels used:    1
  3901 ;; Hardware stack levels required when called:    8
  3902 ;; This function calls:
  3903 ;;		_vfprintf
  3904 ;; This function is called by:
  3905 ;;		_snprintf
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text6
  3910  0076A8                     __ptext6:
  3911                           	callstack 0
  3912  0076A8                     _vsnprintf:
  3913                           	callstack 0
  3914  0076A8  FFFF               	dw	65535	; assembler added errata NOP
  3915  0076AA  0E80               	movlw	128
  3916  0076AC  5C73               	subwf	(vsnprintf@n+1)^0,w,c
  3917  0076AE  A0D8               	btfss	status,0,c
  3918  0076B0  EF5C  F03B         	goto	u6601
  3919  0076B4  EF5F  F03B         	goto	u6600
  3920  0076B8                     u6601:
  3921  0076B8  FFFF               	dw	65535	; assembler added errata NOP
  3922  0076BA  EF69  F03B         	goto	l5371
  3923  0076BE                     u6600:
  3924  0076BE  FFFF               	dw	65535	; assembler added errata NOP
  3925  0076C0  0E00               	movlw	0
  3926  0076C2  0100               	movlb	0	; () banked
  3927  0076C4  6F8D               	movwf	(_errno+1)& (0+255),b
  3928  0076C6  0E4B               	movlw	75
  3929  0076C8  6F8C               	movwf	_errno& (0+255),b
  3930  0076CA                     
  3931                           ; BSR set to: 0
  3932  0076CA  6870               	setf	?_vsnprintf^0,c
  3933  0076CC  6871               	setf	(?_vsnprintf+1)^0,c
  3934  0076CE  EFEE  F03B         	goto	l1141
  3935  0076D2                     l5371:
  3936  0076D2  FFFF               	dw	65535	; assembler added errata NOP
  3937  0076D4  C070  F0BC         	movff	vsnprintf@s,vsnprintf@f
  3938  0076D8  C071  F0BD         	movff	vsnprintf@s+1,vsnprintf@f+1
  3939  0076DC  5073               	movf	(vsnprintf@n+1)^0,w,c
  3940  0076DE  E10A               	bnz	u6610
  3941  0076E0  0E02               	movlw	2
  3942  0076E2  5C72               	subwf	vsnprintf@n^0,w,c
  3943  0076E4  A0D8               	btfss	status,0,c
  3944  0076E6  EF77  F03B         	goto	u6611
  3945  0076EA  EF7A  F03B         	goto	u6610
  3946  0076EE                     u6611:
  3947  0076EE  FFFF               	dw	65535	; assembler added errata NOP
  3948  0076F0  EF88  F03B         	goto	l5377
  3949  0076F4                     u6610:
  3950  0076F4  FFFF               	dw	65535	; assembler added errata NOP
  3951  0076F6  0EFF               	movlw	255
  3952  0076F8  2472               	addwf	vsnprintf@n^0,w,c
  3953  0076FA  0100               	movlb	0	; () banked
  3954  0076FC  6FC0               	movwf	(vsnprintf@f+4)& (0+255),b
  3955  0076FE  0EFF               	movlw	255
  3956  007700  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  3957  007702  6FC1               	movwf	(vsnprintf@f+5)& (0+255),b
  3958  007704                     
  3959                           ; BSR set to: 0
  3960  007704  0E00               	movlw	0
  3961  007706  6FBF               	movwf	(vsnprintf@f+3)& (0+255),b
  3962  007708  0E00               	movlw	0
  3963  00770A  6FBE               	movwf	(vsnprintf@f+2)& (0+255),b
  3964  00770C  EF92  F03B         	goto	l5379
  3965  007710                     l5377:
  3966  007710  FFFF               	dw	65535	; assembler added errata NOP
  3967  007712  0E00               	movlw	0
  3968  007714  0100               	movlb	0	; () banked
  3969  007716  6FC1               	movwf	(vsnprintf@f+5)& (0+255),b
  3970  007718  0E01               	movlw	1
  3971  00771A  6FC0               	movwf	(vsnprintf@f+4)& (0+255),b
  3972  00771C  0E00               	movlw	0
  3973  00771E  6FBF               	movwf	(vsnprintf@f+3)& (0+255),b
  3974  007720  0E01               	movlw	1
  3975  007722  6FBE               	movwf	(vsnprintf@f+2)& (0+255),b
  3976  007724                     l5379:
  3977  007724  FFFF               	dw	65535	; assembler added errata NOP
  3978                           
  3979                           ; BSR set to: 0
  3980  007726  0EBC               	movlw	low vsnprintf@f
  3981  007728  6E68               	movwf	vfprintf@fp^0,c
  3982  00772A  0E00               	movlw	high vsnprintf@f
  3983  00772C  6E69               	movwf	(vfprintf@fp+1)^0,c
  3984  00772E  C074  F06A         	movff	vsnprintf@fmt,vfprintf@fmt
  3985  007732  C075  F06B         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  3986  007736  C076  F06C         	movff	vsnprintf@ap,vfprintf@ap
  3987  00773A  C077  F06D         	movff	vsnprintf@ap+1,vfprintf@ap+1
  3988  00773E  EC1E  F034         	call	_vfprintf	;wreg free
  3989  007742  C068  F0BA         	movff	?_vfprintf,vsnprintf@cnt
  3990  007746  C069  F0BB         	movff	?_vfprintf+1,vsnprintf@cnt+1
  3991  00774A  5072               	movf	vsnprintf@n^0,w,c
  3992  00774C  1073               	iorwf	(vsnprintf@n+1)^0,w,c
  3993  00774E  B4D8               	btfsc	status,2,c
  3994  007750  EFAC  F03B         	goto	u6621
  3995  007754  EFAF  F03B         	goto	u6620
  3996  007758                     u6621:
  3997  007758  FFFF               	dw	65535	; assembler added errata NOP
  3998  00775A  EFE9  F03B         	goto	l5391
  3999  00775E                     u6620:
  4000  00775E  FFFF               	dw	65535	; assembler added errata NOP
  4001  007760  0100               	movlb	0	; () banked
  4002  007762  BFBB               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  4003  007764  EFB6  F03B         	goto	u6631
  4004  007768  EFB9  F03B         	goto	u6630
  4005  00776C                     u6631:
  4006  00776C  FFFF               	dw	65535	; assembler added errata NOP
  4007  00776E  EFE9  F03B         	goto	l5391
  4008  007772                     u6630:
  4009  007772  FFFF               	dw	65535	; assembler added errata NOP
  4010  007774                     
  4011                           ; BSR set to: 0
  4012  007774  0EFF               	movlw	255
  4013  007776  6E78               	movwf	??_vsnprintf^0,c
  4014  007778  0EFF               	movlw	255
  4015  00777A  6E79               	movwf	(??_vsnprintf+1)^0,c
  4016  00777C  C072  F07A         	movff	vsnprintf@n,??_vsnprintf+2
  4017  007780  C073  F07B         	movff	vsnprintf@n+1,??_vsnprintf+3
  4018  007784  5078               	movf	??_vsnprintf^0,w,c
  4019  007786  267A               	addwf	(??_vsnprintf+2)^0,f,c
  4020  007788  5079               	movf	(??_vsnprintf+1)^0,w,c
  4021  00778A  227B               	addwfc	(??_vsnprintf+3)^0,f,c
  4022  00778C  507A               	movf	(??_vsnprintf+2)^0,w,c
  4023  00778E  5DBA               	subwf	vsnprintf@cnt& (0+255),w,b
  4024  007790  507B               	movf	(??_vsnprintf+3)^0,w,c
  4025  007792  59BB               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  4026  007794  A0D8               	btfss	status,0,c
  4027  007796  EFCF  F03B         	goto	u6641
  4028  00779A  EFD2  F03B         	goto	u6640
  4029  00779E                     u6641:
  4030  00779E  FFFF               	dw	65535	; assembler added errata NOP
  4031  0077A0  EFDB  F03B         	goto	l1146
  4032  0077A4                     u6640:
  4033  0077A4  FFFF               	dw	65535	; assembler added errata NOP
  4034  0077A6                     
  4035                           ; BSR set to: 0
  4036  0077A6  0EFF               	movlw	255
  4037  0077A8  2472               	addwf	vsnprintf@n^0,w,c
  4038  0077AA  6FB8               	movwf	_vsnprintf$1586& (0+255),b
  4039  0077AC  0EFF               	movlw	255
  4040  0077AE  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  4041  0077B0  6FB9               	movwf	(_vsnprintf$1586+1)& (0+255),b
  4042  0077B2  EFE0  F03B         	goto	l5389
  4043  0077B6                     l1146:
  4044  0077B6  FFFF               	dw	65535	; assembler added errata NOP
  4045                           
  4046                           ; BSR set to: 0
  4047  0077B8  C0BA  F0B8         	movff	vsnprintf@cnt,_vsnprintf$1586
  4048  0077BC  C0BB  F0B9         	movff	vsnprintf@cnt+1,_vsnprintf$1586+1
  4049  0077C0                     l5389:
  4050  0077C0  FFFF               	dw	65535	; assembler added errata NOP
  4051                           
  4052                           ; BSR set to: 0
  4053  0077C2  51B8               	movf	_vsnprintf$1586& (0+255),w,b
  4054  0077C4  2470               	addwf	vsnprintf@s^0,w,c
  4055  0077C6  6ED9               	movwf	fsr2l,c
  4056  0077C8  51B9               	movf	(_vsnprintf$1586+1)& (0+255),w,b
  4057  0077CA  2071               	addwfc	(vsnprintf@s+1)^0,w,c
  4058  0077CC  6EDA               	movwf	fsr2h,c
  4059  0077CE  0E00               	movlw	0
  4060  0077D0  6EDF               	movwf	indf2,c
  4061  0077D2                     l5391:
  4062  0077D2  FFFF               	dw	65535	; assembler added errata NOP
  4063  0077D4  C0BA  F070         	movff	vsnprintf@cnt,?_vsnprintf
  4064  0077D8  C0BB  F071         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  4065  0077DC                     l1141:
  4066  0077DC  FFFF               	dw	65535	; assembler added errata NOP
  4067  0077DE  0012               	return		;funcret
  4068  0077E0  FFFF               	dw	65535	; errata NOP
  4069  0077E2                     __end_of_vsnprintf:
  4070                           	callstack 0
  4071                           
  4072 ;; *************** function _vfprintf *****************
  4073 ;; Defined at:
  4074 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;  fp              2  103[COMRAM] PTR struct _IO_FILE
  4077 ;;		 -> vsnprintf@f(6), 
  4078 ;;  fmt             2  105[COMRAM] PTR const unsigned char 
  4079 ;;		 -> STR_10(3), 
  4080 ;;  ap              2  107[COMRAM] PTR PTR void 
  4081 ;;		 -> snprintf@ap(2), 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;  cfmt            2  109[COMRAM] PTR unsigned char 
  4084 ;;		 -> STR_10(3), 
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  2  103[COMRAM] int 
  4087 ;; Registers used:
  4088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4094 ;;      Params:         6       0       0       0       0       0       0
  4095 ;;      Locals:         2       0       0       0       0       0       0
  4096 ;;      Temps:          0       0       0       0       0       0       0
  4097 ;;      Totals:         8       0       0       0       0       0       0
  4098 ;;Total ram usage:        8 bytes
  4099 ;; Hardware stack levels used:    1
  4100 ;; Hardware stack levels required when called:    7
  4101 ;; This function calls:
  4102 ;;		_vfpfcnvrt
  4103 ;; This function is called by:
  4104 ;;		_vsnprintf
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108                           	psect	text7
  4109  00683C                     __ptext7:
  4110                           	callstack 0
  4111  00683C                     _vfprintf:
  4112                           	callstack 0
  4113  00683C  FFFF               	dw	65535	; assembler added errata NOP
  4114  00683E                     
  4115                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4116  00683E  C06A  F06E         	movff	vfprintf@fmt,vfprintf@cfmt
  4117  006842  C06B  F06F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4118  006846                     
  4119                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  4120  006846  0E00               	movlw	0
  4121  006848  0100               	movlb	0	; () banked
  4122  00684A  6F85               	movwf	(_nout+1)& (0+255),b
  4123  00684C  0E00               	movlw	0
  4124  00684E  6F84               	movwf	_nout& (0+255),b
  4125                           
  4126                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  4127  006850  EF3E  F034         	goto	l5217
  4128  006854                     l5215:
  4129  006854  FFFF               	dw	65535	; assembler added errata NOP
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4133  006856  C068  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  4134  00685A  C069  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4135  00685E  0E6E               	movlw	low vfprintf@cfmt
  4136  006860  6E45               	movwf	vfpfcnvrt@fmt^0,c
  4137  006862  0E00               	movlw	high vfprintf@cfmt
  4138  006864  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4139  006866  C06C  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  4140  00686A  C06D  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4141  00686E  EC3D  F000         	call	_vfpfcnvrt	;wreg free
  4142  006872  5043               	movf	?_vfpfcnvrt^0,w,c
  4143  006874  0100               	movlb	0	; () banked
  4144  006876  2784               	addwf	_nout& (0+255),f,b
  4145  006878  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  4146  00687A  2385               	addwfc	(_nout+1)& (0+255),f,b
  4147  00687C                     l5217:
  4148  00687C  FFFF               	dw	65535	; assembler added errata NOP
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  4152  00687E  C06E  FFF6         	movff	vfprintf@cfmt,tblptrl
  4153  006882  C06F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4154  006886                     	if	0	;tblptru may be non-zero
  4155  006886                     	endif
  4156  006886                     	if	0	;tblptru may be non-zero
  4157  006886                     	endif
  4158  006886  0008               	tblrd		*
  4159  006888  FFFF               	dw	65535	; errata NOP
  4160  00688A  50F5               	movf	tablat,w,c
  4161  00688C  0900               	iorlw	0
  4162  00688E  A4D8               	btfss	status,2,c
  4163  006890  EF4C  F034         	goto	u6391
  4164  006894  EF4F  F034         	goto	u6390
  4165  006898                     u6391:
  4166  006898  FFFF               	dw	65535	; assembler added errata NOP
  4167  00689A  EF2A  F034         	goto	l5215
  4168  00689E                     u6390:
  4169  00689E  FFFF               	dw	65535	; assembler added errata NOP
  4170  0068A0                     
  4171                           ; BSR set to: 0
  4172                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  4173  0068A0  C084  F068         	movff	_nout,?_vfprintf
  4174  0068A4  C085  F069         	movff	_nout+1,?_vfprintf+1
  4175  0068A8                     
  4176                           ; BSR set to: 0
  4177  0068A8  0012               	return		;funcret
  4178  0068AA  FFFF               	dw	65535	; errata NOP
  4179  0068AC                     __end_of_vfprintf:
  4180                           	callstack 0
  4181                           
  4182 ;; *************** function _vfpfcnvrt *****************
  4183 ;; Defined at:
  4184 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  4187 ;;		 -> vsnprintf@f(6), 
  4188 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  4189 ;;		 -> vfprintf@cfmt(2), 
  4190 ;;  ap              2   70[COMRAM] PTR PTR void 
  4191 ;;		 -> snprintf@ap(2), 
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;  llu             8   95[COMRAM] unsigned long long 
  4194 ;;  ll              8   84[COMRAM] long long 
  4195 ;;  f               4    0        long long 
  4196 ;;  ct              3    0        unsigned char [3]
  4197 ;;  vp              2   92[COMRAM] PTR void 
  4198 ;;		 -> ?_snprintf(2), STR_8(50), STR_7(9), STR_6(7), 
  4199 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  4200 ;;		 -> STR_1(49), 
  4201 ;;  done            2   78[COMRAM] int 
  4202 ;;  cp              2   76[COMRAM] PTR unsigned char 
  4203 ;;		 -> ?_snprintf(2), STR_8(50), STR_7(9), STR_6(7), 
  4204 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  4205 ;;		 -> STR_1(49), 
  4206 ;;  i               2    0        int 
  4207 ;;  c               1   94[COMRAM] unsigned char 
  4208 ;; Return value:  Size  Location     Type
  4209 ;;                  2   66[COMRAM] int 
  4210 ;; Registers used:
  4211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4212 ;; Tracked objects:
  4213 ;;		On entry : 0/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4217 ;;      Params:         6       0       0       0       0       0       0
  4218 ;;      Locals:        27       0       0       0       0       0       0
  4219 ;;      Temps:          4       0       0       0       0       0       0
  4220 ;;      Totals:        37       0       0       0       0       0       0
  4221 ;;Total ram usage:       37 bytes
  4222 ;; Hardware stack levels used:    1
  4223 ;; Hardware stack levels required when called:    6
  4224 ;; This function calls:
  4225 ;;		_atoi
  4226 ;;		_ctoa
  4227 ;;		_dtoa
  4228 ;;		_fputc
  4229 ;;		_isdigit
  4230 ;;		_otoa
  4231 ;;		_stoa
  4232 ;;		_strncmp
  4233 ;;		_utoa
  4234 ;;		_xtoa
  4235 ;; This function is called by:
  4236 ;;		_vfprintf
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           	psect	text8
  4241  00007A                     __ptext8:
  4242                           	callstack 0
  4243  00007A                     _vfpfcnvrt:
  4244                           	callstack 0
  4245  00007A  FFFF               	dw	65535	; assembler added errata NOP
  4246  00007C                     
  4247                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  4248  00007C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4249  000080  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4250  000084  CFDE FFF6          	movff	postinc2,tblptrl
  4251  000088  CFDD FFF7          	movff	postdec2,tblptrh
  4252  00008C                     	if	0	;tblptru may be non-zero
  4253  00008C                     	endif
  4254  00008C                     	if	0	;tblptru may be non-zero
  4255  00008C                     	endif
  4256  00008C  0008               	tblrd		*
  4257  00008E  FFFF               	dw	65535	; errata NOP
  4258  000090  50F5               	movf	tablat,w,c
  4259  000092  0A25               	xorlw	37
  4260  000094  A4D8               	btfss	status,2,c
  4261  000096  EF4F  F000         	goto	u5251
  4262  00009A  EF52  F000         	goto	u5250
  4263  00009E                     u5251:
  4264  00009E  FFFF               	dw	65535	; assembler added errata NOP
  4265  0000A0  EF11  F00A         	goto	l4801
  4266  0000A4                     u5250:
  4267  0000A4  FFFF               	dw	65535	; assembler added errata NOP
  4268  0000A6                     
  4269                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  4270  0000A6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4271  0000AA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4272  0000AE  2ADE               	incf	postinc2,f,c
  4273  0000B0  0E00               	movlw	0
  4274  0000B2  22DD               	addwfc	postdec2,f,c
  4275  0000B4                     
  4276                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  4277  0000B4  0E00               	movlw	0
  4278  0000B6  0100               	movlb	0	; () banked
  4279  0000B8  6F87               	movwf	(_width+1)& (0+255),b
  4280  0000BA  0E00               	movlw	0
  4281  0000BC  6F86               	movwf	_width& (0+255),b
  4282  0000BE  C086  F08A         	movff	_width,_flags
  4283  0000C2  C087  F08B         	movff	_width+1,_flags+1
  4284  0000C6                     
  4285                           ; BSR set to: 0
  4286                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  4287  0000C6  6988               	setf	_prec& (0+255),b
  4288  0000C8  6989               	setf	(_prec+1)& (0+255),b
  4289  0000CA                     
  4290                           ; BSR set to: 0
  4291                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  4292  0000CA  0E00               	movlw	0
  4293  0000CC  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  4294  0000CE  0E00               	movlw	0
  4295  0000D0  6E4F               	movwf	vfpfcnvrt@done^0,c
  4296                           
  4297                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  4298  0000D2  EFC0  F000         	goto	l4519
  4299  0000D6                     l4493:
  4300  0000D6  FFFF               	dw	65535	; assembler added errata NOP
  4301                           
  4302                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  4303  0000D8  0100               	movlb	0	; () banked
  4304  0000DA  818A               	bsf	_flags& (0+255),0,b
  4305  0000DC                     l4495:
  4306  0000DC  FFFF               	dw	65535	; assembler added errata NOP
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  4310  0000DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4311  0000E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4312  0000E6  2ADE               	incf	postinc2,f,c
  4313  0000E8  0E00               	movlw	0
  4314  0000EA  22DD               	addwfc	postdec2,f,c
  4315                           
  4316                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  4317  0000EC  EFC0  F000         	goto	l4519
  4318  0000F0                     l4497:
  4319  0000F0  FFFF               	dw	65535	; assembler added errata NOP
  4320                           
  4321                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  4322  0000F2  0100               	movlb	0	; () banked
  4323  0000F4  838A               	bsf	_flags& (0+255),1,b
  4324  0000F6  EF6E  F000         	goto	l4495
  4325  0000FA                     l4501:
  4326  0000FA  FFFF               	dw	65535	; assembler added errata NOP
  4327                           
  4328                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  4329  0000FC  0100               	movlb	0	; () banked
  4330  0000FE  858A               	bsf	_flags& (0+255),2,b
  4331  000100  EF6E  F000         	goto	l4495
  4332  000104                     l4505:
  4333  000104  FFFF               	dw	65535	; assembler added errata NOP
  4334                           
  4335                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  4336  000106  0100               	movlb	0	; () banked
  4337  000108  878A               	bsf	_flags& (0+255),3,b
  4338  00010A  EF6E  F000         	goto	l4495
  4339  00010E                     l4509:
  4340  00010E  FFFF               	dw	65535	; assembler added errata NOP
  4341                           
  4342                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  4343  000110  0100               	movlb	0	; () banked
  4344  000112  898A               	bsf	_flags& (0+255),4,b
  4345  000114  EF6E  F000         	goto	l4495
  4346  000118                     l4513:
  4347  000118  FFFF               	dw	65535	; assembler added errata NOP
  4348                           
  4349                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  4350  00011A  0E00               	movlw	0
  4351  00011C  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  4352  00011E  0E01               	movlw	1
  4353  000120  6E4F               	movwf	vfpfcnvrt@done^0,c
  4354                           
  4355                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  4356  000122  EFC0  F000         	goto	l4519
  4357  000126                     l4517:
  4358  000126  FFFF               	dw	65535	; assembler added errata NOP
  4359  000128  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4360  00012C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4361  000130  CFDE FFF6          	movff	postinc2,tblptrl
  4362  000134  CFDD FFF7          	movff	postdec2,tblptrh
  4363  000138                     	if	0	;tblptru may be non-zero
  4364  000138                     	endif
  4365  000138                     	if	0	;tblptru may be non-zero
  4366  000138                     	endif
  4367  000138  0008               	tblrd		*
  4368  00013A  FFFF               	dw	65535	; errata NOP
  4369  00013C  50F5               	movf	tablat,w,c
  4370  00013E  6E49               	movwf	??_vfpfcnvrt^0,c
  4371  000140  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  4372                           
  4373                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4374                           ; Switch size 1, requested type "simple"
  4375                           ; Number of cases is 1, Range of values is 0 to 0
  4376                           ; switch strategies available:
  4377                           ; Name         Instructions Cycles
  4378                           ; simple_byte            4     3 (average)
  4379                           ;	Chosen strategy is simple_byte
  4380  000142  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  4381  000144  0A00               	xorlw	0	; case 0
  4382  000146  B4D8               	btfsc	status,2,c
  4383  000148  EFA8  F000         	goto	l5969
  4384  00014C  EF8C  F000         	goto	l4513
  4385  000150                     l5969:
  4386  000150  FFFF               	dw	65535	; assembler added errata NOP
  4387                           
  4388                           ; Switch size 1, requested type "simple"
  4389                           ; Number of cases is 5, Range of values is 32 to 48
  4390                           ; switch strategies available:
  4391                           ; Name         Instructions Cycles
  4392                           ; simple_byte           16     9 (average)
  4393                           ;	Chosen strategy is simple_byte
  4394  000152  5049               	movf	??_vfpfcnvrt^0,w,c
  4395  000154  0A20               	xorlw	32	; case 32
  4396  000156  B4D8               	btfsc	status,2,c
  4397  000158  EF82  F000         	goto	l4505
  4398  00015C  0A03               	xorlw	3	; case 35
  4399  00015E  B4D8               	btfsc	status,2,c
  4400  000160  EF87  F000         	goto	l4509
  4401  000164  0A08               	xorlw	8	; case 43
  4402  000166  B4D8               	btfsc	status,2,c
  4403  000168  EF7D  F000         	goto	l4501
  4404  00016C  0A06               	xorlw	6	; case 45
  4405  00016E  B4D8               	btfsc	status,2,c
  4406  000170  EF6B  F000         	goto	l4493
  4407  000174  0A1D               	xorlw	29	; case 48
  4408  000176  B4D8               	btfsc	status,2,c
  4409  000178  EF78  F000         	goto	l4497
  4410  00017C  EF8C  F000         	goto	l4513
  4411  000180                     l4519:
  4412  000180  FFFF               	dw	65535	; assembler added errata NOP
  4413                           
  4414                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  4415  000182  504F               	movf	vfpfcnvrt@done^0,w,c
  4416  000184  1050               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  4417  000186  B4D8               	btfsc	status,2,c
  4418  000188  EFC8  F000         	goto	u5261
  4419  00018C  EFCB  F000         	goto	u5260
  4420  000190                     u5261:
  4421  000190  FFFF               	dw	65535	; assembler added errata NOP
  4422  000192  EF93  F000         	goto	l4517
  4423  000196                     u5260:
  4424  000196  FFFF               	dw	65535	; assembler added errata NOP
  4425  000198                     
  4426                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  4427  000198  0100               	movlb	0	; () banked
  4428  00019A  A18A               	btfss	_flags& (0+255),0,b
  4429  00019C  EFD2  F000         	goto	u5271
  4430  0001A0  EFD5  F000         	goto	u5270
  4431  0001A4                     u5271:
  4432  0001A4  FFFF               	dw	65535	; assembler added errata NOP
  4433  0001A6  EFD7  F000         	goto	l4523
  4434  0001AA                     u5270:
  4435  0001AA  FFFF               	dw	65535	; assembler added errata NOP
  4436  0001AC                     
  4437                           ; BSR set to: 0
  4438                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  4439  0001AC  938A               	bcf	_flags& (0+255),1,b
  4440  0001AE                     l4523:
  4441  0001AE  FFFF               	dw	65535	; assembler added errata NOP
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  4445  0001B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4446  0001B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4447  0001B8  CFDE FFF6          	movff	postinc2,tblptrl
  4448  0001BC  CFDD FFF7          	movff	postdec2,tblptrh
  4449  0001C0                     	if	0	;tblptru may be non-zero
  4450  0001C0                     	endif
  4451  0001C0                     	if	0	;tblptru may be non-zero
  4452  0001C0                     	endif
  4453  0001C0  0008               	tblrd		*
  4454  0001C2  FFFF               	dw	65535	; errata NOP
  4455  0001C4  50F5               	movf	tablat,w,c
  4456  0001C6  0A2A               	xorlw	42
  4457  0001C8  A4D8               	btfss	status,2,c
  4458  0001CA  EFE9  F000         	goto	u5281
  4459  0001CE  EFEC  F000         	goto	u5280
  4460  0001D2                     u5281:
  4461  0001D2  FFFF               	dw	65535	; assembler added errata NOP
  4462  0001D4  EF18  F001         	goto	l4531
  4463  0001D8                     u5280:
  4464  0001D8  FFFF               	dw	65535	; assembler added errata NOP
  4465  0001DA                     
  4466                           ; BSR set to: 0
  4467                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  4468  0001DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4469  0001DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4470  0001E2  2ADE               	incf	postinc2,f,c
  4471  0001E4  0E00               	movlw	0
  4472  0001E6  22DD               	addwfc	postdec2,f,c
  4473                           
  4474                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4475  0001E8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4476  0001EC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4477  0001F0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4478  0001F4  0E02               	movlw	2
  4479  0001F6  26DE               	addwf	postinc2,f,c
  4480  0001F8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4481  0001FC  0E00               	movlw	0
  4482  0001FE  22DD               	addwfc	postdec2,f,c
  4483  000200  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4484  000204  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4485  000208  CFDE F086          	movff	postinc2,_width
  4486  00020C  CFDD F087          	movff	postdec2,_width+1
  4487  000210                     
  4488                           ; BSR set to: 0
  4489                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  4490  000210  BF87               	btfsc	(_width+1)& (0+255),7,b
  4491  000212  EF10  F001         	goto	u5290
  4492  000216  EF0D  F001         	goto	u5291
  4493  00021A                     u5291:
  4494  00021A  FFFF               	dw	65535	; assembler added errata NOP
  4495  00021C  EF63  F001         	goto	l4541
  4496  000220                     u5290:
  4497  000220  FFFF               	dw	65535	; assembler added errata NOP
  4498  000222                     
  4499                           ; BSR set to: 0
  4500                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  4501  000222  818A               	bsf	_flags& (0+255),0,b
  4502                           
  4503                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  4504  000224  6D86               	negf	_width& (0+255),b
  4505  000226  1F87               	comf	(_width+1)& (0+255),f,b
  4506  000228  B0D8               	btfsc	status,0,c
  4507  00022A  2B87               	incf	(_width+1)& (0+255),f,b
  4508  00022C  EF63  F001         	goto	l4541
  4509  000230                     l4531:
  4510  000230  FFFF               	dw	65535	; assembler added errata NOP
  4511                           
  4512                           ; BSR set to: 0
  4513                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  4514  000232  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4515  000236  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4516  00023A  CFDE F008          	movff	postinc2,atoi@s
  4517  00023E  CFDD F009          	movff	postdec2,atoi@s+1
  4518  000242  EC42  F03E         	call	_atoi	;wreg free
  4519  000246  C008  F086         	movff	?_atoi,_width
  4520  00024A  C009  F087         	movff	?_atoi+1,_width+1
  4521                           
  4522                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4523  00024E  EF31  F001         	goto	l4535
  4524  000252                     l4533:
  4525  000252  FFFF               	dw	65535	; assembler added errata NOP
  4526                           
  4527                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  4528  000254  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4529  000258  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4530  00025C  2ADE               	incf	postinc2,f,c
  4531  00025E  0E00               	movlw	0
  4532  000260  22DD               	addwfc	postdec2,f,c
  4533  000262                     l4535:
  4534  000262  FFFF               	dw	65535	; assembler added errata NOP
  4535  000264  0ED0               	movlw	208
  4536  000266  6E49               	movwf	??_vfpfcnvrt^0,c
  4537  000268  0EFF               	movlw	255
  4538  00026A  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  4539  00026C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4540  000270  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4541  000274  CFDE FFF6          	movff	postinc2,tblptrl
  4542  000278  CFDD FFF7          	movff	postdec2,tblptrh
  4543  00027C                     	if	0	;tblptru may be non-zero
  4544  00027C                     	endif
  4545  00027C                     	if	0	;tblptru may be non-zero
  4546  00027C                     	endif
  4547  00027C  0008               	tblrd		*
  4548  00027E  FFFF               	dw	65535	; errata NOP
  4549  000280  50F5               	movf	tablat,w,c
  4550  000282  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4551  000284  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  4552  000286  5049               	movf	??_vfpfcnvrt^0,w,c
  4553  000288  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4554  00028A  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  4555  00028C  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4556  00028E  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  4557  000290  E10B               	bnz	u5300
  4558  000292  0E0A               	movlw	10
  4559  000294  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4560  000296  A0D8               	btfss	status,0,c
  4561  000298  EF50  F001         	goto	u5301
  4562  00029C  EF54  F001         	goto	u5300
  4563  0002A0                     u5301:
  4564  0002A0  FFFF               	dw	65535	; assembler added errata NOP
  4565  0002A2  0E01               	movlw	1
  4566  0002A4  EF56  F001         	goto	u5310
  4567  0002A8                     u5300:
  4568  0002A8  FFFF               	dw	65535	; assembler added errata NOP
  4569  0002AA  0E00               	movlw	0
  4570  0002AC                     u5310:
  4571  0002AC  FFFF               	dw	65535	; assembler added errata NOP
  4572  0002AE  6E51               	movwf	_vfpfcnvrt$1719^0,c
  4573  0002B0  6A52               	clrf	(_vfpfcnvrt$1719+1)^0,c
  4574  0002B2  5051               	movf	_vfpfcnvrt$1719^0,w,c
  4575  0002B4  1052               	iorwf	(_vfpfcnvrt$1719+1)^0,w,c
  4576  0002B6  A4D8               	btfss	status,2,c
  4577  0002B8  EF60  F001         	goto	u5321
  4578  0002BC  EF63  F001         	goto	u5320
  4579  0002C0                     u5321:
  4580  0002C0  FFFF               	dw	65535	; assembler added errata NOP
  4581  0002C2  EF29  F001         	goto	l4533
  4582  0002C6                     u5320:
  4583  0002C6                     l4541:
  4584  0002C6  FFFF               	dw	65535	; assembler added errata NOP
  4585                           
  4586                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  4587  0002C8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4588  0002CC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4589  0002D0  CFDE FFF6          	movff	postinc2,tblptrl
  4590  0002D4  CFDD FFF7          	movff	postdec2,tblptrh
  4591  0002D8                     	if	0	;tblptru may be non-zero
  4592  0002D8                     	endif
  4593  0002D8                     	if	0	;tblptru may be non-zero
  4594  0002D8                     	endif
  4595  0002D8  0008               	tblrd		*
  4596  0002DA  FFFF               	dw	65535	; errata NOP
  4597  0002DC  50F5               	movf	tablat,w,c
  4598  0002DE  0A2E               	xorlw	46
  4599  0002E0  A4D8               	btfss	status,2,c
  4600  0002E2  EF75  F001         	goto	u5331
  4601  0002E6  EF78  F001         	goto	u5330
  4602  0002EA                     u5331:
  4603  0002EA  FFFF               	dw	65535	; assembler added errata NOP
  4604  0002EC  EF02  F002         	goto	l4561
  4605  0002F0                     u5330:
  4606  0002F0  FFFF               	dw	65535	; assembler added errata NOP
  4607  0002F2                     
  4608                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  4609  0002F2  0E00               	movlw	0
  4610  0002F4  0100               	movlb	0	; () banked
  4611  0002F6  6F89               	movwf	(_prec+1)& (0+255),b
  4612  0002F8  0E00               	movlw	0
  4613  0002FA  6F88               	movwf	_prec& (0+255),b
  4614  0002FC                     
  4615                           ; BSR set to: 0
  4616                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  4617  0002FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4618  000300  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4619  000304  2ADE               	incf	postinc2,f,c
  4620  000306  0E00               	movlw	0
  4621  000308  22DD               	addwfc	postdec2,f,c
  4622  00030A                     
  4623                           ; BSR set to: 0
  4624                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  4625  00030A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4626  00030E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4627  000312  CFDE FFF6          	movff	postinc2,tblptrl
  4628  000316  CFDD FFF7          	movff	postdec2,tblptrh
  4629  00031A                     	if	0	;tblptru may be non-zero
  4630  00031A                     	endif
  4631  00031A                     	if	0	;tblptru may be non-zero
  4632  00031A                     	endif
  4633  00031A  0008               	tblrd		*
  4634  00031C  FFFF               	dw	65535	; errata NOP
  4635  00031E  50F5               	movf	tablat,w,c
  4636  000320  0A2A               	xorlw	42
  4637  000322  A4D8               	btfss	status,2,c
  4638  000324  EF96  F001         	goto	u5341
  4639  000328  EF99  F001         	goto	u5340
  4640  00032C                     u5341:
  4641  00032C  FFFF               	dw	65535	; assembler added errata NOP
  4642  00032E  EFB7  F001         	goto	l4551
  4643  000332                     u5340:
  4644  000332  FFFF               	dw	65535	; assembler added errata NOP
  4645  000334                     
  4646                           ; BSR set to: 0
  4647                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  4648  000334  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4649  000338  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4650  00033C  2ADE               	incf	postinc2,f,c
  4651  00033E  0E00               	movlw	0
  4652  000340  22DD               	addwfc	postdec2,f,c
  4653                           
  4654                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4655  000342  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4656  000346  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4657  00034A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4658  00034E  0E02               	movlw	2
  4659  000350  26DE               	addwf	postinc2,f,c
  4660  000352  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4661  000356  0E00               	movlw	0
  4662  000358  22DD               	addwfc	postdec2,f,c
  4663  00035A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4664  00035E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4665  000362  CFDE F088          	movff	postinc2,_prec
  4666  000366  CFDD F089          	movff	postdec2,_prec+1
  4667                           
  4668                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  4669  00036A  EF02  F002         	goto	l4561
  4670  00036E                     l4551:
  4671  00036E  FFFF               	dw	65535	; assembler added errata NOP
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  4675  000370  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4676  000374  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4677  000378  CFDE F008          	movff	postinc2,atoi@s
  4678  00037C  CFDD F009          	movff	postdec2,atoi@s+1
  4679  000380  EC42  F03E         	call	_atoi	;wreg free
  4680  000384  C008  F088         	movff	?_atoi,_prec
  4681  000388  C009  F089         	movff	?_atoi+1,_prec+1
  4682                           
  4683                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4684  00038C  EFD0  F001         	goto	l4555
  4685  000390                     l4553:
  4686  000390  FFFF               	dw	65535	; assembler added errata NOP
  4687                           
  4688                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  4689  000392  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4690  000396  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4691  00039A  2ADE               	incf	postinc2,f,c
  4692  00039C  0E00               	movlw	0
  4693  00039E  22DD               	addwfc	postdec2,f,c
  4694  0003A0                     l4555:
  4695  0003A0  FFFF               	dw	65535	; assembler added errata NOP
  4696  0003A2  0ED0               	movlw	208
  4697  0003A4  6E49               	movwf	??_vfpfcnvrt^0,c
  4698  0003A6  0EFF               	movlw	255
  4699  0003A8  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  4700  0003AA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4701  0003AE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4702  0003B2  CFDE FFF6          	movff	postinc2,tblptrl
  4703  0003B6  CFDD FFF7          	movff	postdec2,tblptrh
  4704  0003BA                     	if	0	;tblptru may be non-zero
  4705  0003BA                     	endif
  4706  0003BA                     	if	0	;tblptru may be non-zero
  4707  0003BA                     	endif
  4708  0003BA  0008               	tblrd		*
  4709  0003BC  FFFF               	dw	65535	; errata NOP
  4710  0003BE  50F5               	movf	tablat,w,c
  4711  0003C0  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4712  0003C2  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  4713  0003C4  5049               	movf	??_vfpfcnvrt^0,w,c
  4714  0003C6  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4715  0003C8  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  4716  0003CA  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4717  0003CC  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  4718  0003CE  E10B               	bnz	u5350
  4719  0003D0  0E0A               	movlw	10
  4720  0003D2  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4721  0003D4  A0D8               	btfss	status,0,c
  4722  0003D6  EFEF  F001         	goto	u5351
  4723  0003DA  EFF3  F001         	goto	u5350
  4724  0003DE                     u5351:
  4725  0003DE  FFFF               	dw	65535	; assembler added errata NOP
  4726  0003E0  0E01               	movlw	1
  4727  0003E2  EFF5  F001         	goto	u5360
  4728  0003E6                     u5350:
  4729  0003E6  FFFF               	dw	65535	; assembler added errata NOP
  4730  0003E8  0E00               	movlw	0
  4731  0003EA                     u5360:
  4732  0003EA  FFFF               	dw	65535	; assembler added errata NOP
  4733  0003EC  6E53               	movwf	_vfpfcnvrt$1720^0,c
  4734  0003EE  6A54               	clrf	(_vfpfcnvrt$1720+1)^0,c
  4735  0003F0  5053               	movf	_vfpfcnvrt$1720^0,w,c
  4736  0003F2  1054               	iorwf	(_vfpfcnvrt$1720+1)^0,w,c
  4737  0003F4  A4D8               	btfss	status,2,c
  4738  0003F6  EFFF  F001         	goto	u5371
  4739  0003FA  EF02  F002         	goto	u5370
  4740  0003FE                     u5371:
  4741  0003FE  FFFF               	dw	65535	; assembler added errata NOP
  4742  000400  EFC8  F001         	goto	l4553
  4743  000404                     u5370:
  4744  000404                     l4561:
  4745  000404  FFFF               	dw	65535	; assembler added errata NOP
  4746                           
  4747                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 792:         if (
      +                          *fmt[0] == 'c') {
  4748  000406  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4749  00040A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4750  00040E  CFDE FFF6          	movff	postinc2,tblptrl
  4751  000412  CFDD FFF7          	movff	postdec2,tblptrh
  4752  000416                     	if	0	;tblptru may be non-zero
  4753  000416                     	endif
  4754  000416                     	if	0	;tblptru may be non-zero
  4755  000416                     	endif
  4756  000416  0008               	tblrd		*
  4757  000418  FFFF               	dw	65535	; errata NOP
  4758  00041A  50F5               	movf	tablat,w,c
  4759  00041C  0A63               	xorlw	99
  4760  00041E  A4D8               	btfss	status,2,c
  4761  000420  EF14  F002         	goto	u5381
  4762  000424  EF17  F002         	goto	u5380
  4763  000428                     u5381:
  4764  000428  FFFF               	dw	65535	; assembler added errata NOP
  4765  00042A  EF3F  F002         	goto	l4569
  4766  00042E                     u5380:
  4767  00042E  FFFF               	dw	65535	; assembler added errata NOP
  4768  000430                     
  4769                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 793:             
      +                          ++*fmt;
  4770  000430  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4771  000434  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4772  000438  2ADE               	incf	postinc2,f,c
  4773  00043A  0E00               	movlw	0
  4774  00043C  22DD               	addwfc	postdec2,f,c
  4775                           
  4776                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 794:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4777  00043E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4778  000442  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4779  000446  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4780  00044A  0E02               	movlw	2
  4781  00044C  26DE               	addwf	postinc2,f,c
  4782  00044E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4783  000452  0E00               	movlw	0
  4784  000454  22DD               	addwfc	postdec2,f,c
  4785  000456  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4786  00045A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4787  00045E  50DF               	movf	indf2,w,c
  4788  000460  6E5F               	movwf	vfpfcnvrt@c^0,c
  4789  000462                     
  4790                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 795:             
      +                          return ctoa(fp, c);
  4791  000462  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  4792  000466  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4793  00046A  C05F  F01E         	movff	vfpfcnvrt@c,ctoa@c
  4794  00046E  EC7D  F033         	call	_ctoa	;wreg free
  4795  000472  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  4796  000476  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4797  00047A  EF2E  F00A         	goto	l1346
  4798  00047E                     l4569:
  4799  00047E  FFFF               	dw	65535	; assembler added errata NOP
  4800                           
  4801                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 802:         if (
      +                          !strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((s
      +                          izeof("hhi")/sizeof("hhi"[0]))-1))) {
  4802  000480  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4803  000484  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4804  000488  CFDE F001          	movff	postinc2,strncmp@_l
  4805  00048C  CFDD F002          	movff	postdec2,strncmp@_l+1
  4806  000490  0ECF               	movlw	low STR_14
  4807  000492  6E03               	movwf	strncmp@_r^0,c
  4808  000494  0E7F               	movlw	high STR_14
  4809  000496  6E04               	movwf	(strncmp@_r+1)^0,c
  4810  000498  0E00               	movlw	0
  4811  00049A  6E06               	movwf	(strncmp@n+1)^0,c
  4812  00049C  0E03               	movlw	3
  4813  00049E  6E05               	movwf	strncmp@n^0,c
  4814  0004A0  EC9F  F039         	call	_strncmp	;wreg free
  4815  0004A4  5001               	movf	?_strncmp^0,w,c
  4816  0004A6  1002               	iorwf	(?_strncmp+1)^0,w,c
  4817  0004A8  B4D8               	btfsc	status,2,c
  4818  0004AA  EF59  F002         	goto	u5391
  4819  0004AE  EF5C  F002         	goto	u5390
  4820  0004B2                     u5391:
  4821  0004B2  FFFF               	dw	65535	; assembler added errata NOP
  4822  0004B4  EF79  F002         	goto	l4573
  4823  0004B8                     u5390:
  4824  0004B8  FFFF               	dw	65535	; assembler added errata NOP
  4825  0004BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4826  0004BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4827  0004C2  CFDE F001          	movff	postinc2,strncmp@_l
  4828  0004C6  CFDD F002          	movff	postdec2,strncmp@_l+1
  4829  0004CA  0ED3               	movlw	low STR_18
  4830  0004CC  6E03               	movwf	strncmp@_r^0,c
  4831  0004CE  0E7F               	movlw	high STR_18
  4832  0004D0  6E04               	movwf	(strncmp@_r+1)^0,c
  4833  0004D2  0E00               	movlw	0
  4834  0004D4  6E06               	movwf	(strncmp@n+1)^0,c
  4835  0004D6  0E03               	movlw	3
  4836  0004D8  6E05               	movwf	strncmp@n^0,c
  4837  0004DA  EC9F  F039         	call	_strncmp	;wreg free
  4838  0004DE  5001               	movf	?_strncmp^0,w,c
  4839  0004E0  1002               	iorwf	(?_strncmp+1)^0,w,c
  4840  0004E2  A4D8               	btfss	status,2,c
  4841  0004E4  EF76  F002         	goto	u5401
  4842  0004E8  EF79  F002         	goto	u5400
  4843  0004EC                     u5401:
  4844  0004EC  FFFF               	dw	65535	; assembler added errata NOP
  4845  0004EE  EFBB  F002         	goto	l4579
  4846  0004F2                     u5400:
  4847  0004F2                     l4573:
  4848  0004F2  FFFF               	dw	65535	; assembler added errata NOP
  4849                           
  4850                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 803: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 805:             *fmt += ((si
      +                          zeof("hhd")/sizeof("hhd"[0]))-1);
  4851  0004F4  0E03               	movlw	3
  4852  0004F6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4853  0004FA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4854  0004FE  26DE               	addwf	postinc2,f,c
  4855  000500  0E00               	movlw	0
  4856  000502  22DD               	addwfc	postdec2,f,c
  4857                           
  4858                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 806:             
      +                          ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4859  000504  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4860  000508  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4861  00050C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4862  000510  0E02               	movlw	2
  4863  000512  26DE               	addwf	postinc2,f,c
  4864  000514  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4865  000518  0E00               	movlw	0
  4866  00051A  22DD               	addwfc	postdec2,f,c
  4867  00051C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4868  000520  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4869  000524  50DF               	movf	indf2,w,c
  4870  000526  6E55               	movwf	vfpfcnvrt@ll^0,c
  4871  000528  0E00               	movlw	0
  4872  00052A  BE55               	btfsc	vfpfcnvrt@ll^0,7,c
  4873  00052C  0EFF               	movlw	-1
  4874  00052E  6E56               	movwf	(vfpfcnvrt@ll+1)^0,c
  4875  000530  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  4876  000532  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  4877  000534  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  4878  000536  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  4879  000538  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  4880  00053A  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  4881  00053C                     l4575:
  4882  00053C  FFFF               	dw	65535	; assembler added errata NOP
  4883                           
  4884                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 808:             
      +                          return dtoa(fp, ll);
  4885  00053E  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  4886  000542  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4887  000546  C055  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  4888  00054A  C056  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4889  00054E  C057  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4890  000552  C058  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4891  000556  C059  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4892  00055A  C05A  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4893  00055E  C05B  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4894  000562  C05C  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4895  000566  EC39  F018         	call	_dtoa	;wreg free
  4896  00056A  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  4897  00056E  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4898  000572  EF2E  F00A         	goto	l1346
  4899  000576                     l4579:
  4900  000576  FFFF               	dw	65535	; assembler added errata NOP
  4901                           
  4902                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          !strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeo
      +                          f("hi")/sizeof("hi"[0]))-1))) {
  4903  000578  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4904  00057C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4905  000580  CFDE F001          	movff	postinc2,strncmp@_l
  4906  000584  CFDD F002          	movff	postdec2,strncmp@_l+1
  4907  000588  0ED0               	movlw	low (STR_14+1)
  4908  00058A  6E03               	movwf	strncmp@_r^0,c
  4909  00058C  0E7F               	movlw	high (STR_14+1)
  4910  00058E  6E04               	movwf	(strncmp@_r+1)^0,c
  4911  000590  0E00               	movlw	0
  4912  000592  6E06               	movwf	(strncmp@n+1)^0,c
  4913  000594  0E02               	movlw	2
  4914  000596  6E05               	movwf	strncmp@n^0,c
  4915  000598  EC9F  F039         	call	_strncmp	;wreg free
  4916  00059C  5001               	movf	?_strncmp^0,w,c
  4917  00059E  1002               	iorwf	(?_strncmp+1)^0,w,c
  4918  0005A0  B4D8               	btfsc	status,2,c
  4919  0005A2  EFD5  F002         	goto	u5411
  4920  0005A6  EFD8  F002         	goto	u5410
  4921  0005AA                     u5411:
  4922  0005AA  FFFF               	dw	65535	; assembler added errata NOP
  4923  0005AC  EFF5  F002         	goto	l4583
  4924  0005B0                     u5410:
  4925  0005B0  FFFF               	dw	65535	; assembler added errata NOP
  4926  0005B2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4927  0005B6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4928  0005BA  CFDE F001          	movff	postinc2,strncmp@_l
  4929  0005BE  CFDD F002          	movff	postdec2,strncmp@_l+1
  4930  0005C2  0ED4               	movlw	low (STR_18+1)
  4931  0005C4  6E03               	movwf	strncmp@_r^0,c
  4932  0005C6  0E7F               	movlw	high (STR_18+1)
  4933  0005C8  6E04               	movwf	(strncmp@_r+1)^0,c
  4934  0005CA  0E00               	movlw	0
  4935  0005CC  6E06               	movwf	(strncmp@n+1)^0,c
  4936  0005CE  0E02               	movlw	2
  4937  0005D0  6E05               	movwf	strncmp@n^0,c
  4938  0005D2  EC9F  F039         	call	_strncmp	;wreg free
  4939  0005D6  5001               	movf	?_strncmp^0,w,c
  4940  0005D8  1002               	iorwf	(?_strncmp+1)^0,w,c
  4941  0005DA  A4D8               	btfss	status,2,c
  4942  0005DC  EFF2  F002         	goto	u5421
  4943  0005E0  EFF5  F002         	goto	u5420
  4944  0005E4                     u5421:
  4945  0005E4  FFFF               	dw	65535	; assembler added errata NOP
  4946  0005E6  EF1D  F003         	goto	l4589
  4947  0005EA                     u5420:
  4948  0005EA                     l4583:
  4949  0005EA  FFFF               	dw	65535	; assembler added errata NOP
  4950                           
  4951                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 815: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 817:             *fmt += ((si
      +                          zeof("hd")/sizeof("hd"[0]))-1);
  4952  0005EC  0E02               	movlw	2
  4953  0005EE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4954  0005F2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4955  0005F6  26DE               	addwf	postinc2,f,c
  4956  0005F8  0E00               	movlw	0
  4957  0005FA  22DD               	addwfc	postdec2,f,c
  4958                           
  4959                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 818:             
      +                          ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4960  0005FC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4961  000600  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4962  000604  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4963  000608  0E02               	movlw	2
  4964  00060A  26DE               	addwf	postinc2,f,c
  4965  00060C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4966  000610  0E00               	movlw	0
  4967  000612  22DD               	addwfc	postdec2,f,c
  4968  000614  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4969  000618  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4970  00061C  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  4971  000620  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  4972  000624  0E00               	movlw	0
  4973  000626  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4974  000628  0EFF               	movlw	-1
  4975  00062A  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  4976  00062C  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  4977  00062E  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  4978  000630  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  4979  000632  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  4980  000634  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  4981  000636  EF9E  F002         	goto	l4575
  4982  00063A                     l4589:
  4983  00063A  FFFF               	dw	65535	; assembler added errata NOP
  4984                           
  4985                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4986  00063C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4987  000640  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4988  000644  CFDE FFF6          	movff	postinc2,tblptrl
  4989  000648  CFDD FFF7          	movff	postdec2,tblptrh
  4990  00064C                     	if	0	;tblptru may be non-zero
  4991  00064C                     	endif
  4992  00064C                     	if	0	;tblptru may be non-zero
  4993  00064C                     	endif
  4994  00064C  0008               	tblrd		*
  4995  00064E  FFFF               	dw	65535	; errata NOP
  4996  000650  50F5               	movf	tablat,w,c
  4997  000652  0A64               	xorlw	100
  4998  000654  B4D8               	btfsc	status,2,c
  4999  000656  EF2F  F003         	goto	u5431
  5000  00065A  EF32  F003         	goto	u5430
  5001  00065E                     u5431:
  5002  00065E  FFFF               	dw	65535	; assembler added errata NOP
  5003  000660  EF47  F003         	goto	l4593
  5004  000664                     u5430:
  5005  000664  FFFF               	dw	65535	; assembler added errata NOP
  5006  000666  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5007  00066A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5008  00066E  CFDE FFF6          	movff	postinc2,tblptrl
  5009  000672  CFDD FFF7          	movff	postdec2,tblptrh
  5010  000676                     	if	0	;tblptru may be non-zero
  5011  000676                     	endif
  5012  000676                     	if	0	;tblptru may be non-zero
  5013  000676                     	endif
  5014  000676  0008               	tblrd		*
  5015  000678  FFFF               	dw	65535	; errata NOP
  5016  00067A  50F5               	movf	tablat,w,c
  5017  00067C  0A69               	xorlw	105
  5018  00067E  A4D8               	btfss	status,2,c
  5019  000680  EF44  F003         	goto	u5441
  5020  000684  EF47  F003         	goto	u5440
  5021  000688                     u5441:
  5022  000688  FFFF               	dw	65535	; assembler added errata NOP
  5023  00068A  EF6E  F003         	goto	l4599
  5024  00068E                     u5440:
  5025  00068E                     l4593:
  5026  00068E  FFFF               	dw	65535	; assembler added errata NOP
  5027                           
  5028                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  5029  000690  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5030  000694  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5031  000698  2ADE               	incf	postinc2,f,c
  5032  00069A  0E00               	movlw	0
  5033  00069C  22DD               	addwfc	postdec2,f,c
  5034                           
  5035                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5036  00069E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5037  0006A2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5038  0006A6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5039  0006AA  0E02               	movlw	2
  5040  0006AC  26DE               	addwf	postinc2,f,c
  5041  0006AE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5042  0006B2  0E00               	movlw	0
  5043  0006B4  22DD               	addwfc	postdec2,f,c
  5044  0006B6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5045  0006BA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5046  0006BE  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  5047  0006C2  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  5048  0006C6  0E00               	movlw	0
  5049  0006C8  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  5050  0006CA  0EFF               	movlw	-1
  5051  0006CC  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  5052  0006CE  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  5053  0006D0  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  5054  0006D2  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  5055  0006D4  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  5056  0006D6  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  5057  0006D8  EF9E  F002         	goto	l4575
  5058  0006DC                     l4599:
  5059  0006DC  FFFF               	dw	65535	; assembler added errata NOP
  5060                           
  5061                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 883:         if (
      +                          !strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeo
      +                          f("zi")/sizeof("zi"[0]))-1))) {
  5062  0006DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5063  0006E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5064  0006E6  CFDE F001          	movff	postinc2,strncmp@_l
  5065  0006EA  CFDD F002          	movff	postdec2,strncmp@_l+1
  5066  0006EE  0EEA               	movlw	low STR_32
  5067  0006F0  6E03               	movwf	strncmp@_r^0,c
  5068  0006F2  0E7F               	movlw	high STR_32
  5069  0006F4  6E04               	movwf	(strncmp@_r+1)^0,c
  5070  0006F6  0E00               	movlw	0
  5071  0006F8  6E06               	movwf	(strncmp@n+1)^0,c
  5072  0006FA  0E02               	movlw	2
  5073  0006FC  6E05               	movwf	strncmp@n^0,c
  5074  0006FE  EC9F  F039         	call	_strncmp	;wreg free
  5075  000702  5001               	movf	?_strncmp^0,w,c
  5076  000704  1002               	iorwf	(?_strncmp+1)^0,w,c
  5077  000706  B4D8               	btfsc	status,2,c
  5078  000708  EF88  F003         	goto	u5451
  5079  00070C  EF8B  F003         	goto	u5450
  5080  000710                     u5451:
  5081  000710  FFFF               	dw	65535	; assembler added errata NOP
  5082  000712  EFA8  F003         	goto	l4603
  5083  000716                     u5450:
  5084  000716  FFFF               	dw	65535	; assembler added errata NOP
  5085  000718  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5086  00071C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5087  000720  CFDE F001          	movff	postinc2,strncmp@_l
  5088  000724  CFDD F002          	movff	postdec2,strncmp@_l+1
  5089  000728  0EED               	movlw	low STR_36
  5090  00072A  6E03               	movwf	strncmp@_r^0,c
  5091  00072C  0E7F               	movlw	high STR_36
  5092  00072E  6E04               	movwf	(strncmp@_r+1)^0,c
  5093  000730  0E00               	movlw	0
  5094  000732  6E06               	movwf	(strncmp@n+1)^0,c
  5095  000734  0E02               	movlw	2
  5096  000736  6E05               	movwf	strncmp@n^0,c
  5097  000738  EC9F  F039         	call	_strncmp	;wreg free
  5098  00073C  5001               	movf	?_strncmp^0,w,c
  5099  00073E  1002               	iorwf	(?_strncmp+1)^0,w,c
  5100  000740  A4D8               	btfss	status,2,c
  5101  000742  EFA5  F003         	goto	u5461
  5102  000746  EFA8  F003         	goto	u5460
  5103  00074A                     u5461:
  5104  00074A  FFFF               	dw	65535	; assembler added errata NOP
  5105  00074C  EFD1  F003         	goto	l4609
  5106  000750                     u5460:
  5107  000750                     l4603:
  5108  000750  FFFF               	dw	65535	; assembler added errata NOP
  5109                           
  5110                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 884: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 886:             *fmt += ((si
      +                          zeof("zd")/sizeof("zd"[0]))-1);
  5111  000752  0E02               	movlw	2
  5112  000754  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5113  000758  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5114  00075C  26DE               	addwf	postinc2,f,c
  5115  00075E  0E00               	movlw	0
  5116  000760  22DD               	addwfc	postdec2,f,c
  5117                           
  5118                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 887:             
      +                          ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5119  000762  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5120  000766  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5121  00076A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5122  00076E  0E02               	movlw	2
  5123  000770  26DE               	addwf	postinc2,f,c
  5124  000772  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5125  000776  0E00               	movlw	0
  5126  000778  22DD               	addwfc	postdec2,f,c
  5127  00077A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5128  00077E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5129  000782  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5130  000786  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5131  00078A  C04B  F055         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  5132  00078E  C04C  F056         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  5133  000792  6A57               	clrf	(vfpfcnvrt@ll+2)^0,c
  5134  000794  6A58               	clrf	(vfpfcnvrt@ll+3)^0,c
  5135  000796  6A59               	clrf	(vfpfcnvrt@ll+4)^0,c
  5136  000798  6A5A               	clrf	(vfpfcnvrt@ll+5)^0,c
  5137  00079A  6A5B               	clrf	(vfpfcnvrt@ll+6)^0,c
  5138  00079C  6A5C               	clrf	(vfpfcnvrt@ll+7)^0,c
  5139  00079E  EF9E  F002         	goto	l4575
  5140  0007A2                     l4609:
  5141  0007A2  FFFF               	dw	65535	; assembler added errata NOP
  5142                           
  5143                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 969:         if (
      +                          !strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  5144  0007A4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5145  0007A8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5146  0007AC  CFDE F001          	movff	postinc2,strncmp@_l
  5147  0007B0  CFDD F002          	movff	postdec2,strncmp@_l+1
  5148  0007B4  0EDB               	movlw	low STR_41
  5149  0007B6  6E03               	movwf	strncmp@_r^0,c
  5150  0007B8  0E7F               	movlw	high STR_41
  5151  0007BA  6E04               	movwf	(strncmp@_r+1)^0,c
  5152  0007BC  0E00               	movlw	0
  5153  0007BE  6E06               	movwf	(strncmp@n+1)^0,c
  5154  0007C0  0E03               	movlw	3
  5155  0007C2  6E05               	movwf	strncmp@n^0,c
  5156  0007C4  EC9F  F039         	call	_strncmp	;wreg free
  5157  0007C8  5001               	movf	?_strncmp^0,w,c
  5158  0007CA  1002               	iorwf	(?_strncmp+1)^0,w,c
  5159  0007CC  A4D8               	btfss	status,2,c
  5160  0007CE  EFEB  F003         	goto	u5471
  5161  0007D2  EFEE  F003         	goto	u5470
  5162  0007D6                     u5471:
  5163  0007D6  FFFF               	dw	65535	; assembler added errata NOP
  5164  0007D8  EF2F  F004         	goto	l4617
  5165  0007DC                     u5470:
  5166  0007DC  FFFF               	dw	65535	; assembler added errata NOP
  5167  0007DE                     
  5168                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 971:             
      +                          *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  5169  0007DE  0E03               	movlw	3
  5170  0007E0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5171  0007E4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5172  0007E8  26DE               	addwf	postinc2,f,c
  5173  0007EA  0E00               	movlw	0
  5174  0007EC  22DD               	addwfc	postdec2,f,c
  5175                           
  5176                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 972:             
      +                          llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5177  0007EE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5178  0007F2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5179  0007F6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5180  0007FA  0E02               	movlw	2
  5181  0007FC  26DE               	addwf	postinc2,f,c
  5182  0007FE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5183  000802  0E00               	movlw	0
  5184  000804  22DD               	addwfc	postdec2,f,c
  5185  000806  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5186  00080A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5187  00080E  50DF               	movf	indf2,w,c
  5188  000810  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  5189  000812  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  5190  000814  6E60               	movwf	vfpfcnvrt@llu^0,c
  5191  000816  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  5192  000818  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5193  00081A  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5194  00081C  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5195  00081E  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5196  000820  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5197  000822  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5198  000824                     l4613:
  5199  000824  FFFF               	dw	65535	; assembler added errata NOP
  5200                           
  5201                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 974:             
      +                          return otoa(fp, llu);
  5202  000826  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  5203  00082A  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  5204  00082E  C060  F01E         	movff	vfpfcnvrt@llu,otoa@d
  5205  000832  C061  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  5206  000836  C062  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  5207  00083A  C063  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  5208  00083E  C064  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  5209  000842  C065  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  5210  000846  C066  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  5211  00084A  C067  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  5212  00084E  EC81  F01C         	call	_otoa	;wreg free
  5213  000852  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  5214  000856  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  5215  00085A  EF2E  F00A         	goto	l1346
  5216  00085E                     l4617:
  5217  00085E  FFFF               	dw	65535	; assembler added errata NOP
  5218                           
  5219                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 980:         if (
      +                          !strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  5220  000860  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5221  000864  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5222  000868  CFDE F001          	movff	postinc2,strncmp@_l
  5223  00086C  CFDD F002          	movff	postdec2,strncmp@_l+1
  5224  000870  0EDC               	movlw	low (STR_41+1)
  5225  000872  6E03               	movwf	strncmp@_r^0,c
  5226  000874  0E7F               	movlw	high (STR_41+1)
  5227  000876  6E04               	movwf	(strncmp@_r+1)^0,c
  5228  000878  0E00               	movlw	0
  5229  00087A  6E06               	movwf	(strncmp@n+1)^0,c
  5230  00087C  0E02               	movlw	2
  5231  00087E  6E05               	movwf	strncmp@n^0,c
  5232  000880  EC9F  F039         	call	_strncmp	;wreg free
  5233  000884  5001               	movf	?_strncmp^0,w,c
  5234  000886  1002               	iorwf	(?_strncmp+1)^0,w,c
  5235  000888  A4D8               	btfss	status,2,c
  5236  00088A  EF49  F004         	goto	u5481
  5237  00088E  EF4C  F004         	goto	u5480
  5238  000892                     u5481:
  5239  000892  FFFF               	dw	65535	; assembler added errata NOP
  5240  000894  EF75  F004         	goto	l4625
  5241  000898                     u5480:
  5242  000898  FFFF               	dw	65535	; assembler added errata NOP
  5243  00089A                     
  5244                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 982:             
      +                          *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  5245  00089A  0E02               	movlw	2
  5246  00089C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5247  0008A0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5248  0008A4  26DE               	addwf	postinc2,f,c
  5249  0008A6  0E00               	movlw	0
  5250  0008A8  22DD               	addwfc	postdec2,f,c
  5251                           
  5252                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 983:             
      +                          llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5253  0008AA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5254  0008AE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5255  0008B2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5256  0008B6  0E02               	movlw	2
  5257  0008B8  26DE               	addwf	postinc2,f,c
  5258  0008BA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5259  0008BE  0E00               	movlw	0
  5260  0008C0  22DD               	addwfc	postdec2,f,c
  5261  0008C2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5262  0008C6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5263  0008CA  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5264  0008CE  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5265  0008D2  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5266  0008D6  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5267  0008DA  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5268  0008DC  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5269  0008DE  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5270  0008E0  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5271  0008E2  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5272  0008E4  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5273  0008E6  EF12  F004         	goto	l4613
  5274  0008EA                     l4625:
  5275  0008EA  FFFF               	dw	65535	; assembler added errata NOP
  5276                           
  5277                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 990:         if (
      +                          *fmt[0] == 'o') {
  5278  0008EC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5279  0008F0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5280  0008F4  CFDE FFF6          	movff	postinc2,tblptrl
  5281  0008F8  CFDD FFF7          	movff	postdec2,tblptrh
  5282  0008FC                     	if	0	;tblptru may be non-zero
  5283  0008FC                     	endif
  5284  0008FC                     	if	0	;tblptru may be non-zero
  5285  0008FC                     	endif
  5286  0008FC  0008               	tblrd		*
  5287  0008FE  FFFF               	dw	65535	; errata NOP
  5288  000900  50F5               	movf	tablat,w,c
  5289  000902  0A6F               	xorlw	111
  5290  000904  A4D8               	btfss	status,2,c
  5291  000906  EF87  F004         	goto	u5491
  5292  00090A  EF8A  F004         	goto	u5490
  5293  00090E                     u5491:
  5294  00090E  FFFF               	dw	65535	; assembler added errata NOP
  5295  000910  EFB2  F004         	goto	l4633
  5296  000914                     u5490:
  5297  000914  FFFF               	dw	65535	; assembler added errata NOP
  5298  000916                     
  5299                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 992:             
      +                          ++*fmt;
  5300  000916  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5301  00091A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5302  00091E  2ADE               	incf	postinc2,f,c
  5303  000920  0E00               	movlw	0
  5304  000922  22DD               	addwfc	postdec2,f,c
  5305                           
  5306                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 993:             
      +                          llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int
      +                          )0));
  5307  000924  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5308  000928  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5309  00092C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5310  000930  0E02               	movlw	2
  5311  000932  26DE               	addwf	postinc2,f,c
  5312  000934  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5313  000938  0E00               	movlw	0
  5314  00093A  22DD               	addwfc	postdec2,f,c
  5315  00093C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5316  000940  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5317  000944  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5318  000948  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5319  00094C  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5320  000950  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5321  000954  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5322  000956  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5323  000958  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5324  00095A  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5325  00095C  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5326  00095E  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5327  000960  EF12  F004         	goto	l4613
  5328  000964                     l4633:
  5329  000964  FFFF               	dw	65535	; assembler added errata NOP
  5330                           
  5331                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1044:         if 
      +                          (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  5332  000966  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5333  00096A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5334  00096E  CFDE F001          	movff	postinc2,strncmp@_l
  5335  000972  CFDD F002          	movff	postdec2,strncmp@_l+1
  5336  000976  0EF3               	movlw	low STR_51
  5337  000978  6E03               	movwf	strncmp@_r^0,c
  5338  00097A  0E7F               	movlw	high STR_51
  5339  00097C  6E04               	movwf	(strncmp@_r+1)^0,c
  5340  00097E  0E00               	movlw	0
  5341  000980  6E06               	movwf	(strncmp@n+1)^0,c
  5342  000982  0E02               	movlw	2
  5343  000984  6E05               	movwf	strncmp@n^0,c
  5344  000986  EC9F  F039         	call	_strncmp	;wreg free
  5345  00098A  5001               	movf	?_strncmp^0,w,c
  5346  00098C  1002               	iorwf	(?_strncmp+1)^0,w,c
  5347  00098E  A4D8               	btfss	status,2,c
  5348  000990  EFCC  F004         	goto	u5501
  5349  000994  EFCF  F004         	goto	u5500
  5350  000998                     u5501:
  5351  000998  FFFF               	dw	65535	; assembler added errata NOP
  5352  00099A  EFF8  F004         	goto	l4641
  5353  00099E                     u5500:
  5354  00099E  FFFF               	dw	65535	; assembler added errata NOP
  5355  0009A0                     
  5356                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1046:            
      +                           *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  5357  0009A0  0E02               	movlw	2
  5358  0009A2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5359  0009A6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5360  0009AA  26DE               	addwf	postinc2,f,c
  5361  0009AC  0E00               	movlw	0
  5362  0009AE  22DD               	addwfc	postdec2,f,c
  5363                           
  5364                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1047:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5365  0009B0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5366  0009B4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5367  0009B8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5368  0009BC  0E02               	movlw	2
  5369  0009BE  26DE               	addwf	postinc2,f,c
  5370  0009C0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5371  0009C4  0E00               	movlw	0
  5372  0009C6  22DD               	addwfc	postdec2,f,c
  5373  0009C8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5374  0009CC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5375  0009D0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5376  0009D4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5377  0009D8  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5378  0009DC  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5379  0009E0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5380  0009E2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5381  0009E4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5382  0009E6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5383  0009E8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5384  0009EA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5385  0009EC  EF12  F004         	goto	l4613
  5386  0009F0                     l4641:
  5387  0009F0  FFFF               	dw	65535	; assembler added errata NOP
  5388                           
  5389                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1058:         if 
      +                          (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  5390  0009F2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5391  0009F6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5392  0009FA  CFDE F001          	movff	postinc2,strncmp@_l
  5393  0009FE  CFDD F002          	movff	postdec2,strncmp@_l+1
  5394  000A02  0ED7               	movlw	low STR_56
  5395  000A04  6E03               	movwf	strncmp@_r^0,c
  5396  000A06  0E7F               	movlw	high STR_56
  5397  000A08  6E04               	movwf	(strncmp@_r+1)^0,c
  5398  000A0A  0E00               	movlw	0
  5399  000A0C  6E06               	movwf	(strncmp@n+1)^0,c
  5400  000A0E  0E03               	movlw	3
  5401  000A10  6E05               	movwf	strncmp@n^0,c
  5402  000A12  EC9F  F039         	call	_strncmp	;wreg free
  5403  000A16  5001               	movf	?_strncmp^0,w,c
  5404  000A18  1002               	iorwf	(?_strncmp+1)^0,w,c
  5405  000A1A  A4D8               	btfss	status,2,c
  5406  000A1C  EF12  F005         	goto	u5511
  5407  000A20  EF15  F005         	goto	u5510
  5408  000A24                     u5511:
  5409  000A24  FFFF               	dw	65535	; assembler added errata NOP
  5410  000A26  EF4B  F005         	goto	l4651
  5411  000A2A                     u5510:
  5412  000A2A  FFFF               	dw	65535	; assembler added errata NOP
  5413  000A2C                     
  5414                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1060:            
      +                           *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  5415  000A2C  0E03               	movlw	3
  5416  000A2E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5417  000A32  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5418  000A36  26DE               	addwf	postinc2,f,c
  5419  000A38  0E00               	movlw	0
  5420  000A3A  22DD               	addwfc	postdec2,f,c
  5421                           
  5422                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1061:            
      +                           vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5423  000A3C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5424  000A40  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5425  000A44  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5426  000A48  0E02               	movlw	2
  5427  000A4A  26DE               	addwf	postinc2,f,c
  5428  000A4C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5429  000A50  0E00               	movlw	0
  5430  000A52  22DD               	addwfc	postdec2,f,c
  5431  000A54  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5432  000A58  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5433  000A5C  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  5434  000A60  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  5435  000A64                     
  5436                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1062:            
      +                           *(char *)vp = (char)nout;
  5437  000A64  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  5438  000A68  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  5439  000A6C  6AF8               	clrf	tblptru,c
  5440  000A6E  0E05               	movlw	(high __ramtop+-1)
  5441  000A70  64F7               	cpfsgt	tblptrh,c
  5442  000A72  D004               	bra	u5527
  5443  000A74  C084  FFF5         	movff	_nout,tablat
  5444  000A78  000C               	tblwt		*
  5445  000A7A  D006               	bra	u5520
  5446  000A7C                     u5527:
  5447  000A7C  CFF6 FFE1          	movff	tblptrl,fsr1l
  5448  000A80  CFF7 FFE2          	movff	tblptrh,fsr1h
  5449  000A84  C084  FFE7         	movff	_nout,indf1
  5450  000A88                     u5520:
  5451  000A88                     l4647:
  5452  000A88  FFFF               	dw	65535	; assembler added errata NOP
  5453                           
  5454                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1063:            
      +                           return 0;
  5455  000A8A  0E00               	movlw	0
  5456  000A8C  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  5457  000A8E  0E00               	movlw	0
  5458  000A90  6E43               	movwf	?_vfpfcnvrt^0,c
  5459  000A92  EF2E  F00A         	goto	l1346
  5460  000A96                     l4651:
  5461  000A96  FFFF               	dw	65535	; assembler added errata NOP
  5462                           
  5463                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1068:         if 
      +                          (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  5464  000A98  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5465  000A9C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5466  000AA0  CFDE F001          	movff	postinc2,strncmp@_l
  5467  000AA4  CFDD F002          	movff	postdec2,strncmp@_l+1
  5468  000AA8  0ED8               	movlw	low (STR_56+1)
  5469  000AAA  6E03               	movwf	strncmp@_r^0,c
  5470  000AAC  0E7F               	movlw	high (STR_56+1)
  5471  000AAE  6E04               	movwf	(strncmp@_r+1)^0,c
  5472  000AB0  0E00               	movlw	0
  5473  000AB2  6E06               	movwf	(strncmp@n+1)^0,c
  5474  000AB4  0E02               	movlw	2
  5475  000AB6  6E05               	movwf	strncmp@n^0,c
  5476  000AB8  EC9F  F039         	call	_strncmp	;wreg free
  5477  000ABC  5001               	movf	?_strncmp^0,w,c
  5478  000ABE  1002               	iorwf	(?_strncmp+1)^0,w,c
  5479  000AC0  A4D8               	btfss	status,2,c
  5480  000AC2  EF65  F005         	goto	u5531
  5481  000AC6  EF68  F005         	goto	u5530
  5482  000ACA                     u5531:
  5483  000ACA  FFFF               	dw	65535	; assembler added errata NOP
  5484  000ACC  EF9E  F005         	goto	l4661
  5485  000AD0                     u5530:
  5486  000AD0  FFFF               	dw	65535	; assembler added errata NOP
  5487  000AD2                     
  5488                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1070:            
      +                           *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  5489  000AD2  0E02               	movlw	2
  5490  000AD4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5491  000AD8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5492  000ADC  26DE               	addwf	postinc2,f,c
  5493  000ADE  0E00               	movlw	0
  5494  000AE0  22DD               	addwfc	postdec2,f,c
  5495                           
  5496                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1071:            
      +                           vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  5497  000AE2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5498  000AE6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5499  000AEA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5500  000AEE  0E02               	movlw	2
  5501  000AF0  26DE               	addwf	postinc2,f,c
  5502  000AF2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5503  000AF6  0E00               	movlw	0
  5504  000AF8  22DD               	addwfc	postdec2,f,c
  5505  000AFA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5506  000AFE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5507  000B02  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  5508  000B06  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  5509  000B0A                     
  5510                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1072:            
      +                           *(short *)vp = (short)nout;
  5511  000B0A  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  5512  000B0E  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  5513  000B12  6AF8               	clrf	tblptru,c
  5514  000B14  0E05               	movlw	(high __ramtop+-1)
  5515  000B16  64F7               	cpfsgt	tblptrh,c
  5516  000B18  D007               	bra	u5547
  5517  000B1A  C084  FFF5         	movff	_nout,tablat
  5518  000B1E  000D               	tblwt		*+
  5519  000B20  C085  FFF5         	movff	_nout+1,tablat
  5520  000B24  000C               	tblwt		*
  5521  000B26  D008               	bra	u5540
  5522  000B28                     u5547:
  5523  000B28  CFF6 FFE1          	movff	tblptrl,fsr1l
  5524  000B2C  CFF7 FFE2          	movff	tblptrh,fsr1h
  5525  000B30  C084  FFE6         	movff	_nout,postinc1
  5526  000B34  C085  FFE7         	movff	_nout+1,indf1
  5527  000B38                     u5540:
  5528  000B38  EF44  F005         	goto	l4647
  5529  000B3C                     l4661:
  5530  000B3C  FFFF               	dw	65535	; assembler added errata NOP
  5531                           
  5532                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1077:         if 
      +                          (*fmt[0] == 'n') {
  5533  000B3E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5534  000B42  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5535  000B46  CFDE FFF6          	movff	postinc2,tblptrl
  5536  000B4A  CFDD FFF7          	movff	postdec2,tblptrh
  5537  000B4E                     	if	0	;tblptru may be non-zero
  5538  000B4E                     	endif
  5539  000B4E                     	if	0	;tblptru may be non-zero
  5540  000B4E                     	endif
  5541  000B4E  0008               	tblrd		*
  5542  000B50  FFFF               	dw	65535	; errata NOP
  5543  000B52  50F5               	movf	tablat,w,c
  5544  000B54  0A6E               	xorlw	110
  5545  000B56  A4D8               	btfss	status,2,c
  5546  000B58  EFB0  F005         	goto	u5551
  5547  000B5C  EFB3  F005         	goto	u5550
  5548  000B60                     u5551:
  5549  000B60  FFFF               	dw	65535	; assembler added errata NOP
  5550  000B62  EFE8  F005         	goto	l4671
  5551  000B66                     u5550:
  5552  000B66  FFFF               	dw	65535	; assembler added errata NOP
  5553  000B68                     
  5554                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1078:            
      +                           ++*fmt;
  5555  000B68  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5556  000B6C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5557  000B70  2ADE               	incf	postinc2,f,c
  5558  000B72  0E00               	movlw	0
  5559  000B74  22DD               	addwfc	postdec2,f,c
  5560                           
  5561                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1079:            
      +                           vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  5562  000B76  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5563  000B7A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5564  000B7E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5565  000B82  0E02               	movlw	2
  5566  000B84  26DE               	addwf	postinc2,f,c
  5567  000B86  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5568  000B8A  0E00               	movlw	0
  5569  000B8C  22DD               	addwfc	postdec2,f,c
  5570  000B8E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5571  000B92  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5572  000B96  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  5573  000B9A  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  5574  000B9E                     
  5575                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1080:            
      +                           *(int *)vp = nout;
  5576  000B9E  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  5577  000BA2  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  5578  000BA6  6AF8               	clrf	tblptru,c
  5579  000BA8  0E05               	movlw	(high __ramtop+-1)
  5580  000BAA  64F7               	cpfsgt	tblptrh,c
  5581  000BAC  D007               	bra	u5567
  5582  000BAE  C084  FFF5         	movff	_nout,tablat
  5583  000BB2  000D               	tblwt		*+
  5584  000BB4  C085  FFF5         	movff	_nout+1,tablat
  5585  000BB8  000C               	tblwt		*
  5586  000BBA  D008               	bra	u5560
  5587  000BBC                     u5567:
  5588  000BBC  CFF6 FFE1          	movff	tblptrl,fsr1l
  5589  000BC0  CFF7 FFE2          	movff	tblptrh,fsr1h
  5590  000BC4  C084  FFE6         	movff	_nout,postinc1
  5591  000BC8  C085  FFE7         	movff	_nout+1,indf1
  5592  000BCC                     u5560:
  5593  000BCC  EF44  F005         	goto	l4647
  5594  000BD0                     l4671:
  5595  000BD0  FFFF               	dw	65535	; assembler added errata NOP
  5596                           
  5597                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1125:         if 
      +                          (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  5598  000BD2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5599  000BD6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5600  000BDA  CFDE F001          	movff	postinc2,strncmp@_l
  5601  000BDE  CFDD F002          	movff	postdec2,strncmp@_l+1
  5602  000BE2  0EF0               	movlw	low STR_66
  5603  000BE4  6E03               	movwf	strncmp@_r^0,c
  5604  000BE6  0E7F               	movlw	high STR_66
  5605  000BE8  6E04               	movwf	(strncmp@_r+1)^0,c
  5606  000BEA  0E00               	movlw	0
  5607  000BEC  6E06               	movwf	(strncmp@n+1)^0,c
  5608  000BEE  0E02               	movlw	2
  5609  000BF0  6E05               	movwf	strncmp@n^0,c
  5610  000BF2  EC9F  F039         	call	_strncmp	;wreg free
  5611  000BF6  5001               	movf	?_strncmp^0,w,c
  5612  000BF8  1002               	iorwf	(?_strncmp+1)^0,w,c
  5613  000BFA  A4D8               	btfss	status,2,c
  5614  000BFC  EF02  F006         	goto	u5571
  5615  000C00  EF05  F006         	goto	u5570
  5616  000C04                     u5571:
  5617  000C04  FFFF               	dw	65535	; assembler added errata NOP
  5618  000C06  EF3B  F006         	goto	l4681
  5619  000C0A                     u5570:
  5620  000C0A  FFFF               	dw	65535	; assembler added errata NOP
  5621  000C0C                     
  5622                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1127:            
      +                           *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  5623  000C0C  0E02               	movlw	2
  5624  000C0E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5625  000C12  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5626  000C16  26DE               	addwf	postinc2,f,c
  5627  000C18  0E00               	movlw	0
  5628  000C1A  22DD               	addwfc	postdec2,f,c
  5629                           
  5630                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1128:            
      +                           vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  5631  000C1C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5632  000C20  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5633  000C24  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5634  000C28  0E02               	movlw	2
  5635  000C2A  26DE               	addwf	postinc2,f,c
  5636  000C2C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5637  000C30  0E00               	movlw	0
  5638  000C32  22DD               	addwfc	postdec2,f,c
  5639  000C34  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5640  000C38  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5641  000C3C  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  5642  000C40  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  5643  000C44                     
  5644                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1129:            
      +                           *(size_t *)vp = (size_t)nout;
  5645  000C44  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  5646  000C48  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  5647  000C4C  6AF8               	clrf	tblptru,c
  5648  000C4E  0E05               	movlw	(high __ramtop+-1)
  5649  000C50  64F7               	cpfsgt	tblptrh,c
  5650  000C52  D007               	bra	u5587
  5651  000C54  C084  FFF5         	movff	_nout,tablat
  5652  000C58  000D               	tblwt		*+
  5653  000C5A  C085  FFF5         	movff	_nout+1,tablat
  5654  000C5E  000C               	tblwt		*
  5655  000C60  D008               	bra	u5580
  5656  000C62                     u5587:
  5657  000C62  CFF6 FFE1          	movff	tblptrl,fsr1l
  5658  000C66  CFF7 FFE2          	movff	tblptrh,fsr1h
  5659  000C6A  C084  FFE6         	movff	_nout,postinc1
  5660  000C6E  C085  FFE7         	movff	_nout+1,indf1
  5661  000C72                     u5580:
  5662  000C72  EF44  F005         	goto	l4647
  5663  000C76                     l4681:
  5664  000C76  FFFF               	dw	65535	; assembler added errata NOP
  5665                           
  5666                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1138:         if 
      +                          (*fmt[0] == 'p') {
  5667  000C78  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5668  000C7C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5669  000C80  CFDE FFF6          	movff	postinc2,tblptrl
  5670  000C84  CFDD FFF7          	movff	postdec2,tblptrh
  5671  000C88                     	if	0	;tblptru may be non-zero
  5672  000C88                     	endif
  5673  000C88                     	if	0	;tblptru may be non-zero
  5674  000C88                     	endif
  5675  000C88  0008               	tblrd		*
  5676  000C8A  FFFF               	dw	65535	; errata NOP
  5677  000C8C  50F5               	movf	tablat,w,c
  5678  000C8E  0A70               	xorlw	112
  5679  000C90  A4D8               	btfss	status,2,c
  5680  000C92  EF4D  F006         	goto	u5591
  5681  000C96  EF50  F006         	goto	u5590
  5682  000C9A                     u5591:
  5683  000C9A  FFFF               	dw	65535	; assembler added errata NOP
  5684  000C9C  EF94  F006         	goto	l4689
  5685  000CA0                     u5590:
  5686  000CA0  FFFF               	dw	65535	; assembler added errata NOP
  5687  000CA2                     
  5688                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1140:            
      +                           ++*fmt;
  5689  000CA2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5690  000CA6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5691  000CAA  2ADE               	incf	postinc2,f,c
  5692  000CAC  0E00               	movlw	0
  5693  000CAE  22DD               	addwfc	postdec2,f,c
  5694                           
  5695                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1141:            
      +                           llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  5696  000CB0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5697  000CB4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5698  000CB8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5699  000CBC  0E02               	movlw	2
  5700  000CBE  26DE               	addwf	postinc2,f,c
  5701  000CC0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5702  000CC4  0E00               	movlw	0
  5703  000CC6  22DD               	addwfc	postdec2,f,c
  5704  000CC8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5705  000CCC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5706  000CD0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5707  000CD4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5708  000CD8  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5709  000CDC  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5710  000CE0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5711  000CE2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5712  000CE4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5713  000CE6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5714  000CE8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5715  000CEA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5716  000CEC                     
  5717                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1143:            
      +                           return xtoa(fp, llu, 'x');
  5718  000CEC  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  5719  000CF0  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5720  000CF4  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  5721  000CF8  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5722  000CFC  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5723  000D00  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5724  000D04  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5725  000D08  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5726  000D0C  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5727  000D10  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5728  000D14  0E78               	movlw	120
  5729  000D16  6E26               	movwf	xtoa@x^0,c
  5730  000D18  ECD3  F019         	call	_xtoa	;wreg free
  5731  000D1C  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  5732  000D20  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5733  000D24  EF2E  F00A         	goto	l1346
  5734  000D28                     l4689:
  5735  000D28  FFFF               	dw	65535	; assembler added errata NOP
  5736                           
  5737                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1149:         if 
      +                          (*fmt[0] == 's') {
  5738  000D2A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5739  000D2E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5740  000D32  CFDE FFF6          	movff	postinc2,tblptrl
  5741  000D36  CFDD FFF7          	movff	postdec2,tblptrh
  5742  000D3A                     	if	0	;tblptru may be non-zero
  5743  000D3A                     	endif
  5744  000D3A                     	if	0	;tblptru may be non-zero
  5745  000D3A                     	endif
  5746  000D3A  0008               	tblrd		*
  5747  000D3C  FFFF               	dw	65535	; errata NOP
  5748  000D3E  50F5               	movf	tablat,w,c
  5749  000D40  0A73               	xorlw	115
  5750  000D42  A4D8               	btfss	status,2,c
  5751  000D44  EFA6  F006         	goto	u5601
  5752  000D48  EFA9  F006         	goto	u5600
  5753  000D4C                     u5601:
  5754  000D4C  FFFF               	dw	65535	; assembler added errata NOP
  5755  000D4E  EFD5  F006         	goto	l4697
  5756  000D52                     u5600:
  5757  000D52  FFFF               	dw	65535	; assembler added errata NOP
  5758  000D54                     
  5759                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1151:            
      +                           ++*fmt;
  5760  000D54  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5761  000D58  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5762  000D5C  2ADE               	incf	postinc2,f,c
  5763  000D5E  0E00               	movlw	0
  5764  000D60  22DD               	addwfc	postdec2,f,c
  5765                           
  5766                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1152:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5767  000D62  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5768  000D66  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5769  000D6A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5770  000D6E  0E02               	movlw	2
  5771  000D70  26DE               	addwf	postinc2,f,c
  5772  000D72  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5773  000D76  0E00               	movlw	0
  5774  000D78  22DD               	addwfc	postdec2,f,c
  5775  000D7A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5776  000D7E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5777  000D82  CFDE F04D          	movff	postinc2,vfpfcnvrt@cp
  5778  000D86  CFDD F04E          	movff	postdec2,vfpfcnvrt@cp+1
  5779  000D8A                     
  5780                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1154:            
      +                           return stoa(fp, cp);
  5781  000D8A  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  5782  000D8E  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5783  000D92  C04D  F00C         	movff	vfpfcnvrt@cp,stoa@s
  5784  000D96  C04E  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  5785  000D9A  EC90  F01E         	call	_stoa	;wreg free
  5786  000D9E  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  5787  000DA2  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  5788  000DA6  EF2E  F00A         	goto	l1346
  5789  000DAA                     l4697:
  5790  000DAA  FFFF               	dw	65535	; assembler added errata NOP
  5791                           
  5792                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1161:         if 
      +                          (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  5793  000DAC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5794  000DB0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5795  000DB4  CFDE F001          	movff	postinc2,strncmp@_l
  5796  000DB8  CFDD F002          	movff	postdec2,strncmp@_l+1
  5797  000DBC  0EDF               	movlw	low STR_71
  5798  000DBE  6E03               	movwf	strncmp@_r^0,c
  5799  000DC0  0E7F               	movlw	high STR_71
  5800  000DC2  6E04               	movwf	(strncmp@_r+1)^0,c
  5801  000DC4  0E00               	movlw	0
  5802  000DC6  6E06               	movwf	(strncmp@n+1)^0,c
  5803  000DC8  0E03               	movlw	3
  5804  000DCA  6E05               	movwf	strncmp@n^0,c
  5805  000DCC  EC9F  F039         	call	_strncmp	;wreg free
  5806  000DD0  5001               	movf	?_strncmp^0,w,c
  5807  000DD2  1002               	iorwf	(?_strncmp+1)^0,w,c
  5808  000DD4  A4D8               	btfss	status,2,c
  5809  000DD6  EFEF  F006         	goto	u5611
  5810  000DDA  EFF2  F006         	goto	u5610
  5811  000DDE                     u5611:
  5812  000DDE  FFFF               	dw	65535	; assembler added errata NOP
  5813  000DE0  EF33  F007         	goto	l4705
  5814  000DE4                     u5610:
  5815  000DE4  FFFF               	dw	65535	; assembler added errata NOP
  5816  000DE6                     
  5817                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1163:            
      +                           *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  5818  000DE6  0E03               	movlw	3
  5819  000DE8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5820  000DEC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5821  000DF0  26DE               	addwf	postinc2,f,c
  5822  000DF2  0E00               	movlw	0
  5823  000DF4  22DD               	addwfc	postdec2,f,c
  5824                           
  5825                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1164:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5826  000DF6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5827  000DFA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5828  000DFE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5829  000E02  0E02               	movlw	2
  5830  000E04  26DE               	addwf	postinc2,f,c
  5831  000E06  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5832  000E0A  0E00               	movlw	0
  5833  000E0C  22DD               	addwfc	postdec2,f,c
  5834  000E0E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5835  000E12  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5836  000E16  50DF               	movf	indf2,w,c
  5837  000E18  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  5838  000E1A  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  5839  000E1C  6E60               	movwf	vfpfcnvrt@llu^0,c
  5840  000E1E  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  5841  000E20  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5842  000E22  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5843  000E24  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5844  000E26  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5845  000E28  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5846  000E2A  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5847  000E2C                     l4701:
  5848  000E2C  FFFF               	dw	65535	; assembler added errata NOP
  5849                           
  5850                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1166:            
      +                           return utoa(fp, llu);
  5851  000E2E  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  5852  000E32  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  5853  000E36  C060  F01E         	movff	vfpfcnvrt@llu,utoa@d
  5854  000E3A  C061  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  5855  000E3E  C062  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  5856  000E42  C063  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  5857  000E46  C064  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  5858  000E4A  C065  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  5859  000E4E  C066  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  5860  000E52  C067  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  5861  000E56  EC6B  F01B         	call	_utoa	;wreg free
  5862  000E5A  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  5863  000E5E  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  5864  000E62  EF2E  F00A         	goto	l1346
  5865  000E66                     l4705:
  5866  000E66  FFFF               	dw	65535	; assembler added errata NOP
  5867                           
  5868                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1172:         if 
      +                          (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  5869  000E68  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5870  000E6C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5871  000E70  CFDE F001          	movff	postinc2,strncmp@_l
  5872  000E74  CFDD F002          	movff	postdec2,strncmp@_l+1
  5873  000E78  0EE0               	movlw	low (STR_71+1)
  5874  000E7A  6E03               	movwf	strncmp@_r^0,c
  5875  000E7C  0E7F               	movlw	high (STR_71+1)
  5876  000E7E  6E04               	movwf	(strncmp@_r+1)^0,c
  5877  000E80  0E00               	movlw	0
  5878  000E82  6E06               	movwf	(strncmp@n+1)^0,c
  5879  000E84  0E02               	movlw	2
  5880  000E86  6E05               	movwf	strncmp@n^0,c
  5881  000E88  EC9F  F039         	call	_strncmp	;wreg free
  5882  000E8C  5001               	movf	?_strncmp^0,w,c
  5883  000E8E  1002               	iorwf	(?_strncmp+1)^0,w,c
  5884  000E90  A4D8               	btfss	status,2,c
  5885  000E92  EF4D  F007         	goto	u5621
  5886  000E96  EF50  F007         	goto	u5620
  5887  000E9A                     u5621:
  5888  000E9A  FFFF               	dw	65535	; assembler added errata NOP
  5889  000E9C  EF79  F007         	goto	l4713
  5890  000EA0                     u5620:
  5891  000EA0  FFFF               	dw	65535	; assembler added errata NOP
  5892  000EA2                     
  5893                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1174:            
      +                           *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  5894  000EA2  0E02               	movlw	2
  5895  000EA4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5896  000EA8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5897  000EAC  26DE               	addwf	postinc2,f,c
  5898  000EAE  0E00               	movlw	0
  5899  000EB0  22DD               	addwfc	postdec2,f,c
  5900                           
  5901                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1175:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5902  000EB2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5903  000EB6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5904  000EBA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5905  000EBE  0E02               	movlw	2
  5906  000EC0  26DE               	addwf	postinc2,f,c
  5907  000EC2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5908  000EC6  0E00               	movlw	0
  5909  000EC8  22DD               	addwfc	postdec2,f,c
  5910  000ECA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5911  000ECE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5912  000ED2  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5913  000ED6  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5914  000EDA  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5915  000EDE  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5916  000EE2  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5917  000EE4  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5918  000EE6  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5919  000EE8  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5920  000EEA  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5921  000EEC  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5922  000EEE  EF16  F007         	goto	l4701
  5923  000EF2                     l4713:
  5924  000EF2  FFFF               	dw	65535	; assembler added errata NOP
  5925                           
  5926                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1182:         if 
      +                          (*fmt[0] == 'u') {
  5927  000EF4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5928  000EF8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5929  000EFC  CFDE FFF6          	movff	postinc2,tblptrl
  5930  000F00  CFDD FFF7          	movff	postdec2,tblptrh
  5931  000F04                     	if	0	;tblptru may be non-zero
  5932  000F04                     	endif
  5933  000F04                     	if	0	;tblptru may be non-zero
  5934  000F04                     	endif
  5935  000F04  0008               	tblrd		*
  5936  000F06  FFFF               	dw	65535	; errata NOP
  5937  000F08  50F5               	movf	tablat,w,c
  5938  000F0A  0A75               	xorlw	117
  5939  000F0C  A4D8               	btfss	status,2,c
  5940  000F0E  EF8B  F007         	goto	u5631
  5941  000F12  EF8E  F007         	goto	u5630
  5942  000F16                     u5631:
  5943  000F16  FFFF               	dw	65535	; assembler added errata NOP
  5944  000F18  EFB6  F007         	goto	l4721
  5945  000F1C                     u5630:
  5946  000F1C  FFFF               	dw	65535	; assembler added errata NOP
  5947  000F1E                     
  5948                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1184:            
      +                           ++*fmt;
  5949  000F1E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5950  000F22  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5951  000F26  2ADE               	incf	postinc2,f,c
  5952  000F28  0E00               	movlw	0
  5953  000F2A  22DD               	addwfc	postdec2,f,c
  5954                           
  5955                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1185:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5956  000F2C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5957  000F30  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5958  000F34  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5959  000F38  0E02               	movlw	2
  5960  000F3A  26DE               	addwf	postinc2,f,c
  5961  000F3C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5962  000F40  0E00               	movlw	0
  5963  000F42  22DD               	addwfc	postdec2,f,c
  5964  000F44  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5965  000F48  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5966  000F4C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5967  000F50  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5968  000F54  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5969  000F58  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5970  000F5C  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5971  000F5E  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5972  000F60  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5973  000F62  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5974  000F64  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5975  000F66  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5976  000F68  EF16  F007         	goto	l4701
  5977  000F6C                     l4721:
  5978  000F6C  FFFF               	dw	65535	; assembler added errata NOP
  5979                           
  5980                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1236:         if 
      +                          (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  5981  000F6E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5982  000F72  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5983  000F76  CFDE F001          	movff	postinc2,strncmp@_l
  5984  000F7A  CFDD F002          	movff	postdec2,strncmp@_l+1
  5985  000F7E  0EF6               	movlw	low STR_81
  5986  000F80  6E03               	movwf	strncmp@_r^0,c
  5987  000F82  0E7F               	movlw	high STR_81
  5988  000F84  6E04               	movwf	(strncmp@_r+1)^0,c
  5989  000F86  0E00               	movlw	0
  5990  000F88  6E06               	movwf	(strncmp@n+1)^0,c
  5991  000F8A  0E02               	movlw	2
  5992  000F8C  6E05               	movwf	strncmp@n^0,c
  5993  000F8E  EC9F  F039         	call	_strncmp	;wreg free
  5994  000F92  5001               	movf	?_strncmp^0,w,c
  5995  000F94  1002               	iorwf	(?_strncmp+1)^0,w,c
  5996  000F96  A4D8               	btfss	status,2,c
  5997  000F98  EFD0  F007         	goto	u5641
  5998  000F9C  EFD3  F007         	goto	u5640
  5999  000FA0                     u5641:
  6000  000FA0  FFFF               	dw	65535	; assembler added errata NOP
  6001  000FA2  EFFC  F007         	goto	l4729
  6002  000FA6                     u5640:
  6003  000FA6  FFFF               	dw	65535	; assembler added errata NOP
  6004  000FA8                     
  6005                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1238:            
      +                           *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  6006  000FA8  0E02               	movlw	2
  6007  000FAA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6008  000FAE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6009  000FB2  26DE               	addwf	postinc2,f,c
  6010  000FB4  0E00               	movlw	0
  6011  000FB6  22DD               	addwfc	postdec2,f,c
  6012                           
  6013                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1239:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6014  000FB8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6015  000FBC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6016  000FC0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6017  000FC4  0E02               	movlw	2
  6018  000FC6  26DE               	addwf	postinc2,f,c
  6019  000FC8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6020  000FCC  0E00               	movlw	0
  6021  000FCE  22DD               	addwfc	postdec2,f,c
  6022  000FD0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6023  000FD4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6024  000FD8  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6025  000FDC  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  6026  000FE0  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6027  000FE4  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6028  000FE8  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  6029  000FEA  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  6030  000FEC  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  6031  000FEE  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  6032  000FF0  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  6033  000FF2  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  6034  000FF4  EF16  F007         	goto	l4701
  6035  000FF8                     l4729:
  6036  000FF8  FFFF               	dw	65535	; assembler added errata NOP
  6037                           
  6038                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1249:         if 
      +                          (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((
      +                          sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  6039  000FFA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6040  000FFE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6041  001002  CFDE F001          	movff	postinc2,strncmp@_l
  6042  001006  CFDD F002          	movff	postdec2,strncmp@_l+1
  6043  00100A  0EE3               	movlw	low STR_86
  6044  00100C  6E03               	movwf	strncmp@_r^0,c
  6045  00100E  0E7F               	movlw	high STR_86
  6046  001010  6E04               	movwf	(strncmp@_r+1)^0,c
  6047  001012  0E00               	movlw	0
  6048  001014  6E06               	movwf	(strncmp@n+1)^0,c
  6049  001016  0E03               	movlw	3
  6050  001018  6E05               	movwf	strncmp@n^0,c
  6051  00101A  EC9F  F039         	call	_strncmp	;wreg free
  6052  00101E  5001               	movf	?_strncmp^0,w,c
  6053  001020  1002               	iorwf	(?_strncmp+1)^0,w,c
  6054  001022  B4D8               	btfsc	status,2,c
  6055  001024  EF16  F008         	goto	u5651
  6056  001028  EF19  F008         	goto	u5650
  6057  00102C                     u5651:
  6058  00102C  FFFF               	dw	65535	; assembler added errata NOP
  6059  00102E  EF36  F008         	goto	l4733
  6060  001032                     u5650:
  6061  001032  FFFF               	dw	65535	; assembler added errata NOP
  6062  001034  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6063  001038  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6064  00103C  CFDE F001          	movff	postinc2,strncmp@_l
  6065  001040  CFDD F002          	movff	postdec2,strncmp@_l+1
  6066  001044  0ECB               	movlw	low STR_90
  6067  001046  6E03               	movwf	strncmp@_r^0,c
  6068  001048  0E7F               	movlw	high STR_90
  6069  00104A  6E04               	movwf	(strncmp@_r+1)^0,c
  6070  00104C  0E00               	movlw	0
  6071  00104E  6E06               	movwf	(strncmp@n+1)^0,c
  6072  001050  0E03               	movlw	3
  6073  001052  6E05               	movwf	strncmp@n^0,c
  6074  001054  EC9F  F039         	call	_strncmp	;wreg free
  6075  001058  5001               	movf	?_strncmp^0,w,c
  6076  00105A  1002               	iorwf	(?_strncmp+1)^0,w,c
  6077  00105C  A4D8               	btfss	status,2,c
  6078  00105E  EF33  F008         	goto	u5661
  6079  001062  EF36  F008         	goto	u5660
  6080  001066                     u5661:
  6081  001066  FFFF               	dw	65535	; assembler added errata NOP
  6082  001068  EF8D  F008         	goto	l4743
  6083  00106C                     u5660:
  6084  00106C                     l4733:
  6085  00106C  FFFF               	dw	65535	; assembler added errata NOP
  6086                           
  6087                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1250: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1252:             c = (*fmt)
      +                          [2];
  6088  00106E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6089  001072  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6090  001076  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  6091  00107A  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  6092  00107E  0E02               	movlw	2
  6093  001080  2649               	addwf	??_vfpfcnvrt^0,f,c
  6094  001082  0E00               	movlw	0
  6095  001084  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  6096  001086  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6097  00108A  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6098  00108E                     	if	0	;tblptru may be non-zero
  6099  00108E                     	endif
  6100  00108E                     	if	0	;tblptru may be non-zero
  6101  00108E                     	endif
  6102  00108E  0008               	tblrd		*
  6103  001090  FFFF               	dw	65535	; errata NOP
  6104  001092  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  6105  001096                     
  6106                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1253:            
      +                           *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  6107  001096  0E03               	movlw	3
  6108  001098  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6109  00109C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6110  0010A0  26DE               	addwf	postinc2,f,c
  6111  0010A2  0E00               	movlw	0
  6112  0010A4  22DD               	addwfc	postdec2,f,c
  6113  0010A6                     
  6114                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1254:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6115  0010A6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6116  0010AA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6117  0010AE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6118  0010B2  0E02               	movlw	2
  6119  0010B4  26DE               	addwf	postinc2,f,c
  6120  0010B6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6121  0010BA  0E00               	movlw	0
  6122  0010BC  22DD               	addwfc	postdec2,f,c
  6123  0010BE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6124  0010C2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6125  0010C6  50DF               	movf	indf2,w,c
  6126  0010C8  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  6127  0010CA  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  6128  0010CC  6E60               	movwf	vfpfcnvrt@llu^0,c
  6129  0010CE  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  6130  0010D0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  6131  0010D2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  6132  0010D4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  6133  0010D6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  6134  0010D8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  6135  0010DA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  6136  0010DC                     l4739:
  6137  0010DC  FFFF               	dw	65535	; assembler added errata NOP
  6138                           
  6139                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1256:            
      +                           return xtoa(fp, llu, c);
  6140  0010DE  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  6141  0010E2  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  6142  0010E6  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  6143  0010EA  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  6144  0010EE  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  6145  0010F2  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  6146  0010F6  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  6147  0010FA  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  6148  0010FE  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  6149  001102  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  6150  001106  C05F  F026         	movff	vfpfcnvrt@c,xtoa@x
  6151  00110A  ECD3  F019         	call	_xtoa	;wreg free
  6152  00110E  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  6153  001112  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  6154  001116  EF2E  F00A         	goto	l1346
  6155  00111A                     l4743:
  6156  00111A  FFFF               	dw	65535	; assembler added errata NOP
  6157                           
  6158                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1262:         if 
      +                          (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((size
      +                          of("hX")/sizeof("hX"[0]))-1))) {
  6159  00111C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6160  001120  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6161  001124  CFDE F001          	movff	postinc2,strncmp@_l
  6162  001128  CFDD F002          	movff	postdec2,strncmp@_l+1
  6163  00112C  0EE4               	movlw	low (STR_86+1)
  6164  00112E  6E03               	movwf	strncmp@_r^0,c
  6165  001130  0E7F               	movlw	high (STR_86+1)
  6166  001132  6E04               	movwf	(strncmp@_r+1)^0,c
  6167  001134  0E00               	movlw	0
  6168  001136  6E06               	movwf	(strncmp@n+1)^0,c
  6169  001138  0E02               	movlw	2
  6170  00113A  6E05               	movwf	strncmp@n^0,c
  6171  00113C  EC9F  F039         	call	_strncmp	;wreg free
  6172  001140  5001               	movf	?_strncmp^0,w,c
  6173  001142  1002               	iorwf	(?_strncmp+1)^0,w,c
  6174  001144  B4D8               	btfsc	status,2,c
  6175  001146  EFA7  F008         	goto	u5671
  6176  00114A  EFAA  F008         	goto	u5670
  6177  00114E                     u5671:
  6178  00114E  FFFF               	dw	65535	; assembler added errata NOP
  6179  001150  EFC7  F008         	goto	l4747
  6180  001154                     u5670:
  6181  001154  FFFF               	dw	65535	; assembler added errata NOP
  6182  001156  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6183  00115A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6184  00115E  CFDE F001          	movff	postinc2,strncmp@_l
  6185  001162  CFDD F002          	movff	postdec2,strncmp@_l+1
  6186  001166  0ECC               	movlw	low (STR_90+1)
  6187  001168  6E03               	movwf	strncmp@_r^0,c
  6188  00116A  0E7F               	movlw	high (STR_90+1)
  6189  00116C  6E04               	movwf	(strncmp@_r+1)^0,c
  6190  00116E  0E00               	movlw	0
  6191  001170  6E06               	movwf	(strncmp@n+1)^0,c
  6192  001172  0E02               	movlw	2
  6193  001174  6E05               	movwf	strncmp@n^0,c
  6194  001176  EC9F  F039         	call	_strncmp	;wreg free
  6195  00117A  5001               	movf	?_strncmp^0,w,c
  6196  00117C  1002               	iorwf	(?_strncmp+1)^0,w,c
  6197  00117E  A4D8               	btfss	status,2,c
  6198  001180  EFC4  F008         	goto	u5681
  6199  001184  EFC7  F008         	goto	u5680
  6200  001188                     u5681:
  6201  001188  FFFF               	dw	65535	; assembler added errata NOP
  6202  00118A  EF04  F009         	goto	l4757
  6203  00118E                     u5680:
  6204  00118E                     l4747:
  6205  00118E  FFFF               	dw	65535	; assembler added errata NOP
  6206                           
  6207                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1263: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1265:             c = (*fmt)
      +                          [1];
  6208  001190  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6209  001194  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6210  001198  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  6211  00119C  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  6212  0011A0  0E01               	movlw	1
  6213  0011A2  2649               	addwf	??_vfpfcnvrt^0,f,c
  6214  0011A4  0E00               	movlw	0
  6215  0011A6  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  6216  0011A8  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6217  0011AC  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6218  0011B0                     	if	0	;tblptru may be non-zero
  6219  0011B0                     	endif
  6220  0011B0                     	if	0	;tblptru may be non-zero
  6221  0011B0                     	endif
  6222  0011B0  0008               	tblrd		*
  6223  0011B2  FFFF               	dw	65535	; errata NOP
  6224  0011B4  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  6225  0011B8                     
  6226                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1266:            
      +                           *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  6227  0011B8  0E02               	movlw	2
  6228  0011BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6229  0011BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6230  0011C2  26DE               	addwf	postinc2,f,c
  6231  0011C4  0E00               	movlw	0
  6232  0011C6  22DD               	addwfc	postdec2,f,c
  6233  0011C8                     
  6234                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1267:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  6235  0011C8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6236  0011CC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6237  0011D0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6238  0011D4  0E02               	movlw	2
  6239  0011D6  26DE               	addwf	postinc2,f,c
  6240  0011D8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6241  0011DC  0E00               	movlw	0
  6242  0011DE  22DD               	addwfc	postdec2,f,c
  6243  0011E0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6244  0011E4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6245  0011E8  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6246  0011EC  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  6247  0011F0  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6248  0011F4  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6249  0011F8  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  6250  0011FA  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  6251  0011FC  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  6252  0011FE  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  6253  001200  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  6254  001202  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  6255  001204  EF6E  F008         	goto	l4739
  6256  001208                     l4757:
  6257  001208  FFFF               	dw	65535	; assembler added errata NOP
  6258                           
  6259                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1274:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  6260  00120A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6261  00120E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6262  001212  CFDE FFF6          	movff	postinc2,tblptrl
  6263  001216  CFDD FFF7          	movff	postdec2,tblptrh
  6264  00121A                     	if	0	;tblptru may be non-zero
  6265  00121A                     	endif
  6266  00121A                     	if	0	;tblptru may be non-zero
  6267  00121A                     	endif
  6268  00121A  0008               	tblrd		*
  6269  00121C  FFFF               	dw	65535	; errata NOP
  6270  00121E  50F5               	movf	tablat,w,c
  6271  001220  0A78               	xorlw	120
  6272  001222  B4D8               	btfsc	status,2,c
  6273  001224  EF16  F009         	goto	u5691
  6274  001228  EF19  F009         	goto	u5690
  6275  00122C                     u5691:
  6276  00122C  FFFF               	dw	65535	; assembler added errata NOP
  6277  00122E  EF2E  F009         	goto	l4761
  6278  001232                     u5690:
  6279  001232  FFFF               	dw	65535	; assembler added errata NOP
  6280  001234  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6281  001238  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6282  00123C  CFDE FFF6          	movff	postinc2,tblptrl
  6283  001240  CFDD FFF7          	movff	postdec2,tblptrh
  6284  001244                     	if	0	;tblptru may be non-zero
  6285  001244                     	endif
  6286  001244                     	if	0	;tblptru may be non-zero
  6287  001244                     	endif
  6288  001244  0008               	tblrd		*
  6289  001246  FFFF               	dw	65535	; errata NOP
  6290  001248  50F5               	movf	tablat,w,c
  6291  00124A  0A58               	xorlw	88
  6292  00124C  A4D8               	btfss	status,2,c
  6293  00124E  EF2B  F009         	goto	u5701
  6294  001252  EF2E  F009         	goto	u5700
  6295  001256                     u5701:
  6296  001256  FFFF               	dw	65535	; assembler added errata NOP
  6297  001258  EF62  F009         	goto	l4771
  6298  00125C                     u5700:
  6299  00125C                     l4761:
  6300  00125C  FFFF               	dw	65535	; assembler added errata NOP
  6301                           
  6302                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1276:            
      +                           c = (*fmt)[0];
  6303  00125E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6304  001262  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6305  001266  CFDE FFF6          	movff	postinc2,tblptrl
  6306  00126A  CFDD FFF7          	movff	postdec2,tblptrh
  6307  00126E                     	if	0	;tblptru may be non-zero
  6308  00126E                     	endif
  6309  00126E                     	if	0	;tblptru may be non-zero
  6310  00126E                     	endif
  6311  00126E  0008               	tblrd		*
  6312  001270  FFFF               	dw	65535	; errata NOP
  6313  001272  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  6314  001276                     
  6315                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1277:            
      +                           ++*fmt;
  6316  001276  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6317  00127A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6318  00127E  2ADE               	incf	postinc2,f,c
  6319  001280  0E00               	movlw	0
  6320  001282  22DD               	addwfc	postdec2,f,c
  6321  001284                     
  6322                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1278:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  6323  001284  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6324  001288  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6325  00128C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6326  001290  0E02               	movlw	2
  6327  001292  26DE               	addwf	postinc2,f,c
  6328  001294  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6329  001298  0E00               	movlw	0
  6330  00129A  22DD               	addwfc	postdec2,f,c
  6331  00129C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6332  0012A0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6333  0012A4  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6334  0012A8  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  6335  0012AC  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6336  0012B0  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6337  0012B4  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  6338  0012B6  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  6339  0012B8  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  6340  0012BA  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  6341  0012BC  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  6342  0012BE  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  6343  0012C0  EF6E  F008         	goto	l4739
  6344  0012C4                     l4771:
  6345  0012C4  FFFF               	dw	65535	; assembler added errata NOP
  6346                           
  6347                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1337:         if 
      +                          (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((size
      +                          of("zX")/sizeof("zX"[0]))-1))) {
  6348  0012C6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6349  0012CA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6350  0012CE  CFDE F001          	movff	postinc2,strncmp@_l
  6351  0012D2  CFDD F002          	movff	postdec2,strncmp@_l+1
  6352  0012D6  0EF9               	movlw	low STR_104
  6353  0012D8  6E03               	movwf	strncmp@_r^0,c
  6354  0012DA  0E7F               	movlw	high STR_104
  6355  0012DC  6E04               	movwf	(strncmp@_r+1)^0,c
  6356  0012DE  0E00               	movlw	0
  6357  0012E0  6E06               	movwf	(strncmp@n+1)^0,c
  6358  0012E2  0E02               	movlw	2
  6359  0012E4  6E05               	movwf	strncmp@n^0,c
  6360  0012E6  EC9F  F039         	call	_strncmp	;wreg free
  6361  0012EA  5001               	movf	?_strncmp^0,w,c
  6362  0012EC  1002               	iorwf	(?_strncmp+1)^0,w,c
  6363  0012EE  B4D8               	btfsc	status,2,c
  6364  0012F0  EF7C  F009         	goto	u5711
  6365  0012F4  EF7F  F009         	goto	u5710
  6366  0012F8                     u5711:
  6367  0012F8  FFFF               	dw	65535	; assembler added errata NOP
  6368  0012FA  EF9C  F009         	goto	l4775
  6369  0012FE                     u5710:
  6370  0012FE  FFFF               	dw	65535	; assembler added errata NOP
  6371  001300  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6372  001304  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6373  001308  CFDE F001          	movff	postinc2,strncmp@_l
  6374  00130C  CFDD F002          	movff	postdec2,strncmp@_l+1
  6375  001310  0EE7               	movlw	low STR_108
  6376  001312  6E03               	movwf	strncmp@_r^0,c
  6377  001314  0E7F               	movlw	high STR_108
  6378  001316  6E04               	movwf	(strncmp@_r+1)^0,c
  6379  001318  0E00               	movlw	0
  6380  00131A  6E06               	movwf	(strncmp@n+1)^0,c
  6381  00131C  0E02               	movlw	2
  6382  00131E  6E05               	movwf	strncmp@n^0,c
  6383  001320  EC9F  F039         	call	_strncmp	;wreg free
  6384  001324  5001               	movf	?_strncmp^0,w,c
  6385  001326  1002               	iorwf	(?_strncmp+1)^0,w,c
  6386  001328  A4D8               	btfss	status,2,c
  6387  00132A  EF99  F009         	goto	u5721
  6388  00132E  EF9C  F009         	goto	u5720
  6389  001332                     u5721:
  6390  001332  FFFF               	dw	65535	; assembler added errata NOP
  6391  001334  EFD9  F009         	goto	l4785
  6392  001338                     u5720:
  6393  001338                     l4775:
  6394  001338  FFFF               	dw	65535	; assembler added errata NOP
  6395                           
  6396                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1338: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1340:             c = (*fmt)
      +                          [1];
  6397  00133A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6398  00133E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6399  001342  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  6400  001346  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  6401  00134A  0E01               	movlw	1
  6402  00134C  2649               	addwf	??_vfpfcnvrt^0,f,c
  6403  00134E  0E00               	movlw	0
  6404  001350  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  6405  001352  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6406  001356  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6407  00135A                     	if	0	;tblptru may be non-zero
  6408  00135A                     	endif
  6409  00135A                     	if	0	;tblptru may be non-zero
  6410  00135A                     	endif
  6411  00135A  0008               	tblrd		*
  6412  00135C  FFFF               	dw	65535	; errata NOP
  6413  00135E  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  6414  001362                     
  6415                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1341:            
      +                           *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  6416  001362  0E02               	movlw	2
  6417  001364  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6418  001368  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6419  00136C  26DE               	addwf	postinc2,f,c
  6420  00136E  0E00               	movlw	0
  6421  001370  22DD               	addwfc	postdec2,f,c
  6422  001372                     
  6423                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1342:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  6424  001372  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6425  001376  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6426  00137A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  6427  00137E  0E02               	movlw	2
  6428  001380  26DE               	addwf	postinc2,f,c
  6429  001382  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  6430  001386  0E00               	movlw	0
  6431  001388  22DD               	addwfc	postdec2,f,c
  6432  00138A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6433  00138E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6434  001392  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  6435  001396  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  6436  00139A  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  6437  00139E  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  6438  0013A2  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  6439  0013A4  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  6440  0013A6  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  6441  0013A8  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  6442  0013AA  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  6443  0013AC  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  6444  0013AE  EF6E  F008         	goto	l4739
  6445  0013B2                     l4785:
  6446  0013B2  FFFF               	dw	65535	; assembler added errata NOP
  6447                           
  6448                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  6449  0013B4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6450  0013B8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6451  0013BC  CFDE FFF6          	movff	postinc2,tblptrl
  6452  0013C0  CFDD FFF7          	movff	postdec2,tblptrh
  6453  0013C4                     	if	0	;tblptru may be non-zero
  6454  0013C4                     	endif
  6455  0013C4                     	if	0	;tblptru may be non-zero
  6456  0013C4                     	endif
  6457  0013C4  0008               	tblrd		*
  6458  0013C6  FFFF               	dw	65535	; errata NOP
  6459  0013C8  50F5               	movf	tablat,w,c
  6460  0013CA  0A25               	xorlw	37
  6461  0013CC  A4D8               	btfss	status,2,c
  6462  0013CE  EFEB  F009         	goto	u5731
  6463  0013D2  EFEE  F009         	goto	u5730
  6464  0013D6                     u5731:
  6465  0013D6  FFFF               	dw	65535	; assembler added errata NOP
  6466  0013D8  EF07  F00A         	goto	l4795
  6467  0013DC                     u5730:
  6468  0013DC  FFFF               	dw	65535	; assembler added errata NOP
  6469  0013DE                     
  6470                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  6471  0013DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6472  0013E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6473  0013E6  2ADE               	incf	postinc2,f,c
  6474  0013E8  0E00               	movlw	0
  6475  0013EA  22DD               	addwfc	postdec2,f,c
  6476  0013EC                     
  6477                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  6478  0013EC  0E00               	movlw	0
  6479  0013EE  6E02               	movwf	(fputc@c+1)^0,c
  6480  0013F0  0E25               	movlw	37
  6481  0013F2  6E01               	movwf	fputc@c^0,c
  6482  0013F4  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6483  0013F8  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6484  0013FC  ECCE  F037         	call	_fputc	;wreg free
  6485  001400                     l4791:
  6486  001400  FFFF               	dw	65535	; assembler added errata NOP
  6487                           
  6488                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  6489  001402  0E00               	movlw	0
  6490  001404  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  6491  001406  0E01               	movlw	1
  6492  001408  6E43               	movwf	?_vfpfcnvrt^0,c
  6493  00140A  EF2E  F00A         	goto	l1346
  6494  00140E                     l4795:
  6495  00140E  FFFF               	dw	65535	; assembler added errata NOP
  6496                           
  6497                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  6498  001410  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6499  001414  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6500  001418  2ADE               	incf	postinc2,f,c
  6501  00141A  0E00               	movlw	0
  6502  00141C  22DD               	addwfc	postdec2,f,c
  6503  00141E  EF44  F005         	goto	l4647
  6504  001422                     l4801:
  6505  001422  FFFF               	dw	65535	; assembler added errata NOP
  6506                           
  6507                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  6508  001424  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6509  001428  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6510  00142C  CFDE FFF6          	movff	postinc2,tblptrl
  6511  001430  CFDD FFF7          	movff	postdec2,tblptrh
  6512  001434                     	if	0	;tblptru may be non-zero
  6513  001434                     	endif
  6514  001434                     	if	0	;tblptru may be non-zero
  6515  001434                     	endif
  6516  001434  0008               	tblrd		*
  6517  001436  FFFF               	dw	65535	; errata NOP
  6518  001438  50F5               	movf	tablat,w,c
  6519  00143A  6E01               	movwf	fputc@c^0,c
  6520  00143C  6A02               	clrf	(fputc@c+1)^0,c
  6521  00143E  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6522  001442  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6523  001446  ECCE  F037         	call	_fputc	;wreg free
  6524  00144A                     
  6525                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  6526  00144A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6527  00144E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6528  001452  2ADE               	incf	postinc2,f,c
  6529  001454  0E00               	movlw	0
  6530  001456  22DD               	addwfc	postdec2,f,c
  6531  001458  EF00  F00A         	goto	l4791
  6532  00145C                     l1346:
  6533  00145C  FFFF               	dw	65535	; assembler added errata NOP
  6534  00145E  0012               	return		;funcret
  6535  001460  FFFF               	dw	65535	; errata NOP
  6536  001462                     __end_of_vfpfcnvrt:
  6537                           	callstack 0
  6538                           
  6539 ;; *************** function _xtoa *****************
  6540 ;; Defined at:
  6541 ;;		line 623 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6542 ;; Parameters:    Size  Location     Type
  6543 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6544 ;;		 -> vsnprintf@f(6), 
  6545 ;;  d               8   29[COMRAM] unsigned long long 
  6546 ;;  x               1   37[COMRAM] unsigned char 
  6547 ;; Auto vars:     Size  Location     Type
  6548 ;;  n               8   54[COMRAM] unsigned long long 
  6549 ;;  c               2   64[COMRAM] int 
  6550 ;;  i               2   62[COMRAM] int 
  6551 ;;  w               2   52[COMRAM] int 
  6552 ;;  p               2   50[COMRAM] int 
  6553 ;; Return value:  Size  Location     Type
  6554 ;;                  2   27[COMRAM] int 
  6555 ;; Registers used:
  6556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6557 ;; Tracked objects:
  6558 ;;		On entry : 0/0
  6559 ;;		On exit  : 0/0
  6560 ;;		Unchanged: 0/0
  6561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6562 ;;      Params:        11       0       0       0       0       0       0
  6563 ;;      Locals:        20       0       0       0       0       0       0
  6564 ;;      Temps:          8       0       0       0       0       0       0
  6565 ;;      Totals:        39       0       0       0       0       0       0
  6566 ;;Total ram usage:       39 bytes
  6567 ;; Hardware stack levels used:    1
  6568 ;; Hardware stack levels required when called:    5
  6569 ;; This function calls:
  6570 ;;		_isalpha
  6571 ;;		_isupper
  6572 ;;		_pad
  6573 ;;		_toupper
  6574 ;; This function is called by:
  6575 ;;		_vfpfcnvrt
  6576 ;; This function uses a non-reentrant model
  6577 ;;
  6578                           
  6579                           	psect	text9
  6580  0033A6                     __ptext9:
  6581                           	callstack 0
  6582  0033A6                     _xtoa:
  6583                           	callstack 0
  6584  0033A6  FFFF               	dw	65535	; assembler added errata NOP
  6585  0033A8                     
  6586                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 623: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 624: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 625:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources
      +                          \c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0)) {
  6587  0033A8  0100               	movlb	0	; () banked
  6588  0033AA  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6589  0033AC  EFDA  F019         	goto	u4571
  6590  0033B0  EFDD  F019         	goto	u4570
  6591  0033B4                     u4571:
  6592  0033B4  FFFF               	dw	65535	; assembler added errata NOP
  6593  0033B6  EFDF  F019         	goto	l4157
  6594  0033BA                     u4570:
  6595  0033BA  FFFF               	dw	65535	; assembler added errata NOP
  6596  0033BC                     
  6597                           ; BSR set to: 0
  6598                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 630:         flag
      +                          s &= ~(1 << 1);
  6599  0033BC  938A               	bcf	_flags& (0+255),1,b
  6600  0033BE                     l4157:
  6601  0033BE  FFFF               	dw	65535	; assembler added errata NOP
  6602                           
  6603                           ; BSR set to: 0
  6604                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 632:     p = (0 <
      +                           prec) ? prec : 1;
  6605  0033C0  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6606  0033C2  EFEE  F019         	goto	u4580
  6607  0033C6  5189               	movf	(_prec+1)& (0+255),w,b
  6608  0033C8  E106               	bnz	u4581
  6609  0033CA  0588               	decf	_prec& (0+255),w,b
  6610  0033CC  B0D8               	btfsc	status,0,c
  6611  0033CE  EFEB  F019         	goto	u4581
  6612  0033D2  EFEE  F019         	goto	u4580
  6613  0033D6                     u4581:
  6614  0033D6  FFFF               	dw	65535	; assembler added errata NOP
  6615  0033D8  EFF5  F019         	goto	l1284
  6616  0033DC                     u4580:
  6617  0033DC  FFFF               	dw	65535	; assembler added errata NOP
  6618  0033DE                     
  6619                           ; BSR set to: 0
  6620  0033DE  0E00               	movlw	0
  6621  0033E0  6E34               	movwf	(xtoa@p+1)^0,c
  6622  0033E2  0E01               	movlw	1
  6623  0033E4  6E33               	movwf	xtoa@p^0,c
  6624  0033E6  EFFA  F019         	goto	l1286
  6625  0033EA                     l1284:
  6626  0033EA  FFFF               	dw	65535	; assembler added errata NOP
  6627                           
  6628                           ; BSR set to: 0
  6629  0033EC  C088  F033         	movff	_prec,xtoa@p
  6630  0033F0  C089  F034         	movff	_prec+1,xtoa@p+1
  6631  0033F4                     l1286:
  6632  0033F4  FFFF               	dw	65535	; assembler added errata NOP
  6633                           
  6634                           ; BSR set to: 0
  6635                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 633:     w = widt
      +                          h;
  6636  0033F6  C086  F035         	movff	_width,xtoa@w
  6637  0033FA  C087  F036         	movff	_width+1,xtoa@w+1
  6638                           
  6639                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 634:     if (flag
      +                          s & (1 << 4)) {
  6640  0033FE  A98A               	btfss	_flags& (0+255),4,b
  6641  003400  EF04  F01A         	goto	u4591
  6642  003404  EF07  F01A         	goto	u4590
  6643  003408                     u4591:
  6644  003408  FFFF               	dw	65535	; assembler added errata NOP
  6645  00340A  EF0C  F01A         	goto	l4163
  6646  00340E                     u4590:
  6647  00340E  FFFF               	dw	65535	; assembler added errata NOP
  6648  003410                     
  6649                           ; BSR set to: 0
  6650                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 635:         w -=
      +                           2;
  6651  003410  0EFE               	movlw	254
  6652  003412  2635               	addwf	xtoa@w^0,f,c
  6653  003414  0EFF               	movlw	255
  6654  003416  2236               	addwfc	(xtoa@w+1)^0,f,c
  6655  003418                     l4163:
  6656  003418  FFFF               	dw	65535	; assembler added errata NOP
  6657                           
  6658                           ; BSR set to: 0
  6659                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 639:     n = d;
  6660  00341A  C01E  F037         	movff	xtoa@d,xtoa@n
  6661  00341E  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  6662  003422  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  6663  003426  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  6664  00342A  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  6665  00342E  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  6666  003432  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  6667  003436  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  6668  00343A                     
  6669                           ; BSR set to: 0
  6670                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 640:     i = size
      +                          of(dbuf) - 1;
  6671  00343A  0E00               	movlw	0
  6672  00343C  6E40               	movwf	(xtoa@i+1)^0,c
  6673  00343E  0E1F               	movlw	31
  6674  003440  6E3F               	movwf	xtoa@i^0,c
  6675  003442                     
  6676                           ; BSR set to: 0
  6677                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 641:     dbuf[i] 
      +                          = '\0';
  6678  003442  0E00               	movlw	0
  6679  003444  6FB7               	movwf	(_dbuf+31)& (0+255),b
  6680                           
  6681                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6682  003446  EFEA  F01A         	goto	l4199
  6683  00344A                     l4169:
  6684  00344A  FFFF               	dw	65535	; assembler added errata NOP
  6685                           
  6686                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 643:         --i;
  6687  00344C  063F               	decf	xtoa@i^0,f,c
  6688  00344E  A0D8               	btfss	status,0,c
  6689  003450  0640               	decf	(xtoa@i+1)^0,f,c
  6690  003452                     
  6691                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 644:         c = 
      +                          n & 0x0f;
  6692  003452  0E0F               	movlw	15
  6693  003454  1437               	andwf	xtoa@n^0,w,c
  6694  003456  6E41               	movwf	xtoa@c^0,c
  6695  003458  6A42               	clrf	(xtoa@c+1)^0,c
  6696  00345A                     
  6697                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 645:         c = 
      +                          (c < 10) ? '0' + c : 'a' + (c - 10);
  6698  00345A  BE42               	btfsc	(xtoa@c+1)^0,7,c
  6699  00345C  EF39  F01A         	goto	u4601
  6700  003460  5042               	movf	(xtoa@c+1)^0,w,c
  6701  003462  E10A               	bnz	u4600
  6702  003464  0E0A               	movlw	10
  6703  003466  5C41               	subwf	xtoa@c^0,w,c
  6704  003468  A0D8               	btfss	status,0,c
  6705  00346A  EF39  F01A         	goto	u4601
  6706  00346E  EF3C  F01A         	goto	u4600
  6707  003472                     u4601:
  6708  003472  FFFF               	dw	65535	; assembler added errata NOP
  6709  003474  EF45  F01A         	goto	l4177
  6710  003478                     u4600:
  6711  003478  FFFF               	dw	65535	; assembler added errata NOP
  6712  00347A  0E57               	movlw	87
  6713  00347C  2441               	addwf	xtoa@c^0,w,c
  6714  00347E  6E41               	movwf	xtoa@c^0,c
  6715  003480  0E00               	movlw	0
  6716  003482  2042               	addwfc	(xtoa@c+1)^0,w,c
  6717  003484  6E42               	movwf	(xtoa@c+1)^0,c
  6718  003486  EF4C  F01A         	goto	l1293
  6719  00348A                     l4177:
  6720  00348A  FFFF               	dw	65535	; assembler added errata NOP
  6721  00348C  0E30               	movlw	48
  6722  00348E  2441               	addwf	xtoa@c^0,w,c
  6723  003490  6E41               	movwf	xtoa@c^0,c
  6724  003492  0E00               	movlw	0
  6725  003494  2042               	addwfc	(xtoa@c+1)^0,w,c
  6726  003496  6E42               	movwf	(xtoa@c+1)^0,c
  6727  003498                     l1293:
  6728  003498  FFFF               	dw	65535	; assembler added errata NOP
  6729  00349A  0EBF               	movlw	191
  6730  00349C  6E27               	movwf	??_xtoa^0,c
  6731  00349E  0EFF               	movlw	255
  6732  0034A0  6E28               	movwf	(??_xtoa+1)^0,c
  6733  0034A2  5026               	movf	xtoa@x^0,w,c
  6734  0034A4  6E29               	movwf	(??_xtoa+2)^0,c
  6735  0034A6  6A2A               	clrf	(??_xtoa+3)^0,c
  6736  0034A8  5027               	movf	??_xtoa^0,w,c
  6737  0034AA  2629               	addwf	(??_xtoa+2)^0,f,c
  6738  0034AC  5028               	movf	(??_xtoa+1)^0,w,c
  6739  0034AE  222A               	addwfc	(??_xtoa+3)^0,f,c
  6740  0034B0  502A               	movf	(??_xtoa+3)^0,w,c
  6741  0034B2  E10B               	bnz	u4610
  6742  0034B4  0E1A               	movlw	26
  6743  0034B6  5C29               	subwf	(??_xtoa+2)^0,w,c
  6744  0034B8  A0D8               	btfss	status,0,c
  6745  0034BA  EF61  F01A         	goto	u4611
  6746  0034BE  EF65  F01A         	goto	u4610
  6747  0034C2                     u4611:
  6748  0034C2  FFFF               	dw	65535	; assembler added errata NOP
  6749  0034C4  0E01               	movlw	1
  6750  0034C6  EF67  F01A         	goto	u4620
  6751  0034CA                     u4610:
  6752  0034CA  FFFF               	dw	65535	; assembler added errata NOP
  6753  0034CC  0E00               	movlw	0
  6754  0034CE                     u4620:
  6755  0034CE  FFFF               	dw	65535	; assembler added errata NOP
  6756  0034D0  6E2F               	movwf	_xtoa$1704^0,c
  6757  0034D2  6A30               	clrf	(_xtoa$1704+1)^0,c
  6758  0034D4  502F               	movf	_xtoa$1704^0,w,c
  6759  0034D6  1030               	iorwf	(_xtoa$1704+1)^0,w,c
  6760  0034D8  B4D8               	btfsc	status,2,c
  6761  0034DA  EF71  F01A         	goto	u4631
  6762  0034DE  EF74  F01A         	goto	u4630
  6763  0034E2                     u4631:
  6764  0034E2  FFFF               	dw	65535	; assembler added errata NOP
  6765  0034E4  EFAA  F01A         	goto	l4191
  6766  0034E8                     u4630:
  6767  0034E8  FFFF               	dw	65535	; assembler added errata NOP
  6768  0034EA  0E9F               	movlw	159
  6769  0034EC  6E27               	movwf	??_xtoa^0,c
  6770  0034EE  0EFF               	movlw	255
  6771  0034F0  6E28               	movwf	(??_xtoa+1)^0,c
  6772  0034F2  0E20               	movlw	32
  6773  0034F4  1041               	iorwf	xtoa@c^0,w,c
  6774  0034F6  6E29               	movwf	(??_xtoa+2)^0,c
  6775  0034F8  0E00               	movlw	0
  6776  0034FA  1042               	iorwf	(xtoa@c+1)^0,w,c
  6777  0034FC  6E2A               	movwf	(??_xtoa+3)^0,c
  6778  0034FE  5027               	movf	??_xtoa^0,w,c
  6779  003500  2629               	addwf	(??_xtoa+2)^0,f,c
  6780  003502  5028               	movf	(??_xtoa+1)^0,w,c
  6781  003504  222A               	addwfc	(??_xtoa+3)^0,f,c
  6782  003506  502A               	movf	(??_xtoa+3)^0,w,c
  6783  003508  E10B               	bnz	u4640
  6784  00350A  0E1A               	movlw	26
  6785  00350C  5C29               	subwf	(??_xtoa+2)^0,w,c
  6786  00350E  A0D8               	btfss	status,0,c
  6787  003510  EF8C  F01A         	goto	u4641
  6788  003514  EF90  F01A         	goto	u4640
  6789  003518                     u4641:
  6790  003518  FFFF               	dw	65535	; assembler added errata NOP
  6791  00351A  0E01               	movlw	1
  6792  00351C  EF92  F01A         	goto	u4650
  6793  003520                     u4640:
  6794  003520  FFFF               	dw	65535	; assembler added errata NOP
  6795  003522  0E00               	movlw	0
  6796  003524                     u4650:
  6797  003524  FFFF               	dw	65535	; assembler added errata NOP
  6798  003526  6E31               	movwf	_xtoa$1705^0,c
  6799  003528  6A32               	clrf	(_xtoa$1705+1)^0,c
  6800  00352A  5031               	movf	_xtoa$1705^0,w,c
  6801  00352C  1032               	iorwf	(_xtoa$1705+1)^0,w,c
  6802  00352E  B4D8               	btfsc	status,2,c
  6803  003530  EF9C  F01A         	goto	u4661
  6804  003534  EF9F  F01A         	goto	u4660
  6805  003538                     u4661:
  6806  003538  FFFF               	dw	65535	; assembler added errata NOP
  6807  00353A  EFAA  F01A         	goto	l4191
  6808  00353E                     u4660:
  6809  00353E  FFFF               	dw	65535	; assembler added errata NOP
  6810  003540                     
  6811                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 647:             
      +                          c = toupper(c);
  6812  003540  C041  F007         	movff	xtoa@c,toupper@c
  6813  003544  C042  F008         	movff	xtoa@c+1,toupper@c+1
  6814  003548  ECE6  F033         	call	_toupper	;wreg free
  6815  00354C  C007  F041         	movff	?_toupper,xtoa@c
  6816  003550  C008  F042         	movff	?_toupper+1,xtoa@c+1
  6817  003554                     l4191:
  6818  003554  FFFF               	dw	65535	; assembler added errata NOP
  6819                           
  6820                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 649:         dbuf
      +                          [i] = (char)c;
  6821  003556  0E98               	movlw	low _dbuf
  6822  003558  243F               	addwf	xtoa@i^0,w,c
  6823  00355A  6ED9               	movwf	fsr2l,c
  6824  00355C  0E00               	movlw	high _dbuf
  6825  00355E  2040               	addwfc	(xtoa@i+1)^0,w,c
  6826  003560  6EDA               	movwf	fsr2h,c
  6827  003562  C041  FFDF         	movff	xtoa@c,indf2
  6828  003566                     
  6829                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 650:         --p;
  6830  003566  0633               	decf	xtoa@p^0,f,c
  6831  003568  A0D8               	btfss	status,0,c
  6832  00356A  0634               	decf	(xtoa@p+1)^0,f,c
  6833  00356C                     
  6834                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 651:         --w;
  6835  00356C  0635               	decf	xtoa@w^0,f,c
  6836  00356E  A0D8               	btfss	status,0,c
  6837  003570  0636               	decf	(xtoa@w+1)^0,f,c
  6838  003572                     
  6839                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 652:         n = 
      +                          n >> 4;
  6840  003572  C037  F027         	movff	xtoa@n,??_xtoa
  6841  003576  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  6842  00357A  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  6843  00357E  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  6844  003582  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  6845  003586  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  6846  00358A  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  6847  00358E  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  6848  003592  0E05               	movlw	5
  6849  003594  EFD6  F01A         	goto	u4670
  6850  003598                     u4675:
  6851  003598  FFFF               	dw	65535	; assembler added errata NOP
  6852  00359A  90D8               	bcf	status,0,c
  6853  00359C  322E               	rrcf	(??_xtoa+7)^0,f,c
  6854  00359E  322D               	rrcf	(??_xtoa+6)^0,f,c
  6855  0035A0  322C               	rrcf	(??_xtoa+5)^0,f,c
  6856  0035A2  322B               	rrcf	(??_xtoa+4)^0,f,c
  6857  0035A4  322A               	rrcf	(??_xtoa+3)^0,f,c
  6858  0035A6  3229               	rrcf	(??_xtoa+2)^0,f,c
  6859  0035A8  3228               	rrcf	(??_xtoa+1)^0,f,c
  6860  0035AA  3227               	rrcf	??_xtoa^0,f,c
  6861  0035AC                     u4670:
  6862  0035AC  FFFF               	dw	65535	; assembler added errata NOP
  6863  0035AE  2EE8               	decfsz	wreg,f,c
  6864  0035B0  EFCC  F01A         	goto	u4675
  6865  0035B4  C027  F037         	movff	??_xtoa,xtoa@n
  6866  0035B8  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  6867  0035BC  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  6868  0035C0  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  6869  0035C4  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  6870  0035C8  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  6871  0035CC  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  6872  0035D0  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  6873  0035D4                     l4199:
  6874  0035D4  FFFF               	dw	65535	; assembler added errata NOP
  6875                           
  6876                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6877  0035D6  BE40               	btfsc	(xtoa@i+1)^0,7,c
  6878  0035D8  EFF7  F01A         	goto	u4681
  6879  0035DC  5040               	movf	(xtoa@i+1)^0,w,c
  6880  0035DE  E10A               	bnz	u4680
  6881  0035E0  0E02               	movlw	2
  6882  0035E2  5C3F               	subwf	xtoa@i^0,w,c
  6883  0035E4  A0D8               	btfss	status,0,c
  6884  0035E6  EFF7  F01A         	goto	u4681
  6885  0035EA  EFFA  F01A         	goto	u4680
  6886  0035EE                     u4681:
  6887  0035EE  FFFF               	dw	65535	; assembler added errata NOP
  6888  0035F0  EF33  F01B         	goto	l1307
  6889  0035F4                     u4680:
  6890  0035F4  FFFF               	dw	65535	; assembler added errata NOP
  6891  0035F6  5037               	movf	xtoa@n^0,w,c
  6892  0035F8  1038               	iorwf	(xtoa@n+1)^0,w,c
  6893  0035FA  1039               	iorwf	(xtoa@n+2)^0,w,c
  6894  0035FC  103A               	iorwf	(xtoa@n+3)^0,w,c
  6895  0035FE  103B               	iorwf	(xtoa@n+4)^0,w,c
  6896  003600  103C               	iorwf	(xtoa@n+5)^0,w,c
  6897  003602  103D               	iorwf	(xtoa@n+6)^0,w,c
  6898  003604  103E               	iorwf	(xtoa@n+7)^0,w,c
  6899  003606  A4D8               	btfss	status,2,c
  6900  003608  EF08  F01B         	goto	u4691
  6901  00360C  EF0B  F01B         	goto	u4690
  6902  003610                     u4691:
  6903  003610  FFFF               	dw	65535	; assembler added errata NOP
  6904  003612  EF25  F01A         	goto	l4169
  6905  003616                     u4690:
  6906  003616  FFFF               	dw	65535	; assembler added errata NOP
  6907  003618  BE34               	btfsc	(xtoa@p+1)^0,7,c
  6908  00361A  EF1A  F01B         	goto	u4700
  6909  00361E  5034               	movf	(xtoa@p+1)^0,w,c
  6910  003620  E106               	bnz	u4701
  6911  003622  0433               	decf	xtoa@p^0,w,c
  6912  003624  B0D8               	btfsc	status,0,c
  6913  003626  EF17  F01B         	goto	u4701
  6914  00362A  EF1A  F01B         	goto	u4700
  6915  00362E                     u4701:
  6916  00362E  FFFF               	dw	65535	; assembler added errata NOP
  6917  003630  EF25  F01A         	goto	l4169
  6918  003634                     u4700:
  6919  003634  FFFF               	dw	65535	; assembler added errata NOP
  6920  003636  BE36               	btfsc	(xtoa@w+1)^0,7,c
  6921  003638  EF26  F01B         	goto	u4711
  6922  00363C  5036               	movf	(xtoa@w+1)^0,w,c
  6923  00363E  E109               	bnz	u4710
  6924  003640  0435               	decf	xtoa@w^0,w,c
  6925  003642  A0D8               	btfss	status,0,c
  6926  003644  EF26  F01B         	goto	u4711
  6927  003648  EF29  F01B         	goto	u4710
  6928  00364C                     u4711:
  6929  00364C  FFFF               	dw	65535	; assembler added errata NOP
  6930  00364E  EF33  F01B         	goto	l1307
  6931  003652                     u4710:
  6932  003652  FFFF               	dw	65535	; assembler added errata NOP
  6933  003654  0100               	movlb	0	; () banked
  6934  003656  B38A               	btfsc	_flags& (0+255),1,b
  6935  003658  EF30  F01B         	goto	u4721
  6936  00365C  EF33  F01B         	goto	u4720
  6937  003660                     u4721:
  6938  003660  FFFF               	dw	65535	; assembler added errata NOP
  6939  003662  EF25  F01A         	goto	l4169
  6940  003666                     u4720:
  6941  003666                     l1307:
  6942  003666  FFFF               	dw	65535	; assembler added errata NOP
  6943                           
  6944                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  6945  003668  0100               	movlb	0	; () banked
  6946  00366A  A98A               	btfss	_flags& (0+255),4,b
  6947  00366C  EF3A  F01B         	goto	u4731
  6948  003670  EF3D  F01B         	goto	u4730
  6949  003674                     u4731:
  6950  003674  FFFF               	dw	65535	; assembler added errata NOP
  6951  003676  EF54  F01B         	goto	l4215
  6952  00367A                     u4730:
  6953  00367A  FFFF               	dw	65535	; assembler added errata NOP
  6954  00367C                     
  6955                           ; BSR set to: 0
  6956                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 657:         --i;
  6957  00367C  063F               	decf	xtoa@i^0,f,c
  6958  00367E  A0D8               	btfss	status,0,c
  6959  003680  0640               	decf	(xtoa@i+1)^0,f,c
  6960  003682                     
  6961                           ; BSR set to: 0
  6962                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 658:         dbuf
      +                          [i] = x;
  6963  003682  0E98               	movlw	low _dbuf
  6964  003684  243F               	addwf	xtoa@i^0,w,c
  6965  003686  6ED9               	movwf	fsr2l,c
  6966  003688  0E00               	movlw	high _dbuf
  6967  00368A  2040               	addwfc	(xtoa@i+1)^0,w,c
  6968  00368C  6EDA               	movwf	fsr2h,c
  6969  00368E  C026  FFDF         	movff	xtoa@x,indf2
  6970  003692                     
  6971                           ; BSR set to: 0
  6972                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 659:         --i;
  6973  003692  063F               	decf	xtoa@i^0,f,c
  6974  003694  A0D8               	btfss	status,0,c
  6975  003696  0640               	decf	(xtoa@i+1)^0,f,c
  6976                           
  6977                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 660:         dbuf
      +                          [i] = '0';
  6978  003698  0E98               	movlw	low _dbuf
  6979  00369A  243F               	addwf	xtoa@i^0,w,c
  6980  00369C  6ED9               	movwf	fsr2l,c
  6981  00369E  0E00               	movlw	high _dbuf
  6982  0036A0  2040               	addwfc	(xtoa@i+1)^0,w,c
  6983  0036A2  6EDA               	movwf	fsr2h,c
  6984  0036A4  0E30               	movlw	48
  6985  0036A6  6EDF               	movwf	indf2,c
  6986  0036A8                     l4215:
  6987  0036A8  FFFF               	dw	65535	; assembler added errata NOP
  6988                           
  6989                           ; BSR set to: 0
  6990                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 664:     return p
      +                          ad(fp, &dbuf[i], w);
  6991  0036AA  C01C  F011         	movff	xtoa@fp,pad@fp
  6992  0036AE  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  6993  0036B2  0E98               	movlw	low _dbuf
  6994  0036B4  243F               	addwf	xtoa@i^0,w,c
  6995  0036B6  6E13               	movwf	pad@buf^0,c
  6996  0036B8  0E00               	movlw	high _dbuf
  6997  0036BA  2040               	addwfc	(xtoa@i+1)^0,w,c
  6998  0036BC  6E14               	movwf	(pad@buf+1)^0,c
  6999  0036BE  C035  F015         	movff	xtoa@w,pad@p
  7000  0036C2  C036  F016         	movff	xtoa@w+1,pad@p+1
  7001  0036C6  EC3F  F038         	call	_pad	;wreg free
  7002  0036CA  C011  F01C         	movff	?_pad,?_xtoa
  7003  0036CE  C012  F01D         	movff	?_pad+1,?_xtoa+1
  7004  0036D2  0012               	return		;funcret
  7005  0036D4  FFFF               	dw	65535	; errata NOP
  7006  0036D6                     __end_of_xtoa:
  7007                           	callstack 0
  7008                           
  7009 ;; *************** function _toupper *****************
  7010 ;; Defined at:
  7011 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\toupper.c"
  7012 ;; Parameters:    Size  Location     Type
  7013 ;;  c               2    6[COMRAM] int 
  7014 ;; Auto vars:     Size  Location     Type
  7015 ;;		None
  7016 ;; Return value:  Size  Location     Type
  7017 ;;                  2    6[COMRAM] int 
  7018 ;; Registers used:
  7019 ;;		wreg, status,2, status,0
  7020 ;; Tracked objects:
  7021 ;;		On entry : 0/0
  7022 ;;		On exit  : 0/0
  7023 ;;		Unchanged: 0/0
  7024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7025 ;;      Params:         2       0       0       0       0       0       0
  7026 ;;      Locals:         2       0       0       0       0       0       0
  7027 ;;      Temps:          4       0       0       0       0       0       0
  7028 ;;      Totals:         8       0       0       0       0       0       0
  7029 ;;Total ram usage:        8 bytes
  7030 ;; Hardware stack levels used:    1
  7031 ;; Hardware stack levels required when called:    2
  7032 ;; This function calls:
  7033 ;;		_islower
  7034 ;; This function is called by:
  7035 ;;		_xtoa
  7036 ;; This function uses a non-reentrant model
  7037 ;;
  7038                           
  7039                           	psect	text10
  7040  0067CC                     __ptext10:
  7041                           	callstack 0
  7042  0067CC                     _toupper:
  7043                           	callstack 0
  7044  0067CC  FFFF               	dw	65535	; assembler added errata NOP
  7045  0067CE  0E9F               	movlw	159
  7046  0067D0  6E09               	movwf	??_toupper^0,c
  7047  0067D2  0EFF               	movlw	255
  7048  0067D4  6E0A               	movwf	(??_toupper+1)^0,c
  7049  0067D6  C007  F00B         	movff	toupper@c,??_toupper+2
  7050  0067DA  C008  F00C         	movff	toupper@c+1,??_toupper+3
  7051  0067DE  5009               	movf	??_toupper^0,w,c
  7052  0067E0  260B               	addwf	(??_toupper+2)^0,f,c
  7053  0067E2  500A               	movf	(??_toupper+1)^0,w,c
  7054  0067E4  220C               	addwfc	(??_toupper+3)^0,f,c
  7055  0067E6  500C               	movf	(??_toupper+3)^0,w,c
  7056  0067E8  E10B               	bnz	u4070
  7057  0067EA  0E1A               	movlw	26
  7058  0067EC  5C0B               	subwf	(??_toupper+2)^0,w,c
  7059  0067EE  A0D8               	btfss	status,0,c
  7060  0067F0  EFFC  F033         	goto	u4071
  7061  0067F4  EF00  F034         	goto	u4070
  7062  0067F8                     u4071:
  7063  0067F8  FFFF               	dw	65535	; assembler added errata NOP
  7064  0067FA  0E01               	movlw	1
  7065  0067FC  EF02  F034         	goto	u4080
  7066  006800                     u4070:
  7067  006800  FFFF               	dw	65535	; assembler added errata NOP
  7068  006802  0E00               	movlw	0
  7069  006804                     u4080:
  7070  006804  FFFF               	dw	65535	; assembler added errata NOP
  7071  006806  6E0D               	movwf	_toupper$1930^0,c
  7072  006808  6A0E               	clrf	(_toupper$1930+1)^0,c
  7073  00680A  500D               	movf	_toupper$1930^0,w,c
  7074  00680C  100E               	iorwf	(_toupper$1930+1)^0,w,c
  7075  00680E  B4D8               	btfsc	status,2,c
  7076  006810  EF0C  F034         	goto	u4091
  7077  006814  EF0F  F034         	goto	u4090
  7078  006818                     u4091:
  7079  006818  FFFF               	dw	65535	; assembler added errata NOP
  7080  00681A  EF16  F034         	goto	l1493
  7081  00681E                     u4090:
  7082  00681E  FFFF               	dw	65535	; assembler added errata NOP
  7083  006820  0E5F               	movlw	95
  7084  006822  1407               	andwf	toupper@c^0,w,c
  7085  006824  6E07               	movwf	?_toupper^0,c
  7086  006826  6A08               	clrf	(?_toupper+1)^0,c
  7087  006828  EF1B  F034         	goto	l1498
  7088  00682C                     l1493:
  7089  00682C  FFFF               	dw	65535	; assembler added errata NOP
  7090  00682E  C007  F007         	movff	toupper@c,?_toupper
  7091  006832  C008  F008         	movff	toupper@c+1,?_toupper+1
  7092  006836                     l1498:
  7093  006836  FFFF               	dw	65535	; assembler added errata NOP
  7094  006838  0012               	return		;funcret
  7095  00683A  FFFF               	dw	65535	; errata NOP
  7096  00683C                     __end_of_toupper:
  7097                           	callstack 0
  7098                           
  7099 ;; *************** function _islower *****************
  7100 ;; Defined at:
  7101 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\islower.c"
  7102 ;; Parameters:    Size  Location     Type
  7103 ;;  c               2    0[COMRAM] int 
  7104 ;; Auto vars:     Size  Location     Type
  7105 ;;		None
  7106 ;; Return value:  Size  Location     Type
  7107 ;;                  2    0[COMRAM] int 
  7108 ;; Registers used:
  7109 ;;		wreg, status,2, status,0
  7110 ;; Tracked objects:
  7111 ;;		On entry : 0/0
  7112 ;;		On exit  : 0/0
  7113 ;;		Unchanged: 0/0
  7114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7115 ;;      Params:         2       0       0       0       0       0       0
  7116 ;;      Locals:         0       0       0       0       0       0       0
  7117 ;;      Temps:          4       0       0       0       0       0       0
  7118 ;;      Totals:         6       0       0       0       0       0       0
  7119 ;;Total ram usage:        6 bytes
  7120 ;; Hardware stack levels used:    1
  7121 ;; Hardware stack levels required when called:    1
  7122 ;; This function calls:
  7123 ;;		Nothing
  7124 ;; This function is called by:
  7125 ;;		_toupper
  7126 ;; This function uses a non-reentrant model
  7127 ;;
  7128                           
  7129                           	psect	text11
  7130  00647E                     __ptext11:
  7131                           	callstack 0
  7132  00647E                     _islower:
  7133                           	callstack 23
  7134  00647E  FFFF               	dw	65535	; assembler added errata NOP
  7135  006480  0E9F               	movlw	159
  7136  006482  6E03               	movwf	??_islower^0,c
  7137  006484  0EFF               	movlw	255
  7138  006486  6E04               	movwf	(??_islower+1)^0,c
  7139  006488  C001  F005         	movff	islower@c,??_islower+2
  7140  00648C  C002  F006         	movff	islower@c+1,??_islower+3
  7141  006490  5003               	movf	??_islower^0,w,c
  7142  006492  2605               	addwf	(??_islower+2)^0,f,c
  7143  006494  5004               	movf	(??_islower+1)^0,w,c
  7144  006496  2206               	addwfc	(??_islower+3)^0,f,c
  7145  006498  5006               	movf	(??_islower+3)^0,w,c
  7146  00649A  E10B               	bnz	u3760
  7147  00649C  0E1A               	movlw	26
  7148  00649E  5C05               	subwf	(??_islower+2)^0,w,c
  7149  0064A0  A0D8               	btfss	status,0,c
  7150  0064A2  EF55  F032         	goto	u3761
  7151  0064A6  EF59  F032         	goto	u3760
  7152  0064AA                     u3761:
  7153  0064AA  FFFF               	dw	65535	; assembler added errata NOP
  7154  0064AC  0E01               	movlw	1
  7155  0064AE  EF5B  F032         	goto	u3770
  7156  0064B2                     u3760:
  7157  0064B2  FFFF               	dw	65535	; assembler added errata NOP
  7158  0064B4  0E00               	movlw	0
  7159  0064B6                     u3770:
  7160  0064B6  FFFF               	dw	65535	; assembler added errata NOP
  7161  0064B8  6E01               	movwf	?_islower^0,c
  7162  0064BA  6A02               	clrf	(?_islower+1)^0,c
  7163  0064BC  0012               	return		;funcret
  7164  0064BE  FFFF               	dw	65535	; errata NOP
  7165  0064C0                     __end_of_islower:
  7166                           	callstack 0
  7167                           
  7168 ;; *************** function _isupper *****************
  7169 ;; Defined at:
  7170 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  7171 ;; Parameters:    Size  Location     Type
  7172 ;;  c               2    0[COMRAM] int 
  7173 ;; Auto vars:     Size  Location     Type
  7174 ;;		None
  7175 ;; Return value:  Size  Location     Type
  7176 ;;                  2    0[COMRAM] int 
  7177 ;; Registers used:
  7178 ;;		wreg, status,2, status,0
  7179 ;; Tracked objects:
  7180 ;;		On entry : 0/0
  7181 ;;		On exit  : 0/0
  7182 ;;		Unchanged: 0/0
  7183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7184 ;;      Params:         2       0       0       0       0       0       0
  7185 ;;      Locals:         0       0       0       0       0       0       0
  7186 ;;      Temps:          4       0       0       0       0       0       0
  7187 ;;      Totals:         6       0       0       0       0       0       0
  7188 ;;Total ram usage:        6 bytes
  7189 ;; Hardware stack levels used:    1
  7190 ;; Hardware stack levels required when called:    1
  7191 ;; This function calls:
  7192 ;;		Nothing
  7193 ;; This function is called by:
  7194 ;;		_xtoa
  7195 ;; This function uses a non-reentrant model
  7196 ;;
  7197                           
  7198                           	psect	text12
  7199  00643C                     __ptext12:
  7200                           	callstack 0
  7201  00643C                     _isupper:
  7202                           	callstack 24
  7203  00643C  FFFF               	dw	65535	; assembler added errata NOP
  7204  00643E  0EBF               	movlw	191
  7205  006440  6E03               	movwf	??_isupper^0,c
  7206  006442  0EFF               	movlw	255
  7207  006444  6E04               	movwf	(??_isupper+1)^0,c
  7208  006446  C001  F005         	movff	isupper@c,??_isupper+2
  7209  00644A  C002  F006         	movff	isupper@c+1,??_isupper+3
  7210  00644E  5003               	movf	??_isupper^0,w,c
  7211  006450  2605               	addwf	(??_isupper+2)^0,f,c
  7212  006452  5004               	movf	(??_isupper+1)^0,w,c
  7213  006454  2206               	addwfc	(??_isupper+3)^0,f,c
  7214  006456  5006               	movf	(??_isupper+3)^0,w,c
  7215  006458  E10B               	bnz	u4030
  7216  00645A  0E1A               	movlw	26
  7217  00645C  5C05               	subwf	(??_isupper+2)^0,w,c
  7218  00645E  A0D8               	btfss	status,0,c
  7219  006460  EF34  F032         	goto	u4031
  7220  006464  EF38  F032         	goto	u4030
  7221  006468                     u4031:
  7222  006468  FFFF               	dw	65535	; assembler added errata NOP
  7223  00646A  0E01               	movlw	1
  7224  00646C  EF3A  F032         	goto	u4040
  7225  006470                     u4030:
  7226  006470  FFFF               	dw	65535	; assembler added errata NOP
  7227  006472  0E00               	movlw	0
  7228  006474                     u4040:
  7229  006474  FFFF               	dw	65535	; assembler added errata NOP
  7230  006476  6E01               	movwf	?_isupper^0,c
  7231  006478  6A02               	clrf	(?_isupper+1)^0,c
  7232  00647A  0012               	return		;funcret
  7233  00647C  FFFF               	dw	65535	; errata NOP
  7234  00647E                     __end_of_isupper:
  7235                           	callstack 0
  7236                           
  7237 ;; *************** function _isalpha *****************
  7238 ;; Defined at:
  7239 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isalpha.c"
  7240 ;; Parameters:    Size  Location     Type
  7241 ;;  c               2    0[COMRAM] int 
  7242 ;; Auto vars:     Size  Location     Type
  7243 ;;		None
  7244 ;; Return value:  Size  Location     Type
  7245 ;;                  2    0[COMRAM] int 
  7246 ;; Registers used:
  7247 ;;		wreg, status,2, status,0
  7248 ;; Tracked objects:
  7249 ;;		On entry : 0/0
  7250 ;;		On exit  : 0/0
  7251 ;;		Unchanged: 0/0
  7252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7253 ;;      Params:         2       0       0       0       0       0       0
  7254 ;;      Locals:         0       0       0       0       0       0       0
  7255 ;;      Temps:          4       0       0       0       0       0       0
  7256 ;;      Totals:         6       0       0       0       0       0       0
  7257 ;;Total ram usage:        6 bytes
  7258 ;; Hardware stack levels used:    1
  7259 ;; Hardware stack levels required when called:    1
  7260 ;; This function calls:
  7261 ;;		Nothing
  7262 ;; This function is called by:
  7263 ;;		_xtoa
  7264 ;; This function uses a non-reentrant model
  7265 ;;
  7266                           
  7267                           	psect	text13
  7268  0064C0                     __ptext13:
  7269                           	callstack 0
  7270  0064C0                     _isalpha:
  7271                           	callstack 24
  7272  0064C0  FFFF               	dw	65535	; assembler added errata NOP
  7273  0064C2  0E9F               	movlw	159
  7274  0064C4  6E03               	movwf	??_isalpha^0,c
  7275  0064C6  0EFF               	movlw	255
  7276  0064C8  6E04               	movwf	(??_isalpha+1)^0,c
  7277  0064CA  0E20               	movlw	32
  7278  0064CC  1001               	iorwf	isalpha@c^0,w,c
  7279  0064CE  6E05               	movwf	(??_isalpha+2)^0,c
  7280  0064D0  0E00               	movlw	0
  7281  0064D2  1002               	iorwf	(isalpha@c+1)^0,w,c
  7282  0064D4  6E06               	movwf	(??_isalpha+3)^0,c
  7283  0064D6  5003               	movf	??_isalpha^0,w,c
  7284  0064D8  2605               	addwf	(??_isalpha+2)^0,f,c
  7285  0064DA  5004               	movf	(??_isalpha+1)^0,w,c
  7286  0064DC  2206               	addwfc	(??_isalpha+3)^0,f,c
  7287  0064DE  5006               	movf	(??_isalpha+3)^0,w,c
  7288  0064E0  E10B               	bnz	u4050
  7289  0064E2  0E1A               	movlw	26
  7290  0064E4  5C05               	subwf	(??_isalpha+2)^0,w,c
  7291  0064E6  A0D8               	btfss	status,0,c
  7292  0064E8  EF78  F032         	goto	u4051
  7293  0064EC  EF7C  F032         	goto	u4050
  7294  0064F0                     u4051:
  7295  0064F0  FFFF               	dw	65535	; assembler added errata NOP
  7296  0064F2  0E01               	movlw	1
  7297  0064F4  EF7E  F032         	goto	u4060
  7298  0064F8                     u4050:
  7299  0064F8  FFFF               	dw	65535	; assembler added errata NOP
  7300  0064FA  0E00               	movlw	0
  7301  0064FC                     u4060:
  7302  0064FC  FFFF               	dw	65535	; assembler added errata NOP
  7303  0064FE  6E01               	movwf	?_isalpha^0,c
  7304  006500  6A02               	clrf	(?_isalpha+1)^0,c
  7305  006502  0012               	return		;funcret
  7306  006504  FFFF               	dw	65535	; errata NOP
  7307  006506                     __end_of_isalpha:
  7308                           	callstack 0
  7309                           
  7310 ;; *************** function _utoa *****************
  7311 ;; Defined at:
  7312 ;;		line 593 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7313 ;; Parameters:    Size  Location     Type
  7314 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7315 ;;		 -> vsnprintf@f(6), 
  7316 ;;  d               8   29[COMRAM] unsigned long long 
  7317 ;; Auto vars:     Size  Location     Type
  7318 ;;  n               8   49[COMRAM] unsigned long long 
  7319 ;;  i               2   57[COMRAM] int 
  7320 ;;  w               2   47[COMRAM] int 
  7321 ;;  p               2   45[COMRAM] int 
  7322 ;; Return value:  Size  Location     Type
  7323 ;;                  2   27[COMRAM] int 
  7324 ;; Registers used:
  7325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7326 ;; Tracked objects:
  7327 ;;		On entry : 0/0
  7328 ;;		On exit  : 0/0
  7329 ;;		Unchanged: 0/0
  7330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7331 ;;      Params:        10       0       0       0       0       0       0
  7332 ;;      Locals:        14       0       0       0       0       0       0
  7333 ;;      Temps:          8       0       0       0       0       0       0
  7334 ;;      Totals:        32       0       0       0       0       0       0
  7335 ;;Total ram usage:       32 bytes
  7336 ;; Hardware stack levels used:    1
  7337 ;; Hardware stack levels required when called:    5
  7338 ;; This function calls:
  7339 ;;		___lodiv
  7340 ;;		___lomod
  7341 ;;		_pad
  7342 ;; This function is called by:
  7343 ;;		_vfpfcnvrt
  7344 ;; This function uses a non-reentrant model
  7345 ;;
  7346                           
  7347                           	psect	text14
  7348  0036D6                     __ptext14:
  7349                           	callstack 0
  7350  0036D6                     _utoa:
  7351                           	callstack 0
  7352  0036D6  FFFF               	dw	65535	; assembler added errata NOP
  7353  0036D8                     
  7354                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 593: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 594: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 595:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common
      +                          \doprnt.c: 596:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sourc
      +                          es\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  7355  0036D8  0100               	movlb	0	; () banked
  7356  0036DA  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7357  0036DC  EF72  F01B         	goto	u4501
  7358  0036E0  EF75  F01B         	goto	u4500
  7359  0036E4                     u4501:
  7360  0036E4  FFFF               	dw	65535	; assembler added errata NOP
  7361  0036E6  EF77  F01B         	goto	l4121
  7362  0036EA                     u4500:
  7363  0036EA  FFFF               	dw	65535	; assembler added errata NOP
  7364  0036EC                     
  7365                           ; BSR set to: 0
  7366                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 600:         flag
      +                          s &= ~(1 << 1);
  7367  0036EC  938A               	bcf	_flags& (0+255),1,b
  7368  0036EE                     l4121:
  7369  0036EE  FFFF               	dw	65535	; assembler added errata NOP
  7370                           
  7371                           ; BSR set to: 0
  7372                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 602:     p = (0 <
      +                           prec) ? prec : 1;
  7373  0036F0  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7374  0036F2  EF86  F01B         	goto	u4510
  7375  0036F6  5189               	movf	(_prec+1)& (0+255),w,b
  7376  0036F8  E106               	bnz	u4511
  7377  0036FA  0588               	decf	_prec& (0+255),w,b
  7378  0036FC  B0D8               	btfsc	status,0,c
  7379  0036FE  EF83  F01B         	goto	u4511
  7380  003702  EF86  F01B         	goto	u4510
  7381  003706                     u4511:
  7382  003706  FFFF               	dw	65535	; assembler added errata NOP
  7383  003708  EF8D  F01B         	goto	l1269
  7384  00370C                     u4510:
  7385  00370C  FFFF               	dw	65535	; assembler added errata NOP
  7386  00370E                     
  7387                           ; BSR set to: 0
  7388  00370E  0E00               	movlw	0
  7389  003710  6E2F               	movwf	(utoa@p+1)^0,c
  7390  003712  0E01               	movlw	1
  7391  003714  6E2E               	movwf	utoa@p^0,c
  7392  003716  EF92  F01B         	goto	l1271
  7393  00371A                     l1269:
  7394  00371A  FFFF               	dw	65535	; assembler added errata NOP
  7395                           
  7396                           ; BSR set to: 0
  7397  00371C  C088  F02E         	movff	_prec,utoa@p
  7398  003720  C089  F02F         	movff	_prec+1,utoa@p+1
  7399  003724                     l1271:
  7400  003724  FFFF               	dw	65535	; assembler added errata NOP
  7401                           
  7402                           ; BSR set to: 0
  7403                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 603:     w = widt
      +                          h;
  7404  003726  C086  F030         	movff	_width,utoa@w
  7405  00372A  C087  F031         	movff	_width+1,utoa@w+1
  7406                           
  7407                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 606:     n = d;
  7408  00372E  C01E  F032         	movff	utoa@d,utoa@n
  7409  003732  C01F  F033         	movff	utoa@d+1,utoa@n+1
  7410  003736  C020  F034         	movff	utoa@d+2,utoa@n+2
  7411  00373A  C021  F035         	movff	utoa@d+3,utoa@n+3
  7412  00373E  C022  F036         	movff	utoa@d+4,utoa@n+4
  7413  003742  C023  F037         	movff	utoa@d+5,utoa@n+5
  7414  003746  C024  F038         	movff	utoa@d+6,utoa@n+6
  7415  00374A  C025  F039         	movff	utoa@d+7,utoa@n+7
  7416  00374E                     
  7417                           ; BSR set to: 0
  7418                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 607:     i = size
      +                          of(dbuf) - 1;
  7419  00374E  0E00               	movlw	0
  7420  003750  6E3B               	movwf	(utoa@i+1)^0,c
  7421  003752  0E1F               	movlw	31
  7422  003754  6E3A               	movwf	utoa@i^0,c
  7423  003756                     
  7424                           ; BSR set to: 0
  7425                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 608:     dbuf[i] 
      +                          = '\0';
  7426  003756  0E00               	movlw	0
  7427  003758  6FB7               	movwf	(_dbuf+31)& (0+255),b
  7428                           
  7429                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7430  00375A  EF26  F01C         	goto	l4139
  7431  00375E                     l4129:
  7432  00375E  FFFF               	dw	65535	; assembler added errata NOP
  7433                           
  7434                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 610:         --i;
  7435  003760  063A               	decf	utoa@i^0,f,c
  7436  003762  A0D8               	btfss	status,0,c
  7437  003764  063B               	decf	(utoa@i+1)^0,f,c
  7438  003766                     
  7439                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 611:         dbuf
      +                          [i] = '0' + (n % 10);
  7440  003766  0E98               	movlw	low _dbuf
  7441  003768  243A               	addwf	utoa@i^0,w,c
  7442  00376A  6ED9               	movwf	fsr2l,c
  7443  00376C  0E00               	movlw	high _dbuf
  7444  00376E  203B               	addwfc	(utoa@i+1)^0,w,c
  7445  003770  6EDA               	movwf	fsr2h,c
  7446  003772  C032  F001         	movff	utoa@n,___lomod@dividend
  7447  003776  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  7448  00377A  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  7449  00377E  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  7450  003782  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  7451  003786  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  7452  00378A  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  7453  00378E  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  7454  003792  0E0A               	movlw	10
  7455  003794  6E09               	movwf	___lomod@divisor^0,c
  7456  003796  0E00               	movlw	0
  7457  003798  6E0A               	movwf	(___lomod@divisor+1)^0,c
  7458  00379A  0E00               	movlw	0
  7459  00379C  6E0B               	movwf	(___lomod@divisor+2)^0,c
  7460  00379E  0E00               	movlw	0
  7461  0037A0  6E0C               	movwf	(___lomod@divisor+3)^0,c
  7462  0037A2  0E00               	movlw	0
  7463  0037A4  6E0D               	movwf	(___lomod@divisor+4)^0,c
  7464  0037A6  0E00               	movlw	0
  7465  0037A8  6E0E               	movwf	(___lomod@divisor+5)^0,c
  7466  0037AA  0E00               	movlw	0
  7467  0037AC  6E0F               	movwf	(___lomod@divisor+6)^0,c
  7468  0037AE  0E00               	movlw	0
  7469  0037B0  6E10               	movwf	(___lomod@divisor+7)^0,c
  7470  0037B2  ECB2  F038         	call	___lomod	;wreg free
  7471  0037B6  C001  F026         	movff	?___lomod,??_utoa
  7472  0037BA  C002  F027         	movff	?___lomod+1,??_utoa+1
  7473  0037BE  C003  F028         	movff	?___lomod+2,??_utoa+2
  7474  0037C2  C004  F029         	movff	?___lomod+3,??_utoa+3
  7475  0037C6  C005  F02A         	movff	?___lomod+4,??_utoa+4
  7476  0037CA  C006  F02B         	movff	?___lomod+5,??_utoa+5
  7477  0037CE  C007  F02C         	movff	?___lomod+6,??_utoa+6
  7478  0037D2  C008  F02D         	movff	?___lomod+7,??_utoa+7
  7479  0037D6  5026               	movf	??_utoa^0,w,c
  7480  0037D8  0F30               	addlw	48
  7481  0037DA  6EDF               	movwf	indf2,c
  7482  0037DC                     
  7483                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 612:         --p;
  7484  0037DC  062E               	decf	utoa@p^0,f,c
  7485  0037DE  A0D8               	btfss	status,0,c
  7486  0037E0  062F               	decf	(utoa@p+1)^0,f,c
  7487  0037E2                     
  7488                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 613:         --w;
  7489  0037E2  0630               	decf	utoa@w^0,f,c
  7490  0037E4  A0D8               	btfss	status,0,c
  7491  0037E6  0631               	decf	(utoa@w+1)^0,f,c
  7492  0037E8                     
  7493                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 614:         n = 
      +                          n / 10;
  7494  0037E8  C032  F001         	movff	utoa@n,___lodiv@dividend
  7495  0037EC  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  7496  0037F0  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  7497  0037F4  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  7498  0037F8  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  7499  0037FC  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  7500  003800  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  7501  003804  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  7502  003808  0E0A               	movlw	10
  7503  00380A  6E09               	movwf	___lodiv@divisor^0,c
  7504  00380C  0E00               	movlw	0
  7505  00380E  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  7506  003810  0E00               	movlw	0
  7507  003812  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  7508  003814  0E00               	movlw	0
  7509  003816  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  7510  003818  0E00               	movlw	0
  7511  00381A  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  7512  00381C  0E00               	movlw	0
  7513  00381E  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  7514  003820  0E00               	movlw	0
  7515  003822  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  7516  003824  0E00               	movlw	0
  7517  003826  6E10               	movwf	(___lodiv@divisor+7)^0,c
  7518  003828  EC7A  F01F         	call	___lodiv	;wreg free
  7519  00382C  C001  F032         	movff	?___lodiv,utoa@n
  7520  003830  C002  F033         	movff	?___lodiv+1,utoa@n+1
  7521  003834  C003  F034         	movff	?___lodiv+2,utoa@n+2
  7522  003838  C004  F035         	movff	?___lodiv+3,utoa@n+3
  7523  00383C  C005  F036         	movff	?___lodiv+4,utoa@n+4
  7524  003840  C006  F037         	movff	?___lodiv+5,utoa@n+5
  7525  003844  C007  F038         	movff	?___lodiv+6,utoa@n+6
  7526  003848  C008  F039         	movff	?___lodiv+7,utoa@n+7
  7527  00384C                     l4139:
  7528  00384C  FFFF               	dw	65535	; assembler added errata NOP
  7529                           
  7530                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7531  00384E  503A               	movf	utoa@i^0,w,c
  7532  003850  103B               	iorwf	(utoa@i+1)^0,w,c
  7533  003852  B4D8               	btfsc	status,2,c
  7534  003854  EF2E  F01C         	goto	u4521
  7535  003858  EF31  F01C         	goto	u4520
  7536  00385C                     u4521:
  7537  00385C  FFFF               	dw	65535	; assembler added errata NOP
  7538  00385E  EF6A  F01C         	goto	l4149
  7539  003862                     u4520:
  7540  003862  FFFF               	dw	65535	; assembler added errata NOP
  7541  003864  5032               	movf	utoa@n^0,w,c
  7542  003866  1033               	iorwf	(utoa@n+1)^0,w,c
  7543  003868  1034               	iorwf	(utoa@n+2)^0,w,c
  7544  00386A  1035               	iorwf	(utoa@n+3)^0,w,c
  7545  00386C  1036               	iorwf	(utoa@n+4)^0,w,c
  7546  00386E  1037               	iorwf	(utoa@n+5)^0,w,c
  7547  003870  1038               	iorwf	(utoa@n+6)^0,w,c
  7548  003872  1039               	iorwf	(utoa@n+7)^0,w,c
  7549  003874  A4D8               	btfss	status,2,c
  7550  003876  EF3F  F01C         	goto	u4531
  7551  00387A  EF42  F01C         	goto	u4530
  7552  00387E                     u4531:
  7553  00387E  FFFF               	dw	65535	; assembler added errata NOP
  7554  003880  EFAF  F01B         	goto	l4129
  7555  003884                     u4530:
  7556  003884  FFFF               	dw	65535	; assembler added errata NOP
  7557  003886  BE2F               	btfsc	(utoa@p+1)^0,7,c
  7558  003888  EF51  F01C         	goto	u4540
  7559  00388C  502F               	movf	(utoa@p+1)^0,w,c
  7560  00388E  E106               	bnz	u4541
  7561  003890  042E               	decf	utoa@p^0,w,c
  7562  003892  B0D8               	btfsc	status,0,c
  7563  003894  EF4E  F01C         	goto	u4541
  7564  003898  EF51  F01C         	goto	u4540
  7565  00389C                     u4541:
  7566  00389C  FFFF               	dw	65535	; assembler added errata NOP
  7567  00389E  EFAF  F01B         	goto	l4129
  7568  0038A2                     u4540:
  7569  0038A2  FFFF               	dw	65535	; assembler added errata NOP
  7570  0038A4  BE31               	btfsc	(utoa@w+1)^0,7,c
  7571  0038A6  EF5D  F01C         	goto	u4551
  7572  0038AA  5031               	movf	(utoa@w+1)^0,w,c
  7573  0038AC  E109               	bnz	u4550
  7574  0038AE  0430               	decf	utoa@w^0,w,c
  7575  0038B0  A0D8               	btfss	status,0,c
  7576  0038B2  EF5D  F01C         	goto	u4551
  7577  0038B6  EF60  F01C         	goto	u4550
  7578  0038BA                     u4551:
  7579  0038BA  FFFF               	dw	65535	; assembler added errata NOP
  7580  0038BC  EF6A  F01C         	goto	l4149
  7581  0038C0                     u4550:
  7582  0038C0  FFFF               	dw	65535	; assembler added errata NOP
  7583  0038C2  0100               	movlb	0	; () banked
  7584  0038C4  B38A               	btfsc	_flags& (0+255),1,b
  7585  0038C6  EF67  F01C         	goto	u4561
  7586  0038CA  EF6A  F01C         	goto	u4560
  7587  0038CE                     u4561:
  7588  0038CE  FFFF               	dw	65535	; assembler added errata NOP
  7589  0038D0  EFAF  F01B         	goto	l4129
  7590  0038D4                     u4560:
  7591  0038D4                     l4149:
  7592  0038D4  FFFF               	dw	65535	; assembler added errata NOP
  7593                           
  7594                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 618:     return p
      +                          ad(fp, &dbuf[i], w);
  7595  0038D6  C01C  F011         	movff	utoa@fp,pad@fp
  7596  0038DA  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  7597  0038DE  0E98               	movlw	low _dbuf
  7598  0038E0  243A               	addwf	utoa@i^0,w,c
  7599  0038E2  6E13               	movwf	pad@buf^0,c
  7600  0038E4  0E00               	movlw	high _dbuf
  7601  0038E6  203B               	addwfc	(utoa@i+1)^0,w,c
  7602  0038E8  6E14               	movwf	(pad@buf+1)^0,c
  7603  0038EA  C030  F015         	movff	utoa@w,pad@p
  7604  0038EE  C031  F016         	movff	utoa@w+1,pad@p+1
  7605  0038F2  EC3F  F038         	call	_pad	;wreg free
  7606  0038F6  C011  F01C         	movff	?_pad,?_utoa
  7607  0038FA  C012  F01D         	movff	?_pad+1,?_utoa+1
  7608  0038FE  0012               	return		;funcret
  7609  003900  FFFF               	dw	65535	; errata NOP
  7610  003902                     __end_of_utoa:
  7611                           	callstack 0
  7612                           
  7613 ;; *************** function ___lomod *****************
  7614 ;; Defined at:
  7615 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lomod.c"
  7616 ;; Parameters:    Size  Location     Type
  7617 ;;  dividend        8    0[COMRAM] unsigned long long 
  7618 ;;  divisor         8    8[COMRAM] unsigned long long 
  7619 ;; Auto vars:     Size  Location     Type
  7620 ;;  counter         1   16[COMRAM] unsigned char 
  7621 ;; Return value:  Size  Location     Type
  7622 ;;                  8    0[COMRAM] unsigned long long 
  7623 ;; Registers used:
  7624 ;;		wreg, status,2, status,0
  7625 ;; Tracked objects:
  7626 ;;		On entry : 0/0
  7627 ;;		On exit  : 0/0
  7628 ;;		Unchanged: 0/0
  7629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7630 ;;      Params:        16       0       0       0       0       0       0
  7631 ;;      Locals:         1       0       0       0       0       0       0
  7632 ;;      Temps:          0       0       0       0       0       0       0
  7633 ;;      Totals:        17       0       0       0       0       0       0
  7634 ;;Total ram usage:       17 bytes
  7635 ;; Hardware stack levels used:    1
  7636 ;; Hardware stack levels required when called:    1
  7637 ;; This function calls:
  7638 ;;		Nothing
  7639 ;; This function is called by:
  7640 ;;		_utoa
  7641 ;; This function uses a non-reentrant model
  7642 ;;
  7643                           
  7644                           	psect	text15
  7645  007164                     __ptext15:
  7646                           	callstack 0
  7647  007164                     ___lomod:
  7648                           	callstack 0
  7649  007164  FFFF               	dw	65535	; assembler added errata NOP
  7650  007166  5009               	movf	___lomod@divisor^0,w,c
  7651  007168  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  7652  00716A  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  7653  00716C  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  7654  00716E  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  7655  007170  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  7656  007172  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  7657  007174  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  7658  007176  B4D8               	btfsc	status,2,c
  7659  007178  EFC0  F038         	goto	u3961
  7660  00717C  EFC3  F038         	goto	u3960
  7661  007180                     u3961:
  7662  007180  FFFF               	dw	65535	; assembler added errata NOP
  7663  007182  EF14  F039         	goto	l881
  7664  007186                     u3960:
  7665  007186  FFFF               	dw	65535	; assembler added errata NOP
  7666  007188  0E01               	movlw	1
  7667  00718A  6E11               	movwf	___lomod@counter^0,c
  7668  00718C  EFD3  F038         	goto	l3885
  7669  007190                     l3883:
  7670  007190  FFFF               	dw	65535	; assembler added errata NOP
  7671  007192  90D8               	bcf	status,0,c
  7672  007194  3609               	rlcf	___lomod@divisor^0,f,c
  7673  007196  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  7674  007198  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  7675  00719A  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  7676  00719C  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  7677  00719E  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  7678  0071A0  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  7679  0071A2  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  7680  0071A4  2A11               	incf	___lomod@counter^0,f,c
  7681  0071A6                     l3885:
  7682  0071A6  FFFF               	dw	65535	; assembler added errata NOP
  7683  0071A8  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  7684  0071AA  EFD9  F038         	goto	u3971
  7685  0071AE  EFDC  F038         	goto	u3970
  7686  0071B2                     u3971:
  7687  0071B2  FFFF               	dw	65535	; assembler added errata NOP
  7688  0071B4  EFC8  F038         	goto	l3883
  7689  0071B8                     u3970:
  7690  0071B8  FFFF               	dw	65535	; assembler added errata NOP
  7691  0071BA                     l3887:
  7692  0071BA  FFFF               	dw	65535	; assembler added errata NOP
  7693  0071BC  5009               	movf	___lomod@divisor^0,w,c
  7694  0071BE  5C01               	subwf	___lomod@dividend^0,w,c
  7695  0071C0  500A               	movf	(___lomod@divisor+1)^0,w,c
  7696  0071C2  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  7697  0071C4  500B               	movf	(___lomod@divisor+2)^0,w,c
  7698  0071C6  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  7699  0071C8  500C               	movf	(___lomod@divisor+3)^0,w,c
  7700  0071CA  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  7701  0071CC  500D               	movf	(___lomod@divisor+4)^0,w,c
  7702  0071CE  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  7703  0071D0  500E               	movf	(___lomod@divisor+5)^0,w,c
  7704  0071D2  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  7705  0071D4  500F               	movf	(___lomod@divisor+6)^0,w,c
  7706  0071D6  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  7707  0071D8  5010               	movf	(___lomod@divisor+7)^0,w,c
  7708  0071DA  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  7709  0071DC  A0D8               	btfss	status,0,c
  7710  0071DE  EFF3  F038         	goto	u3981
  7711  0071E2  EFF6  F038         	goto	u3980
  7712  0071E6                     u3981:
  7713  0071E6  FFFF               	dw	65535	; assembler added errata NOP
  7714  0071E8  EF07  F039         	goto	l3891
  7715  0071EC                     u3980:
  7716  0071EC  FFFF               	dw	65535	; assembler added errata NOP
  7717  0071EE  5009               	movf	___lomod@divisor^0,w,c
  7718  0071F0  5E01               	subwf	___lomod@dividend^0,f,c
  7719  0071F2  500A               	movf	(___lomod@divisor+1)^0,w,c
  7720  0071F4  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  7721  0071F6  500B               	movf	(___lomod@divisor+2)^0,w,c
  7722  0071F8  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  7723  0071FA  500C               	movf	(___lomod@divisor+3)^0,w,c
  7724  0071FC  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  7725  0071FE  500D               	movf	(___lomod@divisor+4)^0,w,c
  7726  007200  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  7727  007202  500E               	movf	(___lomod@divisor+5)^0,w,c
  7728  007204  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  7729  007206  500F               	movf	(___lomod@divisor+6)^0,w,c
  7730  007208  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  7731  00720A  5010               	movf	(___lomod@divisor+7)^0,w,c
  7732  00720C  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  7733  00720E                     l3891:
  7734  00720E  FFFF               	dw	65535	; assembler added errata NOP
  7735  007210  90D8               	bcf	status,0,c
  7736  007212  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  7737  007214  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  7738  007216  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  7739  007218  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  7740  00721A  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  7741  00721C  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  7742  00721E  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  7743  007220  3209               	rrcf	___lomod@divisor^0,f,c
  7744  007222  2E11               	decfsz	___lomod@counter^0,f,c
  7745  007224  EFDD  F038         	goto	l3887
  7746  007228                     l881:
  7747  007228  FFFF               	dw	65535	; assembler added errata NOP
  7748  00722A  C001  F001         	movff	___lomod@dividend,?___lomod
  7749  00722E  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  7750  007232  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  7751  007236  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  7752  00723A  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  7753  00723E  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  7754  007242  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  7755  007246  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  7756  00724A  0012               	return		;funcret
  7757  00724C  FFFF               	dw	65535	; errata NOP
  7758  00724E                     __end_of___lomod:
  7759                           	callstack 0
  7760                           
  7761 ;; *************** function ___lodiv *****************
  7762 ;; Defined at:
  7763 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lodiv.c"
  7764 ;; Parameters:    Size  Location     Type
  7765 ;;  dividend        8    0[COMRAM] unsigned long long 
  7766 ;;  divisor         8    8[COMRAM] unsigned long long 
  7767 ;; Auto vars:     Size  Location     Type
  7768 ;;  quotient        8   16[COMRAM] unsigned long long 
  7769 ;;  counter         1   24[COMRAM] unsigned char 
  7770 ;; Return value:  Size  Location     Type
  7771 ;;                  8    0[COMRAM] unsigned long long 
  7772 ;; Registers used:
  7773 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7774 ;; Tracked objects:
  7775 ;;		On entry : 0/0
  7776 ;;		On exit  : 0/0
  7777 ;;		Unchanged: 0/0
  7778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7779 ;;      Params:        16       0       0       0       0       0       0
  7780 ;;      Locals:         9       0       0       0       0       0       0
  7781 ;;      Temps:          0       0       0       0       0       0       0
  7782 ;;      Totals:        25       0       0       0       0       0       0
  7783 ;;Total ram usage:       25 bytes
  7784 ;; Hardware stack levels used:    1
  7785 ;; Hardware stack levels required when called:    1
  7786 ;; This function calls:
  7787 ;;		Nothing
  7788 ;; This function is called by:
  7789 ;;		_utoa
  7790 ;; This function uses a non-reentrant model
  7791 ;;
  7792                           
  7793                           	psect	text16
  7794  003EF4                     __ptext16:
  7795                           	callstack 0
  7796  003EF4                     ___lodiv:
  7797                           	callstack 0
  7798  003EF4  FFFF               	dw	65535	; assembler added errata NOP
  7799  003EF6  EE20  F011         	lfsr	2,___lodiv@quotient
  7800  003EFA  0E07               	movlw	7
  7801  003EFC                     u3921:
  7802  003EFC  6ADE               	clrf	postinc2,c
  7803  003EFE  06E8               	decf	wreg,f,c
  7804  003F00  E2FD               	bc	u3921
  7805  003F02  5009               	movf	___lodiv@divisor^0,w,c
  7806  003F04  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  7807  003F06  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  7808  003F08  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  7809  003F0A  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  7810  003F0C  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  7811  003F0E  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  7812  003F10  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  7813  003F12  B4D8               	btfsc	status,2,c
  7814  003F14  EF8E  F01F         	goto	u3931
  7815  003F18  EF91  F01F         	goto	u3930
  7816  003F1C                     u3931:
  7817  003F1C  FFFF               	dw	65535	; assembler added errata NOP
  7818  003F1E  EFEC  F01F         	goto	l871
  7819  003F22                     u3930:
  7820  003F22  FFFF               	dw	65535	; assembler added errata NOP
  7821  003F24  0E01               	movlw	1
  7822  003F26  6E19               	movwf	___lodiv@counter^0,c
  7823  003F28  EFA1  F01F         	goto	l3865
  7824  003F2C                     l3863:
  7825  003F2C  FFFF               	dw	65535	; assembler added errata NOP
  7826  003F2E  90D8               	bcf	status,0,c
  7827  003F30  3609               	rlcf	___lodiv@divisor^0,f,c
  7828  003F32  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  7829  003F34  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  7830  003F36  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  7831  003F38  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  7832  003F3A  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  7833  003F3C  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  7834  003F3E  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  7835  003F40  2A19               	incf	___lodiv@counter^0,f,c
  7836  003F42                     l3865:
  7837  003F42  FFFF               	dw	65535	; assembler added errata NOP
  7838  003F44  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  7839  003F46  EFA7  F01F         	goto	u3941
  7840  003F4A  EFAA  F01F         	goto	u3940
  7841  003F4E                     u3941:
  7842  003F4E  FFFF               	dw	65535	; assembler added errata NOP
  7843  003F50  EF96  F01F         	goto	l3863
  7844  003F54                     u3940:
  7845  003F54  FFFF               	dw	65535	; assembler added errata NOP
  7846  003F56                     l3867:
  7847  003F56  FFFF               	dw	65535	; assembler added errata NOP
  7848  003F58  90D8               	bcf	status,0,c
  7849  003F5A  3611               	rlcf	___lodiv@quotient^0,f,c
  7850  003F5C  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  7851  003F5E  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  7852  003F60  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  7853  003F62  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  7854  003F64  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  7855  003F66  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  7856  003F68  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  7857  003F6A  5009               	movf	___lodiv@divisor^0,w,c
  7858  003F6C  5C01               	subwf	___lodiv@dividend^0,w,c
  7859  003F6E  500A               	movf	(___lodiv@divisor+1)^0,w,c
  7860  003F70  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  7861  003F72  500B               	movf	(___lodiv@divisor+2)^0,w,c
  7862  003F74  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  7863  003F76  500C               	movf	(___lodiv@divisor+3)^0,w,c
  7864  003F78  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  7865  003F7A  500D               	movf	(___lodiv@divisor+4)^0,w,c
  7866  003F7C  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  7867  003F7E  500E               	movf	(___lodiv@divisor+5)^0,w,c
  7868  003F80  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  7869  003F82  500F               	movf	(___lodiv@divisor+6)^0,w,c
  7870  003F84  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  7871  003F86  5010               	movf	(___lodiv@divisor+7)^0,w,c
  7872  003F88  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  7873  003F8A  A0D8               	btfss	status,0,c
  7874  003F8C  EFCA  F01F         	goto	u3951
  7875  003F90  EFCD  F01F         	goto	u3950
  7876  003F94                     u3951:
  7877  003F94  FFFF               	dw	65535	; assembler added errata NOP
  7878  003F96  EFDF  F01F         	goto	l3875
  7879  003F9A                     u3950:
  7880  003F9A  FFFF               	dw	65535	; assembler added errata NOP
  7881  003F9C  5009               	movf	___lodiv@divisor^0,w,c
  7882  003F9E  5E01               	subwf	___lodiv@dividend^0,f,c
  7883  003FA0  500A               	movf	(___lodiv@divisor+1)^0,w,c
  7884  003FA2  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  7885  003FA4  500B               	movf	(___lodiv@divisor+2)^0,w,c
  7886  003FA6  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  7887  003FA8  500C               	movf	(___lodiv@divisor+3)^0,w,c
  7888  003FAA  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  7889  003FAC  500D               	movf	(___lodiv@divisor+4)^0,w,c
  7890  003FAE  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  7891  003FB0  500E               	movf	(___lodiv@divisor+5)^0,w,c
  7892  003FB2  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  7893  003FB4  500F               	movf	(___lodiv@divisor+6)^0,w,c
  7894  003FB6  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  7895  003FB8  5010               	movf	(___lodiv@divisor+7)^0,w,c
  7896  003FBA  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  7897  003FBC  8011               	bsf	___lodiv@quotient^0,0,c
  7898  003FBE                     l3875:
  7899  003FBE  FFFF               	dw	65535	; assembler added errata NOP
  7900  003FC0  90D8               	bcf	status,0,c
  7901  003FC2  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  7902  003FC4  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  7903  003FC6  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  7904  003FC8  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  7905  003FCA  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  7906  003FCC  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  7907  003FCE  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  7908  003FD0  3209               	rrcf	___lodiv@divisor^0,f,c
  7909  003FD2  2E19               	decfsz	___lodiv@counter^0,f,c
  7910  003FD4  EFAB  F01F         	goto	l3867
  7911  003FD8                     l871:
  7912  003FD8  FFFF               	dw	65535	; assembler added errata NOP
  7913  003FDA  C011  F001         	movff	___lodiv@quotient,?___lodiv
  7914  003FDE  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  7915  003FE2  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  7916  003FE6  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  7917  003FEA  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  7918  003FEE  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  7919  003FF2  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  7920  003FF6  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  7921  003FFA  0012               	return		;funcret
  7922  003FFC  FFFF               	dw	65535	; errata NOP
  7923  003FFE                     __end_of___lodiv:
  7924                           	callstack 0
  7925                           
  7926 ;; *************** function _strncmp *****************
  7927 ;; Defined at:
  7928 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  7929 ;; Parameters:    Size  Location     Type
  7930 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  7931 ;;		 -> STR_10(3), 
  7932 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  7933 ;;		 -> STR_110(3), STR_106(3), STR_101(3), STR_97(3), 
  7934 ;;		 -> STR_92(4), STR_88(4), STR_83(3), STR_78(3), 
  7935 ;;		 -> STR_73(4), STR_68(3), STR_63(3), STR_58(4), 
  7936 ;;		 -> STR_53(3), STR_48(3), STR_43(4), STR_38(3), 
  7937 ;;		 -> STR_34(3), STR_29(3), STR_25(3), STR_20(4), 
  7938 ;;		 -> STR_16(4), 
  7939 ;;  n               2    4[COMRAM] unsigned int 
  7940 ;; Auto vars:     Size  Location     Type
  7941 ;;  r               2    9[COMRAM] PTR const unsigned char 
  7942 ;;		 -> STR_110(3), STR_106(3), STR_101(3), STR_97(3), 
  7943 ;;		 -> STR_92(4), STR_88(4), STR_83(3), STR_78(3), 
  7944 ;;		 -> STR_73(4), STR_68(3), STR_63(3), STR_58(4), 
  7945 ;;		 -> STR_53(3), STR_48(3), STR_43(4), STR_38(3), 
  7946 ;;		 -> STR_34(3), STR_29(3), STR_25(3), STR_20(4), 
  7947 ;;		 -> STR_16(4), 
  7948 ;;  l               2    7[COMRAM] PTR const unsigned char 
  7949 ;;		 -> STR_10(3), 
  7950 ;; Return value:  Size  Location     Type
  7951 ;;                  2    0[COMRAM] int 
  7952 ;; Registers used:
  7953 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7954 ;; Tracked objects:
  7955 ;;		On entry : 0/0
  7956 ;;		On exit  : 0/0
  7957 ;;		Unchanged: 0/0
  7958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7959 ;;      Params:         6       0       0       0       0       0       0
  7960 ;;      Locals:         4       0       0       0       0       0       0
  7961 ;;      Temps:          1       0       0       0       0       0       0
  7962 ;;      Totals:        11       0       0       0       0       0       0
  7963 ;;Total ram usage:       11 bytes
  7964 ;; Hardware stack levels used:    1
  7965 ;; Hardware stack levels required when called:    1
  7966 ;; This function calls:
  7967 ;;		Nothing
  7968 ;; This function is called by:
  7969 ;;		_vfpfcnvrt
  7970 ;; This function uses a non-reentrant model
  7971 ;;
  7972                           
  7973                           	psect	text17
  7974  00733E                     __ptext17:
  7975                           	callstack 0
  7976  00733E                     _strncmp:
  7977                           	callstack 0
  7978  00733E  FFFF               	dw	65535	; assembler added errata NOP
  7979  007340  C001  F008         	movff	strncmp@_l,strncmp@l
  7980  007344  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  7981  007348  C003  F00A         	movff	strncmp@_r,strncmp@r
  7982  00734C  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  7983  007350  0605               	decf	strncmp@n^0,f,c
  7984  007352  A0D8               	btfss	status,0,c
  7985  007354  0606               	decf	(strncmp@n+1)^0,f,c
  7986  007356  2805               	incf	strncmp@n^0,w,c
  7987  007358  E106               	bnz	u4811
  7988  00735A  2806               	incf	(strncmp@n+1)^0,w,c
  7989  00735C  A4D8               	btfss	status,2,c
  7990  00735E  EFB3  F039         	goto	u4811
  7991  007362  EFB6  F039         	goto	u4810
  7992  007366                     u4811:
  7993  007366  FFFF               	dw	65535	; assembler added errata NOP
  7994  007368  EFC5  F039         	goto	l4269
  7995  00736C                     u4810:
  7996  00736C  FFFF               	dw	65535	; assembler added errata NOP
  7997  00736E  0E00               	movlw	0
  7998  007370  6E02               	movwf	(?_strncmp+1)^0,c
  7999  007372  0E00               	movlw	0
  8000  007374  6E01               	movwf	?_strncmp^0,c
  8001  007376  EF20  F03A         	goto	l1483
  8002  00737A                     l4267:
  8003  00737A  FFFF               	dw	65535	; assembler added errata NOP
  8004  00737C  4A08               	infsnz	strncmp@l^0,f,c
  8005  00737E  2A09               	incf	(strncmp@l+1)^0,f,c
  8006  007380  4A0A               	infsnz	strncmp@r^0,f,c
  8007  007382  2A0B               	incf	(strncmp@r+1)^0,f,c
  8008  007384  0605               	decf	strncmp@n^0,f,c
  8009  007386  A0D8               	btfss	status,0,c
  8010  007388  0606               	decf	(strncmp@n+1)^0,f,c
  8011  00738A                     l4269:
  8012  00738A  FFFF               	dw	65535	; assembler added errata NOP
  8013  00738C  C008  FFF6         	movff	strncmp@l,tblptrl
  8014  007390  C009  FFF7         	movff	strncmp@l+1,tblptrh
  8015  007394                     	if	0	;tblptru may be non-zero
  8016  007394                     	endif
  8017  007394                     	if	0	;tblptru may be non-zero
  8018  007394                     	endif
  8019  007394  0008               	tblrd		*
  8020  007396  FFFF               	dw	65535	; errata NOP
  8021  007398  50F5               	movf	tablat,w,c
  8022  00739A  0900               	iorlw	0
  8023  00739C  B4D8               	btfsc	status,2,c
  8024  00739E  EFD3  F039         	goto	u4821
  8025  0073A2  EFD6  F039         	goto	u4820
  8026  0073A6                     u4821:
  8027  0073A6  FFFF               	dw	65535	; assembler added errata NOP
  8028  0073A8  EF0B  F03A         	goto	l4277
  8029  0073AC                     u4820:
  8030  0073AC  FFFF               	dw	65535	; assembler added errata NOP
  8031  0073AE  C00A  FFF6         	movff	strncmp@r,tblptrl
  8032  0073B2  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8033  0073B6                     	if	0	;tblptru may be non-zero
  8034  0073B6                     	endif
  8035  0073B6                     	if	0	;tblptru may be non-zero
  8036  0073B6                     	endif
  8037  0073B6  0008               	tblrd		*
  8038  0073B8  FFFF               	dw	65535	; errata NOP
  8039  0073BA  50F5               	movf	tablat,w,c
  8040  0073BC  0900               	iorlw	0
  8041  0073BE  B4D8               	btfsc	status,2,c
  8042  0073C0  EFE4  F039         	goto	u4831
  8043  0073C4  EFE7  F039         	goto	u4830
  8044  0073C8                     u4831:
  8045  0073C8  FFFF               	dw	65535	; assembler added errata NOP
  8046  0073CA  EF0B  F03A         	goto	l4277
  8047  0073CE                     u4830:
  8048  0073CE  FFFF               	dw	65535	; assembler added errata NOP
  8049  0073D0  5005               	movf	strncmp@n^0,w,c
  8050  0073D2  1006               	iorwf	(strncmp@n+1)^0,w,c
  8051  0073D4  B4D8               	btfsc	status,2,c
  8052  0073D6  EFEF  F039         	goto	u4841
  8053  0073DA  EFF2  F039         	goto	u4840
  8054  0073DE                     u4841:
  8055  0073DE  FFFF               	dw	65535	; assembler added errata NOP
  8056  0073E0  EF0B  F03A         	goto	l4277
  8057  0073E4                     u4840:
  8058  0073E4  FFFF               	dw	65535	; assembler added errata NOP
  8059  0073E6  C008  FFF6         	movff	strncmp@l,tblptrl
  8060  0073EA  C009  FFF7         	movff	strncmp@l+1,tblptrh
  8061  0073EE                     	if	0	;tblptru may be non-zero
  8062  0073EE                     	endif
  8063  0073EE                     	if	0	;tblptru may be non-zero
  8064  0073EE                     	endif
  8065  0073EE  0008               	tblrd		*
  8066  0073F0  FFFF               	dw	65535	; errata NOP
  8067  0073F2  CFF5 F007          	movff	tablat,??_strncmp
  8068  0073F6  C00A  FFF6         	movff	strncmp@r,tblptrl
  8069  0073FA  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8070  0073FE                     	if	0	;tblptru may be non-zero
  8071  0073FE                     	endif
  8072  0073FE                     	if	0	;tblptru may be non-zero
  8073  0073FE                     	endif
  8074  0073FE  0008               	tblrd		*
  8075  007400  FFFF               	dw	65535	; errata NOP
  8076  007402  50F5               	movf	tablat,w,c
  8077  007404  1807               	xorwf	??_strncmp^0,w,c
  8078  007406  B4D8               	btfsc	status,2,c
  8079  007408  EF08  F03A         	goto	u4851
  8080  00740C  EF0B  F03A         	goto	u4850
  8081  007410                     u4851:
  8082  007410  FFFF               	dw	65535	; assembler added errata NOP
  8083  007412  EFBD  F039         	goto	l4267
  8084  007416                     u4850:
  8085  007416                     l4277:
  8086  007416  FFFF               	dw	65535	; assembler added errata NOP
  8087  007418  C008  FFF6         	movff	strncmp@l,tblptrl
  8088  00741C  C009  FFF7         	movff	strncmp@l+1,tblptrh
  8089  007420                     	if	0	;tblptru may be non-zero
  8090  007420                     	endif
  8091  007420                     	if	0	;tblptru may be non-zero
  8092  007420                     	endif
  8093  007420  0008               	tblrd		*
  8094  007422  FFFF               	dw	65535	; errata NOP
  8095  007424  CFF5 F007          	movff	tablat,??_strncmp
  8096  007428  C00A  FFF6         	movff	strncmp@r,tblptrl
  8097  00742C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8098  007430                     	if	0	;tblptru may be non-zero
  8099  007430                     	endif
  8100  007430                     	if	0	;tblptru may be non-zero
  8101  007430                     	endif
  8102  007430  0008               	tblrd		*
  8103  007432  FFFF               	dw	65535	; errata NOP
  8104  007434  50F5               	movf	tablat,w,c
  8105  007436  5C07               	subwf	??_strncmp^0,w,c
  8106  007438  6E01               	movwf	?_strncmp^0,c
  8107  00743A  6A02               	clrf	(?_strncmp+1)^0,c
  8108  00743C  A0D8               	btfss	status,0,c
  8109  00743E  0602               	decf	(?_strncmp+1)^0,f,c
  8110  007440                     l1483:
  8111  007440  FFFF               	dw	65535	; assembler added errata NOP
  8112  007442  0012               	return		;funcret
  8113  007444  FFFF               	dw	65535	; errata NOP
  8114  007446                     __end_of_strncmp:
  8115                           	callstack 0
  8116                           
  8117 ;; *************** function _stoa *****************
  8118 ;; Defined at:
  8119 ;;		line 546 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  8120 ;; Parameters:    Size  Location     Type
  8121 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  8122 ;;		 -> vsnprintf@f(6), 
  8123 ;;  s               2   11[COMRAM] PTR unsigned char 
  8124 ;;		 -> ?_snprintf(2), STR_8(50), STR_7(9), STR_6(7), 
  8125 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  8126 ;;		 -> STR_1(49), 
  8127 ;; Auto vars:     Size  Location     Type
  8128 ;;  nuls            7   14[COMRAM] unsigned char [7]
  8129 ;;  l               2   29[COMRAM] int 
  8130 ;;  p               2   27[COMRAM] int 
  8131 ;;  cp              2   25[COMRAM] PTR unsigned char 
  8132 ;;		 -> stoa@nuls(7), ?_snprintf(2), STR_8(50), STR_7(9), 
  8133 ;;		 -> STR_6(7), STR_5(9), STR_4(39), STR_3(9), 
  8134 ;;		 -> STR_2(64), STR_1(49), 
  8135 ;;  w               2   23[COMRAM] int 
  8136 ;;  i               2   21[COMRAM] int 
  8137 ;; Return value:  Size  Location     Type
  8138 ;;                  2    9[COMRAM] int 
  8139 ;; Registers used:
  8140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8141 ;; Tracked objects:
  8142 ;;		On entry : 0/0
  8143 ;;		On exit  : 0/0
  8144 ;;		Unchanged: 0/0
  8145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8146 ;;      Params:         4       0       0       0       0       0       0
  8147 ;;      Locals:        17       0       0       0       0       0       0
  8148 ;;      Temps:          1       0       0       0       0       0       0
  8149 ;;      Totals:        22       0       0       0       0       0       0
  8150 ;;Total ram usage:       22 bytes
  8151 ;; Hardware stack levels used:    1
  8152 ;; Hardware stack levels required when called:    3
  8153 ;; This function calls:
  8154 ;;		_fputc
  8155 ;;		_strlen
  8156 ;; This function is called by:
  8157 ;;		_vfpfcnvrt
  8158 ;; This function uses a non-reentrant model
  8159 ;;
  8160                           
  8161                           	psect	text18
  8162  003D20                     __ptext18:
  8163                           	callstack 0
  8164  003D20                     _stoa:
  8165                           	callstack 0
  8166  003D20  FFFF               	dw	65535	; assembler added errata NOP
  8167  003D22                     
  8168                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 546: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 547: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 548:  
      +                             char *cp, nuls[] = "(null)";
  8169  003D22  EE20  F0E4         	lfsr	2,stoa@F1152
  8170  003D26  EE10  F00F         	lfsr	1,stoa@nuls
  8171  003D2A  0E06               	movlw	6
  8172  003D2C                     u4401:
  8173  003D2C  CFDB FFE3          	movff	plusw2,plusw1
  8174  003D30  06E8               	decf	wreg,f,c
  8175  003D32  E2FC               	bc	u4401
  8176  003D34                     
  8177                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 549:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 552:     c
      +                          p = s;
  8178  003D34  C00C  F01A         	movff	stoa@s,stoa@cp
  8179  003D38  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  8180  003D3C                     
  8181                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 553:     if (!cp)
      +                           {
  8182  003D3C  501A               	movf	stoa@cp^0,w,c
  8183  003D3E  101B               	iorwf	(stoa@cp+1)^0,w,c
  8184  003D40  A4D8               	btfss	status,2,c
  8185  003D42  EFA5  F01E         	goto	u4411
  8186  003D46  EFA8  F01E         	goto	u4410
  8187  003D4A                     u4411:
  8188  003D4A  FFFF               	dw	65535	; assembler added errata NOP
  8189  003D4C  EFAD  F01E         	goto	l4083
  8190  003D50                     u4410:
  8191  003D50  FFFF               	dw	65535	; assembler added errata NOP
  8192  003D52                     
  8193                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 554:         cp =
      +                           nuls;
  8194  003D52  0E0F               	movlw	low stoa@nuls
  8195  003D54  6E1A               	movwf	stoa@cp^0,c
  8196  003D56  0E00               	movlw	high stoa@nuls
  8197  003D58  6E1B               	movwf	(stoa@cp+1)^0,c
  8198  003D5A                     l4083:
  8199  003D5A  FFFF               	dw	65535	; assembler added errata NOP
  8200                           
  8201                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 558:     l = strl
      +                          en(cp);
  8202  003D5C  C01A  F001         	movff	stoa@cp,strlen@s
  8203  003D60  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  8204  003D64  EC1F  F033         	call	_strlen	;wreg free
  8205  003D68  C001  F01E         	movff	?_strlen,stoa@l
  8206  003D6C  C002  F01F         	movff	?_strlen+1,stoa@l+1
  8207  003D70                     
  8208                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 559:     p = prec
      +                          ;
  8209  003D70  C088  F01C         	movff	_prec,stoa@p
  8210  003D74  C089  F01D         	movff	_prec+1,stoa@p+1
  8211  003D78                     
  8212                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 560:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  8213  003D78  BE1D               	btfsc	(stoa@p+1)^0,7,c
  8214  003D7A  EFC1  F01E         	goto	u4421
  8215  003D7E  EFC4  F01E         	goto	u4420
  8216  003D82                     u4421:
  8217  003D82  FFFF               	dw	65535	; assembler added errata NOP
  8218  003D84  EFDD  F01E         	goto	l1250
  8219  003D88                     u4420:
  8220  003D88  FFFF               	dw	65535	; assembler added errata NOP
  8221  003D8A  501E               	movf	stoa@l^0,w,c
  8222  003D8C  5C1C               	subwf	stoa@p^0,w,c
  8223  003D8E  501D               	movf	(stoa@p+1)^0,w,c
  8224  003D90  0A80               	xorlw	128
  8225  003D92  6E0E               	movwf	??_stoa^0,c
  8226  003D94  501F               	movf	(stoa@l+1)^0,w,c
  8227  003D96  0A80               	xorlw	128
  8228  003D98  580E               	subwfb	??_stoa^0,w,c
  8229  003D9A  A0D8               	btfss	status,0,c
  8230  003D9C  EFD2  F01E         	goto	u4431
  8231  003DA0  EFD5  F01E         	goto	u4430
  8232  003DA4                     u4431:
  8233  003DA4  FFFF               	dw	65535	; assembler added errata NOP
  8234  003DA6  EFD8  F01E         	goto	l1248
  8235  003DAA                     u4430:
  8236  003DAA  FFFF               	dw	65535	; assembler added errata NOP
  8237  003DAC  EFDD  F01E         	goto	l1250
  8238  003DB0                     l1248:
  8239  003DB0  FFFF               	dw	65535	; assembler added errata NOP
  8240  003DB2  C01C  F01E         	movff	stoa@p,stoa@l
  8241  003DB6  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  8242  003DBA                     l1250:
  8243  003DBA  FFFF               	dw	65535	; assembler added errata NOP
  8244                           
  8245                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 561:     p = l;
  8246  003DBC  C01E  F01C         	movff	stoa@l,stoa@p
  8247  003DC0  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  8248                           
  8249                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 562:     w = widt
      +                          h;
  8250  003DC4  C086  F018         	movff	_width,stoa@w
  8251  003DC8  C087  F019         	movff	_width+1,stoa@w+1
  8252                           
  8253                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 565:     if (!(fl
      +                          ags & (1 << 0))) {
  8254  003DCC  0100               	movlb	0	; () banked
  8255  003DCE  B18A               	btfsc	_flags& (0+255),0,b
  8256  003DD0  EFEC  F01E         	goto	u4441
  8257  003DD4  EFEF  F01E         	goto	u4440
  8258  003DD8                     u4441:
  8259  003DD8  FFFF               	dw	65535	; assembler added errata NOP
  8260  003DDA  EF10  F01F         	goto	l4099
  8261  003DDE                     u4440:
  8262  003DDE  FFFF               	dw	65535	; assembler added errata NOP
  8263  003DE0  EFFF  F01E         	goto	l4097
  8264  003DE4                     l4093:
  8265  003DE4  FFFF               	dw	65535	; assembler added errata NOP
  8266                           
  8267                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 567:             
      +                          fputc(' ', fp);
  8268  003DE6  0E00               	movlw	0
  8269  003DE8  6E02               	movwf	(fputc@c+1)^0,c
  8270  003DEA  0E20               	movlw	32
  8271  003DEC  6E01               	movwf	fputc@c^0,c
  8272  003DEE  C00A  F003         	movff	stoa@fp,fputc@fp
  8273  003DF2  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8274  003DF6  ECCE  F037         	call	_fputc	;wreg free
  8275  003DFA                     
  8276                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 568:             
      +                          ++l;
  8277  003DFA  4A1E               	infsnz	stoa@l^0,f,c
  8278  003DFC  2A1F               	incf	(stoa@l+1)^0,f,c
  8279  003DFE                     l4097:
  8280  003DFE  FFFF               	dw	65535	; assembler added errata NOP
  8281                           
  8282                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 566:         whil
      +                          e (l < w) {
  8283  003E00  5018               	movf	stoa@w^0,w,c
  8284  003E02  5C1E               	subwf	stoa@l^0,w,c
  8285  003E04  501F               	movf	(stoa@l+1)^0,w,c
  8286  003E06  0A80               	xorlw	128
  8287  003E08  6E0E               	movwf	??_stoa^0,c
  8288  003E0A  5019               	movf	(stoa@w+1)^0,w,c
  8289  003E0C  0A80               	xorlw	128
  8290  003E0E  580E               	subwfb	??_stoa^0,w,c
  8291  003E10  A0D8               	btfss	status,0,c
  8292  003E12  EF0D  F01F         	goto	u4451
  8293  003E16  EF10  F01F         	goto	u4450
  8294  003E1A                     u4451:
  8295  003E1A  FFFF               	dw	65535	; assembler added errata NOP
  8296  003E1C  EFF2  F01E         	goto	l4093
  8297  003E20                     u4450:
  8298  003E20                     l4099:
  8299  003E20  FFFF               	dw	65535	; assembler added errata NOP
  8300                           
  8301                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 573:     i = 0;
  8302  003E22  0E00               	movlw	0
  8303  003E24  6E17               	movwf	(stoa@i+1)^0,c
  8304  003E26  0E00               	movlw	0
  8305  003E28  6E16               	movwf	stoa@i^0,c
  8306                           
  8307                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  8308  003E2A  EF37  F01F         	goto	l4107
  8309  003E2E                     l4101:
  8310  003E2E  FFFF               	dw	65535	; assembler added errata NOP
  8311                           
  8312                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 575:         fput
      +                          c(*cp, fp);
  8313  003E30  C01A  FFF6         	movff	stoa@cp,tblptrl
  8314  003E34  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  8315  003E38  6AF8               	clrf	tblptru,c
  8316  003E3A  0E05               	movlw	(high __ramtop+-1)
  8317  003E3C  64F7               	cpfsgt	tblptrh,c
  8318  003E3E  D004               	bra	u4467
  8319  003E40  0008               	tblrd		*
  8320  003E42  FFFF               	dw	65535	; errata NOP
  8321  003E44  50F5               	movf	tablat,w,c
  8322  003E46  D005               	bra	u4460
  8323  003E48                     u4467:
  8324  003E48  CFF6 FFE1          	movff	tblptrl,fsr1l
  8325  003E4C  CFF7 FFE2          	movff	tblptrh,fsr1h
  8326  003E50  50E7               	movf	indf1,w,c
  8327  003E52                     u4460:
  8328  003E52  6E0E               	movwf	??_stoa^0,c
  8329  003E54  500E               	movf	??_stoa^0,w,c
  8330  003E56  6E01               	movwf	fputc@c^0,c
  8331  003E58  6A02               	clrf	(fputc@c+1)^0,c
  8332  003E5A  C00A  F003         	movff	stoa@fp,fputc@fp
  8333  003E5E  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8334  003E62  ECCE  F037         	call	_fputc	;wreg free
  8335  003E66                     
  8336                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 576:         ++cp
      +                          ;
  8337  003E66  4A1A               	infsnz	stoa@cp^0,f,c
  8338  003E68  2A1B               	incf	(stoa@cp+1)^0,f,c
  8339  003E6A                     
  8340                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 577:         ++i;
  8341  003E6A  4A16               	infsnz	stoa@i^0,f,c
  8342  003E6C  2A17               	incf	(stoa@i+1)^0,f,c
  8343  003E6E                     l4107:
  8344  003E6E  FFFF               	dw	65535	; assembler added errata NOP
  8345                           
  8346                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  8347  003E70  501C               	movf	stoa@p^0,w,c
  8348  003E72  5C16               	subwf	stoa@i^0,w,c
  8349  003E74  5017               	movf	(stoa@i+1)^0,w,c
  8350  003E76  0A80               	xorlw	128
  8351  003E78  6E0E               	movwf	??_stoa^0,c
  8352  003E7A  501D               	movf	(stoa@p+1)^0,w,c
  8353  003E7C  0A80               	xorlw	128
  8354  003E7E  580E               	subwfb	??_stoa^0,w,c
  8355  003E80  A0D8               	btfss	status,0,c
  8356  003E82  EF45  F01F         	goto	u4471
  8357  003E86  EF48  F01F         	goto	u4470
  8358  003E8A                     u4471:
  8359  003E8A  FFFF               	dw	65535	; assembler added errata NOP
  8360  003E8C  EF17  F01F         	goto	l4101
  8361  003E90                     u4470:
  8362  003E90  FFFF               	dw	65535	; assembler added errata NOP
  8363  003E92                     
  8364                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 581:     if (flag
      +                          s & (1 << 0)) {
  8365  003E92  0100               	movlb	0	; () banked
  8366  003E94  A18A               	btfss	_flags& (0+255),0,b
  8367  003E96  EF4F  F01F         	goto	u4481
  8368  003E9A  EF52  F01F         	goto	u4480
  8369  003E9E                     u4481:
  8370  003E9E  FFFF               	dw	65535	; assembler added errata NOP
  8371  003EA0  EF73  F01F         	goto	l1260
  8372  003EA4                     u4480:
  8373  003EA4  FFFF               	dw	65535	; assembler added errata NOP
  8374  003EA6  EF62  F01F         	goto	l4115
  8375  003EAA                     l4111:
  8376  003EAA  FFFF               	dw	65535	; assembler added errata NOP
  8377                           
  8378                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 583:             
      +                          fputc(' ', fp);
  8379  003EAC  0E00               	movlw	0
  8380  003EAE  6E02               	movwf	(fputc@c+1)^0,c
  8381  003EB0  0E20               	movlw	32
  8382  003EB2  6E01               	movwf	fputc@c^0,c
  8383  003EB4  C00A  F003         	movff	stoa@fp,fputc@fp
  8384  003EB8  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  8385  003EBC  ECCE  F037         	call	_fputc	;wreg free
  8386  003EC0                     
  8387                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 584:             
      +                          ++l;
  8388  003EC0  4A1E               	infsnz	stoa@l^0,f,c
  8389  003EC2  2A1F               	incf	(stoa@l+1)^0,f,c
  8390  003EC4                     l4115:
  8391  003EC4  FFFF               	dw	65535	; assembler added errata NOP
  8392                           
  8393                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 582:         whil
      +                          e (l < w) {
  8394  003EC6  5018               	movf	stoa@w^0,w,c
  8395  003EC8  5C1E               	subwf	stoa@l^0,w,c
  8396  003ECA  501F               	movf	(stoa@l+1)^0,w,c
  8397  003ECC  0A80               	xorlw	128
  8398  003ECE  6E0E               	movwf	??_stoa^0,c
  8399  003ED0  5019               	movf	(stoa@w+1)^0,w,c
  8400  003ED2  0A80               	xorlw	128
  8401  003ED4  580E               	subwfb	??_stoa^0,w,c
  8402  003ED6  A0D8               	btfss	status,0,c
  8403  003ED8  EF70  F01F         	goto	u4491
  8404  003EDC  EF73  F01F         	goto	u4490
  8405  003EE0                     u4491:
  8406  003EE0  FFFF               	dw	65535	; assembler added errata NOP
  8407  003EE2  EF55  F01F         	goto	l4111
  8408  003EE6                     u4490:
  8409  003EE6                     l1260:
  8410  003EE6  FFFF               	dw	65535	; assembler added errata NOP
  8411                           
  8412                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 588:     return l
      +                          ;
  8413  003EE8  C01E  F00A         	movff	stoa@l,?_stoa
  8414  003EEC  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  8415  003EF0  0012               	return		;funcret
  8416  003EF2  FFFF               	dw	65535	; errata NOP
  8417  003EF4                     __end_of_stoa:
  8418                           	callstack 0
  8419                           
  8420 ;; *************** function _otoa *****************
  8421 ;; Defined at:
  8422 ;;		line 507 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  8423 ;; Parameters:    Size  Location     Type
  8424 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8425 ;;		 -> vsnprintf@f(6), 
  8426 ;;  d               8   29[COMRAM] unsigned long long 
  8427 ;; Auto vars:     Size  Location     Type
  8428 ;;  n               8   51[COMRAM] unsigned long long 
  8429 ;;  i               2   59[COMRAM] int 
  8430 ;;  w               2   49[COMRAM] int 
  8431 ;;  t               2   47[COMRAM] int 
  8432 ;;  p               2   45[COMRAM] int 
  8433 ;; Return value:  Size  Location     Type
  8434 ;;                  2   27[COMRAM] int 
  8435 ;; Registers used:
  8436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8437 ;; Tracked objects:
  8438 ;;		On entry : 0/0
  8439 ;;		On exit  : 0/0
  8440 ;;		Unchanged: 0/0
  8441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8442 ;;      Params:        10       0       0       0       0       0       0
  8443 ;;      Locals:        16       0       0       0       0       0       0
  8444 ;;      Temps:          8       0       0       0       0       0       0
  8445 ;;      Totals:        34       0       0       0       0       0       0
  8446 ;;Total ram usage:       34 bytes
  8447 ;; Hardware stack levels used:    1
  8448 ;; Hardware stack levels required when called:    5
  8449 ;; This function calls:
  8450 ;;		_pad
  8451 ;; This function is called by:
  8452 ;;		_vfpfcnvrt
  8453 ;; This function uses a non-reentrant model
  8454 ;;
  8455                           
  8456                           	psect	text19
  8457  003902                     __ptext19:
  8458                           	callstack 0
  8459  003902                     _otoa:
  8460                           	callstack 0
  8461  003902  FFFF               	dw	65535	; assembler added errata NOP
  8462  003904                     
  8463                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 507: static int o
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 508: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 509:     int i, p, t, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\com
      +                          mon\doprnt.c: 510:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\so
      +                          urces\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  8464  003904  0100               	movlb	0	; () banked
  8465  003906  BF89               	btfsc	(_prec+1)& (0+255),7,b
  8466  003908  EF88  F01C         	goto	u4301
  8467  00390C  EF8B  F01C         	goto	u4300
  8468  003910                     u4301:
  8469  003910  FFFF               	dw	65535	; assembler added errata NOP
  8470  003912  EF8D  F01C         	goto	l4031
  8471  003916                     u4300:
  8472  003916  FFFF               	dw	65535	; assembler added errata NOP
  8473  003918                     
  8474                           ; BSR set to: 0
  8475                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 514:         flag
      +                          s &= ~(1 << 1);
  8476  003918  938A               	bcf	_flags& (0+255),1,b
  8477  00391A                     l4031:
  8478  00391A  FFFF               	dw	65535	; assembler added errata NOP
  8479                           
  8480                           ; BSR set to: 0
  8481                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 516:     p = (0 <
      +                           prec) ? prec : 1;
  8482  00391C  BF89               	btfsc	(_prec+1)& (0+255),7,b
  8483  00391E  EF9C  F01C         	goto	u4310
  8484  003922  5189               	movf	(_prec+1)& (0+255),w,b
  8485  003924  E106               	bnz	u4311
  8486  003926  0588               	decf	_prec& (0+255),w,b
  8487  003928  B0D8               	btfsc	status,0,c
  8488  00392A  EF99  F01C         	goto	u4311
  8489  00392E  EF9C  F01C         	goto	u4310
  8490  003932                     u4311:
  8491  003932  FFFF               	dw	65535	; assembler added errata NOP
  8492  003934  EFA3  F01C         	goto	l1230
  8493  003938                     u4310:
  8494  003938  FFFF               	dw	65535	; assembler added errata NOP
  8495  00393A                     
  8496                           ; BSR set to: 0
  8497  00393A  0E00               	movlw	0
  8498  00393C  6E2F               	movwf	(otoa@p+1)^0,c
  8499  00393E  0E01               	movlw	1
  8500  003940  6E2E               	movwf	otoa@p^0,c
  8501  003942  EFA8  F01C         	goto	l1232
  8502  003946                     l1230:
  8503  003946  FFFF               	dw	65535	; assembler added errata NOP
  8504                           
  8505                           ; BSR set to: 0
  8506  003948  C088  F02E         	movff	_prec,otoa@p
  8507  00394C  C089  F02F         	movff	_prec+1,otoa@p+1
  8508  003950                     l1232:
  8509  003950  FFFF               	dw	65535	; assembler added errata NOP
  8510                           
  8511                           ; BSR set to: 0
  8512                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 517:     w = widt
      +                          h;
  8513  003952  C086  F032         	movff	_width,otoa@w
  8514  003956  C087  F033         	movff	_width+1,otoa@w+1
  8515                           
  8516                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 520:     n = d;
  8517  00395A  C01E  F034         	movff	otoa@d,otoa@n
  8518  00395E  C01F  F035         	movff	otoa@d+1,otoa@n+1
  8519  003962  C020  F036         	movff	otoa@d+2,otoa@n+2
  8520  003966  C021  F037         	movff	otoa@d+3,otoa@n+3
  8521  00396A  C022  F038         	movff	otoa@d+4,otoa@n+4
  8522  00396E  C023  F039         	movff	otoa@d+5,otoa@n+5
  8523  003972  C024  F03A         	movff	otoa@d+6,otoa@n+6
  8524  003976  C025  F03B         	movff	otoa@d+7,otoa@n+7
  8525  00397A                     
  8526                           ; BSR set to: 0
  8527                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 521:     i = size
      +                          of(dbuf) - 1;
  8528  00397A  0E00               	movlw	0
  8529  00397C  6E3D               	movwf	(otoa@i+1)^0,c
  8530  00397E  0E1F               	movlw	31
  8531  003980  6E3C               	movwf	otoa@i^0,c
  8532  003982                     
  8533                           ; BSR set to: 0
  8534                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 522:     dbuf[i] 
      +                          = '\0';
  8535  003982  0E00               	movlw	0
  8536  003984  6FB7               	movwf	(_dbuf+31)& (0+255),b
  8537  003986                     
  8538                           ; BSR set to: 0
  8539                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 523:     t = 0;
  8540  003986  0E00               	movlw	0
  8541  003988  6E31               	movwf	(otoa@t+1)^0,c
  8542  00398A  0E00               	movlw	0
  8543  00398C  6E30               	movwf	otoa@t^0,c
  8544                           
  8545                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 524:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8546  00398E  EF11  F01D         	goto	l4053
  8547  003992                     l4041:
  8548  003992  FFFF               	dw	65535	; assembler added errata NOP
  8549                           
  8550                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 525:         --i;
  8551  003994  063C               	decf	otoa@i^0,f,c
  8552  003996  A0D8               	btfss	status,0,c
  8553  003998  063D               	decf	(otoa@i+1)^0,f,c
  8554  00399A                     
  8555                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 526:         t = 
      +                          n & 07;
  8556  00399A  0E07               	movlw	7
  8557  00399C  1434               	andwf	otoa@n^0,w,c
  8558  00399E  6E30               	movwf	otoa@t^0,c
  8559  0039A0  6A31               	clrf	(otoa@t+1)^0,c
  8560  0039A2                     
  8561                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 527:         dbuf
      +                          [i] = '0' + t;
  8562  0039A2  0E98               	movlw	low _dbuf
  8563  0039A4  243C               	addwf	otoa@i^0,w,c
  8564  0039A6  6ED9               	movwf	fsr2l,c
  8565  0039A8  0E00               	movlw	high _dbuf
  8566  0039AA  203D               	addwfc	(otoa@i+1)^0,w,c
  8567  0039AC  6EDA               	movwf	fsr2h,c
  8568  0039AE  5030               	movf	otoa@t^0,w,c
  8569  0039B0  0F30               	addlw	48
  8570  0039B2  6EDF               	movwf	indf2,c
  8571  0039B4                     
  8572                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 528:         --p;
  8573  0039B4  062E               	decf	otoa@p^0,f,c
  8574  0039B6  A0D8               	btfss	status,0,c
  8575  0039B8  062F               	decf	(otoa@p+1)^0,f,c
  8576  0039BA                     
  8577                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 529:         --w;
  8578  0039BA  0632               	decf	otoa@w^0,f,c
  8579  0039BC  A0D8               	btfss	status,0,c
  8580  0039BE  0633               	decf	(otoa@w+1)^0,f,c
  8581  0039C0                     
  8582                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 530:         n = 
      +                          n >> 3;
  8583  0039C0  C034  F026         	movff	otoa@n,??_otoa
  8584  0039C4  C035  F027         	movff	otoa@n+1,??_otoa+1
  8585  0039C8  C036  F028         	movff	otoa@n+2,??_otoa+2
  8586  0039CC  C037  F029         	movff	otoa@n+3,??_otoa+3
  8587  0039D0  C038  F02A         	movff	otoa@n+4,??_otoa+4
  8588  0039D4  C039  F02B         	movff	otoa@n+5,??_otoa+5
  8589  0039D8  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  8590  0039DC  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  8591  0039E0  0E04               	movlw	4
  8592  0039E2  EFFD  F01C         	goto	u4320
  8593  0039E6                     u4325:
  8594  0039E6  FFFF               	dw	65535	; assembler added errata NOP
  8595  0039E8  90D8               	bcf	status,0,c
  8596  0039EA  322D               	rrcf	(??_otoa+7)^0,f,c
  8597  0039EC  322C               	rrcf	(??_otoa+6)^0,f,c
  8598  0039EE  322B               	rrcf	(??_otoa+5)^0,f,c
  8599  0039F0  322A               	rrcf	(??_otoa+4)^0,f,c
  8600  0039F2  3229               	rrcf	(??_otoa+3)^0,f,c
  8601  0039F4  3228               	rrcf	(??_otoa+2)^0,f,c
  8602  0039F6  3227               	rrcf	(??_otoa+1)^0,f,c
  8603  0039F8  3226               	rrcf	??_otoa^0,f,c
  8604  0039FA                     u4320:
  8605  0039FA  FFFF               	dw	65535	; assembler added errata NOP
  8606  0039FC  2EE8               	decfsz	wreg,f,c
  8607  0039FE  EFF3  F01C         	goto	u4325
  8608  003A02  C026  F034         	movff	??_otoa,otoa@n
  8609  003A06  C027  F035         	movff	??_otoa+1,otoa@n+1
  8610  003A0A  C028  F036         	movff	??_otoa+2,otoa@n+2
  8611  003A0E  C029  F037         	movff	??_otoa+3,otoa@n+3
  8612  003A12  C02A  F038         	movff	??_otoa+4,otoa@n+4
  8613  003A16  C02B  F039         	movff	??_otoa+5,otoa@n+5
  8614  003A1A  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  8615  003A1E  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  8616  003A22                     l4053:
  8617  003A22  FFFF               	dw	65535	; assembler added errata NOP
  8618                           
  8619                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 524:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8620  003A24  BE3D               	btfsc	(otoa@i+1)^0,7,c
  8621  003A26  EF1D  F01D         	goto	u4331
  8622  003A2A  503D               	movf	(otoa@i+1)^0,w,c
  8623  003A2C  E109               	bnz	u4330
  8624  003A2E  043C               	decf	otoa@i^0,w,c
  8625  003A30  A0D8               	btfss	status,0,c
  8626  003A32  EF1D  F01D         	goto	u4331
  8627  003A36  EF20  F01D         	goto	u4330
  8628  003A3A                     u4331:
  8629  003A3A  FFFF               	dw	65535	; assembler added errata NOP
  8630  003A3C  EF59  F01D         	goto	l1239
  8631  003A40                     u4330:
  8632  003A40  FFFF               	dw	65535	; assembler added errata NOP
  8633  003A42  5034               	movf	otoa@n^0,w,c
  8634  003A44  1035               	iorwf	(otoa@n+1)^0,w,c
  8635  003A46  1036               	iorwf	(otoa@n+2)^0,w,c
  8636  003A48  1037               	iorwf	(otoa@n+3)^0,w,c
  8637  003A4A  1038               	iorwf	(otoa@n+4)^0,w,c
  8638  003A4C  1039               	iorwf	(otoa@n+5)^0,w,c
  8639  003A4E  103A               	iorwf	(otoa@n+6)^0,w,c
  8640  003A50  103B               	iorwf	(otoa@n+7)^0,w,c
  8641  003A52  A4D8               	btfss	status,2,c
  8642  003A54  EF2E  F01D         	goto	u4341
  8643  003A58  EF31  F01D         	goto	u4340
  8644  003A5C                     u4341:
  8645  003A5C  FFFF               	dw	65535	; assembler added errata NOP
  8646  003A5E  EFC9  F01C         	goto	l4041
  8647  003A62                     u4340:
  8648  003A62  FFFF               	dw	65535	; assembler added errata NOP
  8649  003A64  BE2F               	btfsc	(otoa@p+1)^0,7,c
  8650  003A66  EF40  F01D         	goto	u4350
  8651  003A6A  502F               	movf	(otoa@p+1)^0,w,c
  8652  003A6C  E106               	bnz	u4351
  8653  003A6E  042E               	decf	otoa@p^0,w,c
  8654  003A70  B0D8               	btfsc	status,0,c
  8655  003A72  EF3D  F01D         	goto	u4351
  8656  003A76  EF40  F01D         	goto	u4350
  8657  003A7A                     u4351:
  8658  003A7A  FFFF               	dw	65535	; assembler added errata NOP
  8659  003A7C  EFC9  F01C         	goto	l4041
  8660  003A80                     u4350:
  8661  003A80  FFFF               	dw	65535	; assembler added errata NOP
  8662  003A82  BE33               	btfsc	(otoa@w+1)^0,7,c
  8663  003A84  EF4C  F01D         	goto	u4361
  8664  003A88  5033               	movf	(otoa@w+1)^0,w,c
  8665  003A8A  E109               	bnz	u4360
  8666  003A8C  0432               	decf	otoa@w^0,w,c
  8667  003A8E  A0D8               	btfss	status,0,c
  8668  003A90  EF4C  F01D         	goto	u4361
  8669  003A94  EF4F  F01D         	goto	u4360
  8670  003A98                     u4361:
  8671  003A98  FFFF               	dw	65535	; assembler added errata NOP
  8672  003A9A  EF59  F01D         	goto	l1239
  8673  003A9E                     u4360:
  8674  003A9E  FFFF               	dw	65535	; assembler added errata NOP
  8675  003AA0  0100               	movlb	0	; () banked
  8676  003AA2  B38A               	btfsc	_flags& (0+255),1,b
  8677  003AA4  EF56  F01D         	goto	u4371
  8678  003AA8  EF59  F01D         	goto	u4370
  8679  003AAC                     u4371:
  8680  003AAC  FFFF               	dw	65535	; assembler added errata NOP
  8681  003AAE  EFC9  F01C         	goto	l4041
  8682  003AB2                     u4370:
  8683  003AB2                     l1239:
  8684  003AB2  FFFF               	dw	65535	; assembler added errata NOP
  8685                           
  8686                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 534:     if ((fla
      +                          gs & (1 << 4)) && t) {
  8687  003AB4  0100               	movlb	0	; () banked
  8688  003AB6  A98A               	btfss	_flags& (0+255),4,b
  8689  003AB8  EF60  F01D         	goto	u4381
  8690  003ABC  EF63  F01D         	goto	u4380
  8691  003AC0                     u4381:
  8692  003AC0  FFFF               	dw	65535	; assembler added errata NOP
  8693  003AC2  EF7D  F01D         	goto	l4071
  8694  003AC6                     u4380:
  8695  003AC6  FFFF               	dw	65535	; assembler added errata NOP
  8696  003AC8                     
  8697                           ; BSR set to: 0
  8698  003AC8  5030               	movf	otoa@t^0,w,c
  8699  003ACA  1031               	iorwf	(otoa@t+1)^0,w,c
  8700  003ACC  B4D8               	btfsc	status,2,c
  8701  003ACE  EF6B  F01D         	goto	u4391
  8702  003AD2  EF6E  F01D         	goto	u4390
  8703  003AD6                     u4391:
  8704  003AD6  FFFF               	dw	65535	; assembler added errata NOP
  8705  003AD8  EF7D  F01D         	goto	l4071
  8706  003ADC                     u4390:
  8707  003ADC  FFFF               	dw	65535	; assembler added errata NOP
  8708  003ADE                     
  8709                           ; BSR set to: 0
  8710                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 535:         --i;
  8711  003ADE  063C               	decf	otoa@i^0,f,c
  8712  003AE0  A0D8               	btfss	status,0,c
  8713  003AE2  063D               	decf	(otoa@i+1)^0,f,c
  8714  003AE4                     
  8715                           ; BSR set to: 0
  8716                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 536:         dbuf
      +                          [i] = '0';
  8717  003AE4  0E98               	movlw	low _dbuf
  8718  003AE6  243C               	addwf	otoa@i^0,w,c
  8719  003AE8  6ED9               	movwf	fsr2l,c
  8720  003AEA  0E00               	movlw	high _dbuf
  8721  003AEC  203D               	addwfc	(otoa@i+1)^0,w,c
  8722  003AEE  6EDA               	movwf	fsr2h,c
  8723  003AF0  0E30               	movlw	48
  8724  003AF2  6EDF               	movwf	indf2,c
  8725  003AF4                     
  8726                           ; BSR set to: 0
  8727                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 537:         --w;
  8728  003AF4  0632               	decf	otoa@w^0,f,c
  8729  003AF6  A0D8               	btfss	status,0,c
  8730  003AF8  0633               	decf	(otoa@w+1)^0,f,c
  8731  003AFA                     l4071:
  8732  003AFA  FFFF               	dw	65535	; assembler added errata NOP
  8733                           
  8734                           ; BSR set to: 0
  8735                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 541:     return p
      +                          ad(fp, &dbuf[i], w);
  8736  003AFC  C01C  F011         	movff	otoa@fp,pad@fp
  8737  003B00  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  8738  003B04  0E98               	movlw	low _dbuf
  8739  003B06  243C               	addwf	otoa@i^0,w,c
  8740  003B08  6E13               	movwf	pad@buf^0,c
  8741  003B0A  0E00               	movlw	high _dbuf
  8742  003B0C  203D               	addwfc	(otoa@i+1)^0,w,c
  8743  003B0E  6E14               	movwf	(pad@buf+1)^0,c
  8744  003B10  C032  F015         	movff	otoa@w,pad@p
  8745  003B14  C033  F016         	movff	otoa@w+1,pad@p+1
  8746  003B18  EC3F  F038         	call	_pad	;wreg free
  8747  003B1C  C011  F01C         	movff	?_pad,?_otoa
  8748  003B20  C012  F01D         	movff	?_pad+1,?_otoa+1
  8749  003B24  0012               	return		;funcret
  8750  003B26  FFFF               	dw	65535	; errata NOP
  8751  003B28                     __end_of_otoa:
  8752                           	callstack 0
  8753                           
  8754 ;; *************** function _dtoa *****************
  8755 ;; Defined at:
  8756 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  8757 ;; Parameters:    Size  Location     Type
  8758 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8759 ;;		 -> vsnprintf@f(6), 
  8760 ;;  d               8   29[COMRAM] long long 
  8761 ;; Auto vars:     Size  Location     Type
  8762 ;;  n               8   53[COMRAM] long long 
  8763 ;;  i               2   61[COMRAM] int 
  8764 ;;  s               2   51[COMRAM] int 
  8765 ;;  w               2   49[COMRAM] int 
  8766 ;;  p               2   47[COMRAM] int 
  8767 ;; Return value:  Size  Location     Type
  8768 ;;                  2   27[COMRAM] int 
  8769 ;; Registers used:
  8770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8771 ;; Tracked objects:
  8772 ;;		On entry : 0/0
  8773 ;;		On exit  : 0/0
  8774 ;;		Unchanged: 0/0
  8775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8776 ;;      Params:        10       0       0       0       0       0       0
  8777 ;;      Locals:        18       0       0       0       0       0       0
  8778 ;;      Temps:          8       0       0       0       0       0       0
  8779 ;;      Totals:        36       0       0       0       0       0       0
  8780 ;;Total ram usage:       36 bytes
  8781 ;; Hardware stack levels used:    1
  8782 ;; Hardware stack levels required when called:    5
  8783 ;; This function calls:
  8784 ;;		___aodiv
  8785 ;;		___aomod
  8786 ;;		_abs
  8787 ;;		_pad
  8788 ;; This function is called by:
  8789 ;;		_vfpfcnvrt
  8790 ;; This function uses a non-reentrant model
  8791 ;;
  8792                           
  8793                           	psect	text20
  8794  003072                     __ptext20:
  8795                           	callstack 0
  8796  003072                     _dtoa:
  8797                           	callstack 0
  8798  003072  FFFF               	dw	65535	; assembler added errata NOP
  8799  003074                     
  8800                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  8801  003074  C01E  F036         	movff	dtoa@d,dtoa@n
  8802  003078  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  8803  00307C  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  8804  003080  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  8805  003084  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  8806  003088  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  8807  00308C  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  8808  003090  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  8809  003094                     
  8810                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  8811  003094  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  8812  003096  EF4F  F018         	goto	u4151
  8813  00309A  EF53  F018         	goto	u4150
  8814  00309E                     u4151:
  8815  00309E  FFFF               	dw	65535	; assembler added errata NOP
  8816  0030A0  0E01               	movlw	1
  8817  0030A2  EF55  F018         	goto	u4160
  8818  0030A6                     u4150:
  8819  0030A6  FFFF               	dw	65535	; assembler added errata NOP
  8820  0030A8  0E00               	movlw	0
  8821  0030AA                     u4160:
  8822  0030AA  FFFF               	dw	65535	; assembler added errata NOP
  8823  0030AC  6E34               	movwf	dtoa@s^0,c
  8824  0030AE  6A35               	clrf	(dtoa@s+1)^0,c
  8825                           
  8826                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  8827  0030B0  5034               	movf	dtoa@s^0,w,c
  8828  0030B2  1035               	iorwf	(dtoa@s+1)^0,w,c
  8829  0030B4  B4D8               	btfsc	status,2,c
  8830  0030B6  EF5F  F018         	goto	u4171
  8831  0030BA  EF62  F018         	goto	u4170
  8832  0030BE                     u4171:
  8833  0030BE  FFFF               	dw	65535	; assembler added errata NOP
  8834  0030C0  EF73  F018         	goto	l3971
  8835  0030C4                     u4170:
  8836  0030C4  FFFF               	dw	65535	; assembler added errata NOP
  8837  0030C6                     
  8838                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  8839  0030C6  1E3D               	comf	(dtoa@n+7)^0,f,c
  8840  0030C8  1E3C               	comf	(dtoa@n+6)^0,f,c
  8841  0030CA  1E3B               	comf	(dtoa@n+5)^0,f,c
  8842  0030CC  1E3A               	comf	(dtoa@n+4)^0,f,c
  8843  0030CE  1E39               	comf	(dtoa@n+3)^0,f,c
  8844  0030D0  1E38               	comf	(dtoa@n+2)^0,f,c
  8845  0030D2  1E37               	comf	(dtoa@n+1)^0,f,c
  8846  0030D4  6C36               	negf	dtoa@n^0,c
  8847  0030D6  0E00               	movlw	0
  8848  0030D8  2237               	addwfc	(dtoa@n+1)^0,f,c
  8849  0030DA  2238               	addwfc	(dtoa@n+2)^0,f,c
  8850  0030DC  2239               	addwfc	(dtoa@n+3)^0,f,c
  8851  0030DE  223A               	addwfc	(dtoa@n+4)^0,f,c
  8852  0030E0  223B               	addwfc	(dtoa@n+5)^0,f,c
  8853  0030E2  223C               	addwfc	(dtoa@n+6)^0,f,c
  8854  0030E4  223D               	addwfc	(dtoa@n+7)^0,f,c
  8855  0030E6                     l3971:
  8856  0030E6  FFFF               	dw	65535	; assembler added errata NOP
  8857                           
  8858                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  8859  0030E8  0100               	movlb	0	; () banked
  8860  0030EA  BF89               	btfsc	(_prec+1)& (0+255),7,b
  8861  0030EC  EF7A  F018         	goto	u4181
  8862  0030F0  EF7D  F018         	goto	u4180
  8863  0030F4                     u4181:
  8864  0030F4  FFFF               	dw	65535	; assembler added errata NOP
  8865  0030F6  EF7F  F018         	goto	l3975
  8866  0030FA                     u4180:
  8867  0030FA  FFFF               	dw	65535	; assembler added errata NOP
  8868  0030FC                     
  8869                           ; BSR set to: 0
  8870                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  8871  0030FC  938A               	bcf	_flags& (0+255),1,b
  8872  0030FE                     l3975:
  8873  0030FE  FFFF               	dw	65535	; assembler added errata NOP
  8874                           
  8875                           ; BSR set to: 0
  8876                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  8877  003100  BF89               	btfsc	(_prec+1)& (0+255),7,b
  8878  003102  EF8E  F018         	goto	u4190
  8879  003106  5189               	movf	(_prec+1)& (0+255),w,b
  8880  003108  E106               	bnz	u4191
  8881  00310A  0588               	decf	_prec& (0+255),w,b
  8882  00310C  B0D8               	btfsc	status,0,c
  8883  00310E  EF8B  F018         	goto	u4191
  8884  003112  EF8E  F018         	goto	u4190
  8885  003116                     u4191:
  8886  003116  FFFF               	dw	65535	; assembler added errata NOP
  8887  003118  EF95  F018         	goto	l1205
  8888  00311C                     u4190:
  8889  00311C  FFFF               	dw	65535	; assembler added errata NOP
  8890  00311E                     
  8891                           ; BSR set to: 0
  8892  00311E  0E00               	movlw	0
  8893  003120  6E31               	movwf	(dtoa@p+1)^0,c
  8894  003122  0E01               	movlw	1
  8895  003124  6E30               	movwf	dtoa@p^0,c
  8896  003126  EF9A  F018         	goto	l1207
  8897  00312A                     l1205:
  8898  00312A  FFFF               	dw	65535	; assembler added errata NOP
  8899                           
  8900                           ; BSR set to: 0
  8901  00312C  C088  F030         	movff	_prec,dtoa@p
  8902  003130  C089  F031         	movff	_prec+1,dtoa@p+1
  8903  003134                     l1207:
  8904  003134  FFFF               	dw	65535	; assembler added errata NOP
  8905                           
  8906                           ; BSR set to: 0
  8907                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  8908  003136  C086  F032         	movff	_width,dtoa@w
  8909  00313A  C087  F033         	movff	_width+1,dtoa@w+1
  8910  00313E                     
  8911                           ; BSR set to: 0
  8912                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  8913  00313E  5034               	movf	dtoa@s^0,w,c
  8914  003140  1035               	iorwf	(dtoa@s+1)^0,w,c
  8915  003142  A4D8               	btfss	status,2,c
  8916  003144  EFA6  F018         	goto	u4201
  8917  003148  EFA9  F018         	goto	u4200
  8918  00314C                     u4201:
  8919  00314C  FFFF               	dw	65535	; assembler added errata NOP
  8920  00314E  EFB2  F018         	goto	l3983
  8921  003152                     u4200:
  8922  003152  FFFF               	dw	65535	; assembler added errata NOP
  8923  003154                     
  8924                           ; BSR set to: 0
  8925  003154  A58A               	btfss	_flags& (0+255),2,b
  8926  003156  EFAF  F018         	goto	u4211
  8927  00315A  EFB2  F018         	goto	u4210
  8928  00315E                     u4211:
  8929  00315E  FFFF               	dw	65535	; assembler added errata NOP
  8930  003160  EFB6  F018         	goto	l3985
  8931  003164                     u4210:
  8932  003164                     l3983:
  8933  003164  FFFF               	dw	65535	; assembler added errata NOP
  8934                           
  8935                           ; BSR set to: 0
  8936                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  8937  003166  0632               	decf	dtoa@w^0,f,c
  8938  003168  A0D8               	btfss	status,0,c
  8939  00316A  0633               	decf	(dtoa@w+1)^0,f,c
  8940  00316C                     l3985:
  8941  00316C  FFFF               	dw	65535	; assembler added errata NOP
  8942                           
  8943                           ; BSR set to: 0
  8944                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  8945  00316E  0E00               	movlw	0
  8946  003170  6E3F               	movwf	(dtoa@i+1)^0,c
  8947  003172  0E1F               	movlw	31
  8948  003174  6E3E               	movwf	dtoa@i^0,c
  8949  003176                     
  8950                           ; BSR set to: 0
  8951                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  8952  003176  0E00               	movlw	0
  8953  003178  6FB7               	movwf	(_dbuf+31)& (0+255),b
  8954                           
  8955                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8956  00317A  EF3C  F019         	goto	l3999
  8957  00317E                     l3989:
  8958  00317E  FFFF               	dw	65535	; assembler added errata NOP
  8959                           
  8960                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  8961  003180  063E               	decf	dtoa@i^0,f,c
  8962  003182  A0D8               	btfss	status,0,c
  8963  003184  063F               	decf	(dtoa@i+1)^0,f,c
  8964  003186                     
  8965                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  8966  003186  0E98               	movlw	low _dbuf
  8967  003188  243E               	addwf	dtoa@i^0,w,c
  8968  00318A  6ED9               	movwf	fsr2l,c
  8969  00318C  0E00               	movlw	high _dbuf
  8970  00318E  203F               	addwfc	(dtoa@i+1)^0,w,c
  8971  003190  6EDA               	movwf	fsr2h,c
  8972  003192  C036  F001         	movff	dtoa@n,___aomod@dividend
  8973  003196  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  8974  00319A  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  8975  00319E  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  8976  0031A2  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  8977  0031A6  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  8978  0031AA  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  8979  0031AE  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  8980  0031B2  0E0A               	movlw	10
  8981  0031B4  6E09               	movwf	___aomod@divisor^0,c
  8982  0031B6  0E00               	movlw	0
  8983  0031B8  6E0A               	movwf	(___aomod@divisor+1)^0,c
  8984  0031BA  0E00               	movlw	0
  8985  0031BC  6E0B               	movwf	(___aomod@divisor+2)^0,c
  8986  0031BE  0E00               	movlw	0
  8987  0031C0  6E0C               	movwf	(___aomod@divisor+3)^0,c
  8988  0031C2  0E00               	movlw	0
  8989  0031C4  6E0D               	movwf	(___aomod@divisor+4)^0,c
  8990  0031C6  0E00               	movlw	0
  8991  0031C8  6E0E               	movwf	(___aomod@divisor+5)^0,c
  8992  0031CA  0E00               	movlw	0
  8993  0031CC  6E0F               	movwf	(___aomod@divisor+6)^0,c
  8994  0031CE  0E00               	movlw	0
  8995  0031D0  6E10               	movwf	(___aomod@divisor+7)^0,c
  8996  0031D2  ECA0  F03C         	call	___aomod	;wreg free
  8997  0031D6  C001  F026         	movff	?___aomod,??_dtoa
  8998  0031DA  C002  F027         	movff	?___aomod+1,??_dtoa+1
  8999  0031DE  C003  F028         	movff	?___aomod+2,??_dtoa+2
  9000  0031E2  C004  F029         	movff	?___aomod+3,??_dtoa+3
  9001  0031E6  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  9002  0031EA  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  9003  0031EE  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  9004  0031F2  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  9005  0031F6  C026  F013         	movff	??_dtoa,abs@a
  9006  0031FA  C028  F014         	movff	??_dtoa+2,abs@a+1
  9007  0031FE  ECA8  F032         	call	_abs	;wreg free
  9008  003202  5013               	movf	?_abs^0,w,c
  9009  003204  0F30               	addlw	48
  9010  003206  6EDF               	movwf	indf2,c
  9011  003208                     
  9012                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  9013  003208  0630               	decf	dtoa@p^0,f,c
  9014  00320A  A0D8               	btfss	status,0,c
  9015  00320C  0631               	decf	(dtoa@p+1)^0,f,c
  9016  00320E                     
  9017                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  9018  00320E  0632               	decf	dtoa@w^0,f,c
  9019  003210  A0D8               	btfss	status,0,c
  9020  003212  0633               	decf	(dtoa@w+1)^0,f,c
  9021  003214                     
  9022                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  9023  003214  C036  F001         	movff	dtoa@n,___aodiv@dividend
  9024  003218  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  9025  00321C  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  9026  003220  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  9027  003224  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  9028  003228  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  9029  00322C  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  9030  003230  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  9031  003234  0E0A               	movlw	10
  9032  003236  6E09               	movwf	___aodiv@divisor^0,c
  9033  003238  0E00               	movlw	0
  9034  00323A  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  9035  00323C  0E00               	movlw	0
  9036  00323E  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  9037  003240  0E00               	movlw	0
  9038  003242  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  9039  003244  0E00               	movlw	0
  9040  003246  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  9041  003248  0E00               	movlw	0
  9042  00324A  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  9043  00324C  0E00               	movlw	0
  9044  00324E  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  9045  003250  0E00               	movlw	0
  9046  003252  6E10               	movwf	(___aodiv@divisor+7)^0,c
  9047  003254  EC68  F03D         	call	___aodiv	;wreg free
  9048  003258  C001  F036         	movff	?___aodiv,dtoa@n
  9049  00325C  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  9050  003260  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  9051  003264  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  9052  003268  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  9053  00326C  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  9054  003270  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  9055  003274  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  9056  003278                     l3999:
  9057  003278  FFFF               	dw	65535	; assembler added errata NOP
  9058                           
  9059                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9060  00327A  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  9061  00327C  EF48  F019         	goto	u4221
  9062  003280  503F               	movf	(dtoa@i+1)^0,w,c
  9063  003282  E109               	bnz	u4220
  9064  003284  043E               	decf	dtoa@i^0,w,c
  9065  003286  A0D8               	btfss	status,0,c
  9066  003288  EF48  F019         	goto	u4221
  9067  00328C  EF4B  F019         	goto	u4220
  9068  003290                     u4221:
  9069  003290  FFFF               	dw	65535	; assembler added errata NOP
  9070  003292  EF84  F019         	goto	l4009
  9071  003296                     u4220:
  9072  003296  FFFF               	dw	65535	; assembler added errata NOP
  9073  003298  5036               	movf	dtoa@n^0,w,c
  9074  00329A  1037               	iorwf	(dtoa@n+1)^0,w,c
  9075  00329C  1038               	iorwf	(dtoa@n+2)^0,w,c
  9076  00329E  1039               	iorwf	(dtoa@n+3)^0,w,c
  9077  0032A0  103A               	iorwf	(dtoa@n+4)^0,w,c
  9078  0032A2  103B               	iorwf	(dtoa@n+5)^0,w,c
  9079  0032A4  103C               	iorwf	(dtoa@n+6)^0,w,c
  9080  0032A6  103D               	iorwf	(dtoa@n+7)^0,w,c
  9081  0032A8  A4D8               	btfss	status,2,c
  9082  0032AA  EF59  F019         	goto	u4231
  9083  0032AE  EF5C  F019         	goto	u4230
  9084  0032B2                     u4231:
  9085  0032B2  FFFF               	dw	65535	; assembler added errata NOP
  9086  0032B4  EFBF  F018         	goto	l3989
  9087  0032B8                     u4230:
  9088  0032B8  FFFF               	dw	65535	; assembler added errata NOP
  9089  0032BA  BE31               	btfsc	(dtoa@p+1)^0,7,c
  9090  0032BC  EF6B  F019         	goto	u4240
  9091  0032C0  5031               	movf	(dtoa@p+1)^0,w,c
  9092  0032C2  E106               	bnz	u4241
  9093  0032C4  0430               	decf	dtoa@p^0,w,c
  9094  0032C6  B0D8               	btfsc	status,0,c
  9095  0032C8  EF68  F019         	goto	u4241
  9096  0032CC  EF6B  F019         	goto	u4240
  9097  0032D0                     u4241:
  9098  0032D0  FFFF               	dw	65535	; assembler added errata NOP
  9099  0032D2  EFBF  F018         	goto	l3989
  9100  0032D6                     u4240:
  9101  0032D6  FFFF               	dw	65535	; assembler added errata NOP
  9102  0032D8  BE33               	btfsc	(dtoa@w+1)^0,7,c
  9103  0032DA  EF77  F019         	goto	u4251
  9104  0032DE  5033               	movf	(dtoa@w+1)^0,w,c
  9105  0032E0  E109               	bnz	u4250
  9106  0032E2  0432               	decf	dtoa@w^0,w,c
  9107  0032E4  A0D8               	btfss	status,0,c
  9108  0032E6  EF77  F019         	goto	u4251
  9109  0032EA  EF7A  F019         	goto	u4250
  9110  0032EE                     u4251:
  9111  0032EE  FFFF               	dw	65535	; assembler added errata NOP
  9112  0032F0  EF84  F019         	goto	l4009
  9113  0032F4                     u4250:
  9114  0032F4  FFFF               	dw	65535	; assembler added errata NOP
  9115  0032F6  0100               	movlb	0	; () banked
  9116  0032F8  B38A               	btfsc	_flags& (0+255),1,b
  9117  0032FA  EF81  F019         	goto	u4261
  9118  0032FE  EF84  F019         	goto	u4260
  9119  003302                     u4261:
  9120  003302  FFFF               	dw	65535	; assembler added errata NOP
  9121  003304  EFBF  F018         	goto	l3989
  9122  003308                     u4260:
  9123  003308                     l4009:
  9124  003308  FFFF               	dw	65535	; assembler added errata NOP
  9125                           
  9126                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  9127  00330A  5034               	movf	dtoa@s^0,w,c
  9128  00330C  1035               	iorwf	(dtoa@s+1)^0,w,c
  9129  00330E  A4D8               	btfss	status,2,c
  9130  003310  EF8C  F019         	goto	u4271
  9131  003314  EF8F  F019         	goto	u4270
  9132  003318                     u4271:
  9133  003318  FFFF               	dw	65535	; assembler added errata NOP
  9134  00331A  EF99  F019         	goto	l4013
  9135  00331E                     u4270:
  9136  00331E  FFFF               	dw	65535	; assembler added errata NOP
  9137  003320  0100               	movlb	0	; () banked
  9138  003322  A58A               	btfss	_flags& (0+255),2,b
  9139  003324  EF96  F019         	goto	u4281
  9140  003328  EF99  F019         	goto	u4280
  9141  00332C                     u4281:
  9142  00332C  FFFF               	dw	65535	; assembler added errata NOP
  9143  00332E  EFBC  F019         	goto	l4023
  9144  003332                     u4280:
  9145  003332                     l4013:
  9146  003332  FFFF               	dw	65535	; assembler added errata NOP
  9147                           
  9148                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  9149  003334  063E               	decf	dtoa@i^0,f,c
  9150  003336  A0D8               	btfss	status,0,c
  9151  003338  063F               	decf	(dtoa@i+1)^0,f,c
  9152  00333A                     
  9153                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  9154  00333A  5034               	movf	dtoa@s^0,w,c
  9155  00333C  1035               	iorwf	(dtoa@s+1)^0,w,c
  9156  00333E  A4D8               	btfss	status,2,c
  9157  003340  EFA4  F019         	goto	u4291
  9158  003344  EFA7  F019         	goto	u4290
  9159  003348                     u4291:
  9160  003348  FFFF               	dw	65535	; assembler added errata NOP
  9161  00334A  EFAE  F019         	goto	l4019
  9162  00334E                     u4290:
  9163  00334E  FFFF               	dw	65535	; assembler added errata NOP
  9164  003350  0E00               	movlw	0
  9165  003352  6E2F               	movwf	(_dtoa$1668+1)^0,c
  9166  003354  0E2B               	movlw	43
  9167  003356  6E2E               	movwf	_dtoa$1668^0,c
  9168  003358  EFB3  F019         	goto	l4021
  9169  00335C                     l4019:
  9170  00335C  FFFF               	dw	65535	; assembler added errata NOP
  9171  00335E  0E00               	movlw	0
  9172  003360  6E2F               	movwf	(_dtoa$1668+1)^0,c
  9173  003362  0E2D               	movlw	45
  9174  003364  6E2E               	movwf	_dtoa$1668^0,c
  9175  003366                     l4021:
  9176  003366  FFFF               	dw	65535	; assembler added errata NOP
  9177  003368  0E98               	movlw	low _dbuf
  9178  00336A  243E               	addwf	dtoa@i^0,w,c
  9179  00336C  6ED9               	movwf	fsr2l,c
  9180  00336E  0E00               	movlw	high _dbuf
  9181  003370  203F               	addwfc	(dtoa@i+1)^0,w,c
  9182  003372  6EDA               	movwf	fsr2h,c
  9183  003374  C02E  FFDF         	movff	_dtoa$1668,indf2
  9184  003378                     l4023:
  9185  003378  FFFF               	dw	65535	; assembler added errata NOP
  9186                           
  9187                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  9188  00337A  C01C  F011         	movff	dtoa@fp,pad@fp
  9189  00337E  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  9190  003382  0E98               	movlw	low _dbuf
  9191  003384  243E               	addwf	dtoa@i^0,w,c
  9192  003386  6E13               	movwf	pad@buf^0,c
  9193  003388  0E00               	movlw	high _dbuf
  9194  00338A  203F               	addwfc	(dtoa@i+1)^0,w,c
  9195  00338C  6E14               	movwf	(pad@buf+1)^0,c
  9196  00338E  C032  F015         	movff	dtoa@w,pad@p
  9197  003392  C033  F016         	movff	dtoa@w+1,pad@p+1
  9198  003396  EC3F  F038         	call	_pad	;wreg free
  9199  00339A  C011  F01C         	movff	?_pad,?_dtoa
  9200  00339E  C012  F01D         	movff	?_pad+1,?_dtoa+1
  9201  0033A2  0012               	return		;funcret
  9202  0033A4  FFFF               	dw	65535	; errata NOP
  9203  0033A6                     __end_of_dtoa:
  9204                           	callstack 0
  9205                           
  9206 ;; *************** function ___aomod *****************
  9207 ;; Defined at:
  9208 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  9209 ;; Parameters:    Size  Location     Type
  9210 ;;  dividend        8    0[COMRAM] long long 
  9211 ;;  divisor         8    8[COMRAM] long long 
  9212 ;; Auto vars:     Size  Location     Type
  9213 ;;  sign            1   17[COMRAM] unsigned char 
  9214 ;;  counter         1   16[COMRAM] unsigned char 
  9215 ;; Return value:  Size  Location     Type
  9216 ;;                  8    0[COMRAM] long long 
  9217 ;; Registers used:
  9218 ;;		wreg, status,2, status,0
  9219 ;; Tracked objects:
  9220 ;;		On entry : 0/0
  9221 ;;		On exit  : 0/0
  9222 ;;		Unchanged: 0/0
  9223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9224 ;;      Params:        16       0       0       0       0       0       0
  9225 ;;      Locals:         2       0       0       0       0       0       0
  9226 ;;      Temps:          0       0       0       0       0       0       0
  9227 ;;      Totals:        18       0       0       0       0       0       0
  9228 ;;Total ram usage:       18 bytes
  9229 ;; Hardware stack levels used:    1
  9230 ;; Hardware stack levels required when called:    1
  9231 ;; This function calls:
  9232 ;;		Nothing
  9233 ;; This function is called by:
  9234 ;;		_dtoa
  9235 ;; This function uses a non-reentrant model
  9236 ;;
  9237                           
  9238                           	psect	text21
  9239  007940                     __ptext21:
  9240                           	callstack 0
  9241  007940                     ___aomod:
  9242                           	callstack 0
  9243  007940  FFFF               	dw	65535	; assembler added errata NOP
  9244  007942  0E00               	movlw	0
  9245  007944  6E12               	movwf	___aomod@sign^0,c
  9246  007946  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  9247  007948  EFAB  F03C         	goto	u3860
  9248  00794C  EFA8  F03C         	goto	u3861
  9249  007950                     u3861:
  9250  007950  FFFF               	dw	65535	; assembler added errata NOP
  9251  007952  EFBE  F03C         	goto	l3829
  9252  007956                     u3860:
  9253  007956  FFFF               	dw	65535	; assembler added errata NOP
  9254  007958  1E08               	comf	(___aomod@dividend+7)^0,f,c
  9255  00795A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  9256  00795C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  9257  00795E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  9258  007960  1E04               	comf	(___aomod@dividend+3)^0,f,c
  9259  007962  1E03               	comf	(___aomod@dividend+2)^0,f,c
  9260  007964  1E02               	comf	(___aomod@dividend+1)^0,f,c
  9261  007966  6C01               	negf	___aomod@dividend^0,c
  9262  007968  0E00               	movlw	0
  9263  00796A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  9264  00796C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  9265  00796E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  9266  007970  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  9267  007972  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  9268  007974  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  9269  007976  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  9270  007978  0E01               	movlw	1
  9271  00797A  6E12               	movwf	___aomod@sign^0,c
  9272  00797C                     l3829:
  9273  00797C  FFFF               	dw	65535	; assembler added errata NOP
  9274  00797E  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  9275  007980  EFC7  F03C         	goto	u3870
  9276  007984  EFC4  F03C         	goto	u3871
  9277  007988                     u3871:
  9278  007988  FFFF               	dw	65535	; assembler added errata NOP
  9279  00798A  EFD8  F03C         	goto	l3833
  9280  00798E                     u3870:
  9281  00798E  FFFF               	dw	65535	; assembler added errata NOP
  9282  007990  1E10               	comf	(___aomod@divisor+7)^0,f,c
  9283  007992  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  9284  007994  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  9285  007996  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  9286  007998  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  9287  00799A  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  9288  00799C  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  9289  00799E  6C09               	negf	___aomod@divisor^0,c
  9290  0079A0  0E00               	movlw	0
  9291  0079A2  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  9292  0079A4  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  9293  0079A6  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  9294  0079A8  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  9295  0079AA  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  9296  0079AC  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  9297  0079AE  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  9298  0079B0                     l3833:
  9299  0079B0  FFFF               	dw	65535	; assembler added errata NOP
  9300  0079B2  5009               	movf	___aomod@divisor^0,w,c
  9301  0079B4  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  9302  0079B6  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  9303  0079B8  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  9304  0079BA  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  9305  0079BC  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  9306  0079BE  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  9307  0079C0  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  9308  0079C2  B4D8               	btfsc	status,2,c
  9309  0079C4  EFE6  F03C         	goto	u3881
  9310  0079C8  EFE9  F03C         	goto	u3880
  9311  0079CC                     u3881:
  9312  0079CC  FFFF               	dw	65535	; assembler added errata NOP
  9313  0079CE  EF3A  F03D         	goto	l3849
  9314  0079D2                     u3880:
  9315  0079D2  FFFF               	dw	65535	; assembler added errata NOP
  9316  0079D4  0E01               	movlw	1
  9317  0079D6  6E11               	movwf	___aomod@counter^0,c
  9318  0079D8  EFF9  F03C         	goto	l3839
  9319  0079DC                     l3837:
  9320  0079DC  FFFF               	dw	65535	; assembler added errata NOP
  9321  0079DE  90D8               	bcf	status,0,c
  9322  0079E0  3609               	rlcf	___aomod@divisor^0,f,c
  9323  0079E2  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  9324  0079E4  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  9325  0079E6  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  9326  0079E8  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  9327  0079EA  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  9328  0079EC  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  9329  0079EE  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  9330  0079F0  2A11               	incf	___aomod@counter^0,f,c
  9331  0079F2                     l3839:
  9332  0079F2  FFFF               	dw	65535	; assembler added errata NOP
  9333  0079F4  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  9334  0079F6  EFFF  F03C         	goto	u3891
  9335  0079FA  EF02  F03D         	goto	u3890
  9336  0079FE                     u3891:
  9337  0079FE  FFFF               	dw	65535	; assembler added errata NOP
  9338  007A00  EFEE  F03C         	goto	l3837
  9339  007A04                     u3890:
  9340  007A04  FFFF               	dw	65535	; assembler added errata NOP
  9341  007A06                     l3841:
  9342  007A06  FFFF               	dw	65535	; assembler added errata NOP
  9343  007A08  5009               	movf	___aomod@divisor^0,w,c
  9344  007A0A  5C01               	subwf	___aomod@dividend^0,w,c
  9345  007A0C  500A               	movf	(___aomod@divisor+1)^0,w,c
  9346  007A0E  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  9347  007A10  500B               	movf	(___aomod@divisor+2)^0,w,c
  9348  007A12  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  9349  007A14  500C               	movf	(___aomod@divisor+3)^0,w,c
  9350  007A16  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  9351  007A18  500D               	movf	(___aomod@divisor+4)^0,w,c
  9352  007A1A  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  9353  007A1C  500E               	movf	(___aomod@divisor+5)^0,w,c
  9354  007A1E  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  9355  007A20  500F               	movf	(___aomod@divisor+6)^0,w,c
  9356  007A22  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  9357  007A24  5010               	movf	(___aomod@divisor+7)^0,w,c
  9358  007A26  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  9359  007A28  A0D8               	btfss	status,0,c
  9360  007A2A  EF19  F03D         	goto	u3901
  9361  007A2E  EF1C  F03D         	goto	u3900
  9362  007A32                     u3901:
  9363  007A32  FFFF               	dw	65535	; assembler added errata NOP
  9364  007A34  EF2D  F03D         	goto	l3845
  9365  007A38                     u3900:
  9366  007A38  FFFF               	dw	65535	; assembler added errata NOP
  9367  007A3A  5009               	movf	___aomod@divisor^0,w,c
  9368  007A3C  5E01               	subwf	___aomod@dividend^0,f,c
  9369  007A3E  500A               	movf	(___aomod@divisor+1)^0,w,c
  9370  007A40  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  9371  007A42  500B               	movf	(___aomod@divisor+2)^0,w,c
  9372  007A44  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  9373  007A46  500C               	movf	(___aomod@divisor+3)^0,w,c
  9374  007A48  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  9375  007A4A  500D               	movf	(___aomod@divisor+4)^0,w,c
  9376  007A4C  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  9377  007A4E  500E               	movf	(___aomod@divisor+5)^0,w,c
  9378  007A50  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  9379  007A52  500F               	movf	(___aomod@divisor+6)^0,w,c
  9380  007A54  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  9381  007A56  5010               	movf	(___aomod@divisor+7)^0,w,c
  9382  007A58  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  9383  007A5A                     l3845:
  9384  007A5A  FFFF               	dw	65535	; assembler added errata NOP
  9385  007A5C  90D8               	bcf	status,0,c
  9386  007A5E  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  9387  007A60  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  9388  007A62  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  9389  007A64  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  9390  007A66  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  9391  007A68  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  9392  007A6A  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  9393  007A6C  3209               	rrcf	___aomod@divisor^0,f,c
  9394  007A6E  2E11               	decfsz	___aomod@counter^0,f,c
  9395  007A70  EF03  F03D         	goto	l3841
  9396  007A74                     l3849:
  9397  007A74  FFFF               	dw	65535	; assembler added errata NOP
  9398  007A76  5012               	movf	___aomod@sign^0,w,c
  9399  007A78  B4D8               	btfsc	status,2,c
  9400  007A7A  EF41  F03D         	goto	u3911
  9401  007A7E  EF44  F03D         	goto	u3910
  9402  007A82                     u3911:
  9403  007A82  FFFF               	dw	65535	; assembler added errata NOP
  9404  007A84  EF55  F03D         	goto	l3853
  9405  007A88                     u3910:
  9406  007A88  FFFF               	dw	65535	; assembler added errata NOP
  9407  007A8A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  9408  007A8C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  9409  007A8E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  9410  007A90  1E05               	comf	(___aomod@dividend+4)^0,f,c
  9411  007A92  1E04               	comf	(___aomod@dividend+3)^0,f,c
  9412  007A94  1E03               	comf	(___aomod@dividend+2)^0,f,c
  9413  007A96  1E02               	comf	(___aomod@dividend+1)^0,f,c
  9414  007A98  6C01               	negf	___aomod@dividend^0,c
  9415  007A9A  0E00               	movlw	0
  9416  007A9C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  9417  007A9E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  9418  007AA0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  9419  007AA2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  9420  007AA4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  9421  007AA6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  9422  007AA8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  9423  007AAA                     l3853:
  9424  007AAA  FFFF               	dw	65535	; assembler added errata NOP
  9425  007AAC  C001  F001         	movff	___aomod@dividend,?___aomod
  9426  007AB0  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  9427  007AB4  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  9428  007AB8  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  9429  007ABC  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  9430  007AC0  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  9431  007AC4  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  9432  007AC8  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  9433  007ACC  0012               	return		;funcret
  9434  007ACE  FFFF               	dw	65535	; errata NOP
  9435  007AD0                     __end_of___aomod:
  9436                           	callstack 0
  9437                           
  9438 ;; *************** function ___aodiv *****************
  9439 ;; Defined at:
  9440 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  9441 ;; Parameters:    Size  Location     Type
  9442 ;;  dividend        8    0[COMRAM] long long 
  9443 ;;  divisor         8    8[COMRAM] long long 
  9444 ;; Auto vars:     Size  Location     Type
  9445 ;;  quotient        8   18[COMRAM] long long 
  9446 ;;  sign            1   17[COMRAM] unsigned char 
  9447 ;;  counter         1   16[COMRAM] unsigned char 
  9448 ;; Return value:  Size  Location     Type
  9449 ;;                  8    0[COMRAM] long long 
  9450 ;; Registers used:
  9451 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9452 ;; Tracked objects:
  9453 ;;		On entry : 0/0
  9454 ;;		On exit  : 0/0
  9455 ;;		Unchanged: 0/0
  9456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9457 ;;      Params:        16       0       0       0       0       0       0
  9458 ;;      Locals:        10       0       0       0       0       0       0
  9459 ;;      Temps:          0       0       0       0       0       0       0
  9460 ;;      Totals:        26       0       0       0       0       0       0
  9461 ;;Total ram usage:       26 bytes
  9462 ;; Hardware stack levels used:    1
  9463 ;; Hardware stack levels required when called:    1
  9464 ;; This function calls:
  9465 ;;		Nothing
  9466 ;; This function is called by:
  9467 ;;		_dtoa
  9468 ;; This function uses a non-reentrant model
  9469 ;;
  9470                           
  9471                           	psect	text22
  9472  007AD0                     __ptext22:
  9473                           	callstack 0
  9474  007AD0                     ___aodiv:
  9475                           	callstack 0
  9476  007AD0  FFFF               	dw	65535	; assembler added errata NOP
  9477  007AD2  0E00               	movlw	0
  9478  007AD4  6E12               	movwf	___aodiv@sign^0,c
  9479  007AD6  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  9480  007AD8  EF73  F03D         	goto	u3790
  9481  007ADC  EF70  F03D         	goto	u3791
  9482  007AE0                     u3791:
  9483  007AE0  FFFF               	dw	65535	; assembler added errata NOP
  9484  007AE2  EF86  F03D         	goto	l3785
  9485  007AE6                     u3790:
  9486  007AE6  FFFF               	dw	65535	; assembler added errata NOP
  9487  007AE8  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  9488  007AEA  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  9489  007AEC  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  9490  007AEE  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  9491  007AF0  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  9492  007AF2  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  9493  007AF4  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  9494  007AF6  6C09               	negf	___aodiv@divisor^0,c
  9495  007AF8  0E00               	movlw	0
  9496  007AFA  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  9497  007AFC  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  9498  007AFE  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  9499  007B00  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  9500  007B02  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  9501  007B04  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  9502  007B06  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  9503  007B08  0E01               	movlw	1
  9504  007B0A  6E12               	movwf	___aodiv@sign^0,c
  9505  007B0C                     l3785:
  9506  007B0C  FFFF               	dw	65535	; assembler added errata NOP
  9507  007B0E  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  9508  007B10  EF8F  F03D         	goto	u3800
  9509  007B14  EF8C  F03D         	goto	u3801
  9510  007B18                     u3801:
  9511  007B18  FFFF               	dw	65535	; assembler added errata NOP
  9512  007B1A  EFA2  F03D         	goto	l3791
  9513  007B1E                     u3800:
  9514  007B1E  FFFF               	dw	65535	; assembler added errata NOP
  9515  007B20  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  9516  007B22  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  9517  007B24  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  9518  007B26  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  9519  007B28  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  9520  007B2A  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  9521  007B2C  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  9522  007B2E  6C01               	negf	___aodiv@dividend^0,c
  9523  007B30  0E00               	movlw	0
  9524  007B32  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  9525  007B34  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  9526  007B36  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  9527  007B38  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  9528  007B3A  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  9529  007B3C  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  9530  007B3E  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  9531  007B40  0E01               	movlw	1
  9532  007B42  1A12               	xorwf	___aodiv@sign^0,f,c
  9533  007B44                     l3791:
  9534  007B44  FFFF               	dw	65535	; assembler added errata NOP
  9535  007B46  EE20  F013         	lfsr	2,___aodiv@quotient
  9536  007B4A  0E07               	movlw	7
  9537  007B4C                     u3811:
  9538  007B4C  6ADE               	clrf	postinc2,c
  9539  007B4E  06E8               	decf	wreg,f,c
  9540  007B50  E2FD               	bc	u3811
  9541  007B52  5009               	movf	___aodiv@divisor^0,w,c
  9542  007B54  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  9543  007B56  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  9544  007B58  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  9545  007B5A  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  9546  007B5C  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  9547  007B5E  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  9548  007B60  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  9549  007B62  B4D8               	btfsc	status,2,c
  9550  007B64  EFB6  F03D         	goto	u3821
  9551  007B68  EFB9  F03D         	goto	u3820
  9552  007B6C                     u3821:
  9553  007B6C  FFFF               	dw	65535	; assembler added errata NOP
  9554  007B6E  EF14  F03E         	goto	l3813
  9555  007B72                     u3820:
  9556  007B72  FFFF               	dw	65535	; assembler added errata NOP
  9557  007B74  0E01               	movlw	1
  9558  007B76  6E11               	movwf	___aodiv@counter^0,c
  9559  007B78  EFC9  F03D         	goto	l3799
  9560  007B7C                     l3797:
  9561  007B7C  FFFF               	dw	65535	; assembler added errata NOP
  9562  007B7E  90D8               	bcf	status,0,c
  9563  007B80  3609               	rlcf	___aodiv@divisor^0,f,c
  9564  007B82  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  9565  007B84  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  9566  007B86  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  9567  007B88  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  9568  007B8A  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  9569  007B8C  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  9570  007B8E  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  9571  007B90  2A11               	incf	___aodiv@counter^0,f,c
  9572  007B92                     l3799:
  9573  007B92  FFFF               	dw	65535	; assembler added errata NOP
  9574  007B94  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  9575  007B96  EFCF  F03D         	goto	u3831
  9576  007B9A  EFD2  F03D         	goto	u3830
  9577  007B9E                     u3831:
  9578  007B9E  FFFF               	dw	65535	; assembler added errata NOP
  9579  007BA0  EFBE  F03D         	goto	l3797
  9580  007BA4                     u3830:
  9581  007BA4  FFFF               	dw	65535	; assembler added errata NOP
  9582  007BA6                     l3801:
  9583  007BA6  FFFF               	dw	65535	; assembler added errata NOP
  9584  007BA8  90D8               	bcf	status,0,c
  9585  007BAA  3613               	rlcf	___aodiv@quotient^0,f,c
  9586  007BAC  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  9587  007BAE  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  9588  007BB0  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  9589  007BB2  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  9590  007BB4  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  9591  007BB6  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  9592  007BB8  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  9593  007BBA  5009               	movf	___aodiv@divisor^0,w,c
  9594  007BBC  5C01               	subwf	___aodiv@dividend^0,w,c
  9595  007BBE  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9596  007BC0  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  9597  007BC2  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9598  007BC4  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  9599  007BC6  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9600  007BC8  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  9601  007BCA  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9602  007BCC  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  9603  007BCE  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9604  007BD0  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  9605  007BD2  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9606  007BD4  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  9607  007BD6  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9608  007BD8  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  9609  007BDA  A0D8               	btfss	status,0,c
  9610  007BDC  EFF2  F03D         	goto	u3841
  9611  007BE0  EFF5  F03D         	goto	u3840
  9612  007BE4                     u3841:
  9613  007BE4  FFFF               	dw	65535	; assembler added errata NOP
  9614  007BE6  EF07  F03E         	goto	l3809
  9615  007BEA                     u3840:
  9616  007BEA  FFFF               	dw	65535	; assembler added errata NOP
  9617  007BEC  5009               	movf	___aodiv@divisor^0,w,c
  9618  007BEE  5E01               	subwf	___aodiv@dividend^0,f,c
  9619  007BF0  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9620  007BF2  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  9621  007BF4  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9622  007BF6  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  9623  007BF8  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9624  007BFA  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  9625  007BFC  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9626  007BFE  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  9627  007C00  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9628  007C02  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  9629  007C04  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9630  007C06  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  9631  007C08  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9632  007C0A  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  9633  007C0C  8013               	bsf	___aodiv@quotient^0,0,c
  9634  007C0E                     l3809:
  9635  007C0E  FFFF               	dw	65535	; assembler added errata NOP
  9636  007C10  90D8               	bcf	status,0,c
  9637  007C12  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  9638  007C14  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  9639  007C16  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  9640  007C18  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  9641  007C1A  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  9642  007C1C  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  9643  007C1E  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  9644  007C20  3209               	rrcf	___aodiv@divisor^0,f,c
  9645  007C22  2E11               	decfsz	___aodiv@counter^0,f,c
  9646  007C24  EFD3  F03D         	goto	l3801
  9647  007C28                     l3813:
  9648  007C28  FFFF               	dw	65535	; assembler added errata NOP
  9649  007C2A  5012               	movf	___aodiv@sign^0,w,c
  9650  007C2C  B4D8               	btfsc	status,2,c
  9651  007C2E  EF1B  F03E         	goto	u3851
  9652  007C32  EF1E  F03E         	goto	u3850
  9653  007C36                     u3851:
  9654  007C36  FFFF               	dw	65535	; assembler added errata NOP
  9655  007C38  EF2F  F03E         	goto	l3817
  9656  007C3C                     u3850:
  9657  007C3C  FFFF               	dw	65535	; assembler added errata NOP
  9658  007C3E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  9659  007C40  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  9660  007C42  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  9661  007C44  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  9662  007C46  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  9663  007C48  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  9664  007C4A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  9665  007C4C  6C13               	negf	___aodiv@quotient^0,c
  9666  007C4E  0E00               	movlw	0
  9667  007C50  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  9668  007C52  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  9669  007C54  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  9670  007C56  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  9671  007C58  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  9672  007C5A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  9673  007C5C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  9674  007C5E                     l3817:
  9675  007C5E  FFFF               	dw	65535	; assembler added errata NOP
  9676  007C60  C013  F001         	movff	___aodiv@quotient,?___aodiv
  9677  007C64  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  9678  007C68  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  9679  007C6C  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  9680  007C70  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  9681  007C74  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  9682  007C78  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  9683  007C7C  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  9684  007C80  0012               	return		;funcret
  9685  007C82  FFFF               	dw	65535	; errata NOP
  9686  007C84                     __end_of___aodiv:
  9687                           	callstack 0
  9688                           
  9689 ;; *************** function _ctoa *****************
  9690 ;; Defined at:
  9691 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  9692 ;; Parameters:    Size  Location     Type
  9693 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  9694 ;;		 -> vsnprintf@f(6), 
  9695 ;;  c               1   29[COMRAM] unsigned char 
  9696 ;; Auto vars:     Size  Location     Type
  9697 ;;  w               2   30[COMRAM] int 
  9698 ;;  l               2    0        int 
  9699 ;; Return value:  Size  Location     Type
  9700 ;;                  2   27[COMRAM] int 
  9701 ;; Registers used:
  9702 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9703 ;; Tracked objects:
  9704 ;;		On entry : 0/0
  9705 ;;		On exit  : 0/0
  9706 ;;		Unchanged: 0/0
  9707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9708 ;;      Params:         3       0       0       0       0       0       0
  9709 ;;      Locals:         2       0       0       0       0       0       0
  9710 ;;      Temps:          0       0       0       0       0       0       0
  9711 ;;      Totals:         5       0       0       0       0       0       0
  9712 ;;Total ram usage:        5 bytes
  9713 ;; Hardware stack levels used:    1
  9714 ;; Hardware stack levels required when called:    5
  9715 ;; This function calls:
  9716 ;;		_pad
  9717 ;; This function is called by:
  9718 ;;		_vfpfcnvrt
  9719 ;; This function uses a non-reentrant model
  9720 ;;
  9721                           
  9722                           	psect	text23
  9723  0066FA                     __ptext23:
  9724                           	callstack 0
  9725  0066FA                     _ctoa:
  9726                           	callstack 0
  9727  0066FA  FFFF               	dw	65535	; assembler added errata NOP
  9728  0066FC                     
  9729                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  9730  0066FC  0100               	movlb	0	; () banked
  9731  0066FE  5186               	movf	_width& (0+255),w,b
  9732  006700  1187               	iorwf	(_width+1)& (0+255),w,b
  9733  006702  A4D8               	btfss	status,2,c
  9734  006704  EF86  F033         	goto	u4141
  9735  006708  EF89  F033         	goto	u4140
  9736  00670C                     u4141:
  9737  00670C  FFFF               	dw	65535	; assembler added errata NOP
  9738  00670E  EF90  F033         	goto	l3955
  9739  006712                     u4140:
  9740  006712  FFFF               	dw	65535	; assembler added errata NOP
  9741  006714                     
  9742                           ; BSR set to: 0
  9743  006714  C086  F01F         	movff	_width,ctoa@w
  9744  006718  C087  F020         	movff	_width+1,ctoa@w+1
  9745  00671C  EF97  F033         	goto	l3957
  9746  006720                     l3955:
  9747  006720  FFFF               	dw	65535	; assembler added errata NOP
  9748                           
  9749                           ; BSR set to: 0
  9750  006722  0EFF               	movlw	255
  9751  006724  2586               	addwf	_width& (0+255),w,b
  9752  006726  6E1F               	movwf	ctoa@w^0,c
  9753  006728  0EFF               	movlw	255
  9754  00672A  2187               	addwfc	(_width+1)& (0+255),w,b
  9755  00672C  6E20               	movwf	(ctoa@w+1)^0,c
  9756  00672E                     l3957:
  9757  00672E  FFFF               	dw	65535	; assembler added errata NOP
  9758                           
  9759                           ; BSR set to: 0
  9760                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 267:     dbuf[0] 
      +                          = c;
  9761  006730  C01E  F098         	movff	ctoa@c,_dbuf
  9762  006734                     
  9763                           ; BSR set to: 0
  9764                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 268:     dbuf[1] 
      +                          = '\0';
  9765  006734  0E00               	movlw	0
  9766  006736  6F99               	movwf	(_dbuf+1)& (0+255),b
  9767  006738                     
  9768                           ; BSR set to: 0
  9769                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 269:     return p
      +                          ad(fp, &dbuf[0], w);
  9770  006738  C01C  F011         	movff	ctoa@fp,pad@fp
  9771  00673C  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  9772  006740  0E98               	movlw	low _dbuf
  9773  006742  6E13               	movwf	pad@buf^0,c
  9774  006744  0E00               	movlw	high _dbuf
  9775  006746  6E14               	movwf	(pad@buf+1)^0,c
  9776  006748  C01F  F015         	movff	ctoa@w,pad@p
  9777  00674C  C020  F016         	movff	ctoa@w+1,pad@p+1
  9778  006750  EC3F  F038         	call	_pad	;wreg free
  9779  006754  C011  F01C         	movff	?_pad,?_ctoa
  9780  006758  C012  F01D         	movff	?_pad+1,?_ctoa+1
  9781  00675C  0012               	return		;funcret
  9782  00675E  FFFF               	dw	65535	; errata NOP
  9783  006760                     __end_of_ctoa:
  9784                           	callstack 0
  9785                           
  9786 ;; *************** function _pad *****************
  9787 ;; Defined at:
  9788 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  9789 ;; Parameters:    Size  Location     Type
  9790 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9791 ;;		 -> vsnprintf@f(6), 
  9792 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9793 ;;		 -> dbuf(32), 
  9794 ;;  p               2   20[COMRAM] int 
  9795 ;; Auto vars:     Size  Location     Type
  9796 ;;  w               2   25[COMRAM] int 
  9797 ;;  i               2   23[COMRAM] int 
  9798 ;; Return value:  Size  Location     Type
  9799 ;;                  2   16[COMRAM] int 
  9800 ;; Registers used:
  9801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9802 ;; Tracked objects:
  9803 ;;		On entry : 0/0
  9804 ;;		On exit  : 0/0
  9805 ;;		Unchanged: 0/0
  9806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9807 ;;      Params:         6       0       0       0       0       0       0
  9808 ;;      Locals:         4       0       0       0       0       0       0
  9809 ;;      Temps:          1       0       0       0       0       0       0
  9810 ;;      Totals:        11       0       0       0       0       0       0
  9811 ;;Total ram usage:       11 bytes
  9812 ;; Hardware stack levels used:    1
  9813 ;; Hardware stack levels required when called:    4
  9814 ;; This function calls:
  9815 ;;		_fputc
  9816 ;;		_fputs
  9817 ;;		_strlen
  9818 ;; This function is called by:
  9819 ;;		_ctoa
  9820 ;;		_dtoa
  9821 ;;		_otoa
  9822 ;;		_utoa
  9823 ;;		_xtoa
  9824 ;; This function uses a non-reentrant model
  9825 ;;
  9826                           
  9827                           	psect	text24
  9828  00707E                     __ptext24:
  9829                           	callstack 0
  9830  00707E                     _pad:
  9831                           	callstack 0
  9832  00707E  FFFF               	dw	65535	; assembler added errata NOP
  9833  007080                     
  9834                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  9835  007080  0100               	movlb	0	; () banked
  9836  007082  A18A               	btfss	_flags& (0+255),0,b
  9837  007084  EF46  F038         	goto	u3991
  9838  007088  EF49  F038         	goto	u3990
  9839  00708C                     u3991:
  9840  00708C  FFFF               	dw	65535	; assembler added errata NOP
  9841  00708E  EF54  F038         	goto	l3899
  9842  007092                     u3990:
  9843  007092  FFFF               	dw	65535	; assembler added errata NOP
  9844  007094                     
  9845                           ; BSR set to: 0
  9846                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  9847  007094  C013  F00A         	movff	pad@buf,fputs@s
  9848  007098  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9849  00709C  C011  F00C         	movff	pad@fp,fputs@fp
  9850  0070A0  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9851  0070A4  ECCE  F032         	call	_fputs	;wreg free
  9852  0070A8                     l3899:
  9853  0070A8  FFFF               	dw	65535	; assembler added errata NOP
  9854                           
  9855                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  9856  0070AA  BE16               	btfsc	(pad@p+1)^0,7,c
  9857  0070AC  EF5A  F038         	goto	u4001
  9858  0070B0  EF5D  F038         	goto	u4000
  9859  0070B4                     u4001:
  9860  0070B4  FFFF               	dw	65535	; assembler added errata NOP
  9861  0070B6  EF64  F038         	goto	l3903
  9862  0070BA                     u4000:
  9863  0070BA  FFFF               	dw	65535	; assembler added errata NOP
  9864  0070BC  C015  F01A         	movff	pad@p,pad@w
  9865  0070C0  C016  F01B         	movff	pad@p+1,pad@w+1
  9866  0070C4  EF69  F038         	goto	l1187
  9867  0070C8                     l3903:
  9868  0070C8  FFFF               	dw	65535	; assembler added errata NOP
  9869  0070CA  0E00               	movlw	0
  9870  0070CC  6E1B               	movwf	(pad@w+1)^0,c
  9871  0070CE  0E00               	movlw	0
  9872  0070D0  6E1A               	movwf	pad@w^0,c
  9873  0070D2                     l1187:
  9874  0070D2  FFFF               	dw	65535	; assembler added errata NOP
  9875                           
  9876                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  9877  0070D4  0E00               	movlw	0
  9878  0070D6  6E19               	movwf	(pad@i+1)^0,c
  9879  0070D8  0E00               	movlw	0
  9880  0070DA  6E18               	movwf	pad@i^0,c
  9881                           
  9882                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9883  0070DC  EF7D  F038         	goto	l3909
  9884  0070E0                     l3905:
  9885  0070E0  FFFF               	dw	65535	; assembler added errata NOP
  9886                           
  9887                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  9888  0070E2  0E00               	movlw	0
  9889  0070E4  6E02               	movwf	(fputc@c+1)^0,c
  9890  0070E6  0E20               	movlw	32
  9891  0070E8  6E01               	movwf	fputc@c^0,c
  9892  0070EA  C011  F003         	movff	pad@fp,fputc@fp
  9893  0070EE  C012  F004         	movff	pad@fp+1,fputc@fp+1
  9894  0070F2  ECCE  F037         	call	_fputc	;wreg free
  9895  0070F6                     
  9896                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  9897  0070F6  4A18               	infsnz	pad@i^0,f,c
  9898  0070F8  2A19               	incf	(pad@i+1)^0,f,c
  9899  0070FA                     l3909:
  9900  0070FA  FFFF               	dw	65535	; assembler added errata NOP
  9901                           
  9902                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9903  0070FC  501A               	movf	pad@w^0,w,c
  9904  0070FE  5C18               	subwf	pad@i^0,w,c
  9905  007100  5019               	movf	(pad@i+1)^0,w,c
  9906  007102  0A80               	xorlw	128
  9907  007104  6E17               	movwf	??_pad^0,c
  9908  007106  501B               	movf	(pad@w+1)^0,w,c
  9909  007108  0A80               	xorlw	128
  9910  00710A  5817               	subwfb	??_pad^0,w,c
  9911  00710C  A0D8               	btfss	status,0,c
  9912  00710E  EF8B  F038         	goto	u4011
  9913  007112  EF8E  F038         	goto	u4010
  9914  007116                     u4011:
  9915  007116  FFFF               	dw	65535	; assembler added errata NOP
  9916  007118  EF70  F038         	goto	l3905
  9917  00711C                     u4010:
  9918  00711C  FFFF               	dw	65535	; assembler added errata NOP
  9919  00711E                     
  9920                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  9921  00711E  0100               	movlb	0	; () banked
  9922  007120  B18A               	btfsc	_flags& (0+255),0,b
  9923  007122  EF95  F038         	goto	u4021
  9924  007126  EF98  F038         	goto	u4020
  9925  00712A                     u4021:
  9926  00712A  FFFF               	dw	65535	; assembler added errata NOP
  9927  00712C  EFA3  F038         	goto	l3913
  9928  007130                     u4020:
  9929  007130  FFFF               	dw	65535	; assembler added errata NOP
  9930  007132                     
  9931                           ; BSR set to: 0
  9932                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  9933  007132  C013  F00A         	movff	pad@buf,fputs@s
  9934  007136  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9935  00713A  C011  F00C         	movff	pad@fp,fputs@fp
  9936  00713E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9937  007142  ECCE  F032         	call	_fputs	;wreg free
  9938  007146                     l3913:
  9939  007146  FFFF               	dw	65535	; assembler added errata NOP
  9940                           
  9941                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  9942  007148  C013  F001         	movff	pad@buf,strlen@s
  9943  00714C  C014  F002         	movff	pad@buf+1,strlen@s+1
  9944  007150  EC1F  F033         	call	_strlen	;wreg free
  9945  007154  501A               	movf	pad@w^0,w,c
  9946  007156  2401               	addwf	?_strlen^0,w,c
  9947  007158  6E11               	movwf	?_pad^0,c
  9948  00715A  501B               	movf	(pad@w+1)^0,w,c
  9949  00715C  2002               	addwfc	(?_strlen+1)^0,w,c
  9950  00715E  6E12               	movwf	(?_pad+1)^0,c
  9951  007160  0012               	return		;funcret
  9952  007162  FFFF               	dw	65535	; errata NOP
  9953  007164                     __end_of_pad:
  9954                           	callstack 0
  9955                           
  9956 ;; *************** function _strlen *****************
  9957 ;; Defined at:
  9958 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  9959 ;; Parameters:    Size  Location     Type
  9960 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9961 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), STR_8(50), 
  9962 ;;		 -> STR_7(9), STR_6(7), STR_5(9), STR_4(39), 
  9963 ;;		 -> STR_3(9), STR_2(64), STR_1(49), 
  9964 ;; Auto vars:     Size  Location     Type
  9965 ;;  a               2    2[COMRAM] PTR const unsigned char 
  9966 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), STR_8(50), 
  9967 ;;		 -> STR_7(9), STR_6(7), STR_5(9), STR_4(39), 
  9968 ;;		 -> STR_3(9), STR_2(64), STR_1(49), 
  9969 ;; Return value:  Size  Location     Type
  9970 ;;                  2    0[COMRAM] unsigned int 
  9971 ;; Registers used:
  9972 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  9973 ;; Tracked objects:
  9974 ;;		On entry : 0/0
  9975 ;;		On exit  : 0/0
  9976 ;;		Unchanged: 0/0
  9977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9978 ;;      Params:         2       0       0       0       0       0       0
  9979 ;;      Locals:         2       0       0       0       0       0       0
  9980 ;;      Temps:          0       0       0       0       0       0       0
  9981 ;;      Totals:         4       0       0       0       0       0       0
  9982 ;;Total ram usage:        4 bytes
  9983 ;; Hardware stack levels used:    1
  9984 ;; Hardware stack levels required when called:    1
  9985 ;; This function calls:
  9986 ;;		Nothing
  9987 ;; This function is called by:
  9988 ;;		_pad
  9989 ;;		_stoa
  9990 ;; This function uses a non-reentrant model
  9991 ;;
  9992                           
  9993                           	psect	text25
  9994  00663E                     __ptext25:
  9995                           	callstack 0
  9996  00663E                     _strlen:
  9997                           	callstack 0
  9998  00663E  FFFF               	dw	65535	; assembler added errata NOP
  9999  006640  C001  F003         	movff	strlen@s,strlen@a
 10000  006644  C002  F004         	movff	strlen@s+1,strlen@a+1
 10001  006648  EF29  F033         	goto	l3757
 10002  00664C                     l3755:
 10003  00664C  FFFF               	dw	65535	; assembler added errata NOP
 10004  00664E  4A01               	infsnz	strlen@s^0,f,c
 10005  006650  2A02               	incf	(strlen@s+1)^0,f,c
 10006  006652                     l3757:
 10007  006652  FFFF               	dw	65535	; assembler added errata NOP
 10008  006654  C001  FFF6         	movff	strlen@s,tblptrl
 10009  006658  C002  FFF7         	movff	strlen@s+1,tblptrh
 10010  00665C  6AF8               	clrf	tblptru,c
 10011  00665E  0E05               	movlw	(high __ramtop+-1)
 10012  006660  64F7               	cpfsgt	tblptrh,c
 10013  006662  D004               	bra	u3747
 10014  006664  0008               	tblrd		*
 10015  006666  FFFF               	dw	65535	; errata NOP
 10016  006668  50F5               	movf	tablat,w,c
 10017  00666A  D005               	bra	u3740
 10018  00666C                     u3747:
 10019  00666C  CFF6 FFE1          	movff	tblptrl,fsr1l
 10020  006670  CFF7 FFE2          	movff	tblptrh,fsr1h
 10021  006674  50E7               	movf	indf1,w,c
 10022  006676                     u3740:
 10023  006676  0900               	iorlw	0
 10024  006678  A4D8               	btfss	status,2,c
 10025  00667A  EF41  F033         	goto	u3751
 10026  00667E  EF44  F033         	goto	u3750
 10027  006682                     u3751:
 10028  006682  FFFF               	dw	65535	; assembler added errata NOP
 10029  006684  EF26  F033         	goto	l3755
 10030  006688                     u3750:
 10031  006688  FFFF               	dw	65535	; assembler added errata NOP
 10032  00668A  5003               	movf	strlen@a^0,w,c
 10033  00668C  5C01               	subwf	strlen@s^0,w,c
 10034  00668E  6E01               	movwf	?_strlen^0,c
 10035  006690  5004               	movf	(strlen@a+1)^0,w,c
 10036  006692  5802               	subwfb	(strlen@s+1)^0,w,c
 10037  006694  6E02               	movwf	(?_strlen+1)^0,c
 10038  006696  0012               	return		;funcret
 10039  006698  FFFF               	dw	65535	; errata NOP
 10040  00669A                     __end_of_strlen:
 10041                           	callstack 0
 10042                           
 10043 ;; *************** function _fputs *****************
 10044 ;; Defined at:
 10045 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
 10046 ;; Parameters:    Size  Location     Type
 10047 ;;  s               2    9[COMRAM] PTR const unsigned char 
 10048 ;;		 -> dbuf(32), 
 10049 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 10050 ;;		 -> vsnprintf@f(6), 
 10051 ;; Auto vars:     Size  Location     Type
 10052 ;;  i               2   14[COMRAM] int 
 10053 ;;  c               1   13[COMRAM] unsigned char 
 10054 ;; Return value:  Size  Location     Type
 10055 ;;                  2    9[COMRAM] int 
 10056 ;; Registers used:
 10057 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10058 ;; Tracked objects:
 10059 ;;		On entry : 0/0
 10060 ;;		On exit  : 0/0
 10061 ;;		Unchanged: 0/0
 10062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10063 ;;      Params:         4       0       0       0       0       0       0
 10064 ;;      Locals:         3       0       0       0       0       0       0
 10065 ;;      Temps:          0       0       0       0       0       0       0
 10066 ;;      Totals:         7       0       0       0       0       0       0
 10067 ;;Total ram usage:        7 bytes
 10068 ;; Hardware stack levels used:    1
 10069 ;; Hardware stack levels required when called:    3
 10070 ;; This function calls:
 10071 ;;		_fputc
 10072 ;; This function is called by:
 10073 ;;		_pad
 10074 ;; This function uses a non-reentrant model
 10075 ;;
 10076                           
 10077                           	psect	text26
 10078  00659C                     __ptext26:
 10079                           	callstack 0
 10080  00659C                     _fputs:
 10081                           	callstack 0
 10082  00659C  FFFF               	dw	65535	; assembler added errata NOP
 10083  00659E  0E00               	movlw	0
 10084  0065A0  6E10               	movwf	(fputs@i+1)^0,c
 10085  0065A2  0E00               	movlw	0
 10086  0065A4  6E0F               	movwf	fputs@i^0,c
 10087  0065A6  EFE1  F032         	goto	l3751
 10088  0065AA                     l3747:
 10089  0065AA  FFFF               	dw	65535	; assembler added errata NOP
 10090  0065AC  C00E  F001         	movff	fputs@c,fputc@c
 10091  0065B0  6A02               	clrf	(fputc@c+1)^0,c
 10092  0065B2  C00C  F003         	movff	fputs@fp,fputc@fp
 10093  0065B6  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 10094  0065BA  ECCE  F037         	call	_fputc	;wreg free
 10095  0065BE  4A0F               	infsnz	fputs@i^0,f,c
 10096  0065C0  2A10               	incf	(fputs@i+1)^0,f,c
 10097  0065C2                     l3751:
 10098  0065C2  FFFF               	dw	65535	; assembler added errata NOP
 10099  0065C4  500F               	movf	fputs@i^0,w,c
 10100  0065C6  240A               	addwf	fputs@s^0,w,c
 10101  0065C8  6ED9               	movwf	fsr2l,c
 10102  0065CA  5010               	movf	(fputs@i+1)^0,w,c
 10103  0065CC  200B               	addwfc	(fputs@s+1)^0,w,c
 10104  0065CE  6EDA               	movwf	fsr2h,c
 10105  0065D0  50DF               	movf	indf2,w,c
 10106  0065D2  6E0E               	movwf	fputs@c^0,c
 10107  0065D4  500E               	movf	fputs@c^0,w,c
 10108  0065D6  A4D8               	btfss	status,2,c
 10109  0065D8  EFF0  F032         	goto	u3731
 10110  0065DC  EFF3  F032         	goto	u3730
 10111  0065E0                     u3731:
 10112  0065E0  FFFF               	dw	65535	; assembler added errata NOP
 10113  0065E2  EFD5  F032         	goto	l3747
 10114  0065E6                     u3730:
 10115  0065E6  FFFF               	dw	65535	; assembler added errata NOP
 10116  0065E8  0012               	return		;funcret
 10117  0065EA  FFFF               	dw	65535	; errata NOP
 10118  0065EC                     __end_of_fputs:
 10119                           	callstack 0
 10120                           
 10121 ;; *************** function _fputc *****************
 10122 ;; Defined at:
 10123 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
 10124 ;; Parameters:    Size  Location     Type
 10125 ;;  c               2    0[COMRAM] int 
 10126 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 10127 ;;		 -> vsnprintf@f(6), 
 10128 ;; Auto vars:     Size  Location     Type
 10129 ;;		None
 10130 ;; Return value:  Size  Location     Type
 10131 ;;                  2    0[COMRAM] int 
 10132 ;; Registers used:
 10133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10134 ;; Tracked objects:
 10135 ;;		On entry : 0/0
 10136 ;;		On exit  : 0/0
 10137 ;;		Unchanged: 0/0
 10138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10139 ;;      Params:         4       0       0       0       0       0       0
 10140 ;;      Locals:         0       0       0       0       0       0       0
 10141 ;;      Temps:          5       0       0       0       0       0       0
 10142 ;;      Totals:         9       0       0       0       0       0       0
 10143 ;;Total ram usage:        9 bytes
 10144 ;; Hardware stack levels used:    1
 10145 ;; Hardware stack levels required when called:    2
 10146 ;; This function calls:
 10147 ;;		_putch
 10148 ;; This function is called by:
 10149 ;;		_pad
 10150 ;;		_stoa
 10151 ;;		_vfpfcnvrt
 10152 ;;		_fputs
 10153 ;; This function uses a non-reentrant model
 10154 ;;
 10155                           
 10156                           	psect	text27
 10157  006F9C                     __ptext27:
 10158                           	callstack 0
 10159  006F9C                     _fputc:
 10160                           	callstack 0
 10161  006F9C  FFFF               	dw	65535	; assembler added errata NOP
 10162  006F9E  5003               	movf	fputc@fp^0,w,c
 10163  006FA0  1004               	iorwf	(fputc@fp+1)^0,w,c
 10164  006FA2  B4D8               	btfsc	status,2,c
 10165  006FA4  EFD6  F037         	goto	u3691
 10166  006FA8  EFD9  F037         	goto	u3690
 10167  006FAC                     u3691:
 10168  006FAC  FFFF               	dw	65535	; assembler added errata NOP
 10169  006FAE  EFE4  F037         	goto	l3735
 10170  006FB2                     u3690:
 10171  006FB2  FFFF               	dw	65535	; assembler added errata NOP
 10172  006FB4  5003               	movf	fputc@fp^0,w,c
 10173  006FB6  1004               	iorwf	(fputc@fp+1)^0,w,c
 10174  006FB8  A4D8               	btfss	status,2,c
 10175  006FBA  EFE1  F037         	goto	u3701
 10176  006FBE  EFE4  F037         	goto	u3700
 10177  006FC2                     u3701:
 10178  006FC2  FFFF               	dw	65535	; assembler added errata NOP
 10179  006FC4  EFEA  F037         	goto	l3737
 10180  006FC8                     u3700:
 10181  006FC8                     l3735:
 10182  006FC8  FFFF               	dw	65535	; assembler added errata NOP
 10183  006FCA  5001               	movf	fputc@c^0,w,c
 10184  006FCC  EC9E  F030         	call	_putch
 10185  006FD0  EF3C  F038         	goto	l1462
 10186  006FD4                     l3737:
 10187  006FD4  FFFF               	dw	65535	; assembler added errata NOP
 10188  006FD6  EE20 F004          	lfsr	2,4
 10189  006FDA  5003               	movf	fputc@fp^0,w,c
 10190  006FDC  26D9               	addwf	fsr2l,f,c
 10191  006FDE  5004               	movf	(fputc@fp+1)^0,w,c
 10192  006FE0  22DA               	addwfc	fsr2h,f,c
 10193  006FE2  50DE               	movf	postinc2,w,c
 10194  006FE4  10DE               	iorwf	postinc2,w,c
 10195  006FE6  B4D8               	btfsc	status,2,c
 10196  006FE8  EFF8  F037         	goto	u3711
 10197  006FEC  EFFB  F037         	goto	u3710
 10198  006FF0                     u3711:
 10199  006FF0  FFFF               	dw	65535	; assembler added errata NOP
 10200  006FF2  EF18  F038         	goto	l3741
 10201  006FF6                     u3710:
 10202  006FF6  FFFF               	dw	65535	; assembler added errata NOP
 10203  006FF8  EE20 F004          	lfsr	2,4
 10204  006FFC  5003               	movf	fputc@fp^0,w,c
 10205  006FFE  26D9               	addwf	fsr2l,f,c
 10206  007000  5004               	movf	(fputc@fp+1)^0,w,c
 10207  007002  22DA               	addwfc	fsr2h,f,c
 10208  007004  EE10 F002          	lfsr	1,2
 10209  007008  5003               	movf	fputc@fp^0,w,c
 10210  00700A  26E1               	addwf	fsr1l,f,c
 10211  00700C  5004               	movf	(fputc@fp+1)^0,w,c
 10212  00700E  22E2               	addwfc	fsr1h,f,c
 10213  007010  50DE               	movf	postinc2,w,c
 10214  007012  5CE6               	subwf	postinc1,w,c
 10215  007014  50E6               	movf	postinc1,w,c
 10216  007016  0A80               	xorlw	128
 10217  007018  6E09               	movwf	(??_fputc+4)^0,c
 10218  00701A  50DE               	movf	postinc2,w,c
 10219  00701C  0A80               	xorlw	128
 10220  00701E  5809               	subwfb	(??_fputc+4)^0,w,c
 10221  007020  B0D8               	btfsc	status,0,c
 10222  007022  EF15  F038         	goto	u3721
 10223  007026  EF18  F038         	goto	u3720
 10224  00702A                     u3721:
 10225  00702A  FFFF               	dw	65535	; assembler added errata NOP
 10226  00702C  EF3C  F038         	goto	l1462
 10227  007030                     u3720:
 10228  007030                     l3741:
 10229  007030  FFFF               	dw	65535	; assembler added errata NOP
 10230  007032  EE20 F002          	lfsr	2,2
 10231  007036  5003               	movf	fputc@fp^0,w,c
 10232  007038  26D9               	addwf	fsr2l,f,c
 10233  00703A  5004               	movf	(fputc@fp+1)^0,w,c
 10234  00703C  22DA               	addwfc	fsr2h,f,c
 10235  00703E  CFDE F005          	movff	postinc2,??_fputc
 10236  007042  CFDD F006          	movff	postdec2,??_fputc+1
 10237  007046  C003  FFD9         	movff	fputc@fp,fsr2l
 10238  00704A  C004  FFDA         	movff	fputc@fp+1,fsr2h
 10239  00704E  CFDE F007          	movff	postinc2,??_fputc+2
 10240  007052  CFDD F008          	movff	postdec2,??_fputc+3
 10241  007056  5005               	movf	??_fputc^0,w,c
 10242  007058  2407               	addwf	(??_fputc+2)^0,w,c
 10243  00705A  6ED9               	movwf	fsr2l,c
 10244  00705C  5006               	movf	(??_fputc+1)^0,w,c
 10245  00705E  2008               	addwfc	(??_fputc+3)^0,w,c
 10246  007060  6EDA               	movwf	fsr2h,c
 10247  007062  C001  FFDF         	movff	fputc@c,indf2
 10248  007066  EE20 F002          	lfsr	2,2
 10249  00706A  5003               	movf	fputc@fp^0,w,c
 10250  00706C  26D9               	addwf	fsr2l,f,c
 10251  00706E  5004               	movf	(fputc@fp+1)^0,w,c
 10252  007070  22DA               	addwfc	fsr2h,f,c
 10253  007072  2ADE               	incf	postinc2,f,c
 10254  007074  0E00               	movlw	0
 10255  007076  22DD               	addwfc	postdec2,f,c
 10256  007078                     l1462:
 10257  007078  FFFF               	dw	65535	; assembler added errata NOP
 10258  00707A  0012               	return		;funcret
 10259  00707C  FFFF               	dw	65535	; errata NOP
 10260  00707E                     __end_of_fputc:
 10261                           	callstack 0
 10262                           
 10263 ;; *************** function _putch *****************
 10264 ;; Defined at:
 10265 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
 10266 ;; Parameters:    Size  Location     Type
 10267 ;;  c               1    wreg     unsigned char 
 10268 ;; Auto vars:     Size  Location     Type
 10269 ;;  c               1    0[COMRAM] unsigned char 
 10270 ;; Return value:  Size  Location     Type
 10271 ;;                  1    wreg      void 
 10272 ;; Registers used:
 10273 ;;		wreg
 10274 ;; Tracked objects:
 10275 ;;		On entry : 0/0
 10276 ;;		On exit  : 0/0
 10277 ;;		Unchanged: 0/0
 10278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10279 ;;      Params:         0       0       0       0       0       0       0
 10280 ;;      Locals:         0       0       0       0       0       0       0
 10281 ;;      Temps:          0       0       0       0       0       0       0
 10282 ;;      Totals:         0       0       0       0       0       0       0
 10283 ;;Total ram usage:        0 bytes
 10284 ;; Hardware stack levels used:    1
 10285 ;; Hardware stack levels required when called:    1
 10286 ;; This function calls:
 10287 ;;		Nothing
 10288 ;; This function is called by:
 10289 ;;		_fputc
 10290 ;; This function uses a non-reentrant model
 10291 ;;
 10292                           
 10293                           	psect	text28
 10294  00613C                     __ptext28:
 10295                           	callstack 0
 10296  00613C                     _putch:
 10297                           	callstack 0
 10298  00613C  FFFF               	dw	65535	; assembler added errata NOP
 10299  00613E  0012               	return		;funcret
 10300  006140  FFFF               	dw	65535	; errata NOP
 10301  006142                     __end_of_putch:
 10302                           	callstack 0
 10303                           
 10304 ;; *************** function _atoi *****************
 10305 ;; Defined at:
 10306 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
 10307 ;; Parameters:    Size  Location     Type
 10308 ;;  s               2    7[COMRAM] PTR const unsigned char 
 10309 ;;		 -> STR_10(3), 
 10310 ;; Auto vars:     Size  Location     Type
 10311 ;;  n               2   20[COMRAM] int 
 10312 ;;  neg             2   13[COMRAM] int 
 10313 ;; Return value:  Size  Location     Type
 10314 ;;                  2    7[COMRAM] int 
 10315 ;; Registers used:
 10316 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10317 ;; Tracked objects:
 10318 ;;		On entry : 0/0
 10319 ;;		On exit  : 0/0
 10320 ;;		Unchanged: 0/0
 10321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10322 ;;      Params:         2       0       0       0       0       0       0
 10323 ;;      Locals:         9       0       0       0       0       0       0
 10324 ;;      Temps:          4       0       0       0       0       0       0
 10325 ;;      Totals:        15       0       0       0       0       0       0
 10326 ;;Total ram usage:       15 bytes
 10327 ;; Hardware stack levels used:    1
 10328 ;; Hardware stack levels required when called:    2
 10329 ;; This function calls:
 10330 ;;		___wmul
 10331 ;;		_isdigit
 10332 ;;		_isspace
 10333 ;; This function is called by:
 10334 ;;		_vfpfcnvrt
 10335 ;; This function uses a non-reentrant model
 10336 ;;
 10337                           
 10338                           	psect	text29
 10339  007C84                     __ptext29:
 10340                           	callstack 0
 10341  007C84                     _atoi:
 10342                           	callstack 0
 10343  007C84  FFFF               	dw	65535	; assembler added errata NOP
 10344  007C86  0E00               	movlw	0
 10345  007C88  6E16               	movwf	(atoi@n+1)^0,c
 10346  007C8A  0E00               	movlw	0
 10347  007C8C  6E15               	movwf	atoi@n^0,c
 10348  007C8E  0E00               	movlw	0
 10349  007C90  6E0F               	movwf	(atoi@neg+1)^0,c
 10350  007C92  0E00               	movlw	0
 10351  007C94  6E0E               	movwf	atoi@neg^0,c
 10352  007C96  EF50  F03E         	goto	l4223
 10353  007C9A                     l4221:
 10354  007C9A  FFFF               	dw	65535	; assembler added errata NOP
 10355  007C9C  4A08               	infsnz	atoi@s^0,f,c
 10356  007C9E  2A09               	incf	(atoi@s+1)^0,f,c
 10357  007CA0                     l4223:
 10358  007CA0  FFFF               	dw	65535	; assembler added errata NOP
 10359  007CA2  0E01               	movlw	1
 10360  007CA4  6E14               	movwf	_atoi$1843^0,c
 10361  007CA6  C008  FFF6         	movff	atoi@s,tblptrl
 10362  007CAA  C009  FFF7         	movff	atoi@s+1,tblptrh
 10363  007CAE                     	if	0	;tblptru may be non-zero
 10364  007CAE                     	endif
 10365  007CAE                     	if	0	;tblptru may be non-zero
 10366  007CAE                     	endif
 10367  007CAE  0008               	tblrd		*
 10368  007CB0  FFFF               	dw	65535	; errata NOP
 10369  007CB2  50F5               	movf	tablat,w,c
 10370  007CB4  0A20               	xorlw	32
 10371  007CB6  B4D8               	btfsc	status,2,c
 10372  007CB8  EF60  F03E         	goto	u4741
 10373  007CBC  EF63  F03E         	goto	u4740
 10374  007CC0                     u4741:
 10375  007CC0  FFFF               	dw	65535	; assembler added errata NOP
 10376  007CC2  EF84  F03E         	goto	l4231
 10377  007CC6                     u4740:
 10378  007CC6  FFFF               	dw	65535	; assembler added errata NOP
 10379  007CC8  0EF7               	movlw	247
 10380  007CCA  6E0A               	movwf	??_atoi^0,c
 10381  007CCC  0EFF               	movlw	255
 10382  007CCE  6E0B               	movwf	(??_atoi+1)^0,c
 10383  007CD0  C008  FFF6         	movff	atoi@s,tblptrl
 10384  007CD4  C009  FFF7         	movff	atoi@s+1,tblptrh
 10385  007CD8                     	if	0	;tblptru may be non-zero
 10386  007CD8                     	endif
 10387  007CD8                     	if	0	;tblptru may be non-zero
 10388  007CD8                     	endif
 10389  007CD8  0008               	tblrd		*
 10390  007CDA  FFFF               	dw	65535	; errata NOP
 10391  007CDC  50F5               	movf	tablat,w,c
 10392  007CDE  6E0C               	movwf	(??_atoi+2)^0,c
 10393  007CE0  6A0D               	clrf	(??_atoi+3)^0,c
 10394  007CE2  500A               	movf	??_atoi^0,w,c
 10395  007CE4  260C               	addwf	(??_atoi+2)^0,f,c
 10396  007CE6  500B               	movf	(??_atoi+1)^0,w,c
 10397  007CE8  220D               	addwfc	(??_atoi+3)^0,f,c
 10398  007CEA  500D               	movf	(??_atoi+3)^0,w,c
 10399  007CEC  E10A               	bnz	u4750
 10400  007CEE  0E05               	movlw	5
 10401  007CF0  5C0C               	subwf	(??_atoi+2)^0,w,c
 10402  007CF2  A0D8               	btfss	status,0,c
 10403  007CF4  EF7E  F03E         	goto	u4751
 10404  007CF8  EF81  F03E         	goto	u4750
 10405  007CFC                     u4751:
 10406  007CFC  FFFF               	dw	65535	; assembler added errata NOP
 10407  007CFE  EF84  F03E         	goto	l4231
 10408  007D02                     u4750:
 10409  007D02  FFFF               	dw	65535	; assembler added errata NOP
 10410  007D04  0E00               	movlw	0
 10411  007D06  6E14               	movwf	_atoi$1843^0,c
 10412  007D08                     l4231:
 10413  007D08  FFFF               	dw	65535	; assembler added errata NOP
 10414  007D0A  C014  F010         	movff	_atoi$1843,_atoi$1842
 10415  007D0E  6A11               	clrf	(_atoi$1842+1)^0,c
 10416  007D10  5010               	movf	_atoi$1842^0,w,c
 10417  007D12  1011               	iorwf	(_atoi$1842+1)^0,w,c
 10418  007D14  A4D8               	btfss	status,2,c
 10419  007D16  EF8F  F03E         	goto	u4761
 10420  007D1A  EF92  F03E         	goto	u4760
 10421  007D1E                     u4761:
 10422  007D1E  FFFF               	dw	65535	; assembler added errata NOP
 10423  007D20  EF4D  F03E         	goto	l4221
 10424  007D24                     u4760:
 10425  007D24  FFFF               	dw	65535	; assembler added errata NOP
 10426  007D26  EF9F  F03E         	goto	l4241
 10427  007D2A                     l4237:
 10428  007D2A  FFFF               	dw	65535	; assembler added errata NOP
 10429  007D2C  0E00               	movlw	0
 10430  007D2E  6E0F               	movwf	(atoi@neg+1)^0,c
 10431  007D30  0E01               	movlw	1
 10432  007D32  6E0E               	movwf	atoi@neg^0,c
 10433  007D34                     l4239:
 10434  007D34  FFFF               	dw	65535	; assembler added errata NOP
 10435  007D36  4A08               	infsnz	atoi@s^0,f,c
 10436  007D38  2A09               	incf	(atoi@s+1)^0,f,c
 10437  007D3A  EFD9  F03E         	goto	l4247
 10438  007D3E                     l4241:
 10439  007D3E  FFFF               	dw	65535	; assembler added errata NOP
 10440  007D40  C008  FFF6         	movff	atoi@s,tblptrl
 10441  007D44  C009  FFF7         	movff	atoi@s+1,tblptrh
 10442  007D48                     	if	0	;tblptru may be non-zero
 10443  007D48                     	endif
 10444  007D48                     	if	0	;tblptru may be non-zero
 10445  007D48                     	endif
 10446  007D48  0008               	tblrd		*
 10447  007D4A  FFFF               	dw	65535	; errata NOP
 10448  007D4C  50F5               	movf	tablat,w,c
 10449  007D4E  6E0A               	movwf	??_atoi^0,c
 10450  007D50  6A0B               	clrf	(??_atoi+1)^0,c
 10451                           
 10452                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10453                           ; Switch size 1, requested type "simple"
 10454                           ; Number of cases is 1, Range of values is 0 to 0
 10455                           ; switch strategies available:
 10456                           ; Name         Instructions Cycles
 10457                           ; simple_byte            4     3 (average)
 10458                           ;	Chosen strategy is simple_byte
 10459  007D52  500B               	movf	(??_atoi+1)^0,w,c
 10460  007D54  0A00               	xorlw	0	; case 0
 10461  007D56  B4D8               	btfsc	status,2,c
 10462  007D58  EFB0  F03E         	goto	l5971
 10463  007D5C  EFD9  F03E         	goto	l4247
 10464  007D60                     l5971:
 10465  007D60  FFFF               	dw	65535	; assembler added errata NOP
 10466                           
 10467                           ; Switch size 1, requested type "simple"
 10468                           ; Number of cases is 2, Range of values is 43 to 45
 10469                           ; switch strategies available:
 10470                           ; Name         Instructions Cycles
 10471                           ; simple_byte            7     4 (average)
 10472                           ;	Chosen strategy is simple_byte
 10473  007D62  500A               	movf	??_atoi^0,w,c
 10474  007D64  0A2B               	xorlw	43	; case 43
 10475  007D66  B4D8               	btfsc	status,2,c
 10476  007D68  EF9A  F03E         	goto	l4239
 10477  007D6C  0A06               	xorlw	6	; case 45
 10478  007D6E  B4D8               	btfsc	status,2,c
 10479  007D70  EF95  F03E         	goto	l4237
 10480  007D74  EFD9  F03E         	goto	l4247
 10481  007D78                     l4243:
 10482  007D78  FFFF               	dw	65535	; assembler added errata NOP
 10483  007D7A  C015  F001         	movff	atoi@n,___wmul@multiplier
 10484  007D7E  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 10485  007D82  0E00               	movlw	0
 10486  007D84  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10487  007D86  0E0A               	movlw	10
 10488  007D88  6E03               	movwf	___wmul@multiplicand^0,c
 10489  007D8A  EC5B  F031         	call	___wmul	;wreg free
 10490  007D8E  C008  FFF6         	movff	atoi@s,tblptrl
 10491  007D92  C009  FFF7         	movff	atoi@s+1,tblptrh
 10492  007D96                     	if	0	;tblptru may be non-zero
 10493  007D96                     	endif
 10494  007D96                     	if	0	;tblptru may be non-zero
 10495  007D96                     	endif
 10496  007D96  0008               	tblrd		*
 10497  007D98  FFFF               	dw	65535	; errata NOP
 10498  007D9A  50F5               	movf	tablat,w,c
 10499  007D9C  5E01               	subwf	?___wmul^0,f,c
 10500  007D9E  0E00               	movlw	0
 10501  007DA0  5A02               	subwfb	(?___wmul+1)^0,f,c
 10502  007DA2  0E30               	movlw	48
 10503  007DA4  2401               	addwf	?___wmul^0,w,c
 10504  007DA6  6E15               	movwf	atoi@n^0,c
 10505  007DA8  0E00               	movlw	0
 10506  007DAA  2002               	addwfc	(?___wmul+1)^0,w,c
 10507  007DAC  6E16               	movwf	(atoi@n+1)^0,c
 10508  007DAE  EF9A  F03E         	goto	l4239
 10509  007DB2                     l4247:
 10510  007DB2  FFFF               	dw	65535	; assembler added errata NOP
 10511  007DB4  0ED0               	movlw	208
 10512  007DB6  6E0A               	movwf	??_atoi^0,c
 10513  007DB8  0EFF               	movlw	255
 10514  007DBA  6E0B               	movwf	(??_atoi+1)^0,c
 10515  007DBC  C008  FFF6         	movff	atoi@s,tblptrl
 10516  007DC0  C009  FFF7         	movff	atoi@s+1,tblptrh
 10517  007DC4                     	if	0	;tblptru may be non-zero
 10518  007DC4                     	endif
 10519  007DC4                     	if	0	;tblptru may be non-zero
 10520  007DC4                     	endif
 10521  007DC4  0008               	tblrd		*
 10522  007DC6  FFFF               	dw	65535	; errata NOP
 10523  007DC8  50F5               	movf	tablat,w,c
 10524  007DCA  6E0C               	movwf	(??_atoi+2)^0,c
 10525  007DCC  6A0D               	clrf	(??_atoi+3)^0,c
 10526  007DCE  500A               	movf	??_atoi^0,w,c
 10527  007DD0  260C               	addwf	(??_atoi+2)^0,f,c
 10528  007DD2  500B               	movf	(??_atoi+1)^0,w,c
 10529  007DD4  220D               	addwfc	(??_atoi+3)^0,f,c
 10530  007DD6  500D               	movf	(??_atoi+3)^0,w,c
 10531  007DD8  E10B               	bnz	u4770
 10532  007DDA  0E0A               	movlw	10
 10533  007DDC  5C0C               	subwf	(??_atoi+2)^0,w,c
 10534  007DDE  A0D8               	btfss	status,0,c
 10535  007DE0  EFF4  F03E         	goto	u4771
 10536  007DE4  EFF8  F03E         	goto	u4770
 10537  007DE8                     u4771:
 10538  007DE8  FFFF               	dw	65535	; assembler added errata NOP
 10539  007DEA  0E01               	movlw	1
 10540  007DEC  EFFA  F03E         	goto	u4780
 10541  007DF0                     u4770:
 10542  007DF0  FFFF               	dw	65535	; assembler added errata NOP
 10543  007DF2  0E00               	movlw	0
 10544  007DF4                     u4780:
 10545  007DF4  FFFF               	dw	65535	; assembler added errata NOP
 10546  007DF6  6E12               	movwf	_atoi$1844^0,c
 10547  007DF8  6A13               	clrf	(_atoi$1844+1)^0,c
 10548  007DFA  5012               	movf	_atoi$1844^0,w,c
 10549  007DFC  1013               	iorwf	(_atoi$1844+1)^0,w,c
 10550  007DFE  A4D8               	btfss	status,2,c
 10551  007E00  EF04  F03F         	goto	u4791
 10552  007E04  EF07  F03F         	goto	u4790
 10553  007E08                     u4791:
 10554  007E08  FFFF               	dw	65535	; assembler added errata NOP
 10555  007E0A  EFBC  F03E         	goto	l4243
 10556  007E0E                     u4790:
 10557  007E0E  FFFF               	dw	65535	; assembler added errata NOP
 10558  007E10  500E               	movf	atoi@neg^0,w,c
 10559  007E12  100F               	iorwf	(atoi@neg+1)^0,w,c
 10560  007E14  A4D8               	btfss	status,2,c
 10561  007E16  EF0F  F03F         	goto	u4801
 10562  007E1A  EF12  F03F         	goto	u4800
 10563  007E1E                     u4801:
 10564  007E1E  FFFF               	dw	65535	; assembler added errata NOP
 10565  007E20  EF21  F03F         	goto	l1419
 10566  007E24                     u4800:
 10567  007E24  FFFF               	dw	65535	; assembler added errata NOP
 10568  007E26  C015  F00A         	movff	atoi@n,??_atoi
 10569  007E2A  C016  F00B         	movff	atoi@n+1,??_atoi+1
 10570  007E2E  1E0A               	comf	??_atoi^0,f,c
 10571  007E30  1E0B               	comf	(??_atoi+1)^0,f,c
 10572  007E32  4A0A               	infsnz	??_atoi^0,f,c
 10573  007E34  2A0B               	incf	(??_atoi+1)^0,f,c
 10574  007E36  C00A  F008         	movff	??_atoi,?_atoi
 10575  007E3A  C00B  F009         	movff	??_atoi+1,?_atoi+1
 10576  007E3E  EF26  F03F         	goto	l1422
 10577  007E42                     l1419:
 10578  007E42  FFFF               	dw	65535	; assembler added errata NOP
 10579  007E44  C015  F008         	movff	atoi@n,?_atoi
 10580  007E48  C016  F009         	movff	atoi@n+1,?_atoi+1
 10581  007E4C                     l1422:
 10582  007E4C  FFFF               	dw	65535	; assembler added errata NOP
 10583  007E4E  0012               	return		;funcret
 10584  007E50  FFFF               	dw	65535	; errata NOP
 10585  007E52                     __end_of_atoi:
 10586                           	callstack 0
 10587                           
 10588 ;; *************** function _isspace *****************
 10589 ;; Defined at:
 10590 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
 10591 ;; Parameters:    Size  Location     Type
 10592 ;;  c               2    0[COMRAM] int 
 10593 ;; Auto vars:     Size  Location     Type
 10594 ;;		None
 10595 ;; Return value:  Size  Location     Type
 10596 ;;                  2    0[COMRAM] int 
 10597 ;; Registers used:
 10598 ;;		wreg, status,2, status,0
 10599 ;; Tracked objects:
 10600 ;;		On entry : 0/0
 10601 ;;		On exit  : 0/0
 10602 ;;		Unchanged: 0/0
 10603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10604 ;;      Params:         2       0       0       0       0       0       0
 10605 ;;      Locals:         1       0       0       0       0       0       0
 10606 ;;      Temps:          4       0       0       0       0       0       0
 10607 ;;      Totals:         7       0       0       0       0       0       0
 10608 ;;Total ram usage:        7 bytes
 10609 ;; Hardware stack levels used:    1
 10610 ;; Hardware stack levels required when called:    1
 10611 ;; This function calls:
 10612 ;;		Nothing
 10613 ;; This function is called by:
 10614 ;;		_atoi
 10615 ;; This function uses a non-reentrant model
 10616 ;;
 10617                           
 10618                           	psect	text30
 10619  00669A                     __ptext30:
 10620                           	callstack 0
 10621  00669A                     _isspace:
 10622                           	callstack 24
 10623  00669A  FFFF               	dw	65535	; assembler added errata NOP
 10624  00669C  0E01               	movlw	1
 10625  00669E  6E07               	movwf	_isspace$1870^0,c
 10626  0066A0  0E20               	movlw	32
 10627  0066A2  1801               	xorwf	isspace@c^0,w,c
 10628  0066A4  1002               	iorwf	(isspace@c+1)^0,w,c
 10629  0066A6  B4D8               	btfsc	status,2,c
 10630  0066A8  EF58  F033         	goto	u4121
 10631  0066AC  EF5B  F033         	goto	u4120
 10632  0066B0                     u4121:
 10633  0066B0  FFFF               	dw	65535	; assembler added errata NOP
 10634  0066B2  EF77  F033         	goto	l3947
 10635  0066B6                     u4120:
 10636  0066B6  FFFF               	dw	65535	; assembler added errata NOP
 10637  0066B8  0EF7               	movlw	247
 10638  0066BA  6E03               	movwf	??_isspace^0,c
 10639  0066BC  0EFF               	movlw	255
 10640  0066BE  6E04               	movwf	(??_isspace+1)^0,c
 10641  0066C0  C001  F005         	movff	isspace@c,??_isspace+2
 10642  0066C4  C002  F006         	movff	isspace@c+1,??_isspace+3
 10643  0066C8  5003               	movf	??_isspace^0,w,c
 10644  0066CA  2605               	addwf	(??_isspace+2)^0,f,c
 10645  0066CC  5004               	movf	(??_isspace+1)^0,w,c
 10646  0066CE  2206               	addwfc	(??_isspace+3)^0,f,c
 10647  0066D0  5006               	movf	(??_isspace+3)^0,w,c
 10648  0066D2  E10A               	bnz	u4130
 10649  0066D4  0E05               	movlw	5
 10650  0066D6  5C05               	subwf	(??_isspace+2)^0,w,c
 10651  0066D8  A0D8               	btfss	status,0,c
 10652  0066DA  EF71  F033         	goto	u4131
 10653  0066DE  EF74  F033         	goto	u4130
 10654  0066E2                     u4131:
 10655  0066E2  FFFF               	dw	65535	; assembler added errata NOP
 10656  0066E4  EF77  F033         	goto	l3947
 10657  0066E8                     u4130:
 10658  0066E8  FFFF               	dw	65535	; assembler added errata NOP
 10659  0066EA  0E00               	movlw	0
 10660  0066EC  6E07               	movwf	_isspace$1870^0,c
 10661  0066EE                     l3947:
 10662  0066EE  FFFF               	dw	65535	; assembler added errata NOP
 10663  0066F0  C007  F001         	movff	_isspace$1870,?_isspace
 10664  0066F4  6A02               	clrf	(?_isspace+1)^0,c
 10665  0066F6  0012               	return		;funcret
 10666  0066F8  FFFF               	dw	65535	; errata NOP
 10667  0066FA                     __end_of_isspace:
 10668                           	callstack 0
 10669                           
 10670 ;; *************** function _isdigit *****************
 10671 ;; Defined at:
 10672 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 10673 ;; Parameters:    Size  Location     Type
 10674 ;;  c               2    0[COMRAM] int 
 10675 ;; Auto vars:     Size  Location     Type
 10676 ;;		None
 10677 ;; Return value:  Size  Location     Type
 10678 ;;                  2    0[COMRAM] int 
 10679 ;; Registers used:
 10680 ;;		wreg, status,2, status,0
 10681 ;; Tracked objects:
 10682 ;;		On entry : 0/0
 10683 ;;		On exit  : 0/0
 10684 ;;		Unchanged: 0/0
 10685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10686 ;;      Params:         2       0       0       0       0       0       0
 10687 ;;      Locals:         0       0       0       0       0       0       0
 10688 ;;      Temps:          4       0       0       0       0       0       0
 10689 ;;      Totals:         6       0       0       0       0       0       0
 10690 ;;Total ram usage:        6 bytes
 10691 ;; Hardware stack levels used:    1
 10692 ;; Hardware stack levels required when called:    1
 10693 ;; This function calls:
 10694 ;;		Nothing
 10695 ;; This function is called by:
 10696 ;;		_vfpfcnvrt
 10697 ;;		_atoi
 10698 ;; This function uses a non-reentrant model
 10699 ;;
 10700                           
 10701                           	psect	text31
 10702  0063FA                     __ptext31:
 10703                           	callstack 0
 10704  0063FA                     _isdigit:
 10705                           	callstack 25
 10706  0063FA  FFFF               	dw	65535	; assembler added errata NOP
 10707  0063FC  0ED0               	movlw	208
 10708  0063FE  6E03               	movwf	??_isdigit^0,c
 10709  006400  0EFF               	movlw	255
 10710  006402  6E04               	movwf	(??_isdigit+1)^0,c
 10711  006404  C001  F005         	movff	isdigit@c,??_isdigit+2
 10712  006408  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 10713  00640C  5003               	movf	??_isdigit^0,w,c
 10714  00640E  2605               	addwf	(??_isdigit+2)^0,f,c
 10715  006410  5004               	movf	(??_isdigit+1)^0,w,c
 10716  006412  2206               	addwfc	(??_isdigit+3)^0,f,c
 10717  006414  5006               	movf	(??_isdigit+3)^0,w,c
 10718  006416  E10B               	bnz	u4100
 10719  006418  0E0A               	movlw	10
 10720  00641A  5C05               	subwf	(??_isdigit+2)^0,w,c
 10721  00641C  A0D8               	btfss	status,0,c
 10722  00641E  EF13  F032         	goto	u4101
 10723  006422  EF17  F032         	goto	u4100
 10724  006426                     u4101:
 10725  006426  FFFF               	dw	65535	; assembler added errata NOP
 10726  006428  0E01               	movlw	1
 10727  00642A  EF19  F032         	goto	u4110
 10728  00642E                     u4100:
 10729  00642E  FFFF               	dw	65535	; assembler added errata NOP
 10730  006430  0E00               	movlw	0
 10731  006432                     u4110:
 10732  006432  FFFF               	dw	65535	; assembler added errata NOP
 10733  006434  6E01               	movwf	?_isdigit^0,c
 10734  006436  6A02               	clrf	(?_isdigit+1)^0,c
 10735  006438  0012               	return		;funcret
 10736  00643A  FFFF               	dw	65535	; errata NOP
 10737  00643C                     __end_of_isdigit:
 10738                           	callstack 0
 10739                           
 10740 ;; *************** function ___wmul *****************
 10741 ;; Defined at:
 10742 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 10743 ;; Parameters:    Size  Location     Type
 10744 ;;  multiplier      2    0[COMRAM] unsigned int 
 10745 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10746 ;; Auto vars:     Size  Location     Type
 10747 ;;  product         2    4[COMRAM] unsigned int 
 10748 ;; Return value:  Size  Location     Type
 10749 ;;                  2    0[COMRAM] unsigned int 
 10750 ;; Registers used:
 10751 ;;		wreg, status,2, status,0, prodl, prodh
 10752 ;; Tracked objects:
 10753 ;;		On entry : 0/0
 10754 ;;		On exit  : 0/0
 10755 ;;		Unchanged: 0/0
 10756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10757 ;;      Params:         4       0       0       0       0       0       0
 10758 ;;      Locals:         2       0       0       0       0       0       0
 10759 ;;      Temps:          0       0       0       0       0       0       0
 10760 ;;      Totals:         6       0       0       0       0       0       0
 10761 ;;Total ram usage:        6 bytes
 10762 ;; Hardware stack levels used:    1
 10763 ;; Hardware stack levels required when called:    1
 10764 ;; This function calls:
 10765 ;;		Nothing
 10766 ;; This function is called by:
 10767 ;;		_main
 10768 ;;		_atoi
 10769 ;; This function uses a non-reentrant model
 10770 ;;
 10771                           
 10772                           	psect	text32
 10773  0062B6                     __ptext32:
 10774                           	callstack 0
 10775  0062B6                     ___wmul:
 10776                           	callstack 0
 10777  0062B6  FFFF               	dw	65535	; assembler added errata NOP
 10778  0062B8  5001               	movf	___wmul@multiplier^0,w,c
 10779  0062BA  0203               	mulwf	___wmul@multiplicand^0,c
 10780  0062BC  CFF3 F005          	movff	prodl,___wmul@product
 10781  0062C0  CFF4 F006          	movff	prodh,___wmul@product+1
 10782  0062C4  5001               	movf	___wmul@multiplier^0,w,c
 10783  0062C6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10784  0062C8  50F3               	movf	243,w,c
 10785  0062CA  2606               	addwf	(___wmul@product+1)^0,f,c
 10786  0062CC  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10787  0062CE  0203               	mulwf	___wmul@multiplicand^0,c
 10788  0062D0  50F3               	movf	243,w,c
 10789  0062D2  2606               	addwf	(___wmul@product+1)^0,f,c
 10790  0062D4  C005  F001         	movff	___wmul@product,?___wmul
 10791  0062D8  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10792  0062DC  0012               	return		;funcret
 10793  0062DE  FFFF               	dw	65535	; errata NOP
 10794  0062E0                     __end_of___wmul:
 10795                           	callstack 0
 10796                           
 10797 ;; *************** function _serial_tx_char *****************
 10798 ;; Defined at:
 10799 ;;		line 39 in file "serial_rs232.c"
 10800 ;; Parameters:    Size  Location     Type
 10801 ;;  val             1    wreg     unsigned char 
 10802 ;; Auto vars:     Size  Location     Type
 10803 ;;  val             1    0[COMRAM] unsigned char 
 10804 ;; Return value:  Size  Location     Type
 10805 ;;                  1    wreg      void 
 10806 ;; Registers used:
 10807 ;;		wreg
 10808 ;; Tracked objects:
 10809 ;;		On entry : 0/0
 10810 ;;		On exit  : 0/0
 10811 ;;		Unchanged: 0/0
 10812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10813 ;;      Params:         0       0       0       0       0       0       0
 10814 ;;      Locals:         1       0       0       0       0       0       0
 10815 ;;      Temps:          0       0       0       0       0       0       0
 10816 ;;      Totals:         1       0       0       0       0       0       0
 10817 ;;Total ram usage:        1 bytes
 10818 ;; Hardware stack levels used:    1
 10819 ;; Hardware stack levels required when called:    1
 10820 ;; This function calls:
 10821 ;;		Nothing
 10822 ;; This function is called by:
 10823 ;;		_main
 10824 ;;		_serial_tx_string
 10825 ;; This function uses a non-reentrant model
 10826 ;;
 10827                           
 10828                           	psect	text33
 10829  0061D4                     __ptext33:
 10830                           	callstack 0
 10831  0061D4                     _serial_tx_char:
 10832                           	callstack 0
 10833  0061D4  FFFF               	dw	65535	; assembler added errata NOP
 10834                           
 10835                           ;incstack = 0
 10836                           ;serial_tx_char@val stored from wreg
 10837  0061D6  6E01               	movwf	serial_tx_char@val^0,c
 10838  0061D8                     
 10839                           ;serial_rs232.c: 40:     TXREG = val;
 10840  0061D8  C001  FFAD         	movff	serial_tx_char@val,4013	;volatile
 10841  0061DC                     l24:
 10842  0061DC  FFFF               	dw	65535	; assembler added errata NOP
 10843  0061DE  A2AC               	btfss	172,1,c	;volatile
 10844  0061E0  EFF4  F030         	goto	u6651
 10845  0061E4  EFF7  F030         	goto	u6650
 10846  0061E8                     u6651:
 10847  0061E8  FFFF               	dw	65535	; assembler added errata NOP
 10848  0061EA  EFEE  F030         	goto	l24
 10849  0061EE                     u6650:
 10850  0061EE  FFFF               	dw	65535	; assembler added errata NOP
 10851  0061F0  0012               	return		;funcret
 10852  0061F2  FFFF               	dw	65535	; errata NOP
 10853  0061F4                     __end_of_serial_tx_char:
 10854                           	callstack 0
 10855                           
 10856 ;; *************** function _reach_goal *****************
 10857 ;; Defined at:
 10858 ;;		line 30 in file "stepper_motor.c"
 10859 ;; Parameters:    Size  Location     Type
 10860 ;;  stepper_moto    2    8[COMRAM] PTR struct .
 10861 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
 10862 ;;  goal_to_reac    2   10[COMRAM] int 
 10863 ;; Auto vars:     Size  Location     Type
 10864 ;;		None
 10865 ;; Return value:  Size  Location     Type
 10866 ;;                  2    8[COMRAM] int 
 10867 ;; Registers used:
 10868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10869 ;; Tracked objects:
 10870 ;;		On entry : 0/0
 10871 ;;		On exit  : 0/0
 10872 ;;		Unchanged: 0/0
 10873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10874 ;;      Params:         4       0       0       0       0       0       0
 10875 ;;      Locals:         0       0       0       0       0       0       0
 10876 ;;      Temps:          3       0       0       0       0       0       0
 10877 ;;      Totals:         7       0       0       0       0       0       0
 10878 ;;Total ram usage:        7 bytes
 10879 ;; Hardware stack levels used:    1
 10880 ;; Hardware stack levels required when called:    2
 10881 ;; This function calls:
 10882 ;;		_turn_on_current_coil
 10883 ;;		_update_current_coil
 10884 ;; This function is called by:
 10885 ;;		_main
 10886 ;; This function uses a non-reentrant model
 10887 ;;
 10888                           
 10889                           	psect	text34
 10890  00691E                     __ptext34:
 10891                           	callstack 0
 10892  00691E                     _reach_goal:
 10893                           	callstack 0
 10894  00691E  FFFF               	dw	65535	; assembler added errata NOP
 10895  006920                     
 10896                           ;stepper_motor.c: 31:     if(stepper_motor -> step_counter >= goal_to_reach){
 10897  006920  EE20 F002          	lfsr	2,2
 10898  006924  5009               	movf	reach_goal@stepper_motor^0,w,c
 10899  006926  26D9               	addwf	fsr2l,f,c
 10900  006928  500A               	movf	(reach_goal@stepper_motor+1)^0,w,c
 10901  00692A  22DA               	addwfc	fsr2h,f,c
 10902  00692C  500B               	movf	reach_goal@goal_to_reach^0,w,c
 10903  00692E  5CDE               	subwf	postinc2,w,c
 10904  006930  50DE               	movf	postinc2,w,c
 10905  006932  0A80               	xorlw	128
 10906  006934  6E0F               	movwf	(??_reach_goal+2)^0,c
 10907  006936  500C               	movf	(reach_goal@goal_to_reach+1)^0,w,c
 10908  006938  0A80               	xorlw	128
 10909  00693A  580F               	subwfb	(??_reach_goal+2)^0,w,c
 10910  00693C  A0D8               	btfss	status,0,c
 10911  00693E  EFA3  F034         	goto	u6851
 10912  006942  EFA6  F034         	goto	u6850
 10913  006946                     u6851:
 10914  006946  FFFF               	dw	65535	; assembler added errata NOP
 10915  006948  EFB7  F034         	goto	l5637
 10916  00694C                     u6850:
 10917  00694C  FFFF               	dw	65535	; assembler added errata NOP
 10918  00694E                     
 10919                           ;stepper_motor.c: 32:         stepper_motor -> step_counter = 0;
 10920  00694E  EE20 F002          	lfsr	2,2
 10921  006952  5009               	movf	reach_goal@stepper_motor^0,w,c
 10922  006954  26D9               	addwf	fsr2l,f,c
 10923  006956  500A               	movf	(reach_goal@stepper_motor+1)^0,w,c
 10924  006958  22DA               	addwfc	fsr2h,f,c
 10925  00695A  0E00               	movlw	0
 10926  00695C  6EDE               	movwf	postinc2,c
 10927  00695E  0E00               	movlw	0
 10928  006960  6EDD               	movwf	postdec2,c
 10929  006962                     
 10930                           ;stepper_motor.c: 33:         return 1;
 10931  006962  0E00               	movlw	0
 10932  006964  6E0A               	movwf	(?_reach_goal+1)^0,c
 10933  006966  0E01               	movlw	1
 10934  006968  6E09               	movwf	?_reach_goal^0,c
 10935  00696A  EFC8  F034         	goto	l380
 10936  00696E                     l5637:
 10937  00696E  FFFF               	dw	65535	; assembler added errata NOP
 10938                           
 10939                           ;stepper_motor.c: 35:         turn_on_current_coil(stepper_motor);
 10940  006970  C009  F001         	movff	reach_goal@stepper_motor,turn_on_current_coil@stepper_motor
 10941  006974  C00A  F002         	movff	reach_goal@stepper_motor+1,turn_on_current_coil@stepper_motor+1
 10942  006978  ECF6  F032         	call	_turn_on_current_coil	;wreg free
 10943  00697C                     
 10944                           ;stepper_motor.c: 36:         update_current_coil(stepper_motor);
 10945  00697C  C009  F001         	movff	reach_goal@stepper_motor,update_current_coil@stepper_motor
 10946  006980  C00A  F002         	movff	reach_goal@stepper_motor+1,update_current_coil@stepper_motor+1
 10947  006984  ECF2  F036         	call	_update_current_coil	;wreg free
 10948  006988                     
 10949                           ;stepper_motor.c: 37:         return 0;
 10950  006988  0E00               	movlw	0
 10951  00698A  6E0A               	movwf	(?_reach_goal+1)^0,c
 10952  00698C  0E00               	movlw	0
 10953  00698E  6E09               	movwf	?_reach_goal^0,c
 10954  006990                     l380:
 10955  006990  FFFF               	dw	65535	; assembler added errata NOP
 10956  006992  0012               	return		;funcret
 10957  006994  FFFF               	dw	65535	; errata NOP
 10958  006996                     __end_of_reach_goal:
 10959                           	callstack 0
 10960                           
 10961 ;; *************** function _update_current_coil *****************
 10962 ;; Defined at:
 10963 ;;		line 19 in file "stepper_motor.c"
 10964 ;; Parameters:    Size  Location     Type
 10965 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 10966 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
 10967 ;; Auto vars:     Size  Location     Type
 10968 ;;		None
 10969 ;; Return value:  Size  Location     Type
 10970 ;;                  1    wreg      void 
 10971 ;; Registers used:
 10972 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10973 ;; Tracked objects:
 10974 ;;		On entry : 0/0
 10975 ;;		On exit  : 0/0
 10976 ;;		Unchanged: 0/0
 10977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10978 ;;      Params:         2       0       0       0       0       0       0
 10979 ;;      Locals:         0       0       0       0       0       0       0
 10980 ;;      Temps:          4       0       0       0       0       0       0
 10981 ;;      Totals:         6       0       0       0       0       0       0
 10982 ;;Total ram usage:        6 bytes
 10983 ;; Hardware stack levels used:    1
 10984 ;; Hardware stack levels required when called:    1
 10985 ;; This function calls:
 10986 ;;		Nothing
 10987 ;; This function is called by:
 10988 ;;		_reach_goal
 10989 ;; This function uses a non-reentrant model
 10990 ;;
 10991                           
 10992                           	psect	text35
 10993  006DE4                     __ptext35:
 10994                           	callstack 0
 10995  006DE4                     _update_current_coil:
 10996                           	callstack 0
 10997  006DE4  FFFF               	dw	65535	; assembler added errata NOP
 10998  006DE6                     
 10999                           ;stepper_motor.c: 20:     stepper_motor -> current_coil = stepper_motor -> current_coil 
      +                          + stepper_motor -> direction;
 11000  006DE6  EE20 F004          	lfsr	2,4
 11001  006DEA  5001               	movf	update_current_coil@stepper_motor^0,w,c
 11002  006DEC  26D9               	addwf	fsr2l,f,c
 11003  006DEE  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
 11004  006DF0  22DA               	addwfc	fsr2h,f,c
 11005  006DF2  CFDE F003          	movff	postinc2,??_update_current_coil
 11006  006DF6  CFDD F004          	movff	postdec2,??_update_current_coil+1
 11007  006DFA  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 11008  006DFE  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 11009  006E02  CFDE F005          	movff	postinc2,??_update_current_coil+2
 11010  006E06  CFDD F006          	movff	postdec2,??_update_current_coil+3
 11011  006E0A  5003               	movf	??_update_current_coil^0,w,c
 11012  006E0C  2605               	addwf	(??_update_current_coil+2)^0,f,c
 11013  006E0E  5004               	movf	(??_update_current_coil+1)^0,w,c
 11014  006E10  2206               	addwfc	(??_update_current_coil+3)^0,f,c
 11015  006E12  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 11016  006E16  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 11017  006E1A  C005  FFDE         	movff	??_update_current_coil+2,postinc2
 11018  006E1E  C006  FFDD         	movff	??_update_current_coil+3,postdec2
 11019                           
 11020                           ;stepper_motor.c: 21:     stepper_motor -> step_counter = stepper_motor -> step_counter 
      +                          + 1;
 11021  006E22  EE20 F002          	lfsr	2,2
 11022  006E26  5001               	movf	update_current_coil@stepper_motor^0,w,c
 11023  006E28  26D9               	addwf	fsr2l,f,c
 11024  006E2A  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
 11025  006E2C  22DA               	addwfc	fsr2h,f,c
 11026  006E2E  CFDE F003          	movff	postinc2,??_update_current_coil
 11027  006E32  CFDD F004          	movff	postdec2,??_update_current_coil+1
 11028  006E36  0E01               	movlw	1
 11029  006E38  2603               	addwf	??_update_current_coil^0,f,c
 11030  006E3A  0E00               	movlw	0
 11031  006E3C  2204               	addwfc	(??_update_current_coil+1)^0,f,c
 11032  006E3E  EE20 F002          	lfsr	2,2
 11033  006E42  5001               	movf	update_current_coil@stepper_motor^0,w,c
 11034  006E44  26D9               	addwf	fsr2l,f,c
 11035  006E46  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
 11036  006E48  22DA               	addwfc	fsr2h,f,c
 11037  006E4A  C003  FFDE         	movff	??_update_current_coil,postinc2
 11038  006E4E  C004  FFDD         	movff	??_update_current_coil+1,postdec2
 11039                           
 11040                           ;stepper_motor.c: 22:     if (stepper_motor -> current_coil == -1) {
 11041  006E52  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 11042  006E56  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 11043  006E5A  28DE               	incf	postinc2,w,c
 11044  006E5C  E106               	bnz	u6521
 11045  006E5E  28DE               	incf	postinc2,w,c
 11046  006E60  A4D8               	btfss	status,2,c
 11047  006E62  EF35  F037         	goto	u6521
 11048  006E66  EF38  F037         	goto	u6520
 11049  006E6A                     u6521:
 11050  006E6A  FFFF               	dw	65535	; assembler added errata NOP
 11051  006E6C  EF43  F037         	goto	l5313
 11052  006E70                     u6520:
 11053  006E70  FFFF               	dw	65535	; assembler added errata NOP
 11054  006E72                     
 11055                           ;stepper_motor.c: 23:         stepper_motor -> current_coil = 3;
 11056  006E72  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 11057  006E76  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 11058  006E7A  0E03               	movlw	3
 11059  006E7C  6EDE               	movwf	postinc2,c
 11060  006E7E  0E00               	movlw	0
 11061  006E80  6EDD               	movwf	postdec2,c
 11062                           
 11063                           ;stepper_motor.c: 24:     } else if(stepper_motor -> current_coil == 4) {
 11064  006E82  EF5C  F037         	goto	l376
 11065  006E86                     l5313:
 11066  006E86  FFFF               	dw	65535	; assembler added errata NOP
 11067  006E88  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 11068  006E8C  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 11069  006E90  0E04               	movlw	4
 11070  006E92  18DE               	xorwf	postinc2,w,c
 11071  006E94  10DE               	iorwf	postinc2,w,c
 11072  006E96  A4D8               	btfss	status,2,c
 11073  006E98  EF50  F037         	goto	u6531
 11074  006E9C  EF53  F037         	goto	u6530
 11075  006EA0                     u6531:
 11076  006EA0  FFFF               	dw	65535	; assembler added errata NOP
 11077  006EA2  EF5C  F037         	goto	l376
 11078  006EA6                     u6530:
 11079  006EA6  FFFF               	dw	65535	; assembler added errata NOP
 11080  006EA8                     
 11081                           ;stepper_motor.c: 25:         stepper_motor -> current_coil = 0;
 11082  006EA8  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 11083  006EAC  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 11084  006EB0  0E00               	movlw	0
 11085  006EB2  6EDE               	movwf	postinc2,c
 11086  006EB4  0E00               	movlw	0
 11087  006EB6  6EDD               	movwf	postdec2,c
 11088  006EB8                     l376:
 11089  006EB8  FFFF               	dw	65535	; assembler added errata NOP
 11090  006EBA  0012               	return		;funcret
 11091  006EBC  FFFF               	dw	65535	; errata NOP
 11092  006EBE                     __end_of_update_current_coil:
 11093                           	callstack 0
 11094                           
 11095 ;; *************** function _turn_on_current_coil *****************
 11096 ;; Defined at:
 11097 ;;		line 14 in file "stepper_motor.c"
 11098 ;; Parameters:    Size  Location     Type
 11099 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 11100 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
 11101 ;; Auto vars:     Size  Location     Type
 11102 ;;		None
 11103 ;; Return value:  Size  Location     Type
 11104 ;;                  1    wreg      void 
 11105 ;; Registers used:
 11106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11107 ;; Tracked objects:
 11108 ;;		On entry : 0/0
 11109 ;;		On exit  : 0/0
 11110 ;;		Unchanged: 0/0
 11111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11112 ;;      Params:         2       0       0       0       0       0       0
 11113 ;;      Locals:         0       0       0       0       0       0       0
 11114 ;;      Temps:          6       0       0       0       0       0       0
 11115 ;;      Totals:         8       0       0       0       0       0       0
 11116 ;;Total ram usage:        8 bytes
 11117 ;; Hardware stack levels used:    1
 11118 ;; Hardware stack levels required when called:    1
 11119 ;; This function calls:
 11120 ;;		Nothing
 11121 ;; This function is called by:
 11122 ;;		_reach_goal
 11123 ;; This function uses a non-reentrant model
 11124 ;;
 11125                           
 11126                           	psect	text36
 11127  0065EC                     __ptext36:
 11128                           	callstack 0
 11129  0065EC                     _turn_on_current_coil:
 11130                           	callstack 0
 11131  0065EC  FFFF               	dw	65535	; assembler added errata NOP
 11132  0065EE                     
 11133                           ;stepper_motor.c: 15:     *(stepper_motor -> register_name) = stepper_motor -> hex_coil_
      +                          register_values[stepper_motor -> current_coil];
 11134  0065EE  C001  FFD9         	movff	turn_on_current_coil@stepper_motor,fsr2l
 11135  0065F2  C002  FFDA         	movff	turn_on_current_coil@stepper_motor+1,fsr2h
 11136  0065F6  CFDE F003          	movff	postinc2,??_turn_on_current_coil
 11137  0065FA  CFDD F004          	movff	postdec2,??_turn_on_current_coil+1
 11138  0065FE  C001  F005         	movff	turn_on_current_coil@stepper_motor,??_turn_on_current_coil+2
 11139  006602  C002  F006         	movff	turn_on_current_coil@stepper_motor+1,??_turn_on_current_coil+3
 11140  006606  5003               	movf	??_turn_on_current_coil^0,w,c
 11141  006608  2605               	addwf	(??_turn_on_current_coil+2)^0,f,c
 11142  00660A  5004               	movf	(??_turn_on_current_coil+1)^0,w,c
 11143  00660C  2206               	addwfc	(??_turn_on_current_coil+3)^0,f,c
 11144  00660E  0E06               	movlw	6
 11145  006610  2405               	addwf	(??_turn_on_current_coil+2)^0,w,c
 11146  006612  6ED9               	movwf	fsr2l,c
 11147  006614  0E00               	movlw	0
 11148  006616  2006               	addwfc	(??_turn_on_current_coil+3)^0,w,c
 11149  006618  6EDA               	movwf	fsr2h,c
 11150  00661A  EE10 F00A          	lfsr	1,10
 11151  00661E  5001               	movf	turn_on_current_coil@stepper_motor^0,w,c
 11152  006620  26E1               	addwf	fsr1l,f,c
 11153  006622  5002               	movf	(turn_on_current_coil@stepper_motor+1)^0,w,c
 11154  006624  22E2               	addwfc	fsr1h,f,c
 11155  006626  CFE6 F007          	movff	postinc1,??_turn_on_current_coil+4
 11156  00662A  CFE5 F008          	movff	postdec1,??_turn_on_current_coil+5
 11157  00662E  C007  FFE1         	movff	??_turn_on_current_coil+4,fsr1l
 11158  006632  C008  FFE2         	movff	??_turn_on_current_coil+5,fsr1h
 11159  006636  CFDF FFE7          	movff	indf2,indf1
 11160  00663A  0012               	return		;funcret
 11161  00663C  FFFF               	dw	65535	; errata NOP
 11162  00663E                     __end_of_turn_on_current_coil:
 11163                           	callstack 0
 11164                           
 11165 ;; *************** function _lcd_str *****************
 11166 ;; Defined at:
 11167 ;;		line 62 in file "lcd.c"
 11168 ;; Parameters:    Size  Location     Type
 11169 ;;  str             2    2[COMRAM] PTR const unsigned char 
 11170 ;;		 -> STR_13(37), STR_12(17), STR_11(44), main@greet_str(160), 
 11171 ;;		 -> STR_9(22), 
 11172 ;; Auto vars:     Size  Location     Type
 11173 ;;  i               1    6[COMRAM] unsigned char 
 11174 ;; Return value:  Size  Location     Type
 11175 ;;                  1    wreg      void 
 11176 ;; Registers used:
 11177 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11178 ;; Tracked objects:
 11179 ;;		On entry : 0/0
 11180 ;;		On exit  : 0/0
 11181 ;;		Unchanged: 0/0
 11182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11183 ;;      Params:         2       0       0       0       0       0       0
 11184 ;;      Locals:         1       0       0       0       0       0       0
 11185 ;;      Temps:          2       0       0       0       0       0       0
 11186 ;;      Totals:         5       0       0       0       0       0       0
 11187 ;;Total ram usage:        5 bytes
 11188 ;; Hardware stack levels used:    1
 11189 ;; Hardware stack levels required when called:    3
 11190 ;; This function calls:
 11191 ;;		_lcd_dat
 11192 ;; This function is called by:
 11193 ;;		_main
 11194 ;; This function uses a non-reentrant model
 11195 ;;
 11196                           
 11197                           	psect	text37
 11198  006A9A                     __ptext37:
 11199                           	callstack 0
 11200  006A9A                     _lcd_str:
 11201                           	callstack 0
 11202  006A9A  FFFF               	dw	65535	; assembler added errata NOP
 11203  006A9C                     
 11204                           ;lcd.c: 62: void lcd_str(const char* str);lcd.c: 63: {;lcd.c: 64:     unsigned char i=0;
 11205  006A9C  0E00               	movlw	0
 11206  006A9E  6E07               	movwf	lcd_str@i^0,c
 11207                           
 11208                           ;lcd.c: 66:     while(str[i] != 0 )
 11209  006AA0  EF6D  F035         	goto	l5503
 11210  006AA4                     l5499:
 11211  006AA4  FFFF               	dw	65535	; assembler added errata NOP
 11212                           
 11213                           ;lcd.c: 67:     {;lcd.c: 68:       lcd_dat(str[i]);
 11214  006AA6  5007               	movf	lcd_str@i^0,w,c
 11215  006AA8  2403               	addwf	lcd_str@str^0,w,c
 11216  006AAA  6E05               	movwf	??_lcd_str^0,c
 11217  006AAC  0E00               	movlw	0
 11218  006AAE  2004               	addwfc	(lcd_str@str+1)^0,w,c
 11219  006AB0  6E06               	movwf	(??_lcd_str+1)^0,c
 11220  006AB2  C005  FFF6         	movff	??_lcd_str,tblptrl
 11221  006AB6  C006  FFF7         	movff	??_lcd_str+1,tblptrh
 11222  006ABA  6AF8               	clrf	tblptru,c
 11223  006ABC  0E05               	movlw	(high __ramtop+-1)
 11224  006ABE  64F7               	cpfsgt	tblptrh,c
 11225  006AC0  D004               	bra	u6677
 11226  006AC2  0008               	tblrd		*
 11227  006AC4  FFFF               	dw	65535	; errata NOP
 11228  006AC6  50F5               	movf	tablat,w,c
 11229  006AC8  D005               	bra	u6670
 11230  006ACA                     u6677:
 11231  006ACA  CFF6 FFE1          	movff	tblptrl,fsr1l
 11232  006ACE  CFF7 FFE2          	movff	tblptrh,fsr1h
 11233  006AD2  50E7               	movf	indf1,w,c
 11234  006AD4                     u6670:
 11235  006AD4  EC46  F031         	call	_lcd_dat
 11236  006AD8                     
 11237                           ;lcd.c: 69:       i++;
 11238  006AD8  2A07               	incf	lcd_str@i^0,f,c
 11239  006ADA                     l5503:
 11240  006ADA  FFFF               	dw	65535	; assembler added errata NOP
 11241                           
 11242                           ;lcd.c: 66:     while(str[i] != 0 )
 11243  006ADC  5007               	movf	lcd_str@i^0,w,c
 11244  006ADE  2403               	addwf	lcd_str@str^0,w,c
 11245  006AE0  6E05               	movwf	??_lcd_str^0,c
 11246  006AE2  0E00               	movlw	0
 11247  006AE4  2004               	addwfc	(lcd_str@str+1)^0,w,c
 11248  006AE6  6E06               	movwf	(??_lcd_str+1)^0,c
 11249  006AE8  C005  FFF6         	movff	??_lcd_str,tblptrl
 11250  006AEC  C006  FFF7         	movff	??_lcd_str+1,tblptrh
 11251  006AF0  6AF8               	clrf	tblptru,c
 11252  006AF2  0E05               	movlw	(high __ramtop+-1)
 11253  006AF4  64F7               	cpfsgt	tblptrh,c
 11254  006AF6  D004               	bra	u6687
 11255  006AF8  0008               	tblrd		*
 11256  006AFA  FFFF               	dw	65535	; errata NOP
 11257  006AFC  50F5               	movf	tablat,w,c
 11258  006AFE  D005               	bra	u6680
 11259  006B00                     u6687:
 11260  006B00  CFF6 FFE1          	movff	tblptrl,fsr1l
 11261  006B04  CFF7 FFE2          	movff	tblptrh,fsr1h
 11262  006B08  50E7               	movf	indf1,w,c
 11263  006B0A                     u6680:
 11264  006B0A  0900               	iorlw	0
 11265  006B0C  A4D8               	btfss	status,2,c
 11266  006B0E  EF8B  F035         	goto	u6691
 11267  006B12  EF8E  F035         	goto	u6690
 11268  006B16                     u6691:
 11269  006B16  FFFF               	dw	65535	; assembler added errata NOP
 11270  006B18  EF52  F035         	goto	l5499
 11271  006B1C                     u6690:
 11272  006B1C  FFFF               	dw	65535	; assembler added errata NOP
 11273  006B1E  0012               	return		;funcret
 11274  006B20  FFFF               	dw	65535	; errata NOP
 11275  006B22                     __end_of_lcd_str:
 11276                           	callstack 0
 11277                           
 11278 ;; *************** function _lcd_dat *****************
 11279 ;; Defined at:
 11280 ;;		line 21 in file "lcd.c"
 11281 ;; Parameters:    Size  Location     Type
 11282 ;;  val             1    wreg     unsigned char 
 11283 ;; Auto vars:     Size  Location     Type
 11284 ;;  val             1    1[COMRAM] unsigned char 
 11285 ;; Return value:  Size  Location     Type
 11286 ;;                  1    wreg      void 
 11287 ;; Registers used:
 11288 ;;		wreg, status,2, cstack
 11289 ;; Tracked objects:
 11290 ;;		On entry : 0/0
 11291 ;;		On exit  : 0/0
 11292 ;;		Unchanged: 0/0
 11293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11294 ;;      Params:         0       0       0       0       0       0       0
 11295 ;;      Locals:         1       0       0       0       0       0       0
 11296 ;;      Temps:          0       0       0       0       0       0       0
 11297 ;;      Totals:         1       0       0       0       0       0       0
 11298 ;;Total ram usage:        1 bytes
 11299 ;; Hardware stack levels used:    1
 11300 ;; Hardware stack levels required when called:    2
 11301 ;; This function calls:
 11302 ;;		_lcd_wr
 11303 ;; This function is called by:
 11304 ;;		_lcd_str
 11305 ;;		_state_translator_fpga_to_micro
 11306 ;; This function uses a non-reentrant model
 11307 ;;
 11308                           
 11309                           	psect	text38
 11310  00628C                     __ptext38:
 11311                           	callstack 0
 11312  00628C                     _lcd_dat:
 11313                           	callstack 0
 11314  00628C  FFFF               	dw	65535	; assembler added errata NOP
 11315                           
 11316                           ;incstack = 0
 11317                           ;lcd_dat@val stored from wreg
 11318  00628E  6E02               	movwf	lcd_dat@val^0,c
 11319  006290                     
 11320                           ;lcd.c: 21: void lcd_dat(unsigned char val);lcd.c: 22: {;lcd.c: 23:  PORTEbits.RE1=1;
 11321  006290  8284               	bsf	132,1,c	;volatile
 11322  006292                     
 11323                           ;lcd.c: 24:     lcd_wr(val);
 11324  006292  5002               	movf	lcd_dat@val^0,w,c
 11325  006294  ECAC  F030         	call	_lcd_wr
 11326  006298                     
 11327                           ;lcd.c: 25:     PORTEbits.RE2=1;
 11328  006298  8484               	bsf	132,2,c	;volatile
 11329  00629A                     
 11330                           ;lcd.c: 26:     _delay((unsigned long)((1)*(4000000/4000.0)));
 11331  00629A  0EC8               	movlw	200
 11332  00629C                     u7437:
 11333  00629C  FFFF               	dw	65535	; errata NOP
 11334  00629E  F000               	nop	
 11335  0062A0  2EE8               	decfsz	wreg,f,c
 11336  0062A2  D7FC               	bra	u7437
 11337  0062A4                     
 11338                           ;lcd.c: 27:     PORTEbits.RE1=0;
 11339  0062A4  9284               	bcf	132,1,c	;volatile
 11340  0062A6                     
 11341                           ;lcd.c: 28:     _delay((unsigned long)((1)*(4000000/4000.0)));
 11342  0062A6  0EC8               	movlw	200
 11343  0062A8                     u7447:
 11344  0062A8  FFFF               	dw	65535	; errata NOP
 11345  0062AA  F000               	nop	
 11346  0062AC  2EE8               	decfsz	wreg,f,c
 11347  0062AE  D7FC               	bra	u7447
 11348  0062B0                     
 11349                           ;lcd.c: 29:  PORTEbits.RE1=1;
 11350  0062B0  8284               	bsf	132,1,c	;volatile
 11351  0062B2  0012               	return		;funcret
 11352  0062B4  FFFF               	dw	65535	; errata NOP
 11353  0062B6                     __end_of_lcd_dat:
 11354                           	callstack 0
 11355                           
 11356 ;; *************** function _lcd_init *****************
 11357 ;; Defined at:
 11358 ;;		line 32 in file "lcd.c"
 11359 ;; Parameters:    Size  Location     Type
 11360 ;;		None
 11361 ;; Auto vars:     Size  Location     Type
 11362 ;;		None
 11363 ;; Return value:  Size  Location     Type
 11364 ;;                  1    wreg      void 
 11365 ;; Registers used:
 11366 ;;		wreg, status,2, cstack
 11367 ;; Tracked objects:
 11368 ;;		On entry : 0/0
 11369 ;;		On exit  : 0/0
 11370 ;;		Unchanged: 0/0
 11371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11372 ;;      Params:         0       0       0       0       0       0       0
 11373 ;;      Locals:         0       0       0       0       0       0       0
 11374 ;;      Temps:          1       0       0       0       0       0       0
 11375 ;;      Totals:         1       0       0       0       0       0       0
 11376 ;;Total ram usage:        1 bytes
 11377 ;; Hardware stack levels used:    1
 11378 ;; Hardware stack levels required when called:    3
 11379 ;; This function calls:
 11380 ;;		_lcd_cmd
 11381 ;; This function is called by:
 11382 ;;		_main
 11383 ;; This function uses a non-reentrant model
 11384 ;;
 11385                           
 11386                           	psect	text39
 11387  006996                     __ptext39:
 11388                           	callstack 0
 11389  006996                     _lcd_init:
 11390                           	callstack 0
 11391  006996  FFFF               	dw	65535	; assembler added errata NOP
 11392  006998  6A83               	clrf	3971,c	;# 
 11393  00699A  0E00               	movlw	0	;# 
 11394  00699C  6E95               	movwf	3989,c	;# 
 11395  00699E  6A84               	clrf	3972,c	;# 
 11396  0069A0  0E00               	movlw	0	;# 
 11397  0069A2  6E96               	movwf	3990,c	;# 
 11398                           
 11399                           ;lcd.c: 45:  PORTEbits.RE1=0;
 11400  0069A4  9284               	bcf	132,1,c	;volatile
 11401                           
 11402                           ;lcd.c: 46:  PORTEbits.RE2=0;
 11403  0069A6  9484               	bcf	132,2,c	;volatile
 11404  0069A8                     
 11405                           ;lcd.c: 47:  _delay((unsigned long)((30)*(4000000/4000.0)));
 11406  0069A8  0E1E               	movlw	30
 11407  0069AA  6E03               	movwf	??_lcd_init^0,c
 11408  0069AC  0E3C               	movlw	60
 11409  0069AE                     u7457:
 11410  0069AE  FFFF               	dw	65535	; errata NOP
 11411  0069B0  2EE8               	decfsz	wreg,f,c
 11412  0069B2  D7FD               	bra	u7457
 11413  0069B4  2E03               	decfsz	??_lcd_init^0,f,c
 11414  0069B6  D7FB               	bra	u7457
 11415  0069B8  D000               	nop2	
 11416  0069BA                     
 11417                           ;lcd.c: 48:  PORTEbits.RE1=1;
 11418  0069BA  8284               	bsf	132,1,c	;volatile
 11419  0069BC                     
 11420                           ;lcd.c: 50:  lcd_cmd(0x38);
 11421  0069BC  0E38               	movlw	56
 11422  0069BE  EC31  F031         	call	_lcd_cmd
 11423  0069C2                     
 11424                           ;lcd.c: 51:  _delay((unsigned long)((30)*(4000000/4000.0)));
 11425  0069C2  0E1E               	movlw	30
 11426  0069C4  6E03               	movwf	??_lcd_init^0,c
 11427  0069C6  0E3C               	movlw	60
 11428  0069C8                     u7467:
 11429  0069C8  FFFF               	dw	65535	; errata NOP
 11430  0069CA  2EE8               	decfsz	wreg,f,c
 11431  0069CC  D7FD               	bra	u7467
 11432  0069CE  2E03               	decfsz	??_lcd_init^0,f,c
 11433  0069D0  D7FB               	bra	u7467
 11434  0069D2  D000               	nop2	
 11435                           
 11436                           ;lcd.c: 52:  lcd_cmd(0x38);
 11437  0069D4  0E38               	movlw	56
 11438  0069D6  EC31  F031         	call	_lcd_cmd
 11439  0069DA                     
 11440                           ;lcd.c: 53:     _delay((unsigned long)((30)*(4000000/4000.0)));
 11441  0069DA  0E1E               	movlw	30
 11442  0069DC  6E03               	movwf	??_lcd_init^0,c
 11443  0069DE  0E3C               	movlw	60
 11444  0069E0                     u7477:
 11445  0069E0  FFFF               	dw	65535	; errata NOP
 11446  0069E2  2EE8               	decfsz	wreg,f,c
 11447  0069E4  D7FD               	bra	u7477
 11448  0069E6  2E03               	decfsz	??_lcd_init^0,f,c
 11449  0069E8  D7FB               	bra	u7477
 11450  0069EA  D000               	nop2	
 11451  0069EC                     
 11452                           ;lcd.c: 54:  lcd_cmd(0x38);
 11453  0069EC  0E38               	movlw	56
 11454  0069EE  EC31  F031         	call	_lcd_cmd
 11455  0069F2                     
 11456                           ;lcd.c: 55:  lcd_cmd(0x08);
 11457  0069F2  0E08               	movlw	8
 11458  0069F4  EC31  F031         	call	_lcd_cmd
 11459  0069F8                     
 11460                           ;lcd.c: 56:  lcd_cmd(0x0F);
 11461  0069F8  0E0F               	movlw	15
 11462  0069FA  EC31  F031         	call	_lcd_cmd
 11463  0069FE                     
 11464                           ;lcd.c: 57:  lcd_cmd(0x01);
 11465  0069FE  0E01               	movlw	1
 11466  006A00  EC31  F031         	call	_lcd_cmd
 11467  006A04                     
 11468                           ;lcd.c: 58:  lcd_cmd(0x38);
 11469  006A04  0E38               	movlw	56
 11470  006A06  EC31  F031         	call	_lcd_cmd
 11471  006A0A                     
 11472                           ;lcd.c: 59:     lcd_cmd(0x80);
 11473  006A0A  0E80               	movlw	128
 11474  006A0C  EC31  F031         	call	_lcd_cmd
 11475  006A10  0012               	return		;funcret
 11476  006A12  FFFF               	dw	65535	; errata NOP
 11477  006A14                     __end_of_lcd_init:
 11478                           	callstack 0
 11479                           
 11480 ;; *************** function _lcd_cmd *****************
 11481 ;; Defined at:
 11482 ;;		line 10 in file "lcd.c"
 11483 ;; Parameters:    Size  Location     Type
 11484 ;;  val             1    wreg     unsigned char 
 11485 ;; Auto vars:     Size  Location     Type
 11486 ;;  val             1    1[COMRAM] unsigned char 
 11487 ;; Return value:  Size  Location     Type
 11488 ;;                  1    wreg      void 
 11489 ;; Registers used:
 11490 ;;		wreg, status,2, cstack
 11491 ;; Tracked objects:
 11492 ;;		On entry : 0/0
 11493 ;;		On exit  : 0/0
 11494 ;;		Unchanged: 0/0
 11495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11496 ;;      Params:         0       0       0       0       0       0       0
 11497 ;;      Locals:         1       0       0       0       0       0       0
 11498 ;;      Temps:          0       0       0       0       0       0       0
 11499 ;;      Totals:         1       0       0       0       0       0       0
 11500 ;;Total ram usage:        1 bytes
 11501 ;; Hardware stack levels used:    1
 11502 ;; Hardware stack levels required when called:    2
 11503 ;; This function calls:
 11504 ;;		_lcd_wr
 11505 ;; This function is called by:
 11506 ;;		_main
 11507 ;;		_lcd_init
 11508 ;; This function uses a non-reentrant model
 11509 ;;
 11510                           
 11511                           	psect	text40
 11512  006262                     __ptext40:
 11513                           	callstack 0
 11514  006262                     _lcd_cmd:
 11515                           	callstack 0
 11516  006262  FFFF               	dw	65535	; assembler added errata NOP
 11517                           
 11518                           ;incstack = 0
 11519                           ;lcd_cmd@val stored from wreg
 11520  006264  6E02               	movwf	lcd_cmd@val^0,c
 11521  006266                     
 11522                           ;lcd.c: 10: void lcd_cmd(unsigned char val);lcd.c: 11: {;lcd.c: 12:  PORTEbits.RE1=1;
 11523  006266  8284               	bsf	132,1,c	;volatile
 11524  006268                     
 11525                           ;lcd.c: 13:     lcd_wr(val);
 11526  006268  5002               	movf	lcd_cmd@val^0,w,c
 11527  00626A  ECAC  F030         	call	_lcd_wr
 11528  00626E                     
 11529                           ;lcd.c: 14:     PORTEbits.RE2=0;
 11530  00626E  9484               	bcf	132,2,c	;volatile
 11531  006270                     
 11532                           ;lcd.c: 15:     _delay((unsigned long)((1)*(4000000/4000.0)));
 11533  006270  0EC8               	movlw	200
 11534  006272                     u7487:
 11535  006272  FFFF               	dw	65535	; errata NOP
 11536  006274  F000               	nop	
 11537  006276  2EE8               	decfsz	wreg,f,c
 11538  006278  D7FC               	bra	u7487
 11539  00627A                     
 11540                           ;lcd.c: 16:     PORTEbits.RE1=0;
 11541  00627A  9284               	bcf	132,1,c	;volatile
 11542  00627C                     
 11543                           ;lcd.c: 17:     _delay((unsigned long)((1)*(4000000/4000.0)));
 11544  00627C  0EC8               	movlw	200
 11545  00627E                     u7497:
 11546  00627E  FFFF               	dw	65535	; errata NOP
 11547  006280  F000               	nop	
 11548  006282  2EE8               	decfsz	wreg,f,c
 11549  006284  D7FC               	bra	u7497
 11550  006286                     
 11551                           ;lcd.c: 18:  PORTEbits.RE1=1;
 11552  006286  8284               	bsf	132,1,c	;volatile
 11553  006288  0012               	return		;funcret
 11554  00628A  FFFF               	dw	65535	; errata NOP
 11555  00628C                     __end_of_lcd_cmd:
 11556                           	callstack 0
 11557                           
 11558 ;; *************** function _lcd_wr *****************
 11559 ;; Defined at:
 11560 ;;		line 5 in file "lcd.c"
 11561 ;; Parameters:    Size  Location     Type
 11562 ;;  val             1    wreg     unsigned char 
 11563 ;; Auto vars:     Size  Location     Type
 11564 ;;  val             1    0[COMRAM] unsigned char 
 11565 ;; Return value:  Size  Location     Type
 11566 ;;                  1    wreg      void 
 11567 ;; Registers used:
 11568 ;;		wreg
 11569 ;; Tracked objects:
 11570 ;;		On entry : 0/0
 11571 ;;		On exit  : 0/0
 11572 ;;		Unchanged: 0/0
 11573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11574 ;;      Params:         0       0       0       0       0       0       0
 11575 ;;      Locals:         1       0       0       0       0       0       0
 11576 ;;      Temps:          0       0       0       0       0       0       0
 11577 ;;      Totals:         1       0       0       0       0       0       0
 11578 ;;Total ram usage:        1 bytes
 11579 ;; Hardware stack levels used:    1
 11580 ;; Hardware stack levels required when called:    1
 11581 ;; This function calls:
 11582 ;;		Nothing
 11583 ;; This function is called by:
 11584 ;;		_lcd_cmd
 11585 ;;		_lcd_dat
 11586 ;; This function uses a non-reentrant model
 11587 ;;
 11588                           
 11589                           	psect	text41
 11590  006158                     __ptext41:
 11591                           	callstack 0
 11592  006158                     _lcd_wr:
 11593                           	callstack 0
 11594  006158  FFFF               	dw	65535	; assembler added errata NOP
 11595                           
 11596                           ;incstack = 0
 11597                           ;lcd_wr@val stored from wreg
 11598  00615A  6E01               	movwf	lcd_wr@val^0,c
 11599  00615C                     
 11600                           ;lcd.c: 5: void lcd_wr(unsigned char val);lcd.c: 6: {;lcd.c: 7:     PORTD=val;
 11601  00615C  C001  FF83         	movff	lcd_wr@val,3971	;volatile
 11602  006160  0012               	return		;funcret
 11603  006162  FFFF               	dw	65535	; errata NOP
 11604  006164                     __end_of_lcd_wr:
 11605                           	callstack 0
 11606                           
 11607 ;; *************** function _init_timer_2 *****************
 11608 ;; Defined at:
 11609 ;;		line 27 in file "timer.c"
 11610 ;; Parameters:    Size  Location     Type
 11611 ;;		None
 11612 ;; Auto vars:     Size  Location     Type
 11613 ;;		None
 11614 ;; Return value:  Size  Location     Type
 11615 ;;                  1    wreg      void 
 11616 ;; Registers used:
 11617 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11618 ;; Tracked objects:
 11619 ;;		On entry : 0/0
 11620 ;;		On exit  : 0/0
 11621 ;;		Unchanged: 0/0
 11622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11623 ;;      Params:         0       0       0       0       0       0       0
 11624 ;;      Locals:         0       4       0       0       0       0       0
 11625 ;;      Temps:          0       0       0       0       0       0       0
 11626 ;;      Totals:         0       4       0       0       0       0       0
 11627 ;;Total ram usage:        4 bytes
 11628 ;; Hardware stack levels used:    1
 11629 ;; Hardware stack levels required when called:    2
 11630 ;; This function calls:
 11631 ;;		___fladd
 11632 ;;		___fldiv
 11633 ;;		___flmul
 11634 ;;		___fltol
 11635 ;; This function is called by:
 11636 ;;		_main
 11637 ;; This function uses a non-reentrant model
 11638 ;;
 11639                           
 11640                           	psect	text42
 11641  006D18                     __ptext42:
 11642                           	callstack 0
 11643  006D18                     _init_timer_2:
 11644                           	callstack 0
 11645  006D18  FFFF               	dw	65535	; assembler added errata NOP
 11646  006D1A                     
 11647                           ;timer.c: 29:     T2CON = 0;
 11648  006D1A  0E00               	movlw	0
 11649  006D1C  6ECA               	movwf	202,c	;volatile
 11650                           
 11651                           ;timer.c: 30:     TMR2 = 0;
 11652  006D1E  0E00               	movlw	0
 11653  006D20  6ECC               	movwf	204,c	;volatile
 11654  006D22                     
 11655                           ;timer.c: 32:     T2CONbits.TMR2ON = 1;
 11656  006D22  84CA               	bsf	202,2,c	;volatile
 11657  006D24                     
 11658                           ;timer.c: 33:     T2CONbits.T2CKPS0 = 1;
 11659  006D24  80CA               	bsf	202,0,c	;volatile
 11660  006D26                     
 11661                           ;timer.c: 34:     T2CONbits.T2CKPS1 = 1;
 11662  006D26  82CA               	bsf	202,1,c	;volatile
 11663  006D28                     
 11664                           ;timer.c: 36:     PR2 = (uint8_t) (((pwm_period / (4*t_osc*tmr2_prescaler)) - 1)*4);
 11665  006D28  0E00               	movlw	0
 11666  006D2A  6E63               	movwf	___fladd@a^0,c
 11667  006D2C  0E00               	movlw	0
 11668  006D2E  6E64               	movwf	(___fladd@a+1)^0,c
 11669  006D30  0E80               	movlw	128
 11670  006D32  6E65               	movwf	(___fladd@a+2)^0,c
 11671  006D34  0EBF               	movlw	191
 11672  006D36  6E66               	movwf	(___fladd@a+3)^0,c
 11673  006D38  0EBD               	movlw	189
 11674  006D3A  6E31               	movwf	___flmul@a^0,c
 11675  006D3C  0E37               	movlw	55
 11676  006D3E  6E32               	movwf	(___flmul@a+1)^0,c
 11677  006D40  0E86               	movlw	134
 11678  006D42  6E33               	movwf	(___flmul@a+2)^0,c
 11679  006D44  0E36               	movlw	54
 11680  006D46  6E34               	movwf	(___flmul@a+3)^0,c
 11681  006D48  C0F3  F02D         	movff	_tmr2_prescaler,___flmul@b
 11682  006D4C  C0F4  F02E         	movff	_tmr2_prescaler+1,___flmul@b+1
 11683  006D50  C0F5  F02F         	movff	_tmr2_prescaler+2,___flmul@b+2
 11684  006D54  C0F6  F030         	movff	_tmr2_prescaler+3,___flmul@b+3
 11685  006D58  ECD5  F011         	call	___flmul	;wreg free
 11686  006D5C  C02D  F04A         	movff	?___flmul,___fldiv@a
 11687  006D60  C02E  F04B         	movff	?___flmul+1,___fldiv@a+1
 11688  006D64  C02F  F04C         	movff	?___flmul+2,___fldiv@a+2
 11689  006D68  C030  F04D         	movff	?___flmul+3,___fldiv@a+3
 11690  006D6C  0E0A               	movlw	10
 11691  006D6E  6E46               	movwf	___fldiv@b^0,c
 11692  006D70  0ED7               	movlw	215
 11693  006D72  6E47               	movwf	(___fldiv@b+1)^0,c
 11694  006D74  0EA3               	movlw	163
 11695  006D76  6E48               	movwf	(___fldiv@b+2)^0,c
 11696  006D78  0E3C               	movlw	60
 11697  006D7A  6E49               	movwf	(___fldiv@b+3)^0,c
 11698  006D7C  EC27  F014         	call	___fldiv	;wreg free
 11699  006D80  C046  F05F         	movff	?___fldiv,___fladd@b
 11700  006D84  C047  F060         	movff	?___fldiv+1,___fladd@b+1
 11701  006D88  C048  F061         	movff	?___fldiv+2,___fladd@b+2
 11702  006D8C  C049  F062         	movff	?___fldiv+3,___fladd@b+3
 11703  006D90  EC01  F00F         	call	___fladd	;wreg free
 11704  006D94  C05F  F0BA         	movff	?___fladd,_init_timer_2$2168
 11705  006D98  C060  F0BB         	movff	?___fladd+1,_init_timer_2$2168+1
 11706  006D9C  C061  F0BC         	movff	?___fladd+2,_init_timer_2$2168+2
 11707  006DA0  C062  F0BD         	movff	?___fladd+3,_init_timer_2$2168+3
 11708  006DA4                     
 11709                           ;timer.c: 36:     PR2 = (uint8_t) (((pwm_period / (4*t_osc*tmr2_prescaler)) - 1)*4);
 11710  006DA4  0E00               	movlw	0
 11711  006DA6  6E31               	movwf	___flmul@a^0,c
 11712  006DA8  0E00               	movlw	0
 11713  006DAA  6E32               	movwf	(___flmul@a+1)^0,c
 11714  006DAC  0E80               	movlw	128
 11715  006DAE  6E33               	movwf	(___flmul@a+2)^0,c
 11716  006DB0  0E40               	movlw	64
 11717  006DB2  6E34               	movwf	(___flmul@a+3)^0,c
 11718  006DB4  C0BA  F02D         	movff	_init_timer_2$2168,___flmul@b
 11719  006DB8  C0BB  F02E         	movff	_init_timer_2$2168+1,___flmul@b+1
 11720  006DBC  C0BC  F02F         	movff	_init_timer_2$2168+2,___flmul@b+2
 11721  006DC0  C0BD  F030         	movff	_init_timer_2$2168+3,___flmul@b+3
 11722  006DC4  ECD5  F011         	call	___flmul	;wreg free
 11723  006DC8  C02D  F077         	movff	?___flmul,___fltol@f1
 11724  006DCC  C02E  F078         	movff	?___flmul+1,___fltol@f1+1
 11725  006DD0  C02F  F079         	movff	?___flmul+2,___fltol@f1+2
 11726  006DD4  C030  F07A         	movff	?___flmul+3,___fltol@f1+3
 11727  006DD8  ECB8  F03A         	call	___fltol	;wreg free
 11728  006DDC  5077               	movf	?___fltol^0,w,c
 11729  006DDE  6ECB               	movwf	203,c	;volatile
 11730  006DE0  0012               	return		;funcret
 11731  006DE2  FFFF               	dw	65535	; errata NOP
 11732  006DE4                     __end_of_init_timer_2:
 11733                           	callstack 0
 11734                           
 11735 ;; *************** function _init_timer_0 *****************
 11736 ;; Defined at:
 11737 ;;		line 11 in file "timer.c"
 11738 ;; Parameters:    Size  Location     Type
 11739 ;;		None
 11740 ;; Auto vars:     Size  Location     Type
 11741 ;;		None
 11742 ;; Return value:  Size  Location     Type
 11743 ;;                  1    wreg      void 
 11744 ;; Registers used:
 11745 ;;		wreg, status,2
 11746 ;; Tracked objects:
 11747 ;;		On entry : 0/0
 11748 ;;		On exit  : 0/0
 11749 ;;		Unchanged: 0/0
 11750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11751 ;;      Params:         0       0       0       0       0       0       0
 11752 ;;      Locals:         0       0       0       0       0       0       0
 11753 ;;      Temps:          0       0       0       0       0       0       0
 11754 ;;      Totals:         0       0       0       0       0       0       0
 11755 ;;Total ram usage:        0 bytes
 11756 ;; Hardware stack levels used:    1
 11757 ;; Hardware stack levels required when called:    1
 11758 ;; This function calls:
 11759 ;;		Nothing
 11760 ;; This function is called by:
 11761 ;;		_main
 11762 ;; This function uses a non-reentrant model
 11763 ;;
 11764                           
 11765                           	psect	text43
 11766  0061F4                     __ptext43:
 11767                           	callstack 0
 11768  0061F4                     _init_timer_0:
 11769                           	callstack 0
 11770  0061F4  FFFF               	dw	65535	; assembler added errata NOP
 11771  0061F6                     
 11772                           ;timer.c: 13:     T0CON = 0;
 11773  0061F6  0E00               	movlw	0
 11774  0061F8  6ED5               	movwf	213,c	;volatile
 11775                           
 11776                           ;timer.c: 15:     TMR0L = 0x96;
 11777  0061FA  0E96               	movlw	150
 11778  0061FC  6ED6               	movwf	214,c	;volatile
 11779                           
 11780                           ;timer.c: 16:     TMR0H = 0x98;
 11781  0061FE  0E98               	movlw	152
 11782  006200  6ED7               	movwf	215,c	;volatile
 11783  006202                     
 11784                           ;timer.c: 17:     INTCONbits.TMR0IE = 1;
 11785  006202  8AF2               	bsf	242,5,c	;volatile
 11786  006204                     
 11787                           ;timer.c: 18:     T0CONbits.T08BIT = 0;
 11788  006204  9CD5               	bcf	213,6,c	;volatile
 11789  006206                     
 11790                           ;timer.c: 19:     T0CONbits.T0CS = 0;
 11791  006206  9AD5               	bcf	213,5,c	;volatile
 11792  006208                     
 11793                           ;timer.c: 20:     T0CONbits.PSA = 0;
 11794  006208  96D5               	bcf	213,3,c	;volatile
 11795  00620A                     
 11796                           ;timer.c: 21:     T0CONbits.T0PS0 = 1;
 11797  00620A  80D5               	bsf	213,0,c	;volatile
 11798  00620C                     
 11799                           ;timer.c: 22:     T0CONbits.T0PS1 = 1;
 11800  00620C  82D5               	bsf	213,1,c	;volatile
 11801  00620E                     
 11802                           ;timer.c: 23:     T0CONbits.T0PS2 = 1;
 11803  00620E  84D5               	bsf	213,2,c	;volatile
 11804  006210                     
 11805                           ;timer.c: 24:     T0CONbits.TMR0ON = 1;
 11806  006210  8ED5               	bsf	213,7,c	;volatile
 11807  006212  0012               	return		;funcret
 11808  006214  FFFF               	dw	65535	; errata NOP
 11809  006216                     __end_of_init_timer_0:
 11810                           	callstack 0
 11811                           
 11812 ;; *************** function _init_stepper *****************
 11813 ;; Defined at:
 11814 ;;		line 4 in file "stepper_motor.c"
 11815 ;; Parameters:    Size  Location     Type
 11816 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 11817 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
 11818 ;;  current_coil    2    2[COMRAM] int 
 11819 ;;  step_counter    2    4[COMRAM] int 
 11820 ;;  direction       2    6[COMRAM] int 
 11821 ;;  hex_coil_reg    2    8[COMRAM] PTR unsigned char 
 11822 ;;		 -> hex_end_effector_values(4), hex_joint_values(4), 
 11823 ;;  register_nam    2   10[COMRAM] PTR volatile unsigned ch
 11824 ;;		 -> LATC(1), LATB(1), 
 11825 ;; Auto vars:     Size  Location     Type
 11826 ;;  i               2   14[COMRAM] int 
 11827 ;; Return value:  Size  Location     Type
 11828 ;;                  1    wreg      void 
 11829 ;; Registers used:
 11830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11831 ;; Tracked objects:
 11832 ;;		On entry : 0/0
 11833 ;;		On exit  : 0/0
 11834 ;;		Unchanged: 0/0
 11835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11836 ;;      Params:        12       0       0       0       0       0       0
 11837 ;;      Locals:         2       0       0       0       0       0       0
 11838 ;;      Temps:          2       0       0       0       0       0       0
 11839 ;;      Totals:        16       0       0       0       0       0       0
 11840 ;;Total ram usage:       16 bytes
 11841 ;; Hardware stack levels used:    1
 11842 ;; Hardware stack levels required when called:    1
 11843 ;; This function calls:
 11844 ;;		Nothing
 11845 ;; This function is called by:
 11846 ;;		_main
 11847 ;; This function uses a non-reentrant model
 11848 ;;
 11849                           
 11850                           	psect	text44
 11851  006BAC                     __ptext44:
 11852                           	callstack 0
 11853  006BAC                     _init_stepper:
 11854                           	callstack 0
 11855  006BAC  FFFF               	dw	65535	; assembler added errata NOP
 11856  006BAE                     
 11857                           ;stepper_motor.c: 5:     for (int i = 0; i < 4; i++) {
 11858  006BAE  0E00               	movlw	0
 11859  006BB0  6E10               	movwf	(init_stepper@i+1)^0,c
 11860  006BB2  0E00               	movlw	0
 11861  006BB4  6E0F               	movwf	init_stepper@i^0,c
 11862  006BB6                     l5459:
 11863  006BB6  FFFF               	dw	65535	; assembler added errata NOP
 11864                           
 11865                           ;stepper_motor.c: 6:        stepper_motor -> hex_coil_register_values[i] = hex_coil_regi
      +                          ster_values[i];
 11866  006BB8  500F               	movf	init_stepper@i^0,w,c
 11867  006BBA  2409               	addwf	init_stepper@hex_coil_register_values^0,w,c
 11868  006BBC  6ED9               	movwf	fsr2l,c
 11869  006BBE  5010               	movf	(init_stepper@i+1)^0,w,c
 11870  006BC0  200A               	addwfc	(init_stepper@hex_coil_register_values+1)^0,w,c
 11871  006BC2  6EDA               	movwf	fsr2h,c
 11872  006BC4  500F               	movf	init_stepper@i^0,w,c
 11873  006BC6  2401               	addwf	init_stepper@stepper_motor^0,w,c
 11874  006BC8  6E0D               	movwf	??_init_stepper^0,c
 11875  006BCA  5010               	movf	(init_stepper@i+1)^0,w,c
 11876  006BCC  2002               	addwfc	(init_stepper@stepper_motor+1)^0,w,c
 11877  006BCE  6E0E               	movwf	(??_init_stepper+1)^0,c
 11878  006BD0  0E06               	movlw	6
 11879  006BD2  240D               	addwf	??_init_stepper^0,w,c
 11880  006BD4  6EE1               	movwf	fsr1l,c
 11881  006BD6  0E00               	movlw	0
 11882  006BD8  200E               	addwfc	(??_init_stepper+1)^0,w,c
 11883  006BDA  6EE2               	movwf	fsr1h,c
 11884  006BDC  CFDF FFE7          	movff	indf2,indf1
 11885  006BE0                     
 11886                           ;stepper_motor.c: 7:     }
 11887  006BE0  4A0F               	infsnz	init_stepper@i^0,f,c
 11888  006BE2  2A10               	incf	(init_stepper@i+1)^0,f,c
 11889  006BE4  BE10               	btfsc	(init_stepper@i+1)^0,7,c
 11890  006BE6  EFFE  F035         	goto	u6661
 11891  006BEA  5010               	movf	(init_stepper@i+1)^0,w,c
 11892  006BEC  E10A               	bnz	u6660
 11893  006BEE  0E04               	movlw	4
 11894  006BF0  5C0F               	subwf	init_stepper@i^0,w,c
 11895  006BF2  A0D8               	btfss	status,0,c
 11896  006BF4  EFFE  F035         	goto	u6661
 11897  006BF8  EF01  F036         	goto	u6660
 11898  006BFC                     u6661:
 11899  006BFC  FFFF               	dw	65535	; assembler added errata NOP
 11900  006BFE  EFDB  F035         	goto	l5459
 11901  006C02                     u6660:
 11902  006C02  FFFF               	dw	65535	; assembler added errata NOP
 11903  006C04                     
 11904                           ;stepper_motor.c: 8:     stepper_motor -> current_coil = current_coil;
 11905  006C04  C001  FFD9         	movff	init_stepper@stepper_motor,fsr2l
 11906  006C08  C002  FFDA         	movff	init_stepper@stepper_motor+1,fsr2h
 11907  006C0C  C003  FFDE         	movff	init_stepper@current_coil,postinc2
 11908  006C10  C004  FFDD         	movff	init_stepper@current_coil+1,postdec2
 11909  006C14                     
 11910                           ;stepper_motor.c: 9:     stepper_motor -> step_counter = step_counter;
 11911  006C14  EE20 F002          	lfsr	2,2
 11912  006C18  5001               	movf	init_stepper@stepper_motor^0,w,c
 11913  006C1A  26D9               	addwf	fsr2l,f,c
 11914  006C1C  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
 11915  006C1E  22DA               	addwfc	fsr2h,f,c
 11916  006C20  C005  FFDE         	movff	init_stepper@step_counter,postinc2
 11917  006C24  C006  FFDD         	movff	init_stepper@step_counter+1,postdec2
 11918  006C28                     
 11919                           ;stepper_motor.c: 10:     stepper_motor -> direction = direction;
 11920  006C28  EE20 F004          	lfsr	2,4
 11921  006C2C  5001               	movf	init_stepper@stepper_motor^0,w,c
 11922  006C2E  26D9               	addwf	fsr2l,f,c
 11923  006C30  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
 11924  006C32  22DA               	addwfc	fsr2h,f,c
 11925  006C34  C007  FFDE         	movff	init_stepper@direction,postinc2
 11926  006C38  C008  FFDD         	movff	init_stepper@direction+1,postdec2
 11927  006C3C                     
 11928                           ;stepper_motor.c: 11:     stepper_motor -> register_name = register_name;
 11929  006C3C  EE20 F00A          	lfsr	2,10
 11930  006C40  5001               	movf	init_stepper@stepper_motor^0,w,c
 11931  006C42  26D9               	addwf	fsr2l,f,c
 11932  006C44  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
 11933  006C46  22DA               	addwfc	fsr2h,f,c
 11934  006C48  C00B  FFDE         	movff	init_stepper@register_name,postinc2
 11935  006C4C  C00C  FFDD         	movff	init_stepper@register_name+1,postdec2
 11936  006C50  0012               	return		;funcret
 11937  006C52  FFFF               	dw	65535	; errata NOP
 11938  006C54                     __end_of_init_stepper:
 11939                           	callstack 0
 11940                           
 11941 ;; *************** function _init_interrupts *****************
 11942 ;; Defined at:
 11943 ;;		line 80 in file "init_PIC.c"
 11944 ;; Parameters:    Size  Location     Type
 11945 ;;		None
 11946 ;; Auto vars:     Size  Location     Type
 11947 ;;		None
 11948 ;; Return value:  Size  Location     Type
 11949 ;;                  1    wreg      void 
 11950 ;; Registers used:
 11951 ;;		None
 11952 ;; Tracked objects:
 11953 ;;		On entry : 0/0
 11954 ;;		On exit  : 0/0
 11955 ;;		Unchanged: 0/0
 11956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11957 ;;      Params:         0       0       0       0       0       0       0
 11958 ;;      Locals:         0       0       0       0       0       0       0
 11959 ;;      Temps:          0       0       0       0       0       0       0
 11960 ;;      Totals:         0       0       0       0       0       0       0
 11961 ;;Total ram usage:        0 bytes
 11962 ;; Hardware stack levels used:    1
 11963 ;; Hardware stack levels required when called:    1
 11964 ;; This function calls:
 11965 ;;		Nothing
 11966 ;; This function is called by:
 11967 ;;		_main
 11968 ;; This function uses a non-reentrant model
 11969 ;;
 11970                           
 11971                           	psect	text45
 11972  00614C                     __ptext45:
 11973                           	callstack 0
 11974  00614C                     _init_interrupts:
 11975                           	callstack 0
 11976  00614C  FFFF               	dw	65535	; assembler added errata NOP
 11977  00614E                     
 11978                           ;init_PIC.c: 82:     PIR1bits.RCIF = 0;
 11979  00614E  9A9E               	bcf	158,5,c	;volatile
 11980                           
 11981                           ;init_PIC.c: 83:     PIE1bits.RCIE = 1;
 11982  006150  8A9D               	bsf	157,5,c	;volatile
 11983                           
 11984                           ;init_PIC.c: 84:     INTCONbits.PEIE = 1;
 11985  006152  8CF2               	bsf	242,6,c	;volatile
 11986  006154  0012               	return		;funcret
 11987  006156  FFFF               	dw	65535	; errata NOP
 11988  006158                     __end_of_init_interrupts:
 11989                           	callstack 0
 11990                           
 11991 ;; *************** function _init_ccp1 *****************
 11992 ;; Defined at:
 11993 ;;		line 41 in file "timer.c"
 11994 ;; Parameters:    Size  Location     Type
 11995 ;;		None
 11996 ;; Auto vars:     Size  Location     Type
 11997 ;;		None
 11998 ;; Return value:  Size  Location     Type
 11999 ;;                  1    wreg      void 
 12000 ;; Registers used:
 12001 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12002 ;; Tracked objects:
 12003 ;;		On entry : 0/0
 12004 ;;		On exit  : 0/0
 12005 ;;		Unchanged: 0/0
 12006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12007 ;;      Params:         0       0       0       0       0       0       0
 12008 ;;      Locals:         0       0       0       0       0       0       0
 12009 ;;      Temps:          0       0       0       0       0       0       0
 12010 ;;      Totals:         0       0       0       0       0       0       0
 12011 ;;Total ram usage:        0 bytes
 12012 ;; Hardware stack levels used:    1
 12013 ;; Hardware stack levels required when called:    3
 12014 ;; This function calls:
 12015 ;;		_update_pwm_duty_ccp1
 12016 ;; This function is called by:
 12017 ;;		_main
 12018 ;; This function uses a non-reentrant model
 12019 ;;
 12020                           
 12021                           	psect	text46
 12022  006216                     __ptext46:
 12023                           	callstack 0
 12024  006216                     _init_ccp1:
 12025                           	callstack 0
 12026  006216  FFFF               	dw	65535	; assembler added errata NOP
 12027  006218                     
 12028                           ;timer.c: 42:     CCP1CON = 0x00;
 12029  006218  0E00               	movlw	0
 12030  00621A  6EBD               	movwf	189,c	;volatile
 12031  00621C                     
 12032                           ;timer.c: 45:     update_pwm_duty_ccp1(5e-3);
 12033  00621C  0E0A               	movlw	10
 12034  00621E  0100               	movlb	0	; () banked
 12035  006220  6FBA               	movwf	update_pwm_duty_ccp1@time_up& (0+255),b
 12036  006222  0ED7               	movlw	215
 12037  006224  6FBB               	movwf	(update_pwm_duty_ccp1@time_up+1)& (0+255),b
 12038  006226  0EA3               	movlw	163
 12039  006228  6FBC               	movwf	(update_pwm_duty_ccp1@time_up+2)& (0+255),b
 12040  00622A  0E3B               	movlw	59
 12041  00622C  6FBD               	movwf	(update_pwm_duty_ccp1@time_up+3)& (0+255),b
 12042  00622E  EC2A  F036         	call	_update_pwm_duty_ccp1	;wreg free
 12043  006232                     
 12044                           ;timer.c: 48:     CCP1CONbits.CCP1M3 = 1;
 12045  006232  86BD               	bsf	189,3,c	;volatile
 12046  006234                     
 12047                           ;timer.c: 49:     CCP1CONbits.CCP1M2 = 1;
 12048  006234  84BD               	bsf	189,2,c	;volatile
 12049  006236  0012               	return		;funcret
 12050  006238  FFFF               	dw	65535	; errata NOP
 12051  00623A                     __end_of_init_ccp1:
 12052                           	callstack 0
 12053                           
 12054 ;; *************** function _update_pwm_duty_ccp1 *****************
 12055 ;; Defined at:
 12056 ;;		line 53 in file "timer.c"
 12057 ;; Parameters:    Size  Location     Type
 12058 ;;  time_up         4    2[BANK0 ] void 
 12059 ;; Auto vars:     Size  Location     Type
 12060 ;;  new_duty        2    8[BANK0 ] unsigned short 
 12061 ;;  lsbs_duty       1   10[BANK0 ] unsigned char 
 12062 ;; Return value:  Size  Location     Type
 12063 ;;                  1    wreg      void 
 12064 ;; Registers used:
 12065 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12066 ;; Tracked objects:
 12067 ;;		On entry : 0/0
 12068 ;;		On exit  : 0/0
 12069 ;;		Unchanged: 0/0
 12070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12071 ;;      Params:         0       4       0       0       0       0       0
 12072 ;;      Locals:         0       3       0       0       0       0       0
 12073 ;;      Temps:          0       2       0       0       0       0       0
 12074 ;;      Totals:         0       9       0       0       0       0       0
 12075 ;;Total ram usage:        9 bytes
 12076 ;; Hardware stack levels used:    1
 12077 ;; Hardware stack levels required when called:    2
 12078 ;; This function calls:
 12079 ;;		___fldiv
 12080 ;;		___flmul
 12081 ;;		___fltol
 12082 ;; This function is called by:
 12083 ;;		_init_ccp1
 12084 ;; This function uses a non-reentrant model
 12085 ;;
 12086                           
 12087                           	psect	text47
 12088  006C54                     __ptext47:
 12089                           	callstack 0
 12090  006C54                     _update_pwm_duty_ccp1:
 12091                           	callstack 0
 12092  006C54  FFFF               	dw	65535	; assembler added errata NOP
 12093  006C56                     
 12094                           ;timer.c: 56:     uint16_t new_duty;;timer.c: 57:     uint8_t lsbs_duty;;timer.c: 59:   
      +                            new_duty = (0.001) / (t_osc * tmr2_prescaler);
 12095  006C56  0EBD               	movlw	189
 12096  006C58  6E31               	movwf	___flmul@a^0,c
 12097  006C5A  0E37               	movlw	55
 12098  006C5C  6E32               	movwf	(___flmul@a+1)^0,c
 12099  006C5E  0E86               	movlw	134
 12100  006C60  6E33               	movwf	(___flmul@a+2)^0,c
 12101  006C62  0E35               	movlw	53
 12102  006C64  6E34               	movwf	(___flmul@a+3)^0,c
 12103  006C66  C0F3  F02D         	movff	_tmr2_prescaler,___flmul@b
 12104  006C6A  C0F4  F02E         	movff	_tmr2_prescaler+1,___flmul@b+1
 12105  006C6E  C0F5  F02F         	movff	_tmr2_prescaler+2,___flmul@b+2
 12106  006C72  C0F6  F030         	movff	_tmr2_prescaler+3,___flmul@b+3
 12107  006C76  ECD5  F011         	call	___flmul	;wreg free
 12108  006C7A  C02D  F04A         	movff	?___flmul,___fldiv@a
 12109  006C7E  C02E  F04B         	movff	?___flmul+1,___fldiv@a+1
 12110  006C82  C02F  F04C         	movff	?___flmul+2,___fldiv@a+2
 12111  006C86  C030  F04D         	movff	?___flmul+3,___fldiv@a+3
 12112  006C8A  0E6F               	movlw	111
 12113  006C8C  6E46               	movwf	___fldiv@b^0,c
 12114  006C8E  0E12               	movlw	18
 12115  006C90  6E47               	movwf	(___fldiv@b+1)^0,c
 12116  006C92  0E83               	movlw	131
 12117  006C94  6E48               	movwf	(___fldiv@b+2)^0,c
 12118  006C96  0E3A               	movlw	58
 12119  006C98  6E49               	movwf	(___fldiv@b+3)^0,c
 12120  006C9A  EC27  F014         	call	___fldiv	;wreg free
 12121  006C9E  C046  F077         	movff	?___fldiv,___fltol@f1
 12122  006CA2  C047  F078         	movff	?___fldiv+1,___fltol@f1+1
 12123  006CA6  C048  F079         	movff	?___fldiv+2,___fltol@f1+2
 12124  006CAA  C049  F07A         	movff	?___fldiv+3,___fltol@f1+3
 12125  006CAE  ECB8  F03A         	call	___fltol	;wreg free
 12126  006CB2  C077  F0C0         	movff	?___fltol,update_pwm_duty_ccp1@new_duty
 12127  006CB6  C078  F0C1         	movff	?___fltol+1,update_pwm_duty_ccp1@new_duty+1
 12128  006CBA                     
 12129                           ;timer.c: 60:     lsbs_duty = (uint8_t) new_duty;
 12130  006CBA  C0C0  F0C2         	movff	update_pwm_duty_ccp1@new_duty,update_pwm_duty_ccp1@lsbs_duty
 12131  006CBE                     
 12132                           ;timer.c: 64:     if (lsbs_duty & 0x01) CCP1CON |= (1u << 4);
 12133  006CBE  0100               	movlb	0	; () banked
 12134  006CC0  A1C2               	btfss	update_pwm_duty_ccp1@lsbs_duty& (0+255),0,b
 12135  006CC2  EF65  F036         	goto	u6501
 12136  006CC6  EF68  F036         	goto	u6500
 12137  006CCA                     u6501:
 12138  006CCA  FFFF               	dw	65535	; assembler added errata NOP
 12139  006CCC  EF6C  F036         	goto	l5295
 12140  006CD0                     u6500:
 12141  006CD0  FFFF               	dw	65535	; assembler added errata NOP
 12142  006CD2                     
 12143                           ; BSR set to: 0
 12144  006CD2  88BD               	bsf	189,4,c	;volatile
 12145  006CD4  EF6E  F036         	goto	l5297
 12146  006CD8                     l5295:
 12147  006CD8  FFFF               	dw	65535	; assembler added errata NOP
 12148                           
 12149                           ; BSR set to: 0
 12150  006CDA  98BD               	bcf	189,4,c	;volatile
 12151  006CDC                     l5297:
 12152  006CDC  FFFF               	dw	65535	; assembler added errata NOP
 12153                           
 12154                           ; BSR set to: 0
 12155                           ;timer.c: 67:     if (lsbs_duty & 0x02) CCP1CON |= (1u << 5);
 12156  006CDE  A3C2               	btfss	update_pwm_duty_ccp1@lsbs_duty& (0+255),1,b
 12157  006CE0  EF74  F036         	goto	u6511
 12158  006CE4  EF77  F036         	goto	u6510
 12159  006CE8                     u6511:
 12160  006CE8  FFFF               	dw	65535	; assembler added errata NOP
 12161  006CEA  EF7B  F036         	goto	l5301
 12162  006CEE                     u6510:
 12163  006CEE  FFFF               	dw	65535	; assembler added errata NOP
 12164  006CF0                     
 12165                           ; BSR set to: 0
 12166  006CF0  8ABD               	bsf	189,5,c	;volatile
 12167  006CF2  EF7D  F036         	goto	l5303
 12168  006CF6                     l5301:
 12169  006CF6  FFFF               	dw	65535	; assembler added errata NOP
 12170                           
 12171                           ; BSR set to: 0
 12172  006CF8  9ABD               	bcf	189,5,c	;volatile
 12173  006CFA                     l5303:
 12174  006CFA  FFFF               	dw	65535	; assembler added errata NOP
 12175                           
 12176                           ; BSR set to: 0
 12177                           ;timer.c: 71:     CCPR1L = (uint8_t) (new_duty >> 2);
 12178  006CFC  C0C0  F0BE         	movff	update_pwm_duty_ccp1@new_duty,??_update_pwm_duty_ccp1
 12179  006D00  C0C1  F0BF         	movff	update_pwm_duty_ccp1@new_duty+1,??_update_pwm_duty_ccp1+1
 12180  006D04  90D8               	bcf	status,0,c
 12181  006D06  33BF               	rrcf	(??_update_pwm_duty_ccp1+1)& (0+255),f,b
 12182  006D08  33BE               	rrcf	??_update_pwm_duty_ccp1& (0+255),f,b
 12183  006D0A  90D8               	bcf	status,0,c
 12184  006D0C  33BF               	rrcf	(??_update_pwm_duty_ccp1+1)& (0+255),f,b
 12185  006D0E  33BE               	rrcf	??_update_pwm_duty_ccp1& (0+255),f,b
 12186  006D10  51BE               	movf	??_update_pwm_duty_ccp1& (0+255),w,b
 12187  006D12  6EBE               	movwf	190,c	;volatile
 12188  006D14                     
 12189                           ; BSR set to: 0
 12190  006D14  0012               	return		;funcret
 12191  006D16  FFFF               	dw	65535	; errata NOP
 12192  006D18                     __end_of_update_pwm_duty_ccp1:
 12193                           	callstack 0
 12194                           
 12195 ;; *************** function ___fldiv *****************
 12196 ;; Defined at:
 12197 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 12198 ;; Parameters:    Size  Location     Type
 12199 ;;  b               4   69[COMRAM] void 
 12200 ;;  a               4   73[COMRAM] void 
 12201 ;; Auto vars:     Size  Location     Type
 12202 ;;  grs             4   88[COMRAM] unsigned long 
 12203 ;;  rem             4   81[COMRAM] unsigned long 
 12204 ;;  new_exp         2   86[COMRAM] short 
 12205 ;;  aexp            1   93[COMRAM] unsigned char 
 12206 ;;  bexp            1   92[COMRAM] unsigned char 
 12207 ;;  sign            1   85[COMRAM] unsigned char 
 12208 ;; Return value:  Size  Location     Type
 12209 ;;                  4   69[COMRAM] unsigned char 
 12210 ;; Registers used:
 12211 ;;		wreg, status,2, status,0
 12212 ;; Tracked objects:
 12213 ;;		On entry : 0/0
 12214 ;;		On exit  : 0/0
 12215 ;;		Unchanged: 0/0
 12216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12217 ;;      Params:         8       0       0       0       0       0       0
 12218 ;;      Locals:        13       0       0       0       0       0       0
 12219 ;;      Temps:          4       0       0       0       0       0       0
 12220 ;;      Totals:        25       0       0       0       0       0       0
 12221 ;;Total ram usage:       25 bytes
 12222 ;; Hardware stack levels used:    1
 12223 ;; Hardware stack levels required when called:    1
 12224 ;; This function calls:
 12225 ;;		Nothing
 12226 ;; This function is called by:
 12227 ;;		_init_timer_2
 12228 ;;		_update_pwm_duty_ccp1
 12229 ;; This function uses a non-reentrant model
 12230 ;;
 12231                           
 12232                           	psect	text48
 12233  00284E                     __ptext48:
 12234                           	callstack 0
 12235  00284E                     ___fldiv:
 12236                           	callstack 0
 12237  00284E  FFFF               	dw	65535	; assembler added errata NOP
 12238  002850  5049               	movf	(___fldiv@b+3)^0,w,c
 12239  002852  0B80               	andlw	128
 12240  002854  6E56               	movwf	___fldiv@sign^0,c
 12241  002856  5049               	movf	(___fldiv@b+3)^0,w,c
 12242  002858  2449               	addwf	(___fldiv@b+3)^0,w,c
 12243  00285A  6E5D               	movwf	___fldiv@bexp^0,c
 12244  00285C  AE48               	btfss	(___fldiv@b+2)^0,7,c
 12245  00285E  EF33  F014         	goto	u5741
 12246  002862  EF36  F014         	goto	u5740
 12247  002866                     u5741:
 12248  002866  FFFF               	dw	65535	; assembler added errata NOP
 12249  002868  EF38  F014         	goto	l4823
 12250  00286C                     u5740:
 12251  00286C  FFFF               	dw	65535	; assembler added errata NOP
 12252  00286E  805D               	bsf	___fldiv@bexp^0,0,c
 12253  002870                     l4823:
 12254  002870  FFFF               	dw	65535	; assembler added errata NOP
 12255  002872  505D               	movf	___fldiv@bexp^0,w,c
 12256  002874  B4D8               	btfsc	status,2,c
 12257  002876  EF3F  F014         	goto	u5751
 12258  00287A  EF42  F014         	goto	u5750
 12259  00287E                     u5751:
 12260  00287E  FFFF               	dw	65535	; assembler added errata NOP
 12261  002880  EF5B  F014         	goto	l4833
 12262  002884                     u5750:
 12263  002884  FFFF               	dw	65535	; assembler added errata NOP
 12264  002886  285D               	incf	___fldiv@bexp^0,w,c
 12265  002888  A4D8               	btfss	status,2,c
 12266  00288A  EF49  F014         	goto	u5761
 12267  00288E  EF4C  F014         	goto	u5760
 12268  002892                     u5761:
 12269  002892  FFFF               	dw	65535	; assembler added errata NOP
 12270  002894  EF55  F014         	goto	l4829
 12271  002898                     u5760:
 12272  002898  FFFF               	dw	65535	; assembler added errata NOP
 12273  00289A  0E00               	movlw	0
 12274  00289C  6E46               	movwf	___fldiv@b^0,c
 12275  00289E  0E00               	movlw	0
 12276  0028A0  6E47               	movwf	(___fldiv@b+1)^0,c
 12277  0028A2  0E00               	movlw	0
 12278  0028A4  6E48               	movwf	(___fldiv@b+2)^0,c
 12279  0028A6  0E00               	movlw	0
 12280  0028A8  6E49               	movwf	(___fldiv@b+3)^0,c
 12281  0028AA                     l4829:
 12282  0028AA  FFFF               	dw	65535	; assembler added errata NOP
 12283  0028AC  8E48               	bsf	(___fldiv@b+2)^0,7,c
 12284  0028AE  0E00               	movlw	0
 12285  0028B0  6E49               	movwf	(___fldiv@b+3)^0,c
 12286  0028B2  EF64  F014         	goto	l4835
 12287  0028B6                     l4833:
 12288  0028B6  FFFF               	dw	65535	; assembler added errata NOP
 12289  0028B8  0E00               	movlw	0
 12290  0028BA  6E46               	movwf	___fldiv@b^0,c
 12291  0028BC  0E00               	movlw	0
 12292  0028BE  6E47               	movwf	(___fldiv@b+1)^0,c
 12293  0028C0  0E00               	movlw	0
 12294  0028C2  6E48               	movwf	(___fldiv@b+2)^0,c
 12295  0028C4  0E00               	movlw	0
 12296  0028C6  6E49               	movwf	(___fldiv@b+3)^0,c
 12297  0028C8                     l4835:
 12298  0028C8  FFFF               	dw	65535	; assembler added errata NOP
 12299  0028CA  504D               	movf	(___fldiv@a+3)^0,w,c
 12300  0028CC  0B80               	andlw	128
 12301  0028CE  1A56               	xorwf	___fldiv@sign^0,f,c
 12302  0028D0  504D               	movf	(___fldiv@a+3)^0,w,c
 12303  0028D2  244D               	addwf	(___fldiv@a+3)^0,w,c
 12304  0028D4  6E5E               	movwf	___fldiv@aexp^0,c
 12305  0028D6  AE4C               	btfss	(___fldiv@a+2)^0,7,c
 12306  0028D8  EF70  F014         	goto	u5771
 12307  0028DC  EF73  F014         	goto	u5770
 12308  0028E0                     u5771:
 12309  0028E0  FFFF               	dw	65535	; assembler added errata NOP
 12310  0028E2  EF75  F014         	goto	l4843
 12311  0028E6                     u5770:
 12312  0028E6  FFFF               	dw	65535	; assembler added errata NOP
 12313  0028E8  805E               	bsf	___fldiv@aexp^0,0,c
 12314  0028EA                     l4843:
 12315  0028EA  FFFF               	dw	65535	; assembler added errata NOP
 12316  0028EC  505E               	movf	___fldiv@aexp^0,w,c
 12317  0028EE  B4D8               	btfsc	status,2,c
 12318  0028F0  EF7C  F014         	goto	u5781
 12319  0028F4  EF7F  F014         	goto	u5780
 12320  0028F8                     u5781:
 12321  0028F8  FFFF               	dw	65535	; assembler added errata NOP
 12322  0028FA  EF98  F014         	goto	l4853
 12323  0028FE                     u5780:
 12324  0028FE  FFFF               	dw	65535	; assembler added errata NOP
 12325  002900  285E               	incf	___fldiv@aexp^0,w,c
 12326  002902  A4D8               	btfss	status,2,c
 12327  002904  EF86  F014         	goto	u5791
 12328  002908  EF89  F014         	goto	u5790
 12329  00290C                     u5791:
 12330  00290C  FFFF               	dw	65535	; assembler added errata NOP
 12331  00290E  EF92  F014         	goto	l4849
 12332  002912                     u5790:
 12333  002912  FFFF               	dw	65535	; assembler added errata NOP
 12334  002914  0E00               	movlw	0
 12335  002916  6E4A               	movwf	___fldiv@a^0,c
 12336  002918  0E00               	movlw	0
 12337  00291A  6E4B               	movwf	(___fldiv@a+1)^0,c
 12338  00291C  0E00               	movlw	0
 12339  00291E  6E4C               	movwf	(___fldiv@a+2)^0,c
 12340  002920  0E00               	movlw	0
 12341  002922  6E4D               	movwf	(___fldiv@a+3)^0,c
 12342  002924                     l4849:
 12343  002924  FFFF               	dw	65535	; assembler added errata NOP
 12344  002926  8E4C               	bsf	(___fldiv@a+2)^0,7,c
 12345  002928  0E00               	movlw	0
 12346  00292A  6E4D               	movwf	(___fldiv@a+3)^0,c
 12347  00292C  EFA1  F014         	goto	l4855
 12348  002930                     l4853:
 12349  002930  FFFF               	dw	65535	; assembler added errata NOP
 12350  002932  0E00               	movlw	0
 12351  002934  6E4A               	movwf	___fldiv@a^0,c
 12352  002936  0E00               	movlw	0
 12353  002938  6E4B               	movwf	(___fldiv@a+1)^0,c
 12354  00293A  0E00               	movlw	0
 12355  00293C  6E4C               	movwf	(___fldiv@a+2)^0,c
 12356  00293E  0E00               	movlw	0
 12357  002940  6E4D               	movwf	(___fldiv@a+3)^0,c
 12358  002942                     l4855:
 12359  002942  FFFF               	dw	65535	; assembler added errata NOP
 12360  002944  504A               	movf	___fldiv@a^0,w,c
 12361  002946  104B               	iorwf	(___fldiv@a+1)^0,w,c
 12362  002948  104C               	iorwf	(___fldiv@a+2)^0,w,c
 12363  00294A  104D               	iorwf	(___fldiv@a+3)^0,w,c
 12364  00294C  A4D8               	btfss	status,2,c
 12365  00294E  EFAB  F014         	goto	u5801
 12366  002952  EFAE  F014         	goto	u5800
 12367  002956                     u5801:
 12368  002956  FFFF               	dw	65535	; assembler added errata NOP
 12369  002958  EFC8  F014         	goto	l4867
 12370  00295C                     u5800:
 12371  00295C  FFFF               	dw	65535	; assembler added errata NOP
 12372  00295E  0E00               	movlw	0
 12373  002960  6E46               	movwf	___fldiv@b^0,c
 12374  002962  0E00               	movlw	0
 12375  002964  6E47               	movwf	(___fldiv@b+1)^0,c
 12376  002966  0E00               	movlw	0
 12377  002968  6E48               	movwf	(___fldiv@b+2)^0,c
 12378  00296A  0E00               	movlw	0
 12379  00296C  6E49               	movwf	(___fldiv@b+3)^0,c
 12380  00296E  0E80               	movlw	128
 12381  002970  1248               	iorwf	(___fldiv@b+2)^0,f,c
 12382  002972  0E7F               	movlw	127
 12383  002974  1249               	iorwf	(___fldiv@b+3)^0,f,c
 12384  002976                     l4861:
 12385  002976  FFFF               	dw	65535	; assembler added errata NOP
 12386  002978  5056               	movf	___fldiv@sign^0,w,c
 12387  00297A  1249               	iorwf	(___fldiv@b+3)^0,f,c
 12388  00297C  C046  F046         	movff	___fldiv@b,?___fldiv
 12389  002980  C047  F047         	movff	___fldiv@b+1,?___fldiv+1
 12390  002984  C048  F048         	movff	___fldiv@b+2,?___fldiv+2
 12391  002988  C049  F049         	movff	___fldiv@b+3,?___fldiv+3
 12392  00298C  EF3D  F016         	goto	l1015
 12393  002990                     l4867:
 12394  002990  FFFF               	dw	65535	; assembler added errata NOP
 12395  002992  505D               	movf	___fldiv@bexp^0,w,c
 12396  002994  A4D8               	btfss	status,2,c
 12397  002996  EFCF  F014         	goto	u5811
 12398  00299A  EFD2  F014         	goto	u5810
 12399  00299E                     u5811:
 12400  00299E  FFFF               	dw	65535	; assembler added errata NOP
 12401  0029A0  EFDD  F014         	goto	l4875
 12402  0029A4                     u5810:
 12403  0029A4  FFFF               	dw	65535	; assembler added errata NOP
 12404  0029A6  0E00               	movlw	0
 12405  0029A8  6E46               	movwf	?___fldiv^0,c
 12406  0029AA  0E00               	movlw	0
 12407  0029AC  6E47               	movwf	(?___fldiv+1)^0,c
 12408  0029AE  0E00               	movlw	0
 12409  0029B0  6E48               	movwf	(?___fldiv+2)^0,c
 12410  0029B2  0E00               	movlw	0
 12411  0029B4  6E49               	movwf	(?___fldiv+3)^0,c
 12412  0029B6  EF3D  F016         	goto	l1015
 12413  0029BA                     l4875:
 12414  0029BA  FFFF               	dw	65535	; assembler added errata NOP
 12415  0029BC  505E               	movf	___fldiv@aexp^0,w,c
 12416  0029BE  C05D  F04E         	movff	___fldiv@bexp,??___fldiv
 12417  0029C2  6A4F               	clrf	(??___fldiv+1)^0,c
 12418  0029C4  5E4E               	subwf	??___fldiv^0,f,c
 12419  0029C6  0E00               	movlw	0
 12420  0029C8  5A4F               	subwfb	(??___fldiv+1)^0,f,c
 12421  0029CA  0E7F               	movlw	127
 12422  0029CC  244E               	addwf	??___fldiv^0,w,c
 12423  0029CE  6E57               	movwf	___fldiv@new_exp^0,c
 12424  0029D0  0E00               	movlw	0
 12425  0029D2  204F               	addwfc	(??___fldiv+1)^0,w,c
 12426  0029D4  6E58               	movwf	(___fldiv@new_exp+1)^0,c
 12427  0029D6  C046  F052         	movff	___fldiv@b,___fldiv@rem
 12428  0029DA  C047  F053         	movff	___fldiv@b+1,___fldiv@rem+1
 12429  0029DE  C048  F054         	movff	___fldiv@b+2,___fldiv@rem+2
 12430  0029E2  C049  F055         	movff	___fldiv@b+3,___fldiv@rem+3
 12431  0029E6  0E00               	movlw	0
 12432  0029E8  6E46               	movwf	___fldiv@b^0,c
 12433  0029EA  0E00               	movlw	0
 12434  0029EC  6E47               	movwf	(___fldiv@b+1)^0,c
 12435  0029EE  0E00               	movlw	0
 12436  0029F0  6E48               	movwf	(___fldiv@b+2)^0,c
 12437  0029F2  0E00               	movlw	0
 12438  0029F4  6E49               	movwf	(___fldiv@b+3)^0,c
 12439  0029F6  0E00               	movlw	0
 12440  0029F8  6E59               	movwf	___fldiv@grs^0,c
 12441  0029FA  0E00               	movlw	0
 12442  0029FC  6E5A               	movwf	(___fldiv@grs+1)^0,c
 12443  0029FE  0E00               	movlw	0
 12444  002A00  6E5B               	movwf	(___fldiv@grs+2)^0,c
 12445  002A02  0E00               	movlw	0
 12446  002A04  6E5C               	movwf	(___fldiv@grs+3)^0,c
 12447  002A06  0E00               	movlw	0
 12448  002A08  6E5E               	movwf	___fldiv@aexp^0,c
 12449  002A0A  EF49  F015         	goto	l1017
 12450  002A0E                     l4885:
 12451  002A0E  FFFF               	dw	65535	; assembler added errata NOP
 12452  002A10  505E               	movf	___fldiv@aexp^0,w,c
 12453  002A12  B4D8               	btfsc	status,2,c
 12454  002A14  EF0E  F015         	goto	u5821
 12455  002A18  EF11  F015         	goto	u5820
 12456  002A1C                     u5821:
 12457  002A1C  FFFF               	dw	65535	; assembler added errata NOP
 12458  002A1E  EF2C  F015         	goto	l4893
 12459  002A22                     u5820:
 12460  002A22  FFFF               	dw	65535	; assembler added errata NOP
 12461  002A24  90D8               	bcf	status,0,c
 12462  002A26  3652               	rlcf	___fldiv@rem^0,f,c
 12463  002A28  3653               	rlcf	(___fldiv@rem+1)^0,f,c
 12464  002A2A  3654               	rlcf	(___fldiv@rem+2)^0,f,c
 12465  002A2C  3655               	rlcf	(___fldiv@rem+3)^0,f,c
 12466  002A2E  90D8               	bcf	status,0,c
 12467  002A30  3646               	rlcf	___fldiv@b^0,f,c
 12468  002A32  3647               	rlcf	(___fldiv@b+1)^0,f,c
 12469  002A34  3648               	rlcf	(___fldiv@b+2)^0,f,c
 12470  002A36  3649               	rlcf	(___fldiv@b+3)^0,f,c
 12471  002A38  AE5C               	btfss	(___fldiv@grs+3)^0,7,c
 12472  002A3A  EF21  F015         	goto	u5831
 12473  002A3E  EF24  F015         	goto	u5830
 12474  002A42                     u5831:
 12475  002A42  FFFF               	dw	65535	; assembler added errata NOP
 12476  002A44  EF26  F015         	goto	l1020
 12477  002A48                     u5830:
 12478  002A48  FFFF               	dw	65535	; assembler added errata NOP
 12479  002A4A  8046               	bsf	___fldiv@b^0,0,c
 12480  002A4C                     l1020:
 12481  002A4C  FFFF               	dw	65535	; assembler added errata NOP
 12482  002A4E  90D8               	bcf	status,0,c
 12483  002A50  3659               	rlcf	___fldiv@grs^0,f,c
 12484  002A52  365A               	rlcf	(___fldiv@grs+1)^0,f,c
 12485  002A54  365B               	rlcf	(___fldiv@grs+2)^0,f,c
 12486  002A56  365C               	rlcf	(___fldiv@grs+3)^0,f,c
 12487  002A58                     l4893:
 12488  002A58  FFFF               	dw	65535	; assembler added errata NOP
 12489  002A5A  504A               	movf	___fldiv@a^0,w,c
 12490  002A5C  5C52               	subwf	___fldiv@rem^0,w,c
 12491  002A5E  504B               	movf	(___fldiv@a+1)^0,w,c
 12492  002A60  5853               	subwfb	(___fldiv@rem+1)^0,w,c
 12493  002A62  504C               	movf	(___fldiv@a+2)^0,w,c
 12494  002A64  5854               	subwfb	(___fldiv@rem+2)^0,w,c
 12495  002A66  504D               	movf	(___fldiv@a+3)^0,w,c
 12496  002A68  5855               	subwfb	(___fldiv@rem+3)^0,w,c
 12497  002A6A  A0D8               	btfss	status,0,c
 12498  002A6C  EF3A  F015         	goto	u5841
 12499  002A70  EF3D  F015         	goto	u5840
 12500  002A74                     u5841:
 12501  002A74  FFFF               	dw	65535	; assembler added errata NOP
 12502  002A76  EF47  F015         	goto	l4899
 12503  002A7A                     u5840:
 12504  002A7A  FFFF               	dw	65535	; assembler added errata NOP
 12505  002A7C  8C5C               	bsf	(___fldiv@grs+3)^0,6,c
 12506  002A7E  504A               	movf	___fldiv@a^0,w,c
 12507  002A80  5E52               	subwf	___fldiv@rem^0,f,c
 12508  002A82  504B               	movf	(___fldiv@a+1)^0,w,c
 12509  002A84  5A53               	subwfb	(___fldiv@rem+1)^0,f,c
 12510  002A86  504C               	movf	(___fldiv@a+2)^0,w,c
 12511  002A88  5A54               	subwfb	(___fldiv@rem+2)^0,f,c
 12512  002A8A  504D               	movf	(___fldiv@a+3)^0,w,c
 12513  002A8C  5A55               	subwfb	(___fldiv@rem+3)^0,f,c
 12514  002A8E                     l4899:
 12515  002A8E  FFFF               	dw	65535	; assembler added errata NOP
 12516  002A90  2A5E               	incf	___fldiv@aexp^0,f,c
 12517  002A92                     l1017:
 12518  002A92  FFFF               	dw	65535	; assembler added errata NOP
 12519  002A94  0E19               	movlw	25
 12520  002A96  645E               	cpfsgt	___fldiv@aexp^0,c
 12521  002A98  EF50  F015         	goto	u5851
 12522  002A9C  EF53  F015         	goto	u5850
 12523  002AA0                     u5851:
 12524  002AA0  FFFF               	dw	65535	; assembler added errata NOP
 12525  002AA2  EF07  F015         	goto	l4885
 12526  002AA6                     u5850:
 12527  002AA6  FFFF               	dw	65535	; assembler added errata NOP
 12528  002AA8  5052               	movf	___fldiv@rem^0,w,c
 12529  002AAA  1053               	iorwf	(___fldiv@rem+1)^0,w,c
 12530  002AAC  1054               	iorwf	(___fldiv@rem+2)^0,w,c
 12531  002AAE  1055               	iorwf	(___fldiv@rem+3)^0,w,c
 12532  002AB0  B4D8               	btfsc	status,2,c
 12533  002AB2  EF5D  F015         	goto	u5861
 12534  002AB6  EF60  F015         	goto	u5860
 12535  002ABA                     u5861:
 12536  002ABA  FFFF               	dw	65535	; assembler added errata NOP
 12537  002ABC  EF7D  F015         	goto	l4911
 12538  002AC0                     u5860:
 12539  002AC0  FFFF               	dw	65535	; assembler added errata NOP
 12540  002AC2  8059               	bsf	___fldiv@grs^0,0,c
 12541  002AC4  EF7D  F015         	goto	l4911
 12542  002AC8                     l4905:
 12543  002AC8  FFFF               	dw	65535	; assembler added errata NOP
 12544  002ACA  90D8               	bcf	status,0,c
 12545  002ACC  3646               	rlcf	___fldiv@b^0,f,c
 12546  002ACE  3647               	rlcf	(___fldiv@b+1)^0,f,c
 12547  002AD0  3648               	rlcf	(___fldiv@b+2)^0,f,c
 12548  002AD2  3649               	rlcf	(___fldiv@b+3)^0,f,c
 12549  002AD4  AE5C               	btfss	(___fldiv@grs+3)^0,7,c
 12550  002AD6  EF6F  F015         	goto	u5871
 12551  002ADA  EF72  F015         	goto	u5870
 12552  002ADE                     u5871:
 12553  002ADE  FFFF               	dw	65535	; assembler added errata NOP
 12554  002AE0  EF74  F015         	goto	l1026
 12555  002AE4                     u5870:
 12556  002AE4  FFFF               	dw	65535	; assembler added errata NOP
 12557  002AE6  8046               	bsf	___fldiv@b^0,0,c
 12558  002AE8                     l1026:
 12559  002AE8  FFFF               	dw	65535	; assembler added errata NOP
 12560  002AEA  90D8               	bcf	status,0,c
 12561  002AEC  3659               	rlcf	___fldiv@grs^0,f,c
 12562  002AEE  365A               	rlcf	(___fldiv@grs+1)^0,f,c
 12563  002AF0  365B               	rlcf	(___fldiv@grs+2)^0,f,c
 12564  002AF2  365C               	rlcf	(___fldiv@grs+3)^0,f,c
 12565  002AF4  0657               	decf	___fldiv@new_exp^0,f,c
 12566  002AF6  A0D8               	btfss	status,0,c
 12567  002AF8  0658               	decf	(___fldiv@new_exp+1)^0,f,c
 12568  002AFA                     l4911:
 12569  002AFA  FFFF               	dw	65535	; assembler added errata NOP
 12570  002AFC  AE48               	btfss	(___fldiv@b+2)^0,7,c
 12571  002AFE  EF83  F015         	goto	u5881
 12572  002B02  EF86  F015         	goto	u5880
 12573  002B06                     u5881:
 12574  002B06  FFFF               	dw	65535	; assembler added errata NOP
 12575  002B08  EF64  F015         	goto	l4905
 12576  002B0C                     u5880:
 12577  002B0C  FFFF               	dw	65535	; assembler added errata NOP
 12578  002B0E  0E00               	movlw	0
 12579  002B10  6E5E               	movwf	___fldiv@aexp^0,c
 12580  002B12  AE5C               	btfss	(___fldiv@grs+3)^0,7,c
 12581  002B14  EF8E  F015         	goto	u5891
 12582  002B18  EF91  F015         	goto	u5890
 12583  002B1C                     u5891:
 12584  002B1C  FFFF               	dw	65535	; assembler added errata NOP
 12585  002B1E  EFBC  F015         	goto	l1028
 12586  002B22                     u5890:
 12587  002B22  FFFF               	dw	65535	; assembler added errata NOP
 12588  002B24  0EFF               	movlw	255
 12589  002B26  1459               	andwf	___fldiv@grs^0,w,c
 12590  002B28  6E4E               	movwf	??___fldiv^0,c
 12591  002B2A  0EFF               	movlw	255
 12592  002B2C  145A               	andwf	(___fldiv@grs+1)^0,w,c
 12593  002B2E  6E4F               	movwf	(??___fldiv+1)^0,c
 12594  002B30  0EFF               	movlw	255
 12595  002B32  145B               	andwf	(___fldiv@grs+2)^0,w,c
 12596  002B34  6E50               	movwf	(??___fldiv+2)^0,c
 12597  002B36  0E7F               	movlw	127
 12598  002B38  145C               	andwf	(___fldiv@grs+3)^0,w,c
 12599  002B3A  6E51               	movwf	(??___fldiv+3)^0,c
 12600  002B3C  504E               	movf	??___fldiv^0,w,c
 12601  002B3E  104F               	iorwf	(??___fldiv+1)^0,w,c
 12602  002B40  1050               	iorwf	(??___fldiv+2)^0,w,c
 12603  002B42  1051               	iorwf	(??___fldiv+3)^0,w,c
 12604  002B44  B4D8               	btfsc	status,2,c
 12605  002B46  EFA7  F015         	goto	u5901
 12606  002B4A  EFAA  F015         	goto	u5900
 12607  002B4E                     u5901:
 12608  002B4E  FFFF               	dw	65535	; assembler added errata NOP
 12609  002B50  EFB0  F015         	goto	l1029
 12610  002B54                     u5900:
 12611  002B54  FFFF               	dw	65535	; assembler added errata NOP
 12612  002B56                     l4919:
 12613  002B56  FFFF               	dw	65535	; assembler added errata NOP
 12614  002B58  0E01               	movlw	1
 12615  002B5A  6E5E               	movwf	___fldiv@aexp^0,c
 12616  002B5C  EFBC  F015         	goto	l1028
 12617  002B60                     l1029:
 12618  002B60  FFFF               	dw	65535	; assembler added errata NOP
 12619  002B62  A046               	btfss	___fldiv@b^0,0,c
 12620  002B64  EFB6  F015         	goto	u5911
 12621  002B68  EFB9  F015         	goto	u5910
 12622  002B6C                     u5911:
 12623  002B6C  FFFF               	dw	65535	; assembler added errata NOP
 12624  002B6E  EFBC  F015         	goto	l1028
 12625  002B72                     u5910:
 12626  002B72  FFFF               	dw	65535	; assembler added errata NOP
 12627  002B74  EFAB  F015         	goto	l4919
 12628  002B78                     l1028:
 12629  002B78  FFFF               	dw	65535	; assembler added errata NOP
 12630  002B7A  505E               	movf	___fldiv@aexp^0,w,c
 12631  002B7C  B4D8               	btfsc	status,2,c
 12632  002B7E  EFC3  F015         	goto	u5921
 12633  002B82  EFC6  F015         	goto	u5920
 12634  002B86                     u5921:
 12635  002B86  FFFF               	dw	65535	; assembler added errata NOP
 12636  002B88  EFED  F015         	goto	l4931
 12637  002B8C                     u5920:
 12638  002B8C  FFFF               	dw	65535	; assembler added errata NOP
 12639  002B8E  0E01               	movlw	1
 12640  002B90  2646               	addwf	___fldiv@b^0,f,c
 12641  002B92  0E00               	movlw	0
 12642  002B94  2247               	addwfc	(___fldiv@b+1)^0,f,c
 12643  002B96  2248               	addwfc	(___fldiv@b+2)^0,f,c
 12644  002B98  2249               	addwfc	(___fldiv@b+3)^0,f,c
 12645  002B9A  A049               	btfss	(___fldiv@b+3)^0,0,c
 12646  002B9C  EFD2  F015         	goto	u5931
 12647  002BA0  EFD5  F015         	goto	u5930
 12648  002BA4                     u5931:
 12649  002BA4  FFFF               	dw	65535	; assembler added errata NOP
 12650  002BA6  EFED  F015         	goto	l4931
 12651  002BAA                     u5930:
 12652  002BAA  FFFF               	dw	65535	; assembler added errata NOP
 12653  002BAC  C046  F04E         	movff	___fldiv@b,??___fldiv
 12654  002BB0  C047  F04F         	movff	___fldiv@b+1,??___fldiv+1
 12655  002BB4  C048  F050         	movff	___fldiv@b+2,??___fldiv+2
 12656  002BB8  C049  F051         	movff	___fldiv@b+3,??___fldiv+3
 12657  002BBC  3451               	rlcf	(??___fldiv+3)^0,w,c
 12658  002BBE  3251               	rrcf	(??___fldiv+3)^0,f,c
 12659  002BC0  3250               	rrcf	(??___fldiv+2)^0,f,c
 12660  002BC2  324F               	rrcf	(??___fldiv+1)^0,f,c
 12661  002BC4  324E               	rrcf	??___fldiv^0,f,c
 12662  002BC6  C04E  F046         	movff	??___fldiv,___fldiv@b
 12663  002BCA  C04F  F047         	movff	??___fldiv+1,___fldiv@b+1
 12664  002BCE  C050  F048         	movff	??___fldiv+2,___fldiv@b+2
 12665  002BD2  C051  F049         	movff	??___fldiv+3,___fldiv@b+3
 12666  002BD6  4A57               	infsnz	___fldiv@new_exp^0,f,c
 12667  002BD8  2A58               	incf	(___fldiv@new_exp+1)^0,f,c
 12668  002BDA                     l4931:
 12669  002BDA  FFFF               	dw	65535	; assembler added errata NOP
 12670  002BDC  BE58               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12671  002BDE  EFF9  F015         	goto	u5941
 12672  002BE2  5058               	movf	(___fldiv@new_exp+1)^0,w,c
 12673  002BE4  E109               	bnz	u5940
 12674  002BE6  2857               	incf	___fldiv@new_exp^0,w,c
 12675  002BE8  A0D8               	btfss	status,0,c
 12676  002BEA  EFF9  F015         	goto	u5941
 12677  002BEE  EFFC  F015         	goto	u5940
 12678  002BF2                     u5941:
 12679  002BF2  FFFF               	dw	65535	; assembler added errata NOP
 12680  002BF4  EF08  F016         	goto	l4935
 12681  002BF8                     u5940:
 12682  002BF8  FFFF               	dw	65535	; assembler added errata NOP
 12683  002BFA  0E00               	movlw	0
 12684  002BFC  6E58               	movwf	(___fldiv@new_exp+1)^0,c
 12685  002BFE  6857               	setf	___fldiv@new_exp^0,c
 12686  002C00  0E00               	movlw	0
 12687  002C02  6E46               	movwf	___fldiv@b^0,c
 12688  002C04  0E00               	movlw	0
 12689  002C06  6E47               	movwf	(___fldiv@b+1)^0,c
 12690  002C08  0E00               	movlw	0
 12691  002C0A  6E48               	movwf	(___fldiv@b+2)^0,c
 12692  002C0C  0E00               	movlw	0
 12693  002C0E  6E49               	movwf	(___fldiv@b+3)^0,c
 12694  002C10                     l4935:
 12695  002C10  FFFF               	dw	65535	; assembler added errata NOP
 12696  002C12  BE58               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12697  002C14  EF17  F016         	goto	u5950
 12698  002C18  5058               	movf	(___fldiv@new_exp+1)^0,w,c
 12699  002C1A  E106               	bnz	u5951
 12700  002C1C  0457               	decf	___fldiv@new_exp^0,w,c
 12701  002C1E  B0D8               	btfsc	status,0,c
 12702  002C20  EF14  F016         	goto	u5951
 12703  002C24  EF17  F016         	goto	u5950
 12704  002C28                     u5951:
 12705  002C28  FFFF               	dw	65535	; assembler added errata NOP
 12706  002C2A  EF26  F016         	goto	l4939
 12707  002C2E                     u5950:
 12708  002C2E  FFFF               	dw	65535	; assembler added errata NOP
 12709  002C30  0E00               	movlw	0
 12710  002C32  6E58               	movwf	(___fldiv@new_exp+1)^0,c
 12711  002C34  0E00               	movlw	0
 12712  002C36  6E57               	movwf	___fldiv@new_exp^0,c
 12713  002C38  0E00               	movlw	0
 12714  002C3A  6E46               	movwf	___fldiv@b^0,c
 12715  002C3C  0E00               	movlw	0
 12716  002C3E  6E47               	movwf	(___fldiv@b+1)^0,c
 12717  002C40  0E00               	movlw	0
 12718  002C42  6E48               	movwf	(___fldiv@b+2)^0,c
 12719  002C44  0E00               	movlw	0
 12720  002C46  6E49               	movwf	(___fldiv@b+3)^0,c
 12721  002C48  0E00               	movlw	0
 12722  002C4A  6E56               	movwf	___fldiv@sign^0,c
 12723  002C4C                     l4939:
 12724  002C4C  FFFF               	dw	65535	; assembler added errata NOP
 12725  002C4E  C057  F05D         	movff	___fldiv@new_exp,___fldiv@bexp
 12726  002C52  A05D               	btfss	___fldiv@bexp^0,0,c
 12727  002C54  EF2E  F016         	goto	u5961
 12728  002C58  EF31  F016         	goto	u5960
 12729  002C5C                     u5961:
 12730  002C5C  FFFF               	dw	65535	; assembler added errata NOP
 12731  002C5E  EF35  F016         	goto	l4945
 12732  002C62                     u5960:
 12733  002C62  FFFF               	dw	65535	; assembler added errata NOP
 12734  002C64  8E48               	bsf	(___fldiv@b+2)^0,7,c
 12735  002C66  EF37  F016         	goto	l4947
 12736  002C6A                     l4945:
 12737  002C6A  FFFF               	dw	65535	; assembler added errata NOP
 12738  002C6C  9E48               	bcf	(___fldiv@b+2)^0,7,c
 12739  002C6E                     l4947:
 12740  002C6E  FFFF               	dw	65535	; assembler added errata NOP
 12741  002C70  90D8               	bcf	status,0,c
 12742  002C72  305D               	rrcf	___fldiv@bexp^0,w,c
 12743  002C74  6E49               	movwf	(___fldiv@b+3)^0,c
 12744  002C76  EFBB  F014         	goto	l4861
 12745  002C7A                     l1015:
 12746  002C7A  FFFF               	dw	65535	; assembler added errata NOP
 12747  002C7C  0012               	return		;funcret
 12748  002C7E  FFFF               	dw	65535	; errata NOP
 12749  002C80                     __end_of___fldiv:
 12750                           	callstack 0
 12751                           
 12752 ;; *************** function _init_USART *****************
 12753 ;; Defined at:
 12754 ;;		line 13 in file "serial_rs232.c"
 12755 ;; Parameters:    Size  Location     Type
 12756 ;;		None
 12757 ;; Auto vars:     Size  Location     Type
 12758 ;;		None
 12759 ;; Return value:  Size  Location     Type
 12760 ;;                  1    wreg      void 
 12761 ;; Registers used:
 12762 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12763 ;; Tracked objects:
 12764 ;;		On entry : 0/0
 12765 ;;		On exit  : 0/0
 12766 ;;		Unchanged: 0/0
 12767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12768 ;;      Params:         0       0       0       0       0       0       0
 12769 ;;      Locals:         0       0       0       0       0       0       0
 12770 ;;      Temps:          0       0       0       0       0       0       0
 12771 ;;      Totals:         0       0       0       0       0       0       0
 12772 ;;Total ram usage:        0 bytes
 12773 ;; Hardware stack levels used:    1
 12774 ;; Hardware stack levels required when called:    4
 12775 ;; This function calls:
 12776 ;;		___fltol
 12777 ;;		_roundf
 12778 ;; This function is called by:
 12779 ;;		_main
 12780 ;; This function uses a non-reentrant model
 12781 ;;
 12782                           
 12783                           	psect	text49
 12784  0063B8                     __ptext49:
 12785                           	callstack 0
 12786  0063B8                     _init_USART:
 12787                           	callstack 0
 12788  0063B8  FFFF               	dw	65535	; assembler added errata NOP
 12789  0063BA                     
 12790                           ;serial_rs232.c: 24:     SPBRG = roundf(((fosc / desired_baudrate) / 16) - 1);
 12791  0063BA  0E55               	movlw	85
 12792  0063BC  0100               	movlb	0	; () banked
 12793  0063BE  6FC8               	movwf	roundf@x& (0+255),b
 12794  0063C0  0E55               	movlw	85
 12795  0063C2  6FC9               	movwf	(roundf@x+1)& (0+255),b
 12796  0063C4  0EC8               	movlw	200
 12797  0063C6  6FCA               	movwf	(roundf@x+2)& (0+255),b
 12798  0063C8  0E41               	movlw	65
 12799  0063CA  6FCB               	movwf	(roundf@x+3)& (0+255),b
 12800  0063CC  EC40  F016         	call	_roundf	;wreg free
 12801  0063D0  C0C8  F077         	movff	?_roundf,___fltol@f1
 12802  0063D4  C0C9  F078         	movff	?_roundf+1,___fltol@f1+1
 12803  0063D8  C0CA  F079         	movff	?_roundf+2,___fltol@f1+2
 12804  0063DC  C0CB  F07A         	movff	?_roundf+3,___fltol@f1+3
 12805  0063E0  ECB8  F03A         	call	___fltol	;wreg free
 12806  0063E4  5077               	movf	?___fltol^0,w,c
 12807  0063E6  6EAF               	movwf	175,c	;volatile
 12808  0063E8                     
 12809                           ;serial_rs232.c: 28:     TXSTAbits.TX9 = 0;
 12810  0063E8  9CAC               	bcf	172,6,c	;volatile
 12811  0063EA                     
 12812                           ;serial_rs232.c: 29:     TXSTAbits.TXEN = 1;
 12813  0063EA  8AAC               	bsf	172,5,c	;volatile
 12814  0063EC                     
 12815                           ;serial_rs232.c: 30:     TXSTAbits.SYNC =0;
 12816  0063EC  98AC               	bcf	172,4,c	;volatile
 12817  0063EE                     
 12818                           ;serial_rs232.c: 31:     TXSTAbits.BRGH = 1;
 12819  0063EE  84AC               	bsf	172,2,c	;volatile
 12820  0063F0                     
 12821                           ;serial_rs232.c: 33:     RCSTAbits.SPEN = 1;
 12822  0063F0  8EAB               	bsf	171,7,c	;volatile
 12823  0063F2                     
 12824                           ;serial_rs232.c: 34:     RCSTAbits.RX9 = 0;
 12825  0063F2  9CAB               	bcf	171,6,c	;volatile
 12826  0063F4                     
 12827                           ;serial_rs232.c: 35:     RCSTAbits.CREN = 1;
 12828  0063F4  88AB               	bsf	171,4,c	;volatile
 12829  0063F6  0012               	return		;funcret
 12830  0063F8  FFFF               	dw	65535	; errata NOP
 12831  0063FA                     __end_of_init_USART:
 12832                           	callstack 0
 12833                           
 12834 ;; *************** function _roundf *****************
 12835 ;; Defined at:
 12836 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\roundf.c"
 12837 ;; Parameters:    Size  Location     Type
 12838 ;;  x               4   16[BANK0 ] float 
 12839 ;; Auto vars:     Size  Location     Type
 12840 ;;  y               4   38[BANK0 ] float 
 12841 ;;  u               4   34[BANK0 ] struct .
 12842 ;;  e               2   28[BANK0 ] int 
 12843 ;; Return value:  Size  Location     Type
 12844 ;;                  4   16[BANK0 ] float 
 12845 ;; Registers used:
 12846 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12847 ;; Tracked objects:
 12848 ;;		On entry : 0/0
 12849 ;;		On exit  : 0/0
 12850 ;;		Unchanged: 0/0
 12851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12852 ;;      Params:         0       4       0       0       0       0       0
 12853 ;;      Locals:         0      18       0       0       0       0       0
 12854 ;;      Temps:          0       4       0       0       0       0       0
 12855 ;;      Totals:         0      26       0       0       0       0       0
 12856 ;;Total ram usage:       26 bytes
 12857 ;; Hardware stack levels used:    1
 12858 ;; Hardware stack levels required when called:    3
 12859 ;; This function calls:
 12860 ;;		___fladd
 12861 ;;		___flge
 12862 ;;		___flmul
 12863 ;;		___flneg
 12864 ;;		___flsub
 12865 ;; This function is called by:
 12866 ;;		_init_USART
 12867 ;; This function uses a non-reentrant model
 12868 ;;
 12869                           
 12870                           	psect	text50
 12871  002C80                     __ptext50:
 12872                           	callstack 0
 12873  002C80                     _roundf:
 12874                           	callstack 0
 12875  002C80  FFFF               	dw	65535	; assembler added errata NOP
 12876  002C82  C080  F0DA         	movff	roundf@F525,roundf@u
 12877  002C86  C081  F0DB         	movff	roundf@F525+1,roundf@u+1
 12878  002C8A  C082  F0DC         	movff	roundf@F525+2,roundf@u+2
 12879  002C8E  C083  F0DD         	movff	roundf@F525+3,roundf@u+3
 12880  002C92  C0C8  F0DA         	movff	roundf@x,roundf@u
 12881  002C96  C0C9  F0DB         	movff	roundf@x+1,roundf@u+1
 12882  002C9A  C0CA  F0DC         	movff	roundf@x+2,roundf@u+2
 12883  002C9E  C0CB  F0DD         	movff	roundf@x+3,roundf@u+3
 12884  002CA2  C0DA  F0CC         	movff	roundf@u,??_roundf
 12885  002CA6  C0DB  F0CD         	movff	roundf@u+1,??_roundf+1
 12886  002CAA  C0DC  F0CE         	movff	roundf@u+2,??_roundf+2
 12887  002CAE  C0DD  F0CF         	movff	roundf@u+3,??_roundf+3
 12888  002CB2  0E18               	movlw	24
 12889  002CB4  EF63  F016         	goto	u6400
 12890  002CB8                     u6405:
 12891  002CB8  FFFF               	dw	65535	; assembler added errata NOP
 12892  002CBA  0100               	movlb	0	; () banked
 12893  002CBC  90D8               	bcf	status,0,c
 12894  002CBE  33CF               	rrcf	(??_roundf+3)& (0+255),f,b
 12895  002CC0  33CE               	rrcf	(??_roundf+2)& (0+255),f,b
 12896  002CC2  33CD               	rrcf	(??_roundf+1)& (0+255),f,b
 12897  002CC4  33CC               	rrcf	??_roundf& (0+255),f,b
 12898  002CC6                     u6400:
 12899  002CC6  FFFF               	dw	65535	; assembler added errata NOP
 12900  002CC8  2EE8               	decfsz	wreg,f,c
 12901  002CCA  EF5C  F016         	goto	u6405
 12902  002CCE  51CC               	movf	??_roundf& (0+255),w,b
 12903  002CD0  6FD4               	movwf	roundf@e& (0+255),b
 12904  002CD2  6BD5               	clrf	(roundf@e+1)& (0+255),b
 12905  002CD4  BFD5               	btfsc	(roundf@e+1)& (0+255),7,b
 12906  002CD6  EF76  F016         	goto	u6411
 12907  002CDA  51D5               	movf	(roundf@e+1)& (0+255),w,b
 12908  002CDC  E10A               	bnz	u6410
 12909  002CDE  0E96               	movlw	150
 12910  002CE0  5DD4               	subwf	roundf@e& (0+255),w,b
 12911  002CE2  A0D8               	btfss	status,0,c
 12912  002CE4  EF76  F016         	goto	u6411
 12913  002CE8  EF79  F016         	goto	u6410
 12914  002CEC                     u6411:
 12915  002CEC  FFFF               	dw	65535	; assembler added errata NOP
 12916  002CEE  EF84  F016         	goto	l5225
 12917  002CF2                     u6410:
 12918  002CF2  FFFF               	dw	65535	; assembler added errata NOP
 12919  002CF4                     
 12920                           ; BSR set to: 0
 12921  002CF4  C0C8  F0C8         	movff	roundf@x,?_roundf
 12922  002CF8  C0C9  F0C9         	movff	roundf@x+1,?_roundf+1
 12923  002CFC  C0CA  F0CA         	movff	roundf@x+2,?_roundf+2
 12924  002D00  C0CB  F0CB         	movff	roundf@x+3,?_roundf+3
 12925  002D04  EF36  F018         	goto	l1119
 12926  002D08                     l5225:
 12927  002D08  FFFF               	dw	65535	; assembler added errata NOP
 12928                           
 12929                           ; BSR set to: 0
 12930  002D0A  C0DA  F0CC         	movff	roundf@u,??_roundf
 12931  002D0E  C0DB  F0CD         	movff	roundf@u+1,??_roundf+1
 12932  002D12  C0DC  F0CE         	movff	roundf@u+2,??_roundf+2
 12933  002D16  C0DD  F0CF         	movff	roundf@u+3,??_roundf+3
 12934  002D1A  0E20               	movlw	32
 12935  002D1C  EF96  F016         	goto	u6420
 12936  002D20                     u6425:
 12937  002D20  FFFF               	dw	65535	; assembler added errata NOP
 12938  002D22  90D8               	bcf	status,0,c
 12939  002D24  33CF               	rrcf	(??_roundf+3)& (0+255),f,b
 12940  002D26  33CE               	rrcf	(??_roundf+2)& (0+255),f,b
 12941  002D28  33CD               	rrcf	(??_roundf+1)& (0+255),f,b
 12942  002D2A  33CC               	rrcf	??_roundf& (0+255),f,b
 12943  002D2C                     u6420:
 12944  002D2C  FFFF               	dw	65535	; assembler added errata NOP
 12945  002D2E  2EE8               	decfsz	wreg,f,c
 12946  002D30  EF90  F016         	goto	u6425
 12947  002D34  51CC               	movf	??_roundf& (0+255),w,b
 12948  002D36  11CD               	iorwf	(??_roundf+1)& (0+255),w,b
 12949  002D38  11CE               	iorwf	(??_roundf+2)& (0+255),w,b
 12950  002D3A  11CF               	iorwf	(??_roundf+3)& (0+255),w,b
 12951  002D3C  B4D8               	btfsc	status,2,c
 12952  002D3E  EFA3  F016         	goto	u6431
 12953  002D42  EFA6  F016         	goto	u6430
 12954  002D46                     u6431:
 12955  002D46  FFFF               	dw	65535	; assembler added errata NOP
 12956  002D48  EFB9  F016         	goto	l5229
 12957  002D4C                     u6430:
 12958  002D4C  FFFF               	dw	65535	; assembler added errata NOP
 12959  002D4E                     
 12960                           ; BSR set to: 0
 12961  002D4E  C0C8  F001         	movff	roundf@x,___flneg@f1
 12962  002D52  C0C9  F002         	movff	roundf@x+1,___flneg@f1+1
 12963  002D56  C0CA  F003         	movff	roundf@x+2,___flneg@f1+2
 12964  002D5A  C0CB  F004         	movff	roundf@x+3,___flneg@f1+3
 12965  002D5E  ECBB  F031         	call	___flneg	;wreg free
 12966  002D62  C001  F0C8         	movff	?___flneg,roundf@x
 12967  002D66  C002  F0C9         	movff	?___flneg+1,roundf@x+1
 12968  002D6A  C003  F0CA         	movff	?___flneg+2,roundf@x+2
 12969  002D6E  C004  F0CB         	movff	?___flneg+3,roundf@x+3
 12970  002D72                     l5229:
 12971  002D72  FFFF               	dw	65535	; assembler added errata NOP
 12972  002D74  0100               	movlb	0	; () banked
 12973  002D76  BFD5               	btfsc	(roundf@e+1)& (0+255),7,b
 12974  002D78  EFCA  F016         	goto	u6440
 12975  002D7C  51D5               	movf	(roundf@e+1)& (0+255),w,b
 12976  002D7E  E107               	bnz	u6441
 12977  002D80  0E7E               	movlw	126
 12978  002D82  5DD4               	subwf	roundf@e& (0+255),w,b
 12979  002D84  B0D8               	btfsc	status,0,c
 12980  002D86  EFC7  F016         	goto	u6441
 12981  002D8A  EFCA  F016         	goto	u6440
 12982  002D8E                     u6441:
 12983  002D8E  FFFF               	dw	65535	; assembler added errata NOP
 12984  002D90  EFE7  F016         	goto	l5235
 12985  002D94                     u6440:
 12986  002D94  FFFF               	dw	65535	; assembler added errata NOP
 12987  002D96                     
 12988                           ; BSR set to: 0
 12989  002D96  C0DA  F02D         	movff	roundf@u,___flmul@b
 12990  002D9A  C0DB  F02E         	movff	roundf@u+1,___flmul@b+1
 12991  002D9E  C0DC  F02F         	movff	roundf@u+2,___flmul@b+2
 12992  002DA2  C0DD  F030         	movff	roundf@u+3,___flmul@b+3
 12993  002DA6  0E00               	movlw	0
 12994  002DA8  6E31               	movwf	___flmul@a^0,c
 12995  002DAA  0E00               	movlw	0
 12996  002DAC  6E32               	movwf	(___flmul@a+1)^0,c
 12997  002DAE  0E00               	movlw	0
 12998  002DB0  6E33               	movwf	(___flmul@a+2)^0,c
 12999  002DB2  0E00               	movlw	0
 13000  002DB4  6E34               	movwf	(___flmul@a+3)^0,c
 13001  002DB6  ECD5  F011         	call	___flmul	;wreg free
 13002  002DBA  C02D  F0C8         	movff	?___flmul,?_roundf
 13003  002DBE  C02E  F0C9         	movff	?___flmul+1,?_roundf+1
 13004  002DC2  C02F  F0CA         	movff	?___flmul+2,?_roundf+2
 13005  002DC6  C030  F0CB         	movff	?___flmul+3,?_roundf+3
 13006  002DCA  EF36  F018         	goto	l1119
 13007  002DCE                     l5235:
 13008  002DCE  FFFF               	dw	65535	; assembler added errata NOP
 13009                           
 13010                           ; BSR set to: 0
 13011  002DD0  0E00               	movlw	0
 13012  002DD2  6E63               	movwf	___fladd@a^0,c
 13013  002DD4  0E00               	movlw	0
 13014  002DD6  6E64               	movwf	(___fladd@a+1)^0,c
 13015  002DD8  0E00               	movlw	0
 13016  002DDA  6E65               	movwf	(___fladd@a+2)^0,c
 13017  002DDC  0E4B               	movlw	75
 13018  002DDE  6E66               	movwf	(___fladd@a+3)^0,c
 13019  002DE0  C0C8  F05F         	movff	roundf@x,___fladd@b
 13020  002DE4  C0C9  F060         	movff	roundf@x+1,___fladd@b+1
 13021  002DE8  C0CA  F061         	movff	roundf@x+2,___fladd@b+2
 13022  002DEC  C0CB  F062         	movff	roundf@x+3,___fladd@b+3
 13023  002DF0  EC01  F00F         	call	___fladd	;wreg free
 13024  002DF4  C05F  F0D6         	movff	?___fladd,_roundf$2169
 13025  002DF8  C060  F0D7         	movff	?___fladd+1,_roundf$2169+1
 13026  002DFC  C061  F0D8         	movff	?___fladd+2,_roundf$2169+2
 13027  002E00  C062  F0D9         	movff	?___fladd+3,_roundf$2169+3
 13028  002E04  0E00               	movlw	0
 13029  002E06  6E63               	movwf	___fladd@a^0,c
 13030  002E08  0E00               	movlw	0
 13031  002E0A  6E64               	movwf	(___fladd@a+1)^0,c
 13032  002E0C  0E00               	movlw	0
 13033  002E0E  6E65               	movwf	(___fladd@a+2)^0,c
 13034  002E10  0ECB               	movlw	203
 13035  002E12  6E66               	movwf	(___fladd@a+3)^0,c
 13036  002E14  C0D6  F05F         	movff	_roundf$2169,___fladd@b
 13037  002E18  C0D7  F060         	movff	_roundf$2169+1,___fladd@b+1
 13038  002E1C  C0D8  F061         	movff	_roundf$2169+2,___fladd@b+2
 13039  002E20  C0D9  F062         	movff	_roundf$2169+3,___fladd@b+3
 13040  002E24  EC01  F00F         	call	___fladd	;wreg free
 13041  002E28  C05F  F0D0         	movff	?___fladd,_roundf$2170
 13042  002E2C  C060  F0D1         	movff	?___fladd+1,_roundf$2170+1
 13043  002E30  C061  F0D2         	movff	?___fladd+2,_roundf$2170+2
 13044  002E34  C062  F0D3         	movff	?___fladd+3,_roundf$2170+3
 13045  002E38  C0D0  F06F         	movff	_roundf$2170,___flsub@b
 13046  002E3C  C0D1  F070         	movff	_roundf$2170+1,___flsub@b+1
 13047  002E40  C0D2  F071         	movff	_roundf$2170+2,___flsub@b+2
 13048  002E44  C0D3  F072         	movff	_roundf$2170+3,___flsub@b+3
 13049  002E48  C0C8  F073         	movff	roundf@x,___flsub@a
 13050  002E4C  C0C9  F074         	movff	roundf@x+1,___flsub@a+1
 13051  002E50  C0CA  F075         	movff	roundf@x+2,___flsub@a+2
 13052  002E54  C0CB  F076         	movff	roundf@x+3,___flsub@a+3
 13053  002E58  EC83  F032         	call	___flsub	;wreg free
 13054  002E5C  C06F  F0DE         	movff	?___flsub,roundf@y
 13055  002E60  C070  F0DF         	movff	?___flsub+1,roundf@y+1
 13056  002E64  C071  F0E0         	movff	?___flsub+2,roundf@y+2
 13057  002E68  C072  F0E1         	movff	?___flsub+3,roundf@y+3
 13058  002E6C  0E00               	movlw	0
 13059  002E6E  0100               	movlb	0	; () banked
 13060  002E70  6FBC               	movwf	___flge@ff1& (0+255),b
 13061  002E72  0E00               	movlw	0
 13062  002E74  6FBD               	movwf	(___flge@ff1+1)& (0+255),b
 13063  002E76  0E00               	movlw	0
 13064  002E78  6FBE               	movwf	(___flge@ff1+2)& (0+255),b
 13065  002E7A  0E3F               	movlw	63
 13066  002E7C  6FBF               	movwf	(___flge@ff1+3)& (0+255),b
 13067  002E7E  C0DE  F0C0         	movff	roundf@y,___flge@ff2
 13068  002E82  C0DF  F0C1         	movff	roundf@y+1,___flge@ff2+1
 13069  002E86  C0E0  F0C2         	movff	roundf@y+2,___flge@ff2+2
 13070  002E8A  C0E1  F0C3         	movff	roundf@y+3,___flge@ff2+3
 13071  002E8E  EC23  F03A         	call	___flge	;wreg free
 13072  002E92  0100               	movlb	0	; () banked
 13073  002E94  B0D8               	btfsc	status,0,c
 13074  002E96  EF4F  F017         	goto	u6451
 13075  002E9A  EF52  F017         	goto	u6450
 13076  002E9E                     u6451:
 13077  002E9E  FFFF               	dw	65535	; assembler added errata NOP
 13078  002EA0  EF89  F017         	goto	l5239
 13079  002EA4                     u6450:
 13080  002EA4  FFFF               	dw	65535	; assembler added errata NOP
 13081  002EA6                     
 13082                           ; BSR set to: 0
 13083  002EA6  C0C8  F063         	movff	roundf@x,___fladd@a
 13084  002EAA  C0C9  F064         	movff	roundf@x+1,___fladd@a+1
 13085  002EAE  C0CA  F065         	movff	roundf@x+2,___fladd@a+2
 13086  002EB2  C0CB  F066         	movff	roundf@x+3,___fladd@a+3
 13087  002EB6  C0DE  F05F         	movff	roundf@y,___fladd@b
 13088  002EBA  C0DF  F060         	movff	roundf@y+1,___fladd@b+1
 13089  002EBE  C0E0  F061         	movff	roundf@y+2,___fladd@b+2
 13090  002EC2  C0E1  F062         	movff	roundf@y+3,___fladd@b+3
 13091  002EC6  EC01  F00F         	call	___fladd	;wreg free
 13092  002ECA  C05F  F0D6         	movff	?___fladd,_roundf$2169
 13093  002ECE  C060  F0D7         	movff	?___fladd+1,_roundf$2169+1
 13094  002ED2  C061  F0D8         	movff	?___fladd+2,_roundf$2169+2
 13095  002ED6  C062  F0D9         	movff	?___fladd+3,_roundf$2169+3
 13096  002EDA  C0D6  F05F         	movff	_roundf$2169,___fladd@b
 13097  002EDE  C0D7  F060         	movff	_roundf$2169+1,___fladd@b+1
 13098  002EE2  C0D8  F061         	movff	_roundf$2169+2,___fladd@b+2
 13099  002EE6  C0D9  F062         	movff	_roundf$2169+3,___fladd@b+3
 13100  002EEA  0E00               	movlw	0
 13101  002EEC  6E63               	movwf	___fladd@a^0,c
 13102  002EEE  0E00               	movlw	0
 13103  002EF0  6E64               	movwf	(___fladd@a+1)^0,c
 13104  002EF2  0E80               	movlw	128
 13105  002EF4  6E65               	movwf	(___fladd@a+2)^0,c
 13106  002EF6  0EBF               	movlw	191
 13107  002EF8  6E66               	movwf	(___fladd@a+3)^0,c
 13108  002EFA  EC01  F00F         	call	___fladd	;wreg free
 13109  002EFE  C05F  F0DE         	movff	?___fladd,roundf@y
 13110  002F02  C060  F0DF         	movff	?___fladd+1,roundf@y+1
 13111  002F06  C061  F0E0         	movff	?___fladd+2,roundf@y+2
 13112  002F0A  C062  F0E1         	movff	?___fladd+3,roundf@y+3
 13113  002F0E  EFF7  F017         	goto	l5245
 13114  002F12                     l5239:
 13115  002F12  FFFF               	dw	65535	; assembler added errata NOP
 13116                           
 13117                           ; BSR set to: 0
 13118  002F14  0E00               	movlw	0
 13119  002F16  6FBC               	movwf	___flge@ff1& (0+255),b
 13120  002F18  0E00               	movlw	0
 13121  002F1A  6FBD               	movwf	(___flge@ff1+1)& (0+255),b
 13122  002F1C  0E00               	movlw	0
 13123  002F1E  6FBE               	movwf	(___flge@ff1+2)& (0+255),b
 13124  002F20  0EBF               	movlw	191
 13125  002F22  6FBF               	movwf	(___flge@ff1+3)& (0+255),b
 13126  002F24  C0DE  F0C0         	movff	roundf@y,___flge@ff2
 13127  002F28  C0DF  F0C1         	movff	roundf@y+1,___flge@ff2+1
 13128  002F2C  C0E0  F0C2         	movff	roundf@y+2,___flge@ff2+2
 13129  002F30  C0E1  F0C3         	movff	roundf@y+3,___flge@ff2+3
 13130  002F34  EC23  F03A         	call	___flge	;wreg free
 13131  002F38  0100               	movlb	0	; () banked
 13132  002F3A  A0D8               	btfss	status,0,c
 13133  002F3C  EFA2  F017         	goto	u6461
 13134  002F40  EFA5  F017         	goto	u6460
 13135  002F44                     u6461:
 13136  002F44  FFFF               	dw	65535	; assembler added errata NOP
 13137  002F46  EFDC  F017         	goto	l5243
 13138  002F4A                     u6460:
 13139  002F4A  FFFF               	dw	65535	; assembler added errata NOP
 13140  002F4C                     
 13141                           ; BSR set to: 0
 13142  002F4C  C0C8  F063         	movff	roundf@x,___fladd@a
 13143  002F50  C0C9  F064         	movff	roundf@x+1,___fladd@a+1
 13144  002F54  C0CA  F065         	movff	roundf@x+2,___fladd@a+2
 13145  002F58  C0CB  F066         	movff	roundf@x+3,___fladd@a+3
 13146  002F5C  C0DE  F05F         	movff	roundf@y,___fladd@b
 13147  002F60  C0DF  F060         	movff	roundf@y+1,___fladd@b+1
 13148  002F64  C0E0  F061         	movff	roundf@y+2,___fladd@b+2
 13149  002F68  C0E1  F062         	movff	roundf@y+3,___fladd@b+3
 13150  002F6C  EC01  F00F         	call	___fladd	;wreg free
 13151  002F70  C05F  F0D6         	movff	?___fladd,_roundf$2169
 13152  002F74  C060  F0D7         	movff	?___fladd+1,_roundf$2169+1
 13153  002F78  C061  F0D8         	movff	?___fladd+2,_roundf$2169+2
 13154  002F7C  C062  F0D9         	movff	?___fladd+3,_roundf$2169+3
 13155  002F80  C0D6  F05F         	movff	_roundf$2169,___fladd@b
 13156  002F84  C0D7  F060         	movff	_roundf$2169+1,___fladd@b+1
 13157  002F88  C0D8  F061         	movff	_roundf$2169+2,___fladd@b+2
 13158  002F8C  C0D9  F062         	movff	_roundf$2169+3,___fladd@b+3
 13159  002F90  0E00               	movlw	0
 13160  002F92  6E63               	movwf	___fladd@a^0,c
 13161  002F94  0E00               	movlw	0
 13162  002F96  6E64               	movwf	(___fladd@a+1)^0,c
 13163  002F98  0E80               	movlw	128
 13164  002F9A  6E65               	movwf	(___fladd@a+2)^0,c
 13165  002F9C  0E3F               	movlw	63
 13166  002F9E  6E66               	movwf	(___fladd@a+3)^0,c
 13167  002FA0  EC01  F00F         	call	___fladd	;wreg free
 13168  002FA4  C05F  F0DE         	movff	?___fladd,roundf@y
 13169  002FA8  C060  F0DF         	movff	?___fladd+1,roundf@y+1
 13170  002FAC  C061  F0E0         	movff	?___fladd+2,roundf@y+2
 13171  002FB0  C062  F0E1         	movff	?___fladd+3,roundf@y+3
 13172  002FB4  EFF7  F017         	goto	l5245
 13173  002FB8                     l5243:
 13174  002FB8  FFFF               	dw	65535	; assembler added errata NOP
 13175                           
 13176                           ; BSR set to: 0
 13177  002FBA  C0DE  F05F         	movff	roundf@y,___fladd@b
 13178  002FBE  C0DF  F060         	movff	roundf@y+1,___fladd@b+1
 13179  002FC2  C0E0  F061         	movff	roundf@y+2,___fladd@b+2
 13180  002FC6  C0E1  F062         	movff	roundf@y+3,___fladd@b+3
 13181  002FCA  C0C8  F063         	movff	roundf@x,___fladd@a
 13182  002FCE  C0C9  F064         	movff	roundf@x+1,___fladd@a+1
 13183  002FD2  C0CA  F065         	movff	roundf@x+2,___fladd@a+2
 13184  002FD6  C0CB  F066         	movff	roundf@x+3,___fladd@a+3
 13185  002FDA  EC01  F00F         	call	___fladd	;wreg free
 13186  002FDE  C05F  F0DE         	movff	?___fladd,roundf@y
 13187  002FE2  C060  F0DF         	movff	?___fladd+1,roundf@y+1
 13188  002FE6  C061  F0E0         	movff	?___fladd+2,roundf@y+2
 13189  002FEA  C062  F0E1         	movff	?___fladd+3,roundf@y+3
 13190  002FEE                     l5245:
 13191  002FEE  FFFF               	dw	65535	; assembler added errata NOP
 13192  002FF0  C0DA  F0CC         	movff	roundf@u,??_roundf
 13193  002FF4  C0DB  F0CD         	movff	roundf@u+1,??_roundf+1
 13194  002FF8  C0DC  F0CE         	movff	roundf@u+2,??_roundf+2
 13195  002FFC  C0DD  F0CF         	movff	roundf@u+3,??_roundf+3
 13196  003000  0E20               	movlw	32
 13197  003002  EF0A  F018         	goto	u6470
 13198  003006                     u6475:
 13199  003006  FFFF               	dw	65535	; assembler added errata NOP
 13200  003008  0100               	movlb	0	; () banked
 13201  00300A  90D8               	bcf	status,0,c
 13202  00300C  33CF               	rrcf	(??_roundf+3)& (0+255),f,b
 13203  00300E  33CE               	rrcf	(??_roundf+2)& (0+255),f,b
 13204  003010  33CD               	rrcf	(??_roundf+1)& (0+255),f,b
 13205  003012  33CC               	rrcf	??_roundf& (0+255),f,b
 13206  003014                     u6470:
 13207  003014  FFFF               	dw	65535	; assembler added errata NOP
 13208  003016  2EE8               	decfsz	wreg,f,c
 13209  003018  EF03  F018         	goto	u6475
 13210  00301C  51CC               	movf	??_roundf& (0+255),w,b
 13211  00301E  11CD               	iorwf	(??_roundf+1)& (0+255),w,b
 13212  003020  11CE               	iorwf	(??_roundf+2)& (0+255),w,b
 13213  003022  11CF               	iorwf	(??_roundf+3)& (0+255),w,b
 13214  003024  B4D8               	btfsc	status,2,c
 13215  003026  EF17  F018         	goto	u6481
 13216  00302A  EF1A  F018         	goto	u6480
 13217  00302E                     u6481:
 13218  00302E  FFFF               	dw	65535	; assembler added errata NOP
 13219  003030  EF2D  F018         	goto	l5249
 13220  003034                     u6480:
 13221  003034  FFFF               	dw	65535	; assembler added errata NOP
 13222  003036                     
 13223                           ; BSR set to: 0
 13224  003036  C0DE  F001         	movff	roundf@y,___flneg@f1
 13225  00303A  C0DF  F002         	movff	roundf@y+1,___flneg@f1+1
 13226  00303E  C0E0  F003         	movff	roundf@y+2,___flneg@f1+2
 13227  003042  C0E1  F004         	movff	roundf@y+3,___flneg@f1+3
 13228  003046  ECBB  F031         	call	___flneg	;wreg free
 13229  00304A  C001  F0DE         	movff	?___flneg,roundf@y
 13230  00304E  C002  F0DF         	movff	?___flneg+1,roundf@y+1
 13231  003052  C003  F0E0         	movff	?___flneg+2,roundf@y+2
 13232  003056  C004  F0E1         	movff	?___flneg+3,roundf@y+3
 13233  00305A                     l5249:
 13234  00305A  FFFF               	dw	65535	; assembler added errata NOP
 13235  00305C  C0DE  F0C8         	movff	roundf@y,?_roundf
 13236  003060  C0DF  F0C9         	movff	roundf@y+1,?_roundf+1
 13237  003064  C0E0  F0CA         	movff	roundf@y+2,?_roundf+2
 13238  003068  C0E1  F0CB         	movff	roundf@y+3,?_roundf+3
 13239  00306C                     l1119:
 13240  00306C  FFFF               	dw	65535	; assembler added errata NOP
 13241  00306E  0012               	return		;funcret
 13242  003070  FFFF               	dw	65535	; errata NOP
 13243  003072                     __end_of_roundf:
 13244                           	callstack 0
 13245                           
 13246 ;; *************** function ___flsub *****************
 13247 ;; Defined at:
 13248 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 13249 ;; Parameters:    Size  Location     Type
 13250 ;;  b               4  110[COMRAM] float 
 13251 ;;  a               4  114[COMRAM] float 
 13252 ;; Auto vars:     Size  Location     Type
 13253 ;;		None
 13254 ;; Return value:  Size  Location     Type
 13255 ;;                  4  110[COMRAM] float 
 13256 ;; Registers used:
 13257 ;;		wreg, status,2, status,0, cstack
 13258 ;; Tracked objects:
 13259 ;;		On entry : 0/0
 13260 ;;		On exit  : 0/0
 13261 ;;		Unchanged: 0/0
 13262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13263 ;;      Params:         8       0       0       0       0       0       0
 13264 ;;      Locals:         0       0       0       0       0       0       0
 13265 ;;      Temps:          0       0       0       0       0       0       0
 13266 ;;      Totals:         8       0       0       0       0       0       0
 13267 ;;Total ram usage:        8 bytes
 13268 ;; Hardware stack levels used:    1
 13269 ;; Hardware stack levels required when called:    2
 13270 ;; This function calls:
 13271 ;;		___fladd
 13272 ;; This function is called by:
 13273 ;;		_roundf
 13274 ;; This function uses a non-reentrant model
 13275 ;;
 13276                           
 13277                           	psect	text51
 13278  006506                     __ptext51:
 13279                           	callstack 0
 13280  006506                     ___flsub:
 13281                           	callstack 0
 13282  006506  FFFF               	dw	65535	; assembler added errata NOP
 13283  006508  0E00               	movlw	0
 13284  00650A  1A73               	xorwf	___flsub@a^0,f,c
 13285  00650C  0E00               	movlw	0
 13286  00650E  1A74               	xorwf	(___flsub@a+1)^0,f,c
 13287  006510  0E00               	movlw	0
 13288  006512  1A75               	xorwf	(___flsub@a+2)^0,f,c
 13289  006514  0E80               	movlw	128
 13290  006516  1A76               	xorwf	(___flsub@a+3)^0,f,c
 13291  006518  C06F  F05F         	movff	___flsub@b,___fladd@b
 13292  00651C  C070  F060         	movff	___flsub@b+1,___fladd@b+1
 13293  006520  C071  F061         	movff	___flsub@b+2,___fladd@b+2
 13294  006524  C072  F062         	movff	___flsub@b+3,___fladd@b+3
 13295  006528  C073  F063         	movff	___flsub@a,___fladd@a
 13296  00652C  C074  F064         	movff	___flsub@a+1,___fladd@a+1
 13297  006530  C075  F065         	movff	___flsub@a+2,___fladd@a+2
 13298  006534  C076  F066         	movff	___flsub@a+3,___fladd@a+3
 13299  006538  EC01  F00F         	call	___fladd	;wreg free
 13300  00653C  C05F  F06F         	movff	?___fladd,?___flsub
 13301  006540  C060  F070         	movff	?___fladd+1,?___flsub+1
 13302  006544  C061  F071         	movff	?___fladd+2,?___flsub+2
 13303  006548  C062  F072         	movff	?___fladd+3,?___flsub+3
 13304  00654C  0012               	return		;funcret
 13305  00654E  FFFF               	dw	65535	; errata NOP
 13306  006550                     __end_of___flsub:
 13307                           	callstack 0
 13308                           
 13309 ;; *************** function ___fladd *****************
 13310 ;; Defined at:
 13311 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 13312 ;; Parameters:    Size  Location     Type
 13313 ;;  b               4   94[COMRAM] float 
 13314 ;;  a               4   98[COMRAM] float 
 13315 ;; Auto vars:     Size  Location     Type
 13316 ;;  grs             1  109[COMRAM] unsigned char 
 13317 ;;  bexp            1  108[COMRAM] unsigned char 
 13318 ;;  aexp            1  107[COMRAM] unsigned char 
 13319 ;;  signs           1  106[COMRAM] unsigned char 
 13320 ;; Return value:  Size  Location     Type
 13321 ;;                  4   94[COMRAM] unsigned char 
 13322 ;; Registers used:
 13323 ;;		wreg, status,2, status,0
 13324 ;; Tracked objects:
 13325 ;;		On entry : 0/0
 13326 ;;		On exit  : 0/0
 13327 ;;		Unchanged: 0/0
 13328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13329 ;;      Params:         8       0       0       0       0       0       0
 13330 ;;      Locals:         4       0       0       0       0       0       0
 13331 ;;      Temps:          4       0       0       0       0       0       0
 13332 ;;      Totals:        16       0       0       0       0       0       0
 13333 ;;Total ram usage:       16 bytes
 13334 ;; Hardware stack levels used:    1
 13335 ;; Hardware stack levels required when called:    1
 13336 ;; This function calls:
 13337 ;;		Nothing
 13338 ;; This function is called by:
 13339 ;;		_init_timer_2
 13340 ;;		___flsub
 13341 ;;		_roundf
 13342 ;; This function uses a non-reentrant model
 13343 ;;
 13344                           
 13345                           	psect	text52
 13346  001E02                     __ptext52:
 13347                           	callstack 0
 13348  001E02                     ___fladd:
 13349                           	callstack 0
 13350  001E02  FFFF               	dw	65535	; assembler added errata NOP
 13351  001E04  5062               	movf	(___fladd@b+3)^0,w,c
 13352  001E06  0B80               	andlw	128
 13353  001E08  6E6B               	movwf	___fladd@signs^0,c
 13354  001E0A  5062               	movf	(___fladd@b+3)^0,w,c
 13355  001E0C  2462               	addwf	(___fladd@b+3)^0,w,c
 13356  001E0E  6E6D               	movwf	___fladd@bexp^0,c
 13357  001E10  AE61               	btfss	(___fladd@b+2)^0,7,c
 13358  001E12  EF0D  F00F         	goto	u4861
 13359  001E16  EF10  F00F         	goto	u4860
 13360  001E1A                     u4861:
 13361  001E1A  FFFF               	dw	65535	; assembler added errata NOP
 13362  001E1C  EF12  F00F         	goto	l4287
 13363  001E20                     u4860:
 13364  001E20  FFFF               	dw	65535	; assembler added errata NOP
 13365  001E22  806D               	bsf	___fladd@bexp^0,0,c
 13366  001E24                     l4287:
 13367  001E24  FFFF               	dw	65535	; assembler added errata NOP
 13368  001E26  506D               	movf	___fladd@bexp^0,w,c
 13369  001E28  B4D8               	btfsc	status,2,c
 13370  001E2A  EF19  F00F         	goto	u4871
 13371  001E2E  EF1C  F00F         	goto	u4870
 13372  001E32                     u4871:
 13373  001E32  FFFF               	dw	65535	; assembler added errata NOP
 13374  001E34  EF35  F00F         	goto	l4297
 13375  001E38                     u4870:
 13376  001E38  FFFF               	dw	65535	; assembler added errata NOP
 13377  001E3A  286D               	incf	___fladd@bexp^0,w,c
 13378  001E3C  A4D8               	btfss	status,2,c
 13379  001E3E  EF23  F00F         	goto	u4881
 13380  001E42  EF26  F00F         	goto	u4880
 13381  001E46                     u4881:
 13382  001E46  FFFF               	dw	65535	; assembler added errata NOP
 13383  001E48  EF2F  F00F         	goto	l4293
 13384  001E4C                     u4880:
 13385  001E4C  FFFF               	dw	65535	; assembler added errata NOP
 13386  001E4E  0E00               	movlw	0
 13387  001E50  6E5F               	movwf	___fladd@b^0,c
 13388  001E52  0E00               	movlw	0
 13389  001E54  6E60               	movwf	(___fladd@b+1)^0,c
 13390  001E56  0E00               	movlw	0
 13391  001E58  6E61               	movwf	(___fladd@b+2)^0,c
 13392  001E5A  0E00               	movlw	0
 13393  001E5C  6E62               	movwf	(___fladd@b+3)^0,c
 13394  001E5E                     l4293:
 13395  001E5E  FFFF               	dw	65535	; assembler added errata NOP
 13396  001E60  8E61               	bsf	(___fladd@b+2)^0,7,c
 13397  001E62  0E00               	movlw	0
 13398  001E64  6E62               	movwf	(___fladd@b+3)^0,c
 13399  001E66  EF3E  F00F         	goto	l4299
 13400  001E6A                     l4297:
 13401  001E6A  FFFF               	dw	65535	; assembler added errata NOP
 13402  001E6C  0E00               	movlw	0
 13403  001E6E  6E5F               	movwf	___fladd@b^0,c
 13404  001E70  0E00               	movlw	0
 13405  001E72  6E60               	movwf	(___fladd@b+1)^0,c
 13406  001E74  0E00               	movlw	0
 13407  001E76  6E61               	movwf	(___fladd@b+2)^0,c
 13408  001E78  0E00               	movlw	0
 13409  001E7A  6E62               	movwf	(___fladd@b+3)^0,c
 13410  001E7C                     l4299:
 13411  001E7C  FFFF               	dw	65535	; assembler added errata NOP
 13412  001E7E  5066               	movf	(___fladd@a+3)^0,w,c
 13413  001E80  0B80               	andlw	128
 13414  001E82  6E6C               	movwf	___fladd@aexp^0,c
 13415  001E84  506B               	movf	___fladd@signs^0,w,c
 13416  001E86  186C               	xorwf	___fladd@aexp^0,w,c
 13417  001E88  B4D8               	btfsc	status,2,c
 13418  001E8A  EF49  F00F         	goto	u4891
 13419  001E8E  EF4C  F00F         	goto	u4890
 13420  001E92                     u4891:
 13421  001E92  FFFF               	dw	65535	; assembler added errata NOP
 13422  001E94  EF4E  F00F         	goto	l4305
 13423  001E98                     u4890:
 13424  001E98  FFFF               	dw	65535	; assembler added errata NOP
 13425  001E9A  8C6B               	bsf	___fladd@signs^0,6,c
 13426  001E9C                     l4305:
 13427  001E9C  FFFF               	dw	65535	; assembler added errata NOP
 13428  001E9E  5066               	movf	(___fladd@a+3)^0,w,c
 13429  001EA0  2466               	addwf	(___fladd@a+3)^0,w,c
 13430  001EA2  6E6C               	movwf	___fladd@aexp^0,c
 13431  001EA4  AE65               	btfss	(___fladd@a+2)^0,7,c
 13432  001EA6  EF57  F00F         	goto	u4901
 13433  001EAA  EF5A  F00F         	goto	u4900
 13434  001EAE                     u4901:
 13435  001EAE  FFFF               	dw	65535	; assembler added errata NOP
 13436  001EB0  EF5C  F00F         	goto	l4311
 13437  001EB4                     u4900:
 13438  001EB4  FFFF               	dw	65535	; assembler added errata NOP
 13439  001EB6  806C               	bsf	___fladd@aexp^0,0,c
 13440  001EB8                     l4311:
 13441  001EB8  FFFF               	dw	65535	; assembler added errata NOP
 13442  001EBA  506C               	movf	___fladd@aexp^0,w,c
 13443  001EBC  B4D8               	btfsc	status,2,c
 13444  001EBE  EF63  F00F         	goto	u4911
 13445  001EC2  EF66  F00F         	goto	u4910
 13446  001EC6                     u4911:
 13447  001EC6  FFFF               	dw	65535	; assembler added errata NOP
 13448  001EC8  EF7F  F00F         	goto	l4321
 13449  001ECC                     u4910:
 13450  001ECC  FFFF               	dw	65535	; assembler added errata NOP
 13451  001ECE  286C               	incf	___fladd@aexp^0,w,c
 13452  001ED0  A4D8               	btfss	status,2,c
 13453  001ED2  EF6D  F00F         	goto	u4921
 13454  001ED6  EF70  F00F         	goto	u4920
 13455  001EDA                     u4921:
 13456  001EDA  FFFF               	dw	65535	; assembler added errata NOP
 13457  001EDC  EF79  F00F         	goto	l4317
 13458  001EE0                     u4920:
 13459  001EE0  FFFF               	dw	65535	; assembler added errata NOP
 13460  001EE2  0E00               	movlw	0
 13461  001EE4  6E63               	movwf	___fladd@a^0,c
 13462  001EE6  0E00               	movlw	0
 13463  001EE8  6E64               	movwf	(___fladd@a+1)^0,c
 13464  001EEA  0E00               	movlw	0
 13465  001EEC  6E65               	movwf	(___fladd@a+2)^0,c
 13466  001EEE  0E00               	movlw	0
 13467  001EF0  6E66               	movwf	(___fladd@a+3)^0,c
 13468  001EF2                     l4317:
 13469  001EF2  FFFF               	dw	65535	; assembler added errata NOP
 13470  001EF4  8E65               	bsf	(___fladd@a+2)^0,7,c
 13471  001EF6  0E00               	movlw	0
 13472  001EF8  6E66               	movwf	(___fladd@a+3)^0,c
 13473  001EFA  EF88  F00F         	goto	l4323
 13474  001EFE                     l4321:
 13475  001EFE  FFFF               	dw	65535	; assembler added errata NOP
 13476  001F00  0E00               	movlw	0
 13477  001F02  6E63               	movwf	___fladd@a^0,c
 13478  001F04  0E00               	movlw	0
 13479  001F06  6E64               	movwf	(___fladd@a+1)^0,c
 13480  001F08  0E00               	movlw	0
 13481  001F0A  6E65               	movwf	(___fladd@a+2)^0,c
 13482  001F0C  0E00               	movlw	0
 13483  001F0E  6E66               	movwf	(___fladd@a+3)^0,c
 13484  001F10                     l4323:
 13485  001F10  FFFF               	dw	65535	; assembler added errata NOP
 13486  001F12  506D               	movf	___fladd@bexp^0,w,c
 13487  001F14  5C6C               	subwf	___fladd@aexp^0,w,c
 13488  001F16  B0D8               	btfsc	status,0,c
 13489  001F18  EF90  F00F         	goto	u4931
 13490  001F1C  EF93  F00F         	goto	u4930
 13491  001F20                     u4931:
 13492  001F20  FFFF               	dw	65535	; assembler added errata NOP
 13493  001F22  EFBE  F00F         	goto	l4359
 13494  001F26                     u4930:
 13495  001F26  FFFF               	dw	65535	; assembler added errata NOP
 13496  001F28  AC6B               	btfss	___fladd@signs^0,6,c
 13497  001F2A  EF99  F00F         	goto	u4941
 13498  001F2E  EF9C  F00F         	goto	u4940
 13499  001F32                     u4941:
 13500  001F32  FFFF               	dw	65535	; assembler added errata NOP
 13501  001F34  EF9F  F00F         	goto	l4329
 13502  001F38                     u4940:
 13503  001F38  FFFF               	dw	65535	; assembler added errata NOP
 13504  001F3A  0E80               	movlw	128
 13505  001F3C  1A6B               	xorwf	___fladd@signs^0,f,c
 13506  001F3E                     l4329:
 13507  001F3E  FFFF               	dw	65535	; assembler added errata NOP
 13508  001F40  C06D  F06E         	movff	___fladd@bexp,___fladd@grs
 13509  001F44  C06C  F06D         	movff	___fladd@aexp,___fladd@bexp
 13510  001F48  C06E  F06C         	movff	___fladd@grs,___fladd@aexp
 13511  001F4C  C05F  F06E         	movff	___fladd@b,___fladd@grs
 13512  001F50  C063  F05F         	movff	___fladd@a,___fladd@b
 13513  001F54  C06E  F063         	movff	___fladd@grs,___fladd@a
 13514  001F58  C060  F06E         	movff	___fladd@b+1,___fladd@grs
 13515  001F5C  C064  F060         	movff	___fladd@a+1,___fladd@b+1
 13516  001F60  C06E  F064         	movff	___fladd@grs,___fladd@a+1
 13517  001F64  C061  F06E         	movff	___fladd@b+2,___fladd@grs
 13518  001F68  C065  F061         	movff	___fladd@a+2,___fladd@b+2
 13519  001F6C  C06E  F065         	movff	___fladd@grs,___fladd@a+2
 13520  001F70  C062  F06E         	movff	___fladd@b+3,___fladd@grs
 13521  001F74  C066  F062         	movff	___fladd@a+3,___fladd@b+3
 13522  001F78  C06E  F066         	movff	___fladd@grs,___fladd@a+3
 13523  001F7C                     l4359:
 13524  001F7C  FFFF               	dw	65535	; assembler added errata NOP
 13525  001F7E  0E00               	movlw	0
 13526  001F80  6E6E               	movwf	___fladd@grs^0,c
 13527  001F82  506D               	movf	___fladd@bexp^0,w,c
 13528  001F84  C06C  F067         	movff	___fladd@aexp,??___fladd
 13529  001F88  6A68               	clrf	(??___fladd+1)^0,c
 13530  001F8A  5E67               	subwf	??___fladd^0,f,c
 13531  001F8C  0E00               	movlw	0
 13532  001F8E  5A68               	subwfb	(??___fladd+1)^0,f,c
 13533  001F90  BE68               	btfsc	(??___fladd+1)^0,7,c
 13534  001F92  EFD4  F00F         	goto	u4951
 13535  001F96  5068               	movf	(??___fladd+1)^0,w,c
 13536  001F98  E10A               	bnz	u4950
 13537  001F9A  0E1A               	movlw	26
 13538  001F9C  5C67               	subwf	??___fladd^0,w,c
 13539  001F9E  A0D8               	btfss	status,0,c
 13540  001FA0  EFD4  F00F         	goto	u4951
 13541  001FA4  EFD7  F00F         	goto	u4950
 13542  001FA8                     u4951:
 13543  001FA8  FFFF               	dw	65535	; assembler added errata NOP
 13544  001FAA  EF1A  F010         	goto	l962
 13545  001FAE                     u4950:
 13546  001FAE  FFFF               	dw	65535	; assembler added errata NOP
 13547  001FB0  505F               	movf	___fladd@b^0,w,c
 13548  001FB2  1060               	iorwf	(___fladd@b+1)^0,w,c
 13549  001FB4  1061               	iorwf	(___fladd@b+2)^0,w,c
 13550  001FB6  1062               	iorwf	(___fladd@b+3)^0,w,c
 13551  001FB8  A4D8               	btfss	status,2,c
 13552  001FBA  EFE1  F00F         	goto	u4961
 13553  001FBE  EFE5  F00F         	goto	u4960
 13554  001FC2                     u4961:
 13555  001FC2  FFFF               	dw	65535	; assembler added errata NOP
 13556  001FC4  0E01               	movlw	1
 13557  001FC6  EFE7  F00F         	goto	u4970
 13558  001FCA                     u4960:
 13559  001FCA  FFFF               	dw	65535	; assembler added errata NOP
 13560  001FCC  0E00               	movlw	0
 13561  001FCE                     u4970:
 13562  001FCE  FFFF               	dw	65535	; assembler added errata NOP
 13563  001FD0  6E6E               	movwf	___fladd@grs^0,c
 13564  001FD2  0E00               	movlw	0
 13565  001FD4  6E5F               	movwf	___fladd@b^0,c
 13566  001FD6  0E00               	movlw	0
 13567  001FD8  6E60               	movwf	(___fladd@b+1)^0,c
 13568  001FDA  0E00               	movlw	0
 13569  001FDC  6E61               	movwf	(___fladd@b+2)^0,c
 13570  001FDE  0E00               	movlw	0
 13571  001FE0  6E62               	movwf	(___fladd@b+3)^0,c
 13572  001FE2  C06C  F06D         	movff	___fladd@aexp,___fladd@bexp
 13573  001FE6  EF25  F010         	goto	l961
 13574  001FEA                     l963:
 13575  001FEA  FFFF               	dw	65535	; assembler added errata NOP
 13576  001FEC  A06E               	btfss	___fladd@grs^0,0,c
 13577  001FEE  EFFB  F00F         	goto	u4981
 13578  001FF2  EFFE  F00F         	goto	u4980
 13579  001FF6                     u4981:
 13580  001FF6  FFFF               	dw	65535	; assembler added errata NOP
 13581  001FF8  EF05  F010         	goto	l4371
 13582  001FFC                     u4980:
 13583  001FFC  FFFF               	dw	65535	; assembler added errata NOP
 13584  001FFE  90D8               	bcf	status,0,c
 13585  002000  306E               	rrcf	___fladd@grs^0,w,c
 13586  002002  0901               	iorlw	1
 13587  002004  6E6E               	movwf	___fladd@grs^0,c
 13588  002006  EF08  F010         	goto	l4373
 13589  00200A                     l4371:
 13590  00200A  FFFF               	dw	65535	; assembler added errata NOP
 13591  00200C  90D8               	bcf	status,0,c
 13592  00200E  326E               	rrcf	___fladd@grs^0,f,c
 13593  002010                     l4373:
 13594  002010  FFFF               	dw	65535	; assembler added errata NOP
 13595  002012  A05F               	btfss	___fladd@b^0,0,c
 13596  002014  EF0E  F010         	goto	u4991
 13597  002018  EF11  F010         	goto	u4990
 13598  00201C                     u4991:
 13599  00201C  FFFF               	dw	65535	; assembler added errata NOP
 13600  00201E  EF13  F010         	goto	l4377
 13601  002022                     u4990:
 13602  002022  FFFF               	dw	65535	; assembler added errata NOP
 13603  002024  8E6E               	bsf	___fladd@grs^0,7,c
 13604  002026                     l4377:
 13605  002026  FFFF               	dw	65535	; assembler added errata NOP
 13606  002028  3462               	rlcf	(___fladd@b+3)^0,w,c
 13607  00202A  3262               	rrcf	(___fladd@b+3)^0,f,c
 13608  00202C  3261               	rrcf	(___fladd@b+2)^0,f,c
 13609  00202E  3260               	rrcf	(___fladd@b+1)^0,f,c
 13610  002030  325F               	rrcf	___fladd@b^0,f,c
 13611  002032  2A6D               	incf	___fladd@bexp^0,f,c
 13612  002034                     l962:
 13613  002034  FFFF               	dw	65535	; assembler added errata NOP
 13614  002036  506C               	movf	___fladd@aexp^0,w,c
 13615  002038  5C6D               	subwf	___fladd@bexp^0,w,c
 13616  00203A  A0D8               	btfss	status,0,c
 13617  00203C  EF22  F010         	goto	u5001
 13618  002040  EF25  F010         	goto	u5000
 13619  002044                     u5001:
 13620  002044  FFFF               	dw	65535	; assembler added errata NOP
 13621  002046  EFF5  F00F         	goto	l963
 13622  00204A                     u5000:
 13623  00204A                     l961:
 13624  00204A  FFFF               	dw	65535	; assembler added errata NOP
 13625  00204C  BC6B               	btfsc	___fladd@signs^0,6,c
 13626  00204E  EF2B  F010         	goto	u5011
 13627  002052  EF2E  F010         	goto	u5010
 13628  002056                     u5011:
 13629  002056  FFFF               	dw	65535	; assembler added errata NOP
 13630  002058  EF7B  F010         	goto	l4405
 13631  00205C                     u5010:
 13632  00205C  FFFF               	dw	65535	; assembler added errata NOP
 13633  00205E  506D               	movf	___fladd@bexp^0,w,c
 13634  002060  A4D8               	btfss	status,2,c
 13635  002062  EF35  F010         	goto	u5021
 13636  002066  EF38  F010         	goto	u5020
 13637  00206A                     u5021:
 13638  00206A  FFFF               	dw	65535	; assembler added errata NOP
 13639  00206C  EF43  F010         	goto	l4387
 13640  002070                     u5020:
 13641  002070  FFFF               	dw	65535	; assembler added errata NOP
 13642  002072  0E00               	movlw	0
 13643  002074  6E5F               	movwf	?___fladd^0,c
 13644  002076  0E00               	movlw	0
 13645  002078  6E60               	movwf	(?___fladd+1)^0,c
 13646  00207A  0E00               	movlw	0
 13647  00207C  6E61               	movwf	(?___fladd+2)^0,c
 13648  00207E  0E00               	movlw	0
 13649  002080  6E62               	movwf	(?___fladd+3)^0,c
 13650  002082  EFD2  F011         	goto	l970
 13651  002086                     l4387:
 13652  002086  FFFF               	dw	65535	; assembler added errata NOP
 13653  002088  5063               	movf	___fladd@a^0,w,c
 13654  00208A  265F               	addwf	___fladd@b^0,f,c
 13655  00208C  5064               	movf	(___fladd@a+1)^0,w,c
 13656  00208E  2260               	addwfc	(___fladd@b+1)^0,f,c
 13657  002090  5065               	movf	(___fladd@a+2)^0,w,c
 13658  002092  2261               	addwfc	(___fladd@b+2)^0,f,c
 13659  002094  5066               	movf	(___fladd@a+3)^0,w,c
 13660  002096  2262               	addwfc	(___fladd@b+3)^0,f,c
 13661  002098  A062               	btfss	(___fladd@b+3)^0,0,c
 13662  00209A  EF51  F010         	goto	u5031
 13663  00209E  EF54  F010         	goto	u5030
 13664  0020A2                     u5031:
 13665  0020A2  FFFF               	dw	65535	; assembler added errata NOP
 13666  0020A4  EF1F  F011         	goto	l4441
 13667  0020A8                     u5030:
 13668  0020A8  FFFF               	dw	65535	; assembler added errata NOP
 13669  0020AA  A06E               	btfss	___fladd@grs^0,0,c
 13670  0020AC  EF5A  F010         	goto	u5041
 13671  0020B0  EF5D  F010         	goto	u5040
 13672  0020B4                     u5041:
 13673  0020B4  FFFF               	dw	65535	; assembler added errata NOP
 13674  0020B6  EF64  F010         	goto	l4395
 13675  0020BA                     u5040:
 13676  0020BA  FFFF               	dw	65535	; assembler added errata NOP
 13677  0020BC  90D8               	bcf	status,0,c
 13678  0020BE  306E               	rrcf	___fladd@grs^0,w,c
 13679  0020C0  0901               	iorlw	1
 13680  0020C2  6E6E               	movwf	___fladd@grs^0,c
 13681  0020C4  EF67  F010         	goto	l4397
 13682  0020C8                     l4395:
 13683  0020C8  FFFF               	dw	65535	; assembler added errata NOP
 13684  0020CA  90D8               	bcf	status,0,c
 13685  0020CC  326E               	rrcf	___fladd@grs^0,f,c
 13686  0020CE                     l4397:
 13687  0020CE  FFFF               	dw	65535	; assembler added errata NOP
 13688  0020D0  A05F               	btfss	___fladd@b^0,0,c
 13689  0020D2  EF6D  F010         	goto	u5051
 13690  0020D6  EF70  F010         	goto	u5050
 13691  0020DA                     u5051:
 13692  0020DA  FFFF               	dw	65535	; assembler added errata NOP
 13693  0020DC  EF72  F010         	goto	l4401
 13694  0020E0                     u5050:
 13695  0020E0  FFFF               	dw	65535	; assembler added errata NOP
 13696  0020E2  8E6E               	bsf	___fladd@grs^0,7,c
 13697  0020E4                     l4401:
 13698  0020E4  FFFF               	dw	65535	; assembler added errata NOP
 13699  0020E6  3462               	rlcf	(___fladd@b+3)^0,w,c
 13700  0020E8  3262               	rrcf	(___fladd@b+3)^0,f,c
 13701  0020EA  3261               	rrcf	(___fladd@b+2)^0,f,c
 13702  0020EC  3260               	rrcf	(___fladd@b+1)^0,f,c
 13703  0020EE  325F               	rrcf	___fladd@b^0,f,c
 13704  0020F0  2A6D               	incf	___fladd@bexp^0,f,c
 13705  0020F2  EF1F  F011         	goto	l4441
 13706  0020F6                     l4405:
 13707  0020F6  FFFF               	dw	65535	; assembler added errata NOP
 13708  0020F8  5063               	movf	___fladd@a^0,w,c
 13709  0020FA  5C5F               	subwf	___fladd@b^0,w,c
 13710  0020FC  5064               	movf	(___fladd@a+1)^0,w,c
 13711  0020FE  5860               	subwfb	(___fladd@b+1)^0,w,c
 13712  002100  5065               	movf	(___fladd@a+2)^0,w,c
 13713  002102  5861               	subwfb	(___fladd@b+2)^0,w,c
 13714  002104  5062               	movf	(___fladd@b+3)^0,w,c
 13715  002106  0A80               	xorlw	128
 13716  002108  6E67               	movwf	??___fladd^0,c
 13717  00210A  5066               	movf	(___fladd@a+3)^0,w,c
 13718  00210C  0A80               	xorlw	128
 13719  00210E  5867               	subwfb	??___fladd^0,w,c
 13720  002110  B0D8               	btfsc	status,0,c
 13721  002112  EF8D  F010         	goto	u5061
 13722  002116  EF90  F010         	goto	u5060
 13723  00211A                     u5061:
 13724  00211A  FFFF               	dw	65535	; assembler added errata NOP
 13725  00211C  EFBE  F010         	goto	l4415
 13726  002120                     u5060:
 13727  002120  FFFF               	dw	65535	; assembler added errata NOP
 13728  002122  505F               	movf	___fladd@b^0,w,c
 13729  002124  5C63               	subwf	___fladd@a^0,w,c
 13730  002126  6E67               	movwf	??___fladd^0,c
 13731  002128  5060               	movf	(___fladd@b+1)^0,w,c
 13732  00212A  5864               	subwfb	(___fladd@a+1)^0,w,c
 13733  00212C  6E68               	movwf	(??___fladd+1)^0,c
 13734  00212E  5061               	movf	(___fladd@b+2)^0,w,c
 13735  002130  5865               	subwfb	(___fladd@a+2)^0,w,c
 13736  002132  6E69               	movwf	(??___fladd+2)^0,c
 13737  002134  5062               	movf	(___fladd@b+3)^0,w,c
 13738  002136  5866               	subwfb	(___fladd@a+3)^0,w,c
 13739  002138  6E6A               	movwf	(??___fladd+3)^0,c
 13740  00213A  0EFF               	movlw	255
 13741  00213C  2467               	addwf	??___fladd^0,w,c
 13742  00213E  6E5F               	movwf	___fladd@b^0,c
 13743  002140  0EFF               	movlw	255
 13744  002142  2068               	addwfc	(??___fladd+1)^0,w,c
 13745  002144  6E60               	movwf	(___fladd@b+1)^0,c
 13746  002146  0EFF               	movlw	255
 13747  002148  2069               	addwfc	(??___fladd+2)^0,w,c
 13748  00214A  6E61               	movwf	(___fladd@b+2)^0,c
 13749  00214C  0EFF               	movlw	255
 13750  00214E  206A               	addwfc	(??___fladd+3)^0,w,c
 13751  002150  6E62               	movwf	(___fladd@b+3)^0,c
 13752  002152  0E80               	movlw	128
 13753  002154  1A6B               	xorwf	___fladd@signs^0,f,c
 13754  002156  6C6E               	negf	___fladd@grs^0,c
 13755  002158  506E               	movf	___fladd@grs^0,w,c
 13756  00215A  A4D8               	btfss	status,2,c
 13757  00215C  EFB2  F010         	goto	u5071
 13758  002160  EFB5  F010         	goto	u5070
 13759  002164                     u5071:
 13760  002164  FFFF               	dw	65535	; assembler added errata NOP
 13761  002166  EFC7  F010         	goto	l978
 13762  00216A                     u5070:
 13763  00216A  FFFF               	dw	65535	; assembler added errata NOP
 13764  00216C  0E01               	movlw	1
 13765  00216E  265F               	addwf	___fladd@b^0,f,c
 13766  002170  0E00               	movlw	0
 13767  002172  2260               	addwfc	(___fladd@b+1)^0,f,c
 13768  002174  2261               	addwfc	(___fladd@b+2)^0,f,c
 13769  002176  2262               	addwfc	(___fladd@b+3)^0,f,c
 13770  002178  EFC7  F010         	goto	l978
 13771  00217C                     l4415:
 13772  00217C  FFFF               	dw	65535	; assembler added errata NOP
 13773  00217E  5063               	movf	___fladd@a^0,w,c
 13774  002180  5E5F               	subwf	___fladd@b^0,f,c
 13775  002182  5064               	movf	(___fladd@a+1)^0,w,c
 13776  002184  5A60               	subwfb	(___fladd@b+1)^0,f,c
 13777  002186  5065               	movf	(___fladd@a+2)^0,w,c
 13778  002188  5A61               	subwfb	(___fladd@b+2)^0,f,c
 13779  00218A  5066               	movf	(___fladd@a+3)^0,w,c
 13780  00218C  5A62               	subwfb	(___fladd@b+3)^0,f,c
 13781  00218E                     l978:
 13782  00218E  FFFF               	dw	65535	; assembler added errata NOP
 13783  002190  505F               	movf	___fladd@b^0,w,c
 13784  002192  1060               	iorwf	(___fladd@b+1)^0,w,c
 13785  002194  1061               	iorwf	(___fladd@b+2)^0,w,c
 13786  002196  1062               	iorwf	(___fladd@b+3)^0,w,c
 13787  002198  A4D8               	btfss	status,2,c
 13788  00219A  EFD1  F010         	goto	u5081
 13789  00219E  EFD4  F010         	goto	u5080
 13790  0021A2                     u5081:
 13791  0021A2  FFFF               	dw	65535	; assembler added errata NOP
 13792  0021A4  EF16  F011         	goto	l4439
 13793  0021A8                     u5080:
 13794  0021A8  FFFF               	dw	65535	; assembler added errata NOP
 13795  0021AA  506E               	movf	___fladd@grs^0,w,c
 13796  0021AC  A4D8               	btfss	status,2,c
 13797  0021AE  EFDB  F010         	goto	u5091
 13798  0021B2  EFDE  F010         	goto	u5090
 13799  0021B6                     u5091:
 13800  0021B6  FFFF               	dw	65535	; assembler added errata NOP
 13801  0021B8  EF16  F011         	goto	l4439
 13802  0021BC                     u5090:
 13803  0021BC  FFFF               	dw	65535	; assembler added errata NOP
 13804  0021BE  0E00               	movlw	0
 13805  0021C0  6E5F               	movwf	?___fladd^0,c
 13806  0021C2  0E00               	movlw	0
 13807  0021C4  6E60               	movwf	(?___fladd+1)^0,c
 13808  0021C6  0E00               	movlw	0
 13809  0021C8  6E61               	movwf	(?___fladd+2)^0,c
 13810  0021CA  0E00               	movlw	0
 13811  0021CC  6E62               	movwf	(?___fladd+3)^0,c
 13812  0021CE  EFD2  F011         	goto	l970
 13813  0021D2                     l4423:
 13814  0021D2  FFFF               	dw	65535	; assembler added errata NOP
 13815  0021D4  90D8               	bcf	status,0,c
 13816  0021D6  365F               	rlcf	___fladd@b^0,f,c
 13817  0021D8  3660               	rlcf	(___fladd@b+1)^0,f,c
 13818  0021DA  3661               	rlcf	(___fladd@b+2)^0,f,c
 13819  0021DC  3662               	rlcf	(___fladd@b+3)^0,f,c
 13820  0021DE  AE6E               	btfss	___fladd@grs^0,7,c
 13821  0021E0  EFF4  F010         	goto	u5101
 13822  0021E4  EFF7  F010         	goto	u5100
 13823  0021E8                     u5101:
 13824  0021E8  FFFF               	dw	65535	; assembler added errata NOP
 13825  0021EA  EFF9  F010         	goto	l4429
 13826  0021EE                     u5100:
 13827  0021EE  FFFF               	dw	65535	; assembler added errata NOP
 13828  0021F0  805F               	bsf	___fladd@b^0,0,c
 13829  0021F2                     l4429:
 13830  0021F2  FFFF               	dw	65535	; assembler added errata NOP
 13831  0021F4  A06E               	btfss	___fladd@grs^0,0,c
 13832  0021F6  EFFF  F010         	goto	u5111
 13833  0021FA  EF02  F011         	goto	u5110
 13834  0021FE                     u5111:
 13835  0021FE  FFFF               	dw	65535	; assembler added errata NOP
 13836  002200  EF07  F011         	goto	l4433
 13837  002204                     u5110:
 13838  002204  FFFF               	dw	65535	; assembler added errata NOP
 13839  002206  80D8               	bsf	status,0,c
 13840  002208  366E               	rlcf	___fladd@grs^0,f,c
 13841  00220A  EF0A  F011         	goto	l4435
 13842  00220E                     l4433:
 13843  00220E  FFFF               	dw	65535	; assembler added errata NOP
 13844  002210  90D8               	bcf	status,0,c
 13845  002212  366E               	rlcf	___fladd@grs^0,f,c
 13846  002214                     l4435:
 13847  002214  FFFF               	dw	65535	; assembler added errata NOP
 13848  002216  506D               	movf	___fladd@bexp^0,w,c
 13849  002218  B4D8               	btfsc	status,2,c
 13850  00221A  EF11  F011         	goto	u5121
 13851  00221E  EF14  F011         	goto	u5120
 13852  002222                     u5121:
 13853  002222  FFFF               	dw	65535	; assembler added errata NOP
 13854  002224  EF16  F011         	goto	l4439
 13855  002228                     u5120:
 13856  002228  FFFF               	dw	65535	; assembler added errata NOP
 13857  00222A  066D               	decf	___fladd@bexp^0,f,c
 13858  00222C                     l4439:
 13859  00222C  FFFF               	dw	65535	; assembler added errata NOP
 13860  00222E  AE61               	btfss	(___fladd@b+2)^0,7,c
 13861  002230  EF1C  F011         	goto	u5131
 13862  002234  EF1F  F011         	goto	u5130
 13863  002238                     u5131:
 13864  002238  FFFF               	dw	65535	; assembler added errata NOP
 13865  00223A  EFE9  F010         	goto	l4423
 13866  00223E                     u5130:
 13867  00223E                     l4441:
 13868  00223E  FFFF               	dw	65535	; assembler added errata NOP
 13869  002240  0E00               	movlw	0
 13870  002242  6E6C               	movwf	___fladd@aexp^0,c
 13871  002244  AE6E               	btfss	___fladd@grs^0,7,c
 13872  002246  EF27  F011         	goto	u5141
 13873  00224A  EF2A  F011         	goto	u5140
 13874  00224E                     u5141:
 13875  00224E  FFFF               	dw	65535	; assembler added errata NOP
 13876  002250  EF49  F011         	goto	l987
 13877  002254                     u5140:
 13878  002254  FFFF               	dw	65535	; assembler added errata NOP
 13879  002256  C06E  F067         	movff	___fladd@grs,??___fladd
 13880  00225A  0E7F               	movlw	127
 13881  00225C  1667               	andwf	??___fladd^0,f,c
 13882  00225E  B4D8               	btfsc	status,2,c
 13883  002260  EF34  F011         	goto	u5151
 13884  002264  EF37  F011         	goto	u5150
 13885  002268                     u5151:
 13886  002268  FFFF               	dw	65535	; assembler added errata NOP
 13887  00226A  EF3D  F011         	goto	l988
 13888  00226E                     u5150:
 13889  00226E  FFFF               	dw	65535	; assembler added errata NOP
 13890  002270                     l4447:
 13891  002270  FFFF               	dw	65535	; assembler added errata NOP
 13892  002272  0E01               	movlw	1
 13893  002274  6E6C               	movwf	___fladd@aexp^0,c
 13894  002276  EF49  F011         	goto	l987
 13895  00227A                     l988:
 13896  00227A  FFFF               	dw	65535	; assembler added errata NOP
 13897  00227C  A05F               	btfss	___fladd@b^0,0,c
 13898  00227E  EF43  F011         	goto	u5161
 13899  002282  EF46  F011         	goto	u5160
 13900  002286                     u5161:
 13901  002286  FFFF               	dw	65535	; assembler added errata NOP
 13902  002288  EF49  F011         	goto	l987
 13903  00228C                     u5160:
 13904  00228C  FFFF               	dw	65535	; assembler added errata NOP
 13905  00228E  EF38  F011         	goto	l4447
 13906  002292                     l987:
 13907  002292  FFFF               	dw	65535	; assembler added errata NOP
 13908  002294  506C               	movf	___fladd@aexp^0,w,c
 13909  002296  B4D8               	btfsc	status,2,c
 13910  002298  EF50  F011         	goto	u5171
 13911  00229C  EF53  F011         	goto	u5170
 13912  0022A0                     u5171:
 13913  0022A0  FFFF               	dw	65535	; assembler added errata NOP
 13914  0022A2  EF83  F011         	goto	l4459
 13915  0022A6                     u5170:
 13916  0022A6  FFFF               	dw	65535	; assembler added errata NOP
 13917  0022A8  0E01               	movlw	1
 13918  0022AA  265F               	addwf	___fladd@b^0,f,c
 13919  0022AC  0E00               	movlw	0
 13920  0022AE  2260               	addwfc	(___fladd@b+1)^0,f,c
 13921  0022B0  2261               	addwfc	(___fladd@b+2)^0,f,c
 13922  0022B2  2262               	addwfc	(___fladd@b+3)^0,f,c
 13923  0022B4  A062               	btfss	(___fladd@b+3)^0,0,c
 13924  0022B6  EF5F  F011         	goto	u5181
 13925  0022BA  EF62  F011         	goto	u5180
 13926  0022BE                     u5181:
 13927  0022BE  FFFF               	dw	65535	; assembler added errata NOP
 13928  0022C0  EF83  F011         	goto	l4459
 13929  0022C4                     u5180:
 13930  0022C4  FFFF               	dw	65535	; assembler added errata NOP
 13931  0022C6  C05F  F067         	movff	___fladd@b,??___fladd
 13932  0022CA  C060  F068         	movff	___fladd@b+1,??___fladd+1
 13933  0022CE  C061  F069         	movff	___fladd@b+2,??___fladd+2
 13934  0022D2  C062  F06A         	movff	___fladd@b+3,??___fladd+3
 13935  0022D6  346A               	rlcf	(??___fladd+3)^0,w,c
 13936  0022D8  326A               	rrcf	(??___fladd+3)^0,f,c
 13937  0022DA  3269               	rrcf	(??___fladd+2)^0,f,c
 13938  0022DC  3268               	rrcf	(??___fladd+1)^0,f,c
 13939  0022DE  3267               	rrcf	??___fladd^0,f,c
 13940  0022E0  C067  F05F         	movff	??___fladd,___fladd@b
 13941  0022E4  C068  F060         	movff	??___fladd+1,___fladd@b+1
 13942  0022E8  C069  F061         	movff	??___fladd+2,___fladd@b+2
 13943  0022EC  C06A  F062         	movff	??___fladd+3,___fladd@b+3
 13944  0022F0  286D               	incf	___fladd@bexp^0,w,c
 13945  0022F2  B4D8               	btfsc	status,2,c
 13946  0022F4  EF7E  F011         	goto	u5191
 13947  0022F8  EF81  F011         	goto	u5190
 13948  0022FC                     u5191:
 13949  0022FC  FFFF               	dw	65535	; assembler added errata NOP
 13950  0022FE  EF83  F011         	goto	l4459
 13951  002302                     u5190:
 13952  002302  FFFF               	dw	65535	; assembler added errata NOP
 13953  002304  2A6D               	incf	___fladd@bexp^0,f,c
 13954  002306                     l4459:
 13955  002306  FFFF               	dw	65535	; assembler added errata NOP
 13956  002308  286D               	incf	___fladd@bexp^0,w,c
 13957  00230A  B4D8               	btfsc	status,2,c
 13958  00230C  EF8A  F011         	goto	u5201
 13959  002310  EF8D  F011         	goto	u5200
 13960  002314                     u5201:
 13961  002314  FFFF               	dw	65535	; assembler added errata NOP
 13962  002316  EF97  F011         	goto	l4463
 13963  00231A                     u5200:
 13964  00231A  FFFF               	dw	65535	; assembler added errata NOP
 13965  00231C  506D               	movf	___fladd@bexp^0,w,c
 13966  00231E  A4D8               	btfss	status,2,c
 13967  002320  EF94  F011         	goto	u5211
 13968  002324  EF97  F011         	goto	u5210
 13969  002328                     u5211:
 13970  002328  FFFF               	dw	65535	; assembler added errata NOP
 13971  00232A  EFAC  F011         	goto	l4467
 13972  00232E                     u5210:
 13973  00232E                     l4463:
 13974  00232E  FFFF               	dw	65535	; assembler added errata NOP
 13975  002330  0E00               	movlw	0
 13976  002332  6E5F               	movwf	___fladd@b^0,c
 13977  002334  0E00               	movlw	0
 13978  002336  6E60               	movwf	(___fladd@b+1)^0,c
 13979  002338  0E00               	movlw	0
 13980  00233A  6E61               	movwf	(___fladd@b+2)^0,c
 13981  00233C  0E00               	movlw	0
 13982  00233E  6E62               	movwf	(___fladd@b+3)^0,c
 13983  002340  506D               	movf	___fladd@bexp^0,w,c
 13984  002342  A4D8               	btfss	status,2,c
 13985  002344  EFA6  F011         	goto	u5221
 13986  002348  EFA9  F011         	goto	u5220
 13987  00234C                     u5221:
 13988  00234C  FFFF               	dw	65535	; assembler added errata NOP
 13989  00234E  EFAC  F011         	goto	l4467
 13990  002352                     u5220:
 13991  002352  FFFF               	dw	65535	; assembler added errata NOP
 13992  002354  0E00               	movlw	0
 13993  002356  6E6B               	movwf	___fladd@signs^0,c
 13994  002358                     l4467:
 13995  002358  FFFF               	dw	65535	; assembler added errata NOP
 13996  00235A  A06D               	btfss	___fladd@bexp^0,0,c
 13997  00235C  EFB2  F011         	goto	u5231
 13998  002360  EFB5  F011         	goto	u5230
 13999  002364                     u5231:
 14000  002364  FFFF               	dw	65535	; assembler added errata NOP
 14001  002366  EFB9  F011         	goto	l4471
 14002  00236A                     u5230:
 14003  00236A  FFFF               	dw	65535	; assembler added errata NOP
 14004  00236C  8E61               	bsf	(___fladd@b+2)^0,7,c
 14005  00236E  EFBB  F011         	goto	l4473
 14006  002372                     l4471:
 14007  002372  FFFF               	dw	65535	; assembler added errata NOP
 14008  002374  9E61               	bcf	(___fladd@b+2)^0,7,c
 14009  002376                     l4473:
 14010  002376  FFFF               	dw	65535	; assembler added errata NOP
 14011  002378  90D8               	bcf	status,0,c
 14012  00237A  306D               	rrcf	___fladd@bexp^0,w,c
 14013  00237C  6E62               	movwf	(___fladd@b+3)^0,c
 14014  00237E  AE6B               	btfss	___fladd@signs^0,7,c
 14015  002380  EFC4  F011         	goto	u5241
 14016  002384  EFC7  F011         	goto	u5240
 14017  002388                     u5241:
 14018  002388  FFFF               	dw	65535	; assembler added errata NOP
 14019  00238A  EFC9  F011         	goto	l4479
 14020  00238E                     u5240:
 14021  00238E  FFFF               	dw	65535	; assembler added errata NOP
 14022  002390  8E62               	bsf	(___fladd@b+3)^0,7,c
 14023  002392                     l4479:
 14024  002392  FFFF               	dw	65535	; assembler added errata NOP
 14025  002394  C05F  F05F         	movff	___fladd@b,?___fladd
 14026  002398  C060  F060         	movff	___fladd@b+1,?___fladd+1
 14027  00239C  C061  F061         	movff	___fladd@b+2,?___fladd+2
 14028  0023A0  C062  F062         	movff	___fladd@b+3,?___fladd+3
 14029  0023A4                     l970:
 14030  0023A4  FFFF               	dw	65535	; assembler added errata NOP
 14031  0023A6  0012               	return		;funcret
 14032  0023A8  FFFF               	dw	65535	; errata NOP
 14033  0023AA                     __end_of___fladd:
 14034                           	callstack 0
 14035                           
 14036 ;; *************** function ___flneg *****************
 14037 ;; Defined at:
 14038 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
 14039 ;; Parameters:    Size  Location     Type
 14040 ;;  f1              4    0[COMRAM] unsigned char 
 14041 ;; Auto vars:     Size  Location     Type
 14042 ;;		None
 14043 ;; Return value:  Size  Location     Type
 14044 ;;                  4    0[COMRAM] unsigned char 
 14045 ;; Registers used:
 14046 ;;		wreg, status,2, status,0
 14047 ;; Tracked objects:
 14048 ;;		On entry : 0/0
 14049 ;;		On exit  : 0/0
 14050 ;;		Unchanged: 0/0
 14051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14052 ;;      Params:         4       0       0       0       0       0       0
 14053 ;;      Locals:         0       0       0       0       0       0       0
 14054 ;;      Temps:          0       0       0       0       0       0       0
 14055 ;;      Totals:         4       0       0       0       0       0       0
 14056 ;;Total ram usage:        4 bytes
 14057 ;; Hardware stack levels used:    1
 14058 ;; Hardware stack levels required when called:    1
 14059 ;; This function calls:
 14060 ;;		Nothing
 14061 ;; This function is called by:
 14062 ;;		_roundf
 14063 ;; This function uses a non-reentrant model
 14064 ;;
 14065                           
 14066                           	psect	text53
 14067  006376                     __ptext53:
 14068                           	callstack 0
 14069  006376                     ___flneg:
 14070                           	callstack 0
 14071  006376  FFFF               	dw	65535	; assembler added errata NOP
 14072  006378  5001               	movf	___flneg@f1^0,w,c
 14073  00637A  1002               	iorwf	(___flneg@f1+1)^0,w,c
 14074  00637C  1003               	iorwf	(___flneg@f1+2)^0,w,c
 14075  00637E  1004               	iorwf	(___flneg@f1+3)^0,w,c
 14076  006380  B4D8               	btfsc	status,2,c
 14077  006382  EFC5  F031         	goto	u6211
 14078  006386  EFC8  F031         	goto	u6210
 14079  00638A                     u6211:
 14080  00638A  FFFF               	dw	65535	; assembler added errata NOP
 14081  00638C  EFD1  F031         	goto	l5117
 14082  006390                     u6210:
 14083  006390  FFFF               	dw	65535	; assembler added errata NOP
 14084  006392  0E00               	movlw	0
 14085  006394  1A01               	xorwf	___flneg@f1^0,f,c
 14086  006396  0E00               	movlw	0
 14087  006398  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 14088  00639A  0E00               	movlw	0
 14089  00639C  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 14090  00639E  0E80               	movlw	128
 14091  0063A0  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 14092  0063A2                     l5117:
 14093  0063A2  FFFF               	dw	65535	; assembler added errata NOP
 14094  0063A4  C001  F001         	movff	___flneg@f1,?___flneg
 14095  0063A8  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 14096  0063AC  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 14097  0063B0  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 14098  0063B4  0012               	return		;funcret
 14099  0063B6  FFFF               	dw	65535	; errata NOP
 14100  0063B8                     __end_of___flneg:
 14101                           	callstack 0
 14102                           
 14103 ;; *************** function _init_PORTS *****************
 14104 ;; Defined at:
 14105 ;;		line 61 in file "init_PIC.c"
 14106 ;; Parameters:    Size  Location     Type
 14107 ;;		None
 14108 ;; Auto vars:     Size  Location     Type
 14109 ;;		None
 14110 ;; Return value:  Size  Location     Type
 14111 ;;                  1    wreg      void 
 14112 ;; Registers used:
 14113 ;;		wreg, status,2
 14114 ;; Tracked objects:
 14115 ;;		On entry : 0/0
 14116 ;;		On exit  : 0/0
 14117 ;;		Unchanged: 0/0
 14118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14119 ;;      Params:         0       0       0       0       0       0       0
 14120 ;;      Locals:         0       0       0       0       0       0       0
 14121 ;;      Temps:          0       0       0       0       0       0       0
 14122 ;;      Totals:         0       0       0       0       0       0       0
 14123 ;;Total ram usage:        0 bytes
 14124 ;; Hardware stack levels used:    1
 14125 ;; Hardware stack levels required when called:    1
 14126 ;; This function calls:
 14127 ;;		Nothing
 14128 ;; This function is called by:
 14129 ;;		_main
 14130 ;; This function uses a non-reentrant model
 14131 ;;
 14132                           
 14133                           	psect	text54
 14134  0062E0                     __ptext54:
 14135                           	callstack 0
 14136  0062E0                     _init_PORTS:
 14137                           	callstack 0
 14138  0062E0  FFFF               	dw	65535	; assembler added errata NOP
 14139  0062E2                     
 14140                           ;init_PIC.c: 63:     LATA = 0;
 14141  0062E2  0E00               	movlw	0
 14142  0062E4  6E89               	movwf	137,c	;volatile
 14143                           
 14144                           ;init_PIC.c: 64:     PORTA = 0;
 14145  0062E6  0E00               	movlw	0
 14146  0062E8  6E80               	movwf	128,c	;volatile
 14147                           
 14148                           ;init_PIC.c: 65:     TRISA = 0xF1;
 14149  0062EA  0EF1               	movlw	241
 14150  0062EC  6E92               	movwf	146,c	;volatile
 14151                           
 14152                           ;init_PIC.c: 67:     LATB = 0;
 14153  0062EE  0E00               	movlw	0
 14154  0062F0  6E8A               	movwf	138,c	;volatile
 14155                           
 14156                           ;init_PIC.c: 68:     PORTB = 0;
 14157  0062F2  0E00               	movlw	0
 14158  0062F4  6E81               	movwf	129,c	;volatile
 14159                           
 14160                           ;init_PIC.c: 69:     TRISB = 0x00;
 14161  0062F6  0E00               	movlw	0
 14162  0062F8  6E93               	movwf	147,c	;volatile
 14163                           
 14164                           ;init_PIC.c: 72:     LATC = 0;
 14165  0062FA  0E00               	movlw	0
 14166  0062FC  6E8B               	movwf	139,c	;volatile
 14167                           
 14168                           ;init_PIC.c: 73:     PORTC = 0;
 14169  0062FE  0E00               	movlw	0
 14170  006300  6E82               	movwf	130,c	;volatile
 14171                           
 14172                           ;init_PIC.c: 74:     TRISC = 0xF0;
 14173  006302  0EF0               	movlw	240
 14174  006304  6E94               	movwf	148,c	;volatile
 14175  006306                     
 14176                           ;init_PIC.c: 75:     TRISCbits.RC6 = 0;
 14177  006306  9C94               	bcf	148,6,c	;volatile
 14178  006308  0012               	return		;funcret
 14179  00630A  FFFF               	dw	65535	; errata NOP
 14180  00630C                     __end_of_init_PORTS:
 14181                           	callstack 0
 14182                           
 14183 ;; *************** function _get_reg_value *****************
 14184 ;; Defined at:
 14185 ;;		line 51 in file "serial_rs232.c"
 14186 ;; Parameters:    Size  Location     Type
 14187 ;;		None
 14188 ;; Auto vars:     Size  Location     Type
 14189 ;;  rx_char         1    0[COMRAM] unsigned char 
 14190 ;; Return value:  Size  Location     Type
 14191 ;;                  1    wreg      unsigned char 
 14192 ;; Registers used:
 14193 ;;		wreg, status,2
 14194 ;; Tracked objects:
 14195 ;;		On entry : 0/0
 14196 ;;		On exit  : 0/0
 14197 ;;		Unchanged: 0/0
 14198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14199 ;;      Params:         0       0       0       0       0       0       0
 14200 ;;      Locals:         1       0       0       0       0       0       0
 14201 ;;      Temps:          0       0       0       0       0       0       0
 14202 ;;      Totals:         1       0       0       0       0       0       0
 14203 ;;Total ram usage:        1 bytes
 14204 ;; Hardware stack levels used:    1
 14205 ;; Hardware stack levels required when called:    1
 14206 ;; This function calls:
 14207 ;;		Nothing
 14208 ;; This function is called by:
 14209 ;;		_main
 14210 ;; This function uses a non-reentrant model
 14211 ;;
 14212                           
 14213                           	psect	text55
 14214  006164                     __ptext55:
 14215                           	callstack 0
 14216  006164                     _get_reg_value:
 14217                           	callstack 0
 14218  006164  FFFF               	dw	65535	; assembler added errata NOP
 14219  006166                     
 14220                           ;serial_rs232.c: 52:     unsigned char rx_char = RCREG;
 14221  006166  CFAE F001          	movff	4014,get_reg_value@rx_char	;volatile
 14222  00616A                     
 14223                           ;serial_rs232.c: 53:     RCREG = 0;
 14224  00616A  0E00               	movlw	0
 14225  00616C  6EAE               	movwf	174,c	;volatile
 14226                           
 14227                           ;serial_rs232.c: 54:     return rx_char;
 14228  00616E  5001               	movf	get_reg_value@rx_char^0,w,c
 14229  006170  0012               	return		;funcret
 14230  006172  FFFF               	dw	65535	; errata NOP
 14231  006174                     __end_of_get_reg_value:
 14232                           	callstack 0
 14233                           
 14234 ;; *************** function _get_liters *****************
 14235 ;; Defined at:
 14236 ;;		line 36 in file "oven.c"
 14237 ;; Parameters:    Size  Location     Type
 14238 ;;		None
 14239 ;; Auto vars:     Size  Location     Type
 14240 ;;		None
 14241 ;; Return value:  Size  Location     Type
 14242 ;;                  2    2[BANK0 ] int 
 14243 ;; Registers used:
 14244 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14245 ;; Tracked objects:
 14246 ;;		On entry : 0/0
 14247 ;;		On exit  : 0/0
 14248 ;;		Unchanged: 0/0
 14249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14250 ;;      Params:         0       2       0       0       0       0       0
 14251 ;;      Locals:         0       0       0       0       0       0       0
 14252 ;;      Temps:          0       0       0       0       0       0       0
 14253 ;;      Totals:         0       2       0       0       0       0       0
 14254 ;;Total ram usage:        2 bytes
 14255 ;; Hardware stack levels used:    1
 14256 ;; Hardware stack levels required when called:    2
 14257 ;; This function calls:
 14258 ;;		___flmul
 14259 ;;		___fltol
 14260 ;;		___xxtofl
 14261 ;; This function is called by:
 14262 ;;		_main
 14263 ;; This function uses a non-reentrant model
 14264 ;;
 14265                           
 14266                           	psect	text56
 14267  006760                     __ptext56:
 14268                           	callstack 0
 14269  006760                     _get_liters:
 14270                           	callstack 0
 14271  006760  FFFF               	dw	65535	; assembler added errata NOP
 14272  006762                     
 14273                           ;oven.c: 37:     ADCON0bits.GO = 1;
 14274  006762  84C2               	bsf	194,2,c	;volatile
 14275  006764                     l415:
 14276  006764  FFFF               	dw	65535	; assembler added errata NOP
 14277  006766  B4C2               	btfsc	194,2,c	;volatile
 14278  006768  EFB8  F033         	goto	u6811
 14279  00676C  EFBB  F033         	goto	u6810
 14280  006770                     u6811:
 14281  006770  FFFF               	dw	65535	; assembler added errata NOP
 14282  006772  EFB2  F033         	goto	l415
 14283  006776                     u6810:
 14284  006776  FFFF               	dw	65535	; assembler added errata NOP
 14285  006778                     
 14286                           ;oven.c: 39:     return (int) (ADRESH * 0.01);
 14287  006778  0E0A               	movlw	10
 14288  00677A  6E31               	movwf	___flmul@a^0,c
 14289  00677C  0ED7               	movlw	215
 14290  00677E  6E32               	movwf	(___flmul@a+1)^0,c
 14291  006780  0E23               	movlw	35
 14292  006782  6E33               	movwf	(___flmul@a+2)^0,c
 14293  006784  0E3C               	movlw	60
 14294  006786  6E34               	movwf	(___flmul@a+3)^0,c
 14295  006788  50C4               	movf	196,w,c	;volatile
 14296  00678A  6E1F               	movwf	___xxtofl@val^0,c
 14297  00678C  6A20               	clrf	(___xxtofl@val+1)^0,c
 14298  00678E  6A21               	clrf	(___xxtofl@val+2)^0,c
 14299  006790  6A22               	clrf	(___xxtofl@val+3)^0,c
 14300  006792  0E01               	movlw	1
 14301  006794  EC94  F01D         	call	___xxtofl
 14302  006798  C01F  F02D         	movff	?___xxtofl,___flmul@b
 14303  00679C  C020  F02E         	movff	?___xxtofl+1,___flmul@b+1
 14304  0067A0  C021  F02F         	movff	?___xxtofl+2,___flmul@b+2
 14305  0067A4  C022  F030         	movff	?___xxtofl+3,___flmul@b+3
 14306  0067A8  ECD5  F011         	call	___flmul	;wreg free
 14307  0067AC  C02D  F077         	movff	?___flmul,___fltol@f1
 14308  0067B0  C02E  F078         	movff	?___flmul+1,___fltol@f1+1
 14309  0067B4  C02F  F079         	movff	?___flmul+2,___fltol@f1+2
 14310  0067B8  C030  F07A         	movff	?___flmul+3,___fltol@f1+3
 14311  0067BC  ECB8  F03A         	call	___fltol	;wreg free
 14312  0067C0  C077  F0BA         	movff	?___fltol,?_get_liters
 14313  0067C4  C078  F0BB         	movff	?___fltol+1,?_get_liters+1
 14314  0067C8  0012               	return		;funcret
 14315  0067CA  FFFF               	dw	65535	; errata NOP
 14316  0067CC                     __end_of_get_liters:
 14317                           	callstack 0
 14318                           
 14319 ;; *************** function ___fltol *****************
 14320 ;; Defined at:
 14321 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
 14322 ;; Parameters:    Size  Location     Type
 14323 ;;  f1              4  118[COMRAM] int 
 14324 ;; Auto vars:     Size  Location     Type
 14325 ;;  exp1            1    1[BANK0 ] unsigned char 
 14326 ;;  sign1           1    0[BANK0 ] unsigned char 
 14327 ;; Return value:  Size  Location     Type
 14328 ;;                  4  118[COMRAM] long 
 14329 ;; Registers used:
 14330 ;;		wreg, status,2, status,0
 14331 ;; Tracked objects:
 14332 ;;		On entry : 0/0
 14333 ;;		On exit  : 0/0
 14334 ;;		Unchanged: 0/0
 14335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14336 ;;      Params:         4       0       0       0       0       0       0
 14337 ;;      Locals:         0       2       0       0       0       0       0
 14338 ;;      Temps:          4       0       0       0       0       0       0
 14339 ;;      Totals:         8       2       0       0       0       0       0
 14340 ;;Total ram usage:       10 bytes
 14341 ;; Hardware stack levels used:    1
 14342 ;; Hardware stack levels required when called:    1
 14343 ;; This function calls:
 14344 ;;		Nothing
 14345 ;; This function is called by:
 14346 ;;		_init_USART
 14347 ;;		_init_timer_2
 14348 ;;		_update_pwm_duty_ccp1
 14349 ;;		_get_temperature
 14350 ;;		_get_liters
 14351 ;; This function uses a non-reentrant model
 14352 ;;
 14353                           
 14354                           	psect	text57
 14355  007570                     __ptext57:
 14356                           	callstack 0
 14357  007570                     ___fltol:
 14358                           	callstack 0
 14359  007570  FFFF               	dw	65535	; assembler added errata NOP
 14360  007572  3479               	rlcf	(___fltol@f1+2)^0,w,c
 14361  007574  347A               	rlcf	(___fltol@f1+3)^0,w,c
 14362  007576  0100               	movlb	0	; () banked
 14363  007578  6FB9               	movwf	___fltol@exp1& (0+255),b
 14364  00757A  51B9               	movf	___fltol@exp1& (0+255),w,b
 14365  00757C  A4D8               	btfss	status,2,c
 14366  00757E  EFC3  F03A         	goto	u6221
 14367  007582  EFC6  F03A         	goto	u6220
 14368  007586                     u6221:
 14369  007586  FFFF               	dw	65535	; assembler added errata NOP
 14370  007588  EFD2  F03A         	goto	l5127
 14371  00758C                     u6220:
 14372  00758C  FFFF               	dw	65535	; assembler added errata NOP
 14373  00758E                     l5123:
 14374  00758E  FFFF               	dw	65535	; assembler added errata NOP
 14375                           
 14376                           ; BSR set to: 0
 14377  007590  0E00               	movlw	0
 14378  007592  6E77               	movwf	?___fltol^0,c
 14379  007594  0E00               	movlw	0
 14380  007596  6E78               	movwf	(?___fltol+1)^0,c
 14381  007598  0E00               	movlw	0
 14382  00759A  6E79               	movwf	(?___fltol+2)^0,c
 14383  00759C  0E00               	movlw	0
 14384  00759E  6E7A               	movwf	(?___fltol+3)^0,c
 14385  0075A0  EF51  F03B         	goto	l730
 14386  0075A4                     l5127:
 14387  0075A4  FFFF               	dw	65535	; assembler added errata NOP
 14388                           
 14389                           ; BSR set to: 0
 14390  0075A6  C077  F07B         	movff	___fltol@f1,??___fltol
 14391  0075AA  C078  F07C         	movff	___fltol@f1+1,??___fltol+1
 14392  0075AE  C079  F07D         	movff	___fltol@f1+2,??___fltol+2
 14393  0075B2  C07A  F07E         	movff	___fltol@f1+3,??___fltol+3
 14394  0075B6  0E20               	movlw	32
 14395  0075B8  EFE4  F03A         	goto	u6230
 14396  0075BC                     u6235:
 14397  0075BC  FFFF               	dw	65535	; assembler added errata NOP
 14398  0075BE  90D8               	bcf	status,0,c
 14399  0075C0  327E               	rrcf	(??___fltol+3)^0,f,c
 14400  0075C2  327D               	rrcf	(??___fltol+2)^0,f,c
 14401  0075C4  327C               	rrcf	(??___fltol+1)^0,f,c
 14402  0075C6  327B               	rrcf	??___fltol^0,f,c
 14403  0075C8                     u6230:
 14404  0075C8  FFFF               	dw	65535	; assembler added errata NOP
 14405  0075CA  2EE8               	decfsz	wreg,f,c
 14406  0075CC  EFDE  F03A         	goto	u6235
 14407  0075D0  507B               	movf	??___fltol^0,w,c
 14408  0075D2  6FB8               	movwf	___fltol@sign1& (0+255),b
 14409  0075D4                     
 14410                           ; BSR set to: 0
 14411  0075D4  8E79               	bsf	(___fltol@f1+2)^0,7,c
 14412  0075D6                     
 14413                           ; BSR set to: 0
 14414  0075D6  0EFF               	movlw	255
 14415  0075D8  1677               	andwf	___fltol@f1^0,f,c
 14416  0075DA  0EFF               	movlw	255
 14417  0075DC  1678               	andwf	(___fltol@f1+1)^0,f,c
 14418  0075DE  0EFF               	movlw	255
 14419  0075E0  1679               	andwf	(___fltol@f1+2)^0,f,c
 14420  0075E2  0E00               	movlw	0
 14421  0075E4  167A               	andwf	(___fltol@f1+3)^0,f,c
 14422  0075E6                     
 14423                           ; BSR set to: 0
 14424  0075E6  0E96               	movlw	150
 14425  0075E8  5FB9               	subwf	___fltol@exp1& (0+255),f,b
 14426  0075EA                     
 14427                           ; BSR set to: 0
 14428  0075EA  BFB9               	btfsc	___fltol@exp1& (0+255),7,b
 14429  0075EC  EFFD  F03A         	goto	u6240
 14430  0075F0  EFFA  F03A         	goto	u6241
 14431  0075F4                     u6241:
 14432  0075F4  FFFF               	dw	65535	; assembler added errata NOP
 14433  0075F6  EF17  F03B         	goto	l5147
 14434  0075FA                     u6240:
 14435  0075FA  FFFF               	dw	65535	; assembler added errata NOP
 14436  0075FC                     
 14437                           ; BSR set to: 0
 14438  0075FC  51B9               	movf	___fltol@exp1& (0+255),w,b
 14439  0075FE  0A80               	xorlw	128
 14440  007600  0F97               	addlw	151
 14441  007602  B0D8               	btfsc	status,0,c
 14442  007604  EF06  F03B         	goto	u6251
 14443  007608  EF09  F03B         	goto	u6250
 14444  00760C                     u6251:
 14445  00760C  FFFF               	dw	65535	; assembler added errata NOP
 14446  00760E  EF0C  F03B         	goto	l5143
 14447  007612                     u6250:
 14448  007612  FFFF               	dw	65535	; assembler added errata NOP
 14449  007614  EFC7  F03A         	goto	l5123
 14450  007618                     l5143:
 14451  007618  FFFF               	dw	65535	; assembler added errata NOP
 14452                           
 14453                           ; BSR set to: 0
 14454  00761A  90D8               	bcf	status,0,c
 14455  00761C  327A               	rrcf	(___fltol@f1+3)^0,f,c
 14456  00761E  3279               	rrcf	(___fltol@f1+2)^0,f,c
 14457  007620  3278               	rrcf	(___fltol@f1+1)^0,f,c
 14458  007622  3277               	rrcf	___fltol@f1^0,f,c
 14459  007624                     
 14460                           ; BSR set to: 0
 14461  007624  3FB9               	incfsz	___fltol@exp1& (0+255),f,b
 14462  007626  EF0C  F03B         	goto	l5143
 14463  00762A  EF35  F03B         	goto	l5157
 14464  00762E                     l5147:
 14465  00762E  FFFF               	dw	65535	; assembler added errata NOP
 14466                           
 14467                           ; BSR set to: 0
 14468  007630  0E1F               	movlw	31
 14469  007632  65B9               	cpfsgt	___fltol@exp1& (0+255),b
 14470  007634  EF1E  F03B         	goto	u6261
 14471  007638  EF21  F03B         	goto	u6260
 14472  00763C                     u6261:
 14473  00763C  FFFF               	dw	65535	; assembler added errata NOP
 14474  00763E  EF2B  F03B         	goto	l5155
 14475  007642                     u6260:
 14476  007642  FFFF               	dw	65535	; assembler added errata NOP
 14477  007644  EFC7  F03A         	goto	l5123
 14478  007648                     l5153:
 14479  007648  FFFF               	dw	65535	; assembler added errata NOP
 14480                           
 14481                           ; BSR set to: 0
 14482  00764A  90D8               	bcf	status,0,c
 14483  00764C  3677               	rlcf	___fltol@f1^0,f,c
 14484  00764E  3678               	rlcf	(___fltol@f1+1)^0,f,c
 14485  007650  3679               	rlcf	(___fltol@f1+2)^0,f,c
 14486  007652  367A               	rlcf	(___fltol@f1+3)^0,f,c
 14487  007654  07B9               	decf	___fltol@exp1& (0+255),f,b
 14488  007656                     l5155:
 14489  007656  FFFF               	dw	65535	; assembler added errata NOP
 14490                           
 14491                           ; BSR set to: 0
 14492  007658  51B9               	movf	___fltol@exp1& (0+255),w,b
 14493  00765A  A4D8               	btfss	status,2,c
 14494  00765C  EF32  F03B         	goto	u6271
 14495  007660  EF35  F03B         	goto	u6270
 14496  007664                     u6271:
 14497  007664  FFFF               	dw	65535	; assembler added errata NOP
 14498  007666  EF24  F03B         	goto	l5153
 14499  00766A                     u6270:
 14500  00766A                     l5157:
 14501  00766A  FFFF               	dw	65535	; assembler added errata NOP
 14502                           
 14503                           ; BSR set to: 0
 14504  00766C  51B8               	movf	___fltol@sign1& (0+255),w,b
 14505  00766E  B4D8               	btfsc	status,2,c
 14506  007670  EF3C  F03B         	goto	u6281
 14507  007674  EF3F  F03B         	goto	u6280
 14508  007678                     u6281:
 14509  007678  FFFF               	dw	65535	; assembler added errata NOP
 14510  00767A  EF48  F03B         	goto	l5161
 14511  00767E                     u6280:
 14512  00767E  FFFF               	dw	65535	; assembler added errata NOP
 14513  007680                     
 14514                           ; BSR set to: 0
 14515  007680  1E7A               	comf	(___fltol@f1+3)^0,f,c
 14516  007682  1E79               	comf	(___fltol@f1+2)^0,f,c
 14517  007684  1E78               	comf	(___fltol@f1+1)^0,f,c
 14518  007686  6C77               	negf	___fltol@f1^0,c
 14519  007688  0E00               	movlw	0
 14520  00768A  2278               	addwfc	(___fltol@f1+1)^0,f,c
 14521  00768C  2279               	addwfc	(___fltol@f1+2)^0,f,c
 14522  00768E  227A               	addwfc	(___fltol@f1+3)^0,f,c
 14523  007690                     l5161:
 14524  007690  FFFF               	dw	65535	; assembler added errata NOP
 14525                           
 14526                           ; BSR set to: 0
 14527  007692  C077  F077         	movff	___fltol@f1,?___fltol
 14528  007696  C078  F078         	movff	___fltol@f1+1,?___fltol+1
 14529  00769A  C079  F079         	movff	___fltol@f1+2,?___fltol+2
 14530  00769E  C07A  F07A         	movff	___fltol@f1+3,?___fltol+3
 14531  0076A2                     l730:
 14532  0076A2  FFFF               	dw	65535	; assembler added errata NOP
 14533                           
 14534                           ; BSR set to: 0
 14535  0076A4  0012               	return		;funcret
 14536  0076A6  FFFF               	dw	65535	; errata NOP
 14537  0076A8                     __end_of___fltol:
 14538                           	callstack 0
 14539                           
 14540 ;; *************** function ___flmul *****************
 14541 ;; Defined at:
 14542 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 14543 ;; Parameters:    Size  Location     Type
 14544 ;;  b               4   44[COMRAM] long 
 14545 ;;  a               4   48[COMRAM] long 
 14546 ;; Auto vars:     Size  Location     Type
 14547 ;;  prod            4   63[COMRAM] struct .
 14548 ;;  grs             4   57[COMRAM] unsigned long 
 14549 ;;  temp            2   67[COMRAM] struct .
 14550 ;;  bexp            1   62[COMRAM] unsigned char 
 14551 ;;  aexp            1   61[COMRAM] unsigned char 
 14552 ;;  sign            1   56[COMRAM] unsigned char 
 14553 ;; Return value:  Size  Location     Type
 14554 ;;                  4   44[COMRAM] unsigned char 
 14555 ;; Registers used:
 14556 ;;		wreg, status,2, status,0, prodl, prodh
 14557 ;; Tracked objects:
 14558 ;;		On entry : 0/0
 14559 ;;		On exit  : 0/0
 14560 ;;		Unchanged: 0/0
 14561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14562 ;;      Params:         8       0       0       0       0       0       0
 14563 ;;      Locals:        13       0       0       0       0       0       0
 14564 ;;      Temps:          4       0       0       0       0       0       0
 14565 ;;      Totals:        25       0       0       0       0       0       0
 14566 ;;Total ram usage:       25 bytes
 14567 ;; Hardware stack levels used:    1
 14568 ;; Hardware stack levels required when called:    1
 14569 ;; This function calls:
 14570 ;;		Nothing
 14571 ;; This function is called by:
 14572 ;;		_init_timer_2
 14573 ;;		_update_pwm_duty_ccp1
 14574 ;;		_get_temperature
 14575 ;;		_get_liters
 14576 ;;		_roundf
 14577 ;; This function uses a non-reentrant model
 14578 ;;
 14579                           
 14580                           	psect	text58
 14581  0023AA                     __ptext58:
 14582                           	callstack 0
 14583  0023AA                     ___flmul:
 14584                           	callstack 0
 14585  0023AA  FFFF               	dw	65535	; assembler added errata NOP
 14586  0023AC  5030               	movf	(___flmul@b+3)^0,w,c
 14587  0023AE  0B80               	andlw	128
 14588  0023B0  6E39               	movwf	___flmul@sign^0,c
 14589  0023B2  5030               	movf	(___flmul@b+3)^0,w,c
 14590  0023B4  2430               	addwf	(___flmul@b+3)^0,w,c
 14591  0023B6  6E3F               	movwf	___flmul@bexp^0,c
 14592  0023B8  AE2F               	btfss	(___flmul@b+2)^0,7,c
 14593  0023BA  EFE1  F011         	goto	u5971
 14594  0023BE  EFE4  F011         	goto	u5970
 14595  0023C2                     u5971:
 14596  0023C2  FFFF               	dw	65535	; assembler added errata NOP
 14597  0023C4  EFE6  F011         	goto	l4961
 14598  0023C8                     u5970:
 14599  0023C8  FFFF               	dw	65535	; assembler added errata NOP
 14600  0023CA  803F               	bsf	___flmul@bexp^0,0,c
 14601  0023CC                     l4961:
 14602  0023CC  FFFF               	dw	65535	; assembler added errata NOP
 14603  0023CE  503F               	movf	___flmul@bexp^0,w,c
 14604  0023D0  B4D8               	btfsc	status,2,c
 14605  0023D2  EFED  F011         	goto	u5981
 14606  0023D6  EFF0  F011         	goto	u5980
 14607  0023DA                     u5981:
 14608  0023DA  FFFF               	dw	65535	; assembler added errata NOP
 14609  0023DC  EF07  F012         	goto	l4969
 14610  0023E0                     u5980:
 14611  0023E0  FFFF               	dw	65535	; assembler added errata NOP
 14612  0023E2  283F               	incf	___flmul@bexp^0,w,c
 14613  0023E4  A4D8               	btfss	status,2,c
 14614  0023E6  EFF7  F011         	goto	u5991
 14615  0023EA  EFFA  F011         	goto	u5990
 14616  0023EE                     u5991:
 14617  0023EE  FFFF               	dw	65535	; assembler added errata NOP
 14618  0023F0  EF03  F012         	goto	l4967
 14619  0023F4                     u5990:
 14620  0023F4  FFFF               	dw	65535	; assembler added errata NOP
 14621  0023F6  0E00               	movlw	0
 14622  0023F8  6E2D               	movwf	___flmul@b^0,c
 14623  0023FA  0E00               	movlw	0
 14624  0023FC  6E2E               	movwf	(___flmul@b+1)^0,c
 14625  0023FE  0E00               	movlw	0
 14626  002400  6E2F               	movwf	(___flmul@b+2)^0,c
 14627  002402  0E00               	movlw	0
 14628  002404  6E30               	movwf	(___flmul@b+3)^0,c
 14629  002406                     l4967:
 14630  002406  FFFF               	dw	65535	; assembler added errata NOP
 14631  002408  8E2F               	bsf	(___flmul@b+2)^0,7,c
 14632  00240A  EF10  F012         	goto	l4971
 14633  00240E                     l4969:
 14634  00240E  FFFF               	dw	65535	; assembler added errata NOP
 14635  002410  0E00               	movlw	0
 14636  002412  6E2D               	movwf	___flmul@b^0,c
 14637  002414  0E00               	movlw	0
 14638  002416  6E2E               	movwf	(___flmul@b+1)^0,c
 14639  002418  0E00               	movlw	0
 14640  00241A  6E2F               	movwf	(___flmul@b+2)^0,c
 14641  00241C  0E00               	movlw	0
 14642  00241E  6E30               	movwf	(___flmul@b+3)^0,c
 14643  002420                     l4971:
 14644  002420  FFFF               	dw	65535	; assembler added errata NOP
 14645  002422  5034               	movf	(___flmul@a+3)^0,w,c
 14646  002424  0B80               	andlw	128
 14647  002426  1A39               	xorwf	___flmul@sign^0,f,c
 14648  002428  5034               	movf	(___flmul@a+3)^0,w,c
 14649  00242A  2434               	addwf	(___flmul@a+3)^0,w,c
 14650  00242C  6E3E               	movwf	___flmul@aexp^0,c
 14651  00242E  AE33               	btfss	(___flmul@a+2)^0,7,c
 14652  002430  EF1C  F012         	goto	u6001
 14653  002434  EF1F  F012         	goto	u6000
 14654  002438                     u6001:
 14655  002438  FFFF               	dw	65535	; assembler added errata NOP
 14656  00243A  EF21  F012         	goto	l4979
 14657  00243E                     u6000:
 14658  00243E  FFFF               	dw	65535	; assembler added errata NOP
 14659  002440  803E               	bsf	___flmul@aexp^0,0,c
 14660  002442                     l4979:
 14661  002442  FFFF               	dw	65535	; assembler added errata NOP
 14662  002444  503E               	movf	___flmul@aexp^0,w,c
 14663  002446  B4D8               	btfsc	status,2,c
 14664  002448  EF28  F012         	goto	u6011
 14665  00244C  EF2B  F012         	goto	u6010
 14666  002450                     u6011:
 14667  002450  FFFF               	dw	65535	; assembler added errata NOP
 14668  002452  EF42  F012         	goto	l4987
 14669  002456                     u6010:
 14670  002456  FFFF               	dw	65535	; assembler added errata NOP
 14671  002458  283E               	incf	___flmul@aexp^0,w,c
 14672  00245A  A4D8               	btfss	status,2,c
 14673  00245C  EF32  F012         	goto	u6021
 14674  002460  EF35  F012         	goto	u6020
 14675  002464                     u6021:
 14676  002464  FFFF               	dw	65535	; assembler added errata NOP
 14677  002466  EF3E  F012         	goto	l4985
 14678  00246A                     u6020:
 14679  00246A  FFFF               	dw	65535	; assembler added errata NOP
 14680  00246C  0E00               	movlw	0
 14681  00246E  6E31               	movwf	___flmul@a^0,c
 14682  002470  0E00               	movlw	0
 14683  002472  6E32               	movwf	(___flmul@a+1)^0,c
 14684  002474  0E00               	movlw	0
 14685  002476  6E33               	movwf	(___flmul@a+2)^0,c
 14686  002478  0E00               	movlw	0
 14687  00247A  6E34               	movwf	(___flmul@a+3)^0,c
 14688  00247C                     l4985:
 14689  00247C  FFFF               	dw	65535	; assembler added errata NOP
 14690  00247E  8E33               	bsf	(___flmul@a+2)^0,7,c
 14691  002480  EF4B  F012         	goto	l1047
 14692  002484                     l4987:
 14693  002484  FFFF               	dw	65535	; assembler added errata NOP
 14694  002486  0E00               	movlw	0
 14695  002488  6E31               	movwf	___flmul@a^0,c
 14696  00248A  0E00               	movlw	0
 14697  00248C  6E32               	movwf	(___flmul@a+1)^0,c
 14698  00248E  0E00               	movlw	0
 14699  002490  6E33               	movwf	(___flmul@a+2)^0,c
 14700  002492  0E00               	movlw	0
 14701  002494  6E34               	movwf	(___flmul@a+3)^0,c
 14702  002496                     l1047:
 14703  002496  FFFF               	dw	65535	; assembler added errata NOP
 14704  002498  503E               	movf	___flmul@aexp^0,w,c
 14705  00249A  B4D8               	btfsc	status,2,c
 14706  00249C  EF52  F012         	goto	u6031
 14707  0024A0  EF55  F012         	goto	u6030
 14708  0024A4                     u6031:
 14709  0024A4  FFFF               	dw	65535	; assembler added errata NOP
 14710  0024A6  EF5F  F012         	goto	l4991
 14711  0024AA                     u6030:
 14712  0024AA  FFFF               	dw	65535	; assembler added errata NOP
 14713  0024AC  503F               	movf	___flmul@bexp^0,w,c
 14714  0024AE  A4D8               	btfss	status,2,c
 14715  0024B0  EF5C  F012         	goto	u6041
 14716  0024B4  EF5F  F012         	goto	u6040
 14717  0024B8                     u6041:
 14718  0024B8  FFFF               	dw	65535	; assembler added errata NOP
 14719  0024BA  EF6A  F012         	goto	l4995
 14720  0024BE                     u6040:
 14721  0024BE                     l4991:
 14722  0024BE  FFFF               	dw	65535	; assembler added errata NOP
 14723  0024C0  0E00               	movlw	0
 14724  0024C2  6E2D               	movwf	?___flmul^0,c
 14725  0024C4  0E00               	movlw	0
 14726  0024C6  6E2E               	movwf	(?___flmul+1)^0,c
 14727  0024C8  0E00               	movlw	0
 14728  0024CA  6E2F               	movwf	(?___flmul+2)^0,c
 14729  0024CC  0E00               	movlw	0
 14730  0024CE  6E30               	movwf	(?___flmul+3)^0,c
 14731  0024D0  EF24  F014         	goto	l1051
 14732  0024D4                     l4995:
 14733  0024D4  FFFF               	dw	65535	; assembler added errata NOP
 14734  0024D6  5033               	movf	(___flmul@a+2)^0,w,c
 14735  0024D8  022D               	mulwf	___flmul@b^0,c
 14736  0024DA  CFF3 F044          	movff	prodl,___flmul@temp
 14737  0024DE  CFF4 F045          	movff	prodh,___flmul@temp+1
 14738  0024E2  5044               	movf	___flmul@temp^0,w,c
 14739  0024E4  6E3A               	movwf	___flmul@grs^0,c
 14740  0024E6  6A3B               	clrf	(___flmul@grs+1)^0,c
 14741  0024E8  6A3C               	clrf	(___flmul@grs+2)^0,c
 14742  0024EA  6A3D               	clrf	(___flmul@grs+3)^0,c
 14743  0024EC  5045               	movf	(___flmul@temp+1)^0,w,c
 14744  0024EE  6E40               	movwf	___flmul@prod^0,c
 14745  0024F0  6A41               	clrf	(___flmul@prod+1)^0,c
 14746  0024F2  6A42               	clrf	(___flmul@prod+2)^0,c
 14747  0024F4  6A43               	clrf	(___flmul@prod+3)^0,c
 14748  0024F6  5032               	movf	(___flmul@a+1)^0,w,c
 14749  0024F8  022E               	mulwf	(___flmul@b+1)^0,c
 14750  0024FA  CFF3 F044          	movff	prodl,___flmul@temp
 14751  0024FE  CFF4 F045          	movff	prodh,___flmul@temp+1
 14752  002502  5044               	movf	___flmul@temp^0,w,c
 14753  002504  263A               	addwf	___flmul@grs^0,f,c
 14754  002506  0E00               	movlw	0
 14755  002508  223B               	addwfc	(___flmul@grs+1)^0,f,c
 14756  00250A  223C               	addwfc	(___flmul@grs+2)^0,f,c
 14757  00250C  223D               	addwfc	(___flmul@grs+3)^0,f,c
 14758  00250E  5045               	movf	(___flmul@temp+1)^0,w,c
 14759  002510  2640               	addwf	___flmul@prod^0,f,c
 14760  002512  0E00               	movlw	0
 14761  002514  2241               	addwfc	(___flmul@prod+1)^0,f,c
 14762  002516  2242               	addwfc	(___flmul@prod+2)^0,f,c
 14763  002518  2243               	addwfc	(___flmul@prod+3)^0,f,c
 14764  00251A  5031               	movf	___flmul@a^0,w,c
 14765  00251C  022F               	mulwf	(___flmul@b+2)^0,c
 14766  00251E  CFF3 F044          	movff	prodl,___flmul@temp
 14767  002522  CFF4 F045          	movff	prodh,___flmul@temp+1
 14768  002526  5044               	movf	___flmul@temp^0,w,c
 14769  002528  263A               	addwf	___flmul@grs^0,f,c
 14770  00252A  0E00               	movlw	0
 14771  00252C  223B               	addwfc	(___flmul@grs+1)^0,f,c
 14772  00252E  223C               	addwfc	(___flmul@grs+2)^0,f,c
 14773  002530  223D               	addwfc	(___flmul@grs+3)^0,f,c
 14774  002532  5045               	movf	(___flmul@temp+1)^0,w,c
 14775  002534  2640               	addwf	___flmul@prod^0,f,c
 14776  002536  0E00               	movlw	0
 14777  002538  2241               	addwfc	(___flmul@prod+1)^0,f,c
 14778  00253A  2242               	addwfc	(___flmul@prod+2)^0,f,c
 14779  00253C  2243               	addwfc	(___flmul@prod+3)^0,f,c
 14780  00253E  C03C  F03D         	movff	___flmul@grs+2,___flmul@grs+3
 14781  002542  C03B  F03C         	movff	___flmul@grs+1,___flmul@grs+2
 14782  002546  C03A  F03B         	movff	___flmul@grs,___flmul@grs+1
 14783  00254A  6A3A               	clrf	___flmul@grs^0,c
 14784  00254C  5031               	movf	___flmul@a^0,w,c
 14785  00254E  022E               	mulwf	(___flmul@b+1)^0,c
 14786  002550  CFF3 F044          	movff	prodl,___flmul@temp
 14787  002554  CFF4 F045          	movff	prodh,___flmul@temp+1
 14788  002558  5044               	movf	___flmul@temp^0,w,c
 14789  00255A  263A               	addwf	___flmul@grs^0,f,c
 14790  00255C  5045               	movf	(___flmul@temp+1)^0,w,c
 14791  00255E  223B               	addwfc	(___flmul@grs+1)^0,f,c
 14792  002560  0E00               	movlw	0
 14793  002562  223C               	addwfc	(___flmul@grs+2)^0,f,c
 14794  002564  0E00               	movlw	0
 14795  002566  223D               	addwfc	(___flmul@grs+3)^0,f,c
 14796  002568  5032               	movf	(___flmul@a+1)^0,w,c
 14797  00256A  022D               	mulwf	___flmul@b^0,c
 14798  00256C  CFF3 F044          	movff	prodl,___flmul@temp
 14799  002570  CFF4 F045          	movff	prodh,___flmul@temp+1
 14800  002574  5044               	movf	___flmul@temp^0,w,c
 14801  002576  263A               	addwf	___flmul@grs^0,f,c
 14802  002578  5045               	movf	(___flmul@temp+1)^0,w,c
 14803  00257A  223B               	addwfc	(___flmul@grs+1)^0,f,c
 14804  00257C  0E00               	movlw	0
 14805  00257E  223C               	addwfc	(___flmul@grs+2)^0,f,c
 14806  002580  0E00               	movlw	0
 14807  002582  223D               	addwfc	(___flmul@grs+3)^0,f,c
 14808  002584  C03C  F03D         	movff	___flmul@grs+2,___flmul@grs+3
 14809  002588  C03B  F03C         	movff	___flmul@grs+1,___flmul@grs+2
 14810  00258C  C03A  F03B         	movff	___flmul@grs,___flmul@grs+1
 14811  002590  6A3A               	clrf	___flmul@grs^0,c
 14812  002592  5031               	movf	___flmul@a^0,w,c
 14813  002594  022D               	mulwf	___flmul@b^0,c
 14814  002596  CFF3 F044          	movff	prodl,___flmul@temp
 14815  00259A  CFF4 F045          	movff	prodh,___flmul@temp+1
 14816  00259E  5044               	movf	___flmul@temp^0,w,c
 14817  0025A0  263A               	addwf	___flmul@grs^0,f,c
 14818  0025A2  5045               	movf	(___flmul@temp+1)^0,w,c
 14819  0025A4  223B               	addwfc	(___flmul@grs+1)^0,f,c
 14820  0025A6  0E00               	movlw	0
 14821  0025A8  223C               	addwfc	(___flmul@grs+2)^0,f,c
 14822  0025AA  0E00               	movlw	0
 14823  0025AC  223D               	addwfc	(___flmul@grs+3)^0,f,c
 14824  0025AE  5033               	movf	(___flmul@a+2)^0,w,c
 14825  0025B0  022E               	mulwf	(___flmul@b+1)^0,c
 14826  0025B2  CFF3 F044          	movff	prodl,___flmul@temp
 14827  0025B6  CFF4 F045          	movff	prodh,___flmul@temp+1
 14828  0025BA  5044               	movf	___flmul@temp^0,w,c
 14829  0025BC  2640               	addwf	___flmul@prod^0,f,c
 14830  0025BE  5045               	movf	(___flmul@temp+1)^0,w,c
 14831  0025C0  2241               	addwfc	(___flmul@prod+1)^0,f,c
 14832  0025C2  0E00               	movlw	0
 14833  0025C4  2242               	addwfc	(___flmul@prod+2)^0,f,c
 14834  0025C6  0E00               	movlw	0
 14835  0025C8  2243               	addwfc	(___flmul@prod+3)^0,f,c
 14836  0025CA  5032               	movf	(___flmul@a+1)^0,w,c
 14837  0025CC  022F               	mulwf	(___flmul@b+2)^0,c
 14838  0025CE  CFF3 F044          	movff	prodl,___flmul@temp
 14839  0025D2  CFF4 F045          	movff	prodh,___flmul@temp+1
 14840  0025D6  5044               	movf	___flmul@temp^0,w,c
 14841  0025D8  2640               	addwf	___flmul@prod^0,f,c
 14842  0025DA  5045               	movf	(___flmul@temp+1)^0,w,c
 14843  0025DC  2241               	addwfc	(___flmul@prod+1)^0,f,c
 14844  0025DE  0E00               	movlw	0
 14845  0025E0  2242               	addwfc	(___flmul@prod+2)^0,f,c
 14846  0025E2  0E00               	movlw	0
 14847  0025E4  2243               	addwfc	(___flmul@prod+3)^0,f,c
 14848  0025E6  5033               	movf	(___flmul@a+2)^0,w,c
 14849  0025E8  022F               	mulwf	(___flmul@b+2)^0,c
 14850  0025EA  CFF3 F044          	movff	prodl,___flmul@temp
 14851  0025EE  CFF4 F045          	movff	prodh,___flmul@temp+1
 14852  0025F2  5044               	movf	___flmul@temp^0,w,c
 14853  0025F4  6E35               	movwf	??___flmul^0,c
 14854  0025F6  5045               	movf	(___flmul@temp+1)^0,w,c
 14855  0025F8  6E36               	movwf	(??___flmul+1)^0,c
 14856  0025FA  6A37               	clrf	(??___flmul+2)^0,c
 14857  0025FC  6A38               	clrf	(??___flmul+3)^0,c
 14858  0025FE  C037  F038         	movff	??___flmul+2,??___flmul+3
 14859  002602  C036  F037         	movff	??___flmul+1,??___flmul+2
 14860  002606  C035  F036         	movff	??___flmul,??___flmul+1
 14861  00260A  6A35               	clrf	??___flmul^0,c
 14862  00260C  5035               	movf	??___flmul^0,w,c
 14863  00260E  2640               	addwf	___flmul@prod^0,f,c
 14864  002610  5036               	movf	(??___flmul+1)^0,w,c
 14865  002612  2241               	addwfc	(___flmul@prod+1)^0,f,c
 14866  002614  5037               	movf	(??___flmul+2)^0,w,c
 14867  002616  2242               	addwfc	(___flmul@prod+2)^0,f,c
 14868  002618  5038               	movf	(??___flmul+3)^0,w,c
 14869  00261A  2243               	addwfc	(___flmul@prod+3)^0,f,c
 14870  00261C  C03A  F035         	movff	___flmul@grs,??___flmul
 14871  002620  C03B  F036         	movff	___flmul@grs+1,??___flmul+1
 14872  002624  C03C  F037         	movff	___flmul@grs+2,??___flmul+2
 14873  002628  C03D  F038         	movff	___flmul@grs+3,??___flmul+3
 14874  00262C  0E19               	movlw	25
 14875  00262E  EF1F  F013         	goto	u6050
 14876  002632                     u6055:
 14877  002632  FFFF               	dw	65535	; assembler added errata NOP
 14878  002634  90D8               	bcf	status,0,c
 14879  002636  3238               	rrcf	(??___flmul+3)^0,f,c
 14880  002638  3237               	rrcf	(??___flmul+2)^0,f,c
 14881  00263A  3236               	rrcf	(??___flmul+1)^0,f,c
 14882  00263C  3235               	rrcf	??___flmul^0,f,c
 14883  00263E                     u6050:
 14884  00263E  FFFF               	dw	65535	; assembler added errata NOP
 14885  002640  2EE8               	decfsz	wreg,f,c
 14886  002642  EF19  F013         	goto	u6055
 14887  002646  5035               	movf	??___flmul^0,w,c
 14888  002648  2640               	addwf	___flmul@prod^0,f,c
 14889  00264A  5036               	movf	(??___flmul+1)^0,w,c
 14890  00264C  2241               	addwfc	(___flmul@prod+1)^0,f,c
 14891  00264E  5037               	movf	(??___flmul+2)^0,w,c
 14892  002650  2242               	addwfc	(___flmul@prod+2)^0,f,c
 14893  002652  5038               	movf	(??___flmul+3)^0,w,c
 14894  002654  2243               	addwfc	(___flmul@prod+3)^0,f,c
 14895  002656  C03C  F03D         	movff	___flmul@grs+2,___flmul@grs+3
 14896  00265A  C03B  F03C         	movff	___flmul@grs+1,___flmul@grs+2
 14897  00265E  C03A  F03B         	movff	___flmul@grs,___flmul@grs+1
 14898  002662  6A3A               	clrf	___flmul@grs^0,c
 14899  002664  503E               	movf	___flmul@aexp^0,w,c
 14900  002666  C03F  F035         	movff	___flmul@bexp,??___flmul
 14901  00266A  6A36               	clrf	(??___flmul+1)^0,c
 14902  00266C  2635               	addwf	??___flmul^0,f,c
 14903  00266E  0E00               	movlw	0
 14904  002670  2236               	addwfc	(??___flmul+1)^0,f,c
 14905  002672  0E82               	movlw	130
 14906  002674  2435               	addwf	??___flmul^0,w,c
 14907  002676  6E44               	movwf	___flmul@temp^0,c
 14908  002678  0EFF               	movlw	255
 14909  00267A  2036               	addwfc	(??___flmul+1)^0,w,c
 14910  00267C  6E45               	movwf	(___flmul@temp+1)^0,c
 14911  00267E  EF5A  F013         	goto	l5043
 14912  002682                     l5037:
 14913  002682  FFFF               	dw	65535	; assembler added errata NOP
 14914  002684  90D8               	bcf	status,0,c
 14915  002686  3640               	rlcf	___flmul@prod^0,f,c
 14916  002688  3641               	rlcf	(___flmul@prod+1)^0,f,c
 14917  00268A  3642               	rlcf	(___flmul@prod+2)^0,f,c
 14918  00268C  3643               	rlcf	(___flmul@prod+3)^0,f,c
 14919  00268E  AE3D               	btfss	(___flmul@grs+3)^0,7,c
 14920  002690  EF4C  F013         	goto	u6061
 14921  002694  EF4F  F013         	goto	u6060
 14922  002698                     u6061:
 14923  002698  FFFF               	dw	65535	; assembler added errata NOP
 14924  00269A  EF51  F013         	goto	l1054
 14925  00269E                     u6060:
 14926  00269E  FFFF               	dw	65535	; assembler added errata NOP
 14927  0026A0  8040               	bsf	___flmul@prod^0,0,c
 14928  0026A2                     l1054:
 14929  0026A2  FFFF               	dw	65535	; assembler added errata NOP
 14930  0026A4  90D8               	bcf	status,0,c
 14931  0026A6  363A               	rlcf	___flmul@grs^0,f,c
 14932  0026A8  363B               	rlcf	(___flmul@grs+1)^0,f,c
 14933  0026AA  363C               	rlcf	(___flmul@grs+2)^0,f,c
 14934  0026AC  363D               	rlcf	(___flmul@grs+3)^0,f,c
 14935  0026AE  0644               	decf	___flmul@temp^0,f,c
 14936  0026B0  A0D8               	btfss	status,0,c
 14937  0026B2  0645               	decf	(___flmul@temp+1)^0,f,c
 14938  0026B4                     l5043:
 14939  0026B4  FFFF               	dw	65535	; assembler added errata NOP
 14940  0026B6  AE42               	btfss	(___flmul@prod+2)^0,7,c
 14941  0026B8  EF60  F013         	goto	u6071
 14942  0026BC  EF63  F013         	goto	u6070
 14943  0026C0                     u6071:
 14944  0026C0  FFFF               	dw	65535	; assembler added errata NOP
 14945  0026C2  EF41  F013         	goto	l5037
 14946  0026C6                     u6070:
 14947  0026C6  FFFF               	dw	65535	; assembler added errata NOP
 14948  0026C8  0E00               	movlw	0
 14949  0026CA  6E3E               	movwf	___flmul@aexp^0,c
 14950  0026CC  AE3D               	btfss	(___flmul@grs+3)^0,7,c
 14951  0026CE  EF6B  F013         	goto	u6081
 14952  0026D2  EF6E  F013         	goto	u6080
 14953  0026D6                     u6081:
 14954  0026D6  FFFF               	dw	65535	; assembler added errata NOP
 14955  0026D8  EF99  F013         	goto	l1056
 14956  0026DC                     u6080:
 14957  0026DC  FFFF               	dw	65535	; assembler added errata NOP
 14958  0026DE  0EFF               	movlw	255
 14959  0026E0  143A               	andwf	___flmul@grs^0,w,c
 14960  0026E2  6E35               	movwf	??___flmul^0,c
 14961  0026E4  0EFF               	movlw	255
 14962  0026E6  143B               	andwf	(___flmul@grs+1)^0,w,c
 14963  0026E8  6E36               	movwf	(??___flmul+1)^0,c
 14964  0026EA  0EFF               	movlw	255
 14965  0026EC  143C               	andwf	(___flmul@grs+2)^0,w,c
 14966  0026EE  6E37               	movwf	(??___flmul+2)^0,c
 14967  0026F0  0E7F               	movlw	127
 14968  0026F2  143D               	andwf	(___flmul@grs+3)^0,w,c
 14969  0026F4  6E38               	movwf	(??___flmul+3)^0,c
 14970  0026F6  5035               	movf	??___flmul^0,w,c
 14971  0026F8  1036               	iorwf	(??___flmul+1)^0,w,c
 14972  0026FA  1037               	iorwf	(??___flmul+2)^0,w,c
 14973  0026FC  1038               	iorwf	(??___flmul+3)^0,w,c
 14974  0026FE  B4D8               	btfsc	status,2,c
 14975  002700  EF84  F013         	goto	u6091
 14976  002704  EF87  F013         	goto	u6090
 14977  002708                     u6091:
 14978  002708  FFFF               	dw	65535	; assembler added errata NOP
 14979  00270A  EF8D  F013         	goto	l1057
 14980  00270E                     u6090:
 14981  00270E  FFFF               	dw	65535	; assembler added errata NOP
 14982  002710                     l5051:
 14983  002710  FFFF               	dw	65535	; assembler added errata NOP
 14984  002712  0E01               	movlw	1
 14985  002714  6E3E               	movwf	___flmul@aexp^0,c
 14986  002716  EF99  F013         	goto	l1056
 14987  00271A                     l1057:
 14988  00271A  FFFF               	dw	65535	; assembler added errata NOP
 14989  00271C  A040               	btfss	___flmul@prod^0,0,c
 14990  00271E  EF93  F013         	goto	u6101
 14991  002722  EF96  F013         	goto	u6100
 14992  002726                     u6101:
 14993  002726  FFFF               	dw	65535	; assembler added errata NOP
 14994  002728  EF99  F013         	goto	l1056
 14995  00272C                     u6100:
 14996  00272C  FFFF               	dw	65535	; assembler added errata NOP
 14997  00272E  EF88  F013         	goto	l5051
 14998  002732                     l1056:
 14999  002732  FFFF               	dw	65535	; assembler added errata NOP
 15000  002734  503E               	movf	___flmul@aexp^0,w,c
 15001  002736  B4D8               	btfsc	status,2,c
 15002  002738  EFA0  F013         	goto	u6111
 15003  00273C  EFA3  F013         	goto	u6110
 15004  002740                     u6111:
 15005  002740  FFFF               	dw	65535	; assembler added errata NOP
 15006  002742  EFCA  F013         	goto	l5063
 15007  002746                     u6110:
 15008  002746  FFFF               	dw	65535	; assembler added errata NOP
 15009  002748  0E01               	movlw	1
 15010  00274A  2640               	addwf	___flmul@prod^0,f,c
 15011  00274C  0E00               	movlw	0
 15012  00274E  2241               	addwfc	(___flmul@prod+1)^0,f,c
 15013  002750  2242               	addwfc	(___flmul@prod+2)^0,f,c
 15014  002752  2243               	addwfc	(___flmul@prod+3)^0,f,c
 15015  002754  A043               	btfss	(___flmul@prod+3)^0,0,c
 15016  002756  EFAF  F013         	goto	u6121
 15017  00275A  EFB2  F013         	goto	u6120
 15018  00275E                     u6121:
 15019  00275E  FFFF               	dw	65535	; assembler added errata NOP
 15020  002760  EFCA  F013         	goto	l5063
 15021  002764                     u6120:
 15022  002764  FFFF               	dw	65535	; assembler added errata NOP
 15023  002766  C040  F035         	movff	___flmul@prod,??___flmul
 15024  00276A  C041  F036         	movff	___flmul@prod+1,??___flmul+1
 15025  00276E  C042  F037         	movff	___flmul@prod+2,??___flmul+2
 15026  002772  C043  F038         	movff	___flmul@prod+3,??___flmul+3
 15027  002776  3438               	rlcf	(??___flmul+3)^0,w,c
 15028  002778  3238               	rrcf	(??___flmul+3)^0,f,c
 15029  00277A  3237               	rrcf	(??___flmul+2)^0,f,c
 15030  00277C  3236               	rrcf	(??___flmul+1)^0,f,c
 15031  00277E  3235               	rrcf	??___flmul^0,f,c
 15032  002780  C035  F040         	movff	??___flmul,___flmul@prod
 15033  002784  C036  F041         	movff	??___flmul+1,___flmul@prod+1
 15034  002788  C037  F042         	movff	??___flmul+2,___flmul@prod+2
 15035  00278C  C038  F043         	movff	??___flmul+3,___flmul@prod+3
 15036  002790  4A44               	infsnz	___flmul@temp^0,f,c
 15037  002792  2A45               	incf	(___flmul@temp+1)^0,f,c
 15038  002794                     l5063:
 15039  002794  FFFF               	dw	65535	; assembler added errata NOP
 15040  002796  BE45               	btfsc	(___flmul@temp+1)^0,7,c
 15041  002798  EFD6  F013         	goto	u6131
 15042  00279C  5045               	movf	(___flmul@temp+1)^0,w,c
 15043  00279E  E109               	bnz	u6130
 15044  0027A0  2844               	incf	___flmul@temp^0,w,c
 15045  0027A2  A0D8               	btfss	status,0,c
 15046  0027A4  EFD6  F013         	goto	u6131
 15047  0027A8  EFD9  F013         	goto	u6130
 15048  0027AC                     u6131:
 15049  0027AC  FFFF               	dw	65535	; assembler added errata NOP
 15050  0027AE  EFE4  F013         	goto	l5067
 15051  0027B2                     u6130:
 15052  0027B2  FFFF               	dw	65535	; assembler added errata NOP
 15053  0027B4  0E00               	movlw	0
 15054  0027B6  6E40               	movwf	___flmul@prod^0,c
 15055  0027B8  0E00               	movlw	0
 15056  0027BA  6E41               	movwf	(___flmul@prod+1)^0,c
 15057  0027BC  0E80               	movlw	128
 15058  0027BE  6E42               	movwf	(___flmul@prod+2)^0,c
 15059  0027C0  0E7F               	movlw	127
 15060  0027C2  6E43               	movwf	(___flmul@prod+3)^0,c
 15061  0027C4  EF19  F014         	goto	l5079
 15062  0027C8                     l5067:
 15063  0027C8  FFFF               	dw	65535	; assembler added errata NOP
 15064  0027CA  BE45               	btfsc	(___flmul@temp+1)^0,7,c
 15065  0027CC  EFF3  F013         	goto	u6140
 15066  0027D0  5045               	movf	(___flmul@temp+1)^0,w,c
 15067  0027D2  E106               	bnz	u6141
 15068  0027D4  0444               	decf	___flmul@temp^0,w,c
 15069  0027D6  B0D8               	btfsc	status,0,c
 15070  0027D8  EFF0  F013         	goto	u6141
 15071  0027DC  EFF3  F013         	goto	u6140
 15072  0027E0                     u6141:
 15073  0027E0  FFFF               	dw	65535	; assembler added errata NOP
 15074  0027E2  EF00  F014         	goto	l1064
 15075  0027E6                     u6140:
 15076  0027E6  FFFF               	dw	65535	; assembler added errata NOP
 15077  0027E8  0E00               	movlw	0
 15078  0027EA  6E40               	movwf	___flmul@prod^0,c
 15079  0027EC  0E00               	movlw	0
 15080  0027EE  6E41               	movwf	(___flmul@prod+1)^0,c
 15081  0027F0  0E00               	movlw	0
 15082  0027F2  6E42               	movwf	(___flmul@prod+2)^0,c
 15083  0027F4  0E00               	movlw	0
 15084  0027F6  6E43               	movwf	(___flmul@prod+3)^0,c
 15085  0027F8  0E00               	movlw	0
 15086  0027FA  6E39               	movwf	___flmul@sign^0,c
 15087  0027FC  EF19  F014         	goto	l5079
 15088  002800                     l1064:
 15089  002800  FFFF               	dw	65535	; assembler added errata NOP
 15090  002802  C044  F03F         	movff	___flmul@temp,___flmul@bexp
 15091  002806  0EFF               	movlw	255
 15092  002808  1640               	andwf	___flmul@prod^0,f,c
 15093  00280A  0EFF               	movlw	255
 15094  00280C  1641               	andwf	(___flmul@prod+1)^0,f,c
 15095  00280E  0E7F               	movlw	127
 15096  002810  1642               	andwf	(___flmul@prod+2)^0,f,c
 15097  002812  0E00               	movlw	0
 15098  002814  1643               	andwf	(___flmul@prod+3)^0,f,c
 15099  002816  A03F               	btfss	___flmul@bexp^0,0,c
 15100  002818  EF10  F014         	goto	u6151
 15101  00281C  EF13  F014         	goto	u6150
 15102  002820                     u6151:
 15103  002820  FFFF               	dw	65535	; assembler added errata NOP
 15104  002822  EF15  F014         	goto	l5077
 15105  002826                     u6150:
 15106  002826  FFFF               	dw	65535	; assembler added errata NOP
 15107  002828  8E42               	bsf	(___flmul@prod+2)^0,7,c
 15108  00282A                     l5077:
 15109  00282A  FFFF               	dw	65535	; assembler added errata NOP
 15110  00282C  90D8               	bcf	status,0,c
 15111  00282E  303F               	rrcf	___flmul@bexp^0,w,c
 15112  002830  6E43               	movwf	(___flmul@prod+3)^0,c
 15113  002832                     l5079:
 15114  002832  FFFF               	dw	65535	; assembler added errata NOP
 15115  002834  5039               	movf	___flmul@sign^0,w,c
 15116  002836  1243               	iorwf	(___flmul@prod+3)^0,f,c
 15117  002838  C040  F02D         	movff	___flmul@prod,?___flmul
 15118  00283C  C041  F02E         	movff	___flmul@prod+1,?___flmul+1
 15119  002840  C042  F02F         	movff	___flmul@prod+2,?___flmul+2
 15120  002844  C043  F030         	movff	___flmul@prod+3,?___flmul+3
 15121  002848                     l1051:
 15122  002848  FFFF               	dw	65535	; assembler added errata NOP
 15123  00284A  0012               	return		;funcret
 15124  00284C  FFFF               	dw	65535	; errata NOP
 15125  00284E                     __end_of___flmul:
 15126                           	callstack 0
 15127                           
 15128 ;; *************** function _configure_ad_conversion_tank *****************
 15129 ;; Defined at:
 15130 ;;		line 19 in file "oven.c"
 15131 ;; Parameters:    Size  Location     Type
 15132 ;;		None
 15133 ;; Auto vars:     Size  Location     Type
 15134 ;;		None
 15135 ;; Return value:  Size  Location     Type
 15136 ;;                  1    wreg      void 
 15137 ;; Registers used:
 15138 ;;		wreg, status,2
 15139 ;; Tracked objects:
 15140 ;;		On entry : 0/0
 15141 ;;		On exit  : 0/0
 15142 ;;		Unchanged: 0/0
 15143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15144 ;;      Params:         0       0       0       0       0       0       0
 15145 ;;      Locals:         0       0       0       0       0       0       0
 15146 ;;      Temps:          0       0       0       0       0       0       0
 15147 ;;      Totals:         0       0       0       0       0       0       0
 15148 ;;Total ram usage:        0 bytes
 15149 ;; Hardware stack levels used:    1
 15150 ;; Hardware stack levels required when called:    1
 15151 ;; This function calls:
 15152 ;;		Nothing
 15153 ;; This function is called by:
 15154 ;;		_main
 15155 ;; This function uses a non-reentrant model
 15156 ;;
 15157                           
 15158                           	psect	text59
 15159  0061B6                     __ptext59:
 15160                           	callstack 0
 15161  0061B6                     _configure_ad_conversion_tank:
 15162                           	callstack 0
 15163  0061B6  FFFF               	dw	65535	; assembler added errata NOP
 15164  0061B8                     
 15165                           ;oven.c: 20:     ADCON0 = 0;
 15166  0061B8  0E00               	movlw	0
 15167  0061BA  6EC2               	movwf	194,c	;volatile
 15168  0061BC                     
 15169                           ;oven.c: 21:     ADCON0bits.CHS0 = 0;
 15170  0061BC  96C2               	bcf	194,3,c	;volatile
 15171  0061BE                     
 15172                           ;oven.c: 22:     ADCON0bits.CHS1 = 0;
 15173  0061BE  98C2               	bcf	194,4,c	;volatile
 15174  0061C0                     
 15175                           ;oven.c: 23:     ADCON0bits.CHS2 = 0;
 15176  0061C0  9AC2               	bcf	194,5,c	;volatile
 15177  0061C2                     
 15178                           ;oven.c: 24:     ADCON0bits.ADON = 1;
 15179  0061C2  80C2               	bsf	194,0,c	;volatile
 15180                           
 15181                           ;oven.c: 25:     ADRESH = 0;
 15182  0061C4  0E00               	movlw	0
 15183  0061C6  6EC4               	movwf	196,c	;volatile
 15184                           
 15185                           ;oven.c: 26:     ADRESL = 0;
 15186  0061C8  0E00               	movlw	0
 15187  0061CA  6EC3               	movwf	195,c	;volatile
 15188                           
 15189                           ;oven.c: 27:     ADCON1 = 0;
 15190  0061CC  0E00               	movlw	0
 15191  0061CE  6EC1               	movwf	193,c	;volatile
 15192  0061D0  0012               	return		;funcret
 15193  0061D2  FFFF               	dw	65535	; errata NOP
 15194  0061D4                     __end_of_configure_ad_conversion_tank:
 15195                           	callstack 0
 15196                           
 15197 ;; *************** function _configure_ad_conversion_oven *****************
 15198 ;; Defined at:
 15199 ;;		line 8 in file "oven.c"
 15200 ;; Parameters:    Size  Location     Type
 15201 ;;		None
 15202 ;; Auto vars:     Size  Location     Type
 15203 ;;		None
 15204 ;; Return value:  Size  Location     Type
 15205 ;;                  1    wreg      void 
 15206 ;; Registers used:
 15207 ;;		wreg, status,2
 15208 ;; Tracked objects:
 15209 ;;		On entry : 0/0
 15210 ;;		On exit  : 0/0
 15211 ;;		Unchanged: 0/0
 15212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15213 ;;      Params:         0       0       0       0       0       0       0
 15214 ;;      Locals:         0       0       0       0       0       0       0
 15215 ;;      Temps:          0       0       0       0       0       0       0
 15216 ;;      Totals:         0       0       0       0       0       0       0
 15217 ;;Total ram usage:        0 bytes
 15218 ;; Hardware stack levels used:    1
 15219 ;; Hardware stack levels required when called:    1
 15220 ;; This function calls:
 15221 ;;		Nothing
 15222 ;; This function is called by:
 15223 ;;		_main
 15224 ;; This function uses a non-reentrant model
 15225 ;;
 15226                           
 15227                           	psect	text60
 15228  006198                     __ptext60:
 15229                           	callstack 0
 15230  006198                     _configure_ad_conversion_oven:
 15231                           	callstack 0
 15232  006198  FFFF               	dw	65535	; assembler added errata NOP
 15233  00619A                     
 15234                           ;oven.c: 9:     ADCON0 = 0;
 15235  00619A  0E00               	movlw	0
 15236  00619C  6EC2               	movwf	194,c	;volatile
 15237  00619E                     
 15238                           ;oven.c: 10:     ADCON0bits.CHS0 = 0;
 15239  00619E  96C2               	bcf	194,3,c	;volatile
 15240  0061A0                     
 15241                           ;oven.c: 11:     ADCON0bits.CHS1 = 0;
 15242  0061A0  98C2               	bcf	194,4,c	;volatile
 15243  0061A2                     
 15244                           ;oven.c: 12:     ADCON0bits.CHS2 = 1;
 15245  0061A2  8AC2               	bsf	194,5,c	;volatile
 15246  0061A4                     
 15247                           ;oven.c: 13:     ADCON0bits.ADON = 1;
 15248  0061A4  80C2               	bsf	194,0,c	;volatile
 15249                           
 15250                           ;oven.c: 14:     ADRESH = 0;
 15251  0061A6  0E00               	movlw	0
 15252  0061A8  6EC4               	movwf	196,c	;volatile
 15253                           
 15254                           ;oven.c: 15:     ADRESL = 0;
 15255  0061AA  0E00               	movlw	0
 15256  0061AC  6EC3               	movwf	195,c	;volatile
 15257                           
 15258                           ;oven.c: 16:     ADCON1 = 0;
 15259  0061AE  0E00               	movlw	0
 15260  0061B0  6EC1               	movwf	193,c	;volatile
 15261  0061B2  0012               	return		;funcret
 15262  0061B4  FFFF               	dw	65535	; errata NOP
 15263  0061B6                     __end_of_configure_ad_conversion_oven:
 15264                           	callstack 0
 15265                           
 15266 ;; *************** function _check_temperature *****************
 15267 ;; Defined at:
 15268 ;;		line 50 in file "oven.c"
 15269 ;; Parameters:    Size  Location     Type
 15270 ;;  temp_to_be_c    2   16[BANK0 ] int 
 15271 ;; Auto vars:     Size  Location     Type
 15272 ;;  grad            4   18[BANK0 ] float 
 15273 ;; Return value:  Size  Location     Type
 15274 ;;                  2   16[BANK0 ] int 
 15275 ;; Registers used:
 15276 ;;		wreg, status,2, status,0, cstack
 15277 ;; Tracked objects:
 15278 ;;		On entry : 0/0
 15279 ;;		On exit  : 0/0
 15280 ;;		Unchanged: 0/0
 15281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15282 ;;      Params:         0       2       0       0       0       0       0
 15283 ;;      Locals:         0       4       0       0       0       0       0
 15284 ;;      Temps:          0       0       0       0       0       0       0
 15285 ;;      Totals:         0       6       0       0       0       0       0
 15286 ;;Total ram usage:        6 bytes
 15287 ;; Hardware stack levels used:    1
 15288 ;; Hardware stack levels required when called:    2
 15289 ;; This function calls:
 15290 ;;		___awdiv
 15291 ;;		___flge
 15292 ;;		___xxtofl
 15293 ;;		_abs
 15294 ;; This function is called by:
 15295 ;;		_main
 15296 ;; This function uses a non-reentrant model
 15297 ;;
 15298                           
 15299                           	psect	text61
 15300  006EBE                     __ptext61:
 15301                           	callstack 0
 15302  006EBE                     _check_temperature:
 15303                           	callstack 0
 15304  006EBE  FFFF               	dw	65535	; assembler added errata NOP
 15305  006EC0                     
 15306                           ;oven.c: 51:     float grad = abs(temp_to_be_checked - (-63))/5;
 15307  006EC0  0E00               	movlw	0
 15308  006EC2  6E1A               	movwf	(___awdiv@divisor+1)^0,c
 15309  006EC4  0E05               	movlw	5
 15310  006EC6  6E19               	movwf	___awdiv@divisor^0,c
 15311  006EC8  0E3F               	movlw	63
 15312  006ECA  0100               	movlb	0	; () banked
 15313  006ECC  25C8               	addwf	check_temperature@temp_to_be_checked& (0+255),w,b
 15314  006ECE  6E13               	movwf	abs@a^0,c
 15315  006ED0  0E00               	movlw	0
 15316  006ED2  21C9               	addwfc	(check_temperature@temp_to_be_checked+1)& (0+255),w,b
 15317  006ED4  6E14               	movwf	(abs@a+1)^0,c
 15318  006ED6  ECA8  F032         	call	_abs	;wreg free
 15319  006EDA  C013  F017         	movff	?_abs,___awdiv@dividend
 15320  006EDE  C014  F018         	movff	?_abs+1,___awdiv@dividend+1
 15321  006EE2  EC27  F039         	call	___awdiv	;wreg free
 15322  006EE6  C017  F01F         	movff	?___awdiv,___xxtofl@val
 15323  006EEA  C018  F020         	movff	?___awdiv+1,___xxtofl@val+1
 15324  006EEE  0E00               	movlw	0
 15325  006EF0  BE20               	btfsc	(___xxtofl@val+1)^0,7,c
 15326  006EF2  0EFF               	movlw	-1
 15327  006EF4  6E21               	movwf	(___xxtofl@val+2)^0,c
 15328  006EF6  6E22               	movwf	(___xxtofl@val+3)^0,c
 15329  006EF8  0E01               	movlw	1
 15330  006EFA  EC94  F01D         	call	___xxtofl
 15331  006EFE  C01F  F0CA         	movff	?___xxtofl,check_temperature@grad
 15332  006F02  C020  F0CB         	movff	?___xxtofl+1,check_temperature@grad+1
 15333  006F06  C021  F0CC         	movff	?___xxtofl+2,check_temperature@grad+2
 15334  006F0A  C022  F0CD         	movff	?___xxtofl+3,check_temperature@grad+3
 15335                           
 15336                           ;oven.c: 52:     if (grad >= 12 && grad <= 13){
 15337  006F0E  C0CA  F0BC         	movff	check_temperature@grad,___flge@ff1
 15338  006F12  C0CB  F0BD         	movff	check_temperature@grad+1,___flge@ff1+1
 15339  006F16  C0CC  F0BE         	movff	check_temperature@grad+2,___flge@ff1+2
 15340  006F1A  C0CD  F0BF         	movff	check_temperature@grad+3,___flge@ff1+3
 15341  006F1E  0E00               	movlw	0
 15342  006F20  0100               	movlb	0	; () banked
 15343  006F22  6FC0               	movwf	___flge@ff2& (0+255),b
 15344  006F24  0E00               	movlw	0
 15345  006F26  6FC1               	movwf	(___flge@ff2+1)& (0+255),b
 15346  006F28  0E40               	movlw	64
 15347  006F2A  6FC2               	movwf	(___flge@ff2+2)& (0+255),b
 15348  006F2C  0E41               	movlw	65
 15349  006F2E  6FC3               	movwf	(___flge@ff2+3)& (0+255),b
 15350  006F30  EC23  F03A         	call	___flge	;wreg free
 15351  006F34  0100               	movlb	0	; () banked
 15352  006F36  A0D8               	btfss	status,0,c
 15353  006F38  EFA0  F037         	goto	u6821
 15354  006F3C  EFA3  F037         	goto	u6820
 15355  006F40                     u6821:
 15356  006F40  FFFF               	dw	65535	; assembler added errata NOP
 15357  006F42  EFC6  F037         	goto	l5591
 15358  006F46                     u6820:
 15359  006F46  FFFF               	dw	65535	; assembler added errata NOP
 15360  006F48                     
 15361                           ; BSR set to: 0
 15362  006F48  0E00               	movlw	0
 15363  006F4A  6FBC               	movwf	___flge@ff1& (0+255),b
 15364  006F4C  0E00               	movlw	0
 15365  006F4E  6FBD               	movwf	(___flge@ff1+1)& (0+255),b
 15366  006F50  0E50               	movlw	80
 15367  006F52  6FBE               	movwf	(___flge@ff1+2)& (0+255),b
 15368  006F54  0E41               	movlw	65
 15369  006F56  6FBF               	movwf	(___flge@ff1+3)& (0+255),b
 15370  006F58  C0CA  F0C0         	movff	check_temperature@grad,___flge@ff2
 15371  006F5C  C0CB  F0C1         	movff	check_temperature@grad+1,___flge@ff2+1
 15372  006F60  C0CC  F0C2         	movff	check_temperature@grad+2,___flge@ff2+2
 15373  006F64  C0CD  F0C3         	movff	check_temperature@grad+3,___flge@ff2+3
 15374  006F68  EC23  F03A         	call	___flge	;wreg free
 15375  006F6C  0100               	movlb	0	; () banked
 15376  006F6E  A0D8               	btfss	status,0,c
 15377  006F70  EFBC  F037         	goto	u6831
 15378  006F74  EFBF  F037         	goto	u6830
 15379  006F78                     u6831:
 15380  006F78  FFFF               	dw	65535	; assembler added errata NOP
 15381  006F7A  EFC6  F037         	goto	l5591
 15382  006F7E                     u6830:
 15383  006F7E  FFFF               	dw	65535	; assembler added errata NOP
 15384  006F80                     
 15385                           ; BSR set to: 0
 15386                           ;oven.c: 53:         return 1;
 15387  006F80  0E00               	movlw	0
 15388  006F82  6FC9               	movwf	(?_check_temperature+1)& (0+255),b
 15389  006F84  0E01               	movlw	1
 15390  006F86  6FC8               	movwf	?_check_temperature& (0+255),b
 15391  006F88  EFCB  F037         	goto	l429
 15392  006F8C                     l5591:
 15393  006F8C  FFFF               	dw	65535	; assembler added errata NOP
 15394                           
 15395                           ; BSR set to: 0
 15396                           ;oven.c: 55:         return 0;
 15397  006F8E  0E00               	movlw	0
 15398  006F90  6FC9               	movwf	(?_check_temperature+1)& (0+255),b
 15399  006F92  0E00               	movlw	0
 15400  006F94  6FC8               	movwf	?_check_temperature& (0+255),b
 15401  006F96                     l429:
 15402  006F96  FFFF               	dw	65535	; assembler added errata NOP
 15403                           
 15404                           ; BSR set to: 0
 15405  006F98  0012               	return		;funcret
 15406  006F9A  FFFF               	dw	65535	; errata NOP
 15407  006F9C                     __end_of_check_temperature:
 15408                           	callstack 0
 15409                           
 15410 ;; *************** function _abs *****************
 15411 ;; Defined at:
 15412 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
 15413 ;; Parameters:    Size  Location     Type
 15414 ;;  a               2   18[COMRAM] int 
 15415 ;; Auto vars:     Size  Location     Type
 15416 ;;		None
 15417 ;; Return value:  Size  Location     Type
 15418 ;;                  2   18[COMRAM] int 
 15419 ;; Registers used:
 15420 ;;		wreg, status,2, status,0
 15421 ;; Tracked objects:
 15422 ;;		On entry : 0/0
 15423 ;;		On exit  : 0/0
 15424 ;;		Unchanged: 0/0
 15425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15426 ;;      Params:         2       0       0       0       0       0       0
 15427 ;;      Locals:         0       0       0       0       0       0       0
 15428 ;;      Temps:          2       0       0       0       0       0       0
 15429 ;;      Totals:         4       0       0       0       0       0       0
 15430 ;;Total ram usage:        4 bytes
 15431 ;; Hardware stack levels used:    1
 15432 ;; Hardware stack levels required when called:    1
 15433 ;; This function calls:
 15434 ;;		Nothing
 15435 ;; This function is called by:
 15436 ;;		_check_temperature
 15437 ;;		_dtoa
 15438 ;; This function uses a non-reentrant model
 15439 ;;
 15440                           
 15441                           	psect	text62
 15442  006550                     __ptext62:
 15443                           	callstack 0
 15444  006550                     _abs:
 15445                           	callstack 0
 15446  006550  FFFF               	dw	65535	; assembler added errata NOP
 15447  006552  BE14               	btfsc	(abs@a+1)^0,7,c
 15448  006554  EFB7  F032         	goto	u3780
 15449  006558  5014               	movf	(abs@a+1)^0,w,c
 15450  00655A  E106               	bnz	u3781
 15451  00655C  0413               	decf	abs@a^0,w,c
 15452  00655E  B0D8               	btfsc	status,0,c
 15453  006560  EFB4  F032         	goto	u3781
 15454  006564  EFB7  F032         	goto	u3780
 15455  006568                     u3781:
 15456  006568  FFFF               	dw	65535	; assembler added errata NOP
 15457  00656A  EFC6  F032         	goto	l1108
 15458  00656E                     u3780:
 15459  00656E  FFFF               	dw	65535	; assembler added errata NOP
 15460  006570  C013  F015         	movff	abs@a,??_abs
 15461  006574  C014  F016         	movff	abs@a+1,??_abs+1
 15462  006578  1E15               	comf	??_abs^0,f,c
 15463  00657A  1E16               	comf	(??_abs+1)^0,f,c
 15464  00657C  4A15               	infsnz	??_abs^0,f,c
 15465  00657E  2A16               	incf	(??_abs+1)^0,f,c
 15466  006580  C015  F013         	movff	??_abs,?_abs
 15467  006584  C016  F014         	movff	??_abs+1,?_abs+1
 15468  006588  EFCB  F032         	goto	l1111
 15469  00658C                     l1108:
 15470  00658C  FFFF               	dw	65535	; assembler added errata NOP
 15471  00658E  C013  F013         	movff	abs@a,?_abs
 15472  006592  C014  F014         	movff	abs@a+1,?_abs+1
 15473  006596                     l1111:
 15474  006596  FFFF               	dw	65535	; assembler added errata NOP
 15475  006598  0012               	return		;funcret
 15476  00659A  FFFF               	dw	65535	; errata NOP
 15477  00659C                     __end_of_abs:
 15478                           	callstack 0
 15479                           
 15480 ;; *************** function ___xxtofl *****************
 15481 ;; Defined at:
 15482 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
 15483 ;; Parameters:    Size  Location     Type
 15484 ;;  sign            1    wreg     unsigned char 
 15485 ;;  val             4   30[COMRAM] long 
 15486 ;; Auto vars:     Size  Location     Type
 15487 ;;  sign            1   38[COMRAM] unsigned char 
 15488 ;;  arg             4   40[COMRAM] unsigned long 
 15489 ;;  exp             1   39[COMRAM] unsigned char 
 15490 ;; Return value:  Size  Location     Type
 15491 ;;                  4   30[COMRAM] unsigned char 
 15492 ;; Registers used:
 15493 ;;		wreg, status,2, status,0
 15494 ;; Tracked objects:
 15495 ;;		On entry : 0/0
 15496 ;;		On exit  : 0/0
 15497 ;;		Unchanged: 0/0
 15498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15499 ;;      Params:         4       0       0       0       0       0       0
 15500 ;;      Locals:         6       0       0       0       0       0       0
 15501 ;;      Temps:          4       0       0       0       0       0       0
 15502 ;;      Totals:        14       0       0       0       0       0       0
 15503 ;;Total ram usage:       14 bytes
 15504 ;; Hardware stack levels used:    1
 15505 ;; Hardware stack levels required when called:    1
 15506 ;; This function calls:
 15507 ;;		Nothing
 15508 ;; This function is called by:
 15509 ;;		_main
 15510 ;;		_get_temperature
 15511 ;;		_get_liters
 15512 ;;		_check_temperature
 15513 ;; This function uses a non-reentrant model
 15514 ;;
 15515                           
 15516                           	psect	text63
 15517  003B28                     __ptext63:
 15518                           	callstack 0
 15519  003B28                     ___xxtofl:
 15520                           	callstack 0
 15521  003B28  FFFF               	dw	65535	; assembler added errata NOP
 15522                           
 15523                           ;incstack = 0
 15524                           ;___xxtofl@sign stored from wreg
 15525  003B2A  6E27               	movwf	___xxtofl@sign^0,c
 15526  003B2C  5027               	movf	___xxtofl@sign^0,w,c
 15527  003B2E  B4D8               	btfsc	status,2,c
 15528  003B30  EF9C  F01D         	goto	u6291
 15529  003B34  EF9F  F01D         	goto	u6290
 15530  003B38                     u6291:
 15531  003B38  FFFF               	dw	65535	; assembler added errata NOP
 15532  003B3A  EFC4  F01D         	goto	l1088
 15533  003B3E                     u6290:
 15534  003B3E  FFFF               	dw	65535	; assembler added errata NOP
 15535  003B40  BE22               	btfsc	(___xxtofl@val+3)^0,7,c
 15536  003B42  EFA8  F01D         	goto	u6300
 15537  003B46  EFA5  F01D         	goto	u6301
 15538  003B4A                     u6301:
 15539  003B4A  FFFF               	dw	65535	; assembler added errata NOP
 15540  003B4C  EFC4  F01D         	goto	l1088
 15541  003B50                     u6300:
 15542  003B50  FFFF               	dw	65535	; assembler added errata NOP
 15543  003B52  C01F  F023         	movff	___xxtofl@val,??___xxtofl
 15544  003B56  C020  F024         	movff	___xxtofl@val+1,??___xxtofl+1
 15545  003B5A  C021  F025         	movff	___xxtofl@val+2,??___xxtofl+2
 15546  003B5E  C022  F026         	movff	___xxtofl@val+3,??___xxtofl+3
 15547  003B62  1E23               	comf	??___xxtofl^0,f,c
 15548  003B64  1E24               	comf	(??___xxtofl+1)^0,f,c
 15549  003B66  1E25               	comf	(??___xxtofl+2)^0,f,c
 15550  003B68  1E26               	comf	(??___xxtofl+3)^0,f,c
 15551  003B6A  2A23               	incf	??___xxtofl^0,f,c
 15552  003B6C  0E00               	movlw	0
 15553  003B6E  2224               	addwfc	(??___xxtofl+1)^0,f,c
 15554  003B70  2225               	addwfc	(??___xxtofl+2)^0,f,c
 15555  003B72  2226               	addwfc	(??___xxtofl+3)^0,f,c
 15556  003B74  C023  F029         	movff	??___xxtofl,___xxtofl@arg
 15557  003B78  C024  F02A         	movff	??___xxtofl+1,___xxtofl@arg+1
 15558  003B7C  C025  F02B         	movff	??___xxtofl+2,___xxtofl@arg+2
 15559  003B80  C026  F02C         	movff	??___xxtofl+3,___xxtofl@arg+3
 15560  003B84  EFCD  F01D         	goto	l5171
 15561  003B88                     l1088:
 15562  003B88  FFFF               	dw	65535	; assembler added errata NOP
 15563  003B8A  C01F  F029         	movff	___xxtofl@val,___xxtofl@arg
 15564  003B8E  C020  F02A         	movff	___xxtofl@val+1,___xxtofl@arg+1
 15565  003B92  C021  F02B         	movff	___xxtofl@val+2,___xxtofl@arg+2
 15566  003B96  C022  F02C         	movff	___xxtofl@val+3,___xxtofl@arg+3
 15567  003B9A                     l5171:
 15568  003B9A  FFFF               	dw	65535	; assembler added errata NOP
 15569  003B9C  501F               	movf	___xxtofl@val^0,w,c
 15570  003B9E  1020               	iorwf	(___xxtofl@val+1)^0,w,c
 15571  003BA0  1021               	iorwf	(___xxtofl@val+2)^0,w,c
 15572  003BA2  1022               	iorwf	(___xxtofl@val+3)^0,w,c
 15573  003BA4  A4D8               	btfss	status,2,c
 15574  003BA6  EFD7  F01D         	goto	u6311
 15575  003BAA  EFDA  F01D         	goto	u6310
 15576  003BAE                     u6311:
 15577  003BAE  FFFF               	dw	65535	; assembler added errata NOP
 15578  003BB0  EFE5  F01D         	goto	l5177
 15579  003BB4                     u6310:
 15580  003BB4  FFFF               	dw	65535	; assembler added errata NOP
 15581  003BB6  0E00               	movlw	0
 15582  003BB8  6E1F               	movwf	?___xxtofl^0,c
 15583  003BBA  0E00               	movlw	0
 15584  003BBC  6E20               	movwf	(?___xxtofl+1)^0,c
 15585  003BBE  0E00               	movlw	0
 15586  003BC0  6E21               	movwf	(?___xxtofl+2)^0,c
 15587  003BC2  0E00               	movlw	0
 15588  003BC4  6E22               	movwf	(?___xxtofl+3)^0,c
 15589  003BC6  EF8D  F01E         	goto	l1091
 15590  003BCA                     l5177:
 15591  003BCA  FFFF               	dw	65535	; assembler added errata NOP
 15592  003BCC  0E96               	movlw	150
 15593  003BCE  6E28               	movwf	___xxtofl@exp^0,c
 15594  003BD0  EFF1  F01D         	goto	l5181
 15595  003BD4                     l5179:
 15596  003BD4  FFFF               	dw	65535	; assembler added errata NOP
 15597  003BD6  2A28               	incf	___xxtofl@exp^0,f,c
 15598  003BD8  90D8               	bcf	status,0,c
 15599  003BDA  322C               	rrcf	(___xxtofl@arg+3)^0,f,c
 15600  003BDC  322B               	rrcf	(___xxtofl@arg+2)^0,f,c
 15601  003BDE  322A               	rrcf	(___xxtofl@arg+1)^0,f,c
 15602  003BE0  3229               	rrcf	___xxtofl@arg^0,f,c
 15603  003BE2                     l5181:
 15604  003BE2  FFFF               	dw	65535	; assembler added errata NOP
 15605  003BE4  0E00               	movlw	0
 15606  003BE6  1429               	andwf	___xxtofl@arg^0,w,c
 15607  003BE8  6E23               	movwf	??___xxtofl^0,c
 15608  003BEA  0E00               	movlw	0
 15609  003BEC  142A               	andwf	(___xxtofl@arg+1)^0,w,c
 15610  003BEE  6E24               	movwf	(??___xxtofl+1)^0,c
 15611  003BF0  0E00               	movlw	0
 15612  003BF2  142B               	andwf	(___xxtofl@arg+2)^0,w,c
 15613  003BF4  6E25               	movwf	(??___xxtofl+2)^0,c
 15614  003BF6  0EFE               	movlw	254
 15615  003BF8  142C               	andwf	(___xxtofl@arg+3)^0,w,c
 15616  003BFA  6E26               	movwf	(??___xxtofl+3)^0,c
 15617  003BFC  5023               	movf	??___xxtofl^0,w,c
 15618  003BFE  1024               	iorwf	(??___xxtofl+1)^0,w,c
 15619  003C00  1025               	iorwf	(??___xxtofl+2)^0,w,c
 15620  003C02  1026               	iorwf	(??___xxtofl+3)^0,w,c
 15621  003C04  A4D8               	btfss	status,2,c
 15622  003C06  EF07  F01E         	goto	u6321
 15623  003C0A  EF0A  F01E         	goto	u6320
 15624  003C0E                     u6321:
 15625  003C0E  FFFF               	dw	65535	; assembler added errata NOP
 15626  003C10  EFEA  F01D         	goto	l5179
 15627  003C14                     u6320:
 15628  003C14  FFFF               	dw	65535	; assembler added errata NOP
 15629  003C16  EF1A  F01E         	goto	l1095
 15630  003C1A                     l5183:
 15631  003C1A  FFFF               	dw	65535	; assembler added errata NOP
 15632  003C1C  2A28               	incf	___xxtofl@exp^0,f,c
 15633  003C1E  0E01               	movlw	1
 15634  003C20  2629               	addwf	___xxtofl@arg^0,f,c
 15635  003C22  0E00               	movlw	0
 15636  003C24  222A               	addwfc	(___xxtofl@arg+1)^0,f,c
 15637  003C26  222B               	addwfc	(___xxtofl@arg+2)^0,f,c
 15638  003C28  222C               	addwfc	(___xxtofl@arg+3)^0,f,c
 15639  003C2A  90D8               	bcf	status,0,c
 15640  003C2C  322C               	rrcf	(___xxtofl@arg+3)^0,f,c
 15641  003C2E  322B               	rrcf	(___xxtofl@arg+2)^0,f,c
 15642  003C30  322A               	rrcf	(___xxtofl@arg+1)^0,f,c
 15643  003C32  3229               	rrcf	___xxtofl@arg^0,f,c
 15644  003C34                     l1095:
 15645  003C34  FFFF               	dw	65535	; assembler added errata NOP
 15646  003C36  0E00               	movlw	0
 15647  003C38  1429               	andwf	___xxtofl@arg^0,w,c
 15648  003C3A  6E23               	movwf	??___xxtofl^0,c
 15649  003C3C  0E00               	movlw	0
 15650  003C3E  142A               	andwf	(___xxtofl@arg+1)^0,w,c
 15651  003C40  6E24               	movwf	(??___xxtofl+1)^0,c
 15652  003C42  0E00               	movlw	0
 15653  003C44  142B               	andwf	(___xxtofl@arg+2)^0,w,c
 15654  003C46  6E25               	movwf	(??___xxtofl+2)^0,c
 15655  003C48  0EFF               	movlw	255
 15656  003C4A  142C               	andwf	(___xxtofl@arg+3)^0,w,c
 15657  003C4C  6E26               	movwf	(??___xxtofl+3)^0,c
 15658  003C4E  5023               	movf	??___xxtofl^0,w,c
 15659  003C50  1024               	iorwf	(??___xxtofl+1)^0,w,c
 15660  003C52  1025               	iorwf	(??___xxtofl+2)^0,w,c
 15661  003C54  1026               	iorwf	(??___xxtofl+3)^0,w,c
 15662  003C56  A4D8               	btfss	status,2,c
 15663  003C58  EF30  F01E         	goto	u6331
 15664  003C5C  EF33  F01E         	goto	u6330
 15665  003C60                     u6331:
 15666  003C60  FFFF               	dw	65535	; assembler added errata NOP
 15667  003C62  EF0D  F01E         	goto	l5183
 15668  003C66                     u6330:
 15669  003C66  FFFF               	dw	65535	; assembler added errata NOP
 15670  003C68  EF3D  F01E         	goto	l5191
 15671  003C6C                     l5189:
 15672  003C6C  FFFF               	dw	65535	; assembler added errata NOP
 15673  003C6E  0628               	decf	___xxtofl@exp^0,f,c
 15674  003C70  90D8               	bcf	status,0,c
 15675  003C72  3629               	rlcf	___xxtofl@arg^0,f,c
 15676  003C74  362A               	rlcf	(___xxtofl@arg+1)^0,f,c
 15677  003C76  362B               	rlcf	(___xxtofl@arg+2)^0,f,c
 15678  003C78  362C               	rlcf	(___xxtofl@arg+3)^0,f,c
 15679  003C7A                     l5191:
 15680  003C7A  FFFF               	dw	65535	; assembler added errata NOP
 15681  003C7C  BE2B               	btfsc	(___xxtofl@arg+2)^0,7,c
 15682  003C7E  EF43  F01E         	goto	u6341
 15683  003C82  EF46  F01E         	goto	u6340
 15684  003C86                     u6341:
 15685  003C86  FFFF               	dw	65535	; assembler added errata NOP
 15686  003C88  EF50  F01E         	goto	l1102
 15687  003C8C                     u6340:
 15688  003C8C  FFFF               	dw	65535	; assembler added errata NOP
 15689  003C8E  0E02               	movlw	2
 15690  003C90  6028               	cpfslt	___xxtofl@exp^0,c
 15691  003C92  EF4D  F01E         	goto	u6351
 15692  003C96  EF50  F01E         	goto	u6350
 15693  003C9A                     u6351:
 15694  003C9A  FFFF               	dw	65535	; assembler added errata NOP
 15695  003C9C  EF36  F01E         	goto	l5189
 15696  003CA0                     u6350:
 15697  003CA0                     l1102:
 15698  003CA0  FFFF               	dw	65535	; assembler added errata NOP
 15699  003CA2  B028               	btfsc	___xxtofl@exp^0,0,c
 15700  003CA4  EF56  F01E         	goto	u6361
 15701  003CA8  EF59  F01E         	goto	u6360
 15702  003CAC                     u6361:
 15703  003CAC  FFFF               	dw	65535	; assembler added errata NOP
 15704  003CAE  EF5B  F01E         	goto	l5197
 15705  003CB2                     u6360:
 15706  003CB2  FFFF               	dw	65535	; assembler added errata NOP
 15707  003CB4  9E2B               	bcf	(___xxtofl@arg+2)^0,7,c
 15708  003CB6                     l5197:
 15709  003CB6  FFFF               	dw	65535	; assembler added errata NOP
 15710  003CB8  90D8               	bcf	status,0,c
 15711  003CBA  3228               	rrcf	___xxtofl@exp^0,f,c
 15712  003CBC  C028  F023         	movff	___xxtofl@exp,??___xxtofl
 15713  003CC0  6A24               	clrf	(??___xxtofl+1)^0,c
 15714  003CC2  6A25               	clrf	(??___xxtofl+2)^0,c
 15715  003CC4  6A26               	clrf	(??___xxtofl+3)^0,c
 15716  003CC6  C023  F026         	movff	??___xxtofl,??___xxtofl+3
 15717  003CCA  6A25               	clrf	(??___xxtofl+2)^0,c
 15718  003CCC  6A24               	clrf	(??___xxtofl+1)^0,c
 15719  003CCE  6A23               	clrf	??___xxtofl^0,c
 15720  003CD0  5023               	movf	??___xxtofl^0,w,c
 15721  003CD2  1229               	iorwf	___xxtofl@arg^0,f,c
 15722  003CD4  5024               	movf	(??___xxtofl+1)^0,w,c
 15723  003CD6  122A               	iorwf	(___xxtofl@arg+1)^0,f,c
 15724  003CD8  5025               	movf	(??___xxtofl+2)^0,w,c
 15725  003CDA  122B               	iorwf	(___xxtofl@arg+2)^0,f,c
 15726  003CDC  5026               	movf	(??___xxtofl+3)^0,w,c
 15727  003CDE  122C               	iorwf	(___xxtofl@arg+3)^0,f,c
 15728  003CE0  5027               	movf	___xxtofl@sign^0,w,c
 15729  003CE2  B4D8               	btfsc	status,2,c
 15730  003CE4  EF76  F01E         	goto	u6371
 15731  003CE8  EF79  F01E         	goto	u6370
 15732  003CEC                     u6371:
 15733  003CEC  FFFF               	dw	65535	; assembler added errata NOP
 15734  003CEE  EF84  F01E         	goto	l5207
 15735  003CF2                     u6370:
 15736  003CF2  FFFF               	dw	65535	; assembler added errata NOP
 15737  003CF4  BE22               	btfsc	(___xxtofl@val+3)^0,7,c
 15738  003CF6  EF82  F01E         	goto	u6380
 15739  003CFA  EF7F  F01E         	goto	u6381
 15740  003CFE                     u6381:
 15741  003CFE  FFFF               	dw	65535	; assembler added errata NOP
 15742  003D00  EF84  F01E         	goto	l5207
 15743  003D04                     u6380:
 15744  003D04  FFFF               	dw	65535	; assembler added errata NOP
 15745  003D06  8E2C               	bsf	(___xxtofl@arg+3)^0,7,c
 15746  003D08                     l5207:
 15747  003D08  FFFF               	dw	65535	; assembler added errata NOP
 15748  003D0A  C029  F01F         	movff	___xxtofl@arg,?___xxtofl
 15749  003D0E  C02A  F020         	movff	___xxtofl@arg+1,?___xxtofl+1
 15750  003D12  C02B  F021         	movff	___xxtofl@arg+2,?___xxtofl+2
 15751  003D16  C02C  F022         	movff	___xxtofl@arg+3,?___xxtofl+3
 15752  003D1A                     l1091:
 15753  003D1A  FFFF               	dw	65535	; assembler added errata NOP
 15754  003D1C  0012               	return		;funcret
 15755  003D1E  FFFF               	dw	65535	; errata NOP
 15756  003D20                     __end_of___xxtofl:
 15757                           	callstack 0
 15758                           
 15759 ;; *************** function ___flge *****************
 15760 ;; Defined at:
 15761 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 15762 ;; Parameters:    Size  Location     Type
 15763 ;;  ff1             4    4[BANK0 ] unsigned char 
 15764 ;;  ff2             4    8[BANK0 ] unsigned char 
 15765 ;; Auto vars:     Size  Location     Type
 15766 ;;		None
 15767 ;; Return value:  Size  Location     Type
 15768 ;;		None               void
 15769 ;; Registers used:
 15770 ;;		wreg, status,2, status,0
 15771 ;; Tracked objects:
 15772 ;;		On entry : 0/0
 15773 ;;		On exit  : 0/0
 15774 ;;		Unchanged: 0/0
 15775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15776 ;;      Params:         0       8       0       0       0       0       0
 15777 ;;      Locals:         0       0       0       0       0       0       0
 15778 ;;      Temps:          0       4       0       0       0       0       0
 15779 ;;      Totals:         0      12       0       0       0       0       0
 15780 ;;Total ram usage:       12 bytes
 15781 ;; Hardware stack levels used:    1
 15782 ;; Hardware stack levels required when called:    1
 15783 ;; This function calls:
 15784 ;;		Nothing
 15785 ;; This function is called by:
 15786 ;;		_main
 15787 ;;		_check_temperature
 15788 ;;		_roundf
 15789 ;; This function uses a non-reentrant model
 15790 ;;
 15791                           
 15792                           	psect	text64
 15793  007446                     __ptext64:
 15794                           	callstack 0
 15795  007446                     ___flge:
 15796                           	callstack 0
 15797  007446  FFFF               	dw	65535	; assembler added errata NOP
 15798  007448  0E00               	movlw	0
 15799  00744A  0100               	movlb	0	; () banked
 15800  00744C  15BC               	andwf	___flge@ff1& (0+255),w,b
 15801  00744E  6FC4               	movwf	??___flge& (0+255),b
 15802  007450  0E00               	movlw	0
 15803  007452  15BD               	andwf	(___flge@ff1+1)& (0+255),w,b
 15804  007454  6FC5               	movwf	(??___flge+1)& (0+255),b
 15805  007456  0E80               	movlw	128
 15806  007458  15BE               	andwf	(___flge@ff1+2)& (0+255),w,b
 15807  00745A  6FC6               	movwf	(??___flge+2)& (0+255),b
 15808  00745C  0E7F               	movlw	127
 15809  00745E  15BF               	andwf	(___flge@ff1+3)& (0+255),w,b
 15810  007460  6FC7               	movwf	(??___flge+3)& (0+255),b
 15811  007462  51C4               	movf	??___flge& (0+255),w,b
 15812  007464  11C5               	iorwf	(??___flge+1)& (0+255),w,b
 15813  007466  11C6               	iorwf	(??___flge+2)& (0+255),w,b
 15814  007468  11C7               	iorwf	(??___flge+3)& (0+255),w,b
 15815  00746A  A4D8               	btfss	status,2,c
 15816  00746C  EF3A  F03A         	goto	u6161
 15817  007470  EF3D  F03A         	goto	u6160
 15818  007474                     u6161:
 15819  007474  FFFF               	dw	65535	; assembler added errata NOP
 15820  007476  EF46  F03A         	goto	l5095
 15821  00747A                     u6160:
 15822  00747A  FFFF               	dw	65535	; assembler added errata NOP
 15823  00747C                     
 15824                           ; BSR set to: 0
 15825  00747C  0E00               	movlw	0
 15826  00747E  6FBC               	movwf	___flge@ff1& (0+255),b
 15827  007480  0E00               	movlw	0
 15828  007482  6FBD               	movwf	(___flge@ff1+1)& (0+255),b
 15829  007484  0E00               	movlw	0
 15830  007486  6FBE               	movwf	(___flge@ff1+2)& (0+255),b
 15831  007488  0E00               	movlw	0
 15832  00748A  6FBF               	movwf	(___flge@ff1+3)& (0+255),b
 15833  00748C                     l5095:
 15834  00748C  FFFF               	dw	65535	; assembler added errata NOP
 15835                           
 15836                           ; BSR set to: 0
 15837  00748E  0E00               	movlw	0
 15838  007490  15C0               	andwf	___flge@ff2& (0+255),w,b
 15839  007492  6FC4               	movwf	??___flge& (0+255),b
 15840  007494  0E00               	movlw	0
 15841  007496  15C1               	andwf	(___flge@ff2+1)& (0+255),w,b
 15842  007498  6FC5               	movwf	(??___flge+1)& (0+255),b
 15843  00749A  0E80               	movlw	128
 15844  00749C  15C2               	andwf	(___flge@ff2+2)& (0+255),w,b
 15845  00749E  6FC6               	movwf	(??___flge+2)& (0+255),b
 15846  0074A0  0E7F               	movlw	127
 15847  0074A2  15C3               	andwf	(___flge@ff2+3)& (0+255),w,b
 15848  0074A4  6FC7               	movwf	(??___flge+3)& (0+255),b
 15849  0074A6  51C4               	movf	??___flge& (0+255),w,b
 15850  0074A8  11C5               	iorwf	(??___flge+1)& (0+255),w,b
 15851  0074AA  11C6               	iorwf	(??___flge+2)& (0+255),w,b
 15852  0074AC  11C7               	iorwf	(??___flge+3)& (0+255),w,b
 15853  0074AE  A4D8               	btfss	status,2,c
 15854  0074B0  EF5C  F03A         	goto	u6171
 15855  0074B4  EF5F  F03A         	goto	u6170
 15856  0074B8                     u6171:
 15857  0074B8  FFFF               	dw	65535	; assembler added errata NOP
 15858  0074BA  EF68  F03A         	goto	l5099
 15859  0074BE                     u6170:
 15860  0074BE  FFFF               	dw	65535	; assembler added errata NOP
 15861  0074C0                     
 15862                           ; BSR set to: 0
 15863  0074C0  0E00               	movlw	0
 15864  0074C2  6FC0               	movwf	___flge@ff2& (0+255),b
 15865  0074C4  0E00               	movlw	0
 15866  0074C6  6FC1               	movwf	(___flge@ff2+1)& (0+255),b
 15867  0074C8  0E00               	movlw	0
 15868  0074CA  6FC2               	movwf	(___flge@ff2+2)& (0+255),b
 15869  0074CC  0E00               	movlw	0
 15870  0074CE  6FC3               	movwf	(___flge@ff2+3)& (0+255),b
 15871  0074D0                     l5099:
 15872  0074D0  FFFF               	dw	65535	; assembler added errata NOP
 15873                           
 15874                           ; BSR set to: 0
 15875  0074D2  AFBF               	btfss	(___flge@ff1+3)& (0+255),7,b
 15876  0074D4  EF6E  F03A         	goto	u6181
 15877  0074D8  EF71  F03A         	goto	u6180
 15878  0074DC                     u6181:
 15879  0074DC  FFFF               	dw	65535	; assembler added errata NOP
 15880  0074DE  EF7B  F03A         	goto	l5103
 15881  0074E2                     u6180:
 15882  0074E2  FFFF               	dw	65535	; assembler added errata NOP
 15883  0074E4                     
 15884                           ; BSR set to: 0
 15885  0074E4  6DBC               	negf	___flge@ff1& (0+255),b
 15886  0074E6  1FBD               	comf	(___flge@ff1+1)& (0+255),f,b
 15887  0074E8  B0D8               	btfsc	status,0,c
 15888  0074EA  2BBD               	incf	(___flge@ff1+1)& (0+255),f,b
 15889  0074EC  1FBE               	comf	(___flge@ff1+2)& (0+255),f,b
 15890  0074EE  B0D8               	btfsc	status,0,c
 15891  0074F0  2BBE               	incf	(___flge@ff1+2)& (0+255),f,b
 15892  0074F2  0E80               	movlw	128
 15893  0074F4  57BF               	subfwb	(___flge@ff1+3)& (0+255),f,b
 15894  0074F6                     l5103:
 15895  0074F6  FFFF               	dw	65535	; assembler added errata NOP
 15896                           
 15897                           ; BSR set to: 0
 15898  0074F8  AFC3               	btfss	(___flge@ff2+3)& (0+255),7,b
 15899  0074FA  EF81  F03A         	goto	u6191
 15900  0074FE  EF84  F03A         	goto	u6190
 15901  007502                     u6191:
 15902  007502  FFFF               	dw	65535	; assembler added errata NOP
 15903  007504  EF8E  F03A         	goto	l698
 15904  007508                     u6190:
 15905  007508  FFFF               	dw	65535	; assembler added errata NOP
 15906  00750A                     
 15907                           ; BSR set to: 0
 15908  00750A  6DC0               	negf	___flge@ff2& (0+255),b
 15909  00750C  1FC1               	comf	(___flge@ff2+1)& (0+255),f,b
 15910  00750E  B0D8               	btfsc	status,0,c
 15911  007510  2BC1               	incf	(___flge@ff2+1)& (0+255),f,b
 15912  007512  1FC2               	comf	(___flge@ff2+2)& (0+255),f,b
 15913  007514  B0D8               	btfsc	status,0,c
 15914  007516  2BC2               	incf	(___flge@ff2+2)& (0+255),f,b
 15915  007518  0E80               	movlw	128
 15916  00751A  57C3               	subfwb	(___flge@ff2+3)& (0+255),f,b
 15917  00751C                     l698:
 15918  00751C  FFFF               	dw	65535	; assembler added errata NOP
 15919                           
 15920                           ; BSR set to: 0
 15921  00751E  0E00               	movlw	0
 15922  007520  1BBC               	xorwf	___flge@ff1& (0+255),f,b
 15923  007522  0E00               	movlw	0
 15924  007524  1BBD               	xorwf	(___flge@ff1+1)& (0+255),f,b
 15925  007526  0E00               	movlw	0
 15926  007528  1BBE               	xorwf	(___flge@ff1+2)& (0+255),f,b
 15927  00752A  0E80               	movlw	128
 15928  00752C  1BBF               	xorwf	(___flge@ff1+3)& (0+255),f,b
 15929  00752E  0E00               	movlw	0
 15930  007530  1BC0               	xorwf	___flge@ff2& (0+255),f,b
 15931  007532  0E00               	movlw	0
 15932  007534  1BC1               	xorwf	(___flge@ff2+1)& (0+255),f,b
 15933  007536  0E00               	movlw	0
 15934  007538  1BC2               	xorwf	(___flge@ff2+2)& (0+255),f,b
 15935  00753A  0E80               	movlw	128
 15936  00753C  1BC3               	xorwf	(___flge@ff2+3)& (0+255),f,b
 15937  00753E  51C0               	movf	___flge@ff2& (0+255),w,b
 15938  007540  5DBC               	subwf	___flge@ff1& (0+255),w,b
 15939  007542  51C1               	movf	(___flge@ff2+1)& (0+255),w,b
 15940  007544  59BD               	subwfb	(___flge@ff1+1)& (0+255),w,b
 15941  007546  51C2               	movf	(___flge@ff2+2)& (0+255),w,b
 15942  007548  59BE               	subwfb	(___flge@ff1+2)& (0+255),w,b
 15943  00754A  51C3               	movf	(___flge@ff2+3)& (0+255),w,b
 15944  00754C  59BF               	subwfb	(___flge@ff1+3)& (0+255),w,b
 15945  00754E  B0D8               	btfsc	status,0,c
 15946  007550  EFAC  F03A         	goto	u6201
 15947  007554  EFAF  F03A         	goto	u6200
 15948  007558                     u6201:
 15949  007558  FFFF               	dw	65535	; assembler added errata NOP
 15950  00755A  EFB3  F03A         	goto	l5109
 15951  00755E                     u6200:
 15952  00755E  FFFF               	dw	65535	; assembler added errata NOP
 15953  007560                     
 15954                           ; BSR set to: 0
 15955  007560  90D8               	bcf	status,0,c
 15956  007562  EFB5  F03A         	goto	l703
 15957  007566                     l5109:
 15958  007566  FFFF               	dw	65535	; assembler added errata NOP
 15959                           
 15960                           ; BSR set to: 0
 15961  007568  80D8               	bsf	status,0,c
 15962  00756A                     l703:
 15963  00756A  FFFF               	dw	65535	; assembler added errata NOP
 15964                           
 15965                           ; BSR set to: 0
 15966  00756C  0012               	return		;funcret
 15967  00756E  FFFF               	dw	65535	; errata NOP
 15968  007570                     __end_of___flge:
 15969                           	callstack 0
 15970                           
 15971 ;; *************** function ___awdiv *****************
 15972 ;; Defined at:
 15973 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
 15974 ;; Parameters:    Size  Location     Type
 15975 ;;  dividend        2   22[COMRAM] int 
 15976 ;;  divisor         2   24[COMRAM] int 
 15977 ;; Auto vars:     Size  Location     Type
 15978 ;;  quotient        2   28[COMRAM] int 
 15979 ;;  sign            1   27[COMRAM] unsigned char 
 15980 ;;  counter         1   26[COMRAM] unsigned char 
 15981 ;; Return value:  Size  Location     Type
 15982 ;;                  2   22[COMRAM] int 
 15983 ;; Registers used:
 15984 ;;		wreg, status,2, status,0
 15985 ;; Tracked objects:
 15986 ;;		On entry : 0/0
 15987 ;;		On exit  : 0/0
 15988 ;;		Unchanged: 0/0
 15989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15990 ;;      Params:         4       0       0       0       0       0       0
 15991 ;;      Locals:         4       0       0       0       0       0       0
 15992 ;;      Temps:          0       0       0       0       0       0       0
 15993 ;;      Totals:         8       0       0       0       0       0       0
 15994 ;;Total ram usage:        8 bytes
 15995 ;; Hardware stack levels used:    1
 15996 ;; Hardware stack levels required when called:    1
 15997 ;; This function calls:
 15998 ;;		Nothing
 15999 ;; This function is called by:
 16000 ;;		_check_temperature
 16001 ;; This function uses a non-reentrant model
 16002 ;;
 16003                           
 16004                           	psect	text65
 16005  00724E                     __ptext65:
 16006                           	callstack 0
 16007  00724E                     ___awdiv:
 16008                           	callstack 0
 16009  00724E  FFFF               	dw	65535	; assembler added errata NOP
 16010  007250  0E00               	movlw	0
 16011  007252  6E1C               	movwf	___awdiv@sign^0,c
 16012  007254  BE1A               	btfsc	(___awdiv@divisor+1)^0,7,c
 16013  007256  EF32  F039         	goto	u6540
 16014  00725A  EF2F  F039         	goto	u6541
 16015  00725E                     u6541:
 16016  00725E  FFFF               	dw	65535	; assembler added errata NOP
 16017  007260  EF39  F039         	goto	l5327
 16018  007264                     u6540:
 16019  007264  FFFF               	dw	65535	; assembler added errata NOP
 16020  007266  6C19               	negf	___awdiv@divisor^0,c
 16021  007268  1E1A               	comf	(___awdiv@divisor+1)^0,f,c
 16022  00726A  B0D8               	btfsc	status,0,c
 16023  00726C  2A1A               	incf	(___awdiv@divisor+1)^0,f,c
 16024  00726E  0E01               	movlw	1
 16025  007270  6E1C               	movwf	___awdiv@sign^0,c
 16026  007272                     l5327:
 16027  007272  FFFF               	dw	65535	; assembler added errata NOP
 16028  007274  BE18               	btfsc	(___awdiv@dividend+1)^0,7,c
 16029  007276  EF42  F039         	goto	u6550
 16030  00727A  EF3F  F039         	goto	u6551
 16031  00727E                     u6551:
 16032  00727E  FFFF               	dw	65535	; assembler added errata NOP
 16033  007280  EF49  F039         	goto	l5333
 16034  007284                     u6550:
 16035  007284  FFFF               	dw	65535	; assembler added errata NOP
 16036  007286  6C17               	negf	___awdiv@dividend^0,c
 16037  007288  1E18               	comf	(___awdiv@dividend+1)^0,f,c
 16038  00728A  B0D8               	btfsc	status,0,c
 16039  00728C  2A18               	incf	(___awdiv@dividend+1)^0,f,c
 16040  00728E  0E01               	movlw	1
 16041  007290  1A1C               	xorwf	___awdiv@sign^0,f,c
 16042  007292                     l5333:
 16043  007292  FFFF               	dw	65535	; assembler added errata NOP
 16044  007294  0E00               	movlw	0
 16045  007296  6E1E               	movwf	(___awdiv@quotient+1)^0,c
 16046  007298  0E00               	movlw	0
 16047  00729A  6E1D               	movwf	___awdiv@quotient^0,c
 16048  00729C  5019               	movf	___awdiv@divisor^0,w,c
 16049  00729E  101A               	iorwf	(___awdiv@divisor+1)^0,w,c
 16050  0072A0  B4D8               	btfsc	status,2,c
 16051  0072A2  EF55  F039         	goto	u6561
 16052  0072A6  EF58  F039         	goto	u6560
 16053  0072AA                     u6561:
 16054  0072AA  FFFF               	dw	65535	; assembler added errata NOP
 16055  0072AC  EF89  F039         	goto	l5355
 16056  0072B0                     u6560:
 16057  0072B0  FFFF               	dw	65535	; assembler added errata NOP
 16058  0072B2  0E01               	movlw	1
 16059  0072B4  6E1B               	movwf	___awdiv@counter^0,c
 16060  0072B6  EF62  F039         	goto	l5341
 16061  0072BA                     l5339:
 16062  0072BA  FFFF               	dw	65535	; assembler added errata NOP
 16063  0072BC  90D8               	bcf	status,0,c
 16064  0072BE  3619               	rlcf	___awdiv@divisor^0,f,c
 16065  0072C0  361A               	rlcf	(___awdiv@divisor+1)^0,f,c
 16066  0072C2  2A1B               	incf	___awdiv@counter^0,f,c
 16067  0072C4                     l5341:
 16068  0072C4  FFFF               	dw	65535	; assembler added errata NOP
 16069  0072C6  AE1A               	btfss	(___awdiv@divisor+1)^0,7,c
 16070  0072C8  EF68  F039         	goto	u6571
 16071  0072CC  EF6B  F039         	goto	u6570
 16072  0072D0                     u6571:
 16073  0072D0  FFFF               	dw	65535	; assembler added errata NOP
 16074  0072D2  EF5D  F039         	goto	l5339
 16075  0072D6                     u6570:
 16076  0072D6  FFFF               	dw	65535	; assembler added errata NOP
 16077  0072D8                     l5343:
 16078  0072D8  FFFF               	dw	65535	; assembler added errata NOP
 16079  0072DA  90D8               	bcf	status,0,c
 16080  0072DC  361D               	rlcf	___awdiv@quotient^0,f,c
 16081  0072DE  361E               	rlcf	(___awdiv@quotient+1)^0,f,c
 16082  0072E0  5019               	movf	___awdiv@divisor^0,w,c
 16083  0072E2  5C17               	subwf	___awdiv@dividend^0,w,c
 16084  0072E4  501A               	movf	(___awdiv@divisor+1)^0,w,c
 16085  0072E6  5818               	subwfb	(___awdiv@dividend+1)^0,w,c
 16086  0072E8  A0D8               	btfss	status,0,c
 16087  0072EA  EF79  F039         	goto	u6581
 16088  0072EE  EF7C  F039         	goto	u6580
 16089  0072F2                     u6581:
 16090  0072F2  FFFF               	dw	65535	; assembler added errata NOP
 16091  0072F4  EF82  F039         	goto	l5351
 16092  0072F8                     u6580:
 16093  0072F8  FFFF               	dw	65535	; assembler added errata NOP
 16094  0072FA  5019               	movf	___awdiv@divisor^0,w,c
 16095  0072FC  5E17               	subwf	___awdiv@dividend^0,f,c
 16096  0072FE  501A               	movf	(___awdiv@divisor+1)^0,w,c
 16097  007300  5A18               	subwfb	(___awdiv@dividend+1)^0,f,c
 16098  007302  801D               	bsf	___awdiv@quotient^0,0,c
 16099  007304                     l5351:
 16100  007304  FFFF               	dw	65535	; assembler added errata NOP
 16101  007306  90D8               	bcf	status,0,c
 16102  007308  321A               	rrcf	(___awdiv@divisor+1)^0,f,c
 16103  00730A  3219               	rrcf	___awdiv@divisor^0,f,c
 16104  00730C  2E1B               	decfsz	___awdiv@counter^0,f,c
 16105  00730E  EF6C  F039         	goto	l5343
 16106  007312                     l5355:
 16107  007312  FFFF               	dw	65535	; assembler added errata NOP
 16108  007314  501C               	movf	___awdiv@sign^0,w,c
 16109  007316  B4D8               	btfsc	status,2,c
 16110  007318  EF90  F039         	goto	u6591
 16111  00731C  EF93  F039         	goto	u6590
 16112  007320                     u6591:
 16113  007320  FFFF               	dw	65535	; assembler added errata NOP
 16114  007322  EF98  F039         	goto	l5359
 16115  007326                     u6590:
 16116  007326  FFFF               	dw	65535	; assembler added errata NOP
 16117  007328  6C1D               	negf	___awdiv@quotient^0,c
 16118  00732A  1E1E               	comf	(___awdiv@quotient+1)^0,f,c
 16119  00732C  B0D8               	btfsc	status,0,c
 16120  00732E  2A1E               	incf	(___awdiv@quotient+1)^0,f,c
 16121  007330                     l5359:
 16122  007330  FFFF               	dw	65535	; assembler added errata NOP
 16123  007332  C01D  F017         	movff	___awdiv@quotient,?___awdiv
 16124  007336  C01E  F018         	movff	___awdiv@quotient+1,?___awdiv+1
 16125  00733A  0012               	return		;funcret
 16126  00733C  FFFF               	dw	65535	; errata NOP
 16127  00733E                     __end_of___awdiv:
 16128                           	callstack 0
 16129                           
 16130 ;; *************** function _change_direction *****************
 16131 ;; Defined at:
 16132 ;;		line 41 in file "stepper_motor.c"
 16133 ;; Parameters:    Size  Location     Type
 16134 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 16135 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
 16136 ;; Auto vars:     Size  Location     Type
 16137 ;;		None
 16138 ;; Return value:  Size  Location     Type
 16139 ;;                  1    wreg      void 
 16140 ;; Registers used:
 16141 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16142 ;; Tracked objects:
 16143 ;;		On entry : 0/0
 16144 ;;		On exit  : 0/0
 16145 ;;		Unchanged: 0/0
 16146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16147 ;;      Params:         2       0       0       0       0       0       0
 16148 ;;      Locals:         0       0       0       0       0       0       0
 16149 ;;      Temps:          2       0       0       0       0       0       0
 16150 ;;      Totals:         4       0       0       0       0       0       0
 16151 ;;Total ram usage:        4 bytes
 16152 ;; Hardware stack levels used:    1
 16153 ;; Hardware stack levels required when called:    1
 16154 ;; This function calls:
 16155 ;;		Nothing
 16156 ;; This function is called by:
 16157 ;;		_main
 16158 ;; This function uses a non-reentrant model
 16159 ;;
 16160                           
 16161                           	psect	text66
 16162  006340                     __ptext66:
 16163                           	callstack 0
 16164  006340                     _change_direction:
 16165                           	callstack 0
 16166  006340  FFFF               	dw	65535	; assembler added errata NOP
 16167  006342                     
 16168                           ;stepper_motor.c: 42:     stepper_motor -> direction = stepper_motor -> direction*(-1);
 16169  006342  EE20 F004          	lfsr	2,4
 16170  006346  5001               	movf	change_direction@stepper_motor^0,w,c
 16171  006348  26D9               	addwf	fsr2l,f,c
 16172  00634A  5002               	movf	(change_direction@stepper_motor+1)^0,w,c
 16173  00634C  22DA               	addwfc	fsr2h,f,c
 16174  00634E  CFDE F003          	movff	postinc2,??_change_direction
 16175  006352  CFDD F004          	movff	postdec2,??_change_direction+1
 16176  006356  1E03               	comf	??_change_direction^0,f,c
 16177  006358  1E04               	comf	(??_change_direction+1)^0,f,c
 16178  00635A  4A03               	infsnz	??_change_direction^0,f,c
 16179  00635C  2A04               	incf	(??_change_direction+1)^0,f,c
 16180  00635E  EE20 F004          	lfsr	2,4
 16181  006362  5001               	movf	change_direction@stepper_motor^0,w,c
 16182  006364  26D9               	addwf	fsr2l,f,c
 16183  006366  5002               	movf	(change_direction@stepper_motor+1)^0,w,c
 16184  006368  22DA               	addwfc	fsr2h,f,c
 16185  00636A  C003  FFDE         	movff	??_change_direction,postinc2
 16186  00636E  C004  FFDD         	movff	??_change_direction+1,postdec2
 16187  006372  0012               	return		;funcret
 16188  006374  FFFF               	dw	65535	; errata NOP
 16189  006376                     __end_of_change_direction:
 16190                           	callstack 0
 16191                           
 16192 ;; *************** function _rx_char_usart *****************
 16193 ;; Defined at:
 16194 ;;		line 265 in file "main.c"
 16195 ;; Parameters:    Size  Location     Type
 16196 ;;		None
 16197 ;; Auto vars:     Size  Location     Type
 16198 ;;		None
 16199 ;; Return value:  Size  Location     Type
 16200 ;;                  1    wreg      void 
 16201 ;; Registers used:
 16202 ;;		wreg, status,2
 16203 ;; Tracked objects:
 16204 ;;		On entry : 0/0
 16205 ;;		On exit  : 0/0
 16206 ;;		Unchanged: 0/0
 16207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16208 ;;      Params:         0       0       0       0       0       0       0
 16209 ;;      Locals:         0       0       0       0       0       0       0
 16210 ;;      Temps:          0       0       0       0       0       0       0
 16211 ;;      Totals:         0       0       0       0       0       0       0
 16212 ;;Total ram usage:        0 bytes
 16213 ;; Hardware stack levels used:    1
 16214 ;; This function calls:
 16215 ;;		Nothing
 16216 ;; This function is called by:
 16217 ;;		Interrupt level 2
 16218 ;; This function uses a non-reentrant model
 16219 ;;
 16220                           
 16221                           	psect	intcode
 16222  000008                     __pintcode:
 16223                           	callstack 0
 16224  000008                     _rx_char_usart:
 16225                           	callstack 0
 16226  000008  FFFF               	dw	65535	; assembler added errata NOP
 16227                           
 16228                           ;incstack = 0
 16229  00000A  827F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 16230  00000C                     
 16231                           ;main.c: 266:     if(PIE1bits.RCIE && PIR1bits.RCIF){
 16232  00000C  AA9D               	btfss	157,5,c	;volatile
 16233  00000E  EF0B  F000         	goto	i2u733_41
 16234  000012  EF0E  F000         	goto	i2u733_40
 16235  000016                     i2u733_41:
 16236  000016  FFFF               	dw	65535	; assembler added errata NOP
 16237  000018  EF1E  F000         	goto	i2l5911
 16238  00001C                     i2u733_40:
 16239  00001C  FFFF               	dw	65535	; assembler added errata NOP
 16240  00001E  AA9E               	btfss	158,5,c	;volatile
 16241  000020  EF14  F000         	goto	i2u734_41
 16242  000024  EF17  F000         	goto	i2u734_40
 16243  000028                     i2u734_41:
 16244  000028  FFFF               	dw	65535	; assembler added errata NOP
 16245  00002A  EF1E  F000         	goto	i2l5911
 16246  00002E                     i2u734_40:
 16247  00002E  FFFF               	dw	65535	; assembler added errata NOP
 16248  000030                     
 16249                           ;main.c: 267:         PIR1bits.RCIF = 0;
 16250  000030  9A9E               	bcf	158,5,c	;volatile
 16251  000032                     
 16252                           ;main.c: 268:         state_changed = 1;
 16253  000032  0E01               	movlw	1
 16254  000034  0101               	movlb	1	; () banked
 16255  000036  6FC0               	movwf	_state_changed& (0+255),b
 16256                           
 16257                           ;main.c: 269:         read_new_char = 1;
 16258  000038  0E01               	movlw	1
 16259  00003A  6FBE               	movwf	_read_new_char& (0+255),b
 16260  00003C                     i2l5911:
 16261  00003C  FFFF               	dw	65535	; assembler added errata NOP
 16262                           
 16263                           ;main.c: 271:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF){
 16264  00003E  AAF2               	btfss	242,5,c	;volatile
 16265  000040  EF24  F000         	goto	i2u735_41
 16266  000044  EF27  F000         	goto	i2u735_40
 16267  000048                     i2u735_41:
 16268  000048  FFFF               	dw	65535	; assembler added errata NOP
 16269  00004A  EF37  F000         	goto	i2l226
 16270  00004E                     i2u735_40:
 16271  00004E  FFFF               	dw	65535	; assembler added errata NOP
 16272  000050  A4F2               	btfss	242,2,c	;volatile
 16273  000052  EF2D  F000         	goto	i2u736_41
 16274  000056  EF30  F000         	goto	i2u736_40
 16275  00005A                     i2u736_41:
 16276  00005A  FFFF               	dw	65535	; assembler added errata NOP
 16277  00005C  EF37  F000         	goto	i2l226
 16278  000060                     i2u736_40:
 16279  000060  FFFF               	dw	65535	; assembler added errata NOP
 16280  000062                     
 16281                           ;main.c: 272:         T0CON = 0;
 16282  000062  0E00               	movlw	0
 16283  000064  6ED5               	movwf	213,c	;volatile
 16284  000066                     
 16285                           ;main.c: 273:         INTCONbits.TMR0IF = 0;
 16286  000066  94F2               	bcf	242,2,c	;volatile
 16287                           
 16288                           ;main.c: 274:         timer_done = 1;
 16289  000068  0E01               	movlw	1
 16290  00006A  0101               	movlb	1	; () banked
 16291  00006C  6FBD               	movwf	_timer_done& (0+255),b
 16292  00006E                     i2l226:
 16293  00006E  FFFF               	dw	65535	; assembler added errata NOP
 16294  000070  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 16295  000072  0011               	retfie		f
 16296  000074  FFFF               	dw	65535	; errata NOP
 16297  000076                     __end_of_rx_char_usart:
 16298                           	callstack 0
 16299                           
 16300                           	psect	rparam
 16301  0000                     
 16302                           	psect	temp
 16303  00007F                     btemp:
 16304                           	callstack 0
 16305  00007F                     	ds	1
 16306  0000                     int$flags	set	btemp
 16307  0000                     wtemp8	set	btemp+1
 16308  0000                     ttemp5	set	btemp+1
 16309  0000                     ttemp6	set	btemp+4
 16310  0000                     ttemp7	set	btemp+8
 16311                           
 16312                           	psect	idloc
 16313                           
 16314                           ;Config register IDLOC0 @ 0x200000
 16315                           ;	unspecified, using default values
 16316  200000                     	org	2097152
 16317  200000  FF                 	db	255
 16318                           
 16319                           ;Config register IDLOC1 @ 0x200001
 16320                           ;	unspecified, using default values
 16321  200001                     	org	2097153
 16322  200001  FF                 	db	255
 16323                           
 16324                           ;Config register IDLOC2 @ 0x200002
 16325                           ;	unspecified, using default values
 16326  200002                     	org	2097154
 16327  200002  FF                 	db	255
 16328                           
 16329                           ;Config register IDLOC3 @ 0x200003
 16330                           ;	unspecified, using default values
 16331  200003                     	org	2097155
 16332  200003  FF                 	db	255
 16333                           
 16334                           ;Config register IDLOC4 @ 0x200004
 16335                           ;	unspecified, using default values
 16336  200004                     	org	2097156
 16337  200004  FF                 	db	255
 16338                           
 16339                           ;Config register IDLOC5 @ 0x200005
 16340                           ;	unspecified, using default values
 16341  200005                     	org	2097157
 16342  200005  FF                 	db	255
 16343                           
 16344                           ;Config register IDLOC6 @ 0x200006
 16345                           ;	unspecified, using default values
 16346  200006                     	org	2097158
 16347  200006  FF                 	db	255
 16348                           
 16349                           ;Config register IDLOC7 @ 0x200007
 16350                           ;	unspecified, using default values
 16351  200007                     	org	2097159
 16352  200007  FF                 	db	255
 16353                           
 16354                           	psect	config
 16355                           
 16356                           ; Padding undefined space
 16357  300000                     	org	3145728
 16358  300000  FF                 	db	255
 16359                           
 16360                           ;Config register CONFIG1H @ 0x300001
 16361                           ;	Oscillator Selection bits
 16362                           ;	OSC = RCIO, RC oscillator w/ OSC2 configured as RA6
 16363                           ;	Oscillator System Clock Switch Enable bit
 16364                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
 16365  300001                     	org	3145729
 16366  300001  27                 	db	39
 16367                           
 16368                           ;Config register CONFIG2L @ 0x300002
 16369                           ;	Power-up Timer Enable bit
 16370                           ;	PWRT = OFF, PWRT disabled
 16371                           ;	Brown-out Reset Enable bit
 16372                           ;	BOR = ON, Brown-out Reset enabled
 16373                           ;	Brown-out Reset Voltage bits
 16374                           ;	BORV = 20, VBOR set to 2.0V
 16375  300002                     	org	3145730
 16376  300002  0F                 	db	15
 16377                           
 16378                           ;Config register CONFIG2H @ 0x300003
 16379                           ;	Watchdog Timer Enable bit
 16380                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 16381                           ;	Watchdog Timer Postscale Select bits
 16382                           ;	WDTPS = 128, 1:128
 16383  300003                     	org	3145731
 16384  300003  0E                 	db	14
 16385                           
 16386                           ; Padding undefined space
 16387  300004                     	org	3145732
 16388  300004  FF                 	db	255
 16389                           
 16390                           ;Config register CONFIG3H @ 0x300005
 16391                           ;	CCP2 Mux bit
 16392                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
 16393  300005                     	org	3145733
 16394  300005  01                 	db	1
 16395                           
 16396                           ;Config register CONFIG4L @ 0x300006
 16397                           ;	Stack Full/Underflow Reset Enable bit
 16398                           ;	STVR = ON, Stack Full/Underflow will cause RESET
 16399                           ;	Low Voltage ICSP Enable bit
 16400                           ;	LVP = ON, Low Voltage ICSP enabled
 16401                           ;	Background Debugger Enable bit
 16402                           ;	DEBUG = 0x1, unprogrammed default
 16403  300006                     	org	3145734
 16404  300006  85                 	db	133
 16405                           
 16406                           ; Padding undefined space
 16407  300007                     	org	3145735
 16408  300007  FF                 	db	255
 16409                           
 16410                           ;Config register CONFIG5L @ 0x300008
 16411                           ;	Code Protection bit
 16412                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
 16413                           ;	Code Protection bit
 16414                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
 16415                           ;	Code Protection bit
 16416                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
 16417                           ;	Code Protection bit
 16418                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
 16419  300008                     	org	3145736
 16420  300008  0F                 	db	15
 16421                           
 16422                           ;Config register CONFIG5H @ 0x300009
 16423                           ;	Boot Block Code Protection bit
 16424                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
 16425                           ;	Data EEPROM Code Protection bit
 16426                           ;	CPD = OFF, Data EEPROM not code protected
 16427  300009                     	org	3145737
 16428  300009  C0                 	db	192
 16429                           
 16430                           ;Config register CONFIG6L @ 0x30000A
 16431                           ;	Write Protection bit
 16432                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
 16433                           ;	Write Protection bit
 16434                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
 16435                           ;	Write Protection bit
 16436                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
 16437                           ;	Write Protection bit
 16438                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
 16439  30000A                     	org	3145738
 16440  30000A  0F                 	db	15
 16441                           
 16442                           ;Config register CONFIG6H @ 0x30000B
 16443                           ;	Configuration Register Write Protection bit
 16444                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
 16445                           ;	Boot Block Write Protection bit
 16446                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
 16447                           ;	Data EEPROM Write Protection bit
 16448                           ;	WRTD = OFF, Data EEPROM not write protected
 16449  30000B                     	org	3145739
 16450  30000B  E0                 	db	224
 16451                           
 16452                           ;Config register CONFIG7L @ 0x30000C
 16453                           ;	Table Read Protection bit
 16454                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
 16455                           ;	Table Read Protection bit
 16456                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
 16457                           ;	Table Read Protection bit
 16458                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
 16459                           ;	Table Read Protection bit
 16460                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
 16461  30000C                     	org	3145740
 16462  30000C  0F                 	db	15
 16463                           
 16464                           ;Config register CONFIG7H @ 0x30000D
 16465                           ;	Boot Block Table Read Protection bit
 16466                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
 16467  30000D                     	org	3145741
 16468  30000D  40                 	db	64
 16469                           tosu	equ	0xFFF
 16470                           tosh	equ	0xFFE
 16471                           tosl	equ	0xFFD
 16472                           stkptr	equ	0xFFC
 16473                           pclatu	equ	0xFFB
 16474                           pclath	equ	0xFFA
 16475                           pcl	equ	0xFF9
 16476                           tblptru	equ	0xFF8
 16477                           tblptrh	equ	0xFF7
 16478                           tblptrl	equ	0xFF6
 16479                           tablat	equ	0xFF5
 16480                           prodh	equ	0xFF4
 16481                           prodl	equ	0xFF3
 16482                           indf0	equ	0xFEF
 16483                           postinc0	equ	0xFEE
 16484                           postdec0	equ	0xFED
 16485                           preinc0	equ	0xFEC
 16486                           plusw0	equ	0xFEB
 16487                           fsr0h	equ	0xFEA
 16488                           fsr0l	equ	0xFE9
 16489                           wreg	equ	0xFE8
 16490                           indf1	equ	0xFE7
 16491                           postinc1	equ	0xFE6
 16492                           postdec1	equ	0xFE5
 16493                           preinc1	equ	0xFE4
 16494                           plusw1	equ	0xFE3
 16495                           fsr1h	equ	0xFE2
 16496                           fsr1l	equ	0xFE1
 16497                           bsr	equ	0xFE0
 16498                           indf2	equ	0xFDF
 16499                           postinc2	equ	0xFDE
 16500                           postdec2	equ	0xFDD
 16501                           preinc2	equ	0xFDC
 16502                           plusw2	equ	0xFDB
 16503                           fsr2h	equ	0xFDA
 16504                           fsr2l	equ	0xFD9
 16505                           status	equ	0xFD8

Data Sizes:
    Strings     408
    Constant    20
    Data        45
    BSS         120
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    126     126
    BANK0           128     44     119
    BANK1           256    167     241
    BANK2           256      0      16
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    main$2166	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[9]), 
		 -> STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_110(CODE[3]), STR_106(CODE[3]), STR_101(CODE[3]), STR_97(CODE[3]), 
		 -> STR_92(CODE[4]), STR_88(CODE[4]), STR_83(CODE[3]), STR_78(CODE[3]), 
		 -> STR_73(CODE[4]), STR_68(CODE[3]), STR_63(CODE[3]), STR_58(CODE[4]), 
		 -> STR_53(CODE[3]), STR_48(CODE[3]), STR_43(CODE[4]), STR_38(CODE[3]), 
		 -> STR_34(CODE[3]), STR_29(CODE[3]), STR_25(CODE[3]), STR_20(CODE[4]), 
		 -> STR_16(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_110(CODE[3]), STR_106(CODE[3]), STR_101(CODE[3]), STR_97(CODE[3]), 
		 -> STR_92(CODE[4]), STR_88(CODE[4]), STR_83(CODE[3]), STR_78(CODE[3]), 
		 -> STR_73(CODE[4]), STR_68(CODE[3]), STR_63(CODE[3]), STR_58(CODE[4]), 
		 -> STR_53(CODE[3]), STR_48(CODE[3]), STR_43(CODE[4]), STR_38(CODE[3]), 
		 -> STR_34(CODE[3]), STR_29(CODE[3]), STR_25(CODE[3]), STR_20(CODE[4]), 
		 -> STR_16(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), STR_8(CODE[50]), 
		 -> STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), STR_8(CODE[50]), 
		 -> STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), 
		 -> STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), 
		 -> STR_2(CODE[64]), STR_1(CODE[49]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    S1562_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    change_direction@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    change_direction@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK1[12]), end_effector_stepper(BANK1[12]), joint_stepper(BANK1[12]), 

    reach_goal@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    reach_goal@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK1[12]), end_effector_stepper(BANK1[12]), joint_stepper(BANK1[12]), 

    update_current_coil@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    update_current_coil@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK1[12]), end_effector_stepper(BANK1[12]), joint_stepper(BANK1[12]), 

    turn_on_current_coil@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    turn_on_current_coil@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK1[12]), end_effector_stepper(BANK1[12]), joint_stepper(BANK1[12]), 

    init_stepper@register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    init_stepper@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    init_stepper@hex_coil_register_values	PTR unsigned char  size(2) Largest target is 4
		 -> hex_end_effector_values(BANK1[4]), hex_joint_values(BANK1[4]), 

    init_stepper@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK1[12]), end_effector_stepper(BANK1[12]), joint_stepper(BANK1[12]), 

    state_translator_micro_to_fpga@state	PTR int  size(2) Largest target is 2
		 -> state(BANK1[2]), 

    state_translator_fpga_to_micro@state	PTR int  size(2) Largest target is 2
		 -> state(BANK1[2]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 160
		 -> STR_13(CODE[37]), STR_12(CODE[17]), STR_11(CODE[44]), main@greet_str(BANK1[160]), 
		 -> STR_9(CODE[22]), 

    main@greet_str	PTR const unsigned char [80] size(2) Largest target is 64
		 -> ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    joint_dilutor_stepper.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    end_effector_stepper.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    S181$register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    joint_stepper.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    state_msgs	PTR const unsigned char [8] size(2) Largest target is 64
		 -> STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[9]), 
		 -> STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 


Critical Paths under _main in COMRAM

    _get_temperature->___fltol
    _state_translator_fpga_to_micro->_lcd_dat
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _reach_goal->_turn_on_current_coil
    _lcd_str->_lcd_dat
    _lcd_dat->_lcd_wr
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_wr
    _init_timer_2->___fltol
    _update_pwm_duty_ccp1->___fltol
    ___fldiv->___flmul
    _init_USART->___fltol
    _roundf->___fltol
    ___flsub->___fladd
    ___fladd->___fldiv
    _get_liters->___fltol
    ___fltol->___flsub
    ___flmul->___xxtofl
    _abs->___aomod
    ___xxtofl->___awdiv
    ___flge->___fltol
    ___awdiv->_abs

Critical Paths under _rx_char_usart in COMRAM

    None.

Critical Paths under _main in BANK0

    _wait_for_zero->_get_temperature
    _get_temperature->___fltol
    _snprintf->_vsnprintf
    _init_timer_2->___fltol
    _init_ccp1->_update_pwm_duty_ccp1
    _update_pwm_duty_ccp1->___fltol
    _init_USART->_roundf
    _roundf->___flge
    _get_liters->___fltol
    _check_temperature->___flge
    ___flge->_get_liters

Critical Paths under _rx_char_usart in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rx_char_usart in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rx_char_usart in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rx_char_usart in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rx_char_usart in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rx_char_usart in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               169   169      0   93200
                                             42 BANK0      2     2      0
                                              0 BANK1    167   167      0
                             ___flge
                             ___wmul
                           ___xxtofl
                   _change_direction
                  _check_temperature
       _configure_ad_conversion_oven
       _configure_ad_conversion_tank
                         _get_liters
                      _get_reg_value
                    _get_temperature
                         _init_PORTS
                         _init_USART
                          _init_ccp1
                    _init_interrupts
                       _init_stepper
                       _init_timer_0
                       _init_timer_2
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                         _reach_goal
                     _serial_tx_char
                           _snprintf
     _state_translator_fpga_to_micro
     _state_translator_micro_to_fpga
                      _wait_for_zero
 ---------------------------------------------------------------------------------
 (1) _wait_for_zero                                        0     0      0    3739
                    _get_temperature
 ---------------------------------------------------------------------------------
 (2) _get_temperature                                      2     0      2    3739
                                              2 BANK0      2     0      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _state_translator_micro_to_fpga                       5     3      2     168
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _state_translator_fpga_to_micro                       3     1      2     472
                                              2 COMRAM     3     1      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            12     4      8   46693
                                             10 BANK0     12     4      8
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   46319
                                            111 COMRAM    12     4      8
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   45556
                                            103 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   45095
                                             66 COMRAM    37    31      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7075
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6115
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    5013
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    5560
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6790
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2168
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1175
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _serial_tx_char                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _reach_goal                                           7     3      4    1590
                                              8 COMRAM     7     3      4
               _turn_on_current_coil
                _update_current_coil
 ---------------------------------------------------------------------------------
 (2) _update_current_coil                                  6     4      2     274
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _turn_on_current_coil                                 8     6      2     142
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              5     3      2     514
                                              2 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      44
                                              2 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_timer_2                                         4     4      0    8165
                                              2 BANK0      4     4      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _init_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_stepper                                        16     4     12    1678
                                              0 COMRAM    16     4     12
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ccp1                                            0     0      0    4830
               _update_pwm_duty_ccp1
 ---------------------------------------------------------------------------------
 (2) _update_pwm_duty_ccp1                                 9     5      4    4830
                                              2 BANK0      9     5      4
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1551
                                             69 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   12170
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   11561
                                             16 BANK0     26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3801
                                            110 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    3478
                                             94 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_reg_value                                        1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _get_liters                                           2     0      2    3739
                                              2 BANK0      2     0      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     609
                                            118 COMRAM     8     4      4
                                              0 BANK0      2     2      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2504
                                             44 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _configure_ad_conversion_tank                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configure_ad_conversion_oven                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_temperature                                    6     4      2    2381
                                             16 BANK0      6     4      2
                            ___awdiv
                             ___flge
                           ___xxtofl
                                _abs
                    _get_temperature (ARG)
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     218
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     626
                                             30 COMRAM    14    10      4
                            ___awdiv (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     942
                                              4 BANK0     12     4      8
                            ___fltol (ARG)
                           ___xxtofl (ARG)
                         _get_liters (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                             22 COMRAM     8     4      4
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (1) _change_direction                                     4     2      2     348
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _rx_char_usart                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flge
     ___fltol (ARG)
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
     ___xxtofl (ARG)
       ___awdiv (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _abs (ARG)
         ___aomod (ARG)
     _get_liters (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
   ___wmul
   ___xxtofl
     ___awdiv (ARG)
       _abs (ARG)
         ___aomod (ARG)
     _abs (ARG)
       ___aomod (ARG)
   _change_direction
   _check_temperature
     ___awdiv
       _abs (ARG)
         ___aomod (ARG)
     ___flge
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _get_liters (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
           ___flneg (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                         ___aomod (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___xxtofl
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _abs (ARG)
         ___aomod (ARG)
     _abs
       ___aomod (ARG)
     _get_temperature (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
   _configure_ad_conversion_oven
   _configure_ad_conversion_tank
   _get_liters
     ___flmul
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _abs (ARG)
         ___aomod (ARG)
   _get_reg_value
   _get_temperature
     ___flmul
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _abs (ARG)
         ___aomod (ARG)
   _init_PORTS
   _init_USART
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
     _roundf
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flge
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
           ___flneg (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                         ___aomod (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _get_liters (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                         ___aomod (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
             ___flneg (ARG)
             ___flsub (ARG)
               ___fladd
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___awdiv (ARG)
                         _abs (ARG)
                           ___aomod (ARG)
                       _abs (ARG)
                         ___aomod (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                         ___aomod (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
           ___xxtofl
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
   _init_ccp1
     _update_pwm_duty_ccp1
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
   _init_interrupts
   _init_stepper
   _init_timer_0
   _init_timer_2
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
     ___flmul
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
   _lcd_cmd
     _lcd_wr
   _lcd_init
     _lcd_cmd
       _lcd_wr
   _lcd_str
     _lcd_dat
       _lcd_wr
   _reach_goal
     _turn_on_current_coil
     _update_current_coil
   _serial_tx_char
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _state_translator_fpga_to_micro
     _lcd_dat
       _lcd_wr
   _state_translator_micro_to_fpga
   _wait_for_zero
     _get_temperature
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)

 _rx_char_usart (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      10       9        6.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A7      F1       7       94.1%
BITBANK0            80      0       0       4        0.0%
BANK0               80     2C      77       5       93.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7E      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F6      15        0.0%
DATA                 0      0     1F6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Jun 17 21:00:02 2023

                                  ?_get_reg_value 0001                                   ??_wait_for_zero 007F  
                                    ___fldiv@aexp 005E                                      ___fldiv@bexp 005D  
                                    ___fldiv@sign 0056                                                l21 63F6  
                                              l24 61DC                                                l27 61F0  
                                              l36 6170                                      ___awdiv@sign 001C  
                             ___wmul@multiplicand 0003                                               l210 1D76  
                                             l303 793A                                               l312 6BA8  
                                             l162 176A                                               l403 61B2  
                                             l307 6BA4                                               l412 691A  
                                             l421 623C                                               l406 61D0  
                                             l270 6288                                               l174 1850  
                                             l166 1DF8                                               l415 6764  
                                             l255 6308                                               l352 6DE0  
                                             l273 62B2                                               l433 62DC  
                                             l409 68B0                                               l425 625E  
                                             l418 67C8                                               l362 6D14  
                                             l258 6154                                               l282 6B1E  
                                             l370 663A                                               l178 1870  
                                             l355 6236                                               l267 6160  
                                             l276 6A10                                               l380 6990  
                                             l429 6F96                                               l349 6212  
                                             l703 756A                                               l367 6C50  
                                             l384 6372                                               l376 6EB8  
                                             l560 7ACC                                               l730 76A2  
                                             l707 63B4                                               l547 7C80  
                                             l664 733A                                               l871 3FD8  
                                             l961 204A                                               l881 7228  
                                             l698 751C                                               l970 23A4  
                                             l962 2034                                               l963 1FEA  
                                             l878 3FFA                                               l888 724A  
                                             l978 218E                                               l987 2292  
                                             l988 227A                                 ??_init_interrupts 0001  
                                             _PR2 000FCB                                               _abs 6550  
                                             _pad 707E                         init_stepper@register_name 000B  
                                             wreg 000FE8                                    ?_rx_char_usart 0001  
                                    ___flmul@aexp 003E                                      ___flmul@bexp 003F  
                                    ___flmul@sign 0039                                      ___flmul@temp 0044  
                                    ___flmul@prod 0040                                      ___fltol@exp1 00B9  
                                            l1003 654C                                              l1020 2A4C  
                                            l1102 3CA0                                              l1111 6596  
                                            l1015 2C7A                                              l1017 2A92  
                                            l1026 2AE8                                              l1051 2848  
                                            ?_abs 0013                                              l1108 658C  
                                            l1028 2B78                                              l1029 2B60  
                                            l1205 312A                                              l1141 77DC  
                                            l1133 633C                                              l1054 26A2  
                                            l1230 3946                                              l1047 2496  
                                            l1119 306C                                              l1207 3134  
                                            l1064 2800                                              l1056 2732  
                                            l1232 3950                                              l1057 271A  
                                            l1225 33A2                                              l1241 3B24  
                                            l1250 3DBA                                              l1146 77B6  
                                            l1091 3D1A                                              l1307 3666  
                                            l1323 0198                                              l1260 3EE6  
                                            PORTD 000F83                                              l1309 36D2  
                                            PORTE 000F84                                              l1422 7E4C  
                                            l1190 711E                                              l1095 3C34  
                                            l1239 3AB2                                              l1271 3724  
                                            l1088 3B88                                              l1192 7160  
                                            l1264 3EF0                                              l1248 3DB0  
                                            l1504 64BC                                              l1433 6438  
                                            l1441 66F6                                              l4001 3298  
                                            l1346 145C                                              l1419 7E42  
                                            l1187 70D2                                              l4011 3320  
                                            l4003 32BA                                              l1259 3E92  
                                            l1427 6502                                              l1284 33EA  
                                            l4021 3366                                              l4013 3332  
                                            l4005 32D8                                              l4101 3E2E  
                                            l1269 371A                                              l1293 3498  
                                            l1462 7078                                              l1470 65E8  
                                            l1286 33F4                                              l1390 68A0  
                                            l1199 675C                                              l4015 333A  
                                            l4023 3378                                              l4007 32F6  
                                            l4031 391A                                              l4111 3EAA  
                                            l4103 3E66                                              l1279 38FE  
                                            l1447 647A                                              l1391 68A8  
                                            l5001 2502                                              l1473 613E  
                                            l4017 3350                                              l4009 3308  
                                            l4041 3992                                              l4033 393A  
                                            l4113 3EC0                                              l4105 3E6A  
                                            l4121 36EE                                              l4201 35F6  
                                            l5011 254C                                              l5003 250E  
                                            l4019 335C                                              l4051 39C0  
                                            l4043 399A                                              l4035 397A  
                                            l4027 3904                                              l4115 3EC4  
                                            l4107 3E6E                                              l1483 7440  
                                            l4131 3766                                              l4123 370E  
                                            l4211 3682                                              l4203 3618  
                                            l5101 74E4                                              l5021 259E  
                                            l5013 2558                                              l5005 2526  
                                            l4301 1E84                                              l4221 7C9A  
                                            l4061 3AA0                                              l4045 39A2  
                                            l4053 3A22                                              l4037 3982  
                                            l4029 3918                                              l4141 3864  
                                            l4133 37DC                                              l4125 374E  
                                            l4117 36D8                                              l1493 682C  
                                            l4213 3692                                              l4205 3636  
                                            l5103 74F6                                              l5031 261C  
                                            l5023 25AE                                              l5015 2568  
                                            l5007 2532                                              l4311 1EB8  
                                            l4303 1E9A                                              l4231 7D08  
                                            l4223 7CA0                                              l1479 6696  
                                            l4063 3AC8                                              l4071 3AFA  
                                            l4055 3A42                                              l4047 39B4  
                                            l4039 3986                                              l4143 3886  
                                            l4135 37E2                                              l4127 3756  
                                            l4119 36EC                                              l4215 36A8  
                                            l4207 3654                                              l5105 750A  
                                            l5201 3CE0                                              l5041 26A0  
                                            l5033 2656                                              l5025 25CA  
                                            l5017 2574                                              l5009 253E  
                                            l5121 7572                                              l5113 6378  
                                            l4401 20E4                                              l4313 1ECE  
                                            l4321 1EFE                                              l4305 1E9C  
                                            l4241 7D3E                                              l4225 7CA6  
                                            l4065 3ADE                                              l4057 3A64  
                                            l4049 39BA                                              l4081 3D52  
                                            l4145 38A4                                              l4137 37E8  
                                            l4129 375E                                              l4209 367C  
                                            l4161 3410                                              l4153 33A8  
                                            l1498 6836                                              l5107 7560  
                                            l5203 3CF4                                              l5051 2710  
                                            l5043 26B4                                              l5035 2664  
                                            l5027 25D6                                              l5019 2584  
                                            l5131 75D6                                              l5123 758E  
                                            l5115 6392                                              l4411 2158  
                                            l4403 20F0                                              l4331 1F44  
                                            l4323 1F10                                              l4315 1EE2  
                                            l4307 1EA4                                              l4251 7DFA  
                                            l4243 7D78                                              l4235 7D10  
                                            l4227 7CC8                                              l4219 7C86  
                                            l4067 3AE4                                              l4059 3A82  
                                            l4083 3D5A                                              l4075 3D22  
                                            l4147 38C2                                              l4139 384C  
                                            l4171 3452                                              l4163 3418  
                                            l4155 33BC                                              l5211 683E  
                                            l5109 7566                                              l5205 3D06  
                                            l5061 2790                                              l5045 26C8  
                                            l5037 2682                                              l5029 25F2  
                                            l5133 75E6                                              l5117 63A2  
                                            l4413 216C                                              l4405 20F6  
                                            l4341 1F58                                              l4333 1F48  
                                            l4325 1F28                                              l4317 1EF2  
                                            l4309 1EB6                                              l5221 2CA2  
                                            l5301 6CF6                                              l4253 7E10  
                                            l4237 7D2A                                              l4229 7D04  
                                            l4069 3AF4                                              l4093 3DE4  
                                            l4085 3D70                                              l4077 3D34  
                                            l4261 7340                                              l4149 38D4  
                                            l4181 34D4                                              l4173 345A  
                                            l4165 343A                                              l4157 33BE  
                                            l4501 00FA                                              l5213 6846  
                                            l5207 3D08                                              l5071 2806  
                                            l5055 2748                                              l5063 2794  
                                            l5047 26CC                                              l5039 268E  
                                            l5143 7618                                              l5135 75EA  
                                            l5127 75A4                                              l4431 2206  
                                            l4423 21D2                                              l4407 2122  
                                            l4415 217C                                              l4351 1F6C  
                                            l4343 1F5C                                              l4335 1F4C  
                                            l4327 1F3A                                              l4319 1EF6  
                                            l5231 2D96                                              l5223 2CF4  
                                            l5303 6CFA                                              l5311 6E72  
                                            l4255 7E26                                              l4247 7DB2  
                                            l4239 7D34                                              l4095 3DFA  
                                            l4087 3D78                                              l4079 3D3C  
                                            l4271 73AE                                              l4263 736E  
                                            l4183 34EA                                              l4191 3554  
                                            l4175 347A                                              l4167 3442  
                                            l4159 33DE                                              l5215 6854  
                                            l5321 7254                                              l5081 2838  
                                            l5073 2816                                              l5065 27B4  
                                            l5057 2754                                              l5049 26DE  
                                            l5161 7690                                              l5153 7648  
                                            l5145 7624                                              l5137 75FC  
                                            l5129 75D4                                              l4433 220E  
                                            l4425 21DE                                              l4417 21AA  
                                            l4409 2156                                              l4441 223E  
                                            l4361 1F82                                              l4353 1F70  
                                            l4345 1F60                                              l4337 1F50  
                                            l4329 1F3E                                              l4281 1E04  
                                            l5241 2F4C                                              l5225 2D08  
                                            l5401 63EC                                              l5305 65EE  
                                            l5313 6E86                                              l3801 7BA6  
                                            l4097 3DFE                                              l4089 3D8A  
                                            l4273 73D0                                              l4193 3566  
                                            l4177 348A                                              l4169 344A  
                                            l4601 0718                                              l4521 01AC  
                                            l4513 0118                                              l4505 0104  
                                            l5217 687C                                              l5331 728E  
                                            l5323 7266                                              l5091 7448  
                                            l5171 3B9A                                              l5075 2828  
                                            l5067 27C8                                              l5059 2766  
                                            l5155 7656                                              l5147 762E  
                                            l4451 22A8                                              l4443 2244  
                                            l4435 2214                                              l4427 21F0  
                                            l4419 21BE                                              l4371 200A  
                                            l4363 1FB0                                              l4355 1F74  
                                            l4347 1F64                                              l4339 1F54  
                                            l4291 1E4E                                              l4283 1E10  
                                            l5243 2FB8                                              l5235 2DCE  
                                            l5227 2D4E                                              l5219 2C82  
                                            l5403 63EE                                              l5315 6EA8  
                                            l3731 6F9E                                              l3811 7C22  
                                            l3803 7BBA                                              l4099 3E20  
                                            l4275 73E6                                              l4267 737A  
                                            l4195 356C                                              l4187 352A  
                                            l4611 07DE                                              l4603 0750  
                                            l4531 0230                                              l4523 01AE  
                                            l5341 72C4                                              l5333 7292  
                                            l5325 726E                                              l5093 747C  
                                            l5181 3BE2                                              l5173 3BB6  
                                            l5165 3B2C                                              l5077 282A  
                                            l5069 27E8                                              l5157 766A  
                                            l5421 62E2                                              l4461 231C  
                                            l4453 22B4                                              l4445 2256  
                                            l4437 222A                                              l4429 21F2  
                                            l4381 205E                                              l4373 2010  
                                            l4365 1FD2                                              l4357 1F78  
                                            l4349 1F68                                              l4293 1E5E  
                                            l4285 1E22                                              l5085 6508  
                                            l5245 2FEE                                              l5237 2EA6  
                                            l5229 2D72                                              l5405 63F0  
                                            l5261 627A                                              l5253 6266  
                                            l5501 6AD8                                              l5309 6DE6  
                                            l5413 61D8                                              l3741 7030  
                                            l3733 6FB4                                              l3901 70BC  
                                            l3805 7BEC                                              l3813 7C28  
                                            l3821 7942                                              l4277 7416  
                                            l4269 738A                                              l4197 3572  
                                            l4189 3540                                              l4701 0E2C  
                                            l4613 0824                                              l4533 0252  
                                            l4541 02C6                                              l4525 01DA  
                                            l4517 0126                                              l4509 010E  
                                            ?_pad 0011                                              l5351 7304  
                                            l5343 72D8                                              l5335 729C  
                                            l5327 7272                                              l5319 7250  
                                            l5095 748C                                              l5191 3C7A  
                                            l5183 3C1A                                              l5167 3B40  
                                            l5079 2832                                              l5159 7680  
                                            l5415 6166                                              l5423 6306  
                                            l4471 2372                                              l4463 232E  
                                            l4455 22C6                                              l4447 2270  
                                            l4439 222C                                              l4391 20AA  
                                            l4383 2072                                              l4375 2024  
                                            l4367 1FE2                                              l4359 1F7C  
                                            l4295 1E62                                              l4287 1E24  
                                            l5087 6518                                              l5247 3036  
                                            l5239 2F12                                              l5407 63F2  
                                            l5431 6D24                                              l5263 627C  
                                            l5255 6268                                              l5503 6ADA  
                                            l3735 6FC8                                              l3751 65C2  
                                            l3911 7132                                              l3903 70C8  
                                            l3815 7C3E                                              l3807 7C0C  
                                            l3831 7990                                              l3823 7946  
                                            l4199 35D4                                              l4551 036E  
                                            l4543 02F2                                              l4535 0262  
                                            l4527 0210                                              l4519 0180  
                                            l5511 7814                                              l5353 730C  
                                            l5345 72E0                                              l5337 72B2  
                                            l5329 7286                                              l5097 74C0  
                                            l5193 3C8E                                              l5185 3C1E  
                                            l5177 3BCA                                              l5169 3B52  
                                            l5601 61A2                                              l5417 616A  
                                            l4473 2376                                              l4465 2354  
                                            l4457 2304                                              l4393 20BC  
                                            l4377 2026                                              l4369 1FFE  
                                            l4289 1E3A                                              l4297 1E6A  
                                            l5249 305A                                              l5409 63F4  
                                            l5441 6218                                              l5433 6D26  
                                            l5265 6286                                              l5257 626E  
                                            l5281 62A4                                              l5273 6290  
                                            l3737 6FD4                                              l3745 659E  
                                            l3753 6640                                              l3913 7146  
                                            l3905 70E0                                              l3817 7C5E  
                                            l3809 7C0E                                              l3841 7A06  
                                            l3833 79B0                                              l3825 7958  
                                            l3921 64C0                                              l4721 0F6C  
                                            l4713 0EF2                                              l4705 0E66  
                                            l4641 09F0                                              l4633 0964  
                                            l4625 08EA                                              l4617 085E  
                                            l4609 07A2                                              l4553 0390  
                                            l4545 02FC                                              l4561 0404  
                                            l4529 0222                                              l4801 1422  
                                            l5521 7884                                              l5513 782C  
                                            l5505 77E6                                              l5347 72FA  
                                            l5339 72BA                                              l5355 7312  
                                            l5099 74D0                                              l5195 3CB4  
                                            l5187 3C2A                                              l5179 3BD4  
                                            l5603 61A4                                              l4475 237E  
                                            l4467 2358                                              l4459 2306  
                                            l4395 20C8                                              l4387 2086  
                                            l4379 2032                                              l4299 1E7C  
                                            l5291 6CBE                                              l5443 621C  
                                            l5451 614E                                              l5611 6202  
                                            l5435 6D28                                              l5427 6D1A  
                                            l5259 6270                                              l5283 62A6  
                                            l5275 6292                                              l3771 62B8  
                                            l3739 6FF8                                              l3747 65AA  
                                            l3755 664C                                              l3907 70F6  
                                            l3851 7A8A                                              l3843 7A3A  
                                            l3835 79D4                                              l3827 7978  
                                            l3763 647E                                              l3931 6820  
                                            l4803 144A                                              l4731 1034  
                                            l4723 0FA8                                              l4715 0F1E  
                                            l4707 0EA2                                              l4643 0A2C  
                                            l4651 0A96                                              l4635 09A0  
                                            l4627 0916                                              l4619 089A  
                                            l4571 04BA                                              l4563 0430  
                                            l4555 03A0                                              l4547 030A  
                                            l4539 02B2                                              l4491 00CA  
                                            l4483 007C                                              l5371 76D2  
                                            l5363 76AA                                              l5531 78F0  
                                            l5523 7898                                              l5515 7840  
                                            l5507 77EC                                              l5267 68AE  
                                            l5357 7328                                              l5349 7302  
                                            l5197 3CB6                                              l5189 3C6C  
                                            l4477 2390                                              l4469 236C  
                                            l4397 20CE                                              l4389 2098  
                                            l4901 2AA8                                              l4821 286E  
                                            l5293 6CD2                                              l5445 6232  
                                            l5461 6BE0                                              l5453 6BAE  
                                            l5621 620C                                              l5613 6204  
                                            l5437 6DA4                                              l5429 6D22  
                                            l5285 62B0                                              l5277 6298  
                                            l3773 62D4                                              l3941 66A0  
                                            l3749 65BE                                              l3757 6652  
                                            l3909 70FA                                              l3781 7AE8  
                                            l3853 7AAA                                              l3845 7A5A  
                                            l3837 79DC                                              l3829 797C  
                                            l3861 3F24                                              l3917 643C  
                                            l3925 67CE                                              l4733 106C  
                                            l4653 0AD2                                              l4661 0B3C  
                                            l4645 0A64                                              l4581 05B2  
                                            l4573 04F2                                              l4565 0462  
                                            l4549 0334                                              l4493 00D6  
                                            l4485 00A6                                              l5381 774A  
                                            l5373 76F6                                              l5365 76C0  
                                            l5525 78B0                                              l5517 7858  
                                            l5509 7800                                              l5269 68C4  
                                            l5605 623E                                              l5701 15C2  
                                            l5359 7330                                              l5199 3CBC  
                                            l3767 6552                                              l4479 2392  
                                            l4399 20E2                                              l4903 2AC2  
                                            l4911 2AFA                                              l4831 28AE  
                                            l4823 2870                                              l5295 6CD8  
                                            l5287 6C56                                              l5447 6234  
                                            l5471 6C3C                                              l5463 6BE4  
                                            l5623 620E                                              l5615 6206  
                                            l4815 615C                                              l5279 629A  
                                            l5631 6962                                              l3935 63FA  
                                            l3943 66B8                                              l3759 668A  
                                            l3951 66FC                                              l3791 7B44  
                                            l3783 7B08                                              l3847 7A6E  
                                            l3839 79F2                                              l3871 3F9C  
                                            l3863 3F2C                                              l4751 11C8  
                                            l4735 1096                                              l4743 111A  
                                            l4663 0B68                                              l4671 0BD0  
                                            l4655 0B0A                                              l4647 0A88  
                                            l4591 0666                                              l4583 05EA  
                                            l4575 053C                                              l4559 03F0  
                                            l4495 00DC                                              l4487 00B4  
                                            l5383 7760                                              l5391 77D2  
                                            l5375 7704                                              l5367 76CA  
                                            l5543 630E                                              l5535 790C  
                                            l5527 78C4                                              l5519 786C  
                                            l5551 6B44                                              l5711 15F8  
                                            l5703 15C8                                              l3769 6570  
                                            l4913 2B0E                                              l4905 2AC8  
                                            l4841 28E8                                              l4825 2886  
                                            l4833 28B6                                              l4817 2850  
                                            l5297 6CDC                                              l5289 6CBA  
                                            l5465 6C04                                              l5625 6210  
                                            l5617 6208                                              l5609 61F6  
                                            l5481 69C2                                              l5473 6998  
                                            l5641 6988                                              l3945 66EA  
                                            l3961 6738                                              l3953 6714  
                                            l3793 7B52                                              l3785 7B0C  
                                            l3777 7AD2                                              l3849 7A74  
                                            l3873 3FBC                                              l3865 3F42  
                                            l3857 3EF6                                              l3881 7188  
                                            l3929 680A                                              l4761 125C  
                                            l4745 1156                                              l4737 10A6  
                                            l4729 0FF8                                              l4673 0C0C  
                                            l4681 0C76                                              l4665 0B9E  
                                            l4593 068E                                              l4569 047E  
                                            l4497 00F0                                              l4489 00C6  
                                            l5385 7774                                              l5377 7710  
                                            l5545 6318                                              l5529 78DC  
                                            l5561 6B9E                                              l5553 6B4C  
                                            l5801 19CA                                              l5721 1676  
                                            l5705 15CE                                              l5713 15FC  
                                            l5571 61C0                                              l5395 63BA  
                                            l4923 2B8E                                              l4931 2BDA  
                                            l4915 2B12                                              l4907 2AD4  
                                            l4851 2928                                              l4843 28EA  
                                            l4835 28C8                                              l4827 289A  
                                            l4819 285C                                              l5299 6CF0  
                                            l5467 6C14                                              l5459 6BB6  
                                            l5619 620A                                              l5491 69FE  
                                            l5483 69DA                                              l5475 69A8  
                                            l5627 6920                                              l3947 66EE  
                                            l3939 669A                                              l3955 6720  
                                            l3795 7B74                                              l3787 7B20  
                                            l3779 7AD6                                              l3971 30E6  
                                            l3875 3FBE                                              l3867 3F56  
                                            l3859 3F02                                              l3891 720E  
                                            l3883 7190                                              l4763 1276  
                                            l4771 12C4                                              l4747 118E  
                                            l4739 10DC                                              l4691 0D54  
                                            l4683 0CA2                                              l4675 0C44  
                                            l4579 0576                                              l5387 77A6  
                                            l5379 7724                                              l5539 7928  
                                            l5555 6B6C                                              l5811 1A38  
                                            l5803 19F4                                              l5723 1682  
                                            l5731 16A8                                              l5715 1602  
                                            l5707 15DE                                              l5645 6342  
                                            l5581 6EC0                                              l5573 61C2  
                                            l5565 61B8                                              l5397 63E8  
                                            l4941 2C52                                              l4933 2BFA  
                                            l4925 2B9A                                              l4917 2B24  
                                            l4909 2AE6                                              l4861 2976  
                                            l4845 2900                                              l4853 2930  
                                            l4837 28D0                                              l4829 28AA  
                                            l5469 6C28                                              l5493 6A04  
                                            l5485 69EC                                              l5477 69BA  
                                            l5629 694E                                              l5637 696E  
                                            l3957 672E                                              l3797 7B7C  
                                            l3789 7B40                                              l3981 3154  
                                            l3973 30FC                                              l3965 3074  
                                            l3877 3FD2                                              l3869 3F6A  
                                            l3893 7222                                              l3885 71A6  
                                            l4773 1300                                              l4765 1284  
                                            l4749 11B8                                              l4757 1208  
                                            l4693 0D8A                                              l4685 0CEC  
                                            l4589 063A                                              l5389 77C0  
                                            l5557 6B74                                              l5549 6B24  
                                            l5901 1DEC                                              l5813 1A44  
                                            l5805 1A00                                              l5821 1A92  
                                            l5741 1710                                              l5733 16C4  
                                            l5725 168E                                              l5717 160C  
                                            l5709 15F0                                              l5661 1468  
                                            TRISD 000F95                                              l5583 6F48  
                                            l5591 6F8C                                              l5567 61BC  
                                            l5575 6762                                              l5399 63EA  
                                            l4943 2C64                                              l4935 2C10  
                                            l4927 2BAC                                              l4919 2B56  
                                            l4871 29A6                                              l4863 297C  
                                            l4855 2942                                              l4847 2914  
                                            l4839 28D6                                              l5495 6A0A  
                                            l5487 69F2                                              l5479 69BC  
                                            l5639 697C                                              l3895 7080  
                                            l3959 6734                                              l3799 7B92  
                                            l3991 3186                                              l3983 3164  
                                            l3975 30FE                                              l3967 3094  
                                            l3887 71BA                                              l3879 7166  
                                            l4791 1400                                              l4775 1338  
                                            l4759 1234                                              l4599 06DC  
                                            l5559 6B96                                              l5831 1B10  
                                            l5823 1AAC                                              l5815 1A5E  
                                            l5807 1A06                                              l5751 1788  
                                            l5743 171A                                              l5735 16C6  
                                            l5727 1696                                              l5719 1626  
                                            l5671 14AC                                              l5663 146C  
                                            TRISE 000F96                                              l5585 6F80  
                                            l5569 61BE                                              l4961 23CC  
                                            l5577 6778                                              l4945 2C6A  
                                            l4937 2C30                                              l4929 2BD6  
                                            l4881 29F6                                              l4857 295E  
                                            l4849 2924                                              l5489 69F8  
                                            l5497 6A9C                                              l3897 7094  
                                            l3993 3208                                              l3985 316C  
                                            l3977 311E                                              l3969 30C6  
                                            l3889 71EE                                              l4777 1362  
                                            l4785 13B2                                              l4697 0DAA  
                                            l4689 0D28                                              l5841 1B8C  
                                            l5833 1B26                                              l5825 1AC2  
                                            l5817 1A76                                              l5809 1A22  
                                            l5761 17E4                                              l5753 178E  
                                            l5745 1732                                              l5737 16DC  
                                            l5729 16A0                                              l5681 1524  
                                            l5673 14E0                                              l5665 1470  
                                            l5657 1462                                              l5595 619A  
                                            l4971 2420                                              l4963 23E2  
                                            l4955 23AC                                              l4947 2C6E  
                                            l4939 2C4C                                              l4891 2A4A  
                                            l4883 2A06                                              l4875 29BA  
                                            l4859 296E                                              l4867 2990  
                                            l5499 6AA4                                              l3899 70A8  
                                            l3995 320E                                              l3987 3176  
                                            l3979 313E                                              l4787 13DE  
                                            l4795 140E                                              l4779 1372  
                                            l4699 0DE6                                              l5851 1C08  
                                            l5843 1BA2                                              l5835 1B42  
                                            l5827 1ADA                                              l5819 1A82  
                                            l5771 1868                                              l5763 17FE  
                                            l5755 17A6                                              l5747 1752  
                                            l5739 16FC                                              l5691 1558  
                                            l5683 152A                                              l5675 1514  
                                            l5667 1474                                              l5659 1462  
                                            l5597 619E                                              l4981 2458  
                                            l4973 2428                                              l4965 23F6  
                                            l4957 23B8                                              l4893 2A58  
                                            l4885 2A0E                                              l4877 29D6  
                                            l4869 29A6                                              l3997 3214  
                                            l3989 317E                                              l4789 13EC  
                                            l5853 1C14                                              l5861 1C56  
                                            l5845 1BBA                                              l5829 1AF6  
                                            l5781 18C6                                              l5773 186C  
                                            l5765 1812                                              l5757 17BA  
                                            l5749 176E                                              l5693 156C  
                                            l5685 1536                                              l5677 1518  
                                            l5669 1478                                              l5599 61A0  
                                            l4991 24BE                                              l4983 246C  
                                            l4975 242E                                              l4967 2406  
                                            l4959 23CA                                              l4895 2A7C  
                                            l4887 2A24                                              l4879 29E6  
                                            l3999 3278                                              l5871 1CD2  
                                            l5863 1C6E                                              l5855 1C20  
                                            l5847 1BDA                                              l5839 1B72  
                                            l5791 1940                                              l5783 18DC  
                                            l5767 183A                                              l5775 1882  
                                            l5759 17D4                                              l5695 1574  
                                            l5687 1538                                              l5679 151E  
                                            l4985 247C                                              l4977 2440  
                                            l4969 240E                                              l4897 2A7E  
                                            l4889 2A38                                              l5881 1D3E  
                                            l5865 1C84                                              l5857 1C3C  
                                            l5849 1BF2                                              l5873 1CE6  
                                            l5793 195C                                              l5785 18F4  
                                            l5777 189C                                              l5769 1864  
                                            l5697 1582                                              l5689 1542  
                                            l4995 24D4                                              l4987 2484  
                                            l4979 2442                                              l4899 2A8E  
                                            l5971 7D60                                              l5883 1D5A  
                                            l5891 1D92                                              l5875 1D00  
                                            l5867 1CA4                                              l5859 1C46  
                                            l5795 1988                                              l5787 1910  
                                            l5779 18AC                                              l5699 1588  
                                            l4997 24E2                                              l4989 24AC  
                                            l5893 1DAC                                              l5885 1D60  
                                            l5877 1D10                                              l5869 1CBC  
                                            l5789 192A                                              l5797 199A  
                                            l4999 24EC                                              l5895 1DB8  
                                            l5887 1D66                                              l5879 1D2A  
                                            l5799 19B4                                              l5969 0150  
                                            l5889 1D8A                                              l5897 1DBA  
                                            l5899 1DD6                                              STR_1 7ED9  
                                            STR_2 7E67                                              STR_3 7FBB  
                                            STR_4 7F36                                              STR_5 7FA9  
                                            STR_6 7FC4                                              STR_7 7FB2  
                                            STR_8 7EA7                                              STR_9 7F82  
                                   _state_changed 01C0                                              _LATA 000F89  
                                            _LATB 000F8A                                              _LATC 000F8B  
                                            u4000 70BA                                              u4001 70B4  
                                            u4010 711C                                              u4011 7116  
                                            u4100 642E                                              u4020 7130  
                                            u4101 6426                                              u4021 712A  
                                            u4110 6432                                              u4030 6470  
                                            u4031 6468                                              u5000 204A  
                                            u4120 66B6                                              u4200 3152  
                                            u4040 6474                                              u5001 2044  
                                            u4121 66B0                                              u4201 314C  
                                            u5010 205C                                              u4130 66E8  
                                            u4210 3164                                              u4050 64F8  
                                            u5011 2056                                              u4131 66E2  
                                            u4211 315E                                              u4051 64F0  
                                            u5100 21EE                                              u5020 2070  
                                            u4140 6712                                              u4220 3296  
                                            u4300 3916                                              u4060 64FC  
                                            u5101 21E8                                              u5021 206A  
                                            u4141 670C                                              u4221 3290  
                                            u4301 3910                                              u5110 2204  
                                            u5030 20A8                                              u4230 32B8  
                                            u4150 30A6                                              u4310 3938  
                                            u4070 6800                                              u5111 21FE  
                                            u5031 20A2                                              u4231 32B2  
                                            u4151 309E                                              u4311 3932  
                                            u4071 67F8                                              u6000 243E  
                                            u5200 231A                                              u5120 2228  
                                            u5040 20BA                                              u4240 32D6  
                                            u4160 30AA                                              u4320 39FA  
                                            u4080 6804                                              u6001 2438  
                                            u5201 2314                                              u5121 2222  
                                            u5041 20B4                                              u4241 32D0  
                                            u4401 3D2C                                              u6010 2456  
                                            u5210 232E                                              u5130 223E  
                                            u5050 20E0                                              u4250 32F4  
                                            u4170 30C4                                              u4330 3A40  
                                            u4410 3D50                                              u4090 681E  
                                            u6011 2450                                              u5211 2328  
                                            u5131 2238                                              u5051 20DA  
                                            u4251 32EE                                              u4171 30BE  
                                            u4331 3A3A                                              u4411 3D4A  
                                            u4091 6818                                              u6100 272C  
                                            u6020 246A                                              u5220 2352  
                                            u5140 2254                                              u5060 2120  
                                            u3700 6FC8                                              u4260 3308  
                                            u4180 30FA                                              u4340 3A62  
                                            u4420 3D88                                              u4500 36EA  
                                            u5300 02A8                                              u6101 2726  
                                            u6021 2464                                              u5221 234C  
                                            u5141 224E                                              u5061 211A  
                                            u3701 6FC2                                              u4261 3302  
                                            u4181 30F4                                              u4341 3A5C  
                                            u4325 39E6                                              u4421 3D82  
                                            u4501 36E4                                              u5301 02A0  
                                            u6110 2746                                              u6030 24AA  
                                            u5230 236A                                              u5150 226E  
                                            u5070 216A                                              u3710 6FF6  
                                            u4270 331E                                              u4190 311C  
                                            u4350 3A80                                              u4430 3DAA  
                                            u4510 370C                                              u5310 02AC  
                                            u6111 2740                                              u6031 24A4  
                                            u5231 2364                                              u5151 2268  
                                            u5071 2164                                              u3711 6FF0  
                                            u4271 3318                                              u4191 3116  
                                            u4351 3A7A                                              u4431 3DA4  
                                            u4511 3706                                              u6200 755E  
                                            u6120 2764                                              u6040 24BE  
                                            u5240 238E                                              u5160 228C  
                                            u5080 21A8                                              u3720 7030  
                                            u3800 7B1E                                              u4280 3332  
                                            u4360 3A9E                                              u4440 3DDE  
                                            u4520 3862                                              u4600 3478  
                                            u5400 04F2                                              u5320 02C6  
                                            u7000 1838                                              u6201 7558  
                                            u6121 275E                                              u6041 24B8  
                                            u5241 2388                                              u5161 2286  
                                            u5081 21A2                                              u3721 702A  
                                            u3801 7B18                                              u4281 332C  
                                            u4361 3A98                                              u4441 3DD8  
                                            u4521 385C                                              u4601 3472  
                                            u5401 04EC                                              u5321 02C0  
                                            u7001 1832                                              u6130 27B2  
                                            u6050 263E                                              u6210 6390  
                                            u5170 22A6                                              u5090 21BC  
                                            u3730 65E6                                              u4290 334E  
                                            u4370 3AB2                                              u4450 3E20  
                                            u4530 3884                                              u4610 34CA  
                                            u5410 05B0                                              u5330 02F0  
                                            u5250 00A4                                              u7010 1862  
                                            u6131 27AC                                              u6211 638A  
                                            u5171 22A0                                              u5091 21B6  
                                            u3731 65E0                                              u3811 7B4C  
                                            u4291 3348                                              u4371 3AAC  
                                            u4451 3E1A                                              u4531 387E  
                                            u4611 34C2                                              u5411 05AA  
                                            u5331 02EA                                              u5251 009E  
                                            u7011 185C                                              u6300 3B50  
                                            u6140 27E6                                              u6060 269E  
                                            u6220 758C                                              u5180 22C4  
                                            u3740 6676                                              u3820 7B72  
                                            u3900 7A38                                              u4380 3AC6  
                                            u4460 3E52                                              u4540 38A2  
                                            u4700 3634                                              u4620 34CE  
                                            u5500 099E                                              u5420 05EA  
                                            u5340 0332                                              u5260 0196  
                                            u7100 1A20                                              u7020 189A  
                                            u6301 3B4A                                              u6141 27E0  
                                            u6061 2698                                              u6221 7586  
                                            u5181 22BE                                              u3821 7B6C  
                                            u3901 7A32                                              u4381 3AC0  
                                            u4541 389C                                              u4701 362E  
                                            u5501 0998                                              u5421 05E4  
                                            u5341 032C                                              u5261 0190  
                                            u7101 1A1A                                              u7021 1894  
                                            u6310 3BB4                                              u6150 2826  
                                            u6070 26C6                                              u6230 75C8  
                                            u5190 2302                                              u3750 6688  
                                            u3830 7BA4                                              u3910 7A88  
                                            u4390 3ADC                                              u4470 3E90  
                                            u4550 38C0                                              u4710 3652  
                                            u4630 34E8                                              u5510 0A2A  
                                            u5430 0664                                              u5350 03E6  
                                            u5270 01AA                                              u7110 1A36  
                                            u7030 18C4                                              u6311 3BAE  
                                            u6151 2820                                              u6071 26C0  
                                            u6055 2632                                              u5191 22FC  
                                            u3751 6682                                              u3831 7B9E  
                                            u3911 7A82                                              u4391 3AD6  
                                            u4471 3E8A                                              u4551 38BA  
                                            u4711 364C                                              u4631 34E2  
                                            u5511 0A24                                              u5431 065E  
                                            u5351 03DE                                              u5271 01A4  
                                            u7111 1A30                                              u7031 18BE  
                                            u6160 747A                                              u6320 3C14  
                                            u6080 26DC                                              u6240 75FA  
                                            u6400 2CC6                                              u4800 7E24  
                                            u3840 7BEA                                              u4480 3EA4  
                                            u4560 38D4                                              u3760 64B2  
                                            u4720 3666                                              u4640 3520  
                                            u5600 0D52                                              u5520 0A88  
                                            u5440 068E                                              u5360 03EA  
                                            u5280 01D8                                              u7200 1BF0  
                                            u7120 1A5C                                              u7040 18F2  
                                            u6161 7474                                              u6321 3C0E  
                                            u6081 26D6                                              u6241 75F4  
                                            u4801 7E1E                                              u3841 7BE4  
                                            u4481 3E9E                                              u3921 3EFC  
                                            u4561 38CE                                              u3761 64AA  
                                            u4721 3660                                              u4641 3518  
                                            u5601 0D4C                                              u5441 0688  
                                            u5281 01D2                                              u7201 1BEA  
                                            u7121 1A56                                              u7041 18EC  
                                            u6170 74BE                                              u6330 3C66  
                                            u6090 270E                                              u6250 7612  
                                            u6410 2CF2                                              u3690 6FB2  
                                            u3850 7C3C                                              u4490 3EE6  
                                            u4810 736C                                              u3930 3F22  
                                            u3770 64B6                                              u4730 367A  
                                            u4650 3524                                              u4570 33BA  
                                            u5610 0DE4                                              u5530 0AD0  
                                            u5450 0716                                              u5370 0404  
                                            u5290 0220                                              u7210 1C06  
                                            u7130 1AAA                                              u7050 1928  
                                            u6171 74B8                                              u6331 3C60  
                                            u6091 2708                                              u6251 760C  
                                            u6235 75BC                                              u6411 2CEC  
                                            u3691 6FAC                                              u3747 666C  
                                            u3851 7C36                                              u4491 3EE0  
                                            u4467 3E48                                              u4811 7366  
                                            u3931 3F1C                                              u4731 3674  
                                            u4571 33B4                                              u5611 0DDE  
                                            u5531 0ACA                                              u5451 0710  
                                            u5371 03FE                                              u5291 021A  
                                            u7211 1C00                                              u7131 1AA4  
                                            u7051 1922                                              u6180 74E2  
                                            u6340 3C8C                                              u3780 656E  
                                            u6260 7642                                              u4900 1EB4  
                                            u6420 2D2C                                              u6500 6CD0  
                                            u4740 7CC6                                              u3860 7956  
                                            u4820 73AC                                              u3940 3F54  
                                            u4660 353E                                              u4580 33DC  
                                            u5700 125C                                              u5620 0EA0  
                                            u5540 0B38                                              u5460 0750  
                                            u5380 042E                                              u7300 1DAA  
                                            u7220 1C6C                                              u7140 1AD8  
                                            u7060 193E                                              u6181 74DC  
                                            u6341 3C86                                              u3781 6568  
                                            u6261 763C                                              u4901 1EAE  
                                            u6405 2CB8                                              u6501 6CCA  
                                            u4741 7CC0                                              u3861 7950  
                                            u4821 73A6                                              u3941 3F4E  
                                            u4661 3538                                              u4581 33D6  
                                            u5701 1256                                              u5621 0E9A  
                                            u5461 074A                                              u5381 0428  
                                            u7301 1DA4                                              u7221 1C66  
                                            u7141 1AD2                                              u7061 1938  
                                            u6190 7508                                              u6350 3CA0  
                                            u6270 766A                                              u4910 1ECC  
                                            u6430 2D4C                                              u6510 6CEE  
                                            u4750 7D02                                              u3790 7AE6  
                                            u3870 798E                                              u4830 73CE  
                                            u3950 3F9A                                              u4670 35AC  
                                            u4590 340E                                              u5710 12FE  
                                            u5630 0F1C                                              u5550 0B66  
                                            u5470 07DC                                              u5390 04B8  
                                            u7310 1DD4                                              u7230 1C82  
                                            u7150 1B0E                                              u7070 1986  
                                            u6191 7502                                              u6351 3C9A  
                                            u6271 7664                                              u4911 1EC6  
                                            u6431 2D46                                              u6511 6CE8  
                                            u4751 7CFC                                              u3791 7AE0  
                                            u3871 7988                                              u4831 73C8  
                                            u3951 3F94                                              u4591 3408  
                                            u5711 12F8                                              u5631 0F16  
                                            u5551 0B60                                              u5527 0A7C  
                                            u5471 07D6                                              u5391 04B2  
                                            u7311 1DCE                                              u7231 1C7C  
                                            u7151 1B08                                              u7071 1980  
                                            u6360 3CB2                                              u6280 767E  
                                            u4920 1EE0                                              u6440 2D94  
                                            u5800 295C                                              u6520 6E70  
                                            u4760 7D24                                              u3880 79D2  
                                            u4840 73E4                                              u3960 7186  
                                            u4680 35F4                                              u5720 1338  
                                            u5640 0FA6                                              u5560 0BCC  
                                            u5480 0898                                              u6600 76BE  
                                            u7320 1DEA                                              u7240 1CBA  
                                            u7160 1B24                                              u7080 19B2  
                                            u6361 3CAC                                              u6281 7678  
                                            u4921 1EDA                                              u6441 2D8E  
                                            u6425 2D20                                              u5801 2956  
                                            u6521 6E6A                                              u4761 7D1E  
                                            u3881 79CC                                              u4841 73DE  
                                            u3961 7180                                              u4681 35EE  
                                            u5721 1332                                              u5641 0FA0  
                                            u5481 0892                                              u6601 76B8  
                                            u7321 1DE4                                              u7241 1CB4  
                                            u7161 1B1E                                              u7081 19AC  
                                            u6370 3CF2                                              u6290 3B3E  
                                            u4930 1F26                                              u6450 2EA4  
                                            u5810 29A4                                              u6530 6EA6  
                                            u4770 7DF0                                              u3890 7A04  
                                            u4850 7416                                              u3970 71B8  
                                            u4690 3616                                              u5730 13DC  
                                            u5650 1032                                              u5570 0C0A  
                                            u5490 0914                                              u6610 76F4  
                                            u7250 1CD0                                              u7170 1B6C  
                                            u7090 19F2                                              u6371 3CEC  
                                            u6291 3B38                                              u4931 1F20  
                                            u6451 2E9E                                              u5811 299E  
                                            u6531 6EA0                                              u4771 7DE8  
                                            u3891 79FE                                              u4851 7410  
                                            u3971 71B2                                              u4691 3610  
                                            u4675 3598                                              u5731 13D6  
                                            u5651 102C                                              u5571 0C04  
                                            u5547 0B28                                              u5491 090E  
                                            u6611 76EE                                              u7251 1CCA  
                                            u7171 1B66                                              u7091 19EC  
                                            u6540 7264                                              u6380 3D04  
                                            u4940 1F38                                              u4860 1E20  
                                            u6460 2F4A                                              u5900 2B54  
                                            u5820 2A22                                              u5740 286C  
                                            u4780 7DF4                                              u3980 71EC  
                                            u5660 106C                                              u5580 0C72  
                                            u6620 775E                                              u6700 77FE  
                                            u7260 1CFE                                              u7180 1B8A  
                                            u6541 725E                                              u6381 3CFE  
                                            u4941 1F32                                              u4861 1E1A  
                                            u6461 2F44                                              u5901 2B4E  
                                            u5821 2A1C                                              u5741 2866  
                                            u3981 71E6                                              u5661 1066  
                                            u6621 7758                                              u6701 77F8  
                                            u7261 1CF8                                              u7181 1B84  
                                            u6550 7284                                              u4950 1FAE  
                                            u4870 1E38                                              u6470 3014  
                                            u5910 2B72                                              u5830 2A48  
                                            u5750 2884                                              u4790 7E0E  
                                            u3990 7092                                              u5670 1154  
                                            u5590 0CA0                                              u6390 689E  
                                            u6630 7772                                              u6710 782A  
                                            u7270 1D28                                              u7190 1BB8  
                                            u6551 727E                                              u4951 1FA8  
                                            u4871 1E32                                              u5911 2B6C  
                                            u5831 2A42                                              u5751 287E  
                                            u4791 7E08                                              u3991 708C  
                                            u5671 114E                                              u5591 0C9A  
                                            u5567 0BBC                                              u6391 6898  
                                            u6631 776C                                              u6711 7824  
                                            u7271 1D22                                              u7191 1BB2  
                                            u7407 1AB4                                              u6560 72B0  
                                            u4960 1FCA                                              u4880 1E4C  
                                            u6480 3034                                              u5920 2B8C  
                                            u5840 2A7A                                              u5760 2898  
                                            u5680 118E                                              u6640 77A4  
                                            u6720 7856                                              u6800 6B94  
                                            u7280 1D3C                                              u6561 72AA  
                                            u4961 1FC2                                              u4881 1E46  
                                            u6481 302E                                              u5921 2B86  
                                            u5841 2A74                                              u5761 2892  
                                            u5681 1188                                              u6641 779E  
                                            u6721 7850                                              u6801 6B8E  
                                            u7281 1D36                                              u7417 1B94  
                                            u6570 72D6                                              u6810 6776  
                                            u4970 1FCE                                              u4890 1E98  
                                            u5930 2BAA                                              u5850 2AA6  
                                            u5770 28E6                                              u6650 61EE  
                                            u5690 1232                                              u6730 7882  
                                            u6490 68C2                                              u7290 1D88  
                                            u6571 72D0                                              u6811 6770  
                                            u4891 1E92                                              u6475 3006  
                                            u5931 2BA4                                              u5851 2AA0  
                                            u5771 28E0                                              u6651 61E8  
                                            u5691 122C                                              u5587 0C62  
                                            u6731 787C                                              u6491 68BC  
                                            u7291 1D82                                              u7427 1C2C  
                                            u6580 72F8                                              u6820 6F46  
                                            u4980 1FFC                                              u5940 2BF8  
                                            u5860 2AC0                                              u5780 28FE  
                                            u6660 6C02                                              u6740 78AE  
                                            u6900 16C2                                              u6581 72F2  
                                            u6821 6F40                                              u4981 1FF6  
                                            u5941 2BF2                                              u5861 2ABA  
                                            u5781 28F8                                              u6661 6BFC  
                                            u7437 629C                                              u6741 78A8  
                                            u6901 16BC                                              u6590 7326  
                                            u6830 6F7E                                              u4990 2022  
                                            u5950 2C2E                                              u5870 2AE4  
                                            u5790 2912                                              u6670 6AD4  
                                            u6750 78DA                                              u6910 16DA  
                                            u6591 7320                                              u6831 6F78  
                                            u4991 201C                                              u5951 2C28  
                                            u5871 2ADE                                              u5791 290C  
                                            u7447 62A8                                              u6751 78D4  
                                            u6911 16D4                                              u5960 2C62  
                                            u5880 2B0C                                              u6680 6B0A  
                                            u6760 7906                                              u6840 625C  
                                            u6920 16FA                                              u5961 2C5C  
                                            u5881 2B06                                              u7457 69AE  
                                            u6761 7900                                              u6841 6256  
                                            u7377 1704                                              u6921 16F4  
                                            u5970 23C8                                              u5890 2B22  
                                            u6690 6B1C                                              u6850 694C  
                                            u6770 7922                                              u6930 1730  
                                            u5971 23C2                                              u5891 2B1C  
                                            u7467 69C8                                              u6691 6B16  
                                            u6851 6946                                              u6771 791C  
                                            u7387 18CE                                              u6931 172A  
                                            u5980 23E0                                              u6780 6B42  
                                            u6940 1750                                              u5981 23DA  
                                            u7477 69E0                                              u6677 6ACA  
                                            u6781 6B3C                                              u7397 19BC  
                                            u6941 174A                                              u5990 23F4  
                                            u6790 6B6A                                              u6950 1782  
                                            u6870 1556                                              u5991 23EE  
                                            u7487 6272                                              u6687 6B00  
                                            u6791 6B64                                              u6951 177C  
                                            u6871 1550                                              u6960 17A4  
                                            u6880 156A                                              u7497 627E  
                                            u6961 179E                                              u6881 1564  
                                            u6970 17D2                                              u6890 1674  
                                            u6971 17CC                                              u6891 166E  
                                            u6980 17FC                                              u6981 17F6  
                                            u6990 1810                                              u6991 180A  
                                            _TMR2 000FCC                                              abs@a 0013  
                                            _dbuf 0098                                              _atoi 7C84  
                                            _ctoa 66FA                                              _main 1462  
                                            _dtoa 3072                                              _fosc 7E63  
                                            _prec 0088                                              _otoa 3902  
                                            _nout 0084                                              pad@i 0018  
                                            pad@p 0015                                              fsr1h 000FE2  
                                            fsr2h 000FDA                                              indf1 000FE7  
                                            indf2 000FDF                                              fsr1l 000FE1  
                                            pad@w 001A                                              fsr2l 000FD9  
                                            _tosc 00EF                                              _stoa 3D20  
                                            btemp 007F                                              _utoa 36D6  
                                            _xtoa 33A6                       update_pwm_duty_ccp1@time_up 00BA  
                                     main@rx_char 01A6                                              prodh 000FF4  
                                   _trash_counter 01B7                                              prodl 000FF3  
                                            start 0076                                   ___fldiv@new_exp 0057  
state_translator_fpga_to_micro@state_machine_code 0005                                      ___param_bank 000000  
                                           ??_abs 0015                              _update_pwm_duty_ccp1 6C54  
                                           ??_pad 0017                                     ___fltol@sign1 00B8  
                                 __end_of___aodiv 7C84                                             ?_atoi 0008  
                                           ?_ctoa 001C                                   __end_of___fladd 23AA  
                                           ?_main 0001                                             ?_dtoa 001C  
                                 __end_of___aomod 7AD0                                   __end_of___fldiv 2C80  
                                 __end_of___awdiv 733E                                   __end_of___flneg 63B8  
                                           STR_10 7FFC                                             STR_11 7F0A  
                                           STR_20 7FD3                                             STR_12 7F98  
                                           STR_13 7F5D                                             STR_14 7FCF  
                                           STR_16 7FCF                                             STR_32 7FEA  
                                           STR_25 7FD0                                             STR_41 7FDB  
                                           STR_34 7FEA                                             STR_18 7FD3  
                                           STR_43 7FDB                                             STR_51 7FF3  
                                           STR_36 7FED                                             STR_29 7FD4  
                                           STR_53 7FF3                                             STR_38 7FED  
                                           STR_63 7FD8                                             STR_71 7FDF  
                                           STR_48 7FDC                                             STR_56 7FD7  
                                           STR_73 7FDF                                             STR_81 7FF6  
                                           STR_58 7FD7                                             STR_66 7FF0  
                                           STR_90 7FCB                                             STR_83 7FF6  
                                           STR_92 7FCB                                             STR_68 7FF0  
                                           STR_78 7FE0                                             STR_86 7FE3  
                                           STR_88 7FE3                                   __end_of___flmul 284E  
                                           STR_97 7FE4                                             ?_otoa 001C  
                                 __end_of___flsub 6550                                   __end_of___fltol 76A8  
                                           ?_stoa 000A                                             ?_utoa 001C  
                                           _T0CON 000FD5                                   __end_of___lodiv 3FFE  
                                 ___awdiv@divisor 0019                                             ?_xtoa 001C  
                                           _T2CON 000FCA                                   __end_of___lomod 724E  
                                           i2l226 006E                       __end_of_update_current_coil 6EBE  
                                 ___awdiv@counter 001B                                             _RCREG 000FAE  
                                    vfpfcnvrt@fmt 0045                                             _TMR0H 000FD7  
                                    vfpfcnvrt@llu 0060                                             _TMR0L 000FD6  
                                           _SPBRG 000FAF                                             _PORTA 000F80  
                                           _PORTB 000F81                                             _PORTC 000F82  
                                           _PORTD 000F83                                             _TRISA 000F92  
                                           _TRISB 000F93                                             _TRISC 000F94  
                                           _TXREG 000FAD                                  ?_get_temperature 00BA  
                                 __end_of_lcd_dat 62B6                                   __end_of_lcd_cmd 628C  
            __end_of_configure_ad_conversion_tank 61D4             __size_of_configure_ad_conversion_tank 001E  
                    _configure_ad_conversion_tank 61B6              __end_of_configure_ad_conversion_oven 61B6  
           __size_of_configure_ad_conversion_oven 001E                      _configure_ad_conversion_oven 6198  
                                 __end_of_lcd_str 6B22                                             _f_osc 7E5F  
                                           _flags 008A                                             _errno 008C  
                                           _fputc 6F9C                                   __end_of_isalpha 6506  
                                           _fputs 659C                                   __end_of_isdigit 643C  
                                           _t_osc 7E5B                                             atoi@n 0015  
                                           pad@fp 0011                                             atoi@s 0008  
                                           _width 0086                                             ctoa@c 001E  
                                           _state 01E5                                             _putch 613C  
                                           _toint 7E53                                             ctoa@w 001F  
                                           dtoa@d 001E                                             dtoa@i 003E  
                                           dtoa@n 0036                                             dtoa@p 0030  
                                           dtoa@s 0034                                             dtoa@w 0032  
                                 __end_of_islower 64C0                                   __end_of_isspace 66FA  
                                 __end_of_isupper 647E                                             tablat 000FF5  
                                           otoa@d 001E                                             otoa@i 003C  
                                           otoa@n 0034                                             otoa@p 002E  
                                           otoa@t 0030                                             otoa@w 0032  
                                           plusw1 000FE3                                             plusw2 000FDB  
                                           stoa@i 0016                                             stoa@l 001E  
                                           stoa@p 001C                                             stoa@s 000C  
                                           stoa@w 0018                                             ttemp5 0080  
                                           ttemp6 0083                                             ttemp7 0087  
                                           utoa@d 001E                                             utoa@i 003A  
                                           utoa@n 0032                                             utoa@p 002E  
                                           utoa@w 0030                                             status 000FD8  
                                           wtemp8 0080                                             xtoa@c 0041  
                                           xtoa@d 001E                                             xtoa@i 003F  
                                           xtoa@n 0037                                             xtoa@p 0033  
                                           xtoa@w 0035                                             xtoa@x 0026  
                                 __end_of_strncmp 7446                                   __end_of_toupper 683C  
                                ___lodiv@dividend 0001                                _end_effector_homed 01AB  
                                 ??_get_reg_value 0001                                      _toupper$1930 000D  
                            get_reg_value@rx_char 0001                                   __initialization 6A14  
                                    __end_of_atoi 7E52                                      __end_of_ctoa 6760  
                                    __end_of_main 1E02                                      __end_of_dtoa 33A6  
                                    __end_of_fosc 7E67                                      __end_of_otoa 3B28  
                                    __end_of_stoa 3EF4                                      __end_of_utoa 3902  
                           ?_update_pwm_duty_ccp1 00BA                                      __end_of_xtoa 36D6  
                                          ??_atoi 000A                                            ??_ctoa 001F  
                                          ??_main 00E2                                            ??_dtoa 0026  
                                          ??_otoa 0026                                            ??_stoa 000E  
                                          ??_utoa 0026                                            ??_xtoa 0027  
                                   __activetblptr 000002                                   ??_rx_char_usart 0001  
                                ___lodiv@quotient 0011                                            _ADCON0 000FC2  
                                          _ADCON1 000FC1                                  _change_direction 6340  
                                          ?_fputc 0001                                            STR_101 7FCC  
                                          STR_110 7FE7                                            ?_fputs 000A  
                                          STR_104 7FF9                                            STR_106 7FF9  
                                          _ADRESH 000FC4                                            STR_108 7FE7  
                                          _ADRESL 000FC3                      __end_of_turn_on_current_coil 663E  
                                          _CCPR1L 000FBE                     ?_configure_ad_conversion_tank 0001  
                                ___awdiv@dividend 0017                     ?_configure_ad_conversion_oven 0001  
                                          ?_putch 0001                                            i2l5911 003C  
                                          i2l5903 000C                                            i2l5913 0050  
                                          i2l5905 001E                                            i2l5915 0062  
                                          i2l5907 0030                                            i2l5917 0066  
                                          i2l5909 0032                                     main@greet_str 0100  
                                   vfpfcnvrt@done 004F                                  __end_of___xxtofl 3D20  
                                   ?_init_timer_0 0001                                     ?_init_timer_2 0001  
          __end_of_state_translator_fpga_to_micro 7940           __size_of_state_translator_fpga_to_micro 015E  
                  _state_translator_fpga_to_micro 77E2                                     ?_init_stepper 0001  
                                    vfprintf@cfmt 006E                                  __end_of_lcd_init 6A14  
                                          ___flge 7446                                 _init_timer_2$2168 00BA  
                                       ??___aodiv 0011                                         ??___fladd 0067  
                                       ??___aomod 0011                                            ___wmul 62B6  
                                       ??___fldiv 004E                                         ??___awdiv 001B  
                                       ??___flneg 0005                                         ??___flmul 0035  
                                       ??___flsub 0077                                         ??___fltol 007B  
                                       ??___lodiv 0011                                         ??___lomod 0011  
                                          _lcd_wr 6158                                            clear_0 6A7A  
                                          clear_1 6A86                                  ___awdiv@quotient 001D  
                                          pad@buf 0013                                            ctoa@fp 001C  
                                          _roundf 2C80                                         ??_lcd_dat 0002  
                                       ??_lcd_cmd 0002                                            dtoa@fp 001C  
                                          _strlen 663E                                         ??_lcd_str 0005  
                                          fputc@c 0001                                            fputs@c 000E  
                                          fputs@i 000F                                            fputs@s 000A  
                                       ??_isalpha 0003                                         ??_isdigit 0003  
                                       ??_islower 0003                                      __mediumconst 7E52  
                                       ??_isspace 0003                                            otoa@fp 001C  
                                          tblptrh 000FF7                                         ??_isupper 0003  
                                          tblptrl 000FF6                                            tblptru 000FF8  
                         reach_goal@goal_to_reach 000B                                            stoa@cp 001A  
                                          stoa@fp 000A                                            putch@c 0001  
                                __end_of_vfprintf 68AC                                            utoa@fp 001C  
                                __end_of_snprintf 6340                                            xtoa@fp 001C  
                                       ??_strncmp 0007                                         ??_toupper 0009  
                                      ___flge@ff1 00BC                                        ___flge@ff2 00C0  
                update_current_coil@stepper_motor 0001                                      ___xxtofl@arg 0029  
                                    ___xxtofl@exp 0028                                      ___xxtofl@val 001F  
                                      __accesstop 0080                           __end_of__initialization 6A8C  
                                      ___flneg@f1 0001                                 serial_tx_char@val 0001  
                                  ??_init_timer_0 0001                                    ??_init_timer_2 007F  
                                   ___rparam_used 000001                                        ___fltol@f1 0077  
                                  ??_init_stepper 000D                                    _tmr2_prescaler 00F3  
                                 _init_interrupts 614C                            ??_update_pwm_duty_ccp1 00BE  
                                  __pcstackCOMRAM 0001                                      __pidataBANK0 6185  
                                    __pidataBANK1 6142                                      __pidataBANK2 6175  
                                   __end_of_f_osc 7E63                                     __end_of_fputc 707E  
                                   __end_of_fputs 65EC                                     __end_of_t_osc 7E5F  
                                   __end_of_putch 6142                                     __end_of_toint 7E57  
                                 _temperature_int 0090                           __size_of_serial_tx_char 0020  
             state_translator_fpga_to_micro@state 0003                                           ??_fputc 0005  
                                         ??_fputs 000E                                           ??_putch 0001  
                                _mix_current_step 0096                                        __pbssBANK0 0080  
                                      __pbssBANK1 01A7                    ??_configure_ad_conversion_tank 0001  
                  ??_configure_ad_conversion_oven 0001                                __size_of_init_ccp1 0024  
                                         ?___flge 00BC                                           ?___wmul 0001  
             check_temperature@temp_to_be_checked 00C8                                           ?_lcd_wr 0001  
                                         _CCP1CON 000FBD                              _turn_on_current_coil 65EC  
                           __end_of_wait_for_zero 6262                           _hex_end_effector_values 01E9  
                                   _read_new_char 01BE                   _grasping_joint_position_reached 01B3  
                                         ?_roundf 00C8                                           ?_strlen 0001  
                              _temperature_scaled 008E                                         ?___xxtofl 001F  
                         reach_goal@stepper_motor 0009                                __size_of_vfpfcnvrt 13E8  
                                      _get_liters 6760                 turn_on_current_coil@stepper_motor 0001  
                                _desired_baudrate 7E57                                         ?_lcd_init 0001  
                                ___lomod@dividend 0001                           __end_of_init_interrupts 6158  
                               _check_temperature 6EBE                     change_direction@stepper_motor 0001  
                                         __Hparam 0000                                ?_check_temperature 00C8  
                                         __Lparam 0000                                __size_of_vsnprintf 013A  
                                      _init_PORTS 62E0                                        _init_USART 63B8  
                                 __size_of___flge 012A                                           ___aodiv 7AD0  
                                         ___fladd 1E02                                           ___aomod 7940  
                                         ___fldiv 284E                                           ___awdiv 724E  
                                         ___flneg 6376                                           ___flmul 23AA  
                        __end_of_change_direction 6376                                           ___flsub 6506  
                                         ___fltol 7570                                   __size_of___wmul 002A  
                                         ___lodiv 3EF4                             ?_turn_on_current_coil 0001  
                              _state_before_error 01E7                                           ___lomod 7164  
                                       ?_vfprintf 0068                                         ?_snprintf 00C2  
                                 __size_of_lcd_wr 000C                               ??_check_temperature 007F  
                                         __pcinit 6A14              init_stepper@hex_coil_register_values 0009  
                                         __ramtop 0600                                        _reach_goal 691E  
                                         __ptext0 1462                                           __ptext1 623A  
                                         __ptext2 68AC                                           __ptext3 6B22  
                                         __ptext4 77E2                                           __ptext5 630C  
                                         __ptext6 76A8                                           __ptext7 683C  
                                         __ptext8 007A                                           __ptext9 33A6  
                                         _lcd_dat 628C                                           _lcd_cmd 6262  
                                         _lcd_str 6A9A                                         _T0CONbits 000FD5  
                                 __size_of_roundf 03F2                                   __size_of_strlen 005C  
                               __end_of_init_ccp1 623A                                         _T2CONbits 000FCA  
                                    __size_of_abs 004C                                      __size_of_pad 00E6  
                                         _isalpha 64C0                                           _isdigit 63FA  
                                      ??___xxtofl 0023                              __end_of_init_timer_0 6216  
                            __end_of_init_timer_2 6DE4                                           _islower 647E  
                                         _isspace 669A                                           _isupper 643C  
                            __end_of_init_stepper 6C54                                           atoi@neg 000E  
                                   _joint_stepper 01D9                                        ??_lcd_init 0003  
                                         _strncmp 733E                                           _toupper 67CC  
                    __size_of_update_current_coil 00DA                              end_of_initialization 6A8C  
                       __end_of_check_temperature 6F9C                          __size_of_get_temperature 0072  
                                         fputc@fp 0003                                     __Lmediumconst 7E52  
                                      _tank_error 01A7                                           fputs@fp 000C  
             state_translator_micro_to_fpga@state 0001                                 __end_of_vfpfcnvrt 1462  
                           __end_of_get_reg_value 6174                                         _RCSTAbits 000FAB  
                                         postdec1 000FE5                                           postdec2 000FDD  
                                         postinc0 000FEE                                           postinc1 000FE6  
                                         postinc2 000FDE                                           roundf@e 00D4  
                                         roundf@u 00DA                                           roundf@x 00C8  
                                         roundf@y 00DE                                        ??_vfprintf 006E  
                                      ??_snprintf 007C                                           strlen@a 0003  
                                         strlen@s 0001                                        _timer_done 01BD  
                                       _PORTEbits 000F84                  ??_state_translator_fpga_to_micro 0005  
                 ?_state_translator_fpga_to_micro 0003                                       ___fladd@grs 006E  
                                  _serial_tx_char 61D4                                     ___xxtofl@sign 0027  
                           __end_of_rx_char_usart 0076                                         _TRISCbits 000F94  
                                     ?_get_liters 00BA                                        lcd_dat@val 0002  
                               __end_of_vsnprintf 77E2                                        lcd_cmd@val 0002  
                                     ___fldiv@grs 0059                                       ___fldiv@rem 0052  
                                      _pwm_period 00EB                                        _state_msgs 0200  
                                   _mix_direction 0094                              _end_effector_stepper 01CD  
                                     ___flmul@grs 003A                                  ?_init_interrupts 0001  
                                     _CCP1CONbits 000FBD                                         _TXSTAbits 000FAC  
                                main@current_temp 01A0                                        lcd_str@str 0003  
                                     ?_init_PORTS 0001                                       ?_init_USART 0001  
                          ??_turn_on_current_coil 0003                                    __end_of___flge 7570  
          __end_of_state_translator_micro_to_fpga 6BAC           __size_of_state_translator_micro_to_fpga 008A  
                  _state_translator_micro_to_fpga 6B22                      _grasping_ee_position_reached 01B1  
                                     vfpfcnvrt@ap 0047                                       vfpfcnvrt@cp 004D  
                                     vfpfcnvrt@fp 0043                                       vfpfcnvrt@ll 0055  
                                  __end_of___wmul 62E0                                       vfpfcnvrt@vp 005D  
                                  __end_of_lcd_wr 6164                                       ?_reach_goal 0009  
state_translator_micro_to_fpga@state_machine_code 0005                            __end_of_serial_tx_char 61F4  
                                  __end_of_roundf 3072                                    __end_of_strlen 669A  
                             start_initialization 6A14                                   ___lodiv@divisor 0009  
                                 ___lodiv@counter 0019                                       __end_of_abs 659C  
                                     __end_of_pad 7164                                  _hex_joint_values 01ED  
                      __size_of_check_temperature 00DE                          init_stepper@current_coil 0003  
                       init_stepper@stepper_motor 0001                                 ??_get_temperature 007F  
                                     vfprintf@fmt 006A                                          ??___flge 00C4  
                        __end_of_desired_baudrate 7E5B                               __size_of_get_liters 006C  
                                        ??___wmul 0005                     __size_of_update_pwm_duty_ccp1 00C4  
                                        ??_lcd_wr 0001                                       __pdataBANK0 00E4  
                                     __pdataBANK1 01E7                                       __pdataBANK2 0200  
                           check_temperature@grad 00CA                             __size_of_init_timer_0 0022  
                           __size_of_init_timer_2 00CC                             __size_of_init_stepper 00A8  
                                        ??_roundf 00CC                                          ??_strlen 0003  
                                 ?_serial_tx_char 0001                                         ___fladd@a 0063  
                                       ___fladd@b 005F                                      vsnprintf@cnt 00BA  
                                    vsnprintf@fmt 0074                                         ___fldiv@a 004A  
                                       ___fldiv@b 0046                                         ___flmul@a 0031  
                                       ___flmul@b 002D                                         ___flsub@a 0073  
                                       ___flsub@b 006F                                     __pcstackBANK0 00B8  
                                   __pcstackBANK1 0100                                  ___aodiv@dividend 0001  
                                     snprintf@fmt 00C6                                 __size_of___xxtofl 01F8  
                             __size_of_init_PORTS 002C                               __size_of_init_USART 0042  
                               __size_of_lcd_init 007E                               __size_of_reach_goal 0078  
                                       _atoi$1842 0010                                         _atoi$1843 0014  
                                       _atoi$1844 0012                                      _init_timer_0 61F4  
                                    _init_timer_2 6D18                                         _main$2167 01A2  
                                       _dtoa$1668 002E                                      _init_stepper 6BAC  
                           init_stepper@direction 0007                                         __pintcode 0008  
                                   __pmediumconst 7E52                                          ?___aodiv 0001  
                                        ?___fladd 005F                                          ?___aomod 0001  
                                        ?___fldiv 0046                                          ?___awdiv 0017  
                                ___aodiv@quotient 0013                                          ?___flneg 0001  
                                        ?___flmul 002D                                          ?___flsub 006F  
                                        ?___fltol 0077                                          ?___lodiv 0001  
                                        ?___lomod 0001                               _update_current_coil 6DE4  
                               ?_change_direction 0001                                ??_change_direction 0003  
                                        ?_lcd_dat 0001                                          ?_lcd_cmd 0001  
                               __size_of_vfprintf 0070                                          ?_lcd_str 0003  
                               __size_of_snprintf 0034                                   ___lomod@divisor 0009  
                    update_pwm_duty_ccp1@new_duty 00C0                                   ___lomod@counter 0011  
                                        ?_isalpha 0001                                          ?_isdigit 0001  
                                _mix_step_counter 0092                                          ?_islower 0001  
                                        ?_isspace 0001                                          ?_isupper 0001  
                                       _init_ccp1 6216                                    __size_of_fputc 00E2  
                                  __size_of_fputs 0050                              ?_update_current_coil 0001  
                                        ?_strncmp 0001                                          ?_toupper 0007  
                                  __size_of_putch 0006                            __size_of_wait_for_zero 0028  
                                  ___wmul@product 0005                                          _LATAbits 000F89  
                                        _PIE1bits 000F9D                                     _move_to_trash 01B5  
                           _joint_dilutor_stepper 01C1                                          _PIR1bits 000F9E  
                                        i2u733_40 001C                                          i2u733_41 0016  
                                        i2u734_40 002E                                          i2u734_41 0028  
                                        i2u735_40 004E                                          i2u735_41 0048  
                                        i2u736_40 0060                                          i2u736_41 005A  
                                       _vfpfcnvrt 007A                                         _xtoa$1704 002F  
                                       _xtoa$1705 0031                                        _ADCON0bits 000FC2  
                               ___wmul@multiplier 0001                                         lcd_wr@val 0001  
                                    ??_get_liters 007F                                      _isspace$1870 0007  
                                      ?_init_ccp1 0001                             ??_update_current_coil 0003  
                                      vfpfcnvrt@c 005F                                         copy_data0 6A28  
                                       copy_data1 6A48                                         copy_data2 6A68  
                                       _vsnprintf 76A8                                        roundf@F525 0080  
                                        __Hrparam 0000                                      ??_init_PORTS 0001  
                                    ??_init_USART 007F                                        vfprintf@ap 006C  
                                        __Lrparam 0000                                        vfprintf@fp 0068  
                              __end_of_get_liters 67CC                                  __size_of___aodiv 01B4  
                                __size_of___fladd 05A8                                  __size_of___aomod 0190  
                                __size_of___fldiv 0432                                  __size_of___awdiv 00F0  
                                __size_of___flneg 0042                                       vsnprintf@ap 0076  
                                __size_of___flmul 04A4                                  __size_of___flsub 004A  
                                __size_of___fltol 0138                                  __size_of___lodiv 010A  
                                __size_of___lomod 00EA                                        ?_vfpfcnvrt 0043  
                                   _wait_for_zero 623A                                      ??_reach_goal 000D  
                                      snprintf@ap 00CC                                   ___aodiv@divisor 0009  
                                 ___aodiv@counter 0011                                  __size_of_lcd_dat 002A  
                                __size_of_lcd_cmd 002A                                  __size_of_lcd_str 0088  
                                        ___xxtofl 3B28                                  __size_of_isalpha 0046  
                                __size_of_isdigit 0042                                  __size_of_islower 0042  
                                __size_of_isspace 0060                                          __ptext10 67CC  
                                        __ptext11 647E                                          __ptext20 3072  
                                        __ptext12 643C                                          __ptext21 7940  
                                        __ptext13 64C0                                          __ptext30 669A  
                                        __ptext22 7AD0                                          __ptext14 36D6  
                                        __ptext31 63FA                                          __ptext23 66FA  
                                        __ptext15 7164                                          __ptext40 6262  
                                        __ptext32 62B6                                          __ptext24 707E  
                                        __ptext16 3EF4                                          __ptext41 6158  
                                        __ptext33 61D4                                          __ptext25 663E  
                                        __ptext17 733E                                          __ptext50 2C80  
                                        __ptext42 6D18                                          __ptext34 691E  
                                        __ptext26 659C                                          __ptext18 3D20  
                                        __ptext51 6506                                          __ptext43 61F4  
                                        __ptext35 6DE4                                          __ptext27 6F9C  
                                        __ptext19 3902                                          __ptext60 6198  
                                        __ptext52 1E02                                          __ptext44 6BAC  
                                        __ptext36 65EC                                          __ptext28 613C  
                                        __ptext61 6EBE                                          __ptext53 6376  
                                        __ptext45 614C                                          __ptext37 6A9A  
                                        __ptext29 7C84                                          __ptext62 6550  
                                        __ptext54 62E0                                          __ptext46 6216  
                                        __ptext38 628C                                          __ptext63 3B28  
                                        __ptext55 6164                                          __ptext47 6C54  
                                        __ptext39 6996                                          __ptext64 7446  
                                        __ptext56 6760                                          __ptext48 284E  
                                        __ptext65 724E                                          __ptext57 7570  
                                        __ptext49 63B8                                          __ptext66 6340  
                                        __ptext58 23AA                                          __ptext59 61B6  
                                __size_of_isupper 0042                  ??_state_translator_micro_to_fpga 0003  
                 ?_state_translator_micro_to_fpga 0001                            __size_of_get_reg_value 0010  
                              __end_of_init_PORTS 630C                                          _lcd_init 6996  
                              __end_of_init_USART 63FA                                   _get_temperature 68AC  
                                __size_of_strncmp 0108                                  __size_of_toupper 0070  
                                      ?_vsnprintf 0070                         _diluting_position_reached 01AF  
                                   __size_of_atoi 01CE                                     __size_of_ctoa 0066  
                                   __size_of_main 09A0                                     __size_of_dtoa 0334  
                                   __size_of_otoa 0226                                     __size_of_stoa 01D4  
                                   __size_of_utoa 022C                                       _joint_homed 01AD  
                                   __size_of_xtoa 0330                                __end_of_reach_goal 6996  
                                       stoa@F1152 00E4                            __size_of_rx_char_usart 006E  
                        __size_of_init_interrupts 000C                                          int$flags 007F  
                                ??_serial_tx_char 0001                                          _vfprintf 683C  
                   __size_of_turn_on_current_coil 0052                                    ?_wait_for_zero 0001  
                                        _snprintf 630C                                          lcd_str@i 0007  
                                     _mix_counter 01BB                                  ___aomod@dividend 0001  
                                  _vfpfcnvrt$1720 0053                                    _vfpfcnvrt$1719 0051  
                                      _INTCONbits 000FF2                                          isalpha@c 0001  
                                        isdigit@c 0001                                       ??_init_ccp1 007F  
                    __end_of_update_pwm_duty_ccp1 6D18                                        vsnprintf@f 00BC  
                                   _idle_msg_sent 01BF                                        vsnprintf@n 0072  
                                      vsnprintf@s 0070                                         snprintf@n 00C4  
                                       snprintf@s 00C2                                          intlevel2 3FFE  
                                        islower@c 0001                                          isspace@c 0001  
                                        isupper@c 0001                                         strncmp@_l 0001  
                                       strncmp@_r 0003                               _joint_dilutor_homed 01A9  
                                   _get_reg_value 6164                                     init_stepper@i 000F  
                                 ___aomod@divisor 0009                                       ??_vfpfcnvrt 0049  
                                        stoa@nuls 000F                                   ___aomod@counter 0011  
                                   _dilution_done 01B9                                    _vsnprintf$1586 00B8  
                         __end_of_get_temperature 691E                                          strncmp@l 0008  
                                        strncmp@n 0005                                          strncmp@r 000A  
                                        toupper@c 0007                          init_stepper@step_counter 0005  
                                   _rx_char_usart 0008                         __size_of_change_direction 0036  
                                   ___fladd@signs 006B                     update_pwm_duty_ccp1@lsbs_duty 00C2  
                                    ___aodiv@sign 0012                                       ??_vsnprintf 0078  
                                    ___fladd@aexp 006C                                      ___fladd@bexp 006D  
                                    ___aomod@sign 0012                                       _roundf$2170 00D0  
                                     _roundf$2169 00D6  
