

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Jun 06 00:34:45 2023

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    77                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    78                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    79  0000                     
    80                           ; Version 2.20
    81                           ; Generated 12/02/2020 GMT
    82                           ; 
    83                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC18F452 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     
   115                           	psect	idataBANK0
   116  006D8B                     __pidataBANK0:
   117                           	callstack 0
   118                           
   119                           ;initializer for stoa@F1152
   120  006D8B  28                 	db	40
   121  006D8C  6E                 	db	110
   122  006D8D  75                 	db	117
   123  006D8E  6C                 	db	108
   124  006D8F  6C                 	db	108
   125  006D90  29                 	db	41
   126  006D91  00                 	db	0
   127                           
   128                           ;initializer for _pwm_period
   129                           ;timer.c: 5: static double const f_osc = 1000000;;timer.c: 6: static double const t_osc 
      +                          = 1/f_osc;;timer.c: 7: static double pwm_period = 20e-3;
   130  006D92  D70A               	dw	55050
   131  006D94  3CA3               	dw	15523
   132                           
   133                           ;initializer for _tosc
   134  006D96  37BD               	dw	14269
   135  006D98  3486               	dw	13446
   136                           
   137                           ;initializer for _tmr2_prescaler
   138  006D9A  0000               	dw	0
   139  006D9C  4180               	dw	16768
   140                           
   141                           	psect	idataBANK1
   142  006D6E                     __pidataBANK1:
   143                           	callstack 0
   144                           
   145                           ;initializer for _state_msgs
   146  006D6E  56                 	db	low STR_1
   147  006D6F  7F                 	db	high STR_1
   148  006D70  AF                 	db	low STR_2
   149  006D71  7E                 	db	high STR_2
   150  006D72  C2                 	db	low STR_3
   151  006D73  7F                 	db	high STR_3
   152  006D74  85                 	db	low STR_4
   153  006D75  7F                 	db	high STR_4
   154  006D76  EE                 	db	low STR_5
   155  006D77  7E                 	db	high STR_5
   156  006D78  25                 	db	low STR_6
   157  006D79  7F                 	db	high STR_6
   158                           
   159                           	psect	mediumconst
   160  007E9A                     __pmediumconst:
   161                           	callstack 0
   162  007E9A  00                 	db	0
   163  007E9B  0000               	dw	0
   164  007E9D  4B00               	dw	19200
   165  007E9F                     __end_of_toint:
   166                           	callstack 0
   167  007E9F  0000               	dw	0
   168  007EA1  4616               	dw	17942
   169  007EA3                     __end_of_desired_baudrate:
   170                           	callstack 0
   171  007EA3  37BD               	dw	14269
   172  007EA5  3586               	dw	13702
   173  007EA7                     __end_of_t_osc:
   174                           	callstack 0
   175  007EA7  2400               	dw	9216
   176  007EA9  4974               	dw	18804
   177  007EAB                     __end_of_f_osc:
   178                           	callstack 0
   179  007EAB  2400               	dw	9216
   180  007EAD  4A74               	dw	19060
   181  007EAF                     __end_of_fosc:
   182                           	callstack 0
   183  0000                     _CCPR1L	set	4030
   184  0000                     _CCP1CONbits	set	4029
   185  0000                     _CCP1CON	set	4029
   186  0000                     _PR2	set	4043
   187  0000                     _T2CONbits	set	4042
   188  0000                     _TMR2	set	4044
   189  0000                     _T2CON	set	4042
   190  0000                     _TMR0H	set	4055
   191  0000                     _TMR0L	set	4054
   192  0000                     _PORTEbits	set	3972
   193  0000                     _PORTD	set	3971
   194  0000                     _TRISCbits	set	3988
   195  0000                     _PORTC	set	3970
   196  0000                     _LATC	set	3979
   197  0000                     _TRISB	set	3987
   198  0000                     _PORTB	set	3969
   199  0000                     _LATB	set	3978
   200  0000                     _TRISA	set	3986
   201  0000                     _PORTA	set	3968
   202  0000                     _T0CON	set	4053
   203  0000                     _PIR1bits	set	3998
   204  0000                     _PIE1bits	set	3997
   205  0000                     _LATA	set	3977
   206  0000                     _T0CONbits	set	4053
   207  0000                     _LATBbits	set	3978
   208  0000                     _INTCONbits	set	4082
   209  0000                     _RCREG	set	4014
   210  0000                     _TXREG	set	4013
   211  0000                     _RCSTAbits	set	4011
   212  0000                     _TXSTAbits	set	4012
   213  0000                     _SPBRG	set	4015
   214  007EAF                     STR_2:
   215  007EAF  49                 	db	73	;'I'
   216  007EB0  4E                 	db	78	;'N'
   217  007EB1  49                 	db	73	;'I'
   218  007EB2  54                 	db	84	;'T'
   219  007EB3  5F                 	db	95	;'_'
   220  007EB4  50                 	db	80	;'P'
   221  007EB5  4F                 	db	79	;'O'
   222  007EB6  53                 	db	83	;'S'
   223  007EB7  3A                 	db	58	;':'
   224  007EB8  20                 	db	32
   225  007EB9  74                 	db	116	;'t'
   226  007EBA  68                 	db	104	;'h'
   227  007EBB  65                 	db	101	;'e'
   228  007EBC  20                 	db	32
   229  007EBD  6A                 	db	106	;'j'
   230  007EBE  61                 	db	97	;'a'
   231  007EBF  62                 	db	98	;'b'
   232  007EC0  20                 	db	32
   233  007EC1  69                 	db	105	;'i'
   234  007EC2  73                 	db	115	;'s'
   235  007EC3  20                 	db	32
   236  007EC4  61                 	db	97	;'a'
   237  007EC5  74                 	db	116	;'t'
   238  007EC6  20                 	db	32
   239  007EC7  74                 	db	116	;'t'
   240  007EC8  68                 	db	104	;'h'
   241  007EC9  65                 	db	101	;'e'
   242  007ECA  20                 	db	32
   243  007ECB  69                 	db	105	;'i'
   244  007ECC  6E                 	db	110	;'n'
   245  007ECD  69                 	db	105	;'i'
   246  007ECE  74                 	db	116	;'t'
   247  007ECF  20                 	db	32
   248  007ED0  70                 	db	112	;'p'
   249  007ED1  6F                 	db	111	;'o'
   250  007ED2  73                 	db	115	;'s'
   251  007ED3  69                 	db	105	;'i'
   252  007ED4  74                 	db	116	;'t'
   253  007ED5  69                 	db	105	;'i'
   254  007ED6  6F                 	db	111	;'o'
   255  007ED7  6E                 	db	110	;'n'
   256  007ED8  2C                 	db	44
   257  007ED9  20                 	db	32
   258  007EDA  70                 	db	112	;'p'
   259  007EDB  72                 	db	114	;'r'
   260  007EDC  6F                 	db	111	;'o'
   261  007EDD  63                 	db	99	;'c'
   262  007EDE  65                 	db	101	;'e'
   263  007EDF  73                 	db	115	;'s'
   264  007EE0  73                 	db	115	;'s'
   265  007EE1  20                 	db	32
   266  007EE2  69                 	db	105	;'i'
   267  007EE3  73                 	db	115	;'s'
   268  007EE4  20                 	db	32
   269  007EE5  73                 	db	115	;'s'
   270  007EE6  74                 	db	116	;'t'
   271  007EE7  61                 	db	97	;'a'
   272  007EE8  72                 	db	114	;'r'
   273  007EE9  74                 	db	116	;'t'
   274  007EEA  69                 	db	105	;'i'
   275  007EEB  6E                 	db	110	;'n'
   276  007EEC  67                 	db	103	;'g'
   277  007EED  00                 	db	0
   278  007EEE                     STR_5:
   279  007EEE  4D                 	db	77	;'M'
   280  007EEF  49                 	db	73	;'I'
   281  007EF0  58                 	db	88	;'X'
   282  007EF1  49                 	db	73	;'I'
   283  007EF2  4E                 	db	78	;'N'
   284  007EF3  47                 	db	71	;'G'
   285  007EF4  5F                 	db	95	;'_'
   286  007EF5  53                 	db	83	;'S'
   287  007EF6  54                 	db	84	;'T'
   288  007EF7  41                 	db	65	;'A'
   289  007EF8  54                 	db	84	;'T'
   290  007EF9  49                 	db	73	;'I'
   291  007EFA  4F                 	db	79	;'O'
   292  007EFB  4E                 	db	78	;'N'
   293  007EFC  3A                 	db	58	;':'
   294  007EFD  20                 	db	32
   295  007EFE  74                 	db	116	;'t'
   296  007EFF  68                 	db	104	;'h'
   297  007F00  65                 	db	101	;'e'
   298  007F01  20                 	db	32
   299  007F02  6A                 	db	106	;'j'
   300  007F03  61                 	db	97	;'a'
   301  007F04  62                 	db	98	;'b'
   302  007F05  20                 	db	32
   303  007F06  68                 	db	104	;'h'
   304  007F07  61                 	db	97	;'a'
   305  007F08  73                 	db	115	;'s'
   306  007F09  20                 	db	32
   307  007F0A  72                 	db	114	;'r'
   308  007F0B  65                 	db	101	;'e'
   309  007F0C  61                 	db	97	;'a'
   310  007F0D  63                 	db	99	;'c'
   311  007F0E  68                 	db	104	;'h'
   312  007F0F  65                 	db	101	;'e'
   313  007F10  64                 	db	100	;'d'
   314  007F11  20                 	db	32
   315  007F12  74                 	db	116	;'t'
   316  007F13  68                 	db	104	;'h'
   317  007F14  65                 	db	101	;'e'
   318  007F15  20                 	db	32
   319  007F16  6D                 	db	109	;'m'
   320  007F17  69                 	db	105	;'i'
   321  007F18  78                 	db	120	;'x'
   322  007F19  69                 	db	105	;'i'
   323  007F1A  6E                 	db	110	;'n'
   324  007F1B  67                 	db	103	;'g'
   325  007F1C  20                 	db	32
   326  007F1D  73                 	db	115	;'s'
   327  007F1E  74                 	db	116	;'t'
   328  007F1F  61                 	db	97	;'a'
   329  007F20  74                 	db	116	;'t'
   330  007F21  69                 	db	105	;'i'
   331  007F22  6F                 	db	111	;'o'
   332  007F23  6E                 	db	110	;'n'
   333  007F24  00                 	db	0
   334  007F25                     STR_6:
   335  007F25  50                 	db	80	;'P'
   336  007F26  49                 	db	73	;'I'
   337  007F27  43                 	db	67	;'C'
   338  007F28  4B                 	db	75	;'K'
   339  007F29  5F                 	db	95	;'_'
   340  007F2A  55                 	db	85	;'U'
   341  007F2B  50                 	db	80	;'P'
   342  007F2C  3A                 	db	58	;':'
   343  007F2D  20                 	db	32
   344  007F2E  74                 	db	116	;'t'
   345  007F2F  68                 	db	104	;'h'
   346  007F30  65                 	db	101	;'e'
   347  007F31  20                 	db	32
   348  007F32  6A                 	db	106	;'j'
   349  007F33  61                 	db	97	;'a'
   350  007F34  62                 	db	98	;'b'
   351  007F35  20                 	db	32
   352  007F36  68                 	db	104	;'h'
   353  007F37  61                 	db	97	;'a'
   354  007F38  73                 	db	115	;'s'
   355  007F39  20                 	db	32
   356  007F3A  72                 	db	114	;'r'
   357  007F3B  65                 	db	101	;'e'
   358  007F3C  61                 	db	97	;'a'
   359  007F3D  63                 	db	99	;'c'
   360  007F3E  68                 	db	104	;'h'
   361  007F3F  65                 	db	101	;'e'
   362  007F40  64                 	db	100	;'d'
   363  007F41  20                 	db	32
   364  007F42  74                 	db	116	;'t'
   365  007F43  68                 	db	104	;'h'
   366  007F44  65                 	db	101	;'e'
   367  007F45  20                 	db	32
   368  007F46  70                 	db	112	;'p'
   369  007F47  69                 	db	105	;'i'
   370  007F48  63                 	db	99	;'c'
   371  007F49  6B                 	db	107	;'k'
   372  007F4A  20                 	db	32
   373  007F4B  75                 	db	117	;'u'
   374  007F4C  70                 	db	112	;'p'
   375  007F4D  20                 	db	32
   376  007F4E  73                 	db	115	;'s'
   377  007F4F  74                 	db	116	;'t'
   378  007F50  61                 	db	97	;'a'
   379  007F51  74                 	db	116	;'t'
   380  007F52  69                 	db	105	;'i'
   381  007F53  6F                 	db	111	;'o'
   382  007F54  6E                 	db	110	;'n'
   383  007F55  00                 	db	0
   384  007F56                     STR_1:
   385  007F56  49                 	db	73	;'I'
   386  007F57  44                 	db	68	;'D'
   387  007F58  4C                 	db	76	;'L'
   388  007F59  45                 	db	69	;'E'
   389  007F5A  3A                 	db	58	;':'
   390  007F5B  20                 	db	32
   391  007F5C  77                 	db	119	;'w'
   392  007F5D  61                 	db	97	;'a'
   393  007F5E  69                 	db	105	;'i'
   394  007F5F  74                 	db	116	;'t'
   395  007F60  69                 	db	105	;'i'
   396  007F61  6E                 	db	110	;'n'
   397  007F62  67                 	db	103	;'g'
   398  007F63  20                 	db	32
   399  007F64  66                 	db	102	;'f'
   400  007F65  6F                 	db	111	;'o'
   401  007F66  72                 	db	114	;'r'
   402  007F67  20                 	db	32
   403  007F68  6A                 	db	106	;'j'
   404  007F69  61                 	db	97	;'a'
   405  007F6A  62                 	db	98	;'b'
   406  007F6B  20                 	db	32
   407  007F6C  74                 	db	116	;'t'
   408  007F6D  6F                 	db	111	;'o'
   409  007F6E  20                 	db	32
   410  007F6F  62                 	db	98	;'b'
   411  007F70  65                 	db	101	;'e'
   412  007F71  20                 	db	32
   413  007F72  70                 	db	112	;'p'
   414  007F73  6C                 	db	108	;'l'
   415  007F74  61                 	db	97	;'a'
   416  007F75  63                 	db	99	;'c'
   417  007F76  65                 	db	101	;'e'
   418  007F77  64                 	db	100	;'d'
   419  007F78  20                 	db	32
   420  007F79  69                 	db	105	;'i'
   421  007F7A  6E                 	db	110	;'n'
   422  007F7B  20                 	db	32
   423  007F7C  69                 	db	105	;'i'
   424  007F7D  6E                 	db	110	;'n'
   425  007F7E  69                 	db	105	;'i'
   426  007F7F  74                 	db	116	;'t'
   427  007F80  20                 	db	32
   428  007F81  70                 	db	112	;'p'
   429  007F82  6F                 	db	111	;'o'
   430  007F83  73                 	db	115	;'s'
   431  007F84  00                 	db	0
   432  007F85                     STR_4:
   433  007F85  4F                 	db	79	;'O'
   434  007F86  56                 	db	86	;'V'
   435  007F87  45                 	db	69	;'E'
   436  007F88  4E                 	db	78	;'N'
   437  007F89  3A                 	db	58	;':'
   438  007F8A  20                 	db	32
   439  007F8B  72                 	db	114	;'r'
   440  007F8C  65                 	db	101	;'e'
   441  007F8D  61                 	db	97	;'a'
   442  007F8E  63                 	db	99	;'c'
   443  007F8F  68                 	db	104	;'h'
   444  007F90  69                 	db	105	;'i'
   445  007F91  6E                 	db	110	;'n'
   446  007F92  67                 	db	103	;'g'
   447  007F93  20                 	db	32
   448  007F94  74                 	db	116	;'t'
   449  007F95  68                 	db	104	;'h'
   450  007F96  65                 	db	101	;'e'
   451  007F97  20                 	db	32
   452  007F98  63                 	db	99	;'c'
   453  007F99  6F                 	db	111	;'o'
   454  007F9A  72                 	db	114	;'r'
   455  007F9B  72                 	db	114	;'r'
   456  007F9C  65                 	db	101	;'e'
   457  007F9D  63                 	db	99	;'c'
   458  007F9E  74                 	db	116	;'t'
   459  007F9F  20                 	db	32
   460  007FA0  74                 	db	116	;'t'
   461  007FA1  65                 	db	101	;'e'
   462  007FA2  6D                 	db	109	;'m'
   463  007FA3  70                 	db	112	;'p'
   464  007FA4  65                 	db	101	;'e'
   465  007FA5  72                 	db	114	;'r'
   466  007FA6  61                 	db	97	;'a'
   467  007FA7  74                 	db	116	;'t'
   468  007FA8  75                 	db	117	;'u'
   469  007FA9  72                 	db	114	;'r'
   470  007FAA  65                 	db	101	;'e'
   471  007FAB  00                 	db	0
   472  007FAC                     STR_7:
   473  007FAC  44                 	db	68	;'D'
   474  007FAD  65                 	db	101	;'e'
   475  007FAE  76                 	db	118	;'v'
   476  007FAF  69                 	db	105	;'i'
   477  007FB0  63                 	db	99	;'c'
   478  007FB1  65                 	db	101	;'e'
   479  007FB2  20                 	db	32
   480  007FB3  68                 	db	104	;'h'
   481  007FB4  61                 	db	97	;'a'
   482  007FB5  73                 	db	115	;'s'
   483  007FB6  20                 	db	32
   484  007FB7  62                 	db	98	;'b'
   485  007FB8  65                 	db	101	;'e'
   486  007FB9  65                 	db	101	;'e'
   487  007FBA  6E                 	db	110	;'n'
   488  007FBB  20                 	db	32
   489  007FBC  72                 	db	114	;'r'
   490  007FBD  65                 	db	101	;'e'
   491  007FBE  73                 	db	115	;'s'
   492  007FBF  65                 	db	101	;'e'
   493  007FC0  74                 	db	116	;'t'
   494  007FC1  00                 	db	0
   495  007FC2                     STR_3:
   496  007FC2  4D                 	db	77	;'M'
   497  007FC3  4F                 	db	79	;'O'
   498  007FC4  56                 	db	86	;'V'
   499  007FC5  45                 	db	69	;'E'
   500  007FC6  4D                 	db	77	;'M'
   501  007FC7  45                 	db	69	;'E'
   502  007FC8  4E                 	db	78	;'N'
   503  007FC9  54                 	db	84	;'T'
   504  007FCA  00                 	db	0
   505  007FCB                     STR_85:
   506  007FCB  68                 	db	104	;'h'
   507  007FCC  68                 	db	104	;'h'
   508  007FCD  58                 	db	88	;'X'
   509  007FCE  00                 	db	0
   510  007FCF                     STR_9:
   511  007FCF  68                 	db	104	;'h'
   512  007FD0  68                 	db	104	;'h'
   513  007FD1  64                 	db	100	;'d'
   514  007FD2  00                 	db	0
   515  007FD3                     STR_13:
   516  007FD3  68                 	db	104	;'h'
   517  007FD4  68                 	db	104	;'h'
   518  007FD5  69                 	db	105	;'i'
   519  007FD6  00                 	db	0
   520  007FD7                     STR_51:
   521  007FD7  68                 	db	104	;'h'
   522  007FD8  68                 	db	104	;'h'
   523  007FD9  6E                 	db	110	;'n'
   524  007FDA  00                 	db	0
   525  007FDB                     STR_36:
   526  007FDB  68                 	db	104	;'h'
   527  007FDC  68                 	db	104	;'h'
   528  007FDD  6F                 	db	111	;'o'
   529  007FDE  00                 	db	0
   530  007FDF                     STR_66:
   531  007FDF  68                 	db	104	;'h'
   532  007FE0  68                 	db	104	;'h'
   533  007FE1  75                 	db	117	;'u'
   534  007FE2  00                 	db	0
   535  007FE3                     STR_81:
   536  007FE3  68                 	db	104	;'h'
   537  007FE4  68                 	db	104	;'h'
   538  007FE5  78                 	db	120	;'x'
   539  007FE6  00                 	db	0
   540  007FE7                     STR_103:
   541  007FE7  7A                 	db	122	;'z'
   542  007FE8  58                 	db	88	;'X'
   543  007FE9  00                 	db	0
   544  007FEA                     STR_27:
   545  007FEA  7A                 	db	122	;'z'
   546  007FEB  64                 	db	100	;'d'
   547  007FEC  00                 	db	0
   548  007FED                     STR_31:
   549  007FED  7A                 	db	122	;'z'
   550  007FEE  69                 	db	105	;'i'
   551  007FEF  00                 	db	0
   552  007FF0                     STR_61:
   553  007FF0  7A                 	db	122	;'z'
   554  007FF1  6E                 	db	110	;'n'
   555  007FF2  00                 	db	0
   556  007FF3                     STR_46:
   557  007FF3  7A                 	db	122	;'z'
   558  007FF4  6F                 	db	111	;'o'
   559  007FF5  00                 	db	0
   560  007FF6                     STR_76:
   561  007FF6  7A                 	db	122	;'z'
   562  007FF7  75                 	db	117	;'u'
   563  007FF8  00                 	db	0
   564  007FF9                     STR_99:
   565  007FF9  7A                 	db	122	;'z'
   566  007FFA  78                 	db	120	;'x'
   567  007FFB  00                 	db	0
   568  007FFC                     STR_8:
   569  007FFC  25                 	db	37
   570  007FFD  73                 	db	115	;'s'
   571  007FFE  00                 	db	0
   572  007FFF  00                 	db	0	; dummy byte at the end
   573  0000                     
   574                           ; #config settings
   575                           
   576                           	psect	cinit
   577  0072AE                     __pcinit:
   578                           	callstack 0
   579  0072AE                     start_initialization:
   580                           	callstack 0
   581  0072AE                     __initialization:
   582                           	callstack 0
   583                           
   584                           ; Initialize objects allocated to BANK1 (12 bytes)
   585                           ; load TBLPTR registers with __pidataBANK1
   586  0072AE  0E6E               	movlw	low __pidataBANK1
   587  0072B0  6EF6               	movwf	tblptrl,c
   588  0072B2  0E6D               	movlw	high __pidataBANK1
   589  0072B4  6EF7               	movwf	tblptrh,c
   590  0072B6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   591  0072B8  6EF8               	movwf	tblptru,c
   592  0072BA  EE01  F0AF         	lfsr	0,__pdataBANK1
   593  0072BE  EE10 F00C          	lfsr	1,12
   594  0072C2                     copy_data0:
   595  0072C2  0009               	tblrd		*+
   596  0072C4  CFF5 FFEE          	movff	tablat,postinc0
   597  0072C8  50E5               	movf	postdec1,w,c
   598  0072CA  50E1               	movf	fsr1l,w,c
   599  0072CC  E1FA               	bnz	copy_data0
   600                           
   601                           ; Initialize objects allocated to BANK0 (19 bytes)
   602                           ; load TBLPTR registers with __pidataBANK0
   603  0072CE  0E8B               	movlw	low __pidataBANK0
   604  0072D0  6EF6               	movwf	tblptrl,c
   605  0072D2  0E6D               	movlw	high __pidataBANK0
   606  0072D4  6EF7               	movwf	tblptrh,c
   607  0072D6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   608  0072D8  6EF8               	movwf	tblptru,c
   609  0072DA  EE00  F0C4         	lfsr	0,__pdataBANK0
   610  0072DE  EE10 F013          	lfsr	1,19
   611  0072E2                     copy_data1:
   612  0072E2  0009               	tblrd		*+
   613  0072E4  CFF5 FFEE          	movff	tablat,postinc0
   614  0072E8  50E5               	movf	postdec1,w,c
   615  0072EA  50E1               	movf	fsr1l,w,c
   616  0072EC  E1FA               	bnz	copy_data1
   617                           
   618                           ; Clear objects allocated to BANK1 (14 bytes)
   619  0072EE  EE01  F0A1         	lfsr	0,__pbssBANK1
   620  0072F2  0E0E               	movlw	14
   621  0072F4                     clear_0:
   622  0072F4  6AEE               	clrf	postinc0,c
   623  0072F6  06E8               	decf	wreg,f,c
   624  0072F8  E1FD               	bnz	clear_0
   625                           
   626                           ; Clear objects allocated to BANK0 (46 bytes)
   627  0072FA  EE00  F080         	lfsr	0,__pbssBANK0
   628  0072FE  0E2E               	movlw	46
   629  007300                     clear_1:
   630  007300  6AEE               	clrf	postinc0,c
   631  007302  06E8               	decf	wreg,f,c
   632  007304  E1FD               	bnz	clear_1
   633  007306                     end_of_initialization:
   634                           	callstack 0
   635  007306                     __end_of__initialization:
   636                           	callstack 0
   637  007306  907E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   638  007308  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   639  00730A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   640  00730C  6EF8               	movwf	tblptru,c
   641  00730E  0100               	movlb	0
   642  007310  EF70  F011         	goto	_main	;jump to C main() function
   643                           
   644                           	psect	bssBANK0
   645  000080                     __pbssBANK0:
   646                           	callstack 0
   647  000080                     roundf@F525:
   648                           	callstack 0
   649  000080                     	ds	4
   650  000084                     _nout:
   651                           	callstack 0
   652  000084                     	ds	2
   653  000086                     _width:
   654                           	callstack 0
   655  000086                     	ds	2
   656  000088                     _prec:
   657                           	callstack 0
   658  000088                     	ds	2
   659  00008A                     _flags:
   660                           	callstack 0
   661  00008A                     	ds	2
   662  00008C                     _errno:
   663                           	callstack 0
   664  00008C                     	ds	2
   665  00008E                     _dbuf:
   666                           	callstack 0
   667  00008E                     	ds	32
   668                           
   669                           	psect	dataBANK0
   670  0000C4                     __pdataBANK0:
   671                           	callstack 0
   672  0000C4                     stoa@F1152:
   673                           	callstack 0
   674  0000C4                     	ds	7
   675  0000CB                     	ds	4
   676  0000CF                     	ds	4
   677  0000D3                     _tmr2_prescaler:
   678                           	callstack 0
   679  0000D3                     	ds	4
   680                           
   681                           	psect	bssBANK1
   682  0001A1                     __pbssBANK1:
   683                           	callstack 0
   684  0001A1                     _timer_done:
   685                           	callstack 0
   686  0001A1                     	ds	1
   687  0001A2                     _read_new_char:
   688                           	callstack 0
   689  0001A2                     	ds	1
   690  0001A3                     _msg_sent:
   691                           	callstack 0
   692  0001A3                     	ds	1
   693  0001A4                     _state_changed:
   694                           	callstack 0
   695  0001A4                     	ds	1
   696  0001A5                     _mix_counter:
   697                           	callstack 0
   698  0001A5                     	ds	2
   699  0001A7                     _mix_step_counter:
   700                           	callstack 0
   701  0001A7                     	ds	2
   702  0001A9                     _mix_direction:
   703                           	callstack 0
   704  0001A9                     	ds	2
   705  0001AB                     _mix_current_step:
   706                           	callstack 0
   707  0001AB                     	ds	2
   708  0001AD                     _state:
   709                           	callstack 0
   710  0001AD                     	ds	2
   711                           
   712                           	psect	dataBANK1
   713  0001AF                     __pdataBANK1:
   714                           	callstack 0
   715  0001AF                     _state_msgs:
   716                           	callstack 0
   717  0001AF                     	ds	12
   718                           
   719                           	psect	cstackBANK1
   720  000100                     __pcstackBANK1:
   721                           	callstack 0
   722  000100                     main@greet_str:
   723                           	callstack 0
   724                           
   725                           ; 160 bytes @ 0x0
   726  000100                     	ds	160
   727  0001A0                     main@rx_char:
   728                           	callstack 0
   729                           
   730                           ; 1 bytes @ 0xA0
   731  0001A0                     	ds	1
   732                           
   733                           	psect	cstackBANK0
   734  0000AE                     __pcstackBANK0:
   735                           	callstack 0
   736  0000AE                     _vsnprintf$1365:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x0
   740  0000AE                     	ds	2
   741  0000B0                     vsnprintf@cnt:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x2
   745  0000B0                     	ds	2
   746  0000B2                     vsnprintf@f:
   747                           	callstack 0
   748                           
   749                           ; 6 bytes @ 0x4
   750  0000B2                     	ds	6
   751  0000B8                     ?_snprintf:
   752                           	callstack 0
   753  0000B8                     snprintf@s:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0xA
   757  0000B8                     	ds	2
   758  0000BA                     snprintf@n:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0xC
   762  0000BA                     	ds	2
   763  0000BC                     snprintf@fmt:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0xE
   767  0000BC                     	ds	6
   768  0000C2                     snprintf@ap:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x14
   772  0000C2                     	ds	2
   773                           
   774                           	psect	cstackCOMRAM
   775  000001                     __pcstackCOMRAM:
   776                           	callstack 0
   777  000001                     ?_strlen:
   778                           	callstack 0
   779  000001                     ?_isupper:
   780                           	callstack 0
   781  000001                     ?_isalpha:
   782                           	callstack 0
   783  000001                     ?_isdigit:
   784                           	callstack 0
   785  000001                     ?_strncmp:
   786                           	callstack 0
   787  000001                     ?_isspace:
   788                           	callstack 0
   789  000001                     ?_islower:
   790                           	callstack 0
   791  000001                     ?___wmul:
   792                           	callstack 0
   793  000001                     ?___flmul:
   794                           	callstack 0
   795  000001                     ?___flneg:
   796                           	callstack 0
   797  000001                     ?___aodiv:
   798                           	callstack 0
   799  000001                     ?___aomod:
   800                           	callstack 0
   801  000001                     ?___lodiv:
   802                           	callstack 0
   803  000001                     ?___lomod:
   804                           	callstack 0
   805  000001                     serial_tx_char@val:
   806                           	callstack 0
   807  000001                     get_reg_value@rx_char:
   808                           	callstack 0
   809  000001                     lcd_wr@val:
   810                           	callstack 0
   811  000001                     compute_next_step@current_step:
   812                           	callstack 0
   813  000001                     update_direction_and_counters@counter_step:
   814                           	callstack 0
   815  000001                     mix_exit_condition@counter:
   816                           	callstack 0
   817  000001                     state_translator_micro_to_fpga@state:
   818                           	callstack 0
   819  000001                     ___wmul@multiplier:
   820                           	callstack 0
   821  000001                     isalpha@c:
   822                           	callstack 0
   823  000001                     isdigit@c:
   824                           	callstack 0
   825  000001                     isspace@c:
   826                           	callstack 0
   827  000001                     isupper@c:
   828                           	callstack 0
   829  000001                     fputc@c:
   830                           	callstack 0
   831  000001                     strlen@s:
   832                           	callstack 0
   833  000001                     strncmp@_l:
   834                           	callstack 0
   835  000001                     islower@c:
   836                           	callstack 0
   837  000001                     ___flge@ff1:
   838                           	callstack 0
   839  000001                     ___flneg@f1:
   840                           	callstack 0
   841  000001                     ___flmul@b:
   842                           	callstack 0
   843  000001                     ___aodiv@dividend:
   844                           	callstack 0
   845  000001                     ___aomod@dividend:
   846                           	callstack 0
   847  000001                     ___lodiv@dividend:
   848                           	callstack 0
   849  000001                     ___lomod@dividend:
   850                           	callstack 0
   851                           
   852                           ; 8 bytes @ 0x0
   853  000001                     	ds	1
   854  000002                     lcd_cmd@val:
   855                           	callstack 0
   856  000002                     lcd_dat@val:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0x1
   860  000002                     	ds	1
   861  000003                     ??_lcd_init:
   862  000003                     ??_isupper:
   863  000003                     ??_isalpha:
   864  000003                     ??_isdigit:
   865  000003                     ??_isspace:
   866  000003                     ??_islower:
   867  000003                     compute_next_step@step_direction:
   868                           	callstack 0
   869  000003                     update_direction_and_counters@step_direction:
   870                           	callstack 0
   871  000003                     mix_exit_condition@current_step:
   872                           	callstack 0
   873  000003                     lcd_str@str:
   874                           	callstack 0
   875  000003                     state_translator_fpga_to_micro@state:
   876                           	callstack 0
   877  000003                     ___wmul@multiplicand:
   878                           	callstack 0
   879  000003                     fputc@fp:
   880                           	callstack 0
   881  000003                     strlen@a:
   882                           	callstack 0
   883  000003                     strncmp@_r:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0x2
   887  000003                     	ds	2
   888  000005                     ??_lcd_str:
   889  000005                     ??_compute_next_step:
   890  000005                     ??_fputc:
   891  000005                     state_translator_fpga_to_micro@state_machine_code:
   892                           	callstack 0
   893  000005                     state_translator_micro_to_fpga@state_machine_code:
   894                           	callstack 0
   895  000005                     update_direction_and_counters@counter:
   896                           	callstack 0
   897  000005                     ___wmul@product:
   898                           	callstack 0
   899  000005                     strncmp@n:
   900                           	callstack 0
   901  000005                     ___flge@ff2:
   902                           	callstack 0
   903  000005                     ___flmul@a:
   904                           	callstack 0
   905                           
   906                           ; 4 bytes @ 0x4
   907  000005                     	ds	2
   908  000007                     ??_update_direction_and_counters:
   909  000007                     ??_strncmp:
   910  000007                     ?_toupper:
   911                           	callstack 0
   912  000007                     lcd_str@i:
   913                           	callstack 0
   914  000007                     _isspace$1655:
   915                           	callstack 0
   916  000007                     toupper@c:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x6
   920  000007                     	ds	1
   921  000008                     ?_atoi:
   922                           	callstack 0
   923  000008                     atoi@s:
   924                           	callstack 0
   925  000008                     strncmp@l:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x7
   929  000008                     	ds	1
   930  000009                     ??___flmul:
   931  000009                     ??_toupper:
   932  000009                     ??___flge:
   933  000009                     ___aodiv@divisor:
   934                           	callstack 0
   935  000009                     ___aomod@divisor:
   936                           	callstack 0
   937  000009                     ___lodiv@divisor:
   938                           	callstack 0
   939  000009                     ___lomod@divisor:
   940                           	callstack 0
   941                           
   942                           ; 8 bytes @ 0x8
   943  000009                     	ds	1
   944  00000A                     ??_atoi:
   945  00000A                     ?_stoa:
   946                           	callstack 0
   947  00000A                     stoa@fp:
   948                           	callstack 0
   949  00000A                     fputs@s:
   950                           	callstack 0
   951  00000A                     strncmp@r:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0x9
   955  00000A                     	ds	2
   956  00000C                     stoa@s:
   957                           	callstack 0
   958  00000C                     fputs@fp:
   959                           	callstack 0
   960                           
   961                           ; 2 bytes @ 0xB
   962  00000C                     	ds	1
   963  00000D                     ___flmul@sign:
   964                           	callstack 0
   965  00000D                     _toupper$1715:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0xC
   969  00000D                     	ds	1
   970  00000E                     ??_stoa:
   971  00000E                     fputs@c:
   972                           	callstack 0
   973  00000E                     atoi@neg:
   974                           	callstack 0
   975  00000E                     ___flmul@grs:
   976                           	callstack 0
   977                           
   978                           ; 4 bytes @ 0xD
   979  00000E                     	ds	1
   980  00000F                     fputs@i:
   981                           	callstack 0
   982  00000F                     stoa@nuls:
   983                           	callstack 0
   984                           
   985                           ; 7 bytes @ 0xE
   986  00000F                     	ds	1
   987  000010                     _atoi$1627:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0xF
   991  000010                     	ds	1
   992  000011                     ?_pad:
   993                           	callstack 0
   994  000011                     ___aodiv@counter:
   995                           	callstack 0
   996  000011                     ___aomod@counter:
   997                           	callstack 0
   998  000011                     ___lomod@counter:
   999                           	callstack 0
  1000  000011                     pad@fp:
  1001                           	callstack 0
  1002  000011                     ___lodiv@quotient:
  1003                           	callstack 0
  1004                           
  1005                           ; 8 bytes @ 0x10
  1006  000011                     	ds	1
  1007  000012                     ___aodiv@sign:
  1008                           	callstack 0
  1009  000012                     ___aomod@sign:
  1010                           	callstack 0
  1011  000012                     ___flmul@aexp:
  1012                           	callstack 0
  1013  000012                     _atoi$1629:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x11
  1017  000012                     	ds	1
  1018  000013                     ?_abs:
  1019                           	callstack 0
  1020  000013                     ___flmul@bexp:
  1021                           	callstack 0
  1022  000013                     pad@buf:
  1023                           	callstack 0
  1024  000013                     abs@a:
  1025                           	callstack 0
  1026  000013                     ___aodiv@quotient:
  1027                           	callstack 0
  1028                           
  1029                           ; 8 bytes @ 0x12
  1030  000013                     	ds	1
  1031  000014                     _atoi$1628:
  1032                           	callstack 0
  1033  000014                     ___flmul@prod:
  1034                           	callstack 0
  1035                           
  1036                           ; 4 bytes @ 0x13
  1037  000014                     	ds	1
  1038  000015                     ??_abs:
  1039  000015                     pad@p:
  1040                           	callstack 0
  1041  000015                     atoi@n:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x14
  1045  000015                     	ds	1
  1046  000016                     stoa@i:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x15
  1050  000016                     	ds	1
  1051  000017                     ??_pad:
  1052                           
  1053                           ; 1 bytes @ 0x16
  1054  000017                     	ds	1
  1055  000018                     ___flmul@temp:
  1056                           	callstack 0
  1057  000018                     pad@i:
  1058                           	callstack 0
  1059  000018                     stoa@w:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x17
  1063  000018                     	ds	1
  1064  000019                     ___lodiv@counter:
  1065                           	callstack 0
  1066                           
  1067                           ; 1 bytes @ 0x18
  1068  000019                     	ds	1
  1069  00001A                     ?___fldiv:
  1070                           	callstack 0
  1071  00001A                     pad@w:
  1072                           	callstack 0
  1073  00001A                     stoa@cp:
  1074                           	callstack 0
  1075  00001A                     ___fldiv@b:
  1076                           	callstack 0
  1077                           
  1078                           ; 4 bytes @ 0x19
  1079  00001A                     	ds	2
  1080  00001C                     ?_ctoa:
  1081                           	callstack 0
  1082  00001C                     ?_dtoa:
  1083                           	callstack 0
  1084  00001C                     ?_otoa:
  1085                           	callstack 0
  1086  00001C                     ?_utoa:
  1087                           	callstack 0
  1088  00001C                     ?_xtoa:
  1089                           	callstack 0
  1090  00001C                     ctoa@fp:
  1091                           	callstack 0
  1092  00001C                     dtoa@fp:
  1093                           	callstack 0
  1094  00001C                     otoa@fp:
  1095                           	callstack 0
  1096  00001C                     stoa@p:
  1097                           	callstack 0
  1098  00001C                     utoa@fp:
  1099                           	callstack 0
  1100  00001C                     xtoa@fp:
  1101                           	callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x1B
  1104  00001C                     	ds	2
  1105  00001E                     ctoa@c:
  1106                           	callstack 0
  1107  00001E                     stoa@l:
  1108                           	callstack 0
  1109  00001E                     ___fldiv@a:
  1110                           	callstack 0
  1111  00001E                     dtoa@d:
  1112                           	callstack 0
  1113  00001E                     otoa@d:
  1114                           	callstack 0
  1115  00001E                     utoa@d:
  1116                           	callstack 0
  1117  00001E                     xtoa@d:
  1118                           	callstack 0
  1119                           
  1120                           ; 8 bytes @ 0x1D
  1121  00001E                     	ds	1
  1122  00001F                     ctoa@w:
  1123                           	callstack 0
  1124                           
  1125                           ; 2 bytes @ 0x1E
  1126  00001F                     	ds	3
  1127  000022                     ??___fldiv:
  1128                           
  1129                           ; 1 bytes @ 0x21
  1130  000022                     	ds	4
  1131  000026                     ??_dtoa:
  1132  000026                     ??_otoa:
  1133  000026                     ??_utoa:
  1134  000026                     xtoa@x:
  1135                           	callstack 0
  1136  000026                     ___fldiv@rem:
  1137                           	callstack 0
  1138                           
  1139                           ; 4 bytes @ 0x25
  1140  000026                     	ds	1
  1141  000027                     ??_xtoa:
  1142                           
  1143                           ; 1 bytes @ 0x26
  1144  000027                     	ds	3
  1145  00002A                     ___fldiv@sign:
  1146                           	callstack 0
  1147                           
  1148                           ; 1 bytes @ 0x29
  1149  00002A                     	ds	1
  1150  00002B                     ___fldiv@new_exp:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x2A
  1154  00002B                     	ds	2
  1155  00002D                     ___fldiv@grs:
  1156                           	callstack 0
  1157                           
  1158                           ; 4 bytes @ 0x2C
  1159  00002D                     	ds	1
  1160  00002E                     _dtoa$1451:
  1161                           	callstack 0
  1162  00002E                     otoa@p:
  1163                           	callstack 0
  1164  00002E                     utoa@p:
  1165                           	callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x2D
  1168  00002E                     	ds	1
  1169  00002F                     _xtoa$1487:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x2E
  1173  00002F                     	ds	1
  1174  000030                     dtoa@p:
  1175                           	callstack 0
  1176  000030                     otoa@t:
  1177                           	callstack 0
  1178  000030                     utoa@w:
  1179                           	callstack 0
  1180                           
  1181                           ; 2 bytes @ 0x2F
  1182  000030                     	ds	1
  1183  000031                     ___fldiv@bexp:
  1184                           	callstack 0
  1185  000031                     _xtoa$1488:
  1186                           	callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x30
  1189  000031                     	ds	1
  1190  000032                     ___fldiv@aexp:
  1191                           	callstack 0
  1192  000032                     dtoa@w:
  1193                           	callstack 0
  1194  000032                     otoa@w:
  1195                           	callstack 0
  1196  000032                     utoa@n:
  1197                           	callstack 0
  1198                           
  1199                           ; 8 bytes @ 0x31
  1200  000032                     	ds	1
  1201  000033                     ?___fladd:
  1202                           	callstack 0
  1203  000033                     xtoa@p:
  1204                           	callstack 0
  1205  000033                     ___fladd@b:
  1206                           	callstack 0
  1207                           
  1208                           ; 4 bytes @ 0x32
  1209  000033                     	ds	1
  1210  000034                     dtoa@s:
  1211                           	callstack 0
  1212  000034                     otoa@n:
  1213                           	callstack 0
  1214                           
  1215                           ; 8 bytes @ 0x33
  1216  000034                     	ds	1
  1217  000035                     xtoa@w:
  1218                           	callstack 0
  1219                           
  1220                           ; 2 bytes @ 0x34
  1221  000035                     	ds	1
  1222  000036                     dtoa@n:
  1223                           	callstack 0
  1224                           
  1225                           ; 8 bytes @ 0x35
  1226  000036                     	ds	1
  1227  000037                     ___fladd@a:
  1228                           	callstack 0
  1229  000037                     xtoa@n:
  1230                           	callstack 0
  1231                           
  1232                           ; 8 bytes @ 0x36
  1233  000037                     	ds	3
  1234  00003A                     utoa@i:
  1235                           	callstack 0
  1236                           
  1237                           ; 2 bytes @ 0x39
  1238  00003A                     	ds	1
  1239  00003B                     ??___fladd:
  1240                           
  1241                           ; 1 bytes @ 0x3A
  1242  00003B                     	ds	1
  1243  00003C                     otoa@i:
  1244                           	callstack 0
  1245                           
  1246                           ; 2 bytes @ 0x3B
  1247  00003C                     	ds	2
  1248  00003E                     dtoa@i:
  1249                           	callstack 0
  1250                           
  1251                           ; 2 bytes @ 0x3D
  1252  00003E                     	ds	1
  1253  00003F                     ___fladd@signs:
  1254                           	callstack 0
  1255  00003F                     xtoa@i:
  1256                           	callstack 0
  1257                           
  1258                           ; 2 bytes @ 0x3E
  1259  00003F                     	ds	1
  1260  000040                     ___fladd@aexp:
  1261                           	callstack 0
  1262                           
  1263                           ; 1 bytes @ 0x3F
  1264  000040                     	ds	1
  1265  000041                     ___fladd@bexp:
  1266                           	callstack 0
  1267  000041                     xtoa@c:
  1268                           	callstack 0
  1269                           
  1270                           ; 2 bytes @ 0x40
  1271  000041                     	ds	1
  1272  000042                     ___fladd@grs:
  1273                           	callstack 0
  1274                           
  1275                           ; 1 bytes @ 0x41
  1276  000042                     	ds	1
  1277  000043                     ?_vfpfcnvrt:
  1278                           	callstack 0
  1279  000043                     ?___flsub:
  1280                           	callstack 0
  1281  000043                     vfpfcnvrt@fp:
  1282                           	callstack 0
  1283  000043                     ___flsub@b:
  1284                           	callstack 0
  1285                           
  1286                           ; 4 bytes @ 0x42
  1287  000043                     	ds	2
  1288  000045                     vfpfcnvrt@fmt:
  1289                           	callstack 0
  1290                           
  1291                           ; 2 bytes @ 0x44
  1292  000045                     	ds	2
  1293  000047                     vfpfcnvrt@ap:
  1294                           	callstack 0
  1295  000047                     ___flsub@a:
  1296                           	callstack 0
  1297                           
  1298                           ; 4 bytes @ 0x46
  1299  000047                     	ds	2
  1300  000049                     ??_vfpfcnvrt:
  1301                           
  1302                           ; 1 bytes @ 0x48
  1303  000049                     	ds	2
  1304  00004B                     ?_roundf:
  1305                           	callstack 0
  1306  00004B                     roundf@x:
  1307                           	callstack 0
  1308                           
  1309                           ; 4 bytes @ 0x4A
  1310  00004B                     	ds	2
  1311  00004D                     vfpfcnvrt@cp:
  1312                           	callstack 0
  1313                           
  1314                           ; 2 bytes @ 0x4C
  1315  00004D                     	ds	2
  1316  00004F                     ??_roundf:
  1317  00004F                     vfpfcnvrt@done:
  1318                           	callstack 0
  1319                           
  1320                           ; 2 bytes @ 0x4E
  1321  00004F                     	ds	2
  1322  000051                     _vfpfcnvrt$1502:
  1323                           	callstack 0
  1324                           
  1325                           ; 2 bytes @ 0x50
  1326  000051                     	ds	2
  1327  000053                     _vfpfcnvrt$1503:
  1328                           	callstack 0
  1329  000053                     _roundf$1950:
  1330                           	callstack 0
  1331                           
  1332                           ; 4 bytes @ 0x52
  1333  000053                     	ds	2
  1334  000055                     vfpfcnvrt@ll:
  1335                           	callstack 0
  1336                           
  1337                           ; 8 bytes @ 0x54
  1338  000055                     	ds	2
  1339  000057                     roundf@e:
  1340                           	callstack 0
  1341                           
  1342                           ; 2 bytes @ 0x56
  1343  000057                     	ds	2
  1344  000059                     _roundf$1949:
  1345                           	callstack 0
  1346                           
  1347                           ; 4 bytes @ 0x58
  1348  000059                     	ds	4
  1349  00005D                     vfpfcnvrt@vp:
  1350                           	callstack 0
  1351  00005D                     roundf@u:
  1352                           	callstack 0
  1353                           
  1354                           ; 4 bytes @ 0x5C
  1355  00005D                     	ds	2
  1356  00005F                     vfpfcnvrt@c:
  1357                           	callstack 0
  1358                           
  1359                           ; 1 bytes @ 0x5E
  1360  00005F                     	ds	1
  1361  000060                     vfpfcnvrt@llu:
  1362                           	callstack 0
  1363                           
  1364                           ; 8 bytes @ 0x5F
  1365  000060                     	ds	1
  1366  000061                     roundf@y:
  1367                           	callstack 0
  1368                           
  1369                           ; 4 bytes @ 0x60
  1370  000061                     	ds	4
  1371  000065                     ?___fltol:
  1372                           	callstack 0
  1373  000065                     ___fltol@f1:
  1374                           	callstack 0
  1375                           
  1376                           ; 4 bytes @ 0x64
  1377  000065                     	ds	3
  1378  000068                     ?_vfprintf:
  1379                           	callstack 0
  1380  000068                     vfprintf@fp:
  1381                           	callstack 0
  1382                           
  1383                           ; 2 bytes @ 0x67
  1384  000068                     	ds	1
  1385  000069                     ??___fltol:
  1386                           
  1387                           ; 1 bytes @ 0x68
  1388  000069                     	ds	1
  1389  00006A                     vfprintf@fmt:
  1390                           	callstack 0
  1391                           
  1392                           ; 2 bytes @ 0x69
  1393  00006A                     	ds	2
  1394  00006C                     vfprintf@ap:
  1395                           	callstack 0
  1396                           
  1397                           ; 2 bytes @ 0x6B
  1398  00006C                     	ds	1
  1399  00006D                     ___fltol@sign1:
  1400                           	callstack 0
  1401                           
  1402                           ; 1 bytes @ 0x6C
  1403  00006D                     	ds	1
  1404  00006E                     ___fltol@exp1:
  1405                           	callstack 0
  1406  00006E                     vfprintf@cfmt:
  1407                           	callstack 0
  1408                           
  1409                           ; 2 bytes @ 0x6D
  1410  00006E                     	ds	1
  1411  00006F                     update_pwm_duty_ccp1@time_up:
  1412                           	callstack 0
  1413  00006F                     _init_timer_2$1948:
  1414                           	callstack 0
  1415                           
  1416                           ; 4 bytes @ 0x6E
  1417  00006F                     	ds	1
  1418  000070                     ?_vsnprintf:
  1419                           	callstack 0
  1420  000070                     vsnprintf@s:
  1421                           	callstack 0
  1422                           
  1423                           ; 2 bytes @ 0x6F
  1424  000070                     	ds	2
  1425  000072                     vsnprintf@n:
  1426                           	callstack 0
  1427                           
  1428                           ; 2 bytes @ 0x71
  1429  000072                     	ds	1
  1430  000073                     ??_update_pwm_duty_ccp1:
  1431                           
  1432                           ; 1 bytes @ 0x72
  1433  000073                     	ds	1
  1434  000074                     vsnprintf@fmt:
  1435                           	callstack 0
  1436                           
  1437                           ; 2 bytes @ 0x73
  1438  000074                     	ds	1
  1439  000075                     update_pwm_duty_ccp1@new_duty:
  1440                           	callstack 0
  1441                           
  1442                           ; 2 bytes @ 0x74
  1443  000075                     	ds	1
  1444  000076                     vsnprintf@ap:
  1445                           	callstack 0
  1446                           
  1447                           ; 2 bytes @ 0x75
  1448  000076                     	ds	1
  1449  000077                     update_pwm_duty_ccp1@lsbs_duty:
  1450                           	callstack 0
  1451                           
  1452                           ; 1 bytes @ 0x76
  1453  000077                     	ds	1
  1454  000078                     ??_vsnprintf:
  1455                           
  1456                           ; 1 bytes @ 0x77
  1457  000078                     	ds	4
  1458  00007C                     ??_main:
  1459                           
  1460                           ; 1 bytes @ 0x7B
  1461  00007C                     	ds	2
  1462                           
  1463 ;;
  1464 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1465 ;;
  1466 ;; *************** function _main *****************
  1467 ;; Defined at:
  1468 ;;		line 43 in file "main.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;		None
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;  greet_str     160    0[BANK1 ] PTR const unsigned char 
  1473 ;;		 -> ?_snprintf(2), STR_6(49), STR_5(55), STR_4(39), 
  1474 ;;		 -> STR_3(9), STR_2(63), STR_1(47), 
  1475 ;;  rx_char         1  160[BANK1 ] unsigned char 
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1485 ;;      Params:         0       0       0       0       0       0       0
  1486 ;;      Locals:         0       0     161       0       0       0       0
  1487 ;;      Temps:          2       0       0       0       0       0       0
  1488 ;;      Totals:         2       0     161       0       0       0       0
  1489 ;;Total ram usage:      163 bytes
  1490 ;; Hardware stack levels required when called:   10
  1491 ;; This function calls:
  1492 ;;		_compute_next_step
  1493 ;;		_get_reg_value
  1494 ;;		_init_PORTS
  1495 ;;		_init_USART
  1496 ;;		_init_ccp1
  1497 ;;		_init_interrupts
  1498 ;;		_init_timer_0
  1499 ;;		_init_timer_2
  1500 ;;		_lcd_cmd
  1501 ;;		_lcd_init
  1502 ;;		_lcd_str
  1503 ;;		_mix_exit_condition
  1504 ;;		_serial_tx_char
  1505 ;;		_snprintf
  1506 ;;		_state_translator_fpga_to_micro
  1507 ;;		_state_translator_micro_to_fpga
  1508 ;;		_update_direction_and_counters
  1509 ;; This function is called by:
  1510 ;;		Startup code after reset
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text0
  1515  0022E0                     __ptext0:
  1516                           	callstack 0
  1517  0022E0                     _main:
  1518                           	callstack 21
  1519  0022E0  FFFF               	dw	65535	; assembler added errata NOP
  1520                           
  1521                           ;main.c: 45:     init_PORTS();
  1522  0022E2  EC40  F037         	call	_init_PORTS	;wreg free
  1523  0022E6                     
  1524                           ;main.c: 46:     init_USART();
  1525  0022E6  EC8C  F037         	call	_init_USART	;wreg free
  1526  0022EA                     
  1527                           ;main.c: 47:     init_timer_2();
  1528  0022EA  EC87  F03B         	call	_init_timer_2	;wreg free
  1529  0022EE                     
  1530                           ;main.c: 48:     init_ccp1();
  1531  0022EE  ECDF  F036         	call	_init_ccp1	;wreg free
  1532  0022F2                     
  1533                           ;main.c: 49:     init_interrupts();
  1534  0022F2  ECAB  F036         	call	_init_interrupts	;wreg free
  1535  0022F6                     
  1536                           ;main.c: 50:     lcd_init();
  1537  0022F6  ECFA  F039         	call	_lcd_init	;wreg free
  1538  0022FA                     
  1539                           ;main.c: 51:     lcd_cmd(0x0C);
  1540  0022FA  0E0C               	movlw	12
  1541  0022FC  EC01  F037         	call	_lcd_cmd
  1542  002300                     
  1543                           ;main.c: 53:     lcd_cmd(0x01);
  1544  002300  0E01               	movlw	1
  1545  002302  EC01  F037         	call	_lcd_cmd
  1546  002306                     
  1547                           ;main.c: 54:     lcd_cmd(0x80);
  1548  002306  0E80               	movlw	128
  1549  002308  EC01  F037         	call	_lcd_cmd
  1550  00230C                     
  1551                           ;main.c: 55:     lcd_str("Device has been reset");
  1552  00230C  0EAC               	movlw	low STR_7
  1553  00230E  6E03               	movwf	lcd_str@str^0,c
  1554  002310  0E7F               	movlw	high STR_7
  1555  002312  6E04               	movwf	(lcd_str@str+1)^0,c
  1556  002314  EC39  F03A         	call	_lcd_str	;wreg free
  1557  002318                     
  1558                           ;main.c: 57:     (INTCONbits.GIE = 1);
  1559  002318  8EF2               	bsf	242,7,c	;volatile
  1560  00231A                     
  1561                           ;main.c: 58:     mix_current_step = 0;
  1562  00231A  0E00               	movlw	0
  1563  00231C  0101               	movlb	1	; () banked
  1564  00231E  6FAC               	movwf	(_mix_current_step+1)& (0+255),b
  1565  002320  0E00               	movlw	0
  1566  002322  6FAB               	movwf	_mix_current_step& (0+255),b
  1567  002324                     
  1568                           ; BSR set to: 1
  1569                           ;main.c: 59:     mix_direction = 1;
  1570  002324  0E00               	movlw	0
  1571  002326  6FAA               	movwf	(_mix_direction+1)& (0+255),b
  1572  002328  0E01               	movlw	1
  1573  00232A  6FA9               	movwf	_mix_direction& (0+255),b
  1574  00232C                     
  1575                           ; BSR set to: 1
  1576                           ;main.c: 60:     mix_step_counter = 0;
  1577  00232C  0E00               	movlw	0
  1578  00232E  6FA8               	movwf	(_mix_step_counter+1)& (0+255),b
  1579  002330  0E00               	movlw	0
  1580  002332  6FA7               	movwf	_mix_step_counter& (0+255),b
  1581  002334                     
  1582                           ; BSR set to: 1
  1583                           ;main.c: 61:     mix_counter = 0;
  1584  002334  0E00               	movlw	0
  1585  002336  6FA6               	movwf	(_mix_counter+1)& (0+255),b
  1586  002338  0E00               	movlw	0
  1587  00233A  6FA5               	movwf	_mix_counter& (0+255),b
  1588  00233C                     l5131:
  1589  00233C  FFFF               	dw	65535	; assembler added errata NOP
  1590                           
  1591                           ;main.c: 64:         if (state_changed){
  1592  00233E  0101               	movlb	1	; () banked
  1593  002340  51A4               	movf	_state_changed& (0+255),w,b
  1594  002342  B4D8               	btfsc	status,2,c
  1595  002344  EFA6  F011         	goto	u6131
  1596  002348  EFA9  F011         	goto	u6130
  1597  00234C                     u6131:
  1598  00234C  FFFF               	dw	65535	; assembler added errata NOP
  1599  00234E  EF03  F012         	goto	l5155
  1600  002352                     u6130:
  1601  002352  FFFF               	dw	65535	; assembler added errata NOP
  1602  002354                     
  1603                           ; BSR set to: 1
  1604                           ;main.c: 65:             const char* greet_str[80];;main.c: 66:             if (read_new
      +                          _char){
  1605  002354  51A2               	movf	_read_new_char& (0+255),w,b
  1606  002356  B4D8               	btfsc	status,2,c
  1607  002358  EFB0  F011         	goto	u6141
  1608  00235C  EFB3  F011         	goto	u6140
  1609  002360                     u6141:
  1610  002360  FFFF               	dw	65535	; assembler added errata NOP
  1611  002362  EFD6  F011         	goto	l5145
  1612  002366                     u6140:
  1613  002366  FFFF               	dw	65535	; assembler added errata NOP
  1614  002368                     
  1615                           ; BSR set to: 1
  1616                           ;main.c: 67:                 rx_char = get_reg_value();
  1617  002368  ECBD  F036         	call	_get_reg_value	;wreg free
  1618  00236C  0101               	movlb	1	; () banked
  1619  00236E  6FA0               	movwf	main@rx_char& (0+255),b
  1620  002370                     
  1621                           ; BSR set to: 1
  1622                           ;main.c: 68:                 if (rx_char == 'u'){
  1623  002370  0E75               	movlw	117
  1624  002372  19A0               	xorwf	main@rx_char& (0+255),w,b
  1625  002374  A4D8               	btfss	status,2,c
  1626  002376  EFBF  F011         	goto	u6151
  1627  00237A  EFC2  F011         	goto	u6150
  1628  00237E                     u6151:
  1629  00237E  FFFF               	dw	65535	; assembler added errata NOP
  1630  002380  EFC6  F011         	goto	l114
  1631  002384                     u6150:
  1632  002384  FFFF               	dw	65535	; assembler added errata NOP
  1633  002386                     
  1634                           ; BSR set to: 1
  1635                           ;main.c: 69:                     serial_tx_char(rx_char);
  1636  002386  51A0               	movf	main@rx_char& (0+255),w,b
  1637  002388  ECCF  F036         	call	_serial_tx_char
  1638  00238C                     l114:
  1639  00238C  FFFF               	dw	65535	; assembler added errata NOP
  1640                           
  1641                           ;main.c: 71:                 serial_tx_char(rx_char);
  1642  00238E  0101               	movlb	1	; () banked
  1643  002390  51A0               	movf	main@rx_char& (0+255),w,b
  1644  002392  ECCF  F036         	call	_serial_tx_char
  1645  002396                     
  1646                           ;main.c: 72:                 state_translator_fpga_to_micro(rx_char, &state);
  1647  002396  0EAD               	movlw	low _state
  1648  002398  6E03               	movwf	state_translator_fpga_to_micro@state^0,c
  1649  00239A  0E01               	movlw	high _state
  1650  00239C  6E04               	movwf	(state_translator_fpga_to_micro@state+1)^0,c
  1651  00239E  0101               	movlb	1	; () banked
  1652  0023A0  51A0               	movf	main@rx_char& (0+255),w,b
  1653  0023A2  EC46  F03D         	call	_state_translator_fpga_to_micro
  1654  0023A6                     
  1655                           ;main.c: 73:                 read_new_char = 0;
  1656  0023A6  0E00               	movlw	0
  1657  0023A8  0101               	movlb	1	; () banked
  1658  0023AA  6FA2               	movwf	_read_new_char& (0+255),b
  1659  0023AC                     l5145:
  1660  0023AC  FFFF               	dw	65535	; assembler added errata NOP
  1661                           
  1662                           ; BSR set to: 1
  1663                           ;main.c: 75:             snprintf(greet_str, sizeof(greet_str), "%s", state_msgs[state])
      +                          ;
  1664  0023AE  0E00               	movlw	low main@greet_str
  1665  0023B0  0100               	movlb	0	; () banked
  1666  0023B2  6FB8               	movwf	snprintf@s& (0+255),b
  1667  0023B4  0E01               	movlw	high main@greet_str
  1668  0023B6  6FB9               	movwf	(snprintf@s+1)& (0+255),b
  1669  0023B8  0E00               	movlw	0
  1670  0023BA  6FBB               	movwf	(snprintf@n+1)& (0+255),b
  1671  0023BC  0EA0               	movlw	160
  1672  0023BE  6FBA               	movwf	snprintf@n& (0+255),b
  1673  0023C0  0EFC               	movlw	low STR_8
  1674  0023C2  6FBC               	movwf	snprintf@fmt& (0+255),b
  1675  0023C4  0E7F               	movlw	high STR_8
  1676  0023C6  6FBD               	movwf	(snprintf@fmt+1)& (0+255),b
  1677  0023C8  90D8               	bcf	status,0,c
  1678  0023CA  0101               	movlb	1	; () banked
  1679  0023CC  35AD               	rlcf	_state& (0+255),w,b
  1680  0023CE  6ED9               	movwf	fsr2l,c
  1681  0023D0  35AE               	rlcf	(_state+1)& (0+255),w,b
  1682  0023D2  6EDA               	movwf	fsr2h,c
  1683  0023D4  0EAF               	movlw	low _state_msgs
  1684  0023D6  26D9               	addwf	fsr2l,f,c
  1685  0023D8  0E01               	movlw	high _state_msgs
  1686  0023DA  22DA               	addwfc	fsr2h,f,c
  1687  0023DC  CFDE F0BE          	movff	postinc2,?_snprintf+6
  1688  0023E0  CFDD F0BF          	movff	postdec2,?_snprintf+7
  1689  0023E4  EC56  F037         	call	_snprintf	;wreg free
  1690  0023E8                     
  1691                           ;main.c: 76:             lcd_cmd(0x01);
  1692  0023E8  0E01               	movlw	1
  1693  0023EA  EC01  F037         	call	_lcd_cmd
  1694  0023EE                     
  1695                           ;main.c: 77:             lcd_cmd(0x80);
  1696  0023EE  0E80               	movlw	128
  1697  0023F0  EC01  F037         	call	_lcd_cmd
  1698  0023F4                     
  1699                           ;main.c: 78:             lcd_str(greet_str);
  1700  0023F4  0E00               	movlw	low main@greet_str
  1701  0023F6  6E03               	movwf	lcd_str@str^0,c
  1702  0023F8  0E01               	movlw	high main@greet_str
  1703  0023FA  6E04               	movwf	(lcd_str@str+1)^0,c
  1704  0023FC  EC39  F03A         	call	_lcd_str	;wreg free
  1705  002400                     
  1706                           ;main.c: 80:             state_changed = 0;
  1707  002400  0E00               	movlw	0
  1708  002402  0101               	movlb	1	; () banked
  1709  002404  6FA4               	movwf	_state_changed& (0+255),b
  1710  002406                     l5155:
  1711  002406  FFFF               	dw	65535	; assembler added errata NOP
  1712                           
  1713                           ; BSR set to: 1
  1714                           ;main.c: 84:         if (state == 2){
  1715  002408  0E02               	movlw	2
  1716  00240A  19AD               	xorwf	_state& (0+255),w,b
  1717  00240C  11AE               	iorwf	(_state+1)& (0+255),w,b
  1718  00240E  A4D8               	btfss	status,2,c
  1719  002410  EF0C  F012         	goto	u6161
  1720  002414  EF0F  F012         	goto	u6160
  1721  002418                     u6161:
  1722  002418  FFFF               	dw	65535	; assembler added errata NOP
  1723  00241A  EF13  F012         	goto	l115
  1724  00241E                     u6160:
  1725  00241E  FFFF               	dw	65535	; assembler added errata NOP
  1726  002420                     
  1727                           ; BSR set to: 1
  1728                           ;main.c: 85:             LATBbits.LATB1 = 1;
  1729  002420  828A               	bsf	138,1,c	;volatile
  1730                           
  1731                           ;main.c: 86:         } else {
  1732  002422  EF9E  F011         	goto	l5131
  1733  002426                     l115:
  1734  002426  FFFF               	dw	65535	; assembler added errata NOP
  1735                           
  1736                           ; BSR set to: 1
  1737                           ;main.c: 87:             LATBbits.LATB1 = 0;
  1738  002428  928A               	bcf	138,1,c	;volatile
  1739  00242A                     
  1740                           ; BSR set to: 1
  1741                           ;main.c: 88:             if (state == 0) {
  1742  00242A  51AD               	movf	_state& (0+255),w,b
  1743  00242C  11AE               	iorwf	(_state+1)& (0+255),w,b
  1744  00242E  A4D8               	btfss	status,2,c
  1745  002430  EF1C  F012         	goto	u6171
  1746  002434  EF1F  F012         	goto	u6170
  1747  002438                     u6171:
  1748  002438  FFFF               	dw	65535	; assembler added errata NOP
  1749  00243A  EF3A  F012         	goto	l5167
  1750  00243E                     u6170:
  1751  00243E  FFFF               	dw	65535	; assembler added errata NOP
  1752  002440                     
  1753                           ; BSR set to: 1
  1754                           ;main.c: 89:                 if (!msg_sent){
  1755  002440  51A3               	movf	_msg_sent& (0+255),w,b
  1756  002442  A4D8               	btfss	status,2,c
  1757  002444  EF26  F012         	goto	u6181
  1758  002448  EF29  F012         	goto	u6180
  1759  00244C                     u6181:
  1760  00244C  FFFF               	dw	65535	; assembler added errata NOP
  1761  00244E  EF9E  F011         	goto	l5131
  1762  002452                     u6180:
  1763  002452  FFFF               	dw	65535	; assembler added errata NOP
  1764  002454                     
  1765                           ; BSR set to: 1
  1766                           ;main.c: 90:                     serial_tx_char(state_translator_micro_to_fpga(&state));
  1767  002454  0EAD               	movlw	low _state
  1768  002456  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  1769  002458  0E01               	movlw	high _state
  1770  00245A  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  1771  00245C  ECC4  F03D         	call	_state_translator_micro_to_fpga	;wreg free
  1772  002460  ECCF  F036         	call	_serial_tx_char
  1773  002464                     
  1774                           ;main.c: 91:                     msg_sent = 1;
  1775  002464  0E01               	movlw	1
  1776  002466  0101               	movlb	1	; () banked
  1777  002468  6FA3               	movwf	_msg_sent& (0+255),b
  1778  00246A  EF9E  F011         	goto	l5131
  1779  00246E                     l118:
  1780  00246E  FFFF               	dw	65535	; assembler added errata NOP
  1781                           
  1782                           ; BSR set to: 1
  1783                           ;main.c: 93:             } else if (state == 1){
  1784  002470  EF9E  F011         	goto	l5131
  1785  002474                     l5167:
  1786  002474  FFFF               	dw	65535	; assembler added errata NOP
  1787                           
  1788                           ; BSR set to: 1
  1789  002476  05AD               	decf	_state& (0+255),w,b
  1790  002478  11AE               	iorwf	(_state+1)& (0+255),w,b
  1791  00247A  A4D8               	btfss	status,2,c
  1792  00247C  EF42  F012         	goto	u6191
  1793  002480  EF45  F012         	goto	u6190
  1794  002484                     u6191:
  1795  002484  FFFF               	dw	65535	; assembler added errata NOP
  1796  002486  EF56  F012         	goto	l5173
  1797  00248A                     u6190:
  1798  00248A  FFFF               	dw	65535	; assembler added errata NOP
  1799  00248C                     
  1800                           ; BSR set to: 1
  1801                           ;main.c: 94:                 state = 2;
  1802  00248C  0E00               	movlw	0
  1803  00248E  6FAE               	movwf	(_state+1)& (0+255),b
  1804  002490  0E02               	movlw	2
  1805  002492  6FAD               	movwf	_state& (0+255),b
  1806                           
  1807                           ;main.c: 95:                 state_changed = 1;
  1808  002494  0E01               	movlw	1
  1809  002496  6FA4               	movwf	_state_changed& (0+255),b
  1810  002498                     
  1811                           ; BSR set to: 1
  1812                           ;main.c: 96:                 serial_tx_char(state_translator_micro_to_fpga(&state));
  1813  002498  0EAD               	movlw	low _state
  1814  00249A  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  1815  00249C  0E01               	movlw	high _state
  1816  00249E  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  1817  0024A0  ECC4  F03D         	call	_state_translator_micro_to_fpga	;wreg free
  1818  0024A4  ECCF  F036         	call	_serial_tx_char
  1819                           
  1820                           ;main.c: 97:             } else if (state == 3){
  1821  0024A8  EF9E  F011         	goto	l5131
  1822  0024AC                     l5173:
  1823  0024AC  FFFF               	dw	65535	; assembler added errata NOP
  1824                           
  1825                           ; BSR set to: 1
  1826  0024AE  0E03               	movlw	3
  1827  0024B0  19AD               	xorwf	_state& (0+255),w,b
  1828  0024B2  11AE               	iorwf	(_state+1)& (0+255),w,b
  1829  0024B4  A4D8               	btfss	status,2,c
  1830  0024B6  EF5F  F012         	goto	u6201
  1831  0024BA  EF62  F012         	goto	u6200
  1832  0024BE                     u6201:
  1833  0024BE  FFFF               	dw	65535	; assembler added errata NOP
  1834  0024C0  EF8C  F012         	goto	l5183
  1835  0024C4                     u6200:
  1836  0024C4  FFFF               	dw	65535	; assembler added errata NOP
  1837  0024C6                     
  1838                           ; BSR set to: 1
  1839                           ;main.c: 98:                 if (timer_done){
  1840  0024C6  51A1               	movf	_timer_done& (0+255),w,b
  1841  0024C8  B4D8               	btfsc	status,2,c
  1842  0024CA  EF69  F012         	goto	u6211
  1843  0024CE  EF6C  F012         	goto	u6210
  1844  0024D2                     u6211:
  1845  0024D2  FFFF               	dw	65535	; assembler added errata NOP
  1846  0024D4  EF7D  F012         	goto	l123
  1847  0024D8                     u6210:
  1848  0024D8  FFFF               	dw	65535	; assembler added errata NOP
  1849  0024DA                     
  1850                           ; BSR set to: 1
  1851                           ;main.c: 99:                     state = 2;
  1852  0024DA  0E00               	movlw	0
  1853  0024DC  6FAE               	movwf	(_state+1)& (0+255),b
  1854  0024DE  0E02               	movlw	2
  1855  0024E0  6FAD               	movwf	_state& (0+255),b
  1856                           
  1857                           ;main.c: 100:                     state_changed = 1;
  1858  0024E2  0E01               	movlw	1
  1859  0024E4  6FA4               	movwf	_state_changed& (0+255),b
  1860  0024E6                     
  1861                           ; BSR set to: 1
  1862                           ;main.c: 101:                     serial_tx_char(state_translator_micro_to_fpga(&state))
      +                          ;
  1863  0024E6  0EAD               	movlw	low _state
  1864  0024E8  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  1865  0024EA  0E01               	movlw	high _state
  1866  0024EC  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  1867  0024EE  ECC4  F03D         	call	_state_translator_micro_to_fpga	;wreg free
  1868  0024F2  ECCF  F036         	call	_serial_tx_char
  1869                           
  1870                           ;main.c: 103:                 } else {
  1871  0024F6  EF9E  F011         	goto	l5131
  1872  0024FA                     l123:
  1873  0024FA  FFFF               	dw	65535	; assembler added errata NOP
  1874                           
  1875                           ; BSR set to: 1
  1876                           ;main.c: 104:                     if (T0CONbits.TMR0ON == 0){
  1877  0024FC  BED5               	btfsc	213,7,c	;volatile
  1878  0024FE  EF83  F012         	goto	u6221
  1879  002502  EF86  F012         	goto	u6220
  1880  002506                     u6221:
  1881  002506  FFFF               	dw	65535	; assembler added errata NOP
  1882  002508  EF37  F012         	goto	l118
  1883  00250C                     u6220:
  1884  00250C  FFFF               	dw	65535	; assembler added errata NOP
  1885  00250E                     l5181:
  1886  00250E  FFFF               	dw	65535	; assembler added errata NOP
  1887                           
  1888                           ; BSR set to: 1
  1889                           ;main.c: 105:                         init_timer_0();
  1890  002510  ECF0  F036         	call	_init_timer_0	;wreg free
  1891  002514  EF9E  F011         	goto	l5131
  1892  002518                     l5183:
  1893  002518  FFFF               	dw	65535	; assembler added errata NOP
  1894                           
  1895                           ; BSR set to: 1
  1896  00251A  0E04               	movlw	4
  1897  00251C  19AD               	xorwf	_state& (0+255),w,b
  1898  00251E  11AE               	iorwf	(_state+1)& (0+255),w,b
  1899  002520  A4D8               	btfss	status,2,c
  1900  002522  EF95  F012         	goto	u6231
  1901  002526  EF98  F012         	goto	u6230
  1902  00252A                     u6231:
  1903  00252A  FFFF               	dw	65535	; assembler added errata NOP
  1904  00252C  EF3B  F013         	goto	l5231
  1905  002530                     u6230:
  1906  002530  FFFF               	dw	65535	; assembler added errata NOP
  1907  002532  EF17  F013         	goto	l5229
  1908  002536                     l5187:
  1909  002536  FFFF               	dw	65535	; assembler added errata NOP
  1910                           
  1911                           ; BSR set to: 1
  1912                           ;main.c: 112:                         LATA = 0x01;
  1913  002538  0E01               	movlw	1
  1914  00253A  6E89               	movwf	137,c	;volatile
  1915  00253C                     
  1916                           ; BSR set to: 1
  1917                           ;main.c: 113:                         compute_next_step(&mix_current_step, mix_direction
      +                          );
  1918  00253C  0EAB               	movlw	low _mix_current_step
  1919  00253E  6E01               	movwf	compute_next_step@current_step^0,c
  1920  002540  0E01               	movlw	high _mix_current_step
  1921  002542  6E02               	movwf	(compute_next_step@current_step+1)^0,c
  1922  002544  C1A9  F003         	movff	_mix_direction,compute_next_step@step_direction
  1923  002548  C1AA  F004         	movff	_mix_direction+1,compute_next_step@step_direction+1
  1924  00254C  EC7D  F03A         	call	_compute_next_step	;wreg free
  1925  002550                     
  1926                           ;main.c: 114:                         update_direction_and_counters(&mix_step_counter, &
      +                          mix_direction, &mix_counter);
  1927  002550  0EA7               	movlw	low _mix_step_counter
  1928  002552  6E01               	movwf	update_direction_and_counters@counter_step^0,c
  1929  002554  0E01               	movlw	high _mix_step_counter
  1930  002556  6E02               	movwf	(update_direction_and_counters@counter_step+1)^0,c
  1931  002558  0EA9               	movlw	low _mix_direction
  1932  00255A  6E03               	movwf	update_direction_and_counters@step_direction^0,c
  1933  00255C  0E01               	movlw	high _mix_direction
  1934  00255E  6E04               	movwf	(update_direction_and_counters@step_direction+1)^0,c
  1935  002560  0EA5               	movlw	low _mix_counter
  1936  002562  6E05               	movwf	update_direction_and_counters@counter^0,c
  1937  002564  0E01               	movlw	high _mix_counter
  1938  002566  6E06               	movwf	(update_direction_and_counters@counter+1)^0,c
  1939  002568  ECC8  F03A         	call	_update_direction_and_counters	;wreg free
  1940  00256C                     
  1941                           ;main.c: 115:                         mix_exit_condition(mix_counter, &mix_current_step)
      +                          ;
  1942  00256C  C1A5  F001         	movff	_mix_counter,mix_exit_condition@counter
  1943  002570  C1A6  F002         	movff	_mix_counter+1,mix_exit_condition@counter+1
  1944  002574  0EAB               	movlw	low _mix_current_step
  1945  002576  6E03               	movwf	mix_exit_condition@current_step^0,c
  1946  002578  0E01               	movlw	high _mix_current_step
  1947  00257A  6E04               	movwf	(mix_exit_condition@current_step+1)^0,c
  1948  00257C  EC70  F037         	call	_mix_exit_condition	;wreg free
  1949  002580                     
  1950                           ;main.c: 116:                         _delay((unsigned long)((10)*(4000000/4000.0)));
  1951  002580  0E0A               	movlw	10
  1952  002582  6E7C               	movwf	??_main^0,c
  1953  002584  0EBE               	movlw	190
  1954  002586                     u6317:
  1955  002586  FFFF               	dw	65535	; errata NOP
  1956  002588  2EE8               	decfsz	wreg,f,c
  1957  00258A  D7FD               	bra	u6317
  1958  00258C  2E7C               	decfsz	??_main^0,f,c
  1959  00258E  D7FB               	bra	u6317
  1960  002590  D000               	nop2	
  1961                           
  1962                           ;main.c: 117:                         break;
  1963  002592  EF9E  F011         	goto	l5131
  1964  002596                     l5197:
  1965  002596  FFFF               	dw	65535	; assembler added errata NOP
  1966                           
  1967                           ; BSR set to: 1
  1968                           ;main.c: 119:                         LATA = 0x02;
  1969  002598  0E02               	movlw	2
  1970  00259A  6E89               	movwf	137,c	;volatile
  1971  00259C                     l5199:
  1972  00259C  FFFF               	dw	65535	; assembler added errata NOP
  1973                           
  1974                           ; BSR set to: 1
  1975                           ;main.c: 120:                         compute_next_step(&mix_current_step, mix_direction
      +                          );
  1976  00259E  0EAB               	movlw	low _mix_current_step
  1977  0025A0  6E01               	movwf	compute_next_step@current_step^0,c
  1978  0025A2  0E01               	movlw	high _mix_current_step
  1979  0025A4  6E02               	movwf	(compute_next_step@current_step+1)^0,c
  1980  0025A6  C1A9  F003         	movff	_mix_direction,compute_next_step@step_direction
  1981  0025AA  C1AA  F004         	movff	_mix_direction+1,compute_next_step@step_direction+1
  1982  0025AE  EC7D  F03A         	call	_compute_next_step	;wreg free
  1983  0025B2                     
  1984                           ;main.c: 121:                         update_direction_and_counters(&mix_step_counter, &
      +                          mix_direction, &mix_counter);
  1985  0025B2  0EA7               	movlw	low _mix_step_counter
  1986  0025B4  6E01               	movwf	update_direction_and_counters@counter_step^0,c
  1987  0025B6  0E01               	movlw	high _mix_step_counter
  1988  0025B8  6E02               	movwf	(update_direction_and_counters@counter_step+1)^0,c
  1989  0025BA  0EA9               	movlw	low _mix_direction
  1990  0025BC  6E03               	movwf	update_direction_and_counters@step_direction^0,c
  1991  0025BE  0E01               	movlw	high _mix_direction
  1992  0025C0  6E04               	movwf	(update_direction_and_counters@step_direction+1)^0,c
  1993  0025C2  0EA5               	movlw	low _mix_counter
  1994  0025C4  6E05               	movwf	update_direction_and_counters@counter^0,c
  1995  0025C6  0E01               	movlw	high _mix_counter
  1996  0025C8  6E06               	movwf	(update_direction_and_counters@counter+1)^0,c
  1997  0025CA  ECC8  F03A         	call	_update_direction_and_counters	;wreg free
  1998  0025CE                     
  1999                           ;main.c: 122:                         mix_exit_condition(mix_counter, &mix_current_step)
      +                          ;
  2000  0025CE  C1A5  F001         	movff	_mix_counter,mix_exit_condition@counter
  2001  0025D2  C1A6  F002         	movff	_mix_counter+1,mix_exit_condition@counter+1
  2002  0025D6  0EAB               	movlw	low _mix_current_step
  2003  0025D8  6E03               	movwf	mix_exit_condition@current_step^0,c
  2004  0025DA  0E01               	movlw	high _mix_current_step
  2005  0025DC  6E04               	movwf	(mix_exit_condition@current_step+1)^0,c
  2006  0025DE  EC70  F037         	call	_mix_exit_condition	;wreg free
  2007  0025E2                     
  2008                           ;main.c: 123:                         _delay((unsigned long)((1)*(4000000/4000.0)));
  2009  0025E2  0EC8               	movlw	200
  2010  0025E4                     u6327:
  2011  0025E4  FFFF               	dw	65535	; errata NOP
  2012  0025E6  F000               	nop	
  2013  0025E8  2EE8               	decfsz	wreg,f,c
  2014  0025EA  D7FC               	bra	u6327
  2015                           
  2016                           ;main.c: 124:                         break;
  2017  0025EC  EF9E  F011         	goto	l5131
  2018  0025F0                     l5207:
  2019  0025F0  FFFF               	dw	65535	; assembler added errata NOP
  2020                           
  2021                           ; BSR set to: 1
  2022                           ;main.c: 126:                         LATA = 0x04;
  2023  0025F2  0E04               	movlw	4
  2024  0025F4  6E89               	movwf	137,c	;volatile
  2025  0025F6  EFCE  F012         	goto	l5199
  2026  0025FA                     l5217:
  2027  0025FA  FFFF               	dw	65535	; assembler added errata NOP
  2028                           
  2029                           ; BSR set to: 1
  2030                           ;main.c: 133:                         LATA = 0x08;
  2031  0025FC  0E08               	movlw	8
  2032  0025FE  6E89               	movwf	137,c	;volatile
  2033  002600  EFCE  F012         	goto	l5199
  2034  002604                     l5227:
  2035  002604  FFFF               	dw	65535	; assembler added errata NOP
  2036                           
  2037                           ; BSR set to: 1
  2038                           ;main.c: 140:                         state = 2;
  2039  002606  0E00               	movlw	0
  2040  002608  6FAE               	movwf	(_state+1)& (0+255),b
  2041  00260A  0E02               	movlw	2
  2042  00260C  6FAD               	movwf	_state& (0+255),b
  2043                           
  2044                           ;main.c: 141:                         state_changed = 1;
  2045  00260E  0E01               	movlw	1
  2046  002610  6FA4               	movwf	_state_changed& (0+255),b
  2047                           
  2048                           ;main.c: 142:                         mix_direction = 1;
  2049  002612  0E00               	movlw	0
  2050  002614  6FAA               	movwf	(_mix_direction+1)& (0+255),b
  2051  002616  0E01               	movlw	1
  2052  002618  6FA9               	movwf	_mix_direction& (0+255),b
  2053                           
  2054                           ;main.c: 143:                         mix_step_counter = 0;
  2055  00261A  0E00               	movlw	0
  2056  00261C  6FA8               	movwf	(_mix_step_counter+1)& (0+255),b
  2057  00261E  0E00               	movlw	0
  2058  002620  6FA7               	movwf	_mix_step_counter& (0+255),b
  2059                           
  2060                           ;main.c: 144:                         mix_counter = 0;
  2061  002622  0E00               	movlw	0
  2062  002624  6FA6               	movwf	(_mix_counter+1)& (0+255),b
  2063  002626  0E00               	movlw	0
  2064  002628  6FA5               	movwf	_mix_counter& (0+255),b
  2065                           
  2066                           ;main.c: 146:                 }
  2067  00262A  EF9E  F011         	goto	l5131
  2068  00262E                     l5229:
  2069  00262E  FFFF               	dw	65535	; assembler added errata NOP
  2070                           
  2071                           ; BSR set to: 1
  2072  002630  C1AB  F07C         	movff	_mix_current_step,??_main
  2073  002634  C1AC  F07D         	movff	_mix_current_step+1,??_main+1
  2074                           
  2075                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2076                           ; Switch size 1, requested type "simple"
  2077                           ; Number of cases is 1, Range of values is 0 to 0
  2078                           ; switch strategies available:
  2079                           ; Name         Instructions Cycles
  2080                           ; simple_byte            4     3 (average)
  2081                           ;	Chosen strategy is simple_byte
  2082  002638  507D               	movf	(??_main+1)^0,w,c
  2083  00263A  0A00               	xorlw	0	; case 0
  2084  00263C  B4D8               	btfsc	status,2,c
  2085  00263E  EF23  F013         	goto	l5343
  2086  002642  EF9E  F011         	goto	l5131
  2087  002646                     l5343:
  2088  002646  FFFF               	dw	65535	; assembler added errata NOP
  2089                           
  2090                           ; BSR set to: 1
  2091                           ; Switch size 1, requested type "simple"
  2092                           ; Number of cases is 5, Range of values is 0 to 10
  2093                           ; switch strategies available:
  2094                           ; Name         Instructions Cycles
  2095                           ; simple_byte           16     9 (average)
  2096                           ;	Chosen strategy is simple_byte
  2097  002648  507C               	movf	??_main^0,w,c
  2098  00264A  0A00               	xorlw	0	; case 0
  2099  00264C  B4D8               	btfsc	status,2,c
  2100  00264E  EF9B  F012         	goto	l5187
  2101  002652  0A01               	xorlw	1	; case 1
  2102  002654  B4D8               	btfsc	status,2,c
  2103  002656  EFCB  F012         	goto	l5197
  2104  00265A  0A03               	xorlw	3	; case 2
  2105  00265C  B4D8               	btfsc	status,2,c
  2106  00265E  EFF8  F012         	goto	l5207
  2107  002662  0A01               	xorlw	1	; case 3
  2108  002664  B4D8               	btfsc	status,2,c
  2109  002666  EFFD  F012         	goto	l5217
  2110  00266A  0A09               	xorlw	9	; case 10
  2111  00266C  B4D8               	btfsc	status,2,c
  2112  00266E  EF02  F013         	goto	l5227
  2113  002672  EF9E  F011         	goto	l5131
  2114  002676                     l5231:
  2115  002676  FFFF               	dw	65535	; assembler added errata NOP
  2116                           
  2117                           ; BSR set to: 1
  2118  002678  0E05               	movlw	5
  2119  00267A  19AD               	xorwf	_state& (0+255),w,b
  2120  00267C  11AE               	iorwf	(_state+1)& (0+255),w,b
  2121  00267E  A4D8               	btfss	status,2,c
  2122  002680  EF44  F013         	goto	u6241
  2123  002684  EF47  F013         	goto	u6240
  2124  002688                     u6241:
  2125  002688  FFFF               	dw	65535	; assembler added errata NOP
  2126  00268A  EF37  F012         	goto	l118
  2127  00268E                     u6240:
  2128  00268E  FFFF               	dw	65535	; assembler added errata NOP
  2129  002690                     
  2130                           ; BSR set to: 1
  2131                           ;main.c: 148:                 if (timer_done){
  2132  002690  51A1               	movf	_timer_done& (0+255),w,b
  2133  002692  B4D8               	btfsc	status,2,c
  2134  002694  EF4E  F013         	goto	u6251
  2135  002698  EF51  F013         	goto	u6250
  2136  00269C                     u6251:
  2137  00269C  FFFF               	dw	65535	; assembler added errata NOP
  2138  00269E  EF62  F013         	goto	l137
  2139  0026A2                     u6250:
  2140  0026A2  FFFF               	dw	65535	; assembler added errata NOP
  2141  0026A4                     
  2142                           ; BSR set to: 1
  2143                           ;main.c: 149:                     state = 2;
  2144  0026A4  0E00               	movlw	0
  2145  0026A6  6FAE               	movwf	(_state+1)& (0+255),b
  2146  0026A8  0E02               	movlw	2
  2147  0026AA  6FAD               	movwf	_state& (0+255),b
  2148                           
  2149                           ;main.c: 150:                     state_changed = 1;
  2150  0026AC  0E01               	movlw	1
  2151  0026AE  6FA4               	movwf	_state_changed& (0+255),b
  2152  0026B0                     
  2153                           ; BSR set to: 1
  2154                           ;main.c: 151:                     serial_tx_char(state_translator_micro_to_fpga(&state))
      +                          ;
  2155  0026B0  0EAD               	movlw	low _state
  2156  0026B2  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  2157  0026B4  0E01               	movlw	high _state
  2158  0026B6  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  2159  0026B8  ECC4  F03D         	call	_state_translator_micro_to_fpga	;wreg free
  2160  0026BC  ECCF  F036         	call	_serial_tx_char
  2161                           
  2162                           ;main.c: 152:                 } else {
  2163  0026C0  EF9E  F011         	goto	l5131
  2164  0026C4                     l137:
  2165  0026C4  FFFF               	dw	65535	; assembler added errata NOP
  2166                           
  2167                           ; BSR set to: 1
  2168                           ;main.c: 153:                     if (T0CONbits.TMR0ON == 0){
  2169  0026C6  BED5               	btfsc	213,7,c	;volatile
  2170  0026C8  EF68  F013         	goto	u6261
  2171  0026CC  EF6B  F013         	goto	u6260
  2172  0026D0                     u6261:
  2173  0026D0  FFFF               	dw	65535	; assembler added errata NOP
  2174  0026D2  EF37  F012         	goto	l118
  2175  0026D6                     u6260:
  2176  0026D6  FFFF               	dw	65535	; assembler added errata NOP
  2177  0026D8  EF87  F012         	goto	l5181
  2178  0026DC  EF3B  F000         	goto	start
  2179  0026E0                     __end_of_main:
  2180                           	callstack 0
  2181                           
  2182 ;; *************** function _update_direction_and_counters *****************
  2183 ;; Defined at:
  2184 ;;		line 172 in file "main.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;  counter_step    2    0[COMRAM] PTR int 
  2187 ;;		 -> mix_step_counter(2), 
  2188 ;;  step_directi    2    2[COMRAM] PTR int 
  2189 ;;		 -> mix_direction(2), 
  2190 ;;  counter         2    4[COMRAM] PTR int 
  2191 ;;		 -> mix_counter(2), 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;		None
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  1    wreg      void 
  2196 ;; Registers used:
  2197 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2203 ;;      Params:         6       0       0       0       0       0       0
  2204 ;;      Locals:         0       0       0       0       0       0       0
  2205 ;;      Temps:          2       0       0       0       0       0       0
  2206 ;;      Totals:         8       0       0       0       0       0       0
  2207 ;;Total ram usage:        8 bytes
  2208 ;; Hardware stack levels used:    1
  2209 ;; Hardware stack levels required when called:    1
  2210 ;; This function calls:
  2211 ;;		Nothing
  2212 ;; This function is called by:
  2213 ;;		_main
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           	psect	text1
  2218  007590                     __ptext1:
  2219                           	callstack 0
  2220  007590                     _update_direction_and_counters:
  2221                           	callstack 0
  2222  007590  FFFF               	dw	65535	; assembler added errata NOP
  2223  007592                     
  2224                           ;main.c: 173:     *counter_step = *counter_step + 1;
  2225  007592  C001  FFD9         	movff	update_direction_and_counters@counter_step,fsr2l
  2226  007596  C002  FFDA         	movff	update_direction_and_counters@counter_step+1,fsr2h
  2227  00759A  CFDE F007          	movff	postinc2,??_update_direction_and_counters
  2228  00759E  CFDD F008          	movff	postdec2,??_update_direction_and_counters+1
  2229  0075A2  0E01               	movlw	1
  2230  0075A4  2607               	addwf	??_update_direction_and_counters^0,f,c
  2231  0075A6  0E00               	movlw	0
  2232  0075A8  2208               	addwfc	(??_update_direction_and_counters+1)^0,f,c
  2233  0075AA  C001  FFD9         	movff	update_direction_and_counters@counter_step,fsr2l
  2234  0075AE  C002  FFDA         	movff	update_direction_and_counters@counter_step+1,fsr2h
  2235  0075B2  C007  FFDE         	movff	??_update_direction_and_counters,postinc2
  2236  0075B6  C008  FFDD         	movff	??_update_direction_and_counters+1,postdec2
  2237                           
  2238                           ;main.c: 174:     if (*counter_step >= 96){
  2239  0075BA  C001  FFD9         	movff	update_direction_and_counters@counter_step,fsr2l
  2240  0075BE  C002  FFDA         	movff	update_direction_and_counters@counter_step+1,fsr2h
  2241  0075C2  0E01               	movlw	1
  2242  0075C4  BEDB               	btfsc	plusw2,7,c
  2243  0075C6  EFEF  F03A         	goto	u6101
  2244  0075CA  0E01               	movlw	1
  2245  0075CC  50DB               	movf	plusw2,w,c
  2246  0075CE  E10A               	bnz	u6100
  2247  0075D0  0E60               	movlw	96
  2248  0075D2  5CDE               	subwf	postinc2,w,c
  2249  0075D4  A0D8               	btfss	status,0,c
  2250  0075D6  EFEF  F03A         	goto	u6101
  2251  0075DA  EFF2  F03A         	goto	u6100
  2252  0075DE                     u6101:
  2253  0075DE  FFFF               	dw	65535	; assembler added errata NOP
  2254  0075E0  EF23  F03B         	goto	l152
  2255  0075E4                     u6100:
  2256  0075E4  FFFF               	dw	65535	; assembler added errata NOP
  2257  0075E6                     
  2258                           ;main.c: 175:         *counter_step = 0;
  2259  0075E6  C001  FFD9         	movff	update_direction_and_counters@counter_step,fsr2l
  2260  0075EA  C002  FFDA         	movff	update_direction_and_counters@counter_step+1,fsr2h
  2261  0075EE  0E00               	movlw	0
  2262  0075F0  6EDE               	movwf	postinc2,c
  2263  0075F2  0E00               	movlw	0
  2264  0075F4  6EDD               	movwf	postdec2,c
  2265  0075F6                     
  2266                           ;main.c: 176:         *counter = *counter + 1;
  2267  0075F6  C005  FFD9         	movff	update_direction_and_counters@counter,fsr2l
  2268  0075FA  C006  FFDA         	movff	update_direction_and_counters@counter+1,fsr2h
  2269  0075FE  CFDE F007          	movff	postinc2,??_update_direction_and_counters
  2270  007602  CFDD F008          	movff	postdec2,??_update_direction_and_counters+1
  2271  007606  0E01               	movlw	1
  2272  007608  2607               	addwf	??_update_direction_and_counters^0,f,c
  2273  00760A  0E00               	movlw	0
  2274  00760C  2208               	addwfc	(??_update_direction_and_counters+1)^0,f,c
  2275  00760E  C005  FFD9         	movff	update_direction_and_counters@counter,fsr2l
  2276  007612  C006  FFDA         	movff	update_direction_and_counters@counter+1,fsr2h
  2277  007616  C007  FFDE         	movff	??_update_direction_and_counters,postinc2
  2278  00761A  C008  FFDD         	movff	??_update_direction_and_counters+1,postdec2
  2279  00761E                     
  2280                           ;main.c: 177:         *step_direction = *step_direction *(-1);
  2281  00761E  C003  FFD9         	movff	update_direction_and_counters@step_direction,fsr2l
  2282  007622  C004  FFDA         	movff	update_direction_and_counters@step_direction+1,fsr2h
  2283  007626  CFDE F007          	movff	postinc2,??_update_direction_and_counters
  2284  00762A  CFDD F008          	movff	postdec2,??_update_direction_and_counters+1
  2285  00762E  1E07               	comf	??_update_direction_and_counters^0,f,c
  2286  007630  1E08               	comf	(??_update_direction_and_counters+1)^0,f,c
  2287  007632  4A07               	infsnz	??_update_direction_and_counters^0,f,c
  2288  007634  2A08               	incf	(??_update_direction_and_counters+1)^0,f,c
  2289  007636  C003  FFD9         	movff	update_direction_and_counters@step_direction,fsr2l
  2290  00763A  C004  FFDA         	movff	update_direction_and_counters@step_direction+1,fsr2h
  2291  00763E  C007  FFDE         	movff	??_update_direction_and_counters,postinc2
  2292  007642  C008  FFDD         	movff	??_update_direction_and_counters+1,postdec2
  2293  007646                     l152:
  2294  007646  FFFF               	dw	65535	; assembler added errata NOP
  2295  007648  0012               	return		;funcret
  2296  00764A  FFFF               	dw	65535	; errata NOP
  2297  00764C                     __end_of_update_direction_and_counters:
  2298                           	callstack 0
  2299                           
  2300 ;; *************** function _state_translator_micro_to_fpga *****************
  2301 ;; Defined at:
  2302 ;;		line 19 in file "utils.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;  state           2    0[COMRAM] PTR int 
  2305 ;;		 -> state(2), 
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;  state_machin    1    4[COMRAM] unsigned char 
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  1    wreg      unsigned char 
  2310 ;; Registers used:
  2311 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2317 ;;      Params:         2       0       0       0       0       0       0
  2318 ;;      Locals:         1       0       0       0       0       0       0
  2319 ;;      Temps:          2       0       0       0       0       0       0
  2320 ;;      Totals:         5       0       0       0       0       0       0
  2321 ;;Total ram usage:        5 bytes
  2322 ;; Hardware stack levels used:    1
  2323 ;; Hardware stack levels required when called:    1
  2324 ;; This function calls:
  2325 ;;		Nothing
  2326 ;; This function is called by:
  2327 ;;		_main
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           	psect	text2
  2332  007B88                     __ptext2:
  2333                           	callstack 0
  2334  007B88                     _state_translator_micro_to_fpga:
  2335                           	callstack 0
  2336  007B88  FFFF               	dw	65535	; assembler added errata NOP
  2337  007B8A                     
  2338                           ;utils.c: 20:     unsigned char state_machine_code;;utils.c: 21:     if (*state == 0){
  2339  007B8A  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2340  007B8E  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2341  007B92  50DE               	movf	postinc2,w,c
  2342  007B94  10DE               	iorwf	postinc2,w,c
  2343  007B96  A4D8               	btfss	status,2,c
  2344  007B98  EFD0  F03D         	goto	u6021
  2345  007B9C  EFD3  F03D         	goto	u6020
  2346  007BA0                     u6021:
  2347  007BA0  FFFF               	dw	65535	; assembler added errata NOP
  2348  007BA2  EFD8  F03D         	goto	l5027
  2349  007BA6                     u6020:
  2350  007BA6  FFFF               	dw	65535	; assembler added errata NOP
  2351  007BA8                     
  2352                           ;utils.c: 22:         state_machine_code = 0;
  2353  007BA8  0E00               	movlw	0
  2354  007BAA  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2355                           
  2356                           ;utils.c: 23:     } else if (*state == 1){
  2357  007BAC  EF40  F03E         	goto	l236
  2358  007BB0                     l5027:
  2359  007BB0  FFFF               	dw	65535	; assembler added errata NOP
  2360  007BB2  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2361  007BB6  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2362  007BBA  04DE               	decf	postinc2,w,c
  2363  007BBC  10DE               	iorwf	postinc2,w,c
  2364  007BBE  A4D8               	btfss	status,2,c
  2365  007BC0  EFE4  F03D         	goto	u6031
  2366  007BC4  EFE7  F03D         	goto	u6030
  2367  007BC8                     u6031:
  2368  007BC8  FFFF               	dw	65535	; assembler added errata NOP
  2369  007BCA  EFEC  F03D         	goto	l5031
  2370  007BCE                     u6030:
  2371  007BCE  FFFF               	dw	65535	; assembler added errata NOP
  2372  007BD0                     
  2373                           ;utils.c: 24:         state_machine_code = 'A';
  2374  007BD0  0E41               	movlw	65
  2375  007BD2  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2376                           
  2377                           ;utils.c: 25:     } else if (*state == 3){
  2378  007BD4  EF40  F03E         	goto	l236
  2379  007BD8                     l5031:
  2380  007BD8  FFFF               	dw	65535	; assembler added errata NOP
  2381  007BDA  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2382  007BDE  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2383  007BE2  0E03               	movlw	3
  2384  007BE4  18DE               	xorwf	postinc2,w,c
  2385  007BE6  10DE               	iorwf	postinc2,w,c
  2386  007BE8  A4D8               	btfss	status,2,c
  2387  007BEA  EFF9  F03D         	goto	u6041
  2388  007BEE  EFFC  F03D         	goto	u6040
  2389  007BF2                     u6041:
  2390  007BF2  FFFF               	dw	65535	; assembler added errata NOP
  2391  007BF4  EF01  F03E         	goto	l5035
  2392  007BF8                     u6040:
  2393  007BF8  FFFF               	dw	65535	; assembler added errata NOP
  2394  007BFA                     
  2395                           ;utils.c: 26:         state_machine_code = 'B';
  2396  007BFA  0E42               	movlw	66
  2397  007BFC  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2398                           
  2399                           ;utils.c: 27:     } else if (*state == 4){
  2400  007BFE  EF40  F03E         	goto	l236
  2401  007C02                     l5035:
  2402  007C02  FFFF               	dw	65535	; assembler added errata NOP
  2403  007C04  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2404  007C08  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2405  007C0C  0E04               	movlw	4
  2406  007C0E  18DE               	xorwf	postinc2,w,c
  2407  007C10  10DE               	iorwf	postinc2,w,c
  2408  007C12  A4D8               	btfss	status,2,c
  2409  007C14  EF0E  F03E         	goto	u6051
  2410  007C18  EF11  F03E         	goto	u6050
  2411  007C1C                     u6051:
  2412  007C1C  FFFF               	dw	65535	; assembler added errata NOP
  2413  007C1E  EF16  F03E         	goto	l5039
  2414  007C22                     u6050:
  2415  007C22  FFFF               	dw	65535	; assembler added errata NOP
  2416  007C24                     
  2417                           ;utils.c: 28:         state_machine_code = 'D';
  2418  007C24  0E44               	movlw	68
  2419  007C26  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2420                           
  2421                           ;utils.c: 29:     } else if (*state == 5){
  2422  007C28  EF40  F03E         	goto	l236
  2423  007C2C                     l5039:
  2424  007C2C  FFFF               	dw	65535	; assembler added errata NOP
  2425  007C2E  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2426  007C32  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2427  007C36  0E05               	movlw	5
  2428  007C38  18DE               	xorwf	postinc2,w,c
  2429  007C3A  10DE               	iorwf	postinc2,w,c
  2430  007C3C  A4D8               	btfss	status,2,c
  2431  007C3E  EF23  F03E         	goto	u6061
  2432  007C42  EF26  F03E         	goto	u6060
  2433  007C46                     u6061:
  2434  007C46  FFFF               	dw	65535	; assembler added errata NOP
  2435  007C48  EF2B  F03E         	goto	l5043
  2436  007C4C                     u6060:
  2437  007C4C  FFFF               	dw	65535	; assembler added errata NOP
  2438  007C4E                     
  2439                           ;utils.c: 30:         state_machine_code = '@';
  2440  007C4E  0E40               	movlw	64
  2441  007C50  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2442                           
  2443                           ;utils.c: 31:     } else if (*state == 2){
  2444  007C52  EF40  F03E         	goto	l236
  2445  007C56                     l5043:
  2446  007C56  FFFF               	dw	65535	; assembler added errata NOP
  2447  007C58  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2448  007C5C  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2449  007C60  0E02               	movlw	2
  2450  007C62  18DE               	xorwf	postinc2,w,c
  2451  007C64  10DE               	iorwf	postinc2,w,c
  2452  007C66  A4D8               	btfss	status,2,c
  2453  007C68  EF38  F03E         	goto	u6071
  2454  007C6C  EF3B  F03E         	goto	u6070
  2455  007C70                     u6071:
  2456  007C70  FFFF               	dw	65535	; assembler added errata NOP
  2457  007C72  EF40  F03E         	goto	l240
  2458  007C76                     u6070:
  2459  007C76  FFFF               	dw	65535	; assembler added errata NOP
  2460  007C78                     
  2461                           ;utils.c: 32:         state_machine_code = 'H';
  2462  007C78  0E48               	movlw	72
  2463  007C7A  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2464  007C7C  EF40  F03E         	goto	l236
  2465  007C80                     l240:
  2466  007C80                     l236:
  2467  007C80  FFFF               	dw	65535	; assembler added errata NOP
  2468                           
  2469                           ;utils.c: 34:     return state_machine_code;
  2470  007C82  5005               	movf	state_translator_micro_to_fpga@state_machine_code^0,w,c
  2471  007C84  0012               	return		;funcret
  2472  007C86  FFFF               	dw	65535	; errata NOP
  2473  007C88                     __end_of_state_translator_micro_to_fpga:
  2474                           	callstack 0
  2475                           
  2476 ;; *************** function _state_translator_fpga_to_micro *****************
  2477 ;; Defined at:
  2478 ;;		line 2 in file "utils.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;  state_machin    1    wreg     unsigned char 
  2481 ;;  state           2    2[COMRAM] PTR int 
  2482 ;;		 -> state(2), 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;  state_machin    1    4[COMRAM] unsigned char 
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  1    wreg      void 
  2487 ;; Registers used:
  2488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2494 ;;      Params:         2       0       0       0       0       0       0
  2495 ;;      Locals:         1       0       0       0       0       0       0
  2496 ;;      Temps:          0       0       0       0       0       0       0
  2497 ;;      Totals:         3       0       0       0       0       0       0
  2498 ;;Total ram usage:        3 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; Hardware stack levels required when called:    3
  2501 ;; This function calls:
  2502 ;;		_lcd_dat
  2503 ;; This function is called by:
  2504 ;;		_main
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           	psect	text3
  2509  007A8C                     __ptext3:
  2510                           	callstack 0
  2511  007A8C                     _state_translator_fpga_to_micro:
  2512                           	callstack 0
  2513  007A8C  FFFF               	dw	65535	; assembler added errata NOP
  2514                           
  2515                           ;incstack = 0
  2516                           ;state_translator_fpga_to_micro@state_machine_code stored from wreg
  2517  007A8E  6E05               	movwf	state_translator_fpga_to_micro@state_machine_code^0,c
  2518  007A90                     
  2519                           ;utils.c: 3:     lcd_dat(state_machine_code);
  2520  007A90  5005               	movf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  2521  007A92  EC16  F037         	call	_lcd_dat
  2522  007A96                     
  2523                           ;utils.c: 4:     if (state_machine_code == 'A'){
  2524  007A96  0E41               	movlw	65
  2525  007A98  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  2526  007A9A  A4D8               	btfss	status,2,c
  2527  007A9C  EF52  F03D         	goto	u5971
  2528  007AA0  EF55  F03D         	goto	u5970
  2529  007AA4                     u5971:
  2530  007AA4  FFFF               	dw	65535	; assembler added errata NOP
  2531  007AA6  EF60  F03D         	goto	l4999
  2532  007AAA                     u5970:
  2533  007AAA  FFFF               	dw	65535	; assembler added errata NOP
  2534  007AAC                     
  2535                           ;utils.c: 5:         *state = 1;
  2536  007AAC  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  2537  007AB0  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  2538  007AB4  0E01               	movlw	1
  2539  007AB6  6EDE               	movwf	postinc2,c
  2540  007AB8  0E00               	movlw	0
  2541  007ABA  6EDD               	movwf	postdec2,c
  2542                           
  2543                           ;utils.c: 6:     } else if (state_machine_code == 'B'){
  2544  007ABC  EFC1  F03D         	goto	l232
  2545  007AC0                     l4999:
  2546  007AC0  FFFF               	dw	65535	; assembler added errata NOP
  2547  007AC2  0E42               	movlw	66
  2548  007AC4  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  2549  007AC6  A4D8               	btfss	status,2,c
  2550  007AC8  EF68  F03D         	goto	u5981
  2551  007ACC  EF6B  F03D         	goto	u5980
  2552  007AD0                     u5981:
  2553  007AD0  FFFF               	dw	65535	; assembler added errata NOP
  2554  007AD2  EF76  F03D         	goto	l5003
  2555  007AD6                     u5980:
  2556  007AD6  FFFF               	dw	65535	; assembler added errata NOP
  2557  007AD8                     
  2558                           ;utils.c: 7:         *state = 3;
  2559  007AD8  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  2560  007ADC  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  2561  007AE0  0E03               	movlw	3
  2562  007AE2  6EDE               	movwf	postinc2,c
  2563  007AE4  0E00               	movlw	0
  2564  007AE6  6EDD               	movwf	postdec2,c
  2565                           
  2566                           ;utils.c: 8:     } else if (state_machine_code == 'D'){
  2567  007AE8  EFC1  F03D         	goto	l232
  2568  007AEC                     l5003:
  2569  007AEC  FFFF               	dw	65535	; assembler added errata NOP
  2570  007AEE  0E44               	movlw	68
  2571  007AF0  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  2572  007AF2  A4D8               	btfss	status,2,c
  2573  007AF4  EF7E  F03D         	goto	u5991
  2574  007AF8  EF81  F03D         	goto	u5990
  2575  007AFC                     u5991:
  2576  007AFC  FFFF               	dw	65535	; assembler added errata NOP
  2577  007AFE  EF8C  F03D         	goto	l5007
  2578  007B02                     u5990:
  2579  007B02  FFFF               	dw	65535	; assembler added errata NOP
  2580  007B04                     
  2581                           ;utils.c: 9:         *state = 4;
  2582  007B04  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  2583  007B08  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  2584  007B0C  0E04               	movlw	4
  2585  007B0E  6EDE               	movwf	postinc2,c
  2586  007B10  0E00               	movlw	0
  2587  007B12  6EDD               	movwf	postdec2,c
  2588                           
  2589                           ;utils.c: 10:     } else if (state_machine_code == '@'){
  2590  007B14  EFC1  F03D         	goto	l232
  2591  007B18                     l5007:
  2592  007B18  FFFF               	dw	65535	; assembler added errata NOP
  2593  007B1A  0E40               	movlw	64
  2594  007B1C  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  2595  007B1E  A4D8               	btfss	status,2,c
  2596  007B20  EF94  F03D         	goto	u6001
  2597  007B24  EF97  F03D         	goto	u6000
  2598  007B28                     u6001:
  2599  007B28  FFFF               	dw	65535	; assembler added errata NOP
  2600  007B2A  EFA2  F03D         	goto	l5011
  2601  007B2E                     u6000:
  2602  007B2E  FFFF               	dw	65535	; assembler added errata NOP
  2603  007B30                     
  2604                           ;utils.c: 11:         *state = 5;
  2605  007B30  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  2606  007B34  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  2607  007B38  0E05               	movlw	5
  2608  007B3A  6EDE               	movwf	postinc2,c
  2609  007B3C  0E00               	movlw	0
  2610  007B3E  6EDD               	movwf	postdec2,c
  2611                           
  2612                           ;utils.c: 12:     } else if (state_machine_code == 'H'){
  2613  007B40  EFC1  F03D         	goto	l232
  2614  007B44                     l5011:
  2615  007B44  FFFF               	dw	65535	; assembler added errata NOP
  2616  007B46  0E48               	movlw	72
  2617  007B48  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  2618  007B4A  A4D8               	btfss	status,2,c
  2619  007B4C  EFAA  F03D         	goto	u6011
  2620  007B50  EFAD  F03D         	goto	u6010
  2621  007B54                     u6011:
  2622  007B54  FFFF               	dw	65535	; assembler added errata NOP
  2623  007B56  EFB8  F03D         	goto	l5015
  2624  007B5A                     u6010:
  2625  007B5A  FFFF               	dw	65535	; assembler added errata NOP
  2626  007B5C                     
  2627                           ;utils.c: 13:         *state = 2;
  2628  007B5C  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  2629  007B60  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  2630  007B64  0E02               	movlw	2
  2631  007B66  6EDE               	movwf	postinc2,c
  2632  007B68  0E00               	movlw	0
  2633  007B6A  6EDD               	movwf	postdec2,c
  2634                           
  2635                           ;utils.c: 14:     } else {
  2636  007B6C  EFC1  F03D         	goto	l232
  2637  007B70                     l5015:
  2638  007B70  FFFF               	dw	65535	; assembler added errata NOP
  2639                           
  2640                           ;utils.c: 15:         *state = 0;
  2641  007B72  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  2642  007B76  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  2643  007B7A  0E00               	movlw	0
  2644  007B7C  6EDE               	movwf	postinc2,c
  2645  007B7E  0E00               	movlw	0
  2646  007B80  6EDD               	movwf	postdec2,c
  2647  007B82                     l232:
  2648  007B82  FFFF               	dw	65535	; assembler added errata NOP
  2649  007B84  0012               	return		;funcret
  2650  007B86  FFFF               	dw	65535	; errata NOP
  2651  007B88                     __end_of_state_translator_fpga_to_micro:
  2652                           	callstack 0
  2653                           
  2654 ;; *************** function _snprintf *****************
  2655 ;; Defined at:
  2656 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\snprintf.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;  s               2   10[BANK0 ] PTR unsigned char 
  2659 ;;		 -> main@greet_str(160), 
  2660 ;;  n               2   12[BANK0 ] unsigned int 
  2661 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  2662 ;;		 -> STR_8(3), 
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;  ap              2   20[BANK0 ] PTR void [1]
  2665 ;;		 -> ?_snprintf(2), 
  2666 ;;  ret             2    0        int 
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  2   10[BANK0 ] int 
  2669 ;; Registers used:
  2670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2676 ;;      Params:         0       8       0       0       0       0       0
  2677 ;;      Locals:         0       4       0       0       0       0       0
  2678 ;;      Temps:          0       0       0       0       0       0       0
  2679 ;;      Totals:         0      12       0       0       0       0       0
  2680 ;;Total ram usage:       12 bytes
  2681 ;; Hardware stack levels used:    1
  2682 ;; Hardware stack levels required when called:    9
  2683 ;; This function calls:
  2684 ;;		_vsnprintf
  2685 ;; This function is called by:
  2686 ;;		_main
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690                           	psect	text4
  2691  006EAC                     __ptext4:
  2692                           	callstack 0
  2693  006EAC                     _snprintf:
  2694                           	callstack 0
  2695  006EAC  FFFF               	dw	65535	; assembler added errata NOP
  2696  006EAE  0EBE               	movlw	low (?_snprintf+6)
  2697  006EB0  0100               	movlb	0	; () banked
  2698  006EB2  6FC2               	movwf	snprintf@ap& (0+255),b
  2699  006EB4  0E00               	movlw	high (?_snprintf+6)
  2700  006EB6  6FC3               	movwf	(snprintf@ap+1)& (0+255),b
  2701  006EB8                     
  2702                           ; BSR set to: 0
  2703  006EB8  C0B8  F070         	movff	snprintf@s,vsnprintf@s
  2704  006EBC  C0B9  F071         	movff	snprintf@s+1,vsnprintf@s+1
  2705  006EC0  C0BA  F072         	movff	snprintf@n,vsnprintf@n
  2706  006EC4  C0BB  F073         	movff	snprintf@n+1,vsnprintf@n+1
  2707  006EC8  C0BC  F074         	movff	snprintf@fmt,vsnprintf@fmt
  2708  006ECC  C0BD  F075         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  2709  006ED0  0EC2               	movlw	low snprintf@ap
  2710  006ED2  6E76               	movwf	vsnprintf@ap^0,c
  2711  006ED4  0E00               	movlw	high snprintf@ap
  2712  006ED6  6E77               	movwf	(vsnprintf@ap+1)^0,c
  2713  006ED8  EC31  F01E         	call	_vsnprintf	;wreg free
  2714  006EDC  0012               	return		;funcret
  2715  006EDE  FFFF               	dw	65535	; errata NOP
  2716  006EE0                     __end_of_snprintf:
  2717                           	callstack 0
  2718                           
  2719 ;; *************** function _vsnprintf *****************
  2720 ;; Defined at:
  2721 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_vsnprintf.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;  s               2  111[COMRAM] PTR unsigned char 
  2724 ;;		 -> main@greet_str(160), 
  2725 ;;  n               2  113[COMRAM] unsigned int 
  2726 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  2727 ;;		 -> STR_8(3), 
  2728 ;;  ap              2  117[COMRAM] PTR PTR void 
  2729 ;;		 -> snprintf@ap(2), 
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;  f               6    4[BANK0 ] struct _IO_FILE
  2732 ;;  cnt             2    2[BANK0 ] int 
  2733 ;; Return value:  Size  Location     Type
  2734 ;;                  2  111[COMRAM] int 
  2735 ;; Registers used:
  2736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2742 ;;      Params:         8       0       0       0       0       0       0
  2743 ;;      Locals:         0      10       0       0       0       0       0
  2744 ;;      Temps:          4       0       0       0       0       0       0
  2745 ;;      Totals:        12      10       0       0       0       0       0
  2746 ;;Total ram usage:       22 bytes
  2747 ;; Hardware stack levels used:    1
  2748 ;; Hardware stack levels required when called:    8
  2749 ;; This function calls:
  2750 ;;		_vfprintf
  2751 ;; This function is called by:
  2752 ;;		_snprintf
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           	psect	text5
  2757  003C62                     __ptext5:
  2758                           	callstack 0
  2759  003C62                     _vsnprintf:
  2760                           	callstack 0
  2761  003C62  FFFF               	dw	65535	; assembler added errata NOP
  2762  003C64  0E80               	movlw	128
  2763  003C66  5C73               	subwf	(vsnprintf@n+1)^0,w,c
  2764  003C68  A0D8               	btfss	status,0,c
  2765  003C6A  EF39  F01E         	goto	u5881
  2766  003C6E  EF3C  F01E         	goto	u5880
  2767  003C72                     u5881:
  2768  003C72  FFFF               	dw	65535	; assembler added errata NOP
  2769  003C74  EF46  F01E         	goto	l4875
  2770  003C78                     u5880:
  2771  003C78  FFFF               	dw	65535	; assembler added errata NOP
  2772  003C7A  0E00               	movlw	0
  2773  003C7C  0100               	movlb	0	; () banked
  2774  003C7E  6F8D               	movwf	(_errno+1)& (0+255),b
  2775  003C80  0E4B               	movlw	75
  2776  003C82  6F8C               	movwf	_errno& (0+255),b
  2777  003C84                     
  2778                           ; BSR set to: 0
  2779  003C84  6870               	setf	?_vsnprintf^0,c
  2780  003C86  6871               	setf	(?_vsnprintf+1)^0,c
  2781  003C88  EFCB  F01E         	goto	l1000
  2782  003C8C                     l4875:
  2783  003C8C  FFFF               	dw	65535	; assembler added errata NOP
  2784  003C8E  C070  F0B2         	movff	vsnprintf@s,vsnprintf@f
  2785  003C92  C071  F0B3         	movff	vsnprintf@s+1,vsnprintf@f+1
  2786  003C96  5073               	movf	(vsnprintf@n+1)^0,w,c
  2787  003C98  E10A               	bnz	u5890
  2788  003C9A  0E02               	movlw	2
  2789  003C9C  5C72               	subwf	vsnprintf@n^0,w,c
  2790  003C9E  A0D8               	btfss	status,0,c
  2791  003CA0  EF54  F01E         	goto	u5891
  2792  003CA4  EF57  F01E         	goto	u5890
  2793  003CA8                     u5891:
  2794  003CA8  FFFF               	dw	65535	; assembler added errata NOP
  2795  003CAA  EF65  F01E         	goto	l4881
  2796  003CAE                     u5890:
  2797  003CAE  FFFF               	dw	65535	; assembler added errata NOP
  2798  003CB0  0EFF               	movlw	255
  2799  003CB2  2472               	addwf	vsnprintf@n^0,w,c
  2800  003CB4  0100               	movlb	0	; () banked
  2801  003CB6  6FB6               	movwf	(vsnprintf@f+4)& (0+255),b
  2802  003CB8  0EFF               	movlw	255
  2803  003CBA  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  2804  003CBC  6FB7               	movwf	(vsnprintf@f+5)& (0+255),b
  2805  003CBE                     
  2806                           ; BSR set to: 0
  2807  003CBE  0E00               	movlw	0
  2808  003CC0  6FB5               	movwf	(vsnprintf@f+3)& (0+255),b
  2809  003CC2  0E00               	movlw	0
  2810  003CC4  6FB4               	movwf	(vsnprintf@f+2)& (0+255),b
  2811  003CC6  EF6F  F01E         	goto	l4883
  2812  003CCA                     l4881:
  2813  003CCA  FFFF               	dw	65535	; assembler added errata NOP
  2814  003CCC  0E00               	movlw	0
  2815  003CCE  0100               	movlb	0	; () banked
  2816  003CD0  6FB7               	movwf	(vsnprintf@f+5)& (0+255),b
  2817  003CD2  0E01               	movlw	1
  2818  003CD4  6FB6               	movwf	(vsnprintf@f+4)& (0+255),b
  2819  003CD6  0E00               	movlw	0
  2820  003CD8  6FB5               	movwf	(vsnprintf@f+3)& (0+255),b
  2821  003CDA  0E01               	movlw	1
  2822  003CDC  6FB4               	movwf	(vsnprintf@f+2)& (0+255),b
  2823  003CDE                     l4883:
  2824  003CDE  FFFF               	dw	65535	; assembler added errata NOP
  2825                           
  2826                           ; BSR set to: 0
  2827  003CE0  0EB2               	movlw	low vsnprintf@f
  2828  003CE2  6E68               	movwf	vfprintf@fp^0,c
  2829  003CE4  0E00               	movlw	high vsnprintf@f
  2830  003CE6  6E69               	movwf	(vfprintf@fp+1)^0,c
  2831  003CE8  C074  F06A         	movff	vsnprintf@fmt,vfprintf@fmt
  2832  003CEC  C075  F06B         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  2833  003CF0  C076  F06C         	movff	vsnprintf@ap,vfprintf@ap
  2834  003CF4  C077  F06D         	movff	vsnprintf@ap+1,vfprintf@ap+1
  2835  003CF8  ECC2  F039         	call	_vfprintf	;wreg free
  2836  003CFC  C068  F0B0         	movff	?_vfprintf,vsnprintf@cnt
  2837  003D00  C069  F0B1         	movff	?_vfprintf+1,vsnprintf@cnt+1
  2838  003D04  5072               	movf	vsnprintf@n^0,w,c
  2839  003D06  1073               	iorwf	(vsnprintf@n+1)^0,w,c
  2840  003D08  B4D8               	btfsc	status,2,c
  2841  003D0A  EF89  F01E         	goto	u5901
  2842  003D0E  EF8C  F01E         	goto	u5900
  2843  003D12                     u5901:
  2844  003D12  FFFF               	dw	65535	; assembler added errata NOP
  2845  003D14  EFC6  F01E         	goto	l4895
  2846  003D18                     u5900:
  2847  003D18  FFFF               	dw	65535	; assembler added errata NOP
  2848  003D1A  0100               	movlb	0	; () banked
  2849  003D1C  BFB1               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  2850  003D1E  EF93  F01E         	goto	u5911
  2851  003D22  EF96  F01E         	goto	u5910
  2852  003D26                     u5911:
  2853  003D26  FFFF               	dw	65535	; assembler added errata NOP
  2854  003D28  EFC6  F01E         	goto	l4895
  2855  003D2C                     u5910:
  2856  003D2C  FFFF               	dw	65535	; assembler added errata NOP
  2857  003D2E                     
  2858                           ; BSR set to: 0
  2859  003D2E  0EFF               	movlw	255
  2860  003D30  6E78               	movwf	??_vsnprintf^0,c
  2861  003D32  0EFF               	movlw	255
  2862  003D34  6E79               	movwf	(??_vsnprintf+1)^0,c
  2863  003D36  C072  F07A         	movff	vsnprintf@n,??_vsnprintf+2
  2864  003D3A  C073  F07B         	movff	vsnprintf@n+1,??_vsnprintf+3
  2865  003D3E  5078               	movf	??_vsnprintf^0,w,c
  2866  003D40  267A               	addwf	(??_vsnprintf+2)^0,f,c
  2867  003D42  5079               	movf	(??_vsnprintf+1)^0,w,c
  2868  003D44  227B               	addwfc	(??_vsnprintf+3)^0,f,c
  2869  003D46  507A               	movf	(??_vsnprintf+2)^0,w,c
  2870  003D48  5DB0               	subwf	vsnprintf@cnt& (0+255),w,b
  2871  003D4A  507B               	movf	(??_vsnprintf+3)^0,w,c
  2872  003D4C  59B1               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  2873  003D4E  A0D8               	btfss	status,0,c
  2874  003D50  EFAC  F01E         	goto	u5921
  2875  003D54  EFAF  F01E         	goto	u5920
  2876  003D58                     u5921:
  2877  003D58  FFFF               	dw	65535	; assembler added errata NOP
  2878  003D5A  EFB8  F01E         	goto	l1005
  2879  003D5E                     u5920:
  2880  003D5E  FFFF               	dw	65535	; assembler added errata NOP
  2881  003D60                     
  2882                           ; BSR set to: 0
  2883  003D60  0EFF               	movlw	255
  2884  003D62  2472               	addwf	vsnprintf@n^0,w,c
  2885  003D64  6FAE               	movwf	_vsnprintf$1365& (0+255),b
  2886  003D66  0EFF               	movlw	255
  2887  003D68  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  2888  003D6A  6FAF               	movwf	(_vsnprintf$1365+1)& (0+255),b
  2889  003D6C  EFBD  F01E         	goto	l4893
  2890  003D70                     l1005:
  2891  003D70  FFFF               	dw	65535	; assembler added errata NOP
  2892                           
  2893                           ; BSR set to: 0
  2894  003D72  C0B0  F0AE         	movff	vsnprintf@cnt,_vsnprintf$1365
  2895  003D76  C0B1  F0AF         	movff	vsnprintf@cnt+1,_vsnprintf$1365+1
  2896  003D7A                     l4893:
  2897  003D7A  FFFF               	dw	65535	; assembler added errata NOP
  2898                           
  2899                           ; BSR set to: 0
  2900  003D7C  51AE               	movf	_vsnprintf$1365& (0+255),w,b
  2901  003D7E  2470               	addwf	vsnprintf@s^0,w,c
  2902  003D80  6ED9               	movwf	fsr2l,c
  2903  003D82  51AF               	movf	(_vsnprintf$1365+1)& (0+255),w,b
  2904  003D84  2071               	addwfc	(vsnprintf@s+1)^0,w,c
  2905  003D86  6EDA               	movwf	fsr2h,c
  2906  003D88  0E00               	movlw	0
  2907  003D8A  6EDF               	movwf	indf2,c
  2908  003D8C                     l4895:
  2909  003D8C  FFFF               	dw	65535	; assembler added errata NOP
  2910  003D8E  C0B0  F070         	movff	vsnprintf@cnt,?_vsnprintf
  2911  003D92  C0B1  F071         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  2912  003D96                     l1000:
  2913  003D96  FFFF               	dw	65535	; assembler added errata NOP
  2914  003D98  0012               	return		;funcret
  2915  003D9A  FFFF               	dw	65535	; errata NOP
  2916  003D9C                     __end_of_vsnprintf:
  2917                           	callstack 0
  2918                           
  2919 ;; *************** function _vfprintf *****************
  2920 ;; Defined at:
  2921 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  fp              2  103[COMRAM] PTR struct _IO_FILE
  2924 ;;		 -> vsnprintf@f(6), 
  2925 ;;  fmt             2  105[COMRAM] PTR const unsigned char 
  2926 ;;		 -> STR_8(3), 
  2927 ;;  ap              2  107[COMRAM] PTR PTR void 
  2928 ;;		 -> snprintf@ap(2), 
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;  cfmt            2  109[COMRAM] PTR unsigned char 
  2931 ;;		 -> STR_8(3), 
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  2  103[COMRAM] int 
  2934 ;; Registers used:
  2935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2941 ;;      Params:         6       0       0       0       0       0       0
  2942 ;;      Locals:         2       0       0       0       0       0       0
  2943 ;;      Temps:          0       0       0       0       0       0       0
  2944 ;;      Totals:         8       0       0       0       0       0       0
  2945 ;;Total ram usage:        8 bytes
  2946 ;; Hardware stack levels used:    1
  2947 ;; Hardware stack levels required when called:    7
  2948 ;; This function calls:
  2949 ;;		_vfpfcnvrt
  2950 ;; This function is called by:
  2951 ;;		_vsnprintf
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           	psect	text6
  2956  007384                     __ptext6:
  2957                           	callstack 0
  2958  007384                     _vfprintf:
  2959                           	callstack 0
  2960  007384  FFFF               	dw	65535	; assembler added errata NOP
  2961  007386                     
  2962                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2963  007386  C06A  F06E         	movff	vfprintf@fmt,vfprintf@cfmt
  2964  00738A  C06B  F06F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2965  00738E                     
  2966                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  2967  00738E  0E00               	movlw	0
  2968  007390  0100               	movlb	0	; () banked
  2969  007392  6F85               	movwf	(_nout+1)& (0+255),b
  2970  007394  0E00               	movlw	0
  2971  007396  6F84               	movwf	_nout& (0+255),b
  2972                           
  2973                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  2974  007398  EFE2  F039         	goto	l4785
  2975  00739C                     l4783:
  2976  00739C  FFFF               	dw	65535	; assembler added errata NOP
  2977                           
  2978                           ; BSR set to: 0
  2979                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2980  00739E  C068  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  2981  0073A2  C069  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2982  0073A6  0E6E               	movlw	low vfprintf@cfmt
  2983  0073A8  6E45               	movwf	vfpfcnvrt@fmt^0,c
  2984  0073AA  0E00               	movlw	high vfprintf@cfmt
  2985  0073AC  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2986  0073AE  C06C  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  2987  0073B2  C06D  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2988  0073B6  EC3D  F000         	call	_vfpfcnvrt	;wreg free
  2989  0073BA  5043               	movf	?_vfpfcnvrt^0,w,c
  2990  0073BC  0100               	movlb	0	; () banked
  2991  0073BE  2784               	addwf	_nout& (0+255),f,b
  2992  0073C0  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  2993  0073C2  2385               	addwfc	(_nout+1)& (0+255),f,b
  2994  0073C4                     l4785:
  2995  0073C4  FFFF               	dw	65535	; assembler added errata NOP
  2996                           
  2997                           ; BSR set to: 0
  2998                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  2999  0073C6  C06E  FFF6         	movff	vfprintf@cfmt,tblptrl
  3000  0073CA  C06F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3001  0073CE                     	if	0	;tblptru may be non-zero
  3002  0073CE                     	endif
  3003  0073CE                     	if	0	;tblptru may be non-zero
  3004  0073CE                     	endif
  3005  0073CE  0008               	tblrd		*
  3006  0073D0  FFFF               	dw	65535	; errata NOP
  3007  0073D2  50F5               	movf	tablat,w,c
  3008  0073D4  0900               	iorlw	0
  3009  0073D6  A4D8               	btfss	status,2,c
  3010  0073D8  EFF0  F039         	goto	u5761
  3011  0073DC  EFF3  F039         	goto	u5760
  3012  0073E0                     u5761:
  3013  0073E0  FFFF               	dw	65535	; assembler added errata NOP
  3014  0073E2  EFCE  F039         	goto	l4783
  3015  0073E6                     u5760:
  3016  0073E6  FFFF               	dw	65535	; assembler added errata NOP
  3017  0073E8                     
  3018                           ; BSR set to: 0
  3019                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  3020  0073E8  C084  F068         	movff	_nout,?_vfprintf
  3021  0073EC  C085  F069         	movff	_nout+1,?_vfprintf+1
  3022  0073F0                     
  3023                           ; BSR set to: 0
  3024  0073F0  0012               	return		;funcret
  3025  0073F2  FFFF               	dw	65535	; errata NOP
  3026  0073F4                     __end_of_vfprintf:
  3027                           	callstack 0
  3028                           
  3029 ;; *************** function _vfpfcnvrt *****************
  3030 ;; Defined at:
  3031 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  3034 ;;		 -> vsnprintf@f(6), 
  3035 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  3036 ;;		 -> vfprintf@cfmt(2), 
  3037 ;;  ap              2   70[COMRAM] PTR PTR void 
  3038 ;;		 -> snprintf@ap(2), 
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;  llu             8   95[COMRAM] unsigned long long 
  3041 ;;  ll              8   84[COMRAM] long long 
  3042 ;;  f               4    0        long long 
  3043 ;;  ct              3    0        unsigned char [3]
  3044 ;;  vp              2   92[COMRAM] PTR void 
  3045 ;;		 -> ?_snprintf(2), STR_6(49), STR_5(55), STR_4(39), 
  3046 ;;		 -> STR_3(9), STR_2(63), STR_1(47), 
  3047 ;;  done            2   78[COMRAM] int 
  3048 ;;  cp              2   76[COMRAM] PTR unsigned char 
  3049 ;;		 -> ?_snprintf(2), STR_6(49), STR_5(55), STR_4(39), 
  3050 ;;		 -> STR_3(9), STR_2(63), STR_1(47), 
  3051 ;;  i               2    0        int 
  3052 ;;  c               1   94[COMRAM] unsigned char 
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  2   66[COMRAM] int 
  3055 ;; Registers used:
  3056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3062 ;;      Params:         6       0       0       0       0       0       0
  3063 ;;      Locals:        27       0       0       0       0       0       0
  3064 ;;      Temps:          4       0       0       0       0       0       0
  3065 ;;      Totals:        37       0       0       0       0       0       0
  3066 ;;Total ram usage:       37 bytes
  3067 ;; Hardware stack levels used:    1
  3068 ;; Hardware stack levels required when called:    6
  3069 ;; This function calls:
  3070 ;;		_atoi
  3071 ;;		_ctoa
  3072 ;;		_dtoa
  3073 ;;		_fputc
  3074 ;;		_isdigit
  3075 ;;		_otoa
  3076 ;;		_stoa
  3077 ;;		_strncmp
  3078 ;;		_utoa
  3079 ;;		_xtoa
  3080 ;; This function is called by:
  3081 ;;		_vfprintf
  3082 ;; This function uses a non-reentrant model
  3083 ;;
  3084                           
  3085                           	psect	text7
  3086  00007A                     __ptext7:
  3087                           	callstack 0
  3088  00007A                     _vfpfcnvrt:
  3089                           	callstack 0
  3090  00007A  FFFF               	dw	65535	; assembler added errata NOP
  3091  00007C                     
  3092                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  3093  00007C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3094  000080  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3095  000084  CFDE FFF6          	movff	postinc2,tblptrl
  3096  000088  CFDD FFF7          	movff	postdec2,tblptrh
  3097  00008C                     	if	0	;tblptru may be non-zero
  3098  00008C                     	endif
  3099  00008C                     	if	0	;tblptru may be non-zero
  3100  00008C                     	endif
  3101  00008C  0008               	tblrd		*
  3102  00008E  FFFF               	dw	65535	; errata NOP
  3103  000090  50F5               	movf	tablat,w,c
  3104  000092  0A25               	xorlw	37
  3105  000094  A4D8               	btfss	status,2,c
  3106  000096  EF4F  F000         	goto	u4721
  3107  00009A  EF52  F000         	goto	u4720
  3108  00009E                     u4721:
  3109  00009E  FFFF               	dw	65535	; assembler added errata NOP
  3110  0000A0  EF11  F00A         	goto	l4415
  3111  0000A4                     u4720:
  3112  0000A4  FFFF               	dw	65535	; assembler added errata NOP
  3113  0000A6                     
  3114                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  3115  0000A6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3116  0000AA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3117  0000AE  2ADE               	incf	postinc2,f,c
  3118  0000B0  0E00               	movlw	0
  3119  0000B2  22DD               	addwfc	postdec2,f,c
  3120  0000B4                     
  3121                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  3122  0000B4  0E00               	movlw	0
  3123  0000B6  0100               	movlb	0	; () banked
  3124  0000B8  6F87               	movwf	(_width+1)& (0+255),b
  3125  0000BA  0E00               	movlw	0
  3126  0000BC  6F86               	movwf	_width& (0+255),b
  3127  0000BE  C086  F08A         	movff	_width,_flags
  3128  0000C2  C087  F08B         	movff	_width+1,_flags+1
  3129  0000C6                     
  3130                           ; BSR set to: 0
  3131                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  3132  0000C6  6988               	setf	_prec& (0+255),b
  3133  0000C8  6989               	setf	(_prec+1)& (0+255),b
  3134  0000CA                     
  3135                           ; BSR set to: 0
  3136                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  3137  0000CA  0E00               	movlw	0
  3138  0000CC  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  3139  0000CE  0E00               	movlw	0
  3140  0000D0  6E4F               	movwf	vfpfcnvrt@done^0,c
  3141                           
  3142                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  3143  0000D2  EFC0  F000         	goto	l4133
  3144  0000D6                     l4107:
  3145  0000D6  FFFF               	dw	65535	; assembler added errata NOP
  3146                           
  3147                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  3148  0000D8  0100               	movlb	0	; () banked
  3149  0000DA  818A               	bsf	_flags& (0+255),0,b
  3150  0000DC                     l4109:
  3151  0000DC  FFFF               	dw	65535	; assembler added errata NOP
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  3155  0000DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3156  0000E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3157  0000E6  2ADE               	incf	postinc2,f,c
  3158  0000E8  0E00               	movlw	0
  3159  0000EA  22DD               	addwfc	postdec2,f,c
  3160                           
  3161                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  3162  0000EC  EFC0  F000         	goto	l4133
  3163  0000F0                     l4111:
  3164  0000F0  FFFF               	dw	65535	; assembler added errata NOP
  3165                           
  3166                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  3167  0000F2  0100               	movlb	0	; () banked
  3168  0000F4  838A               	bsf	_flags& (0+255),1,b
  3169  0000F6  EF6E  F000         	goto	l4109
  3170  0000FA                     l4115:
  3171  0000FA  FFFF               	dw	65535	; assembler added errata NOP
  3172                           
  3173                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  3174  0000FC  0100               	movlb	0	; () banked
  3175  0000FE  858A               	bsf	_flags& (0+255),2,b
  3176  000100  EF6E  F000         	goto	l4109
  3177  000104                     l4119:
  3178  000104  FFFF               	dw	65535	; assembler added errata NOP
  3179                           
  3180                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  3181  000106  0100               	movlb	0	; () banked
  3182  000108  878A               	bsf	_flags& (0+255),3,b
  3183  00010A  EF6E  F000         	goto	l4109
  3184  00010E                     l4123:
  3185  00010E  FFFF               	dw	65535	; assembler added errata NOP
  3186                           
  3187                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  3188  000110  0100               	movlb	0	; () banked
  3189  000112  898A               	bsf	_flags& (0+255),4,b
  3190  000114  EF6E  F000         	goto	l4109
  3191  000118                     l4127:
  3192  000118  FFFF               	dw	65535	; assembler added errata NOP
  3193                           
  3194                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  3195  00011A  0E00               	movlw	0
  3196  00011C  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  3197  00011E  0E01               	movlw	1
  3198  000120  6E4F               	movwf	vfpfcnvrt@done^0,c
  3199                           
  3200                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  3201  000122  EFC0  F000         	goto	l4133
  3202  000126                     l4131:
  3203  000126  FFFF               	dw	65535	; assembler added errata NOP
  3204  000128  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3205  00012C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3206  000130  CFDE FFF6          	movff	postinc2,tblptrl
  3207  000134  CFDD FFF7          	movff	postdec2,tblptrh
  3208  000138                     	if	0	;tblptru may be non-zero
  3209  000138                     	endif
  3210  000138                     	if	0	;tblptru may be non-zero
  3211  000138                     	endif
  3212  000138  0008               	tblrd		*
  3213  00013A  FFFF               	dw	65535	; errata NOP
  3214  00013C  50F5               	movf	tablat,w,c
  3215  00013E  6E49               	movwf	??_vfpfcnvrt^0,c
  3216  000140  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  3217                           
  3218                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3219                           ; Switch size 1, requested type "simple"
  3220                           ; Number of cases is 1, Range of values is 0 to 0
  3221                           ; switch strategies available:
  3222                           ; Name         Instructions Cycles
  3223                           ; simple_byte            4     3 (average)
  3224                           ;	Chosen strategy is simple_byte
  3225  000142  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3226  000144  0A00               	xorlw	0	; case 0
  3227  000146  B4D8               	btfsc	status,2,c
  3228  000148  EFA8  F000         	goto	l5345
  3229  00014C  EF8C  F000         	goto	l4127
  3230  000150                     l5345:
  3231  000150  FFFF               	dw	65535	; assembler added errata NOP
  3232                           
  3233                           ; Switch size 1, requested type "simple"
  3234                           ; Number of cases is 5, Range of values is 32 to 48
  3235                           ; switch strategies available:
  3236                           ; Name         Instructions Cycles
  3237                           ; simple_byte           16     9 (average)
  3238                           ;	Chosen strategy is simple_byte
  3239  000152  5049               	movf	??_vfpfcnvrt^0,w,c
  3240  000154  0A20               	xorlw	32	; case 32
  3241  000156  B4D8               	btfsc	status,2,c
  3242  000158  EF82  F000         	goto	l4119
  3243  00015C  0A03               	xorlw	3	; case 35
  3244  00015E  B4D8               	btfsc	status,2,c
  3245  000160  EF87  F000         	goto	l4123
  3246  000164  0A08               	xorlw	8	; case 43
  3247  000166  B4D8               	btfsc	status,2,c
  3248  000168  EF7D  F000         	goto	l4115
  3249  00016C  0A06               	xorlw	6	; case 45
  3250  00016E  B4D8               	btfsc	status,2,c
  3251  000170  EF6B  F000         	goto	l4107
  3252  000174  0A1D               	xorlw	29	; case 48
  3253  000176  B4D8               	btfsc	status,2,c
  3254  000178  EF78  F000         	goto	l4111
  3255  00017C  EF8C  F000         	goto	l4127
  3256  000180                     l4133:
  3257  000180  FFFF               	dw	65535	; assembler added errata NOP
  3258                           
  3259                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  3260  000182  504F               	movf	vfpfcnvrt@done^0,w,c
  3261  000184  1050               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  3262  000186  B4D8               	btfsc	status,2,c
  3263  000188  EFC8  F000         	goto	u4731
  3264  00018C  EFCB  F000         	goto	u4730
  3265  000190                     u4731:
  3266  000190  FFFF               	dw	65535	; assembler added errata NOP
  3267  000192  EF93  F000         	goto	l4131
  3268  000196                     u4730:
  3269  000196  FFFF               	dw	65535	; assembler added errata NOP
  3270  000198                     
  3271                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  3272  000198  0100               	movlb	0	; () banked
  3273  00019A  A18A               	btfss	_flags& (0+255),0,b
  3274  00019C  EFD2  F000         	goto	u4741
  3275  0001A0  EFD5  F000         	goto	u4740
  3276  0001A4                     u4741:
  3277  0001A4  FFFF               	dw	65535	; assembler added errata NOP
  3278  0001A6  EFD7  F000         	goto	l4137
  3279  0001AA                     u4740:
  3280  0001AA  FFFF               	dw	65535	; assembler added errata NOP
  3281  0001AC                     
  3282                           ; BSR set to: 0
  3283                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  3284  0001AC  938A               	bcf	_flags& (0+255),1,b
  3285  0001AE                     l4137:
  3286  0001AE  FFFF               	dw	65535	; assembler added errata NOP
  3287                           
  3288                           ; BSR set to: 0
  3289                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  3290  0001B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3291  0001B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3292  0001B8  CFDE FFF6          	movff	postinc2,tblptrl
  3293  0001BC  CFDD FFF7          	movff	postdec2,tblptrh
  3294  0001C0                     	if	0	;tblptru may be non-zero
  3295  0001C0                     	endif
  3296  0001C0                     	if	0	;tblptru may be non-zero
  3297  0001C0                     	endif
  3298  0001C0  0008               	tblrd		*
  3299  0001C2  FFFF               	dw	65535	; errata NOP
  3300  0001C4  50F5               	movf	tablat,w,c
  3301  0001C6  0A2A               	xorlw	42
  3302  0001C8  A4D8               	btfss	status,2,c
  3303  0001CA  EFE9  F000         	goto	u4751
  3304  0001CE  EFEC  F000         	goto	u4750
  3305  0001D2                     u4751:
  3306  0001D2  FFFF               	dw	65535	; assembler added errata NOP
  3307  0001D4  EF18  F001         	goto	l4145
  3308  0001D8                     u4750:
  3309  0001D8  FFFF               	dw	65535	; assembler added errata NOP
  3310  0001DA                     
  3311                           ; BSR set to: 0
  3312                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  3313  0001DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3314  0001DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3315  0001E2  2ADE               	incf	postinc2,f,c
  3316  0001E4  0E00               	movlw	0
  3317  0001E6  22DD               	addwfc	postdec2,f,c
  3318                           
  3319                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3320  0001E8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3321  0001EC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3322  0001F0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3323  0001F4  0E02               	movlw	2
  3324  0001F6  26DE               	addwf	postinc2,f,c
  3325  0001F8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3326  0001FC  0E00               	movlw	0
  3327  0001FE  22DD               	addwfc	postdec2,f,c
  3328  000200  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3329  000204  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3330  000208  CFDE F086          	movff	postinc2,_width
  3331  00020C  CFDD F087          	movff	postdec2,_width+1
  3332  000210                     
  3333                           ; BSR set to: 0
  3334                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  3335  000210  BF87               	btfsc	(_width+1)& (0+255),7,b
  3336  000212  EF10  F001         	goto	u4760
  3337  000216  EF0D  F001         	goto	u4761
  3338  00021A                     u4761:
  3339  00021A  FFFF               	dw	65535	; assembler added errata NOP
  3340  00021C  EF63  F001         	goto	l4155
  3341  000220                     u4760:
  3342  000220  FFFF               	dw	65535	; assembler added errata NOP
  3343  000222                     
  3344                           ; BSR set to: 0
  3345                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  3346  000222  818A               	bsf	_flags& (0+255),0,b
  3347                           
  3348                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  3349  000224  6D86               	negf	_width& (0+255),b
  3350  000226  1F87               	comf	(_width+1)& (0+255),f,b
  3351  000228  B0D8               	btfsc	status,0,c
  3352  00022A  2B87               	incf	(_width+1)& (0+255),f,b
  3353  00022C  EF63  F001         	goto	l4155
  3354  000230                     l4145:
  3355  000230  FFFF               	dw	65535	; assembler added errata NOP
  3356                           
  3357                           ; BSR set to: 0
  3358                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  3359  000232  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3360  000236  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3361  00023A  CFDE F008          	movff	postinc2,atoi@s
  3362  00023E  CFDD F009          	movff	postdec2,atoi@s+1
  3363  000242  ECA8  F01B         	call	_atoi	;wreg free
  3364  000246  C008  F086         	movff	?_atoi,_width
  3365  00024A  C009  F087         	movff	?_atoi+1,_width+1
  3366                           
  3367                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3368  00024E  EF31  F001         	goto	l4149
  3369  000252                     l4147:
  3370  000252  FFFF               	dw	65535	; assembler added errata NOP
  3371                           
  3372                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  3373  000254  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3374  000258  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3375  00025C  2ADE               	incf	postinc2,f,c
  3376  00025E  0E00               	movlw	0
  3377  000260  22DD               	addwfc	postdec2,f,c
  3378  000262                     l4149:
  3379  000262  FFFF               	dw	65535	; assembler added errata NOP
  3380  000264  0ED0               	movlw	208
  3381  000266  6E49               	movwf	??_vfpfcnvrt^0,c
  3382  000268  0EFF               	movlw	255
  3383  00026A  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  3384  00026C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3385  000270  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3386  000274  CFDE FFF6          	movff	postinc2,tblptrl
  3387  000278  CFDD FFF7          	movff	postdec2,tblptrh
  3388  00027C                     	if	0	;tblptru may be non-zero
  3389  00027C                     	endif
  3390  00027C                     	if	0	;tblptru may be non-zero
  3391  00027C                     	endif
  3392  00027C  0008               	tblrd		*
  3393  00027E  FFFF               	dw	65535	; errata NOP
  3394  000280  50F5               	movf	tablat,w,c
  3395  000282  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3396  000284  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  3397  000286  5049               	movf	??_vfpfcnvrt^0,w,c
  3398  000288  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3399  00028A  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3400  00028C  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3401  00028E  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  3402  000290  E10B               	bnz	u4770
  3403  000292  0E0A               	movlw	10
  3404  000294  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3405  000296  A0D8               	btfss	status,0,c
  3406  000298  EF50  F001         	goto	u4771
  3407  00029C  EF54  F001         	goto	u4770
  3408  0002A0                     u4771:
  3409  0002A0  FFFF               	dw	65535	; assembler added errata NOP
  3410  0002A2  0E01               	movlw	1
  3411  0002A4  EF56  F001         	goto	u4780
  3412  0002A8                     u4770:
  3413  0002A8  FFFF               	dw	65535	; assembler added errata NOP
  3414  0002AA  0E00               	movlw	0
  3415  0002AC                     u4780:
  3416  0002AC  FFFF               	dw	65535	; assembler added errata NOP
  3417  0002AE  6E51               	movwf	_vfpfcnvrt$1502^0,c
  3418  0002B0  6A52               	clrf	(_vfpfcnvrt$1502+1)^0,c
  3419  0002B2  5051               	movf	_vfpfcnvrt$1502^0,w,c
  3420  0002B4  1052               	iorwf	(_vfpfcnvrt$1502+1)^0,w,c
  3421  0002B6  A4D8               	btfss	status,2,c
  3422  0002B8  EF60  F001         	goto	u4791
  3423  0002BC  EF63  F001         	goto	u4790
  3424  0002C0                     u4791:
  3425  0002C0  FFFF               	dw	65535	; assembler added errata NOP
  3426  0002C2  EF29  F001         	goto	l4147
  3427  0002C6                     u4790:
  3428  0002C6                     l4155:
  3429  0002C6  FFFF               	dw	65535	; assembler added errata NOP
  3430                           
  3431                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  3432  0002C8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3433  0002CC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3434  0002D0  CFDE FFF6          	movff	postinc2,tblptrl
  3435  0002D4  CFDD FFF7          	movff	postdec2,tblptrh
  3436  0002D8                     	if	0	;tblptru may be non-zero
  3437  0002D8                     	endif
  3438  0002D8                     	if	0	;tblptru may be non-zero
  3439  0002D8                     	endif
  3440  0002D8  0008               	tblrd		*
  3441  0002DA  FFFF               	dw	65535	; errata NOP
  3442  0002DC  50F5               	movf	tablat,w,c
  3443  0002DE  0A2E               	xorlw	46
  3444  0002E0  A4D8               	btfss	status,2,c
  3445  0002E2  EF75  F001         	goto	u4801
  3446  0002E6  EF78  F001         	goto	u4800
  3447  0002EA                     u4801:
  3448  0002EA  FFFF               	dw	65535	; assembler added errata NOP
  3449  0002EC  EF02  F002         	goto	l4175
  3450  0002F0                     u4800:
  3451  0002F0  FFFF               	dw	65535	; assembler added errata NOP
  3452  0002F2                     
  3453                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  3454  0002F2  0E00               	movlw	0
  3455  0002F4  0100               	movlb	0	; () banked
  3456  0002F6  6F89               	movwf	(_prec+1)& (0+255),b
  3457  0002F8  0E00               	movlw	0
  3458  0002FA  6F88               	movwf	_prec& (0+255),b
  3459  0002FC                     
  3460                           ; BSR set to: 0
  3461                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  3462  0002FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3463  000300  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3464  000304  2ADE               	incf	postinc2,f,c
  3465  000306  0E00               	movlw	0
  3466  000308  22DD               	addwfc	postdec2,f,c
  3467  00030A                     
  3468                           ; BSR set to: 0
  3469                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  3470  00030A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3471  00030E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3472  000312  CFDE FFF6          	movff	postinc2,tblptrl
  3473  000316  CFDD FFF7          	movff	postdec2,tblptrh
  3474  00031A                     	if	0	;tblptru may be non-zero
  3475  00031A                     	endif
  3476  00031A                     	if	0	;tblptru may be non-zero
  3477  00031A                     	endif
  3478  00031A  0008               	tblrd		*
  3479  00031C  FFFF               	dw	65535	; errata NOP
  3480  00031E  50F5               	movf	tablat,w,c
  3481  000320  0A2A               	xorlw	42
  3482  000322  A4D8               	btfss	status,2,c
  3483  000324  EF96  F001         	goto	u4811
  3484  000328  EF99  F001         	goto	u4810
  3485  00032C                     u4811:
  3486  00032C  FFFF               	dw	65535	; assembler added errata NOP
  3487  00032E  EFB7  F001         	goto	l4165
  3488  000332                     u4810:
  3489  000332  FFFF               	dw	65535	; assembler added errata NOP
  3490  000334                     
  3491                           ; BSR set to: 0
  3492                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  3493  000334  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3494  000338  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3495  00033C  2ADE               	incf	postinc2,f,c
  3496  00033E  0E00               	movlw	0
  3497  000340  22DD               	addwfc	postdec2,f,c
  3498                           
  3499                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3500  000342  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3501  000346  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3502  00034A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3503  00034E  0E02               	movlw	2
  3504  000350  26DE               	addwf	postinc2,f,c
  3505  000352  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3506  000356  0E00               	movlw	0
  3507  000358  22DD               	addwfc	postdec2,f,c
  3508  00035A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3509  00035E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3510  000362  CFDE F088          	movff	postinc2,_prec
  3511  000366  CFDD F089          	movff	postdec2,_prec+1
  3512                           
  3513                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  3514  00036A  EF02  F002         	goto	l4175
  3515  00036E                     l4165:
  3516  00036E  FFFF               	dw	65535	; assembler added errata NOP
  3517                           
  3518                           ; BSR set to: 0
  3519                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  3520  000370  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3521  000374  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3522  000378  CFDE F008          	movff	postinc2,atoi@s
  3523  00037C  CFDD F009          	movff	postdec2,atoi@s+1
  3524  000380  ECA8  F01B         	call	_atoi	;wreg free
  3525  000384  C008  F088         	movff	?_atoi,_prec
  3526  000388  C009  F089         	movff	?_atoi+1,_prec+1
  3527                           
  3528                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3529  00038C  EFD0  F001         	goto	l4169
  3530  000390                     l4167:
  3531  000390  FFFF               	dw	65535	; assembler added errata NOP
  3532                           
  3533                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  3534  000392  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3535  000396  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3536  00039A  2ADE               	incf	postinc2,f,c
  3537  00039C  0E00               	movlw	0
  3538  00039E  22DD               	addwfc	postdec2,f,c
  3539  0003A0                     l4169:
  3540  0003A0  FFFF               	dw	65535	; assembler added errata NOP
  3541  0003A2  0ED0               	movlw	208
  3542  0003A4  6E49               	movwf	??_vfpfcnvrt^0,c
  3543  0003A6  0EFF               	movlw	255
  3544  0003A8  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  3545  0003AA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3546  0003AE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3547  0003B2  CFDE FFF6          	movff	postinc2,tblptrl
  3548  0003B6  CFDD FFF7          	movff	postdec2,tblptrh
  3549  0003BA                     	if	0	;tblptru may be non-zero
  3550  0003BA                     	endif
  3551  0003BA                     	if	0	;tblptru may be non-zero
  3552  0003BA                     	endif
  3553  0003BA  0008               	tblrd		*
  3554  0003BC  FFFF               	dw	65535	; errata NOP
  3555  0003BE  50F5               	movf	tablat,w,c
  3556  0003C0  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3557  0003C2  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  3558  0003C4  5049               	movf	??_vfpfcnvrt^0,w,c
  3559  0003C6  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3560  0003C8  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3561  0003CA  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3562  0003CC  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  3563  0003CE  E10B               	bnz	u4820
  3564  0003D0  0E0A               	movlw	10
  3565  0003D2  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3566  0003D4  A0D8               	btfss	status,0,c
  3567  0003D6  EFEF  F001         	goto	u4821
  3568  0003DA  EFF3  F001         	goto	u4820
  3569  0003DE                     u4821:
  3570  0003DE  FFFF               	dw	65535	; assembler added errata NOP
  3571  0003E0  0E01               	movlw	1
  3572  0003E2  EFF5  F001         	goto	u4830
  3573  0003E6                     u4820:
  3574  0003E6  FFFF               	dw	65535	; assembler added errata NOP
  3575  0003E8  0E00               	movlw	0
  3576  0003EA                     u4830:
  3577  0003EA  FFFF               	dw	65535	; assembler added errata NOP
  3578  0003EC  6E53               	movwf	_vfpfcnvrt$1503^0,c
  3579  0003EE  6A54               	clrf	(_vfpfcnvrt$1503+1)^0,c
  3580  0003F0  5053               	movf	_vfpfcnvrt$1503^0,w,c
  3581  0003F2  1054               	iorwf	(_vfpfcnvrt$1503+1)^0,w,c
  3582  0003F4  A4D8               	btfss	status,2,c
  3583  0003F6  EFFF  F001         	goto	u4841
  3584  0003FA  EF02  F002         	goto	u4840
  3585  0003FE                     u4841:
  3586  0003FE  FFFF               	dw	65535	; assembler added errata NOP
  3587  000400  EFC8  F001         	goto	l4167
  3588  000404                     u4840:
  3589  000404                     l4175:
  3590  000404  FFFF               	dw	65535	; assembler added errata NOP
  3591                           
  3592                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 792:         if (
      +                          *fmt[0] == 'c') {
  3593  000406  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3594  00040A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3595  00040E  CFDE FFF6          	movff	postinc2,tblptrl
  3596  000412  CFDD FFF7          	movff	postdec2,tblptrh
  3597  000416                     	if	0	;tblptru may be non-zero
  3598  000416                     	endif
  3599  000416                     	if	0	;tblptru may be non-zero
  3600  000416                     	endif
  3601  000416  0008               	tblrd		*
  3602  000418  FFFF               	dw	65535	; errata NOP
  3603  00041A  50F5               	movf	tablat,w,c
  3604  00041C  0A63               	xorlw	99
  3605  00041E  A4D8               	btfss	status,2,c
  3606  000420  EF14  F002         	goto	u4851
  3607  000424  EF17  F002         	goto	u4850
  3608  000428                     u4851:
  3609  000428  FFFF               	dw	65535	; assembler added errata NOP
  3610  00042A  EF3F  F002         	goto	l4183
  3611  00042E                     u4850:
  3612  00042E  FFFF               	dw	65535	; assembler added errata NOP
  3613  000430                     
  3614                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 793:             
      +                          ++*fmt;
  3615  000430  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3616  000434  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3617  000438  2ADE               	incf	postinc2,f,c
  3618  00043A  0E00               	movlw	0
  3619  00043C  22DD               	addwfc	postdec2,f,c
  3620                           
  3621                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 794:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3622  00043E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3623  000442  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3624  000446  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3625  00044A  0E02               	movlw	2
  3626  00044C  26DE               	addwf	postinc2,f,c
  3627  00044E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3628  000452  0E00               	movlw	0
  3629  000454  22DD               	addwfc	postdec2,f,c
  3630  000456  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3631  00045A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3632  00045E  50DF               	movf	indf2,w,c
  3633  000460  6E5F               	movwf	vfpfcnvrt@c^0,c
  3634  000462                     
  3635                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 795:             
      +                          return ctoa(fp, c);
  3636  000462  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  3637  000466  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  3638  00046A  C05F  F01E         	movff	vfpfcnvrt@c,ctoa@c
  3639  00046E  EC24  F039         	call	_ctoa	;wreg free
  3640  000472  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  3641  000476  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  3642  00047A  EF2E  F00A         	goto	l1205
  3643  00047E                     l4183:
  3644  00047E  FFFF               	dw	65535	; assembler added errata NOP
  3645                           
  3646                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 802:         if (
      +                          !strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((s
      +                          izeof("hhi")/sizeof("hhi"[0]))-1))) {
  3647  000480  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3648  000484  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3649  000488  CFDE F001          	movff	postinc2,strncmp@_l
  3650  00048C  CFDD F002          	movff	postdec2,strncmp@_l+1
  3651  000490  0ECF               	movlw	low STR_9
  3652  000492  6E03               	movwf	strncmp@_r^0,c
  3653  000494  0E7F               	movlw	high STR_9
  3654  000496  6E04               	movwf	(strncmp@_r+1)^0,c
  3655  000498  0E00               	movlw	0
  3656  00049A  6E06               	movwf	(strncmp@n+1)^0,c
  3657  00049C  0E03               	movlw	3
  3658  00049E  6E05               	movwf	strncmp@n^0,c
  3659  0004A0  EC44  F03E         	call	_strncmp	;wreg free
  3660  0004A4  5001               	movf	?_strncmp^0,w,c
  3661  0004A6  1002               	iorwf	(?_strncmp+1)^0,w,c
  3662  0004A8  B4D8               	btfsc	status,2,c
  3663  0004AA  EF59  F002         	goto	u4861
  3664  0004AE  EF5C  F002         	goto	u4860
  3665  0004B2                     u4861:
  3666  0004B2  FFFF               	dw	65535	; assembler added errata NOP
  3667  0004B4  EF79  F002         	goto	l4187
  3668  0004B8                     u4860:
  3669  0004B8  FFFF               	dw	65535	; assembler added errata NOP
  3670  0004BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3671  0004BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3672  0004C2  CFDE F001          	movff	postinc2,strncmp@_l
  3673  0004C6  CFDD F002          	movff	postdec2,strncmp@_l+1
  3674  0004CA  0ED3               	movlw	low STR_13
  3675  0004CC  6E03               	movwf	strncmp@_r^0,c
  3676  0004CE  0E7F               	movlw	high STR_13
  3677  0004D0  6E04               	movwf	(strncmp@_r+1)^0,c
  3678  0004D2  0E00               	movlw	0
  3679  0004D4  6E06               	movwf	(strncmp@n+1)^0,c
  3680  0004D6  0E03               	movlw	3
  3681  0004D8  6E05               	movwf	strncmp@n^0,c
  3682  0004DA  EC44  F03E         	call	_strncmp	;wreg free
  3683  0004DE  5001               	movf	?_strncmp^0,w,c
  3684  0004E0  1002               	iorwf	(?_strncmp+1)^0,w,c
  3685  0004E2  A4D8               	btfss	status,2,c
  3686  0004E4  EF76  F002         	goto	u4871
  3687  0004E8  EF79  F002         	goto	u4870
  3688  0004EC                     u4871:
  3689  0004EC  FFFF               	dw	65535	; assembler added errata NOP
  3690  0004EE  EFBB  F002         	goto	l4193
  3691  0004F2                     u4870:
  3692  0004F2                     l4187:
  3693  0004F2  FFFF               	dw	65535	; assembler added errata NOP
  3694                           
  3695                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 803: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 805:             *fmt += ((si
      +                          zeof("hhd")/sizeof("hhd"[0]))-1);
  3696  0004F4  0E03               	movlw	3
  3697  0004F6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3698  0004FA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3699  0004FE  26DE               	addwf	postinc2,f,c
  3700  000500  0E00               	movlw	0
  3701  000502  22DD               	addwfc	postdec2,f,c
  3702                           
  3703                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 806:             
      +                          ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3704  000504  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3705  000508  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3706  00050C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3707  000510  0E02               	movlw	2
  3708  000512  26DE               	addwf	postinc2,f,c
  3709  000514  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3710  000518  0E00               	movlw	0
  3711  00051A  22DD               	addwfc	postdec2,f,c
  3712  00051C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3713  000520  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3714  000524  50DF               	movf	indf2,w,c
  3715  000526  6E55               	movwf	vfpfcnvrt@ll^0,c
  3716  000528  0E00               	movlw	0
  3717  00052A  BE55               	btfsc	vfpfcnvrt@ll^0,7,c
  3718  00052C  0EFF               	movlw	-1
  3719  00052E  6E56               	movwf	(vfpfcnvrt@ll+1)^0,c
  3720  000530  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  3721  000532  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  3722  000534  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  3723  000536  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  3724  000538  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  3725  00053A  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  3726  00053C                     l4189:
  3727  00053C  FFFF               	dw	65535	; assembler added errata NOP
  3728                           
  3729                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 808:             
      +                          return dtoa(fp, ll);
  3730  00053E  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3731  000542  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3732  000546  C055  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  3733  00054A  C056  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3734  00054E  C057  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3735  000552  C058  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3736  000556  C059  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3737  00055A  C05A  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3738  00055E  C05B  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3739  000562  C05C  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3740  000566  EC63  F015         	call	_dtoa	;wreg free
  3741  00056A  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  3742  00056E  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3743  000572  EF2E  F00A         	goto	l1205
  3744  000576                     l4193:
  3745  000576  FFFF               	dw	65535	; assembler added errata NOP
  3746                           
  3747                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          !strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeo
      +                          f("hi")/sizeof("hi"[0]))-1))) {
  3748  000578  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3749  00057C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3750  000580  CFDE F001          	movff	postinc2,strncmp@_l
  3751  000584  CFDD F002          	movff	postdec2,strncmp@_l+1
  3752  000588  0ED0               	movlw	low (STR_9+1)
  3753  00058A  6E03               	movwf	strncmp@_r^0,c
  3754  00058C  0E7F               	movlw	high (STR_9+1)
  3755  00058E  6E04               	movwf	(strncmp@_r+1)^0,c
  3756  000590  0E00               	movlw	0
  3757  000592  6E06               	movwf	(strncmp@n+1)^0,c
  3758  000594  0E02               	movlw	2
  3759  000596  6E05               	movwf	strncmp@n^0,c
  3760  000598  EC44  F03E         	call	_strncmp	;wreg free
  3761  00059C  5001               	movf	?_strncmp^0,w,c
  3762  00059E  1002               	iorwf	(?_strncmp+1)^0,w,c
  3763  0005A0  B4D8               	btfsc	status,2,c
  3764  0005A2  EFD5  F002         	goto	u4881
  3765  0005A6  EFD8  F002         	goto	u4880
  3766  0005AA                     u4881:
  3767  0005AA  FFFF               	dw	65535	; assembler added errata NOP
  3768  0005AC  EFF5  F002         	goto	l4197
  3769  0005B0                     u4880:
  3770  0005B0  FFFF               	dw	65535	; assembler added errata NOP
  3771  0005B2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3772  0005B6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3773  0005BA  CFDE F001          	movff	postinc2,strncmp@_l
  3774  0005BE  CFDD F002          	movff	postdec2,strncmp@_l+1
  3775  0005C2  0ED4               	movlw	low (STR_13+1)
  3776  0005C4  6E03               	movwf	strncmp@_r^0,c
  3777  0005C6  0E7F               	movlw	high (STR_13+1)
  3778  0005C8  6E04               	movwf	(strncmp@_r+1)^0,c
  3779  0005CA  0E00               	movlw	0
  3780  0005CC  6E06               	movwf	(strncmp@n+1)^0,c
  3781  0005CE  0E02               	movlw	2
  3782  0005D0  6E05               	movwf	strncmp@n^0,c
  3783  0005D2  EC44  F03E         	call	_strncmp	;wreg free
  3784  0005D6  5001               	movf	?_strncmp^0,w,c
  3785  0005D8  1002               	iorwf	(?_strncmp+1)^0,w,c
  3786  0005DA  A4D8               	btfss	status,2,c
  3787  0005DC  EFF2  F002         	goto	u4891
  3788  0005E0  EFF5  F002         	goto	u4890
  3789  0005E4                     u4891:
  3790  0005E4  FFFF               	dw	65535	; assembler added errata NOP
  3791  0005E6  EF1D  F003         	goto	l4203
  3792  0005EA                     u4890:
  3793  0005EA                     l4197:
  3794  0005EA  FFFF               	dw	65535	; assembler added errata NOP
  3795                           
  3796                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 815: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 817:             *fmt += ((si
      +                          zeof("hd")/sizeof("hd"[0]))-1);
  3797  0005EC  0E02               	movlw	2
  3798  0005EE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3799  0005F2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3800  0005F6  26DE               	addwf	postinc2,f,c
  3801  0005F8  0E00               	movlw	0
  3802  0005FA  22DD               	addwfc	postdec2,f,c
  3803                           
  3804                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 818:             
      +                          ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  3805  0005FC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3806  000600  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3807  000604  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3808  000608  0E02               	movlw	2
  3809  00060A  26DE               	addwf	postinc2,f,c
  3810  00060C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3811  000610  0E00               	movlw	0
  3812  000612  22DD               	addwfc	postdec2,f,c
  3813  000614  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3814  000618  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3815  00061C  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  3816  000620  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  3817  000624  0E00               	movlw	0
  3818  000626  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  3819  000628  0EFF               	movlw	-1
  3820  00062A  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  3821  00062C  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  3822  00062E  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  3823  000630  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  3824  000632  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  3825  000634  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  3826  000636  EF9E  F002         	goto	l4189
  3827  00063A                     l4203:
  3828  00063A  FFFF               	dw	65535	; assembler added errata NOP
  3829                           
  3830                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3831  00063C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3832  000640  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3833  000644  CFDE FFF6          	movff	postinc2,tblptrl
  3834  000648  CFDD FFF7          	movff	postdec2,tblptrh
  3835  00064C                     	if	0	;tblptru may be non-zero
  3836  00064C                     	endif
  3837  00064C                     	if	0	;tblptru may be non-zero
  3838  00064C                     	endif
  3839  00064C  0008               	tblrd		*
  3840  00064E  FFFF               	dw	65535	; errata NOP
  3841  000650  50F5               	movf	tablat,w,c
  3842  000652  0A64               	xorlw	100
  3843  000654  B4D8               	btfsc	status,2,c
  3844  000656  EF2F  F003         	goto	u4901
  3845  00065A  EF32  F003         	goto	u4900
  3846  00065E                     u4901:
  3847  00065E  FFFF               	dw	65535	; assembler added errata NOP
  3848  000660  EF47  F003         	goto	l4207
  3849  000664                     u4900:
  3850  000664  FFFF               	dw	65535	; assembler added errata NOP
  3851  000666  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3852  00066A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3853  00066E  CFDE FFF6          	movff	postinc2,tblptrl
  3854  000672  CFDD FFF7          	movff	postdec2,tblptrh
  3855  000676                     	if	0	;tblptru may be non-zero
  3856  000676                     	endif
  3857  000676                     	if	0	;tblptru may be non-zero
  3858  000676                     	endif
  3859  000676  0008               	tblrd		*
  3860  000678  FFFF               	dw	65535	; errata NOP
  3861  00067A  50F5               	movf	tablat,w,c
  3862  00067C  0A69               	xorlw	105
  3863  00067E  A4D8               	btfss	status,2,c
  3864  000680  EF44  F003         	goto	u4911
  3865  000684  EF47  F003         	goto	u4910
  3866  000688                     u4911:
  3867  000688  FFFF               	dw	65535	; assembler added errata NOP
  3868  00068A  EF6E  F003         	goto	l4213
  3869  00068E                     u4910:
  3870  00068E                     l4207:
  3871  00068E  FFFF               	dw	65535	; assembler added errata NOP
  3872                           
  3873                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  3874  000690  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3875  000694  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3876  000698  2ADE               	incf	postinc2,f,c
  3877  00069A  0E00               	movlw	0
  3878  00069C  22DD               	addwfc	postdec2,f,c
  3879                           
  3880                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3881  00069E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3882  0006A2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3883  0006A6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3884  0006AA  0E02               	movlw	2
  3885  0006AC  26DE               	addwf	postinc2,f,c
  3886  0006AE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3887  0006B2  0E00               	movlw	0
  3888  0006B4  22DD               	addwfc	postdec2,f,c
  3889  0006B6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3890  0006BA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3891  0006BE  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  3892  0006C2  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  3893  0006C6  0E00               	movlw	0
  3894  0006C8  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  3895  0006CA  0EFF               	movlw	-1
  3896  0006CC  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  3897  0006CE  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  3898  0006D0  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  3899  0006D2  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  3900  0006D4  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  3901  0006D6  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  3902  0006D8  EF9E  F002         	goto	l4189
  3903  0006DC                     l4213:
  3904  0006DC  FFFF               	dw	65535	; assembler added errata NOP
  3905                           
  3906                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 883:         if (
      +                          !strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeo
      +                          f("zi")/sizeof("zi"[0]))-1))) {
  3907  0006DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3908  0006E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3909  0006E6  CFDE F001          	movff	postinc2,strncmp@_l
  3910  0006EA  CFDD F002          	movff	postdec2,strncmp@_l+1
  3911  0006EE  0EEA               	movlw	low STR_27
  3912  0006F0  6E03               	movwf	strncmp@_r^0,c
  3913  0006F2  0E7F               	movlw	high STR_27
  3914  0006F4  6E04               	movwf	(strncmp@_r+1)^0,c
  3915  0006F6  0E00               	movlw	0
  3916  0006F8  6E06               	movwf	(strncmp@n+1)^0,c
  3917  0006FA  0E02               	movlw	2
  3918  0006FC  6E05               	movwf	strncmp@n^0,c
  3919  0006FE  EC44  F03E         	call	_strncmp	;wreg free
  3920  000702  5001               	movf	?_strncmp^0,w,c
  3921  000704  1002               	iorwf	(?_strncmp+1)^0,w,c
  3922  000706  B4D8               	btfsc	status,2,c
  3923  000708  EF88  F003         	goto	u4921
  3924  00070C  EF8B  F003         	goto	u4920
  3925  000710                     u4921:
  3926  000710  FFFF               	dw	65535	; assembler added errata NOP
  3927  000712  EFA8  F003         	goto	l4217
  3928  000716                     u4920:
  3929  000716  FFFF               	dw	65535	; assembler added errata NOP
  3930  000718  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3931  00071C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3932  000720  CFDE F001          	movff	postinc2,strncmp@_l
  3933  000724  CFDD F002          	movff	postdec2,strncmp@_l+1
  3934  000728  0EED               	movlw	low STR_31
  3935  00072A  6E03               	movwf	strncmp@_r^0,c
  3936  00072C  0E7F               	movlw	high STR_31
  3937  00072E  6E04               	movwf	(strncmp@_r+1)^0,c
  3938  000730  0E00               	movlw	0
  3939  000732  6E06               	movwf	(strncmp@n+1)^0,c
  3940  000734  0E02               	movlw	2
  3941  000736  6E05               	movwf	strncmp@n^0,c
  3942  000738  EC44  F03E         	call	_strncmp	;wreg free
  3943  00073C  5001               	movf	?_strncmp^0,w,c
  3944  00073E  1002               	iorwf	(?_strncmp+1)^0,w,c
  3945  000740  A4D8               	btfss	status,2,c
  3946  000742  EFA5  F003         	goto	u4931
  3947  000746  EFA8  F003         	goto	u4930
  3948  00074A                     u4931:
  3949  00074A  FFFF               	dw	65535	; assembler added errata NOP
  3950  00074C  EFD1  F003         	goto	l4223
  3951  000750                     u4930:
  3952  000750                     l4217:
  3953  000750  FFFF               	dw	65535	; assembler added errata NOP
  3954                           
  3955                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 884: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 886:             *fmt += ((si
      +                          zeof("zd")/sizeof("zd"[0]))-1);
  3956  000752  0E02               	movlw	2
  3957  000754  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3958  000758  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3959  00075C  26DE               	addwf	postinc2,f,c
  3960  00075E  0E00               	movlw	0
  3961  000760  22DD               	addwfc	postdec2,f,c
  3962                           
  3963                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 887:             
      +                          ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3964  000762  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3965  000766  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3966  00076A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3967  00076E  0E02               	movlw	2
  3968  000770  26DE               	addwf	postinc2,f,c
  3969  000772  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3970  000776  0E00               	movlw	0
  3971  000778  22DD               	addwfc	postdec2,f,c
  3972  00077A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3973  00077E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3974  000782  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3975  000786  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3976  00078A  C04B  F055         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  3977  00078E  C04C  F056         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  3978  000792  6A57               	clrf	(vfpfcnvrt@ll+2)^0,c
  3979  000794  6A58               	clrf	(vfpfcnvrt@ll+3)^0,c
  3980  000796  6A59               	clrf	(vfpfcnvrt@ll+4)^0,c
  3981  000798  6A5A               	clrf	(vfpfcnvrt@ll+5)^0,c
  3982  00079A  6A5B               	clrf	(vfpfcnvrt@ll+6)^0,c
  3983  00079C  6A5C               	clrf	(vfpfcnvrt@ll+7)^0,c
  3984  00079E  EF9E  F002         	goto	l4189
  3985  0007A2                     l4223:
  3986  0007A2  FFFF               	dw	65535	; assembler added errata NOP
  3987                           
  3988                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 969:         if (
      +                          !strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  3989  0007A4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3990  0007A8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3991  0007AC  CFDE F001          	movff	postinc2,strncmp@_l
  3992  0007B0  CFDD F002          	movff	postdec2,strncmp@_l+1
  3993  0007B4  0EDB               	movlw	low STR_36
  3994  0007B6  6E03               	movwf	strncmp@_r^0,c
  3995  0007B8  0E7F               	movlw	high STR_36
  3996  0007BA  6E04               	movwf	(strncmp@_r+1)^0,c
  3997  0007BC  0E00               	movlw	0
  3998  0007BE  6E06               	movwf	(strncmp@n+1)^0,c
  3999  0007C0  0E03               	movlw	3
  4000  0007C2  6E05               	movwf	strncmp@n^0,c
  4001  0007C4  EC44  F03E         	call	_strncmp	;wreg free
  4002  0007C8  5001               	movf	?_strncmp^0,w,c
  4003  0007CA  1002               	iorwf	(?_strncmp+1)^0,w,c
  4004  0007CC  A4D8               	btfss	status,2,c
  4005  0007CE  EFEB  F003         	goto	u4941
  4006  0007D2  EFEE  F003         	goto	u4940
  4007  0007D6                     u4941:
  4008  0007D6  FFFF               	dw	65535	; assembler added errata NOP
  4009  0007D8  EF2F  F004         	goto	l4231
  4010  0007DC                     u4940:
  4011  0007DC  FFFF               	dw	65535	; assembler added errata NOP
  4012  0007DE                     
  4013                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 971:             
      +                          *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  4014  0007DE  0E03               	movlw	3
  4015  0007E0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4016  0007E4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4017  0007E8  26DE               	addwf	postinc2,f,c
  4018  0007EA  0E00               	movlw	0
  4019  0007EC  22DD               	addwfc	postdec2,f,c
  4020                           
  4021                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 972:             
      +                          llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4022  0007EE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4023  0007F2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4024  0007F6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4025  0007FA  0E02               	movlw	2
  4026  0007FC  26DE               	addwf	postinc2,f,c
  4027  0007FE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4028  000802  0E00               	movlw	0
  4029  000804  22DD               	addwfc	postdec2,f,c
  4030  000806  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4031  00080A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4032  00080E  50DF               	movf	indf2,w,c
  4033  000810  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4034  000812  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  4035  000814  6E60               	movwf	vfpfcnvrt@llu^0,c
  4036  000816  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  4037  000818  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4038  00081A  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4039  00081C  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4040  00081E  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4041  000820  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4042  000822  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4043  000824                     l4227:
  4044  000824  FFFF               	dw	65535	; assembler added errata NOP
  4045                           
  4046                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 974:             
      +                          return otoa(fp, llu);
  4047  000826  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  4048  00082A  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  4049  00082E  C060  F01E         	movff	vfpfcnvrt@llu,otoa@d
  4050  000832  C061  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  4051  000836  C062  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  4052  00083A  C063  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  4053  00083E  C064  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  4054  000842  C065  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  4055  000846  C066  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  4056  00084A  C067  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  4057  00084E  ECAB  F019         	call	_otoa	;wreg free
  4058  000852  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  4059  000856  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  4060  00085A  EF2E  F00A         	goto	l1205
  4061  00085E                     l4231:
  4062  00085E  FFFF               	dw	65535	; assembler added errata NOP
  4063                           
  4064                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 980:         if (
      +                          !strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  4065  000860  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4066  000864  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4067  000868  CFDE F001          	movff	postinc2,strncmp@_l
  4068  00086C  CFDD F002          	movff	postdec2,strncmp@_l+1
  4069  000870  0EDC               	movlw	low (STR_36+1)
  4070  000872  6E03               	movwf	strncmp@_r^0,c
  4071  000874  0E7F               	movlw	high (STR_36+1)
  4072  000876  6E04               	movwf	(strncmp@_r+1)^0,c
  4073  000878  0E00               	movlw	0
  4074  00087A  6E06               	movwf	(strncmp@n+1)^0,c
  4075  00087C  0E02               	movlw	2
  4076  00087E  6E05               	movwf	strncmp@n^0,c
  4077  000880  EC44  F03E         	call	_strncmp	;wreg free
  4078  000884  5001               	movf	?_strncmp^0,w,c
  4079  000886  1002               	iorwf	(?_strncmp+1)^0,w,c
  4080  000888  A4D8               	btfss	status,2,c
  4081  00088A  EF49  F004         	goto	u4951
  4082  00088E  EF4C  F004         	goto	u4950
  4083  000892                     u4951:
  4084  000892  FFFF               	dw	65535	; assembler added errata NOP
  4085  000894  EF75  F004         	goto	l4239
  4086  000898                     u4950:
  4087  000898  FFFF               	dw	65535	; assembler added errata NOP
  4088  00089A                     
  4089                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 982:             
      +                          *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  4090  00089A  0E02               	movlw	2
  4091  00089C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4092  0008A0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4093  0008A4  26DE               	addwf	postinc2,f,c
  4094  0008A6  0E00               	movlw	0
  4095  0008A8  22DD               	addwfc	postdec2,f,c
  4096                           
  4097                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 983:             
      +                          llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4098  0008AA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4099  0008AE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4100  0008B2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4101  0008B6  0E02               	movlw	2
  4102  0008B8  26DE               	addwf	postinc2,f,c
  4103  0008BA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4104  0008BE  0E00               	movlw	0
  4105  0008C0  22DD               	addwfc	postdec2,f,c
  4106  0008C2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4107  0008C6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4108  0008CA  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4109  0008CE  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4110  0008D2  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4111  0008D6  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4112  0008DA  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4113  0008DC  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4114  0008DE  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4115  0008E0  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4116  0008E2  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4117  0008E4  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4118  0008E6  EF12  F004         	goto	l4227
  4119  0008EA                     l4239:
  4120  0008EA  FFFF               	dw	65535	; assembler added errata NOP
  4121                           
  4122                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 990:         if (
      +                          *fmt[0] == 'o') {
  4123  0008EC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4124  0008F0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4125  0008F4  CFDE FFF6          	movff	postinc2,tblptrl
  4126  0008F8  CFDD FFF7          	movff	postdec2,tblptrh
  4127  0008FC                     	if	0	;tblptru may be non-zero
  4128  0008FC                     	endif
  4129  0008FC                     	if	0	;tblptru may be non-zero
  4130  0008FC                     	endif
  4131  0008FC  0008               	tblrd		*
  4132  0008FE  FFFF               	dw	65535	; errata NOP
  4133  000900  50F5               	movf	tablat,w,c
  4134  000902  0A6F               	xorlw	111
  4135  000904  A4D8               	btfss	status,2,c
  4136  000906  EF87  F004         	goto	u4961
  4137  00090A  EF8A  F004         	goto	u4960
  4138  00090E                     u4961:
  4139  00090E  FFFF               	dw	65535	; assembler added errata NOP
  4140  000910  EFB2  F004         	goto	l4247
  4141  000914                     u4960:
  4142  000914  FFFF               	dw	65535	; assembler added errata NOP
  4143  000916                     
  4144                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 992:             
      +                          ++*fmt;
  4145  000916  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4146  00091A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4147  00091E  2ADE               	incf	postinc2,f,c
  4148  000920  0E00               	movlw	0
  4149  000922  22DD               	addwfc	postdec2,f,c
  4150                           
  4151                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 993:             
      +                          llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int
      +                          )0));
  4152  000924  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4153  000928  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4154  00092C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4155  000930  0E02               	movlw	2
  4156  000932  26DE               	addwf	postinc2,f,c
  4157  000934  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4158  000938  0E00               	movlw	0
  4159  00093A  22DD               	addwfc	postdec2,f,c
  4160  00093C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4161  000940  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4162  000944  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4163  000948  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4164  00094C  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4165  000950  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4166  000954  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4167  000956  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4168  000958  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4169  00095A  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4170  00095C  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4171  00095E  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4172  000960  EF12  F004         	goto	l4227
  4173  000964                     l4247:
  4174  000964  FFFF               	dw	65535	; assembler added errata NOP
  4175                           
  4176                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1044:         if 
      +                          (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  4177  000966  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4178  00096A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4179  00096E  CFDE F001          	movff	postinc2,strncmp@_l
  4180  000972  CFDD F002          	movff	postdec2,strncmp@_l+1
  4181  000976  0EF3               	movlw	low STR_46
  4182  000978  6E03               	movwf	strncmp@_r^0,c
  4183  00097A  0E7F               	movlw	high STR_46
  4184  00097C  6E04               	movwf	(strncmp@_r+1)^0,c
  4185  00097E  0E00               	movlw	0
  4186  000980  6E06               	movwf	(strncmp@n+1)^0,c
  4187  000982  0E02               	movlw	2
  4188  000984  6E05               	movwf	strncmp@n^0,c
  4189  000986  EC44  F03E         	call	_strncmp	;wreg free
  4190  00098A  5001               	movf	?_strncmp^0,w,c
  4191  00098C  1002               	iorwf	(?_strncmp+1)^0,w,c
  4192  00098E  A4D8               	btfss	status,2,c
  4193  000990  EFCC  F004         	goto	u4971
  4194  000994  EFCF  F004         	goto	u4970
  4195  000998                     u4971:
  4196  000998  FFFF               	dw	65535	; assembler added errata NOP
  4197  00099A  EFF8  F004         	goto	l4255
  4198  00099E                     u4970:
  4199  00099E  FFFF               	dw	65535	; assembler added errata NOP
  4200  0009A0                     
  4201                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1046:            
      +                           *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  4202  0009A0  0E02               	movlw	2
  4203  0009A2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4204  0009A6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4205  0009AA  26DE               	addwf	postinc2,f,c
  4206  0009AC  0E00               	movlw	0
  4207  0009AE  22DD               	addwfc	postdec2,f,c
  4208                           
  4209                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1047:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4210  0009B0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4211  0009B4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4212  0009B8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4213  0009BC  0E02               	movlw	2
  4214  0009BE  26DE               	addwf	postinc2,f,c
  4215  0009C0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4216  0009C4  0E00               	movlw	0
  4217  0009C6  22DD               	addwfc	postdec2,f,c
  4218  0009C8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4219  0009CC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4220  0009D0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4221  0009D4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4222  0009D8  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4223  0009DC  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4224  0009E0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4225  0009E2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4226  0009E4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4227  0009E6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4228  0009E8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4229  0009EA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4230  0009EC  EF12  F004         	goto	l4227
  4231  0009F0                     l4255:
  4232  0009F0  FFFF               	dw	65535	; assembler added errata NOP
  4233                           
  4234                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1058:         if 
      +                          (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  4235  0009F2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4236  0009F6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4237  0009FA  CFDE F001          	movff	postinc2,strncmp@_l
  4238  0009FE  CFDD F002          	movff	postdec2,strncmp@_l+1
  4239  000A02  0ED7               	movlw	low STR_51
  4240  000A04  6E03               	movwf	strncmp@_r^0,c
  4241  000A06  0E7F               	movlw	high STR_51
  4242  000A08  6E04               	movwf	(strncmp@_r+1)^0,c
  4243  000A0A  0E00               	movlw	0
  4244  000A0C  6E06               	movwf	(strncmp@n+1)^0,c
  4245  000A0E  0E03               	movlw	3
  4246  000A10  6E05               	movwf	strncmp@n^0,c
  4247  000A12  EC44  F03E         	call	_strncmp	;wreg free
  4248  000A16  5001               	movf	?_strncmp^0,w,c
  4249  000A18  1002               	iorwf	(?_strncmp+1)^0,w,c
  4250  000A1A  A4D8               	btfss	status,2,c
  4251  000A1C  EF12  F005         	goto	u4981
  4252  000A20  EF15  F005         	goto	u4980
  4253  000A24                     u4981:
  4254  000A24  FFFF               	dw	65535	; assembler added errata NOP
  4255  000A26  EF4B  F005         	goto	l4265
  4256  000A2A                     u4980:
  4257  000A2A  FFFF               	dw	65535	; assembler added errata NOP
  4258  000A2C                     
  4259                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1060:            
      +                           *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  4260  000A2C  0E03               	movlw	3
  4261  000A2E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4262  000A32  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4263  000A36  26DE               	addwf	postinc2,f,c
  4264  000A38  0E00               	movlw	0
  4265  000A3A  22DD               	addwfc	postdec2,f,c
  4266                           
  4267                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1061:            
      +                           vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4268  000A3C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4269  000A40  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4270  000A44  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4271  000A48  0E02               	movlw	2
  4272  000A4A  26DE               	addwf	postinc2,f,c
  4273  000A4C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4274  000A50  0E00               	movlw	0
  4275  000A52  22DD               	addwfc	postdec2,f,c
  4276  000A54  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4277  000A58  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4278  000A5C  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4279  000A60  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4280  000A64                     
  4281                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1062:            
      +                           *(char *)vp = (char)nout;
  4282  000A64  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4283  000A68  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4284  000A6C  6AF8               	clrf	tblptru,c
  4285  000A6E  0E05               	movlw	(high __ramtop+-1)
  4286  000A70  64F7               	cpfsgt	tblptrh,c
  4287  000A72  D004               	bra	u4997
  4288  000A74  C084  FFF5         	movff	_nout,tablat
  4289  000A78  000C               	tblwt		*
  4290  000A7A  D006               	bra	u4990
  4291  000A7C                     u4997:
  4292  000A7C  CFF6 FFE1          	movff	tblptrl,fsr1l
  4293  000A80  CFF7 FFE2          	movff	tblptrh,fsr1h
  4294  000A84  C084  FFE7         	movff	_nout,indf1
  4295  000A88                     u4990:
  4296  000A88                     l4261:
  4297  000A88  FFFF               	dw	65535	; assembler added errata NOP
  4298                           
  4299                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1063:            
      +                           return 0;
  4300  000A8A  0E00               	movlw	0
  4301  000A8C  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  4302  000A8E  0E00               	movlw	0
  4303  000A90  6E43               	movwf	?_vfpfcnvrt^0,c
  4304  000A92  EF2E  F00A         	goto	l1205
  4305  000A96                     l4265:
  4306  000A96  FFFF               	dw	65535	; assembler added errata NOP
  4307                           
  4308                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1068:         if 
      +                          (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  4309  000A98  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4310  000A9C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4311  000AA0  CFDE F001          	movff	postinc2,strncmp@_l
  4312  000AA4  CFDD F002          	movff	postdec2,strncmp@_l+1
  4313  000AA8  0ED8               	movlw	low (STR_51+1)
  4314  000AAA  6E03               	movwf	strncmp@_r^0,c
  4315  000AAC  0E7F               	movlw	high (STR_51+1)
  4316  000AAE  6E04               	movwf	(strncmp@_r+1)^0,c
  4317  000AB0  0E00               	movlw	0
  4318  000AB2  6E06               	movwf	(strncmp@n+1)^0,c
  4319  000AB4  0E02               	movlw	2
  4320  000AB6  6E05               	movwf	strncmp@n^0,c
  4321  000AB8  EC44  F03E         	call	_strncmp	;wreg free
  4322  000ABC  5001               	movf	?_strncmp^0,w,c
  4323  000ABE  1002               	iorwf	(?_strncmp+1)^0,w,c
  4324  000AC0  A4D8               	btfss	status,2,c
  4325  000AC2  EF65  F005         	goto	u5001
  4326  000AC6  EF68  F005         	goto	u5000
  4327  000ACA                     u5001:
  4328  000ACA  FFFF               	dw	65535	; assembler added errata NOP
  4329  000ACC  EF9E  F005         	goto	l4275
  4330  000AD0                     u5000:
  4331  000AD0  FFFF               	dw	65535	; assembler added errata NOP
  4332  000AD2                     
  4333                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1070:            
      +                           *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  4334  000AD2  0E02               	movlw	2
  4335  000AD4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4336  000AD8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4337  000ADC  26DE               	addwf	postinc2,f,c
  4338  000ADE  0E00               	movlw	0
  4339  000AE0  22DD               	addwfc	postdec2,f,c
  4340                           
  4341                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1071:            
      +                           vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  4342  000AE2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4343  000AE6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4344  000AEA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4345  000AEE  0E02               	movlw	2
  4346  000AF0  26DE               	addwf	postinc2,f,c
  4347  000AF2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4348  000AF6  0E00               	movlw	0
  4349  000AF8  22DD               	addwfc	postdec2,f,c
  4350  000AFA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4351  000AFE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4352  000B02  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4353  000B06  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4354  000B0A                     
  4355                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1072:            
      +                           *(short *)vp = (short)nout;
  4356  000B0A  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4357  000B0E  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4358  000B12  6AF8               	clrf	tblptru,c
  4359  000B14  0E05               	movlw	(high __ramtop+-1)
  4360  000B16  64F7               	cpfsgt	tblptrh,c
  4361  000B18  D007               	bra	u5017
  4362  000B1A  C084  FFF5         	movff	_nout,tablat
  4363  000B1E  000D               	tblwt		*+
  4364  000B20  C085  FFF5         	movff	_nout+1,tablat
  4365  000B24  000C               	tblwt		*
  4366  000B26  D008               	bra	u5010
  4367  000B28                     u5017:
  4368  000B28  CFF6 FFE1          	movff	tblptrl,fsr1l
  4369  000B2C  CFF7 FFE2          	movff	tblptrh,fsr1h
  4370  000B30  C084  FFE6         	movff	_nout,postinc1
  4371  000B34  C085  FFE7         	movff	_nout+1,indf1
  4372  000B38                     u5010:
  4373  000B38  EF44  F005         	goto	l4261
  4374  000B3C                     l4275:
  4375  000B3C  FFFF               	dw	65535	; assembler added errata NOP
  4376                           
  4377                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1077:         if 
      +                          (*fmt[0] == 'n') {
  4378  000B3E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4379  000B42  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4380  000B46  CFDE FFF6          	movff	postinc2,tblptrl
  4381  000B4A  CFDD FFF7          	movff	postdec2,tblptrh
  4382  000B4E                     	if	0	;tblptru may be non-zero
  4383  000B4E                     	endif
  4384  000B4E                     	if	0	;tblptru may be non-zero
  4385  000B4E                     	endif
  4386  000B4E  0008               	tblrd		*
  4387  000B50  FFFF               	dw	65535	; errata NOP
  4388  000B52  50F5               	movf	tablat,w,c
  4389  000B54  0A6E               	xorlw	110
  4390  000B56  A4D8               	btfss	status,2,c
  4391  000B58  EFB0  F005         	goto	u5021
  4392  000B5C  EFB3  F005         	goto	u5020
  4393  000B60                     u5021:
  4394  000B60  FFFF               	dw	65535	; assembler added errata NOP
  4395  000B62  EFE8  F005         	goto	l4285
  4396  000B66                     u5020:
  4397  000B66  FFFF               	dw	65535	; assembler added errata NOP
  4398  000B68                     
  4399                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1078:            
      +                           ++*fmt;
  4400  000B68  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4401  000B6C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4402  000B70  2ADE               	incf	postinc2,f,c
  4403  000B72  0E00               	movlw	0
  4404  000B74  22DD               	addwfc	postdec2,f,c
  4405                           
  4406                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1079:            
      +                           vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  4407  000B76  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4408  000B7A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4409  000B7E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4410  000B82  0E02               	movlw	2
  4411  000B84  26DE               	addwf	postinc2,f,c
  4412  000B86  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4413  000B8A  0E00               	movlw	0
  4414  000B8C  22DD               	addwfc	postdec2,f,c
  4415  000B8E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4416  000B92  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4417  000B96  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4418  000B9A  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4419  000B9E                     
  4420                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1080:            
      +                           *(int *)vp = nout;
  4421  000B9E  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4422  000BA2  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4423  000BA6  6AF8               	clrf	tblptru,c
  4424  000BA8  0E05               	movlw	(high __ramtop+-1)
  4425  000BAA  64F7               	cpfsgt	tblptrh,c
  4426  000BAC  D007               	bra	u5037
  4427  000BAE  C084  FFF5         	movff	_nout,tablat
  4428  000BB2  000D               	tblwt		*+
  4429  000BB4  C085  FFF5         	movff	_nout+1,tablat
  4430  000BB8  000C               	tblwt		*
  4431  000BBA  D008               	bra	u5030
  4432  000BBC                     u5037:
  4433  000BBC  CFF6 FFE1          	movff	tblptrl,fsr1l
  4434  000BC0  CFF7 FFE2          	movff	tblptrh,fsr1h
  4435  000BC4  C084  FFE6         	movff	_nout,postinc1
  4436  000BC8  C085  FFE7         	movff	_nout+1,indf1
  4437  000BCC                     u5030:
  4438  000BCC  EF44  F005         	goto	l4261
  4439  000BD0                     l4285:
  4440  000BD0  FFFF               	dw	65535	; assembler added errata NOP
  4441                           
  4442                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1125:         if 
      +                          (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  4443  000BD2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4444  000BD6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4445  000BDA  CFDE F001          	movff	postinc2,strncmp@_l
  4446  000BDE  CFDD F002          	movff	postdec2,strncmp@_l+1
  4447  000BE2  0EF0               	movlw	low STR_61
  4448  000BE4  6E03               	movwf	strncmp@_r^0,c
  4449  000BE6  0E7F               	movlw	high STR_61
  4450  000BE8  6E04               	movwf	(strncmp@_r+1)^0,c
  4451  000BEA  0E00               	movlw	0
  4452  000BEC  6E06               	movwf	(strncmp@n+1)^0,c
  4453  000BEE  0E02               	movlw	2
  4454  000BF0  6E05               	movwf	strncmp@n^0,c
  4455  000BF2  EC44  F03E         	call	_strncmp	;wreg free
  4456  000BF6  5001               	movf	?_strncmp^0,w,c
  4457  000BF8  1002               	iorwf	(?_strncmp+1)^0,w,c
  4458  000BFA  A4D8               	btfss	status,2,c
  4459  000BFC  EF02  F006         	goto	u5041
  4460  000C00  EF05  F006         	goto	u5040
  4461  000C04                     u5041:
  4462  000C04  FFFF               	dw	65535	; assembler added errata NOP
  4463  000C06  EF3B  F006         	goto	l4295
  4464  000C0A                     u5040:
  4465  000C0A  FFFF               	dw	65535	; assembler added errata NOP
  4466  000C0C                     
  4467                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1127:            
      +                           *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  4468  000C0C  0E02               	movlw	2
  4469  000C0E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4470  000C12  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4471  000C16  26DE               	addwf	postinc2,f,c
  4472  000C18  0E00               	movlw	0
  4473  000C1A  22DD               	addwfc	postdec2,f,c
  4474                           
  4475                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1128:            
      +                           vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  4476  000C1C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4477  000C20  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4478  000C24  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4479  000C28  0E02               	movlw	2
  4480  000C2A  26DE               	addwf	postinc2,f,c
  4481  000C2C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4482  000C30  0E00               	movlw	0
  4483  000C32  22DD               	addwfc	postdec2,f,c
  4484  000C34  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4485  000C38  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4486  000C3C  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4487  000C40  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4488  000C44                     
  4489                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1129:            
      +                           *(size_t *)vp = (size_t)nout;
  4490  000C44  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4491  000C48  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4492  000C4C  6AF8               	clrf	tblptru,c
  4493  000C4E  0E05               	movlw	(high __ramtop+-1)
  4494  000C50  64F7               	cpfsgt	tblptrh,c
  4495  000C52  D007               	bra	u5057
  4496  000C54  C084  FFF5         	movff	_nout,tablat
  4497  000C58  000D               	tblwt		*+
  4498  000C5A  C085  FFF5         	movff	_nout+1,tablat
  4499  000C5E  000C               	tblwt		*
  4500  000C60  D008               	bra	u5050
  4501  000C62                     u5057:
  4502  000C62  CFF6 FFE1          	movff	tblptrl,fsr1l
  4503  000C66  CFF7 FFE2          	movff	tblptrh,fsr1h
  4504  000C6A  C084  FFE6         	movff	_nout,postinc1
  4505  000C6E  C085  FFE7         	movff	_nout+1,indf1
  4506  000C72                     u5050:
  4507  000C72  EF44  F005         	goto	l4261
  4508  000C76                     l4295:
  4509  000C76  FFFF               	dw	65535	; assembler added errata NOP
  4510                           
  4511                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1138:         if 
      +                          (*fmt[0] == 'p') {
  4512  000C78  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4513  000C7C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4514  000C80  CFDE FFF6          	movff	postinc2,tblptrl
  4515  000C84  CFDD FFF7          	movff	postdec2,tblptrh
  4516  000C88                     	if	0	;tblptru may be non-zero
  4517  000C88                     	endif
  4518  000C88                     	if	0	;tblptru may be non-zero
  4519  000C88                     	endif
  4520  000C88  0008               	tblrd		*
  4521  000C8A  FFFF               	dw	65535	; errata NOP
  4522  000C8C  50F5               	movf	tablat,w,c
  4523  000C8E  0A70               	xorlw	112
  4524  000C90  A4D8               	btfss	status,2,c
  4525  000C92  EF4D  F006         	goto	u5061
  4526  000C96  EF50  F006         	goto	u5060
  4527  000C9A                     u5061:
  4528  000C9A  FFFF               	dw	65535	; assembler added errata NOP
  4529  000C9C  EF94  F006         	goto	l4303
  4530  000CA0                     u5060:
  4531  000CA0  FFFF               	dw	65535	; assembler added errata NOP
  4532  000CA2                     
  4533                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1140:            
      +                           ++*fmt;
  4534  000CA2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4535  000CA6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4536  000CAA  2ADE               	incf	postinc2,f,c
  4537  000CAC  0E00               	movlw	0
  4538  000CAE  22DD               	addwfc	postdec2,f,c
  4539                           
  4540                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1141:            
      +                           llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  4541  000CB0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4542  000CB4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4543  000CB8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4544  000CBC  0E02               	movlw	2
  4545  000CBE  26DE               	addwf	postinc2,f,c
  4546  000CC0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4547  000CC4  0E00               	movlw	0
  4548  000CC6  22DD               	addwfc	postdec2,f,c
  4549  000CC8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4550  000CCC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4551  000CD0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4552  000CD4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4553  000CD8  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4554  000CDC  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4555  000CE0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4556  000CE2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4557  000CE4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4558  000CE6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4559  000CE8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4560  000CEA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4561  000CEC                     
  4562                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1143:            
      +                           return xtoa(fp, llu, 'x');
  4563  000CEC  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  4564  000CF0  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  4565  000CF4  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  4566  000CF8  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  4567  000CFC  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  4568  000D00  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  4569  000D04  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  4570  000D08  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  4571  000D0C  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  4572  000D10  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  4573  000D14  0E78               	movlw	120
  4574  000D16  6E26               	movwf	xtoa@x^0,c
  4575  000D18  ECFD  F016         	call	_xtoa	;wreg free
  4576  000D1C  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  4577  000D20  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  4578  000D24  EF2E  F00A         	goto	l1205
  4579  000D28                     l4303:
  4580  000D28  FFFF               	dw	65535	; assembler added errata NOP
  4581                           
  4582                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1149:         if 
      +                          (*fmt[0] == 's') {
  4583  000D2A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4584  000D2E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4585  000D32  CFDE FFF6          	movff	postinc2,tblptrl
  4586  000D36  CFDD FFF7          	movff	postdec2,tblptrh
  4587  000D3A                     	if	0	;tblptru may be non-zero
  4588  000D3A                     	endif
  4589  000D3A                     	if	0	;tblptru may be non-zero
  4590  000D3A                     	endif
  4591  000D3A  0008               	tblrd		*
  4592  000D3C  FFFF               	dw	65535	; errata NOP
  4593  000D3E  50F5               	movf	tablat,w,c
  4594  000D40  0A73               	xorlw	115
  4595  000D42  A4D8               	btfss	status,2,c
  4596  000D44  EFA6  F006         	goto	u5071
  4597  000D48  EFA9  F006         	goto	u5070
  4598  000D4C                     u5071:
  4599  000D4C  FFFF               	dw	65535	; assembler added errata NOP
  4600  000D4E  EFD5  F006         	goto	l4311
  4601  000D52                     u5070:
  4602  000D52  FFFF               	dw	65535	; assembler added errata NOP
  4603  000D54                     
  4604                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1151:            
      +                           ++*fmt;
  4605  000D54  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4606  000D58  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4607  000D5C  2ADE               	incf	postinc2,f,c
  4608  000D5E  0E00               	movlw	0
  4609  000D60  22DD               	addwfc	postdec2,f,c
  4610                           
  4611                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1152:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4612  000D62  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4613  000D66  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4614  000D6A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4615  000D6E  0E02               	movlw	2
  4616  000D70  26DE               	addwf	postinc2,f,c
  4617  000D72  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4618  000D76  0E00               	movlw	0
  4619  000D78  22DD               	addwfc	postdec2,f,c
  4620  000D7A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4621  000D7E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4622  000D82  CFDE F04D          	movff	postinc2,vfpfcnvrt@cp
  4623  000D86  CFDD F04E          	movff	postdec2,vfpfcnvrt@cp+1
  4624  000D8A                     
  4625                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1154:            
      +                           return stoa(fp, cp);
  4626  000D8A  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  4627  000D8E  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  4628  000D92  C04D  F00C         	movff	vfpfcnvrt@cp,stoa@s
  4629  000D96  C04E  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  4630  000D9A  ECBE  F01A         	call	_stoa	;wreg free
  4631  000D9E  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  4632  000DA2  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  4633  000DA6  EF2E  F00A         	goto	l1205
  4634  000DAA                     l4311:
  4635  000DAA  FFFF               	dw	65535	; assembler added errata NOP
  4636                           
  4637                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1161:         if 
      +                          (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  4638  000DAC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4639  000DB0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4640  000DB4  CFDE F001          	movff	postinc2,strncmp@_l
  4641  000DB8  CFDD F002          	movff	postdec2,strncmp@_l+1
  4642  000DBC  0EDF               	movlw	low STR_66
  4643  000DBE  6E03               	movwf	strncmp@_r^0,c
  4644  000DC0  0E7F               	movlw	high STR_66
  4645  000DC2  6E04               	movwf	(strncmp@_r+1)^0,c
  4646  000DC4  0E00               	movlw	0
  4647  000DC6  6E06               	movwf	(strncmp@n+1)^0,c
  4648  000DC8  0E03               	movlw	3
  4649  000DCA  6E05               	movwf	strncmp@n^0,c
  4650  000DCC  EC44  F03E         	call	_strncmp	;wreg free
  4651  000DD0  5001               	movf	?_strncmp^0,w,c
  4652  000DD2  1002               	iorwf	(?_strncmp+1)^0,w,c
  4653  000DD4  A4D8               	btfss	status,2,c
  4654  000DD6  EFEF  F006         	goto	u5081
  4655  000DDA  EFF2  F006         	goto	u5080
  4656  000DDE                     u5081:
  4657  000DDE  FFFF               	dw	65535	; assembler added errata NOP
  4658  000DE0  EF33  F007         	goto	l4319
  4659  000DE4                     u5080:
  4660  000DE4  FFFF               	dw	65535	; assembler added errata NOP
  4661  000DE6                     
  4662                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1163:            
      +                           *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  4663  000DE6  0E03               	movlw	3
  4664  000DE8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4665  000DEC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4666  000DF0  26DE               	addwf	postinc2,f,c
  4667  000DF2  0E00               	movlw	0
  4668  000DF4  22DD               	addwfc	postdec2,f,c
  4669                           
  4670                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1164:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4671  000DF6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4672  000DFA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4673  000DFE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4674  000E02  0E02               	movlw	2
  4675  000E04  26DE               	addwf	postinc2,f,c
  4676  000E06  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4677  000E0A  0E00               	movlw	0
  4678  000E0C  22DD               	addwfc	postdec2,f,c
  4679  000E0E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4680  000E12  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4681  000E16  50DF               	movf	indf2,w,c
  4682  000E18  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4683  000E1A  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  4684  000E1C  6E60               	movwf	vfpfcnvrt@llu^0,c
  4685  000E1E  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  4686  000E20  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4687  000E22  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4688  000E24  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4689  000E26  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4690  000E28  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4691  000E2A  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4692  000E2C                     l4315:
  4693  000E2C  FFFF               	dw	65535	; assembler added errata NOP
  4694                           
  4695                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1166:            
      +                           return utoa(fp, llu);
  4696  000E2E  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  4697  000E32  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  4698  000E36  C060  F01E         	movff	vfpfcnvrt@llu,utoa@d
  4699  000E3A  C061  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  4700  000E3E  C062  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  4701  000E42  C063  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  4702  000E46  C064  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  4703  000E4A  C065  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  4704  000E4E  C066  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  4705  000E52  C067  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  4706  000E56  EC95  F018         	call	_utoa	;wreg free
  4707  000E5A  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  4708  000E5E  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  4709  000E62  EF2E  F00A         	goto	l1205
  4710  000E66                     l4319:
  4711  000E66  FFFF               	dw	65535	; assembler added errata NOP
  4712                           
  4713                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1172:         if 
      +                          (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  4714  000E68  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4715  000E6C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4716  000E70  CFDE F001          	movff	postinc2,strncmp@_l
  4717  000E74  CFDD F002          	movff	postdec2,strncmp@_l+1
  4718  000E78  0EE0               	movlw	low (STR_66+1)
  4719  000E7A  6E03               	movwf	strncmp@_r^0,c
  4720  000E7C  0E7F               	movlw	high (STR_66+1)
  4721  000E7E  6E04               	movwf	(strncmp@_r+1)^0,c
  4722  000E80  0E00               	movlw	0
  4723  000E82  6E06               	movwf	(strncmp@n+1)^0,c
  4724  000E84  0E02               	movlw	2
  4725  000E86  6E05               	movwf	strncmp@n^0,c
  4726  000E88  EC44  F03E         	call	_strncmp	;wreg free
  4727  000E8C  5001               	movf	?_strncmp^0,w,c
  4728  000E8E  1002               	iorwf	(?_strncmp+1)^0,w,c
  4729  000E90  A4D8               	btfss	status,2,c
  4730  000E92  EF4D  F007         	goto	u5091
  4731  000E96  EF50  F007         	goto	u5090
  4732  000E9A                     u5091:
  4733  000E9A  FFFF               	dw	65535	; assembler added errata NOP
  4734  000E9C  EF79  F007         	goto	l4327
  4735  000EA0                     u5090:
  4736  000EA0  FFFF               	dw	65535	; assembler added errata NOP
  4737  000EA2                     
  4738                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1174:            
      +                           *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  4739  000EA2  0E02               	movlw	2
  4740  000EA4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4741  000EA8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4742  000EAC  26DE               	addwf	postinc2,f,c
  4743  000EAE  0E00               	movlw	0
  4744  000EB0  22DD               	addwfc	postdec2,f,c
  4745                           
  4746                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1175:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4747  000EB2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4748  000EB6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4749  000EBA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4750  000EBE  0E02               	movlw	2
  4751  000EC0  26DE               	addwf	postinc2,f,c
  4752  000EC2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4753  000EC6  0E00               	movlw	0
  4754  000EC8  22DD               	addwfc	postdec2,f,c
  4755  000ECA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4756  000ECE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4757  000ED2  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4758  000ED6  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4759  000EDA  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4760  000EDE  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4761  000EE2  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4762  000EE4  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4763  000EE6  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4764  000EE8  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4765  000EEA  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4766  000EEC  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4767  000EEE  EF16  F007         	goto	l4315
  4768  000EF2                     l4327:
  4769  000EF2  FFFF               	dw	65535	; assembler added errata NOP
  4770                           
  4771                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1182:         if 
      +                          (*fmt[0] == 'u') {
  4772  000EF4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4773  000EF8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4774  000EFC  CFDE FFF6          	movff	postinc2,tblptrl
  4775  000F00  CFDD FFF7          	movff	postdec2,tblptrh
  4776  000F04                     	if	0	;tblptru may be non-zero
  4777  000F04                     	endif
  4778  000F04                     	if	0	;tblptru may be non-zero
  4779  000F04                     	endif
  4780  000F04  0008               	tblrd		*
  4781  000F06  FFFF               	dw	65535	; errata NOP
  4782  000F08  50F5               	movf	tablat,w,c
  4783  000F0A  0A75               	xorlw	117
  4784  000F0C  A4D8               	btfss	status,2,c
  4785  000F0E  EF8B  F007         	goto	u5101
  4786  000F12  EF8E  F007         	goto	u5100
  4787  000F16                     u5101:
  4788  000F16  FFFF               	dw	65535	; assembler added errata NOP
  4789  000F18  EFB6  F007         	goto	l4335
  4790  000F1C                     u5100:
  4791  000F1C  FFFF               	dw	65535	; assembler added errata NOP
  4792  000F1E                     
  4793                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1184:            
      +                           ++*fmt;
  4794  000F1E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4795  000F22  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4796  000F26  2ADE               	incf	postinc2,f,c
  4797  000F28  0E00               	movlw	0
  4798  000F2A  22DD               	addwfc	postdec2,f,c
  4799                           
  4800                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1185:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  4801  000F2C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4802  000F30  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4803  000F34  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4804  000F38  0E02               	movlw	2
  4805  000F3A  26DE               	addwf	postinc2,f,c
  4806  000F3C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4807  000F40  0E00               	movlw	0
  4808  000F42  22DD               	addwfc	postdec2,f,c
  4809  000F44  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4810  000F48  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4811  000F4C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4812  000F50  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4813  000F54  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4814  000F58  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4815  000F5C  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4816  000F5E  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4817  000F60  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4818  000F62  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4819  000F64  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4820  000F66  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4821  000F68  EF16  F007         	goto	l4315
  4822  000F6C                     l4335:
  4823  000F6C  FFFF               	dw	65535	; assembler added errata NOP
  4824                           
  4825                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1236:         if 
      +                          (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  4826  000F6E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4827  000F72  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4828  000F76  CFDE F001          	movff	postinc2,strncmp@_l
  4829  000F7A  CFDD F002          	movff	postdec2,strncmp@_l+1
  4830  000F7E  0EF6               	movlw	low STR_76
  4831  000F80  6E03               	movwf	strncmp@_r^0,c
  4832  000F82  0E7F               	movlw	high STR_76
  4833  000F84  6E04               	movwf	(strncmp@_r+1)^0,c
  4834  000F86  0E00               	movlw	0
  4835  000F88  6E06               	movwf	(strncmp@n+1)^0,c
  4836  000F8A  0E02               	movlw	2
  4837  000F8C  6E05               	movwf	strncmp@n^0,c
  4838  000F8E  EC44  F03E         	call	_strncmp	;wreg free
  4839  000F92  5001               	movf	?_strncmp^0,w,c
  4840  000F94  1002               	iorwf	(?_strncmp+1)^0,w,c
  4841  000F96  A4D8               	btfss	status,2,c
  4842  000F98  EFD0  F007         	goto	u5111
  4843  000F9C  EFD3  F007         	goto	u5110
  4844  000FA0                     u5111:
  4845  000FA0  FFFF               	dw	65535	; assembler added errata NOP
  4846  000FA2  EFFC  F007         	goto	l4343
  4847  000FA6                     u5110:
  4848  000FA6  FFFF               	dw	65535	; assembler added errata NOP
  4849  000FA8                     
  4850                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1238:            
      +                           *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  4851  000FA8  0E02               	movlw	2
  4852  000FAA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4853  000FAE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4854  000FB2  26DE               	addwf	postinc2,f,c
  4855  000FB4  0E00               	movlw	0
  4856  000FB6  22DD               	addwfc	postdec2,f,c
  4857                           
  4858                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1239:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4859  000FB8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4860  000FBC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4861  000FC0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4862  000FC4  0E02               	movlw	2
  4863  000FC6  26DE               	addwf	postinc2,f,c
  4864  000FC8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4865  000FCC  0E00               	movlw	0
  4866  000FCE  22DD               	addwfc	postdec2,f,c
  4867  000FD0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4868  000FD4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4869  000FD8  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4870  000FDC  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4871  000FE0  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4872  000FE4  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4873  000FE8  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4874  000FEA  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4875  000FEC  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4876  000FEE  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4877  000FF0  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4878  000FF2  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4879  000FF4  EF16  F007         	goto	l4315
  4880  000FF8                     l4343:
  4881  000FF8  FFFF               	dw	65535	; assembler added errata NOP
  4882                           
  4883                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1249:         if 
      +                          (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((
      +                          sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  4884  000FFA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4885  000FFE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4886  001002  CFDE F001          	movff	postinc2,strncmp@_l
  4887  001006  CFDD F002          	movff	postdec2,strncmp@_l+1
  4888  00100A  0EE3               	movlw	low STR_81
  4889  00100C  6E03               	movwf	strncmp@_r^0,c
  4890  00100E  0E7F               	movlw	high STR_81
  4891  001010  6E04               	movwf	(strncmp@_r+1)^0,c
  4892  001012  0E00               	movlw	0
  4893  001014  6E06               	movwf	(strncmp@n+1)^0,c
  4894  001016  0E03               	movlw	3
  4895  001018  6E05               	movwf	strncmp@n^0,c
  4896  00101A  EC44  F03E         	call	_strncmp	;wreg free
  4897  00101E  5001               	movf	?_strncmp^0,w,c
  4898  001020  1002               	iorwf	(?_strncmp+1)^0,w,c
  4899  001022  B4D8               	btfsc	status,2,c
  4900  001024  EF16  F008         	goto	u5121
  4901  001028  EF19  F008         	goto	u5120
  4902  00102C                     u5121:
  4903  00102C  FFFF               	dw	65535	; assembler added errata NOP
  4904  00102E  EF36  F008         	goto	l4347
  4905  001032                     u5120:
  4906  001032  FFFF               	dw	65535	; assembler added errata NOP
  4907  001034  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4908  001038  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4909  00103C  CFDE F001          	movff	postinc2,strncmp@_l
  4910  001040  CFDD F002          	movff	postdec2,strncmp@_l+1
  4911  001044  0ECB               	movlw	low STR_85
  4912  001046  6E03               	movwf	strncmp@_r^0,c
  4913  001048  0E7F               	movlw	high STR_85
  4914  00104A  6E04               	movwf	(strncmp@_r+1)^0,c
  4915  00104C  0E00               	movlw	0
  4916  00104E  6E06               	movwf	(strncmp@n+1)^0,c
  4917  001050  0E03               	movlw	3
  4918  001052  6E05               	movwf	strncmp@n^0,c
  4919  001054  EC44  F03E         	call	_strncmp	;wreg free
  4920  001058  5001               	movf	?_strncmp^0,w,c
  4921  00105A  1002               	iorwf	(?_strncmp+1)^0,w,c
  4922  00105C  A4D8               	btfss	status,2,c
  4923  00105E  EF33  F008         	goto	u5131
  4924  001062  EF36  F008         	goto	u5130
  4925  001066                     u5131:
  4926  001066  FFFF               	dw	65535	; assembler added errata NOP
  4927  001068  EF8D  F008         	goto	l4357
  4928  00106C                     u5130:
  4929  00106C                     l4347:
  4930  00106C  FFFF               	dw	65535	; assembler added errata NOP
  4931                           
  4932                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1250: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1252:             c = (*fmt)
      +                          [2];
  4933  00106E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4934  001072  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4935  001076  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  4936  00107A  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  4937  00107E  0E02               	movlw	2
  4938  001080  2649               	addwf	??_vfpfcnvrt^0,f,c
  4939  001082  0E00               	movlw	0
  4940  001084  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4941  001086  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4942  00108A  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4943  00108E                     	if	0	;tblptru may be non-zero
  4944  00108E                     	endif
  4945  00108E                     	if	0	;tblptru may be non-zero
  4946  00108E                     	endif
  4947  00108E  0008               	tblrd		*
  4948  001090  FFFF               	dw	65535	; errata NOP
  4949  001092  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  4950  001096                     
  4951                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1253:            
      +                           *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  4952  001096  0E03               	movlw	3
  4953  001098  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4954  00109C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4955  0010A0  26DE               	addwf	postinc2,f,c
  4956  0010A2  0E00               	movlw	0
  4957  0010A4  22DD               	addwfc	postdec2,f,c
  4958  0010A6                     
  4959                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1254:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4960  0010A6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4961  0010AA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4962  0010AE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4963  0010B2  0E02               	movlw	2
  4964  0010B4  26DE               	addwf	postinc2,f,c
  4965  0010B6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4966  0010BA  0E00               	movlw	0
  4967  0010BC  22DD               	addwfc	postdec2,f,c
  4968  0010BE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4969  0010C2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4970  0010C6  50DF               	movf	indf2,w,c
  4971  0010C8  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4972  0010CA  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  4973  0010CC  6E60               	movwf	vfpfcnvrt@llu^0,c
  4974  0010CE  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  4975  0010D0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4976  0010D2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4977  0010D4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4978  0010D6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4979  0010D8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4980  0010DA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4981  0010DC                     l4353:
  4982  0010DC  FFFF               	dw	65535	; assembler added errata NOP
  4983                           
  4984                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1256:            
      +                           return xtoa(fp, llu, c);
  4985  0010DE  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  4986  0010E2  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  4987  0010E6  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  4988  0010EA  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  4989  0010EE  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  4990  0010F2  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  4991  0010F6  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  4992  0010FA  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  4993  0010FE  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  4994  001102  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  4995  001106  C05F  F026         	movff	vfpfcnvrt@c,xtoa@x
  4996  00110A  ECFD  F016         	call	_xtoa	;wreg free
  4997  00110E  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  4998  001112  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  4999  001116  EF2E  F00A         	goto	l1205
  5000  00111A                     l4357:
  5001  00111A  FFFF               	dw	65535	; assembler added errata NOP
  5002                           
  5003                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1262:         if 
      +                          (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((size
      +                          of("hX")/sizeof("hX"[0]))-1))) {
  5004  00111C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5005  001120  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5006  001124  CFDE F001          	movff	postinc2,strncmp@_l
  5007  001128  CFDD F002          	movff	postdec2,strncmp@_l+1
  5008  00112C  0EE4               	movlw	low (STR_81+1)
  5009  00112E  6E03               	movwf	strncmp@_r^0,c
  5010  001130  0E7F               	movlw	high (STR_81+1)
  5011  001132  6E04               	movwf	(strncmp@_r+1)^0,c
  5012  001134  0E00               	movlw	0
  5013  001136  6E06               	movwf	(strncmp@n+1)^0,c
  5014  001138  0E02               	movlw	2
  5015  00113A  6E05               	movwf	strncmp@n^0,c
  5016  00113C  EC44  F03E         	call	_strncmp	;wreg free
  5017  001140  5001               	movf	?_strncmp^0,w,c
  5018  001142  1002               	iorwf	(?_strncmp+1)^0,w,c
  5019  001144  B4D8               	btfsc	status,2,c
  5020  001146  EFA7  F008         	goto	u5141
  5021  00114A  EFAA  F008         	goto	u5140
  5022  00114E                     u5141:
  5023  00114E  FFFF               	dw	65535	; assembler added errata NOP
  5024  001150  EFC7  F008         	goto	l4361
  5025  001154                     u5140:
  5026  001154  FFFF               	dw	65535	; assembler added errata NOP
  5027  001156  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5028  00115A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5029  00115E  CFDE F001          	movff	postinc2,strncmp@_l
  5030  001162  CFDD F002          	movff	postdec2,strncmp@_l+1
  5031  001166  0ECC               	movlw	low (STR_85+1)
  5032  001168  6E03               	movwf	strncmp@_r^0,c
  5033  00116A  0E7F               	movlw	high (STR_85+1)
  5034  00116C  6E04               	movwf	(strncmp@_r+1)^0,c
  5035  00116E  0E00               	movlw	0
  5036  001170  6E06               	movwf	(strncmp@n+1)^0,c
  5037  001172  0E02               	movlw	2
  5038  001174  6E05               	movwf	strncmp@n^0,c
  5039  001176  EC44  F03E         	call	_strncmp	;wreg free
  5040  00117A  5001               	movf	?_strncmp^0,w,c
  5041  00117C  1002               	iorwf	(?_strncmp+1)^0,w,c
  5042  00117E  A4D8               	btfss	status,2,c
  5043  001180  EFC4  F008         	goto	u5151
  5044  001184  EFC7  F008         	goto	u5150
  5045  001188                     u5151:
  5046  001188  FFFF               	dw	65535	; assembler added errata NOP
  5047  00118A  EF04  F009         	goto	l4371
  5048  00118E                     u5150:
  5049  00118E                     l4361:
  5050  00118E  FFFF               	dw	65535	; assembler added errata NOP
  5051                           
  5052                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1263: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1265:             c = (*fmt)
      +                          [1];
  5053  001190  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5054  001194  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5055  001198  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  5056  00119C  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  5057  0011A0  0E01               	movlw	1
  5058  0011A2  2649               	addwf	??_vfpfcnvrt^0,f,c
  5059  0011A4  0E00               	movlw	0
  5060  0011A6  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5061  0011A8  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5062  0011AC  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5063  0011B0                     	if	0	;tblptru may be non-zero
  5064  0011B0                     	endif
  5065  0011B0                     	if	0	;tblptru may be non-zero
  5066  0011B0                     	endif
  5067  0011B0  0008               	tblrd		*
  5068  0011B2  FFFF               	dw	65535	; errata NOP
  5069  0011B4  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5070  0011B8                     
  5071                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1266:            
      +                           *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  5072  0011B8  0E02               	movlw	2
  5073  0011BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5074  0011BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5075  0011C2  26DE               	addwf	postinc2,f,c
  5076  0011C4  0E00               	movlw	0
  5077  0011C6  22DD               	addwfc	postdec2,f,c
  5078  0011C8                     
  5079                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1267:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5080  0011C8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5081  0011CC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5082  0011D0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5083  0011D4  0E02               	movlw	2
  5084  0011D6  26DE               	addwf	postinc2,f,c
  5085  0011D8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5086  0011DC  0E00               	movlw	0
  5087  0011DE  22DD               	addwfc	postdec2,f,c
  5088  0011E0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5089  0011E4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5090  0011E8  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5091  0011EC  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5092  0011F0  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5093  0011F4  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5094  0011F8  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5095  0011FA  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5096  0011FC  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5097  0011FE  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5098  001200  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5099  001202  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5100  001204  EF6E  F008         	goto	l4353
  5101  001208                     l4371:
  5102  001208  FFFF               	dw	65535	; assembler added errata NOP
  5103                           
  5104                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1274:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  5105  00120A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5106  00120E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5107  001212  CFDE FFF6          	movff	postinc2,tblptrl
  5108  001216  CFDD FFF7          	movff	postdec2,tblptrh
  5109  00121A                     	if	0	;tblptru may be non-zero
  5110  00121A                     	endif
  5111  00121A                     	if	0	;tblptru may be non-zero
  5112  00121A                     	endif
  5113  00121A  0008               	tblrd		*
  5114  00121C  FFFF               	dw	65535	; errata NOP
  5115  00121E  50F5               	movf	tablat,w,c
  5116  001220  0A78               	xorlw	120
  5117  001222  B4D8               	btfsc	status,2,c
  5118  001224  EF16  F009         	goto	u5161
  5119  001228  EF19  F009         	goto	u5160
  5120  00122C                     u5161:
  5121  00122C  FFFF               	dw	65535	; assembler added errata NOP
  5122  00122E  EF2E  F009         	goto	l4375
  5123  001232                     u5160:
  5124  001232  FFFF               	dw	65535	; assembler added errata NOP
  5125  001234  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5126  001238  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5127  00123C  CFDE FFF6          	movff	postinc2,tblptrl
  5128  001240  CFDD FFF7          	movff	postdec2,tblptrh
  5129  001244                     	if	0	;tblptru may be non-zero
  5130  001244                     	endif
  5131  001244                     	if	0	;tblptru may be non-zero
  5132  001244                     	endif
  5133  001244  0008               	tblrd		*
  5134  001246  FFFF               	dw	65535	; errata NOP
  5135  001248  50F5               	movf	tablat,w,c
  5136  00124A  0A58               	xorlw	88
  5137  00124C  A4D8               	btfss	status,2,c
  5138  00124E  EF2B  F009         	goto	u5171
  5139  001252  EF2E  F009         	goto	u5170
  5140  001256                     u5171:
  5141  001256  FFFF               	dw	65535	; assembler added errata NOP
  5142  001258  EF62  F009         	goto	l4385
  5143  00125C                     u5170:
  5144  00125C                     l4375:
  5145  00125C  FFFF               	dw	65535	; assembler added errata NOP
  5146                           
  5147                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1276:            
      +                           c = (*fmt)[0];
  5148  00125E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5149  001262  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5150  001266  CFDE FFF6          	movff	postinc2,tblptrl
  5151  00126A  CFDD FFF7          	movff	postdec2,tblptrh
  5152  00126E                     	if	0	;tblptru may be non-zero
  5153  00126E                     	endif
  5154  00126E                     	if	0	;tblptru may be non-zero
  5155  00126E                     	endif
  5156  00126E  0008               	tblrd		*
  5157  001270  FFFF               	dw	65535	; errata NOP
  5158  001272  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5159  001276                     
  5160                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1277:            
      +                           ++*fmt;
  5161  001276  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5162  00127A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5163  00127E  2ADE               	incf	postinc2,f,c
  5164  001280  0E00               	movlw	0
  5165  001282  22DD               	addwfc	postdec2,f,c
  5166  001284                     
  5167                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1278:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5168  001284  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5169  001288  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5170  00128C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5171  001290  0E02               	movlw	2
  5172  001292  26DE               	addwf	postinc2,f,c
  5173  001294  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5174  001298  0E00               	movlw	0
  5175  00129A  22DD               	addwfc	postdec2,f,c
  5176  00129C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5177  0012A0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5178  0012A4  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5179  0012A8  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5180  0012AC  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5181  0012B0  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5182  0012B4  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5183  0012B6  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5184  0012B8  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5185  0012BA  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5186  0012BC  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5187  0012BE  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5188  0012C0  EF6E  F008         	goto	l4353
  5189  0012C4                     l4385:
  5190  0012C4  FFFF               	dw	65535	; assembler added errata NOP
  5191                           
  5192                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1337:         if 
      +                          (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((size
      +                          of("zX")/sizeof("zX"[0]))-1))) {
  5193  0012C6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5194  0012CA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5195  0012CE  CFDE F001          	movff	postinc2,strncmp@_l
  5196  0012D2  CFDD F002          	movff	postdec2,strncmp@_l+1
  5197  0012D6  0EF9               	movlw	low STR_99
  5198  0012D8  6E03               	movwf	strncmp@_r^0,c
  5199  0012DA  0E7F               	movlw	high STR_99
  5200  0012DC  6E04               	movwf	(strncmp@_r+1)^0,c
  5201  0012DE  0E00               	movlw	0
  5202  0012E0  6E06               	movwf	(strncmp@n+1)^0,c
  5203  0012E2  0E02               	movlw	2
  5204  0012E4  6E05               	movwf	strncmp@n^0,c
  5205  0012E6  EC44  F03E         	call	_strncmp	;wreg free
  5206  0012EA  5001               	movf	?_strncmp^0,w,c
  5207  0012EC  1002               	iorwf	(?_strncmp+1)^0,w,c
  5208  0012EE  B4D8               	btfsc	status,2,c
  5209  0012F0  EF7C  F009         	goto	u5181
  5210  0012F4  EF7F  F009         	goto	u5180
  5211  0012F8                     u5181:
  5212  0012F8  FFFF               	dw	65535	; assembler added errata NOP
  5213  0012FA  EF9C  F009         	goto	l4389
  5214  0012FE                     u5180:
  5215  0012FE  FFFF               	dw	65535	; assembler added errata NOP
  5216  001300  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5217  001304  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5218  001308  CFDE F001          	movff	postinc2,strncmp@_l
  5219  00130C  CFDD F002          	movff	postdec2,strncmp@_l+1
  5220  001310  0EE7               	movlw	low STR_103
  5221  001312  6E03               	movwf	strncmp@_r^0,c
  5222  001314  0E7F               	movlw	high STR_103
  5223  001316  6E04               	movwf	(strncmp@_r+1)^0,c
  5224  001318  0E00               	movlw	0
  5225  00131A  6E06               	movwf	(strncmp@n+1)^0,c
  5226  00131C  0E02               	movlw	2
  5227  00131E  6E05               	movwf	strncmp@n^0,c
  5228  001320  EC44  F03E         	call	_strncmp	;wreg free
  5229  001324  5001               	movf	?_strncmp^0,w,c
  5230  001326  1002               	iorwf	(?_strncmp+1)^0,w,c
  5231  001328  A4D8               	btfss	status,2,c
  5232  00132A  EF99  F009         	goto	u5191
  5233  00132E  EF9C  F009         	goto	u5190
  5234  001332                     u5191:
  5235  001332  FFFF               	dw	65535	; assembler added errata NOP
  5236  001334  EFD9  F009         	goto	l4399
  5237  001338                     u5190:
  5238  001338                     l4389:
  5239  001338  FFFF               	dw	65535	; assembler added errata NOP
  5240                           
  5241                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1338: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1340:             c = (*fmt)
      +                          [1];
  5242  00133A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5243  00133E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5244  001342  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  5245  001346  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  5246  00134A  0E01               	movlw	1
  5247  00134C  2649               	addwf	??_vfpfcnvrt^0,f,c
  5248  00134E  0E00               	movlw	0
  5249  001350  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5250  001352  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5251  001356  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5252  00135A                     	if	0	;tblptru may be non-zero
  5253  00135A                     	endif
  5254  00135A                     	if	0	;tblptru may be non-zero
  5255  00135A                     	endif
  5256  00135A  0008               	tblrd		*
  5257  00135C  FFFF               	dw	65535	; errata NOP
  5258  00135E  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5259  001362                     
  5260                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1341:            
      +                           *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  5261  001362  0E02               	movlw	2
  5262  001364  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5263  001368  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5264  00136C  26DE               	addwf	postinc2,f,c
  5265  00136E  0E00               	movlw	0
  5266  001370  22DD               	addwfc	postdec2,f,c
  5267  001372                     
  5268                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1342:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5269  001372  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5270  001376  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5271  00137A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5272  00137E  0E02               	movlw	2
  5273  001380  26DE               	addwf	postinc2,f,c
  5274  001382  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5275  001386  0E00               	movlw	0
  5276  001388  22DD               	addwfc	postdec2,f,c
  5277  00138A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5278  00138E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5279  001392  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5280  001396  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5281  00139A  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5282  00139E  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5283  0013A2  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5284  0013A4  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5285  0013A6  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5286  0013A8  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5287  0013AA  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5288  0013AC  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5289  0013AE  EF6E  F008         	goto	l4353
  5290  0013B2                     l4399:
  5291  0013B2  FFFF               	dw	65535	; assembler added errata NOP
  5292                           
  5293                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  5294  0013B4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5295  0013B8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5296  0013BC  CFDE FFF6          	movff	postinc2,tblptrl
  5297  0013C0  CFDD FFF7          	movff	postdec2,tblptrh
  5298  0013C4                     	if	0	;tblptru may be non-zero
  5299  0013C4                     	endif
  5300  0013C4                     	if	0	;tblptru may be non-zero
  5301  0013C4                     	endif
  5302  0013C4  0008               	tblrd		*
  5303  0013C6  FFFF               	dw	65535	; errata NOP
  5304  0013C8  50F5               	movf	tablat,w,c
  5305  0013CA  0A25               	xorlw	37
  5306  0013CC  A4D8               	btfss	status,2,c
  5307  0013CE  EFEB  F009         	goto	u5201
  5308  0013D2  EFEE  F009         	goto	u5200
  5309  0013D6                     u5201:
  5310  0013D6  FFFF               	dw	65535	; assembler added errata NOP
  5311  0013D8  EF07  F00A         	goto	l4409
  5312  0013DC                     u5200:
  5313  0013DC  FFFF               	dw	65535	; assembler added errata NOP
  5314  0013DE                     
  5315                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  5316  0013DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5317  0013E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5318  0013E6  2ADE               	incf	postinc2,f,c
  5319  0013E8  0E00               	movlw	0
  5320  0013EA  22DD               	addwfc	postdec2,f,c
  5321  0013EC                     
  5322                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  5323  0013EC  0E00               	movlw	0
  5324  0013EE  6E02               	movwf	(fputc@c+1)^0,c
  5325  0013F0  0E25               	movlw	37
  5326  0013F2  6E01               	movwf	fputc@c^0,c
  5327  0013F4  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5328  0013F8  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5329  0013FC  ECED  F03B         	call	_fputc	;wreg free
  5330  001400                     l4405:
  5331  001400  FFFF               	dw	65535	; assembler added errata NOP
  5332                           
  5333                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  5334  001402  0E00               	movlw	0
  5335  001404  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  5336  001406  0E01               	movlw	1
  5337  001408  6E43               	movwf	?_vfpfcnvrt^0,c
  5338  00140A  EF2E  F00A         	goto	l1205
  5339  00140E                     l4409:
  5340  00140E  FFFF               	dw	65535	; assembler added errata NOP
  5341                           
  5342                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  5343  001410  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5344  001414  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5345  001418  2ADE               	incf	postinc2,f,c
  5346  00141A  0E00               	movlw	0
  5347  00141C  22DD               	addwfc	postdec2,f,c
  5348  00141E  EF44  F005         	goto	l4261
  5349  001422                     l4415:
  5350  001422  FFFF               	dw	65535	; assembler added errata NOP
  5351                           
  5352                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  5353  001424  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5354  001428  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5355  00142C  CFDE FFF6          	movff	postinc2,tblptrl
  5356  001430  CFDD FFF7          	movff	postdec2,tblptrh
  5357  001434                     	if	0	;tblptru may be non-zero
  5358  001434                     	endif
  5359  001434                     	if	0	;tblptru may be non-zero
  5360  001434                     	endif
  5361  001434  0008               	tblrd		*
  5362  001436  FFFF               	dw	65535	; errata NOP
  5363  001438  50F5               	movf	tablat,w,c
  5364  00143A  6E01               	movwf	fputc@c^0,c
  5365  00143C  6A02               	clrf	(fputc@c+1)^0,c
  5366  00143E  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5367  001442  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5368  001446  ECED  F03B         	call	_fputc	;wreg free
  5369  00144A                     
  5370                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  5371  00144A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5372  00144E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5373  001452  2ADE               	incf	postinc2,f,c
  5374  001454  0E00               	movlw	0
  5375  001456  22DD               	addwfc	postdec2,f,c
  5376  001458  EF00  F00A         	goto	l4405
  5377  00145C                     l1205:
  5378  00145C  FFFF               	dw	65535	; assembler added errata NOP
  5379  00145E  0012               	return		;funcret
  5380  001460  FFFF               	dw	65535	; errata NOP
  5381  001462                     __end_of_vfpfcnvrt:
  5382                           	callstack 0
  5383                           
  5384 ;; *************** function _xtoa *****************
  5385 ;; Defined at:
  5386 ;;		line 623 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5389 ;;		 -> vsnprintf@f(6), 
  5390 ;;  d               8   29[COMRAM] unsigned long long 
  5391 ;;  x               1   37[COMRAM] unsigned char 
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;  n               8   54[COMRAM] unsigned long long 
  5394 ;;  c               2   64[COMRAM] int 
  5395 ;;  i               2   62[COMRAM] int 
  5396 ;;  w               2   52[COMRAM] int 
  5397 ;;  p               2   50[COMRAM] int 
  5398 ;; Return value:  Size  Location     Type
  5399 ;;                  2   27[COMRAM] int 
  5400 ;; Registers used:
  5401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5402 ;; Tracked objects:
  5403 ;;		On entry : 0/0
  5404 ;;		On exit  : 0/0
  5405 ;;		Unchanged: 0/0
  5406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5407 ;;      Params:        11       0       0       0       0       0       0
  5408 ;;      Locals:        20       0       0       0       0       0       0
  5409 ;;      Temps:          8       0       0       0       0       0       0
  5410 ;;      Totals:        39       0       0       0       0       0       0
  5411 ;;Total ram usage:       39 bytes
  5412 ;; Hardware stack levels used:    1
  5413 ;; Hardware stack levels required when called:    5
  5414 ;; This function calls:
  5415 ;;		_isalpha
  5416 ;;		_isupper
  5417 ;;		_pad
  5418 ;;		_toupper
  5419 ;; This function is called by:
  5420 ;;		_vfpfcnvrt
  5421 ;; This function uses a non-reentrant model
  5422 ;;
  5423                           
  5424                           	psect	text8
  5425  002DFA                     __ptext8:
  5426                           	callstack 0
  5427  002DFA                     _xtoa:
  5428                           	callstack 0
  5429  002DFA  FFFF               	dw	65535	; assembler added errata NOP
  5430  002DFC                     
  5431                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 623: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 624: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 625:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources
      +                          \c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0)) {
  5432  002DFC  0100               	movlb	0	; () banked
  5433  002DFE  BF89               	btfsc	(_prec+1)& (0+255),7,b
  5434  002E00  EF04  F017         	goto	u4041
  5435  002E04  EF07  F017         	goto	u4040
  5436  002E08                     u4041:
  5437  002E08  FFFF               	dw	65535	; assembler added errata NOP
  5438  002E0A  EF09  F017         	goto	l3771
  5439  002E0E                     u4040:
  5440  002E0E  FFFF               	dw	65535	; assembler added errata NOP
  5441  002E10                     
  5442                           ; BSR set to: 0
  5443                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 630:         flag
      +                          s &= ~(1 << 1);
  5444  002E10  938A               	bcf	_flags& (0+255),1,b
  5445  002E12                     l3771:
  5446  002E12  FFFF               	dw	65535	; assembler added errata NOP
  5447                           
  5448                           ; BSR set to: 0
  5449                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 632:     p = (0 <
      +                           prec) ? prec : 1;
  5450  002E14  BF89               	btfsc	(_prec+1)& (0+255),7,b
  5451  002E16  EF18  F017         	goto	u4050
  5452  002E1A  5189               	movf	(_prec+1)& (0+255),w,b
  5453  002E1C  E106               	bnz	u4051
  5454  002E1E  0588               	decf	_prec& (0+255),w,b
  5455  002E20  B0D8               	btfsc	status,0,c
  5456  002E22  EF15  F017         	goto	u4051
  5457  002E26  EF18  F017         	goto	u4050
  5458  002E2A                     u4051:
  5459  002E2A  FFFF               	dw	65535	; assembler added errata NOP
  5460  002E2C  EF1F  F017         	goto	l1143
  5461  002E30                     u4050:
  5462  002E30  FFFF               	dw	65535	; assembler added errata NOP
  5463  002E32                     
  5464                           ; BSR set to: 0
  5465  002E32  0E00               	movlw	0
  5466  002E34  6E34               	movwf	(xtoa@p+1)^0,c
  5467  002E36  0E01               	movlw	1
  5468  002E38  6E33               	movwf	xtoa@p^0,c
  5469  002E3A  EF24  F017         	goto	l1145
  5470  002E3E                     l1143:
  5471  002E3E  FFFF               	dw	65535	; assembler added errata NOP
  5472                           
  5473                           ; BSR set to: 0
  5474  002E40  C088  F033         	movff	_prec,xtoa@p
  5475  002E44  C089  F034         	movff	_prec+1,xtoa@p+1
  5476  002E48                     l1145:
  5477  002E48  FFFF               	dw	65535	; assembler added errata NOP
  5478                           
  5479                           ; BSR set to: 0
  5480                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 633:     w = widt
      +                          h;
  5481  002E4A  C086  F035         	movff	_width,xtoa@w
  5482  002E4E  C087  F036         	movff	_width+1,xtoa@w+1
  5483                           
  5484                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 634:     if (flag
      +                          s & (1 << 4)) {
  5485  002E52  A98A               	btfss	_flags& (0+255),4,b
  5486  002E54  EF2E  F017         	goto	u4061
  5487  002E58  EF31  F017         	goto	u4060
  5488  002E5C                     u4061:
  5489  002E5C  FFFF               	dw	65535	; assembler added errata NOP
  5490  002E5E  EF36  F017         	goto	l3777
  5491  002E62                     u4060:
  5492  002E62  FFFF               	dw	65535	; assembler added errata NOP
  5493  002E64                     
  5494                           ; BSR set to: 0
  5495                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 635:         w -=
      +                           2;
  5496  002E64  0EFE               	movlw	254
  5497  002E66  2635               	addwf	xtoa@w^0,f,c
  5498  002E68  0EFF               	movlw	255
  5499  002E6A  2236               	addwfc	(xtoa@w+1)^0,f,c
  5500  002E6C                     l3777:
  5501  002E6C  FFFF               	dw	65535	; assembler added errata NOP
  5502                           
  5503                           ; BSR set to: 0
  5504                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 639:     n = d;
  5505  002E6E  C01E  F037         	movff	xtoa@d,xtoa@n
  5506  002E72  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  5507  002E76  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  5508  002E7A  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  5509  002E7E  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  5510  002E82  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  5511  002E86  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  5512  002E8A  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  5513  002E8E                     
  5514                           ; BSR set to: 0
  5515                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 640:     i = size
      +                          of(dbuf) - 1;
  5516  002E8E  0E00               	movlw	0
  5517  002E90  6E40               	movwf	(xtoa@i+1)^0,c
  5518  002E92  0E1F               	movlw	31
  5519  002E94  6E3F               	movwf	xtoa@i^0,c
  5520  002E96                     
  5521                           ; BSR set to: 0
  5522                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 641:     dbuf[i] 
      +                          = '\0';
  5523  002E96  0E00               	movlw	0
  5524  002E98  6FAD               	movwf	(_dbuf+31)& (0+255),b
  5525                           
  5526                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5527  002E9A  EF14  F018         	goto	l3813
  5528  002E9E                     l3783:
  5529  002E9E  FFFF               	dw	65535	; assembler added errata NOP
  5530                           
  5531                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 643:         --i;
  5532  002EA0  063F               	decf	xtoa@i^0,f,c
  5533  002EA2  A0D8               	btfss	status,0,c
  5534  002EA4  0640               	decf	(xtoa@i+1)^0,f,c
  5535  002EA6                     
  5536                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 644:         c = 
      +                          n & 0x0f;
  5537  002EA6  0E0F               	movlw	15
  5538  002EA8  1437               	andwf	xtoa@n^0,w,c
  5539  002EAA  6E41               	movwf	xtoa@c^0,c
  5540  002EAC  6A42               	clrf	(xtoa@c+1)^0,c
  5541  002EAE                     
  5542                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 645:         c = 
      +                          (c < 10) ? '0' + c : 'a' + (c - 10);
  5543  002EAE  BE42               	btfsc	(xtoa@c+1)^0,7,c
  5544  002EB0  EF63  F017         	goto	u4071
  5545  002EB4  5042               	movf	(xtoa@c+1)^0,w,c
  5546  002EB6  E10A               	bnz	u4070
  5547  002EB8  0E0A               	movlw	10
  5548  002EBA  5C41               	subwf	xtoa@c^0,w,c
  5549  002EBC  A0D8               	btfss	status,0,c
  5550  002EBE  EF63  F017         	goto	u4071
  5551  002EC2  EF66  F017         	goto	u4070
  5552  002EC6                     u4071:
  5553  002EC6  FFFF               	dw	65535	; assembler added errata NOP
  5554  002EC8  EF6F  F017         	goto	l3791
  5555  002ECC                     u4070:
  5556  002ECC  FFFF               	dw	65535	; assembler added errata NOP
  5557  002ECE  0E57               	movlw	87
  5558  002ED0  2441               	addwf	xtoa@c^0,w,c
  5559  002ED2  6E41               	movwf	xtoa@c^0,c
  5560  002ED4  0E00               	movlw	0
  5561  002ED6  2042               	addwfc	(xtoa@c+1)^0,w,c
  5562  002ED8  6E42               	movwf	(xtoa@c+1)^0,c
  5563  002EDA  EF76  F017         	goto	l1152
  5564  002EDE                     l3791:
  5565  002EDE  FFFF               	dw	65535	; assembler added errata NOP
  5566  002EE0  0E30               	movlw	48
  5567  002EE2  2441               	addwf	xtoa@c^0,w,c
  5568  002EE4  6E41               	movwf	xtoa@c^0,c
  5569  002EE6  0E00               	movlw	0
  5570  002EE8  2042               	addwfc	(xtoa@c+1)^0,w,c
  5571  002EEA  6E42               	movwf	(xtoa@c+1)^0,c
  5572  002EEC                     l1152:
  5573  002EEC  FFFF               	dw	65535	; assembler added errata NOP
  5574  002EEE  0EBF               	movlw	191
  5575  002EF0  6E27               	movwf	??_xtoa^0,c
  5576  002EF2  0EFF               	movlw	255
  5577  002EF4  6E28               	movwf	(??_xtoa+1)^0,c
  5578  002EF6  5026               	movf	xtoa@x^0,w,c
  5579  002EF8  6E29               	movwf	(??_xtoa+2)^0,c
  5580  002EFA  6A2A               	clrf	(??_xtoa+3)^0,c
  5581  002EFC  5027               	movf	??_xtoa^0,w,c
  5582  002EFE  2629               	addwf	(??_xtoa+2)^0,f,c
  5583  002F00  5028               	movf	(??_xtoa+1)^0,w,c
  5584  002F02  222A               	addwfc	(??_xtoa+3)^0,f,c
  5585  002F04  502A               	movf	(??_xtoa+3)^0,w,c
  5586  002F06  E10B               	bnz	u4080
  5587  002F08  0E1A               	movlw	26
  5588  002F0A  5C29               	subwf	(??_xtoa+2)^0,w,c
  5589  002F0C  A0D8               	btfss	status,0,c
  5590  002F0E  EF8B  F017         	goto	u4081
  5591  002F12  EF8F  F017         	goto	u4080
  5592  002F16                     u4081:
  5593  002F16  FFFF               	dw	65535	; assembler added errata NOP
  5594  002F18  0E01               	movlw	1
  5595  002F1A  EF91  F017         	goto	u4090
  5596  002F1E                     u4080:
  5597  002F1E  FFFF               	dw	65535	; assembler added errata NOP
  5598  002F20  0E00               	movlw	0
  5599  002F22                     u4090:
  5600  002F22  FFFF               	dw	65535	; assembler added errata NOP
  5601  002F24  6E2F               	movwf	_xtoa$1487^0,c
  5602  002F26  6A30               	clrf	(_xtoa$1487+1)^0,c
  5603  002F28  502F               	movf	_xtoa$1487^0,w,c
  5604  002F2A  1030               	iorwf	(_xtoa$1487+1)^0,w,c
  5605  002F2C  B4D8               	btfsc	status,2,c
  5606  002F2E  EF9B  F017         	goto	u4101
  5607  002F32  EF9E  F017         	goto	u4100
  5608  002F36                     u4101:
  5609  002F36  FFFF               	dw	65535	; assembler added errata NOP
  5610  002F38  EFD4  F017         	goto	l3805
  5611  002F3C                     u4100:
  5612  002F3C  FFFF               	dw	65535	; assembler added errata NOP
  5613  002F3E  0E9F               	movlw	159
  5614  002F40  6E27               	movwf	??_xtoa^0,c
  5615  002F42  0EFF               	movlw	255
  5616  002F44  6E28               	movwf	(??_xtoa+1)^0,c
  5617  002F46  0E20               	movlw	32
  5618  002F48  1041               	iorwf	xtoa@c^0,w,c
  5619  002F4A  6E29               	movwf	(??_xtoa+2)^0,c
  5620  002F4C  0E00               	movlw	0
  5621  002F4E  1042               	iorwf	(xtoa@c+1)^0,w,c
  5622  002F50  6E2A               	movwf	(??_xtoa+3)^0,c
  5623  002F52  5027               	movf	??_xtoa^0,w,c
  5624  002F54  2629               	addwf	(??_xtoa+2)^0,f,c
  5625  002F56  5028               	movf	(??_xtoa+1)^0,w,c
  5626  002F58  222A               	addwfc	(??_xtoa+3)^0,f,c
  5627  002F5A  502A               	movf	(??_xtoa+3)^0,w,c
  5628  002F5C  E10B               	bnz	u4110
  5629  002F5E  0E1A               	movlw	26
  5630  002F60  5C29               	subwf	(??_xtoa+2)^0,w,c
  5631  002F62  A0D8               	btfss	status,0,c
  5632  002F64  EFB6  F017         	goto	u4111
  5633  002F68  EFBA  F017         	goto	u4110
  5634  002F6C                     u4111:
  5635  002F6C  FFFF               	dw	65535	; assembler added errata NOP
  5636  002F6E  0E01               	movlw	1
  5637  002F70  EFBC  F017         	goto	u4120
  5638  002F74                     u4110:
  5639  002F74  FFFF               	dw	65535	; assembler added errata NOP
  5640  002F76  0E00               	movlw	0
  5641  002F78                     u4120:
  5642  002F78  FFFF               	dw	65535	; assembler added errata NOP
  5643  002F7A  6E31               	movwf	_xtoa$1488^0,c
  5644  002F7C  6A32               	clrf	(_xtoa$1488+1)^0,c
  5645  002F7E  5031               	movf	_xtoa$1488^0,w,c
  5646  002F80  1032               	iorwf	(_xtoa$1488+1)^0,w,c
  5647  002F82  B4D8               	btfsc	status,2,c
  5648  002F84  EFC6  F017         	goto	u4131
  5649  002F88  EFC9  F017         	goto	u4130
  5650  002F8C                     u4131:
  5651  002F8C  FFFF               	dw	65535	; assembler added errata NOP
  5652  002F8E  EFD4  F017         	goto	l3805
  5653  002F92                     u4130:
  5654  002F92  FFFF               	dw	65535	; assembler added errata NOP
  5655  002F94                     
  5656                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 647:             
      +                          c = toupper(c);
  5657  002F94  C041  F007         	movff	xtoa@c,toupper@c
  5658  002F98  C042  F008         	movff	xtoa@c+1,toupper@c+1
  5659  002F9C  EC8A  F039         	call	_toupper	;wreg free
  5660  002FA0  C007  F041         	movff	?_toupper,xtoa@c
  5661  002FA4  C008  F042         	movff	?_toupper+1,xtoa@c+1
  5662  002FA8                     l3805:
  5663  002FA8  FFFF               	dw	65535	; assembler added errata NOP
  5664                           
  5665                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 649:         dbuf
      +                          [i] = (char)c;
  5666  002FAA  0E8E               	movlw	low _dbuf
  5667  002FAC  243F               	addwf	xtoa@i^0,w,c
  5668  002FAE  6ED9               	movwf	fsr2l,c
  5669  002FB0  0E00               	movlw	high _dbuf
  5670  002FB2  2040               	addwfc	(xtoa@i+1)^0,w,c
  5671  002FB4  6EDA               	movwf	fsr2h,c
  5672  002FB6  C041  FFDF         	movff	xtoa@c,indf2
  5673  002FBA                     
  5674                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 650:         --p;
  5675  002FBA  0633               	decf	xtoa@p^0,f,c
  5676  002FBC  A0D8               	btfss	status,0,c
  5677  002FBE  0634               	decf	(xtoa@p+1)^0,f,c
  5678  002FC0                     
  5679                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 651:         --w;
  5680  002FC0  0635               	decf	xtoa@w^0,f,c
  5681  002FC2  A0D8               	btfss	status,0,c
  5682  002FC4  0636               	decf	(xtoa@w+1)^0,f,c
  5683  002FC6                     
  5684                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 652:         n = 
      +                          n >> 4;
  5685  002FC6  C037  F027         	movff	xtoa@n,??_xtoa
  5686  002FCA  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  5687  002FCE  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  5688  002FD2  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  5689  002FD6  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  5690  002FDA  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  5691  002FDE  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  5692  002FE2  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  5693  002FE6  0E05               	movlw	5
  5694  002FE8  EF00  F018         	goto	u4140
  5695  002FEC                     u4145:
  5696  002FEC  FFFF               	dw	65535	; assembler added errata NOP
  5697  002FEE  90D8               	bcf	status,0,c
  5698  002FF0  322E               	rrcf	(??_xtoa+7)^0,f,c
  5699  002FF2  322D               	rrcf	(??_xtoa+6)^0,f,c
  5700  002FF4  322C               	rrcf	(??_xtoa+5)^0,f,c
  5701  002FF6  322B               	rrcf	(??_xtoa+4)^0,f,c
  5702  002FF8  322A               	rrcf	(??_xtoa+3)^0,f,c
  5703  002FFA  3229               	rrcf	(??_xtoa+2)^0,f,c
  5704  002FFC  3228               	rrcf	(??_xtoa+1)^0,f,c
  5705  002FFE  3227               	rrcf	??_xtoa^0,f,c
  5706  003000                     u4140:
  5707  003000  FFFF               	dw	65535	; assembler added errata NOP
  5708  003002  2EE8               	decfsz	wreg,f,c
  5709  003004  EFF6  F017         	goto	u4145
  5710  003008  C027  F037         	movff	??_xtoa,xtoa@n
  5711  00300C  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  5712  003010  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  5713  003014  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  5714  003018  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  5715  00301C  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  5716  003020  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  5717  003024  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  5718  003028                     l3813:
  5719  003028  FFFF               	dw	65535	; assembler added errata NOP
  5720                           
  5721                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5722  00302A  BE40               	btfsc	(xtoa@i+1)^0,7,c
  5723  00302C  EF21  F018         	goto	u4151
  5724  003030  5040               	movf	(xtoa@i+1)^0,w,c
  5725  003032  E10A               	bnz	u4150
  5726  003034  0E02               	movlw	2
  5727  003036  5C3F               	subwf	xtoa@i^0,w,c
  5728  003038  A0D8               	btfss	status,0,c
  5729  00303A  EF21  F018         	goto	u4151
  5730  00303E  EF24  F018         	goto	u4150
  5731  003042                     u4151:
  5732  003042  FFFF               	dw	65535	; assembler added errata NOP
  5733  003044  EF5D  F018         	goto	l1166
  5734  003048                     u4150:
  5735  003048  FFFF               	dw	65535	; assembler added errata NOP
  5736  00304A  5037               	movf	xtoa@n^0,w,c
  5737  00304C  1038               	iorwf	(xtoa@n+1)^0,w,c
  5738  00304E  1039               	iorwf	(xtoa@n+2)^0,w,c
  5739  003050  103A               	iorwf	(xtoa@n+3)^0,w,c
  5740  003052  103B               	iorwf	(xtoa@n+4)^0,w,c
  5741  003054  103C               	iorwf	(xtoa@n+5)^0,w,c
  5742  003056  103D               	iorwf	(xtoa@n+6)^0,w,c
  5743  003058  103E               	iorwf	(xtoa@n+7)^0,w,c
  5744  00305A  A4D8               	btfss	status,2,c
  5745  00305C  EF32  F018         	goto	u4161
  5746  003060  EF35  F018         	goto	u4160
  5747  003064                     u4161:
  5748  003064  FFFF               	dw	65535	; assembler added errata NOP
  5749  003066  EF4F  F017         	goto	l3783
  5750  00306A                     u4160:
  5751  00306A  FFFF               	dw	65535	; assembler added errata NOP
  5752  00306C  BE34               	btfsc	(xtoa@p+1)^0,7,c
  5753  00306E  EF44  F018         	goto	u4170
  5754  003072  5034               	movf	(xtoa@p+1)^0,w,c
  5755  003074  E106               	bnz	u4171
  5756  003076  0433               	decf	xtoa@p^0,w,c
  5757  003078  B0D8               	btfsc	status,0,c
  5758  00307A  EF41  F018         	goto	u4171
  5759  00307E  EF44  F018         	goto	u4170
  5760  003082                     u4171:
  5761  003082  FFFF               	dw	65535	; assembler added errata NOP
  5762  003084  EF4F  F017         	goto	l3783
  5763  003088                     u4170:
  5764  003088  FFFF               	dw	65535	; assembler added errata NOP
  5765  00308A  BE36               	btfsc	(xtoa@w+1)^0,7,c
  5766  00308C  EF50  F018         	goto	u4181
  5767  003090  5036               	movf	(xtoa@w+1)^0,w,c
  5768  003092  E109               	bnz	u4180
  5769  003094  0435               	decf	xtoa@w^0,w,c
  5770  003096  A0D8               	btfss	status,0,c
  5771  003098  EF50  F018         	goto	u4181
  5772  00309C  EF53  F018         	goto	u4180
  5773  0030A0                     u4181:
  5774  0030A0  FFFF               	dw	65535	; assembler added errata NOP
  5775  0030A2  EF5D  F018         	goto	l1166
  5776  0030A6                     u4180:
  5777  0030A6  FFFF               	dw	65535	; assembler added errata NOP
  5778  0030A8  0100               	movlb	0	; () banked
  5779  0030AA  B38A               	btfsc	_flags& (0+255),1,b
  5780  0030AC  EF5A  F018         	goto	u4191
  5781  0030B0  EF5D  F018         	goto	u4190
  5782  0030B4                     u4191:
  5783  0030B4  FFFF               	dw	65535	; assembler added errata NOP
  5784  0030B6  EF4F  F017         	goto	l3783
  5785  0030BA                     u4190:
  5786  0030BA                     l1166:
  5787  0030BA  FFFF               	dw	65535	; assembler added errata NOP
  5788                           
  5789                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  5790  0030BC  0100               	movlb	0	; () banked
  5791  0030BE  A98A               	btfss	_flags& (0+255),4,b
  5792  0030C0  EF64  F018         	goto	u4201
  5793  0030C4  EF67  F018         	goto	u4200
  5794  0030C8                     u4201:
  5795  0030C8  FFFF               	dw	65535	; assembler added errata NOP
  5796  0030CA  EF7E  F018         	goto	l3829
  5797  0030CE                     u4200:
  5798  0030CE  FFFF               	dw	65535	; assembler added errata NOP
  5799  0030D0                     
  5800                           ; BSR set to: 0
  5801                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 657:         --i;
  5802  0030D0  063F               	decf	xtoa@i^0,f,c
  5803  0030D2  A0D8               	btfss	status,0,c
  5804  0030D4  0640               	decf	(xtoa@i+1)^0,f,c
  5805  0030D6                     
  5806                           ; BSR set to: 0
  5807                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 658:         dbuf
      +                          [i] = x;
  5808  0030D6  0E8E               	movlw	low _dbuf
  5809  0030D8  243F               	addwf	xtoa@i^0,w,c
  5810  0030DA  6ED9               	movwf	fsr2l,c
  5811  0030DC  0E00               	movlw	high _dbuf
  5812  0030DE  2040               	addwfc	(xtoa@i+1)^0,w,c
  5813  0030E0  6EDA               	movwf	fsr2h,c
  5814  0030E2  C026  FFDF         	movff	xtoa@x,indf2
  5815  0030E6                     
  5816                           ; BSR set to: 0
  5817                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 659:         --i;
  5818  0030E6  063F               	decf	xtoa@i^0,f,c
  5819  0030E8  A0D8               	btfss	status,0,c
  5820  0030EA  0640               	decf	(xtoa@i+1)^0,f,c
  5821                           
  5822                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 660:         dbuf
      +                          [i] = '0';
  5823  0030EC  0E8E               	movlw	low _dbuf
  5824  0030EE  243F               	addwf	xtoa@i^0,w,c
  5825  0030F0  6ED9               	movwf	fsr2l,c
  5826  0030F2  0E00               	movlw	high _dbuf
  5827  0030F4  2040               	addwfc	(xtoa@i+1)^0,w,c
  5828  0030F6  6EDA               	movwf	fsr2h,c
  5829  0030F8  0E30               	movlw	48
  5830  0030FA  6EDF               	movwf	indf2,c
  5831  0030FC                     l3829:
  5832  0030FC  FFFF               	dw	65535	; assembler added errata NOP
  5833                           
  5834                           ; BSR set to: 0
  5835                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 664:     return p
      +                          ad(fp, &dbuf[i], w);
  5836  0030FE  C01C  F011         	movff	xtoa@fp,pad@fp
  5837  003102  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  5838  003106  0E8E               	movlw	low _dbuf
  5839  003108  243F               	addwf	xtoa@i^0,w,c
  5840  00310A  6E13               	movwf	pad@buf^0,c
  5841  00310C  0E00               	movlw	high _dbuf
  5842  00310E  2040               	addwfc	(xtoa@i+1)^0,w,c
  5843  003110  6E14               	movwf	(pad@buf+1)^0,c
  5844  003112  C035  F015         	movff	xtoa@w,pad@p
  5845  003116  C036  F016         	movff	xtoa@w+1,pad@p+1
  5846  00311A  EC5E  F03C         	call	_pad	;wreg free
  5847  00311E  C011  F01C         	movff	?_pad,?_xtoa
  5848  003122  C012  F01D         	movff	?_pad+1,?_xtoa+1
  5849  003126  0012               	return		;funcret
  5850  003128  FFFF               	dw	65535	; errata NOP
  5851  00312A                     __end_of_xtoa:
  5852                           	callstack 0
  5853                           
  5854 ;; *************** function _toupper *****************
  5855 ;; Defined at:
  5856 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\toupper.c"
  5857 ;; Parameters:    Size  Location     Type
  5858 ;;  c               2    6[COMRAM] int 
  5859 ;; Auto vars:     Size  Location     Type
  5860 ;;		None
  5861 ;; Return value:  Size  Location     Type
  5862 ;;                  2    6[COMRAM] int 
  5863 ;; Registers used:
  5864 ;;		wreg, status,2, status,0
  5865 ;; Tracked objects:
  5866 ;;		On entry : 0/0
  5867 ;;		On exit  : 0/0
  5868 ;;		Unchanged: 0/0
  5869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5870 ;;      Params:         2       0       0       0       0       0       0
  5871 ;;      Locals:         2       0       0       0       0       0       0
  5872 ;;      Temps:          4       0       0       0       0       0       0
  5873 ;;      Totals:         8       0       0       0       0       0       0
  5874 ;;Total ram usage:        8 bytes
  5875 ;; Hardware stack levels used:    1
  5876 ;; Hardware stack levels required when called:    2
  5877 ;; This function calls:
  5878 ;;		_islower
  5879 ;; This function is called by:
  5880 ;;		_xtoa
  5881 ;; This function uses a non-reentrant model
  5882 ;;
  5883                           
  5884                           	psect	text9
  5885  007314                     __ptext9:
  5886                           	callstack 0
  5887  007314                     _toupper:
  5888                           	callstack 0
  5889  007314  FFFF               	dw	65535	; assembler added errata NOP
  5890  007316  0E9F               	movlw	159
  5891  007318  6E09               	movwf	??_toupper^0,c
  5892  00731A  0EFF               	movlw	255
  5893  00731C  6E0A               	movwf	(??_toupper+1)^0,c
  5894  00731E  C007  F00B         	movff	toupper@c,??_toupper+2
  5895  007322  C008  F00C         	movff	toupper@c+1,??_toupper+3
  5896  007326  5009               	movf	??_toupper^0,w,c
  5897  007328  260B               	addwf	(??_toupper+2)^0,f,c
  5898  00732A  500A               	movf	(??_toupper+1)^0,w,c
  5899  00732C  220C               	addwfc	(??_toupper+3)^0,f,c
  5900  00732E  500C               	movf	(??_toupper+3)^0,w,c
  5901  007330  E10B               	bnz	u3540
  5902  007332  0E1A               	movlw	26
  5903  007334  5C0B               	subwf	(??_toupper+2)^0,w,c
  5904  007336  A0D8               	btfss	status,0,c
  5905  007338  EFA0  F039         	goto	u3541
  5906  00733C  EFA4  F039         	goto	u3540
  5907  007340                     u3541:
  5908  007340  FFFF               	dw	65535	; assembler added errata NOP
  5909  007342  0E01               	movlw	1
  5910  007344  EFA6  F039         	goto	u3550
  5911  007348                     u3540:
  5912  007348  FFFF               	dw	65535	; assembler added errata NOP
  5913  00734A  0E00               	movlw	0
  5914  00734C                     u3550:
  5915  00734C  FFFF               	dw	65535	; assembler added errata NOP
  5916  00734E  6E0D               	movwf	_toupper$1715^0,c
  5917  007350  6A0E               	clrf	(_toupper$1715+1)^0,c
  5918  007352  500D               	movf	_toupper$1715^0,w,c
  5919  007354  100E               	iorwf	(_toupper$1715+1)^0,w,c
  5920  007356  B4D8               	btfsc	status,2,c
  5921  007358  EFB0  F039         	goto	u3561
  5922  00735C  EFB3  F039         	goto	u3560
  5923  007360                     u3561:
  5924  007360  FFFF               	dw	65535	; assembler added errata NOP
  5925  007362  EFBA  F039         	goto	l1359
  5926  007366                     u3560:
  5927  007366  FFFF               	dw	65535	; assembler added errata NOP
  5928  007368  0E5F               	movlw	95
  5929  00736A  1407               	andwf	toupper@c^0,w,c
  5930  00736C  6E07               	movwf	?_toupper^0,c
  5931  00736E  6A08               	clrf	(?_toupper+1)^0,c
  5932  007370  EFBF  F039         	goto	l1364
  5933  007374                     l1359:
  5934  007374  FFFF               	dw	65535	; assembler added errata NOP
  5935  007376  C007  F007         	movff	toupper@c,?_toupper
  5936  00737A  C008  F008         	movff	toupper@c+1,?_toupper+1
  5937  00737E                     l1364:
  5938  00737E  FFFF               	dw	65535	; assembler added errata NOP
  5939  007380  0012               	return		;funcret
  5940  007382  FFFF               	dw	65535	; errata NOP
  5941  007384                     __end_of_toupper:
  5942                           	callstack 0
  5943                           
  5944 ;; *************** function _islower *****************
  5945 ;; Defined at:
  5946 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\islower.c"
  5947 ;; Parameters:    Size  Location     Type
  5948 ;;  c               2    0[COMRAM] int 
  5949 ;; Auto vars:     Size  Location     Type
  5950 ;;		None
  5951 ;; Return value:  Size  Location     Type
  5952 ;;                  2    0[COMRAM] int 
  5953 ;; Registers used:
  5954 ;;		wreg, status,2, status,0
  5955 ;; Tracked objects:
  5956 ;;		On entry : 0/0
  5957 ;;		On exit  : 0/0
  5958 ;;		Unchanged: 0/0
  5959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5960 ;;      Params:         2       0       0       0       0       0       0
  5961 ;;      Locals:         0       0       0       0       0       0       0
  5962 ;;      Temps:          4       0       0       0       0       0       0
  5963 ;;      Totals:         6       0       0       0       0       0       0
  5964 ;;Total ram usage:        6 bytes
  5965 ;; Hardware stack levels used:    1
  5966 ;; Hardware stack levels required when called:    1
  5967 ;; This function calls:
  5968 ;;		Nothing
  5969 ;; This function is called by:
  5970 ;;		_toupper
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974                           	psect	text10
  5975  00701E                     __ptext10:
  5976                           	callstack 0
  5977  00701E                     _islower:
  5978                           	callstack 23
  5979  00701E  FFFF               	dw	65535	; assembler added errata NOP
  5980  007020  0E9F               	movlw	159
  5981  007022  6E03               	movwf	??_islower^0,c
  5982  007024  0EFF               	movlw	255
  5983  007026  6E04               	movwf	(??_islower+1)^0,c
  5984  007028  C001  F005         	movff	islower@c,??_islower+2
  5985  00702C  C002  F006         	movff	islower@c+1,??_islower+3
  5986  007030  5003               	movf	??_islower^0,w,c
  5987  007032  2605               	addwf	(??_islower+2)^0,f,c
  5988  007034  5004               	movf	(??_islower+1)^0,w,c
  5989  007036  2206               	addwfc	(??_islower+3)^0,f,c
  5990  007038  5006               	movf	(??_islower+3)^0,w,c
  5991  00703A  E10B               	bnz	u3230
  5992  00703C  0E1A               	movlw	26
  5993  00703E  5C05               	subwf	(??_islower+2)^0,w,c
  5994  007040  A0D8               	btfss	status,0,c
  5995  007042  EF25  F038         	goto	u3231
  5996  007046  EF29  F038         	goto	u3230
  5997  00704A                     u3231:
  5998  00704A  FFFF               	dw	65535	; assembler added errata NOP
  5999  00704C  0E01               	movlw	1
  6000  00704E  EF2B  F038         	goto	u3240
  6001  007052                     u3230:
  6002  007052  FFFF               	dw	65535	; assembler added errata NOP
  6003  007054  0E00               	movlw	0
  6004  007056                     u3240:
  6005  007056  FFFF               	dw	65535	; assembler added errata NOP
  6006  007058  6E01               	movwf	?_islower^0,c
  6007  00705A  6A02               	clrf	(?_islower+1)^0,c
  6008  00705C  0012               	return		;funcret
  6009  00705E  FFFF               	dw	65535	; errata NOP
  6010  007060                     __end_of_islower:
  6011                           	callstack 0
  6012                           
  6013 ;; *************** function _isupper *****************
  6014 ;; Defined at:
  6015 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  6016 ;; Parameters:    Size  Location     Type
  6017 ;;  c               2    0[COMRAM] int 
  6018 ;; Auto vars:     Size  Location     Type
  6019 ;;		None
  6020 ;; Return value:  Size  Location     Type
  6021 ;;                  2    0[COMRAM] int 
  6022 ;; Registers used:
  6023 ;;		wreg, status,2, status,0
  6024 ;; Tracked objects:
  6025 ;;		On entry : 0/0
  6026 ;;		On exit  : 0/0
  6027 ;;		Unchanged: 0/0
  6028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6029 ;;      Params:         2       0       0       0       0       0       0
  6030 ;;      Locals:         0       0       0       0       0       0       0
  6031 ;;      Temps:          4       0       0       0       0       0       0
  6032 ;;      Totals:         6       0       0       0       0       0       0
  6033 ;;Total ram usage:        6 bytes
  6034 ;; Hardware stack levels used:    1
  6035 ;; Hardware stack levels required when called:    1
  6036 ;; This function calls:
  6037 ;;		Nothing
  6038 ;; This function is called by:
  6039 ;;		_xtoa
  6040 ;; This function uses a non-reentrant model
  6041 ;;
  6042                           
  6043                           	psect	text11
  6044  006FDC                     __ptext11:
  6045                           	callstack 0
  6046  006FDC                     _isupper:
  6047                           	callstack 24
  6048  006FDC  FFFF               	dw	65535	; assembler added errata NOP
  6049  006FDE  0EBF               	movlw	191
  6050  006FE0  6E03               	movwf	??_isupper^0,c
  6051  006FE2  0EFF               	movlw	255
  6052  006FE4  6E04               	movwf	(??_isupper+1)^0,c
  6053  006FE6  C001  F005         	movff	isupper@c,??_isupper+2
  6054  006FEA  C002  F006         	movff	isupper@c+1,??_isupper+3
  6055  006FEE  5003               	movf	??_isupper^0,w,c
  6056  006FF0  2605               	addwf	(??_isupper+2)^0,f,c
  6057  006FF2  5004               	movf	(??_isupper+1)^0,w,c
  6058  006FF4  2206               	addwfc	(??_isupper+3)^0,f,c
  6059  006FF6  5006               	movf	(??_isupper+3)^0,w,c
  6060  006FF8  E10B               	bnz	u3500
  6061  006FFA  0E1A               	movlw	26
  6062  006FFC  5C05               	subwf	(??_isupper+2)^0,w,c
  6063  006FFE  A0D8               	btfss	status,0,c
  6064  007000  EF04  F038         	goto	u3501
  6065  007004  EF08  F038         	goto	u3500
  6066  007008                     u3501:
  6067  007008  FFFF               	dw	65535	; assembler added errata NOP
  6068  00700A  0E01               	movlw	1
  6069  00700C  EF0A  F038         	goto	u3510
  6070  007010                     u3500:
  6071  007010  FFFF               	dw	65535	; assembler added errata NOP
  6072  007012  0E00               	movlw	0
  6073  007014                     u3510:
  6074  007014  FFFF               	dw	65535	; assembler added errata NOP
  6075  007016  6E01               	movwf	?_isupper^0,c
  6076  007018  6A02               	clrf	(?_isupper+1)^0,c
  6077  00701A  0012               	return		;funcret
  6078  00701C  FFFF               	dw	65535	; errata NOP
  6079  00701E                     __end_of_isupper:
  6080                           	callstack 0
  6081                           
  6082 ;; *************** function _isalpha *****************
  6083 ;; Defined at:
  6084 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isalpha.c"
  6085 ;; Parameters:    Size  Location     Type
  6086 ;;  c               2    0[COMRAM] int 
  6087 ;; Auto vars:     Size  Location     Type
  6088 ;;		None
  6089 ;; Return value:  Size  Location     Type
  6090 ;;                  2    0[COMRAM] int 
  6091 ;; Registers used:
  6092 ;;		wreg, status,2, status,0
  6093 ;; Tracked objects:
  6094 ;;		On entry : 0/0
  6095 ;;		On exit  : 0/0
  6096 ;;		Unchanged: 0/0
  6097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6098 ;;      Params:         2       0       0       0       0       0       0
  6099 ;;      Locals:         0       0       0       0       0       0       0
  6100 ;;      Temps:          4       0       0       0       0       0       0
  6101 ;;      Totals:         6       0       0       0       0       0       0
  6102 ;;Total ram usage:        6 bytes
  6103 ;; Hardware stack levels used:    1
  6104 ;; Hardware stack levels required when called:    1
  6105 ;; This function calls:
  6106 ;;		Nothing
  6107 ;; This function is called by:
  6108 ;;		_xtoa
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           	psect	text12
  6113  007060                     __ptext12:
  6114                           	callstack 0
  6115  007060                     _isalpha:
  6116                           	callstack 24
  6117  007060  FFFF               	dw	65535	; assembler added errata NOP
  6118  007062  0E9F               	movlw	159
  6119  007064  6E03               	movwf	??_isalpha^0,c
  6120  007066  0EFF               	movlw	255
  6121  007068  6E04               	movwf	(??_isalpha+1)^0,c
  6122  00706A  0E20               	movlw	32
  6123  00706C  1001               	iorwf	isalpha@c^0,w,c
  6124  00706E  6E05               	movwf	(??_isalpha+2)^0,c
  6125  007070  0E00               	movlw	0
  6126  007072  1002               	iorwf	(isalpha@c+1)^0,w,c
  6127  007074  6E06               	movwf	(??_isalpha+3)^0,c
  6128  007076  5003               	movf	??_isalpha^0,w,c
  6129  007078  2605               	addwf	(??_isalpha+2)^0,f,c
  6130  00707A  5004               	movf	(??_isalpha+1)^0,w,c
  6131  00707C  2206               	addwfc	(??_isalpha+3)^0,f,c
  6132  00707E  5006               	movf	(??_isalpha+3)^0,w,c
  6133  007080  E10B               	bnz	u3520
  6134  007082  0E1A               	movlw	26
  6135  007084  5C05               	subwf	(??_isalpha+2)^0,w,c
  6136  007086  A0D8               	btfss	status,0,c
  6137  007088  EF48  F038         	goto	u3521
  6138  00708C  EF4C  F038         	goto	u3520
  6139  007090                     u3521:
  6140  007090  FFFF               	dw	65535	; assembler added errata NOP
  6141  007092  0E01               	movlw	1
  6142  007094  EF4E  F038         	goto	u3530
  6143  007098                     u3520:
  6144  007098  FFFF               	dw	65535	; assembler added errata NOP
  6145  00709A  0E00               	movlw	0
  6146  00709C                     u3530:
  6147  00709C  FFFF               	dw	65535	; assembler added errata NOP
  6148  00709E  6E01               	movwf	?_isalpha^0,c
  6149  0070A0  6A02               	clrf	(?_isalpha+1)^0,c
  6150  0070A2  0012               	return		;funcret
  6151  0070A4  FFFF               	dw	65535	; errata NOP
  6152  0070A6                     __end_of_isalpha:
  6153                           	callstack 0
  6154                           
  6155 ;; *************** function _utoa *****************
  6156 ;; Defined at:
  6157 ;;		line 593 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6158 ;; Parameters:    Size  Location     Type
  6159 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6160 ;;		 -> vsnprintf@f(6), 
  6161 ;;  d               8   29[COMRAM] unsigned long long 
  6162 ;; Auto vars:     Size  Location     Type
  6163 ;;  n               8   49[COMRAM] unsigned long long 
  6164 ;;  i               2   57[COMRAM] int 
  6165 ;;  w               2   47[COMRAM] int 
  6166 ;;  p               2   45[COMRAM] int 
  6167 ;; Return value:  Size  Location     Type
  6168 ;;                  2   27[COMRAM] int 
  6169 ;; Registers used:
  6170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6171 ;; Tracked objects:
  6172 ;;		On entry : 0/0
  6173 ;;		On exit  : 0/0
  6174 ;;		Unchanged: 0/0
  6175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6176 ;;      Params:        10       0       0       0       0       0       0
  6177 ;;      Locals:        14       0       0       0       0       0       0
  6178 ;;      Temps:          8       0       0       0       0       0       0
  6179 ;;      Totals:        32       0       0       0       0       0       0
  6180 ;;Total ram usage:       32 bytes
  6181 ;; Hardware stack levels used:    1
  6182 ;; Hardware stack levels required when called:    5
  6183 ;; This function calls:
  6184 ;;		___lodiv
  6185 ;;		___lomod
  6186 ;;		_pad
  6187 ;; This function is called by:
  6188 ;;		_vfpfcnvrt
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192                           	psect	text13
  6193  00312A                     __ptext13:
  6194                           	callstack 0
  6195  00312A                     _utoa:
  6196                           	callstack 0
  6197  00312A  FFFF               	dw	65535	; assembler added errata NOP
  6198  00312C                     
  6199                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 593: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 594: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 595:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common
      +                          \doprnt.c: 596:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sourc
      +                          es\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  6200  00312C  0100               	movlb	0	; () banked
  6201  00312E  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6202  003130  EF9C  F018         	goto	u3971
  6203  003134  EF9F  F018         	goto	u3970
  6204  003138                     u3971:
  6205  003138  FFFF               	dw	65535	; assembler added errata NOP
  6206  00313A  EFA1  F018         	goto	l3735
  6207  00313E                     u3970:
  6208  00313E  FFFF               	dw	65535	; assembler added errata NOP
  6209  003140                     
  6210                           ; BSR set to: 0
  6211                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 600:         flag
      +                          s &= ~(1 << 1);
  6212  003140  938A               	bcf	_flags& (0+255),1,b
  6213  003142                     l3735:
  6214  003142  FFFF               	dw	65535	; assembler added errata NOP
  6215                           
  6216                           ; BSR set to: 0
  6217                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 602:     p = (0 <
      +                           prec) ? prec : 1;
  6218  003144  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6219  003146  EFB0  F018         	goto	u3980
  6220  00314A  5189               	movf	(_prec+1)& (0+255),w,b
  6221  00314C  E106               	bnz	u3981
  6222  00314E  0588               	decf	_prec& (0+255),w,b
  6223  003150  B0D8               	btfsc	status,0,c
  6224  003152  EFAD  F018         	goto	u3981
  6225  003156  EFB0  F018         	goto	u3980
  6226  00315A                     u3981:
  6227  00315A  FFFF               	dw	65535	; assembler added errata NOP
  6228  00315C  EFB7  F018         	goto	l1128
  6229  003160                     u3980:
  6230  003160  FFFF               	dw	65535	; assembler added errata NOP
  6231  003162                     
  6232                           ; BSR set to: 0
  6233  003162  0E00               	movlw	0
  6234  003164  6E2F               	movwf	(utoa@p+1)^0,c
  6235  003166  0E01               	movlw	1
  6236  003168  6E2E               	movwf	utoa@p^0,c
  6237  00316A  EFBC  F018         	goto	l1130
  6238  00316E                     l1128:
  6239  00316E  FFFF               	dw	65535	; assembler added errata NOP
  6240                           
  6241                           ; BSR set to: 0
  6242  003170  C088  F02E         	movff	_prec,utoa@p
  6243  003174  C089  F02F         	movff	_prec+1,utoa@p+1
  6244  003178                     l1130:
  6245  003178  FFFF               	dw	65535	; assembler added errata NOP
  6246                           
  6247                           ; BSR set to: 0
  6248                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 603:     w = widt
      +                          h;
  6249  00317A  C086  F030         	movff	_width,utoa@w
  6250  00317E  C087  F031         	movff	_width+1,utoa@w+1
  6251                           
  6252                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 606:     n = d;
  6253  003182  C01E  F032         	movff	utoa@d,utoa@n
  6254  003186  C01F  F033         	movff	utoa@d+1,utoa@n+1
  6255  00318A  C020  F034         	movff	utoa@d+2,utoa@n+2
  6256  00318E  C021  F035         	movff	utoa@d+3,utoa@n+3
  6257  003192  C022  F036         	movff	utoa@d+4,utoa@n+4
  6258  003196  C023  F037         	movff	utoa@d+5,utoa@n+5
  6259  00319A  C024  F038         	movff	utoa@d+6,utoa@n+6
  6260  00319E  C025  F039         	movff	utoa@d+7,utoa@n+7
  6261  0031A2                     
  6262                           ; BSR set to: 0
  6263                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 607:     i = size
      +                          of(dbuf) - 1;
  6264  0031A2  0E00               	movlw	0
  6265  0031A4  6E3B               	movwf	(utoa@i+1)^0,c
  6266  0031A6  0E1F               	movlw	31
  6267  0031A8  6E3A               	movwf	utoa@i^0,c
  6268  0031AA                     
  6269                           ; BSR set to: 0
  6270                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 608:     dbuf[i] 
      +                          = '\0';
  6271  0031AA  0E00               	movlw	0
  6272  0031AC  6FAD               	movwf	(_dbuf+31)& (0+255),b
  6273                           
  6274                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6275  0031AE  EF50  F019         	goto	l3753
  6276  0031B2                     l3743:
  6277  0031B2  FFFF               	dw	65535	; assembler added errata NOP
  6278                           
  6279                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 610:         --i;
  6280  0031B4  063A               	decf	utoa@i^0,f,c
  6281  0031B6  A0D8               	btfss	status,0,c
  6282  0031B8  063B               	decf	(utoa@i+1)^0,f,c
  6283  0031BA                     
  6284                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 611:         dbuf
      +                          [i] = '0' + (n % 10);
  6285  0031BA  0E8E               	movlw	low _dbuf
  6286  0031BC  243A               	addwf	utoa@i^0,w,c
  6287  0031BE  6ED9               	movwf	fsr2l,c
  6288  0031C0  0E00               	movlw	high _dbuf
  6289  0031C2  203B               	addwfc	(utoa@i+1)^0,w,c
  6290  0031C4  6EDA               	movwf	fsr2h,c
  6291  0031C6  C032  F001         	movff	utoa@n,___lomod@dividend
  6292  0031CA  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  6293  0031CE  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  6294  0031D2  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  6295  0031D6  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  6296  0031DA  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  6297  0031DE  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  6298  0031E2  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  6299  0031E6  0E0A               	movlw	10
  6300  0031E8  6E09               	movwf	___lomod@divisor^0,c
  6301  0031EA  0E00               	movlw	0
  6302  0031EC  6E0A               	movwf	(___lomod@divisor+1)^0,c
  6303  0031EE  0E00               	movlw	0
  6304  0031F0  6E0B               	movwf	(___lomod@divisor+2)^0,c
  6305  0031F2  0E00               	movlw	0
  6306  0031F4  6E0C               	movwf	(___lomod@divisor+3)^0,c
  6307  0031F6  0E00               	movlw	0
  6308  0031F8  6E0D               	movwf	(___lomod@divisor+4)^0,c
  6309  0031FA  0E00               	movlw	0
  6310  0031FC  6E0E               	movwf	(___lomod@divisor+5)^0,c
  6311  0031FE  0E00               	movlw	0
  6312  003200  6E0F               	movwf	(___lomod@divisor+6)^0,c
  6313  003202  0E00               	movlw	0
  6314  003204  6E10               	movwf	(___lomod@divisor+7)^0,c
  6315  003206  ECD1  F03C         	call	___lomod	;wreg free
  6316  00320A  C001  F026         	movff	?___lomod,??_utoa
  6317  00320E  C002  F027         	movff	?___lomod+1,??_utoa+1
  6318  003212  C003  F028         	movff	?___lomod+2,??_utoa+2
  6319  003216  C004  F029         	movff	?___lomod+3,??_utoa+3
  6320  00321A  C005  F02A         	movff	?___lomod+4,??_utoa+4
  6321  00321E  C006  F02B         	movff	?___lomod+5,??_utoa+5
  6322  003222  C007  F02C         	movff	?___lomod+6,??_utoa+6
  6323  003226  C008  F02D         	movff	?___lomod+7,??_utoa+7
  6324  00322A  5026               	movf	??_utoa^0,w,c
  6325  00322C  0F30               	addlw	48
  6326  00322E  6EDF               	movwf	indf2,c
  6327  003230                     
  6328                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 612:         --p;
  6329  003230  062E               	decf	utoa@p^0,f,c
  6330  003232  A0D8               	btfss	status,0,c
  6331  003234  062F               	decf	(utoa@p+1)^0,f,c
  6332  003236                     
  6333                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 613:         --w;
  6334  003236  0630               	decf	utoa@w^0,f,c
  6335  003238  A0D8               	btfss	status,0,c
  6336  00323A  0631               	decf	(utoa@w+1)^0,f,c
  6337  00323C                     
  6338                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 614:         n = 
      +                          n / 10;
  6339  00323C  C032  F001         	movff	utoa@n,___lodiv@dividend
  6340  003240  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  6341  003244  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  6342  003248  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  6343  00324C  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  6344  003250  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  6345  003254  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  6346  003258  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  6347  00325C  0E0A               	movlw	10
  6348  00325E  6E09               	movwf	___lodiv@divisor^0,c
  6349  003260  0E00               	movlw	0
  6350  003262  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  6351  003264  0E00               	movlw	0
  6352  003266  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  6353  003268  0E00               	movlw	0
  6354  00326A  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  6355  00326C  0E00               	movlw	0
  6356  00326E  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  6357  003270  0E00               	movlw	0
  6358  003272  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  6359  003274  0E00               	movlw	0
  6360  003276  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  6361  003278  0E00               	movlw	0
  6362  00327A  6E10               	movwf	(___lodiv@divisor+7)^0,c
  6363  00327C  ECC8  F03E         	call	___lodiv	;wreg free
  6364  003280  C001  F032         	movff	?___lodiv,utoa@n
  6365  003284  C002  F033         	movff	?___lodiv+1,utoa@n+1
  6366  003288  C003  F034         	movff	?___lodiv+2,utoa@n+2
  6367  00328C  C004  F035         	movff	?___lodiv+3,utoa@n+3
  6368  003290  C005  F036         	movff	?___lodiv+4,utoa@n+4
  6369  003294  C006  F037         	movff	?___lodiv+5,utoa@n+5
  6370  003298  C007  F038         	movff	?___lodiv+6,utoa@n+6
  6371  00329C  C008  F039         	movff	?___lodiv+7,utoa@n+7
  6372  0032A0                     l3753:
  6373  0032A0  FFFF               	dw	65535	; assembler added errata NOP
  6374                           
  6375                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6376  0032A2  503A               	movf	utoa@i^0,w,c
  6377  0032A4  103B               	iorwf	(utoa@i+1)^0,w,c
  6378  0032A6  B4D8               	btfsc	status,2,c
  6379  0032A8  EF58  F019         	goto	u3991
  6380  0032AC  EF5B  F019         	goto	u3990
  6381  0032B0                     u3991:
  6382  0032B0  FFFF               	dw	65535	; assembler added errata NOP
  6383  0032B2  EF94  F019         	goto	l3763
  6384  0032B6                     u3990:
  6385  0032B6  FFFF               	dw	65535	; assembler added errata NOP
  6386  0032B8  5032               	movf	utoa@n^0,w,c
  6387  0032BA  1033               	iorwf	(utoa@n+1)^0,w,c
  6388  0032BC  1034               	iorwf	(utoa@n+2)^0,w,c
  6389  0032BE  1035               	iorwf	(utoa@n+3)^0,w,c
  6390  0032C0  1036               	iorwf	(utoa@n+4)^0,w,c
  6391  0032C2  1037               	iorwf	(utoa@n+5)^0,w,c
  6392  0032C4  1038               	iorwf	(utoa@n+6)^0,w,c
  6393  0032C6  1039               	iorwf	(utoa@n+7)^0,w,c
  6394  0032C8  A4D8               	btfss	status,2,c
  6395  0032CA  EF69  F019         	goto	u4001
  6396  0032CE  EF6C  F019         	goto	u4000
  6397  0032D2                     u4001:
  6398  0032D2  FFFF               	dw	65535	; assembler added errata NOP
  6399  0032D4  EFD9  F018         	goto	l3743
  6400  0032D8                     u4000:
  6401  0032D8  FFFF               	dw	65535	; assembler added errata NOP
  6402  0032DA  BE2F               	btfsc	(utoa@p+1)^0,7,c
  6403  0032DC  EF7B  F019         	goto	u4010
  6404  0032E0  502F               	movf	(utoa@p+1)^0,w,c
  6405  0032E2  E106               	bnz	u4011
  6406  0032E4  042E               	decf	utoa@p^0,w,c
  6407  0032E6  B0D8               	btfsc	status,0,c
  6408  0032E8  EF78  F019         	goto	u4011
  6409  0032EC  EF7B  F019         	goto	u4010
  6410  0032F0                     u4011:
  6411  0032F0  FFFF               	dw	65535	; assembler added errata NOP
  6412  0032F2  EFD9  F018         	goto	l3743
  6413  0032F6                     u4010:
  6414  0032F6  FFFF               	dw	65535	; assembler added errata NOP
  6415  0032F8  BE31               	btfsc	(utoa@w+1)^0,7,c
  6416  0032FA  EF87  F019         	goto	u4021
  6417  0032FE  5031               	movf	(utoa@w+1)^0,w,c
  6418  003300  E109               	bnz	u4020
  6419  003302  0430               	decf	utoa@w^0,w,c
  6420  003304  A0D8               	btfss	status,0,c
  6421  003306  EF87  F019         	goto	u4021
  6422  00330A  EF8A  F019         	goto	u4020
  6423  00330E                     u4021:
  6424  00330E  FFFF               	dw	65535	; assembler added errata NOP
  6425  003310  EF94  F019         	goto	l3763
  6426  003314                     u4020:
  6427  003314  FFFF               	dw	65535	; assembler added errata NOP
  6428  003316  0100               	movlb	0	; () banked
  6429  003318  B38A               	btfsc	_flags& (0+255),1,b
  6430  00331A  EF91  F019         	goto	u4031
  6431  00331E  EF94  F019         	goto	u4030
  6432  003322                     u4031:
  6433  003322  FFFF               	dw	65535	; assembler added errata NOP
  6434  003324  EFD9  F018         	goto	l3743
  6435  003328                     u4030:
  6436  003328                     l3763:
  6437  003328  FFFF               	dw	65535	; assembler added errata NOP
  6438                           
  6439                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 618:     return p
      +                          ad(fp, &dbuf[i], w);
  6440  00332A  C01C  F011         	movff	utoa@fp,pad@fp
  6441  00332E  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  6442  003332  0E8E               	movlw	low _dbuf
  6443  003334  243A               	addwf	utoa@i^0,w,c
  6444  003336  6E13               	movwf	pad@buf^0,c
  6445  003338  0E00               	movlw	high _dbuf
  6446  00333A  203B               	addwfc	(utoa@i+1)^0,w,c
  6447  00333C  6E14               	movwf	(pad@buf+1)^0,c
  6448  00333E  C030  F015         	movff	utoa@w,pad@p
  6449  003342  C031  F016         	movff	utoa@w+1,pad@p+1
  6450  003346  EC5E  F03C         	call	_pad	;wreg free
  6451  00334A  C011  F01C         	movff	?_pad,?_utoa
  6452  00334E  C012  F01D         	movff	?_pad+1,?_utoa+1
  6453  003352  0012               	return		;funcret
  6454  003354  FFFF               	dw	65535	; errata NOP
  6455  003356                     __end_of_utoa:
  6456                           	callstack 0
  6457                           
  6458 ;; *************** function ___lomod *****************
  6459 ;; Defined at:
  6460 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lomod.c"
  6461 ;; Parameters:    Size  Location     Type
  6462 ;;  dividend        8    0[COMRAM] unsigned long long 
  6463 ;;  divisor         8    8[COMRAM] unsigned long long 
  6464 ;; Auto vars:     Size  Location     Type
  6465 ;;  counter         1   16[COMRAM] unsigned char 
  6466 ;; Return value:  Size  Location     Type
  6467 ;;                  8    0[COMRAM] unsigned long long 
  6468 ;; Registers used:
  6469 ;;		wreg, status,2, status,0
  6470 ;; Tracked objects:
  6471 ;;		On entry : 0/0
  6472 ;;		On exit  : 0/0
  6473 ;;		Unchanged: 0/0
  6474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6475 ;;      Params:        16       0       0       0       0       0       0
  6476 ;;      Locals:         1       0       0       0       0       0       0
  6477 ;;      Temps:          0       0       0       0       0       0       0
  6478 ;;      Totals:        17       0       0       0       0       0       0
  6479 ;;Total ram usage:       17 bytes
  6480 ;; Hardware stack levels used:    1
  6481 ;; Hardware stack levels required when called:    1
  6482 ;; This function calls:
  6483 ;;		Nothing
  6484 ;; This function is called by:
  6485 ;;		_utoa
  6486 ;; This function uses a non-reentrant model
  6487 ;;
  6488                           
  6489                           	psect	text14
  6490  0079A2                     __ptext14:
  6491                           	callstack 0
  6492  0079A2                     ___lomod:
  6493                           	callstack 0
  6494  0079A2  FFFF               	dw	65535	; assembler added errata NOP
  6495  0079A4  5009               	movf	___lomod@divisor^0,w,c
  6496  0079A6  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  6497  0079A8  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  6498  0079AA  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  6499  0079AC  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  6500  0079AE  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  6501  0079B0  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  6502  0079B2  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  6503  0079B4  B4D8               	btfsc	status,2,c
  6504  0079B6  EFDF  F03C         	goto	u3421
  6505  0079BA  EFE2  F03C         	goto	u3420
  6506  0079BE                     u3421:
  6507  0079BE  FFFF               	dw	65535	; assembler added errata NOP
  6508  0079C0  EF33  F03D         	goto	l747
  6509  0079C4                     u3420:
  6510  0079C4  FFFF               	dw	65535	; assembler added errata NOP
  6511  0079C6  0E01               	movlw	1
  6512  0079C8  6E11               	movwf	___lomod@counter^0,c
  6513  0079CA  EFF2  F03C         	goto	l3495
  6514  0079CE                     l3493:
  6515  0079CE  FFFF               	dw	65535	; assembler added errata NOP
  6516  0079D0  90D8               	bcf	status,0,c
  6517  0079D2  3609               	rlcf	___lomod@divisor^0,f,c
  6518  0079D4  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  6519  0079D6  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  6520  0079D8  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  6521  0079DA  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  6522  0079DC  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  6523  0079DE  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  6524  0079E0  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  6525  0079E2  2A11               	incf	___lomod@counter^0,f,c
  6526  0079E4                     l3495:
  6527  0079E4  FFFF               	dw	65535	; assembler added errata NOP
  6528  0079E6  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  6529  0079E8  EFF8  F03C         	goto	u3431
  6530  0079EC  EFFB  F03C         	goto	u3430
  6531  0079F0                     u3431:
  6532  0079F0  FFFF               	dw	65535	; assembler added errata NOP
  6533  0079F2  EFE7  F03C         	goto	l3493
  6534  0079F6                     u3430:
  6535  0079F6  FFFF               	dw	65535	; assembler added errata NOP
  6536  0079F8                     l3497:
  6537  0079F8  FFFF               	dw	65535	; assembler added errata NOP
  6538  0079FA  5009               	movf	___lomod@divisor^0,w,c
  6539  0079FC  5C01               	subwf	___lomod@dividend^0,w,c
  6540  0079FE  500A               	movf	(___lomod@divisor+1)^0,w,c
  6541  007A00  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  6542  007A02  500B               	movf	(___lomod@divisor+2)^0,w,c
  6543  007A04  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  6544  007A06  500C               	movf	(___lomod@divisor+3)^0,w,c
  6545  007A08  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  6546  007A0A  500D               	movf	(___lomod@divisor+4)^0,w,c
  6547  007A0C  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  6548  007A0E  500E               	movf	(___lomod@divisor+5)^0,w,c
  6549  007A10  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  6550  007A12  500F               	movf	(___lomod@divisor+6)^0,w,c
  6551  007A14  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  6552  007A16  5010               	movf	(___lomod@divisor+7)^0,w,c
  6553  007A18  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  6554  007A1A  A0D8               	btfss	status,0,c
  6555  007A1C  EF12  F03D         	goto	u3441
  6556  007A20  EF15  F03D         	goto	u3440
  6557  007A24                     u3441:
  6558  007A24  FFFF               	dw	65535	; assembler added errata NOP
  6559  007A26  EF26  F03D         	goto	l3501
  6560  007A2A                     u3440:
  6561  007A2A  FFFF               	dw	65535	; assembler added errata NOP
  6562  007A2C  5009               	movf	___lomod@divisor^0,w,c
  6563  007A2E  5E01               	subwf	___lomod@dividend^0,f,c
  6564  007A30  500A               	movf	(___lomod@divisor+1)^0,w,c
  6565  007A32  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  6566  007A34  500B               	movf	(___lomod@divisor+2)^0,w,c
  6567  007A36  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  6568  007A38  500C               	movf	(___lomod@divisor+3)^0,w,c
  6569  007A3A  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  6570  007A3C  500D               	movf	(___lomod@divisor+4)^0,w,c
  6571  007A3E  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  6572  007A40  500E               	movf	(___lomod@divisor+5)^0,w,c
  6573  007A42  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  6574  007A44  500F               	movf	(___lomod@divisor+6)^0,w,c
  6575  007A46  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  6576  007A48  5010               	movf	(___lomod@divisor+7)^0,w,c
  6577  007A4A  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  6578  007A4C                     l3501:
  6579  007A4C  FFFF               	dw	65535	; assembler added errata NOP
  6580  007A4E  90D8               	bcf	status,0,c
  6581  007A50  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  6582  007A52  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  6583  007A54  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  6584  007A56  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  6585  007A58  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  6586  007A5A  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  6587  007A5C  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  6588  007A5E  3209               	rrcf	___lomod@divisor^0,f,c
  6589  007A60  2E11               	decfsz	___lomod@counter^0,f,c
  6590  007A62  EFFC  F03C         	goto	l3497
  6591  007A66                     l747:
  6592  007A66  FFFF               	dw	65535	; assembler added errata NOP
  6593  007A68  C001  F001         	movff	___lomod@dividend,?___lomod
  6594  007A6C  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  6595  007A70  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  6596  007A74  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  6597  007A78  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  6598  007A7C  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  6599  007A80  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  6600  007A84  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  6601  007A88  0012               	return		;funcret
  6602  007A8A  FFFF               	dw	65535	; errata NOP
  6603  007A8C                     __end_of___lomod:
  6604                           	callstack 0
  6605                           
  6606 ;; *************** function ___lodiv *****************
  6607 ;; Defined at:
  6608 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lodiv.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;  dividend        8    0[COMRAM] unsigned long long 
  6611 ;;  divisor         8    8[COMRAM] unsigned long long 
  6612 ;; Auto vars:     Size  Location     Type
  6613 ;;  quotient        8   16[COMRAM] unsigned long long 
  6614 ;;  counter         1   24[COMRAM] unsigned char 
  6615 ;; Return value:  Size  Location     Type
  6616 ;;                  8    0[COMRAM] unsigned long long 
  6617 ;; Registers used:
  6618 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6619 ;; Tracked objects:
  6620 ;;		On entry : 0/0
  6621 ;;		On exit  : 0/0
  6622 ;;		Unchanged: 0/0
  6623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6624 ;;      Params:        16       0       0       0       0       0       0
  6625 ;;      Locals:         9       0       0       0       0       0       0
  6626 ;;      Temps:          0       0       0       0       0       0       0
  6627 ;;      Totals:        25       0       0       0       0       0       0
  6628 ;;Total ram usage:       25 bytes
  6629 ;; Hardware stack levels used:    1
  6630 ;; Hardware stack levels required when called:    1
  6631 ;; This function calls:
  6632 ;;		Nothing
  6633 ;; This function is called by:
  6634 ;;		_utoa
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638                           	psect	text15
  6639  007D90                     __ptext15:
  6640                           	callstack 0
  6641  007D90                     ___lodiv:
  6642                           	callstack 0
  6643  007D90  FFFF               	dw	65535	; assembler added errata NOP
  6644  007D92  EE20  F011         	lfsr	2,___lodiv@quotient
  6645  007D96  0E07               	movlw	7
  6646  007D98                     u3381:
  6647  007D98  6ADE               	clrf	postinc2,c
  6648  007D9A  06E8               	decf	wreg,f,c
  6649  007D9C  E2FD               	bc	u3381
  6650  007D9E  5009               	movf	___lodiv@divisor^0,w,c
  6651  007DA0  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  6652  007DA2  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  6653  007DA4  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  6654  007DA6  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  6655  007DA8  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  6656  007DAA  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  6657  007DAC  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  6658  007DAE  B4D8               	btfsc	status,2,c
  6659  007DB0  EFDC  F03E         	goto	u3391
  6660  007DB4  EFDF  F03E         	goto	u3390
  6661  007DB8                     u3391:
  6662  007DB8  FFFF               	dw	65535	; assembler added errata NOP
  6663  007DBA  EF3A  F03F         	goto	l737
  6664  007DBE                     u3390:
  6665  007DBE  FFFF               	dw	65535	; assembler added errata NOP
  6666  007DC0  0E01               	movlw	1
  6667  007DC2  6E19               	movwf	___lodiv@counter^0,c
  6668  007DC4  EFEF  F03E         	goto	l3475
  6669  007DC8                     l3473:
  6670  007DC8  FFFF               	dw	65535	; assembler added errata NOP
  6671  007DCA  90D8               	bcf	status,0,c
  6672  007DCC  3609               	rlcf	___lodiv@divisor^0,f,c
  6673  007DCE  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  6674  007DD0  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  6675  007DD2  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  6676  007DD4  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  6677  007DD6  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  6678  007DD8  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  6679  007DDA  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  6680  007DDC  2A19               	incf	___lodiv@counter^0,f,c
  6681  007DDE                     l3475:
  6682  007DDE  FFFF               	dw	65535	; assembler added errata NOP
  6683  007DE0  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  6684  007DE2  EFF5  F03E         	goto	u3401
  6685  007DE6  EFF8  F03E         	goto	u3400
  6686  007DEA                     u3401:
  6687  007DEA  FFFF               	dw	65535	; assembler added errata NOP
  6688  007DEC  EFE4  F03E         	goto	l3473
  6689  007DF0                     u3400:
  6690  007DF0  FFFF               	dw	65535	; assembler added errata NOP
  6691  007DF2                     l3477:
  6692  007DF2  FFFF               	dw	65535	; assembler added errata NOP
  6693  007DF4  90D8               	bcf	status,0,c
  6694  007DF6  3611               	rlcf	___lodiv@quotient^0,f,c
  6695  007DF8  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  6696  007DFA  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  6697  007DFC  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  6698  007DFE  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  6699  007E00  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  6700  007E02  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  6701  007E04  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  6702  007E06  5009               	movf	___lodiv@divisor^0,w,c
  6703  007E08  5C01               	subwf	___lodiv@dividend^0,w,c
  6704  007E0A  500A               	movf	(___lodiv@divisor+1)^0,w,c
  6705  007E0C  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  6706  007E0E  500B               	movf	(___lodiv@divisor+2)^0,w,c
  6707  007E10  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  6708  007E12  500C               	movf	(___lodiv@divisor+3)^0,w,c
  6709  007E14  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  6710  007E16  500D               	movf	(___lodiv@divisor+4)^0,w,c
  6711  007E18  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  6712  007E1A  500E               	movf	(___lodiv@divisor+5)^0,w,c
  6713  007E1C  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  6714  007E1E  500F               	movf	(___lodiv@divisor+6)^0,w,c
  6715  007E20  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  6716  007E22  5010               	movf	(___lodiv@divisor+7)^0,w,c
  6717  007E24  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  6718  007E26  A0D8               	btfss	status,0,c
  6719  007E28  EF18  F03F         	goto	u3411
  6720  007E2C  EF1B  F03F         	goto	u3410
  6721  007E30                     u3411:
  6722  007E30  FFFF               	dw	65535	; assembler added errata NOP
  6723  007E32  EF2D  F03F         	goto	l3485
  6724  007E36                     u3410:
  6725  007E36  FFFF               	dw	65535	; assembler added errata NOP
  6726  007E38  5009               	movf	___lodiv@divisor^0,w,c
  6727  007E3A  5E01               	subwf	___lodiv@dividend^0,f,c
  6728  007E3C  500A               	movf	(___lodiv@divisor+1)^0,w,c
  6729  007E3E  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  6730  007E40  500B               	movf	(___lodiv@divisor+2)^0,w,c
  6731  007E42  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  6732  007E44  500C               	movf	(___lodiv@divisor+3)^0,w,c
  6733  007E46  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  6734  007E48  500D               	movf	(___lodiv@divisor+4)^0,w,c
  6735  007E4A  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  6736  007E4C  500E               	movf	(___lodiv@divisor+5)^0,w,c
  6737  007E4E  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  6738  007E50  500F               	movf	(___lodiv@divisor+6)^0,w,c
  6739  007E52  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  6740  007E54  5010               	movf	(___lodiv@divisor+7)^0,w,c
  6741  007E56  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  6742  007E58  8011               	bsf	___lodiv@quotient^0,0,c
  6743  007E5A                     l3485:
  6744  007E5A  FFFF               	dw	65535	; assembler added errata NOP
  6745  007E5C  90D8               	bcf	status,0,c
  6746  007E5E  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  6747  007E60  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  6748  007E62  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  6749  007E64  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  6750  007E66  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  6751  007E68  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  6752  007E6A  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  6753  007E6C  3209               	rrcf	___lodiv@divisor^0,f,c
  6754  007E6E  2E19               	decfsz	___lodiv@counter^0,f,c
  6755  007E70  EFF9  F03E         	goto	l3477
  6756  007E74                     l737:
  6757  007E74  FFFF               	dw	65535	; assembler added errata NOP
  6758  007E76  C011  F001         	movff	___lodiv@quotient,?___lodiv
  6759  007E7A  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  6760  007E7E  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  6761  007E82  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  6762  007E86  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  6763  007E8A  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  6764  007E8E  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  6765  007E92  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  6766  007E96  0012               	return		;funcret
  6767  007E98  FFFF               	dw	65535	; errata NOP
  6768  007E9A                     __end_of___lodiv:
  6769                           	callstack 0
  6770                           
  6771 ;; *************** function _strncmp *****************
  6772 ;; Defined at:
  6773 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  6774 ;; Parameters:    Size  Location     Type
  6775 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  6776 ;;		 -> STR_8(3), 
  6777 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  6778 ;;		 -> STR_105(3), STR_101(3), STR_96(3), STR_92(3), 
  6779 ;;		 -> STR_87(4), STR_83(4), STR_78(3), STR_73(3), 
  6780 ;;		 -> STR_68(4), STR_63(3), STR_58(3), STR_53(4), 
  6781 ;;		 -> STR_48(3), STR_43(3), STR_38(4), STR_33(3), 
  6782 ;;		 -> STR_29(3), STR_24(3), STR_20(3), STR_15(4), 
  6783 ;;		 -> STR_11(4), 
  6784 ;;  n               2    4[COMRAM] unsigned int 
  6785 ;; Auto vars:     Size  Location     Type
  6786 ;;  r               2    9[COMRAM] PTR const unsigned char 
  6787 ;;		 -> STR_105(3), STR_101(3), STR_96(3), STR_92(3), 
  6788 ;;		 -> STR_87(4), STR_83(4), STR_78(3), STR_73(3), 
  6789 ;;		 -> STR_68(4), STR_63(3), STR_58(3), STR_53(4), 
  6790 ;;		 -> STR_48(3), STR_43(3), STR_38(4), STR_33(3), 
  6791 ;;		 -> STR_29(3), STR_24(3), STR_20(3), STR_15(4), 
  6792 ;;		 -> STR_11(4), 
  6793 ;;  l               2    7[COMRAM] PTR const unsigned char 
  6794 ;;		 -> STR_8(3), 
  6795 ;; Return value:  Size  Location     Type
  6796 ;;                  2    0[COMRAM] int 
  6797 ;; Registers used:
  6798 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6799 ;; Tracked objects:
  6800 ;;		On entry : 0/0
  6801 ;;		On exit  : 0/0
  6802 ;;		Unchanged: 0/0
  6803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6804 ;;      Params:         6       0       0       0       0       0       0
  6805 ;;      Locals:         4       0       0       0       0       0       0
  6806 ;;      Temps:          1       0       0       0       0       0       0
  6807 ;;      Totals:        11       0       0       0       0       0       0
  6808 ;;Total ram usage:       11 bytes
  6809 ;; Hardware stack levels used:    1
  6810 ;; Hardware stack levels required when called:    1
  6811 ;; This function calls:
  6812 ;;		Nothing
  6813 ;; This function is called by:
  6814 ;;		_vfpfcnvrt
  6815 ;; This function uses a non-reentrant model
  6816 ;;
  6817                           
  6818                           	psect	text16
  6819  007C88                     __ptext16:
  6820                           	callstack 0
  6821  007C88                     _strncmp:
  6822                           	callstack 0
  6823  007C88  FFFF               	dw	65535	; assembler added errata NOP
  6824  007C8A  C001  F008         	movff	strncmp@_l,strncmp@l
  6825  007C8E  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  6826  007C92  C003  F00A         	movff	strncmp@_r,strncmp@r
  6827  007C96  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  6828  007C9A  0605               	decf	strncmp@n^0,f,c
  6829  007C9C  A0D8               	btfss	status,0,c
  6830  007C9E  0606               	decf	(strncmp@n+1)^0,f,c
  6831  007CA0  2805               	incf	strncmp@n^0,w,c
  6832  007CA2  E106               	bnz	u4281
  6833  007CA4  2806               	incf	(strncmp@n+1)^0,w,c
  6834  007CA6  A4D8               	btfss	status,2,c
  6835  007CA8  EF58  F03E         	goto	u4281
  6836  007CAC  EF5B  F03E         	goto	u4280
  6837  007CB0                     u4281:
  6838  007CB0  FFFF               	dw	65535	; assembler added errata NOP
  6839  007CB2  EF6A  F03E         	goto	l3883
  6840  007CB6                     u4280:
  6841  007CB6  FFFF               	dw	65535	; assembler added errata NOP
  6842  007CB8  0E00               	movlw	0
  6843  007CBA  6E02               	movwf	(?_strncmp+1)^0,c
  6844  007CBC  0E00               	movlw	0
  6845  007CBE  6E01               	movwf	?_strncmp^0,c
  6846  007CC0  EFC5  F03E         	goto	l1349
  6847  007CC4                     l3881:
  6848  007CC4  FFFF               	dw	65535	; assembler added errata NOP
  6849  007CC6  4A08               	infsnz	strncmp@l^0,f,c
  6850  007CC8  2A09               	incf	(strncmp@l+1)^0,f,c
  6851  007CCA  4A0A               	infsnz	strncmp@r^0,f,c
  6852  007CCC  2A0B               	incf	(strncmp@r+1)^0,f,c
  6853  007CCE  0605               	decf	strncmp@n^0,f,c
  6854  007CD0  A0D8               	btfss	status,0,c
  6855  007CD2  0606               	decf	(strncmp@n+1)^0,f,c
  6856  007CD4                     l3883:
  6857  007CD4  FFFF               	dw	65535	; assembler added errata NOP
  6858  007CD6  C008  FFF6         	movff	strncmp@l,tblptrl
  6859  007CDA  C009  FFF7         	movff	strncmp@l+1,tblptrh
  6860  007CDE                     	if	0	;tblptru may be non-zero
  6861  007CDE                     	endif
  6862  007CDE                     	if	0	;tblptru may be non-zero
  6863  007CDE                     	endif
  6864  007CDE  0008               	tblrd		*
  6865  007CE0  FFFF               	dw	65535	; errata NOP
  6866  007CE2  50F5               	movf	tablat,w,c
  6867  007CE4  0900               	iorlw	0
  6868  007CE6  B4D8               	btfsc	status,2,c
  6869  007CE8  EF78  F03E         	goto	u4291
  6870  007CEC  EF7B  F03E         	goto	u4290
  6871  007CF0                     u4291:
  6872  007CF0  FFFF               	dw	65535	; assembler added errata NOP
  6873  007CF2  EFB0  F03E         	goto	l3891
  6874  007CF6                     u4290:
  6875  007CF6  FFFF               	dw	65535	; assembler added errata NOP
  6876  007CF8  C00A  FFF6         	movff	strncmp@r,tblptrl
  6877  007CFC  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  6878  007D00                     	if	0	;tblptru may be non-zero
  6879  007D00                     	endif
  6880  007D00                     	if	0	;tblptru may be non-zero
  6881  007D00                     	endif
  6882  007D00  0008               	tblrd		*
  6883  007D02  FFFF               	dw	65535	; errata NOP
  6884  007D04  50F5               	movf	tablat,w,c
  6885  007D06  0900               	iorlw	0
  6886  007D08  B4D8               	btfsc	status,2,c
  6887  007D0A  EF89  F03E         	goto	u4301
  6888  007D0E  EF8C  F03E         	goto	u4300
  6889  007D12                     u4301:
  6890  007D12  FFFF               	dw	65535	; assembler added errata NOP
  6891  007D14  EFB0  F03E         	goto	l3891
  6892  007D18                     u4300:
  6893  007D18  FFFF               	dw	65535	; assembler added errata NOP
  6894  007D1A  5005               	movf	strncmp@n^0,w,c
  6895  007D1C  1006               	iorwf	(strncmp@n+1)^0,w,c
  6896  007D1E  B4D8               	btfsc	status,2,c
  6897  007D20  EF94  F03E         	goto	u4311
  6898  007D24  EF97  F03E         	goto	u4310
  6899  007D28                     u4311:
  6900  007D28  FFFF               	dw	65535	; assembler added errata NOP
  6901  007D2A  EFB0  F03E         	goto	l3891
  6902  007D2E                     u4310:
  6903  007D2E  FFFF               	dw	65535	; assembler added errata NOP
  6904  007D30  C008  FFF6         	movff	strncmp@l,tblptrl
  6905  007D34  C009  FFF7         	movff	strncmp@l+1,tblptrh
  6906  007D38                     	if	0	;tblptru may be non-zero
  6907  007D38                     	endif
  6908  007D38                     	if	0	;tblptru may be non-zero
  6909  007D38                     	endif
  6910  007D38  0008               	tblrd		*
  6911  007D3A  FFFF               	dw	65535	; errata NOP
  6912  007D3C  CFF5 F007          	movff	tablat,??_strncmp
  6913  007D40  C00A  FFF6         	movff	strncmp@r,tblptrl
  6914  007D44  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  6915  007D48                     	if	0	;tblptru may be non-zero
  6916  007D48                     	endif
  6917  007D48                     	if	0	;tblptru may be non-zero
  6918  007D48                     	endif
  6919  007D48  0008               	tblrd		*
  6920  007D4A  FFFF               	dw	65535	; errata NOP
  6921  007D4C  50F5               	movf	tablat,w,c
  6922  007D4E  1807               	xorwf	??_strncmp^0,w,c
  6923  007D50  B4D8               	btfsc	status,2,c
  6924  007D52  EFAD  F03E         	goto	u4321
  6925  007D56  EFB0  F03E         	goto	u4320
  6926  007D5A                     u4321:
  6927  007D5A  FFFF               	dw	65535	; assembler added errata NOP
  6928  007D5C  EF62  F03E         	goto	l3881
  6929  007D60                     u4320:
  6930  007D60                     l3891:
  6931  007D60  FFFF               	dw	65535	; assembler added errata NOP
  6932  007D62  C008  FFF6         	movff	strncmp@l,tblptrl
  6933  007D66  C009  FFF7         	movff	strncmp@l+1,tblptrh
  6934  007D6A                     	if	0	;tblptru may be non-zero
  6935  007D6A                     	endif
  6936  007D6A                     	if	0	;tblptru may be non-zero
  6937  007D6A                     	endif
  6938  007D6A  0008               	tblrd		*
  6939  007D6C  FFFF               	dw	65535	; errata NOP
  6940  007D6E  CFF5 F007          	movff	tablat,??_strncmp
  6941  007D72  C00A  FFF6         	movff	strncmp@r,tblptrl
  6942  007D76  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  6943  007D7A                     	if	0	;tblptru may be non-zero
  6944  007D7A                     	endif
  6945  007D7A                     	if	0	;tblptru may be non-zero
  6946  007D7A                     	endif
  6947  007D7A  0008               	tblrd		*
  6948  007D7C  FFFF               	dw	65535	; errata NOP
  6949  007D7E  50F5               	movf	tablat,w,c
  6950  007D80  5C07               	subwf	??_strncmp^0,w,c
  6951  007D82  6E01               	movwf	?_strncmp^0,c
  6952  007D84  6A02               	clrf	(?_strncmp+1)^0,c
  6953  007D86  A0D8               	btfss	status,0,c
  6954  007D88  0602               	decf	(?_strncmp+1)^0,f,c
  6955  007D8A                     l1349:
  6956  007D8A  FFFF               	dw	65535	; assembler added errata NOP
  6957  007D8C  0012               	return		;funcret
  6958  007D8E  FFFF               	dw	65535	; errata NOP
  6959  007D90                     __end_of_strncmp:
  6960                           	callstack 0
  6961                           
  6962 ;; *************** function _stoa *****************
  6963 ;; Defined at:
  6964 ;;		line 546 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6965 ;; Parameters:    Size  Location     Type
  6966 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  6967 ;;		 -> vsnprintf@f(6), 
  6968 ;;  s               2   11[COMRAM] PTR unsigned char 
  6969 ;;		 -> ?_snprintf(2), STR_6(49), STR_5(55), STR_4(39), 
  6970 ;;		 -> STR_3(9), STR_2(63), STR_1(47), 
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;  nuls            7   14[COMRAM] unsigned char [7]
  6973 ;;  l               2   29[COMRAM] int 
  6974 ;;  p               2   27[COMRAM] int 
  6975 ;;  cp              2   25[COMRAM] PTR unsigned char 
  6976 ;;		 -> stoa@nuls(7), ?_snprintf(2), STR_6(49), STR_5(55), 
  6977 ;;		 -> STR_4(39), STR_3(9), STR_2(63), STR_1(47), 
  6978 ;;  w               2   23[COMRAM] int 
  6979 ;;  i               2   21[COMRAM] int 
  6980 ;; Return value:  Size  Location     Type
  6981 ;;                  2    9[COMRAM] int 
  6982 ;; Registers used:
  6983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6984 ;; Tracked objects:
  6985 ;;		On entry : 0/0
  6986 ;;		On exit  : 0/0
  6987 ;;		Unchanged: 0/0
  6988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6989 ;;      Params:         4       0       0       0       0       0       0
  6990 ;;      Locals:        17       0       0       0       0       0       0
  6991 ;;      Temps:          1       0       0       0       0       0       0
  6992 ;;      Totals:        22       0       0       0       0       0       0
  6993 ;;Total ram usage:       22 bytes
  6994 ;; Hardware stack levels used:    1
  6995 ;; Hardware stack levels required when called:    3
  6996 ;; This function calls:
  6997 ;;		_fputc
  6998 ;;		_strlen
  6999 ;; This function is called by:
  7000 ;;		_vfpfcnvrt
  7001 ;; This function uses a non-reentrant model
  7002 ;;
  7003                           
  7004                           	psect	text17
  7005  00357C                     __ptext17:
  7006                           	callstack 0
  7007  00357C                     _stoa:
  7008                           	callstack 0
  7009  00357C  FFFF               	dw	65535	; assembler added errata NOP
  7010  00357E                     
  7011                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 546: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 547: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 548:  
      +                             char *cp, nuls[] = "(null)";
  7012  00357E  EE20  F0C4         	lfsr	2,stoa@F1152
  7013  003582  EE10  F00F         	lfsr	1,stoa@nuls
  7014  003586  0E06               	movlw	6
  7015  003588                     u3871:
  7016  003588  CFDB FFE3          	movff	plusw2,plusw1
  7017  00358C  06E8               	decf	wreg,f,c
  7018  00358E  E2FC               	bc	u3871
  7019  003590                     
  7020                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 549:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 552:     c
      +                          p = s;
  7021  003590  C00C  F01A         	movff	stoa@s,stoa@cp
  7022  003594  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  7023  003598                     
  7024                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 553:     if (!cp)
      +                           {
  7025  003598  501A               	movf	stoa@cp^0,w,c
  7026  00359A  101B               	iorwf	(stoa@cp+1)^0,w,c
  7027  00359C  A4D8               	btfss	status,2,c
  7028  00359E  EFD3  F01A         	goto	u3881
  7029  0035A2  EFD6  F01A         	goto	u3880
  7030  0035A6                     u3881:
  7031  0035A6  FFFF               	dw	65535	; assembler added errata NOP
  7032  0035A8  EFDB  F01A         	goto	l3697
  7033  0035AC                     u3880:
  7034  0035AC  FFFF               	dw	65535	; assembler added errata NOP
  7035  0035AE                     
  7036                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 554:         cp =
      +                           nuls;
  7037  0035AE  0E0F               	movlw	low stoa@nuls
  7038  0035B0  6E1A               	movwf	stoa@cp^0,c
  7039  0035B2  0E00               	movlw	high stoa@nuls
  7040  0035B4  6E1B               	movwf	(stoa@cp+1)^0,c
  7041  0035B6                     l3697:
  7042  0035B6  FFFF               	dw	65535	; assembler added errata NOP
  7043                           
  7044                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 558:     l = strl
      +                          en(cp);
  7045  0035B8  C01A  F001         	movff	stoa@cp,strlen@s
  7046  0035BC  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  7047  0035C0  ECC6  F038         	call	_strlen	;wreg free
  7048  0035C4  C001  F01E         	movff	?_strlen,stoa@l
  7049  0035C8  C002  F01F         	movff	?_strlen+1,stoa@l+1
  7050  0035CC                     
  7051                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 559:     p = prec
      +                          ;
  7052  0035CC  C088  F01C         	movff	_prec,stoa@p
  7053  0035D0  C089  F01D         	movff	_prec+1,stoa@p+1
  7054  0035D4                     
  7055                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 560:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  7056  0035D4  BE1D               	btfsc	(stoa@p+1)^0,7,c
  7057  0035D6  EFEF  F01A         	goto	u3891
  7058  0035DA  EFF2  F01A         	goto	u3890
  7059  0035DE                     u3891:
  7060  0035DE  FFFF               	dw	65535	; assembler added errata NOP
  7061  0035E0  EF0B  F01B         	goto	l1109
  7062  0035E4                     u3890:
  7063  0035E4  FFFF               	dw	65535	; assembler added errata NOP
  7064  0035E6  501E               	movf	stoa@l^0,w,c
  7065  0035E8  5C1C               	subwf	stoa@p^0,w,c
  7066  0035EA  501D               	movf	(stoa@p+1)^0,w,c
  7067  0035EC  0A80               	xorlw	128
  7068  0035EE  6E0E               	movwf	??_stoa^0,c
  7069  0035F0  501F               	movf	(stoa@l+1)^0,w,c
  7070  0035F2  0A80               	xorlw	128
  7071  0035F4  580E               	subwfb	??_stoa^0,w,c
  7072  0035F6  A0D8               	btfss	status,0,c
  7073  0035F8  EF00  F01B         	goto	u3901
  7074  0035FC  EF03  F01B         	goto	u3900
  7075  003600                     u3901:
  7076  003600  FFFF               	dw	65535	; assembler added errata NOP
  7077  003602  EF06  F01B         	goto	l1107
  7078  003606                     u3900:
  7079  003606  FFFF               	dw	65535	; assembler added errata NOP
  7080  003608  EF0B  F01B         	goto	l1109
  7081  00360C                     l1107:
  7082  00360C  FFFF               	dw	65535	; assembler added errata NOP
  7083  00360E  C01C  F01E         	movff	stoa@p,stoa@l
  7084  003612  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  7085  003616                     l1109:
  7086  003616  FFFF               	dw	65535	; assembler added errata NOP
  7087                           
  7088                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 561:     p = l;
  7089  003618  C01E  F01C         	movff	stoa@l,stoa@p
  7090  00361C  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  7091                           
  7092                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 562:     w = widt
      +                          h;
  7093  003620  C086  F018         	movff	_width,stoa@w
  7094  003624  C087  F019         	movff	_width+1,stoa@w+1
  7095                           
  7096                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 565:     if (!(fl
      +                          ags & (1 << 0))) {
  7097  003628  0100               	movlb	0	; () banked
  7098  00362A  B18A               	btfsc	_flags& (0+255),0,b
  7099  00362C  EF1A  F01B         	goto	u3911
  7100  003630  EF1D  F01B         	goto	u3910
  7101  003634                     u3911:
  7102  003634  FFFF               	dw	65535	; assembler added errata NOP
  7103  003636  EF3E  F01B         	goto	l3713
  7104  00363A                     u3910:
  7105  00363A  FFFF               	dw	65535	; assembler added errata NOP
  7106  00363C  EF2D  F01B         	goto	l3711
  7107  003640                     l3707:
  7108  003640  FFFF               	dw	65535	; assembler added errata NOP
  7109                           
  7110                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 567:             
      +                          fputc(' ', fp);
  7111  003642  0E00               	movlw	0
  7112  003644  6E02               	movwf	(fputc@c+1)^0,c
  7113  003646  0E20               	movlw	32
  7114  003648  6E01               	movwf	fputc@c^0,c
  7115  00364A  C00A  F003         	movff	stoa@fp,fputc@fp
  7116  00364E  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7117  003652  ECED  F03B         	call	_fputc	;wreg free
  7118  003656                     
  7119                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 568:             
      +                          ++l;
  7120  003656  4A1E               	infsnz	stoa@l^0,f,c
  7121  003658  2A1F               	incf	(stoa@l+1)^0,f,c
  7122  00365A                     l3711:
  7123  00365A  FFFF               	dw	65535	; assembler added errata NOP
  7124                           
  7125                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 566:         whil
      +                          e (l < w) {
  7126  00365C  5018               	movf	stoa@w^0,w,c
  7127  00365E  5C1E               	subwf	stoa@l^0,w,c
  7128  003660  501F               	movf	(stoa@l+1)^0,w,c
  7129  003662  0A80               	xorlw	128
  7130  003664  6E0E               	movwf	??_stoa^0,c
  7131  003666  5019               	movf	(stoa@w+1)^0,w,c
  7132  003668  0A80               	xorlw	128
  7133  00366A  580E               	subwfb	??_stoa^0,w,c
  7134  00366C  A0D8               	btfss	status,0,c
  7135  00366E  EF3B  F01B         	goto	u3921
  7136  003672  EF3E  F01B         	goto	u3920
  7137  003676                     u3921:
  7138  003676  FFFF               	dw	65535	; assembler added errata NOP
  7139  003678  EF20  F01B         	goto	l3707
  7140  00367C                     u3920:
  7141  00367C                     l3713:
  7142  00367C  FFFF               	dw	65535	; assembler added errata NOP
  7143                           
  7144                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 573:     i = 0;
  7145  00367E  0E00               	movlw	0
  7146  003680  6E17               	movwf	(stoa@i+1)^0,c
  7147  003682  0E00               	movlw	0
  7148  003684  6E16               	movwf	stoa@i^0,c
  7149                           
  7150                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  7151  003686  EF65  F01B         	goto	l3721
  7152  00368A                     l3715:
  7153  00368A  FFFF               	dw	65535	; assembler added errata NOP
  7154                           
  7155                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 575:         fput
      +                          c(*cp, fp);
  7156  00368C  C01A  FFF6         	movff	stoa@cp,tblptrl
  7157  003690  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  7158  003694  6AF8               	clrf	tblptru,c
  7159  003696  0E05               	movlw	(high __ramtop+-1)
  7160  003698  64F7               	cpfsgt	tblptrh,c
  7161  00369A  D004               	bra	u3937
  7162  00369C  0008               	tblrd		*
  7163  00369E  FFFF               	dw	65535	; errata NOP
  7164  0036A0  50F5               	movf	tablat,w,c
  7165  0036A2  D005               	bra	u3930
  7166  0036A4                     u3937:
  7167  0036A4  CFF6 FFE1          	movff	tblptrl,fsr1l
  7168  0036A8  CFF7 FFE2          	movff	tblptrh,fsr1h
  7169  0036AC  50E7               	movf	indf1,w,c
  7170  0036AE                     u3930:
  7171  0036AE  6E0E               	movwf	??_stoa^0,c
  7172  0036B0  500E               	movf	??_stoa^0,w,c
  7173  0036B2  6E01               	movwf	fputc@c^0,c
  7174  0036B4  6A02               	clrf	(fputc@c+1)^0,c
  7175  0036B6  C00A  F003         	movff	stoa@fp,fputc@fp
  7176  0036BA  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7177  0036BE  ECED  F03B         	call	_fputc	;wreg free
  7178  0036C2                     
  7179                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 576:         ++cp
      +                          ;
  7180  0036C2  4A1A               	infsnz	stoa@cp^0,f,c
  7181  0036C4  2A1B               	incf	(stoa@cp+1)^0,f,c
  7182  0036C6                     
  7183                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 577:         ++i;
  7184  0036C6  4A16               	infsnz	stoa@i^0,f,c
  7185  0036C8  2A17               	incf	(stoa@i+1)^0,f,c
  7186  0036CA                     l3721:
  7187  0036CA  FFFF               	dw	65535	; assembler added errata NOP
  7188                           
  7189                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  7190  0036CC  501C               	movf	stoa@p^0,w,c
  7191  0036CE  5C16               	subwf	stoa@i^0,w,c
  7192  0036D0  5017               	movf	(stoa@i+1)^0,w,c
  7193  0036D2  0A80               	xorlw	128
  7194  0036D4  6E0E               	movwf	??_stoa^0,c
  7195  0036D6  501D               	movf	(stoa@p+1)^0,w,c
  7196  0036D8  0A80               	xorlw	128
  7197  0036DA  580E               	subwfb	??_stoa^0,w,c
  7198  0036DC  A0D8               	btfss	status,0,c
  7199  0036DE  EF73  F01B         	goto	u3941
  7200  0036E2  EF76  F01B         	goto	u3940
  7201  0036E6                     u3941:
  7202  0036E6  FFFF               	dw	65535	; assembler added errata NOP
  7203  0036E8  EF45  F01B         	goto	l3715
  7204  0036EC                     u3940:
  7205  0036EC  FFFF               	dw	65535	; assembler added errata NOP
  7206  0036EE                     
  7207                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 581:     if (flag
      +                          s & (1 << 0)) {
  7208  0036EE  0100               	movlb	0	; () banked
  7209  0036F0  A18A               	btfss	_flags& (0+255),0,b
  7210  0036F2  EF7D  F01B         	goto	u3951
  7211  0036F6  EF80  F01B         	goto	u3950
  7212  0036FA                     u3951:
  7213  0036FA  FFFF               	dw	65535	; assembler added errata NOP
  7214  0036FC  EFA1  F01B         	goto	l1119
  7215  003700                     u3950:
  7216  003700  FFFF               	dw	65535	; assembler added errata NOP
  7217  003702  EF90  F01B         	goto	l3729
  7218  003706                     l3725:
  7219  003706  FFFF               	dw	65535	; assembler added errata NOP
  7220                           
  7221                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 583:             
      +                          fputc(' ', fp);
  7222  003708  0E00               	movlw	0
  7223  00370A  6E02               	movwf	(fputc@c+1)^0,c
  7224  00370C  0E20               	movlw	32
  7225  00370E  6E01               	movwf	fputc@c^0,c
  7226  003710  C00A  F003         	movff	stoa@fp,fputc@fp
  7227  003714  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7228  003718  ECED  F03B         	call	_fputc	;wreg free
  7229  00371C                     
  7230                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 584:             
      +                          ++l;
  7231  00371C  4A1E               	infsnz	stoa@l^0,f,c
  7232  00371E  2A1F               	incf	(stoa@l+1)^0,f,c
  7233  003720                     l3729:
  7234  003720  FFFF               	dw	65535	; assembler added errata NOP
  7235                           
  7236                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 582:         whil
      +                          e (l < w) {
  7237  003722  5018               	movf	stoa@w^0,w,c
  7238  003724  5C1E               	subwf	stoa@l^0,w,c
  7239  003726  501F               	movf	(stoa@l+1)^0,w,c
  7240  003728  0A80               	xorlw	128
  7241  00372A  6E0E               	movwf	??_stoa^0,c
  7242  00372C  5019               	movf	(stoa@w+1)^0,w,c
  7243  00372E  0A80               	xorlw	128
  7244  003730  580E               	subwfb	??_stoa^0,w,c
  7245  003732  A0D8               	btfss	status,0,c
  7246  003734  EF9E  F01B         	goto	u3961
  7247  003738  EFA1  F01B         	goto	u3960
  7248  00373C                     u3961:
  7249  00373C  FFFF               	dw	65535	; assembler added errata NOP
  7250  00373E  EF83  F01B         	goto	l3725
  7251  003742                     u3960:
  7252  003742                     l1119:
  7253  003742  FFFF               	dw	65535	; assembler added errata NOP
  7254                           
  7255                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 588:     return l
      +                          ;
  7256  003744  C01E  F00A         	movff	stoa@l,?_stoa
  7257  003748  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  7258  00374C  0012               	return		;funcret
  7259  00374E  FFFF               	dw	65535	; errata NOP
  7260  003750                     __end_of_stoa:
  7261                           	callstack 0
  7262                           
  7263 ;; *************** function _otoa *****************
  7264 ;; Defined at:
  7265 ;;		line 507 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7266 ;; Parameters:    Size  Location     Type
  7267 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7268 ;;		 -> vsnprintf@f(6), 
  7269 ;;  d               8   29[COMRAM] unsigned long long 
  7270 ;; Auto vars:     Size  Location     Type
  7271 ;;  n               8   51[COMRAM] unsigned long long 
  7272 ;;  i               2   59[COMRAM] int 
  7273 ;;  w               2   49[COMRAM] int 
  7274 ;;  t               2   47[COMRAM] int 
  7275 ;;  p               2   45[COMRAM] int 
  7276 ;; Return value:  Size  Location     Type
  7277 ;;                  2   27[COMRAM] int 
  7278 ;; Registers used:
  7279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 0/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7285 ;;      Params:        10       0       0       0       0       0       0
  7286 ;;      Locals:        16       0       0       0       0       0       0
  7287 ;;      Temps:          8       0       0       0       0       0       0
  7288 ;;      Totals:        34       0       0       0       0       0       0
  7289 ;;Total ram usage:       34 bytes
  7290 ;; Hardware stack levels used:    1
  7291 ;; Hardware stack levels required when called:    5
  7292 ;; This function calls:
  7293 ;;		_pad
  7294 ;; This function is called by:
  7295 ;;		_vfpfcnvrt
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           	psect	text18
  7300  003356                     __ptext18:
  7301                           	callstack 0
  7302  003356                     _otoa:
  7303                           	callstack 0
  7304  003356  FFFF               	dw	65535	; assembler added errata NOP
  7305  003358                     
  7306                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 507: static int o
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 508: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 509:     int i, p, t, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\com
      +                          mon\doprnt.c: 510:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\so
      +                          urces\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  7307  003358  0100               	movlb	0	; () banked
  7308  00335A  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7309  00335C  EFB2  F019         	goto	u3771
  7310  003360  EFB5  F019         	goto	u3770
  7311  003364                     u3771:
  7312  003364  FFFF               	dw	65535	; assembler added errata NOP
  7313  003366  EFB7  F019         	goto	l3645
  7314  00336A                     u3770:
  7315  00336A  FFFF               	dw	65535	; assembler added errata NOP
  7316  00336C                     
  7317                           ; BSR set to: 0
  7318                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 514:         flag
      +                          s &= ~(1 << 1);
  7319  00336C  938A               	bcf	_flags& (0+255),1,b
  7320  00336E                     l3645:
  7321  00336E  FFFF               	dw	65535	; assembler added errata NOP
  7322                           
  7323                           ; BSR set to: 0
  7324                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 516:     p = (0 <
      +                           prec) ? prec : 1;
  7325  003370  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7326  003372  EFC6  F019         	goto	u3780
  7327  003376  5189               	movf	(_prec+1)& (0+255),w,b
  7328  003378  E106               	bnz	u3781
  7329  00337A  0588               	decf	_prec& (0+255),w,b
  7330  00337C  B0D8               	btfsc	status,0,c
  7331  00337E  EFC3  F019         	goto	u3781
  7332  003382  EFC6  F019         	goto	u3780
  7333  003386                     u3781:
  7334  003386  FFFF               	dw	65535	; assembler added errata NOP
  7335  003388  EFCD  F019         	goto	l1089
  7336  00338C                     u3780:
  7337  00338C  FFFF               	dw	65535	; assembler added errata NOP
  7338  00338E                     
  7339                           ; BSR set to: 0
  7340  00338E  0E00               	movlw	0
  7341  003390  6E2F               	movwf	(otoa@p+1)^0,c
  7342  003392  0E01               	movlw	1
  7343  003394  6E2E               	movwf	otoa@p^0,c
  7344  003396  EFD2  F019         	goto	l1091
  7345  00339A                     l1089:
  7346  00339A  FFFF               	dw	65535	; assembler added errata NOP
  7347                           
  7348                           ; BSR set to: 0
  7349  00339C  C088  F02E         	movff	_prec,otoa@p
  7350  0033A0  C089  F02F         	movff	_prec+1,otoa@p+1
  7351  0033A4                     l1091:
  7352  0033A4  FFFF               	dw	65535	; assembler added errata NOP
  7353                           
  7354                           ; BSR set to: 0
  7355                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 517:     w = widt
      +                          h;
  7356  0033A6  C086  F032         	movff	_width,otoa@w
  7357  0033AA  C087  F033         	movff	_width+1,otoa@w+1
  7358                           
  7359                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 520:     n = d;
  7360  0033AE  C01E  F034         	movff	otoa@d,otoa@n
  7361  0033B2  C01F  F035         	movff	otoa@d+1,otoa@n+1
  7362  0033B6  C020  F036         	movff	otoa@d+2,otoa@n+2
  7363  0033BA  C021  F037         	movff	otoa@d+3,otoa@n+3
  7364  0033BE  C022  F038         	movff	otoa@d+4,otoa@n+4
  7365  0033C2  C023  F039         	movff	otoa@d+5,otoa@n+5
  7366  0033C6  C024  F03A         	movff	otoa@d+6,otoa@n+6
  7367  0033CA  C025  F03B         	movff	otoa@d+7,otoa@n+7
  7368  0033CE                     
  7369                           ; BSR set to: 0
  7370                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 521:     i = size
      +                          of(dbuf) - 1;
  7371  0033CE  0E00               	movlw	0
  7372  0033D0  6E3D               	movwf	(otoa@i+1)^0,c
  7373  0033D2  0E1F               	movlw	31
  7374  0033D4  6E3C               	movwf	otoa@i^0,c
  7375  0033D6                     
  7376                           ; BSR set to: 0
  7377                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 522:     dbuf[i] 
      +                          = '\0';
  7378  0033D6  0E00               	movlw	0
  7379  0033D8  6FAD               	movwf	(_dbuf+31)& (0+255),b
  7380  0033DA                     
  7381                           ; BSR set to: 0
  7382                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 523:     t = 0;
  7383  0033DA  0E00               	movlw	0
  7384  0033DC  6E31               	movwf	(otoa@t+1)^0,c
  7385  0033DE  0E00               	movlw	0
  7386  0033E0  6E30               	movwf	otoa@t^0,c
  7387                           
  7388                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 524:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7389  0033E2  EF3B  F01A         	goto	l3667
  7390  0033E6                     l3655:
  7391  0033E6  FFFF               	dw	65535	; assembler added errata NOP
  7392                           
  7393                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 525:         --i;
  7394  0033E8  063C               	decf	otoa@i^0,f,c
  7395  0033EA  A0D8               	btfss	status,0,c
  7396  0033EC  063D               	decf	(otoa@i+1)^0,f,c
  7397  0033EE                     
  7398                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 526:         t = 
      +                          n & 07;
  7399  0033EE  0E07               	movlw	7
  7400  0033F0  1434               	andwf	otoa@n^0,w,c
  7401  0033F2  6E30               	movwf	otoa@t^0,c
  7402  0033F4  6A31               	clrf	(otoa@t+1)^0,c
  7403  0033F6                     
  7404                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 527:         dbuf
      +                          [i] = '0' + t;
  7405  0033F6  0E8E               	movlw	low _dbuf
  7406  0033F8  243C               	addwf	otoa@i^0,w,c
  7407  0033FA  6ED9               	movwf	fsr2l,c
  7408  0033FC  0E00               	movlw	high _dbuf
  7409  0033FE  203D               	addwfc	(otoa@i+1)^0,w,c
  7410  003400  6EDA               	movwf	fsr2h,c
  7411  003402  5030               	movf	otoa@t^0,w,c
  7412  003404  0F30               	addlw	48
  7413  003406  6EDF               	movwf	indf2,c
  7414  003408                     
  7415                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 528:         --p;
  7416  003408  062E               	decf	otoa@p^0,f,c
  7417  00340A  A0D8               	btfss	status,0,c
  7418  00340C  062F               	decf	(otoa@p+1)^0,f,c
  7419  00340E                     
  7420                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 529:         --w;
  7421  00340E  0632               	decf	otoa@w^0,f,c
  7422  003410  A0D8               	btfss	status,0,c
  7423  003412  0633               	decf	(otoa@w+1)^0,f,c
  7424  003414                     
  7425                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 530:         n = 
      +                          n >> 3;
  7426  003414  C034  F026         	movff	otoa@n,??_otoa
  7427  003418  C035  F027         	movff	otoa@n+1,??_otoa+1
  7428  00341C  C036  F028         	movff	otoa@n+2,??_otoa+2
  7429  003420  C037  F029         	movff	otoa@n+3,??_otoa+3
  7430  003424  C038  F02A         	movff	otoa@n+4,??_otoa+4
  7431  003428  C039  F02B         	movff	otoa@n+5,??_otoa+5
  7432  00342C  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  7433  003430  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  7434  003434  0E04               	movlw	4
  7435  003436  EF27  F01A         	goto	u3790
  7436  00343A                     u3795:
  7437  00343A  FFFF               	dw	65535	; assembler added errata NOP
  7438  00343C  90D8               	bcf	status,0,c
  7439  00343E  322D               	rrcf	(??_otoa+7)^0,f,c
  7440  003440  322C               	rrcf	(??_otoa+6)^0,f,c
  7441  003442  322B               	rrcf	(??_otoa+5)^0,f,c
  7442  003444  322A               	rrcf	(??_otoa+4)^0,f,c
  7443  003446  3229               	rrcf	(??_otoa+3)^0,f,c
  7444  003448  3228               	rrcf	(??_otoa+2)^0,f,c
  7445  00344A  3227               	rrcf	(??_otoa+1)^0,f,c
  7446  00344C  3226               	rrcf	??_otoa^0,f,c
  7447  00344E                     u3790:
  7448  00344E  FFFF               	dw	65535	; assembler added errata NOP
  7449  003450  2EE8               	decfsz	wreg,f,c
  7450  003452  EF1D  F01A         	goto	u3795
  7451  003456  C026  F034         	movff	??_otoa,otoa@n
  7452  00345A  C027  F035         	movff	??_otoa+1,otoa@n+1
  7453  00345E  C028  F036         	movff	??_otoa+2,otoa@n+2
  7454  003462  C029  F037         	movff	??_otoa+3,otoa@n+3
  7455  003466  C02A  F038         	movff	??_otoa+4,otoa@n+4
  7456  00346A  C02B  F039         	movff	??_otoa+5,otoa@n+5
  7457  00346E  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  7458  003472  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  7459  003476                     l3667:
  7460  003476  FFFF               	dw	65535	; assembler added errata NOP
  7461                           
  7462                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 524:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7463  003478  BE3D               	btfsc	(otoa@i+1)^0,7,c
  7464  00347A  EF47  F01A         	goto	u3801
  7465  00347E  503D               	movf	(otoa@i+1)^0,w,c
  7466  003480  E109               	bnz	u3800
  7467  003482  043C               	decf	otoa@i^0,w,c
  7468  003484  A0D8               	btfss	status,0,c
  7469  003486  EF47  F01A         	goto	u3801
  7470  00348A  EF4A  F01A         	goto	u3800
  7471  00348E                     u3801:
  7472  00348E  FFFF               	dw	65535	; assembler added errata NOP
  7473  003490  EF83  F01A         	goto	l1098
  7474  003494                     u3800:
  7475  003494  FFFF               	dw	65535	; assembler added errata NOP
  7476  003496  5034               	movf	otoa@n^0,w,c
  7477  003498  1035               	iorwf	(otoa@n+1)^0,w,c
  7478  00349A  1036               	iorwf	(otoa@n+2)^0,w,c
  7479  00349C  1037               	iorwf	(otoa@n+3)^0,w,c
  7480  00349E  1038               	iorwf	(otoa@n+4)^0,w,c
  7481  0034A0  1039               	iorwf	(otoa@n+5)^0,w,c
  7482  0034A2  103A               	iorwf	(otoa@n+6)^0,w,c
  7483  0034A4  103B               	iorwf	(otoa@n+7)^0,w,c
  7484  0034A6  A4D8               	btfss	status,2,c
  7485  0034A8  EF58  F01A         	goto	u3811
  7486  0034AC  EF5B  F01A         	goto	u3810
  7487  0034B0                     u3811:
  7488  0034B0  FFFF               	dw	65535	; assembler added errata NOP
  7489  0034B2  EFF3  F019         	goto	l3655
  7490  0034B6                     u3810:
  7491  0034B6  FFFF               	dw	65535	; assembler added errata NOP
  7492  0034B8  BE2F               	btfsc	(otoa@p+1)^0,7,c
  7493  0034BA  EF6A  F01A         	goto	u3820
  7494  0034BE  502F               	movf	(otoa@p+1)^0,w,c
  7495  0034C0  E106               	bnz	u3821
  7496  0034C2  042E               	decf	otoa@p^0,w,c
  7497  0034C4  B0D8               	btfsc	status,0,c
  7498  0034C6  EF67  F01A         	goto	u3821
  7499  0034CA  EF6A  F01A         	goto	u3820
  7500  0034CE                     u3821:
  7501  0034CE  FFFF               	dw	65535	; assembler added errata NOP
  7502  0034D0  EFF3  F019         	goto	l3655
  7503  0034D4                     u3820:
  7504  0034D4  FFFF               	dw	65535	; assembler added errata NOP
  7505  0034D6  BE33               	btfsc	(otoa@w+1)^0,7,c
  7506  0034D8  EF76  F01A         	goto	u3831
  7507  0034DC  5033               	movf	(otoa@w+1)^0,w,c
  7508  0034DE  E109               	bnz	u3830
  7509  0034E0  0432               	decf	otoa@w^0,w,c
  7510  0034E2  A0D8               	btfss	status,0,c
  7511  0034E4  EF76  F01A         	goto	u3831
  7512  0034E8  EF79  F01A         	goto	u3830
  7513  0034EC                     u3831:
  7514  0034EC  FFFF               	dw	65535	; assembler added errata NOP
  7515  0034EE  EF83  F01A         	goto	l1098
  7516  0034F2                     u3830:
  7517  0034F2  FFFF               	dw	65535	; assembler added errata NOP
  7518  0034F4  0100               	movlb	0	; () banked
  7519  0034F6  B38A               	btfsc	_flags& (0+255),1,b
  7520  0034F8  EF80  F01A         	goto	u3841
  7521  0034FC  EF83  F01A         	goto	u3840
  7522  003500                     u3841:
  7523  003500  FFFF               	dw	65535	; assembler added errata NOP
  7524  003502  EFF3  F019         	goto	l3655
  7525  003506                     u3840:
  7526  003506                     l1098:
  7527  003506  FFFF               	dw	65535	; assembler added errata NOP
  7528                           
  7529                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 534:     if ((fla
      +                          gs & (1 << 4)) && t) {
  7530  003508  0100               	movlb	0	; () banked
  7531  00350A  A98A               	btfss	_flags& (0+255),4,b
  7532  00350C  EF8A  F01A         	goto	u3851
  7533  003510  EF8D  F01A         	goto	u3850
  7534  003514                     u3851:
  7535  003514  FFFF               	dw	65535	; assembler added errata NOP
  7536  003516  EFA7  F01A         	goto	l3685
  7537  00351A                     u3850:
  7538  00351A  FFFF               	dw	65535	; assembler added errata NOP
  7539  00351C                     
  7540                           ; BSR set to: 0
  7541  00351C  5030               	movf	otoa@t^0,w,c
  7542  00351E  1031               	iorwf	(otoa@t+1)^0,w,c
  7543  003520  B4D8               	btfsc	status,2,c
  7544  003522  EF95  F01A         	goto	u3861
  7545  003526  EF98  F01A         	goto	u3860
  7546  00352A                     u3861:
  7547  00352A  FFFF               	dw	65535	; assembler added errata NOP
  7548  00352C  EFA7  F01A         	goto	l3685
  7549  003530                     u3860:
  7550  003530  FFFF               	dw	65535	; assembler added errata NOP
  7551  003532                     
  7552                           ; BSR set to: 0
  7553                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 535:         --i;
  7554  003532  063C               	decf	otoa@i^0,f,c
  7555  003534  A0D8               	btfss	status,0,c
  7556  003536  063D               	decf	(otoa@i+1)^0,f,c
  7557  003538                     
  7558                           ; BSR set to: 0
  7559                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 536:         dbuf
      +                          [i] = '0';
  7560  003538  0E8E               	movlw	low _dbuf
  7561  00353A  243C               	addwf	otoa@i^0,w,c
  7562  00353C  6ED9               	movwf	fsr2l,c
  7563  00353E  0E00               	movlw	high _dbuf
  7564  003540  203D               	addwfc	(otoa@i+1)^0,w,c
  7565  003542  6EDA               	movwf	fsr2h,c
  7566  003544  0E30               	movlw	48
  7567  003546  6EDF               	movwf	indf2,c
  7568  003548                     
  7569                           ; BSR set to: 0
  7570                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 537:         --w;
  7571  003548  0632               	decf	otoa@w^0,f,c
  7572  00354A  A0D8               	btfss	status,0,c
  7573  00354C  0633               	decf	(otoa@w+1)^0,f,c
  7574  00354E                     l3685:
  7575  00354E  FFFF               	dw	65535	; assembler added errata NOP
  7576                           
  7577                           ; BSR set to: 0
  7578                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 541:     return p
      +                          ad(fp, &dbuf[i], w);
  7579  003550  C01C  F011         	movff	otoa@fp,pad@fp
  7580  003554  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  7581  003558  0E8E               	movlw	low _dbuf
  7582  00355A  243C               	addwf	otoa@i^0,w,c
  7583  00355C  6E13               	movwf	pad@buf^0,c
  7584  00355E  0E00               	movlw	high _dbuf
  7585  003560  203D               	addwfc	(otoa@i+1)^0,w,c
  7586  003562  6E14               	movwf	(pad@buf+1)^0,c
  7587  003564  C032  F015         	movff	otoa@w,pad@p
  7588  003568  C033  F016         	movff	otoa@w+1,pad@p+1
  7589  00356C  EC5E  F03C         	call	_pad	;wreg free
  7590  003570  C011  F01C         	movff	?_pad,?_otoa
  7591  003574  C012  F01D         	movff	?_pad+1,?_otoa+1
  7592  003578  0012               	return		;funcret
  7593  00357A  FFFF               	dw	65535	; errata NOP
  7594  00357C                     __end_of_otoa:
  7595                           	callstack 0
  7596                           
  7597 ;; *************** function _dtoa *****************
  7598 ;; Defined at:
  7599 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7600 ;; Parameters:    Size  Location     Type
  7601 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7602 ;;		 -> vsnprintf@f(6), 
  7603 ;;  d               8   29[COMRAM] long long 
  7604 ;; Auto vars:     Size  Location     Type
  7605 ;;  n               8   53[COMRAM] long long 
  7606 ;;  i               2   61[COMRAM] int 
  7607 ;;  s               2   51[COMRAM] int 
  7608 ;;  w               2   49[COMRAM] int 
  7609 ;;  p               2   47[COMRAM] int 
  7610 ;; Return value:  Size  Location     Type
  7611 ;;                  2   27[COMRAM] int 
  7612 ;; Registers used:
  7613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7614 ;; Tracked objects:
  7615 ;;		On entry : 0/0
  7616 ;;		On exit  : 0/0
  7617 ;;		Unchanged: 0/0
  7618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7619 ;;      Params:        10       0       0       0       0       0       0
  7620 ;;      Locals:        18       0       0       0       0       0       0
  7621 ;;      Temps:          8       0       0       0       0       0       0
  7622 ;;      Totals:        36       0       0       0       0       0       0
  7623 ;;Total ram usage:       36 bytes
  7624 ;; Hardware stack levels used:    1
  7625 ;; Hardware stack levels required when called:    5
  7626 ;; This function calls:
  7627 ;;		___aodiv
  7628 ;;		___aomod
  7629 ;;		_abs
  7630 ;;		_pad
  7631 ;; This function is called by:
  7632 ;;		_vfpfcnvrt
  7633 ;; This function uses a non-reentrant model
  7634 ;;
  7635                           
  7636                           	psect	text19
  7637  002AC6                     __ptext19:
  7638                           	callstack 0
  7639  002AC6                     _dtoa:
  7640                           	callstack 0
  7641  002AC6  FFFF               	dw	65535	; assembler added errata NOP
  7642  002AC8                     
  7643                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  7644  002AC8  C01E  F036         	movff	dtoa@d,dtoa@n
  7645  002ACC  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  7646  002AD0  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  7647  002AD4  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  7648  002AD8  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  7649  002ADC  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  7650  002AE0  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  7651  002AE4  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  7652  002AE8                     
  7653                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  7654  002AE8  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  7655  002AEA  EF79  F015         	goto	u3621
  7656  002AEE  EF7D  F015         	goto	u3620
  7657  002AF2                     u3621:
  7658  002AF2  FFFF               	dw	65535	; assembler added errata NOP
  7659  002AF4  0E01               	movlw	1
  7660  002AF6  EF7F  F015         	goto	u3630
  7661  002AFA                     u3620:
  7662  002AFA  FFFF               	dw	65535	; assembler added errata NOP
  7663  002AFC  0E00               	movlw	0
  7664  002AFE                     u3630:
  7665  002AFE  FFFF               	dw	65535	; assembler added errata NOP
  7666  002B00  6E34               	movwf	dtoa@s^0,c
  7667  002B02  6A35               	clrf	(dtoa@s+1)^0,c
  7668                           
  7669                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  7670  002B04  5034               	movf	dtoa@s^0,w,c
  7671  002B06  1035               	iorwf	(dtoa@s+1)^0,w,c
  7672  002B08  B4D8               	btfsc	status,2,c
  7673  002B0A  EF89  F015         	goto	u3641
  7674  002B0E  EF8C  F015         	goto	u3640
  7675  002B12                     u3641:
  7676  002B12  FFFF               	dw	65535	; assembler added errata NOP
  7677  002B14  EF9D  F015         	goto	l3585
  7678  002B18                     u3640:
  7679  002B18  FFFF               	dw	65535	; assembler added errata NOP
  7680  002B1A                     
  7681                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  7682  002B1A  1E3D               	comf	(dtoa@n+7)^0,f,c
  7683  002B1C  1E3C               	comf	(dtoa@n+6)^0,f,c
  7684  002B1E  1E3B               	comf	(dtoa@n+5)^0,f,c
  7685  002B20  1E3A               	comf	(dtoa@n+4)^0,f,c
  7686  002B22  1E39               	comf	(dtoa@n+3)^0,f,c
  7687  002B24  1E38               	comf	(dtoa@n+2)^0,f,c
  7688  002B26  1E37               	comf	(dtoa@n+1)^0,f,c
  7689  002B28  6C36               	negf	dtoa@n^0,c
  7690  002B2A  0E00               	movlw	0
  7691  002B2C  2237               	addwfc	(dtoa@n+1)^0,f,c
  7692  002B2E  2238               	addwfc	(dtoa@n+2)^0,f,c
  7693  002B30  2239               	addwfc	(dtoa@n+3)^0,f,c
  7694  002B32  223A               	addwfc	(dtoa@n+4)^0,f,c
  7695  002B34  223B               	addwfc	(dtoa@n+5)^0,f,c
  7696  002B36  223C               	addwfc	(dtoa@n+6)^0,f,c
  7697  002B38  223D               	addwfc	(dtoa@n+7)^0,f,c
  7698  002B3A                     l3585:
  7699  002B3A  FFFF               	dw	65535	; assembler added errata NOP
  7700                           
  7701                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  7702  002B3C  0100               	movlb	0	; () banked
  7703  002B3E  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7704  002B40  EFA4  F015         	goto	u3651
  7705  002B44  EFA7  F015         	goto	u3650
  7706  002B48                     u3651:
  7707  002B48  FFFF               	dw	65535	; assembler added errata NOP
  7708  002B4A  EFA9  F015         	goto	l3589
  7709  002B4E                     u3650:
  7710  002B4E  FFFF               	dw	65535	; assembler added errata NOP
  7711  002B50                     
  7712                           ; BSR set to: 0
  7713                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  7714  002B50  938A               	bcf	_flags& (0+255),1,b
  7715  002B52                     l3589:
  7716  002B52  FFFF               	dw	65535	; assembler added errata NOP
  7717                           
  7718                           ; BSR set to: 0
  7719                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  7720  002B54  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7721  002B56  EFB8  F015         	goto	u3660
  7722  002B5A  5189               	movf	(_prec+1)& (0+255),w,b
  7723  002B5C  E106               	bnz	u3661
  7724  002B5E  0588               	decf	_prec& (0+255),w,b
  7725  002B60  B0D8               	btfsc	status,0,c
  7726  002B62  EFB5  F015         	goto	u3661
  7727  002B66  EFB8  F015         	goto	u3660
  7728  002B6A                     u3661:
  7729  002B6A  FFFF               	dw	65535	; assembler added errata NOP
  7730  002B6C  EFBF  F015         	goto	l1064
  7731  002B70                     u3660:
  7732  002B70  FFFF               	dw	65535	; assembler added errata NOP
  7733  002B72                     
  7734                           ; BSR set to: 0
  7735  002B72  0E00               	movlw	0
  7736  002B74  6E31               	movwf	(dtoa@p+1)^0,c
  7737  002B76  0E01               	movlw	1
  7738  002B78  6E30               	movwf	dtoa@p^0,c
  7739  002B7A  EFC4  F015         	goto	l1066
  7740  002B7E                     l1064:
  7741  002B7E  FFFF               	dw	65535	; assembler added errata NOP
  7742                           
  7743                           ; BSR set to: 0
  7744  002B80  C088  F030         	movff	_prec,dtoa@p
  7745  002B84  C089  F031         	movff	_prec+1,dtoa@p+1
  7746  002B88                     l1066:
  7747  002B88  FFFF               	dw	65535	; assembler added errata NOP
  7748                           
  7749                           ; BSR set to: 0
  7750                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  7751  002B8A  C086  F032         	movff	_width,dtoa@w
  7752  002B8E  C087  F033         	movff	_width+1,dtoa@w+1
  7753  002B92                     
  7754                           ; BSR set to: 0
  7755                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  7756  002B92  5034               	movf	dtoa@s^0,w,c
  7757  002B94  1035               	iorwf	(dtoa@s+1)^0,w,c
  7758  002B96  A4D8               	btfss	status,2,c
  7759  002B98  EFD0  F015         	goto	u3671
  7760  002B9C  EFD3  F015         	goto	u3670
  7761  002BA0                     u3671:
  7762  002BA0  FFFF               	dw	65535	; assembler added errata NOP
  7763  002BA2  EFDC  F015         	goto	l3597
  7764  002BA6                     u3670:
  7765  002BA6  FFFF               	dw	65535	; assembler added errata NOP
  7766  002BA8                     
  7767                           ; BSR set to: 0
  7768  002BA8  A58A               	btfss	_flags& (0+255),2,b
  7769  002BAA  EFD9  F015         	goto	u3681
  7770  002BAE  EFDC  F015         	goto	u3680
  7771  002BB2                     u3681:
  7772  002BB2  FFFF               	dw	65535	; assembler added errata NOP
  7773  002BB4  EFE0  F015         	goto	l3599
  7774  002BB8                     u3680:
  7775  002BB8                     l3597:
  7776  002BB8  FFFF               	dw	65535	; assembler added errata NOP
  7777                           
  7778                           ; BSR set to: 0
  7779                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  7780  002BBA  0632               	decf	dtoa@w^0,f,c
  7781  002BBC  A0D8               	btfss	status,0,c
  7782  002BBE  0633               	decf	(dtoa@w+1)^0,f,c
  7783  002BC0                     l3599:
  7784  002BC0  FFFF               	dw	65535	; assembler added errata NOP
  7785                           
  7786                           ; BSR set to: 0
  7787                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  7788  002BC2  0E00               	movlw	0
  7789  002BC4  6E3F               	movwf	(dtoa@i+1)^0,c
  7790  002BC6  0E1F               	movlw	31
  7791  002BC8  6E3E               	movwf	dtoa@i^0,c
  7792  002BCA                     
  7793                           ; BSR set to: 0
  7794                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  7795  002BCA  0E00               	movlw	0
  7796  002BCC  6FAD               	movwf	(_dbuf+31)& (0+255),b
  7797                           
  7798                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7799  002BCE  EF66  F016         	goto	l3613
  7800  002BD2                     l3603:
  7801  002BD2  FFFF               	dw	65535	; assembler added errata NOP
  7802                           
  7803                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  7804  002BD4  063E               	decf	dtoa@i^0,f,c
  7805  002BD6  A0D8               	btfss	status,0,c
  7806  002BD8  063F               	decf	(dtoa@i+1)^0,f,c
  7807  002BDA                     
  7808                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  7809  002BDA  0E8E               	movlw	low _dbuf
  7810  002BDC  243E               	addwf	dtoa@i^0,w,c
  7811  002BDE  6ED9               	movwf	fsr2l,c
  7812  002BE0  0E00               	movlw	high _dbuf
  7813  002BE2  203F               	addwfc	(dtoa@i+1)^0,w,c
  7814  002BE4  6EDA               	movwf	fsr2h,c
  7815  002BE6  C036  F001         	movff	dtoa@n,___aomod@dividend
  7816  002BEA  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  7817  002BEE  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  7818  002BF2  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  7819  002BF6  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  7820  002BFA  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  7821  002BFE  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7822  002C02  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7823  002C06  0E0A               	movlw	10
  7824  002C08  6E09               	movwf	___aomod@divisor^0,c
  7825  002C0A  0E00               	movlw	0
  7826  002C0C  6E0A               	movwf	(___aomod@divisor+1)^0,c
  7827  002C0E  0E00               	movlw	0
  7828  002C10  6E0B               	movwf	(___aomod@divisor+2)^0,c
  7829  002C12  0E00               	movlw	0
  7830  002C14  6E0C               	movwf	(___aomod@divisor+3)^0,c
  7831  002C16  0E00               	movlw	0
  7832  002C18  6E0D               	movwf	(___aomod@divisor+4)^0,c
  7833  002C1A  0E00               	movlw	0
  7834  002C1C  6E0E               	movwf	(___aomod@divisor+5)^0,c
  7835  002C1E  0E00               	movlw	0
  7836  002C20  6E0F               	movwf	(___aomod@divisor+6)^0,c
  7837  002C22  0E00               	movlw	0
  7838  002C24  6E10               	movwf	(___aomod@divisor+7)^0,c
  7839  002C26  EC69  F01D         	call	___aomod	;wreg free
  7840  002C2A  C001  F026         	movff	?___aomod,??_dtoa
  7841  002C2E  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7842  002C32  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7843  002C36  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7844  002C3A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7845  002C3E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7846  002C42  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7847  002C46  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7848  002C4A  C026  F013         	movff	??_dtoa,abs@a
  7849  002C4E  C028  F014         	movff	??_dtoa+2,abs@a+1
  7850  002C52  EC78  F038         	call	_abs	;wreg free
  7851  002C56  5013               	movf	?_abs^0,w,c
  7852  002C58  0F30               	addlw	48
  7853  002C5A  6EDF               	movwf	indf2,c
  7854  002C5C                     
  7855                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  7856  002C5C  0630               	decf	dtoa@p^0,f,c
  7857  002C5E  A0D8               	btfss	status,0,c
  7858  002C60  0631               	decf	(dtoa@p+1)^0,f,c
  7859  002C62                     
  7860                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  7861  002C62  0632               	decf	dtoa@w^0,f,c
  7862  002C64  A0D8               	btfss	status,0,c
  7863  002C66  0633               	decf	(dtoa@w+1)^0,f,c
  7864  002C68                     
  7865                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  7866  002C68  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7867  002C6C  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7868  002C70  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7869  002C74  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7870  002C78  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7871  002C7C  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7872  002C80  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7873  002C84  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7874  002C88  0E0A               	movlw	10
  7875  002C8A  6E09               	movwf	___aodiv@divisor^0,c
  7876  002C8C  0E00               	movlw	0
  7877  002C8E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  7878  002C90  0E00               	movlw	0
  7879  002C92  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  7880  002C94  0E00               	movlw	0
  7881  002C96  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  7882  002C98  0E00               	movlw	0
  7883  002C9A  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  7884  002C9C  0E00               	movlw	0
  7885  002C9E  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  7886  002CA0  0E00               	movlw	0
  7887  002CA2  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  7888  002CA4  0E00               	movlw	0
  7889  002CA6  6E10               	movwf	(___aodiv@divisor+7)^0,c
  7890  002CA8  EC8F  F01C         	call	___aodiv	;wreg free
  7891  002CAC  C001  F036         	movff	?___aodiv,dtoa@n
  7892  002CB0  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7893  002CB4  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7894  002CB8  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7895  002CBC  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7896  002CC0  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7897  002CC4  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7898  002CC8  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7899  002CCC                     l3613:
  7900  002CCC  FFFF               	dw	65535	; assembler added errata NOP
  7901                           
  7902                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7903  002CCE  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  7904  002CD0  EF72  F016         	goto	u3691
  7905  002CD4  503F               	movf	(dtoa@i+1)^0,w,c
  7906  002CD6  E109               	bnz	u3690
  7907  002CD8  043E               	decf	dtoa@i^0,w,c
  7908  002CDA  A0D8               	btfss	status,0,c
  7909  002CDC  EF72  F016         	goto	u3691
  7910  002CE0  EF75  F016         	goto	u3690
  7911  002CE4                     u3691:
  7912  002CE4  FFFF               	dw	65535	; assembler added errata NOP
  7913  002CE6  EFAE  F016         	goto	l3623
  7914  002CEA                     u3690:
  7915  002CEA  FFFF               	dw	65535	; assembler added errata NOP
  7916  002CEC  5036               	movf	dtoa@n^0,w,c
  7917  002CEE  1037               	iorwf	(dtoa@n+1)^0,w,c
  7918  002CF0  1038               	iorwf	(dtoa@n+2)^0,w,c
  7919  002CF2  1039               	iorwf	(dtoa@n+3)^0,w,c
  7920  002CF4  103A               	iorwf	(dtoa@n+4)^0,w,c
  7921  002CF6  103B               	iorwf	(dtoa@n+5)^0,w,c
  7922  002CF8  103C               	iorwf	(dtoa@n+6)^0,w,c
  7923  002CFA  103D               	iorwf	(dtoa@n+7)^0,w,c
  7924  002CFC  A4D8               	btfss	status,2,c
  7925  002CFE  EF83  F016         	goto	u3701
  7926  002D02  EF86  F016         	goto	u3700
  7927  002D06                     u3701:
  7928  002D06  FFFF               	dw	65535	; assembler added errata NOP
  7929  002D08  EFE9  F015         	goto	l3603
  7930  002D0C                     u3700:
  7931  002D0C  FFFF               	dw	65535	; assembler added errata NOP
  7932  002D0E  BE31               	btfsc	(dtoa@p+1)^0,7,c
  7933  002D10  EF95  F016         	goto	u3710
  7934  002D14  5031               	movf	(dtoa@p+1)^0,w,c
  7935  002D16  E106               	bnz	u3711
  7936  002D18  0430               	decf	dtoa@p^0,w,c
  7937  002D1A  B0D8               	btfsc	status,0,c
  7938  002D1C  EF92  F016         	goto	u3711
  7939  002D20  EF95  F016         	goto	u3710
  7940  002D24                     u3711:
  7941  002D24  FFFF               	dw	65535	; assembler added errata NOP
  7942  002D26  EFE9  F015         	goto	l3603
  7943  002D2A                     u3710:
  7944  002D2A  FFFF               	dw	65535	; assembler added errata NOP
  7945  002D2C  BE33               	btfsc	(dtoa@w+1)^0,7,c
  7946  002D2E  EFA1  F016         	goto	u3721
  7947  002D32  5033               	movf	(dtoa@w+1)^0,w,c
  7948  002D34  E109               	bnz	u3720
  7949  002D36  0432               	decf	dtoa@w^0,w,c
  7950  002D38  A0D8               	btfss	status,0,c
  7951  002D3A  EFA1  F016         	goto	u3721
  7952  002D3E  EFA4  F016         	goto	u3720
  7953  002D42                     u3721:
  7954  002D42  FFFF               	dw	65535	; assembler added errata NOP
  7955  002D44  EFAE  F016         	goto	l3623
  7956  002D48                     u3720:
  7957  002D48  FFFF               	dw	65535	; assembler added errata NOP
  7958  002D4A  0100               	movlb	0	; () banked
  7959  002D4C  B38A               	btfsc	_flags& (0+255),1,b
  7960  002D4E  EFAB  F016         	goto	u3731
  7961  002D52  EFAE  F016         	goto	u3730
  7962  002D56                     u3731:
  7963  002D56  FFFF               	dw	65535	; assembler added errata NOP
  7964  002D58  EFE9  F015         	goto	l3603
  7965  002D5C                     u3730:
  7966  002D5C                     l3623:
  7967  002D5C  FFFF               	dw	65535	; assembler added errata NOP
  7968                           
  7969                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  7970  002D5E  5034               	movf	dtoa@s^0,w,c
  7971  002D60  1035               	iorwf	(dtoa@s+1)^0,w,c
  7972  002D62  A4D8               	btfss	status,2,c
  7973  002D64  EFB6  F016         	goto	u3741
  7974  002D68  EFB9  F016         	goto	u3740
  7975  002D6C                     u3741:
  7976  002D6C  FFFF               	dw	65535	; assembler added errata NOP
  7977  002D6E  EFC3  F016         	goto	l3627
  7978  002D72                     u3740:
  7979  002D72  FFFF               	dw	65535	; assembler added errata NOP
  7980  002D74  0100               	movlb	0	; () banked
  7981  002D76  A58A               	btfss	_flags& (0+255),2,b
  7982  002D78  EFC0  F016         	goto	u3751
  7983  002D7C  EFC3  F016         	goto	u3750
  7984  002D80                     u3751:
  7985  002D80  FFFF               	dw	65535	; assembler added errata NOP
  7986  002D82  EFE6  F016         	goto	l3637
  7987  002D86                     u3750:
  7988  002D86                     l3627:
  7989  002D86  FFFF               	dw	65535	; assembler added errata NOP
  7990                           
  7991                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  7992  002D88  063E               	decf	dtoa@i^0,f,c
  7993  002D8A  A0D8               	btfss	status,0,c
  7994  002D8C  063F               	decf	(dtoa@i+1)^0,f,c
  7995  002D8E                     
  7996                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  7997  002D8E  5034               	movf	dtoa@s^0,w,c
  7998  002D90  1035               	iorwf	(dtoa@s+1)^0,w,c
  7999  002D92  A4D8               	btfss	status,2,c
  8000  002D94  EFCE  F016         	goto	u3761
  8001  002D98  EFD1  F016         	goto	u3760
  8002  002D9C                     u3761:
  8003  002D9C  FFFF               	dw	65535	; assembler added errata NOP
  8004  002D9E  EFD8  F016         	goto	l3633
  8005  002DA2                     u3760:
  8006  002DA2  FFFF               	dw	65535	; assembler added errata NOP
  8007  002DA4  0E00               	movlw	0
  8008  002DA6  6E2F               	movwf	(_dtoa$1451+1)^0,c
  8009  002DA8  0E2B               	movlw	43
  8010  002DAA  6E2E               	movwf	_dtoa$1451^0,c
  8011  002DAC  EFDD  F016         	goto	l3635
  8012  002DB0                     l3633:
  8013  002DB0  FFFF               	dw	65535	; assembler added errata NOP
  8014  002DB2  0E00               	movlw	0
  8015  002DB4  6E2F               	movwf	(_dtoa$1451+1)^0,c
  8016  002DB6  0E2D               	movlw	45
  8017  002DB8  6E2E               	movwf	_dtoa$1451^0,c
  8018  002DBA                     l3635:
  8019  002DBA  FFFF               	dw	65535	; assembler added errata NOP
  8020  002DBC  0E8E               	movlw	low _dbuf
  8021  002DBE  243E               	addwf	dtoa@i^0,w,c
  8022  002DC0  6ED9               	movwf	fsr2l,c
  8023  002DC2  0E00               	movlw	high _dbuf
  8024  002DC4  203F               	addwfc	(dtoa@i+1)^0,w,c
  8025  002DC6  6EDA               	movwf	fsr2h,c
  8026  002DC8  C02E  FFDF         	movff	_dtoa$1451,indf2
  8027  002DCC                     l3637:
  8028  002DCC  FFFF               	dw	65535	; assembler added errata NOP
  8029                           
  8030                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  8031  002DCE  C01C  F011         	movff	dtoa@fp,pad@fp
  8032  002DD2  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  8033  002DD6  0E8E               	movlw	low _dbuf
  8034  002DD8  243E               	addwf	dtoa@i^0,w,c
  8035  002DDA  6E13               	movwf	pad@buf^0,c
  8036  002DDC  0E00               	movlw	high _dbuf
  8037  002DDE  203F               	addwfc	(dtoa@i+1)^0,w,c
  8038  002DE0  6E14               	movwf	(pad@buf+1)^0,c
  8039  002DE2  C032  F015         	movff	dtoa@w,pad@p
  8040  002DE6  C033  F016         	movff	dtoa@w+1,pad@p+1
  8041  002DEA  EC5E  F03C         	call	_pad	;wreg free
  8042  002DEE  C011  F01C         	movff	?_pad,?_dtoa
  8043  002DF2  C012  F01D         	movff	?_pad+1,?_dtoa+1
  8044  002DF6  0012               	return		;funcret
  8045  002DF8  FFFF               	dw	65535	; errata NOP
  8046  002DFA                     __end_of_dtoa:
  8047                           	callstack 0
  8048                           
  8049 ;; *************** function _abs *****************
  8050 ;; Defined at:
  8051 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  8052 ;; Parameters:    Size  Location     Type
  8053 ;;  a               2   18[COMRAM] int 
  8054 ;; Auto vars:     Size  Location     Type
  8055 ;;		None
  8056 ;; Return value:  Size  Location     Type
  8057 ;;                  2   18[COMRAM] int 
  8058 ;; Registers used:
  8059 ;;		wreg, status,2, status,0
  8060 ;; Tracked objects:
  8061 ;;		On entry : 0/0
  8062 ;;		On exit  : 0/0
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8065 ;;      Params:         2       0       0       0       0       0       0
  8066 ;;      Locals:         0       0       0       0       0       0       0
  8067 ;;      Temps:          2       0       0       0       0       0       0
  8068 ;;      Totals:         4       0       0       0       0       0       0
  8069 ;;Total ram usage:        4 bytes
  8070 ;; Hardware stack levels used:    1
  8071 ;; Hardware stack levels required when called:    1
  8072 ;; This function calls:
  8073 ;;		Nothing
  8074 ;; This function is called by:
  8075 ;;		_dtoa
  8076 ;; This function uses a non-reentrant model
  8077 ;;
  8078                           
  8079                           	psect	text20
  8080  0070F0                     __ptext20:
  8081                           	callstack 0
  8082  0070F0                     _abs:
  8083                           	callstack 0
  8084  0070F0  FFFF               	dw	65535	; assembler added errata NOP
  8085  0070F2  BE14               	btfsc	(abs@a+1)^0,7,c
  8086  0070F4  EF87  F038         	goto	u3490
  8087  0070F8  5014               	movf	(abs@a+1)^0,w,c
  8088  0070FA  E106               	bnz	u3491
  8089  0070FC  0413               	decf	abs@a^0,w,c
  8090  0070FE  B0D8               	btfsc	status,0,c
  8091  007100  EF84  F038         	goto	u3491
  8092  007104  EF87  F038         	goto	u3490
  8093  007108                     u3491:
  8094  007108  FFFF               	dw	65535	; assembler added errata NOP
  8095  00710A  EF96  F038         	goto	l1254
  8096  00710E                     u3490:
  8097  00710E  FFFF               	dw	65535	; assembler added errata NOP
  8098  007110  C013  F015         	movff	abs@a,??_abs
  8099  007114  C014  F016         	movff	abs@a+1,??_abs+1
  8100  007118  1E15               	comf	??_abs^0,f,c
  8101  00711A  1E16               	comf	(??_abs+1)^0,f,c
  8102  00711C  4A15               	infsnz	??_abs^0,f,c
  8103  00711E  2A16               	incf	(??_abs+1)^0,f,c
  8104  007120  C015  F013         	movff	??_abs,?_abs
  8105  007124  C016  F014         	movff	??_abs+1,?_abs+1
  8106  007128  EF9B  F038         	goto	l1257
  8107  00712C                     l1254:
  8108  00712C  FFFF               	dw	65535	; assembler added errata NOP
  8109  00712E  C013  F013         	movff	abs@a,?_abs
  8110  007132  C014  F014         	movff	abs@a+1,?_abs+1
  8111  007136                     l1257:
  8112  007136  FFFF               	dw	65535	; assembler added errata NOP
  8113  007138  0012               	return		;funcret
  8114  00713A  FFFF               	dw	65535	; errata NOP
  8115  00713C                     __end_of_abs:
  8116                           	callstack 0
  8117                           
  8118 ;; *************** function ___aomod *****************
  8119 ;; Defined at:
  8120 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  8121 ;; Parameters:    Size  Location     Type
  8122 ;;  dividend        8    0[COMRAM] long long 
  8123 ;;  divisor         8    8[COMRAM] long long 
  8124 ;; Auto vars:     Size  Location     Type
  8125 ;;  sign            1   17[COMRAM] unsigned char 
  8126 ;;  counter         1   16[COMRAM] unsigned char 
  8127 ;; Return value:  Size  Location     Type
  8128 ;;                  8    0[COMRAM] long long 
  8129 ;; Registers used:
  8130 ;;		wreg, status,2, status,0
  8131 ;; Tracked objects:
  8132 ;;		On entry : 0/0
  8133 ;;		On exit  : 0/0
  8134 ;;		Unchanged: 0/0
  8135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8136 ;;      Params:        16       0       0       0       0       0       0
  8137 ;;      Locals:         2       0       0       0       0       0       0
  8138 ;;      Temps:          0       0       0       0       0       0       0
  8139 ;;      Totals:        18       0       0       0       0       0       0
  8140 ;;Total ram usage:       18 bytes
  8141 ;; Hardware stack levels used:    1
  8142 ;; Hardware stack levels required when called:    1
  8143 ;; This function calls:
  8144 ;;		Nothing
  8145 ;; This function is called by:
  8146 ;;		_dtoa
  8147 ;; This function uses a non-reentrant model
  8148 ;;
  8149                           
  8150                           	psect	text21
  8151  003AD2                     __ptext21:
  8152                           	callstack 0
  8153  003AD2                     ___aomod:
  8154                           	callstack 0
  8155  003AD2  FFFF               	dw	65535	; assembler added errata NOP
  8156  003AD4  0E00               	movlw	0
  8157  003AD6  6E12               	movwf	___aomod@sign^0,c
  8158  003AD8  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8159  003ADA  EF74  F01D         	goto	u3320
  8160  003ADE  EF71  F01D         	goto	u3321
  8161  003AE2                     u3321:
  8162  003AE2  FFFF               	dw	65535	; assembler added errata NOP
  8163  003AE4  EF87  F01D         	goto	l3439
  8164  003AE8                     u3320:
  8165  003AE8  FFFF               	dw	65535	; assembler added errata NOP
  8166  003AEA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8167  003AEC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8168  003AEE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8169  003AF0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8170  003AF2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8171  003AF4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8172  003AF6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8173  003AF8  6C01               	negf	___aomod@dividend^0,c
  8174  003AFA  0E00               	movlw	0
  8175  003AFC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8176  003AFE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8177  003B00  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8178  003B02  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8179  003B04  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8180  003B06  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8181  003B08  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8182  003B0A  0E01               	movlw	1
  8183  003B0C  6E12               	movwf	___aomod@sign^0,c
  8184  003B0E                     l3439:
  8185  003B0E  FFFF               	dw	65535	; assembler added errata NOP
  8186  003B10  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8187  003B12  EF90  F01D         	goto	u3330
  8188  003B16  EF8D  F01D         	goto	u3331
  8189  003B1A                     u3331:
  8190  003B1A  FFFF               	dw	65535	; assembler added errata NOP
  8191  003B1C  EFA1  F01D         	goto	l3443
  8192  003B20                     u3330:
  8193  003B20  FFFF               	dw	65535	; assembler added errata NOP
  8194  003B22  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8195  003B24  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8196  003B26  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8197  003B28  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8198  003B2A  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8199  003B2C  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8200  003B2E  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8201  003B30  6C09               	negf	___aomod@divisor^0,c
  8202  003B32  0E00               	movlw	0
  8203  003B34  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8204  003B36  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8205  003B38  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8206  003B3A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8207  003B3C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8208  003B3E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8209  003B40  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8210  003B42                     l3443:
  8211  003B42  FFFF               	dw	65535	; assembler added errata NOP
  8212  003B44  5009               	movf	___aomod@divisor^0,w,c
  8213  003B46  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8214  003B48  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8215  003B4A  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8216  003B4C  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8217  003B4E  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8218  003B50  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8219  003B52  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8220  003B54  B4D8               	btfsc	status,2,c
  8221  003B56  EFAF  F01D         	goto	u3341
  8222  003B5A  EFB2  F01D         	goto	u3340
  8223  003B5E                     u3341:
  8224  003B5E  FFFF               	dw	65535	; assembler added errata NOP
  8225  003B60  EF03  F01E         	goto	l3459
  8226  003B64                     u3340:
  8227  003B64  FFFF               	dw	65535	; assembler added errata NOP
  8228  003B66  0E01               	movlw	1
  8229  003B68  6E11               	movwf	___aomod@counter^0,c
  8230  003B6A  EFC2  F01D         	goto	l3449
  8231  003B6E                     l3447:
  8232  003B6E  FFFF               	dw	65535	; assembler added errata NOP
  8233  003B70  90D8               	bcf	status,0,c
  8234  003B72  3609               	rlcf	___aomod@divisor^0,f,c
  8235  003B74  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8236  003B76  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8237  003B78  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8238  003B7A  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8239  003B7C  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8240  003B7E  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8241  003B80  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8242  003B82  2A11               	incf	___aomod@counter^0,f,c
  8243  003B84                     l3449:
  8244  003B84  FFFF               	dw	65535	; assembler added errata NOP
  8245  003B86  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8246  003B88  EFC8  F01D         	goto	u3351
  8247  003B8C  EFCB  F01D         	goto	u3350
  8248  003B90                     u3351:
  8249  003B90  FFFF               	dw	65535	; assembler added errata NOP
  8250  003B92  EFB7  F01D         	goto	l3447
  8251  003B96                     u3350:
  8252  003B96  FFFF               	dw	65535	; assembler added errata NOP
  8253  003B98                     l3451:
  8254  003B98  FFFF               	dw	65535	; assembler added errata NOP
  8255  003B9A  5009               	movf	___aomod@divisor^0,w,c
  8256  003B9C  5C01               	subwf	___aomod@dividend^0,w,c
  8257  003B9E  500A               	movf	(___aomod@divisor+1)^0,w,c
  8258  003BA0  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8259  003BA2  500B               	movf	(___aomod@divisor+2)^0,w,c
  8260  003BA4  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8261  003BA6  500C               	movf	(___aomod@divisor+3)^0,w,c
  8262  003BA8  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8263  003BAA  500D               	movf	(___aomod@divisor+4)^0,w,c
  8264  003BAC  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8265  003BAE  500E               	movf	(___aomod@divisor+5)^0,w,c
  8266  003BB0  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8267  003BB2  500F               	movf	(___aomod@divisor+6)^0,w,c
  8268  003BB4  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8269  003BB6  5010               	movf	(___aomod@divisor+7)^0,w,c
  8270  003BB8  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8271  003BBA  A0D8               	btfss	status,0,c
  8272  003BBC  EFE2  F01D         	goto	u3361
  8273  003BC0  EFE5  F01D         	goto	u3360
  8274  003BC4                     u3361:
  8275  003BC4  FFFF               	dw	65535	; assembler added errata NOP
  8276  003BC6  EFF6  F01D         	goto	l3455
  8277  003BCA                     u3360:
  8278  003BCA  FFFF               	dw	65535	; assembler added errata NOP
  8279  003BCC  5009               	movf	___aomod@divisor^0,w,c
  8280  003BCE  5E01               	subwf	___aomod@dividend^0,f,c
  8281  003BD0  500A               	movf	(___aomod@divisor+1)^0,w,c
  8282  003BD2  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8283  003BD4  500B               	movf	(___aomod@divisor+2)^0,w,c
  8284  003BD6  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8285  003BD8  500C               	movf	(___aomod@divisor+3)^0,w,c
  8286  003BDA  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8287  003BDC  500D               	movf	(___aomod@divisor+4)^0,w,c
  8288  003BDE  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8289  003BE0  500E               	movf	(___aomod@divisor+5)^0,w,c
  8290  003BE2  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8291  003BE4  500F               	movf	(___aomod@divisor+6)^0,w,c
  8292  003BE6  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8293  003BE8  5010               	movf	(___aomod@divisor+7)^0,w,c
  8294  003BEA  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8295  003BEC                     l3455:
  8296  003BEC  FFFF               	dw	65535	; assembler added errata NOP
  8297  003BEE  90D8               	bcf	status,0,c
  8298  003BF0  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8299  003BF2  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8300  003BF4  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8301  003BF6  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8302  003BF8  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8303  003BFA  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8304  003BFC  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8305  003BFE  3209               	rrcf	___aomod@divisor^0,f,c
  8306  003C00  2E11               	decfsz	___aomod@counter^0,f,c
  8307  003C02  EFCC  F01D         	goto	l3451
  8308  003C06                     l3459:
  8309  003C06  FFFF               	dw	65535	; assembler added errata NOP
  8310  003C08  5012               	movf	___aomod@sign^0,w,c
  8311  003C0A  B4D8               	btfsc	status,2,c
  8312  003C0C  EF0A  F01E         	goto	u3371
  8313  003C10  EF0D  F01E         	goto	u3370
  8314  003C14                     u3371:
  8315  003C14  FFFF               	dw	65535	; assembler added errata NOP
  8316  003C16  EF1E  F01E         	goto	l3463
  8317  003C1A                     u3370:
  8318  003C1A  FFFF               	dw	65535	; assembler added errata NOP
  8319  003C1C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8320  003C1E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8321  003C20  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8322  003C22  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8323  003C24  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8324  003C26  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8325  003C28  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8326  003C2A  6C01               	negf	___aomod@dividend^0,c
  8327  003C2C  0E00               	movlw	0
  8328  003C2E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8329  003C30  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8330  003C32  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8331  003C34  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8332  003C36  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8333  003C38  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8334  003C3A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8335  003C3C                     l3463:
  8336  003C3C  FFFF               	dw	65535	; assembler added errata NOP
  8337  003C3E  C001  F001         	movff	___aomod@dividend,?___aomod
  8338  003C42  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8339  003C46  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8340  003C4A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8341  003C4E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8342  003C52  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8343  003C56  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8344  003C5A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8345  003C5E  0012               	return		;funcret
  8346  003C60  FFFF               	dw	65535	; errata NOP
  8347  003C62                     __end_of___aomod:
  8348                           	callstack 0
  8349                           
  8350 ;; *************** function ___aodiv *****************
  8351 ;; Defined at:
  8352 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  8353 ;; Parameters:    Size  Location     Type
  8354 ;;  dividend        8    0[COMRAM] long long 
  8355 ;;  divisor         8    8[COMRAM] long long 
  8356 ;; Auto vars:     Size  Location     Type
  8357 ;;  quotient        8   18[COMRAM] long long 
  8358 ;;  sign            1   17[COMRAM] unsigned char 
  8359 ;;  counter         1   16[COMRAM] unsigned char 
  8360 ;; Return value:  Size  Location     Type
  8361 ;;                  8    0[COMRAM] long long 
  8362 ;; Registers used:
  8363 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8364 ;; Tracked objects:
  8365 ;;		On entry : 0/0
  8366 ;;		On exit  : 0/0
  8367 ;;		Unchanged: 0/0
  8368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8369 ;;      Params:        16       0       0       0       0       0       0
  8370 ;;      Locals:        10       0       0       0       0       0       0
  8371 ;;      Temps:          0       0       0       0       0       0       0
  8372 ;;      Totals:        26       0       0       0       0       0       0
  8373 ;;Total ram usage:       26 bytes
  8374 ;; Hardware stack levels used:    1
  8375 ;; Hardware stack levels required when called:    1
  8376 ;; This function calls:
  8377 ;;		Nothing
  8378 ;; This function is called by:
  8379 ;;		_dtoa
  8380 ;; This function uses a non-reentrant model
  8381 ;;
  8382                           
  8383                           	psect	text22
  8384  00391E                     __ptext22:
  8385                           	callstack 0
  8386  00391E                     ___aodiv:
  8387                           	callstack 0
  8388  00391E  FFFF               	dw	65535	; assembler added errata NOP
  8389  003920  0E00               	movlw	0
  8390  003922  6E12               	movwf	___aodiv@sign^0,c
  8391  003924  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8392  003926  EF9A  F01C         	goto	u3250
  8393  00392A  EF97  F01C         	goto	u3251
  8394  00392E                     u3251:
  8395  00392E  FFFF               	dw	65535	; assembler added errata NOP
  8396  003930  EFAD  F01C         	goto	l3395
  8397  003934                     u3250:
  8398  003934  FFFF               	dw	65535	; assembler added errata NOP
  8399  003936  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8400  003938  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8401  00393A  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8402  00393C  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8403  00393E  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8404  003940  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8405  003942  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8406  003944  6C09               	negf	___aodiv@divisor^0,c
  8407  003946  0E00               	movlw	0
  8408  003948  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8409  00394A  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8410  00394C  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8411  00394E  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8412  003950  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8413  003952  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8414  003954  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8415  003956  0E01               	movlw	1
  8416  003958  6E12               	movwf	___aodiv@sign^0,c
  8417  00395A                     l3395:
  8418  00395A  FFFF               	dw	65535	; assembler added errata NOP
  8419  00395C  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8420  00395E  EFB6  F01C         	goto	u3260
  8421  003962  EFB3  F01C         	goto	u3261
  8422  003966                     u3261:
  8423  003966  FFFF               	dw	65535	; assembler added errata NOP
  8424  003968  EFC9  F01C         	goto	l3401
  8425  00396C                     u3260:
  8426  00396C  FFFF               	dw	65535	; assembler added errata NOP
  8427  00396E  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8428  003970  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8429  003972  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8430  003974  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8431  003976  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8432  003978  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8433  00397A  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8434  00397C  6C01               	negf	___aodiv@dividend^0,c
  8435  00397E  0E00               	movlw	0
  8436  003980  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8437  003982  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8438  003984  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8439  003986  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8440  003988  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8441  00398A  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8442  00398C  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8443  00398E  0E01               	movlw	1
  8444  003990  1A12               	xorwf	___aodiv@sign^0,f,c
  8445  003992                     l3401:
  8446  003992  FFFF               	dw	65535	; assembler added errata NOP
  8447  003994  EE20  F013         	lfsr	2,___aodiv@quotient
  8448  003998  0E07               	movlw	7
  8449  00399A                     u3271:
  8450  00399A  6ADE               	clrf	postinc2,c
  8451  00399C  06E8               	decf	wreg,f,c
  8452  00399E  E2FD               	bc	u3271
  8453  0039A0  5009               	movf	___aodiv@divisor^0,w,c
  8454  0039A2  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8455  0039A4  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8456  0039A6  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8457  0039A8  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8458  0039AA  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8459  0039AC  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8460  0039AE  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8461  0039B0  B4D8               	btfsc	status,2,c
  8462  0039B2  EFDD  F01C         	goto	u3281
  8463  0039B6  EFE0  F01C         	goto	u3280
  8464  0039BA                     u3281:
  8465  0039BA  FFFF               	dw	65535	; assembler added errata NOP
  8466  0039BC  EF3B  F01D         	goto	l3423
  8467  0039C0                     u3280:
  8468  0039C0  FFFF               	dw	65535	; assembler added errata NOP
  8469  0039C2  0E01               	movlw	1
  8470  0039C4  6E11               	movwf	___aodiv@counter^0,c
  8471  0039C6  EFF0  F01C         	goto	l3409
  8472  0039CA                     l3407:
  8473  0039CA  FFFF               	dw	65535	; assembler added errata NOP
  8474  0039CC  90D8               	bcf	status,0,c
  8475  0039CE  3609               	rlcf	___aodiv@divisor^0,f,c
  8476  0039D0  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8477  0039D2  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8478  0039D4  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8479  0039D6  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8480  0039D8  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8481  0039DA  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8482  0039DC  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  8483  0039DE  2A11               	incf	___aodiv@counter^0,f,c
  8484  0039E0                     l3409:
  8485  0039E0  FFFF               	dw	65535	; assembler added errata NOP
  8486  0039E2  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8487  0039E4  EFF6  F01C         	goto	u3291
  8488  0039E8  EFF9  F01C         	goto	u3290
  8489  0039EC                     u3291:
  8490  0039EC  FFFF               	dw	65535	; assembler added errata NOP
  8491  0039EE  EFE5  F01C         	goto	l3407
  8492  0039F2                     u3290:
  8493  0039F2  FFFF               	dw	65535	; assembler added errata NOP
  8494  0039F4                     l3411:
  8495  0039F4  FFFF               	dw	65535	; assembler added errata NOP
  8496  0039F6  90D8               	bcf	status,0,c
  8497  0039F8  3613               	rlcf	___aodiv@quotient^0,f,c
  8498  0039FA  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  8499  0039FC  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  8500  0039FE  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  8501  003A00  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  8502  003A02  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  8503  003A04  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  8504  003A06  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8505  003A08  5009               	movf	___aodiv@divisor^0,w,c
  8506  003A0A  5C01               	subwf	___aodiv@dividend^0,w,c
  8507  003A0C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8508  003A0E  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  8509  003A10  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8510  003A12  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  8511  003A14  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8512  003A16  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  8513  003A18  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8514  003A1A  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  8515  003A1C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8516  003A1E  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  8517  003A20  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8518  003A22  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  8519  003A24  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8520  003A26  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  8521  003A28  A0D8               	btfss	status,0,c
  8522  003A2A  EF19  F01D         	goto	u3301
  8523  003A2E  EF1C  F01D         	goto	u3300
  8524  003A32                     u3301:
  8525  003A32  FFFF               	dw	65535	; assembler added errata NOP
  8526  003A34  EF2E  F01D         	goto	l3419
  8527  003A38                     u3300:
  8528  003A38  FFFF               	dw	65535	; assembler added errata NOP
  8529  003A3A  5009               	movf	___aodiv@divisor^0,w,c
  8530  003A3C  5E01               	subwf	___aodiv@dividend^0,f,c
  8531  003A3E  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8532  003A40  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  8533  003A42  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8534  003A44  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8535  003A46  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8536  003A48  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8537  003A4A  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8538  003A4C  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8539  003A4E  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8540  003A50  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8541  003A52  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8542  003A54  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8543  003A56  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8544  003A58  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8545  003A5A  8013               	bsf	___aodiv@quotient^0,0,c
  8546  003A5C                     l3419:
  8547  003A5C  FFFF               	dw	65535	; assembler added errata NOP
  8548  003A5E  90D8               	bcf	status,0,c
  8549  003A60  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8550  003A62  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8551  003A64  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8552  003A66  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8553  003A68  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8554  003A6A  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8555  003A6C  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8556  003A6E  3209               	rrcf	___aodiv@divisor^0,f,c
  8557  003A70  2E11               	decfsz	___aodiv@counter^0,f,c
  8558  003A72  EFFA  F01C         	goto	l3411
  8559  003A76                     l3423:
  8560  003A76  FFFF               	dw	65535	; assembler added errata NOP
  8561  003A78  5012               	movf	___aodiv@sign^0,w,c
  8562  003A7A  B4D8               	btfsc	status,2,c
  8563  003A7C  EF42  F01D         	goto	u3311
  8564  003A80  EF45  F01D         	goto	u3310
  8565  003A84                     u3311:
  8566  003A84  FFFF               	dw	65535	; assembler added errata NOP
  8567  003A86  EF56  F01D         	goto	l3427
  8568  003A8A                     u3310:
  8569  003A8A  FFFF               	dw	65535	; assembler added errata NOP
  8570  003A8C  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8571  003A8E  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8572  003A90  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8573  003A92  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  8574  003A94  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  8575  003A96  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  8576  003A98  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  8577  003A9A  6C13               	negf	___aodiv@quotient^0,c
  8578  003A9C  0E00               	movlw	0
  8579  003A9E  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  8580  003AA0  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  8581  003AA2  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  8582  003AA4  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  8583  003AA6  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  8584  003AA8  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  8585  003AAA  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8586  003AAC                     l3427:
  8587  003AAC  FFFF               	dw	65535	; assembler added errata NOP
  8588  003AAE  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8589  003AB2  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8590  003AB6  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8591  003ABA  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8592  003ABE  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8593  003AC2  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8594  003AC6  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8595  003ACA  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8596  003ACE  0012               	return		;funcret
  8597  003AD0  FFFF               	dw	65535	; errata NOP
  8598  003AD2                     __end_of___aodiv:
  8599                           	callstack 0
  8600                           
  8601 ;; *************** function _ctoa *****************
  8602 ;; Defined at:
  8603 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  8604 ;; Parameters:    Size  Location     Type
  8605 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8606 ;;		 -> vsnprintf@f(6), 
  8607 ;;  c               1   29[COMRAM] unsigned char 
  8608 ;; Auto vars:     Size  Location     Type
  8609 ;;  w               2   30[COMRAM] int 
  8610 ;;  l               2    0        int 
  8611 ;; Return value:  Size  Location     Type
  8612 ;;                  2   27[COMRAM] int 
  8613 ;; Registers used:
  8614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8615 ;; Tracked objects:
  8616 ;;		On entry : 0/0
  8617 ;;		On exit  : 0/0
  8618 ;;		Unchanged: 0/0
  8619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8620 ;;      Params:         3       0       0       0       0       0       0
  8621 ;;      Locals:         2       0       0       0       0       0       0
  8622 ;;      Temps:          0       0       0       0       0       0       0
  8623 ;;      Totals:         5       0       0       0       0       0       0
  8624 ;;Total ram usage:        5 bytes
  8625 ;; Hardware stack levels used:    1
  8626 ;; Hardware stack levels required when called:    5
  8627 ;; This function calls:
  8628 ;;		_pad
  8629 ;; This function is called by:
  8630 ;;		_vfpfcnvrt
  8631 ;; This function uses a non-reentrant model
  8632 ;;
  8633                           
  8634                           	psect	text23
  8635  007248                     __ptext23:
  8636                           	callstack 0
  8637  007248                     _ctoa:
  8638                           	callstack 0
  8639  007248  FFFF               	dw	65535	; assembler added errata NOP
  8640  00724A                     
  8641                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  8642  00724A  0100               	movlb	0	; () banked
  8643  00724C  5186               	movf	_width& (0+255),w,b
  8644  00724E  1187               	iorwf	(_width+1)& (0+255),w,b
  8645  007250  A4D8               	btfss	status,2,c
  8646  007252  EF2D  F039         	goto	u3611
  8647  007256  EF30  F039         	goto	u3610
  8648  00725A                     u3611:
  8649  00725A  FFFF               	dw	65535	; assembler added errata NOP
  8650  00725C  EF37  F039         	goto	l3569
  8651  007260                     u3610:
  8652  007260  FFFF               	dw	65535	; assembler added errata NOP
  8653  007262                     
  8654                           ; BSR set to: 0
  8655  007262  C086  F01F         	movff	_width,ctoa@w
  8656  007266  C087  F020         	movff	_width+1,ctoa@w+1
  8657  00726A  EF3E  F039         	goto	l3571
  8658  00726E                     l3569:
  8659  00726E  FFFF               	dw	65535	; assembler added errata NOP
  8660                           
  8661                           ; BSR set to: 0
  8662  007270  0EFF               	movlw	255
  8663  007272  2586               	addwf	_width& (0+255),w,b
  8664  007274  6E1F               	movwf	ctoa@w^0,c
  8665  007276  0EFF               	movlw	255
  8666  007278  2187               	addwfc	(_width+1)& (0+255),w,b
  8667  00727A  6E20               	movwf	(ctoa@w+1)^0,c
  8668  00727C                     l3571:
  8669  00727C  FFFF               	dw	65535	; assembler added errata NOP
  8670                           
  8671                           ; BSR set to: 0
  8672                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 267:     dbuf[0] 
      +                          = c;
  8673  00727E  C01E  F08E         	movff	ctoa@c,_dbuf
  8674  007282                     
  8675                           ; BSR set to: 0
  8676                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 268:     dbuf[1] 
      +                          = '\0';
  8677  007282  0E00               	movlw	0
  8678  007284  6F8F               	movwf	(_dbuf+1)& (0+255),b
  8679  007286                     
  8680                           ; BSR set to: 0
  8681                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 269:     return p
      +                          ad(fp, &dbuf[0], w);
  8682  007286  C01C  F011         	movff	ctoa@fp,pad@fp
  8683  00728A  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  8684  00728E  0E8E               	movlw	low _dbuf
  8685  007290  6E13               	movwf	pad@buf^0,c
  8686  007292  0E00               	movlw	high _dbuf
  8687  007294  6E14               	movwf	(pad@buf+1)^0,c
  8688  007296  C01F  F015         	movff	ctoa@w,pad@p
  8689  00729A  C020  F016         	movff	ctoa@w+1,pad@p+1
  8690  00729E  EC5E  F03C         	call	_pad	;wreg free
  8691  0072A2  C011  F01C         	movff	?_pad,?_ctoa
  8692  0072A6  C012  F01D         	movff	?_pad+1,?_ctoa+1
  8693  0072AA  0012               	return		;funcret
  8694  0072AC  FFFF               	dw	65535	; errata NOP
  8695  0072AE                     __end_of_ctoa:
  8696                           	callstack 0
  8697                           
  8698 ;; *************** function _pad *****************
  8699 ;; Defined at:
  8700 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  8701 ;; Parameters:    Size  Location     Type
  8702 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  8703 ;;		 -> vsnprintf@f(6), 
  8704 ;;  buf             2   18[COMRAM] PTR unsigned char 
  8705 ;;		 -> dbuf(32), 
  8706 ;;  p               2   20[COMRAM] int 
  8707 ;; Auto vars:     Size  Location     Type
  8708 ;;  w               2   25[COMRAM] int 
  8709 ;;  i               2   23[COMRAM] int 
  8710 ;; Return value:  Size  Location     Type
  8711 ;;                  2   16[COMRAM] int 
  8712 ;; Registers used:
  8713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8714 ;; Tracked objects:
  8715 ;;		On entry : 0/0
  8716 ;;		On exit  : 0/0
  8717 ;;		Unchanged: 0/0
  8718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8719 ;;      Params:         6       0       0       0       0       0       0
  8720 ;;      Locals:         4       0       0       0       0       0       0
  8721 ;;      Temps:          1       0       0       0       0       0       0
  8722 ;;      Totals:        11       0       0       0       0       0       0
  8723 ;;Total ram usage:       11 bytes
  8724 ;; Hardware stack levels used:    1
  8725 ;; Hardware stack levels required when called:    4
  8726 ;; This function calls:
  8727 ;;		_fputc
  8728 ;;		_fputs
  8729 ;;		_strlen
  8730 ;; This function is called by:
  8731 ;;		_ctoa
  8732 ;;		_dtoa
  8733 ;;		_otoa
  8734 ;;		_utoa
  8735 ;;		_xtoa
  8736 ;; This function uses a non-reentrant model
  8737 ;;
  8738                           
  8739                           	psect	text24
  8740  0078BC                     __ptext24:
  8741                           	callstack 0
  8742  0078BC                     _pad:
  8743                           	callstack 0
  8744  0078BC  FFFF               	dw	65535	; assembler added errata NOP
  8745  0078BE                     
  8746                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8747  0078BE  0100               	movlb	0	; () banked
  8748  0078C0  A18A               	btfss	_flags& (0+255),0,b
  8749  0078C2  EF65  F03C         	goto	u3451
  8750  0078C6  EF68  F03C         	goto	u3450
  8751  0078CA                     u3451:
  8752  0078CA  FFFF               	dw	65535	; assembler added errata NOP
  8753  0078CC  EF73  F03C         	goto	l3509
  8754  0078D0                     u3450:
  8755  0078D0  FFFF               	dw	65535	; assembler added errata NOP
  8756  0078D2                     
  8757                           ; BSR set to: 0
  8758                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8759  0078D2  C013  F00A         	movff	pad@buf,fputs@s
  8760  0078D6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8761  0078DA  C011  F00C         	movff	pad@fp,fputs@fp
  8762  0078DE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8763  0078E2  EC9E  F038         	call	_fputs	;wreg free
  8764  0078E6                     l3509:
  8765  0078E6  FFFF               	dw	65535	; assembler added errata NOP
  8766                           
  8767                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8768  0078E8  BE16               	btfsc	(pad@p+1)^0,7,c
  8769  0078EA  EF79  F03C         	goto	u3461
  8770  0078EE  EF7C  F03C         	goto	u3460
  8771  0078F2                     u3461:
  8772  0078F2  FFFF               	dw	65535	; assembler added errata NOP
  8773  0078F4  EF83  F03C         	goto	l3513
  8774  0078F8                     u3460:
  8775  0078F8  FFFF               	dw	65535	; assembler added errata NOP
  8776  0078FA  C015  F01A         	movff	pad@p,pad@w
  8777  0078FE  C016  F01B         	movff	pad@p+1,pad@w+1
  8778  007902  EF88  F03C         	goto	l1046
  8779  007906                     l3513:
  8780  007906  FFFF               	dw	65535	; assembler added errata NOP
  8781  007908  0E00               	movlw	0
  8782  00790A  6E1B               	movwf	(pad@w+1)^0,c
  8783  00790C  0E00               	movlw	0
  8784  00790E  6E1A               	movwf	pad@w^0,c
  8785  007910                     l1046:
  8786  007910  FFFF               	dw	65535	; assembler added errata NOP
  8787                           
  8788                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8789  007912  0E00               	movlw	0
  8790  007914  6E19               	movwf	(pad@i+1)^0,c
  8791  007916  0E00               	movlw	0
  8792  007918  6E18               	movwf	pad@i^0,c
  8793                           
  8794                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8795  00791A  EF9C  F03C         	goto	l3519
  8796  00791E                     l3515:
  8797  00791E  FFFF               	dw	65535	; assembler added errata NOP
  8798                           
  8799                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8800  007920  0E00               	movlw	0
  8801  007922  6E02               	movwf	(fputc@c+1)^0,c
  8802  007924  0E20               	movlw	32
  8803  007926  6E01               	movwf	fputc@c^0,c
  8804  007928  C011  F003         	movff	pad@fp,fputc@fp
  8805  00792C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  8806  007930  ECED  F03B         	call	_fputc	;wreg free
  8807  007934                     
  8808                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8809  007934  4A18               	infsnz	pad@i^0,f,c
  8810  007936  2A19               	incf	(pad@i+1)^0,f,c
  8811  007938                     l3519:
  8812  007938  FFFF               	dw	65535	; assembler added errata NOP
  8813                           
  8814                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8815  00793A  501A               	movf	pad@w^0,w,c
  8816  00793C  5C18               	subwf	pad@i^0,w,c
  8817  00793E  5019               	movf	(pad@i+1)^0,w,c
  8818  007940  0A80               	xorlw	128
  8819  007942  6E17               	movwf	??_pad^0,c
  8820  007944  501B               	movf	(pad@w+1)^0,w,c
  8821  007946  0A80               	xorlw	128
  8822  007948  5817               	subwfb	??_pad^0,w,c
  8823  00794A  A0D8               	btfss	status,0,c
  8824  00794C  EFAA  F03C         	goto	u3471
  8825  007950  EFAD  F03C         	goto	u3470
  8826  007954                     u3471:
  8827  007954  FFFF               	dw	65535	; assembler added errata NOP
  8828  007956  EF8F  F03C         	goto	l3515
  8829  00795A                     u3470:
  8830  00795A  FFFF               	dw	65535	; assembler added errata NOP
  8831  00795C                     
  8832                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8833  00795C  0100               	movlb	0	; () banked
  8834  00795E  B18A               	btfsc	_flags& (0+255),0,b
  8835  007960  EFB4  F03C         	goto	u3481
  8836  007964  EFB7  F03C         	goto	u3480
  8837  007968                     u3481:
  8838  007968  FFFF               	dw	65535	; assembler added errata NOP
  8839  00796A  EFC2  F03C         	goto	l3523
  8840  00796E                     u3480:
  8841  00796E  FFFF               	dw	65535	; assembler added errata NOP
  8842  007970                     
  8843                           ; BSR set to: 0
  8844                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8845  007970  C013  F00A         	movff	pad@buf,fputs@s
  8846  007974  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8847  007978  C011  F00C         	movff	pad@fp,fputs@fp
  8848  00797C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8849  007980  EC9E  F038         	call	_fputs	;wreg free
  8850  007984                     l3523:
  8851  007984  FFFF               	dw	65535	; assembler added errata NOP
  8852                           
  8853                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  8854  007986  C013  F001         	movff	pad@buf,strlen@s
  8855  00798A  C014  F002         	movff	pad@buf+1,strlen@s+1
  8856  00798E  ECC6  F038         	call	_strlen	;wreg free
  8857  007992  501A               	movf	pad@w^0,w,c
  8858  007994  2401               	addwf	?_strlen^0,w,c
  8859  007996  6E11               	movwf	?_pad^0,c
  8860  007998  501B               	movf	(pad@w+1)^0,w,c
  8861  00799A  2002               	addwfc	(?_strlen+1)^0,w,c
  8862  00799C  6E12               	movwf	(?_pad+1)^0,c
  8863  00799E  0012               	return		;funcret
  8864  0079A0  FFFF               	dw	65535	; errata NOP
  8865  0079A2                     __end_of_pad:
  8866                           	callstack 0
  8867                           
  8868 ;; *************** function _strlen *****************
  8869 ;; Defined at:
  8870 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  8871 ;; Parameters:    Size  Location     Type
  8872 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8873 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), STR_6(49), 
  8874 ;;		 -> STR_5(55), STR_4(39), STR_3(9), STR_2(63), 
  8875 ;;		 -> STR_1(47), 
  8876 ;; Auto vars:     Size  Location     Type
  8877 ;;  a               2    2[COMRAM] PTR const unsigned char 
  8878 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), STR_6(49), 
  8879 ;;		 -> STR_5(55), STR_4(39), STR_3(9), STR_2(63), 
  8880 ;;		 -> STR_1(47), 
  8881 ;; Return value:  Size  Location     Type
  8882 ;;                  2    0[COMRAM] unsigned int 
  8883 ;; Registers used:
  8884 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8885 ;; Tracked objects:
  8886 ;;		On entry : 0/0
  8887 ;;		On exit  : 0/0
  8888 ;;		Unchanged: 0/0
  8889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8890 ;;      Params:         2       0       0       0       0       0       0
  8891 ;;      Locals:         2       0       0       0       0       0       0
  8892 ;;      Temps:          0       0       0       0       0       0       0
  8893 ;;      Totals:         4       0       0       0       0       0       0
  8894 ;;Total ram usage:        4 bytes
  8895 ;; Hardware stack levels used:    1
  8896 ;; Hardware stack levels required when called:    1
  8897 ;; This function calls:
  8898 ;;		Nothing
  8899 ;; This function is called by:
  8900 ;;		_pad
  8901 ;;		_stoa
  8902 ;; This function uses a non-reentrant model
  8903 ;;
  8904                           
  8905                           	psect	text25
  8906  00718C                     __ptext25:
  8907                           	callstack 0
  8908  00718C                     _strlen:
  8909                           	callstack 0
  8910  00718C  FFFF               	dw	65535	; assembler added errata NOP
  8911  00718E  C001  F003         	movff	strlen@s,strlen@a
  8912  007192  C002  F004         	movff	strlen@s+1,strlen@a+1
  8913  007196  EFD0  F038         	goto	l3371
  8914  00719A                     l3369:
  8915  00719A  FFFF               	dw	65535	; assembler added errata NOP
  8916  00719C  4A01               	infsnz	strlen@s^0,f,c
  8917  00719E  2A02               	incf	(strlen@s+1)^0,f,c
  8918  0071A0                     l3371:
  8919  0071A0  FFFF               	dw	65535	; assembler added errata NOP
  8920  0071A2  C001  FFF6         	movff	strlen@s,tblptrl
  8921  0071A6  C002  FFF7         	movff	strlen@s+1,tblptrh
  8922  0071AA  6AF8               	clrf	tblptru,c
  8923  0071AC  0E05               	movlw	(high __ramtop+-1)
  8924  0071AE  64F7               	cpfsgt	tblptrh,c
  8925  0071B0  D004               	bra	u3217
  8926  0071B2  0008               	tblrd		*
  8927  0071B4  FFFF               	dw	65535	; errata NOP
  8928  0071B6  50F5               	movf	tablat,w,c
  8929  0071B8  D005               	bra	u3210
  8930  0071BA                     u3217:
  8931  0071BA  CFF6 FFE1          	movff	tblptrl,fsr1l
  8932  0071BE  CFF7 FFE2          	movff	tblptrh,fsr1h
  8933  0071C2  50E7               	movf	indf1,w,c
  8934  0071C4                     u3210:
  8935  0071C4  0900               	iorlw	0
  8936  0071C6  A4D8               	btfss	status,2,c
  8937  0071C8  EFE8  F038         	goto	u3221
  8938  0071CC  EFEB  F038         	goto	u3220
  8939  0071D0                     u3221:
  8940  0071D0  FFFF               	dw	65535	; assembler added errata NOP
  8941  0071D2  EFCD  F038         	goto	l3369
  8942  0071D6                     u3220:
  8943  0071D6  FFFF               	dw	65535	; assembler added errata NOP
  8944  0071D8  5003               	movf	strlen@a^0,w,c
  8945  0071DA  5C01               	subwf	strlen@s^0,w,c
  8946  0071DC  6E01               	movwf	?_strlen^0,c
  8947  0071DE  5004               	movf	(strlen@a+1)^0,w,c
  8948  0071E0  5802               	subwfb	(strlen@s+1)^0,w,c
  8949  0071E2  6E02               	movwf	(?_strlen+1)^0,c
  8950  0071E4  0012               	return		;funcret
  8951  0071E6  FFFF               	dw	65535	; errata NOP
  8952  0071E8                     __end_of_strlen:
  8953                           	callstack 0
  8954                           
  8955 ;; *************** function _fputs *****************
  8956 ;; Defined at:
  8957 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  8958 ;; Parameters:    Size  Location     Type
  8959 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8960 ;;		 -> dbuf(32), 
  8961 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8962 ;;		 -> vsnprintf@f(6), 
  8963 ;; Auto vars:     Size  Location     Type
  8964 ;;  i               2   14[COMRAM] int 
  8965 ;;  c               1   13[COMRAM] unsigned char 
  8966 ;; Return value:  Size  Location     Type
  8967 ;;                  2    9[COMRAM] int 
  8968 ;; Registers used:
  8969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8970 ;; Tracked objects:
  8971 ;;		On entry : 0/0
  8972 ;;		On exit  : 0/0
  8973 ;;		Unchanged: 0/0
  8974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8975 ;;      Params:         4       0       0       0       0       0       0
  8976 ;;      Locals:         3       0       0       0       0       0       0
  8977 ;;      Temps:          0       0       0       0       0       0       0
  8978 ;;      Totals:         7       0       0       0       0       0       0
  8979 ;;Total ram usage:        7 bytes
  8980 ;; Hardware stack levels used:    1
  8981 ;; Hardware stack levels required when called:    3
  8982 ;; This function calls:
  8983 ;;		_fputc
  8984 ;; This function is called by:
  8985 ;;		_pad
  8986 ;; This function uses a non-reentrant model
  8987 ;;
  8988                           
  8989                           	psect	text26
  8990  00713C                     __ptext26:
  8991                           	callstack 0
  8992  00713C                     _fputs:
  8993                           	callstack 0
  8994  00713C  FFFF               	dw	65535	; assembler added errata NOP
  8995  00713E  0E00               	movlw	0
  8996  007140  6E10               	movwf	(fputs@i+1)^0,c
  8997  007142  0E00               	movlw	0
  8998  007144  6E0F               	movwf	fputs@i^0,c
  8999  007146  EFB1  F038         	goto	l3365
  9000  00714A                     l3361:
  9001  00714A  FFFF               	dw	65535	; assembler added errata NOP
  9002  00714C  C00E  F001         	movff	fputs@c,fputc@c
  9003  007150  6A02               	clrf	(fputc@c+1)^0,c
  9004  007152  C00C  F003         	movff	fputs@fp,fputc@fp
  9005  007156  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  9006  00715A  ECED  F03B         	call	_fputc	;wreg free
  9007  00715E  4A0F               	infsnz	fputs@i^0,f,c
  9008  007160  2A10               	incf	(fputs@i+1)^0,f,c
  9009  007162                     l3365:
  9010  007162  FFFF               	dw	65535	; assembler added errata NOP
  9011  007164  500F               	movf	fputs@i^0,w,c
  9012  007166  240A               	addwf	fputs@s^0,w,c
  9013  007168  6ED9               	movwf	fsr2l,c
  9014  00716A  5010               	movf	(fputs@i+1)^0,w,c
  9015  00716C  200B               	addwfc	(fputs@s+1)^0,w,c
  9016  00716E  6EDA               	movwf	fsr2h,c
  9017  007170  50DF               	movf	indf2,w,c
  9018  007172  6E0E               	movwf	fputs@c^0,c
  9019  007174  500E               	movf	fputs@c^0,w,c
  9020  007176  A4D8               	btfss	status,2,c
  9021  007178  EFC0  F038         	goto	u3201
  9022  00717C  EFC3  F038         	goto	u3200
  9023  007180                     u3201:
  9024  007180  FFFF               	dw	65535	; assembler added errata NOP
  9025  007182  EFA5  F038         	goto	l3361
  9026  007186                     u3200:
  9027  007186  FFFF               	dw	65535	; assembler added errata NOP
  9028  007188  0012               	return		;funcret
  9029  00718A  FFFF               	dw	65535	; errata NOP
  9030  00718C                     __end_of_fputs:
  9031                           	callstack 0
  9032                           
  9033 ;; *************** function _fputc *****************
  9034 ;; Defined at:
  9035 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  9036 ;; Parameters:    Size  Location     Type
  9037 ;;  c               2    0[COMRAM] int 
  9038 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  9039 ;;		 -> vsnprintf@f(6), 
  9040 ;; Auto vars:     Size  Location     Type
  9041 ;;		None
  9042 ;; Return value:  Size  Location     Type
  9043 ;;                  2    0[COMRAM] int 
  9044 ;; Registers used:
  9045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9046 ;; Tracked objects:
  9047 ;;		On entry : 0/0
  9048 ;;		On exit  : 0/0
  9049 ;;		Unchanged: 0/0
  9050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9051 ;;      Params:         4       0       0       0       0       0       0
  9052 ;;      Locals:         0       0       0       0       0       0       0
  9053 ;;      Temps:          5       0       0       0       0       0       0
  9054 ;;      Totals:         9       0       0       0       0       0       0
  9055 ;;Total ram usage:        9 bytes
  9056 ;; Hardware stack levels used:    1
  9057 ;; Hardware stack levels required when called:    2
  9058 ;; This function calls:
  9059 ;;		_putch
  9060 ;; This function is called by:
  9061 ;;		_pad
  9062 ;;		_stoa
  9063 ;;		_vfpfcnvrt
  9064 ;;		_fputs
  9065 ;; This function uses a non-reentrant model
  9066 ;;
  9067                           
  9068                           	psect	text27
  9069  0077DA                     __ptext27:
  9070                           	callstack 0
  9071  0077DA                     _fputc:
  9072                           	callstack 0
  9073  0077DA  FFFF               	dw	65535	; assembler added errata NOP
  9074  0077DC  5003               	movf	fputc@fp^0,w,c
  9075  0077DE  1004               	iorwf	(fputc@fp+1)^0,w,c
  9076  0077E0  B4D8               	btfsc	status,2,c
  9077  0077E2  EFF5  F03B         	goto	u3161
  9078  0077E6  EFF8  F03B         	goto	u3160
  9079  0077EA                     u3161:
  9080  0077EA  FFFF               	dw	65535	; assembler added errata NOP
  9081  0077EC  EF03  F03C         	goto	l3349
  9082  0077F0                     u3160:
  9083  0077F0  FFFF               	dw	65535	; assembler added errata NOP
  9084  0077F2  5003               	movf	fputc@fp^0,w,c
  9085  0077F4  1004               	iorwf	(fputc@fp+1)^0,w,c
  9086  0077F6  A4D8               	btfss	status,2,c
  9087  0077F8  EF00  F03C         	goto	u3171
  9088  0077FC  EF03  F03C         	goto	u3170
  9089  007800                     u3171:
  9090  007800  FFFF               	dw	65535	; assembler added errata NOP
  9091  007802  EF09  F03C         	goto	l3351
  9092  007806                     u3170:
  9093  007806                     l3349:
  9094  007806  FFFF               	dw	65535	; assembler added errata NOP
  9095  007808  5001               	movf	fputc@c^0,w,c
  9096  00780A  ECFD  F01F         	call	_putch
  9097  00780E  EF5B  F03C         	goto	l1328
  9098  007812                     l3351:
  9099  007812  FFFF               	dw	65535	; assembler added errata NOP
  9100  007814  EE20 F004          	lfsr	2,4
  9101  007818  5003               	movf	fputc@fp^0,w,c
  9102  00781A  26D9               	addwf	fsr2l,f,c
  9103  00781C  5004               	movf	(fputc@fp+1)^0,w,c
  9104  00781E  22DA               	addwfc	fsr2h,f,c
  9105  007820  50DE               	movf	postinc2,w,c
  9106  007822  10DE               	iorwf	postinc2,w,c
  9107  007824  B4D8               	btfsc	status,2,c
  9108  007826  EF17  F03C         	goto	u3181
  9109  00782A  EF1A  F03C         	goto	u3180
  9110  00782E                     u3181:
  9111  00782E  FFFF               	dw	65535	; assembler added errata NOP
  9112  007830  EF37  F03C         	goto	l3355
  9113  007834                     u3180:
  9114  007834  FFFF               	dw	65535	; assembler added errata NOP
  9115  007836  EE20 F004          	lfsr	2,4
  9116  00783A  5003               	movf	fputc@fp^0,w,c
  9117  00783C  26D9               	addwf	fsr2l,f,c
  9118  00783E  5004               	movf	(fputc@fp+1)^0,w,c
  9119  007840  22DA               	addwfc	fsr2h,f,c
  9120  007842  EE10 F002          	lfsr	1,2
  9121  007846  5003               	movf	fputc@fp^0,w,c
  9122  007848  26E1               	addwf	fsr1l,f,c
  9123  00784A  5004               	movf	(fputc@fp+1)^0,w,c
  9124  00784C  22E2               	addwfc	fsr1h,f,c
  9125  00784E  50DE               	movf	postinc2,w,c
  9126  007850  5CE6               	subwf	postinc1,w,c
  9127  007852  50E6               	movf	postinc1,w,c
  9128  007854  0A80               	xorlw	128
  9129  007856  6E09               	movwf	(??_fputc+4)^0,c
  9130  007858  50DE               	movf	postinc2,w,c
  9131  00785A  0A80               	xorlw	128
  9132  00785C  5809               	subwfb	(??_fputc+4)^0,w,c
  9133  00785E  B0D8               	btfsc	status,0,c
  9134  007860  EF34  F03C         	goto	u3191
  9135  007864  EF37  F03C         	goto	u3190
  9136  007868                     u3191:
  9137  007868  FFFF               	dw	65535	; assembler added errata NOP
  9138  00786A  EF5B  F03C         	goto	l1328
  9139  00786E                     u3190:
  9140  00786E                     l3355:
  9141  00786E  FFFF               	dw	65535	; assembler added errata NOP
  9142  007870  EE20 F002          	lfsr	2,2
  9143  007874  5003               	movf	fputc@fp^0,w,c
  9144  007876  26D9               	addwf	fsr2l,f,c
  9145  007878  5004               	movf	(fputc@fp+1)^0,w,c
  9146  00787A  22DA               	addwfc	fsr2h,f,c
  9147  00787C  CFDE F005          	movff	postinc2,??_fputc
  9148  007880  CFDD F006          	movff	postdec2,??_fputc+1
  9149  007884  C003  FFD9         	movff	fputc@fp,fsr2l
  9150  007888  C004  FFDA         	movff	fputc@fp+1,fsr2h
  9151  00788C  CFDE F007          	movff	postinc2,??_fputc+2
  9152  007890  CFDD F008          	movff	postdec2,??_fputc+3
  9153  007894  5005               	movf	??_fputc^0,w,c
  9154  007896  2407               	addwf	(??_fputc+2)^0,w,c
  9155  007898  6ED9               	movwf	fsr2l,c
  9156  00789A  5006               	movf	(??_fputc+1)^0,w,c
  9157  00789C  2008               	addwfc	(??_fputc+3)^0,w,c
  9158  00789E  6EDA               	movwf	fsr2h,c
  9159  0078A0  C001  FFDF         	movff	fputc@c,indf2
  9160  0078A4  EE20 F002          	lfsr	2,2
  9161  0078A8  5003               	movf	fputc@fp^0,w,c
  9162  0078AA  26D9               	addwf	fsr2l,f,c
  9163  0078AC  5004               	movf	(fputc@fp+1)^0,w,c
  9164  0078AE  22DA               	addwfc	fsr2h,f,c
  9165  0078B0  2ADE               	incf	postinc2,f,c
  9166  0078B2  0E00               	movlw	0
  9167  0078B4  22DD               	addwfc	postdec2,f,c
  9168  0078B6                     l1328:
  9169  0078B6  FFFF               	dw	65535	; assembler added errata NOP
  9170  0078B8  0012               	return		;funcret
  9171  0078BA  FFFF               	dw	65535	; errata NOP
  9172  0078BC                     __end_of_fputc:
  9173                           	callstack 0
  9174                           
  9175 ;; *************** function _putch *****************
  9176 ;; Defined at:
  9177 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  9178 ;; Parameters:    Size  Location     Type
  9179 ;;  c               1    wreg     unsigned char 
  9180 ;; Auto vars:     Size  Location     Type
  9181 ;;  c               1    0[COMRAM] unsigned char 
  9182 ;; Return value:  Size  Location     Type
  9183 ;;                  1    wreg      void 
  9184 ;; Registers used:
  9185 ;;		wreg
  9186 ;; Tracked objects:
  9187 ;;		On entry : 0/0
  9188 ;;		On exit  : 0/0
  9189 ;;		Unchanged: 0/0
  9190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9191 ;;      Params:         0       0       0       0       0       0       0
  9192 ;;      Locals:         0       0       0       0       0       0       0
  9193 ;;      Temps:          0       0       0       0       0       0       0
  9194 ;;      Totals:         0       0       0       0       0       0       0
  9195 ;;Total ram usage:        0 bytes
  9196 ;; Hardware stack levels used:    1
  9197 ;; Hardware stack levels required when called:    1
  9198 ;; This function calls:
  9199 ;;		Nothing
  9200 ;; This function is called by:
  9201 ;;		_fputc
  9202 ;; This function uses a non-reentrant model
  9203 ;;
  9204                           
  9205                           	psect	text28
  9206  003FFA                     __ptext28:
  9207                           	callstack 0
  9208  003FFA                     _putch:
  9209                           	callstack 0
  9210  003FFA  FFFF               	dw	65535	; assembler added errata NOP
  9211  003FFC  0012               	return		;funcret
  9212  003FFE  FFFF               	dw	65535	; errata NOP
  9213  004000                     __end_of_putch:
  9214                           	callstack 0
  9215                           
  9216 ;; *************** function _atoi *****************
  9217 ;; Defined at:
  9218 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  9219 ;; Parameters:    Size  Location     Type
  9220 ;;  s               2    7[COMRAM] PTR const unsigned char 
  9221 ;;		 -> STR_8(3), 
  9222 ;; Auto vars:     Size  Location     Type
  9223 ;;  n               2   20[COMRAM] int 
  9224 ;;  neg             2   13[COMRAM] int 
  9225 ;; Return value:  Size  Location     Type
  9226 ;;                  2    7[COMRAM] int 
  9227 ;; Registers used:
  9228 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9229 ;; Tracked objects:
  9230 ;;		On entry : 0/0
  9231 ;;		On exit  : 0/0
  9232 ;;		Unchanged: 0/0
  9233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9234 ;;      Params:         2       0       0       0       0       0       0
  9235 ;;      Locals:         9       0       0       0       0       0       0
  9236 ;;      Temps:          4       0       0       0       0       0       0
  9237 ;;      Totals:        15       0       0       0       0       0       0
  9238 ;;Total ram usage:       15 bytes
  9239 ;; Hardware stack levels used:    1
  9240 ;; Hardware stack levels required when called:    2
  9241 ;; This function calls:
  9242 ;;		___wmul
  9243 ;;		_isdigit
  9244 ;;		_isspace
  9245 ;; This function is called by:
  9246 ;;		_vfpfcnvrt
  9247 ;; This function uses a non-reentrant model
  9248 ;;
  9249                           
  9250                           	psect	text29
  9251  003750                     __ptext29:
  9252                           	callstack 0
  9253  003750                     _atoi:
  9254                           	callstack 0
  9255  003750  FFFF               	dw	65535	; assembler added errata NOP
  9256  003752  0E00               	movlw	0
  9257  003754  6E16               	movwf	(atoi@n+1)^0,c
  9258  003756  0E00               	movlw	0
  9259  003758  6E15               	movwf	atoi@n^0,c
  9260  00375A  0E00               	movlw	0
  9261  00375C  6E0F               	movwf	(atoi@neg+1)^0,c
  9262  00375E  0E00               	movlw	0
  9263  003760  6E0E               	movwf	atoi@neg^0,c
  9264  003762  EFB6  F01B         	goto	l3837
  9265  003766                     l3835:
  9266  003766  FFFF               	dw	65535	; assembler added errata NOP
  9267  003768  4A08               	infsnz	atoi@s^0,f,c
  9268  00376A  2A09               	incf	(atoi@s+1)^0,f,c
  9269  00376C                     l3837:
  9270  00376C  FFFF               	dw	65535	; assembler added errata NOP
  9271  00376E  0E01               	movlw	1
  9272  003770  6E14               	movwf	_atoi$1628^0,c
  9273  003772  C008  FFF6         	movff	atoi@s,tblptrl
  9274  003776  C009  FFF7         	movff	atoi@s+1,tblptrh
  9275  00377A                     	if	0	;tblptru may be non-zero
  9276  00377A                     	endif
  9277  00377A                     	if	0	;tblptru may be non-zero
  9278  00377A                     	endif
  9279  00377A  0008               	tblrd		*
  9280  00377C  FFFF               	dw	65535	; errata NOP
  9281  00377E  50F5               	movf	tablat,w,c
  9282  003780  0A20               	xorlw	32
  9283  003782  B4D8               	btfsc	status,2,c
  9284  003784  EFC6  F01B         	goto	u4211
  9285  003788  EFC9  F01B         	goto	u4210
  9286  00378C                     u4211:
  9287  00378C  FFFF               	dw	65535	; assembler added errata NOP
  9288  00378E  EFEA  F01B         	goto	l3845
  9289  003792                     u4210:
  9290  003792  FFFF               	dw	65535	; assembler added errata NOP
  9291  003794  0EF7               	movlw	247
  9292  003796  6E0A               	movwf	??_atoi^0,c
  9293  003798  0EFF               	movlw	255
  9294  00379A  6E0B               	movwf	(??_atoi+1)^0,c
  9295  00379C  C008  FFF6         	movff	atoi@s,tblptrl
  9296  0037A0  C009  FFF7         	movff	atoi@s+1,tblptrh
  9297  0037A4                     	if	0	;tblptru may be non-zero
  9298  0037A4                     	endif
  9299  0037A4                     	if	0	;tblptru may be non-zero
  9300  0037A4                     	endif
  9301  0037A4  0008               	tblrd		*
  9302  0037A6  FFFF               	dw	65535	; errata NOP
  9303  0037A8  50F5               	movf	tablat,w,c
  9304  0037AA  6E0C               	movwf	(??_atoi+2)^0,c
  9305  0037AC  6A0D               	clrf	(??_atoi+3)^0,c
  9306  0037AE  500A               	movf	??_atoi^0,w,c
  9307  0037B0  260C               	addwf	(??_atoi+2)^0,f,c
  9308  0037B2  500B               	movf	(??_atoi+1)^0,w,c
  9309  0037B4  220D               	addwfc	(??_atoi+3)^0,f,c
  9310  0037B6  500D               	movf	(??_atoi+3)^0,w,c
  9311  0037B8  E10A               	bnz	u4220
  9312  0037BA  0E05               	movlw	5
  9313  0037BC  5C0C               	subwf	(??_atoi+2)^0,w,c
  9314  0037BE  A0D8               	btfss	status,0,c
  9315  0037C0  EFE4  F01B         	goto	u4221
  9316  0037C4  EFE7  F01B         	goto	u4220
  9317  0037C8                     u4221:
  9318  0037C8  FFFF               	dw	65535	; assembler added errata NOP
  9319  0037CA  EFEA  F01B         	goto	l3845
  9320  0037CE                     u4220:
  9321  0037CE  FFFF               	dw	65535	; assembler added errata NOP
  9322  0037D0  0E00               	movlw	0
  9323  0037D2  6E14               	movwf	_atoi$1628^0,c
  9324  0037D4                     l3845:
  9325  0037D4  FFFF               	dw	65535	; assembler added errata NOP
  9326  0037D6  C014  F010         	movff	_atoi$1628,_atoi$1627
  9327  0037DA  6A11               	clrf	(_atoi$1627+1)^0,c
  9328  0037DC  5010               	movf	_atoi$1627^0,w,c
  9329  0037DE  1011               	iorwf	(_atoi$1627+1)^0,w,c
  9330  0037E0  A4D8               	btfss	status,2,c
  9331  0037E2  EFF5  F01B         	goto	u4231
  9332  0037E6  EFF8  F01B         	goto	u4230
  9333  0037EA                     u4231:
  9334  0037EA  FFFF               	dw	65535	; assembler added errata NOP
  9335  0037EC  EFB3  F01B         	goto	l3835
  9336  0037F0                     u4230:
  9337  0037F0  FFFF               	dw	65535	; assembler added errata NOP
  9338  0037F2  EF05  F01C         	goto	l3855
  9339  0037F6                     l3851:
  9340  0037F6  FFFF               	dw	65535	; assembler added errata NOP
  9341  0037F8  0E00               	movlw	0
  9342  0037FA  6E0F               	movwf	(atoi@neg+1)^0,c
  9343  0037FC  0E01               	movlw	1
  9344  0037FE  6E0E               	movwf	atoi@neg^0,c
  9345  003800                     l3853:
  9346  003800  FFFF               	dw	65535	; assembler added errata NOP
  9347  003802  4A08               	infsnz	atoi@s^0,f,c
  9348  003804  2A09               	incf	(atoi@s+1)^0,f,c
  9349  003806  EF3F  F01C         	goto	l3861
  9350  00380A                     l3855:
  9351  00380A  FFFF               	dw	65535	; assembler added errata NOP
  9352  00380C  C008  FFF6         	movff	atoi@s,tblptrl
  9353  003810  C009  FFF7         	movff	atoi@s+1,tblptrh
  9354  003814                     	if	0	;tblptru may be non-zero
  9355  003814                     	endif
  9356  003814                     	if	0	;tblptru may be non-zero
  9357  003814                     	endif
  9358  003814  0008               	tblrd		*
  9359  003816  FFFF               	dw	65535	; errata NOP
  9360  003818  50F5               	movf	tablat,w,c
  9361  00381A  6E0A               	movwf	??_atoi^0,c
  9362  00381C  6A0B               	clrf	(??_atoi+1)^0,c
  9363                           
  9364                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9365                           ; Switch size 1, requested type "simple"
  9366                           ; Number of cases is 1, Range of values is 0 to 0
  9367                           ; switch strategies available:
  9368                           ; Name         Instructions Cycles
  9369                           ; simple_byte            4     3 (average)
  9370                           ;	Chosen strategy is simple_byte
  9371  00381E  500B               	movf	(??_atoi+1)^0,w,c
  9372  003820  0A00               	xorlw	0	; case 0
  9373  003822  B4D8               	btfsc	status,2,c
  9374  003824  EF16  F01C         	goto	l5347
  9375  003828  EF3F  F01C         	goto	l3861
  9376  00382C                     l5347:
  9377  00382C  FFFF               	dw	65535	; assembler added errata NOP
  9378                           
  9379                           ; Switch size 1, requested type "simple"
  9380                           ; Number of cases is 2, Range of values is 43 to 45
  9381                           ; switch strategies available:
  9382                           ; Name         Instructions Cycles
  9383                           ; simple_byte            7     4 (average)
  9384                           ;	Chosen strategy is simple_byte
  9385  00382E  500A               	movf	??_atoi^0,w,c
  9386  003830  0A2B               	xorlw	43	; case 43
  9387  003832  B4D8               	btfsc	status,2,c
  9388  003834  EF00  F01C         	goto	l3853
  9389  003838  0A06               	xorlw	6	; case 45
  9390  00383A  B4D8               	btfsc	status,2,c
  9391  00383C  EFFB  F01B         	goto	l3851
  9392  003840  EF3F  F01C         	goto	l3861
  9393  003844                     l3857:
  9394  003844  FFFF               	dw	65535	; assembler added errata NOP
  9395  003846  C015  F001         	movff	atoi@n,___wmul@multiplier
  9396  00384A  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  9397  00384E  0E00               	movlw	0
  9398  003850  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9399  003852  0E0A               	movlw	10
  9400  003854  6E03               	movwf	___wmul@multiplicand^0,c
  9401  003856  EC2B  F037         	call	___wmul	;wreg free
  9402  00385A  C008  FFF6         	movff	atoi@s,tblptrl
  9403  00385E  C009  FFF7         	movff	atoi@s+1,tblptrh
  9404  003862                     	if	0	;tblptru may be non-zero
  9405  003862                     	endif
  9406  003862                     	if	0	;tblptru may be non-zero
  9407  003862                     	endif
  9408  003862  0008               	tblrd		*
  9409  003864  FFFF               	dw	65535	; errata NOP
  9410  003866  50F5               	movf	tablat,w,c
  9411  003868  5E01               	subwf	?___wmul^0,f,c
  9412  00386A  0E00               	movlw	0
  9413  00386C  5A02               	subwfb	(?___wmul+1)^0,f,c
  9414  00386E  0E30               	movlw	48
  9415  003870  2401               	addwf	?___wmul^0,w,c
  9416  003872  6E15               	movwf	atoi@n^0,c
  9417  003874  0E00               	movlw	0
  9418  003876  2002               	addwfc	(?___wmul+1)^0,w,c
  9419  003878  6E16               	movwf	(atoi@n+1)^0,c
  9420  00387A  EF00  F01C         	goto	l3853
  9421  00387E                     l3861:
  9422  00387E  FFFF               	dw	65535	; assembler added errata NOP
  9423  003880  0ED0               	movlw	208
  9424  003882  6E0A               	movwf	??_atoi^0,c
  9425  003884  0EFF               	movlw	255
  9426  003886  6E0B               	movwf	(??_atoi+1)^0,c
  9427  003888  C008  FFF6         	movff	atoi@s,tblptrl
  9428  00388C  C009  FFF7         	movff	atoi@s+1,tblptrh
  9429  003890                     	if	0	;tblptru may be non-zero
  9430  003890                     	endif
  9431  003890                     	if	0	;tblptru may be non-zero
  9432  003890                     	endif
  9433  003890  0008               	tblrd		*
  9434  003892  FFFF               	dw	65535	; errata NOP
  9435  003894  50F5               	movf	tablat,w,c
  9436  003896  6E0C               	movwf	(??_atoi+2)^0,c
  9437  003898  6A0D               	clrf	(??_atoi+3)^0,c
  9438  00389A  500A               	movf	??_atoi^0,w,c
  9439  00389C  260C               	addwf	(??_atoi+2)^0,f,c
  9440  00389E  500B               	movf	(??_atoi+1)^0,w,c
  9441  0038A0  220D               	addwfc	(??_atoi+3)^0,f,c
  9442  0038A2  500D               	movf	(??_atoi+3)^0,w,c
  9443  0038A4  E10B               	bnz	u4240
  9444  0038A6  0E0A               	movlw	10
  9445  0038A8  5C0C               	subwf	(??_atoi+2)^0,w,c
  9446  0038AA  A0D8               	btfss	status,0,c
  9447  0038AC  EF5A  F01C         	goto	u4241
  9448  0038B0  EF5E  F01C         	goto	u4240
  9449  0038B4                     u4241:
  9450  0038B4  FFFF               	dw	65535	; assembler added errata NOP
  9451  0038B6  0E01               	movlw	1
  9452  0038B8  EF60  F01C         	goto	u4250
  9453  0038BC                     u4240:
  9454  0038BC  FFFF               	dw	65535	; assembler added errata NOP
  9455  0038BE  0E00               	movlw	0
  9456  0038C0                     u4250:
  9457  0038C0  FFFF               	dw	65535	; assembler added errata NOP
  9458  0038C2  6E12               	movwf	_atoi$1629^0,c
  9459  0038C4  6A13               	clrf	(_atoi$1629+1)^0,c
  9460  0038C6  5012               	movf	_atoi$1629^0,w,c
  9461  0038C8  1013               	iorwf	(_atoi$1629+1)^0,w,c
  9462  0038CA  A4D8               	btfss	status,2,c
  9463  0038CC  EF6A  F01C         	goto	u4261
  9464  0038D0  EF6D  F01C         	goto	u4260
  9465  0038D4                     u4261:
  9466  0038D4  FFFF               	dw	65535	; assembler added errata NOP
  9467  0038D6  EF22  F01C         	goto	l3857
  9468  0038DA                     u4260:
  9469  0038DA  FFFF               	dw	65535	; assembler added errata NOP
  9470  0038DC  500E               	movf	atoi@neg^0,w,c
  9471  0038DE  100F               	iorwf	(atoi@neg+1)^0,w,c
  9472  0038E0  A4D8               	btfss	status,2,c
  9473  0038E2  EF75  F01C         	goto	u4271
  9474  0038E6  EF78  F01C         	goto	u4270
  9475  0038EA                     u4271:
  9476  0038EA  FFFF               	dw	65535	; assembler added errata NOP
  9477  0038EC  EF87  F01C         	goto	l1285
  9478  0038F0                     u4270:
  9479  0038F0  FFFF               	dw	65535	; assembler added errata NOP
  9480  0038F2  C015  F00A         	movff	atoi@n,??_atoi
  9481  0038F6  C016  F00B         	movff	atoi@n+1,??_atoi+1
  9482  0038FA  1E0A               	comf	??_atoi^0,f,c
  9483  0038FC  1E0B               	comf	(??_atoi+1)^0,f,c
  9484  0038FE  4A0A               	infsnz	??_atoi^0,f,c
  9485  003900  2A0B               	incf	(??_atoi+1)^0,f,c
  9486  003902  C00A  F008         	movff	??_atoi,?_atoi
  9487  003906  C00B  F009         	movff	??_atoi+1,?_atoi+1
  9488  00390A  EF8C  F01C         	goto	l1288
  9489  00390E                     l1285:
  9490  00390E  FFFF               	dw	65535	; assembler added errata NOP
  9491  003910  C015  F008         	movff	atoi@n,?_atoi
  9492  003914  C016  F009         	movff	atoi@n+1,?_atoi+1
  9493  003918                     l1288:
  9494  003918  FFFF               	dw	65535	; assembler added errata NOP
  9495  00391A  0012               	return		;funcret
  9496  00391C  FFFF               	dw	65535	; errata NOP
  9497  00391E                     __end_of_atoi:
  9498                           	callstack 0
  9499                           
  9500 ;; *************** function _isspace *****************
  9501 ;; Defined at:
  9502 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
  9503 ;; Parameters:    Size  Location     Type
  9504 ;;  c               2    0[COMRAM] int 
  9505 ;; Auto vars:     Size  Location     Type
  9506 ;;		None
  9507 ;; Return value:  Size  Location     Type
  9508 ;;                  2    0[COMRAM] int 
  9509 ;; Registers used:
  9510 ;;		wreg, status,2, status,0
  9511 ;; Tracked objects:
  9512 ;;		On entry : 0/0
  9513 ;;		On exit  : 0/0
  9514 ;;		Unchanged: 0/0
  9515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9516 ;;      Params:         2       0       0       0       0       0       0
  9517 ;;      Locals:         1       0       0       0       0       0       0
  9518 ;;      Temps:          4       0       0       0       0       0       0
  9519 ;;      Totals:         7       0       0       0       0       0       0
  9520 ;;Total ram usage:        7 bytes
  9521 ;; Hardware stack levels used:    1
  9522 ;; Hardware stack levels required when called:    1
  9523 ;; This function calls:
  9524 ;;		Nothing
  9525 ;; This function is called by:
  9526 ;;		_atoi
  9527 ;; This function uses a non-reentrant model
  9528 ;;
  9529                           
  9530                           	psect	text30
  9531  0071E8                     __ptext30:
  9532                           	callstack 0
  9533  0071E8                     _isspace:
  9534                           	callstack 24
  9535  0071E8  FFFF               	dw	65535	; assembler added errata NOP
  9536  0071EA  0E01               	movlw	1
  9537  0071EC  6E07               	movwf	_isspace$1655^0,c
  9538  0071EE  0E20               	movlw	32
  9539  0071F0  1801               	xorwf	isspace@c^0,w,c
  9540  0071F2  1002               	iorwf	(isspace@c+1)^0,w,c
  9541  0071F4  B4D8               	btfsc	status,2,c
  9542  0071F6  EFFF  F038         	goto	u3591
  9543  0071FA  EF02  F039         	goto	u3590
  9544  0071FE                     u3591:
  9545  0071FE  FFFF               	dw	65535	; assembler added errata NOP
  9546  007200  EF1E  F039         	goto	l3561
  9547  007204                     u3590:
  9548  007204  FFFF               	dw	65535	; assembler added errata NOP
  9549  007206  0EF7               	movlw	247
  9550  007208  6E03               	movwf	??_isspace^0,c
  9551  00720A  0EFF               	movlw	255
  9552  00720C  6E04               	movwf	(??_isspace+1)^0,c
  9553  00720E  C001  F005         	movff	isspace@c,??_isspace+2
  9554  007212  C002  F006         	movff	isspace@c+1,??_isspace+3
  9555  007216  5003               	movf	??_isspace^0,w,c
  9556  007218  2605               	addwf	(??_isspace+2)^0,f,c
  9557  00721A  5004               	movf	(??_isspace+1)^0,w,c
  9558  00721C  2206               	addwfc	(??_isspace+3)^0,f,c
  9559  00721E  5006               	movf	(??_isspace+3)^0,w,c
  9560  007220  E10A               	bnz	u3600
  9561  007222  0E05               	movlw	5
  9562  007224  5C05               	subwf	(??_isspace+2)^0,w,c
  9563  007226  A0D8               	btfss	status,0,c
  9564  007228  EF18  F039         	goto	u3601
  9565  00722C  EF1B  F039         	goto	u3600
  9566  007230                     u3601:
  9567  007230  FFFF               	dw	65535	; assembler added errata NOP
  9568  007232  EF1E  F039         	goto	l3561
  9569  007236                     u3600:
  9570  007236  FFFF               	dw	65535	; assembler added errata NOP
  9571  007238  0E00               	movlw	0
  9572  00723A  6E07               	movwf	_isspace$1655^0,c
  9573  00723C                     l3561:
  9574  00723C  FFFF               	dw	65535	; assembler added errata NOP
  9575  00723E  C007  F001         	movff	_isspace$1655,?_isspace
  9576  007242  6A02               	clrf	(?_isspace+1)^0,c
  9577  007244  0012               	return		;funcret
  9578  007246  FFFF               	dw	65535	; errata NOP
  9579  007248                     __end_of_isspace:
  9580                           	callstack 0
  9581                           
  9582 ;; *************** function _isdigit *****************
  9583 ;; Defined at:
  9584 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  9585 ;; Parameters:    Size  Location     Type
  9586 ;;  c               2    0[COMRAM] int 
  9587 ;; Auto vars:     Size  Location     Type
  9588 ;;		None
  9589 ;; Return value:  Size  Location     Type
  9590 ;;                  2    0[COMRAM] int 
  9591 ;; Registers used:
  9592 ;;		wreg, status,2, status,0
  9593 ;; Tracked objects:
  9594 ;;		On entry : 0/0
  9595 ;;		On exit  : 0/0
  9596 ;;		Unchanged: 0/0
  9597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9598 ;;      Params:         2       0       0       0       0       0       0
  9599 ;;      Locals:         0       0       0       0       0       0       0
  9600 ;;      Temps:          4       0       0       0       0       0       0
  9601 ;;      Totals:         6       0       0       0       0       0       0
  9602 ;;Total ram usage:        6 bytes
  9603 ;; Hardware stack levels used:    1
  9604 ;; Hardware stack levels required when called:    1
  9605 ;; This function calls:
  9606 ;;		Nothing
  9607 ;; This function is called by:
  9608 ;;		_vfpfcnvrt
  9609 ;;		_atoi
  9610 ;; This function uses a non-reentrant model
  9611 ;;
  9612                           
  9613                           	psect	text31
  9614  006F9A                     __ptext31:
  9615                           	callstack 0
  9616  006F9A                     _isdigit:
  9617                           	callstack 25
  9618  006F9A  FFFF               	dw	65535	; assembler added errata NOP
  9619  006F9C  0ED0               	movlw	208
  9620  006F9E  6E03               	movwf	??_isdigit^0,c
  9621  006FA0  0EFF               	movlw	255
  9622  006FA2  6E04               	movwf	(??_isdigit+1)^0,c
  9623  006FA4  C001  F005         	movff	isdigit@c,??_isdigit+2
  9624  006FA8  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  9625  006FAC  5003               	movf	??_isdigit^0,w,c
  9626  006FAE  2605               	addwf	(??_isdigit+2)^0,f,c
  9627  006FB0  5004               	movf	(??_isdigit+1)^0,w,c
  9628  006FB2  2206               	addwfc	(??_isdigit+3)^0,f,c
  9629  006FB4  5006               	movf	(??_isdigit+3)^0,w,c
  9630  006FB6  E10B               	bnz	u3570
  9631  006FB8  0E0A               	movlw	10
  9632  006FBA  5C05               	subwf	(??_isdigit+2)^0,w,c
  9633  006FBC  A0D8               	btfss	status,0,c
  9634  006FBE  EFE3  F037         	goto	u3571
  9635  006FC2  EFE7  F037         	goto	u3570
  9636  006FC6                     u3571:
  9637  006FC6  FFFF               	dw	65535	; assembler added errata NOP
  9638  006FC8  0E01               	movlw	1
  9639  006FCA  EFE9  F037         	goto	u3580
  9640  006FCE                     u3570:
  9641  006FCE  FFFF               	dw	65535	; assembler added errata NOP
  9642  006FD0  0E00               	movlw	0
  9643  006FD2                     u3580:
  9644  006FD2  FFFF               	dw	65535	; assembler added errata NOP
  9645  006FD4  6E01               	movwf	?_isdigit^0,c
  9646  006FD6  6A02               	clrf	(?_isdigit+1)^0,c
  9647  006FD8  0012               	return		;funcret
  9648  006FDA  FFFF               	dw	65535	; errata NOP
  9649  006FDC                     __end_of_isdigit:
  9650                           	callstack 0
  9651                           
  9652 ;; *************** function ___wmul *****************
  9653 ;; Defined at:
  9654 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  9655 ;; Parameters:    Size  Location     Type
  9656 ;;  multiplier      2    0[COMRAM] unsigned int 
  9657 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9658 ;; Auto vars:     Size  Location     Type
  9659 ;;  product         2    4[COMRAM] unsigned int 
  9660 ;; Return value:  Size  Location     Type
  9661 ;;                  2    0[COMRAM] unsigned int 
  9662 ;; Registers used:
  9663 ;;		wreg, status,2, status,0, prodl, prodh
  9664 ;; Tracked objects:
  9665 ;;		On entry : 0/0
  9666 ;;		On exit  : 0/0
  9667 ;;		Unchanged: 0/0
  9668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9669 ;;      Params:         4       0       0       0       0       0       0
  9670 ;;      Locals:         2       0       0       0       0       0       0
  9671 ;;      Temps:          0       0       0       0       0       0       0
  9672 ;;      Totals:         6       0       0       0       0       0       0
  9673 ;;Total ram usage:        6 bytes
  9674 ;; Hardware stack levels used:    1
  9675 ;; Hardware stack levels required when called:    1
  9676 ;; This function calls:
  9677 ;;		Nothing
  9678 ;; This function is called by:
  9679 ;;		_atoi
  9680 ;; This function uses a non-reentrant model
  9681 ;;
  9682                           
  9683                           	psect	text32
  9684  006E56                     __ptext32:
  9685                           	callstack 0
  9686  006E56                     ___wmul:
  9687                           	callstack 0
  9688  006E56  FFFF               	dw	65535	; assembler added errata NOP
  9689  006E58  5001               	movf	___wmul@multiplier^0,w,c
  9690  006E5A  0203               	mulwf	___wmul@multiplicand^0,c
  9691  006E5C  CFF3 F005          	movff	prodl,___wmul@product
  9692  006E60  CFF4 F006          	movff	prodh,___wmul@product+1
  9693  006E64  5001               	movf	___wmul@multiplier^0,w,c
  9694  006E66  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9695  006E68  50F3               	movf	243,w,c
  9696  006E6A  2606               	addwf	(___wmul@product+1)^0,f,c
  9697  006E6C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9698  006E6E  0203               	mulwf	___wmul@multiplicand^0,c
  9699  006E70  50F3               	movf	243,w,c
  9700  006E72  2606               	addwf	(___wmul@product+1)^0,f,c
  9701  006E74  C005  F001         	movff	___wmul@product,?___wmul
  9702  006E78  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9703  006E7C  0012               	return		;funcret
  9704  006E7E  FFFF               	dw	65535	; errata NOP
  9705  006E80                     __end_of___wmul:
  9706                           	callstack 0
  9707                           
  9708 ;; *************** function _serial_tx_char *****************
  9709 ;; Defined at:
  9710 ;;		line 39 in file "serial_rs232.c"
  9711 ;; Parameters:    Size  Location     Type
  9712 ;;  val             1    wreg     unsigned char 
  9713 ;; Auto vars:     Size  Location     Type
  9714 ;;  val             1    0[COMRAM] unsigned char 
  9715 ;; Return value:  Size  Location     Type
  9716 ;;                  1    wreg      void 
  9717 ;; Registers used:
  9718 ;;		wreg
  9719 ;; Tracked objects:
  9720 ;;		On entry : 0/0
  9721 ;;		On exit  : 0/0
  9722 ;;		Unchanged: 0/0
  9723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9724 ;;      Params:         0       0       0       0       0       0       0
  9725 ;;      Locals:         1       0       0       0       0       0       0
  9726 ;;      Temps:          0       0       0       0       0       0       0
  9727 ;;      Totals:         1       0       0       0       0       0       0
  9728 ;;Total ram usage:        1 bytes
  9729 ;; Hardware stack levels used:    1
  9730 ;; Hardware stack levels required when called:    1
  9731 ;; This function calls:
  9732 ;;		Nothing
  9733 ;; This function is called by:
  9734 ;;		_main
  9735 ;;		_serial_tx_string
  9736 ;; This function uses a non-reentrant model
  9737 ;;
  9738                           
  9739                           	psect	text33
  9740  006D9E                     __ptext33:
  9741                           	callstack 0
  9742  006D9E                     _serial_tx_char:
  9743                           	callstack 0
  9744  006D9E  FFFF               	dw	65535	; assembler added errata NOP
  9745                           
  9746                           ;incstack = 0
  9747                           ;serial_tx_char@val stored from wreg
  9748  006DA0  6E01               	movwf	serial_tx_char@val^0,c
  9749  006DA2                     
  9750                           ;serial_rs232.c: 40:     TXREG = val;
  9751  006DA2  C001  FFAD         	movff	serial_tx_char@val,4013	;volatile
  9752  006DA6                     l24:
  9753  006DA6  FFFF               	dw	65535	; assembler added errata NOP
  9754  006DA8  A2AC               	btfss	172,1,c	;volatile
  9755  006DAA  EFD9  F036         	goto	u5931
  9756  006DAE  EFDC  F036         	goto	u5930
  9757  006DB2                     u5931:
  9758  006DB2  FFFF               	dw	65535	; assembler added errata NOP
  9759  006DB4  EFD3  F036         	goto	l24
  9760  006DB8                     u5930:
  9761  006DB8  FFFF               	dw	65535	; assembler added errata NOP
  9762  006DBA  0012               	return		;funcret
  9763  006DBC  FFFF               	dw	65535	; errata NOP
  9764  006DBE                     __end_of_serial_tx_char:
  9765                           	callstack 0
  9766                           
  9767 ;; *************** function _mix_exit_condition *****************
  9768 ;; Defined at:
  9769 ;;		line 182 in file "main.c"
  9770 ;; Parameters:    Size  Location     Type
  9771 ;;  counter         2    0[COMRAM] int 
  9772 ;;  current_step    2    2[COMRAM] PTR int 
  9773 ;;		 -> mix_current_step(2), 
  9774 ;; Auto vars:     Size  Location     Type
  9775 ;;		None
  9776 ;; Return value:  Size  Location     Type
  9777 ;;                  1    wreg      void 
  9778 ;; Registers used:
  9779 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9780 ;; Tracked objects:
  9781 ;;		On entry : 0/0
  9782 ;;		On exit  : 0/0
  9783 ;;		Unchanged: 0/0
  9784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9785 ;;      Params:         4       0       0       0       0       0       0
  9786 ;;      Locals:         0       0       0       0       0       0       0
  9787 ;;      Temps:          0       0       0       0       0       0       0
  9788 ;;      Totals:         4       0       0       0       0       0       0
  9789 ;;Total ram usage:        4 bytes
  9790 ;; Hardware stack levels used:    1
  9791 ;; Hardware stack levels required when called:    1
  9792 ;; This function calls:
  9793 ;;		Nothing
  9794 ;; This function is called by:
  9795 ;;		_main
  9796 ;; This function uses a non-reentrant model
  9797 ;;
  9798                           
  9799                           	psect	text34
  9800  006EE0                     __ptext34:
  9801                           	callstack 0
  9802  006EE0                     _mix_exit_condition:
  9803                           	callstack 0
  9804  006EE0  FFFF               	dw	65535	; assembler added errata NOP
  9805  006EE2                     
  9806                           ;main.c: 183:     if (counter >= 20){
  9807  006EE2  BE02               	btfsc	(mix_exit_condition@counter+1)^0,7,c
  9808  006EE4  EF7D  F037         	goto	u6111
  9809  006EE8  5002               	movf	(mix_exit_condition@counter+1)^0,w,c
  9810  006EEA  E10A               	bnz	u6110
  9811  006EEC  0E14               	movlw	20
  9812  006EEE  5C01               	subwf	mix_exit_condition@counter^0,w,c
  9813  006EF0  A0D8               	btfss	status,0,c
  9814  006EF2  EF7D  F037         	goto	u6111
  9815  006EF6  EF80  F037         	goto	u6110
  9816  006EFA                     u6111:
  9817  006EFA  FFFF               	dw	65535	; assembler added errata NOP
  9818  006EFC  EF89  F037         	goto	l156
  9819  006F00                     u6110:
  9820  006F00  FFFF               	dw	65535	; assembler added errata NOP
  9821  006F02                     
  9822                           ;main.c: 184:         *current_step = 10;
  9823  006F02  C003  FFD9         	movff	mix_exit_condition@current_step,fsr2l
  9824  006F06  C004  FFDA         	movff	mix_exit_condition@current_step+1,fsr2h
  9825  006F0A  0E0A               	movlw	10
  9826  006F0C  6EDE               	movwf	postinc2,c
  9827  006F0E  0E00               	movlw	0
  9828  006F10  6EDD               	movwf	postdec2,c
  9829  006F12                     l156:
  9830  006F12  FFFF               	dw	65535	; assembler added errata NOP
  9831  006F14  0012               	return		;funcret
  9832  006F16  FFFF               	dw	65535	; errata NOP
  9833  006F18                     __end_of_mix_exit_condition:
  9834                           	callstack 0
  9835                           
  9836 ;; *************** function _lcd_str *****************
  9837 ;; Defined at:
  9838 ;;		line 62 in file "lcd.c"
  9839 ;; Parameters:    Size  Location     Type
  9840 ;;  str             2    2[COMRAM] PTR const unsigned char 
  9841 ;;		 -> main@greet_str(160), STR_7(22), 
  9842 ;; Auto vars:     Size  Location     Type
  9843 ;;  i               1    6[COMRAM] unsigned char 
  9844 ;; Return value:  Size  Location     Type
  9845 ;;                  1    wreg      void 
  9846 ;; Registers used:
  9847 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9848 ;; Tracked objects:
  9849 ;;		On entry : 0/0
  9850 ;;		On exit  : 0/0
  9851 ;;		Unchanged: 0/0
  9852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9853 ;;      Params:         2       0       0       0       0       0       0
  9854 ;;      Locals:         1       0       0       0       0       0       0
  9855 ;;      Temps:          2       0       0       0       0       0       0
  9856 ;;      Totals:         5       0       0       0       0       0       0
  9857 ;;Total ram usage:        5 bytes
  9858 ;; Hardware stack levels used:    1
  9859 ;; Hardware stack levels required when called:    3
  9860 ;; This function calls:
  9861 ;;		_lcd_dat
  9862 ;; This function is called by:
  9863 ;;		_main
  9864 ;; This function uses a non-reentrant model
  9865 ;;
  9866                           
  9867                           	psect	text35
  9868  007472                     __ptext35:
  9869                           	callstack 0
  9870  007472                     _lcd_str:
  9871                           	callstack 0
  9872  007472  FFFF               	dw	65535	; assembler added errata NOP
  9873  007474                     
  9874                           ;lcd.c: 62: void lcd_str(const char* str);lcd.c: 63: {;lcd.c: 64:     unsigned char i=0;
  9875  007474  0E00               	movlw	0
  9876  007476  6E07               	movwf	lcd_str@i^0,c
  9877                           
  9878                           ;lcd.c: 66:     while(str[i] != 0 )
  9879  007478  EF59  F03A         	goto	l4991
  9880  00747C                     l4987:
  9881  00747C  FFFF               	dw	65535	; assembler added errata NOP
  9882                           
  9883                           ;lcd.c: 67:     {;lcd.c: 68:       lcd_dat(str[i]);
  9884  00747E  5007               	movf	lcd_str@i^0,w,c
  9885  007480  2403               	addwf	lcd_str@str^0,w,c
  9886  007482  6E05               	movwf	??_lcd_str^0,c
  9887  007484  0E00               	movlw	0
  9888  007486  2004               	addwfc	(lcd_str@str+1)^0,w,c
  9889  007488  6E06               	movwf	(??_lcd_str+1)^0,c
  9890  00748A  C005  FFF6         	movff	??_lcd_str,tblptrl
  9891  00748E  C006  FFF7         	movff	??_lcd_str+1,tblptrh
  9892  007492  6AF8               	clrf	tblptru,c
  9893  007494  0E05               	movlw	(high __ramtop+-1)
  9894  007496  64F7               	cpfsgt	tblptrh,c
  9895  007498  D004               	bra	u5947
  9896  00749A  0008               	tblrd		*
  9897  00749C  FFFF               	dw	65535	; errata NOP
  9898  00749E  50F5               	movf	tablat,w,c
  9899  0074A0  D005               	bra	u5940
  9900  0074A2                     u5947:
  9901  0074A2  CFF6 FFE1          	movff	tblptrl,fsr1l
  9902  0074A6  CFF7 FFE2          	movff	tblptrh,fsr1h
  9903  0074AA  50E7               	movf	indf1,w,c
  9904  0074AC                     u5940:
  9905  0074AC  EC16  F037         	call	_lcd_dat
  9906  0074B0                     
  9907                           ;lcd.c: 69:       i++;
  9908  0074B0  2A07               	incf	lcd_str@i^0,f,c
  9909  0074B2                     l4991:
  9910  0074B2  FFFF               	dw	65535	; assembler added errata NOP
  9911                           
  9912                           ;lcd.c: 66:     while(str[i] != 0 )
  9913  0074B4  5007               	movf	lcd_str@i^0,w,c
  9914  0074B6  2403               	addwf	lcd_str@str^0,w,c
  9915  0074B8  6E05               	movwf	??_lcd_str^0,c
  9916  0074BA  0E00               	movlw	0
  9917  0074BC  2004               	addwfc	(lcd_str@str+1)^0,w,c
  9918  0074BE  6E06               	movwf	(??_lcd_str+1)^0,c
  9919  0074C0  C005  FFF6         	movff	??_lcd_str,tblptrl
  9920  0074C4  C006  FFF7         	movff	??_lcd_str+1,tblptrh
  9921  0074C8  6AF8               	clrf	tblptru,c
  9922  0074CA  0E05               	movlw	(high __ramtop+-1)
  9923  0074CC  64F7               	cpfsgt	tblptrh,c
  9924  0074CE  D004               	bra	u5957
  9925  0074D0  0008               	tblrd		*
  9926  0074D2  FFFF               	dw	65535	; errata NOP
  9927  0074D4  50F5               	movf	tablat,w,c
  9928  0074D6  D005               	bra	u5950
  9929  0074D8                     u5957:
  9930  0074D8  CFF6 FFE1          	movff	tblptrl,fsr1l
  9931  0074DC  CFF7 FFE2          	movff	tblptrh,fsr1h
  9932  0074E0  50E7               	movf	indf1,w,c
  9933  0074E2                     u5950:
  9934  0074E2  0900               	iorlw	0
  9935  0074E4  A4D8               	btfss	status,2,c
  9936  0074E6  EF77  F03A         	goto	u5961
  9937  0074EA  EF7A  F03A         	goto	u5960
  9938  0074EE                     u5961:
  9939  0074EE  FFFF               	dw	65535	; assembler added errata NOP
  9940  0074F0  EF3E  F03A         	goto	l4987
  9941  0074F4                     u5960:
  9942  0074F4  FFFF               	dw	65535	; assembler added errata NOP
  9943  0074F6  0012               	return		;funcret
  9944  0074F8  FFFF               	dw	65535	; errata NOP
  9945  0074FA                     __end_of_lcd_str:
  9946                           	callstack 0
  9947                           
  9948 ;; *************** function _lcd_dat *****************
  9949 ;; Defined at:
  9950 ;;		line 21 in file "lcd.c"
  9951 ;; Parameters:    Size  Location     Type
  9952 ;;  val             1    wreg     unsigned char 
  9953 ;; Auto vars:     Size  Location     Type
  9954 ;;  val             1    1[COMRAM] unsigned char 
  9955 ;; Return value:  Size  Location     Type
  9956 ;;                  1    wreg      void 
  9957 ;; Registers used:
  9958 ;;		wreg, status,2, cstack
  9959 ;; Tracked objects:
  9960 ;;		On entry : 0/0
  9961 ;;		On exit  : 0/0
  9962 ;;		Unchanged: 0/0
  9963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9964 ;;      Params:         0       0       0       0       0       0       0
  9965 ;;      Locals:         1       0       0       0       0       0       0
  9966 ;;      Temps:          0       0       0       0       0       0       0
  9967 ;;      Totals:         1       0       0       0       0       0       0
  9968 ;;Total ram usage:        1 bytes
  9969 ;; Hardware stack levels used:    1
  9970 ;; Hardware stack levels required when called:    2
  9971 ;; This function calls:
  9972 ;;		_lcd_wr
  9973 ;; This function is called by:
  9974 ;;		_lcd_str
  9975 ;;		_state_translator_fpga_to_micro
  9976 ;; This function uses a non-reentrant model
  9977 ;;
  9978                           
  9979                           	psect	text36
  9980  006E2C                     __ptext36:
  9981                           	callstack 0
  9982  006E2C                     _lcd_dat:
  9983                           	callstack 0
  9984  006E2C  FFFF               	dw	65535	; assembler added errata NOP
  9985                           
  9986                           ;incstack = 0
  9987                           ;lcd_dat@val stored from wreg
  9988  006E2E  6E02               	movwf	lcd_dat@val^0,c
  9989  006E30                     
  9990                           ;lcd.c: 21: void lcd_dat(unsigned char val);lcd.c: 22: {;lcd.c: 23:  PORTEbits.RE1=1;
  9991  006E30  8284               	bsf	132,1,c	;volatile
  9992  006E32                     
  9993                           ;lcd.c: 24:     lcd_wr(val);
  9994  006E32  5002               	movf	lcd_dat@val^0,w,c
  9995  006E34  ECB1  F036         	call	_lcd_wr
  9996  006E38                     
  9997                           ;lcd.c: 25:     PORTEbits.RE2=1;
  9998  006E38  8484               	bsf	132,2,c	;volatile
  9999  006E3A                     
 10000                           ;lcd.c: 26:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10001  006E3A  0EC8               	movlw	200
 10002  006E3C                     u6337:
 10003  006E3C  FFFF               	dw	65535	; errata NOP
 10004  006E3E  F000               	nop	
 10005  006E40  2EE8               	decfsz	wreg,f,c
 10006  006E42  D7FC               	bra	u6337
 10007  006E44                     
 10008                           ;lcd.c: 27:     PORTEbits.RE1=0;
 10009  006E44  9284               	bcf	132,1,c	;volatile
 10010  006E46                     
 10011                           ;lcd.c: 28:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10012  006E46  0EC8               	movlw	200
 10013  006E48                     u6347:
 10014  006E48  FFFF               	dw	65535	; errata NOP
 10015  006E4A  F000               	nop	
 10016  006E4C  2EE8               	decfsz	wreg,f,c
 10017  006E4E  D7FC               	bra	u6347
 10018  006E50                     
 10019                           ;lcd.c: 29:  PORTEbits.RE1=1;
 10020  006E50  8284               	bsf	132,1,c	;volatile
 10021  006E52  0012               	return		;funcret
 10022  006E54  FFFF               	dw	65535	; errata NOP
 10023  006E56                     __end_of_lcd_dat:
 10024                           	callstack 0
 10025                           
 10026 ;; *************** function _lcd_init *****************
 10027 ;; Defined at:
 10028 ;;		line 32 in file "lcd.c"
 10029 ;; Parameters:    Size  Location     Type
 10030 ;;		None
 10031 ;; Auto vars:     Size  Location     Type
 10032 ;;		None
 10033 ;; Return value:  Size  Location     Type
 10034 ;;                  1    wreg      void 
 10035 ;; Registers used:
 10036 ;;		wreg, status,2, cstack
 10037 ;; Tracked objects:
 10038 ;;		On entry : 0/0
 10039 ;;		On exit  : 0/0
 10040 ;;		Unchanged: 0/0
 10041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10042 ;;      Params:         0       0       0       0       0       0       0
 10043 ;;      Locals:         0       0       0       0       0       0       0
 10044 ;;      Temps:          1       0       0       0       0       0       0
 10045 ;;      Totals:         1       0       0       0       0       0       0
 10046 ;;Total ram usage:        1 bytes
 10047 ;; Hardware stack levels used:    1
 10048 ;; Hardware stack levels required when called:    3
 10049 ;; This function calls:
 10050 ;;		_lcd_cmd
 10051 ;; This function is called by:
 10052 ;;		_main
 10053 ;; This function uses a non-reentrant model
 10054 ;;
 10055                           
 10056                           	psect	text37
 10057  0073F4                     __ptext37:
 10058                           	callstack 0
 10059  0073F4                     _lcd_init:
 10060                           	callstack 0
 10061  0073F4  FFFF               	dw	65535	; assembler added errata NOP
 10062  0073F6  6A83               	clrf	3971,c	;# 
 10063  0073F8  0E00               	movlw	0	;# 
 10064  0073FA  6E95               	movwf	3989,c	;# 
 10065  0073FC  6A84               	clrf	3972,c	;# 
 10066  0073FE  0E00               	movlw	0	;# 
 10067  007400  6E96               	movwf	3990,c	;# 
 10068                           
 10069                           ;lcd.c: 45:  PORTEbits.RE1=0;
 10070  007402  9284               	bcf	132,1,c	;volatile
 10071                           
 10072                           ;lcd.c: 46:  PORTEbits.RE2=0;
 10073  007404  9484               	bcf	132,2,c	;volatile
 10074  007406                     
 10075                           ;lcd.c: 47:  _delay((unsigned long)((30)*(4000000/4000.0)));
 10076  007406  0E1E               	movlw	30
 10077  007408  6E03               	movwf	??_lcd_init^0,c
 10078  00740A  0E3C               	movlw	60
 10079  00740C                     u6357:
 10080  00740C  FFFF               	dw	65535	; errata NOP
 10081  00740E  2EE8               	decfsz	wreg,f,c
 10082  007410  D7FD               	bra	u6357
 10083  007412  2E03               	decfsz	??_lcd_init^0,f,c
 10084  007414  D7FB               	bra	u6357
 10085  007416  D000               	nop2	
 10086  007418                     
 10087                           ;lcd.c: 48:  PORTEbits.RE1=1;
 10088  007418  8284               	bsf	132,1,c	;volatile
 10089  00741A                     
 10090                           ;lcd.c: 50:  lcd_cmd(0x38);
 10091  00741A  0E38               	movlw	56
 10092  00741C  EC01  F037         	call	_lcd_cmd
 10093  007420                     
 10094                           ;lcd.c: 51:  _delay((unsigned long)((30)*(4000000/4000.0)));
 10095  007420  0E1E               	movlw	30
 10096  007422  6E03               	movwf	??_lcd_init^0,c
 10097  007424  0E3C               	movlw	60
 10098  007426                     u6367:
 10099  007426  FFFF               	dw	65535	; errata NOP
 10100  007428  2EE8               	decfsz	wreg,f,c
 10101  00742A  D7FD               	bra	u6367
 10102  00742C  2E03               	decfsz	??_lcd_init^0,f,c
 10103  00742E  D7FB               	bra	u6367
 10104  007430  D000               	nop2	
 10105                           
 10106                           ;lcd.c: 52:  lcd_cmd(0x38);
 10107  007432  0E38               	movlw	56
 10108  007434  EC01  F037         	call	_lcd_cmd
 10109  007438                     
 10110                           ;lcd.c: 53:     _delay((unsigned long)((30)*(4000000/4000.0)));
 10111  007438  0E1E               	movlw	30
 10112  00743A  6E03               	movwf	??_lcd_init^0,c
 10113  00743C  0E3C               	movlw	60
 10114  00743E                     u6377:
 10115  00743E  FFFF               	dw	65535	; errata NOP
 10116  007440  2EE8               	decfsz	wreg,f,c
 10117  007442  D7FD               	bra	u6377
 10118  007444  2E03               	decfsz	??_lcd_init^0,f,c
 10119  007446  D7FB               	bra	u6377
 10120  007448  D000               	nop2	
 10121  00744A                     
 10122                           ;lcd.c: 54:  lcd_cmd(0x38);
 10123  00744A  0E38               	movlw	56
 10124  00744C  EC01  F037         	call	_lcd_cmd
 10125  007450                     
 10126                           ;lcd.c: 55:  lcd_cmd(0x08);
 10127  007450  0E08               	movlw	8
 10128  007452  EC01  F037         	call	_lcd_cmd
 10129  007456                     
 10130                           ;lcd.c: 56:  lcd_cmd(0x0F);
 10131  007456  0E0F               	movlw	15
 10132  007458  EC01  F037         	call	_lcd_cmd
 10133  00745C                     
 10134                           ;lcd.c: 57:  lcd_cmd(0x01);
 10135  00745C  0E01               	movlw	1
 10136  00745E  EC01  F037         	call	_lcd_cmd
 10137  007462                     
 10138                           ;lcd.c: 58:  lcd_cmd(0x38);
 10139  007462  0E38               	movlw	56
 10140  007464  EC01  F037         	call	_lcd_cmd
 10141  007468                     
 10142                           ;lcd.c: 59:     lcd_cmd(0x80);
 10143  007468  0E80               	movlw	128
 10144  00746A  EC01  F037         	call	_lcd_cmd
 10145  00746E  0012               	return		;funcret
 10146  007470  FFFF               	dw	65535	; errata NOP
 10147  007472                     __end_of_lcd_init:
 10148                           	callstack 0
 10149                           
 10150 ;; *************** function _lcd_cmd *****************
 10151 ;; Defined at:
 10152 ;;		line 10 in file "lcd.c"
 10153 ;; Parameters:    Size  Location     Type
 10154 ;;  val             1    wreg     unsigned char 
 10155 ;; Auto vars:     Size  Location     Type
 10156 ;;  val             1    1[COMRAM] unsigned char 
 10157 ;; Return value:  Size  Location     Type
 10158 ;;                  1    wreg      void 
 10159 ;; Registers used:
 10160 ;;		wreg, status,2, cstack
 10161 ;; Tracked objects:
 10162 ;;		On entry : 0/0
 10163 ;;		On exit  : 0/0
 10164 ;;		Unchanged: 0/0
 10165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10166 ;;      Params:         0       0       0       0       0       0       0
 10167 ;;      Locals:         1       0       0       0       0       0       0
 10168 ;;      Temps:          0       0       0       0       0       0       0
 10169 ;;      Totals:         1       0       0       0       0       0       0
 10170 ;;Total ram usage:        1 bytes
 10171 ;; Hardware stack levels used:    1
 10172 ;; Hardware stack levels required when called:    2
 10173 ;; This function calls:
 10174 ;;		_lcd_wr
 10175 ;; This function is called by:
 10176 ;;		_main
 10177 ;;		_lcd_init
 10178 ;; This function uses a non-reentrant model
 10179 ;;
 10180                           
 10181                           	psect	text38
 10182  006E02                     __ptext38:
 10183                           	callstack 0
 10184  006E02                     _lcd_cmd:
 10185                           	callstack 0
 10186  006E02  FFFF               	dw	65535	; assembler added errata NOP
 10187                           
 10188                           ;incstack = 0
 10189                           ;lcd_cmd@val stored from wreg
 10190  006E04  6E02               	movwf	lcd_cmd@val^0,c
 10191  006E06                     
 10192                           ;lcd.c: 10: void lcd_cmd(unsigned char val);lcd.c: 11: {;lcd.c: 12:  PORTEbits.RE1=1;
 10193  006E06  8284               	bsf	132,1,c	;volatile
 10194  006E08                     
 10195                           ;lcd.c: 13:     lcd_wr(val);
 10196  006E08  5002               	movf	lcd_cmd@val^0,w,c
 10197  006E0A  ECB1  F036         	call	_lcd_wr
 10198  006E0E                     
 10199                           ;lcd.c: 14:     PORTEbits.RE2=0;
 10200  006E0E  9484               	bcf	132,2,c	;volatile
 10201  006E10                     
 10202                           ;lcd.c: 15:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10203  006E10  0EC8               	movlw	200
 10204  006E12                     u6387:
 10205  006E12  FFFF               	dw	65535	; errata NOP
 10206  006E14  F000               	nop	
 10207  006E16  2EE8               	decfsz	wreg,f,c
 10208  006E18  D7FC               	bra	u6387
 10209  006E1A                     
 10210                           ;lcd.c: 16:     PORTEbits.RE1=0;
 10211  006E1A  9284               	bcf	132,1,c	;volatile
 10212  006E1C                     
 10213                           ;lcd.c: 17:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10214  006E1C  0EC8               	movlw	200
 10215  006E1E                     u6397:
 10216  006E1E  FFFF               	dw	65535	; errata NOP
 10217  006E20  F000               	nop	
 10218  006E22  2EE8               	decfsz	wreg,f,c
 10219  006E24  D7FC               	bra	u6397
 10220  006E26                     
 10221                           ;lcd.c: 18:  PORTEbits.RE1=1;
 10222  006E26  8284               	bsf	132,1,c	;volatile
 10223  006E28  0012               	return		;funcret
 10224  006E2A  FFFF               	dw	65535	; errata NOP
 10225  006E2C                     __end_of_lcd_cmd:
 10226                           	callstack 0
 10227                           
 10228 ;; *************** function _lcd_wr *****************
 10229 ;; Defined at:
 10230 ;;		line 5 in file "lcd.c"
 10231 ;; Parameters:    Size  Location     Type
 10232 ;;  val             1    wreg     unsigned char 
 10233 ;; Auto vars:     Size  Location     Type
 10234 ;;  val             1    0[COMRAM] unsigned char 
 10235 ;; Return value:  Size  Location     Type
 10236 ;;                  1    wreg      void 
 10237 ;; Registers used:
 10238 ;;		wreg
 10239 ;; Tracked objects:
 10240 ;;		On entry : 0/0
 10241 ;;		On exit  : 0/0
 10242 ;;		Unchanged: 0/0
 10243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10244 ;;      Params:         0       0       0       0       0       0       0
 10245 ;;      Locals:         1       0       0       0       0       0       0
 10246 ;;      Temps:          0       0       0       0       0       0       0
 10247 ;;      Totals:         1       0       0       0       0       0       0
 10248 ;;Total ram usage:        1 bytes
 10249 ;; Hardware stack levels used:    1
 10250 ;; Hardware stack levels required when called:    1
 10251 ;; This function calls:
 10252 ;;		Nothing
 10253 ;; This function is called by:
 10254 ;;		_lcd_cmd
 10255 ;;		_lcd_dat
 10256 ;; This function uses a non-reentrant model
 10257 ;;
 10258                           
 10259                           	psect	text39
 10260  006D62                     __ptext39:
 10261                           	callstack 0
 10262  006D62                     _lcd_wr:
 10263                           	callstack 0
 10264  006D62  FFFF               	dw	65535	; assembler added errata NOP
 10265                           
 10266                           ;incstack = 0
 10267                           ;lcd_wr@val stored from wreg
 10268  006D64  6E01               	movwf	lcd_wr@val^0,c
 10269  006D66                     
 10270                           ;lcd.c: 5: void lcd_wr(unsigned char val);lcd.c: 6: {;lcd.c: 7:     PORTD=val;
 10271  006D66  C001  FF83         	movff	lcd_wr@val,3971	;volatile
 10272  006D6A  0012               	return		;funcret
 10273  006D6C  FFFF               	dw	65535	; errata NOP
 10274  006D6E                     __end_of_lcd_wr:
 10275                           	callstack 0
 10276                           
 10277 ;; *************** function _init_timer_2 *****************
 10278 ;; Defined at:
 10279 ;;		line 27 in file "timer.c"
 10280 ;; Parameters:    Size  Location     Type
 10281 ;;		None
 10282 ;; Auto vars:     Size  Location     Type
 10283 ;;		None
 10284 ;; Return value:  Size  Location     Type
 10285 ;;                  1    wreg      void 
 10286 ;; Registers used:
 10287 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10288 ;; Tracked objects:
 10289 ;;		On entry : 0/0
 10290 ;;		On exit  : 0/0
 10291 ;;		Unchanged: 0/0
 10292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10293 ;;      Params:         0       0       0       0       0       0       0
 10294 ;;      Locals:         4       0       0       0       0       0       0
 10295 ;;      Temps:          0       0       0       0       0       0       0
 10296 ;;      Totals:         4       0       0       0       0       0       0
 10297 ;;Total ram usage:        4 bytes
 10298 ;; Hardware stack levels used:    1
 10299 ;; Hardware stack levels required when called:    2
 10300 ;; This function calls:
 10301 ;;		___fladd
 10302 ;;		___fldiv
 10303 ;;		___flmul
 10304 ;;		___fltol
 10305 ;; This function is called by:
 10306 ;;		_main
 10307 ;; This function uses a non-reentrant model
 10308 ;;
 10309                           
 10310                           	psect	text40
 10311  00770E                     __ptext40:
 10312                           	callstack 0
 10313  00770E                     _init_timer_2:
 10314                           	callstack 0
 10315  00770E  FFFF               	dw	65535	; assembler added errata NOP
 10316  007710                     
 10317                           ;timer.c: 29:     T2CON = 0;
 10318  007710  0E00               	movlw	0
 10319  007712  6ECA               	movwf	202,c	;volatile
 10320                           
 10321                           ;timer.c: 30:     TMR2 = 0;
 10322  007714  0E00               	movlw	0
 10323  007716  6ECC               	movwf	204,c	;volatile
 10324  007718                     
 10325                           ;timer.c: 32:     T2CONbits.TMR2ON = 1;
 10326  007718  84CA               	bsf	202,2,c	;volatile
 10327  00771A                     
 10328                           ;timer.c: 33:     T2CONbits.T2CKPS0 = 1;
 10329  00771A  80CA               	bsf	202,0,c	;volatile
 10330  00771C                     
 10331                           ;timer.c: 34:     T2CONbits.T2CKPS1 = 1;
 10332  00771C  82CA               	bsf	202,1,c	;volatile
 10333  00771E                     
 10334                           ;timer.c: 36:     PR2 = (uint8_t) (((pwm_period / (4*t_osc*tmr2_prescaler)) - 1)*4);
 10335  00771E  0E00               	movlw	0
 10336  007720  6E37               	movwf	___fladd@a^0,c
 10337  007722  0E00               	movlw	0
 10338  007724  6E38               	movwf	(___fladd@a+1)^0,c
 10339  007726  0E80               	movlw	128
 10340  007728  6E39               	movwf	(___fladd@a+2)^0,c
 10341  00772A  0EBF               	movlw	191
 10342  00772C  6E3A               	movwf	(___fladd@a+3)^0,c
 10343  00772E  0EBD               	movlw	189
 10344  007730  6E05               	movwf	___flmul@a^0,c
 10345  007732  0E37               	movlw	55
 10346  007734  6E06               	movwf	(___flmul@a+1)^0,c
 10347  007736  0E86               	movlw	134
 10348  007738  6E07               	movwf	(___flmul@a+2)^0,c
 10349  00773A  0E36               	movlw	54
 10350  00773C  6E08               	movwf	(___flmul@a+3)^0,c
 10351  00773E  C0D3  F001         	movff	_tmr2_prescaler,___flmul@b
 10352  007742  C0D4  F002         	movff	_tmr2_prescaler+1,___flmul@b+1
 10353  007746  C0D5  F003         	movff	_tmr2_prescaler+2,___flmul@b+2
 10354  00774A  C0D6  F004         	movff	_tmr2_prescaler+3,___flmul@b+3
 10355  00774E  EC05  F00D         	call	___flmul	;wreg free
 10356  007752  C001  F01E         	movff	?___flmul,___fldiv@a
 10357  007756  C002  F01F         	movff	?___flmul+1,___fldiv@a+1
 10358  00775A  C003  F020         	movff	?___flmul+2,___fldiv@a+2
 10359  00775E  C004  F021         	movff	?___flmul+3,___fldiv@a+3
 10360  007762  0E0A               	movlw	10
 10361  007764  6E1A               	movwf	___fldiv@b^0,c
 10362  007766  0ED7               	movlw	215
 10363  007768  6E1B               	movwf	(___fldiv@b+1)^0,c
 10364  00776A  0EA3               	movlw	163
 10365  00776C  6E1C               	movwf	(___fldiv@b+2)^0,c
 10366  00776E  0E3C               	movlw	60
 10367  007770  6E1D               	movwf	(___fldiv@b+3)^0,c
 10368  007772  EC57  F00F         	call	___fldiv	;wreg free
 10369  007776  C01A  F033         	movff	?___fldiv,___fladd@b
 10370  00777A  C01B  F034         	movff	?___fldiv+1,___fladd@b+1
 10371  00777E  C01C  F035         	movff	?___fldiv+2,___fladd@b+2
 10372  007782  C01D  F036         	movff	?___fldiv+3,___fladd@b+3
 10373  007786  EC31  F00A         	call	___fladd	;wreg free
 10374  00778A  C033  F06F         	movff	?___fladd,_init_timer_2$1948
 10375  00778E  C034  F070         	movff	?___fladd+1,_init_timer_2$1948+1
 10376  007792  C035  F071         	movff	?___fladd+2,_init_timer_2$1948+2
 10377  007796  C036  F072         	movff	?___fladd+3,_init_timer_2$1948+3
 10378  00779A                     
 10379                           ;timer.c: 36:     PR2 = (uint8_t) (((pwm_period / (4*t_osc*tmr2_prescaler)) - 1)*4);
 10380  00779A  0E00               	movlw	0
 10381  00779C  6E05               	movwf	___flmul@a^0,c
 10382  00779E  0E00               	movlw	0
 10383  0077A0  6E06               	movwf	(___flmul@a+1)^0,c
 10384  0077A2  0E80               	movlw	128
 10385  0077A4  6E07               	movwf	(___flmul@a+2)^0,c
 10386  0077A6  0E40               	movlw	64
 10387  0077A8  6E08               	movwf	(___flmul@a+3)^0,c
 10388  0077AA  C06F  F001         	movff	_init_timer_2$1948,___flmul@b
 10389  0077AE  C070  F002         	movff	_init_timer_2$1948+1,___flmul@b+1
 10390  0077B2  C071  F003         	movff	_init_timer_2$1948+2,___flmul@b+2
 10391  0077B6  C072  F004         	movff	_init_timer_2$1948+3,___flmul@b+3
 10392  0077BA  EC05  F00D         	call	___flmul	;wreg free
 10393  0077BE  C001  F065         	movff	?___flmul,___fltol@f1
 10394  0077C2  C002  F066         	movff	?___flmul+1,___fltol@f1+1
 10395  0077C6  C003  F067         	movff	?___flmul+2,___fltol@f1+2
 10396  0077CA  C004  F068         	movff	?___flmul+3,___fltol@f1+3
 10397  0077CE  ECCE  F01E         	call	___fltol	;wreg free
 10398  0077D2  5065               	movf	?___fltol^0,w,c
 10399  0077D4  6ECB               	movwf	203,c	;volatile
 10400  0077D6  0012               	return		;funcret
 10401  0077D8  FFFF               	dw	65535	; errata NOP
 10402  0077DA                     __end_of_init_timer_2:
 10403                           	callstack 0
 10404                           
 10405 ;; *************** function _init_timer_0 *****************
 10406 ;; Defined at:
 10407 ;;		line 11 in file "timer.c"
 10408 ;; Parameters:    Size  Location     Type
 10409 ;;		None
 10410 ;; Auto vars:     Size  Location     Type
 10411 ;;		None
 10412 ;; Return value:  Size  Location     Type
 10413 ;;                  1    wreg      void 
 10414 ;; Registers used:
 10415 ;;		wreg, status,2
 10416 ;; Tracked objects:
 10417 ;;		On entry : 0/0
 10418 ;;		On exit  : 0/0
 10419 ;;		Unchanged: 0/0
 10420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10421 ;;      Params:         0       0       0       0       0       0       0
 10422 ;;      Locals:         0       0       0       0       0       0       0
 10423 ;;      Temps:          0       0       0       0       0       0       0
 10424 ;;      Totals:         0       0       0       0       0       0       0
 10425 ;;Total ram usage:        0 bytes
 10426 ;; Hardware stack levels used:    1
 10427 ;; Hardware stack levels required when called:    1
 10428 ;; This function calls:
 10429 ;;		Nothing
 10430 ;; This function is called by:
 10431 ;;		_main
 10432 ;; This function uses a non-reentrant model
 10433 ;;
 10434                           
 10435                           	psect	text41
 10436  006DE0                     __ptext41:
 10437                           	callstack 0
 10438  006DE0                     _init_timer_0:
 10439                           	callstack 0
 10440  006DE0  FFFF               	dw	65535	; assembler added errata NOP
 10441  006DE2                     
 10442                           ;timer.c: 13:     T0CON = 0;
 10443  006DE2  0E00               	movlw	0
 10444  006DE4  6ED5               	movwf	213,c	;volatile
 10445                           
 10446                           ;timer.c: 15:     TMR0L = 0x96;
 10447  006DE6  0E96               	movlw	150
 10448  006DE8  6ED6               	movwf	214,c	;volatile
 10449                           
 10450                           ;timer.c: 16:     TMR0H = 0x98;
 10451  006DEA  0E98               	movlw	152
 10452  006DEC  6ED7               	movwf	215,c	;volatile
 10453  006DEE                     
 10454                           ;timer.c: 17:     INTCONbits.TMR0IE = 1;
 10455  006DEE  8AF2               	bsf	242,5,c	;volatile
 10456  006DF0                     
 10457                           ;timer.c: 18:     T0CONbits.T08BIT = 0;
 10458  006DF0  9CD5               	bcf	213,6,c	;volatile
 10459  006DF2                     
 10460                           ;timer.c: 19:     T0CONbits.T0CS = 0;
 10461  006DF2  9AD5               	bcf	213,5,c	;volatile
 10462  006DF4                     
 10463                           ;timer.c: 20:     T0CONbits.PSA = 0;
 10464  006DF4  96D5               	bcf	213,3,c	;volatile
 10465  006DF6                     
 10466                           ;timer.c: 21:     T0CONbits.T0PS0 = 1;
 10467  006DF6  80D5               	bsf	213,0,c	;volatile
 10468  006DF8                     
 10469                           ;timer.c: 22:     T0CONbits.T0PS1 = 1;
 10470  006DF8  82D5               	bsf	213,1,c	;volatile
 10471  006DFA                     
 10472                           ;timer.c: 23:     T0CONbits.T0PS2 = 1;
 10473  006DFA  84D5               	bsf	213,2,c	;volatile
 10474  006DFC                     
 10475                           ;timer.c: 24:     T0CONbits.TMR0ON = 1;
 10476  006DFC  8ED5               	bsf	213,7,c	;volatile
 10477  006DFE  0012               	return		;funcret
 10478  006E00  FFFF               	dw	65535	; errata NOP
 10479  006E02                     __end_of_init_timer_0:
 10480                           	callstack 0
 10481                           
 10482 ;; *************** function _init_interrupts *****************
 10483 ;; Defined at:
 10484 ;;		line 81 in file "init_PIC.c"
 10485 ;; Parameters:    Size  Location     Type
 10486 ;;		None
 10487 ;; Auto vars:     Size  Location     Type
 10488 ;;		None
 10489 ;; Return value:  Size  Location     Type
 10490 ;;                  1    wreg      void 
 10491 ;; Registers used:
 10492 ;;		None
 10493 ;; Tracked objects:
 10494 ;;		On entry : 0/0
 10495 ;;		On exit  : 0/0
 10496 ;;		Unchanged: 0/0
 10497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10498 ;;      Params:         0       0       0       0       0       0       0
 10499 ;;      Locals:         0       0       0       0       0       0       0
 10500 ;;      Temps:          0       0       0       0       0       0       0
 10501 ;;      Totals:         0       0       0       0       0       0       0
 10502 ;;Total ram usage:        0 bytes
 10503 ;; Hardware stack levels used:    1
 10504 ;; Hardware stack levels required when called:    1
 10505 ;; This function calls:
 10506 ;;		Nothing
 10507 ;; This function is called by:
 10508 ;;		_main
 10509 ;; This function uses a non-reentrant model
 10510 ;;
 10511                           
 10512                           	psect	text42
 10513  006D56                     __ptext42:
 10514                           	callstack 0
 10515  006D56                     _init_interrupts:
 10516                           	callstack 0
 10517  006D56  FFFF               	dw	65535	; assembler added errata NOP
 10518  006D58                     
 10519                           ;init_PIC.c: 83:     PIR1bits.RCIF = 0;
 10520  006D58  9A9E               	bcf	158,5,c	;volatile
 10521                           
 10522                           ;init_PIC.c: 84:     PIE1bits.RCIE = 1;
 10523  006D5A  8A9D               	bsf	157,5,c	;volatile
 10524                           
 10525                           ;init_PIC.c: 85:     INTCONbits.PEIE = 1;
 10526  006D5C  8CF2               	bsf	242,6,c	;volatile
 10527  006D5E  0012               	return		;funcret
 10528  006D60  FFFF               	dw	65535	; errata NOP
 10529  006D62                     __end_of_init_interrupts:
 10530                           	callstack 0
 10531                           
 10532 ;; *************** function _init_ccp1 *****************
 10533 ;; Defined at:
 10534 ;;		line 41 in file "timer.c"
 10535 ;; Parameters:    Size  Location     Type
 10536 ;;		None
 10537 ;; Auto vars:     Size  Location     Type
 10538 ;;		None
 10539 ;; Return value:  Size  Location     Type
 10540 ;;                  1    wreg      void 
 10541 ;; Registers used:
 10542 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10543 ;; Tracked objects:
 10544 ;;		On entry : 0/0
 10545 ;;		On exit  : 0/0
 10546 ;;		Unchanged: 0/0
 10547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10548 ;;      Params:         0       0       0       0       0       0       0
 10549 ;;      Locals:         0       0       0       0       0       0       0
 10550 ;;      Temps:          0       0       0       0       0       0       0
 10551 ;;      Totals:         0       0       0       0       0       0       0
 10552 ;;Total ram usage:        0 bytes
 10553 ;; Hardware stack levels used:    1
 10554 ;; Hardware stack levels required when called:    3
 10555 ;; This function calls:
 10556 ;;		_update_pwm_duty_ccp1
 10557 ;; This function is called by:
 10558 ;;		_main
 10559 ;; This function uses a non-reentrant model
 10560 ;;
 10561                           
 10562                           	psect	text43
 10563  006DBE                     __ptext43:
 10564                           	callstack 0
 10565  006DBE                     _init_ccp1:
 10566                           	callstack 0
 10567  006DBE  FFFF               	dw	65535	; assembler added errata NOP
 10568  006DC0                     
 10569                           ;timer.c: 42:     CCP1CON = 0x00;
 10570  006DC0  0E00               	movlw	0
 10571  006DC2  6EBD               	movwf	189,c	;volatile
 10572  006DC4                     
 10573                           ;timer.c: 45:     update_pwm_duty_ccp1(5e-3);
 10574  006DC4  0E0A               	movlw	10
 10575  006DC6  6E6F               	movwf	update_pwm_duty_ccp1@time_up^0,c
 10576  006DC8  0ED7               	movlw	215
 10577  006DCA  6E70               	movwf	(update_pwm_duty_ccp1@time_up+1)^0,c
 10578  006DCC  0EA3               	movlw	163
 10579  006DCE  6E71               	movwf	(update_pwm_duty_ccp1@time_up+2)^0,c
 10580  006DD0  0E3B               	movlw	59
 10581  006DD2  6E72               	movwf	(update_pwm_duty_ccp1@time_up+3)^0,c
 10582  006DD4  EC26  F03B         	call	_update_pwm_duty_ccp1	;wreg free
 10583  006DD8                     
 10584                           ;timer.c: 48:     CCP1CONbits.CCP1M3 = 1;
 10585  006DD8  86BD               	bsf	189,3,c	;volatile
 10586  006DDA                     
 10587                           ;timer.c: 49:     CCP1CONbits.CCP1M2 = 1;
 10588  006DDA  84BD               	bsf	189,2,c	;volatile
 10589  006DDC  0012               	return		;funcret
 10590  006DDE  FFFF               	dw	65535	; errata NOP
 10591  006DE0                     __end_of_init_ccp1:
 10592                           	callstack 0
 10593                           
 10594 ;; *************** function _update_pwm_duty_ccp1 *****************
 10595 ;; Defined at:
 10596 ;;		line 53 in file "timer.c"
 10597 ;; Parameters:    Size  Location     Type
 10598 ;;  time_up         4  110[COMRAM] void 
 10599 ;; Auto vars:     Size  Location     Type
 10600 ;;  new_duty        2  116[COMRAM] unsigned short 
 10601 ;;  lsbs_duty       1  118[COMRAM] unsigned char 
 10602 ;; Return value:  Size  Location     Type
 10603 ;;                  1    wreg      void 
 10604 ;; Registers used:
 10605 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10606 ;; Tracked objects:
 10607 ;;		On entry : 0/0
 10608 ;;		On exit  : 0/0
 10609 ;;		Unchanged: 0/0
 10610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10611 ;;      Params:         4       0       0       0       0       0       0
 10612 ;;      Locals:         3       0       0       0       0       0       0
 10613 ;;      Temps:          2       0       0       0       0       0       0
 10614 ;;      Totals:         9       0       0       0       0       0       0
 10615 ;;Total ram usage:        9 bytes
 10616 ;; Hardware stack levels used:    1
 10617 ;; Hardware stack levels required when called:    2
 10618 ;; This function calls:
 10619 ;;		___fldiv
 10620 ;;		___flmul
 10621 ;;		___fltol
 10622 ;; This function is called by:
 10623 ;;		_init_ccp1
 10624 ;; This function uses a non-reentrant model
 10625 ;;
 10626                           
 10627                           	psect	text44
 10628  00764C                     __ptext44:
 10629                           	callstack 0
 10630  00764C                     _update_pwm_duty_ccp1:
 10631                           	callstack 0
 10632  00764C  FFFF               	dw	65535	; assembler added errata NOP
 10633  00764E                     
 10634                           ;timer.c: 56:     uint16_t new_duty;;timer.c: 57:     uint8_t lsbs_duty;;timer.c: 59:   
      +                            new_duty = (0.001) / (t_osc * tmr2_prescaler);
 10635  00764E  0EBD               	movlw	189
 10636  007650  6E05               	movwf	___flmul@a^0,c
 10637  007652  0E37               	movlw	55
 10638  007654  6E06               	movwf	(___flmul@a+1)^0,c
 10639  007656  0E86               	movlw	134
 10640  007658  6E07               	movwf	(___flmul@a+2)^0,c
 10641  00765A  0E35               	movlw	53
 10642  00765C  6E08               	movwf	(___flmul@a+3)^0,c
 10643  00765E  C0D3  F001         	movff	_tmr2_prescaler,___flmul@b
 10644  007662  C0D4  F002         	movff	_tmr2_prescaler+1,___flmul@b+1
 10645  007666  C0D5  F003         	movff	_tmr2_prescaler+2,___flmul@b+2
 10646  00766A  C0D6  F004         	movff	_tmr2_prescaler+3,___flmul@b+3
 10647  00766E  EC05  F00D         	call	___flmul	;wreg free
 10648  007672  C001  F01E         	movff	?___flmul,___fldiv@a
 10649  007676  C002  F01F         	movff	?___flmul+1,___fldiv@a+1
 10650  00767A  C003  F020         	movff	?___flmul+2,___fldiv@a+2
 10651  00767E  C004  F021         	movff	?___flmul+3,___fldiv@a+3
 10652  007682  0E6F               	movlw	111
 10653  007684  6E1A               	movwf	___fldiv@b^0,c
 10654  007686  0E12               	movlw	18
 10655  007688  6E1B               	movwf	(___fldiv@b+1)^0,c
 10656  00768A  0E83               	movlw	131
 10657  00768C  6E1C               	movwf	(___fldiv@b+2)^0,c
 10658  00768E  0E3A               	movlw	58
 10659  007690  6E1D               	movwf	(___fldiv@b+3)^0,c
 10660  007692  EC57  F00F         	call	___fldiv	;wreg free
 10661  007696  C01A  F065         	movff	?___fldiv,___fltol@f1
 10662  00769A  C01B  F066         	movff	?___fldiv+1,___fltol@f1+1
 10663  00769E  C01C  F067         	movff	?___fldiv+2,___fltol@f1+2
 10664  0076A2  C01D  F068         	movff	?___fldiv+3,___fltol@f1+3
 10665  0076A6  ECCE  F01E         	call	___fltol	;wreg free
 10666  0076AA  C065  F075         	movff	?___fltol,update_pwm_duty_ccp1@new_duty
 10667  0076AE  C066  F076         	movff	?___fltol+1,update_pwm_duty_ccp1@new_duty+1
 10668  0076B2                     
 10669                           ;timer.c: 60:     lsbs_duty = (uint8_t) new_duty;
 10670  0076B2  C075  F077         	movff	update_pwm_duty_ccp1@new_duty,update_pwm_duty_ccp1@lsbs_duty
 10671  0076B6                     
 10672                           ;timer.c: 64:     if (lsbs_duty & 0x01) CCP1CON |= (1u << 4);
 10673  0076B6  A077               	btfss	update_pwm_duty_ccp1@lsbs_duty^0,0,c
 10674  0076B8  EF60  F03B         	goto	u5861
 10675  0076BC  EF63  F03B         	goto	u5860
 10676  0076C0                     u5861:
 10677  0076C0  FFFF               	dw	65535	; assembler added errata NOP
 10678  0076C2  EF67  F03B         	goto	l4857
 10679  0076C6                     u5860:
 10680  0076C6  FFFF               	dw	65535	; assembler added errata NOP
 10681  0076C8  88BD               	bsf	189,4,c	;volatile
 10682  0076CA  EF69  F03B         	goto	l4859
 10683  0076CE                     l4857:
 10684  0076CE  FFFF               	dw	65535	; assembler added errata NOP
 10685  0076D0  98BD               	bcf	189,4,c	;volatile
 10686  0076D2                     l4859:
 10687  0076D2  FFFF               	dw	65535	; assembler added errata NOP
 10688                           
 10689                           ;timer.c: 67:     if (lsbs_duty & 0x02) CCP1CON |= (1u << 5);
 10690  0076D4  A277               	btfss	update_pwm_duty_ccp1@lsbs_duty^0,1,c
 10691  0076D6  EF6F  F03B         	goto	u5871
 10692  0076DA  EF72  F03B         	goto	u5870
 10693  0076DE                     u5871:
 10694  0076DE  FFFF               	dw	65535	; assembler added errata NOP
 10695  0076E0  EF76  F03B         	goto	l4863
 10696  0076E4                     u5870:
 10697  0076E4  FFFF               	dw	65535	; assembler added errata NOP
 10698  0076E6  8ABD               	bsf	189,5,c	;volatile
 10699  0076E8  EF78  F03B         	goto	l4865
 10700  0076EC                     l4863:
 10701  0076EC  FFFF               	dw	65535	; assembler added errata NOP
 10702  0076EE  9ABD               	bcf	189,5,c	;volatile
 10703  0076F0                     l4865:
 10704  0076F0  FFFF               	dw	65535	; assembler added errata NOP
 10705                           
 10706                           ;timer.c: 71:     CCPR1L = (uint8_t) (new_duty >> 2);
 10707  0076F2  C075  F073         	movff	update_pwm_duty_ccp1@new_duty,??_update_pwm_duty_ccp1
 10708  0076F6  C076  F074         	movff	update_pwm_duty_ccp1@new_duty+1,??_update_pwm_duty_ccp1+1
 10709  0076FA  90D8               	bcf	status,0,c
 10710  0076FC  3274               	rrcf	(??_update_pwm_duty_ccp1+1)^0,f,c
 10711  0076FE  3273               	rrcf	??_update_pwm_duty_ccp1^0,f,c
 10712  007700  90D8               	bcf	status,0,c
 10713  007702  3274               	rrcf	(??_update_pwm_duty_ccp1+1)^0,f,c
 10714  007704  3273               	rrcf	??_update_pwm_duty_ccp1^0,f,c
 10715  007706  5073               	movf	??_update_pwm_duty_ccp1^0,w,c
 10716  007708  6EBE               	movwf	190,c	;volatile
 10717  00770A  0012               	return		;funcret
 10718  00770C  FFFF               	dw	65535	; errata NOP
 10719  00770E                     __end_of_update_pwm_duty_ccp1:
 10720                           	callstack 0
 10721                           
 10722 ;; *************** function ___fldiv *****************
 10723 ;; Defined at:
 10724 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 10725 ;; Parameters:    Size  Location     Type
 10726 ;;  b               4   25[COMRAM] void 
 10727 ;;  a               4   29[COMRAM] void 
 10728 ;; Auto vars:     Size  Location     Type
 10729 ;;  grs             4   44[COMRAM] unsigned long 
 10730 ;;  rem             4   37[COMRAM] unsigned long 
 10731 ;;  new_exp         2   42[COMRAM] short 
 10732 ;;  aexp            1   49[COMRAM] unsigned char 
 10733 ;;  bexp            1   48[COMRAM] unsigned char 
 10734 ;;  sign            1   41[COMRAM] unsigned char 
 10735 ;; Return value:  Size  Location     Type
 10736 ;;                  4   25[COMRAM] unsigned char 
 10737 ;; Registers used:
 10738 ;;		wreg, status,2, status,0
 10739 ;; Tracked objects:
 10740 ;;		On entry : 0/0
 10741 ;;		On exit  : 0/0
 10742 ;;		Unchanged: 0/0
 10743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10744 ;;      Params:         8       0       0       0       0       0       0
 10745 ;;      Locals:        13       0       0       0       0       0       0
 10746 ;;      Temps:          4       0       0       0       0       0       0
 10747 ;;      Totals:        25       0       0       0       0       0       0
 10748 ;;Total ram usage:       25 bytes
 10749 ;; Hardware stack levels used:    1
 10750 ;; Hardware stack levels required when called:    1
 10751 ;; This function calls:
 10752 ;;		Nothing
 10753 ;; This function is called by:
 10754 ;;		_init_timer_2
 10755 ;;		_update_pwm_duty_ccp1
 10756 ;; This function uses a non-reentrant model
 10757 ;;
 10758                           
 10759                           	psect	text45
 10760  001EAE                     __ptext45:
 10761                           	callstack 0
 10762  001EAE                     ___fldiv:
 10763                           	callstack 0
 10764  001EAE  FFFF               	dw	65535	; assembler added errata NOP
 10765  001EB0  501D               	movf	(___fldiv@b+3)^0,w,c
 10766  001EB2  0B80               	andlw	128
 10767  001EB4  6E2A               	movwf	___fldiv@sign^0,c
 10768  001EB6  501D               	movf	(___fldiv@b+3)^0,w,c
 10769  001EB8  241D               	addwf	(___fldiv@b+3)^0,w,c
 10770  001EBA  6E31               	movwf	___fldiv@bexp^0,c
 10771  001EBC  AE1C               	btfss	(___fldiv@b+2)^0,7,c
 10772  001EBE  EF63  F00F         	goto	u5211
 10773  001EC2  EF66  F00F         	goto	u5210
 10774  001EC6                     u5211:
 10775  001EC6  FFFF               	dw	65535	; assembler added errata NOP
 10776  001EC8  EF68  F00F         	goto	l4437
 10777  001ECC                     u5210:
 10778  001ECC  FFFF               	dw	65535	; assembler added errata NOP
 10779  001ECE  8031               	bsf	___fldiv@bexp^0,0,c
 10780  001ED0                     l4437:
 10781  001ED0  FFFF               	dw	65535	; assembler added errata NOP
 10782  001ED2  5031               	movf	___fldiv@bexp^0,w,c
 10783  001ED4  B4D8               	btfsc	status,2,c
 10784  001ED6  EF6F  F00F         	goto	u5221
 10785  001EDA  EF72  F00F         	goto	u5220
 10786  001EDE                     u5221:
 10787  001EDE  FFFF               	dw	65535	; assembler added errata NOP
 10788  001EE0  EF8B  F00F         	goto	l4447
 10789  001EE4                     u5220:
 10790  001EE4  FFFF               	dw	65535	; assembler added errata NOP
 10791  001EE6  2831               	incf	___fldiv@bexp^0,w,c
 10792  001EE8  A4D8               	btfss	status,2,c
 10793  001EEA  EF79  F00F         	goto	u5231
 10794  001EEE  EF7C  F00F         	goto	u5230
 10795  001EF2                     u5231:
 10796  001EF2  FFFF               	dw	65535	; assembler added errata NOP
 10797  001EF4  EF85  F00F         	goto	l4443
 10798  001EF8                     u5230:
 10799  001EF8  FFFF               	dw	65535	; assembler added errata NOP
 10800  001EFA  0E00               	movlw	0
 10801  001EFC  6E1A               	movwf	___fldiv@b^0,c
 10802  001EFE  0E00               	movlw	0
 10803  001F00  6E1B               	movwf	(___fldiv@b+1)^0,c
 10804  001F02  0E00               	movlw	0
 10805  001F04  6E1C               	movwf	(___fldiv@b+2)^0,c
 10806  001F06  0E00               	movlw	0
 10807  001F08  6E1D               	movwf	(___fldiv@b+3)^0,c
 10808  001F0A                     l4443:
 10809  001F0A  FFFF               	dw	65535	; assembler added errata NOP
 10810  001F0C  8E1C               	bsf	(___fldiv@b+2)^0,7,c
 10811  001F0E  0E00               	movlw	0
 10812  001F10  6E1D               	movwf	(___fldiv@b+3)^0,c
 10813  001F12  EF94  F00F         	goto	l4449
 10814  001F16                     l4447:
 10815  001F16  FFFF               	dw	65535	; assembler added errata NOP
 10816  001F18  0E00               	movlw	0
 10817  001F1A  6E1A               	movwf	___fldiv@b^0,c
 10818  001F1C  0E00               	movlw	0
 10819  001F1E  6E1B               	movwf	(___fldiv@b+1)^0,c
 10820  001F20  0E00               	movlw	0
 10821  001F22  6E1C               	movwf	(___fldiv@b+2)^0,c
 10822  001F24  0E00               	movlw	0
 10823  001F26  6E1D               	movwf	(___fldiv@b+3)^0,c
 10824  001F28                     l4449:
 10825  001F28  FFFF               	dw	65535	; assembler added errata NOP
 10826  001F2A  5021               	movf	(___fldiv@a+3)^0,w,c
 10827  001F2C  0B80               	andlw	128
 10828  001F2E  1A2A               	xorwf	___fldiv@sign^0,f,c
 10829  001F30  5021               	movf	(___fldiv@a+3)^0,w,c
 10830  001F32  2421               	addwf	(___fldiv@a+3)^0,w,c
 10831  001F34  6E32               	movwf	___fldiv@aexp^0,c
 10832  001F36  AE20               	btfss	(___fldiv@a+2)^0,7,c
 10833  001F38  EFA0  F00F         	goto	u5241
 10834  001F3C  EFA3  F00F         	goto	u5240
 10835  001F40                     u5241:
 10836  001F40  FFFF               	dw	65535	; assembler added errata NOP
 10837  001F42  EFA5  F00F         	goto	l4457
 10838  001F46                     u5240:
 10839  001F46  FFFF               	dw	65535	; assembler added errata NOP
 10840  001F48  8032               	bsf	___fldiv@aexp^0,0,c
 10841  001F4A                     l4457:
 10842  001F4A  FFFF               	dw	65535	; assembler added errata NOP
 10843  001F4C  5032               	movf	___fldiv@aexp^0,w,c
 10844  001F4E  B4D8               	btfsc	status,2,c
 10845  001F50  EFAC  F00F         	goto	u5251
 10846  001F54  EFAF  F00F         	goto	u5250
 10847  001F58                     u5251:
 10848  001F58  FFFF               	dw	65535	; assembler added errata NOP
 10849  001F5A  EFC8  F00F         	goto	l4467
 10850  001F5E                     u5250:
 10851  001F5E  FFFF               	dw	65535	; assembler added errata NOP
 10852  001F60  2832               	incf	___fldiv@aexp^0,w,c
 10853  001F62  A4D8               	btfss	status,2,c
 10854  001F64  EFB6  F00F         	goto	u5261
 10855  001F68  EFB9  F00F         	goto	u5260
 10856  001F6C                     u5261:
 10857  001F6C  FFFF               	dw	65535	; assembler added errata NOP
 10858  001F6E  EFC2  F00F         	goto	l4463
 10859  001F72                     u5260:
 10860  001F72  FFFF               	dw	65535	; assembler added errata NOP
 10861  001F74  0E00               	movlw	0
 10862  001F76  6E1E               	movwf	___fldiv@a^0,c
 10863  001F78  0E00               	movlw	0
 10864  001F7A  6E1F               	movwf	(___fldiv@a+1)^0,c
 10865  001F7C  0E00               	movlw	0
 10866  001F7E  6E20               	movwf	(___fldiv@a+2)^0,c
 10867  001F80  0E00               	movlw	0
 10868  001F82  6E21               	movwf	(___fldiv@a+3)^0,c
 10869  001F84                     l4463:
 10870  001F84  FFFF               	dw	65535	; assembler added errata NOP
 10871  001F86  8E20               	bsf	(___fldiv@a+2)^0,7,c
 10872  001F88  0E00               	movlw	0
 10873  001F8A  6E21               	movwf	(___fldiv@a+3)^0,c
 10874  001F8C  EFD1  F00F         	goto	l4469
 10875  001F90                     l4467:
 10876  001F90  FFFF               	dw	65535	; assembler added errata NOP
 10877  001F92  0E00               	movlw	0
 10878  001F94  6E1E               	movwf	___fldiv@a^0,c
 10879  001F96  0E00               	movlw	0
 10880  001F98  6E1F               	movwf	(___fldiv@a+1)^0,c
 10881  001F9A  0E00               	movlw	0
 10882  001F9C  6E20               	movwf	(___fldiv@a+2)^0,c
 10883  001F9E  0E00               	movlw	0
 10884  001FA0  6E21               	movwf	(___fldiv@a+3)^0,c
 10885  001FA2                     l4469:
 10886  001FA2  FFFF               	dw	65535	; assembler added errata NOP
 10887  001FA4  501E               	movf	___fldiv@a^0,w,c
 10888  001FA6  101F               	iorwf	(___fldiv@a+1)^0,w,c
 10889  001FA8  1020               	iorwf	(___fldiv@a+2)^0,w,c
 10890  001FAA  1021               	iorwf	(___fldiv@a+3)^0,w,c
 10891  001FAC  A4D8               	btfss	status,2,c
 10892  001FAE  EFDB  F00F         	goto	u5271
 10893  001FB2  EFDE  F00F         	goto	u5270
 10894  001FB6                     u5271:
 10895  001FB6  FFFF               	dw	65535	; assembler added errata NOP
 10896  001FB8  EFF8  F00F         	goto	l4481
 10897  001FBC                     u5270:
 10898  001FBC  FFFF               	dw	65535	; assembler added errata NOP
 10899  001FBE  0E00               	movlw	0
 10900  001FC0  6E1A               	movwf	___fldiv@b^0,c
 10901  001FC2  0E00               	movlw	0
 10902  001FC4  6E1B               	movwf	(___fldiv@b+1)^0,c
 10903  001FC6  0E00               	movlw	0
 10904  001FC8  6E1C               	movwf	(___fldiv@b+2)^0,c
 10905  001FCA  0E00               	movlw	0
 10906  001FCC  6E1D               	movwf	(___fldiv@b+3)^0,c
 10907  001FCE  0E80               	movlw	128
 10908  001FD0  121C               	iorwf	(___fldiv@b+2)^0,f,c
 10909  001FD2  0E7F               	movlw	127
 10910  001FD4  121D               	iorwf	(___fldiv@b+3)^0,f,c
 10911  001FD6                     l4475:
 10912  001FD6  FFFF               	dw	65535	; assembler added errata NOP
 10913  001FD8  502A               	movf	___fldiv@sign^0,w,c
 10914  001FDA  121D               	iorwf	(___fldiv@b+3)^0,f,c
 10915  001FDC  C01A  F01A         	movff	___fldiv@b,?___fldiv
 10916  001FE0  C01B  F01B         	movff	___fldiv@b+1,?___fldiv+1
 10917  001FE4  C01C  F01C         	movff	___fldiv@b+2,?___fldiv+2
 10918  001FE8  C01D  F01D         	movff	___fldiv@b+3,?___fldiv+3
 10919  001FEC  EF6D  F011         	goto	l881
 10920  001FF0                     l4481:
 10921  001FF0  FFFF               	dw	65535	; assembler added errata NOP
 10922  001FF2  5031               	movf	___fldiv@bexp^0,w,c
 10923  001FF4  A4D8               	btfss	status,2,c
 10924  001FF6  EFFF  F00F         	goto	u5281
 10925  001FFA  EF02  F010         	goto	u5280
 10926  001FFE                     u5281:
 10927  001FFE  FFFF               	dw	65535	; assembler added errata NOP
 10928  002000  EF0D  F010         	goto	l4489
 10929  002004                     u5280:
 10930  002004  FFFF               	dw	65535	; assembler added errata NOP
 10931  002006  0E00               	movlw	0
 10932  002008  6E1A               	movwf	?___fldiv^0,c
 10933  00200A  0E00               	movlw	0
 10934  00200C  6E1B               	movwf	(?___fldiv+1)^0,c
 10935  00200E  0E00               	movlw	0
 10936  002010  6E1C               	movwf	(?___fldiv+2)^0,c
 10937  002012  0E00               	movlw	0
 10938  002014  6E1D               	movwf	(?___fldiv+3)^0,c
 10939  002016  EF6D  F011         	goto	l881
 10940  00201A                     l4489:
 10941  00201A  FFFF               	dw	65535	; assembler added errata NOP
 10942  00201C  5032               	movf	___fldiv@aexp^0,w,c
 10943  00201E  C031  F022         	movff	___fldiv@bexp,??___fldiv
 10944  002022  6A23               	clrf	(??___fldiv+1)^0,c
 10945  002024  5E22               	subwf	??___fldiv^0,f,c
 10946  002026  0E00               	movlw	0
 10947  002028  5A23               	subwfb	(??___fldiv+1)^0,f,c
 10948  00202A  0E7F               	movlw	127
 10949  00202C  2422               	addwf	??___fldiv^0,w,c
 10950  00202E  6E2B               	movwf	___fldiv@new_exp^0,c
 10951  002030  0E00               	movlw	0
 10952  002032  2023               	addwfc	(??___fldiv+1)^0,w,c
 10953  002034  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
 10954  002036  C01A  F026         	movff	___fldiv@b,___fldiv@rem
 10955  00203A  C01B  F027         	movff	___fldiv@b+1,___fldiv@rem+1
 10956  00203E  C01C  F028         	movff	___fldiv@b+2,___fldiv@rem+2
 10957  002042  C01D  F029         	movff	___fldiv@b+3,___fldiv@rem+3
 10958  002046  0E00               	movlw	0
 10959  002048  6E1A               	movwf	___fldiv@b^0,c
 10960  00204A  0E00               	movlw	0
 10961  00204C  6E1B               	movwf	(___fldiv@b+1)^0,c
 10962  00204E  0E00               	movlw	0
 10963  002050  6E1C               	movwf	(___fldiv@b+2)^0,c
 10964  002052  0E00               	movlw	0
 10965  002054  6E1D               	movwf	(___fldiv@b+3)^0,c
 10966  002056  0E00               	movlw	0
 10967  002058  6E2D               	movwf	___fldiv@grs^0,c
 10968  00205A  0E00               	movlw	0
 10969  00205C  6E2E               	movwf	(___fldiv@grs+1)^0,c
 10970  00205E  0E00               	movlw	0
 10971  002060  6E2F               	movwf	(___fldiv@grs+2)^0,c
 10972  002062  0E00               	movlw	0
 10973  002064  6E30               	movwf	(___fldiv@grs+3)^0,c
 10974  002066  0E00               	movlw	0
 10975  002068  6E32               	movwf	___fldiv@aexp^0,c
 10976  00206A  EF79  F010         	goto	l883
 10977  00206E                     l4499:
 10978  00206E  FFFF               	dw	65535	; assembler added errata NOP
 10979  002070  5032               	movf	___fldiv@aexp^0,w,c
 10980  002072  B4D8               	btfsc	status,2,c
 10981  002074  EF3E  F010         	goto	u5291
 10982  002078  EF41  F010         	goto	u5290
 10983  00207C                     u5291:
 10984  00207C  FFFF               	dw	65535	; assembler added errata NOP
 10985  00207E  EF5C  F010         	goto	l4507
 10986  002082                     u5290:
 10987  002082  FFFF               	dw	65535	; assembler added errata NOP
 10988  002084  90D8               	bcf	status,0,c
 10989  002086  3626               	rlcf	___fldiv@rem^0,f,c
 10990  002088  3627               	rlcf	(___fldiv@rem+1)^0,f,c
 10991  00208A  3628               	rlcf	(___fldiv@rem+2)^0,f,c
 10992  00208C  3629               	rlcf	(___fldiv@rem+3)^0,f,c
 10993  00208E  90D8               	bcf	status,0,c
 10994  002090  361A               	rlcf	___fldiv@b^0,f,c
 10995  002092  361B               	rlcf	(___fldiv@b+1)^0,f,c
 10996  002094  361C               	rlcf	(___fldiv@b+2)^0,f,c
 10997  002096  361D               	rlcf	(___fldiv@b+3)^0,f,c
 10998  002098  AE30               	btfss	(___fldiv@grs+3)^0,7,c
 10999  00209A  EF51  F010         	goto	u5301
 11000  00209E  EF54  F010         	goto	u5300
 11001  0020A2                     u5301:
 11002  0020A2  FFFF               	dw	65535	; assembler added errata NOP
 11003  0020A4  EF56  F010         	goto	l886
 11004  0020A8                     u5300:
 11005  0020A8  FFFF               	dw	65535	; assembler added errata NOP
 11006  0020AA  801A               	bsf	___fldiv@b^0,0,c
 11007  0020AC                     l886:
 11008  0020AC  FFFF               	dw	65535	; assembler added errata NOP
 11009  0020AE  90D8               	bcf	status,0,c
 11010  0020B0  362D               	rlcf	___fldiv@grs^0,f,c
 11011  0020B2  362E               	rlcf	(___fldiv@grs+1)^0,f,c
 11012  0020B4  362F               	rlcf	(___fldiv@grs+2)^0,f,c
 11013  0020B6  3630               	rlcf	(___fldiv@grs+3)^0,f,c
 11014  0020B8                     l4507:
 11015  0020B8  FFFF               	dw	65535	; assembler added errata NOP
 11016  0020BA  501E               	movf	___fldiv@a^0,w,c
 11017  0020BC  5C26               	subwf	___fldiv@rem^0,w,c
 11018  0020BE  501F               	movf	(___fldiv@a+1)^0,w,c
 11019  0020C0  5827               	subwfb	(___fldiv@rem+1)^0,w,c
 11020  0020C2  5020               	movf	(___fldiv@a+2)^0,w,c
 11021  0020C4  5828               	subwfb	(___fldiv@rem+2)^0,w,c
 11022  0020C6  5021               	movf	(___fldiv@a+3)^0,w,c
 11023  0020C8  5829               	subwfb	(___fldiv@rem+3)^0,w,c
 11024  0020CA  A0D8               	btfss	status,0,c
 11025  0020CC  EF6A  F010         	goto	u5311
 11026  0020D0  EF6D  F010         	goto	u5310
 11027  0020D4                     u5311:
 11028  0020D4  FFFF               	dw	65535	; assembler added errata NOP
 11029  0020D6  EF77  F010         	goto	l4513
 11030  0020DA                     u5310:
 11031  0020DA  FFFF               	dw	65535	; assembler added errata NOP
 11032  0020DC  8C30               	bsf	(___fldiv@grs+3)^0,6,c
 11033  0020DE  501E               	movf	___fldiv@a^0,w,c
 11034  0020E0  5E26               	subwf	___fldiv@rem^0,f,c
 11035  0020E2  501F               	movf	(___fldiv@a+1)^0,w,c
 11036  0020E4  5A27               	subwfb	(___fldiv@rem+1)^0,f,c
 11037  0020E6  5020               	movf	(___fldiv@a+2)^0,w,c
 11038  0020E8  5A28               	subwfb	(___fldiv@rem+2)^0,f,c
 11039  0020EA  5021               	movf	(___fldiv@a+3)^0,w,c
 11040  0020EC  5A29               	subwfb	(___fldiv@rem+3)^0,f,c
 11041  0020EE                     l4513:
 11042  0020EE  FFFF               	dw	65535	; assembler added errata NOP
 11043  0020F0  2A32               	incf	___fldiv@aexp^0,f,c
 11044  0020F2                     l883:
 11045  0020F2  FFFF               	dw	65535	; assembler added errata NOP
 11046  0020F4  0E19               	movlw	25
 11047  0020F6  6432               	cpfsgt	___fldiv@aexp^0,c
 11048  0020F8  EF80  F010         	goto	u5321
 11049  0020FC  EF83  F010         	goto	u5320
 11050  002100                     u5321:
 11051  002100  FFFF               	dw	65535	; assembler added errata NOP
 11052  002102  EF37  F010         	goto	l4499
 11053  002106                     u5320:
 11054  002106  FFFF               	dw	65535	; assembler added errata NOP
 11055  002108  5026               	movf	___fldiv@rem^0,w,c
 11056  00210A  1027               	iorwf	(___fldiv@rem+1)^0,w,c
 11057  00210C  1028               	iorwf	(___fldiv@rem+2)^0,w,c
 11058  00210E  1029               	iorwf	(___fldiv@rem+3)^0,w,c
 11059  002110  B4D8               	btfsc	status,2,c
 11060  002112  EF8D  F010         	goto	u5331
 11061  002116  EF90  F010         	goto	u5330
 11062  00211A                     u5331:
 11063  00211A  FFFF               	dw	65535	; assembler added errata NOP
 11064  00211C  EFAD  F010         	goto	l4525
 11065  002120                     u5330:
 11066  002120  FFFF               	dw	65535	; assembler added errata NOP
 11067  002122  802D               	bsf	___fldiv@grs^0,0,c
 11068  002124  EFAD  F010         	goto	l4525
 11069  002128                     l4519:
 11070  002128  FFFF               	dw	65535	; assembler added errata NOP
 11071  00212A  90D8               	bcf	status,0,c
 11072  00212C  361A               	rlcf	___fldiv@b^0,f,c
 11073  00212E  361B               	rlcf	(___fldiv@b+1)^0,f,c
 11074  002130  361C               	rlcf	(___fldiv@b+2)^0,f,c
 11075  002132  361D               	rlcf	(___fldiv@b+3)^0,f,c
 11076  002134  AE30               	btfss	(___fldiv@grs+3)^0,7,c
 11077  002136  EF9F  F010         	goto	u5341
 11078  00213A  EFA2  F010         	goto	u5340
 11079  00213E                     u5341:
 11080  00213E  FFFF               	dw	65535	; assembler added errata NOP
 11081  002140  EFA4  F010         	goto	l892
 11082  002144                     u5340:
 11083  002144  FFFF               	dw	65535	; assembler added errata NOP
 11084  002146  801A               	bsf	___fldiv@b^0,0,c
 11085  002148                     l892:
 11086  002148  FFFF               	dw	65535	; assembler added errata NOP
 11087  00214A  90D8               	bcf	status,0,c
 11088  00214C  362D               	rlcf	___fldiv@grs^0,f,c
 11089  00214E  362E               	rlcf	(___fldiv@grs+1)^0,f,c
 11090  002150  362F               	rlcf	(___fldiv@grs+2)^0,f,c
 11091  002152  3630               	rlcf	(___fldiv@grs+3)^0,f,c
 11092  002154  062B               	decf	___fldiv@new_exp^0,f,c
 11093  002156  A0D8               	btfss	status,0,c
 11094  002158  062C               	decf	(___fldiv@new_exp+1)^0,f,c
 11095  00215A                     l4525:
 11096  00215A  FFFF               	dw	65535	; assembler added errata NOP
 11097  00215C  AE1C               	btfss	(___fldiv@b+2)^0,7,c
 11098  00215E  EFB3  F010         	goto	u5351
 11099  002162  EFB6  F010         	goto	u5350
 11100  002166                     u5351:
 11101  002166  FFFF               	dw	65535	; assembler added errata NOP
 11102  002168  EF94  F010         	goto	l4519
 11103  00216C                     u5350:
 11104  00216C  FFFF               	dw	65535	; assembler added errata NOP
 11105  00216E  0E00               	movlw	0
 11106  002170  6E32               	movwf	___fldiv@aexp^0,c
 11107  002172  AE30               	btfss	(___fldiv@grs+3)^0,7,c
 11108  002174  EFBE  F010         	goto	u5361
 11109  002178  EFC1  F010         	goto	u5360
 11110  00217C                     u5361:
 11111  00217C  FFFF               	dw	65535	; assembler added errata NOP
 11112  00217E  EFEC  F010         	goto	l894
 11113  002182                     u5360:
 11114  002182  FFFF               	dw	65535	; assembler added errata NOP
 11115  002184  0EFF               	movlw	255
 11116  002186  142D               	andwf	___fldiv@grs^0,w,c
 11117  002188  6E22               	movwf	??___fldiv^0,c
 11118  00218A  0EFF               	movlw	255
 11119  00218C  142E               	andwf	(___fldiv@grs+1)^0,w,c
 11120  00218E  6E23               	movwf	(??___fldiv+1)^0,c
 11121  002190  0EFF               	movlw	255
 11122  002192  142F               	andwf	(___fldiv@grs+2)^0,w,c
 11123  002194  6E24               	movwf	(??___fldiv+2)^0,c
 11124  002196  0E7F               	movlw	127
 11125  002198  1430               	andwf	(___fldiv@grs+3)^0,w,c
 11126  00219A  6E25               	movwf	(??___fldiv+3)^0,c
 11127  00219C  5022               	movf	??___fldiv^0,w,c
 11128  00219E  1023               	iorwf	(??___fldiv+1)^0,w,c
 11129  0021A0  1024               	iorwf	(??___fldiv+2)^0,w,c
 11130  0021A2  1025               	iorwf	(??___fldiv+3)^0,w,c
 11131  0021A4  B4D8               	btfsc	status,2,c
 11132  0021A6  EFD7  F010         	goto	u5371
 11133  0021AA  EFDA  F010         	goto	u5370
 11134  0021AE                     u5371:
 11135  0021AE  FFFF               	dw	65535	; assembler added errata NOP
 11136  0021B0  EFE0  F010         	goto	l895
 11137  0021B4                     u5370:
 11138  0021B4  FFFF               	dw	65535	; assembler added errata NOP
 11139  0021B6                     l4533:
 11140  0021B6  FFFF               	dw	65535	; assembler added errata NOP
 11141  0021B8  0E01               	movlw	1
 11142  0021BA  6E32               	movwf	___fldiv@aexp^0,c
 11143  0021BC  EFEC  F010         	goto	l894
 11144  0021C0                     l895:
 11145  0021C0  FFFF               	dw	65535	; assembler added errata NOP
 11146  0021C2  A01A               	btfss	___fldiv@b^0,0,c
 11147  0021C4  EFE6  F010         	goto	u5381
 11148  0021C8  EFE9  F010         	goto	u5380
 11149  0021CC                     u5381:
 11150  0021CC  FFFF               	dw	65535	; assembler added errata NOP
 11151  0021CE  EFEC  F010         	goto	l894
 11152  0021D2                     u5380:
 11153  0021D2  FFFF               	dw	65535	; assembler added errata NOP
 11154  0021D4  EFDB  F010         	goto	l4533
 11155  0021D8                     l894:
 11156  0021D8  FFFF               	dw	65535	; assembler added errata NOP
 11157  0021DA  5032               	movf	___fldiv@aexp^0,w,c
 11158  0021DC  B4D8               	btfsc	status,2,c
 11159  0021DE  EFF3  F010         	goto	u5391
 11160  0021E2  EFF6  F010         	goto	u5390
 11161  0021E6                     u5391:
 11162  0021E6  FFFF               	dw	65535	; assembler added errata NOP
 11163  0021E8  EF1D  F011         	goto	l4545
 11164  0021EC                     u5390:
 11165  0021EC  FFFF               	dw	65535	; assembler added errata NOP
 11166  0021EE  0E01               	movlw	1
 11167  0021F0  261A               	addwf	___fldiv@b^0,f,c
 11168  0021F2  0E00               	movlw	0
 11169  0021F4  221B               	addwfc	(___fldiv@b+1)^0,f,c
 11170  0021F6  221C               	addwfc	(___fldiv@b+2)^0,f,c
 11171  0021F8  221D               	addwfc	(___fldiv@b+3)^0,f,c
 11172  0021FA  A01D               	btfss	(___fldiv@b+3)^0,0,c
 11173  0021FC  EF02  F011         	goto	u5401
 11174  002200  EF05  F011         	goto	u5400
 11175  002204                     u5401:
 11176  002204  FFFF               	dw	65535	; assembler added errata NOP
 11177  002206  EF1D  F011         	goto	l4545
 11178  00220A                     u5400:
 11179  00220A  FFFF               	dw	65535	; assembler added errata NOP
 11180  00220C  C01A  F022         	movff	___fldiv@b,??___fldiv
 11181  002210  C01B  F023         	movff	___fldiv@b+1,??___fldiv+1
 11182  002214  C01C  F024         	movff	___fldiv@b+2,??___fldiv+2
 11183  002218  C01D  F025         	movff	___fldiv@b+3,??___fldiv+3
 11184  00221C  3425               	rlcf	(??___fldiv+3)^0,w,c
 11185  00221E  3225               	rrcf	(??___fldiv+3)^0,f,c
 11186  002220  3224               	rrcf	(??___fldiv+2)^0,f,c
 11187  002222  3223               	rrcf	(??___fldiv+1)^0,f,c
 11188  002224  3222               	rrcf	??___fldiv^0,f,c
 11189  002226  C022  F01A         	movff	??___fldiv,___fldiv@b
 11190  00222A  C023  F01B         	movff	??___fldiv+1,___fldiv@b+1
 11191  00222E  C024  F01C         	movff	??___fldiv+2,___fldiv@b+2
 11192  002232  C025  F01D         	movff	??___fldiv+3,___fldiv@b+3
 11193  002236  4A2B               	infsnz	___fldiv@new_exp^0,f,c
 11194  002238  2A2C               	incf	(___fldiv@new_exp+1)^0,f,c
 11195  00223A                     l4545:
 11196  00223A  FFFF               	dw	65535	; assembler added errata NOP
 11197  00223C  BE2C               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11198  00223E  EF29  F011         	goto	u5411
 11199  002242  502C               	movf	(___fldiv@new_exp+1)^0,w,c
 11200  002244  E109               	bnz	u5410
 11201  002246  282B               	incf	___fldiv@new_exp^0,w,c
 11202  002248  A0D8               	btfss	status,0,c
 11203  00224A  EF29  F011         	goto	u5411
 11204  00224E  EF2C  F011         	goto	u5410
 11205  002252                     u5411:
 11206  002252  FFFF               	dw	65535	; assembler added errata NOP
 11207  002254  EF38  F011         	goto	l4549
 11208  002258                     u5410:
 11209  002258  FFFF               	dw	65535	; assembler added errata NOP
 11210  00225A  0E00               	movlw	0
 11211  00225C  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
 11212  00225E  682B               	setf	___fldiv@new_exp^0,c
 11213  002260  0E00               	movlw	0
 11214  002262  6E1A               	movwf	___fldiv@b^0,c
 11215  002264  0E00               	movlw	0
 11216  002266  6E1B               	movwf	(___fldiv@b+1)^0,c
 11217  002268  0E00               	movlw	0
 11218  00226A  6E1C               	movwf	(___fldiv@b+2)^0,c
 11219  00226C  0E00               	movlw	0
 11220  00226E  6E1D               	movwf	(___fldiv@b+3)^0,c
 11221  002270                     l4549:
 11222  002270  FFFF               	dw	65535	; assembler added errata NOP
 11223  002272  BE2C               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11224  002274  EF47  F011         	goto	u5420
 11225  002278  502C               	movf	(___fldiv@new_exp+1)^0,w,c
 11226  00227A  E106               	bnz	u5421
 11227  00227C  042B               	decf	___fldiv@new_exp^0,w,c
 11228  00227E  B0D8               	btfsc	status,0,c
 11229  002280  EF44  F011         	goto	u5421
 11230  002284  EF47  F011         	goto	u5420
 11231  002288                     u5421:
 11232  002288  FFFF               	dw	65535	; assembler added errata NOP
 11233  00228A  EF56  F011         	goto	l4553
 11234  00228E                     u5420:
 11235  00228E  FFFF               	dw	65535	; assembler added errata NOP
 11236  002290  0E00               	movlw	0
 11237  002292  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
 11238  002294  0E00               	movlw	0
 11239  002296  6E2B               	movwf	___fldiv@new_exp^0,c
 11240  002298  0E00               	movlw	0
 11241  00229A  6E1A               	movwf	___fldiv@b^0,c
 11242  00229C  0E00               	movlw	0
 11243  00229E  6E1B               	movwf	(___fldiv@b+1)^0,c
 11244  0022A0  0E00               	movlw	0
 11245  0022A2  6E1C               	movwf	(___fldiv@b+2)^0,c
 11246  0022A4  0E00               	movlw	0
 11247  0022A6  6E1D               	movwf	(___fldiv@b+3)^0,c
 11248  0022A8  0E00               	movlw	0
 11249  0022AA  6E2A               	movwf	___fldiv@sign^0,c
 11250  0022AC                     l4553:
 11251  0022AC  FFFF               	dw	65535	; assembler added errata NOP
 11252  0022AE  C02B  F031         	movff	___fldiv@new_exp,___fldiv@bexp
 11253  0022B2  A031               	btfss	___fldiv@bexp^0,0,c
 11254  0022B4  EF5E  F011         	goto	u5431
 11255  0022B8  EF61  F011         	goto	u5430
 11256  0022BC                     u5431:
 11257  0022BC  FFFF               	dw	65535	; assembler added errata NOP
 11258  0022BE  EF65  F011         	goto	l4559
 11259  0022C2                     u5430:
 11260  0022C2  FFFF               	dw	65535	; assembler added errata NOP
 11261  0022C4  8E1C               	bsf	(___fldiv@b+2)^0,7,c
 11262  0022C6  EF67  F011         	goto	l4561
 11263  0022CA                     l4559:
 11264  0022CA  FFFF               	dw	65535	; assembler added errata NOP
 11265  0022CC  9E1C               	bcf	(___fldiv@b+2)^0,7,c
 11266  0022CE                     l4561:
 11267  0022CE  FFFF               	dw	65535	; assembler added errata NOP
 11268  0022D0  90D8               	bcf	status,0,c
 11269  0022D2  3031               	rrcf	___fldiv@bexp^0,w,c
 11270  0022D4  6E1D               	movwf	(___fldiv@b+3)^0,c
 11271  0022D6  EFEB  F00F         	goto	l4475
 11272  0022DA                     l881:
 11273  0022DA  FFFF               	dw	65535	; assembler added errata NOP
 11274  0022DC  0012               	return		;funcret
 11275  0022DE  FFFF               	dw	65535	; errata NOP
 11276  0022E0                     __end_of___fldiv:
 11277                           	callstack 0
 11278                           
 11279 ;; *************** function _init_USART *****************
 11280 ;; Defined at:
 11281 ;;		line 13 in file "serial_rs232.c"
 11282 ;; Parameters:    Size  Location     Type
 11283 ;;		None
 11284 ;; Auto vars:     Size  Location     Type
 11285 ;;		None
 11286 ;; Return value:  Size  Location     Type
 11287 ;;                  1    wreg      void 
 11288 ;; Registers used:
 11289 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11290 ;; Tracked objects:
 11291 ;;		On entry : 0/0
 11292 ;;		On exit  : 0/0
 11293 ;;		Unchanged: 0/0
 11294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11295 ;;      Params:         0       0       0       0       0       0       0
 11296 ;;      Locals:         0       0       0       0       0       0       0
 11297 ;;      Temps:          0       0       0       0       0       0       0
 11298 ;;      Totals:         0       0       0       0       0       0       0
 11299 ;;Total ram usage:        0 bytes
 11300 ;; Hardware stack levels used:    1
 11301 ;; Hardware stack levels required when called:    4
 11302 ;; This function calls:
 11303 ;;		___fltol
 11304 ;;		_roundf
 11305 ;; This function is called by:
 11306 ;;		_main
 11307 ;; This function uses a non-reentrant model
 11308 ;;
 11309                           
 11310                           	psect	text46
 11311  006F18                     __ptext46:
 11312                           	callstack 0
 11313  006F18                     _init_USART:
 11314                           	callstack 0
 11315  006F18  FFFF               	dw	65535	; assembler added errata NOP
 11316  006F1A                     
 11317                           ;serial_rs232.c: 24:     SPBRG = roundf(((fosc / desired_baudrate) / 16) - 1);
 11318  006F1A  0E55               	movlw	85
 11319  006F1C  6E4B               	movwf	roundf@x^0,c
 11320  006F1E  0E55               	movlw	85
 11321  006F20  6E4C               	movwf	(roundf@x+1)^0,c
 11322  006F22  0EC8               	movlw	200
 11323  006F24  6E4D               	movwf	(roundf@x+2)^0,c
 11324  006F26  0E41               	movlw	65
 11325  006F28  6E4E               	movwf	(roundf@x+3)^0,c
 11326  006F2A  EC70  F013         	call	_roundf	;wreg free
 11327  006F2E  C04B  F065         	movff	?_roundf,___fltol@f1
 11328  006F32  C04C  F066         	movff	?_roundf+1,___fltol@f1+1
 11329  006F36  C04D  F067         	movff	?_roundf+2,___fltol@f1+2
 11330  006F3A  C04E  F068         	movff	?_roundf+3,___fltol@f1+3
 11331  006F3E  ECCE  F01E         	call	___fltol	;wreg free
 11332  006F42  5065               	movf	?___fltol^0,w,c
 11333  006F44  6EAF               	movwf	175,c	;volatile
 11334  006F46                     
 11335                           ;serial_rs232.c: 28:     TXSTAbits.TX9 = 0;
 11336  006F46  9CAC               	bcf	172,6,c	;volatile
 11337  006F48                     
 11338                           ;serial_rs232.c: 29:     TXSTAbits.TXEN = 1;
 11339  006F48  8AAC               	bsf	172,5,c	;volatile
 11340  006F4A                     
 11341                           ;serial_rs232.c: 30:     TXSTAbits.SYNC =0;
 11342  006F4A  98AC               	bcf	172,4,c	;volatile
 11343  006F4C                     
 11344                           ;serial_rs232.c: 31:     TXSTAbits.BRGH = 1;
 11345  006F4C  84AC               	bsf	172,2,c	;volatile
 11346  006F4E                     
 11347                           ;serial_rs232.c: 33:     RCSTAbits.SPEN = 1;
 11348  006F4E  8EAB               	bsf	171,7,c	;volatile
 11349  006F50                     
 11350                           ;serial_rs232.c: 34:     RCSTAbits.RX9 = 0;
 11351  006F50  9CAB               	bcf	171,6,c	;volatile
 11352  006F52                     
 11353                           ;serial_rs232.c: 35:     RCSTAbits.CREN = 1;
 11354  006F52  88AB               	bsf	171,4,c	;volatile
 11355  006F54  0012               	return		;funcret
 11356  006F56  FFFF               	dw	65535	; errata NOP
 11357  006F58                     __end_of_init_USART:
 11358                           	callstack 0
 11359                           
 11360 ;; *************** function _roundf *****************
 11361 ;; Defined at:
 11362 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\roundf.c"
 11363 ;; Parameters:    Size  Location     Type
 11364 ;;  x               4   74[COMRAM] float 
 11365 ;; Auto vars:     Size  Location     Type
 11366 ;;  y               4   96[COMRAM] float 
 11367 ;;  u               4   92[COMRAM] struct .
 11368 ;;  e               2   86[COMRAM] int 
 11369 ;; Return value:  Size  Location     Type
 11370 ;;                  4   74[COMRAM] float 
 11371 ;; Registers used:
 11372 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11373 ;; Tracked objects:
 11374 ;;		On entry : 0/0
 11375 ;;		On exit  : 0/0
 11376 ;;		Unchanged: 0/0
 11377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11378 ;;      Params:         4       0       0       0       0       0       0
 11379 ;;      Locals:        18       0       0       0       0       0       0
 11380 ;;      Temps:          4       0       0       0       0       0       0
 11381 ;;      Totals:        26       0       0       0       0       0       0
 11382 ;;Total ram usage:       26 bytes
 11383 ;; Hardware stack levels used:    1
 11384 ;; Hardware stack levels required when called:    3
 11385 ;; This function calls:
 11386 ;;		___fladd
 11387 ;;		___flge
 11388 ;;		___flmul
 11389 ;;		___flneg
 11390 ;;		___flsub
 11391 ;; This function is called by:
 11392 ;;		_init_USART
 11393 ;; This function uses a non-reentrant model
 11394 ;;
 11395                           
 11396                           	psect	text47
 11397  0026E0                     __ptext47:
 11398                           	callstack 0
 11399  0026E0                     _roundf:
 11400                           	callstack 0
 11401  0026E0  FFFF               	dw	65535	; assembler added errata NOP
 11402  0026E2  C080  F05D         	movff	roundf@F525,roundf@u
 11403  0026E6  C081  F05E         	movff	roundf@F525+1,roundf@u+1
 11404  0026EA  C082  F05F         	movff	roundf@F525+2,roundf@u+2
 11405  0026EE  C083  F060         	movff	roundf@F525+3,roundf@u+3
 11406  0026F2  C04B  F05D         	movff	roundf@x,roundf@u
 11407  0026F6  C04C  F05E         	movff	roundf@x+1,roundf@u+1
 11408  0026FA  C04D  F05F         	movff	roundf@x+2,roundf@u+2
 11409  0026FE  C04E  F060         	movff	roundf@x+3,roundf@u+3
 11410  002702  C05D  F04F         	movff	roundf@u,??_roundf
 11411  002706  C05E  F050         	movff	roundf@u+1,??_roundf+1
 11412  00270A  C05F  F051         	movff	roundf@u+2,??_roundf+2
 11413  00270E  C060  F052         	movff	roundf@u+3,??_roundf+3
 11414  002712  0E18               	movlw	24
 11415  002714  EF92  F013         	goto	u5770
 11416  002718                     u5775:
 11417  002718  FFFF               	dw	65535	; assembler added errata NOP
 11418  00271A  90D8               	bcf	status,0,c
 11419  00271C  3252               	rrcf	(??_roundf+3)^0,f,c
 11420  00271E  3251               	rrcf	(??_roundf+2)^0,f,c
 11421  002720  3250               	rrcf	(??_roundf+1)^0,f,c
 11422  002722  324F               	rrcf	??_roundf^0,f,c
 11423  002724                     u5770:
 11424  002724  FFFF               	dw	65535	; assembler added errata NOP
 11425  002726  2EE8               	decfsz	wreg,f,c
 11426  002728  EF8C  F013         	goto	u5775
 11427  00272C  504F               	movf	??_roundf^0,w,c
 11428  00272E  6E57               	movwf	roundf@e^0,c
 11429  002730  6A58               	clrf	(roundf@e+1)^0,c
 11430  002732  BE58               	btfsc	(roundf@e+1)^0,7,c
 11431  002734  EFA5  F013         	goto	u5781
 11432  002738  5058               	movf	(roundf@e+1)^0,w,c
 11433  00273A  E10A               	bnz	u5780
 11434  00273C  0E96               	movlw	150
 11435  00273E  5C57               	subwf	roundf@e^0,w,c
 11436  002740  A0D8               	btfss	status,0,c
 11437  002742  EFA5  F013         	goto	u5781
 11438  002746  EFA8  F013         	goto	u5780
 11439  00274A                     u5781:
 11440  00274A  FFFF               	dw	65535	; assembler added errata NOP
 11441  00274C  EFB3  F013         	goto	l4793
 11442  002750                     u5780:
 11443  002750  FFFF               	dw	65535	; assembler added errata NOP
 11444  002752  C04B  F04B         	movff	roundf@x,?_roundf
 11445  002756  C04C  F04C         	movff	roundf@x+1,?_roundf+1
 11446  00275A  C04D  F04D         	movff	roundf@x+2,?_roundf+2
 11447  00275E  C04E  F04E         	movff	roundf@x+3,?_roundf+3
 11448  002762  EF60  F015         	goto	l978
 11449  002766                     l4793:
 11450  002766  FFFF               	dw	65535	; assembler added errata NOP
 11451  002768  C05D  F04F         	movff	roundf@u,??_roundf
 11452  00276C  C05E  F050         	movff	roundf@u+1,??_roundf+1
 11453  002770  C05F  F051         	movff	roundf@u+2,??_roundf+2
 11454  002774  C060  F052         	movff	roundf@u+3,??_roundf+3
 11455  002778  0E20               	movlw	32
 11456  00277A  EFC5  F013         	goto	u5790
 11457  00277E                     u5795:
 11458  00277E  FFFF               	dw	65535	; assembler added errata NOP
 11459  002780  90D8               	bcf	status,0,c
 11460  002782  3252               	rrcf	(??_roundf+3)^0,f,c
 11461  002784  3251               	rrcf	(??_roundf+2)^0,f,c
 11462  002786  3250               	rrcf	(??_roundf+1)^0,f,c
 11463  002788  324F               	rrcf	??_roundf^0,f,c
 11464  00278A                     u5790:
 11465  00278A  FFFF               	dw	65535	; assembler added errata NOP
 11466  00278C  2EE8               	decfsz	wreg,f,c
 11467  00278E  EFBF  F013         	goto	u5795
 11468  002792  504F               	movf	??_roundf^0,w,c
 11469  002794  1050               	iorwf	(??_roundf+1)^0,w,c
 11470  002796  1051               	iorwf	(??_roundf+2)^0,w,c
 11471  002798  1052               	iorwf	(??_roundf+3)^0,w,c
 11472  00279A  B4D8               	btfsc	status,2,c
 11473  00279C  EFD2  F013         	goto	u5801
 11474  0027A0  EFD5  F013         	goto	u5800
 11475  0027A4                     u5801:
 11476  0027A4  FFFF               	dw	65535	; assembler added errata NOP
 11477  0027A6  EFE8  F013         	goto	l4797
 11478  0027AA                     u5800:
 11479  0027AA  FFFF               	dw	65535	; assembler added errata NOP
 11480  0027AC  C04B  F001         	movff	roundf@x,___flneg@f1
 11481  0027B0  C04C  F002         	movff	roundf@x+1,___flneg@f1+1
 11482  0027B4  C04D  F003         	movff	roundf@x+2,___flneg@f1+2
 11483  0027B8  C04E  F004         	movff	roundf@x+3,___flneg@f1+3
 11484  0027BC  ECAC  F037         	call	___flneg	;wreg free
 11485  0027C0  C001  F04B         	movff	?___flneg,roundf@x
 11486  0027C4  C002  F04C         	movff	?___flneg+1,roundf@x+1
 11487  0027C8  C003  F04D         	movff	?___flneg+2,roundf@x+2
 11488  0027CC  C004  F04E         	movff	?___flneg+3,roundf@x+3
 11489  0027D0                     l4797:
 11490  0027D0  FFFF               	dw	65535	; assembler added errata NOP
 11491  0027D2  BE58               	btfsc	(roundf@e+1)^0,7,c
 11492  0027D4  EFF8  F013         	goto	u5810
 11493  0027D8  5058               	movf	(roundf@e+1)^0,w,c
 11494  0027DA  E107               	bnz	u5811
 11495  0027DC  0E7E               	movlw	126
 11496  0027DE  5C57               	subwf	roundf@e^0,w,c
 11497  0027E0  B0D8               	btfsc	status,0,c
 11498  0027E2  EFF5  F013         	goto	u5811
 11499  0027E6  EFF8  F013         	goto	u5810
 11500  0027EA                     u5811:
 11501  0027EA  FFFF               	dw	65535	; assembler added errata NOP
 11502  0027EC  EF15  F014         	goto	l4803
 11503  0027F0                     u5810:
 11504  0027F0  FFFF               	dw	65535	; assembler added errata NOP
 11505  0027F2  C05D  F001         	movff	roundf@u,___flmul@b
 11506  0027F6  C05E  F002         	movff	roundf@u+1,___flmul@b+1
 11507  0027FA  C05F  F003         	movff	roundf@u+2,___flmul@b+2
 11508  0027FE  C060  F004         	movff	roundf@u+3,___flmul@b+3
 11509  002802  0E00               	movlw	0
 11510  002804  6E05               	movwf	___flmul@a^0,c
 11511  002806  0E00               	movlw	0
 11512  002808  6E06               	movwf	(___flmul@a+1)^0,c
 11513  00280A  0E00               	movlw	0
 11514  00280C  6E07               	movwf	(___flmul@a+2)^0,c
 11515  00280E  0E00               	movlw	0
 11516  002810  6E08               	movwf	(___flmul@a+3)^0,c
 11517  002812  EC05  F00D         	call	___flmul	;wreg free
 11518  002816  C001  F04B         	movff	?___flmul,?_roundf
 11519  00281A  C002  F04C         	movff	?___flmul+1,?_roundf+1
 11520  00281E  C003  F04D         	movff	?___flmul+2,?_roundf+2
 11521  002822  C004  F04E         	movff	?___flmul+3,?_roundf+3
 11522  002826  EF60  F015         	goto	l978
 11523  00282A                     l4803:
 11524  00282A  FFFF               	dw	65535	; assembler added errata NOP
 11525  00282C  0E00               	movlw	0
 11526  00282E  6E37               	movwf	___fladd@a^0,c
 11527  002830  0E00               	movlw	0
 11528  002832  6E38               	movwf	(___fladd@a+1)^0,c
 11529  002834  0E00               	movlw	0
 11530  002836  6E39               	movwf	(___fladd@a+2)^0,c
 11531  002838  0E4B               	movlw	75
 11532  00283A  6E3A               	movwf	(___fladd@a+3)^0,c
 11533  00283C  C04B  F033         	movff	roundf@x,___fladd@b
 11534  002840  C04C  F034         	movff	roundf@x+1,___fladd@b+1
 11535  002844  C04D  F035         	movff	roundf@x+2,___fladd@b+2
 11536  002848  C04E  F036         	movff	roundf@x+3,___fladd@b+3
 11537  00284C  EC31  F00A         	call	___fladd	;wreg free
 11538  002850  C033  F059         	movff	?___fladd,_roundf$1949
 11539  002854  C034  F05A         	movff	?___fladd+1,_roundf$1949+1
 11540  002858  C035  F05B         	movff	?___fladd+2,_roundf$1949+2
 11541  00285C  C036  F05C         	movff	?___fladd+3,_roundf$1949+3
 11542  002860  0E00               	movlw	0
 11543  002862  6E37               	movwf	___fladd@a^0,c
 11544  002864  0E00               	movlw	0
 11545  002866  6E38               	movwf	(___fladd@a+1)^0,c
 11546  002868  0E00               	movlw	0
 11547  00286A  6E39               	movwf	(___fladd@a+2)^0,c
 11548  00286C  0ECB               	movlw	203
 11549  00286E  6E3A               	movwf	(___fladd@a+3)^0,c
 11550  002870  C059  F033         	movff	_roundf$1949,___fladd@b
 11551  002874  C05A  F034         	movff	_roundf$1949+1,___fladd@b+1
 11552  002878  C05B  F035         	movff	_roundf$1949+2,___fladd@b+2
 11553  00287C  C05C  F036         	movff	_roundf$1949+3,___fladd@b+3
 11554  002880  EC31  F00A         	call	___fladd	;wreg free
 11555  002884  C033  F053         	movff	?___fladd,_roundf$1950
 11556  002888  C034  F054         	movff	?___fladd+1,_roundf$1950+1
 11557  00288C  C035  F055         	movff	?___fladd+2,_roundf$1950+2
 11558  002890  C036  F056         	movff	?___fladd+3,_roundf$1950+3
 11559  002894  C053  F043         	movff	_roundf$1950,___flsub@b
 11560  002898  C054  F044         	movff	_roundf$1950+1,___flsub@b+1
 11561  00289C  C055  F045         	movff	_roundf$1950+2,___flsub@b+2
 11562  0028A0  C056  F046         	movff	_roundf$1950+3,___flsub@b+3
 11563  0028A4  C04B  F047         	movff	roundf@x,___flsub@a
 11564  0028A8  C04C  F048         	movff	roundf@x+1,___flsub@a+1
 11565  0028AC  C04D  F049         	movff	roundf@x+2,___flsub@a+2
 11566  0028B0  C04E  F04A         	movff	roundf@x+3,___flsub@a+3
 11567  0028B4  EC53  F038         	call	___flsub	;wreg free
 11568  0028B8  C043  F061         	movff	?___flsub,roundf@y
 11569  0028BC  C044  F062         	movff	?___flsub+1,roundf@y+1
 11570  0028C0  C045  F063         	movff	?___flsub+2,roundf@y+2
 11571  0028C4  C046  F064         	movff	?___flsub+3,roundf@y+3
 11572  0028C8  0E00               	movlw	0
 11573  0028CA  6E01               	movwf	___flge@ff1^0,c
 11574  0028CC  0E00               	movlw	0
 11575  0028CE  6E02               	movwf	(___flge@ff1+1)^0,c
 11576  0028D0  0E00               	movlw	0
 11577  0028D2  6E03               	movwf	(___flge@ff1+2)^0,c
 11578  0028D4  0E3F               	movlw	63
 11579  0028D6  6E04               	movwf	(___flge@ff1+3)^0,c
 11580  0028D8  C061  F005         	movff	roundf@y,___flge@ff2
 11581  0028DC  C062  F006         	movff	roundf@y+1,___flge@ff2+1
 11582  0028E0  C063  F007         	movff	roundf@y+2,___flge@ff2+2
 11583  0028E4  C064  F008         	movff	roundf@y+3,___flge@ff2+3
 11584  0028E8  EC69  F01F         	call	___flge	;wreg free
 11585  0028EC  B0D8               	btfsc	status,0,c
 11586  0028EE  EF7B  F014         	goto	u5821
 11587  0028F2  EF7E  F014         	goto	u5820
 11588  0028F6                     u5821:
 11589  0028F6  FFFF               	dw	65535	; assembler added errata NOP
 11590  0028F8  EFB5  F014         	goto	l4807
 11591  0028FC                     u5820:
 11592  0028FC  FFFF               	dw	65535	; assembler added errata NOP
 11593  0028FE  C04B  F037         	movff	roundf@x,___fladd@a
 11594  002902  C04C  F038         	movff	roundf@x+1,___fladd@a+1
 11595  002906  C04D  F039         	movff	roundf@x+2,___fladd@a+2
 11596  00290A  C04E  F03A         	movff	roundf@x+3,___fladd@a+3
 11597  00290E  C061  F033         	movff	roundf@y,___fladd@b
 11598  002912  C062  F034         	movff	roundf@y+1,___fladd@b+1
 11599  002916  C063  F035         	movff	roundf@y+2,___fladd@b+2
 11600  00291A  C064  F036         	movff	roundf@y+3,___fladd@b+3
 11601  00291E  EC31  F00A         	call	___fladd	;wreg free
 11602  002922  C033  F059         	movff	?___fladd,_roundf$1949
 11603  002926  C034  F05A         	movff	?___fladd+1,_roundf$1949+1
 11604  00292A  C035  F05B         	movff	?___fladd+2,_roundf$1949+2
 11605  00292E  C036  F05C         	movff	?___fladd+3,_roundf$1949+3
 11606  002932  C059  F033         	movff	_roundf$1949,___fladd@b
 11607  002936  C05A  F034         	movff	_roundf$1949+1,___fladd@b+1
 11608  00293A  C05B  F035         	movff	_roundf$1949+2,___fladd@b+2
 11609  00293E  C05C  F036         	movff	_roundf$1949+3,___fladd@b+3
 11610  002942  0E00               	movlw	0
 11611  002944  6E37               	movwf	___fladd@a^0,c
 11612  002946  0E00               	movlw	0
 11613  002948  6E38               	movwf	(___fladd@a+1)^0,c
 11614  00294A  0E80               	movlw	128
 11615  00294C  6E39               	movwf	(___fladd@a+2)^0,c
 11616  00294E  0EBF               	movlw	191
 11617  002950  6E3A               	movwf	(___fladd@a+3)^0,c
 11618  002952  EC31  F00A         	call	___fladd	;wreg free
 11619  002956  C033  F061         	movff	?___fladd,roundf@y
 11620  00295A  C034  F062         	movff	?___fladd+1,roundf@y+1
 11621  00295E  C035  F063         	movff	?___fladd+2,roundf@y+2
 11622  002962  C036  F064         	movff	?___fladd+3,roundf@y+3
 11623  002966  EF22  F015         	goto	l4813
 11624  00296A                     l4807:
 11625  00296A  FFFF               	dw	65535	; assembler added errata NOP
 11626  00296C  0E00               	movlw	0
 11627  00296E  6E01               	movwf	___flge@ff1^0,c
 11628  002970  0E00               	movlw	0
 11629  002972  6E02               	movwf	(___flge@ff1+1)^0,c
 11630  002974  0E00               	movlw	0
 11631  002976  6E03               	movwf	(___flge@ff1+2)^0,c
 11632  002978  0EBF               	movlw	191
 11633  00297A  6E04               	movwf	(___flge@ff1+3)^0,c
 11634  00297C  C061  F005         	movff	roundf@y,___flge@ff2
 11635  002980  C062  F006         	movff	roundf@y+1,___flge@ff2+1
 11636  002984  C063  F007         	movff	roundf@y+2,___flge@ff2+2
 11637  002988  C064  F008         	movff	roundf@y+3,___flge@ff2+3
 11638  00298C  EC69  F01F         	call	___flge	;wreg free
 11639  002990  A0D8               	btfss	status,0,c
 11640  002992  EFCD  F014         	goto	u5831
 11641  002996  EFD0  F014         	goto	u5830
 11642  00299A                     u5831:
 11643  00299A  FFFF               	dw	65535	; assembler added errata NOP
 11644  00299C  EF07  F015         	goto	l4811
 11645  0029A0                     u5830:
 11646  0029A0  FFFF               	dw	65535	; assembler added errata NOP
 11647  0029A2  C04B  F037         	movff	roundf@x,___fladd@a
 11648  0029A6  C04C  F038         	movff	roundf@x+1,___fladd@a+1
 11649  0029AA  C04D  F039         	movff	roundf@x+2,___fladd@a+2
 11650  0029AE  C04E  F03A         	movff	roundf@x+3,___fladd@a+3
 11651  0029B2  C061  F033         	movff	roundf@y,___fladd@b
 11652  0029B6  C062  F034         	movff	roundf@y+1,___fladd@b+1
 11653  0029BA  C063  F035         	movff	roundf@y+2,___fladd@b+2
 11654  0029BE  C064  F036         	movff	roundf@y+3,___fladd@b+3
 11655  0029C2  EC31  F00A         	call	___fladd	;wreg free
 11656  0029C6  C033  F059         	movff	?___fladd,_roundf$1949
 11657  0029CA  C034  F05A         	movff	?___fladd+1,_roundf$1949+1
 11658  0029CE  C035  F05B         	movff	?___fladd+2,_roundf$1949+2
 11659  0029D2  C036  F05C         	movff	?___fladd+3,_roundf$1949+3
 11660  0029D6  C059  F033         	movff	_roundf$1949,___fladd@b
 11661  0029DA  C05A  F034         	movff	_roundf$1949+1,___fladd@b+1
 11662  0029DE  C05B  F035         	movff	_roundf$1949+2,___fladd@b+2
 11663  0029E2  C05C  F036         	movff	_roundf$1949+3,___fladd@b+3
 11664  0029E6  0E00               	movlw	0
 11665  0029E8  6E37               	movwf	___fladd@a^0,c
 11666  0029EA  0E00               	movlw	0
 11667  0029EC  6E38               	movwf	(___fladd@a+1)^0,c
 11668  0029EE  0E80               	movlw	128
 11669  0029F0  6E39               	movwf	(___fladd@a+2)^0,c
 11670  0029F2  0E3F               	movlw	63
 11671  0029F4  6E3A               	movwf	(___fladd@a+3)^0,c
 11672  0029F6  EC31  F00A         	call	___fladd	;wreg free
 11673  0029FA  C033  F061         	movff	?___fladd,roundf@y
 11674  0029FE  C034  F062         	movff	?___fladd+1,roundf@y+1
 11675  002A02  C035  F063         	movff	?___fladd+2,roundf@y+2
 11676  002A06  C036  F064         	movff	?___fladd+3,roundf@y+3
 11677  002A0A  EF22  F015         	goto	l4813
 11678  002A0E                     l4811:
 11679  002A0E  FFFF               	dw	65535	; assembler added errata NOP
 11680  002A10  C061  F033         	movff	roundf@y,___fladd@b
 11681  002A14  C062  F034         	movff	roundf@y+1,___fladd@b+1
 11682  002A18  C063  F035         	movff	roundf@y+2,___fladd@b+2
 11683  002A1C  C064  F036         	movff	roundf@y+3,___fladd@b+3
 11684  002A20  C04B  F037         	movff	roundf@x,___fladd@a
 11685  002A24  C04C  F038         	movff	roundf@x+1,___fladd@a+1
 11686  002A28  C04D  F039         	movff	roundf@x+2,___fladd@a+2
 11687  002A2C  C04E  F03A         	movff	roundf@x+3,___fladd@a+3
 11688  002A30  EC31  F00A         	call	___fladd	;wreg free
 11689  002A34  C033  F061         	movff	?___fladd,roundf@y
 11690  002A38  C034  F062         	movff	?___fladd+1,roundf@y+1
 11691  002A3C  C035  F063         	movff	?___fladd+2,roundf@y+2
 11692  002A40  C036  F064         	movff	?___fladd+3,roundf@y+3
 11693  002A44                     l4813:
 11694  002A44  FFFF               	dw	65535	; assembler added errata NOP
 11695  002A46  C05D  F04F         	movff	roundf@u,??_roundf
 11696  002A4A  C05E  F050         	movff	roundf@u+1,??_roundf+1
 11697  002A4E  C05F  F051         	movff	roundf@u+2,??_roundf+2
 11698  002A52  C060  F052         	movff	roundf@u+3,??_roundf+3
 11699  002A56  0E20               	movlw	32
 11700  002A58  EF34  F015         	goto	u5840
 11701  002A5C                     u5845:
 11702  002A5C  FFFF               	dw	65535	; assembler added errata NOP
 11703  002A5E  90D8               	bcf	status,0,c
 11704  002A60  3252               	rrcf	(??_roundf+3)^0,f,c
 11705  002A62  3251               	rrcf	(??_roundf+2)^0,f,c
 11706  002A64  3250               	rrcf	(??_roundf+1)^0,f,c
 11707  002A66  324F               	rrcf	??_roundf^0,f,c
 11708  002A68                     u5840:
 11709  002A68  FFFF               	dw	65535	; assembler added errata NOP
 11710  002A6A  2EE8               	decfsz	wreg,f,c
 11711  002A6C  EF2E  F015         	goto	u5845
 11712  002A70  504F               	movf	??_roundf^0,w,c
 11713  002A72  1050               	iorwf	(??_roundf+1)^0,w,c
 11714  002A74  1051               	iorwf	(??_roundf+2)^0,w,c
 11715  002A76  1052               	iorwf	(??_roundf+3)^0,w,c
 11716  002A78  B4D8               	btfsc	status,2,c
 11717  002A7A  EF41  F015         	goto	u5851
 11718  002A7E  EF44  F015         	goto	u5850
 11719  002A82                     u5851:
 11720  002A82  FFFF               	dw	65535	; assembler added errata NOP
 11721  002A84  EF57  F015         	goto	l4817
 11722  002A88                     u5850:
 11723  002A88  FFFF               	dw	65535	; assembler added errata NOP
 11724  002A8A  C061  F001         	movff	roundf@y,___flneg@f1
 11725  002A8E  C062  F002         	movff	roundf@y+1,___flneg@f1+1
 11726  002A92  C063  F003         	movff	roundf@y+2,___flneg@f1+2
 11727  002A96  C064  F004         	movff	roundf@y+3,___flneg@f1+3
 11728  002A9A  ECAC  F037         	call	___flneg	;wreg free
 11729  002A9E  C001  F061         	movff	?___flneg,roundf@y
 11730  002AA2  C002  F062         	movff	?___flneg+1,roundf@y+1
 11731  002AA6  C003  F063         	movff	?___flneg+2,roundf@y+2
 11732  002AAA  C004  F064         	movff	?___flneg+3,roundf@y+3
 11733  002AAE                     l4817:
 11734  002AAE  FFFF               	dw	65535	; assembler added errata NOP
 11735  002AB0  C061  F04B         	movff	roundf@y,?_roundf
 11736  002AB4  C062  F04C         	movff	roundf@y+1,?_roundf+1
 11737  002AB8  C063  F04D         	movff	roundf@y+2,?_roundf+2
 11738  002ABC  C064  F04E         	movff	roundf@y+3,?_roundf+3
 11739  002AC0                     l978:
 11740  002AC0  FFFF               	dw	65535	; assembler added errata NOP
 11741  002AC2  0012               	return		;funcret
 11742  002AC4  FFFF               	dw	65535	; errata NOP
 11743  002AC6                     __end_of_roundf:
 11744                           	callstack 0
 11745                           
 11746 ;; *************** function ___flsub *****************
 11747 ;; Defined at:
 11748 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 11749 ;; Parameters:    Size  Location     Type
 11750 ;;  b               4   66[COMRAM] float 
 11751 ;;  a               4   70[COMRAM] float 
 11752 ;; Auto vars:     Size  Location     Type
 11753 ;;		None
 11754 ;; Return value:  Size  Location     Type
 11755 ;;                  4   66[COMRAM] float 
 11756 ;; Registers used:
 11757 ;;		wreg, status,2, status,0, cstack
 11758 ;; Tracked objects:
 11759 ;;		On entry : 0/0
 11760 ;;		On exit  : 0/0
 11761 ;;		Unchanged: 0/0
 11762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11763 ;;      Params:         8       0       0       0       0       0       0
 11764 ;;      Locals:         0       0       0       0       0       0       0
 11765 ;;      Temps:          0       0       0       0       0       0       0
 11766 ;;      Totals:         8       0       0       0       0       0       0
 11767 ;;Total ram usage:        8 bytes
 11768 ;; Hardware stack levels used:    1
 11769 ;; Hardware stack levels required when called:    2
 11770 ;; This function calls:
 11771 ;;		___fladd
 11772 ;; This function is called by:
 11773 ;;		_roundf
 11774 ;; This function uses a non-reentrant model
 11775 ;;
 11776                           
 11777                           	psect	text48
 11778  0070A6                     __ptext48:
 11779                           	callstack 0
 11780  0070A6                     ___flsub:
 11781                           	callstack 0
 11782  0070A6  FFFF               	dw	65535	; assembler added errata NOP
 11783  0070A8  0E00               	movlw	0
 11784  0070AA  1A47               	xorwf	___flsub@a^0,f,c
 11785  0070AC  0E00               	movlw	0
 11786  0070AE  1A48               	xorwf	(___flsub@a+1)^0,f,c
 11787  0070B0  0E00               	movlw	0
 11788  0070B2  1A49               	xorwf	(___flsub@a+2)^0,f,c
 11789  0070B4  0E80               	movlw	128
 11790  0070B6  1A4A               	xorwf	(___flsub@a+3)^0,f,c
 11791  0070B8  C043  F033         	movff	___flsub@b,___fladd@b
 11792  0070BC  C044  F034         	movff	___flsub@b+1,___fladd@b+1
 11793  0070C0  C045  F035         	movff	___flsub@b+2,___fladd@b+2
 11794  0070C4  C046  F036         	movff	___flsub@b+3,___fladd@b+3
 11795  0070C8  C047  F037         	movff	___flsub@a,___fladd@a
 11796  0070CC  C048  F038         	movff	___flsub@a+1,___fladd@a+1
 11797  0070D0  C049  F039         	movff	___flsub@a+2,___fladd@a+2
 11798  0070D4  C04A  F03A         	movff	___flsub@a+3,___fladd@a+3
 11799  0070D8  EC31  F00A         	call	___fladd	;wreg free
 11800  0070DC  C033  F043         	movff	?___fladd,?___flsub
 11801  0070E0  C034  F044         	movff	?___fladd+1,?___flsub+1
 11802  0070E4  C035  F045         	movff	?___fladd+2,?___flsub+2
 11803  0070E8  C036  F046         	movff	?___fladd+3,?___flsub+3
 11804  0070EC  0012               	return		;funcret
 11805  0070EE  FFFF               	dw	65535	; errata NOP
 11806  0070F0                     __end_of___flsub:
 11807                           	callstack 0
 11808                           
 11809 ;; *************** function ___fladd *****************
 11810 ;; Defined at:
 11811 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 11812 ;; Parameters:    Size  Location     Type
 11813 ;;  b               4   50[COMRAM] float 
 11814 ;;  a               4   54[COMRAM] float 
 11815 ;; Auto vars:     Size  Location     Type
 11816 ;;  grs             1   65[COMRAM] unsigned char 
 11817 ;;  bexp            1   64[COMRAM] unsigned char 
 11818 ;;  aexp            1   63[COMRAM] unsigned char 
 11819 ;;  signs           1   62[COMRAM] unsigned char 
 11820 ;; Return value:  Size  Location     Type
 11821 ;;                  4   50[COMRAM] unsigned char 
 11822 ;; Registers used:
 11823 ;;		wreg, status,2, status,0
 11824 ;; Tracked objects:
 11825 ;;		On entry : 0/0
 11826 ;;		On exit  : 0/0
 11827 ;;		Unchanged: 0/0
 11828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11829 ;;      Params:         8       0       0       0       0       0       0
 11830 ;;      Locals:         4       0       0       0       0       0       0
 11831 ;;      Temps:          4       0       0       0       0       0       0
 11832 ;;      Totals:        16       0       0       0       0       0       0
 11833 ;;Total ram usage:       16 bytes
 11834 ;; Hardware stack levels used:    1
 11835 ;; Hardware stack levels required when called:    1
 11836 ;; This function calls:
 11837 ;;		Nothing
 11838 ;; This function is called by:
 11839 ;;		_init_timer_2
 11840 ;;		___flsub
 11841 ;;		_roundf
 11842 ;; This function uses a non-reentrant model
 11843 ;;
 11844                           
 11845                           	psect	text49
 11846  001462                     __ptext49:
 11847                           	callstack 0
 11848  001462                     ___fladd:
 11849                           	callstack 0
 11850  001462  FFFF               	dw	65535	; assembler added errata NOP
 11851  001464  5036               	movf	(___fladd@b+3)^0,w,c
 11852  001466  0B80               	andlw	128
 11853  001468  6E3F               	movwf	___fladd@signs^0,c
 11854  00146A  5036               	movf	(___fladd@b+3)^0,w,c
 11855  00146C  2436               	addwf	(___fladd@b+3)^0,w,c
 11856  00146E  6E41               	movwf	___fladd@bexp^0,c
 11857  001470  AE35               	btfss	(___fladd@b+2)^0,7,c
 11858  001472  EF3D  F00A         	goto	u4331
 11859  001476  EF40  F00A         	goto	u4330
 11860  00147A                     u4331:
 11861  00147A  FFFF               	dw	65535	; assembler added errata NOP
 11862  00147C  EF42  F00A         	goto	l3901
 11863  001480                     u4330:
 11864  001480  FFFF               	dw	65535	; assembler added errata NOP
 11865  001482  8041               	bsf	___fladd@bexp^0,0,c
 11866  001484                     l3901:
 11867  001484  FFFF               	dw	65535	; assembler added errata NOP
 11868  001486  5041               	movf	___fladd@bexp^0,w,c
 11869  001488  B4D8               	btfsc	status,2,c
 11870  00148A  EF49  F00A         	goto	u4341
 11871  00148E  EF4C  F00A         	goto	u4340
 11872  001492                     u4341:
 11873  001492  FFFF               	dw	65535	; assembler added errata NOP
 11874  001494  EF65  F00A         	goto	l3911
 11875  001498                     u4340:
 11876  001498  FFFF               	dw	65535	; assembler added errata NOP
 11877  00149A  2841               	incf	___fladd@bexp^0,w,c
 11878  00149C  A4D8               	btfss	status,2,c
 11879  00149E  EF53  F00A         	goto	u4351
 11880  0014A2  EF56  F00A         	goto	u4350
 11881  0014A6                     u4351:
 11882  0014A6  FFFF               	dw	65535	; assembler added errata NOP
 11883  0014A8  EF5F  F00A         	goto	l3907
 11884  0014AC                     u4350:
 11885  0014AC  FFFF               	dw	65535	; assembler added errata NOP
 11886  0014AE  0E00               	movlw	0
 11887  0014B0  6E33               	movwf	___fladd@b^0,c
 11888  0014B2  0E00               	movlw	0
 11889  0014B4  6E34               	movwf	(___fladd@b+1)^0,c
 11890  0014B6  0E00               	movlw	0
 11891  0014B8  6E35               	movwf	(___fladd@b+2)^0,c
 11892  0014BA  0E00               	movlw	0
 11893  0014BC  6E36               	movwf	(___fladd@b+3)^0,c
 11894  0014BE                     l3907:
 11895  0014BE  FFFF               	dw	65535	; assembler added errata NOP
 11896  0014C0  8E35               	bsf	(___fladd@b+2)^0,7,c
 11897  0014C2  0E00               	movlw	0
 11898  0014C4  6E36               	movwf	(___fladd@b+3)^0,c
 11899  0014C6  EF6E  F00A         	goto	l3913
 11900  0014CA                     l3911:
 11901  0014CA  FFFF               	dw	65535	; assembler added errata NOP
 11902  0014CC  0E00               	movlw	0
 11903  0014CE  6E33               	movwf	___fladd@b^0,c
 11904  0014D0  0E00               	movlw	0
 11905  0014D2  6E34               	movwf	(___fladd@b+1)^0,c
 11906  0014D4  0E00               	movlw	0
 11907  0014D6  6E35               	movwf	(___fladd@b+2)^0,c
 11908  0014D8  0E00               	movlw	0
 11909  0014DA  6E36               	movwf	(___fladd@b+3)^0,c
 11910  0014DC                     l3913:
 11911  0014DC  FFFF               	dw	65535	; assembler added errata NOP
 11912  0014DE  503A               	movf	(___fladd@a+3)^0,w,c
 11913  0014E0  0B80               	andlw	128
 11914  0014E2  6E40               	movwf	___fladd@aexp^0,c
 11915  0014E4  503F               	movf	___fladd@signs^0,w,c
 11916  0014E6  1840               	xorwf	___fladd@aexp^0,w,c
 11917  0014E8  B4D8               	btfsc	status,2,c
 11918  0014EA  EF79  F00A         	goto	u4361
 11919  0014EE  EF7C  F00A         	goto	u4360
 11920  0014F2                     u4361:
 11921  0014F2  FFFF               	dw	65535	; assembler added errata NOP
 11922  0014F4  EF7E  F00A         	goto	l3919
 11923  0014F8                     u4360:
 11924  0014F8  FFFF               	dw	65535	; assembler added errata NOP
 11925  0014FA  8C3F               	bsf	___fladd@signs^0,6,c
 11926  0014FC                     l3919:
 11927  0014FC  FFFF               	dw	65535	; assembler added errata NOP
 11928  0014FE  503A               	movf	(___fladd@a+3)^0,w,c
 11929  001500  243A               	addwf	(___fladd@a+3)^0,w,c
 11930  001502  6E40               	movwf	___fladd@aexp^0,c
 11931  001504  AE39               	btfss	(___fladd@a+2)^0,7,c
 11932  001506  EF87  F00A         	goto	u4371
 11933  00150A  EF8A  F00A         	goto	u4370
 11934  00150E                     u4371:
 11935  00150E  FFFF               	dw	65535	; assembler added errata NOP
 11936  001510  EF8C  F00A         	goto	l3925
 11937  001514                     u4370:
 11938  001514  FFFF               	dw	65535	; assembler added errata NOP
 11939  001516  8040               	bsf	___fladd@aexp^0,0,c
 11940  001518                     l3925:
 11941  001518  FFFF               	dw	65535	; assembler added errata NOP
 11942  00151A  5040               	movf	___fladd@aexp^0,w,c
 11943  00151C  B4D8               	btfsc	status,2,c
 11944  00151E  EF93  F00A         	goto	u4381
 11945  001522  EF96  F00A         	goto	u4380
 11946  001526                     u4381:
 11947  001526  FFFF               	dw	65535	; assembler added errata NOP
 11948  001528  EFAF  F00A         	goto	l3935
 11949  00152C                     u4380:
 11950  00152C  FFFF               	dw	65535	; assembler added errata NOP
 11951  00152E  2840               	incf	___fladd@aexp^0,w,c
 11952  001530  A4D8               	btfss	status,2,c
 11953  001532  EF9D  F00A         	goto	u4391
 11954  001536  EFA0  F00A         	goto	u4390
 11955  00153A                     u4391:
 11956  00153A  FFFF               	dw	65535	; assembler added errata NOP
 11957  00153C  EFA9  F00A         	goto	l3931
 11958  001540                     u4390:
 11959  001540  FFFF               	dw	65535	; assembler added errata NOP
 11960  001542  0E00               	movlw	0
 11961  001544  6E37               	movwf	___fladd@a^0,c
 11962  001546  0E00               	movlw	0
 11963  001548  6E38               	movwf	(___fladd@a+1)^0,c
 11964  00154A  0E00               	movlw	0
 11965  00154C  6E39               	movwf	(___fladd@a+2)^0,c
 11966  00154E  0E00               	movlw	0
 11967  001550  6E3A               	movwf	(___fladd@a+3)^0,c
 11968  001552                     l3931:
 11969  001552  FFFF               	dw	65535	; assembler added errata NOP
 11970  001554  8E39               	bsf	(___fladd@a+2)^0,7,c
 11971  001556  0E00               	movlw	0
 11972  001558  6E3A               	movwf	(___fladd@a+3)^0,c
 11973  00155A  EFB8  F00A         	goto	l3937
 11974  00155E                     l3935:
 11975  00155E  FFFF               	dw	65535	; assembler added errata NOP
 11976  001560  0E00               	movlw	0
 11977  001562  6E37               	movwf	___fladd@a^0,c
 11978  001564  0E00               	movlw	0
 11979  001566  6E38               	movwf	(___fladd@a+1)^0,c
 11980  001568  0E00               	movlw	0
 11981  00156A  6E39               	movwf	(___fladd@a+2)^0,c
 11982  00156C  0E00               	movlw	0
 11983  00156E  6E3A               	movwf	(___fladd@a+3)^0,c
 11984  001570                     l3937:
 11985  001570  FFFF               	dw	65535	; assembler added errata NOP
 11986  001572  5041               	movf	___fladd@bexp^0,w,c
 11987  001574  5C40               	subwf	___fladd@aexp^0,w,c
 11988  001576  B0D8               	btfsc	status,0,c
 11989  001578  EFC0  F00A         	goto	u4401
 11990  00157C  EFC3  F00A         	goto	u4400
 11991  001580                     u4401:
 11992  001580  FFFF               	dw	65535	; assembler added errata NOP
 11993  001582  EFEE  F00A         	goto	l3973
 11994  001586                     u4400:
 11995  001586  FFFF               	dw	65535	; assembler added errata NOP
 11996  001588  AC3F               	btfss	___fladd@signs^0,6,c
 11997  00158A  EFC9  F00A         	goto	u4411
 11998  00158E  EFCC  F00A         	goto	u4410
 11999  001592                     u4411:
 12000  001592  FFFF               	dw	65535	; assembler added errata NOP
 12001  001594  EFCF  F00A         	goto	l3943
 12002  001598                     u4410:
 12003  001598  FFFF               	dw	65535	; assembler added errata NOP
 12004  00159A  0E80               	movlw	128
 12005  00159C  1A3F               	xorwf	___fladd@signs^0,f,c
 12006  00159E                     l3943:
 12007  00159E  FFFF               	dw	65535	; assembler added errata NOP
 12008  0015A0  C041  F042         	movff	___fladd@bexp,___fladd@grs
 12009  0015A4  C040  F041         	movff	___fladd@aexp,___fladd@bexp
 12010  0015A8  C042  F040         	movff	___fladd@grs,___fladd@aexp
 12011  0015AC  C033  F042         	movff	___fladd@b,___fladd@grs
 12012  0015B0  C037  F033         	movff	___fladd@a,___fladd@b
 12013  0015B4  C042  F037         	movff	___fladd@grs,___fladd@a
 12014  0015B8  C034  F042         	movff	___fladd@b+1,___fladd@grs
 12015  0015BC  C038  F034         	movff	___fladd@a+1,___fladd@b+1
 12016  0015C0  C042  F038         	movff	___fladd@grs,___fladd@a+1
 12017  0015C4  C035  F042         	movff	___fladd@b+2,___fladd@grs
 12018  0015C8  C039  F035         	movff	___fladd@a+2,___fladd@b+2
 12019  0015CC  C042  F039         	movff	___fladd@grs,___fladd@a+2
 12020  0015D0  C036  F042         	movff	___fladd@b+3,___fladd@grs
 12021  0015D4  C03A  F036         	movff	___fladd@a+3,___fladd@b+3
 12022  0015D8  C042  F03A         	movff	___fladd@grs,___fladd@a+3
 12023  0015DC                     l3973:
 12024  0015DC  FFFF               	dw	65535	; assembler added errata NOP
 12025  0015DE  0E00               	movlw	0
 12026  0015E0  6E42               	movwf	___fladd@grs^0,c
 12027  0015E2  5041               	movf	___fladd@bexp^0,w,c
 12028  0015E4  C040  F03B         	movff	___fladd@aexp,??___fladd
 12029  0015E8  6A3C               	clrf	(??___fladd+1)^0,c
 12030  0015EA  5E3B               	subwf	??___fladd^0,f,c
 12031  0015EC  0E00               	movlw	0
 12032  0015EE  5A3C               	subwfb	(??___fladd+1)^0,f,c
 12033  0015F0  BE3C               	btfsc	(??___fladd+1)^0,7,c
 12034  0015F2  EF04  F00B         	goto	u4421
 12035  0015F6  503C               	movf	(??___fladd+1)^0,w,c
 12036  0015F8  E10A               	bnz	u4420
 12037  0015FA  0E1A               	movlw	26
 12038  0015FC  5C3B               	subwf	??___fladd^0,w,c
 12039  0015FE  A0D8               	btfss	status,0,c
 12040  001600  EF04  F00B         	goto	u4421
 12041  001604  EF07  F00B         	goto	u4420
 12042  001608                     u4421:
 12043  001608  FFFF               	dw	65535	; assembler added errata NOP
 12044  00160A  EF4A  F00B         	goto	l828
 12045  00160E                     u4420:
 12046  00160E  FFFF               	dw	65535	; assembler added errata NOP
 12047  001610  5033               	movf	___fladd@b^0,w,c
 12048  001612  1034               	iorwf	(___fladd@b+1)^0,w,c
 12049  001614  1035               	iorwf	(___fladd@b+2)^0,w,c
 12050  001616  1036               	iorwf	(___fladd@b+3)^0,w,c
 12051  001618  A4D8               	btfss	status,2,c
 12052  00161A  EF11  F00B         	goto	u4431
 12053  00161E  EF15  F00B         	goto	u4430
 12054  001622                     u4431:
 12055  001622  FFFF               	dw	65535	; assembler added errata NOP
 12056  001624  0E01               	movlw	1
 12057  001626  EF17  F00B         	goto	u4440
 12058  00162A                     u4430:
 12059  00162A  FFFF               	dw	65535	; assembler added errata NOP
 12060  00162C  0E00               	movlw	0
 12061  00162E                     u4440:
 12062  00162E  FFFF               	dw	65535	; assembler added errata NOP
 12063  001630  6E42               	movwf	___fladd@grs^0,c
 12064  001632  0E00               	movlw	0
 12065  001634  6E33               	movwf	___fladd@b^0,c
 12066  001636  0E00               	movlw	0
 12067  001638  6E34               	movwf	(___fladd@b+1)^0,c
 12068  00163A  0E00               	movlw	0
 12069  00163C  6E35               	movwf	(___fladd@b+2)^0,c
 12070  00163E  0E00               	movlw	0
 12071  001640  6E36               	movwf	(___fladd@b+3)^0,c
 12072  001642  C040  F041         	movff	___fladd@aexp,___fladd@bexp
 12073  001646  EF55  F00B         	goto	l827
 12074  00164A                     l829:
 12075  00164A  FFFF               	dw	65535	; assembler added errata NOP
 12076  00164C  A042               	btfss	___fladd@grs^0,0,c
 12077  00164E  EF2B  F00B         	goto	u4451
 12078  001652  EF2E  F00B         	goto	u4450
 12079  001656                     u4451:
 12080  001656  FFFF               	dw	65535	; assembler added errata NOP
 12081  001658  EF35  F00B         	goto	l3985
 12082  00165C                     u4450:
 12083  00165C  FFFF               	dw	65535	; assembler added errata NOP
 12084  00165E  90D8               	bcf	status,0,c
 12085  001660  3042               	rrcf	___fladd@grs^0,w,c
 12086  001662  0901               	iorlw	1
 12087  001664  6E42               	movwf	___fladd@grs^0,c
 12088  001666  EF38  F00B         	goto	l3987
 12089  00166A                     l3985:
 12090  00166A  FFFF               	dw	65535	; assembler added errata NOP
 12091  00166C  90D8               	bcf	status,0,c
 12092  00166E  3242               	rrcf	___fladd@grs^0,f,c
 12093  001670                     l3987:
 12094  001670  FFFF               	dw	65535	; assembler added errata NOP
 12095  001672  A033               	btfss	___fladd@b^0,0,c
 12096  001674  EF3E  F00B         	goto	u4461
 12097  001678  EF41  F00B         	goto	u4460
 12098  00167C                     u4461:
 12099  00167C  FFFF               	dw	65535	; assembler added errata NOP
 12100  00167E  EF43  F00B         	goto	l3991
 12101  001682                     u4460:
 12102  001682  FFFF               	dw	65535	; assembler added errata NOP
 12103  001684  8E42               	bsf	___fladd@grs^0,7,c
 12104  001686                     l3991:
 12105  001686  FFFF               	dw	65535	; assembler added errata NOP
 12106  001688  3436               	rlcf	(___fladd@b+3)^0,w,c
 12107  00168A  3236               	rrcf	(___fladd@b+3)^0,f,c
 12108  00168C  3235               	rrcf	(___fladd@b+2)^0,f,c
 12109  00168E  3234               	rrcf	(___fladd@b+1)^0,f,c
 12110  001690  3233               	rrcf	___fladd@b^0,f,c
 12111  001692  2A41               	incf	___fladd@bexp^0,f,c
 12112  001694                     l828:
 12113  001694  FFFF               	dw	65535	; assembler added errata NOP
 12114  001696  5040               	movf	___fladd@aexp^0,w,c
 12115  001698  5C41               	subwf	___fladd@bexp^0,w,c
 12116  00169A  A0D8               	btfss	status,0,c
 12117  00169C  EF52  F00B         	goto	u4471
 12118  0016A0  EF55  F00B         	goto	u4470
 12119  0016A4                     u4471:
 12120  0016A4  FFFF               	dw	65535	; assembler added errata NOP
 12121  0016A6  EF25  F00B         	goto	l829
 12122  0016AA                     u4470:
 12123  0016AA                     l827:
 12124  0016AA  FFFF               	dw	65535	; assembler added errata NOP
 12125  0016AC  BC3F               	btfsc	___fladd@signs^0,6,c
 12126  0016AE  EF5B  F00B         	goto	u4481
 12127  0016B2  EF5E  F00B         	goto	u4480
 12128  0016B6                     u4481:
 12129  0016B6  FFFF               	dw	65535	; assembler added errata NOP
 12130  0016B8  EFAB  F00B         	goto	l4019
 12131  0016BC                     u4480:
 12132  0016BC  FFFF               	dw	65535	; assembler added errata NOP
 12133  0016BE  5041               	movf	___fladd@bexp^0,w,c
 12134  0016C0  A4D8               	btfss	status,2,c
 12135  0016C2  EF65  F00B         	goto	u4491
 12136  0016C6  EF68  F00B         	goto	u4490
 12137  0016CA                     u4491:
 12138  0016CA  FFFF               	dw	65535	; assembler added errata NOP
 12139  0016CC  EF73  F00B         	goto	l4001
 12140  0016D0                     u4490:
 12141  0016D0  FFFF               	dw	65535	; assembler added errata NOP
 12142  0016D2  0E00               	movlw	0
 12143  0016D4  6E33               	movwf	?___fladd^0,c
 12144  0016D6  0E00               	movlw	0
 12145  0016D8  6E34               	movwf	(?___fladd+1)^0,c
 12146  0016DA  0E00               	movlw	0
 12147  0016DC  6E35               	movwf	(?___fladd+2)^0,c
 12148  0016DE  0E00               	movlw	0
 12149  0016E0  6E36               	movwf	(?___fladd+3)^0,c
 12150  0016E2  EF02  F00D         	goto	l836
 12151  0016E6                     l4001:
 12152  0016E6  FFFF               	dw	65535	; assembler added errata NOP
 12153  0016E8  5037               	movf	___fladd@a^0,w,c
 12154  0016EA  2633               	addwf	___fladd@b^0,f,c
 12155  0016EC  5038               	movf	(___fladd@a+1)^0,w,c
 12156  0016EE  2234               	addwfc	(___fladd@b+1)^0,f,c
 12157  0016F0  5039               	movf	(___fladd@a+2)^0,w,c
 12158  0016F2  2235               	addwfc	(___fladd@b+2)^0,f,c
 12159  0016F4  503A               	movf	(___fladd@a+3)^0,w,c
 12160  0016F6  2236               	addwfc	(___fladd@b+3)^0,f,c
 12161  0016F8  A036               	btfss	(___fladd@b+3)^0,0,c
 12162  0016FA  EF81  F00B         	goto	u4501
 12163  0016FE  EF84  F00B         	goto	u4500
 12164  001702                     u4501:
 12165  001702  FFFF               	dw	65535	; assembler added errata NOP
 12166  001704  EF4F  F00C         	goto	l4055
 12167  001708                     u4500:
 12168  001708  FFFF               	dw	65535	; assembler added errata NOP
 12169  00170A  A042               	btfss	___fladd@grs^0,0,c
 12170  00170C  EF8A  F00B         	goto	u4511
 12171  001710  EF8D  F00B         	goto	u4510
 12172  001714                     u4511:
 12173  001714  FFFF               	dw	65535	; assembler added errata NOP
 12174  001716  EF94  F00B         	goto	l4009
 12175  00171A                     u4510:
 12176  00171A  FFFF               	dw	65535	; assembler added errata NOP
 12177  00171C  90D8               	bcf	status,0,c
 12178  00171E  3042               	rrcf	___fladd@grs^0,w,c
 12179  001720  0901               	iorlw	1
 12180  001722  6E42               	movwf	___fladd@grs^0,c
 12181  001724  EF97  F00B         	goto	l4011
 12182  001728                     l4009:
 12183  001728  FFFF               	dw	65535	; assembler added errata NOP
 12184  00172A  90D8               	bcf	status,0,c
 12185  00172C  3242               	rrcf	___fladd@grs^0,f,c
 12186  00172E                     l4011:
 12187  00172E  FFFF               	dw	65535	; assembler added errata NOP
 12188  001730  A033               	btfss	___fladd@b^0,0,c
 12189  001732  EF9D  F00B         	goto	u4521
 12190  001736  EFA0  F00B         	goto	u4520
 12191  00173A                     u4521:
 12192  00173A  FFFF               	dw	65535	; assembler added errata NOP
 12193  00173C  EFA2  F00B         	goto	l4015
 12194  001740                     u4520:
 12195  001740  FFFF               	dw	65535	; assembler added errata NOP
 12196  001742  8E42               	bsf	___fladd@grs^0,7,c
 12197  001744                     l4015:
 12198  001744  FFFF               	dw	65535	; assembler added errata NOP
 12199  001746  3436               	rlcf	(___fladd@b+3)^0,w,c
 12200  001748  3236               	rrcf	(___fladd@b+3)^0,f,c
 12201  00174A  3235               	rrcf	(___fladd@b+2)^0,f,c
 12202  00174C  3234               	rrcf	(___fladd@b+1)^0,f,c
 12203  00174E  3233               	rrcf	___fladd@b^0,f,c
 12204  001750  2A41               	incf	___fladd@bexp^0,f,c
 12205  001752  EF4F  F00C         	goto	l4055
 12206  001756                     l4019:
 12207  001756  FFFF               	dw	65535	; assembler added errata NOP
 12208  001758  5037               	movf	___fladd@a^0,w,c
 12209  00175A  5C33               	subwf	___fladd@b^0,w,c
 12210  00175C  5038               	movf	(___fladd@a+1)^0,w,c
 12211  00175E  5834               	subwfb	(___fladd@b+1)^0,w,c
 12212  001760  5039               	movf	(___fladd@a+2)^0,w,c
 12213  001762  5835               	subwfb	(___fladd@b+2)^0,w,c
 12214  001764  5036               	movf	(___fladd@b+3)^0,w,c
 12215  001766  0A80               	xorlw	128
 12216  001768  6E3B               	movwf	??___fladd^0,c
 12217  00176A  503A               	movf	(___fladd@a+3)^0,w,c
 12218  00176C  0A80               	xorlw	128
 12219  00176E  583B               	subwfb	??___fladd^0,w,c
 12220  001770  B0D8               	btfsc	status,0,c
 12221  001772  EFBD  F00B         	goto	u4531
 12222  001776  EFC0  F00B         	goto	u4530
 12223  00177A                     u4531:
 12224  00177A  FFFF               	dw	65535	; assembler added errata NOP
 12225  00177C  EFEE  F00B         	goto	l4029
 12226  001780                     u4530:
 12227  001780  FFFF               	dw	65535	; assembler added errata NOP
 12228  001782  5033               	movf	___fladd@b^0,w,c
 12229  001784  5C37               	subwf	___fladd@a^0,w,c
 12230  001786  6E3B               	movwf	??___fladd^0,c
 12231  001788  5034               	movf	(___fladd@b+1)^0,w,c
 12232  00178A  5838               	subwfb	(___fladd@a+1)^0,w,c
 12233  00178C  6E3C               	movwf	(??___fladd+1)^0,c
 12234  00178E  5035               	movf	(___fladd@b+2)^0,w,c
 12235  001790  5839               	subwfb	(___fladd@a+2)^0,w,c
 12236  001792  6E3D               	movwf	(??___fladd+2)^0,c
 12237  001794  5036               	movf	(___fladd@b+3)^0,w,c
 12238  001796  583A               	subwfb	(___fladd@a+3)^0,w,c
 12239  001798  6E3E               	movwf	(??___fladd+3)^0,c
 12240  00179A  0EFF               	movlw	255
 12241  00179C  243B               	addwf	??___fladd^0,w,c
 12242  00179E  6E33               	movwf	___fladd@b^0,c
 12243  0017A0  0EFF               	movlw	255
 12244  0017A2  203C               	addwfc	(??___fladd+1)^0,w,c
 12245  0017A4  6E34               	movwf	(___fladd@b+1)^0,c
 12246  0017A6  0EFF               	movlw	255
 12247  0017A8  203D               	addwfc	(??___fladd+2)^0,w,c
 12248  0017AA  6E35               	movwf	(___fladd@b+2)^0,c
 12249  0017AC  0EFF               	movlw	255
 12250  0017AE  203E               	addwfc	(??___fladd+3)^0,w,c
 12251  0017B0  6E36               	movwf	(___fladd@b+3)^0,c
 12252  0017B2  0E80               	movlw	128
 12253  0017B4  1A3F               	xorwf	___fladd@signs^0,f,c
 12254  0017B6  6C42               	negf	___fladd@grs^0,c
 12255  0017B8  5042               	movf	___fladd@grs^0,w,c
 12256  0017BA  A4D8               	btfss	status,2,c
 12257  0017BC  EFE2  F00B         	goto	u4541
 12258  0017C0  EFE5  F00B         	goto	u4540
 12259  0017C4                     u4541:
 12260  0017C4  FFFF               	dw	65535	; assembler added errata NOP
 12261  0017C6  EFF7  F00B         	goto	l844
 12262  0017CA                     u4540:
 12263  0017CA  FFFF               	dw	65535	; assembler added errata NOP
 12264  0017CC  0E01               	movlw	1
 12265  0017CE  2633               	addwf	___fladd@b^0,f,c
 12266  0017D0  0E00               	movlw	0
 12267  0017D2  2234               	addwfc	(___fladd@b+1)^0,f,c
 12268  0017D4  2235               	addwfc	(___fladd@b+2)^0,f,c
 12269  0017D6  2236               	addwfc	(___fladd@b+3)^0,f,c
 12270  0017D8  EFF7  F00B         	goto	l844
 12271  0017DC                     l4029:
 12272  0017DC  FFFF               	dw	65535	; assembler added errata NOP
 12273  0017DE  5037               	movf	___fladd@a^0,w,c
 12274  0017E0  5E33               	subwf	___fladd@b^0,f,c
 12275  0017E2  5038               	movf	(___fladd@a+1)^0,w,c
 12276  0017E4  5A34               	subwfb	(___fladd@b+1)^0,f,c
 12277  0017E6  5039               	movf	(___fladd@a+2)^0,w,c
 12278  0017E8  5A35               	subwfb	(___fladd@b+2)^0,f,c
 12279  0017EA  503A               	movf	(___fladd@a+3)^0,w,c
 12280  0017EC  5A36               	subwfb	(___fladd@b+3)^0,f,c
 12281  0017EE                     l844:
 12282  0017EE  FFFF               	dw	65535	; assembler added errata NOP
 12283  0017F0  5033               	movf	___fladd@b^0,w,c
 12284  0017F2  1034               	iorwf	(___fladd@b+1)^0,w,c
 12285  0017F4  1035               	iorwf	(___fladd@b+2)^0,w,c
 12286  0017F6  1036               	iorwf	(___fladd@b+3)^0,w,c
 12287  0017F8  A4D8               	btfss	status,2,c
 12288  0017FA  EF01  F00C         	goto	u4551
 12289  0017FE  EF04  F00C         	goto	u4550
 12290  001802                     u4551:
 12291  001802  FFFF               	dw	65535	; assembler added errata NOP
 12292  001804  EF46  F00C         	goto	l4053
 12293  001808                     u4550:
 12294  001808  FFFF               	dw	65535	; assembler added errata NOP
 12295  00180A  5042               	movf	___fladd@grs^0,w,c
 12296  00180C  A4D8               	btfss	status,2,c
 12297  00180E  EF0B  F00C         	goto	u4561
 12298  001812  EF0E  F00C         	goto	u4560
 12299  001816                     u4561:
 12300  001816  FFFF               	dw	65535	; assembler added errata NOP
 12301  001818  EF46  F00C         	goto	l4053
 12302  00181C                     u4560:
 12303  00181C  FFFF               	dw	65535	; assembler added errata NOP
 12304  00181E  0E00               	movlw	0
 12305  001820  6E33               	movwf	?___fladd^0,c
 12306  001822  0E00               	movlw	0
 12307  001824  6E34               	movwf	(?___fladd+1)^0,c
 12308  001826  0E00               	movlw	0
 12309  001828  6E35               	movwf	(?___fladd+2)^0,c
 12310  00182A  0E00               	movlw	0
 12311  00182C  6E36               	movwf	(?___fladd+3)^0,c
 12312  00182E  EF02  F00D         	goto	l836
 12313  001832                     l4037:
 12314  001832  FFFF               	dw	65535	; assembler added errata NOP
 12315  001834  90D8               	bcf	status,0,c
 12316  001836  3633               	rlcf	___fladd@b^0,f,c
 12317  001838  3634               	rlcf	(___fladd@b+1)^0,f,c
 12318  00183A  3635               	rlcf	(___fladd@b+2)^0,f,c
 12319  00183C  3636               	rlcf	(___fladd@b+3)^0,f,c
 12320  00183E  AE42               	btfss	___fladd@grs^0,7,c
 12321  001840  EF24  F00C         	goto	u4571
 12322  001844  EF27  F00C         	goto	u4570
 12323  001848                     u4571:
 12324  001848  FFFF               	dw	65535	; assembler added errata NOP
 12325  00184A  EF29  F00C         	goto	l4043
 12326  00184E                     u4570:
 12327  00184E  FFFF               	dw	65535	; assembler added errata NOP
 12328  001850  8033               	bsf	___fladd@b^0,0,c
 12329  001852                     l4043:
 12330  001852  FFFF               	dw	65535	; assembler added errata NOP
 12331  001854  A042               	btfss	___fladd@grs^0,0,c
 12332  001856  EF2F  F00C         	goto	u4581
 12333  00185A  EF32  F00C         	goto	u4580
 12334  00185E                     u4581:
 12335  00185E  FFFF               	dw	65535	; assembler added errata NOP
 12336  001860  EF37  F00C         	goto	l4047
 12337  001864                     u4580:
 12338  001864  FFFF               	dw	65535	; assembler added errata NOP
 12339  001866  80D8               	bsf	status,0,c
 12340  001868  3642               	rlcf	___fladd@grs^0,f,c
 12341  00186A  EF3A  F00C         	goto	l4049
 12342  00186E                     l4047:
 12343  00186E  FFFF               	dw	65535	; assembler added errata NOP
 12344  001870  90D8               	bcf	status,0,c
 12345  001872  3642               	rlcf	___fladd@grs^0,f,c
 12346  001874                     l4049:
 12347  001874  FFFF               	dw	65535	; assembler added errata NOP
 12348  001876  5041               	movf	___fladd@bexp^0,w,c
 12349  001878  B4D8               	btfsc	status,2,c
 12350  00187A  EF41  F00C         	goto	u4591
 12351  00187E  EF44  F00C         	goto	u4590
 12352  001882                     u4591:
 12353  001882  FFFF               	dw	65535	; assembler added errata NOP
 12354  001884  EF46  F00C         	goto	l4053
 12355  001888                     u4590:
 12356  001888  FFFF               	dw	65535	; assembler added errata NOP
 12357  00188A  0641               	decf	___fladd@bexp^0,f,c
 12358  00188C                     l4053:
 12359  00188C  FFFF               	dw	65535	; assembler added errata NOP
 12360  00188E  AE35               	btfss	(___fladd@b+2)^0,7,c
 12361  001890  EF4C  F00C         	goto	u4601
 12362  001894  EF4F  F00C         	goto	u4600
 12363  001898                     u4601:
 12364  001898  FFFF               	dw	65535	; assembler added errata NOP
 12365  00189A  EF19  F00C         	goto	l4037
 12366  00189E                     u4600:
 12367  00189E                     l4055:
 12368  00189E  FFFF               	dw	65535	; assembler added errata NOP
 12369  0018A0  0E00               	movlw	0
 12370  0018A2  6E40               	movwf	___fladd@aexp^0,c
 12371  0018A4  AE42               	btfss	___fladd@grs^0,7,c
 12372  0018A6  EF57  F00C         	goto	u4611
 12373  0018AA  EF5A  F00C         	goto	u4610
 12374  0018AE                     u4611:
 12375  0018AE  FFFF               	dw	65535	; assembler added errata NOP
 12376  0018B0  EF79  F00C         	goto	l853
 12377  0018B4                     u4610:
 12378  0018B4  FFFF               	dw	65535	; assembler added errata NOP
 12379  0018B6  C042  F03B         	movff	___fladd@grs,??___fladd
 12380  0018BA  0E7F               	movlw	127
 12381  0018BC  163B               	andwf	??___fladd^0,f,c
 12382  0018BE  B4D8               	btfsc	status,2,c
 12383  0018C0  EF64  F00C         	goto	u4621
 12384  0018C4  EF67  F00C         	goto	u4620
 12385  0018C8                     u4621:
 12386  0018C8  FFFF               	dw	65535	; assembler added errata NOP
 12387  0018CA  EF6D  F00C         	goto	l854
 12388  0018CE                     u4620:
 12389  0018CE  FFFF               	dw	65535	; assembler added errata NOP
 12390  0018D0                     l4061:
 12391  0018D0  FFFF               	dw	65535	; assembler added errata NOP
 12392  0018D2  0E01               	movlw	1
 12393  0018D4  6E40               	movwf	___fladd@aexp^0,c
 12394  0018D6  EF79  F00C         	goto	l853
 12395  0018DA                     l854:
 12396  0018DA  FFFF               	dw	65535	; assembler added errata NOP
 12397  0018DC  A033               	btfss	___fladd@b^0,0,c
 12398  0018DE  EF73  F00C         	goto	u4631
 12399  0018E2  EF76  F00C         	goto	u4630
 12400  0018E6                     u4631:
 12401  0018E6  FFFF               	dw	65535	; assembler added errata NOP
 12402  0018E8  EF79  F00C         	goto	l853
 12403  0018EC                     u4630:
 12404  0018EC  FFFF               	dw	65535	; assembler added errata NOP
 12405  0018EE  EF68  F00C         	goto	l4061
 12406  0018F2                     l853:
 12407  0018F2  FFFF               	dw	65535	; assembler added errata NOP
 12408  0018F4  5040               	movf	___fladd@aexp^0,w,c
 12409  0018F6  B4D8               	btfsc	status,2,c
 12410  0018F8  EF80  F00C         	goto	u4641
 12411  0018FC  EF83  F00C         	goto	u4640
 12412  001900                     u4641:
 12413  001900  FFFF               	dw	65535	; assembler added errata NOP
 12414  001902  EFB3  F00C         	goto	l4073
 12415  001906                     u4640:
 12416  001906  FFFF               	dw	65535	; assembler added errata NOP
 12417  001908  0E01               	movlw	1
 12418  00190A  2633               	addwf	___fladd@b^0,f,c
 12419  00190C  0E00               	movlw	0
 12420  00190E  2234               	addwfc	(___fladd@b+1)^0,f,c
 12421  001910  2235               	addwfc	(___fladd@b+2)^0,f,c
 12422  001912  2236               	addwfc	(___fladd@b+3)^0,f,c
 12423  001914  A036               	btfss	(___fladd@b+3)^0,0,c
 12424  001916  EF8F  F00C         	goto	u4651
 12425  00191A  EF92  F00C         	goto	u4650
 12426  00191E                     u4651:
 12427  00191E  FFFF               	dw	65535	; assembler added errata NOP
 12428  001920  EFB3  F00C         	goto	l4073
 12429  001924                     u4650:
 12430  001924  FFFF               	dw	65535	; assembler added errata NOP
 12431  001926  C033  F03B         	movff	___fladd@b,??___fladd
 12432  00192A  C034  F03C         	movff	___fladd@b+1,??___fladd+1
 12433  00192E  C035  F03D         	movff	___fladd@b+2,??___fladd+2
 12434  001932  C036  F03E         	movff	___fladd@b+3,??___fladd+3
 12435  001936  343E               	rlcf	(??___fladd+3)^0,w,c
 12436  001938  323E               	rrcf	(??___fladd+3)^0,f,c
 12437  00193A  323D               	rrcf	(??___fladd+2)^0,f,c
 12438  00193C  323C               	rrcf	(??___fladd+1)^0,f,c
 12439  00193E  323B               	rrcf	??___fladd^0,f,c
 12440  001940  C03B  F033         	movff	??___fladd,___fladd@b
 12441  001944  C03C  F034         	movff	??___fladd+1,___fladd@b+1
 12442  001948  C03D  F035         	movff	??___fladd+2,___fladd@b+2
 12443  00194C  C03E  F036         	movff	??___fladd+3,___fladd@b+3
 12444  001950  2841               	incf	___fladd@bexp^0,w,c
 12445  001952  B4D8               	btfsc	status,2,c
 12446  001954  EFAE  F00C         	goto	u4661
 12447  001958  EFB1  F00C         	goto	u4660
 12448  00195C                     u4661:
 12449  00195C  FFFF               	dw	65535	; assembler added errata NOP
 12450  00195E  EFB3  F00C         	goto	l4073
 12451  001962                     u4660:
 12452  001962  FFFF               	dw	65535	; assembler added errata NOP
 12453  001964  2A41               	incf	___fladd@bexp^0,f,c
 12454  001966                     l4073:
 12455  001966  FFFF               	dw	65535	; assembler added errata NOP
 12456  001968  2841               	incf	___fladd@bexp^0,w,c
 12457  00196A  B4D8               	btfsc	status,2,c
 12458  00196C  EFBA  F00C         	goto	u4671
 12459  001970  EFBD  F00C         	goto	u4670
 12460  001974                     u4671:
 12461  001974  FFFF               	dw	65535	; assembler added errata NOP
 12462  001976  EFC7  F00C         	goto	l4077
 12463  00197A                     u4670:
 12464  00197A  FFFF               	dw	65535	; assembler added errata NOP
 12465  00197C  5041               	movf	___fladd@bexp^0,w,c
 12466  00197E  A4D8               	btfss	status,2,c
 12467  001980  EFC4  F00C         	goto	u4681
 12468  001984  EFC7  F00C         	goto	u4680
 12469  001988                     u4681:
 12470  001988  FFFF               	dw	65535	; assembler added errata NOP
 12471  00198A  EFDC  F00C         	goto	l4081
 12472  00198E                     u4680:
 12473  00198E                     l4077:
 12474  00198E  FFFF               	dw	65535	; assembler added errata NOP
 12475  001990  0E00               	movlw	0
 12476  001992  6E33               	movwf	___fladd@b^0,c
 12477  001994  0E00               	movlw	0
 12478  001996  6E34               	movwf	(___fladd@b+1)^0,c
 12479  001998  0E00               	movlw	0
 12480  00199A  6E35               	movwf	(___fladd@b+2)^0,c
 12481  00199C  0E00               	movlw	0
 12482  00199E  6E36               	movwf	(___fladd@b+3)^0,c
 12483  0019A0  5041               	movf	___fladd@bexp^0,w,c
 12484  0019A2  A4D8               	btfss	status,2,c
 12485  0019A4  EFD6  F00C         	goto	u4691
 12486  0019A8  EFD9  F00C         	goto	u4690
 12487  0019AC                     u4691:
 12488  0019AC  FFFF               	dw	65535	; assembler added errata NOP
 12489  0019AE  EFDC  F00C         	goto	l4081
 12490  0019B2                     u4690:
 12491  0019B2  FFFF               	dw	65535	; assembler added errata NOP
 12492  0019B4  0E00               	movlw	0
 12493  0019B6  6E3F               	movwf	___fladd@signs^0,c
 12494  0019B8                     l4081:
 12495  0019B8  FFFF               	dw	65535	; assembler added errata NOP
 12496  0019BA  A041               	btfss	___fladd@bexp^0,0,c
 12497  0019BC  EFE2  F00C         	goto	u4701
 12498  0019C0  EFE5  F00C         	goto	u4700
 12499  0019C4                     u4701:
 12500  0019C4  FFFF               	dw	65535	; assembler added errata NOP
 12501  0019C6  EFE9  F00C         	goto	l4085
 12502  0019CA                     u4700:
 12503  0019CA  FFFF               	dw	65535	; assembler added errata NOP
 12504  0019CC  8E35               	bsf	(___fladd@b+2)^0,7,c
 12505  0019CE  EFEB  F00C         	goto	l4087
 12506  0019D2                     l4085:
 12507  0019D2  FFFF               	dw	65535	; assembler added errata NOP
 12508  0019D4  9E35               	bcf	(___fladd@b+2)^0,7,c
 12509  0019D6                     l4087:
 12510  0019D6  FFFF               	dw	65535	; assembler added errata NOP
 12511  0019D8  90D8               	bcf	status,0,c
 12512  0019DA  3041               	rrcf	___fladd@bexp^0,w,c
 12513  0019DC  6E36               	movwf	(___fladd@b+3)^0,c
 12514  0019DE  AE3F               	btfss	___fladd@signs^0,7,c
 12515  0019E0  EFF4  F00C         	goto	u4711
 12516  0019E4  EFF7  F00C         	goto	u4710
 12517  0019E8                     u4711:
 12518  0019E8  FFFF               	dw	65535	; assembler added errata NOP
 12519  0019EA  EFF9  F00C         	goto	l4093
 12520  0019EE                     u4710:
 12521  0019EE  FFFF               	dw	65535	; assembler added errata NOP
 12522  0019F0  8E36               	bsf	(___fladd@b+3)^0,7,c
 12523  0019F2                     l4093:
 12524  0019F2  FFFF               	dw	65535	; assembler added errata NOP
 12525  0019F4  C033  F033         	movff	___fladd@b,?___fladd
 12526  0019F8  C034  F034         	movff	___fladd@b+1,?___fladd+1
 12527  0019FC  C035  F035         	movff	___fladd@b+2,?___fladd+2
 12528  001A00  C036  F036         	movff	___fladd@b+3,?___fladd+3
 12529  001A04                     l836:
 12530  001A04  FFFF               	dw	65535	; assembler added errata NOP
 12531  001A06  0012               	return		;funcret
 12532  001A08  FFFF               	dw	65535	; errata NOP
 12533  001A0A                     __end_of___fladd:
 12534                           	callstack 0
 12535                           
 12536 ;; *************** function ___flneg *****************
 12537 ;; Defined at:
 12538 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
 12539 ;; Parameters:    Size  Location     Type
 12540 ;;  f1              4    0[COMRAM] unsigned char 
 12541 ;; Auto vars:     Size  Location     Type
 12542 ;;		None
 12543 ;; Return value:  Size  Location     Type
 12544 ;;                  4    0[COMRAM] unsigned char 
 12545 ;; Registers used:
 12546 ;;		wreg, status,2, status,0
 12547 ;; Tracked objects:
 12548 ;;		On entry : 0/0
 12549 ;;		On exit  : 0/0
 12550 ;;		Unchanged: 0/0
 12551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12552 ;;      Params:         4       0       0       0       0       0       0
 12553 ;;      Locals:         0       0       0       0       0       0       0
 12554 ;;      Temps:          0       0       0       0       0       0       0
 12555 ;;      Totals:         4       0       0       0       0       0       0
 12556 ;;Total ram usage:        4 bytes
 12557 ;; Hardware stack levels used:    1
 12558 ;; Hardware stack levels required when called:    1
 12559 ;; This function calls:
 12560 ;;		Nothing
 12561 ;; This function is called by:
 12562 ;;		_roundf
 12563 ;; This function uses a non-reentrant model
 12564 ;;
 12565                           
 12566                           	psect	text50
 12567  006F58                     __ptext50:
 12568                           	callstack 0
 12569  006F58                     ___flneg:
 12570                           	callstack 0
 12571  006F58  FFFF               	dw	65535	; assembler added errata NOP
 12572  006F5A  5001               	movf	___flneg@f1^0,w,c
 12573  006F5C  1002               	iorwf	(___flneg@f1+1)^0,w,c
 12574  006F5E  1003               	iorwf	(___flneg@f1+2)^0,w,c
 12575  006F60  1004               	iorwf	(___flneg@f1+3)^0,w,c
 12576  006F62  B4D8               	btfsc	status,2,c
 12577  006F64  EFB6  F037         	goto	u5681
 12578  006F68  EFB9  F037         	goto	u5680
 12579  006F6C                     u5681:
 12580  006F6C  FFFF               	dw	65535	; assembler added errata NOP
 12581  006F6E  EFC2  F037         	goto	l4731
 12582  006F72                     u5680:
 12583  006F72  FFFF               	dw	65535	; assembler added errata NOP
 12584  006F74  0E00               	movlw	0
 12585  006F76  1A01               	xorwf	___flneg@f1^0,f,c
 12586  006F78  0E00               	movlw	0
 12587  006F7A  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 12588  006F7C  0E00               	movlw	0
 12589  006F7E  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 12590  006F80  0E80               	movlw	128
 12591  006F82  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 12592  006F84                     l4731:
 12593  006F84  FFFF               	dw	65535	; assembler added errata NOP
 12594  006F86  C001  F001         	movff	___flneg@f1,?___flneg
 12595  006F8A  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 12596  006F8E  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 12597  006F92  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 12598  006F96  0012               	return		;funcret
 12599  006F98  FFFF               	dw	65535	; errata NOP
 12600  006F9A                     __end_of___flneg:
 12601                           	callstack 0
 12602                           
 12603 ;; *************** function ___flmul *****************
 12604 ;; Defined at:
 12605 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 12606 ;; Parameters:    Size  Location     Type
 12607 ;;  b               4    0[COMRAM] unsigned char 
 12608 ;;  a               4    4[COMRAM] unsigned char 
 12609 ;; Auto vars:     Size  Location     Type
 12610 ;;  prod            4   19[COMRAM] struct .
 12611 ;;  grs             4   13[COMRAM] unsigned long 
 12612 ;;  temp            2   23[COMRAM] struct .
 12613 ;;  bexp            1   18[COMRAM] unsigned char 
 12614 ;;  aexp            1   17[COMRAM] unsigned char 
 12615 ;;  sign            1   12[COMRAM] unsigned char 
 12616 ;; Return value:  Size  Location     Type
 12617 ;;                  4    0[COMRAM] unsigned char 
 12618 ;; Registers used:
 12619 ;;		wreg, status,2, status,0, prodl, prodh
 12620 ;; Tracked objects:
 12621 ;;		On entry : 0/0
 12622 ;;		On exit  : 0/0
 12623 ;;		Unchanged: 0/0
 12624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12625 ;;      Params:         8       0       0       0       0       0       0
 12626 ;;      Locals:        13       0       0       0       0       0       0
 12627 ;;      Temps:          4       0       0       0       0       0       0
 12628 ;;      Totals:        25       0       0       0       0       0       0
 12629 ;;Total ram usage:       25 bytes
 12630 ;; Hardware stack levels used:    1
 12631 ;; Hardware stack levels required when called:    1
 12632 ;; This function calls:
 12633 ;;		Nothing
 12634 ;; This function is called by:
 12635 ;;		_init_timer_2
 12636 ;;		_update_pwm_duty_ccp1
 12637 ;;		_roundf
 12638 ;; This function uses a non-reentrant model
 12639 ;;
 12640                           
 12641                           	psect	text51
 12642  001A0A                     __ptext51:
 12643                           	callstack 0
 12644  001A0A                     ___flmul:
 12645                           	callstack 0
 12646  001A0A  FFFF               	dw	65535	; assembler added errata NOP
 12647  001A0C  5004               	movf	(___flmul@b+3)^0,w,c
 12648  001A0E  0B80               	andlw	128
 12649  001A10  6E0D               	movwf	___flmul@sign^0,c
 12650  001A12  5004               	movf	(___flmul@b+3)^0,w,c
 12651  001A14  2404               	addwf	(___flmul@b+3)^0,w,c
 12652  001A16  6E13               	movwf	___flmul@bexp^0,c
 12653  001A18  AE03               	btfss	(___flmul@b+2)^0,7,c
 12654  001A1A  EF11  F00D         	goto	u5441
 12655  001A1E  EF14  F00D         	goto	u5440
 12656  001A22                     u5441:
 12657  001A22  FFFF               	dw	65535	; assembler added errata NOP
 12658  001A24  EF16  F00D         	goto	l4575
 12659  001A28                     u5440:
 12660  001A28  FFFF               	dw	65535	; assembler added errata NOP
 12661  001A2A  8013               	bsf	___flmul@bexp^0,0,c
 12662  001A2C                     l4575:
 12663  001A2C  FFFF               	dw	65535	; assembler added errata NOP
 12664  001A2E  5013               	movf	___flmul@bexp^0,w,c
 12665  001A30  B4D8               	btfsc	status,2,c
 12666  001A32  EF1D  F00D         	goto	u5451
 12667  001A36  EF20  F00D         	goto	u5450
 12668  001A3A                     u5451:
 12669  001A3A  FFFF               	dw	65535	; assembler added errata NOP
 12670  001A3C  EF37  F00D         	goto	l4583
 12671  001A40                     u5450:
 12672  001A40  FFFF               	dw	65535	; assembler added errata NOP
 12673  001A42  2813               	incf	___flmul@bexp^0,w,c
 12674  001A44  A4D8               	btfss	status,2,c
 12675  001A46  EF27  F00D         	goto	u5461
 12676  001A4A  EF2A  F00D         	goto	u5460
 12677  001A4E                     u5461:
 12678  001A4E  FFFF               	dw	65535	; assembler added errata NOP
 12679  001A50  EF33  F00D         	goto	l4581
 12680  001A54                     u5460:
 12681  001A54  FFFF               	dw	65535	; assembler added errata NOP
 12682  001A56  0E00               	movlw	0
 12683  001A58  6E01               	movwf	___flmul@b^0,c
 12684  001A5A  0E00               	movlw	0
 12685  001A5C  6E02               	movwf	(___flmul@b+1)^0,c
 12686  001A5E  0E00               	movlw	0
 12687  001A60  6E03               	movwf	(___flmul@b+2)^0,c
 12688  001A62  0E00               	movlw	0
 12689  001A64  6E04               	movwf	(___flmul@b+3)^0,c
 12690  001A66                     l4581:
 12691  001A66  FFFF               	dw	65535	; assembler added errata NOP
 12692  001A68  8E03               	bsf	(___flmul@b+2)^0,7,c
 12693  001A6A  EF40  F00D         	goto	l4585
 12694  001A6E                     l4583:
 12695  001A6E  FFFF               	dw	65535	; assembler added errata NOP
 12696  001A70  0E00               	movlw	0
 12697  001A72  6E01               	movwf	___flmul@b^0,c
 12698  001A74  0E00               	movlw	0
 12699  001A76  6E02               	movwf	(___flmul@b+1)^0,c
 12700  001A78  0E00               	movlw	0
 12701  001A7A  6E03               	movwf	(___flmul@b+2)^0,c
 12702  001A7C  0E00               	movlw	0
 12703  001A7E  6E04               	movwf	(___flmul@b+3)^0,c
 12704  001A80                     l4585:
 12705  001A80  FFFF               	dw	65535	; assembler added errata NOP
 12706  001A82  5008               	movf	(___flmul@a+3)^0,w,c
 12707  001A84  0B80               	andlw	128
 12708  001A86  1A0D               	xorwf	___flmul@sign^0,f,c
 12709  001A88  5008               	movf	(___flmul@a+3)^0,w,c
 12710  001A8A  2408               	addwf	(___flmul@a+3)^0,w,c
 12711  001A8C  6E12               	movwf	___flmul@aexp^0,c
 12712  001A8E  AE07               	btfss	(___flmul@a+2)^0,7,c
 12713  001A90  EF4C  F00D         	goto	u5471
 12714  001A94  EF4F  F00D         	goto	u5470
 12715  001A98                     u5471:
 12716  001A98  FFFF               	dw	65535	; assembler added errata NOP
 12717  001A9A  EF51  F00D         	goto	l4593
 12718  001A9E                     u5470:
 12719  001A9E  FFFF               	dw	65535	; assembler added errata NOP
 12720  001AA0  8012               	bsf	___flmul@aexp^0,0,c
 12721  001AA2                     l4593:
 12722  001AA2  FFFF               	dw	65535	; assembler added errata NOP
 12723  001AA4  5012               	movf	___flmul@aexp^0,w,c
 12724  001AA6  B4D8               	btfsc	status,2,c
 12725  001AA8  EF58  F00D         	goto	u5481
 12726  001AAC  EF5B  F00D         	goto	u5480
 12727  001AB0                     u5481:
 12728  001AB0  FFFF               	dw	65535	; assembler added errata NOP
 12729  001AB2  EF72  F00D         	goto	l4601
 12730  001AB6                     u5480:
 12731  001AB6  FFFF               	dw	65535	; assembler added errata NOP
 12732  001AB8  2812               	incf	___flmul@aexp^0,w,c
 12733  001ABA  A4D8               	btfss	status,2,c
 12734  001ABC  EF62  F00D         	goto	u5491
 12735  001AC0  EF65  F00D         	goto	u5490
 12736  001AC4                     u5491:
 12737  001AC4  FFFF               	dw	65535	; assembler added errata NOP
 12738  001AC6  EF6E  F00D         	goto	l4599
 12739  001ACA                     u5490:
 12740  001ACA  FFFF               	dw	65535	; assembler added errata NOP
 12741  001ACC  0E00               	movlw	0
 12742  001ACE  6E05               	movwf	___flmul@a^0,c
 12743  001AD0  0E00               	movlw	0
 12744  001AD2  6E06               	movwf	(___flmul@a+1)^0,c
 12745  001AD4  0E00               	movlw	0
 12746  001AD6  6E07               	movwf	(___flmul@a+2)^0,c
 12747  001AD8  0E00               	movlw	0
 12748  001ADA  6E08               	movwf	(___flmul@a+3)^0,c
 12749  001ADC                     l4599:
 12750  001ADC  FFFF               	dw	65535	; assembler added errata NOP
 12751  001ADE  8E07               	bsf	(___flmul@a+2)^0,7,c
 12752  001AE0  EF7B  F00D         	goto	l913
 12753  001AE4                     l4601:
 12754  001AE4  FFFF               	dw	65535	; assembler added errata NOP
 12755  001AE6  0E00               	movlw	0
 12756  001AE8  6E05               	movwf	___flmul@a^0,c
 12757  001AEA  0E00               	movlw	0
 12758  001AEC  6E06               	movwf	(___flmul@a+1)^0,c
 12759  001AEE  0E00               	movlw	0
 12760  001AF0  6E07               	movwf	(___flmul@a+2)^0,c
 12761  001AF2  0E00               	movlw	0
 12762  001AF4  6E08               	movwf	(___flmul@a+3)^0,c
 12763  001AF6                     l913:
 12764  001AF6  FFFF               	dw	65535	; assembler added errata NOP
 12765  001AF8  5012               	movf	___flmul@aexp^0,w,c
 12766  001AFA  B4D8               	btfsc	status,2,c
 12767  001AFC  EF82  F00D         	goto	u5501
 12768  001B00  EF85  F00D         	goto	u5500
 12769  001B04                     u5501:
 12770  001B04  FFFF               	dw	65535	; assembler added errata NOP
 12771  001B06  EF8F  F00D         	goto	l4605
 12772  001B0A                     u5500:
 12773  001B0A  FFFF               	dw	65535	; assembler added errata NOP
 12774  001B0C  5013               	movf	___flmul@bexp^0,w,c
 12775  001B0E  A4D8               	btfss	status,2,c
 12776  001B10  EF8C  F00D         	goto	u5511
 12777  001B14  EF8F  F00D         	goto	u5510
 12778  001B18                     u5511:
 12779  001B18  FFFF               	dw	65535	; assembler added errata NOP
 12780  001B1A  EF9A  F00D         	goto	l4609
 12781  001B1E                     u5510:
 12782  001B1E                     l4605:
 12783  001B1E  FFFF               	dw	65535	; assembler added errata NOP
 12784  001B20  0E00               	movlw	0
 12785  001B22  6E01               	movwf	?___flmul^0,c
 12786  001B24  0E00               	movlw	0
 12787  001B26  6E02               	movwf	(?___flmul+1)^0,c
 12788  001B28  0E00               	movlw	0
 12789  001B2A  6E03               	movwf	(?___flmul+2)^0,c
 12790  001B2C  0E00               	movlw	0
 12791  001B2E  6E04               	movwf	(?___flmul+3)^0,c
 12792  001B30  EF54  F00F         	goto	l917
 12793  001B34                     l4609:
 12794  001B34  FFFF               	dw	65535	; assembler added errata NOP
 12795  001B36  5007               	movf	(___flmul@a+2)^0,w,c
 12796  001B38  0201               	mulwf	___flmul@b^0,c
 12797  001B3A  CFF3 F018          	movff	prodl,___flmul@temp
 12798  001B3E  CFF4 F019          	movff	prodh,___flmul@temp+1
 12799  001B42  5018               	movf	___flmul@temp^0,w,c
 12800  001B44  6E0E               	movwf	___flmul@grs^0,c
 12801  001B46  6A0F               	clrf	(___flmul@grs+1)^0,c
 12802  001B48  6A10               	clrf	(___flmul@grs+2)^0,c
 12803  001B4A  6A11               	clrf	(___flmul@grs+3)^0,c
 12804  001B4C  5019               	movf	(___flmul@temp+1)^0,w,c
 12805  001B4E  6E14               	movwf	___flmul@prod^0,c
 12806  001B50  6A15               	clrf	(___flmul@prod+1)^0,c
 12807  001B52  6A16               	clrf	(___flmul@prod+2)^0,c
 12808  001B54  6A17               	clrf	(___flmul@prod+3)^0,c
 12809  001B56  5006               	movf	(___flmul@a+1)^0,w,c
 12810  001B58  0202               	mulwf	(___flmul@b+1)^0,c
 12811  001B5A  CFF3 F018          	movff	prodl,___flmul@temp
 12812  001B5E  CFF4 F019          	movff	prodh,___flmul@temp+1
 12813  001B62  5018               	movf	___flmul@temp^0,w,c
 12814  001B64  260E               	addwf	___flmul@grs^0,f,c
 12815  001B66  0E00               	movlw	0
 12816  001B68  220F               	addwfc	(___flmul@grs+1)^0,f,c
 12817  001B6A  2210               	addwfc	(___flmul@grs+2)^0,f,c
 12818  001B6C  2211               	addwfc	(___flmul@grs+3)^0,f,c
 12819  001B6E  5019               	movf	(___flmul@temp+1)^0,w,c
 12820  001B70  2614               	addwf	___flmul@prod^0,f,c
 12821  001B72  0E00               	movlw	0
 12822  001B74  2215               	addwfc	(___flmul@prod+1)^0,f,c
 12823  001B76  2216               	addwfc	(___flmul@prod+2)^0,f,c
 12824  001B78  2217               	addwfc	(___flmul@prod+3)^0,f,c
 12825  001B7A  5005               	movf	___flmul@a^0,w,c
 12826  001B7C  0203               	mulwf	(___flmul@b+2)^0,c
 12827  001B7E  CFF3 F018          	movff	prodl,___flmul@temp
 12828  001B82  CFF4 F019          	movff	prodh,___flmul@temp+1
 12829  001B86  5018               	movf	___flmul@temp^0,w,c
 12830  001B88  260E               	addwf	___flmul@grs^0,f,c
 12831  001B8A  0E00               	movlw	0
 12832  001B8C  220F               	addwfc	(___flmul@grs+1)^0,f,c
 12833  001B8E  2210               	addwfc	(___flmul@grs+2)^0,f,c
 12834  001B90  2211               	addwfc	(___flmul@grs+3)^0,f,c
 12835  001B92  5019               	movf	(___flmul@temp+1)^0,w,c
 12836  001B94  2614               	addwf	___flmul@prod^0,f,c
 12837  001B96  0E00               	movlw	0
 12838  001B98  2215               	addwfc	(___flmul@prod+1)^0,f,c
 12839  001B9A  2216               	addwfc	(___flmul@prod+2)^0,f,c
 12840  001B9C  2217               	addwfc	(___flmul@prod+3)^0,f,c
 12841  001B9E  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
 12842  001BA2  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
 12843  001BA6  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
 12844  001BAA  6A0E               	clrf	___flmul@grs^0,c
 12845  001BAC  5005               	movf	___flmul@a^0,w,c
 12846  001BAE  0202               	mulwf	(___flmul@b+1)^0,c
 12847  001BB0  CFF3 F018          	movff	prodl,___flmul@temp
 12848  001BB4  CFF4 F019          	movff	prodh,___flmul@temp+1
 12849  001BB8  5018               	movf	___flmul@temp^0,w,c
 12850  001BBA  260E               	addwf	___flmul@grs^0,f,c
 12851  001BBC  5019               	movf	(___flmul@temp+1)^0,w,c
 12852  001BBE  220F               	addwfc	(___flmul@grs+1)^0,f,c
 12853  001BC0  0E00               	movlw	0
 12854  001BC2  2210               	addwfc	(___flmul@grs+2)^0,f,c
 12855  001BC4  0E00               	movlw	0
 12856  001BC6  2211               	addwfc	(___flmul@grs+3)^0,f,c
 12857  001BC8  5006               	movf	(___flmul@a+1)^0,w,c
 12858  001BCA  0201               	mulwf	___flmul@b^0,c
 12859  001BCC  CFF3 F018          	movff	prodl,___flmul@temp
 12860  001BD0  CFF4 F019          	movff	prodh,___flmul@temp+1
 12861  001BD4  5018               	movf	___flmul@temp^0,w,c
 12862  001BD6  260E               	addwf	___flmul@grs^0,f,c
 12863  001BD8  5019               	movf	(___flmul@temp+1)^0,w,c
 12864  001BDA  220F               	addwfc	(___flmul@grs+1)^0,f,c
 12865  001BDC  0E00               	movlw	0
 12866  001BDE  2210               	addwfc	(___flmul@grs+2)^0,f,c
 12867  001BE0  0E00               	movlw	0
 12868  001BE2  2211               	addwfc	(___flmul@grs+3)^0,f,c
 12869  001BE4  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
 12870  001BE8  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
 12871  001BEC  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
 12872  001BF0  6A0E               	clrf	___flmul@grs^0,c
 12873  001BF2  5005               	movf	___flmul@a^0,w,c
 12874  001BF4  0201               	mulwf	___flmul@b^0,c
 12875  001BF6  CFF3 F018          	movff	prodl,___flmul@temp
 12876  001BFA  CFF4 F019          	movff	prodh,___flmul@temp+1
 12877  001BFE  5018               	movf	___flmul@temp^0,w,c
 12878  001C00  260E               	addwf	___flmul@grs^0,f,c
 12879  001C02  5019               	movf	(___flmul@temp+1)^0,w,c
 12880  001C04  220F               	addwfc	(___flmul@grs+1)^0,f,c
 12881  001C06  0E00               	movlw	0
 12882  001C08  2210               	addwfc	(___flmul@grs+2)^0,f,c
 12883  001C0A  0E00               	movlw	0
 12884  001C0C  2211               	addwfc	(___flmul@grs+3)^0,f,c
 12885  001C0E  5007               	movf	(___flmul@a+2)^0,w,c
 12886  001C10  0202               	mulwf	(___flmul@b+1)^0,c
 12887  001C12  CFF3 F018          	movff	prodl,___flmul@temp
 12888  001C16  CFF4 F019          	movff	prodh,___flmul@temp+1
 12889  001C1A  5018               	movf	___flmul@temp^0,w,c
 12890  001C1C  2614               	addwf	___flmul@prod^0,f,c
 12891  001C1E  5019               	movf	(___flmul@temp+1)^0,w,c
 12892  001C20  2215               	addwfc	(___flmul@prod+1)^0,f,c
 12893  001C22  0E00               	movlw	0
 12894  001C24  2216               	addwfc	(___flmul@prod+2)^0,f,c
 12895  001C26  0E00               	movlw	0
 12896  001C28  2217               	addwfc	(___flmul@prod+3)^0,f,c
 12897  001C2A  5006               	movf	(___flmul@a+1)^0,w,c
 12898  001C2C  0203               	mulwf	(___flmul@b+2)^0,c
 12899  001C2E  CFF3 F018          	movff	prodl,___flmul@temp
 12900  001C32  CFF4 F019          	movff	prodh,___flmul@temp+1
 12901  001C36  5018               	movf	___flmul@temp^0,w,c
 12902  001C38  2614               	addwf	___flmul@prod^0,f,c
 12903  001C3A  5019               	movf	(___flmul@temp+1)^0,w,c
 12904  001C3C  2215               	addwfc	(___flmul@prod+1)^0,f,c
 12905  001C3E  0E00               	movlw	0
 12906  001C40  2216               	addwfc	(___flmul@prod+2)^0,f,c
 12907  001C42  0E00               	movlw	0
 12908  001C44  2217               	addwfc	(___flmul@prod+3)^0,f,c
 12909  001C46  5007               	movf	(___flmul@a+2)^0,w,c
 12910  001C48  0203               	mulwf	(___flmul@b+2)^0,c
 12911  001C4A  CFF3 F018          	movff	prodl,___flmul@temp
 12912  001C4E  CFF4 F019          	movff	prodh,___flmul@temp+1
 12913  001C52  5018               	movf	___flmul@temp^0,w,c
 12914  001C54  6E09               	movwf	??___flmul^0,c
 12915  001C56  5019               	movf	(___flmul@temp+1)^0,w,c
 12916  001C58  6E0A               	movwf	(??___flmul+1)^0,c
 12917  001C5A  6A0B               	clrf	(??___flmul+2)^0,c
 12918  001C5C  6A0C               	clrf	(??___flmul+3)^0,c
 12919  001C5E  C00B  F00C         	movff	??___flmul+2,??___flmul+3
 12920  001C62  C00A  F00B         	movff	??___flmul+1,??___flmul+2
 12921  001C66  C009  F00A         	movff	??___flmul,??___flmul+1
 12922  001C6A  6A09               	clrf	??___flmul^0,c
 12923  001C6C  5009               	movf	??___flmul^0,w,c
 12924  001C6E  2614               	addwf	___flmul@prod^0,f,c
 12925  001C70  500A               	movf	(??___flmul+1)^0,w,c
 12926  001C72  2215               	addwfc	(___flmul@prod+1)^0,f,c
 12927  001C74  500B               	movf	(??___flmul+2)^0,w,c
 12928  001C76  2216               	addwfc	(___flmul@prod+2)^0,f,c
 12929  001C78  500C               	movf	(??___flmul+3)^0,w,c
 12930  001C7A  2217               	addwfc	(___flmul@prod+3)^0,f,c
 12931  001C7C  C00E  F009         	movff	___flmul@grs,??___flmul
 12932  001C80  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
 12933  001C84  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
 12934  001C88  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
 12935  001C8C  0E19               	movlw	25
 12936  001C8E  EF4F  F00E         	goto	u5520
 12937  001C92                     u5525:
 12938  001C92  FFFF               	dw	65535	; assembler added errata NOP
 12939  001C94  90D8               	bcf	status,0,c
 12940  001C96  320C               	rrcf	(??___flmul+3)^0,f,c
 12941  001C98  320B               	rrcf	(??___flmul+2)^0,f,c
 12942  001C9A  320A               	rrcf	(??___flmul+1)^0,f,c
 12943  001C9C  3209               	rrcf	??___flmul^0,f,c
 12944  001C9E                     u5520:
 12945  001C9E  FFFF               	dw	65535	; assembler added errata NOP
 12946  001CA0  2EE8               	decfsz	wreg,f,c
 12947  001CA2  EF49  F00E         	goto	u5525
 12948  001CA6  5009               	movf	??___flmul^0,w,c
 12949  001CA8  2614               	addwf	___flmul@prod^0,f,c
 12950  001CAA  500A               	movf	(??___flmul+1)^0,w,c
 12951  001CAC  2215               	addwfc	(___flmul@prod+1)^0,f,c
 12952  001CAE  500B               	movf	(??___flmul+2)^0,w,c
 12953  001CB0  2216               	addwfc	(___flmul@prod+2)^0,f,c
 12954  001CB2  500C               	movf	(??___flmul+3)^0,w,c
 12955  001CB4  2217               	addwfc	(___flmul@prod+3)^0,f,c
 12956  001CB6  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
 12957  001CBA  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
 12958  001CBE  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
 12959  001CC2  6A0E               	clrf	___flmul@grs^0,c
 12960  001CC4  5012               	movf	___flmul@aexp^0,w,c
 12961  001CC6  C013  F009         	movff	___flmul@bexp,??___flmul
 12962  001CCA  6A0A               	clrf	(??___flmul+1)^0,c
 12963  001CCC  2609               	addwf	??___flmul^0,f,c
 12964  001CCE  0E00               	movlw	0
 12965  001CD0  220A               	addwfc	(??___flmul+1)^0,f,c
 12966  001CD2  0E82               	movlw	130
 12967  001CD4  2409               	addwf	??___flmul^0,w,c
 12968  001CD6  6E18               	movwf	___flmul@temp^0,c
 12969  001CD8  0EFF               	movlw	255
 12970  001CDA  200A               	addwfc	(??___flmul+1)^0,w,c
 12971  001CDC  6E19               	movwf	(___flmul@temp+1)^0,c
 12972  001CDE  EF8A  F00E         	goto	l4657
 12973  001CE2                     l4651:
 12974  001CE2  FFFF               	dw	65535	; assembler added errata NOP
 12975  001CE4  90D8               	bcf	status,0,c
 12976  001CE6  3614               	rlcf	___flmul@prod^0,f,c
 12977  001CE8  3615               	rlcf	(___flmul@prod+1)^0,f,c
 12978  001CEA  3616               	rlcf	(___flmul@prod+2)^0,f,c
 12979  001CEC  3617               	rlcf	(___flmul@prod+3)^0,f,c
 12980  001CEE  AE11               	btfss	(___flmul@grs+3)^0,7,c
 12981  001CF0  EF7C  F00E         	goto	u5531
 12982  001CF4  EF7F  F00E         	goto	u5530
 12983  001CF8                     u5531:
 12984  001CF8  FFFF               	dw	65535	; assembler added errata NOP
 12985  001CFA  EF81  F00E         	goto	l920
 12986  001CFE                     u5530:
 12987  001CFE  FFFF               	dw	65535	; assembler added errata NOP
 12988  001D00  8014               	bsf	___flmul@prod^0,0,c
 12989  001D02                     l920:
 12990  001D02  FFFF               	dw	65535	; assembler added errata NOP
 12991  001D04  90D8               	bcf	status,0,c
 12992  001D06  360E               	rlcf	___flmul@grs^0,f,c
 12993  001D08  360F               	rlcf	(___flmul@grs+1)^0,f,c
 12994  001D0A  3610               	rlcf	(___flmul@grs+2)^0,f,c
 12995  001D0C  3611               	rlcf	(___flmul@grs+3)^0,f,c
 12996  001D0E  0618               	decf	___flmul@temp^0,f,c
 12997  001D10  A0D8               	btfss	status,0,c
 12998  001D12  0619               	decf	(___flmul@temp+1)^0,f,c
 12999  001D14                     l4657:
 13000  001D14  FFFF               	dw	65535	; assembler added errata NOP
 13001  001D16  AE16               	btfss	(___flmul@prod+2)^0,7,c
 13002  001D18  EF90  F00E         	goto	u5541
 13003  001D1C  EF93  F00E         	goto	u5540
 13004  001D20                     u5541:
 13005  001D20  FFFF               	dw	65535	; assembler added errata NOP
 13006  001D22  EF71  F00E         	goto	l4651
 13007  001D26                     u5540:
 13008  001D26  FFFF               	dw	65535	; assembler added errata NOP
 13009  001D28  0E00               	movlw	0
 13010  001D2A  6E12               	movwf	___flmul@aexp^0,c
 13011  001D2C  AE11               	btfss	(___flmul@grs+3)^0,7,c
 13012  001D2E  EF9B  F00E         	goto	u5551
 13013  001D32  EF9E  F00E         	goto	u5550
 13014  001D36                     u5551:
 13015  001D36  FFFF               	dw	65535	; assembler added errata NOP
 13016  001D38  EFC9  F00E         	goto	l922
 13017  001D3C                     u5550:
 13018  001D3C  FFFF               	dw	65535	; assembler added errata NOP
 13019  001D3E  0EFF               	movlw	255
 13020  001D40  140E               	andwf	___flmul@grs^0,w,c
 13021  001D42  6E09               	movwf	??___flmul^0,c
 13022  001D44  0EFF               	movlw	255
 13023  001D46  140F               	andwf	(___flmul@grs+1)^0,w,c
 13024  001D48  6E0A               	movwf	(??___flmul+1)^0,c
 13025  001D4A  0EFF               	movlw	255
 13026  001D4C  1410               	andwf	(___flmul@grs+2)^0,w,c
 13027  001D4E  6E0B               	movwf	(??___flmul+2)^0,c
 13028  001D50  0E7F               	movlw	127
 13029  001D52  1411               	andwf	(___flmul@grs+3)^0,w,c
 13030  001D54  6E0C               	movwf	(??___flmul+3)^0,c
 13031  001D56  5009               	movf	??___flmul^0,w,c
 13032  001D58  100A               	iorwf	(??___flmul+1)^0,w,c
 13033  001D5A  100B               	iorwf	(??___flmul+2)^0,w,c
 13034  001D5C  100C               	iorwf	(??___flmul+3)^0,w,c
 13035  001D5E  B4D8               	btfsc	status,2,c
 13036  001D60  EFB4  F00E         	goto	u5561
 13037  001D64  EFB7  F00E         	goto	u5560
 13038  001D68                     u5561:
 13039  001D68  FFFF               	dw	65535	; assembler added errata NOP
 13040  001D6A  EFBD  F00E         	goto	l923
 13041  001D6E                     u5560:
 13042  001D6E  FFFF               	dw	65535	; assembler added errata NOP
 13043  001D70                     l4665:
 13044  001D70  FFFF               	dw	65535	; assembler added errata NOP
 13045  001D72  0E01               	movlw	1
 13046  001D74  6E12               	movwf	___flmul@aexp^0,c
 13047  001D76  EFC9  F00E         	goto	l922
 13048  001D7A                     l923:
 13049  001D7A  FFFF               	dw	65535	; assembler added errata NOP
 13050  001D7C  A014               	btfss	___flmul@prod^0,0,c
 13051  001D7E  EFC3  F00E         	goto	u5571
 13052  001D82  EFC6  F00E         	goto	u5570
 13053  001D86                     u5571:
 13054  001D86  FFFF               	dw	65535	; assembler added errata NOP
 13055  001D88  EFC9  F00E         	goto	l922
 13056  001D8C                     u5570:
 13057  001D8C  FFFF               	dw	65535	; assembler added errata NOP
 13058  001D8E  EFB8  F00E         	goto	l4665
 13059  001D92                     l922:
 13060  001D92  FFFF               	dw	65535	; assembler added errata NOP
 13061  001D94  5012               	movf	___flmul@aexp^0,w,c
 13062  001D96  B4D8               	btfsc	status,2,c
 13063  001D98  EFD0  F00E         	goto	u5581
 13064  001D9C  EFD3  F00E         	goto	u5580
 13065  001DA0                     u5581:
 13066  001DA0  FFFF               	dw	65535	; assembler added errata NOP
 13067  001DA2  EFFA  F00E         	goto	l4677
 13068  001DA6                     u5580:
 13069  001DA6  FFFF               	dw	65535	; assembler added errata NOP
 13070  001DA8  0E01               	movlw	1
 13071  001DAA  2614               	addwf	___flmul@prod^0,f,c
 13072  001DAC  0E00               	movlw	0
 13073  001DAE  2215               	addwfc	(___flmul@prod+1)^0,f,c
 13074  001DB0  2216               	addwfc	(___flmul@prod+2)^0,f,c
 13075  001DB2  2217               	addwfc	(___flmul@prod+3)^0,f,c
 13076  001DB4  A017               	btfss	(___flmul@prod+3)^0,0,c
 13077  001DB6  EFDF  F00E         	goto	u5591
 13078  001DBA  EFE2  F00E         	goto	u5590
 13079  001DBE                     u5591:
 13080  001DBE  FFFF               	dw	65535	; assembler added errata NOP
 13081  001DC0  EFFA  F00E         	goto	l4677
 13082  001DC4                     u5590:
 13083  001DC4  FFFF               	dw	65535	; assembler added errata NOP
 13084  001DC6  C014  F009         	movff	___flmul@prod,??___flmul
 13085  001DCA  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
 13086  001DCE  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
 13087  001DD2  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
 13088  001DD6  340C               	rlcf	(??___flmul+3)^0,w,c
 13089  001DD8  320C               	rrcf	(??___flmul+3)^0,f,c
 13090  001DDA  320B               	rrcf	(??___flmul+2)^0,f,c
 13091  001DDC  320A               	rrcf	(??___flmul+1)^0,f,c
 13092  001DDE  3209               	rrcf	??___flmul^0,f,c
 13093  001DE0  C009  F014         	movff	??___flmul,___flmul@prod
 13094  001DE4  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
 13095  001DE8  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
 13096  001DEC  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
 13097  001DF0  4A18               	infsnz	___flmul@temp^0,f,c
 13098  001DF2  2A19               	incf	(___flmul@temp+1)^0,f,c
 13099  001DF4                     l4677:
 13100  001DF4  FFFF               	dw	65535	; assembler added errata NOP
 13101  001DF6  BE19               	btfsc	(___flmul@temp+1)^0,7,c
 13102  001DF8  EF06  F00F         	goto	u5601
 13103  001DFC  5019               	movf	(___flmul@temp+1)^0,w,c
 13104  001DFE  E109               	bnz	u5600
 13105  001E00  2818               	incf	___flmul@temp^0,w,c
 13106  001E02  A0D8               	btfss	status,0,c
 13107  001E04  EF06  F00F         	goto	u5601
 13108  001E08  EF09  F00F         	goto	u5600
 13109  001E0C                     u5601:
 13110  001E0C  FFFF               	dw	65535	; assembler added errata NOP
 13111  001E0E  EF14  F00F         	goto	l4681
 13112  001E12                     u5600:
 13113  001E12  FFFF               	dw	65535	; assembler added errata NOP
 13114  001E14  0E00               	movlw	0
 13115  001E16  6E14               	movwf	___flmul@prod^0,c
 13116  001E18  0E00               	movlw	0
 13117  001E1A  6E15               	movwf	(___flmul@prod+1)^0,c
 13118  001E1C  0E80               	movlw	128
 13119  001E1E  6E16               	movwf	(___flmul@prod+2)^0,c
 13120  001E20  0E7F               	movlw	127
 13121  001E22  6E17               	movwf	(___flmul@prod+3)^0,c
 13122  001E24  EF49  F00F         	goto	l4693
 13123  001E28                     l4681:
 13124  001E28  FFFF               	dw	65535	; assembler added errata NOP
 13125  001E2A  BE19               	btfsc	(___flmul@temp+1)^0,7,c
 13126  001E2C  EF23  F00F         	goto	u5610
 13127  001E30  5019               	movf	(___flmul@temp+1)^0,w,c
 13128  001E32  E106               	bnz	u5611
 13129  001E34  0418               	decf	___flmul@temp^0,w,c
 13130  001E36  B0D8               	btfsc	status,0,c
 13131  001E38  EF20  F00F         	goto	u5611
 13132  001E3C  EF23  F00F         	goto	u5610
 13133  001E40                     u5611:
 13134  001E40  FFFF               	dw	65535	; assembler added errata NOP
 13135  001E42  EF30  F00F         	goto	l930
 13136  001E46                     u5610:
 13137  001E46  FFFF               	dw	65535	; assembler added errata NOP
 13138  001E48  0E00               	movlw	0
 13139  001E4A  6E14               	movwf	___flmul@prod^0,c
 13140  001E4C  0E00               	movlw	0
 13141  001E4E  6E15               	movwf	(___flmul@prod+1)^0,c
 13142  001E50  0E00               	movlw	0
 13143  001E52  6E16               	movwf	(___flmul@prod+2)^0,c
 13144  001E54  0E00               	movlw	0
 13145  001E56  6E17               	movwf	(___flmul@prod+3)^0,c
 13146  001E58  0E00               	movlw	0
 13147  001E5A  6E0D               	movwf	___flmul@sign^0,c
 13148  001E5C  EF49  F00F         	goto	l4693
 13149  001E60                     l930:
 13150  001E60  FFFF               	dw	65535	; assembler added errata NOP
 13151  001E62  C018  F013         	movff	___flmul@temp,___flmul@bexp
 13152  001E66  0EFF               	movlw	255
 13153  001E68  1614               	andwf	___flmul@prod^0,f,c
 13154  001E6A  0EFF               	movlw	255
 13155  001E6C  1615               	andwf	(___flmul@prod+1)^0,f,c
 13156  001E6E  0E7F               	movlw	127
 13157  001E70  1616               	andwf	(___flmul@prod+2)^0,f,c
 13158  001E72  0E00               	movlw	0
 13159  001E74  1617               	andwf	(___flmul@prod+3)^0,f,c
 13160  001E76  A013               	btfss	___flmul@bexp^0,0,c
 13161  001E78  EF40  F00F         	goto	u5621
 13162  001E7C  EF43  F00F         	goto	u5620
 13163  001E80                     u5621:
 13164  001E80  FFFF               	dw	65535	; assembler added errata NOP
 13165  001E82  EF45  F00F         	goto	l4691
 13166  001E86                     u5620:
 13167  001E86  FFFF               	dw	65535	; assembler added errata NOP
 13168  001E88  8E16               	bsf	(___flmul@prod+2)^0,7,c
 13169  001E8A                     l4691:
 13170  001E8A  FFFF               	dw	65535	; assembler added errata NOP
 13171  001E8C  90D8               	bcf	status,0,c
 13172  001E8E  3013               	rrcf	___flmul@bexp^0,w,c
 13173  001E90  6E17               	movwf	(___flmul@prod+3)^0,c
 13174  001E92                     l4693:
 13175  001E92  FFFF               	dw	65535	; assembler added errata NOP
 13176  001E94  500D               	movf	___flmul@sign^0,w,c
 13177  001E96  1217               	iorwf	(___flmul@prod+3)^0,f,c
 13178  001E98  C014  F001         	movff	___flmul@prod,?___flmul
 13179  001E9C  C015  F002         	movff	___flmul@prod+1,?___flmul+1
 13180  001EA0  C016  F003         	movff	___flmul@prod+2,?___flmul+2
 13181  001EA4  C017  F004         	movff	___flmul@prod+3,?___flmul+3
 13182  001EA8                     l917:
 13183  001EA8  FFFF               	dw	65535	; assembler added errata NOP
 13184  001EAA  0012               	return		;funcret
 13185  001EAC  FFFF               	dw	65535	; errata NOP
 13186  001EAE                     __end_of___flmul:
 13187                           	callstack 0
 13188                           
 13189 ;; *************** function ___flge *****************
 13190 ;; Defined at:
 13191 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 13192 ;; Parameters:    Size  Location     Type
 13193 ;;  ff1             4    0[COMRAM] unsigned char 
 13194 ;;  ff2             4    4[COMRAM] unsigned char 
 13195 ;; Auto vars:     Size  Location     Type
 13196 ;;		None
 13197 ;; Return value:  Size  Location     Type
 13198 ;;		None               void
 13199 ;; Registers used:
 13200 ;;		wreg, status,2, status,0
 13201 ;; Tracked objects:
 13202 ;;		On entry : 0/0
 13203 ;;		On exit  : 0/0
 13204 ;;		Unchanged: 0/0
 13205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13206 ;;      Params:         8       0       0       0       0       0       0
 13207 ;;      Locals:         0       0       0       0       0       0       0
 13208 ;;      Temps:          4       0       0       0       0       0       0
 13209 ;;      Totals:        12       0       0       0       0       0       0
 13210 ;;Total ram usage:       12 bytes
 13211 ;; Hardware stack levels used:    1
 13212 ;; Hardware stack levels required when called:    1
 13213 ;; This function calls:
 13214 ;;		Nothing
 13215 ;; This function is called by:
 13216 ;;		_roundf
 13217 ;; This function uses a non-reentrant model
 13218 ;;
 13219                           
 13220                           	psect	text52
 13221  003ED2                     __ptext52:
 13222                           	callstack 0
 13223  003ED2                     ___flge:
 13224                           	callstack 0
 13225  003ED2  FFFF               	dw	65535	; assembler added errata NOP
 13226  003ED4  0E00               	movlw	0
 13227  003ED6  1401               	andwf	___flge@ff1^0,w,c
 13228  003ED8  6E09               	movwf	??___flge^0,c
 13229  003EDA  0E00               	movlw	0
 13230  003EDC  1402               	andwf	(___flge@ff1+1)^0,w,c
 13231  003EDE  6E0A               	movwf	(??___flge+1)^0,c
 13232  003EE0  0E80               	movlw	128
 13233  003EE2  1403               	andwf	(___flge@ff1+2)^0,w,c
 13234  003EE4  6E0B               	movwf	(??___flge+2)^0,c
 13235  003EE6  0E7F               	movlw	127
 13236  003EE8  1404               	andwf	(___flge@ff1+3)^0,w,c
 13237  003EEA  6E0C               	movwf	(??___flge+3)^0,c
 13238  003EEC  5009               	movf	??___flge^0,w,c
 13239  003EEE  100A               	iorwf	(??___flge+1)^0,w,c
 13240  003EF0  100B               	iorwf	(??___flge+2)^0,w,c
 13241  003EF2  100C               	iorwf	(??___flge+3)^0,w,c
 13242  003EF4  A4D8               	btfss	status,2,c
 13243  003EF6  EF7F  F01F         	goto	u5631
 13244  003EFA  EF82  F01F         	goto	u5630
 13245  003EFE                     u5631:
 13246  003EFE  FFFF               	dw	65535	; assembler added errata NOP
 13247  003F00  EF8B  F01F         	goto	l4709
 13248  003F04                     u5630:
 13249  003F04  FFFF               	dw	65535	; assembler added errata NOP
 13250  003F06  0E00               	movlw	0
 13251  003F08  6E01               	movwf	___flge@ff1^0,c
 13252  003F0A  0E00               	movlw	0
 13253  003F0C  6E02               	movwf	(___flge@ff1+1)^0,c
 13254  003F0E  0E00               	movlw	0
 13255  003F10  6E03               	movwf	(___flge@ff1+2)^0,c
 13256  003F12  0E00               	movlw	0
 13257  003F14  6E04               	movwf	(___flge@ff1+3)^0,c
 13258  003F16                     l4709:
 13259  003F16  FFFF               	dw	65535	; assembler added errata NOP
 13260  003F18  0E00               	movlw	0
 13261  003F1A  1405               	andwf	___flge@ff2^0,w,c
 13262  003F1C  6E09               	movwf	??___flge^0,c
 13263  003F1E  0E00               	movlw	0
 13264  003F20  1406               	andwf	(___flge@ff2+1)^0,w,c
 13265  003F22  6E0A               	movwf	(??___flge+1)^0,c
 13266  003F24  0E80               	movlw	128
 13267  003F26  1407               	andwf	(___flge@ff2+2)^0,w,c
 13268  003F28  6E0B               	movwf	(??___flge+2)^0,c
 13269  003F2A  0E7F               	movlw	127
 13270  003F2C  1408               	andwf	(___flge@ff2+3)^0,w,c
 13271  003F2E  6E0C               	movwf	(??___flge+3)^0,c
 13272  003F30  5009               	movf	??___flge^0,w,c
 13273  003F32  100A               	iorwf	(??___flge+1)^0,w,c
 13274  003F34  100B               	iorwf	(??___flge+2)^0,w,c
 13275  003F36  100C               	iorwf	(??___flge+3)^0,w,c
 13276  003F38  A4D8               	btfss	status,2,c
 13277  003F3A  EFA1  F01F         	goto	u5641
 13278  003F3E  EFA4  F01F         	goto	u5640
 13279  003F42                     u5641:
 13280  003F42  FFFF               	dw	65535	; assembler added errata NOP
 13281  003F44  EFAD  F01F         	goto	l4713
 13282  003F48                     u5640:
 13283  003F48  FFFF               	dw	65535	; assembler added errata NOP
 13284  003F4A  0E00               	movlw	0
 13285  003F4C  6E05               	movwf	___flge@ff2^0,c
 13286  003F4E  0E00               	movlw	0
 13287  003F50  6E06               	movwf	(___flge@ff2+1)^0,c
 13288  003F52  0E00               	movlw	0
 13289  003F54  6E07               	movwf	(___flge@ff2+2)^0,c
 13290  003F56  0E00               	movlw	0
 13291  003F58  6E08               	movwf	(___flge@ff2+3)^0,c
 13292  003F5A                     l4713:
 13293  003F5A  FFFF               	dw	65535	; assembler added errata NOP
 13294  003F5C  AE04               	btfss	(___flge@ff1+3)^0,7,c
 13295  003F5E  EFB3  F01F         	goto	u5651
 13296  003F62  EFB6  F01F         	goto	u5650
 13297  003F66                     u5651:
 13298  003F66  FFFF               	dw	65535	; assembler added errata NOP
 13299  003F68  EFC0  F01F         	goto	l4717
 13300  003F6C                     u5650:
 13301  003F6C  FFFF               	dw	65535	; assembler added errata NOP
 13302  003F6E  6C01               	negf	___flge@ff1^0,c
 13303  003F70  1E02               	comf	(___flge@ff1+1)^0,f,c
 13304  003F72  B0D8               	btfsc	status,0,c
 13305  003F74  2A02               	incf	(___flge@ff1+1)^0,f,c
 13306  003F76  1E03               	comf	(___flge@ff1+2)^0,f,c
 13307  003F78  B0D8               	btfsc	status,0,c
 13308  003F7A  2A03               	incf	(___flge@ff1+2)^0,f,c
 13309  003F7C  0E80               	movlw	128
 13310  003F7E  5604               	subfwb	(___flge@ff1+3)^0,f,c
 13311  003F80                     l4717:
 13312  003F80  FFFF               	dw	65535	; assembler added errata NOP
 13313  003F82  AE08               	btfss	(___flge@ff2+3)^0,7,c
 13314  003F84  EFC6  F01F         	goto	u5661
 13315  003F88  EFC9  F01F         	goto	u5660
 13316  003F8C                     u5661:
 13317  003F8C  FFFF               	dw	65535	; assembler added errata NOP
 13318  003F8E  EFD3  F01F         	goto	l564
 13319  003F92                     u5660:
 13320  003F92  FFFF               	dw	65535	; assembler added errata NOP
 13321  003F94  6C05               	negf	___flge@ff2^0,c
 13322  003F96  1E06               	comf	(___flge@ff2+1)^0,f,c
 13323  003F98  B0D8               	btfsc	status,0,c
 13324  003F9A  2A06               	incf	(___flge@ff2+1)^0,f,c
 13325  003F9C  1E07               	comf	(___flge@ff2+2)^0,f,c
 13326  003F9E  B0D8               	btfsc	status,0,c
 13327  003FA0  2A07               	incf	(___flge@ff2+2)^0,f,c
 13328  003FA2  0E80               	movlw	128
 13329  003FA4  5608               	subfwb	(___flge@ff2+3)^0,f,c
 13330  003FA6                     l564:
 13331  003FA6  FFFF               	dw	65535	; assembler added errata NOP
 13332  003FA8  0E00               	movlw	0
 13333  003FAA  1A01               	xorwf	___flge@ff1^0,f,c
 13334  003FAC  0E00               	movlw	0
 13335  003FAE  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 13336  003FB0  0E00               	movlw	0
 13337  003FB2  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 13338  003FB4  0E80               	movlw	128
 13339  003FB6  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 13340  003FB8  0E00               	movlw	0
 13341  003FBA  1A05               	xorwf	___flge@ff2^0,f,c
 13342  003FBC  0E00               	movlw	0
 13343  003FBE  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 13344  003FC0  0E00               	movlw	0
 13345  003FC2  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 13346  003FC4  0E80               	movlw	128
 13347  003FC6  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 13348  003FC8  5005               	movf	___flge@ff2^0,w,c
 13349  003FCA  5C01               	subwf	___flge@ff1^0,w,c
 13350  003FCC  5006               	movf	(___flge@ff2+1)^0,w,c
 13351  003FCE  5802               	subwfb	(___flge@ff1+1)^0,w,c
 13352  003FD0  5007               	movf	(___flge@ff2+2)^0,w,c
 13353  003FD2  5803               	subwfb	(___flge@ff1+2)^0,w,c
 13354  003FD4  5008               	movf	(___flge@ff2+3)^0,w,c
 13355  003FD6  5804               	subwfb	(___flge@ff1+3)^0,w,c
 13356  003FD8  B0D8               	btfsc	status,0,c
 13357  003FDA  EFF1  F01F         	goto	u5671
 13358  003FDE  EFF4  F01F         	goto	u5670
 13359  003FE2                     u5671:
 13360  003FE2  FFFF               	dw	65535	; assembler added errata NOP
 13361  003FE4  EFF8  F01F         	goto	l4723
 13362  003FE8                     u5670:
 13363  003FE8  FFFF               	dw	65535	; assembler added errata NOP
 13364  003FEA  90D8               	bcf	status,0,c
 13365  003FEC  EFFA  F01F         	goto	l569
 13366  003FF0                     l4723:
 13367  003FF0  FFFF               	dw	65535	; assembler added errata NOP
 13368  003FF2  80D8               	bsf	status,0,c
 13369  003FF4                     l569:
 13370  003FF4  FFFF               	dw	65535	; assembler added errata NOP
 13371  003FF6  0012               	return		;funcret
 13372  003FF8  FFFF               	dw	65535	; errata NOP
 13373  003FFA                     __end_of___flge:
 13374                           	callstack 0
 13375                           
 13376 ;; *************** function ___fltol *****************
 13377 ;; Defined at:
 13378 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
 13379 ;; Parameters:    Size  Location     Type
 13380 ;;  f1              4  100[COMRAM] unsigned char 
 13381 ;; Auto vars:     Size  Location     Type
 13382 ;;  exp1            1  109[COMRAM] unsigned char 
 13383 ;;  sign1           1  108[COMRAM] unsigned char 
 13384 ;; Return value:  Size  Location     Type
 13385 ;;                  4  100[COMRAM] long 
 13386 ;; Registers used:
 13387 ;;		wreg, status,2, status,0
 13388 ;; Tracked objects:
 13389 ;;		On entry : 0/0
 13390 ;;		On exit  : 0/0
 13391 ;;		Unchanged: 0/0
 13392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13393 ;;      Params:         4       0       0       0       0       0       0
 13394 ;;      Locals:         2       0       0       0       0       0       0
 13395 ;;      Temps:          4       0       0       0       0       0       0
 13396 ;;      Totals:        10       0       0       0       0       0       0
 13397 ;;Total ram usage:       10 bytes
 13398 ;; Hardware stack levels used:    1
 13399 ;; Hardware stack levels required when called:    1
 13400 ;; This function calls:
 13401 ;;		Nothing
 13402 ;; This function is called by:
 13403 ;;		_init_USART
 13404 ;;		_init_timer_2
 13405 ;;		_update_pwm_duty_ccp1
 13406 ;; This function uses a non-reentrant model
 13407 ;;
 13408                           
 13409                           	psect	text53
 13410  003D9C                     __ptext53:
 13411                           	callstack 0
 13412  003D9C                     ___fltol:
 13413                           	callstack 0
 13414  003D9C  FFFF               	dw	65535	; assembler added errata NOP
 13415  003D9E  3467               	rlcf	(___fltol@f1+2)^0,w,c
 13416  003DA0  3468               	rlcf	(___fltol@f1+3)^0,w,c
 13417  003DA2  6E6E               	movwf	___fltol@exp1^0,c
 13418  003DA4  506E               	movf	___fltol@exp1^0,w,c
 13419  003DA6  A4D8               	btfss	status,2,c
 13420  003DA8  EFD8  F01E         	goto	u5691
 13421  003DAC  EFDB  F01E         	goto	u5690
 13422  003DB0                     u5691:
 13423  003DB0  FFFF               	dw	65535	; assembler added errata NOP
 13424  003DB2  EFE7  F01E         	goto	l4741
 13425  003DB6                     u5690:
 13426  003DB6  FFFF               	dw	65535	; assembler added errata NOP
 13427  003DB8                     l4737:
 13428  003DB8  FFFF               	dw	65535	; assembler added errata NOP
 13429  003DBA  0E00               	movlw	0
 13430  003DBC  6E65               	movwf	?___fltol^0,c
 13431  003DBE  0E00               	movlw	0
 13432  003DC0  6E66               	movwf	(?___fltol+1)^0,c
 13433  003DC2  0E00               	movlw	0
 13434  003DC4  6E67               	movwf	(?___fltol+2)^0,c
 13435  003DC6  0E00               	movlw	0
 13436  003DC8  6E68               	movwf	(?___fltol+3)^0,c
 13437  003DCA  EF66  F01F         	goto	l596
 13438  003DCE                     l4741:
 13439  003DCE  FFFF               	dw	65535	; assembler added errata NOP
 13440  003DD0  C065  F069         	movff	___fltol@f1,??___fltol
 13441  003DD4  C066  F06A         	movff	___fltol@f1+1,??___fltol+1
 13442  003DD8  C067  F06B         	movff	___fltol@f1+2,??___fltol+2
 13443  003DDC  C068  F06C         	movff	___fltol@f1+3,??___fltol+3
 13444  003DE0  0E20               	movlw	32
 13445  003DE2  EFF9  F01E         	goto	u5700
 13446  003DE6                     u5705:
 13447  003DE6  FFFF               	dw	65535	; assembler added errata NOP
 13448  003DE8  90D8               	bcf	status,0,c
 13449  003DEA  326C               	rrcf	(??___fltol+3)^0,f,c
 13450  003DEC  326B               	rrcf	(??___fltol+2)^0,f,c
 13451  003DEE  326A               	rrcf	(??___fltol+1)^0,f,c
 13452  003DF0  3269               	rrcf	??___fltol^0,f,c
 13453  003DF2                     u5700:
 13454  003DF2  FFFF               	dw	65535	; assembler added errata NOP
 13455  003DF4  2EE8               	decfsz	wreg,f,c
 13456  003DF6  EFF3  F01E         	goto	u5705
 13457  003DFA  5069               	movf	??___fltol^0,w,c
 13458  003DFC  6E6D               	movwf	___fltol@sign1^0,c
 13459  003DFE  8E67               	bsf	(___fltol@f1+2)^0,7,c
 13460  003E00  0EFF               	movlw	255
 13461  003E02  1665               	andwf	___fltol@f1^0,f,c
 13462  003E04  0EFF               	movlw	255
 13463  003E06  1666               	andwf	(___fltol@f1+1)^0,f,c
 13464  003E08  0EFF               	movlw	255
 13465  003E0A  1667               	andwf	(___fltol@f1+2)^0,f,c
 13466  003E0C  0E00               	movlw	0
 13467  003E0E  1668               	andwf	(___fltol@f1+3)^0,f,c
 13468  003E10  0E96               	movlw	150
 13469  003E12  5E6E               	subwf	___fltol@exp1^0,f,c
 13470  003E14  BE6E               	btfsc	___fltol@exp1^0,7,c
 13471  003E16  EF12  F01F         	goto	u5710
 13472  003E1A  EF0F  F01F         	goto	u5711
 13473  003E1E                     u5711:
 13474  003E1E  FFFF               	dw	65535	; assembler added errata NOP
 13475  003E20  EF2C  F01F         	goto	l4761
 13476  003E24                     u5710:
 13477  003E24  FFFF               	dw	65535	; assembler added errata NOP
 13478  003E26  506E               	movf	___fltol@exp1^0,w,c
 13479  003E28  0A80               	xorlw	128
 13480  003E2A  0F97               	addlw	151
 13481  003E2C  B0D8               	btfsc	status,0,c
 13482  003E2E  EF1B  F01F         	goto	u5721
 13483  003E32  EF1E  F01F         	goto	u5720
 13484  003E36                     u5721:
 13485  003E36  FFFF               	dw	65535	; assembler added errata NOP
 13486  003E38  EF21  F01F         	goto	l4757
 13487  003E3C                     u5720:
 13488  003E3C  FFFF               	dw	65535	; assembler added errata NOP
 13489  003E3E  EFDC  F01E         	goto	l4737
 13490  003E42                     l4757:
 13491  003E42  FFFF               	dw	65535	; assembler added errata NOP
 13492  003E44  90D8               	bcf	status,0,c
 13493  003E46  3268               	rrcf	(___fltol@f1+3)^0,f,c
 13494  003E48  3267               	rrcf	(___fltol@f1+2)^0,f,c
 13495  003E4A  3266               	rrcf	(___fltol@f1+1)^0,f,c
 13496  003E4C  3265               	rrcf	___fltol@f1^0,f,c
 13497  003E4E  3E6E               	incfsz	___fltol@exp1^0,f,c
 13498  003E50  EF21  F01F         	goto	l4757
 13499  003E54  EF4A  F01F         	goto	l4771
 13500  003E58                     l4761:
 13501  003E58  FFFF               	dw	65535	; assembler added errata NOP
 13502  003E5A  0E1F               	movlw	31
 13503  003E5C  646E               	cpfsgt	___fltol@exp1^0,c
 13504  003E5E  EF33  F01F         	goto	u5731
 13505  003E62  EF36  F01F         	goto	u5730
 13506  003E66                     u5731:
 13507  003E66  FFFF               	dw	65535	; assembler added errata NOP
 13508  003E68  EF40  F01F         	goto	l4769
 13509  003E6C                     u5730:
 13510  003E6C  FFFF               	dw	65535	; assembler added errata NOP
 13511  003E6E  EFDC  F01E         	goto	l4737
 13512  003E72                     l4767:
 13513  003E72  FFFF               	dw	65535	; assembler added errata NOP
 13514  003E74  90D8               	bcf	status,0,c
 13515  003E76  3665               	rlcf	___fltol@f1^0,f,c
 13516  003E78  3666               	rlcf	(___fltol@f1+1)^0,f,c
 13517  003E7A  3667               	rlcf	(___fltol@f1+2)^0,f,c
 13518  003E7C  3668               	rlcf	(___fltol@f1+3)^0,f,c
 13519  003E7E  066E               	decf	___fltol@exp1^0,f,c
 13520  003E80                     l4769:
 13521  003E80  FFFF               	dw	65535	; assembler added errata NOP
 13522  003E82  506E               	movf	___fltol@exp1^0,w,c
 13523  003E84  A4D8               	btfss	status,2,c
 13524  003E86  EF47  F01F         	goto	u5741
 13525  003E8A  EF4A  F01F         	goto	u5740
 13526  003E8E                     u5741:
 13527  003E8E  FFFF               	dw	65535	; assembler added errata NOP
 13528  003E90  EF39  F01F         	goto	l4767
 13529  003E94                     u5740:
 13530  003E94                     l4771:
 13531  003E94  FFFF               	dw	65535	; assembler added errata NOP
 13532  003E96  506D               	movf	___fltol@sign1^0,w,c
 13533  003E98  B4D8               	btfsc	status,2,c
 13534  003E9A  EF51  F01F         	goto	u5751
 13535  003E9E  EF54  F01F         	goto	u5750
 13536  003EA2                     u5751:
 13537  003EA2  FFFF               	dw	65535	; assembler added errata NOP
 13538  003EA4  EF5D  F01F         	goto	l4775
 13539  003EA8                     u5750:
 13540  003EA8  FFFF               	dw	65535	; assembler added errata NOP
 13541  003EAA  1E68               	comf	(___fltol@f1+3)^0,f,c
 13542  003EAC  1E67               	comf	(___fltol@f1+2)^0,f,c
 13543  003EAE  1E66               	comf	(___fltol@f1+1)^0,f,c
 13544  003EB0  6C65               	negf	___fltol@f1^0,c
 13545  003EB2  0E00               	movlw	0
 13546  003EB4  2266               	addwfc	(___fltol@f1+1)^0,f,c
 13547  003EB6  2267               	addwfc	(___fltol@f1+2)^0,f,c
 13548  003EB8  2268               	addwfc	(___fltol@f1+3)^0,f,c
 13549  003EBA                     l4775:
 13550  003EBA  FFFF               	dw	65535	; assembler added errata NOP
 13551  003EBC  C065  F065         	movff	___fltol@f1,?___fltol
 13552  003EC0  C066  F066         	movff	___fltol@f1+1,?___fltol+1
 13553  003EC4  C067  F067         	movff	___fltol@f1+2,?___fltol+2
 13554  003EC8  C068  F068         	movff	___fltol@f1+3,?___fltol+3
 13555  003ECC                     l596:
 13556  003ECC  FFFF               	dw	65535	; assembler added errata NOP
 13557  003ECE  0012               	return		;funcret
 13558  003ED0  FFFF               	dw	65535	; errata NOP
 13559  003ED2                     __end_of___fltol:
 13560                           	callstack 0
 13561                           
 13562 ;; *************** function _init_PORTS *****************
 13563 ;; Defined at:
 13564 ;;		line 61 in file "init_PIC.c"
 13565 ;; Parameters:    Size  Location     Type
 13566 ;;		None
 13567 ;; Auto vars:     Size  Location     Type
 13568 ;;		None
 13569 ;; Return value:  Size  Location     Type
 13570 ;;                  1    wreg      void 
 13571 ;; Registers used:
 13572 ;;		wreg, status,2
 13573 ;; Tracked objects:
 13574 ;;		On entry : 0/0
 13575 ;;		On exit  : 0/0
 13576 ;;		Unchanged: 0/0
 13577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13578 ;;      Params:         0       0       0       0       0       0       0
 13579 ;;      Locals:         0       0       0       0       0       0       0
 13580 ;;      Temps:          0       0       0       0       0       0       0
 13581 ;;      Totals:         0       0       0       0       0       0       0
 13582 ;;Total ram usage:        0 bytes
 13583 ;; Hardware stack levels used:    1
 13584 ;; Hardware stack levels required when called:    1
 13585 ;; This function calls:
 13586 ;;		Nothing
 13587 ;; This function is called by:
 13588 ;;		_main
 13589 ;; This function uses a non-reentrant model
 13590 ;;
 13591                           
 13592                           	psect	text54
 13593  006E80                     __ptext54:
 13594                           	callstack 0
 13595  006E80                     _init_PORTS:
 13596                           	callstack 0
 13597  006E80  FFFF               	dw	65535	; assembler added errata NOP
 13598  006E82                     
 13599                           ;init_PIC.c: 63:     LATA = 0;
 13600  006E82  0E00               	movlw	0
 13601  006E84  6E89               	movwf	137,c	;volatile
 13602                           
 13603                           ;init_PIC.c: 64:     PORTA = 0;
 13604  006E86  0E00               	movlw	0
 13605  006E88  6E80               	movwf	128,c	;volatile
 13606                           
 13607                           ;init_PIC.c: 65:     TRISA = 0x00;
 13608  006E8A  0E00               	movlw	0
 13609  006E8C  6E92               	movwf	146,c	;volatile
 13610                           
 13611                           ;init_PIC.c: 67:     LATB = 0;
 13612  006E8E  0E00               	movlw	0
 13613  006E90  6E8A               	movwf	138,c	;volatile
 13614                           
 13615                           ;init_PIC.c: 68:     PORTB = 0;
 13616  006E92  0E00               	movlw	0
 13617  006E94  6E81               	movwf	129,c	;volatile
 13618                           
 13619                           ;init_PIC.c: 69:     TRISB = 0xF0;
 13620  006E96  0EF0               	movlw	240
 13621  006E98  6E93               	movwf	147,c	;volatile
 13622                           
 13623                           ;init_PIC.c: 72:     LATC = 0;
 13624  006E9A  0E00               	movlw	0
 13625  006E9C  6E8B               	movwf	139,c	;volatile
 13626                           
 13627                           ;init_PIC.c: 73:     PORTC = 0;
 13628  006E9E  0E00               	movlw	0
 13629  006EA0  6E82               	movwf	130,c	;volatile
 13630  006EA2                     
 13631                           ;init_PIC.c: 74:     TRISCbits.RC2 = 0;
 13632  006EA2  9494               	bcf	148,2,c	;volatile
 13633  006EA4                     
 13634                           ;init_PIC.c: 75:     TRISCbits.RC7 = 1;
 13635  006EA4  8E94               	bsf	148,7,c	;volatile
 13636  006EA6                     
 13637                           ;init_PIC.c: 76:     TRISCbits.RC6 = 0;
 13638  006EA6  9C94               	bcf	148,6,c	;volatile
 13639  006EA8  0012               	return		;funcret
 13640  006EAA  FFFF               	dw	65535	; errata NOP
 13641  006EAC                     __end_of_init_PORTS:
 13642                           	callstack 0
 13643                           
 13644 ;; *************** function _get_reg_value *****************
 13645 ;; Defined at:
 13646 ;;		line 51 in file "serial_rs232.c"
 13647 ;; Parameters:    Size  Location     Type
 13648 ;;		None
 13649 ;; Auto vars:     Size  Location     Type
 13650 ;;  rx_char         1    0[COMRAM] unsigned char 
 13651 ;; Return value:  Size  Location     Type
 13652 ;;                  1    wreg      unsigned char 
 13653 ;; Registers used:
 13654 ;;		wreg, status,2
 13655 ;; Tracked objects:
 13656 ;;		On entry : 0/0
 13657 ;;		On exit  : 0/0
 13658 ;;		Unchanged: 0/0
 13659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13660 ;;      Params:         0       0       0       0       0       0       0
 13661 ;;      Locals:         1       0       0       0       0       0       0
 13662 ;;      Temps:          0       0       0       0       0       0       0
 13663 ;;      Totals:         1       0       0       0       0       0       0
 13664 ;;Total ram usage:        1 bytes
 13665 ;; Hardware stack levels used:    1
 13666 ;; Hardware stack levels required when called:    1
 13667 ;; This function calls:
 13668 ;;		Nothing
 13669 ;; This function is called by:
 13670 ;;		_main
 13671 ;; This function uses a non-reentrant model
 13672 ;;
 13673                           
 13674                           	psect	text55
 13675  006D7A                     __ptext55:
 13676                           	callstack 0
 13677  006D7A                     _get_reg_value:
 13678                           	callstack 0
 13679  006D7A  FFFF               	dw	65535	; assembler added errata NOP
 13680  006D7C                     
 13681                           ;serial_rs232.c: 52:     unsigned char rx_char = RCREG;
 13682  006D7C  CFAE F001          	movff	4014,get_reg_value@rx_char	;volatile
 13683  006D80                     
 13684                           ;serial_rs232.c: 53:     RCREG = 0;
 13685  006D80  0E00               	movlw	0
 13686  006D82  6EAE               	movwf	174,c	;volatile
 13687                           
 13688                           ;serial_rs232.c: 54:     return rx_char;
 13689  006D84  5001               	movf	get_reg_value@rx_char^0,w,c
 13690  006D86  0012               	return		;funcret
 13691  006D88  FFFF               	dw	65535	; errata NOP
 13692  006D8A                     __end_of_get_reg_value:
 13693                           	callstack 0
 13694                           
 13695 ;; *************** function _compute_next_step *****************
 13696 ;; Defined at:
 13697 ;;		line 162 in file "main.c"
 13698 ;; Parameters:    Size  Location     Type
 13699 ;;  current_step    2    0[COMRAM] PTR int 
 13700 ;;		 -> mix_current_step(2), 
 13701 ;;  step_directi    2    2[COMRAM] int 
 13702 ;; Auto vars:     Size  Location     Type
 13703 ;;		None
 13704 ;; Return value:  Size  Location     Type
 13705 ;;                  1    wreg      void 
 13706 ;; Registers used:
 13707 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13708 ;; Tracked objects:
 13709 ;;		On entry : 0/0
 13710 ;;		On exit  : 0/0
 13711 ;;		Unchanged: 0/0
 13712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13713 ;;      Params:         4       0       0       0       0       0       0
 13714 ;;      Locals:         0       0       0       0       0       0       0
 13715 ;;      Temps:          2       0       0       0       0       0       0
 13716 ;;      Totals:         6       0       0       0       0       0       0
 13717 ;;Total ram usage:        6 bytes
 13718 ;; Hardware stack levels used:    1
 13719 ;; Hardware stack levels required when called:    1
 13720 ;; This function calls:
 13721 ;;		Nothing
 13722 ;; This function is called by:
 13723 ;;		_main
 13724 ;; This function uses a non-reentrant model
 13725 ;;
 13726                           
 13727                           	psect	text56
 13728  0074FA                     __ptext56:
 13729                           	callstack 0
 13730  0074FA                     _compute_next_step:
 13731                           	callstack 0
 13732  0074FA  FFFF               	dw	65535	; assembler added errata NOP
 13733  0074FC                     
 13734                           ;main.c: 163:     *current_step = *current_step + step_direction;
 13735  0074FC  C001  FFD9         	movff	compute_next_step@current_step,fsr2l
 13736  007500  C002  FFDA         	movff	compute_next_step@current_step+1,fsr2h
 13737  007504  CFDE F005          	movff	postinc2,??_compute_next_step
 13738  007508  CFDD F006          	movff	postdec2,??_compute_next_step+1
 13739  00750C  5003               	movf	compute_next_step@step_direction^0,w,c
 13740  00750E  2605               	addwf	??_compute_next_step^0,f,c
 13741  007510  5004               	movf	(compute_next_step@step_direction+1)^0,w,c
 13742  007512  2206               	addwfc	(??_compute_next_step+1)^0,f,c
 13743  007514  C001  FFD9         	movff	compute_next_step@current_step,fsr2l
 13744  007518  C002  FFDA         	movff	compute_next_step@current_step+1,fsr2h
 13745  00751C  C005  FFDE         	movff	??_compute_next_step,postinc2
 13746  007520  C006  FFDD         	movff	??_compute_next_step+1,postdec2
 13747                           
 13748                           ;main.c: 164:     if (*current_step == -1) {
 13749  007524  C001  FFD9         	movff	compute_next_step@current_step,fsr2l
 13750  007528  C002  FFDA         	movff	compute_next_step@current_step+1,fsr2h
 13751  00752C  28DE               	incf	postinc2,w,c
 13752  00752E  E106               	bnz	u6081
 13753  007530  28DE               	incf	postinc2,w,c
 13754  007532  A4D8               	btfss	status,2,c
 13755  007534  EF9E  F03A         	goto	u6081
 13756  007538  EFA1  F03A         	goto	u6080
 13757  00753C                     u6081:
 13758  00753C  FFFF               	dw	65535	; assembler added errata NOP
 13759  00753E  EFAC  F03A         	goto	l5071
 13760  007542                     u6080:
 13761  007542  FFFF               	dw	65535	; assembler added errata NOP
 13762  007544                     
 13763                           ;main.c: 165:         *current_step = 3;
 13764  007544  C001  FFD9         	movff	compute_next_step@current_step,fsr2l
 13765  007548  C002  FFDA         	movff	compute_next_step@current_step+1,fsr2h
 13766  00754C  0E03               	movlw	3
 13767  00754E  6EDE               	movwf	postinc2,c
 13768  007550  0E00               	movlw	0
 13769  007552  6EDD               	movwf	postdec2,c
 13770                           
 13771                           ;main.c: 166:     } else if(*current_step == 4) {
 13772  007554  EFC5  F03A         	goto	l148
 13773  007558                     l5071:
 13774  007558  FFFF               	dw	65535	; assembler added errata NOP
 13775  00755A  C001  FFD9         	movff	compute_next_step@current_step,fsr2l
 13776  00755E  C002  FFDA         	movff	compute_next_step@current_step+1,fsr2h
 13777  007562  0E04               	movlw	4
 13778  007564  18DE               	xorwf	postinc2,w,c
 13779  007566  10DE               	iorwf	postinc2,w,c
 13780  007568  A4D8               	btfss	status,2,c
 13781  00756A  EFB9  F03A         	goto	u6091
 13782  00756E  EFBC  F03A         	goto	u6090
 13783  007572                     u6091:
 13784  007572  FFFF               	dw	65535	; assembler added errata NOP
 13785  007574  EFC5  F03A         	goto	l148
 13786  007578                     u6090:
 13787  007578  FFFF               	dw	65535	; assembler added errata NOP
 13788  00757A                     
 13789                           ;main.c: 167:         *current_step = 0;
 13790  00757A  C001  FFD9         	movff	compute_next_step@current_step,fsr2l
 13791  00757E  C002  FFDA         	movff	compute_next_step@current_step+1,fsr2h
 13792  007582  0E00               	movlw	0
 13793  007584  6EDE               	movwf	postinc2,c
 13794  007586  0E00               	movlw	0
 13795  007588  6EDD               	movwf	postdec2,c
 13796  00758A                     l148:
 13797  00758A  FFFF               	dw	65535	; assembler added errata NOP
 13798  00758C  0012               	return		;funcret
 13799  00758E  FFFF               	dw	65535	; errata NOP
 13800  007590                     __end_of_compute_next_step:
 13801                           	callstack 0
 13802                           
 13803 ;; *************** function _rx_char_usart *****************
 13804 ;; Defined at:
 13805 ;;		line 188 in file "main.c"
 13806 ;; Parameters:    Size  Location     Type
 13807 ;;		None
 13808 ;; Auto vars:     Size  Location     Type
 13809 ;;		None
 13810 ;; Return value:  Size  Location     Type
 13811 ;;                  1    wreg      void 
 13812 ;; Registers used:
 13813 ;;		wreg, status,2
 13814 ;; Tracked objects:
 13815 ;;		On entry : 0/0
 13816 ;;		On exit  : 0/0
 13817 ;;		Unchanged: 0/0
 13818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13819 ;;      Params:         0       0       0       0       0       0       0
 13820 ;;      Locals:         0       0       0       0       0       0       0
 13821 ;;      Temps:          0       0       0       0       0       0       0
 13822 ;;      Totals:         0       0       0       0       0       0       0
 13823 ;;Total ram usage:        0 bytes
 13824 ;; Hardware stack levels used:    1
 13825 ;; This function calls:
 13826 ;;		Nothing
 13827 ;; This function is called by:
 13828 ;;		Interrupt level 2
 13829 ;; This function uses a non-reentrant model
 13830 ;;
 13831                           
 13832                           	psect	intcode
 13833  000008                     __pintcode:
 13834                           	callstack 0
 13835  000008                     _rx_char_usart:
 13836                           	callstack 0
 13837  000008  FFFF               	dw	65535	; assembler added errata NOP
 13838                           
 13839                           ;incstack = 0
 13840  00000A  827E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13841  00000C                     
 13842                           ;main.c: 189:     if(PIE1bits.RCIE && PIR1bits.RCIF){
 13843  00000C  AA9D               	btfss	157,5,c	;volatile
 13844  00000E  EF0B  F000         	goto	i2u627_41
 13845  000012  EF0E  F000         	goto	i2u627_40
 13846  000016                     i2u627_41:
 13847  000016  FFFF               	dw	65535	; assembler added errata NOP
 13848  000018  EF1E  F000         	goto	i2l5255
 13849  00001C                     i2u627_40:
 13850  00001C  FFFF               	dw	65535	; assembler added errata NOP
 13851  00001E  AA9E               	btfss	158,5,c	;volatile
 13852  000020  EF14  F000         	goto	i2u628_41
 13853  000024  EF17  F000         	goto	i2u628_40
 13854  000028                     i2u628_41:
 13855  000028  FFFF               	dw	65535	; assembler added errata NOP
 13856  00002A  EF1E  F000         	goto	i2l5255
 13857  00002E                     i2u628_40:
 13858  00002E  FFFF               	dw	65535	; assembler added errata NOP
 13859  000030                     
 13860                           ;main.c: 190:         PIR1bits.RCIF = 0;
 13861  000030  9A9E               	bcf	158,5,c	;volatile
 13862  000032                     
 13863                           ;main.c: 191:         state_changed = 1;
 13864  000032  0E01               	movlw	1
 13865  000034  0101               	movlb	1	; () banked
 13866  000036  6FA4               	movwf	_state_changed& (0+255),b
 13867                           
 13868                           ;main.c: 192:         read_new_char = 1;
 13869  000038  0E01               	movlw	1
 13870  00003A  6FA2               	movwf	_read_new_char& (0+255),b
 13871  00003C                     i2l5255:
 13872  00003C  FFFF               	dw	65535	; assembler added errata NOP
 13873                           
 13874                           ;main.c: 194:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF){
 13875  00003E  AAF2               	btfss	242,5,c	;volatile
 13876  000040  EF24  F000         	goto	i2u629_41
 13877  000044  EF27  F000         	goto	i2u629_40
 13878  000048                     i2u629_41:
 13879  000048  FFFF               	dw	65535	; assembler added errata NOP
 13880  00004A  EF37  F000         	goto	i2l163
 13881  00004E                     i2u629_40:
 13882  00004E  FFFF               	dw	65535	; assembler added errata NOP
 13883  000050  A4F2               	btfss	242,2,c	;volatile
 13884  000052  EF2D  F000         	goto	i2u630_41
 13885  000056  EF30  F000         	goto	i2u630_40
 13886  00005A                     i2u630_41:
 13887  00005A  FFFF               	dw	65535	; assembler added errata NOP
 13888  00005C  EF37  F000         	goto	i2l163
 13889  000060                     i2u630_40:
 13890  000060  FFFF               	dw	65535	; assembler added errata NOP
 13891  000062                     
 13892                           ;main.c: 195:         T0CON = 0;
 13893  000062  0E00               	movlw	0
 13894  000064  6ED5               	movwf	213,c	;volatile
 13895  000066                     
 13896                           ;main.c: 196:         INTCONbits.TMR0IF = 0;
 13897  000066  94F2               	bcf	242,2,c	;volatile
 13898                           
 13899                           ;main.c: 197:         timer_done = 1;
 13900  000068  0E01               	movlw	1
 13901  00006A  0101               	movlb	1	; () banked
 13902  00006C  6FA1               	movwf	_timer_done& (0+255),b
 13903  00006E                     i2l163:
 13904  00006E  FFFF               	dw	65535	; assembler added errata NOP
 13905  000070  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13906  000072  0011               	retfie		f
 13907  000074  FFFF               	dw	65535	; errata NOP
 13908  000076                     __end_of_rx_char_usart:
 13909                           	callstack 0
 13910                           
 13911                           	psect	rparam
 13912  0000                     
 13913                           	psect	temp
 13914  00007E                     btemp:
 13915                           	callstack 0
 13916  00007E                     	ds	1
 13917  0000                     int$flags	set	btemp
 13918  0000                     wtemp8	set	btemp+1
 13919  0000                     ttemp5	set	btemp+1
 13920  0000                     ttemp6	set	btemp+4
 13921  0000                     ttemp7	set	btemp+8
 13922                           
 13923                           	psect	idloc
 13924                           
 13925                           ;Config register IDLOC0 @ 0x200000
 13926                           ;	unspecified, using default values
 13927  200000                     	org	2097152
 13928  200000  FF                 	db	255
 13929                           
 13930                           ;Config register IDLOC1 @ 0x200001
 13931                           ;	unspecified, using default values
 13932  200001                     	org	2097153
 13933  200001  FF                 	db	255
 13934                           
 13935                           ;Config register IDLOC2 @ 0x200002
 13936                           ;	unspecified, using default values
 13937  200002                     	org	2097154
 13938  200002  FF                 	db	255
 13939                           
 13940                           ;Config register IDLOC3 @ 0x200003
 13941                           ;	unspecified, using default values
 13942  200003                     	org	2097155
 13943  200003  FF                 	db	255
 13944                           
 13945                           ;Config register IDLOC4 @ 0x200004
 13946                           ;	unspecified, using default values
 13947  200004                     	org	2097156
 13948  200004  FF                 	db	255
 13949                           
 13950                           ;Config register IDLOC5 @ 0x200005
 13951                           ;	unspecified, using default values
 13952  200005                     	org	2097157
 13953  200005  FF                 	db	255
 13954                           
 13955                           ;Config register IDLOC6 @ 0x200006
 13956                           ;	unspecified, using default values
 13957  200006                     	org	2097158
 13958  200006  FF                 	db	255
 13959                           
 13960                           ;Config register IDLOC7 @ 0x200007
 13961                           ;	unspecified, using default values
 13962  200007                     	org	2097159
 13963  200007  FF                 	db	255
 13964                           
 13965                           	psect	config
 13966                           
 13967                           ; Padding undefined space
 13968  300000                     	org	3145728
 13969  300000  FF                 	db	255
 13970                           
 13971                           ;Config register CONFIG1H @ 0x300001
 13972                           ;	Oscillator Selection bits
 13973                           ;	OSC = RCIO, RC oscillator w/ OSC2 configured as RA6
 13974                           ;	Oscillator System Clock Switch Enable bit
 13975                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
 13976  300001                     	org	3145729
 13977  300001  27                 	db	39
 13978                           
 13979                           ;Config register CONFIG2L @ 0x300002
 13980                           ;	Power-up Timer Enable bit
 13981                           ;	PWRT = OFF, PWRT disabled
 13982                           ;	Brown-out Reset Enable bit
 13983                           ;	BOR = ON, Brown-out Reset enabled
 13984                           ;	Brown-out Reset Voltage bits
 13985                           ;	BORV = 20, VBOR set to 2.0V
 13986  300002                     	org	3145730
 13987  300002  0F                 	db	15
 13988                           
 13989                           ;Config register CONFIG2H @ 0x300003
 13990                           ;	Watchdog Timer Enable bit
 13991                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 13992                           ;	Watchdog Timer Postscale Select bits
 13993                           ;	WDTPS = 128, 1:128
 13994  300003                     	org	3145731
 13995  300003  0E                 	db	14
 13996                           
 13997                           ; Padding undefined space
 13998  300004                     	org	3145732
 13999  300004  FF                 	db	255
 14000                           
 14001                           ;Config register CONFIG3H @ 0x300005
 14002                           ;	CCP2 Mux bit
 14003                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
 14004  300005                     	org	3145733
 14005  300005  01                 	db	1
 14006                           
 14007                           ;Config register CONFIG4L @ 0x300006
 14008                           ;	Stack Full/Underflow Reset Enable bit
 14009                           ;	STVR = ON, Stack Full/Underflow will cause RESET
 14010                           ;	Low Voltage ICSP Enable bit
 14011                           ;	LVP = ON, Low Voltage ICSP enabled
 14012                           ;	Background Debugger Enable bit
 14013                           ;	DEBUG = 0x1, unprogrammed default
 14014  300006                     	org	3145734
 14015  300006  85                 	db	133
 14016                           
 14017                           ; Padding undefined space
 14018  300007                     	org	3145735
 14019  300007  FF                 	db	255
 14020                           
 14021                           ;Config register CONFIG5L @ 0x300008
 14022                           ;	Code Protection bit
 14023                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
 14024                           ;	Code Protection bit
 14025                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
 14026                           ;	Code Protection bit
 14027                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
 14028                           ;	Code Protection bit
 14029                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
 14030  300008                     	org	3145736
 14031  300008  0F                 	db	15
 14032                           
 14033                           ;Config register CONFIG5H @ 0x300009
 14034                           ;	Boot Block Code Protection bit
 14035                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
 14036                           ;	Data EEPROM Code Protection bit
 14037                           ;	CPD = OFF, Data EEPROM not code protected
 14038  300009                     	org	3145737
 14039  300009  C0                 	db	192
 14040                           
 14041                           ;Config register CONFIG6L @ 0x30000A
 14042                           ;	Write Protection bit
 14043                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
 14044                           ;	Write Protection bit
 14045                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
 14046                           ;	Write Protection bit
 14047                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
 14048                           ;	Write Protection bit
 14049                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
 14050  30000A                     	org	3145738
 14051  30000A  0F                 	db	15
 14052                           
 14053                           ;Config register CONFIG6H @ 0x30000B
 14054                           ;	Configuration Register Write Protection bit
 14055                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
 14056                           ;	Boot Block Write Protection bit
 14057                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
 14058                           ;	Data EEPROM Write Protection bit
 14059                           ;	WRTD = OFF, Data EEPROM not write protected
 14060  30000B                     	org	3145739
 14061  30000B  E0                 	db	224
 14062                           
 14063                           ;Config register CONFIG7L @ 0x30000C
 14064                           ;	Table Read Protection bit
 14065                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
 14066                           ;	Table Read Protection bit
 14067                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
 14068                           ;	Table Read Protection bit
 14069                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
 14070                           ;	Table Read Protection bit
 14071                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
 14072  30000C                     	org	3145740
 14073  30000C  0F                 	db	15
 14074                           
 14075                           ;Config register CONFIG7H @ 0x30000D
 14076                           ;	Boot Block Table Read Protection bit
 14077                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
 14078  30000D                     	org	3145741
 14079  30000D  40                 	db	64
 14080                           tosu	equ	0xFFF
 14081                           tosh	equ	0xFFE
 14082                           tosl	equ	0xFFD
 14083                           stkptr	equ	0xFFC
 14084                           pclatu	equ	0xFFB
 14085                           pclath	equ	0xFFA
 14086                           pcl	equ	0xFF9
 14087                           tblptru	equ	0xFF8
 14088                           tblptrh	equ	0xFF7
 14089                           tblptrl	equ	0xFF6
 14090                           tablat	equ	0xFF5
 14091                           prodh	equ	0xFF4
 14092                           prodl	equ	0xFF3
 14093                           indf0	equ	0xFEF
 14094                           postinc0	equ	0xFEE
 14095                           postdec0	equ	0xFED
 14096                           preinc0	equ	0xFEC
 14097                           plusw0	equ	0xFEB
 14098                           fsr0h	equ	0xFEA
 14099                           fsr0l	equ	0xFE9
 14100                           wreg	equ	0xFE8
 14101                           indf1	equ	0xFE7
 14102                           postinc1	equ	0xFE6
 14103                           postdec1	equ	0xFE5
 14104                           preinc1	equ	0xFE4
 14105                           plusw1	equ	0xFE3
 14106                           fsr1h	equ	0xFE2
 14107                           fsr1l	equ	0xFE1
 14108                           bsr	equ	0xFE0
 14109                           indf2	equ	0xFDF
 14110                           postinc2	equ	0xFDE
 14111                           postdec2	equ	0xFDD
 14112                           preinc2	equ	0xFDC
 14113                           plusw2	equ	0xFDB
 14114                           fsr2h	equ	0xFDA
 14115                           fsr2l	equ	0xFD9
 14116                           status	equ	0xFD8

Data Sizes:
    Strings     336
    Constant    20
    Data        31
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    125     125
    BANK0           128     22      87
    BANK1           256    161     187
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    main$1947	PTR const unsigned char  size(2) Largest target is 63
		 -> STR_6(CODE[49]), STR_5(CODE[55]), STR_4(CODE[39]), STR_3(CODE[9]), 
		 -> STR_2(CODE[63]), STR_1(CODE[47]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_105(CODE[3]), STR_101(CODE[3]), STR_96(CODE[3]), STR_92(CODE[3]), 
		 -> STR_87(CODE[4]), STR_83(CODE[4]), STR_78(CODE[3]), STR_73(CODE[3]), 
		 -> STR_68(CODE[4]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[4]), 
		 -> STR_48(CODE[3]), STR_43(CODE[3]), STR_38(CODE[4]), STR_33(CODE[3]), 
		 -> STR_29(CODE[3]), STR_24(CODE[3]), STR_20(CODE[3]), STR_15(CODE[4]), 
		 -> STR_11(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_105(CODE[3]), STR_101(CODE[3]), STR_96(CODE[3]), STR_92(CODE[3]), 
		 -> STR_87(CODE[4]), STR_83(CODE[4]), STR_78(CODE[3]), STR_73(CODE[3]), 
		 -> STR_68(CODE[4]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[4]), 
		 -> STR_48(CODE[3]), STR_43(CODE[3]), STR_38(CODE[4]), STR_33(CODE[3]), 
		 -> STR_29(CODE[3]), STR_24(CODE[3]), STR_20(CODE[3]), STR_15(CODE[4]), 
		 -> STR_11(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), STR_6(CODE[49]), 
		 -> STR_5(CODE[55]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[63]), 
		 -> STR_1(CODE[47]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), STR_6(CODE[49]), 
		 -> STR_5(CODE[55]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[63]), 
		 -> STR_1(CODE[47]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_6(CODE[49]), STR_5(CODE[55]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[63]), STR_1(CODE[47]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_6(CODE[49]), STR_5(CODE[55]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[63]), STR_1(CODE[47]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_6(CODE[49]), STR_5(CODE[55]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[63]), STR_1(CODE[47]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_snprintf(BANK0[2]), STR_6(CODE[49]), STR_5(CODE[55]), 
		 -> STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[63]), STR_1(CODE[47]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    S1341_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    state_translator_micro_to_fpga@state	PTR int  size(2) Largest target is 2
		 -> state(BANK1[2]), 

    state_translator_fpga_to_micro@state	PTR int  size(2) Largest target is 2
		 -> state(BANK1[2]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), STR_7(CODE[22]), 

    mix_exit_condition@current_step	PTR int  size(2) Largest target is 2
		 -> mix_current_step(BANK1[2]), 

    update_direction_and_counters@step_direction	PTR int  size(2) Largest target is 2
		 -> mix_direction(BANK1[2]), 

    update_direction_and_counters@counter	PTR int  size(2) Largest target is 2
		 -> mix_counter(BANK1[2]), 

    update_direction_and_counters@counter_step	PTR int  size(2) Largest target is 2
		 -> mix_step_counter(BANK1[2]), 

    compute_next_step@current_step	PTR int  size(2) Largest target is 2
		 -> mix_current_step(BANK1[2]), 

    main@greet_str	PTR const unsigned char [80] size(2) Largest target is 63
		 -> ?_snprintf(BANK0[2]), STR_6(CODE[49]), STR_5(CODE[55]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[63]), STR_1(CODE[47]), 

    state_msgs	PTR const unsigned char [6] size(2) Largest target is 63
		 -> STR_6(CODE[49]), STR_5(CODE[55]), STR_4(CODE[39]), STR_3(CODE[9]), 
		 -> STR_2(CODE[63]), STR_1(CODE[47]), 


Critical Paths under _main in COMRAM

    _state_translator_fpga_to_micro->_lcd_dat
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _lcd_str->_lcd_dat
    _lcd_dat->_lcd_wr
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_wr
    _init_timer_2->___fltol
    _init_ccp1->_update_pwm_duty_ccp1
    _update_pwm_duty_ccp1->___fltol
    ___fldiv->___flmul
    _init_USART->___fltol
    _roundf->___flsub
    ___flsub->___fladd
    ___fladd->___fldiv
    ___fltol->_roundf

Critical Paths under _rx_char_usart in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_snprintf
    _snprintf->_vsnprintf

Critical Paths under _rx_char_usart in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rx_char_usart in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rx_char_usart in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rx_char_usart in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rx_char_usart in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rx_char_usart in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               163   163      0   73563
                                            123 COMRAM     2     2      0
                                              0 BANK1    161   161      0
                  _compute_next_step
                      _get_reg_value
                         _init_PORTS
                         _init_USART
                          _init_ccp1
                    _init_interrupts
                       _init_timer_0
                       _init_timer_2
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                 _mix_exit_condition
                     _serial_tx_char
                           _snprintf
     _state_translator_fpga_to_micro
     _state_translator_micro_to_fpga
      _update_direction_and_counters
 ---------------------------------------------------------------------------------
 (1) _update_direction_and_counters                        8     2      6    1088
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _state_translator_micro_to_fpga                       5     3      2     464
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _state_translator_fpga_to_micro                       3     1      2     384
                                              2 COMRAM     3     1      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            12     4      8   46313
                                             10 BANK0     12     4      8
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   45939
                                            111 COMRAM    12     4      8
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   45176
                                            103 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   44715
                                             66 COMRAM    37    31      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7075
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6115
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    5013
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    5560
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6714
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1864
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     871
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _serial_tx_char                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _mix_exit_condition                                   4     0      4     652
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              5     3      2     286
                                              2 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      44
                                              2 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_timer_2                                         4     4      0    7709
                                            110 COMRAM     4     4      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _init_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ccp1                                            0     0      0    4374
               _update_pwm_duty_ccp1
 ---------------------------------------------------------------------------------
 (2) _update_pwm_duty_ccp1                                 9     5      4    4374
                                            110 COMRAM     9     5      4
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1551
                                             25 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   11258
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   10801
                                             74 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3801
                                             66 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    3478
                                             50 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2200
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                            100 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_reg_value                                        1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _compute_next_step                                    6     2      4     762
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _rx_char_usart                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _compute_next_step
   _get_reg_value
   _init_PORTS
   _init_USART
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
         ___flmul (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
       ___flmul (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
           ___flmul (ARG)
         ___flge
         ___flmul
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
             ___flmul (ARG)
     _roundf
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
         ___flmul (ARG)
       ___flge
       ___flmul
       ___flneg
       ___flsub
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
           ___flmul (ARG)
   _init_ccp1
     _update_pwm_duty_ccp1
       ___fldiv
         ___flmul (ARG)
       ___flmul
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
           ___flmul (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
         ___flmul (ARG)
         _roundf (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
             ___flmul (ARG)
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
               ___flmul (ARG)
   _init_interrupts
   _init_timer_0
   _init_timer_2
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
       ___flmul (ARG)
     ___fldiv
       ___flmul (ARG)
     ___flmul
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
         ___flmul (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
       ___flmul (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
           ___flmul (ARG)
         ___flge
         ___flmul
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
             ___flmul (ARG)
   _lcd_cmd
     _lcd_wr
   _lcd_init
     _lcd_cmd
       _lcd_wr
   _lcd_str
     _lcd_dat
       _lcd_wr
   _mix_exit_condition
   _serial_tx_char
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _state_translator_fpga_to_micro
     _lcd_dat
       _lcd_wr
   _state_translator_micro_to_fpga
   _update_direction_and_counters

 _rx_char_usart (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A1      BB       7       73.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     16      57       5       68.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7D      7D       1       99.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     18F      15        0.0%
DATA                 0      0     18F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Jun 06 00:34:45 2023

                                  ?_get_reg_value 0001                                      ___fldiv@aexp 0032  
                                    ___fldiv@bexp 0031                                      ___fldiv@sign 002A  
                                              l21 6F54                                                l24 6DA6  
                                              l27 6DBA                                                l36 6D86  
                             ___wmul@multiplicand 0003                                               l202 6D6A  
                                             l114 238C                                               l211 746E  
                                             l123 24FA                                               l115 2426  
                                             l205 6E28                                               l118 246E  
                                             l208 6E52                                               l232 7B82  
                                             l240 7C80                                               l152 7646  
                                             l217 74F6                                               l137 26C4  
                                             l148 758A                                               l156 6F12  
                                             l236 7C80                                               l413 3ACE  
                                             l190 6EA8                                               l246 7C84  
                                             l193 6D5E                                               l426 3C5E  
                                             l283 6DFE                                               l286 77D6  
                                             l296 770A                                               l289 6DDC  
                                             l299 6E7C                                               l564 3FA6  
                                             l573 6F96                                               l920 1D02  
                                             l744 7E96                                               l569 3FF4  
                                             l913 1AF6                                               l737 7E74  
                                             l930 1E60                                               l922 1D92  
                                             l754 7A88                                               l923 1D7A  
                                             l827 16AA                                               l747 7A66  
                                             l596 3ECC                                               l844 17EE  
                                             l836 1A04                                               l828 1694  
                                             l917 1EA8                                               l853 18F2  
                                             l829 164A                                               l854 18DA  
                                             l881 22DA                                               l883 20F2  
                                             l892 2148                                               l869 70EC  
                                             l894 21D8                                               l886 20AC  
                                             l895 21C0                                               l992 6EDC  
                                             l978 2AC0                                 ??_init_interrupts 0001  
                                             _PR2 000FCB                                               _abs 70F0  
                                             _pad 78BC                                               wreg 000FE8  
                                  ?_rx_char_usart 0001                                      ___flmul@aexp 0012  
                                    ___flmul@bexp 0013                                      ___flmul@sign 000D  
                                    ___flmul@temp 0018                                      ___flmul@prod 0014  
                                    ___fltol@exp1 006E                                              l1000 3D96  
                                            l1100 3578                                              l1005 3D70  
                                            l1130 3178                                              l1051 799E  
                                            l1123 374C                                              l1107 360C  
                                            ?_abs 0013                                              l1109 3616  
                                            l1205 145C                                              l1046 7910  
                                            l1118 36EE                                              l1119 3742  
                                            l1143 2E3E                                              l1064 2B7E  
                                            l1128 316E                                              l1152 2EEC  
                                            l1049 795C                                              l1313 701A  
                                            l1145 2E48                                              l1058 72AA  
                                            l1066 2B88                                              l1138 3352  
                                            l1250 73F0                                              l1307 7244  
                                            l1091 33A4                                              l1084 2DF6  
                                            PORTD 000F83                                              PORTE 000F84  
                                            l1254 712C                                              l1166 30BA  
                                            l1182 0198                                              l1328 78B6  
                                            l1336 7188                                              l1168 3126  
                                            l4001 16E6                                              l1345 71E4  
                                            l1257 7136                                              l1089 339A  
                                            l1249 73E8                                              l1098 3506  
                                            l1370 705C                                              l4011 172E  
                                            l4003 16F8                                              l1339 3FFC  
                                            l1364 737E                                              l4021 1782  
                                            l4013 1742                                              l4005 170A  
                                            l1285 390E                                              l1349 7D8A  
                                            l1293 70A2                                              l4101 00B4  
                                            l4031 180A                                              l4023 17B6  
                                            l4015 1744                                              l4007 171C  
                                            l1359 7374                                              l4111 00F0  
                                            l4103 00C6                                              l1288 3918  
                                            l4041 1850                                              l4033 181E  
                                            l4025 17B8                                              l4017 1750  
                                            l4009 1728                                              l3401 3992  
                                            l4105 00CA                                              l5001 7AD8  
                                            l4051 188A                                              l4043 1852  
                                            l4027 17CC                                              l4019 1756  
                                            l1299 6FD8                                              l3411 39F4  
                                            l3403 39A0                                              l4203 063A  
                                            l4131 0126                                              l4123 010E  
                                            l4115 00FA                                              l4107 00D6  
                                            l5011 7B44                                              l5003 7AEC  
                                            l4061 18D0                                              l4045 1866  
                                            l4037 1832                                              l4053 188C  
                                            l4029 17DC                                              l3421 3A70  
                                            l3413 3A08                                              l3405 39C2  
                                            l3501 7A4C                                              l4213 06DC  
                                            l4205 0666                                              l4141 0210  
                                            l4109 00DC                                              l4133 0180  
                                            l5013 7B5C                                              l5005 7B04  
                                            l5101 22E0                                              l4071 1964  
                                            l4047 186E                                              l4039 183E  
                                            l4055 189E                                              l3351 7812  
                                            l3511 78FA                                              l3415 3A3A  
                                            l3407 39CA                                              l3423 3A76  
                                            l3431 3AD4                                              l3503 7A60  
                                            l4311 0DAA                                              l4303 0D28  
                                            l4231 085E                                              l4223 07A2  
                                            l4215 0718                                              l4207 068E  
                                            l4143 0222                                              l4135 01AC  
                                            l4127 0118                                              l4119 0104  
                                            l5015 7B70                                              l5007 7B18  
                                            l5031 7BD8                                              l5023 7B8A  
                                            l5111 22F6                                              l5103 22E6  
                                            l4081 19B8                                              l4065 1908  
                                            l4073 1966                                              l4057 18A4  
                                            l4049 1874                                              l3353 7836  
                                            l3345 77DC                                              l3361 714A  
                                            l3521 7970                                              l3513 7906  
                                            l3505 78BE                                              l3425 3A8C  
                                            l3417 3A5A                                              l3409 39E0  
                                            l3441 3B22                                              l3433 3AD8  
                                            l3601 2BCA                                              l4401 13DE  
                                            l4321 0EA2                                              l4313 0DE6  
                                            l4305 0D54                                              l4241 0916  
                                            l4233 089A                                              l4225 07DE  
                                            l4217 0750                                              l4161 030A  
                                            l4153 02B2                                              l4145 0230  
                                            l4137 01AE                                              l5017 6EAE  
                                            l5009 7B30                                              l5041 7C4E  
                                            l5033 7BFA                                              l5025 7BA8  
                                            l5201 25B2                                              l5121 2318  
                                            l5113 22FA                                              l5105 22EA  
                                            l4091 19F0                                              l4083 19CC  
                                            l4075 197C                                              l4067 1914  
                                            l4059 18B6                                              l5051 6DEE  
                                            l3355 786E                                              l3347 77F2  
                                            l3363 715E                                              l3371 71A0  
                                            l3523 7984                                              l3515 791E  
                                            l3507 78D2                                              l3427 3AAC  
                                            l3419 3A5C                                              l3451 3B98  
                                            l3443 3B42                                              l3435 3AEA  
                                            l3611 2C68                                              l3603 2BD2  
                                            l3531 6FDC                                              l4403 13EC  
                                            l4315 0E2C                                              l4307 0D8A  
                                            l4227 0824                                              l4163 0334  
                                            l4147 0252                                              l4155 02C6  
                                            l4139 01DA                                              l5019 6EB8  
                                            l5043 7C56                                              l5035 7C02  
                                            l5027 7BB0                                              l5203 25CE  
                                            l5131 233C                                              l5123 231A  
                                            l5115 2300                                              l5107 22EE  
                                            l4093 19F2                                              l4085 19D2  
                                            l4077 198E                                              l4069 1926  
                                            l4501 2084                                              l5061 6DF8  
                                            l5053 6DF0                                              l3381 6E58  
                                            l3349 7806                                              l3365 7162  
                                            l3373 71D8                                              l3517 7934  
                                            l3509 78E6                                              l3461 3C1C  
                                            l3453 3BCC                                              l3445 3B66  
                                            l3437 3B0A                                              l3621 2D4A  
                                            l3605 2BDA                                              l3613 2CCC  
                                            l3701 35D4                                              l4405 1400  
                                            l4261 0A88                                              l4173 03F0  
                                            l4165 036E                                              l4157 02F2  
                                            l4149 0262                                              l5045 7C78  
                                            l5037 7C24                                              l5029 7BD0  
                                            l5205 25E2                                              l5141 2396  
                                            l5133 2354                                              l5125 2324  
                                            l5117 2306                                              l5109 22F2  
                                            l5071 7558                                              l4087 19D6  
                                            l4079 19B4                                              l4511 20DE  
                                            l4503 2098                                              l4431 1EB0  
                                            l5063 6DFA                                              l5055 6DF2  
                                            l3383 6E74                                              l3359 713E  
                                            l3367 718E                                              l3519 7938  
                                            l3391 3936                                              l3463 3C3C  
                                            l3455 3BEC                                              l3447 3B6E  
                                            l3439 3B0E                                              l3527 70F2  
                                            l3631 2DA4                                              l3615 2CEC  
                                            l3623 2D5C                                              l3607 2C5C  
                                            l3711 365A                                              l3703 35E6  
                                            l3471 7DC0                                              l3535 7060  
                                            l3543 7352                                              l4351 10A6  
                                            l4343 0FF8                                              l4335 0F6C  
                                            l4327 0EF2                                              l4319 0E66  
                                            l4255 09F0                                              l4247 0964  
                                            l4239 08EA                                              l4183 047E  
                                            l4167 0390                                              l4159 02FC  
                                            l4175 0404                                              l4415 1422  
                                            l5039 7C2C                                              l5207 25F0  
                                            l5231 2676                                              l5151 23F4  
                                            l5143 23A6                                              l5135 2368  
                                            l5127 232C                                              l5119 230C  
                                            l5073 757A                                              l4601 1AE4  
                                            l4089 19DE                                              l4521 2134  
                                            l4513 20EE                                              l4505 20AA  
                                            l4441 1EFA                                              l4433 1EBC  
                                            l5065 6DFC                                              l5057 6DF4  
                                            l5049 6DE2                                              l3561 723C  
                                            l3553 71E8                                              l3369 719A  
                                            l3393 3956                                              l3457 3C00  
                                            l3449 3B84                                              l3529 7110  
                                            l3633 2DB0                                              l3625 2D74  
                                            l3617 2D0E                                              l3609 2C62  
                                            l3641 3358                                              l3721 36CA  
                                            l3713 367C                                              l3481 7E38  
                                            l3473 7DC8                                              l3377 701E  
                                            l3545 7368                                              l3801 2F7E  
                                            l4417 144A                                              l4409 140E  
                                            l4361 118E                                              l4353 10DC  
                                            l4345 1034                                              l4337 0FA8  
                                            l4329 0F1E                                              l4257 0A2C  
                                            l4265 0A96                                              l4249 09A0  
                                            l4193 0576                                              l4185 04BA  
                                            l4177 0430                                              l4169 03A0  
                                            l4097 007C                                              l5081 75F6  
                                            l5233 2690                                              l5217 25FA  
                                            l5161 2440                                              l5153 2400  
                                            l5137 2370                                              l5145 23AC  
                                            l5129 2334                                              l5067 74FC  
                                            l4611 1B42                                              l4603 1B0C  
                                            l4531 2184                                              l4523 2146  
                                            l4515 2108                                              l4507 20B8  
                                            l4451 1F30                                              l4443 1F0A  
                                            l4435 1ECE                                              l5059 6DF6  
                                            l3555 71EE                                              l3571 727C  
                                            l3395 395A                                              l3387 3920  
                                            l3459 3C06                                              l3635 2DBA  
                                            l3627 2D86                                              l3619 2D2C  
                                            l3651 33D6                                              l3643 336C  
                                            l3715 368A                                              l3707 3640  
                                            l3483 7E58                                              l3475 7DDE  
                                            l3467 7D92                                              l3491 79C6  
                                            l3731 312C                                              l3539 7316  
                                            l3811 2FC6                                              l3803 2F94  
                                            l4363 11B8                                              l4371 1208  
                                            l4347 106C                                              l4267 0AD2  
                                            l4275 0B3C                                              l4259 0A64  
                                            l4195 05B2                                              l4187 04F2  
                                            l4179 0462                                              l4099 00A6  
                                            l5083 761E                                              l5235 26A4  
                                            l5227 2604                                              l5171 2498  
                                            l5163 2454                                              l5147 23E8  
                                            l5139 2386                                              l5155 2406  
                                            l5069 7544                                              l4621 1B92  
                                            l4613 1B4C                                              l4605 1B1E  
                                            l3901 1484                                              l4701 70B8  
                                            l4541 220C                                              l4533 21B6  
                                            l4517 2122                                              l4525 215A  
                                            l4509 20DC                                              l4461 1F74  
                                            l4453 1F36                                              l4445 1F0E  
                                            l4437 1ED0                                              l4429 6D66  
                                            l3549 6F9A                                              l3557 7206  
                                            l3573 7282                                              l3565 724A  
                                            l3397 396E                                              l3389 3924  
                                            l3629 2D8E                                              l3637 2DCC  
                                            l3581 2AE8                                              l3661 3408  
                                            l3653 33DA                                              l3645 336E  
                                            l3725 3706                                              l3717 36C2  
                                            l3709 3656                                              l3485 7E5A  
                                            l3477 7DF2                                              l3469 7D9E  
                                            l3493 79CE                                              l3741 31AA  
                                            l3733 3140                                              l3821 30A8  
                                            l3805 2FA8                                              l3813 3028  
                                            l4373 1234                                              l4365 11C8  
                                            l4349 1096                                              l4357 111A  
                                            l4277 0B68                                              l4285 0BD0  
                                            l4269 0B0A                                              l4197 05EA  
                                            l4189 053C                                              l5077 7592  
                                            l5237 26B0                                              l5229 262E  
                                            l5181 250E                                              l5173 24AC  
                                            l5165 2464                                              l5157 2420  
                                            l5149 23EE                                              ?_pad 0011  
                                            l4711 3F4A                                              l4631 1BD4  
                                            l4623 1B9E                                              l4615 1B62  
                                            l3903 149A                                              l3911 14CA  
                                            l4551 2290                                              l4543 2236  
                                            l4527 216E                                              l4519 2128  
                                            l4471 1FBE                                              l4463 1F84  
                                            l4455 1F48                                              l4439 1EE6  
                                            l4447 1F16                                              l5087 6EE2  
                                            l3559 7238                                              l3575 7286  
                                            l3567 7262                                              l3399 398E  
                                            l3591 2B72                                              l3583 2B1A  
                                            l3671 34B8                                              l3663 340E  
                                            l3655 33E6                                              l3647 338E  
                                            l3727 371C                                              l3719 36C6  
                                            l3487 7E6E                                              l3479 7E06  
                                            l3495 79E4                                              l3751 323C  
                                            l3743 31B2                                              l3735 3142  
                                            l3823 30D0                                              l3815 304A  
                                            l3807 2FBA                                              l4391 1362  
                                            l4375 125C                                              l4359 1156  
                                            l4287 0C0C                                              l4295 0C76  
                                            l4279 0B9E                                              l5079 75E6  
                                            l5343 2646                                              l5191 2550  
                                            l5175 24C6                                              l5183 2518  
                                            l5167 2474                                              l5159 242A  
                                            l4721 3FEA                                              l4713 3F5A  
                                            l4705 3ED4                                              l4641 1C36  
                                            l4633 1BE4                                              l4625 1BAC  
                                            l4617 1B6E                                              l4609 1B34  
                                            l3921 1504                                              l3913 14DC  
                                            l3905 14AE                                              l4561 22CE  
                                            l4553 22AC                                              l4537 21EE  
                                            l4545 223A                                              l4529 2172  
                                            l4473 1FCE                                              l4481 1FF0  
                                            l4465 1F88                                              l4457 1F4A  
                                            l4449 1F28                                              l5089 6F02  
                                            l3841 3794                                              l3833 3752  
                                            l3569 726E                                              l3593 2B92  
                                            l3585 2B3A                                              l3681 3538  
                                            l3673 34D6                                              l3665 3414  
                                            l3657 33EE                                              l3649 33CE  
                                            l3729 3720                                              l3497 79F8  
                                            l3489 79A4                                              l3761 3316  
                                            l3745 31BA                                              l3753 32A0  
                                            l3737 3162                                              l3825 30D6  
                                            l3817 306C                                              l3809 2FC0  
                                            l4393 1372                                              l4377 1276  
                                            l4385 12C4                                              l4297 0CA2  
                                            l4289 0C44                                              l5345 0150  
                                            l5193 256C                                              l5177 24DA  
                                            l5169 248C                                              l4723 3FF0  
                                            l4715 3F6E                                              l4707 3F06  
                                            l4651 1CE2                                              l4643 1C52  
                                            l4635 1BFE                                              l4627 1BB8  
                                            l4619 1B86                                              l4571 1A18  
                                            l4731 6F84                                              l3931 1552  
                                            l3923 1516                                              l3915 14E4  
                                            l3907 14BE                                              l4811 2A0E  
                                            l4803 282A                                              l4555 22B2  
                                            l4547 225A                                              l4539 21FA  
                                            l4491 2036                                              l4483 2006  
                                            l4475 1FD6                                              l4459 1F60  
                                            l4467 1F90                                              l5347 382C  
                                            l3851 37F6                                              l3843 37D0  
                                            l3835 3766                                              l3595 2BA8  
                                            l3587 2B50                                              l3579 2AC8  
                                            l3683 3548                                              l3675 34F4  
                                            l3659 33F6                                              l3667 3476  
                                            l3691 3590                                              l3499 7A2C  
                                            l3755 32B8                                              l3763 3328  
                                            l3747 3230                                              l3739 31A2  
                                            l3827 30E6                                              l3819 308A  
                                            l3771 2E12                                              l4387 1300  
                                            l4379 1284                                              l4299 0CEC  
                                            l5195 2580                                              l5187 2536  
                                            l5179 24E6                                              l5099 22E0  
                                            l4741 3DCE                                              l4717 3F80  
                                            l4709 3F16                                              l4661 1D2C  
                                            l4653 1CEE                                              l4645 1C7C  
                                            l4637 1C0E                                              l4629 1BC8  
                                            l4581 1A66                                              l4573 1A2A  
                                            l3941 159A                                              l3933 1556  
                                            l3925 1518                                              l3917 14FA  
                                            l3909 14C2                                              l4813 2A44  
                                            l4805 28FE                                              l4901 6F46  
                                            l4557 22C4                                              l4549 2270  
                                            l4493 2046                                              l4485 2006  
                                            l4477 1FDC                                              l4469 1FA2  
                                            l4821 6E06                                              l3861 387E  
                                            l3853 3800                                              l3845 37D4  
                                            l3837 376C                                              l3597 2BB8  
                                            l3589 2B52                                              l3677 351C  
                                            l3685 354E                                              l3669 3496  
                                            l3693 3598                                              l3757 32DA  
                                            l3749 3236                                              l3829 30FC  
                                            l3781 2E96                                              l3773 2E32  
                                            l4389 1338                                              l5197 2596  
                                            l5189 253C                                              l4751 3E26  
                                            l4743 3DFE                                              l4735 3D9E  
                                            l4719 3F94                                              l4671 1DB4  
                                            l4663 1D3E                                              l4655 1D00  
                                            l4647 1CB6                                              l4639 1C2A  
                                            l4591 1AA0                                              l4583 1A6E  
                                            l4575 1A2C                                              l4727 6F5A  
                                            l3951 15B0                                              l3943 159E  
                                            l3927 152E                                              l3935 155E  
                                            l3919 14FC                                              l4815 2A8A  
                                            l4807 296A                                              l4911 6F50  
                                            l4903 6F48                                              l4559 22CA  
                                            l4495 2056                                              l4831 6E1C  
                                            l4823 6E08                                              l3855 380A  
                                            l3839 3772                                              l3599 2BC0  
                                            l3679 3532                                              l3695 35AE  
                                            l3759 32F8                                              l3791 2EDE  
                                            l3783 2E9E                                              l3775 2E64  
                                            l3767 2DFC                                              l4399 13B2  
                                            l5199 259C                                              l4921 6D80  
                                            l4761 3E58                                              l4745 3E00  
                                            l4737 3DB8                                              l4681 1E28  
                                            l4673 1DC6                                              l4665 1D70  
                                            l4657 1D14                                              l4649 1CC4  
                                            l4593 1AA2                                              l4585 1A80  
                                            l4577 1A42                                              l4569 1A0C  
                                            l4729 6F74                                              l3961 15C4  
                                            l3953 15B4                                              l3945 15A4  
                                            l3937 1570                                              l3929 1542  
                                            l4817 2AAE                                              l4809 29A2  
                                            l4913 6F52                                              l4905 6F4A  
                                            l4497 2066                                              l4489 201A  
                                            l4833 6E26                                              l4825 6E0E  
                                            l4841 6E3A                                              l3865 38C6  
                                            l3857 3844                                              l3849 37DC  
                                            l3697 35B6                                              l3689 357E  
                                            l3881 7CC4                                              l3785 2EA6  
                                            l3777 2E6C                                              l3769 2E10  
                                            l4931 6EA6                                              l4771 3E94  
                                            l4747 3E10                                              l4691 1E8A  
                                            l4683 1E48                                              l4675 1DF0  
                                            l4659 1D28                                              l4595 1AB8  
                                            l4587 1A88                                              l4579 1A56  
                                            l3971 15D8                                              l3963 15C8  
                                            l3955 15B8                                              l3947 15A8  
                                            l3939 1588                                              l4907 6F4C  
                                            l4499 206E                                              l4851 76B2  
                                            l4827 6E10                                              l4843 6E44  
                                            l4835 6E30                                              l3867 38DC  
                                            l3699 35CC                                              l3891 7D60  
                                            l3883 7CD4                                              l3875 7C8A  
                                            l3795 2F28                                              l3787 2EAE  
                                            l3779 2E8E                                              l4925 6E82  
                                            l4773 3EAA                                              l4757 3E42  
                                            l4749 3E14                                              l4685 1E66  
                                            l4693 1E92                                              l4669 1DA8  
                                            l4677 1DF4                                              l4597 1ACC  
                                            l4589 1A8E                                              l3981 1642  
                                            l3965 15CC                                              l3957 15BC  
                                            l3949 15AC                                              l3973 15DC  
                                            l4909 6F4E                                              l4861 76E6  
                                            l4853 76B6                                              l4941 771C  
                                            l4829 6E1A                                              l4845 6E46  
                                            l4837 6E32                                              l4917 6DA2  
                                            l3869 38F2                                              l3885 7CF8  
                                            l3877 7CB8                                              l3797 2F3E  
                                            l3789 2ECE                                              l4781 738E  
                                            TRISD 000F95                                              l4919 6D7C  
                                            l4927 6EA2                                              l4775 3EBA  
                                            l4767 3E72                                              l4759 3E4E  
                                            l4695 1E98                                              l4687 1E76  
                                            l4679 1E14                                              l4599 1ADC  
                                            l3991 1686                                              l3983 165E  
                                            l3975 15E2                                              l3967 15D0  
                                            l3959 15C0                                              l3895 1464  
                                            l4791 2752                                              l4863 76EC  
                                            l4855 76C8                                              l4951 6DC4  
                                            l4943 771E                                              l4935 7710  
                                            l4847 6E50                                              l4839 6E38  
                                            l3887 7D1A                                              l4783 739C  
                                            l4871 3C84                                              TRISE 000F96  
                                            l4929 6EA4                                              l4769 3E80  
                                            l4689 1E88                                              l3993 1692  
                                            l3985 166A                                              l3977 1610  
                                            l3969 15D4                                              l3897 1470  
                                            l4793 2766                                              l4865 76F0  
                                            l4857 76CE                                              l4849 764E  
                                            l4953 6DD8                                              l4945 779A  
                                            l4937 7718                                              l4961 73F6  
                                            l3889 7D30                                              l4785 73C4  
                                            l4881 3CCA                                              l3995 16BE  
                                            l3987 1670                                              l3979 1632  
                                            l3899 1482                                              l4699 70A8  
                                            l4795 27AC                                              l4787 26E2  
                                            l4859 76D2                                              l4955 6DDA  
                                            l4939 771A                                              l4971 7438  
                                            l4963 7406                                              l4779 7386  
                                            l4891 3D60                                              l4883 3CDE  
                                            l4875 3C8C                                              l4867 3C64  
                                            l3997 16D2                                              l3989 1684  
                                            l4797 27D0                                              l4789 2702  
                                            l4949 6DC0                                              l4981 7462  
                                            l4973 744A                                              l4965 7418  
                                            l4893 3D7A                                              l4885 3D04  
                                            l4877 3CB0                                              l4869 3C7A  
                                            l4799 27F2                                              l4959 6D58  
                                            l4983 7468                                              l4975 7450  
                                            l4967 741A                                              l4991 74B2  
                                            l4887 3D1A                                              l4895 3D8C  
                                            l4879 3CBE                                              l4977 7456  
                                            l4969 7420                                              l4985 7474  
                                            l4889 3D2E                                              l4993 7A90  
                                            l4899 6F1A                                              l4979 745C  
                                            l4987 747C                                              l4995 7A96  
                                            l4989 74B0                                              l4997 7AAC  
                                            l4999 7AC0                                              STR_1 7F56  
                                            STR_2 7EAF                                              STR_3 7FC2  
                                            STR_4 7F85                                              STR_5 7EEE  
                                            STR_6 7F25                                              STR_7 7FAC  
                                            STR_8 7FFC                                              STR_9 7FCF  
                                   _state_changed 01A4                                              _LATA 000F89  
                                            _LATB 000F8A                                              _LATC 000F8B  
                                            u3200 7186                                              u4000 32D8  
                                            u3201 7180                                              u4001 32D2  
                                            u3210 71C4                                              u4010 32F6  
                                            u4011 32F0                                              u3220 71D6  
                                            u3300 3A38                                              u4020 3314  
                                            u4100 2F3C                                              u3221 71D0  
                                            u3301 3A32                                              u4021 330E  
                                            u4101 2F36                                              u3310 3A8A  
                                            u4030 3328                                              u3230 7052  
                                            u4110 2F74                                              u3311 3A84  
                                            u4031 3322                                              u3231 704A  
                                            u4111 2F6C                                              u3160 77F0  
                                            u3320 3AE8                                              u3400 7DF0  
                                            u3240 7056                                              u4200 30CE  
                                            u4120 2F78                                              u4040 2E0E  
                                            u5000 0AD0                                              u3161 77EA  
                                            u3217 71BA                                              u3321 3AE2  
                                            u3401 7DEA                                              u4201 30C8  
                                            u4041 2E08                                              u5001 0ACA  
                                            u4210 3792                                              u3170 7806  
                                            u3250 3934                                              u3330 3B20  
                                            u3410 7E36                                              u4130 2F92  
                                            u4050 2E30                                              u5010 0B38  
                                            u4211 378C                                              u3171 7800  
                                            u3251 392E                                              u3331 3B1A  
                                            u3411 7E30                                              u4131 2F8C  
                                            u4051 2E2A                                              u4220 37CE  
                                            u3180 7834                                              u3260 396C  
                                            u3340 3B64                                              u4300 7D18  
                                            u3420 79C4                                              u3500 7010  
                                            u4140 3000                                              u4060 2E62  
                                            u5100 0F1C                                              u5020 0B66  
                                            u4221 37C8                                              u3181 782E  
                                            u3261 3966                                              u3341 3B5E  
                                            u4301 7D12                                              u3421 79BE  
                                            u3501 7008                                              u4061 2E5C  
                                            u5101 0F16                                              u5021 0B60  
                                            u4230 37F0                                              u3190 786E  
                                            u3350 3B96                                              u4310 7D2E  
                                            u3430 79F6                                              u3510 7014  
                                            u4150 3048                                              u4070 2ECC  
                                            u5110 0FA6                                              u5030 0BCC  
                                            u4231 37EA                                              u3191 7868  
                                            u3271 399A                                              u3351 3B90  
                                            u4311 7D28                                              u3431 79F0  
                                            u4151 3042                                              u4071 2EC6  
                                            u5111 0FA0                                              u4400 1586  
                                            u3600 7236                                              u4240 38BC  
                                            u3280 39C0                                              u3360 3BCA  
                                            u4320 7D60                                              u3440 7A2A  
                                            u3520 7098                                              u4160 306A  
                                            u4080 2F1E                                              u5200 13DC  
                                            u5120 1032                                              u5040 0C0A  
                                            u6000 7B2E                                              u4401 1580  
                                            u3601 7230                                              u4241 38B4  
                                            u3281 39BA                                              u3361 3BC4  
                                            u4321 7D5A                                              u3441 7A24  
                                            u3521 7090                                              u4161 3064  
                                            u4145 2FEC                                              u4081 2F16  
                                            u5201 13D6                                              u5121 102C  
                                            u5041 0C04                                              u5017 0B28  
                                            u6001 7B28                                              u4410 1598  
                                            u4330 1480                                              u5210 1ECC  
                                            u4250 38C0                                              u3450 78D0  
                                            u3610 7260                                              u3290 39F2  
                                            u3370 3C1A                                              u3530 709C  
                                            u4170 3088                                              u4090 2F22  
                                            u5130 106C                                              u5050 0C72  
                                            u6010 7B5A                                              u4411 1592  
                                            u4331 147A                                              u5211 1EC6  
                                            u3451 78CA                                              u3611 725A  
                                            u3291 39EC                                              u3371 3C14  
                                            u4171 3082                                              u5131 1066  
                                            u6011 7B54                                              u4500 1708  
                                            u4420 160E                                              u4340 1498  
                                            u5300 20A8                                              u5220 1EE4  
                                            u4260 38DA                                              u3460 78F8  
                                            u3700 2D0C                                              u3620 2AFA  
                                            u3540 7348                                              u4180 30A6  
                                            u5140 1154                                              u5060 0CA0  
                                            u6020 7BA6                                              u6100 75E4  
                                            u4501 1702                                              u4421 1608  
                                            u4341 1492                                              u5301 20A2  
                                            u5221 1EDE                                              u4261 38D4  
                                            u3461 78F2                                              u3701 2D06  
                                            u3621 2AF2                                              u3381 7D98  
                                            u3541 7340                                              u4181 30A0  
                                            u5141 114E                                              u5061 0C9A  
                                            u5037 0BBC                                              u6021 7BA0  
                                            u6101 75DE                                              u4510 171A  
                                            u4430 162A                                              u4350 14AC  
                                            u5310 20DA                                              u5230 1EF8  
                                            u6110 6F00                                              u4270 38F0  
                                            u3470 795A                                              u3710 2D2A  
                                            u3630 2AFE                                              u3390 7DBE  
                                            u3550 734C                                              u4190 30BA  
                                            u5150 118E                                              u5070 0D52  
                                            u6030 7BCE                                              u4511 1714  
                                            u4431 1622                                              u4351 14A6  
                                            u5311 20D4                                              u5231 1EF2  
                                            u6111 6EFA                                              u4271 38EA  
                                            u3471 7954                                              u3711 2D24  
                                            u3391 7DB8                                              u4191 30B4  
                                            u5151 1188                                              u5071 0D4C  
                                            u6031 7BC8                                              u4600 189E  
                                            u4520 1740                                              u4440 162E  
                                            u4360 14F8                                              u5400 220A  
                                            u5320 2106                                              u5240 1F46  
                                            u3480 796E                                              u3720 2D48  
                                            u3640 2B18                                              u3800 3494  
                                            u4280 7CB6                                              u3560 7366  
                                            u5160 1232                                              u5080 0DE4  
                                            u6040 7BF8                                              u6200 24C4  
                                            u4601 1898                                              u4521 173A  
                                            u4361 14F2                                              u5401 2204  
                                            u5321 2100                                              u5241 1F40  
                                            u3481 7968                                              u3721 2D42  
                                            u3641 2B12                                              u3801 348E  
                                            u4281 7CB0                                              u3561 7360  
                                            u5161 122C                                              u5081 0DDE  
                                            u5057 0C62                                              u6041 7BF2  
                                            u6201 24BE                                              u4610 18B4  
                                            u4530 1780                                              u4450 165C  
                                            u4370 1514                                              u5410 2258  
                                            u5330 2120                                              u5250 1F5E  
                                            u3570 6FCE                                              u3490 710E  
                                            u3730 2D5C                                              u3650 2B4E  
                                            u3810 34B6                                              u4290 7CF6  
                                            u5170 125C                                              u5090 0EA0  
                                            u6050 7C22                                              u6210 24D8  
                                            u6130 2352                                              u4611 18AE  
                                            u4531 177A                                              u4451 1656  
                                            u4371 150E                                              u5411 2252  
                                            u5331 211A                                              u5251 1F58  
                                            u3571 6FC6                                              u3491 7108  
                                            u3731 2D56                                              u3651 2B48  
                                            u3811 34B0                                              u4291 7CF0  
                                            u5171 1256                                              u5091 0E9A  
                                            u6051 7C1C                                              u6211 24D2  
                                            u6131 234C                                              u5500 1B0A  
                                            u4700 19CA                                              u4620 18CE  
                                            u4540 17CA                                              u4460 1682  
                                            u4380 152C                                              u5420 228E  
                                            u5340 2144                                              u5260 1F72  
                                            u3580 6FD2                                              u3740 2D72  
                                            u3660 2B70                                              u3820 34D4  
                                            u3900 3606                                              u5180 12FE  
                                            u6060 7C4C                                              u6220 250C  
                                            u6140 2366                                              u5501 1B04  
                                            u4701 19C4                                              u4621 18C8  
                                            u4541 17C4                                              u4461 167C  
                                            u4381 1526                                              u5421 2288  
                                            u5341 213E                                              u5261 1F6C  
                                            u3741 2D6C                                              u3661 2B6A  
                                            u3821 34CE                                              u3901 3600  
                                            u5181 12F8                                              u6061 7C46  
                                            u6221 2506                                              u6141 2360  
                                            u5510 1B1E                                              u4710 19EE  
                                            u4630 18EC                                              u4550 1808  
                                            u4470 16AA                                              u4390 1540  
                                            u5430 22C2                                              u5350 216C  
                                            u5270 1FBC                                              u3590 7204  
                                            u3750 2D86                                              u3670 2BA6  
                                            u3830 34F2                                              u3910 363A  
                                            u5190 1338                                              u6070 7C76  
                                            u6230 2530                                              u6150 2384  
                                            u5511 1B18                                              u4711 19E8  
                                            u4631 18E6                                              u4551 1802  
                                            u4471 16A4                                              u4391 153A  
                                            u5431 22BC                                              u5351 2166  
                                            u5271 1FB6                                              u3591 71FE  
                                            u3751 2D80                                              u3671 2BA0  
                                            u3831 34EC                                              u3911 3634  
                                            u5191 1332                                              u6071 7C70  
                                            u6231 252A                                              u6151 237E  
                                            u6080 7542                                              u5600 1E12  
                                            u5520 1C9E                                              u5440 1A28  
                                            u4640 1906                                              u4560 181C  
                                            u4480 16BC                                              u5360 2182  
                                            u5280 2004                                              u3760 2DA2  
                                            u3680 2BB8                                              u3840 3506  
                                            u3920 367C                                              u4800 02F0  
                                            u4720 00A4                                              u6240 268E  
                                            u6160 241E                                              u6081 753C  
                                            u5601 1E0C                                              u5441 1A22  
                                            u4641 1900                                              u4561 1816  
                                            u4481 16B6                                              u5361 217C  
                                            u5281 1FFE                                              u3761 2D9C  
                                            u3681 2BB2                                              u3841 3500  
                                            u3921 3676                                              u4801 02EA  
                                            u4721 009E                                              u6241 2688  
                                            u6161 2418                                              u6090 7578  
                                            u5610 1E46                                              u5530 1CFE  
                                            u5450 1A40                                              u4650 1924  
                                            u4570 184E                                              u4490 16D0  
                                            u5370 21B4                                              u5290 2082  
                                            u3690 2CEA                                              u3850 351A  
                                            u3770 336A                                              u3930 36AE  
                                            u4810 0332                                              u4730 0196  
                                            u6250 26A2                                              u6170 243E  
                                            u6091 7572                                              u5611 1E40  
                                            u5531 1CF8                                              u5451 1A3A  
                                            u4651 191E                                              u4571 1848  
                                            u4491 16CA                                              u5371 21AE  
                                            u5291 207C                                              u3691 2CE4  
                                            u3851 3514                                              u3771 3364  
                                            u4811 032C                                              u4731 0190  
                                            u6251 269C                                              u6171 2438  
                                            u5700 3DF2                                              u5620 1E86  
                                            u5540 1D26                                              u5460 1A54  
                                            u4660 1962                                              u4580 1864  
                                            u5380 21D2                                              u3860 3530  
                                            u3780 338C                                              u3940 36EC  
                                            u4900 0664                                              u4820 03E6  
                                            u4740 01AA                                              u6260 26D6  
                                            u6180 2452                                              u5621 1E80  
                                            u5541 1D20                                              u5525 1C92  
                                            u5461 1A4E                                              u4661 195C  
                                            u4581 185E                                              u5381 21CC  
                                            u3861 352A                                              u3781 3386  
                                            u3941 36E6                                              u4901 065E  
                                            u4821 03DE                                              u4741 01A4  
                                            u6261 26D0                                              u6317 2586  
                                            u6181 244C                                              u5710 3E24  
                                            u5630 3F04                                              u5550 1D3C  
                                            u5470 1A9E                                              u4670 197A  
                                            u4590 1888                                              u5390 21EC  
                                            u3790 344E                                              u3950 3700  
                                            u4910 068E                                              u4830 03EA  
                                            u4750 01D8                                              u6190 248A  
                                            u5711 3E1E                                              u5631 3EFE  
                                            u5551 1D36                                              u5471 1A98  
                                            u4671 1974                                              u4591 1882  
                                            u5391 21E6                                              u3951 36FA  
                                            u3871 3588                                              u4911 0688  
                                            u4751 01D2                                              u6327 25E4  
                                            u6191 2484                                              u5720 3E3C  
                                            u5640 3F48                                              u5560 1D6E  
                                            u5480 1AB6                                              u4680 198E  
                                            u5800 27AA                                              u3960 3742  
                                            u3880 35AC                                              u4920 0716  
                                            u4840 0404                                              u4760 0220  
                                            u5721 3E36                                              u5705 3DE6  
                                            u5641 3F42                                              u5561 1D68  
                                            u5481 1AB0                                              u4681 1988  
                                            u5801 27A4                                              u6337 6E3C  
                                            u3961 373C                                              u3937 36A4  
                                            u3881 35A6                                              u4921 0710  
                                            u4841 03FE                                              u4761 021A  
                                            u5730 3E6C                                              u5650 3F6C  
                                            u5570 1D8C                                              u5490 1ACA  
                                            u4690 19B2                                              u5810 27F0  
                                            u3890 35E4                                              u3970 313E  
                                            u4930 0750                                              u4850 042E  
                                            u4770 02A8                                              u5731 3E66  
                                            u5651 3F66                                              u5571 1D86  
                                            u5491 1AC4                                              u4691 19AC  
                                            u5811 27EA                                              u6347 6E48  
                                            u3795 343A                                              u3891 35DE  
                                            u3971 3138                                              u4931 074A  
                                            u4851 0428                                              u4771 02A0  
                                            u5740 3E94                                              u5660 3F92  
                                            u5580 1DA6                                              u5820 28FC  
                                            u3980 3160                                              u4940 07DC  
                                            u4860 04B8                                              u4780 02AC  
                                            u5900 3D18                                              u5741 3E8E  
                                            u5661 3F8C                                              u5581 1DA0  
                                            u5821 28F6                                              u6357 740C  
                                            u3981 315A                                              u4941 07D6  
                                            u4861 04B2                                              u5901 3D12  
                                            u5750 3EA8                                              u5670 3FE8  
                                            u5590 1DC4                                              u5830 29A0  
                                            u3990 32B6                                              u4950 0898  
                                            u4870 04F2                                              u4790 02C6  
                                            u5910 3D2C                                              u5751 3EA2  
                                            u5671 3FE2                                              u5591 1DBE  
                                            u5831 299A                                              u6367 7426  
                                            u3991 32B0                                              u4951 0892  
                                            u4871 04EC                                              u4791 02C0  
                                            u5911 3D26                                              u5680 6F72  
                                            u5840 2A68                                              u4960 0914  
                                            u4880 05B0                                              u5760 73E6  
                                            u5920 3D5E                                              u5681 6F6C  
                                            u6377 743E                                              u4961 090E  
                                            u4881 05AA                                              u5761 73E0  
                                            u5921 3D58                                              u5690 3DB6  
                                            u5850 2A88                                              u5770 2724  
                                            u5930 6DB8                                              u4970 099E  
                                            u4890 05EA                                              u5691 3DB0  
                                            u5851 2A82                                              u6387 6E12  
                                            u5931 6DB2                                              u4971 0998  
                                            u4891 05E4                                              u5780 2750  
                                            u5860 76C6                                              u5940 74AC  
                                            u4980 0A2A                                              u5845 2A5C  
                                            u5781 274A                                              u5861 76C0  
                                            u6397 6E1E                                              u4981 0A24  
                                            u5790 278A                                              u5870 76E4  
                                            u5950 74E2                                              u4990 0A88  
                                            u5775 2718                                              u5871 76DE  
                                            u5960 74F4                                              u5880 3C78  
                                            u5961 74EE                                              u5881 3C72  
                                            u5890 3CAE                                              u5970 7AAA  
                                            u5795 277E                                              u5947 74A2  
                                            u5891 3CA8                                              u5971 7AA4  
                                            u5980 7AD6                                              u5957 74D8  
                                            u4997 0A7C                                              u5981 7AD0  
                                            u5990 7B02                                              u5991 7AFC  
                                            _TMR2 000FCC                        __end_of_mix_exit_condition 6F18  
                                            abs@a 0013                                              _dbuf 008E  
                                            _atoi 3750                                              _ctoa 7248  
                                            _main 22E0                                              _dtoa 2AC6  
                                            _fosc 7EAB                                              _prec 0088  
                                            _otoa 3356                                              _nout 0084  
                                            pad@i 0018                                              pad@p 0015  
                                            fsr1h 000FE2                                              fsr2h 000FDA  
                                            indf1 000FE7                                              indf2 000FDF  
                                            fsr1l 000FE1                                              pad@w 001A  
                                            fsr2l 000FD9                                              _tosc 00CF  
                                            _stoa 357C                                              btemp 007E  
                                            _utoa 312A                                              _xtoa 2DFA  
                     update_pwm_duty_ccp1@time_up 006F                                       main@rx_char 01A0  
                                            prodh 000FF4                                              prodl 000FF3  
                                            start 0076                                   ___fldiv@new_exp 002B  
state_translator_fpga_to_micro@state_machine_code 0005                                      ___param_bank 000000  
                                           ??_abs 0015                              _update_pwm_duty_ccp1 764C  
                                           ??_pad 0017                                     ___fltol@sign1 006D  
                                 __end_of___aodiv 3AD2                                             ?_atoi 0008  
                                           ?_ctoa 001C                                   __end_of___fladd 1A0A  
                                           ?_main 0001                                             ?_dtoa 001C  
                                 __end_of___aomod 3C62                                   __end_of___fldiv 22E0  
                                 __end_of___flneg 6F9A                                             STR_11 7FCF  
                                           STR_20 7FD0                                             STR_13 7FD3  
                                           STR_15 7FD3                                             STR_31 7FED  
                                           STR_24 7FD4                                             STR_33 7FED  
                                           STR_43 7FDC                                             STR_27 7FEA  
                                           STR_51 7FD7                                             STR_36 7FDB  
                                           STR_29 7FEA                                             STR_53 7FD7  
                                           STR_61 7FF0                                             STR_38 7FDB  
                                           STR_46 7FF3                                             STR_63 7FF0  
                                           STR_48 7FF3                                             STR_73 7FE0  
                                           STR_81 7FE3                                             STR_58 7FD8  
                                           STR_66 7FDF                                             STR_83 7FE3  
                                           STR_68 7FDF                                             STR_92 7FE4  
                                           STR_76 7FF6                                             STR_85 7FCB  
                                           STR_78 7FF6                                             STR_87 7FCB  
                                           STR_96 7FCC                                   __end_of___flmul 1EAE  
                                           ?_otoa 001C                                             STR_99 7FF9  
                                 __end_of___flsub 70F0                                   __end_of___fltol 3ED2  
                                           ?_stoa 000A                                             ?_utoa 001C  
                                           _T0CON 000FD5                                   __end_of___lodiv 7E9A  
                                           ?_xtoa 001C                                             _T2CON 000FCA  
                                 __end_of___lomod 7A8C                                             i2l163 006E  
                                           _RCREG 000FAE                                      vfpfcnvrt@fmt 0045  
                                           _TMR0H 000FD7                                      vfpfcnvrt@llu 0060  
                                           _TMR0L 000FD6                                             _SPBRG 000FAF  
                                           _PORTA 000F80                                             _PORTB 000F81  
                                           _PORTC 000F82                                             _PORTD 000F83  
                                           _TRISA 000F92                                             _TRISB 000F93  
                                           _TXREG 000FAD                                   __end_of_lcd_dat 6E56  
                                 __end_of_lcd_cmd 6E2C                                   __end_of_lcd_str 74FA  
                                           _f_osc 7EA7                                             _flags 008A  
                                           _errno 008C                                             _fputc 77DA  
                                 __end_of_isalpha 70A6                                             _fputs 713C  
                                 __end_of_isdigit 6FDC                                             _t_osc 7EA3  
                                           atoi@n 0015                                             pad@fp 0011  
                                           atoi@s 0008                                             _width 0086  
                                           ctoa@c 001E                                             _state 01AD  
                                           _putch 3FFA                                             _toint 7E9B  
                                           ctoa@w 001F                                             dtoa@d 001E  
                                           dtoa@i 003E                                             dtoa@n 0036  
                                           dtoa@p 0030                                             dtoa@s 0034  
                                           dtoa@w 0032                                   __end_of_islower 7060  
                                 __end_of_isspace 7248                                   __end_of_isupper 701E  
                                           tablat 000FF5                                             otoa@d 001E  
                                           otoa@i 003C                                             otoa@n 0034  
                                           otoa@p 002E                                             otoa@t 0030  
                                           otoa@w 0032                                             plusw1 000FE3  
                                           plusw2 000FDB                                             stoa@i 0016  
                                           stoa@l 001E                                             stoa@p 001C  
                                           stoa@s 000C                                             stoa@w 0018  
                                           ttemp5 007F                                             ttemp6 0082  
                                           ttemp7 0086                                             utoa@d 001E  
                                           utoa@i 003A                                             utoa@n 0032  
                                           utoa@p 002E                                             utoa@w 0030  
                                           status 000FD8                                             wtemp8 007F  
                                           xtoa@c 0041                                             xtoa@d 001E  
                                           xtoa@i 003F                                             xtoa@n 0037  
                                           xtoa@p 0033                                             xtoa@w 0035  
                                           xtoa@x 0026                                   __end_of_strncmp 7D90  
                                 __end_of_toupper 7384                                  ___lodiv@dividend 0001  
                                 ??_get_reg_value 0001                                      _toupper$1715 000D  
                            get_reg_value@rx_char 0001                                   __initialization 72AE  
                                    __end_of_atoi 391E                                      __end_of_ctoa 72AE  
                                    __end_of_main 26E0                                      __end_of_dtoa 2DFA  
                                    __end_of_fosc 7EAF                                      __end_of_otoa 357C  
                                    __end_of_stoa 3750                                      __end_of_utoa 3356  
                           ?_update_pwm_duty_ccp1 006F                                      __end_of_xtoa 312A  
                 ??_update_direction_and_counters 0007                                            ??_atoi 000A  
                                          ??_ctoa 001F                                            ??_main 007C  
                                          ??_dtoa 0026                                            ??_otoa 0026  
                                          ??_stoa 000E                                            ??_utoa 0026  
                                          ??_xtoa 0027                                     __activetblptr 000002  
                                 ??_rx_char_usart 0001                                  ___lodiv@quotient 0011  
                                          ?_fputc 0001                                            STR_101 7FF9  
                                          ?_fputs 000A                                            STR_103 7FE7  
                                          STR_105 7FE7                                            _CCPR1L 000FBE  
                                          ?_putch 0001                                            i2l5251 0030  
                                          i2l5261 0066                                            i2l5253 0032  
                                          i2l5255 003C                                            i2l5247 000C  
                                          i2l5257 0050                                            i2l5249 001E  
                                          i2l5259 0062                                     main@greet_str 0100  
                                   vfpfcnvrt@done 004F                                 _compute_next_step 74FA  
                                   ?_init_timer_0 0001                                     ?_init_timer_2 0001  
          __end_of_state_translator_fpga_to_micro 7B88           __size_of_state_translator_fpga_to_micro 00FC  
                  _state_translator_fpga_to_micro 7A8C                                ?_compute_next_step 0001  
                                    vfprintf@cfmt 006E                                  __end_of_lcd_init 7472  
                                          ___flge 3ED2                                 _init_timer_2$1948 006F  
                                       ??___aodiv 0011                                         ??___fladd 003B  
                                       ??___aomod 0011                                            ___wmul 6E56  
            update_direction_and_counters@counter 0005                                         ??___fldiv 0022  
                                       ??___flneg 0005                                         ??___flmul 0009  
                                       ??___flsub 004B                                         ??___fltol 0069  
                                       ??___lodiv 0011                                         ??___lomod 0011  
                                          _lcd_wr 6D62                                            clear_0 72F4  
                                          clear_1 7300                               ??_compute_next_step 0005  
                                          pad@buf 0013                                            ctoa@fp 001C  
                                          _roundf 26E0                                         ??_lcd_dat 0002  
                                       ??_lcd_cmd 0002                                            dtoa@fp 001C  
                                          _strlen 718C                                         ??_lcd_str 0005  
                                          fputc@c 0001                                            fputs@c 000E  
                                          fputs@i 000F                                            fputs@s 000A  
                                       ??_isalpha 0003                                         ??_isdigit 0003  
                                       ??_islower 0003                                      __mediumconst 7E9A  
                                       ??_isspace 0003                                            otoa@fp 001C  
                                          tblptrh 000FF7                                         ??_isupper 0003  
                                          tblptrl 000FF6                                            tblptru 000FF8  
                                          stoa@cp 001A                                            stoa@fp 000A  
                                          putch@c 0001                                  __end_of_vfprintf 73F4  
                                          utoa@fp 001C                                  __end_of_snprintf 6EE0  
                                          xtoa@fp 001C                                         ??_strncmp 0007  
                                       ??_toupper 0009                                        ___flge@ff1 0001  
                                      ___flge@ff2 0005                                        __accesstop 0080  
                         __end_of__initialization 7306                         __end_of_compute_next_step 7590  
                                      ___flneg@f1 0001                                 serial_tx_char@val 0001  
                                  ??_init_timer_0 0001                                    ??_init_timer_2 006F  
                                   ___rparam_used 000001                                        ___fltol@f1 0065  
                                  _tmr2_prescaler 00D3                                   _init_interrupts 6D56  
                          ??_update_pwm_duty_ccp1 0073                                    __pcstackCOMRAM 0001  
                                    __pidataBANK0 6D8B                                      __pidataBANK1 6D6E  
                                   __end_of_f_osc 7EAB                                     __end_of_fputc 78BC  
                                   __end_of_fputs 718C                                     __end_of_t_osc 7EA7  
                                   __end_of_putch 4000                                     __end_of_toint 7E9F  
                         __size_of_serial_tx_char 0020               state_translator_fpga_to_micro@state 0003  
                                         ??_fputc 0005                                           ??_fputs 000E  
     update_direction_and_counters@step_direction 0003                                           ??_putch 0001  
                                _mix_current_step 01AB                                        __pbssBANK0 0080  
                                      __pbssBANK1 01A1                                __size_of_init_ccp1 0022  
                                         ?___flge 0001                                           ?___wmul 0001  
                              _mix_exit_condition 6EE0                                           ?_lcd_wr 0001  
                                         _CCP1CON 000FBD                                     _read_new_char 01A2  
                                         ?_roundf 004B                                           ?_strlen 0001  
                             ?_mix_exit_condition 0001                                __size_of_vfpfcnvrt 13E8  
                                _desired_baudrate 7E9F                                         ?_lcd_init 0001  
       update_direction_and_counters@counter_step 0001                                  ___lomod@dividend 0001  
                         __end_of_init_interrupts 6D62                        __size_of_compute_next_step 0096  
                            ??_mix_exit_condition 0005                                           __Hparam 0000  
                                         __Lparam 0000                                __size_of_vsnprintf 013A  
                                      _init_PORTS 6E80                                        _init_USART 6F18  
                                 __size_of___flge 0128                                           ___aodiv 391E  
                                         ___fladd 1462                                           ___aomod 3AD2  
                                         ___fldiv 1EAE                                           ___flneg 6F58  
                                         ___flmul 1A0A                                           ___flsub 70A6  
                                         ___fltol 3D9C                                   __size_of___wmul 002A  
                                         ___lodiv 7D90                                           ___lomod 79A2  
                                       ?_vfprintf 0068                                         ?_snprintf 00B8  
                                 __size_of_lcd_wr 000C                                           __pcinit 72AE  
                                         __ramtop 0600                                           __ptext0 22E0  
                                         __ptext1 7590                                           __ptext2 7B88  
                                         __ptext3 7A8C                                           __ptext4 6EAC  
                                         __ptext5 3C62                                           __ptext6 7384  
                                         __ptext7 007A                                           __ptext8 2DFA  
                                         __ptext9 7314                                           _lcd_dat 6E2C  
                                         _lcd_cmd 6E02                                           _lcd_str 7472  
                                       _T0CONbits 000FD5                                   __size_of_roundf 03E6  
                                 __size_of_strlen 005C                                 __end_of_init_ccp1 6DE0  
                                       _T2CONbits 000FCA                                      __size_of_abs 004C  
                                    __size_of_pad 00E6                                           _isalpha 7060  
                                         _isdigit 6F9A                              __end_of_init_timer_0 6E02  
                            __end_of_init_timer_2 77DA                                           _islower 701E  
                                         _isspace 71E8                                           _isupper 6FDC  
                 compute_next_step@step_direction 0003                                           atoi@neg 000E  
                                      ??_lcd_init 0003                                           _strncmp 7C88  
                                         _toupper 7314                              end_of_initialization 7306  
                                         fputc@fp 0003                                     __Lmediumconst 7E9A  
                                         fputs@fp 000C               state_translator_micro_to_fpga@state 0001  
                               __end_of_vfpfcnvrt 1462                             __end_of_get_reg_value 6D8A  
                                       _RCSTAbits 000FAB                                           postdec1 000FE5  
                                         postdec2 000FDD                                           postinc0 000FEE  
                                         postinc1 000FE6                                           postinc2 000FDE  
                                         roundf@e 0057                                           roundf@u 005D  
                                         roundf@x 004B                                           roundf@y 0061  
                                      ??_vfprintf 006E                     compute_next_step@current_step 0001  
                                      ??_snprintf 007C                                           strlen@a 0003  
                                         strlen@s 0001                                        _timer_done 01A1  
                                       _PORTEbits 000F84                  ??_state_translator_fpga_to_micro 0005  
                 ?_state_translator_fpga_to_micro 0003                                       ___fladd@grs 0042  
                                  _serial_tx_char 6D9E                             __end_of_rx_char_usart 0076  
                                       _TRISCbits 000F94                                        lcd_dat@val 0002  
                               __end_of_vsnprintf 3D9C                                        lcd_cmd@val 0002  
                                     ___fldiv@grs 002D                                       ___fldiv@rem 0026  
                                      _pwm_period 00CB                                        _state_msgs 01AF  
                                   _mix_direction 01A9                                       ___flmul@grs 000E  
                                ?_init_interrupts 0001                                       _CCP1CONbits 000FBD  
                                       _TXSTAbits 000FAC                                        lcd_str@str 0003  
                                     ?_init_PORTS 0001                                       ?_init_USART 0001  
                                  __end_of___flge 3FFA            __end_of_state_translator_micro_to_fpga 7C88  
         __size_of_state_translator_micro_to_fpga 0100                    _state_translator_micro_to_fpga 7B88  
                                     vfpfcnvrt@ap 0047                                       vfpfcnvrt@cp 004D  
                                     vfpfcnvrt@fp 0043                                       vfpfcnvrt@ll 0055  
                                  __end_of___wmul 6E80                                       vfpfcnvrt@vp 005D  
                                  __end_of_lcd_wr 6D6E  state_translator_micro_to_fpga@state_machine_code 0005  
                          __end_of_serial_tx_char 6DBE                         mix_exit_condition@counter 0001  
                                  __end_of_roundf 2AC6                                    __end_of_strlen 71E8  
                             start_initialization 72AE                                   ___lodiv@divisor 0009  
                                 ___lodiv@counter 0019                                       __end_of_abs 713C  
                                     __end_of_pad 79A2                                       vfprintf@fmt 006A  
                                        ??___flge 0009                          __end_of_desired_baudrate 7EA3  
                                        ??___wmul 0005                     __size_of_update_pwm_duty_ccp1 00C2  
                                        ??_lcd_wr 0001                                       __pdataBANK0 00C4  
                                     __pdataBANK1 01AF                             __size_of_init_timer_0 0022  
                           __size_of_init_timer_2 00CC                                          ??_roundf 004F  
                                        ??_strlen 0003                                   ?_serial_tx_char 0001  
                                       ___fladd@a 0037                                         ___fladd@b 0033  
                                    vsnprintf@cnt 00B0                                      vsnprintf@fmt 0074  
                                       ___fldiv@a 001E                                         ___fldiv@b 001A  
                                       ___flmul@a 0005                                         ___flmul@b 0001  
                                       ___flsub@a 0047                                         ___flsub@b 0043  
                                   __pcstackBANK0 00AE                                     __pcstackBANK1 0100  
                                ___aodiv@dividend 0001                                       snprintf@fmt 00BC  
                             __size_of_init_PORTS 002C                               __size_of_init_USART 0040  
                               __size_of_lcd_init 007E                                         _atoi$1627 0010  
                                       _atoi$1628 0014                                         _atoi$1629 0012  
                                    _init_timer_0 6DE0                                      _init_timer_2 770E  
                                       _dtoa$1451 002E                                         __pintcode 0008  
                                   __pmediumconst 7E9A                                          ?___aodiv 0001  
                                        ?___fladd 0033                                          ?___aomod 0001  
                                        ?___fldiv 001A                                  ___aodiv@quotient 0013  
                                        ?___flneg 0001                                          ?___flmul 0001  
                                        ?___flsub 0043                                          ?___fltol 0065  
                                        ?___lodiv 0001                                          ?___lomod 0001  
                                        ?_lcd_dat 0001                                          ?_lcd_cmd 0001  
                               __size_of_vfprintf 0070                                          ?_lcd_str 0003  
                               __size_of_snprintf 0034                                   ___lomod@divisor 0009  
                    update_pwm_duty_ccp1@new_duty 0075                                   ___lomod@counter 0011  
                                        ?_isalpha 0001                                          ?_isdigit 0001  
                                _mix_step_counter 01A7                                          ?_islower 0001  
                                        ?_isspace 0001                                          ?_isupper 0001  
                                       _init_ccp1 6DBE                                    __size_of_fputc 00E2  
                                  __size_of_fputs 0050                                          ?_strncmp 0001  
                                        ?_toupper 0007             __end_of_update_direction_and_counters 764C  
          __size_of_update_direction_and_counters 00BC                     _update_direction_and_counters 7590  
                                  __size_of_putch 0006                                    ___wmul@product 0005  
                                        _LATBbits 000F8A                                          _PIE1bits 000F9D  
                     __size_of_mix_exit_condition 0038                                          _PIR1bits 000F9E  
                                        i2u630_40 0060                                          i2u630_41 005A  
                                        i2u627_40 001C                                          i2u627_41 0016  
                                        i2u628_40 002E                                          i2u628_41 0028  
                                        i2u629_40 004E                                          i2u629_41 0048  
                                       _vfpfcnvrt 007A                                         _xtoa$1487 002F  
                                       _xtoa$1488 0031                                 ___wmul@multiplier 0001  
                                       lcd_wr@val 0001                                      _isspace$1655 0007  
                                      ?_init_ccp1 0001                                        vfpfcnvrt@c 005F  
                                       copy_data0 72C2                                         copy_data1 72E2  
                                       _vsnprintf 3C62                                        roundf@F525 0080  
                                        __Hrparam 0000                                      ??_init_PORTS 0001  
                                    ??_init_USART 006F                                        vfprintf@ap 006C  
                                        __Lrparam 0000                                        vfprintf@fp 0068  
                                __size_of___aodiv 01B4                                  __size_of___fladd 05A8  
                                __size_of___aomod 0190                                  __size_of___fldiv 0432  
                                __size_of___flneg 0042                                       vsnprintf@ap 0076  
                                __size_of___flmul 04A4                                  __size_of___flsub 004A  
                                __size_of___fltol 0136                                  __size_of___lodiv 010A  
                                __size_of___lomod 00EA                                        ?_vfpfcnvrt 0043  
                                      snprintf@ap 00C2                                   ___aodiv@divisor 0009  
                                 ___aodiv@counter 0011                                  __size_of_lcd_dat 002A  
                                __size_of_lcd_cmd 002A                                  __size_of_lcd_str 0088  
                                __size_of_isalpha 0046                                  __size_of_isdigit 0042  
                                __size_of_islower 0042                                  __size_of_isspace 0060  
                                        __ptext10 701E                                          __ptext11 6FDC  
                                        __ptext20 70F0                                          __ptext12 7060  
                                        __ptext21 3AD2                                          __ptext13 312A  
                                        __ptext30 71E8                                          __ptext22 391E  
                                        __ptext14 79A2                                          __ptext31 6F9A  
                                        __ptext23 7248                                          __ptext15 7D90  
                                        __ptext40 770E                                          __ptext32 6E56  
                                        __ptext24 78BC                                          __ptext16 7C88  
                                        __ptext41 6DE0                                          __ptext33 6D9E  
                                        __ptext25 718C                                          __ptext17 357C  
                                        __ptext50 6F58                                          __ptext42 6D56  
                                        __ptext34 6EE0                                          __ptext26 713C  
                                        __ptext18 3356                                          __ptext51 1A0A  
                                        __ptext43 6DBE                                          __ptext35 7472  
                                        __ptext27 77DA                                          __ptext19 2AC6  
                                        __ptext52 3ED2                                          __ptext44 764C  
                                        __ptext36 6E2C                                          __ptext28 3FFA  
                                        __ptext53 3D9C                                          __ptext45 1EAE  
                                        __ptext37 73F4                                          __ptext29 3750  
                                        __ptext54 6E80                                          __ptext46 6F18  
                                        __ptext38 6E02                                          __ptext55 6D7A  
                                        __ptext47 26E0                                          __ptext39 6D62  
                                        __ptext56 74FA                                          __ptext48 70A6  
                                        __ptext49 1462                                  __size_of_isupper 0042  
                ??_state_translator_micro_to_fpga 0003                   ?_state_translator_micro_to_fpga 0001  
                          __size_of_get_reg_value 0010                                __end_of_init_PORTS 6EAC  
                                        _lcd_init 73F4                                __end_of_init_USART 6F58  
                                __size_of_strncmp 0108                                  __size_of_toupper 0070  
                                      ?_vsnprintf 0070                                     __size_of_atoi 01CE  
                                   __size_of_ctoa 0066                                     __size_of_main 0400  
                                   __size_of_dtoa 0334                                     __size_of_otoa 0226  
                                   __size_of_stoa 01D4                                     __size_of_utoa 022C  
                                   __size_of_xtoa 0330                    ?_update_direction_and_counters 0001  
                                        _msg_sent 01A3                                         stoa@F1152 00C4  
                          __size_of_rx_char_usart 006E                          __size_of_init_interrupts 000C  
                                        int$flags 007E                                  ??_serial_tx_char 0001  
                                        _vfprintf 7384                                          _snprintf 6EAC  
                                        lcd_str@i 0007                                       _mix_counter 01A5  
                                ___aomod@dividend 0001                                    _vfpfcnvrt$1502 0051  
                                  _vfpfcnvrt$1503 0053                                        _INTCONbits 000FF2  
                                        isalpha@c 0001                                          isdigit@c 0001  
                                     ??_init_ccp1 0078                      __end_of_update_pwm_duty_ccp1 770E  
                                      vsnprintf@f 00B2                                        vsnprintf@n 0072  
                                      vsnprintf@s 0070                                         snprintf@n 00BA  
                                       snprintf@s 00B8                                          intlevel2 0006  
                                        islower@c 0001                                          isspace@c 0001  
                                        isupper@c 0001                                         strncmp@_l 0001  
                                       strncmp@_r 0003                                     _get_reg_value 6D7A  
                                 ___aomod@divisor 0009                                       ??_vfpfcnvrt 0049  
                                        stoa@nuls 000F                                   ___aomod@counter 0011  
                  mix_exit_condition@current_step 0003                                    _vsnprintf$1365 00AE  
                                        strncmp@l 0008                                          strncmp@n 0005  
                                        strncmp@r 000A                                          toupper@c 0007  
                                   _rx_char_usart 0008                                     ___fladd@signs 003F  
                   update_pwm_duty_ccp1@lsbs_duty 0077                                      ___aodiv@sign 0012  
                                     ??_vsnprintf 0078                                      ___fladd@aexp 0040  
                                    ___fladd@bexp 0041                                      ___aomod@sign 0012  
                                     _roundf$1950 0053                                       _roundf$1949 0059  
