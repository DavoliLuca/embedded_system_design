

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Jun 15 23:46:05 2023

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=3
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    82                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    83                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    84                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    85                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    86                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    87  0000                     
    88                           ; Version 2.20
    89                           ; Generated 12/02/2020 GMT
    90                           ; 
    91                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    92                           ; All rights reserved.
    93                           ; 
    94                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    95                           ; 
    96                           ; Redistribution and use in source and binary forms, with or without modification, are
    97                           ; permitted provided that the following conditions are met:
    98                           ; 
    99                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   100                           ;        conditions and the following disclaimer.
   101                           ; 
   102                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   103                           ;        of conditions and the following disclaimer in the documentation and/or other
   104                           ;        materials provided with the distribution.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC18F452 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122  0000                     
   123                           	psect	idataBANK0
   124  003FEA                     __pidataBANK0:
   125                           	callstack 0
   126                           
   127                           ;initializer for stoa@F1152
   128  003FEA  28                 	db	40
   129  003FEB  6E                 	db	110
   130  003FEC  75                 	db	117
   131  003FED  6C                 	db	108
   132  003FEE  6C                 	db	108
   133  003FEF  29                 	db	41
   134  003FF0  00                 	db	0
   135                           
   136                           ;initializer for _pwm_period
   137                           ;timer.c: 5: static double const f_osc = 1000000;;timer.c: 6: static double const t_osc 
      +                          = 1/f_osc;;timer.c: 7: static double pwm_period = 20e-3;
   138  003FF1  D70A               	dw	55050
   139  003FF3  3CA3               	dw	15523
   140                           
   141                           ;initializer for _tosc
   142  003FF5  37BD               	dw	14269
   143  003FF7  3486               	dw	13446
   144                           
   145                           ;initializer for _tmr2_prescaler
   146  003FF9  0000               	dw	0
   147  003FFB  4180               	dw	16768
   148                           
   149                           	psect	idataBANK1
   150  00653E                     __pidataBANK1:
   151                           	callstack 0
   152                           
   153                           ;initializer for _state_msgs
   154  00653E  3B                 	db	low STR_1
   155  00653F  7F                 	db	high STR_1
   156  006540  C9                 	db	low STR_2
   157  006541  7E                 	db	high STR_2
   158  006542  BB                 	db	low STR_3
   159  006543  7F                 	db	high STR_3
   160  006544  6C                 	db	low STR_4
   161  006545  7F                 	db	high STR_4
   162  006546  A9                 	db	low STR_5
   163  006547  7F                 	db	high STR_5
   164  006548  C4                 	db	low STR_6
   165  006549  7F                 	db	high STR_6
   166  00654A  B2                 	db	low STR_7
   167  00654B  7F                 	db	high STR_7
   168  00654C  09                 	db	low STR_8
   169  00654D  7F                 	db	high STR_8
   170                           
   171                           ;initializer for _hex_end_effector_values
   172  00654E  0010               	dw	16
   173  006550  0020               	dw	32
   174  006552  0040               	dw	64
   175  006554  0080               	dw	128
   176                           
   177                           ;initializer for _hex_joint_values
   178  006556  0001               	dw	1
   179  006558  0002               	dw	2
   180  00655A  0004               	dw	4
   181  00655C  0008               	dw	8
   182                           
   183                           	psect	mediumconst
   184  007EB4                     __pmediumconst:
   185                           	callstack 0
   186  007EB4  00                 	db	0
   187  007EB5  0000               	dw	0
   188  007EB7  4B00               	dw	19200
   189  007EB9                     __end_of_toint:
   190                           	callstack 0
   191  007EB9  0000               	dw	0
   192  007EBB  4616               	dw	17942
   193  007EBD                     __end_of_desired_baudrate:
   194                           	callstack 0
   195  007EBD  37BD               	dw	14269
   196  007EBF  3586               	dw	13702
   197  007EC1                     __end_of_t_osc:
   198                           	callstack 0
   199  007EC1  2400               	dw	9216
   200  007EC3  4974               	dw	18804
   201  007EC5                     __end_of_f_osc:
   202                           	callstack 0
   203  007EC5  2400               	dw	9216
   204  007EC7  4A74               	dw	19060
   205  007EC9                     __end_of_fosc:
   206                           	callstack 0
   207  0000                     _ADCON1	set	4033
   208  0000                     _ADRESL	set	4035
   209  0000                     _ADRESH	set	4036
   210  0000                     _ADCON0bits	set	4034
   211  0000                     _ADCON0	set	4034
   212  0000                     _CCPR1L	set	4030
   213  0000                     _CCP1CONbits	set	4029
   214  0000                     _CCP1CON	set	4029
   215  0000                     _PR2	set	4043
   216  0000                     _T2CONbits	set	4042
   217  0000                     _TMR2	set	4044
   218  0000                     _T2CON	set	4042
   219  0000                     _TMR0H	set	4055
   220  0000                     _TMR0L	set	4054
   221  0000                     _PORTEbits	set	3972
   222  0000                     _PORTD	set	3971
   223  0000                     _TRISCbits	set	3988
   224  0000                     _PORTC	set	3970
   225  0000                     _LATC	set	3979
   226  0000                     _TRISB	set	3987
   227  0000                     _PORTB	set	3969
   228  0000                     _LATB	set	3978
   229  0000                     _TRISA	set	3986
   230  0000                     _PORTA	set	3968
   231  0000                     _LATA	set	3977
   232  0000                     _T0CON	set	4053
   233  0000                     _PIR1bits	set	3998
   234  0000                     _PIE1bits	set	3997
   235  0000                     _T0CONbits	set	4053
   236  0000                     _LATAbits	set	3977
   237  0000                     _INTCONbits	set	4082
   238  0000                     _RCREG	set	4014
   239  0000                     _TXREG	set	4013
   240  0000                     _RCSTAbits	set	4011
   241  0000                     _TXSTAbits	set	4012
   242  0000                     _SPBRG	set	4015
   243  007EC9                     STR_2:
   244  007EC9  49                 	db	73	;'I'
   245  007ECA  4E                 	db	78	;'N'
   246  007ECB  49                 	db	73	;'I'
   247  007ECC  54                 	db	84	;'T'
   248  007ECD  5F                 	db	95	;'_'
   249  007ECE  50                 	db	80	;'P'
   250  007ECF  4F                 	db	79	;'O'
   251  007ED0  53                 	db	83	;'S'
   252  007ED1  3A                 	db	58	;':'
   253  007ED2  20                 	db	32
   254  007ED3  74                 	db	116	;'t'
   255  007ED4  68                 	db	104	;'h'
   256  007ED5  65                 	db	101	;'e'
   257  007ED6  20                 	db	32
   258  007ED7  76                 	db	118	;'v'
   259  007ED8  69                 	db	105	;'i'
   260  007ED9  61                 	db	97	;'a'
   261  007EDA  6C                 	db	108	;'l'
   262  007EDB  20                 	db	32
   263  007EDC  69                 	db	105	;'i'
   264  007EDD  73                 	db	115	;'s'
   265  007EDE  20                 	db	32
   266  007EDF  61                 	db	97	;'a'
   267  007EE0  74                 	db	116	;'t'
   268  007EE1  20                 	db	32
   269  007EE2  74                 	db	116	;'t'
   270  007EE3  68                 	db	104	;'h'
   271  007EE4  65                 	db	101	;'e'
   272  007EE5  20                 	db	32
   273  007EE6  69                 	db	105	;'i'
   274  007EE7  6E                 	db	110	;'n'
   275  007EE8  69                 	db	105	;'i'
   276  007EE9  74                 	db	116	;'t'
   277  007EEA  20                 	db	32
   278  007EEB  70                 	db	112	;'p'
   279  007EEC  6F                 	db	111	;'o'
   280  007EED  73                 	db	115	;'s'
   281  007EEE  69                 	db	105	;'i'
   282  007EEF  74                 	db	116	;'t'
   283  007EF0  69                 	db	105	;'i'
   284  007EF1  6F                 	db	111	;'o'
   285  007EF2  6E                 	db	110	;'n'
   286  007EF3  2C                 	db	44
   287  007EF4  20                 	db	32
   288  007EF5  70                 	db	112	;'p'
   289  007EF6  72                 	db	114	;'r'
   290  007EF7  6F                 	db	111	;'o'
   291  007EF8  63                 	db	99	;'c'
   292  007EF9  65                 	db	101	;'e'
   293  007EFA  73                 	db	115	;'s'
   294  007EFB  73                 	db	115	;'s'
   295  007EFC  20                 	db	32
   296  007EFD  69                 	db	105	;'i'
   297  007EFE  73                 	db	115	;'s'
   298  007EFF  20                 	db	32
   299  007F00  73                 	db	115	;'s'
   300  007F01  74                 	db	116	;'t'
   301  007F02  61                 	db	97	;'a'
   302  007F03  72                 	db	114	;'r'
   303  007F04  74                 	db	116	;'t'
   304  007F05  69                 	db	105	;'i'
   305  007F06  6E                 	db	110	;'n'
   306  007F07  67                 	db	103	;'g'
   307  007F08  00                 	db	0
   308  007F09                     STR_8:
   309  007F09  50                 	db	80	;'P'
   310  007F0A  49                 	db	73	;'I'
   311  007F0B  43                 	db	67	;'C'
   312  007F0C  4B                 	db	75	;'K'
   313  007F0D  5F                 	db	95	;'_'
   314  007F0E  55                 	db	85	;'U'
   315  007F0F  50                 	db	80	;'P'
   316  007F10  3A                 	db	58	;':'
   317  007F11  20                 	db	32
   318  007F12  74                 	db	116	;'t'
   319  007F13  68                 	db	104	;'h'
   320  007F14  65                 	db	101	;'e'
   321  007F15  20                 	db	32
   322  007F16  76                 	db	118	;'v'
   323  007F17  69                 	db	105	;'i'
   324  007F18  61                 	db	97	;'a'
   325  007F19  6C                 	db	108	;'l'
   326  007F1A  20                 	db	32
   327  007F1B  68                 	db	104	;'h'
   328  007F1C  61                 	db	97	;'a'
   329  007F1D  73                 	db	115	;'s'
   330  007F1E  20                 	db	32
   331  007F1F  72                 	db	114	;'r'
   332  007F20  65                 	db	101	;'e'
   333  007F21  61                 	db	97	;'a'
   334  007F22  63                 	db	99	;'c'
   335  007F23  68                 	db	104	;'h'
   336  007F24  65                 	db	101	;'e'
   337  007F25  64                 	db	100	;'d'
   338  007F26  20                 	db	32
   339  007F27  74                 	db	116	;'t'
   340  007F28  68                 	db	104	;'h'
   341  007F29  65                 	db	101	;'e'
   342  007F2A  20                 	db	32
   343  007F2B  70                 	db	112	;'p'
   344  007F2C  69                 	db	105	;'i'
   345  007F2D  63                 	db	99	;'c'
   346  007F2E  6B                 	db	107	;'k'
   347  007F2F  20                 	db	32
   348  007F30  75                 	db	117	;'u'
   349  007F31  70                 	db	112	;'p'
   350  007F32  20                 	db	32
   351  007F33  73                 	db	115	;'s'
   352  007F34  74                 	db	116	;'t'
   353  007F35  61                 	db	97	;'a'
   354  007F36  74                 	db	116	;'t'
   355  007F37  69                 	db	105	;'i'
   356  007F38  6F                 	db	111	;'o'
   357  007F39  6E                 	db	110	;'n'
   358  007F3A  00                 	db	0
   359  007F3B                     STR_1:
   360  007F3B  49                 	db	73	;'I'
   361  007F3C  44                 	db	68	;'D'
   362  007F3D  4C                 	db	76	;'L'
   363  007F3E  45                 	db	69	;'E'
   364  007F3F  3A                 	db	58	;':'
   365  007F40  20                 	db	32
   366  007F41  77                 	db	119	;'w'
   367  007F42  61                 	db	97	;'a'
   368  007F43  69                 	db	105	;'i'
   369  007F44  74                 	db	116	;'t'
   370  007F45  69                 	db	105	;'i'
   371  007F46  6E                 	db	110	;'n'
   372  007F47  67                 	db	103	;'g'
   373  007F48  20                 	db	32
   374  007F49  66                 	db	102	;'f'
   375  007F4A  6F                 	db	111	;'o'
   376  007F4B  72                 	db	114	;'r'
   377  007F4C  20                 	db	32
   378  007F4D  20                 	db	32
   379  007F4E  76                 	db	118	;'v'
   380  007F4F  69                 	db	105	;'i'
   381  007F50  61                 	db	97	;'a'
   382  007F51  6C                 	db	108	;'l'
   383  007F52  20                 	db	32
   384  007F53  74                 	db	116	;'t'
   385  007F54  6F                 	db	111	;'o'
   386  007F55  20                 	db	32
   387  007F56  62                 	db	98	;'b'
   388  007F57  65                 	db	101	;'e'
   389  007F58  20                 	db	32
   390  007F59  70                 	db	112	;'p'
   391  007F5A  6C                 	db	108	;'l'
   392  007F5B  61                 	db	97	;'a'
   393  007F5C  63                 	db	99	;'c'
   394  007F5D  65                 	db	101	;'e'
   395  007F5E  64                 	db	100	;'d'
   396  007F5F  20                 	db	32
   397  007F60  69                 	db	105	;'i'
   398  007F61  6E                 	db	110	;'n'
   399  007F62  20                 	db	32
   400  007F63  69                 	db	105	;'i'
   401  007F64  6E                 	db	110	;'n'
   402  007F65  69                 	db	105	;'i'
   403  007F66  74                 	db	116	;'t'
   404  007F67  20                 	db	32
   405  007F68  70                 	db	112	;'p'
   406  007F69  6F                 	db	111	;'o'
   407  007F6A  73                 	db	115	;'s'
   408  007F6B  00                 	db	0
   409  007F6C                     STR_4:
   410  007F6C  4F                 	db	79	;'O'
   411  007F6D  56                 	db	86	;'V'
   412  007F6E  45                 	db	69	;'E'
   413  007F6F  4E                 	db	78	;'N'
   414  007F70  3A                 	db	58	;':'
   415  007F71  20                 	db	32
   416  007F72  72                 	db	114	;'r'
   417  007F73  65                 	db	101	;'e'
   418  007F74  61                 	db	97	;'a'
   419  007F75  63                 	db	99	;'c'
   420  007F76  68                 	db	104	;'h'
   421  007F77  69                 	db	105	;'i'
   422  007F78  6E                 	db	110	;'n'
   423  007F79  67                 	db	103	;'g'
   424  007F7A  20                 	db	32
   425  007F7B  74                 	db	116	;'t'
   426  007F7C  68                 	db	104	;'h'
   427  007F7D  65                 	db	101	;'e'
   428  007F7E  20                 	db	32
   429  007F7F  63                 	db	99	;'c'
   430  007F80  6F                 	db	111	;'o'
   431  007F81  72                 	db	114	;'r'
   432  007F82  72                 	db	114	;'r'
   433  007F83  65                 	db	101	;'e'
   434  007F84  63                 	db	99	;'c'
   435  007F85  74                 	db	116	;'t'
   436  007F86  20                 	db	32
   437  007F87  74                 	db	116	;'t'
   438  007F88  65                 	db	101	;'e'
   439  007F89  6D                 	db	109	;'m'
   440  007F8A  70                 	db	112	;'p'
   441  007F8B  65                 	db	101	;'e'
   442  007F8C  72                 	db	114	;'r'
   443  007F8D  61                 	db	97	;'a'
   444  007F8E  74                 	db	116	;'t'
   445  007F8F  75                 	db	117	;'u'
   446  007F90  72                 	db	114	;'r'
   447  007F91  65                 	db	101	;'e'
   448  007F92  00                 	db	0
   449  007F93                     STR_9:
   450  007F93  44                 	db	68	;'D'
   451  007F94  65                 	db	101	;'e'
   452  007F95  76                 	db	118	;'v'
   453  007F96  69                 	db	105	;'i'
   454  007F97  63                 	db	99	;'c'
   455  007F98  65                 	db	101	;'e'
   456  007F99  20                 	db	32
   457  007F9A  68                 	db	104	;'h'
   458  007F9B  61                 	db	97	;'a'
   459  007F9C  73                 	db	115	;'s'
   460  007F9D  20                 	db	32
   461  007F9E  62                 	db	98	;'b'
   462  007F9F  65                 	db	101	;'e'
   463  007FA0  65                 	db	101	;'e'
   464  007FA1  6E                 	db	110	;'n'
   465  007FA2  20                 	db	32
   466  007FA3  72                 	db	114	;'r'
   467  007FA4  65                 	db	101	;'e'
   468  007FA5  73                 	db	115	;'s'
   469  007FA6  65                 	db	101	;'e'
   470  007FA7  74                 	db	116	;'t'
   471  007FA8  00                 	db	0
   472  007FA9                     STR_5:
   473  007FA9  47                 	db	71	;'G'
   474  007FAA  52                 	db	82	;'R'
   475  007FAB  41                 	db	65	;'A'
   476  007FAC  53                 	db	83	;'S'
   477  007FAD  50                 	db	80	;'P'
   478  007FAE  49                 	db	73	;'I'
   479  007FAF  4E                 	db	78	;'N'
   480  007FB0  47                 	db	71	;'G'
   481  007FB1  00                 	db	0
   482  007FB2                     STR_7:
   483  007FB2  44                 	db	68	;'D'
   484  007FB3  49                 	db	73	;'I'
   485  007FB4  4C                 	db	76	;'L'
   486  007FB5  55                 	db	85	;'U'
   487  007FB6  54                 	db	84	;'T'
   488  007FB7  49                 	db	73	;'I'
   489  007FB8  4E                 	db	78	;'N'
   490  007FB9  47                 	db	71	;'G'
   491  007FBA  00                 	db	0
   492  007FBB                     STR_3:
   493  007FBB  4D                 	db	77	;'M'
   494  007FBC  4F                 	db	79	;'O'
   495  007FBD  56                 	db	86	;'V'
   496  007FBE  45                 	db	69	;'E'
   497  007FBF  4D                 	db	77	;'M'
   498  007FC0  45                 	db	69	;'E'
   499  007FC1  4E                 	db	78	;'N'
   500  007FC2  54                 	db	84	;'T'
   501  007FC3  00                 	db	0
   502  007FC4                     STR_6:
   503  007FC4  4D                 	db	77	;'M'
   504  007FC5  49                 	db	73	;'I'
   505  007FC6  58                 	db	88	;'X'
   506  007FC7  49                 	db	73	;'I'
   507  007FC8  4E                 	db	78	;'N'
   508  007FC9  47                 	db	71	;'G'
   509  007FCA  00                 	db	0
   510  007FCB                     STR_87:
   511  007FCB  68                 	db	104	;'h'
   512  007FCC  68                 	db	104	;'h'
   513  007FCD  58                 	db	88	;'X'
   514  007FCE  00                 	db	0
   515  007FCF                     STR_11:
   516  007FCF  68                 	db	104	;'h'
   517  007FD0  68                 	db	104	;'h'
   518  007FD1  64                 	db	100	;'d'
   519  007FD2  00                 	db	0
   520  007FD3                     STR_15:
   521  007FD3  68                 	db	104	;'h'
   522  007FD4  68                 	db	104	;'h'
   523  007FD5  69                 	db	105	;'i'
   524  007FD6  00                 	db	0
   525  007FD7                     STR_53:
   526  007FD7  68                 	db	104	;'h'
   527  007FD8  68                 	db	104	;'h'
   528  007FD9  6E                 	db	110	;'n'
   529  007FDA  00                 	db	0
   530  007FDB                     STR_38:
   531  007FDB  68                 	db	104	;'h'
   532  007FDC  68                 	db	104	;'h'
   533  007FDD  6F                 	db	111	;'o'
   534  007FDE  00                 	db	0
   535  007FDF                     STR_68:
   536  007FDF  68                 	db	104	;'h'
   537  007FE0  68                 	db	104	;'h'
   538  007FE1  75                 	db	117	;'u'
   539  007FE2  00                 	db	0
   540  007FE3                     STR_83:
   541  007FE3  68                 	db	104	;'h'
   542  007FE4  68                 	db	104	;'h'
   543  007FE5  78                 	db	120	;'x'
   544  007FE6  00                 	db	0
   545  007FE7                     STR_105:
   546  007FE7  7A                 	db	122	;'z'
   547  007FE8  58                 	db	88	;'X'
   548  007FE9  00                 	db	0
   549  007FEA                     STR_29:
   550  007FEA  7A                 	db	122	;'z'
   551  007FEB  64                 	db	100	;'d'
   552  007FEC  00                 	db	0
   553  007FED                     STR_33:
   554  007FED  7A                 	db	122	;'z'
   555  007FEE  69                 	db	105	;'i'
   556  007FEF  00                 	db	0
   557  007FF0                     STR_63:
   558  007FF0  7A                 	db	122	;'z'
   559  007FF1  6E                 	db	110	;'n'
   560  007FF2  00                 	db	0
   561  007FF3                     STR_48:
   562  007FF3  7A                 	db	122	;'z'
   563  007FF4  6F                 	db	111	;'o'
   564  007FF5  00                 	db	0
   565  007FF6                     STR_78:
   566  007FF6  7A                 	db	122	;'z'
   567  007FF7  75                 	db	117	;'u'
   568  007FF8  00                 	db	0
   569  007FF9                     STR_101:
   570  007FF9  7A                 	db	122	;'z'
   571  007FFA  78                 	db	120	;'x'
   572  007FFB  00                 	db	0
   573  007FFC                     STR_10:
   574  007FFC  25                 	db	37
   575  007FFD  73                 	db	115	;'s'
   576  007FFE  00                 	db	0
   577  007FFF  00                 	db	0	; dummy byte at the end
   578  0000                     
   579                           ; #config settings
   580                           
   581                           	psect	cinit
   582  006ADC                     __pcinit:
   583                           	callstack 0
   584  006ADC                     start_initialization:
   585                           	callstack 0
   586  006ADC                     __initialization:
   587                           	callstack 0
   588                           
   589                           ; Initialize objects allocated to BANK1 (32 bytes)
   590                           ; load TBLPTR registers with __pidataBANK1
   591  006ADC  0E3E               	movlw	low __pidataBANK1
   592  006ADE  6EF6               	movwf	tblptrl,c
   593  006AE0  0E65               	movlw	high __pidataBANK1
   594  006AE2  6EF7               	movwf	tblptrh,c
   595  006AE4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   596  006AE6  6EF8               	movwf	tblptru,c
   597  006AE8  EE01  F0CF         	lfsr	0,__pdataBANK1
   598  006AEC  EE10 F020          	lfsr	1,32
   599  006AF0                     copy_data0:
   600  006AF0  0009               	tblrd		*+
   601  006AF2  CFF5 FFEE          	movff	tablat,postinc0
   602  006AF6  50E5               	movf	postdec1,w,c
   603  006AF8  50E1               	movf	fsr1l,w,c
   604  006AFA  E1FA               	bnz	copy_data0
   605                           
   606                           ; Initialize objects allocated to BANK0 (19 bytes)
   607                           ; load TBLPTR registers with __pidataBANK0
   608  006AFC  0EEA               	movlw	low __pidataBANK0
   609  006AFE  6EF6               	movwf	tblptrl,c
   610  006B00  0E3F               	movlw	high __pidataBANK0
   611  006B02  6EF7               	movwf	tblptrh,c
   612  006B04  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   613  006B06  6EF8               	movwf	tblptru,c
   614  006B08  EE00  F0DE         	lfsr	0,__pdataBANK0
   615  006B0C  EE10 F013          	lfsr	1,19
   616  006B10                     copy_data1:
   617  006B10  0009               	tblrd		*+
   618  006B12  CFF5 FFEE          	movff	tablat,postinc0
   619  006B16  50E5               	movf	postdec1,w,c
   620  006B18  50E1               	movf	fsr1l,w,c
   621  006B1A  E1FA               	bnz	copy_data1
   622                           
   623                           ; Clear objects allocated to BANK1 (44 bytes)
   624  006B1C  EE01  F0A3         	lfsr	0,__pbssBANK1
   625  006B20  0E2C               	movlw	44
   626  006B22                     clear_0:
   627  006B22  6AEE               	clrf	postinc0,c
   628  006B24  06E8               	decf	wreg,f,c
   629  006B26  E1FD               	bnz	clear_0
   630                           
   631                           ; Clear objects allocated to BANK0 (56 bytes)
   632  006B28  EE00  F080         	lfsr	0,__pbssBANK0
   633  006B2C  0E38               	movlw	56
   634  006B2E                     clear_1:
   635  006B2E  6AEE               	clrf	postinc0,c
   636  006B30  06E8               	decf	wreg,f,c
   637  006B32  E1FD               	bnz	clear_1
   638  006B34                     end_of_initialization:
   639                           	callstack 0
   640  006B34                     __end_of__initialization:
   641                           	callstack 0
   642  006B34  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   643  006B36  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   644  006B38  0E00               	movlw	low (__Lmediumconst shr (0+16))
   645  006B3A  6EF8               	movwf	tblptru,c
   646  006B3C  0100               	movlb	0
   647  006B3E  EF31  F00A         	goto	_main	;jump to C main() function
   648                           
   649                           	psect	bssBANK0
   650  000080                     __pbssBANK0:
   651                           	callstack 0
   652  000080                     roundf@F525:
   653                           	callstack 0
   654  000080                     	ds	4
   655  000084                     _nout:
   656                           	callstack 0
   657  000084                     	ds	2
   658  000086                     _width:
   659                           	callstack 0
   660  000086                     	ds	2
   661  000088                     _prec:
   662                           	callstack 0
   663  000088                     	ds	2
   664  00008A                     _flags:
   665                           	callstack 0
   666  00008A                     	ds	2
   667  00008C                     _errno:
   668                           	callstack 0
   669  00008C                     	ds	2
   670  00008E                     _temperature_scaled:
   671                           	callstack 0
   672  00008E                     	ds	2
   673  000090                     _temperature_int:
   674                           	callstack 0
   675  000090                     	ds	2
   676  000092                     _mix_step_counter:
   677                           	callstack 0
   678  000092                     	ds	2
   679  000094                     _mix_direction:
   680                           	callstack 0
   681  000094                     	ds	2
   682  000096                     _mix_current_step:
   683                           	callstack 0
   684  000096                     	ds	2
   685  000098                     _dbuf:
   686                           	callstack 0
   687  000098                     	ds	32
   688                           
   689                           	psect	dataBANK0
   690  0000DE                     __pdataBANK0:
   691                           	callstack 0
   692  0000DE                     stoa@F1152:
   693                           	callstack 0
   694  0000DE                     	ds	7
   695  0000E5                     	ds	4
   696  0000E9                     	ds	4
   697  0000ED                     _tmr2_prescaler:
   698                           	callstack 0
   699  0000ED                     	ds	4
   700                           
   701                           	psect	bssBANK1
   702  0001A3                     __pbssBANK1:
   703                           	callstack 0
   704  0001A3                     _move_to_trash:
   705                           	callstack 0
   706  0001A3                     	ds	2
   707  0001A5                     _trash_counter:
   708                           	callstack 0
   709  0001A5                     	ds	2
   710  0001A7                     _end_effector_homed:
   711                           	callstack 0
   712  0001A7                     	ds	2
   713  0001A9                     _joint_homed:
   714                           	callstack 0
   715  0001A9                     	ds	2
   716  0001AB                     _mix_counter:
   717                           	callstack 0
   718  0001AB                     	ds	2
   719  0001AD                     _timer_done:
   720                           	callstack 0
   721  0001AD                     	ds	1
   722  0001AE                     _read_new_char:
   723                           	callstack 0
   724  0001AE                     	ds	1
   725  0001AF                     _idle_msg_sent:
   726                           	callstack 0
   727  0001AF                     	ds	1
   728  0001B0                     _state_changed:
   729                           	callstack 0
   730  0001B0                     	ds	1
   731  0001B1                     _end_effector_stepper:
   732                           	callstack 0
   733  0001B1                     	ds	14
   734  0001BF                     _joint_stepper:
   735                           	callstack 0
   736  0001BF                     	ds	14
   737  0001CD                     _state:
   738                           	callstack 0
   739  0001CD                     	ds	2
   740                           
   741                           	psect	dataBANK1
   742  0001CF                     __pdataBANK1:
   743                           	callstack 0
   744  0001CF                     _state_msgs:
   745                           	callstack 0
   746  0001CF                     	ds	16
   747  0001DF                     _hex_end_effector_values:
   748                           	callstack 0
   749  0001DF                     	ds	8
   750  0001E7                     _hex_joint_values:
   751                           	callstack 0
   752  0001E7                     	ds	8
   753                           
   754                           	psect	cstackBANK1
   755  000100                     __pcstackBANK1:
   756                           	callstack 0
   757  000100                     main@greet_str:
   758                           	callstack 0
   759                           
   760                           ; 160 bytes @ 0x0
   761  000100                     	ds	160
   762  0001A0                     main@current_temp:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0xA0
   766  0001A0                     	ds	2
   767  0001A2                     main@rx_char:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0xA2
   771  0001A2                     	ds	1
   772                           
   773                           	psect	cstackBANK0
   774  0000B8                     __pcstackBANK0:
   775                           	callstack 0
   776  0000B8                     _vsnprintf$1550:
   777                           	callstack 0
   778  0000B8                     _roundf$2133:
   779                           	callstack 0
   780                           
   781                           ; 4 bytes @ 0x0
   782  0000B8                     	ds	2
   783  0000BA                     vsnprintf@cnt:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x2
   787  0000BA                     	ds	2
   788  0000BC                     roundf@e:
   789                           	callstack 0
   790  0000BC                     vsnprintf@f:
   791                           	callstack 0
   792                           
   793                           ; 6 bytes @ 0x4
   794  0000BC                     	ds	2
   795  0000BE                     _roundf$2132:
   796                           	callstack 0
   797                           
   798                           ; 4 bytes @ 0x6
   799  0000BE                     	ds	4
   800  0000C2                     ?_snprintf:
   801                           	callstack 0
   802  0000C2                     snprintf@s:
   803                           	callstack 0
   804  0000C2                     roundf@u:
   805                           	callstack 0
   806                           
   807                           ; 4 bytes @ 0xA
   808  0000C2                     	ds	2
   809  0000C4                     snprintf@n:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0xC
   813  0000C4                     	ds	2
   814  0000C6                     snprintf@fmt:
   815                           	callstack 0
   816  0000C6                     roundf@y:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0xE
   820  0000C6                     	ds	4
   821  0000CA                     ?___fltol:
   822                           	callstack 0
   823  0000CA                     ___fltol@f1:
   824                           	callstack 0
   825                           
   826                           ; 4 bytes @ 0x12
   827  0000CA                     	ds	2
   828  0000CC                     snprintf@ap:
   829                           	callstack 0
   830                           
   831                           ; 2 bytes @ 0x14
   832  0000CC                     	ds	2
   833  0000CE                     ??___fltol:
   834                           
   835                           ; 1 bytes @ 0x16
   836  0000CE                     	ds	4
   837  0000D2                     ___fltol@sign1:
   838                           	callstack 0
   839                           
   840                           ; 1 bytes @ 0x1A
   841  0000D2                     	ds	1
   842  0000D3                     ___fltol@exp1:
   843                           	callstack 0
   844                           
   845                           ; 1 bytes @ 0x1B
   846  0000D3                     	ds	1
   847  0000D4                     ?_get_temperature:
   848                           	callstack 0
   849  0000D4                     update_pwm_duty_ccp1@time_up:
   850                           	callstack 0
   851  0000D4                     _init_timer_2$2131:
   852                           	callstack 0
   853                           
   854                           ; 4 bytes @ 0x1C
   855  0000D4                     	ds	2
   856  0000D6                     ?_check_temperature:
   857                           	callstack 0
   858  0000D6                     check_temperature@temp_to_be_checked:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x1E
   862  0000D6                     	ds	2
   863  0000D8                     ??_update_pwm_duty_ccp1:
   864  0000D8                     check_temperature@grad:
   865                           	callstack 0
   866                           
   867                           ; 4 bytes @ 0x20
   868  0000D8                     	ds	2
   869  0000DA                     update_pwm_duty_ccp1@new_duty:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0x22
   873  0000DA                     	ds	2
   874  0000DC                     update_pwm_duty_ccp1@lsbs_duty:
   875                           	callstack 0
   876                           
   877                           ; 1 bytes @ 0x24
   878  0000DC                     	ds	1
   879  0000DD                     ??_main:
   880                           
   881                           ; 1 bytes @ 0x25
   882  0000DD                     	ds	1
   883                           
   884                           	psect	cstackCOMRAM
   885  000001                     __pcstackCOMRAM:
   886                           	callstack 0
   887  000001                     ?_strlen:
   888                           	callstack 0
   889  000001                     ?_isupper:
   890                           	callstack 0
   891  000001                     ?_isalpha:
   892                           	callstack 0
   893  000001                     ?_isdigit:
   894                           	callstack 0
   895  000001                     ?_strncmp:
   896                           	callstack 0
   897  000001                     ?_isspace:
   898                           	callstack 0
   899  000001                     ?_islower:
   900                           	callstack 0
   901  000001                     ?___wmul:
   902                           	callstack 0
   903  000001                     ?___flneg:
   904                           	callstack 0
   905  000001                     ?___aodiv:
   906                           	callstack 0
   907  000001                     ?___aomod:
   908                           	callstack 0
   909  000001                     ?___lodiv:
   910                           	callstack 0
   911  000001                     ?___lomod:
   912                           	callstack 0
   913  000001                     serial_tx_char@val:
   914                           	callstack 0
   915  000001                     get_reg_value@rx_char:
   916                           	callstack 0
   917  000001                     lcd_wr@val:
   918                           	callstack 0
   919  000001                     state_translator_micro_to_fpga@state:
   920                           	callstack 0
   921  000001                     init_stepper@stepper_motor:
   922                           	callstack 0
   923  000001                     turn_on_current_coil@stepper_motor:
   924                           	callstack 0
   925  000001                     update_current_coil@stepper_motor:
   926                           	callstack 0
   927  000001                     change_direction@stepper_motor:
   928                           	callstack 0
   929  000001                     ___wmul@multiplier:
   930                           	callstack 0
   931  000001                     isalpha@c:
   932                           	callstack 0
   933  000001                     isdigit@c:
   934                           	callstack 0
   935  000001                     isspace@c:
   936                           	callstack 0
   937  000001                     isupper@c:
   938                           	callstack 0
   939  000001                     fputc@c:
   940                           	callstack 0
   941  000001                     strlen@s:
   942                           	callstack 0
   943  000001                     strncmp@_l:
   944                           	callstack 0
   945  000001                     islower@c:
   946                           	callstack 0
   947  000001                     ___flge@ff1:
   948                           	callstack 0
   949  000001                     ___flneg@f1:
   950                           	callstack 0
   951  000001                     ___aodiv@dividend:
   952                           	callstack 0
   953  000001                     ___aomod@dividend:
   954                           	callstack 0
   955  000001                     ___lodiv@dividend:
   956                           	callstack 0
   957  000001                     ___lomod@dividend:
   958                           	callstack 0
   959                           
   960                           ; 8 bytes @ 0x0
   961  000001                     	ds	1
   962  000002                     lcd_cmd@val:
   963                           	callstack 0
   964  000002                     lcd_dat@val:
   965                           	callstack 0
   966                           
   967                           ; 1 bytes @ 0x1
   968  000002                     	ds	1
   969  000003                     ??_lcd_init:
   970  000003                     ??_change_direction:
   971  000003                     ??_isupper:
   972  000003                     ??_isalpha:
   973  000003                     ??_isdigit:
   974  000003                     ??_isspace:
   975  000003                     ??_islower:
   976  000003                     ??_turn_on_current_coil:
   977  000003                     ??_update_current_coil:
   978  000003                     lcd_str@str:
   979                           	callstack 0
   980  000003                     state_translator_fpga_to_micro@state:
   981                           	callstack 0
   982  000003                     init_stepper@current_coil:
   983                           	callstack 0
   984  000003                     ___wmul@multiplicand:
   985                           	callstack 0
   986  000003                     fputc@fp:
   987                           	callstack 0
   988  000003                     strlen@a:
   989                           	callstack 0
   990  000003                     strncmp@_r:
   991                           	callstack 0
   992                           
   993                           ; 2 bytes @ 0x2
   994  000003                     	ds	2
   995  000005                     ??_lcd_str:
   996  000005                     ??_fputc:
   997  000005                     state_translator_fpga_to_micro@state_machine_code:
   998                           	callstack 0
   999  000005                     state_translator_micro_to_fpga@state_machine_code:
  1000                           	callstack 0
  1001  000005                     init_stepper@step_counter:
  1002                           	callstack 0
  1003  000005                     ___wmul@product:
  1004                           	callstack 0
  1005  000005                     strncmp@n:
  1006                           	callstack 0
  1007  000005                     ___flge@ff2:
  1008                           	callstack 0
  1009                           
  1010                           ; 4 bytes @ 0x4
  1011  000005                     	ds	2
  1012  000007                     ??_strncmp:
  1013  000007                     ?_reach_goal:
  1014                           	callstack 0
  1015  000007                     ?_toupper:
  1016                           	callstack 0
  1017  000007                     lcd_str@i:
  1018                           	callstack 0
  1019  000007                     _isspace$1834:
  1020                           	callstack 0
  1021  000007                     init_stepper@direction:
  1022                           	callstack 0
  1023  000007                     reach_goal@stepper_motor:
  1024                           	callstack 0
  1025  000007                     toupper@c:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x6
  1029  000007                     	ds	1
  1030  000008                     ?_atoi:
  1031                           	callstack 0
  1032  000008                     atoi@s:
  1033                           	callstack 0
  1034  000008                     strncmp@l:
  1035                           	callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x7
  1038  000008                     	ds	1
  1039  000009                     ??_toupper:
  1040  000009                     ??___flge:
  1041  000009                     init_stepper@hex_coil_register_values:
  1042                           	callstack 0
  1043  000009                     reach_goal@goal_to_reach:
  1044                           	callstack 0
  1045  000009                     ___aodiv@divisor:
  1046                           	callstack 0
  1047  000009                     ___aomod@divisor:
  1048                           	callstack 0
  1049  000009                     ___lodiv@divisor:
  1050                           	callstack 0
  1051  000009                     ___lomod@divisor:
  1052                           	callstack 0
  1053                           
  1054                           ; 8 bytes @ 0x8
  1055  000009                     	ds	1
  1056  00000A                     ??_atoi:
  1057  00000A                     ?_stoa:
  1058                           	callstack 0
  1059  00000A                     stoa@fp:
  1060                           	callstack 0
  1061  00000A                     fputs@s:
  1062                           	callstack 0
  1063  00000A                     strncmp@r:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x9
  1067  00000A                     	ds	1
  1068  00000B                     ??_init_stepper:
  1069  00000B                     ??_reach_goal:
  1070                           
  1071                           ; 1 bytes @ 0xA
  1072  00000B                     	ds	1
  1073  00000C                     stoa@s:
  1074                           	callstack 0
  1075  00000C                     fputs@fp:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0xB
  1079  00000C                     	ds	1
  1080  00000D                     _toupper$1894:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0xC
  1084  00000D                     	ds	1
  1085  00000E                     ??_stoa:
  1086  00000E                     fputs@c:
  1087                           	callstack 0
  1088  00000E                     atoi@neg:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0xD
  1092  00000E                     	ds	1
  1093  00000F                     init_stepper@i:
  1094                           	callstack 0
  1095  00000F                     fputs@i:
  1096                           	callstack 0
  1097  00000F                     stoa@nuls:
  1098                           	callstack 0
  1099                           
  1100                           ; 7 bytes @ 0xE
  1101  00000F                     	ds	1
  1102  000010                     _atoi$1806:
  1103                           	callstack 0
  1104                           
  1105                           ; 2 bytes @ 0xF
  1106  000010                     	ds	1
  1107  000011                     ?_pad:
  1108                           	callstack 0
  1109  000011                     ___aodiv@counter:
  1110                           	callstack 0
  1111  000011                     ___aomod@counter:
  1112                           	callstack 0
  1113  000011                     ___lomod@counter:
  1114                           	callstack 0
  1115  000011                     pad@fp:
  1116                           	callstack 0
  1117  000011                     ___lodiv@quotient:
  1118                           	callstack 0
  1119                           
  1120                           ; 8 bytes @ 0x10
  1121  000011                     	ds	1
  1122  000012                     ___aodiv@sign:
  1123                           	callstack 0
  1124  000012                     ___aomod@sign:
  1125                           	callstack 0
  1126  000012                     _atoi$1808:
  1127                           	callstack 0
  1128                           
  1129                           ; 2 bytes @ 0x11
  1130  000012                     	ds	1
  1131  000013                     ?_abs:
  1132                           	callstack 0
  1133  000013                     abs@a:
  1134                           	callstack 0
  1135  000013                     pad@buf:
  1136                           	callstack 0
  1137  000013                     ___aodiv@quotient:
  1138                           	callstack 0
  1139                           
  1140                           ; 8 bytes @ 0x12
  1141  000013                     	ds	1
  1142  000014                     _atoi$1807:
  1143                           	callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x13
  1146  000014                     	ds	1
  1147  000015                     ??_abs:
  1148  000015                     pad@p:
  1149                           	callstack 0
  1150  000015                     atoi@n:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x14
  1154  000015                     	ds	1
  1155  000016                     stoa@i:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x15
  1159  000016                     	ds	1
  1160  000017                     ??_pad:
  1161  000017                     ?___awdiv:
  1162                           	callstack 0
  1163  000017                     ___awdiv@dividend:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x16
  1167  000017                     	ds	1
  1168  000018                     pad@i:
  1169                           	callstack 0
  1170  000018                     stoa@w:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x17
  1174  000018                     	ds	1
  1175  000019                     ___lodiv@counter:
  1176                           	callstack 0
  1177  000019                     ___awdiv@divisor:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x18
  1181  000019                     	ds	1
  1182  00001A                     pad@w:
  1183                           	callstack 0
  1184  00001A                     stoa@cp:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x19
  1188  00001A                     	ds	1
  1189  00001B                     ___awdiv@counter:
  1190                           	callstack 0
  1191                           
  1192                           ; 1 bytes @ 0x1A
  1193  00001B                     	ds	1
  1194  00001C                     ?_ctoa:
  1195                           	callstack 0
  1196  00001C                     ?_dtoa:
  1197                           	callstack 0
  1198  00001C                     ?_otoa:
  1199                           	callstack 0
  1200  00001C                     ?_utoa:
  1201                           	callstack 0
  1202  00001C                     ?_xtoa:
  1203                           	callstack 0
  1204  00001C                     ___awdiv@sign:
  1205                           	callstack 0
  1206  00001C                     ctoa@fp:
  1207                           	callstack 0
  1208  00001C                     dtoa@fp:
  1209                           	callstack 0
  1210  00001C                     otoa@fp:
  1211                           	callstack 0
  1212  00001C                     stoa@p:
  1213                           	callstack 0
  1214  00001C                     utoa@fp:
  1215                           	callstack 0
  1216  00001C                     xtoa@fp:
  1217                           	callstack 0
  1218                           
  1219                           ; 2 bytes @ 0x1B
  1220  00001C                     	ds	1
  1221  00001D                     ___awdiv@quotient:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x1C
  1225  00001D                     	ds	1
  1226  00001E                     ctoa@c:
  1227                           	callstack 0
  1228  00001E                     stoa@l:
  1229                           	callstack 0
  1230  00001E                     dtoa@d:
  1231                           	callstack 0
  1232  00001E                     otoa@d:
  1233                           	callstack 0
  1234  00001E                     utoa@d:
  1235                           	callstack 0
  1236  00001E                     xtoa@d:
  1237                           	callstack 0
  1238                           
  1239                           ; 8 bytes @ 0x1D
  1240  00001E                     	ds	1
  1241  00001F                     ?___xxtofl:
  1242                           	callstack 0
  1243  00001F                     ctoa@w:
  1244                           	callstack 0
  1245  00001F                     ___xxtofl@val:
  1246                           	callstack 0
  1247                           
  1248                           ; 4 bytes @ 0x1E
  1249  00001F                     	ds	4
  1250  000023                     ??___xxtofl:
  1251                           
  1252                           ; 1 bytes @ 0x22
  1253  000023                     	ds	3
  1254  000026                     ??_dtoa:
  1255  000026                     ??_otoa:
  1256  000026                     ??_utoa:
  1257  000026                     xtoa@x:
  1258                           	callstack 0
  1259                           
  1260                           ; 1 bytes @ 0x25
  1261  000026                     	ds	1
  1262  000027                     ??_xtoa:
  1263  000027                     ___xxtofl@sign:
  1264                           	callstack 0
  1265                           
  1266                           ; 1 bytes @ 0x26
  1267  000027                     	ds	1
  1268  000028                     ___xxtofl@exp:
  1269                           	callstack 0
  1270                           
  1271                           ; 1 bytes @ 0x27
  1272  000028                     	ds	1
  1273  000029                     ___xxtofl@arg:
  1274                           	callstack 0
  1275                           
  1276                           ; 4 bytes @ 0x28
  1277  000029                     	ds	4
  1278  00002D                     ?___flmul:
  1279                           	callstack 0
  1280  00002D                     ___flmul@b:
  1281                           	callstack 0
  1282                           
  1283                           ; 4 bytes @ 0x2C
  1284  00002D                     	ds	1
  1285  00002E                     _dtoa$1632:
  1286                           	callstack 0
  1287  00002E                     otoa@p:
  1288                           	callstack 0
  1289  00002E                     utoa@p:
  1290                           	callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x2D
  1293  00002E                     	ds	1
  1294  00002F                     _xtoa$1668:
  1295                           	callstack 0
  1296                           
  1297                           ; 2 bytes @ 0x2E
  1298  00002F                     	ds	1
  1299  000030                     dtoa@p:
  1300                           	callstack 0
  1301  000030                     otoa@t:
  1302                           	callstack 0
  1303  000030                     utoa@w:
  1304                           	callstack 0
  1305                           
  1306                           ; 2 bytes @ 0x2F
  1307  000030                     	ds	1
  1308  000031                     _xtoa$1669:
  1309                           	callstack 0
  1310  000031                     ___flmul@a:
  1311                           	callstack 0
  1312                           
  1313                           ; 4 bytes @ 0x30
  1314  000031                     	ds	1
  1315  000032                     dtoa@w:
  1316                           	callstack 0
  1317  000032                     otoa@w:
  1318                           	callstack 0
  1319  000032                     utoa@n:
  1320                           	callstack 0
  1321                           
  1322                           ; 8 bytes @ 0x31
  1323  000032                     	ds	1
  1324  000033                     xtoa@p:
  1325                           	callstack 0
  1326                           
  1327                           ; 2 bytes @ 0x32
  1328  000033                     	ds	1
  1329  000034                     dtoa@s:
  1330                           	callstack 0
  1331  000034                     otoa@n:
  1332                           	callstack 0
  1333                           
  1334                           ; 8 bytes @ 0x33
  1335  000034                     	ds	1
  1336  000035                     ??___flmul:
  1337  000035                     xtoa@w:
  1338                           	callstack 0
  1339                           
  1340                           ; 2 bytes @ 0x34
  1341  000035                     	ds	1
  1342  000036                     dtoa@n:
  1343                           	callstack 0
  1344                           
  1345                           ; 8 bytes @ 0x35
  1346  000036                     	ds	1
  1347  000037                     xtoa@n:
  1348                           	callstack 0
  1349                           
  1350                           ; 8 bytes @ 0x36
  1351  000037                     	ds	2
  1352  000039                     ___flmul@sign:
  1353                           	callstack 0
  1354                           
  1355                           ; 1 bytes @ 0x38
  1356  000039                     	ds	1
  1357  00003A                     utoa@i:
  1358                           	callstack 0
  1359  00003A                     ___flmul@grs:
  1360                           	callstack 0
  1361                           
  1362                           ; 4 bytes @ 0x39
  1363  00003A                     	ds	2
  1364  00003C                     otoa@i:
  1365                           	callstack 0
  1366                           
  1367                           ; 2 bytes @ 0x3B
  1368  00003C                     	ds	2
  1369  00003E                     ___flmul@aexp:
  1370                           	callstack 0
  1371  00003E                     dtoa@i:
  1372                           	callstack 0
  1373                           
  1374                           ; 2 bytes @ 0x3D
  1375  00003E                     	ds	1
  1376  00003F                     ___flmul@bexp:
  1377                           	callstack 0
  1378  00003F                     xtoa@i:
  1379                           	callstack 0
  1380                           
  1381                           ; 2 bytes @ 0x3E
  1382  00003F                     	ds	1
  1383  000040                     ___flmul@prod:
  1384                           	callstack 0
  1385                           
  1386                           ; 4 bytes @ 0x3F
  1387  000040                     	ds	1
  1388  000041                     xtoa@c:
  1389                           	callstack 0
  1390                           
  1391                           ; 2 bytes @ 0x40
  1392  000041                     	ds	2
  1393  000043                     ?_vfpfcnvrt:
  1394                           	callstack 0
  1395  000043                     vfpfcnvrt@fp:
  1396                           	callstack 0
  1397                           
  1398                           ; 2 bytes @ 0x42
  1399  000043                     	ds	1
  1400  000044                     ___flmul@temp:
  1401                           	callstack 0
  1402                           
  1403                           ; 2 bytes @ 0x43
  1404  000044                     	ds	1
  1405  000045                     vfpfcnvrt@fmt:
  1406                           	callstack 0
  1407                           
  1408                           ; 2 bytes @ 0x44
  1409  000045                     	ds	1
  1410  000046                     ?___fldiv:
  1411                           	callstack 0
  1412  000046                     ___fldiv@b:
  1413                           	callstack 0
  1414                           
  1415                           ; 4 bytes @ 0x45
  1416  000046                     	ds	1
  1417  000047                     vfpfcnvrt@ap:
  1418                           	callstack 0
  1419                           
  1420                           ; 2 bytes @ 0x46
  1421  000047                     	ds	2
  1422  000049                     ??_vfpfcnvrt:
  1423                           
  1424                           ; 1 bytes @ 0x48
  1425  000049                     	ds	1
  1426  00004A                     ___fldiv@a:
  1427                           	callstack 0
  1428                           
  1429                           ; 4 bytes @ 0x49
  1430  00004A                     	ds	3
  1431  00004D                     vfpfcnvrt@cp:
  1432                           	callstack 0
  1433                           
  1434                           ; 2 bytes @ 0x4C
  1435  00004D                     	ds	1
  1436  00004E                     ??___fldiv:
  1437                           
  1438                           ; 1 bytes @ 0x4D
  1439  00004E                     	ds	1
  1440  00004F                     vfpfcnvrt@done:
  1441                           	callstack 0
  1442                           
  1443                           ; 2 bytes @ 0x4E
  1444  00004F                     	ds	2
  1445  000051                     _vfpfcnvrt$1683:
  1446                           	callstack 0
  1447                           
  1448                           ; 2 bytes @ 0x50
  1449  000051                     	ds	1
  1450  000052                     ___fldiv@rem:
  1451                           	callstack 0
  1452                           
  1453                           ; 4 bytes @ 0x51
  1454  000052                     	ds	1
  1455  000053                     _vfpfcnvrt$1684:
  1456                           	callstack 0
  1457                           
  1458                           ; 2 bytes @ 0x52
  1459  000053                     	ds	2
  1460  000055                     vfpfcnvrt@ll:
  1461                           	callstack 0
  1462                           
  1463                           ; 8 bytes @ 0x54
  1464  000055                     	ds	1
  1465  000056                     ___fldiv@sign:
  1466                           	callstack 0
  1467                           
  1468                           ; 1 bytes @ 0x55
  1469  000056                     	ds	1
  1470  000057                     ___fldiv@new_exp:
  1471                           	callstack 0
  1472                           
  1473                           ; 2 bytes @ 0x56
  1474  000057                     	ds	2
  1475  000059                     ___fldiv@grs:
  1476                           	callstack 0
  1477                           
  1478                           ; 4 bytes @ 0x58
  1479  000059                     	ds	4
  1480  00005D                     ___fldiv@bexp:
  1481                           	callstack 0
  1482  00005D                     vfpfcnvrt@vp:
  1483                           	callstack 0
  1484                           
  1485                           ; 2 bytes @ 0x5C
  1486  00005D                     	ds	1
  1487  00005E                     ___fldiv@aexp:
  1488                           	callstack 0
  1489                           
  1490                           ; 1 bytes @ 0x5D
  1491  00005E                     	ds	1
  1492  00005F                     ?___fladd:
  1493                           	callstack 0
  1494  00005F                     vfpfcnvrt@c:
  1495                           	callstack 0
  1496  00005F                     ___fladd@b:
  1497                           	callstack 0
  1498                           
  1499                           ; 4 bytes @ 0x5E
  1500  00005F                     	ds	1
  1501  000060                     vfpfcnvrt@llu:
  1502                           	callstack 0
  1503                           
  1504                           ; 8 bytes @ 0x5F
  1505  000060                     	ds	3
  1506  000063                     ___fladd@a:
  1507                           	callstack 0
  1508                           
  1509                           ; 4 bytes @ 0x62
  1510  000063                     	ds	4
  1511  000067                     ??___fladd:
  1512                           
  1513                           ; 1 bytes @ 0x66
  1514  000067                     	ds	1
  1515  000068                     ?_vfprintf:
  1516                           	callstack 0
  1517  000068                     vfprintf@fp:
  1518                           	callstack 0
  1519                           
  1520                           ; 2 bytes @ 0x67
  1521  000068                     	ds	2
  1522  00006A                     vfprintf@fmt:
  1523                           	callstack 0
  1524                           
  1525                           ; 2 bytes @ 0x69
  1526  00006A                     	ds	1
  1527  00006B                     ___fladd@signs:
  1528                           	callstack 0
  1529                           
  1530                           ; 1 bytes @ 0x6A
  1531  00006B                     	ds	1
  1532  00006C                     ___fladd@aexp:
  1533                           	callstack 0
  1534  00006C                     vfprintf@ap:
  1535                           	callstack 0
  1536                           
  1537                           ; 2 bytes @ 0x6B
  1538  00006C                     	ds	1
  1539  00006D                     ___fladd@bexp:
  1540                           	callstack 0
  1541                           
  1542                           ; 1 bytes @ 0x6C
  1543  00006D                     	ds	1
  1544  00006E                     ___fladd@grs:
  1545                           	callstack 0
  1546  00006E                     vfprintf@cfmt:
  1547                           	callstack 0
  1548                           
  1549                           ; 2 bytes @ 0x6D
  1550  00006E                     	ds	1
  1551  00006F                     ?___flsub:
  1552                           	callstack 0
  1553  00006F                     ___flsub@b:
  1554                           	callstack 0
  1555                           
  1556                           ; 4 bytes @ 0x6E
  1557  00006F                     	ds	1
  1558  000070                     ?_vsnprintf:
  1559                           	callstack 0
  1560  000070                     vsnprintf@s:
  1561                           	callstack 0
  1562                           
  1563                           ; 2 bytes @ 0x6F
  1564  000070                     	ds	2
  1565  000072                     vsnprintf@n:
  1566                           	callstack 0
  1567                           
  1568                           ; 2 bytes @ 0x71
  1569  000072                     	ds	1
  1570  000073                     ___flsub@a:
  1571                           	callstack 0
  1572                           
  1573                           ; 4 bytes @ 0x72
  1574  000073                     	ds	1
  1575  000074                     vsnprintf@fmt:
  1576                           	callstack 0
  1577                           
  1578                           ; 2 bytes @ 0x73
  1579  000074                     	ds	2
  1580  000076                     vsnprintf@ap:
  1581                           	callstack 0
  1582                           
  1583                           ; 2 bytes @ 0x75
  1584  000076                     	ds	1
  1585  000077                     ?_roundf:
  1586                           	callstack 0
  1587  000077                     roundf@x:
  1588                           	callstack 0
  1589                           
  1590                           ; 4 bytes @ 0x76
  1591  000077                     	ds	1
  1592  000078                     ??_vsnprintf:
  1593                           
  1594                           ; 1 bytes @ 0x77
  1595  000078                     	ds	3
  1596  00007B                     ??_roundf:
  1597                           
  1598                           ; 1 bytes @ 0x7A
  1599  00007B                     	ds	1
  1600  00007C                     
  1601                           ; 1 bytes @ 0x7B
  1602  00007C                     	ds	3
  1603  00007F                     
  1604                           ; 1 bytes @ 0x7E
  1605 ;;
  1606 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1607 ;;
  1608 ;; *************** function _main *****************
  1609 ;; Defined at:
  1610 ;;		line 54 in file "main.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;		None
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  current_temp    2  160[BANK1 ] int 
  1615 ;;  greet_str     160    0[BANK1 ] PTR const unsigned char 
  1616 ;;		 -> ?_snprintf(2), STR_8(50), STR_7(9), STR_6(7), 
  1617 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  1618 ;;		 -> STR_1(49), 
  1619 ;;  rx_char         1  162[BANK1 ] unsigned char 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1629 ;;      Params:         0       0       0       0       0       0       0
  1630 ;;      Locals:         0       0     163       0       0       0       0
  1631 ;;      Temps:          0       1       0       0       0       0       0
  1632 ;;      Totals:         0       1     163       0       0       0       0
  1633 ;;Total ram usage:      164 bytes
  1634 ;; Hardware stack levels required when called:   10
  1635 ;; This function calls:
  1636 ;;		___wmul
  1637 ;;		_change_direction
  1638 ;;		_check_temperature
  1639 ;;		_configure_analog_digital_conversion
  1640 ;;		_get_reg_value
  1641 ;;		_get_temperature
  1642 ;;		_init_PORTS
  1643 ;;		_init_USART
  1644 ;;		_init_ccp1
  1645 ;;		_init_interrupts
  1646 ;;		_init_stepper
  1647 ;;		_init_timer_0
  1648 ;;		_init_timer_2
  1649 ;;		_lcd_cmd
  1650 ;;		_lcd_init
  1651 ;;		_lcd_str
  1652 ;;		_reach_goal
  1653 ;;		_serial_tx_char
  1654 ;;		_snprintf
  1655 ;;		_state_translator_fpga_to_micro
  1656 ;;		_state_translator_micro_to_fpga
  1657 ;;		_wait_for_zero
  1658 ;; This function is called by:
  1659 ;;		Startup code after reset
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text0
  1664  001462                     __ptext0:
  1665                           	callstack 0
  1666  001462                     _main:
  1667                           	callstack 21
  1668  001462  FFFF               	dw	65535	; assembler added errata NOP
  1669                           
  1670                           ;main.c: 56:     init_PORTS();
  1671  001464  EC39  F033         	call	_init_PORTS	;wreg free
  1672  001468                     
  1673                           ;main.c: 57:     init_USART();
  1674  001468  ECC3  F033         	call	_init_USART	;wreg free
  1675  00146C                     
  1676                           ;main.c: 58:     init_timer_2();
  1677  00146C  EC08  F038         	call	_init_timer_2	;wreg free
  1678  001470                     
  1679                           ;main.c: 59:     init_ccp1();
  1680  001470  ECC0  F032         	call	_init_ccp1	;wreg free
  1681  001474                     
  1682                           ;main.c: 60:     init_interrupts();
  1683  001474  EC7B  F032         	call	_init_interrupts	;wreg free
  1684  001478                     
  1685                           ;main.c: 61:     configure_analog_digital_conversion();
  1686  001478  ECD2  F032         	call	_configure_analog_digital_conversion	;wreg free
  1687  00147C                     
  1688                           ;main.c: 62:     init_stepper(&joint_stepper, 0, 0, 1, hex_joint_values);
  1689  00147C  0EBF               	movlw	low _joint_stepper
  1690  00147E  6E01               	movwf	init_stepper@stepper_motor^0,c
  1691  001480  0E01               	movlw	high _joint_stepper
  1692  001482  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  1693  001484  0E00               	movlw	0
  1694  001486  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  1695  001488  0E00               	movlw	0
  1696  00148A  6E03               	movwf	init_stepper@current_coil^0,c
  1697  00148C  0E00               	movlw	0
  1698  00148E  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  1699  001490  0E00               	movlw	0
  1700  001492  6E05               	movwf	init_stepper@step_counter^0,c
  1701  001494  0E00               	movlw	0
  1702  001496  6E08               	movwf	(init_stepper@direction+1)^0,c
  1703  001498  0E01               	movlw	1
  1704  00149A  6E07               	movwf	init_stepper@direction^0,c
  1705  00149C  0EE7               	movlw	low _hex_joint_values
  1706  00149E  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  1707  0014A0  0E01               	movlw	high _hex_joint_values
  1708  0014A2  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  1709  0014A4  EC4E  F037         	call	_init_stepper	;wreg free
  1710  0014A8                     
  1711                           ;main.c: 63:     init_stepper(&end_effector_stepper, 0, 0, 1, hex_end_effector_values);
  1712  0014A8  0EB1               	movlw	low _end_effector_stepper
  1713  0014AA  6E01               	movwf	init_stepper@stepper_motor^0,c
  1714  0014AC  0E01               	movlw	high _end_effector_stepper
  1715  0014AE  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  1716  0014B0  0E00               	movlw	0
  1717  0014B2  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  1718  0014B4  0E00               	movlw	0
  1719  0014B6  6E03               	movwf	init_stepper@current_coil^0,c
  1720  0014B8  0E00               	movlw	0
  1721  0014BA  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  1722  0014BC  0E00               	movlw	0
  1723  0014BE  6E05               	movwf	init_stepper@step_counter^0,c
  1724  0014C0  0E00               	movlw	0
  1725  0014C2  6E08               	movwf	(init_stepper@direction+1)^0,c
  1726  0014C4  0E01               	movlw	1
  1727  0014C6  6E07               	movwf	init_stepper@direction^0,c
  1728  0014C8  0EDF               	movlw	low _hex_end_effector_values
  1729  0014CA  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  1730  0014CC  0E01               	movlw	high _hex_end_effector_values
  1731  0014CE  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  1732  0014D0  EC4E  F037         	call	_init_stepper	;wreg free
  1733  0014D4                     
  1734                           ;main.c: 64:     lcd_init();
  1735  0014D4  EC86  F036         	call	_lcd_init	;wreg free
  1736  0014D8                     
  1737                           ;main.c: 65:     lcd_cmd(0x0C);
  1738  0014D8  0E0C               	movlw	12
  1739  0014DA  ECFA  F032         	call	_lcd_cmd
  1740  0014DE                     
  1741                           ;main.c: 67:     lcd_cmd(0x01);
  1742  0014DE  0E01               	movlw	1
  1743  0014E0  ECFA  F032         	call	_lcd_cmd
  1744  0014E4                     
  1745                           ;main.c: 68:     lcd_cmd(0x80);
  1746  0014E4  0E80               	movlw	128
  1747  0014E6  ECFA  F032         	call	_lcd_cmd
  1748  0014EA                     
  1749                           ;main.c: 69:     lcd_str("Device has been reset");
  1750  0014EA  0E93               	movlw	low STR_9
  1751  0014EC  6E03               	movwf	lcd_str@str^0,c
  1752  0014EE  0E7F               	movlw	high STR_9
  1753  0014F0  6E04               	movwf	(lcd_str@str+1)^0,c
  1754  0014F2  ECC5  F036         	call	_lcd_str	;wreg free
  1755  0014F6                     
  1756                           ;main.c: 71:     (INTCONbits.GIE = 1);
  1757  0014F6  8EF2               	bsf	242,7,c	;volatile
  1758  0014F8                     
  1759                           ;main.c: 73:     mix_counter = 0;
  1760  0014F8  0E00               	movlw	0
  1761  0014FA  0101               	movlb	1	; () banked
  1762  0014FC  6FAC               	movwf	(_mix_counter+1)& (0+255),b
  1763  0014FE  0E00               	movlw	0
  1764  001500  6FAB               	movwf	_mix_counter& (0+255),b
  1765  001502                     l5540:
  1766  001502  FFFF               	dw	65535	; assembler added errata NOP
  1767                           
  1768                           ;main.c: 76:         if (state_changed){
  1769  001504  0101               	movlb	1	; () banked
  1770  001506  51B0               	movf	_state_changed& (0+255),w,b
  1771  001508  B4D8               	btfsc	status,2,c
  1772  00150A  EF89  F00A         	goto	u6771
  1773  00150E  EF8C  F00A         	goto	u6770
  1774  001512                     u6771:
  1775  001512  FFFF               	dw	65535	; assembler added errata NOP
  1776  001514  EFDF  F00A         	goto	l5564
  1777  001518                     u6770:
  1778  001518  FFFF               	dw	65535	; assembler added errata NOP
  1779  00151A                     
  1780                           ; BSR set to: 1
  1781                           ;main.c: 77:             const char* greet_str[80];;main.c: 78:             if (read_new
      +                          _char){
  1782  00151A  51AE               	movf	_read_new_char& (0+255),w,b
  1783  00151C  B4D8               	btfsc	status,2,c
  1784  00151E  EF93  F00A         	goto	u6781
  1785  001522  EF96  F00A         	goto	u6780
  1786  001526                     u6781:
  1787  001526  FFFF               	dw	65535	; assembler added errata NOP
  1788  001528  EFD0  F00A         	goto	l5558
  1789  00152C                     u6780:
  1790  00152C  FFFF               	dw	65535	; assembler added errata NOP
  1791  00152E                     
  1792                           ; BSR set to: 1
  1793                           ;main.c: 79:                 rx_char = get_reg_value();
  1794  00152E  EC87  F032         	call	_get_reg_value	;wreg free
  1795  001532  0101               	movlb	1	; () banked
  1796  001534  6FA2               	movwf	main@rx_char& (0+255),b
  1797  001536                     
  1798                           ; BSR set to: 1
  1799                           ;main.c: 82:                 state_translator_fpga_to_micro(rx_char, &state);
  1800  001536  0ECD               	movlw	low _state
  1801  001538  6E03               	movwf	state_translator_fpga_to_micro@state^0,c
  1802  00153A  0E01               	movlw	high _state
  1803  00153C  6E04               	movwf	(state_translator_fpga_to_micro@state+1)^0,c
  1804  00153E  51A2               	movf	main@rx_char& (0+255),w,b
  1805  001540  ECF1  F03D         	call	_state_translator_fpga_to_micro
  1806  001544                     
  1807                           ;main.c: 83:                 read_new_char = 0;
  1808  001544  0E00               	movlw	0
  1809  001546  0101               	movlb	1	; () banked
  1810  001548  6FAE               	movwf	_read_new_char& (0+255),b
  1811  00154A                     
  1812                           ; BSR set to: 1
  1813                           ;main.c: 84:                 snprintf(greet_str, sizeof(greet_str), "%s", state_msgs[sta
      +                          te]);
  1814  00154A  0E00               	movlw	low main@greet_str
  1815  00154C  0100               	movlb	0	; () banked
  1816  00154E  6FC2               	movwf	snprintf@s& (0+255),b
  1817  001550  0E01               	movlw	high main@greet_str
  1818  001552  6FC3               	movwf	(snprintf@s+1)& (0+255),b
  1819  001554  0E00               	movlw	0
  1820  001556  6FC5               	movwf	(snprintf@n+1)& (0+255),b
  1821  001558  0EA0               	movlw	160
  1822  00155A  6FC4               	movwf	snprintf@n& (0+255),b
  1823  00155C  0EFC               	movlw	low STR_10
  1824  00155E  6FC6               	movwf	snprintf@fmt& (0+255),b
  1825  001560  0E7F               	movlw	high STR_10
  1826  001562  6FC7               	movwf	(snprintf@fmt+1)& (0+255),b
  1827  001564  90D8               	bcf	status,0,c
  1828  001566  0101               	movlb	1	; () banked
  1829  001568  35CD               	rlcf	_state& (0+255),w,b
  1830  00156A  6ED9               	movwf	fsr2l,c
  1831  00156C  35CE               	rlcf	(_state+1)& (0+255),w,b
  1832  00156E  6EDA               	movwf	fsr2h,c
  1833  001570  0ECF               	movlw	low _state_msgs
  1834  001572  26D9               	addwf	fsr2l,f,c
  1835  001574  0E01               	movlw	high _state_msgs
  1836  001576  22DA               	addwfc	fsr2h,f,c
  1837  001578  CFDE F0C8          	movff	postinc2,?_snprintf+6
  1838  00157C  CFDD F0C9          	movff	postdec2,?_snprintf+7
  1839  001580  EC4F  F033         	call	_snprintf	;wreg free
  1840  001584                     
  1841                           ;main.c: 85:                 lcd_cmd(0x01);
  1842  001584  0E01               	movlw	1
  1843  001586  ECFA  F032         	call	_lcd_cmd
  1844  00158A                     
  1845                           ;main.c: 86:                 lcd_cmd(0x80);
  1846  00158A  0E80               	movlw	128
  1847  00158C  ECFA  F032         	call	_lcd_cmd
  1848  001590                     
  1849                           ;main.c: 87:                 lcd_str(greet_str);
  1850  001590  0E00               	movlw	low main@greet_str
  1851  001592  6E03               	movwf	lcd_str@str^0,c
  1852  001594  0E01               	movlw	high main@greet_str
  1853  001596  6E04               	movwf	(lcd_str@str+1)^0,c
  1854  001598  ECC5  F036         	call	_lcd_str	;wreg free
  1855                           
  1856                           ;main.c: 88:             } else {
  1857  00159C  EFD9  F00A         	goto	l5560
  1858  0015A0                     l5558:
  1859  0015A0  FFFF               	dw	65535	; assembler added errata NOP
  1860                           
  1861                           ; BSR set to: 1
  1862                           ;main.c: 89:                 serial_tx_char(state_translator_micro_to_fpga(&state));
  1863  0015A2  0ECD               	movlw	low _state
  1864  0015A4  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  1865  0015A6  0E01               	movlw	high _state
  1866  0015A8  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  1867  0015AA  EC09  F037         	call	_state_translator_micro_to_fpga	;wreg free
  1868  0015AE  EC8F  F032         	call	_serial_tx_char
  1869  0015B2                     l5560:
  1870  0015B2  FFFF               	dw	65535	; assembler added errata NOP
  1871                           
  1872                           ;main.c: 92:             state_changed = 0;
  1873  0015B4  0E00               	movlw	0
  1874  0015B6  0101               	movlb	1	; () banked
  1875  0015B8  6FB0               	movwf	_state_changed& (0+255),b
  1876  0015BA                     
  1877                           ; BSR set to: 1
  1878                           ;main.c: 93:             idle_msg_sent = 0;
  1879  0015BA  0E00               	movlw	0
  1880  0015BC  6FAF               	movwf	_idle_msg_sent& (0+255),b
  1881  0015BE                     l5564:
  1882  0015BE  FFFF               	dw	65535	; assembler added errata NOP
  1883                           
  1884                           ; BSR set to: 1
  1885                           ;main.c: 97:         if (state == 2){
  1886  0015C0  0E02               	movlw	2
  1887  0015C2  19CD               	xorwf	_state& (0+255),w,b
  1888  0015C4  11CE               	iorwf	(_state+1)& (0+255),w,b
  1889  0015C6  A4D8               	btfss	status,2,c
  1890  0015C8  EFE8  F00A         	goto	u6791
  1891  0015CC  EFEB  F00A         	goto	u6790
  1892  0015D0                     u6791:
  1893  0015D0  FFFF               	dw	65535	; assembler added errata NOP
  1894  0015D2  EF30  F00B         	goto	l137
  1895  0015D6                     u6790:
  1896  0015D6  FFFF               	dw	65535	; assembler added errata NOP
  1897  0015D8                     
  1898                           ; BSR set to: 1
  1899                           ;main.c: 98:             LATAbits.LATA1 = 1;
  1900  0015D8  8289               	bsf	137,1,c	;volatile
  1901  0015DA                     
  1902                           ; BSR set to: 1
  1903                           ;main.c: 99:             if (move_to_trash && trash_counter < 100){
  1904  0015DA  51A3               	movf	_move_to_trash& (0+255),w,b
  1905  0015DC  11A4               	iorwf	(_move_to_trash+1)& (0+255),w,b
  1906  0015DE  B4D8               	btfsc	status,2,c
  1907  0015E0  EFF4  F00A         	goto	u6801
  1908  0015E4  EFF7  F00A         	goto	u6800
  1909  0015E8                     u6801:
  1910  0015E8  FFFF               	dw	65535	; assembler added errata NOP
  1911  0015EA  EF0C  F00B         	goto	l5574
  1912  0015EE                     u6800:
  1913  0015EE  FFFF               	dw	65535	; assembler added errata NOP
  1914  0015F0                     
  1915                           ; BSR set to: 1
  1916  0015F0  BFA6               	btfsc	(_trash_counter+1)& (0+255),7,b
  1917  0015F2  EF07  F00B         	goto	u6810
  1918  0015F6  51A6               	movf	(_trash_counter+1)& (0+255),w,b
  1919  0015F8  E107               	bnz	u6811
  1920  0015FA  0E64               	movlw	100
  1921  0015FC  5DA5               	subwf	_trash_counter& (0+255),w,b
  1922  0015FE  B0D8               	btfsc	status,0,c
  1923  001600  EF04  F00B         	goto	u6811
  1924  001604  EF07  F00B         	goto	u6810
  1925  001608                     u6811:
  1926  001608  FFFF               	dw	65535	; assembler added errata NOP
  1927  00160A  EF0C  F00B         	goto	l5574
  1928  00160E                     u6810:
  1929  00160E  FFFF               	dw	65535	; assembler added errata NOP
  1930  001610                     
  1931                           ; BSR set to: 1
  1932                           ;main.c: 100:                 trash_counter++;
  1933  001610  4BA5               	infsnz	_trash_counter& (0+255),f,b
  1934  001612  2BA6               	incf	(_trash_counter+1)& (0+255),f,b
  1935                           
  1936                           ;main.c: 101:             } else if (move_to_trash && trash_counter >= 100){
  1937  001614  EF81  F00A         	goto	l5540
  1938  001618                     l5574:
  1939  001618  FFFF               	dw	65535	; assembler added errata NOP
  1940                           
  1941                           ; BSR set to: 1
  1942  00161A  51A3               	movf	_move_to_trash& (0+255),w,b
  1943  00161C  11A4               	iorwf	(_move_to_trash+1)& (0+255),w,b
  1944  00161E  B4D8               	btfsc	status,2,c
  1945  001620  EF14  F00B         	goto	u6821
  1946  001624  EF17  F00B         	goto	u6820
  1947  001628                     u6821:
  1948  001628  FFFF               	dw	65535	; assembler added errata NOP
  1949  00162A  EF3F  F00B         	goto	l5582
  1950  00162E                     u6820:
  1951  00162E  FFFF               	dw	65535	; assembler added errata NOP
  1952  001630                     
  1953                           ; BSR set to: 1
  1954  001630  BFA6               	btfsc	(_trash_counter+1)& (0+255),7,b
  1955  001632  EF24  F00B         	goto	u6831
  1956  001636  51A6               	movf	(_trash_counter+1)& (0+255),w,b
  1957  001638  E10A               	bnz	u6830
  1958  00163A  0E64               	movlw	100
  1959  00163C  5DA5               	subwf	_trash_counter& (0+255),w,b
  1960  00163E  A0D8               	btfss	status,0,c
  1961  001640  EF24  F00B         	goto	u6831
  1962  001644  EF27  F00B         	goto	u6830
  1963  001648                     u6831:
  1964  001648  FFFF               	dw	65535	; assembler added errata NOP
  1965  00164A  EF3F  F00B         	goto	l5582
  1966  00164E                     u6830:
  1967  00164E  FFFF               	dw	65535	; assembler added errata NOP
  1968  001650                     
  1969                           ; BSR set to: 1
  1970                           ;main.c: 102:                 state = 0;
  1971  001650  0E00               	movlw	0
  1972  001652  6FCE               	movwf	(_state+1)& (0+255),b
  1973  001654  0E00               	movlw	0
  1974  001656  6FCD               	movwf	_state& (0+255),b
  1975                           
  1976                           ;main.c: 103:                 state_changed = 1;
  1977  001658  0E01               	movlw	1
  1978  00165A  6FB0               	movwf	_state_changed& (0+255),b
  1979  00165C  EF81  F00A         	goto	l5540
  1980  001660                     l137:
  1981  001660  FFFF               	dw	65535	; assembler added errata NOP
  1982                           
  1983                           ; BSR set to: 1
  1984                           ;main.c: 106:             LATAbits.LATA1 = 0;
  1985  001662  9289               	bcf	137,1,c	;volatile
  1986  001664                     
  1987                           ; BSR set to: 1
  1988                           ;main.c: 107:             if (state == 0) {
  1989  001664  51CD               	movf	_state& (0+255),w,b
  1990  001666  11CE               	iorwf	(_state+1)& (0+255),w,b
  1991  001668  A4D8               	btfss	status,2,c
  1992  00166A  EF39  F00B         	goto	u6841
  1993  00166E  EF3C  F00B         	goto	u6840
  1994  001672                     u6841:
  1995  001672  FFFF               	dw	65535	; assembler added errata NOP
  1996  001674  EF42  F00B         	goto	l5584
  1997  001678                     u6840:
  1998  001678  FFFF               	dw	65535	; assembler added errata NOP
  1999  00167A  EF81  F00A         	goto	l5540
  2000  00167E                     l5582:
  2001  00167E  FFFF               	dw	65535	; assembler added errata NOP
  2002                           
  2003                           ;main.c: 109:             } else if (state == 1){
  2004  001680  EF81  F00A         	goto	l5540
  2005  001684                     l5584:
  2006  001684  FFFF               	dw	65535	; assembler added errata NOP
  2007                           
  2008                           ; BSR set to: 1
  2009  001686  05CD               	decf	_state& (0+255),w,b
  2010  001688  11CE               	iorwf	(_state+1)& (0+255),w,b
  2011  00168A  A4D8               	btfss	status,2,c
  2012  00168C  EF4A  F00B         	goto	u6851
  2013  001690  EF4D  F00B         	goto	u6850
  2014  001694                     u6851:
  2015  001694  FFFF               	dw	65535	; assembler added errata NOP
  2016  001696  EF58  F00B         	goto	l5588
  2017  00169A                     u6850:
  2018  00169A  FFFF               	dw	65535	; assembler added errata NOP
  2019  00169C                     l5586:
  2020  00169C  FFFF               	dw	65535	; assembler added errata NOP
  2021                           
  2022                           ;main.c: 110:                 state = 2;
  2023  00169E  0E00               	movlw	0
  2024  0016A0  0101               	movlb	1	; () banked
  2025  0016A2  6FCE               	movwf	(_state+1)& (0+255),b
  2026  0016A4  0E02               	movlw	2
  2027  0016A6  6FCD               	movwf	_state& (0+255),b
  2028                           
  2029                           ;main.c: 111:                 state_changed = 1;
  2030  0016A8  0E01               	movlw	1
  2031  0016AA  6FB0               	movwf	_state_changed& (0+255),b
  2032                           
  2033                           ;main.c: 112:             } else if (state == 3){
  2034  0016AC  EF81  F00A         	goto	l5540
  2035  0016B0                     l5588:
  2036  0016B0  FFFF               	dw	65535	; assembler added errata NOP
  2037                           
  2038                           ; BSR set to: 1
  2039  0016B2  0E03               	movlw	3
  2040  0016B4  19CD               	xorwf	_state& (0+255),w,b
  2041  0016B6  11CE               	iorwf	(_state+1)& (0+255),w,b
  2042  0016B8  A4D8               	btfss	status,2,c
  2043  0016BA  EF61  F00B         	goto	u6861
  2044  0016BE  EF64  F00B         	goto	u6860
  2045  0016C2                     u6861:
  2046  0016C2  FFFF               	dw	65535	; assembler added errata NOP
  2047  0016C4  EF6D  F00B         	goto	l5592
  2048  0016C8                     u6860:
  2049  0016C8  FFFF               	dw	65535	; assembler added errata NOP
  2050  0016CA                     
  2051                           ; BSR set to: 1
  2052                           ;main.c: 113:                 state = 9;
  2053  0016CA  0E00               	movlw	0
  2054  0016CC  6FCE               	movwf	(_state+1)& (0+255),b
  2055  0016CE  0E09               	movlw	9
  2056  0016D0  6FCD               	movwf	_state& (0+255),b
  2057                           
  2058                           ;main.c: 114:                 state_changed = 1;
  2059  0016D2  0E01               	movlw	1
  2060  0016D4  6FB0               	movwf	_state_changed& (0+255),b
  2061                           
  2062                           ;main.c: 115:             } else if (state == 9){
  2063  0016D6  EF81  F00A         	goto	l5540
  2064  0016DA                     l5592:
  2065  0016DA  FFFF               	dw	65535	; assembler added errata NOP
  2066                           
  2067                           ; BSR set to: 1
  2068  0016DC  0E09               	movlw	9
  2069  0016DE  19CD               	xorwf	_state& (0+255),w,b
  2070  0016E0  11CE               	iorwf	(_state+1)& (0+255),w,b
  2071  0016E2  A4D8               	btfss	status,2,c
  2072  0016E4  EF76  F00B         	goto	u6871
  2073  0016E8  EF79  F00B         	goto	u6870
  2074  0016EC                     u6871:
  2075  0016EC  FFFF               	dw	65535	; assembler added errata NOP
  2076  0016EE  EFBA  F00B         	goto	l5606
  2077  0016F2                     u6870:
  2078  0016F2  FFFF               	dw	65535	; assembler added errata NOP
  2079  0016F4                     
  2080                           ; BSR set to: 1
  2081                           ;main.c: 116:                 if (timer_done){
  2082  0016F4  51AD               	movf	_timer_done& (0+255),w,b
  2083  0016F6  B4D8               	btfsc	status,2,c
  2084  0016F8  EF80  F00B         	goto	u6881
  2085  0016FC  EF83  F00B         	goto	u6880
  2086  001700                     u6881:
  2087  001700  FFFF               	dw	65535	; assembler added errata NOP
  2088  001702  EFA3  F00B         	goto	l149
  2089  001706                     u6880:
  2090  001706  FFFF               	dw	65535	; assembler added errata NOP
  2091  001708                     
  2092                           ; BSR set to: 1
  2093                           ;main.c: 117:                     if(check_temperature(get_temperature())){
  2094  001708  EC11  F036         	call	_get_temperature	;wreg free
  2095  00170C  C0D4  F0D6         	movff	?_get_temperature,check_temperature@temp_to_be_checked
  2096  001710  C0D5  F0D7         	movff	?_get_temperature+1,check_temperature@temp_to_be_checked+1
  2097  001714  ECDC  F038         	call	_check_temperature	;wreg free
  2098  001718  0100               	movlb	0	; () banked
  2099  00171A  51D6               	movf	?_check_temperature& (0+255),w,b
  2100  00171C  11D7               	iorwf	(?_check_temperature+1)& (0+255),w,b
  2101  00171E  B4D8               	btfsc	status,2,c
  2102  001720  EF94  F00B         	goto	u6891
  2103  001724  EF97  F00B         	goto	u6890
  2104  001728                     u6891:
  2105  001728  FFFF               	dw	65535	; assembler added errata NOP
  2106  00172A  EF3F  F00B         	goto	l5582
  2107  00172E                     u6890:
  2108  00172E  FFFF               	dw	65535	; assembler added errata NOP
  2109  001730                     
  2110                           ; BSR set to: 0
  2111                           ;main.c: 118:                         state = 2;
  2112  001730  0E00               	movlw	0
  2113  001732  0101               	movlb	1	; () banked
  2114  001734  6FCE               	movwf	(_state+1)& (0+255),b
  2115  001736  0E02               	movlw	2
  2116  001738  6FCD               	movwf	_state& (0+255),b
  2117                           
  2118                           ;main.c: 119:                         state_changed = 1;
  2119  00173A  0E01               	movlw	1
  2120  00173C  6FB0               	movwf	_state_changed& (0+255),b
  2121                           
  2122                           ;main.c: 120:                         timer_done = 0;
  2123  00173E  0E00               	movlw	0
  2124  001740  6FAD               	movwf	_timer_done& (0+255),b
  2125                           
  2126                           ;main.c: 121:                     } else{
  2127  001742  EF81  F00A         	goto	l5540
  2128  001746                     l149:
  2129  001746  FFFF               	dw	65535	; assembler added errata NOP
  2130                           
  2131                           ; BSR set to: 1
  2132                           ;main.c: 126:                     if (T0CONbits.TMR0ON == 0){
  2133  001748  BED5               	btfsc	213,7,c	;volatile
  2134  00174A  EFA9  F00B         	goto	u6901
  2135  00174E  EFAC  F00B         	goto	u6900
  2136  001752                     u6901:
  2137  001752  FFFF               	dw	65535	; assembler added errata NOP
  2138  001754  EFB1  F00B         	goto	l5604
  2139  001758                     u6900:
  2140  001758  FFFF               	dw	65535	; assembler added errata NOP
  2141  00175A                     
  2142                           ; BSR set to: 1
  2143                           ;main.c: 127:                         wait_for_zero();
  2144  00175A  ECE6  F032         	call	_wait_for_zero	;wreg free
  2145  00175E                     
  2146                           ;main.c: 128:                         init_timer_0();
  2147  00175E  ECAF  F032         	call	_init_timer_0	;wreg free
  2148  001762                     l5604:
  2149  001762  FFFF               	dw	65535	; assembler added errata NOP
  2150                           
  2151                           ;main.c: 130:                     int current_temp = get_temperature();
  2152  001764  EC11  F036         	call	_get_temperature	;wreg free
  2153  001768  C0D4  F1A0         	movff	?_get_temperature,main@current_temp
  2154  00176C  C0D5  F1A1         	movff	?_get_temperature+1,main@current_temp+1
  2155  001770  EF81  F00A         	goto	l5540
  2156  001774                     l5606:
  2157  001774  FFFF               	dw	65535	; assembler added errata NOP
  2158                           
  2159                           ; BSR set to: 1
  2160  001776  0E04               	movlw	4
  2161  001778  19CD               	xorwf	_state& (0+255),w,b
  2162  00177A  11CE               	iorwf	(_state+1)& (0+255),w,b
  2163  00177C  A4D8               	btfss	status,2,c
  2164  00177E  EFC3  F00B         	goto	u6911
  2165  001782  EFC6  F00B         	goto	u6910
  2166  001786                     u6911:
  2167  001786  FFFF               	dw	65535	; assembler added errata NOP
  2168  001788  EFCF  F00B         	goto	l5610
  2169  00178C                     u6910:
  2170  00178C  FFFF               	dw	65535	; assembler added errata NOP
  2171  00178E                     
  2172                           ; BSR set to: 1
  2173                           ;main.c: 134:                 state = 10;
  2174  00178E  0E00               	movlw	0
  2175  001790  6FCE               	movwf	(_state+1)& (0+255),b
  2176  001792  0E0A               	movlw	10
  2177  001794  6FCD               	movwf	_state& (0+255),b
  2178                           
  2179                           ;main.c: 135:                 state_changed = 1;
  2180  001796  0E01               	movlw	1
  2181  001798  6FB0               	movwf	_state_changed& (0+255),b
  2182                           
  2183                           ;main.c: 136:             }else if (state == 10){
  2184  00179A  EF81  F00A         	goto	l5540
  2185  00179E                     l5610:
  2186  00179E  FFFF               	dw	65535	; assembler added errata NOP
  2187                           
  2188                           ; BSR set to: 1
  2189  0017A0  0E0A               	movlw	10
  2190  0017A2  19CD               	xorwf	_state& (0+255),w,b
  2191  0017A4  11CE               	iorwf	(_state+1)& (0+255),w,b
  2192  0017A6  A4D8               	btfss	status,2,c
  2193  0017A8  EFD8  F00B         	goto	u6921
  2194  0017AC  EFDB  F00B         	goto	u6920
  2195  0017B0                     u6921:
  2196  0017B0  FFFF               	dw	65535	; assembler added errata NOP
  2197  0017B2  EF77  F00C         	goto	l5632
  2198  0017B6                     u6920:
  2199  0017B6  FFFF               	dw	65535	; assembler added errata NOP
  2200  0017B8                     
  2201                           ; BSR set to: 1
  2202                           ;main.c: 137:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2203  0017B8  0E03               	movlw	3
  2204  0017BA  0100               	movlb	0	; () banked
  2205  0017BC  6FDD               	movwf	??_main& (0+255),b
  2206  0017BE  0EEB               	movlw	235
  2207  0017C0                     u7217:
  2208  0017C0  FFFF               	dw	65535	; errata NOP
  2209  0017C2  2EE8               	decfsz	wreg,f,c
  2210  0017C4  D7FD               	bra	u7217
  2211  0017C6  2FDD               	decfsz	??_main& (0+255),f,b
  2212  0017C8  D7FB               	bra	u7217
  2213  0017CA  D000               	nop2	
  2214  0017CC  F000               	nop	
  2215  0017CE                     
  2216                           ;main.c: 138:                 if (joint_homed && reach_goal(&joint_stepper, 50)){
  2217  0017CE  0101               	movlb	1	; () banked
  2218  0017D0  51A9               	movf	_joint_homed& (0+255),w,b
  2219  0017D2  11AA               	iorwf	(_joint_homed+1)& (0+255),w,b
  2220  0017D4  B4D8               	btfsc	status,2,c
  2221  0017D6  EFEF  F00B         	goto	u6931
  2222  0017DA  EFF2  F00B         	goto	u6930
  2223  0017DE                     u6931:
  2224  0017DE  FFFF               	dw	65535	; assembler added errata NOP
  2225  0017E0  EF0D  F00C         	goto	l5620
  2226  0017E4                     u6930:
  2227  0017E4  FFFF               	dw	65535	; assembler added errata NOP
  2228  0017E6                     
  2229                           ; BSR set to: 1
  2230  0017E6  0EBF               	movlw	low _joint_stepper
  2231  0017E8  6E07               	movwf	reach_goal@stepper_motor^0,c
  2232  0017EA  0E01               	movlw	high _joint_stepper
  2233  0017EC  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2234  0017EE  0E00               	movlw	0
  2235  0017F0  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2236  0017F2  0E32               	movlw	50
  2237  0017F4  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2238  0017F6  EC4A  F036         	call	_reach_goal	;wreg free
  2239  0017FA  5007               	movf	?_reach_goal^0,w,c
  2240  0017FC  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2241  0017FE  B4D8               	btfsc	status,2,c
  2242  001800  EF04  F00C         	goto	u6941
  2243  001804  EF07  F00C         	goto	u6940
  2244  001808                     u6941:
  2245  001808  FFFF               	dw	65535	; assembler added errata NOP
  2246  00180A  EF0D  F00C         	goto	l5620
  2247  00180E                     u6940:
  2248  00180E  FFFF               	dw	65535	; assembler added errata NOP
  2249  001810                     
  2250                           ;main.c: 139:                     joint_homed = 0;
  2251  001810  0E00               	movlw	0
  2252  001812  0101               	movlb	1	; () banked
  2253  001814  6FAA               	movwf	(_joint_homed+1)& (0+255),b
  2254  001816  0E00               	movlw	0
  2255  001818  6FA9               	movwf	_joint_homed& (0+255),b
  2256  00181A                     l5620:
  2257  00181A  FFFF               	dw	65535	; assembler added errata NOP
  2258                           
  2259                           ;main.c: 141:                 if (!joint_homed && end_effector_homed && reach_goal(&end_
      +                          effector_stepper, 100)){
  2260  00181C  0101               	movlb	1	; () banked
  2261  00181E  51A9               	movf	_joint_homed& (0+255),w,b
  2262  001820  11AA               	iorwf	(_joint_homed+1)& (0+255),w,b
  2263  001822  A4D8               	btfss	status,2,c
  2264  001824  EF16  F00C         	goto	u6951
  2265  001828  EF19  F00C         	goto	u6950
  2266  00182C                     u6951:
  2267  00182C  FFFF               	dw	65535	; assembler added errata NOP
  2268  00182E  EF3F  F00C         	goto	l5628
  2269  001832                     u6950:
  2270  001832  FFFF               	dw	65535	; assembler added errata NOP
  2271  001834                     
  2272                           ; BSR set to: 1
  2273  001834  51A7               	movf	_end_effector_homed& (0+255),w,b
  2274  001836  11A8               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  2275  001838  B4D8               	btfsc	status,2,c
  2276  00183A  EF21  F00C         	goto	u6961
  2277  00183E  EF24  F00C         	goto	u6960
  2278  001842                     u6961:
  2279  001842  FFFF               	dw	65535	; assembler added errata NOP
  2280  001844  EF3F  F00C         	goto	l5628
  2281  001848                     u6960:
  2282  001848  FFFF               	dw	65535	; assembler added errata NOP
  2283  00184A                     
  2284                           ; BSR set to: 1
  2285  00184A  0EB1               	movlw	low _end_effector_stepper
  2286  00184C  6E07               	movwf	reach_goal@stepper_motor^0,c
  2287  00184E  0E01               	movlw	high _end_effector_stepper
  2288  001850  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2289  001852  0E00               	movlw	0
  2290  001854  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2291  001856  0E64               	movlw	100
  2292  001858  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2293  00185A  EC4A  F036         	call	_reach_goal	;wreg free
  2294  00185E  5007               	movf	?_reach_goal^0,w,c
  2295  001860  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2296  001862  B4D8               	btfsc	status,2,c
  2297  001864  EF36  F00C         	goto	u6971
  2298  001868  EF39  F00C         	goto	u6970
  2299  00186C                     u6971:
  2300  00186C  FFFF               	dw	65535	; assembler added errata NOP
  2301  00186E  EF3F  F00C         	goto	l5628
  2302  001872                     u6970:
  2303  001872  FFFF               	dw	65535	; assembler added errata NOP
  2304  001874                     
  2305                           ;main.c: 142:                     end_effector_homed = 0;
  2306  001874  0E00               	movlw	0
  2307  001876  0101               	movlb	1	; () banked
  2308  001878  6FA8               	movwf	(_end_effector_homed+1)& (0+255),b
  2309  00187A  0E00               	movlw	0
  2310  00187C  6FA7               	movwf	_end_effector_homed& (0+255),b
  2311  00187E                     l5628:
  2312  00187E  FFFF               	dw	65535	; assembler added errata NOP
  2313                           
  2314                           ;main.c: 144:                 if (!end_effector_homed * !joint_homed){
  2315  001880  0101               	movlb	1	; () banked
  2316  001882  51A7               	movf	_end_effector_homed& (0+255),w,b
  2317  001884  11A8               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  2318  001886  B4D8               	btfsc	status,2,c
  2319  001888  EF48  F00C         	goto	u6981
  2320  00188C  EF4C  F00C         	goto	u6980
  2321  001890                     u6981:
  2322  001890  FFFF               	dw	65535	; assembler added errata NOP
  2323  001892  0E01               	movlw	1
  2324  001894  EF4E  F00C         	goto	u6990
  2325  001898                     u6980:
  2326  001898  FFFF               	dw	65535	; assembler added errata NOP
  2327  00189A  0E00               	movlw	0
  2328  00189C                     u6990:
  2329  00189C  FFFF               	dw	65535	; assembler added errata NOP
  2330  00189E  6E01               	movwf	___wmul@multiplier^0,c
  2331  0018A0  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2332  0018A2  51A9               	movf	_joint_homed& (0+255),w,b
  2333  0018A4  11AA               	iorwf	(_joint_homed+1)& (0+255),w,b
  2334  0018A6  B4D8               	btfsc	status,2,c
  2335  0018A8  EF58  F00C         	goto	u7001
  2336  0018AC  EF5C  F00C         	goto	u7000
  2337  0018B0                     u7001:
  2338  0018B0  FFFF               	dw	65535	; assembler added errata NOP
  2339  0018B2  0E01               	movlw	1
  2340  0018B4  EF5E  F00C         	goto	u7010
  2341  0018B8                     u7000:
  2342  0018B8  FFFF               	dw	65535	; assembler added errata NOP
  2343  0018BA  0E00               	movlw	0
  2344  0018BC                     u7010:
  2345  0018BC  FFFF               	dw	65535	; assembler added errata NOP
  2346  0018BE  6E03               	movwf	___wmul@multiplicand^0,c
  2347  0018C0  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  2348  0018C2  EC24  F033         	call	___wmul	;wreg free
  2349  0018C6  5001               	movf	?___wmul^0,w,c
  2350  0018C8  1002               	iorwf	(?___wmul+1)^0,w,c
  2351  0018CA  B4D8               	btfsc	status,2,c
  2352  0018CC  EF6A  F00C         	goto	u7021
  2353  0018D0  EF6D  F00C         	goto	u7020
  2354  0018D4                     u7021:
  2355  0018D4  FFFF               	dw	65535	; assembler added errata NOP
  2356  0018D6  EF81  F00A         	goto	l5540
  2357  0018DA                     u7020:
  2358  0018DA  FFFF               	dw	65535	; assembler added errata NOP
  2359  0018DC                     
  2360                           ;main.c: 145:                     state = 5;
  2361  0018DC  0E00               	movlw	0
  2362  0018DE  0101               	movlb	1	; () banked
  2363  0018E0  6FCE               	movwf	(_state+1)& (0+255),b
  2364  0018E2  0E05               	movlw	5
  2365  0018E4  6FCD               	movwf	_state& (0+255),b
  2366                           
  2367                           ;main.c: 146:                     state_changed = 1;
  2368  0018E6  0E01               	movlw	1
  2369  0018E8  6FB0               	movwf	_state_changed& (0+255),b
  2370  0018EA  EF81  F00A         	goto	l5540
  2371  0018EE                     l5632:
  2372  0018EE  FFFF               	dw	65535	; assembler added errata NOP
  2373                           
  2374                           ; BSR set to: 1
  2375  0018F0  0E05               	movlw	5
  2376  0018F2  19CD               	xorwf	_state& (0+255),w,b
  2377  0018F4  11CE               	iorwf	(_state+1)& (0+255),w,b
  2378  0018F6  A4D8               	btfss	status,2,c
  2379  0018F8  EF80  F00C         	goto	u7031
  2380  0018FC  EF83  F00C         	goto	u7030
  2381  001900                     u7031:
  2382  001900  FFFF               	dw	65535	; assembler added errata NOP
  2383  001902  EFEB  F00C         	goto	l5652
  2384  001906                     u7030:
  2385  001906  FFFF               	dw	65535	; assembler added errata NOP
  2386  001908                     
  2387                           ; BSR set to: 1
  2388                           ;main.c: 149:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2389  001908  0E03               	movlw	3
  2390  00190A  0100               	movlb	0	; () banked
  2391  00190C  6FDD               	movwf	??_main& (0+255),b
  2392  00190E  0EEB               	movlw	235
  2393  001910                     u7227:
  2394  001910  FFFF               	dw	65535	; errata NOP
  2395  001912  2EE8               	decfsz	wreg,f,c
  2396  001914  D7FD               	bra	u7227
  2397  001916  2FDD               	decfsz	??_main& (0+255),f,b
  2398  001918  D7FB               	bra	u7227
  2399  00191A  D000               	nop2	
  2400  00191C  F000               	nop	
  2401  00191E                     
  2402                           ;main.c: 150:                 if (reach_goal(&joint_stepper, 100)) {
  2403  00191E  0EBF               	movlw	low _joint_stepper
  2404  001920  6E07               	movwf	reach_goal@stepper_motor^0,c
  2405  001922  0E01               	movlw	high _joint_stepper
  2406  001924  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2407  001926  0E00               	movlw	0
  2408  001928  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2409  00192A  0E64               	movlw	100
  2410  00192C  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2411  00192E  EC4A  F036         	call	_reach_goal	;wreg free
  2412  001932  5007               	movf	?_reach_goal^0,w,c
  2413  001934  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2414  001936  B4D8               	btfsc	status,2,c
  2415  001938  EFA0  F00C         	goto	u7041
  2416  00193C  EFA3  F00C         	goto	u7040
  2417  001940                     u7041:
  2418  001940  FFFF               	dw	65535	; assembler added errata NOP
  2419  001942  EFAD  F00C         	goto	l5642
  2420  001946                     u7040:
  2421  001946  FFFF               	dw	65535	; assembler added errata NOP
  2422  001948                     
  2423                           ;main.c: 151:                     change_direction(&joint_stepper);
  2424  001948  0EBF               	movlw	low _joint_stepper
  2425  00194A  6E01               	movwf	change_direction@stepper_motor^0,c
  2426  00194C  0E01               	movlw	high _joint_stepper
  2427  00194E  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2428  001950  EC69  F033         	call	_change_direction	;wreg free
  2429  001954                     
  2430                           ;main.c: 152:                     mix_counter++;
  2431  001954  0101               	movlb	1	; () banked
  2432  001956  4BAB               	infsnz	_mix_counter& (0+255),f,b
  2433  001958  2BAC               	incf	(_mix_counter+1)& (0+255),f,b
  2434  00195A                     l5642:
  2435  00195A  FFFF               	dw	65535	; assembler added errata NOP
  2436                           
  2437                           ;main.c: 155:                 if (mix_counter >= 20){
  2438  00195C  0101               	movlb	1	; () banked
  2439  00195E  BFAC               	btfsc	(_mix_counter+1)& (0+255),7,b
  2440  001960  EFBB  F00C         	goto	u7051
  2441  001964  51AC               	movf	(_mix_counter+1)& (0+255),w,b
  2442  001966  E10A               	bnz	u7050
  2443  001968  0E14               	movlw	20
  2444  00196A  5DAB               	subwf	_mix_counter& (0+255),w,b
  2445  00196C  A0D8               	btfss	status,0,c
  2446  00196E  EFBB  F00C         	goto	u7051
  2447  001972  EFBE  F00C         	goto	u7050
  2448  001976                     u7051:
  2449  001976  FFFF               	dw	65535	; assembler added errata NOP
  2450  001978  EF81  F00A         	goto	l5540
  2451  00197C                     u7050:
  2452  00197C  FFFF               	dw	65535	; assembler added errata NOP
  2453  00197E                     
  2454                           ; BSR set to: 1
  2455                           ;main.c: 156:                     state = 6;
  2456  00197E  0E00               	movlw	0
  2457  001980  6FCE               	movwf	(_state+1)& (0+255),b
  2458  001982  0E06               	movlw	6
  2459  001984  6FCD               	movwf	_state& (0+255),b
  2460                           
  2461                           ;main.c: 157:                     mix_counter = 0;
  2462  001986  0E00               	movlw	0
  2463  001988  6FAC               	movwf	(_mix_counter+1)& (0+255),b
  2464  00198A  0E00               	movlw	0
  2465  00198C  6FAB               	movwf	_mix_counter& (0+255),b
  2466  00198E                     
  2467                           ; BSR set to: 1
  2468                           ;main.c: 158:                     init_stepper(&joint_stepper, 0, 0, 1, hex_joint_values
      +                          );
  2469  00198E  0EBF               	movlw	low _joint_stepper
  2470  001990  6E01               	movwf	init_stepper@stepper_motor^0,c
  2471  001992  0E01               	movlw	high _joint_stepper
  2472  001994  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  2473  001996  0E00               	movlw	0
  2474  001998  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  2475  00199A  0E00               	movlw	0
  2476  00199C  6E03               	movwf	init_stepper@current_coil^0,c
  2477  00199E  0E00               	movlw	0
  2478  0019A0  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  2479  0019A2  0E00               	movlw	0
  2480  0019A4  6E05               	movwf	init_stepper@step_counter^0,c
  2481  0019A6  0E00               	movlw	0
  2482  0019A8  6E08               	movwf	(init_stepper@direction+1)^0,c
  2483  0019AA  0E01               	movlw	1
  2484  0019AC  6E07               	movwf	init_stepper@direction^0,c
  2485  0019AE  0EE7               	movlw	low _hex_joint_values
  2486  0019B0  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  2487  0019B2  0E01               	movlw	high _hex_joint_values
  2488  0019B4  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  2489  0019B6  EC4E  F037         	call	_init_stepper	;wreg free
  2490  0019BA                     
  2491                           ;main.c: 159:                     change_direction(&joint_stepper);
  2492  0019BA  0EBF               	movlw	low _joint_stepper
  2493  0019BC  6E01               	movwf	change_direction@stepper_motor^0,c
  2494  0019BE  0E01               	movlw	high _joint_stepper
  2495  0019C0  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2496  0019C2  EC69  F033         	call	_change_direction	;wreg free
  2497  0019C6                     
  2498                           ;main.c: 160:                     change_direction(&end_effector_stepper);
  2499  0019C6  0EB1               	movlw	low _end_effector_stepper
  2500  0019C8  6E01               	movwf	change_direction@stepper_motor^0,c
  2501  0019CA  0E01               	movlw	high _end_effector_stepper
  2502  0019CC  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2503  0019CE  EC69  F033         	call	_change_direction	;wreg free
  2504  0019D2  EF81  F00A         	goto	l5540
  2505  0019D6                     l5652:
  2506  0019D6  FFFF               	dw	65535	; assembler added errata NOP
  2507                           
  2508                           ; BSR set to: 1
  2509  0019D8  0E06               	movlw	6
  2510  0019DA  19CD               	xorwf	_state& (0+255),w,b
  2511  0019DC  11CE               	iorwf	(_state+1)& (0+255),w,b
  2512  0019DE  A4D8               	btfss	status,2,c
  2513  0019E0  EFF4  F00C         	goto	u7061
  2514  0019E4  EFF7  F00C         	goto	u7060
  2515  0019E8                     u7061:
  2516  0019E8  FFFF               	dw	65535	; assembler added errata NOP
  2517  0019EA  EF73  F00D         	goto	l5674
  2518  0019EE                     u7060:
  2519  0019EE  FFFF               	dw	65535	; assembler added errata NOP
  2520  0019F0                     
  2521                           ; BSR set to: 1
  2522                           ;main.c: 163:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2523  0019F0  0E03               	movlw	3
  2524  0019F2  0100               	movlb	0	; () banked
  2525  0019F4  6FDD               	movwf	??_main& (0+255),b
  2526  0019F6  0EEB               	movlw	235
  2527  0019F8                     u7237:
  2528  0019F8  FFFF               	dw	65535	; errata NOP
  2529  0019FA  2EE8               	decfsz	wreg,f,c
  2530  0019FC  D7FD               	bra	u7237
  2531  0019FE  2FDD               	decfsz	??_main& (0+255),f,b
  2532  001A00  D7FB               	bra	u7237
  2533  001A02  D000               	nop2	
  2534  001A04  F000               	nop	
  2535  001A06                     
  2536                           ;main.c: 165:                 if (!end_effector_homed && reach_goal(&end_effector_steppe
      +                          r, 100)){
  2537  001A06  0101               	movlb	1	; () banked
  2538  001A08  51A7               	movf	_end_effector_homed& (0+255),w,b
  2539  001A0A  11A8               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  2540  001A0C  A4D8               	btfss	status,2,c
  2541  001A0E  EF0B  F00D         	goto	u7071
  2542  001A12  EF0E  F00D         	goto	u7070
  2543  001A16                     u7071:
  2544  001A16  FFFF               	dw	65535	; assembler added errata NOP
  2545  001A18  EF29  F00D         	goto	l5662
  2546  001A1C                     u7070:
  2547  001A1C  FFFF               	dw	65535	; assembler added errata NOP
  2548  001A1E                     
  2549                           ; BSR set to: 1
  2550  001A1E  0EB1               	movlw	low _end_effector_stepper
  2551  001A20  6E07               	movwf	reach_goal@stepper_motor^0,c
  2552  001A22  0E01               	movlw	high _end_effector_stepper
  2553  001A24  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2554  001A26  0E00               	movlw	0
  2555  001A28  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2556  001A2A  0E64               	movlw	100
  2557  001A2C  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2558  001A2E  EC4A  F036         	call	_reach_goal	;wreg free
  2559  001A32  5007               	movf	?_reach_goal^0,w,c
  2560  001A34  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2561  001A36  B4D8               	btfsc	status,2,c
  2562  001A38  EF20  F00D         	goto	u7081
  2563  001A3C  EF23  F00D         	goto	u7080
  2564  001A40                     u7081:
  2565  001A40  FFFF               	dw	65535	; assembler added errata NOP
  2566  001A42  EF29  F00D         	goto	l5662
  2567  001A46                     u7080:
  2568  001A46  FFFF               	dw	65535	; assembler added errata NOP
  2569  001A48                     
  2570                           ;main.c: 166:                     end_effector_homed = 1;
  2571  001A48  0E00               	movlw	0
  2572  001A4A  0101               	movlb	1	; () banked
  2573  001A4C  6FA8               	movwf	(_end_effector_homed+1)& (0+255),b
  2574  001A4E  0E01               	movlw	1
  2575  001A50  6FA7               	movwf	_end_effector_homed& (0+255),b
  2576  001A52                     l5662:
  2577  001A52  FFFF               	dw	65535	; assembler added errata NOP
  2578                           
  2579                           ;main.c: 169:                 if (end_effector_homed && !joint_homed && reach_goal(&join
      +                          t_stepper, 50)){
  2580  001A54  0101               	movlb	1	; () banked
  2581  001A56  51A7               	movf	_end_effector_homed& (0+255),w,b
  2582  001A58  11A8               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  2583  001A5A  B4D8               	btfsc	status,2,c
  2584  001A5C  EF32  F00D         	goto	u7091
  2585  001A60  EF35  F00D         	goto	u7090
  2586  001A64                     u7091:
  2587  001A64  FFFF               	dw	65535	; assembler added errata NOP
  2588  001A66  EF5B  F00D         	goto	l5670
  2589  001A6A                     u7090:
  2590  001A6A  FFFF               	dw	65535	; assembler added errata NOP
  2591  001A6C                     
  2592                           ; BSR set to: 1
  2593  001A6C  51A9               	movf	_joint_homed& (0+255),w,b
  2594  001A6E  11AA               	iorwf	(_joint_homed+1)& (0+255),w,b
  2595  001A70  A4D8               	btfss	status,2,c
  2596  001A72  EF3D  F00D         	goto	u7101
  2597  001A76  EF40  F00D         	goto	u7100
  2598  001A7A                     u7101:
  2599  001A7A  FFFF               	dw	65535	; assembler added errata NOP
  2600  001A7C  EF5B  F00D         	goto	l5670
  2601  001A80                     u7100:
  2602  001A80  FFFF               	dw	65535	; assembler added errata NOP
  2603  001A82                     
  2604                           ; BSR set to: 1
  2605  001A82  0EBF               	movlw	low _joint_stepper
  2606  001A84  6E07               	movwf	reach_goal@stepper_motor^0,c
  2607  001A86  0E01               	movlw	high _joint_stepper
  2608  001A88  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2609  001A8A  0E00               	movlw	0
  2610  001A8C  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2611  001A8E  0E32               	movlw	50
  2612  001A90  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2613  001A92  EC4A  F036         	call	_reach_goal	;wreg free
  2614  001A96  5007               	movf	?_reach_goal^0,w,c
  2615  001A98  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2616  001A9A  B4D8               	btfsc	status,2,c
  2617  001A9C  EF52  F00D         	goto	u7111
  2618  001AA0  EF55  F00D         	goto	u7110
  2619  001AA4                     u7111:
  2620  001AA4  FFFF               	dw	65535	; assembler added errata NOP
  2621  001AA6  EF5B  F00D         	goto	l5670
  2622  001AAA                     u7110:
  2623  001AAA  FFFF               	dw	65535	; assembler added errata NOP
  2624  001AAC                     
  2625                           ;main.c: 170:                     joint_homed = 1;
  2626  001AAC  0E00               	movlw	0
  2627  001AAE  0101               	movlb	1	; () banked
  2628  001AB0  6FAA               	movwf	(_joint_homed+1)& (0+255),b
  2629  001AB2  0E01               	movlw	1
  2630  001AB4  6FA9               	movwf	_joint_homed& (0+255),b
  2631  001AB6                     l5670:
  2632  001AB6  FFFF               	dw	65535	; assembler added errata NOP
  2633                           
  2634                           ;main.c: 173:                 if (end_effector_homed * joint_homed){
  2635  001AB8  C1A7  F001         	movff	_end_effector_homed,___wmul@multiplier
  2636  001ABC  C1A8  F002         	movff	_end_effector_homed+1,___wmul@multiplier+1
  2637  001AC0  C1A9  F003         	movff	_joint_homed,___wmul@multiplicand
  2638  001AC4  C1AA  F004         	movff	_joint_homed+1,___wmul@multiplicand+1
  2639  001AC8  EC24  F033         	call	___wmul	;wreg free
  2640  001ACC  5001               	movf	?___wmul^0,w,c
  2641  001ACE  1002               	iorwf	(?___wmul+1)^0,w,c
  2642  001AD0  B4D8               	btfsc	status,2,c
  2643  001AD2  EF6D  F00D         	goto	u7121
  2644  001AD6  EF70  F00D         	goto	u7120
  2645  001ADA                     u7121:
  2646  001ADA  FFFF               	dw	65535	; assembler added errata NOP
  2647  001ADC  EF81  F00A         	goto	l5540
  2648  001AE0                     u7120:
  2649  001AE0  FFFF               	dw	65535	; assembler added errata NOP
  2650  001AE2  EF4E  F00B         	goto	l5586
  2651  001AE6                     l5674:
  2652  001AE6  FFFF               	dw	65535	; assembler added errata NOP
  2653                           
  2654                           ; BSR set to: 1
  2655  001AE8  0E07               	movlw	7
  2656  001AEA  19CD               	xorwf	_state& (0+255),w,b
  2657  001AEC  11CE               	iorwf	(_state+1)& (0+255),w,b
  2658  001AEE  A4D8               	btfss	status,2,c
  2659  001AF0  EF7C  F00D         	goto	u7131
  2660  001AF4  EF7F  F00D         	goto	u7130
  2661  001AF8                     u7131:
  2662  001AF8  FFFF               	dw	65535	; assembler added errata NOP
  2663  001AFA  EF88  F00D         	goto	l5678
  2664  001AFE                     u7130:
  2665  001AFE  FFFF               	dw	65535	; assembler added errata NOP
  2666  001B00                     
  2667                           ; BSR set to: 1
  2668                           ;main.c: 178:                 state = 11;
  2669  001B00  0E00               	movlw	0
  2670  001B02  6FCE               	movwf	(_state+1)& (0+255),b
  2671  001B04  0E0B               	movlw	11
  2672  001B06  6FCD               	movwf	_state& (0+255),b
  2673                           
  2674                           ;main.c: 179:                 state_changed = 1;
  2675  001B08  0E01               	movlw	1
  2676  001B0A  6FB0               	movwf	_state_changed& (0+255),b
  2677                           
  2678                           ;main.c: 180:             }else if (state == 11){
  2679  001B0C  EF81  F00A         	goto	l5540
  2680  001B10                     l5678:
  2681  001B10  FFFF               	dw	65535	; assembler added errata NOP
  2682                           
  2683                           ; BSR set to: 1
  2684  001B12  0E0B               	movlw	11
  2685  001B14  19CD               	xorwf	_state& (0+255),w,b
  2686  001B16  11CE               	iorwf	(_state+1)& (0+255),w,b
  2687  001B18  A4D8               	btfss	status,2,c
  2688  001B1A  EF91  F00D         	goto	u7141
  2689  001B1E  EF94  F00D         	goto	u7140
  2690  001B22                     u7141:
  2691  001B22  FFFF               	dw	65535	; assembler added errata NOP
  2692  001B24  EF81  F00A         	goto	l5540
  2693  001B28                     u7140:
  2694  001B28  FFFF               	dw	65535	; assembler added errata NOP
  2695  001B2A                     
  2696                           ; BSR set to: 1
  2697                           ;main.c: 181:                 if (timer_done){
  2698  001B2A  51AD               	movf	_timer_done& (0+255),w,b
  2699  001B2C  B4D8               	btfsc	status,2,c
  2700  001B2E  EF9B  F00D         	goto	u7151
  2701  001B32  EF9E  F00D         	goto	u7150
  2702  001B36                     u7151:
  2703  001B36  FFFF               	dw	65535	; assembler added errata NOP
  2704  001B38  EFAF  F00D         	goto	l174
  2705  001B3C                     u7150:
  2706  001B3C  FFFF               	dw	65535	; assembler added errata NOP
  2707  001B3E                     
  2708                           ; BSR set to: 1
  2709                           ;main.c: 182:                     state_changed = 1;
  2710  001B3E  0E01               	movlw	1
  2711  001B40  6FB0               	movwf	_state_changed& (0+255),b
  2712                           
  2713                           ;main.c: 183:                     state = 2;
  2714  001B42  0E00               	movlw	0
  2715  001B44  6FCE               	movwf	(_state+1)& (0+255),b
  2716  001B46  0E02               	movlw	2
  2717  001B48  6FCD               	movwf	_state& (0+255),b
  2718                           
  2719                           ;main.c: 184:                     move_to_trash = 1;
  2720  001B4A  0E00               	movlw	0
  2721  001B4C  6FA4               	movwf	(_move_to_trash+1)& (0+255),b
  2722  001B4E  0E01               	movlw	1
  2723  001B50  6FA3               	movwf	_move_to_trash& (0+255),b
  2724                           
  2725                           ;main.c: 185:                     trash_counter = 0;
  2726  001B52  0E00               	movlw	0
  2727  001B54  6FA6               	movwf	(_trash_counter+1)& (0+255),b
  2728  001B56  0E00               	movlw	0
  2729  001B58  6FA5               	movwf	_trash_counter& (0+255),b
  2730                           
  2731                           ;main.c: 186:                 } else {
  2732  001B5A  EF81  F00A         	goto	l5540
  2733  001B5E                     l174:
  2734  001B5E  FFFF               	dw	65535	; assembler added errata NOP
  2735                           
  2736                           ; BSR set to: 1
  2737                           ;main.c: 187:                     if (T0CONbits.TMR0ON == 0){
  2738  001B60  BED5               	btfsc	213,7,c	;volatile
  2739  001B62  EFB5  F00D         	goto	u7161
  2740  001B66  EFB8  F00D         	goto	u7160
  2741  001B6A                     u7161:
  2742  001B6A  FFFF               	dw	65535	; assembler added errata NOP
  2743  001B6C  EF3F  F00B         	goto	l5582
  2744  001B70                     u7160:
  2745  001B70  FFFF               	dw	65535	; assembler added errata NOP
  2746  001B72                     
  2747                           ; BSR set to: 1
  2748                           ;main.c: 188:                         init_timer_0();
  2749  001B72  ECAF  F032         	call	_init_timer_0	;wreg free
  2750  001B76  EF81  F00A         	goto	l5540
  2751  001B7A  EF3B  F000         	goto	start
  2752  001B7E                     __end_of_main:
  2753                           	callstack 0
  2754                           
  2755 ;; *************** function _wait_for_zero *****************
  2756 ;; Defined at:
  2757 ;;		line 28 in file "oven.c"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;		None
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;		None
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  1    wreg      void 
  2764 ;; Registers used:
  2765 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2771 ;;      Params:         0       0       0       0       0       0       0
  2772 ;;      Locals:         0       0       0       0       0       0       0
  2773 ;;      Temps:          0       0       0       0       0       0       0
  2774 ;;      Totals:         0       0       0       0       0       0       0
  2775 ;;Total ram usage:        0 bytes
  2776 ;; Hardware stack levels used:    1
  2777 ;; Hardware stack levels required when called:    3
  2778 ;; This function calls:
  2779 ;;		_get_temperature
  2780 ;; This function is called by:
  2781 ;;		_main
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           	psect	text1
  2786  0065CC                     __ptext1:
  2787                           	callstack 0
  2788  0065CC                     _wait_for_zero:
  2789                           	callstack 0
  2790  0065CC  FFFF               	dw	65535	; assembler added errata NOP
  2791  0065CE                     l376:
  2792  0065CE  FFFF               	dw	65535	; assembler added errata NOP
  2793  0065D0                     
  2794                           ;oven.c: 30:         if (get_temperature() == -55){
  2795  0065D0  EC11  F036         	call	_get_temperature	;wreg free
  2796  0065D4  0EC9               	movlw	201
  2797  0065D6  0100               	movlb	0	; () banked
  2798  0065D8  19D4               	xorwf	?_get_temperature& (0+255),w,b
  2799  0065DA  E106               	bnz	u6741
  2800  0065DC  29D5               	incf	(?_get_temperature+1)& (0+255),w,b
  2801  0065DE  A4D8               	btfss	status,2,c
  2802  0065E0  EFF4  F032         	goto	u6741
  2803  0065E4  EFF7  F032         	goto	u6740
  2804  0065E8                     u6741:
  2805  0065E8  FFFF               	dw	65535	; assembler added errata NOP
  2806  0065EA  EFE7  F032         	goto	l376
  2807  0065EE                     u6740:
  2808  0065EE  FFFF               	dw	65535	; assembler added errata NOP
  2809  0065F0                     
  2810                           ; BSR set to: 0
  2811  0065F0  0012               	return		;funcret
  2812  0065F2  FFFF               	dw	65535	; errata NOP
  2813  0065F4                     __end_of_wait_for_zero:
  2814                           	callstack 0
  2815                           
  2816 ;; *************** function _get_temperature *****************
  2817 ;; Defined at:
  2818 ;;		line 22 in file "oven.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;		None
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;		None
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  2   28[BANK0 ] int 
  2825 ;; Registers used:
  2826 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2832 ;;      Params:         0       2       0       0       0       0       0
  2833 ;;      Locals:         0       0       0       0       0       0       0
  2834 ;;      Temps:          0       0       0       0       0       0       0
  2835 ;;      Totals:         0       2       0       0       0       0       0
  2836 ;;Total ram usage:        2 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; Hardware stack levels required when called:    2
  2839 ;; This function calls:
  2840 ;;		___flmul
  2841 ;;		___fltol
  2842 ;;		___xxtofl
  2843 ;; This function is called by:
  2844 ;;		_main
  2845 ;;		_wait_for_zero
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           	psect	text2
  2850  006C22                     __ptext2:
  2851                           	callstack 0
  2852  006C22                     _get_temperature:
  2853                           	callstack 0
  2854  006C22  FFFF               	dw	65535	; assembler added errata NOP
  2855  006C24                     
  2856                           ;oven.c: 23:     ADCON0bits.GO = 1;
  2857  006C24  84C2               	bsf	194,2,c	;volatile
  2858  006C26                     l370:
  2859  006C26  FFFF               	dw	65535	; assembler added errata NOP
  2860  006C28  B4C2               	btfsc	194,2,c	;volatile
  2861  006C2A  EF19  F036         	goto	u6411
  2862  006C2E  EF1C  F036         	goto	u6410
  2863  006C32                     u6411:
  2864  006C32  FFFF               	dw	65535	; assembler added errata NOP
  2865  006C34  EF13  F036         	goto	l370
  2866  006C38                     u6410:
  2867  006C38  FFFF               	dw	65535	; assembler added errata NOP
  2868  006C3A                     
  2869                           ;oven.c: 25:     return (int) (ADRESH * 0.25) + -55;
  2870  006C3A  0E00               	movlw	0
  2871  006C3C  6E31               	movwf	___flmul@a^0,c
  2872  006C3E  0E00               	movlw	0
  2873  006C40  6E32               	movwf	(___flmul@a+1)^0,c
  2874  006C42  0E80               	movlw	128
  2875  006C44  6E33               	movwf	(___flmul@a+2)^0,c
  2876  006C46  0E3E               	movlw	62
  2877  006C48  6E34               	movwf	(___flmul@a+3)^0,c
  2878  006C4A  50C4               	movf	196,w,c	;volatile
  2879  006C4C  6E1F               	movwf	___xxtofl@val^0,c
  2880  006C4E  6A20               	clrf	(___xxtofl@val+1)^0,c
  2881  006C50  6A21               	clrf	(___xxtofl@val+2)^0,c
  2882  006C52  6A22               	clrf	(___xxtofl@val+3)^0,c
  2883  006C54  0E01               	movlw	1
  2884  006C56  EC4E  F01C         	call	___xxtofl
  2885  006C5A  C01F  F02D         	movff	?___xxtofl,___flmul@b
  2886  006C5E  C020  F02E         	movff	?___xxtofl+1,___flmul@b+1
  2887  006C62  C021  F02F         	movff	?___xxtofl+2,___flmul@b+2
  2888  006C66  C022  F030         	movff	?___xxtofl+3,___flmul@b+3
  2889  006C6A  EC93  F010         	call	___flmul	;wreg free
  2890  006C6E  C02D  F0CA         	movff	?___flmul,___fltol@f1
  2891  006C72  C02E  F0CB         	movff	?___flmul+1,___fltol@f1+1
  2892  006C76  C02F  F0CC         	movff	?___flmul+2,___fltol@f1+2
  2893  006C7A  C030  F0CD         	movff	?___flmul+3,___fltol@f1+3
  2894  006C7E  ECB8  F03C         	call	___fltol	;wreg free
  2895  006C82  0EC9               	movlw	201
  2896  006C84  0100               	movlb	0	; () banked
  2897  006C86  25CA               	addwf	?___fltol& (0+255),w,b
  2898  006C88  6FD4               	movwf	?_get_temperature& (0+255),b
  2899  006C8A  0EFF               	movlw	255
  2900  006C8C  21CB               	addwfc	(?___fltol+1)& (0+255),w,b
  2901  006C8E  6FD5               	movwf	(?_get_temperature+1)& (0+255),b
  2902  006C90                     
  2903                           ; BSR set to: 0
  2904  006C90  0012               	return		;funcret
  2905  006C92  FFFF               	dw	65535	; errata NOP
  2906  006C94                     __end_of_get_temperature:
  2907                           	callstack 0
  2908                           
  2909 ;; *************** function _state_translator_micro_to_fpga *****************
  2910 ;; Defined at:
  2911 ;;		line 24 in file "utils.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;  state           2    0[COMRAM] PTR int 
  2914 ;;		 -> state(2), 
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;  state_machin    1    4[COMRAM] unsigned char 
  2917 ;; Return value:  Size  Location     Type
  2918 ;;                  1    wreg      unsigned char 
  2919 ;; Registers used:
  2920 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2921 ;; Tracked objects:
  2922 ;;		On entry : 0/0
  2923 ;;		On exit  : 0/0
  2924 ;;		Unchanged: 0/0
  2925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2926 ;;      Params:         2       0       0       0       0       0       0
  2927 ;;      Locals:         1       0       0       0       0       0       0
  2928 ;;      Temps:          2       0       0       0       0       0       0
  2929 ;;      Totals:         5       0       0       0       0       0       0
  2930 ;;Total ram usage:        5 bytes
  2931 ;; Hardware stack levels used:    1
  2932 ;; Hardware stack levels required when called:    1
  2933 ;; This function calls:
  2934 ;;		Nothing
  2935 ;; This function is called by:
  2936 ;;		_main
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940                           	psect	text3
  2941  006E12                     __ptext3:
  2942                           	callstack 0
  2943  006E12                     _state_translator_micro_to_fpga:
  2944                           	callstack 0
  2945  006E12  FFFF               	dw	65535	; assembler added errata NOP
  2946  006E14                     
  2947                           ;utils.c: 25:     unsigned char state_machine_code;;utils.c: 26:     if (*state == 2){
  2948  006E14  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2949  006E18  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2950  006E1C  0E02               	movlw	2
  2951  006E1E  18DE               	xorwf	postinc2,w,c
  2952  006E20  10DE               	iorwf	postinc2,w,c
  2953  006E22  A4D8               	btfss	status,2,c
  2954  006E24  EF16  F037         	goto	u6691
  2955  006E28  EF19  F037         	goto	u6690
  2956  006E2C                     u6691:
  2957  006E2C  FFFF               	dw	65535	; assembler added errata NOP
  2958  006E2E  EF1E  F037         	goto	l5432
  2959  006E32                     u6690:
  2960  006E32  FFFF               	dw	65535	; assembler added errata NOP
  2961  006E34                     
  2962                           ;utils.c: 27:         state_machine_code = 0x10;
  2963  006E34  0E10               	movlw	16
  2964  006E36  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2965                           
  2966                           ;utils.c: 28:     } else if (*state == 0) {
  2967  006E38  EF4A  F037         	goto	l263
  2968  006E3C                     l5432:
  2969  006E3C  FFFF               	dw	65535	; assembler added errata NOP
  2970  006E3E  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2971  006E42  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2972  006E46  50DE               	movf	postinc2,w,c
  2973  006E48  10DE               	iorwf	postinc2,w,c
  2974  006E4A  A4D8               	btfss	status,2,c
  2975  006E4C  EF2A  F037         	goto	u6701
  2976  006E50  EF2D  F037         	goto	u6700
  2977  006E54                     u6701:
  2978  006E54  FFFF               	dw	65535	; assembler added errata NOP
  2979  006E56  EF32  F037         	goto	l5436
  2980  006E5A                     u6700:
  2981  006E5A  FFFF               	dw	65535	; assembler added errata NOP
  2982  006E5C                     
  2983                           ;utils.c: 29:         state_machine_code = 0x09;
  2984  006E5C  0E09               	movlw	9
  2985  006E5E  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2986                           
  2987                           ;utils.c: 30:     } else if (*state == 8) {
  2988  006E60  EF4A  F037         	goto	l263
  2989  006E64                     l5436:
  2990  006E64  FFFF               	dw	65535	; assembler added errata NOP
  2991  006E66  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2992  006E6A  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2993  006E6E  0E08               	movlw	8
  2994  006E70  18DE               	xorwf	postinc2,w,c
  2995  006E72  10DE               	iorwf	postinc2,w,c
  2996  006E74  A4D8               	btfss	status,2,c
  2997  006E76  EF3F  F037         	goto	u6711
  2998  006E7A  EF42  F037         	goto	u6710
  2999  006E7E                     u6711:
  3000  006E7E  FFFF               	dw	65535	; assembler added errata NOP
  3001  006E80  EF47  F037         	goto	l5440
  3002  006E84                     u6710:
  3003  006E84  FFFF               	dw	65535	; assembler added errata NOP
  3004  006E86                     
  3005                           ;utils.c: 31:         state_machine_code = 0x40;
  3006  006E86  0E40               	movlw	64
  3007  006E88  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3008                           
  3009                           ;utils.c: 32:     } else {
  3010  006E8A  EF4A  F037         	goto	l263
  3011  006E8E                     l5440:
  3012  006E8E  FFFF               	dw	65535	; assembler added errata NOP
  3013                           
  3014                           ;utils.c: 33:         state_machine_code = 0x80;
  3015  006E90  0E80               	movlw	128
  3016  006E92  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3017  006E94                     l263:
  3018  006E94  FFFF               	dw	65535	; assembler added errata NOP
  3019                           
  3020                           ;utils.c: 35:     return state_machine_code;
  3021  006E96  5005               	movf	state_translator_micro_to_fpga@state_machine_code^0,w,c
  3022  006E98  0012               	return		;funcret
  3023  006E9A  FFFF               	dw	65535	; errata NOP
  3024  006E9C                     __end_of_state_translator_micro_to_fpga:
  3025                           	callstack 0
  3026                           
  3027 ;; *************** function _state_translator_fpga_to_micro *****************
  3028 ;; Defined at:
  3029 ;;		line 2 in file "utils.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;  state_machin    1    wreg     unsigned char 
  3032 ;;  state           2    2[COMRAM] PTR int 
  3033 ;;		 -> state(2), 
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;  state_machin    1    4[COMRAM] unsigned char 
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  1    wreg      void 
  3038 ;; Registers used:
  3039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3045 ;;      Params:         2       0       0       0       0       0       0
  3046 ;;      Locals:         1       0       0       0       0       0       0
  3047 ;;      Temps:          0       0       0       0       0       0       0
  3048 ;;      Totals:         3       0       0       0       0       0       0
  3049 ;;Total ram usage:        3 bytes
  3050 ;; Hardware stack levels used:    1
  3051 ;; Hardware stack levels required when called:    3
  3052 ;; This function calls:
  3053 ;;		_lcd_dat
  3054 ;; This function is called by:
  3055 ;;		_main
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           	psect	text4
  3060  007BE2                     __ptext4:
  3061                           	callstack 0
  3062  007BE2                     _state_translator_fpga_to_micro:
  3063                           	callstack 0
  3064  007BE2  FFFF               	dw	65535	; assembler added errata NOP
  3065                           
  3066                           ;incstack = 0
  3067                           ;state_translator_fpga_to_micro@state_machine_code stored from wreg
  3068  007BE4  6E05               	movwf	state_translator_fpga_to_micro@state_machine_code^0,c
  3069  007BE6                     
  3070                           ;utils.c: 3:     lcd_dat(state_machine_code);
  3071  007BE6  5005               	movf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3072  007BE8  EC0F  F033         	call	_lcd_dat
  3073  007BEC                     
  3074                           ;utils.c: 4:     if (state_machine_code == 0x01){
  3075  007BEC  0405               	decf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3076  007BEE  A4D8               	btfss	status,2,c
  3077  007BF0  EFFC  F03D         	goto	u6621
  3078  007BF4  EFFF  F03D         	goto	u6620
  3079  007BF8                     u6621:
  3080  007BF8  FFFF               	dw	65535	; assembler added errata NOP
  3081  007BFA  EF0A  F03E         	goto	l5394
  3082  007BFE                     u6620:
  3083  007BFE  FFFF               	dw	65535	; assembler added errata NOP
  3084  007C00                     
  3085                           ;utils.c: 5:         *state = 1;
  3086  007C00  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3087  007C04  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3088  007C08  0E01               	movlw	1
  3089  007C0A  6EDE               	movwf	postinc2,c
  3090  007C0C  0E00               	movlw	0
  3091  007C0E  6EDD               	movwf	postdec2,c
  3092                           
  3093                           ;utils.c: 6:     } else if (state_machine_code == 0x02){
  3094  007C10  EF8F  F03E         	goto	l259
  3095  007C14                     l5394:
  3096  007C14  FFFF               	dw	65535	; assembler added errata NOP
  3097  007C16  0E02               	movlw	2
  3098  007C18  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3099  007C1A  A4D8               	btfss	status,2,c
  3100  007C1C  EF12  F03E         	goto	u6631
  3101  007C20  EF15  F03E         	goto	u6630
  3102  007C24                     u6631:
  3103  007C24  FFFF               	dw	65535	; assembler added errata NOP
  3104  007C26  EF20  F03E         	goto	l5398
  3105  007C2A                     u6630:
  3106  007C2A  FFFF               	dw	65535	; assembler added errata NOP
  3107  007C2C                     
  3108                           ;utils.c: 7:         *state = 3;
  3109  007C2C  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3110  007C30  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3111  007C34  0E03               	movlw	3
  3112  007C36  6EDE               	movwf	postinc2,c
  3113  007C38  0E00               	movlw	0
  3114  007C3A  6EDD               	movwf	postdec2,c
  3115                           
  3116                           ;utils.c: 8:     } else if (state_machine_code == 0x04){
  3117  007C3C  EF8F  F03E         	goto	l259
  3118  007C40                     l5398:
  3119  007C40  FFFF               	dw	65535	; assembler added errata NOP
  3120  007C42  0E04               	movlw	4
  3121  007C44  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3122  007C46  A4D8               	btfss	status,2,c
  3123  007C48  EF28  F03E         	goto	u6641
  3124  007C4C  EF2B  F03E         	goto	u6640
  3125  007C50                     u6641:
  3126  007C50  FFFF               	dw	65535	; assembler added errata NOP
  3127  007C52  EF36  F03E         	goto	l5402
  3128  007C56                     u6640:
  3129  007C56  FFFF               	dw	65535	; assembler added errata NOP
  3130  007C58                     
  3131                           ;utils.c: 9:         *state = 4;
  3132  007C58  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3133  007C5C  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3134  007C60  0E04               	movlw	4
  3135  007C62  6EDE               	movwf	postinc2,c
  3136  007C64  0E00               	movlw	0
  3137  007C66  6EDD               	movwf	postdec2,c
  3138                           
  3139                           ;utils.c: 10:     } else if (state_machine_code == 0x08){
  3140  007C68  EF8F  F03E         	goto	l259
  3141  007C6C                     l5402:
  3142  007C6C  FFFF               	dw	65535	; assembler added errata NOP
  3143  007C6E  0E08               	movlw	8
  3144  007C70  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3145  007C72  A4D8               	btfss	status,2,c
  3146  007C74  EF3E  F03E         	goto	u6651
  3147  007C78  EF41  F03E         	goto	u6650
  3148  007C7C                     u6651:
  3149  007C7C  FFFF               	dw	65535	; assembler added errata NOP
  3150  007C7E  EF4C  F03E         	goto	l5406
  3151  007C82                     u6650:
  3152  007C82  FFFF               	dw	65535	; assembler added errata NOP
  3153  007C84                     
  3154                           ;utils.c: 11:         *state = 7;
  3155  007C84  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3156  007C88  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3157  007C8C  0E07               	movlw	7
  3158  007C8E  6EDE               	movwf	postinc2,c
  3159  007C90  0E00               	movlw	0
  3160  007C92  6EDD               	movwf	postdec2,c
  3161                           
  3162                           ;utils.c: 12:     } else if (state_machine_code == 0x10){
  3163  007C94  EF8F  F03E         	goto	l259
  3164  007C98                     l5406:
  3165  007C98  FFFF               	dw	65535	; assembler added errata NOP
  3166  007C9A  0E10               	movlw	16
  3167  007C9C  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3168  007C9E  A4D8               	btfss	status,2,c
  3169  007CA0  EF54  F03E         	goto	u6661
  3170  007CA4  EF57  F03E         	goto	u6660
  3171  007CA8                     u6661:
  3172  007CA8  FFFF               	dw	65535	; assembler added errata NOP
  3173  007CAA  EF62  F03E         	goto	l5410
  3174  007CAE                     u6660:
  3175  007CAE  FFFF               	dw	65535	; assembler added errata NOP
  3176  007CB0                     
  3177                           ;utils.c: 13:         *state = 2;
  3178  007CB0  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3179  007CB4  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3180  007CB8  0E02               	movlw	2
  3181  007CBA  6EDE               	movwf	postinc2,c
  3182  007CBC  0E00               	movlw	0
  3183  007CBE  6EDD               	movwf	postdec2,c
  3184                           
  3185                           ;utils.c: 14:     } else if (state_machine_code == 0x40){
  3186  007CC0  EF8F  F03E         	goto	l259
  3187  007CC4                     l5410:
  3188  007CC4  FFFF               	dw	65535	; assembler added errata NOP
  3189  007CC6  0E40               	movlw	64
  3190  007CC8  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3191  007CCA  A4D8               	btfss	status,2,c
  3192  007CCC  EF6A  F03E         	goto	u6671
  3193  007CD0  EF6D  F03E         	goto	u6670
  3194  007CD4                     u6671:
  3195  007CD4  FFFF               	dw	65535	; assembler added errata NOP
  3196  007CD6  EF78  F03E         	goto	l5414
  3197  007CDA                     u6670:
  3198  007CDA  FFFF               	dw	65535	; assembler added errata NOP
  3199  007CDC                     
  3200                           ;utils.c: 15:         *state = 8;
  3201  007CDC  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3202  007CE0  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3203  007CE4  0E08               	movlw	8
  3204  007CE6  6EDE               	movwf	postinc2,c
  3205  007CE8  0E00               	movlw	0
  3206  007CEA  6EDD               	movwf	postdec2,c
  3207                           
  3208                           ;utils.c: 16:     } else if (state_machine_code == 0x80){
  3209  007CEC  EF8F  F03E         	goto	l259
  3210  007CF0                     l5414:
  3211  007CF0  FFFF               	dw	65535	; assembler added errata NOP
  3212  007CF2  0E80               	movlw	128
  3213  007CF4  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3214  007CF6  A4D8               	btfss	status,2,c
  3215  007CF8  EF80  F03E         	goto	u6681
  3216  007CFC  EF83  F03E         	goto	u6680
  3217  007D00                     u6681:
  3218  007D00  FFFF               	dw	65535	; assembler added errata NOP
  3219  007D02  EF86  F03E         	goto	l5418
  3220  007D06                     u6680:
  3221  007D06  FFFF               	dw	65535	; assembler added errata NOP
  3222  007D08  EF8F  F03E         	goto	l259
  3223  007D0C                     l5418:
  3224  007D0C  FFFF               	dw	65535	; assembler added errata NOP
  3225                           
  3226                           ;utils.c: 19:         *state = 0;
  3227  007D0E  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3228  007D12  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3229  007D16  0E00               	movlw	0
  3230  007D18  6EDE               	movwf	postinc2,c
  3231  007D1A  0E00               	movlw	0
  3232  007D1C  6EDD               	movwf	postdec2,c
  3233  007D1E                     l259:
  3234  007D1E  FFFF               	dw	65535	; assembler added errata NOP
  3235  007D20  0012               	return		;funcret
  3236  007D22  FFFF               	dw	65535	; errata NOP
  3237  007D24                     __end_of_state_translator_fpga_to_micro:
  3238                           	callstack 0
  3239                           
  3240 ;; *************** function _snprintf *****************
  3241 ;; Defined at:
  3242 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\snprintf.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;  s               2   10[BANK0 ] PTR unsigned char 
  3245 ;;		 -> main@greet_str(160), 
  3246 ;;  n               2   12[BANK0 ] unsigned int 
  3247 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  3248 ;;		 -> STR_10(3), 
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;  ap              2   20[BANK0 ] PTR void [1]
  3251 ;;		 -> ?_snprintf(2), 
  3252 ;;  ret             2    0        int 
  3253 ;; Return value:  Size  Location     Type
  3254 ;;                  2   10[BANK0 ] int 
  3255 ;; Registers used:
  3256 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3262 ;;      Params:         0       8       0       0       0       0       0
  3263 ;;      Locals:         0       4       0       0       0       0       0
  3264 ;;      Temps:          0       0       0       0       0       0       0
  3265 ;;      Totals:         0      12       0       0       0       0       0
  3266 ;;Total ram usage:       12 bytes
  3267 ;; Hardware stack levels used:    1
  3268 ;; Hardware stack levels required when called:    9
  3269 ;; This function calls:
  3270 ;;		_vsnprintf
  3271 ;; This function is called by:
  3272 ;;		_main
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           	psect	text5
  3277  00669E                     __ptext5:
  3278                           	callstack 0
  3279  00669E                     _snprintf:
  3280                           	callstack 0
  3281  00669E  FFFF               	dw	65535	; assembler added errata NOP
  3282  0066A0  0EC8               	movlw	low (?_snprintf+6)
  3283  0066A2  0100               	movlb	0	; () banked
  3284  0066A4  6FCC               	movwf	snprintf@ap& (0+255),b
  3285  0066A6  0E00               	movlw	high (?_snprintf+6)
  3286  0066A8  6FCD               	movwf	(snprintf@ap+1)& (0+255),b
  3287  0066AA                     
  3288                           ; BSR set to: 0
  3289  0066AA  C0C2  F070         	movff	snprintf@s,vsnprintf@s
  3290  0066AE  C0C3  F071         	movff	snprintf@s+1,vsnprintf@s+1
  3291  0066B2  C0C4  F072         	movff	snprintf@n,vsnprintf@n
  3292  0066B6  C0C5  F073         	movff	snprintf@n+1,vsnprintf@n+1
  3293  0066BA  C0C6  F074         	movff	snprintf@fmt,vsnprintf@fmt
  3294  0066BE  C0C7  F075         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  3295  0066C2  0ECC               	movlw	low snprintf@ap
  3296  0066C4  6E76               	movwf	vsnprintf@ap^0,c
  3297  0066C6  0E00               	movlw	high snprintf@ap
  3298  0066C8  6E77               	movwf	(vsnprintf@ap+1)^0,c
  3299  0066CA  EC54  F03D         	call	_vsnprintf	;wreg free
  3300  0066CE  0012               	return		;funcret
  3301  0066D0  FFFF               	dw	65535	; errata NOP
  3302  0066D2                     __end_of_snprintf:
  3303                           	callstack 0
  3304                           
  3305 ;; *************** function _vsnprintf *****************
  3306 ;; Defined at:
  3307 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_vsnprintf.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;  s               2  111[COMRAM] PTR unsigned char 
  3310 ;;		 -> main@greet_str(160), 
  3311 ;;  n               2  113[COMRAM] unsigned int 
  3312 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  3313 ;;		 -> STR_10(3), 
  3314 ;;  ap              2  117[COMRAM] PTR PTR void 
  3315 ;;		 -> snprintf@ap(2), 
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;  f               6    4[BANK0 ] struct _IO_FILE
  3318 ;;  cnt             2    2[BANK0 ] int 
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  2  111[COMRAM] int 
  3321 ;; Registers used:
  3322 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3328 ;;      Params:         8       0       0       0       0       0       0
  3329 ;;      Locals:         0      10       0       0       0       0       0
  3330 ;;      Temps:          4       0       0       0       0       0       0
  3331 ;;      Totals:        12      10       0       0       0       0       0
  3332 ;;Total ram usage:       22 bytes
  3333 ;; Hardware stack levels used:    1
  3334 ;; Hardware stack levels required when called:    8
  3335 ;; This function calls:
  3336 ;;		_vfprintf
  3337 ;; This function is called by:
  3338 ;;		_snprintf
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           	psect	text6
  3343  007AA8                     __ptext6:
  3344                           	callstack 0
  3345  007AA8                     _vsnprintf:
  3346                           	callstack 0
  3347  007AA8  FFFF               	dw	65535	; assembler added errata NOP
  3348  007AAA  0E80               	movlw	128
  3349  007AAC  5C73               	subwf	(vsnprintf@n+1)^0,w,c
  3350  007AAE  A0D8               	btfss	status,0,c
  3351  007AB0  EF5C  F03D         	goto	u6521
  3352  007AB4  EF5F  F03D         	goto	u6520
  3353  007AB8                     u6521:
  3354  007AB8  FFFF               	dw	65535	; assembler added errata NOP
  3355  007ABA  EF69  F03D         	goto	l5240
  3356  007ABE                     u6520:
  3357  007ABE  FFFF               	dw	65535	; assembler added errata NOP
  3358  007AC0  0E00               	movlw	0
  3359  007AC2  0100               	movlb	0	; () banked
  3360  007AC4  6F8D               	movwf	(_errno+1)& (0+255),b
  3361  007AC6  0E4B               	movlw	75
  3362  007AC8  6F8C               	movwf	_errno& (0+255),b
  3363  007ACA                     
  3364                           ; BSR set to: 0
  3365  007ACA  6870               	setf	?_vsnprintf^0,c
  3366  007ACC  6871               	setf	(?_vsnprintf+1)^0,c
  3367  007ACE  EFEE  F03D         	goto	l1096
  3368  007AD2                     l5240:
  3369  007AD2  FFFF               	dw	65535	; assembler added errata NOP
  3370  007AD4  C070  F0BC         	movff	vsnprintf@s,vsnprintf@f
  3371  007AD8  C071  F0BD         	movff	vsnprintf@s+1,vsnprintf@f+1
  3372  007ADC  5073               	movf	(vsnprintf@n+1)^0,w,c
  3373  007ADE  E10A               	bnz	u6530
  3374  007AE0  0E02               	movlw	2
  3375  007AE2  5C72               	subwf	vsnprintf@n^0,w,c
  3376  007AE4  A0D8               	btfss	status,0,c
  3377  007AE6  EF77  F03D         	goto	u6531
  3378  007AEA  EF7A  F03D         	goto	u6530
  3379  007AEE                     u6531:
  3380  007AEE  FFFF               	dw	65535	; assembler added errata NOP
  3381  007AF0  EF88  F03D         	goto	l5246
  3382  007AF4                     u6530:
  3383  007AF4  FFFF               	dw	65535	; assembler added errata NOP
  3384  007AF6  0EFF               	movlw	255
  3385  007AF8  2472               	addwf	vsnprintf@n^0,w,c
  3386  007AFA  0100               	movlb	0	; () banked
  3387  007AFC  6FC0               	movwf	(vsnprintf@f+4)& (0+255),b
  3388  007AFE  0EFF               	movlw	255
  3389  007B00  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  3390  007B02  6FC1               	movwf	(vsnprintf@f+5)& (0+255),b
  3391  007B04                     
  3392                           ; BSR set to: 0
  3393  007B04  0E00               	movlw	0
  3394  007B06  6FBF               	movwf	(vsnprintf@f+3)& (0+255),b
  3395  007B08  0E00               	movlw	0
  3396  007B0A  6FBE               	movwf	(vsnprintf@f+2)& (0+255),b
  3397  007B0C  EF92  F03D         	goto	l5248
  3398  007B10                     l5246:
  3399  007B10  FFFF               	dw	65535	; assembler added errata NOP
  3400  007B12  0E00               	movlw	0
  3401  007B14  0100               	movlb	0	; () banked
  3402  007B16  6FC1               	movwf	(vsnprintf@f+5)& (0+255),b
  3403  007B18  0E01               	movlw	1
  3404  007B1A  6FC0               	movwf	(vsnprintf@f+4)& (0+255),b
  3405  007B1C  0E00               	movlw	0
  3406  007B1E  6FBF               	movwf	(vsnprintf@f+3)& (0+255),b
  3407  007B20  0E01               	movlw	1
  3408  007B22  6FBE               	movwf	(vsnprintf@f+2)& (0+255),b
  3409  007B24                     l5248:
  3410  007B24  FFFF               	dw	65535	; assembler added errata NOP
  3411                           
  3412                           ; BSR set to: 0
  3413  007B26  0EBC               	movlw	low vsnprintf@f
  3414  007B28  6E68               	movwf	vfprintf@fp^0,c
  3415  007B2A  0E00               	movlw	high vsnprintf@f
  3416  007B2C  6E69               	movwf	(vfprintf@fp+1)^0,c
  3417  007B2E  C074  F06A         	movff	vsnprintf@fmt,vfprintf@fmt
  3418  007B32  C075  F06B         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  3419  007B36  C076  F06C         	movff	vsnprintf@ap,vfprintf@ap
  3420  007B3A  C077  F06D         	movff	vsnprintf@ap+1,vfprintf@ap+1
  3421  007B3E  ECD9  F035         	call	_vfprintf	;wreg free
  3422  007B42  C068  F0BA         	movff	?_vfprintf,vsnprintf@cnt
  3423  007B46  C069  F0BB         	movff	?_vfprintf+1,vsnprintf@cnt+1
  3424  007B4A  5072               	movf	vsnprintf@n^0,w,c
  3425  007B4C  1073               	iorwf	(vsnprintf@n+1)^0,w,c
  3426  007B4E  B4D8               	btfsc	status,2,c
  3427  007B50  EFAC  F03D         	goto	u6541
  3428  007B54  EFAF  F03D         	goto	u6540
  3429  007B58                     u6541:
  3430  007B58  FFFF               	dw	65535	; assembler added errata NOP
  3431  007B5A  EFE9  F03D         	goto	l5260
  3432  007B5E                     u6540:
  3433  007B5E  FFFF               	dw	65535	; assembler added errata NOP
  3434  007B60  0100               	movlb	0	; () banked
  3435  007B62  BFBB               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  3436  007B64  EFB6  F03D         	goto	u6551
  3437  007B68  EFB9  F03D         	goto	u6550
  3438  007B6C                     u6551:
  3439  007B6C  FFFF               	dw	65535	; assembler added errata NOP
  3440  007B6E  EFE9  F03D         	goto	l5260
  3441  007B72                     u6550:
  3442  007B72  FFFF               	dw	65535	; assembler added errata NOP
  3443  007B74                     
  3444                           ; BSR set to: 0
  3445  007B74  0EFF               	movlw	255
  3446  007B76  6E78               	movwf	??_vsnprintf^0,c
  3447  007B78  0EFF               	movlw	255
  3448  007B7A  6E79               	movwf	(??_vsnprintf+1)^0,c
  3449  007B7C  C072  F07A         	movff	vsnprintf@n,??_vsnprintf+2
  3450  007B80  C073  F07B         	movff	vsnprintf@n+1,??_vsnprintf+3
  3451  007B84  5078               	movf	??_vsnprintf^0,w,c
  3452  007B86  267A               	addwf	(??_vsnprintf+2)^0,f,c
  3453  007B88  5079               	movf	(??_vsnprintf+1)^0,w,c
  3454  007B8A  227B               	addwfc	(??_vsnprintf+3)^0,f,c
  3455  007B8C  507A               	movf	(??_vsnprintf+2)^0,w,c
  3456  007B8E  5DBA               	subwf	vsnprintf@cnt& (0+255),w,b
  3457  007B90  507B               	movf	(??_vsnprintf+3)^0,w,c
  3458  007B92  59BB               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  3459  007B94  A0D8               	btfss	status,0,c
  3460  007B96  EFCF  F03D         	goto	u6561
  3461  007B9A  EFD2  F03D         	goto	u6560
  3462  007B9E                     u6561:
  3463  007B9E  FFFF               	dw	65535	; assembler added errata NOP
  3464  007BA0  EFDB  F03D         	goto	l1101
  3465  007BA4                     u6560:
  3466  007BA4  FFFF               	dw	65535	; assembler added errata NOP
  3467  007BA6                     
  3468                           ; BSR set to: 0
  3469  007BA6  0EFF               	movlw	255
  3470  007BA8  2472               	addwf	vsnprintf@n^0,w,c
  3471  007BAA  6FB8               	movwf	_vsnprintf$1550& (0+255),b
  3472  007BAC  0EFF               	movlw	255
  3473  007BAE  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  3474  007BB0  6FB9               	movwf	(_vsnprintf$1550+1)& (0+255),b
  3475  007BB2  EFE0  F03D         	goto	l5258
  3476  007BB6                     l1101:
  3477  007BB6  FFFF               	dw	65535	; assembler added errata NOP
  3478                           
  3479                           ; BSR set to: 0
  3480  007BB8  C0BA  F0B8         	movff	vsnprintf@cnt,_vsnprintf$1550
  3481  007BBC  C0BB  F0B9         	movff	vsnprintf@cnt+1,_vsnprintf$1550+1
  3482  007BC0                     l5258:
  3483  007BC0  FFFF               	dw	65535	; assembler added errata NOP
  3484                           
  3485                           ; BSR set to: 0
  3486  007BC2  51B8               	movf	_vsnprintf$1550& (0+255),w,b
  3487  007BC4  2470               	addwf	vsnprintf@s^0,w,c
  3488  007BC6  6ED9               	movwf	fsr2l,c
  3489  007BC8  51B9               	movf	(_vsnprintf$1550+1)& (0+255),w,b
  3490  007BCA  2071               	addwfc	(vsnprintf@s+1)^0,w,c
  3491  007BCC  6EDA               	movwf	fsr2h,c
  3492  007BCE  0E00               	movlw	0
  3493  007BD0  6EDF               	movwf	indf2,c
  3494  007BD2                     l5260:
  3495  007BD2  FFFF               	dw	65535	; assembler added errata NOP
  3496  007BD4  C0BA  F070         	movff	vsnprintf@cnt,?_vsnprintf
  3497  007BD8  C0BB  F071         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  3498  007BDC                     l1096:
  3499  007BDC  FFFF               	dw	65535	; assembler added errata NOP
  3500  007BDE  0012               	return		;funcret
  3501  007BE0  FFFF               	dw	65535	; errata NOP
  3502  007BE2                     __end_of_vsnprintf:
  3503                           	callstack 0
  3504                           
  3505 ;; *************** function _vfprintf *****************
  3506 ;; Defined at:
  3507 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;  fp              2  103[COMRAM] PTR struct _IO_FILE
  3510 ;;		 -> vsnprintf@f(6), 
  3511 ;;  fmt             2  105[COMRAM] PTR const unsigned char 
  3512 ;;		 -> STR_10(3), 
  3513 ;;  ap              2  107[COMRAM] PTR PTR void 
  3514 ;;		 -> snprintf@ap(2), 
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;  cfmt            2  109[COMRAM] PTR unsigned char 
  3517 ;;		 -> STR_10(3), 
  3518 ;; Return value:  Size  Location     Type
  3519 ;;                  2  103[COMRAM] int 
  3520 ;; Registers used:
  3521 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3527 ;;      Params:         6       0       0       0       0       0       0
  3528 ;;      Locals:         2       0       0       0       0       0       0
  3529 ;;      Temps:          0       0       0       0       0       0       0
  3530 ;;      Totals:         8       0       0       0       0       0       0
  3531 ;;Total ram usage:        8 bytes
  3532 ;; Hardware stack levels used:    1
  3533 ;; Hardware stack levels required when called:    7
  3534 ;; This function calls:
  3535 ;;		_vfpfcnvrt
  3536 ;; This function is called by:
  3537 ;;		_vsnprintf
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           	psect	text7
  3542  006BB2                     __ptext7:
  3543                           	callstack 0
  3544  006BB2                     _vfprintf:
  3545                           	callstack 0
  3546  006BB2  FFFF               	dw	65535	; assembler added errata NOP
  3547  006BB4                     
  3548                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3549  006BB4  C06A  F06E         	movff	vfprintf@fmt,vfprintf@cfmt
  3550  006BB8  C06B  F06F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3551  006BBC                     
  3552                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  3553  006BBC  0E00               	movlw	0
  3554  006BBE  0100               	movlb	0	; () banked
  3555  006BC0  6F85               	movwf	(_nout+1)& (0+255),b
  3556  006BC2  0E00               	movlw	0
  3557  006BC4  6F84               	movwf	_nout& (0+255),b
  3558                           
  3559                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  3560  006BC6  EFF9  F035         	goto	l5086
  3561  006BCA                     l5084:
  3562  006BCA  FFFF               	dw	65535	; assembler added errata NOP
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3566  006BCC  C068  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  3567  006BD0  C069  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3568  006BD4  0E6E               	movlw	low vfprintf@cfmt
  3569  006BD6  6E45               	movwf	vfpfcnvrt@fmt^0,c
  3570  006BD8  0E00               	movlw	high vfprintf@cfmt
  3571  006BDA  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3572  006BDC  C06C  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  3573  006BE0  C06D  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3574  006BE4  EC3D  F000         	call	_vfpfcnvrt	;wreg free
  3575  006BE8  5043               	movf	?_vfpfcnvrt^0,w,c
  3576  006BEA  0100               	movlb	0	; () banked
  3577  006BEC  2784               	addwf	_nout& (0+255),f,b
  3578  006BEE  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  3579  006BF0  2385               	addwfc	(_nout+1)& (0+255),f,b
  3580  006BF2                     l5086:
  3581  006BF2  FFFF               	dw	65535	; assembler added errata NOP
  3582                           
  3583                           ; BSR set to: 0
  3584                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  3585  006BF4  C06E  FFF6         	movff	vfprintf@cfmt,tblptrl
  3586  006BF8  C06F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3587  006BFC                     	if	0	;tblptru may be non-zero
  3588  006BFC                     	endif
  3589  006BFC                     	if	0	;tblptru may be non-zero
  3590  006BFC                     	endif
  3591  006BFC  0008               	tblrd		*
  3592  006BFE  FFFF               	dw	65535	; errata NOP
  3593  006C00  50F5               	movf	tablat,w,c
  3594  006C02  0900               	iorlw	0
  3595  006C04  A4D8               	btfss	status,2,c
  3596  006C06  EF07  F036         	goto	u6311
  3597  006C0A  EF0A  F036         	goto	u6310
  3598  006C0E                     u6311:
  3599  006C0E  FFFF               	dw	65535	; assembler added errata NOP
  3600  006C10  EFE5  F035         	goto	l5084
  3601  006C14                     u6310:
  3602  006C14  FFFF               	dw	65535	; assembler added errata NOP
  3603  006C16                     
  3604                           ; BSR set to: 0
  3605                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  3606  006C16  C084  F068         	movff	_nout,?_vfprintf
  3607  006C1A  C085  F069         	movff	_nout+1,?_vfprintf+1
  3608  006C1E                     
  3609                           ; BSR set to: 0
  3610  006C1E  0012               	return		;funcret
  3611  006C20  FFFF               	dw	65535	; errata NOP
  3612  006C22                     __end_of_vfprintf:
  3613                           	callstack 0
  3614                           
  3615 ;; *************** function _vfpfcnvrt *****************
  3616 ;; Defined at:
  3617 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  3620 ;;		 -> vsnprintf@f(6), 
  3621 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  3622 ;;		 -> vfprintf@cfmt(2), 
  3623 ;;  ap              2   70[COMRAM] PTR PTR void 
  3624 ;;		 -> snprintf@ap(2), 
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;  llu             8   95[COMRAM] unsigned long long 
  3627 ;;  ll              8   84[COMRAM] long long 
  3628 ;;  f               4    0        long long 
  3629 ;;  ct              3    0        unsigned char [3]
  3630 ;;  vp              2   92[COMRAM] PTR void 
  3631 ;;		 -> ?_snprintf(2), STR_8(50), STR_7(9), STR_6(7), 
  3632 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  3633 ;;		 -> STR_1(49), 
  3634 ;;  done            2   78[COMRAM] int 
  3635 ;;  cp              2   76[COMRAM] PTR unsigned char 
  3636 ;;		 -> ?_snprintf(2), STR_8(50), STR_7(9), STR_6(7), 
  3637 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  3638 ;;		 -> STR_1(49), 
  3639 ;;  i               2    0        int 
  3640 ;;  c               1   94[COMRAM] unsigned char 
  3641 ;; Return value:  Size  Location     Type
  3642 ;;                  2   66[COMRAM] int 
  3643 ;; Registers used:
  3644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3645 ;; Tracked objects:
  3646 ;;		On entry : 0/0
  3647 ;;		On exit  : 0/0
  3648 ;;		Unchanged: 0/0
  3649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3650 ;;      Params:         6       0       0       0       0       0       0
  3651 ;;      Locals:        27       0       0       0       0       0       0
  3652 ;;      Temps:          4       0       0       0       0       0       0
  3653 ;;      Totals:        37       0       0       0       0       0       0
  3654 ;;Total ram usage:       37 bytes
  3655 ;; Hardware stack levels used:    1
  3656 ;; Hardware stack levels required when called:    6
  3657 ;; This function calls:
  3658 ;;		_atoi
  3659 ;;		_ctoa
  3660 ;;		_dtoa
  3661 ;;		_fputc
  3662 ;;		_isdigit
  3663 ;;		_otoa
  3664 ;;		_stoa
  3665 ;;		_strncmp
  3666 ;;		_utoa
  3667 ;;		_xtoa
  3668 ;; This function is called by:
  3669 ;;		_vfprintf
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	text8
  3674  00007A                     __ptext8:
  3675                           	callstack 0
  3676  00007A                     _vfpfcnvrt:
  3677                           	callstack 0
  3678  00007A  FFFF               	dw	65535	; assembler added errata NOP
  3679  00007C                     
  3680                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  3681  00007C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3682  000080  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3683  000084  CFDE FFF6          	movff	postinc2,tblptrl
  3684  000088  CFDD FFF7          	movff	postdec2,tblptrh
  3685  00008C                     	if	0	;tblptru may be non-zero
  3686  00008C                     	endif
  3687  00008C                     	if	0	;tblptru may be non-zero
  3688  00008C                     	endif
  3689  00008C  0008               	tblrd		*
  3690  00008E  FFFF               	dw	65535	; errata NOP
  3691  000090  50F5               	movf	tablat,w,c
  3692  000092  0A25               	xorlw	37
  3693  000094  A4D8               	btfss	status,2,c
  3694  000096  EF4F  F000         	goto	u5171
  3695  00009A  EF52  F000         	goto	u5170
  3696  00009E                     u5171:
  3697  00009E  FFFF               	dw	65535	; assembler added errata NOP
  3698  0000A0  EF11  F00A         	goto	l4670
  3699  0000A4                     u5170:
  3700  0000A4  FFFF               	dw	65535	; assembler added errata NOP
  3701  0000A6                     
  3702                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  3703  0000A6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3704  0000AA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3705  0000AE  2ADE               	incf	postinc2,f,c
  3706  0000B0  0E00               	movlw	0
  3707  0000B2  22DD               	addwfc	postdec2,f,c
  3708  0000B4                     
  3709                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  3710  0000B4  0E00               	movlw	0
  3711  0000B6  0100               	movlb	0	; () banked
  3712  0000B8  6F87               	movwf	(_width+1)& (0+255),b
  3713  0000BA  0E00               	movlw	0
  3714  0000BC  6F86               	movwf	_width& (0+255),b
  3715  0000BE  C086  F08A         	movff	_width,_flags
  3716  0000C2  C087  F08B         	movff	_width+1,_flags+1
  3717  0000C6                     
  3718                           ; BSR set to: 0
  3719                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  3720  0000C6  6988               	setf	_prec& (0+255),b
  3721  0000C8  6989               	setf	(_prec+1)& (0+255),b
  3722  0000CA                     
  3723                           ; BSR set to: 0
  3724                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  3725  0000CA  0E00               	movlw	0
  3726  0000CC  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  3727  0000CE  0E00               	movlw	0
  3728  0000D0  6E4F               	movwf	vfpfcnvrt@done^0,c
  3729                           
  3730                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  3731  0000D2  EFC0  F000         	goto	l4388
  3732  0000D6                     l4362:
  3733  0000D6  FFFF               	dw	65535	; assembler added errata NOP
  3734                           
  3735                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  3736  0000D8  0100               	movlb	0	; () banked
  3737  0000DA  818A               	bsf	_flags& (0+255),0,b
  3738  0000DC                     l4364:
  3739  0000DC  FFFF               	dw	65535	; assembler added errata NOP
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  3743  0000DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3744  0000E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3745  0000E6  2ADE               	incf	postinc2,f,c
  3746  0000E8  0E00               	movlw	0
  3747  0000EA  22DD               	addwfc	postdec2,f,c
  3748                           
  3749                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  3750  0000EC  EFC0  F000         	goto	l4388
  3751  0000F0                     l4366:
  3752  0000F0  FFFF               	dw	65535	; assembler added errata NOP
  3753                           
  3754                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  3755  0000F2  0100               	movlb	0	; () banked
  3756  0000F4  838A               	bsf	_flags& (0+255),1,b
  3757  0000F6  EF6E  F000         	goto	l4364
  3758  0000FA                     l4370:
  3759  0000FA  FFFF               	dw	65535	; assembler added errata NOP
  3760                           
  3761                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  3762  0000FC  0100               	movlb	0	; () banked
  3763  0000FE  858A               	bsf	_flags& (0+255),2,b
  3764  000100  EF6E  F000         	goto	l4364
  3765  000104                     l4374:
  3766  000104  FFFF               	dw	65535	; assembler added errata NOP
  3767                           
  3768                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  3769  000106  0100               	movlb	0	; () banked
  3770  000108  878A               	bsf	_flags& (0+255),3,b
  3771  00010A  EF6E  F000         	goto	l4364
  3772  00010E                     l4378:
  3773  00010E  FFFF               	dw	65535	; assembler added errata NOP
  3774                           
  3775                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  3776  000110  0100               	movlb	0	; () banked
  3777  000112  898A               	bsf	_flags& (0+255),4,b
  3778  000114  EF6E  F000         	goto	l4364
  3779  000118                     l4382:
  3780  000118  FFFF               	dw	65535	; assembler added errata NOP
  3781                           
  3782                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  3783  00011A  0E00               	movlw	0
  3784  00011C  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  3785  00011E  0E01               	movlw	1
  3786  000120  6E4F               	movwf	vfpfcnvrt@done^0,c
  3787                           
  3788                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  3789  000122  EFC0  F000         	goto	l4388
  3790  000126                     l4386:
  3791  000126  FFFF               	dw	65535	; assembler added errata NOP
  3792  000128  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3793  00012C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3794  000130  CFDE FFF6          	movff	postinc2,tblptrl
  3795  000134  CFDD FFF7          	movff	postdec2,tblptrh
  3796  000138                     	if	0	;tblptru may be non-zero
  3797  000138                     	endif
  3798  000138                     	if	0	;tblptru may be non-zero
  3799  000138                     	endif
  3800  000138  0008               	tblrd		*
  3801  00013A  FFFF               	dw	65535	; errata NOP
  3802  00013C  50F5               	movf	tablat,w,c
  3803  00013E  6E49               	movwf	??_vfpfcnvrt^0,c
  3804  000140  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  3805                           
  3806                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3807                           ; Switch size 1, requested type "simple"
  3808                           ; Number of cases is 1, Range of values is 0 to 0
  3809                           ; switch strategies available:
  3810                           ; Name         Instructions Cycles
  3811                           ; simple_byte            4     3 (average)
  3812                           ;	Chosen strategy is simple_byte
  3813  000142  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3814  000144  0A00               	xorlw	0	; case 0
  3815  000146  B4D8               	btfsc	status,2,c
  3816  000148  EFA8  F000         	goto	l5752
  3817  00014C  EF8C  F000         	goto	l4382
  3818  000150                     l5752:
  3819  000150  FFFF               	dw	65535	; assembler added errata NOP
  3820                           
  3821                           ; Switch size 1, requested type "simple"
  3822                           ; Number of cases is 5, Range of values is 32 to 48
  3823                           ; switch strategies available:
  3824                           ; Name         Instructions Cycles
  3825                           ; simple_byte           16     9 (average)
  3826                           ;	Chosen strategy is simple_byte
  3827  000152  5049               	movf	??_vfpfcnvrt^0,w,c
  3828  000154  0A20               	xorlw	32	; case 32
  3829  000156  B4D8               	btfsc	status,2,c
  3830  000158  EF82  F000         	goto	l4374
  3831  00015C  0A03               	xorlw	3	; case 35
  3832  00015E  B4D8               	btfsc	status,2,c
  3833  000160  EF87  F000         	goto	l4378
  3834  000164  0A08               	xorlw	8	; case 43
  3835  000166  B4D8               	btfsc	status,2,c
  3836  000168  EF7D  F000         	goto	l4370
  3837  00016C  0A06               	xorlw	6	; case 45
  3838  00016E  B4D8               	btfsc	status,2,c
  3839  000170  EF6B  F000         	goto	l4362
  3840  000174  0A1D               	xorlw	29	; case 48
  3841  000176  B4D8               	btfsc	status,2,c
  3842  000178  EF78  F000         	goto	l4366
  3843  00017C  EF8C  F000         	goto	l4382
  3844  000180                     l4388:
  3845  000180  FFFF               	dw	65535	; assembler added errata NOP
  3846                           
  3847                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  3848  000182  504F               	movf	vfpfcnvrt@done^0,w,c
  3849  000184  1050               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  3850  000186  B4D8               	btfsc	status,2,c
  3851  000188  EFC8  F000         	goto	u5181
  3852  00018C  EFCB  F000         	goto	u5180
  3853  000190                     u5181:
  3854  000190  FFFF               	dw	65535	; assembler added errata NOP
  3855  000192  EF93  F000         	goto	l4386
  3856  000196                     u5180:
  3857  000196  FFFF               	dw	65535	; assembler added errata NOP
  3858  000198                     
  3859                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  3860  000198  0100               	movlb	0	; () banked
  3861  00019A  A18A               	btfss	_flags& (0+255),0,b
  3862  00019C  EFD2  F000         	goto	u5191
  3863  0001A0  EFD5  F000         	goto	u5190
  3864  0001A4                     u5191:
  3865  0001A4  FFFF               	dw	65535	; assembler added errata NOP
  3866  0001A6  EFD7  F000         	goto	l4392
  3867  0001AA                     u5190:
  3868  0001AA  FFFF               	dw	65535	; assembler added errata NOP
  3869  0001AC                     
  3870                           ; BSR set to: 0
  3871                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  3872  0001AC  938A               	bcf	_flags& (0+255),1,b
  3873  0001AE                     l4392:
  3874  0001AE  FFFF               	dw	65535	; assembler added errata NOP
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  3878  0001B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3879  0001B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3880  0001B8  CFDE FFF6          	movff	postinc2,tblptrl
  3881  0001BC  CFDD FFF7          	movff	postdec2,tblptrh
  3882  0001C0                     	if	0	;tblptru may be non-zero
  3883  0001C0                     	endif
  3884  0001C0                     	if	0	;tblptru may be non-zero
  3885  0001C0                     	endif
  3886  0001C0  0008               	tblrd		*
  3887  0001C2  FFFF               	dw	65535	; errata NOP
  3888  0001C4  50F5               	movf	tablat,w,c
  3889  0001C6  0A2A               	xorlw	42
  3890  0001C8  A4D8               	btfss	status,2,c
  3891  0001CA  EFE9  F000         	goto	u5201
  3892  0001CE  EFEC  F000         	goto	u5200
  3893  0001D2                     u5201:
  3894  0001D2  FFFF               	dw	65535	; assembler added errata NOP
  3895  0001D4  EF18  F001         	goto	l4400
  3896  0001D8                     u5200:
  3897  0001D8  FFFF               	dw	65535	; assembler added errata NOP
  3898  0001DA                     
  3899                           ; BSR set to: 0
  3900                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  3901  0001DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3902  0001DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3903  0001E2  2ADE               	incf	postinc2,f,c
  3904  0001E4  0E00               	movlw	0
  3905  0001E6  22DD               	addwfc	postdec2,f,c
  3906                           
  3907                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3908  0001E8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3909  0001EC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3910  0001F0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3911  0001F4  0E02               	movlw	2
  3912  0001F6  26DE               	addwf	postinc2,f,c
  3913  0001F8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3914  0001FC  0E00               	movlw	0
  3915  0001FE  22DD               	addwfc	postdec2,f,c
  3916  000200  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3917  000204  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3918  000208  CFDE F086          	movff	postinc2,_width
  3919  00020C  CFDD F087          	movff	postdec2,_width+1
  3920  000210                     
  3921                           ; BSR set to: 0
  3922                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  3923  000210  BF87               	btfsc	(_width+1)& (0+255),7,b
  3924  000212  EF10  F001         	goto	u5210
  3925  000216  EF0D  F001         	goto	u5211
  3926  00021A                     u5211:
  3927  00021A  FFFF               	dw	65535	; assembler added errata NOP
  3928  00021C  EF63  F001         	goto	l4410
  3929  000220                     u5210:
  3930  000220  FFFF               	dw	65535	; assembler added errata NOP
  3931  000222                     
  3932                           ; BSR set to: 0
  3933                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  3934  000222  818A               	bsf	_flags& (0+255),0,b
  3935                           
  3936                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  3937  000224  6D86               	negf	_width& (0+255),b
  3938  000226  1F87               	comf	(_width+1)& (0+255),f,b
  3939  000228  B0D8               	btfsc	status,0,c
  3940  00022A  2B87               	incf	(_width+1)& (0+255),f,b
  3941  00022C  EF63  F001         	goto	l4410
  3942  000230                     l4400:
  3943  000230  FFFF               	dw	65535	; assembler added errata NOP
  3944                           
  3945                           ; BSR set to: 0
  3946                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  3947  000232  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3948  000236  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3949  00023A  CFDE F008          	movff	postinc2,atoi@s
  3950  00023E  CFDD F009          	movff	postdec2,atoi@s+1
  3951  000242  EC34  F01E         	call	_atoi	;wreg free
  3952  000246  C008  F086         	movff	?_atoi,_width
  3953  00024A  C009  F087         	movff	?_atoi+1,_width+1
  3954                           
  3955                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3956  00024E  EF31  F001         	goto	l4404
  3957  000252                     l4402:
  3958  000252  FFFF               	dw	65535	; assembler added errata NOP
  3959                           
  3960                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  3961  000254  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3962  000258  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3963  00025C  2ADE               	incf	postinc2,f,c
  3964  00025E  0E00               	movlw	0
  3965  000260  22DD               	addwfc	postdec2,f,c
  3966  000262                     l4404:
  3967  000262  FFFF               	dw	65535	; assembler added errata NOP
  3968  000264  0ED0               	movlw	208
  3969  000266  6E49               	movwf	??_vfpfcnvrt^0,c
  3970  000268  0EFF               	movlw	255
  3971  00026A  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  3972  00026C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3973  000270  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3974  000274  CFDE FFF6          	movff	postinc2,tblptrl
  3975  000278  CFDD FFF7          	movff	postdec2,tblptrh
  3976  00027C                     	if	0	;tblptru may be non-zero
  3977  00027C                     	endif
  3978  00027C                     	if	0	;tblptru may be non-zero
  3979  00027C                     	endif
  3980  00027C  0008               	tblrd		*
  3981  00027E  FFFF               	dw	65535	; errata NOP
  3982  000280  50F5               	movf	tablat,w,c
  3983  000282  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3984  000284  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  3985  000286  5049               	movf	??_vfpfcnvrt^0,w,c
  3986  000288  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3987  00028A  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3988  00028C  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3989  00028E  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  3990  000290  E10B               	bnz	u5220
  3991  000292  0E0A               	movlw	10
  3992  000294  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3993  000296  A0D8               	btfss	status,0,c
  3994  000298  EF50  F001         	goto	u5221
  3995  00029C  EF54  F001         	goto	u5220
  3996  0002A0                     u5221:
  3997  0002A0  FFFF               	dw	65535	; assembler added errata NOP
  3998  0002A2  0E01               	movlw	1
  3999  0002A4  EF56  F001         	goto	u5230
  4000  0002A8                     u5220:
  4001  0002A8  FFFF               	dw	65535	; assembler added errata NOP
  4002  0002AA  0E00               	movlw	0
  4003  0002AC                     u5230:
  4004  0002AC  FFFF               	dw	65535	; assembler added errata NOP
  4005  0002AE  6E51               	movwf	_vfpfcnvrt$1683^0,c
  4006  0002B0  6A52               	clrf	(_vfpfcnvrt$1683+1)^0,c
  4007  0002B2  5051               	movf	_vfpfcnvrt$1683^0,w,c
  4008  0002B4  1052               	iorwf	(_vfpfcnvrt$1683+1)^0,w,c
  4009  0002B6  A4D8               	btfss	status,2,c
  4010  0002B8  EF60  F001         	goto	u5241
  4011  0002BC  EF63  F001         	goto	u5240
  4012  0002C0                     u5241:
  4013  0002C0  FFFF               	dw	65535	; assembler added errata NOP
  4014  0002C2  EF29  F001         	goto	l4402
  4015  0002C6                     u5240:
  4016  0002C6                     l4410:
  4017  0002C6  FFFF               	dw	65535	; assembler added errata NOP
  4018                           
  4019                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  4020  0002C8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4021  0002CC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4022  0002D0  CFDE FFF6          	movff	postinc2,tblptrl
  4023  0002D4  CFDD FFF7          	movff	postdec2,tblptrh
  4024  0002D8                     	if	0	;tblptru may be non-zero
  4025  0002D8                     	endif
  4026  0002D8                     	if	0	;tblptru may be non-zero
  4027  0002D8                     	endif
  4028  0002D8  0008               	tblrd		*
  4029  0002DA  FFFF               	dw	65535	; errata NOP
  4030  0002DC  50F5               	movf	tablat,w,c
  4031  0002DE  0A2E               	xorlw	46
  4032  0002E0  A4D8               	btfss	status,2,c
  4033  0002E2  EF75  F001         	goto	u5251
  4034  0002E6  EF78  F001         	goto	u5250
  4035  0002EA                     u5251:
  4036  0002EA  FFFF               	dw	65535	; assembler added errata NOP
  4037  0002EC  EF02  F002         	goto	l4430
  4038  0002F0                     u5250:
  4039  0002F0  FFFF               	dw	65535	; assembler added errata NOP
  4040  0002F2                     
  4041                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  4042  0002F2  0E00               	movlw	0
  4043  0002F4  0100               	movlb	0	; () banked
  4044  0002F6  6F89               	movwf	(_prec+1)& (0+255),b
  4045  0002F8  0E00               	movlw	0
  4046  0002FA  6F88               	movwf	_prec& (0+255),b
  4047  0002FC                     
  4048                           ; BSR set to: 0
  4049                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  4050  0002FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4051  000300  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4052  000304  2ADE               	incf	postinc2,f,c
  4053  000306  0E00               	movlw	0
  4054  000308  22DD               	addwfc	postdec2,f,c
  4055  00030A                     
  4056                           ; BSR set to: 0
  4057                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  4058  00030A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4059  00030E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4060  000312  CFDE FFF6          	movff	postinc2,tblptrl
  4061  000316  CFDD FFF7          	movff	postdec2,tblptrh
  4062  00031A                     	if	0	;tblptru may be non-zero
  4063  00031A                     	endif
  4064  00031A                     	if	0	;tblptru may be non-zero
  4065  00031A                     	endif
  4066  00031A  0008               	tblrd		*
  4067  00031C  FFFF               	dw	65535	; errata NOP
  4068  00031E  50F5               	movf	tablat,w,c
  4069  000320  0A2A               	xorlw	42
  4070  000322  A4D8               	btfss	status,2,c
  4071  000324  EF96  F001         	goto	u5261
  4072  000328  EF99  F001         	goto	u5260
  4073  00032C                     u5261:
  4074  00032C  FFFF               	dw	65535	; assembler added errata NOP
  4075  00032E  EFB7  F001         	goto	l4420
  4076  000332                     u5260:
  4077  000332  FFFF               	dw	65535	; assembler added errata NOP
  4078  000334                     
  4079                           ; BSR set to: 0
  4080                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  4081  000334  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4082  000338  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4083  00033C  2ADE               	incf	postinc2,f,c
  4084  00033E  0E00               	movlw	0
  4085  000340  22DD               	addwfc	postdec2,f,c
  4086                           
  4087                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4088  000342  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4089  000346  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4090  00034A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4091  00034E  0E02               	movlw	2
  4092  000350  26DE               	addwf	postinc2,f,c
  4093  000352  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4094  000356  0E00               	movlw	0
  4095  000358  22DD               	addwfc	postdec2,f,c
  4096  00035A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4097  00035E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4098  000362  CFDE F088          	movff	postinc2,_prec
  4099  000366  CFDD F089          	movff	postdec2,_prec+1
  4100                           
  4101                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  4102  00036A  EF02  F002         	goto	l4430
  4103  00036E                     l4420:
  4104  00036E  FFFF               	dw	65535	; assembler added errata NOP
  4105                           
  4106                           ; BSR set to: 0
  4107                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  4108  000370  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4109  000374  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4110  000378  CFDE F008          	movff	postinc2,atoi@s
  4111  00037C  CFDD F009          	movff	postdec2,atoi@s+1
  4112  000380  EC34  F01E         	call	_atoi	;wreg free
  4113  000384  C008  F088         	movff	?_atoi,_prec
  4114  000388  C009  F089         	movff	?_atoi+1,_prec+1
  4115                           
  4116                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4117  00038C  EFD0  F001         	goto	l4424
  4118  000390                     l4422:
  4119  000390  FFFF               	dw	65535	; assembler added errata NOP
  4120                           
  4121                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  4122  000392  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4123  000396  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4124  00039A  2ADE               	incf	postinc2,f,c
  4125  00039C  0E00               	movlw	0
  4126  00039E  22DD               	addwfc	postdec2,f,c
  4127  0003A0                     l4424:
  4128  0003A0  FFFF               	dw	65535	; assembler added errata NOP
  4129  0003A2  0ED0               	movlw	208
  4130  0003A4  6E49               	movwf	??_vfpfcnvrt^0,c
  4131  0003A6  0EFF               	movlw	255
  4132  0003A8  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  4133  0003AA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4134  0003AE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4135  0003B2  CFDE FFF6          	movff	postinc2,tblptrl
  4136  0003B6  CFDD FFF7          	movff	postdec2,tblptrh
  4137  0003BA                     	if	0	;tblptru may be non-zero
  4138  0003BA                     	endif
  4139  0003BA                     	if	0	;tblptru may be non-zero
  4140  0003BA                     	endif
  4141  0003BA  0008               	tblrd		*
  4142  0003BC  FFFF               	dw	65535	; errata NOP
  4143  0003BE  50F5               	movf	tablat,w,c
  4144  0003C0  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4145  0003C2  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  4146  0003C4  5049               	movf	??_vfpfcnvrt^0,w,c
  4147  0003C6  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4148  0003C8  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  4149  0003CA  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4150  0003CC  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  4151  0003CE  E10B               	bnz	u5270
  4152  0003D0  0E0A               	movlw	10
  4153  0003D2  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4154  0003D4  A0D8               	btfss	status,0,c
  4155  0003D6  EFEF  F001         	goto	u5271
  4156  0003DA  EFF3  F001         	goto	u5270
  4157  0003DE                     u5271:
  4158  0003DE  FFFF               	dw	65535	; assembler added errata NOP
  4159  0003E0  0E01               	movlw	1
  4160  0003E2  EFF5  F001         	goto	u5280
  4161  0003E6                     u5270:
  4162  0003E6  FFFF               	dw	65535	; assembler added errata NOP
  4163  0003E8  0E00               	movlw	0
  4164  0003EA                     u5280:
  4165  0003EA  FFFF               	dw	65535	; assembler added errata NOP
  4166  0003EC  6E53               	movwf	_vfpfcnvrt$1684^0,c
  4167  0003EE  6A54               	clrf	(_vfpfcnvrt$1684+1)^0,c
  4168  0003F0  5053               	movf	_vfpfcnvrt$1684^0,w,c
  4169  0003F2  1054               	iorwf	(_vfpfcnvrt$1684+1)^0,w,c
  4170  0003F4  A4D8               	btfss	status,2,c
  4171  0003F6  EFFF  F001         	goto	u5291
  4172  0003FA  EF02  F002         	goto	u5290
  4173  0003FE                     u5291:
  4174  0003FE  FFFF               	dw	65535	; assembler added errata NOP
  4175  000400  EFC8  F001         	goto	l4422
  4176  000404                     u5290:
  4177  000404                     l4430:
  4178  000404  FFFF               	dw	65535	; assembler added errata NOP
  4179                           
  4180                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 792:         if (
      +                          *fmt[0] == 'c') {
  4181  000406  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4182  00040A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4183  00040E  CFDE FFF6          	movff	postinc2,tblptrl
  4184  000412  CFDD FFF7          	movff	postdec2,tblptrh
  4185  000416                     	if	0	;tblptru may be non-zero
  4186  000416                     	endif
  4187  000416                     	if	0	;tblptru may be non-zero
  4188  000416                     	endif
  4189  000416  0008               	tblrd		*
  4190  000418  FFFF               	dw	65535	; errata NOP
  4191  00041A  50F5               	movf	tablat,w,c
  4192  00041C  0A63               	xorlw	99
  4193  00041E  A4D8               	btfss	status,2,c
  4194  000420  EF14  F002         	goto	u5301
  4195  000424  EF17  F002         	goto	u5300
  4196  000428                     u5301:
  4197  000428  FFFF               	dw	65535	; assembler added errata NOP
  4198  00042A  EF3F  F002         	goto	l4438
  4199  00042E                     u5300:
  4200  00042E  FFFF               	dw	65535	; assembler added errata NOP
  4201  000430                     
  4202                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 793:             
      +                          ++*fmt;
  4203  000430  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4204  000434  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4205  000438  2ADE               	incf	postinc2,f,c
  4206  00043A  0E00               	movlw	0
  4207  00043C  22DD               	addwfc	postdec2,f,c
  4208                           
  4209                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 794:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4210  00043E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4211  000442  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4212  000446  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4213  00044A  0E02               	movlw	2
  4214  00044C  26DE               	addwf	postinc2,f,c
  4215  00044E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4216  000452  0E00               	movlw	0
  4217  000454  22DD               	addwfc	postdec2,f,c
  4218  000456  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4219  00045A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4220  00045E  50DF               	movf	indf2,w,c
  4221  000460  6E5F               	movwf	vfpfcnvrt@c^0,c
  4222  000462                     
  4223                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 795:             
      +                          return ctoa(fp, c);
  4224  000462  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  4225  000466  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4226  00046A  C05F  F01E         	movff	vfpfcnvrt@c,ctoa@c
  4227  00046E  EC3B  F035         	call	_ctoa	;wreg free
  4228  000472  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  4229  000476  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4230  00047A  EF2E  F00A         	goto	l1301
  4231  00047E                     l4438:
  4232  00047E  FFFF               	dw	65535	; assembler added errata NOP
  4233                           
  4234                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 802:         if (
      +                          !strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((s
      +                          izeof("hhi")/sizeof("hhi"[0]))-1))) {
  4235  000480  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4236  000484  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4237  000488  CFDE F001          	movff	postinc2,strncmp@_l
  4238  00048C  CFDD F002          	movff	postdec2,strncmp@_l+1
  4239  000490  0ECF               	movlw	low STR_11
  4240  000492  6E03               	movwf	strncmp@_r^0,c
  4241  000494  0E7F               	movlw	high STR_11
  4242  000496  6E04               	movwf	(strncmp@_r+1)^0,c
  4243  000498  0E00               	movlw	0
  4244  00049A  6E06               	movwf	(strncmp@n+1)^0,c
  4245  00049C  0E03               	movlw	3
  4246  00049E  6E05               	movwf	strncmp@n^0,c
  4247  0004A0  EC1B  F03B         	call	_strncmp	;wreg free
  4248  0004A4  5001               	movf	?_strncmp^0,w,c
  4249  0004A6  1002               	iorwf	(?_strncmp+1)^0,w,c
  4250  0004A8  B4D8               	btfsc	status,2,c
  4251  0004AA  EF59  F002         	goto	u5311
  4252  0004AE  EF5C  F002         	goto	u5310
  4253  0004B2                     u5311:
  4254  0004B2  FFFF               	dw	65535	; assembler added errata NOP
  4255  0004B4  EF79  F002         	goto	l4442
  4256  0004B8                     u5310:
  4257  0004B8  FFFF               	dw	65535	; assembler added errata NOP
  4258  0004BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4259  0004BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4260  0004C2  CFDE F001          	movff	postinc2,strncmp@_l
  4261  0004C6  CFDD F002          	movff	postdec2,strncmp@_l+1
  4262  0004CA  0ED3               	movlw	low STR_15
  4263  0004CC  6E03               	movwf	strncmp@_r^0,c
  4264  0004CE  0E7F               	movlw	high STR_15
  4265  0004D0  6E04               	movwf	(strncmp@_r+1)^0,c
  4266  0004D2  0E00               	movlw	0
  4267  0004D4  6E06               	movwf	(strncmp@n+1)^0,c
  4268  0004D6  0E03               	movlw	3
  4269  0004D8  6E05               	movwf	strncmp@n^0,c
  4270  0004DA  EC1B  F03B         	call	_strncmp	;wreg free
  4271  0004DE  5001               	movf	?_strncmp^0,w,c
  4272  0004E0  1002               	iorwf	(?_strncmp+1)^0,w,c
  4273  0004E2  A4D8               	btfss	status,2,c
  4274  0004E4  EF76  F002         	goto	u5321
  4275  0004E8  EF79  F002         	goto	u5320
  4276  0004EC                     u5321:
  4277  0004EC  FFFF               	dw	65535	; assembler added errata NOP
  4278  0004EE  EFBB  F002         	goto	l4448
  4279  0004F2                     u5320:
  4280  0004F2                     l4442:
  4281  0004F2  FFFF               	dw	65535	; assembler added errata NOP
  4282                           
  4283                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 803: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 805:             *fmt += ((si
      +                          zeof("hhd")/sizeof("hhd"[0]))-1);
  4284  0004F4  0E03               	movlw	3
  4285  0004F6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4286  0004FA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4287  0004FE  26DE               	addwf	postinc2,f,c
  4288  000500  0E00               	movlw	0
  4289  000502  22DD               	addwfc	postdec2,f,c
  4290                           
  4291                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 806:             
      +                          ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4292  000504  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4293  000508  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4294  00050C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4295  000510  0E02               	movlw	2
  4296  000512  26DE               	addwf	postinc2,f,c
  4297  000514  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4298  000518  0E00               	movlw	0
  4299  00051A  22DD               	addwfc	postdec2,f,c
  4300  00051C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4301  000520  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4302  000524  50DF               	movf	indf2,w,c
  4303  000526  6E55               	movwf	vfpfcnvrt@ll^0,c
  4304  000528  0E00               	movlw	0
  4305  00052A  BE55               	btfsc	vfpfcnvrt@ll^0,7,c
  4306  00052C  0EFF               	movlw	-1
  4307  00052E  6E56               	movwf	(vfpfcnvrt@ll+1)^0,c
  4308  000530  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  4309  000532  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  4310  000534  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  4311  000536  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  4312  000538  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  4313  00053A  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  4314  00053C                     l4444:
  4315  00053C  FFFF               	dw	65535	; assembler added errata NOP
  4316                           
  4317                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 808:             
      +                          return dtoa(fp, ll);
  4318  00053E  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  4319  000542  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4320  000546  C055  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  4321  00054A  C056  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4322  00054E  C057  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4323  000552  C058  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4324  000556  C059  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4325  00055A  C05A  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4326  00055E  C05B  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4327  000562  C05C  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4328  000566  ECF3  F016         	call	_dtoa	;wreg free
  4329  00056A  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  4330  00056E  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4331  000572  EF2E  F00A         	goto	l1301
  4332  000576                     l4448:
  4333  000576  FFFF               	dw	65535	; assembler added errata NOP
  4334                           
  4335                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          !strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeo
      +                          f("hi")/sizeof("hi"[0]))-1))) {
  4336  000578  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4337  00057C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4338  000580  CFDE F001          	movff	postinc2,strncmp@_l
  4339  000584  CFDD F002          	movff	postdec2,strncmp@_l+1
  4340  000588  0ED0               	movlw	low (STR_11+1)
  4341  00058A  6E03               	movwf	strncmp@_r^0,c
  4342  00058C  0E7F               	movlw	high (STR_11+1)
  4343  00058E  6E04               	movwf	(strncmp@_r+1)^0,c
  4344  000590  0E00               	movlw	0
  4345  000592  6E06               	movwf	(strncmp@n+1)^0,c
  4346  000594  0E02               	movlw	2
  4347  000596  6E05               	movwf	strncmp@n^0,c
  4348  000598  EC1B  F03B         	call	_strncmp	;wreg free
  4349  00059C  5001               	movf	?_strncmp^0,w,c
  4350  00059E  1002               	iorwf	(?_strncmp+1)^0,w,c
  4351  0005A0  B4D8               	btfsc	status,2,c
  4352  0005A2  EFD5  F002         	goto	u5331
  4353  0005A6  EFD8  F002         	goto	u5330
  4354  0005AA                     u5331:
  4355  0005AA  FFFF               	dw	65535	; assembler added errata NOP
  4356  0005AC  EFF5  F002         	goto	l4452
  4357  0005B0                     u5330:
  4358  0005B0  FFFF               	dw	65535	; assembler added errata NOP
  4359  0005B2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4360  0005B6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4361  0005BA  CFDE F001          	movff	postinc2,strncmp@_l
  4362  0005BE  CFDD F002          	movff	postdec2,strncmp@_l+1
  4363  0005C2  0ED4               	movlw	low (STR_15+1)
  4364  0005C4  6E03               	movwf	strncmp@_r^0,c
  4365  0005C6  0E7F               	movlw	high (STR_15+1)
  4366  0005C8  6E04               	movwf	(strncmp@_r+1)^0,c
  4367  0005CA  0E00               	movlw	0
  4368  0005CC  6E06               	movwf	(strncmp@n+1)^0,c
  4369  0005CE  0E02               	movlw	2
  4370  0005D0  6E05               	movwf	strncmp@n^0,c
  4371  0005D2  EC1B  F03B         	call	_strncmp	;wreg free
  4372  0005D6  5001               	movf	?_strncmp^0,w,c
  4373  0005D8  1002               	iorwf	(?_strncmp+1)^0,w,c
  4374  0005DA  A4D8               	btfss	status,2,c
  4375  0005DC  EFF2  F002         	goto	u5341
  4376  0005E0  EFF5  F002         	goto	u5340
  4377  0005E4                     u5341:
  4378  0005E4  FFFF               	dw	65535	; assembler added errata NOP
  4379  0005E6  EF1D  F003         	goto	l4458
  4380  0005EA                     u5340:
  4381  0005EA                     l4452:
  4382  0005EA  FFFF               	dw	65535	; assembler added errata NOP
  4383                           
  4384                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 815: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 817:             *fmt += ((si
      +                          zeof("hd")/sizeof("hd"[0]))-1);
  4385  0005EC  0E02               	movlw	2
  4386  0005EE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4387  0005F2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4388  0005F6  26DE               	addwf	postinc2,f,c
  4389  0005F8  0E00               	movlw	0
  4390  0005FA  22DD               	addwfc	postdec2,f,c
  4391                           
  4392                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 818:             
      +                          ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4393  0005FC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4394  000600  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4395  000604  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4396  000608  0E02               	movlw	2
  4397  00060A  26DE               	addwf	postinc2,f,c
  4398  00060C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4399  000610  0E00               	movlw	0
  4400  000612  22DD               	addwfc	postdec2,f,c
  4401  000614  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4402  000618  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4403  00061C  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  4404  000620  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  4405  000624  0E00               	movlw	0
  4406  000626  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4407  000628  0EFF               	movlw	-1
  4408  00062A  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  4409  00062C  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  4410  00062E  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  4411  000630  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  4412  000632  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  4413  000634  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  4414  000636  EF9E  F002         	goto	l4444
  4415  00063A                     l4458:
  4416  00063A  FFFF               	dw	65535	; assembler added errata NOP
  4417                           
  4418                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4419  00063C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4420  000640  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4421  000644  CFDE FFF6          	movff	postinc2,tblptrl
  4422  000648  CFDD FFF7          	movff	postdec2,tblptrh
  4423  00064C                     	if	0	;tblptru may be non-zero
  4424  00064C                     	endif
  4425  00064C                     	if	0	;tblptru may be non-zero
  4426  00064C                     	endif
  4427  00064C  0008               	tblrd		*
  4428  00064E  FFFF               	dw	65535	; errata NOP
  4429  000650  50F5               	movf	tablat,w,c
  4430  000652  0A64               	xorlw	100
  4431  000654  B4D8               	btfsc	status,2,c
  4432  000656  EF2F  F003         	goto	u5351
  4433  00065A  EF32  F003         	goto	u5350
  4434  00065E                     u5351:
  4435  00065E  FFFF               	dw	65535	; assembler added errata NOP
  4436  000660  EF47  F003         	goto	l4462
  4437  000664                     u5350:
  4438  000664  FFFF               	dw	65535	; assembler added errata NOP
  4439  000666  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4440  00066A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4441  00066E  CFDE FFF6          	movff	postinc2,tblptrl
  4442  000672  CFDD FFF7          	movff	postdec2,tblptrh
  4443  000676                     	if	0	;tblptru may be non-zero
  4444  000676                     	endif
  4445  000676                     	if	0	;tblptru may be non-zero
  4446  000676                     	endif
  4447  000676  0008               	tblrd		*
  4448  000678  FFFF               	dw	65535	; errata NOP
  4449  00067A  50F5               	movf	tablat,w,c
  4450  00067C  0A69               	xorlw	105
  4451  00067E  A4D8               	btfss	status,2,c
  4452  000680  EF44  F003         	goto	u5361
  4453  000684  EF47  F003         	goto	u5360
  4454  000688                     u5361:
  4455  000688  FFFF               	dw	65535	; assembler added errata NOP
  4456  00068A  EF6E  F003         	goto	l4468
  4457  00068E                     u5360:
  4458  00068E                     l4462:
  4459  00068E  FFFF               	dw	65535	; assembler added errata NOP
  4460                           
  4461                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  4462  000690  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4463  000694  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4464  000698  2ADE               	incf	postinc2,f,c
  4465  00069A  0E00               	movlw	0
  4466  00069C  22DD               	addwfc	postdec2,f,c
  4467                           
  4468                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4469  00069E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4470  0006A2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4471  0006A6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4472  0006AA  0E02               	movlw	2
  4473  0006AC  26DE               	addwf	postinc2,f,c
  4474  0006AE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4475  0006B2  0E00               	movlw	0
  4476  0006B4  22DD               	addwfc	postdec2,f,c
  4477  0006B6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4478  0006BA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4479  0006BE  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  4480  0006C2  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  4481  0006C6  0E00               	movlw	0
  4482  0006C8  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4483  0006CA  0EFF               	movlw	-1
  4484  0006CC  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  4485  0006CE  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  4486  0006D0  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  4487  0006D2  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  4488  0006D4  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  4489  0006D6  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  4490  0006D8  EF9E  F002         	goto	l4444
  4491  0006DC                     l4468:
  4492  0006DC  FFFF               	dw	65535	; assembler added errata NOP
  4493                           
  4494                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 883:         if (
      +                          !strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeo
      +                          f("zi")/sizeof("zi"[0]))-1))) {
  4495  0006DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4496  0006E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4497  0006E6  CFDE F001          	movff	postinc2,strncmp@_l
  4498  0006EA  CFDD F002          	movff	postdec2,strncmp@_l+1
  4499  0006EE  0EEA               	movlw	low STR_29
  4500  0006F0  6E03               	movwf	strncmp@_r^0,c
  4501  0006F2  0E7F               	movlw	high STR_29
  4502  0006F4  6E04               	movwf	(strncmp@_r+1)^0,c
  4503  0006F6  0E00               	movlw	0
  4504  0006F8  6E06               	movwf	(strncmp@n+1)^0,c
  4505  0006FA  0E02               	movlw	2
  4506  0006FC  6E05               	movwf	strncmp@n^0,c
  4507  0006FE  EC1B  F03B         	call	_strncmp	;wreg free
  4508  000702  5001               	movf	?_strncmp^0,w,c
  4509  000704  1002               	iorwf	(?_strncmp+1)^0,w,c
  4510  000706  B4D8               	btfsc	status,2,c
  4511  000708  EF88  F003         	goto	u5371
  4512  00070C  EF8B  F003         	goto	u5370
  4513  000710                     u5371:
  4514  000710  FFFF               	dw	65535	; assembler added errata NOP
  4515  000712  EFA8  F003         	goto	l4472
  4516  000716                     u5370:
  4517  000716  FFFF               	dw	65535	; assembler added errata NOP
  4518  000718  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4519  00071C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4520  000720  CFDE F001          	movff	postinc2,strncmp@_l
  4521  000724  CFDD F002          	movff	postdec2,strncmp@_l+1
  4522  000728  0EED               	movlw	low STR_33
  4523  00072A  6E03               	movwf	strncmp@_r^0,c
  4524  00072C  0E7F               	movlw	high STR_33
  4525  00072E  6E04               	movwf	(strncmp@_r+1)^0,c
  4526  000730  0E00               	movlw	0
  4527  000732  6E06               	movwf	(strncmp@n+1)^0,c
  4528  000734  0E02               	movlw	2
  4529  000736  6E05               	movwf	strncmp@n^0,c
  4530  000738  EC1B  F03B         	call	_strncmp	;wreg free
  4531  00073C  5001               	movf	?_strncmp^0,w,c
  4532  00073E  1002               	iorwf	(?_strncmp+1)^0,w,c
  4533  000740  A4D8               	btfss	status,2,c
  4534  000742  EFA5  F003         	goto	u5381
  4535  000746  EFA8  F003         	goto	u5380
  4536  00074A                     u5381:
  4537  00074A  FFFF               	dw	65535	; assembler added errata NOP
  4538  00074C  EFD1  F003         	goto	l4478
  4539  000750                     u5380:
  4540  000750                     l4472:
  4541  000750  FFFF               	dw	65535	; assembler added errata NOP
  4542                           
  4543                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 884: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 886:             *fmt += ((si
      +                          zeof("zd")/sizeof("zd"[0]))-1);
  4544  000752  0E02               	movlw	2
  4545  000754  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4546  000758  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4547  00075C  26DE               	addwf	postinc2,f,c
  4548  00075E  0E00               	movlw	0
  4549  000760  22DD               	addwfc	postdec2,f,c
  4550                           
  4551                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 887:             
      +                          ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4552  000762  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4553  000766  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4554  00076A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4555  00076E  0E02               	movlw	2
  4556  000770  26DE               	addwf	postinc2,f,c
  4557  000772  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4558  000776  0E00               	movlw	0
  4559  000778  22DD               	addwfc	postdec2,f,c
  4560  00077A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4561  00077E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4562  000782  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4563  000786  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4564  00078A  C04B  F055         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  4565  00078E  C04C  F056         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  4566  000792  6A57               	clrf	(vfpfcnvrt@ll+2)^0,c
  4567  000794  6A58               	clrf	(vfpfcnvrt@ll+3)^0,c
  4568  000796  6A59               	clrf	(vfpfcnvrt@ll+4)^0,c
  4569  000798  6A5A               	clrf	(vfpfcnvrt@ll+5)^0,c
  4570  00079A  6A5B               	clrf	(vfpfcnvrt@ll+6)^0,c
  4571  00079C  6A5C               	clrf	(vfpfcnvrt@ll+7)^0,c
  4572  00079E  EF9E  F002         	goto	l4444
  4573  0007A2                     l4478:
  4574  0007A2  FFFF               	dw	65535	; assembler added errata NOP
  4575                           
  4576                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 969:         if (
      +                          !strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  4577  0007A4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4578  0007A8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4579  0007AC  CFDE F001          	movff	postinc2,strncmp@_l
  4580  0007B0  CFDD F002          	movff	postdec2,strncmp@_l+1
  4581  0007B4  0EDB               	movlw	low STR_38
  4582  0007B6  6E03               	movwf	strncmp@_r^0,c
  4583  0007B8  0E7F               	movlw	high STR_38
  4584  0007BA  6E04               	movwf	(strncmp@_r+1)^0,c
  4585  0007BC  0E00               	movlw	0
  4586  0007BE  6E06               	movwf	(strncmp@n+1)^0,c
  4587  0007C0  0E03               	movlw	3
  4588  0007C2  6E05               	movwf	strncmp@n^0,c
  4589  0007C4  EC1B  F03B         	call	_strncmp	;wreg free
  4590  0007C8  5001               	movf	?_strncmp^0,w,c
  4591  0007CA  1002               	iorwf	(?_strncmp+1)^0,w,c
  4592  0007CC  A4D8               	btfss	status,2,c
  4593  0007CE  EFEB  F003         	goto	u5391
  4594  0007D2  EFEE  F003         	goto	u5390
  4595  0007D6                     u5391:
  4596  0007D6  FFFF               	dw	65535	; assembler added errata NOP
  4597  0007D8  EF2F  F004         	goto	l4486
  4598  0007DC                     u5390:
  4599  0007DC  FFFF               	dw	65535	; assembler added errata NOP
  4600  0007DE                     
  4601                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 971:             
      +                          *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  4602  0007DE  0E03               	movlw	3
  4603  0007E0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4604  0007E4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4605  0007E8  26DE               	addwf	postinc2,f,c
  4606  0007EA  0E00               	movlw	0
  4607  0007EC  22DD               	addwfc	postdec2,f,c
  4608                           
  4609                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 972:             
      +                          llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4610  0007EE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4611  0007F2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4612  0007F6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4613  0007FA  0E02               	movlw	2
  4614  0007FC  26DE               	addwf	postinc2,f,c
  4615  0007FE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4616  000802  0E00               	movlw	0
  4617  000804  22DD               	addwfc	postdec2,f,c
  4618  000806  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4619  00080A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4620  00080E  50DF               	movf	indf2,w,c
  4621  000810  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4622  000812  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  4623  000814  6E60               	movwf	vfpfcnvrt@llu^0,c
  4624  000816  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  4625  000818  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4626  00081A  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4627  00081C  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4628  00081E  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4629  000820  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4630  000822  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4631  000824                     l4482:
  4632  000824  FFFF               	dw	65535	; assembler added errata NOP
  4633                           
  4634                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 974:             
      +                          return otoa(fp, llu);
  4635  000826  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  4636  00082A  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  4637  00082E  C060  F01E         	movff	vfpfcnvrt@llu,otoa@d
  4638  000832  C061  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  4639  000836  C062  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  4640  00083A  C063  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  4641  00083E  C064  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  4642  000842  C065  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  4643  000846  C066  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  4644  00084A  C067  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  4645  00084E  EC3B  F01B         	call	_otoa	;wreg free
  4646  000852  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  4647  000856  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  4648  00085A  EF2E  F00A         	goto	l1301
  4649  00085E                     l4486:
  4650  00085E  FFFF               	dw	65535	; assembler added errata NOP
  4651                           
  4652                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 980:         if (
      +                          !strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  4653  000860  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4654  000864  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4655  000868  CFDE F001          	movff	postinc2,strncmp@_l
  4656  00086C  CFDD F002          	movff	postdec2,strncmp@_l+1
  4657  000870  0EDC               	movlw	low (STR_38+1)
  4658  000872  6E03               	movwf	strncmp@_r^0,c
  4659  000874  0E7F               	movlw	high (STR_38+1)
  4660  000876  6E04               	movwf	(strncmp@_r+1)^0,c
  4661  000878  0E00               	movlw	0
  4662  00087A  6E06               	movwf	(strncmp@n+1)^0,c
  4663  00087C  0E02               	movlw	2
  4664  00087E  6E05               	movwf	strncmp@n^0,c
  4665  000880  EC1B  F03B         	call	_strncmp	;wreg free
  4666  000884  5001               	movf	?_strncmp^0,w,c
  4667  000886  1002               	iorwf	(?_strncmp+1)^0,w,c
  4668  000888  A4D8               	btfss	status,2,c
  4669  00088A  EF49  F004         	goto	u5401
  4670  00088E  EF4C  F004         	goto	u5400
  4671  000892                     u5401:
  4672  000892  FFFF               	dw	65535	; assembler added errata NOP
  4673  000894  EF75  F004         	goto	l4494
  4674  000898                     u5400:
  4675  000898  FFFF               	dw	65535	; assembler added errata NOP
  4676  00089A                     
  4677                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 982:             
      +                          *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  4678  00089A  0E02               	movlw	2
  4679  00089C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4680  0008A0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4681  0008A4  26DE               	addwf	postinc2,f,c
  4682  0008A6  0E00               	movlw	0
  4683  0008A8  22DD               	addwfc	postdec2,f,c
  4684                           
  4685                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 983:             
      +                          llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4686  0008AA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4687  0008AE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4688  0008B2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4689  0008B6  0E02               	movlw	2
  4690  0008B8  26DE               	addwf	postinc2,f,c
  4691  0008BA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4692  0008BE  0E00               	movlw	0
  4693  0008C0  22DD               	addwfc	postdec2,f,c
  4694  0008C2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4695  0008C6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4696  0008CA  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4697  0008CE  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4698  0008D2  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4699  0008D6  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4700  0008DA  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4701  0008DC  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4702  0008DE  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4703  0008E0  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4704  0008E2  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4705  0008E4  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4706  0008E6  EF12  F004         	goto	l4482
  4707  0008EA                     l4494:
  4708  0008EA  FFFF               	dw	65535	; assembler added errata NOP
  4709                           
  4710                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 990:         if (
      +                          *fmt[0] == 'o') {
  4711  0008EC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4712  0008F0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4713  0008F4  CFDE FFF6          	movff	postinc2,tblptrl
  4714  0008F8  CFDD FFF7          	movff	postdec2,tblptrh
  4715  0008FC                     	if	0	;tblptru may be non-zero
  4716  0008FC                     	endif
  4717  0008FC                     	if	0	;tblptru may be non-zero
  4718  0008FC                     	endif
  4719  0008FC  0008               	tblrd		*
  4720  0008FE  FFFF               	dw	65535	; errata NOP
  4721  000900  50F5               	movf	tablat,w,c
  4722  000902  0A6F               	xorlw	111
  4723  000904  A4D8               	btfss	status,2,c
  4724  000906  EF87  F004         	goto	u5411
  4725  00090A  EF8A  F004         	goto	u5410
  4726  00090E                     u5411:
  4727  00090E  FFFF               	dw	65535	; assembler added errata NOP
  4728  000910  EFB2  F004         	goto	l4502
  4729  000914                     u5410:
  4730  000914  FFFF               	dw	65535	; assembler added errata NOP
  4731  000916                     
  4732                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 992:             
      +                          ++*fmt;
  4733  000916  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4734  00091A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4735  00091E  2ADE               	incf	postinc2,f,c
  4736  000920  0E00               	movlw	0
  4737  000922  22DD               	addwfc	postdec2,f,c
  4738                           
  4739                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 993:             
      +                          llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int
      +                          )0));
  4740  000924  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4741  000928  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4742  00092C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4743  000930  0E02               	movlw	2
  4744  000932  26DE               	addwf	postinc2,f,c
  4745  000934  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4746  000938  0E00               	movlw	0
  4747  00093A  22DD               	addwfc	postdec2,f,c
  4748  00093C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4749  000940  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4750  000944  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4751  000948  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4752  00094C  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4753  000950  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4754  000954  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4755  000956  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4756  000958  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4757  00095A  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4758  00095C  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4759  00095E  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4760  000960  EF12  F004         	goto	l4482
  4761  000964                     l4502:
  4762  000964  FFFF               	dw	65535	; assembler added errata NOP
  4763                           
  4764                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1044:         if 
      +                          (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  4765  000966  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4766  00096A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4767  00096E  CFDE F001          	movff	postinc2,strncmp@_l
  4768  000972  CFDD F002          	movff	postdec2,strncmp@_l+1
  4769  000976  0EF3               	movlw	low STR_48
  4770  000978  6E03               	movwf	strncmp@_r^0,c
  4771  00097A  0E7F               	movlw	high STR_48
  4772  00097C  6E04               	movwf	(strncmp@_r+1)^0,c
  4773  00097E  0E00               	movlw	0
  4774  000980  6E06               	movwf	(strncmp@n+1)^0,c
  4775  000982  0E02               	movlw	2
  4776  000984  6E05               	movwf	strncmp@n^0,c
  4777  000986  EC1B  F03B         	call	_strncmp	;wreg free
  4778  00098A  5001               	movf	?_strncmp^0,w,c
  4779  00098C  1002               	iorwf	(?_strncmp+1)^0,w,c
  4780  00098E  A4D8               	btfss	status,2,c
  4781  000990  EFCC  F004         	goto	u5421
  4782  000994  EFCF  F004         	goto	u5420
  4783  000998                     u5421:
  4784  000998  FFFF               	dw	65535	; assembler added errata NOP
  4785  00099A  EFF8  F004         	goto	l4510
  4786  00099E                     u5420:
  4787  00099E  FFFF               	dw	65535	; assembler added errata NOP
  4788  0009A0                     
  4789                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1046:            
      +                           *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  4790  0009A0  0E02               	movlw	2
  4791  0009A2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4792  0009A6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4793  0009AA  26DE               	addwf	postinc2,f,c
  4794  0009AC  0E00               	movlw	0
  4795  0009AE  22DD               	addwfc	postdec2,f,c
  4796                           
  4797                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1047:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4798  0009B0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4799  0009B4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4800  0009B8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4801  0009BC  0E02               	movlw	2
  4802  0009BE  26DE               	addwf	postinc2,f,c
  4803  0009C0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4804  0009C4  0E00               	movlw	0
  4805  0009C6  22DD               	addwfc	postdec2,f,c
  4806  0009C8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4807  0009CC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4808  0009D0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4809  0009D4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4810  0009D8  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4811  0009DC  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4812  0009E0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4813  0009E2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4814  0009E4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4815  0009E6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4816  0009E8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4817  0009EA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4818  0009EC  EF12  F004         	goto	l4482
  4819  0009F0                     l4510:
  4820  0009F0  FFFF               	dw	65535	; assembler added errata NOP
  4821                           
  4822                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1058:         if 
      +                          (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  4823  0009F2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4824  0009F6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4825  0009FA  CFDE F001          	movff	postinc2,strncmp@_l
  4826  0009FE  CFDD F002          	movff	postdec2,strncmp@_l+1
  4827  000A02  0ED7               	movlw	low STR_53
  4828  000A04  6E03               	movwf	strncmp@_r^0,c
  4829  000A06  0E7F               	movlw	high STR_53
  4830  000A08  6E04               	movwf	(strncmp@_r+1)^0,c
  4831  000A0A  0E00               	movlw	0
  4832  000A0C  6E06               	movwf	(strncmp@n+1)^0,c
  4833  000A0E  0E03               	movlw	3
  4834  000A10  6E05               	movwf	strncmp@n^0,c
  4835  000A12  EC1B  F03B         	call	_strncmp	;wreg free
  4836  000A16  5001               	movf	?_strncmp^0,w,c
  4837  000A18  1002               	iorwf	(?_strncmp+1)^0,w,c
  4838  000A1A  A4D8               	btfss	status,2,c
  4839  000A1C  EF12  F005         	goto	u5431
  4840  000A20  EF15  F005         	goto	u5430
  4841  000A24                     u5431:
  4842  000A24  FFFF               	dw	65535	; assembler added errata NOP
  4843  000A26  EF4B  F005         	goto	l4520
  4844  000A2A                     u5430:
  4845  000A2A  FFFF               	dw	65535	; assembler added errata NOP
  4846  000A2C                     
  4847                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1060:            
      +                           *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  4848  000A2C  0E03               	movlw	3
  4849  000A2E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4850  000A32  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4851  000A36  26DE               	addwf	postinc2,f,c
  4852  000A38  0E00               	movlw	0
  4853  000A3A  22DD               	addwfc	postdec2,f,c
  4854                           
  4855                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1061:            
      +                           vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4856  000A3C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4857  000A40  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4858  000A44  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4859  000A48  0E02               	movlw	2
  4860  000A4A  26DE               	addwf	postinc2,f,c
  4861  000A4C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4862  000A50  0E00               	movlw	0
  4863  000A52  22DD               	addwfc	postdec2,f,c
  4864  000A54  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4865  000A58  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4866  000A5C  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4867  000A60  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4868  000A64                     
  4869                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1062:            
      +                           *(char *)vp = (char)nout;
  4870  000A64  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4871  000A68  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4872  000A6C  6AF8               	clrf	tblptru,c
  4873  000A6E  0E05               	movlw	(high __ramtop+-1)
  4874  000A70  64F7               	cpfsgt	tblptrh,c
  4875  000A72  D004               	bra	u5447
  4876  000A74  C084  FFF5         	movff	_nout,tablat
  4877  000A78  000C               	tblwt		*
  4878  000A7A  D006               	bra	u5440
  4879  000A7C                     u5447:
  4880  000A7C  CFF6 FFE1          	movff	tblptrl,fsr1l
  4881  000A80  CFF7 FFE2          	movff	tblptrh,fsr1h
  4882  000A84  C084  FFE7         	movff	_nout,indf1
  4883  000A88                     u5440:
  4884  000A88                     l4516:
  4885  000A88  FFFF               	dw	65535	; assembler added errata NOP
  4886                           
  4887                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1063:            
      +                           return 0;
  4888  000A8A  0E00               	movlw	0
  4889  000A8C  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  4890  000A8E  0E00               	movlw	0
  4891  000A90  6E43               	movwf	?_vfpfcnvrt^0,c
  4892  000A92  EF2E  F00A         	goto	l1301
  4893  000A96                     l4520:
  4894  000A96  FFFF               	dw	65535	; assembler added errata NOP
  4895                           
  4896                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1068:         if 
      +                          (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  4897  000A98  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4898  000A9C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4899  000AA0  CFDE F001          	movff	postinc2,strncmp@_l
  4900  000AA4  CFDD F002          	movff	postdec2,strncmp@_l+1
  4901  000AA8  0ED8               	movlw	low (STR_53+1)
  4902  000AAA  6E03               	movwf	strncmp@_r^0,c
  4903  000AAC  0E7F               	movlw	high (STR_53+1)
  4904  000AAE  6E04               	movwf	(strncmp@_r+1)^0,c
  4905  000AB0  0E00               	movlw	0
  4906  000AB2  6E06               	movwf	(strncmp@n+1)^0,c
  4907  000AB4  0E02               	movlw	2
  4908  000AB6  6E05               	movwf	strncmp@n^0,c
  4909  000AB8  EC1B  F03B         	call	_strncmp	;wreg free
  4910  000ABC  5001               	movf	?_strncmp^0,w,c
  4911  000ABE  1002               	iorwf	(?_strncmp+1)^0,w,c
  4912  000AC0  A4D8               	btfss	status,2,c
  4913  000AC2  EF65  F005         	goto	u5451
  4914  000AC6  EF68  F005         	goto	u5450
  4915  000ACA                     u5451:
  4916  000ACA  FFFF               	dw	65535	; assembler added errata NOP
  4917  000ACC  EF9E  F005         	goto	l4530
  4918  000AD0                     u5450:
  4919  000AD0  FFFF               	dw	65535	; assembler added errata NOP
  4920  000AD2                     
  4921                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1070:            
      +                           *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  4922  000AD2  0E02               	movlw	2
  4923  000AD4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4924  000AD8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4925  000ADC  26DE               	addwf	postinc2,f,c
  4926  000ADE  0E00               	movlw	0
  4927  000AE0  22DD               	addwfc	postdec2,f,c
  4928                           
  4929                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1071:            
      +                           vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  4930  000AE2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4931  000AE6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4932  000AEA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4933  000AEE  0E02               	movlw	2
  4934  000AF0  26DE               	addwf	postinc2,f,c
  4935  000AF2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4936  000AF6  0E00               	movlw	0
  4937  000AF8  22DD               	addwfc	postdec2,f,c
  4938  000AFA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4939  000AFE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4940  000B02  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4941  000B06  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4942  000B0A                     
  4943                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1072:            
      +                           *(short *)vp = (short)nout;
  4944  000B0A  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4945  000B0E  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4946  000B12  6AF8               	clrf	tblptru,c
  4947  000B14  0E05               	movlw	(high __ramtop+-1)
  4948  000B16  64F7               	cpfsgt	tblptrh,c
  4949  000B18  D007               	bra	u5467
  4950  000B1A  C084  FFF5         	movff	_nout,tablat
  4951  000B1E  000D               	tblwt		*+
  4952  000B20  C085  FFF5         	movff	_nout+1,tablat
  4953  000B24  000C               	tblwt		*
  4954  000B26  D008               	bra	u5460
  4955  000B28                     u5467:
  4956  000B28  CFF6 FFE1          	movff	tblptrl,fsr1l
  4957  000B2C  CFF7 FFE2          	movff	tblptrh,fsr1h
  4958  000B30  C084  FFE6         	movff	_nout,postinc1
  4959  000B34  C085  FFE7         	movff	_nout+1,indf1
  4960  000B38                     u5460:
  4961  000B38  EF44  F005         	goto	l4516
  4962  000B3C                     l4530:
  4963  000B3C  FFFF               	dw	65535	; assembler added errata NOP
  4964                           
  4965                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1077:         if 
      +                          (*fmt[0] == 'n') {
  4966  000B3E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4967  000B42  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4968  000B46  CFDE FFF6          	movff	postinc2,tblptrl
  4969  000B4A  CFDD FFF7          	movff	postdec2,tblptrh
  4970  000B4E                     	if	0	;tblptru may be non-zero
  4971  000B4E                     	endif
  4972  000B4E                     	if	0	;tblptru may be non-zero
  4973  000B4E                     	endif
  4974  000B4E  0008               	tblrd		*
  4975  000B50  FFFF               	dw	65535	; errata NOP
  4976  000B52  50F5               	movf	tablat,w,c
  4977  000B54  0A6E               	xorlw	110
  4978  000B56  A4D8               	btfss	status,2,c
  4979  000B58  EFB0  F005         	goto	u5471
  4980  000B5C  EFB3  F005         	goto	u5470
  4981  000B60                     u5471:
  4982  000B60  FFFF               	dw	65535	; assembler added errata NOP
  4983  000B62  EFE8  F005         	goto	l4540
  4984  000B66                     u5470:
  4985  000B66  FFFF               	dw	65535	; assembler added errata NOP
  4986  000B68                     
  4987                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1078:            
      +                           ++*fmt;
  4988  000B68  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4989  000B6C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4990  000B70  2ADE               	incf	postinc2,f,c
  4991  000B72  0E00               	movlw	0
  4992  000B74  22DD               	addwfc	postdec2,f,c
  4993                           
  4994                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1079:            
      +                           vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  4995  000B76  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4996  000B7A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4997  000B7E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4998  000B82  0E02               	movlw	2
  4999  000B84  26DE               	addwf	postinc2,f,c
  5000  000B86  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5001  000B8A  0E00               	movlw	0
  5002  000B8C  22DD               	addwfc	postdec2,f,c
  5003  000B8E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5004  000B92  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5005  000B96  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  5006  000B9A  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  5007  000B9E                     
  5008                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1080:            
      +                           *(int *)vp = nout;
  5009  000B9E  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  5010  000BA2  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  5011  000BA6  6AF8               	clrf	tblptru,c
  5012  000BA8  0E05               	movlw	(high __ramtop+-1)
  5013  000BAA  64F7               	cpfsgt	tblptrh,c
  5014  000BAC  D007               	bra	u5487
  5015  000BAE  C084  FFF5         	movff	_nout,tablat
  5016  000BB2  000D               	tblwt		*+
  5017  000BB4  C085  FFF5         	movff	_nout+1,tablat
  5018  000BB8  000C               	tblwt		*
  5019  000BBA  D008               	bra	u5480
  5020  000BBC                     u5487:
  5021  000BBC  CFF6 FFE1          	movff	tblptrl,fsr1l
  5022  000BC0  CFF7 FFE2          	movff	tblptrh,fsr1h
  5023  000BC4  C084  FFE6         	movff	_nout,postinc1
  5024  000BC8  C085  FFE7         	movff	_nout+1,indf1
  5025  000BCC                     u5480:
  5026  000BCC  EF44  F005         	goto	l4516
  5027  000BD0                     l4540:
  5028  000BD0  FFFF               	dw	65535	; assembler added errata NOP
  5029                           
  5030                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1125:         if 
      +                          (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  5031  000BD2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5032  000BD6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5033  000BDA  CFDE F001          	movff	postinc2,strncmp@_l
  5034  000BDE  CFDD F002          	movff	postdec2,strncmp@_l+1
  5035  000BE2  0EF0               	movlw	low STR_63
  5036  000BE4  6E03               	movwf	strncmp@_r^0,c
  5037  000BE6  0E7F               	movlw	high STR_63
  5038  000BE8  6E04               	movwf	(strncmp@_r+1)^0,c
  5039  000BEA  0E00               	movlw	0
  5040  000BEC  6E06               	movwf	(strncmp@n+1)^0,c
  5041  000BEE  0E02               	movlw	2
  5042  000BF0  6E05               	movwf	strncmp@n^0,c
  5043  000BF2  EC1B  F03B         	call	_strncmp	;wreg free
  5044  000BF6  5001               	movf	?_strncmp^0,w,c
  5045  000BF8  1002               	iorwf	(?_strncmp+1)^0,w,c
  5046  000BFA  A4D8               	btfss	status,2,c
  5047  000BFC  EF02  F006         	goto	u5491
  5048  000C00  EF05  F006         	goto	u5490
  5049  000C04                     u5491:
  5050  000C04  FFFF               	dw	65535	; assembler added errata NOP
  5051  000C06  EF3B  F006         	goto	l4550
  5052  000C0A                     u5490:
  5053  000C0A  FFFF               	dw	65535	; assembler added errata NOP
  5054  000C0C                     
  5055                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1127:            
      +                           *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  5056  000C0C  0E02               	movlw	2
  5057  000C0E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5058  000C12  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5059  000C16  26DE               	addwf	postinc2,f,c
  5060  000C18  0E00               	movlw	0
  5061  000C1A  22DD               	addwfc	postdec2,f,c
  5062                           
  5063                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1128:            
      +                           vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  5064  000C1C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5065  000C20  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5066  000C24  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5067  000C28  0E02               	movlw	2
  5068  000C2A  26DE               	addwf	postinc2,f,c
  5069  000C2C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5070  000C30  0E00               	movlw	0
  5071  000C32  22DD               	addwfc	postdec2,f,c
  5072  000C34  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5073  000C38  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5074  000C3C  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  5075  000C40  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  5076  000C44                     
  5077                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1129:            
      +                           *(size_t *)vp = (size_t)nout;
  5078  000C44  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  5079  000C48  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  5080  000C4C  6AF8               	clrf	tblptru,c
  5081  000C4E  0E05               	movlw	(high __ramtop+-1)
  5082  000C50  64F7               	cpfsgt	tblptrh,c
  5083  000C52  D007               	bra	u5507
  5084  000C54  C084  FFF5         	movff	_nout,tablat
  5085  000C58  000D               	tblwt		*+
  5086  000C5A  C085  FFF5         	movff	_nout+1,tablat
  5087  000C5E  000C               	tblwt		*
  5088  000C60  D008               	bra	u5500
  5089  000C62                     u5507:
  5090  000C62  CFF6 FFE1          	movff	tblptrl,fsr1l
  5091  000C66  CFF7 FFE2          	movff	tblptrh,fsr1h
  5092  000C6A  C084  FFE6         	movff	_nout,postinc1
  5093  000C6E  C085  FFE7         	movff	_nout+1,indf1
  5094  000C72                     u5500:
  5095  000C72  EF44  F005         	goto	l4516
  5096  000C76                     l4550:
  5097  000C76  FFFF               	dw	65535	; assembler added errata NOP
  5098                           
  5099                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1138:         if 
      +                          (*fmt[0] == 'p') {
  5100  000C78  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5101  000C7C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5102  000C80  CFDE FFF6          	movff	postinc2,tblptrl
  5103  000C84  CFDD FFF7          	movff	postdec2,tblptrh
  5104  000C88                     	if	0	;tblptru may be non-zero
  5105  000C88                     	endif
  5106  000C88                     	if	0	;tblptru may be non-zero
  5107  000C88                     	endif
  5108  000C88  0008               	tblrd		*
  5109  000C8A  FFFF               	dw	65535	; errata NOP
  5110  000C8C  50F5               	movf	tablat,w,c
  5111  000C8E  0A70               	xorlw	112
  5112  000C90  A4D8               	btfss	status,2,c
  5113  000C92  EF4D  F006         	goto	u5511
  5114  000C96  EF50  F006         	goto	u5510
  5115  000C9A                     u5511:
  5116  000C9A  FFFF               	dw	65535	; assembler added errata NOP
  5117  000C9C  EF94  F006         	goto	l4558
  5118  000CA0                     u5510:
  5119  000CA0  FFFF               	dw	65535	; assembler added errata NOP
  5120  000CA2                     
  5121                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1140:            
      +                           ++*fmt;
  5122  000CA2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5123  000CA6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5124  000CAA  2ADE               	incf	postinc2,f,c
  5125  000CAC  0E00               	movlw	0
  5126  000CAE  22DD               	addwfc	postdec2,f,c
  5127                           
  5128                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1141:            
      +                           llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  5129  000CB0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5130  000CB4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5131  000CB8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5132  000CBC  0E02               	movlw	2
  5133  000CBE  26DE               	addwf	postinc2,f,c
  5134  000CC0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5135  000CC4  0E00               	movlw	0
  5136  000CC6  22DD               	addwfc	postdec2,f,c
  5137  000CC8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5138  000CCC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5139  000CD0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5140  000CD4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5141  000CD8  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5142  000CDC  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5143  000CE0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5144  000CE2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5145  000CE4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5146  000CE6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5147  000CE8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5148  000CEA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5149  000CEC                     
  5150                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1143:            
      +                           return xtoa(fp, llu, 'x');
  5151  000CEC  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  5152  000CF0  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5153  000CF4  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  5154  000CF8  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5155  000CFC  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5156  000D00  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5157  000D04  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5158  000D08  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5159  000D0C  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5160  000D10  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5161  000D14  0E78               	movlw	120
  5162  000D16  6E26               	movwf	xtoa@x^0,c
  5163  000D18  EC8D  F018         	call	_xtoa	;wreg free
  5164  000D1C  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  5165  000D20  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5166  000D24  EF2E  F00A         	goto	l1301
  5167  000D28                     l4558:
  5168  000D28  FFFF               	dw	65535	; assembler added errata NOP
  5169                           
  5170                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1149:         if 
      +                          (*fmt[0] == 's') {
  5171  000D2A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5172  000D2E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5173  000D32  CFDE FFF6          	movff	postinc2,tblptrl
  5174  000D36  CFDD FFF7          	movff	postdec2,tblptrh
  5175  000D3A                     	if	0	;tblptru may be non-zero
  5176  000D3A                     	endif
  5177  000D3A                     	if	0	;tblptru may be non-zero
  5178  000D3A                     	endif
  5179  000D3A  0008               	tblrd		*
  5180  000D3C  FFFF               	dw	65535	; errata NOP
  5181  000D3E  50F5               	movf	tablat,w,c
  5182  000D40  0A73               	xorlw	115
  5183  000D42  A4D8               	btfss	status,2,c
  5184  000D44  EFA6  F006         	goto	u5521
  5185  000D48  EFA9  F006         	goto	u5520
  5186  000D4C                     u5521:
  5187  000D4C  FFFF               	dw	65535	; assembler added errata NOP
  5188  000D4E  EFD5  F006         	goto	l4566
  5189  000D52                     u5520:
  5190  000D52  FFFF               	dw	65535	; assembler added errata NOP
  5191  000D54                     
  5192                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1151:            
      +                           ++*fmt;
  5193  000D54  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5194  000D58  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5195  000D5C  2ADE               	incf	postinc2,f,c
  5196  000D5E  0E00               	movlw	0
  5197  000D60  22DD               	addwfc	postdec2,f,c
  5198                           
  5199                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1152:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5200  000D62  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5201  000D66  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5202  000D6A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5203  000D6E  0E02               	movlw	2
  5204  000D70  26DE               	addwf	postinc2,f,c
  5205  000D72  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5206  000D76  0E00               	movlw	0
  5207  000D78  22DD               	addwfc	postdec2,f,c
  5208  000D7A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5209  000D7E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5210  000D82  CFDE F04D          	movff	postinc2,vfpfcnvrt@cp
  5211  000D86  CFDD F04E          	movff	postdec2,vfpfcnvrt@cp+1
  5212  000D8A                     
  5213                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1154:            
      +                           return stoa(fp, cp);
  5214  000D8A  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  5215  000D8E  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5216  000D92  C04D  F00C         	movff	vfpfcnvrt@cp,stoa@s
  5217  000D96  C04E  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  5218  000D9A  EC4A  F01D         	call	_stoa	;wreg free
  5219  000D9E  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  5220  000DA2  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  5221  000DA6  EF2E  F00A         	goto	l1301
  5222  000DAA                     l4566:
  5223  000DAA  FFFF               	dw	65535	; assembler added errata NOP
  5224                           
  5225                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1161:         if 
      +                          (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  5226  000DAC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5227  000DB0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5228  000DB4  CFDE F001          	movff	postinc2,strncmp@_l
  5229  000DB8  CFDD F002          	movff	postdec2,strncmp@_l+1
  5230  000DBC  0EDF               	movlw	low STR_68
  5231  000DBE  6E03               	movwf	strncmp@_r^0,c
  5232  000DC0  0E7F               	movlw	high STR_68
  5233  000DC2  6E04               	movwf	(strncmp@_r+1)^0,c
  5234  000DC4  0E00               	movlw	0
  5235  000DC6  6E06               	movwf	(strncmp@n+1)^0,c
  5236  000DC8  0E03               	movlw	3
  5237  000DCA  6E05               	movwf	strncmp@n^0,c
  5238  000DCC  EC1B  F03B         	call	_strncmp	;wreg free
  5239  000DD0  5001               	movf	?_strncmp^0,w,c
  5240  000DD2  1002               	iorwf	(?_strncmp+1)^0,w,c
  5241  000DD4  A4D8               	btfss	status,2,c
  5242  000DD6  EFEF  F006         	goto	u5531
  5243  000DDA  EFF2  F006         	goto	u5530
  5244  000DDE                     u5531:
  5245  000DDE  FFFF               	dw	65535	; assembler added errata NOP
  5246  000DE0  EF33  F007         	goto	l4574
  5247  000DE4                     u5530:
  5248  000DE4  FFFF               	dw	65535	; assembler added errata NOP
  5249  000DE6                     
  5250                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1163:            
      +                           *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  5251  000DE6  0E03               	movlw	3
  5252  000DE8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5253  000DEC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5254  000DF0  26DE               	addwf	postinc2,f,c
  5255  000DF2  0E00               	movlw	0
  5256  000DF4  22DD               	addwfc	postdec2,f,c
  5257                           
  5258                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1164:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5259  000DF6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5260  000DFA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5261  000DFE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5262  000E02  0E02               	movlw	2
  5263  000E04  26DE               	addwf	postinc2,f,c
  5264  000E06  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5265  000E0A  0E00               	movlw	0
  5266  000E0C  22DD               	addwfc	postdec2,f,c
  5267  000E0E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5268  000E12  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5269  000E16  50DF               	movf	indf2,w,c
  5270  000E18  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  5271  000E1A  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  5272  000E1C  6E60               	movwf	vfpfcnvrt@llu^0,c
  5273  000E1E  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  5274  000E20  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5275  000E22  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5276  000E24  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5277  000E26  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5278  000E28  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5279  000E2A  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5280  000E2C                     l4570:
  5281  000E2C  FFFF               	dw	65535	; assembler added errata NOP
  5282                           
  5283                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1166:            
      +                           return utoa(fp, llu);
  5284  000E2E  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  5285  000E32  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  5286  000E36  C060  F01E         	movff	vfpfcnvrt@llu,utoa@d
  5287  000E3A  C061  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  5288  000E3E  C062  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  5289  000E42  C063  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  5290  000E46  C064  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  5291  000E4A  C065  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  5292  000E4E  C066  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  5293  000E52  C067  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  5294  000E56  EC25  F01A         	call	_utoa	;wreg free
  5295  000E5A  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  5296  000E5E  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  5297  000E62  EF2E  F00A         	goto	l1301
  5298  000E66                     l4574:
  5299  000E66  FFFF               	dw	65535	; assembler added errata NOP
  5300                           
  5301                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1172:         if 
      +                          (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  5302  000E68  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5303  000E6C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5304  000E70  CFDE F001          	movff	postinc2,strncmp@_l
  5305  000E74  CFDD F002          	movff	postdec2,strncmp@_l+1
  5306  000E78  0EE0               	movlw	low (STR_68+1)
  5307  000E7A  6E03               	movwf	strncmp@_r^0,c
  5308  000E7C  0E7F               	movlw	high (STR_68+1)
  5309  000E7E  6E04               	movwf	(strncmp@_r+1)^0,c
  5310  000E80  0E00               	movlw	0
  5311  000E82  6E06               	movwf	(strncmp@n+1)^0,c
  5312  000E84  0E02               	movlw	2
  5313  000E86  6E05               	movwf	strncmp@n^0,c
  5314  000E88  EC1B  F03B         	call	_strncmp	;wreg free
  5315  000E8C  5001               	movf	?_strncmp^0,w,c
  5316  000E8E  1002               	iorwf	(?_strncmp+1)^0,w,c
  5317  000E90  A4D8               	btfss	status,2,c
  5318  000E92  EF4D  F007         	goto	u5541
  5319  000E96  EF50  F007         	goto	u5540
  5320  000E9A                     u5541:
  5321  000E9A  FFFF               	dw	65535	; assembler added errata NOP
  5322  000E9C  EF79  F007         	goto	l4582
  5323  000EA0                     u5540:
  5324  000EA0  FFFF               	dw	65535	; assembler added errata NOP
  5325  000EA2                     
  5326                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1174:            
      +                           *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  5327  000EA2  0E02               	movlw	2
  5328  000EA4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5329  000EA8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5330  000EAC  26DE               	addwf	postinc2,f,c
  5331  000EAE  0E00               	movlw	0
  5332  000EB0  22DD               	addwfc	postdec2,f,c
  5333                           
  5334                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1175:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5335  000EB2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5336  000EB6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5337  000EBA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5338  000EBE  0E02               	movlw	2
  5339  000EC0  26DE               	addwf	postinc2,f,c
  5340  000EC2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5341  000EC6  0E00               	movlw	0
  5342  000EC8  22DD               	addwfc	postdec2,f,c
  5343  000ECA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5344  000ECE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5345  000ED2  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5346  000ED6  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5347  000EDA  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5348  000EDE  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5349  000EE2  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5350  000EE4  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5351  000EE6  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5352  000EE8  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5353  000EEA  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5354  000EEC  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5355  000EEE  EF16  F007         	goto	l4570
  5356  000EF2                     l4582:
  5357  000EF2  FFFF               	dw	65535	; assembler added errata NOP
  5358                           
  5359                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1182:         if 
      +                          (*fmt[0] == 'u') {
  5360  000EF4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5361  000EF8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5362  000EFC  CFDE FFF6          	movff	postinc2,tblptrl
  5363  000F00  CFDD FFF7          	movff	postdec2,tblptrh
  5364  000F04                     	if	0	;tblptru may be non-zero
  5365  000F04                     	endif
  5366  000F04                     	if	0	;tblptru may be non-zero
  5367  000F04                     	endif
  5368  000F04  0008               	tblrd		*
  5369  000F06  FFFF               	dw	65535	; errata NOP
  5370  000F08  50F5               	movf	tablat,w,c
  5371  000F0A  0A75               	xorlw	117
  5372  000F0C  A4D8               	btfss	status,2,c
  5373  000F0E  EF8B  F007         	goto	u5551
  5374  000F12  EF8E  F007         	goto	u5550
  5375  000F16                     u5551:
  5376  000F16  FFFF               	dw	65535	; assembler added errata NOP
  5377  000F18  EFB6  F007         	goto	l4590
  5378  000F1C                     u5550:
  5379  000F1C  FFFF               	dw	65535	; assembler added errata NOP
  5380  000F1E                     
  5381                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1184:            
      +                           ++*fmt;
  5382  000F1E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5383  000F22  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5384  000F26  2ADE               	incf	postinc2,f,c
  5385  000F28  0E00               	movlw	0
  5386  000F2A  22DD               	addwfc	postdec2,f,c
  5387                           
  5388                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1185:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5389  000F2C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5390  000F30  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5391  000F34  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5392  000F38  0E02               	movlw	2
  5393  000F3A  26DE               	addwf	postinc2,f,c
  5394  000F3C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5395  000F40  0E00               	movlw	0
  5396  000F42  22DD               	addwfc	postdec2,f,c
  5397  000F44  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5398  000F48  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5399  000F4C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5400  000F50  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5401  000F54  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5402  000F58  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5403  000F5C  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5404  000F5E  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5405  000F60  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5406  000F62  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5407  000F64  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5408  000F66  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5409  000F68  EF16  F007         	goto	l4570
  5410  000F6C                     l4590:
  5411  000F6C  FFFF               	dw	65535	; assembler added errata NOP
  5412                           
  5413                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1236:         if 
      +                          (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  5414  000F6E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5415  000F72  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5416  000F76  CFDE F001          	movff	postinc2,strncmp@_l
  5417  000F7A  CFDD F002          	movff	postdec2,strncmp@_l+1
  5418  000F7E  0EF6               	movlw	low STR_78
  5419  000F80  6E03               	movwf	strncmp@_r^0,c
  5420  000F82  0E7F               	movlw	high STR_78
  5421  000F84  6E04               	movwf	(strncmp@_r+1)^0,c
  5422  000F86  0E00               	movlw	0
  5423  000F88  6E06               	movwf	(strncmp@n+1)^0,c
  5424  000F8A  0E02               	movlw	2
  5425  000F8C  6E05               	movwf	strncmp@n^0,c
  5426  000F8E  EC1B  F03B         	call	_strncmp	;wreg free
  5427  000F92  5001               	movf	?_strncmp^0,w,c
  5428  000F94  1002               	iorwf	(?_strncmp+1)^0,w,c
  5429  000F96  A4D8               	btfss	status,2,c
  5430  000F98  EFD0  F007         	goto	u5561
  5431  000F9C  EFD3  F007         	goto	u5560
  5432  000FA0                     u5561:
  5433  000FA0  FFFF               	dw	65535	; assembler added errata NOP
  5434  000FA2  EFFC  F007         	goto	l4598
  5435  000FA6                     u5560:
  5436  000FA6  FFFF               	dw	65535	; assembler added errata NOP
  5437  000FA8                     
  5438                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1238:            
      +                           *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  5439  000FA8  0E02               	movlw	2
  5440  000FAA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5441  000FAE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5442  000FB2  26DE               	addwf	postinc2,f,c
  5443  000FB4  0E00               	movlw	0
  5444  000FB6  22DD               	addwfc	postdec2,f,c
  5445                           
  5446                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1239:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5447  000FB8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5448  000FBC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5449  000FC0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5450  000FC4  0E02               	movlw	2
  5451  000FC6  26DE               	addwf	postinc2,f,c
  5452  000FC8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5453  000FCC  0E00               	movlw	0
  5454  000FCE  22DD               	addwfc	postdec2,f,c
  5455  000FD0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5456  000FD4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5457  000FD8  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5458  000FDC  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5459  000FE0  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5460  000FE4  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5461  000FE8  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5462  000FEA  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5463  000FEC  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5464  000FEE  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5465  000FF0  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5466  000FF2  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5467  000FF4  EF16  F007         	goto	l4570
  5468  000FF8                     l4598:
  5469  000FF8  FFFF               	dw	65535	; assembler added errata NOP
  5470                           
  5471                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1249:         if 
      +                          (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((
      +                          sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  5472  000FFA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5473  000FFE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5474  001002  CFDE F001          	movff	postinc2,strncmp@_l
  5475  001006  CFDD F002          	movff	postdec2,strncmp@_l+1
  5476  00100A  0EE3               	movlw	low STR_83
  5477  00100C  6E03               	movwf	strncmp@_r^0,c
  5478  00100E  0E7F               	movlw	high STR_83
  5479  001010  6E04               	movwf	(strncmp@_r+1)^0,c
  5480  001012  0E00               	movlw	0
  5481  001014  6E06               	movwf	(strncmp@n+1)^0,c
  5482  001016  0E03               	movlw	3
  5483  001018  6E05               	movwf	strncmp@n^0,c
  5484  00101A  EC1B  F03B         	call	_strncmp	;wreg free
  5485  00101E  5001               	movf	?_strncmp^0,w,c
  5486  001020  1002               	iorwf	(?_strncmp+1)^0,w,c
  5487  001022  B4D8               	btfsc	status,2,c
  5488  001024  EF16  F008         	goto	u5571
  5489  001028  EF19  F008         	goto	u5570
  5490  00102C                     u5571:
  5491  00102C  FFFF               	dw	65535	; assembler added errata NOP
  5492  00102E  EF36  F008         	goto	l4602
  5493  001032                     u5570:
  5494  001032  FFFF               	dw	65535	; assembler added errata NOP
  5495  001034  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5496  001038  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5497  00103C  CFDE F001          	movff	postinc2,strncmp@_l
  5498  001040  CFDD F002          	movff	postdec2,strncmp@_l+1
  5499  001044  0ECB               	movlw	low STR_87
  5500  001046  6E03               	movwf	strncmp@_r^0,c
  5501  001048  0E7F               	movlw	high STR_87
  5502  00104A  6E04               	movwf	(strncmp@_r+1)^0,c
  5503  00104C  0E00               	movlw	0
  5504  00104E  6E06               	movwf	(strncmp@n+1)^0,c
  5505  001050  0E03               	movlw	3
  5506  001052  6E05               	movwf	strncmp@n^0,c
  5507  001054  EC1B  F03B         	call	_strncmp	;wreg free
  5508  001058  5001               	movf	?_strncmp^0,w,c
  5509  00105A  1002               	iorwf	(?_strncmp+1)^0,w,c
  5510  00105C  A4D8               	btfss	status,2,c
  5511  00105E  EF33  F008         	goto	u5581
  5512  001062  EF36  F008         	goto	u5580
  5513  001066                     u5581:
  5514  001066  FFFF               	dw	65535	; assembler added errata NOP
  5515  001068  EF8D  F008         	goto	l4612
  5516  00106C                     u5580:
  5517  00106C                     l4602:
  5518  00106C  FFFF               	dw	65535	; assembler added errata NOP
  5519                           
  5520                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1250: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1252:             c = (*fmt)
      +                          [2];
  5521  00106E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5522  001072  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5523  001076  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  5524  00107A  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  5525  00107E  0E02               	movlw	2
  5526  001080  2649               	addwf	??_vfpfcnvrt^0,f,c
  5527  001082  0E00               	movlw	0
  5528  001084  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5529  001086  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5530  00108A  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5531  00108E                     	if	0	;tblptru may be non-zero
  5532  00108E                     	endif
  5533  00108E                     	if	0	;tblptru may be non-zero
  5534  00108E                     	endif
  5535  00108E  0008               	tblrd		*
  5536  001090  FFFF               	dw	65535	; errata NOP
  5537  001092  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5538  001096                     
  5539                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1253:            
      +                           *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  5540  001096  0E03               	movlw	3
  5541  001098  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5542  00109C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5543  0010A0  26DE               	addwf	postinc2,f,c
  5544  0010A2  0E00               	movlw	0
  5545  0010A4  22DD               	addwfc	postdec2,f,c
  5546  0010A6                     
  5547                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1254:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5548  0010A6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5549  0010AA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5550  0010AE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5551  0010B2  0E02               	movlw	2
  5552  0010B4  26DE               	addwf	postinc2,f,c
  5553  0010B6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5554  0010BA  0E00               	movlw	0
  5555  0010BC  22DD               	addwfc	postdec2,f,c
  5556  0010BE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5557  0010C2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5558  0010C6  50DF               	movf	indf2,w,c
  5559  0010C8  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  5560  0010CA  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  5561  0010CC  6E60               	movwf	vfpfcnvrt@llu^0,c
  5562  0010CE  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  5563  0010D0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5564  0010D2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5565  0010D4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5566  0010D6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5567  0010D8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5568  0010DA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5569  0010DC                     l4608:
  5570  0010DC  FFFF               	dw	65535	; assembler added errata NOP
  5571                           
  5572                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1256:            
      +                           return xtoa(fp, llu, c);
  5573  0010DE  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  5574  0010E2  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5575  0010E6  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  5576  0010EA  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5577  0010EE  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5578  0010F2  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5579  0010F6  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5580  0010FA  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5581  0010FE  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5582  001102  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5583  001106  C05F  F026         	movff	vfpfcnvrt@c,xtoa@x
  5584  00110A  EC8D  F018         	call	_xtoa	;wreg free
  5585  00110E  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  5586  001112  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5587  001116  EF2E  F00A         	goto	l1301
  5588  00111A                     l4612:
  5589  00111A  FFFF               	dw	65535	; assembler added errata NOP
  5590                           
  5591                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1262:         if 
      +                          (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((size
      +                          of("hX")/sizeof("hX"[0]))-1))) {
  5592  00111C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5593  001120  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5594  001124  CFDE F001          	movff	postinc2,strncmp@_l
  5595  001128  CFDD F002          	movff	postdec2,strncmp@_l+1
  5596  00112C  0EE4               	movlw	low (STR_83+1)
  5597  00112E  6E03               	movwf	strncmp@_r^0,c
  5598  001130  0E7F               	movlw	high (STR_83+1)
  5599  001132  6E04               	movwf	(strncmp@_r+1)^0,c
  5600  001134  0E00               	movlw	0
  5601  001136  6E06               	movwf	(strncmp@n+1)^0,c
  5602  001138  0E02               	movlw	2
  5603  00113A  6E05               	movwf	strncmp@n^0,c
  5604  00113C  EC1B  F03B         	call	_strncmp	;wreg free
  5605  001140  5001               	movf	?_strncmp^0,w,c
  5606  001142  1002               	iorwf	(?_strncmp+1)^0,w,c
  5607  001144  B4D8               	btfsc	status,2,c
  5608  001146  EFA7  F008         	goto	u5591
  5609  00114A  EFAA  F008         	goto	u5590
  5610  00114E                     u5591:
  5611  00114E  FFFF               	dw	65535	; assembler added errata NOP
  5612  001150  EFC7  F008         	goto	l4616
  5613  001154                     u5590:
  5614  001154  FFFF               	dw	65535	; assembler added errata NOP
  5615  001156  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5616  00115A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5617  00115E  CFDE F001          	movff	postinc2,strncmp@_l
  5618  001162  CFDD F002          	movff	postdec2,strncmp@_l+1
  5619  001166  0ECC               	movlw	low (STR_87+1)
  5620  001168  6E03               	movwf	strncmp@_r^0,c
  5621  00116A  0E7F               	movlw	high (STR_87+1)
  5622  00116C  6E04               	movwf	(strncmp@_r+1)^0,c
  5623  00116E  0E00               	movlw	0
  5624  001170  6E06               	movwf	(strncmp@n+1)^0,c
  5625  001172  0E02               	movlw	2
  5626  001174  6E05               	movwf	strncmp@n^0,c
  5627  001176  EC1B  F03B         	call	_strncmp	;wreg free
  5628  00117A  5001               	movf	?_strncmp^0,w,c
  5629  00117C  1002               	iorwf	(?_strncmp+1)^0,w,c
  5630  00117E  A4D8               	btfss	status,2,c
  5631  001180  EFC4  F008         	goto	u5601
  5632  001184  EFC7  F008         	goto	u5600
  5633  001188                     u5601:
  5634  001188  FFFF               	dw	65535	; assembler added errata NOP
  5635  00118A  EF04  F009         	goto	l4626
  5636  00118E                     u5600:
  5637  00118E                     l4616:
  5638  00118E  FFFF               	dw	65535	; assembler added errata NOP
  5639                           
  5640                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1263: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1265:             c = (*fmt)
      +                          [1];
  5641  001190  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5642  001194  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5643  001198  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  5644  00119C  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  5645  0011A0  0E01               	movlw	1
  5646  0011A2  2649               	addwf	??_vfpfcnvrt^0,f,c
  5647  0011A4  0E00               	movlw	0
  5648  0011A6  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5649  0011A8  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5650  0011AC  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5651  0011B0                     	if	0	;tblptru may be non-zero
  5652  0011B0                     	endif
  5653  0011B0                     	if	0	;tblptru may be non-zero
  5654  0011B0                     	endif
  5655  0011B0  0008               	tblrd		*
  5656  0011B2  FFFF               	dw	65535	; errata NOP
  5657  0011B4  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5658  0011B8                     
  5659                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1266:            
      +                           *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  5660  0011B8  0E02               	movlw	2
  5661  0011BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5662  0011BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5663  0011C2  26DE               	addwf	postinc2,f,c
  5664  0011C4  0E00               	movlw	0
  5665  0011C6  22DD               	addwfc	postdec2,f,c
  5666  0011C8                     
  5667                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1267:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5668  0011C8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5669  0011CC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5670  0011D0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5671  0011D4  0E02               	movlw	2
  5672  0011D6  26DE               	addwf	postinc2,f,c
  5673  0011D8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5674  0011DC  0E00               	movlw	0
  5675  0011DE  22DD               	addwfc	postdec2,f,c
  5676  0011E0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5677  0011E4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5678  0011E8  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5679  0011EC  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5680  0011F0  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5681  0011F4  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5682  0011F8  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5683  0011FA  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5684  0011FC  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5685  0011FE  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5686  001200  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5687  001202  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5688  001204  EF6E  F008         	goto	l4608
  5689  001208                     l4626:
  5690  001208  FFFF               	dw	65535	; assembler added errata NOP
  5691                           
  5692                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1274:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  5693  00120A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5694  00120E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5695  001212  CFDE FFF6          	movff	postinc2,tblptrl
  5696  001216  CFDD FFF7          	movff	postdec2,tblptrh
  5697  00121A                     	if	0	;tblptru may be non-zero
  5698  00121A                     	endif
  5699  00121A                     	if	0	;tblptru may be non-zero
  5700  00121A                     	endif
  5701  00121A  0008               	tblrd		*
  5702  00121C  FFFF               	dw	65535	; errata NOP
  5703  00121E  50F5               	movf	tablat,w,c
  5704  001220  0A78               	xorlw	120
  5705  001222  B4D8               	btfsc	status,2,c
  5706  001224  EF16  F009         	goto	u5611
  5707  001228  EF19  F009         	goto	u5610
  5708  00122C                     u5611:
  5709  00122C  FFFF               	dw	65535	; assembler added errata NOP
  5710  00122E  EF2E  F009         	goto	l4630
  5711  001232                     u5610:
  5712  001232  FFFF               	dw	65535	; assembler added errata NOP
  5713  001234  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5714  001238  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5715  00123C  CFDE FFF6          	movff	postinc2,tblptrl
  5716  001240  CFDD FFF7          	movff	postdec2,tblptrh
  5717  001244                     	if	0	;tblptru may be non-zero
  5718  001244                     	endif
  5719  001244                     	if	0	;tblptru may be non-zero
  5720  001244                     	endif
  5721  001244  0008               	tblrd		*
  5722  001246  FFFF               	dw	65535	; errata NOP
  5723  001248  50F5               	movf	tablat,w,c
  5724  00124A  0A58               	xorlw	88
  5725  00124C  A4D8               	btfss	status,2,c
  5726  00124E  EF2B  F009         	goto	u5621
  5727  001252  EF2E  F009         	goto	u5620
  5728  001256                     u5621:
  5729  001256  FFFF               	dw	65535	; assembler added errata NOP
  5730  001258  EF62  F009         	goto	l4640
  5731  00125C                     u5620:
  5732  00125C                     l4630:
  5733  00125C  FFFF               	dw	65535	; assembler added errata NOP
  5734                           
  5735                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1276:            
      +                           c = (*fmt)[0];
  5736  00125E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5737  001262  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5738  001266  CFDE FFF6          	movff	postinc2,tblptrl
  5739  00126A  CFDD FFF7          	movff	postdec2,tblptrh
  5740  00126E                     	if	0	;tblptru may be non-zero
  5741  00126E                     	endif
  5742  00126E                     	if	0	;tblptru may be non-zero
  5743  00126E                     	endif
  5744  00126E  0008               	tblrd		*
  5745  001270  FFFF               	dw	65535	; errata NOP
  5746  001272  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5747  001276                     
  5748                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1277:            
      +                           ++*fmt;
  5749  001276  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5750  00127A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5751  00127E  2ADE               	incf	postinc2,f,c
  5752  001280  0E00               	movlw	0
  5753  001282  22DD               	addwfc	postdec2,f,c
  5754  001284                     
  5755                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1278:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5756  001284  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5757  001288  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5758  00128C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5759  001290  0E02               	movlw	2
  5760  001292  26DE               	addwf	postinc2,f,c
  5761  001294  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5762  001298  0E00               	movlw	0
  5763  00129A  22DD               	addwfc	postdec2,f,c
  5764  00129C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5765  0012A0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5766  0012A4  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5767  0012A8  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5768  0012AC  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5769  0012B0  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5770  0012B4  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5771  0012B6  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5772  0012B8  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5773  0012BA  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5774  0012BC  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5775  0012BE  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5776  0012C0  EF6E  F008         	goto	l4608
  5777  0012C4                     l4640:
  5778  0012C4  FFFF               	dw	65535	; assembler added errata NOP
  5779                           
  5780                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1337:         if 
      +                          (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((size
      +                          of("zX")/sizeof("zX"[0]))-1))) {
  5781  0012C6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5782  0012CA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5783  0012CE  CFDE F001          	movff	postinc2,strncmp@_l
  5784  0012D2  CFDD F002          	movff	postdec2,strncmp@_l+1
  5785  0012D6  0EF9               	movlw	low STR_101
  5786  0012D8  6E03               	movwf	strncmp@_r^0,c
  5787  0012DA  0E7F               	movlw	high STR_101
  5788  0012DC  6E04               	movwf	(strncmp@_r+1)^0,c
  5789  0012DE  0E00               	movlw	0
  5790  0012E0  6E06               	movwf	(strncmp@n+1)^0,c
  5791  0012E2  0E02               	movlw	2
  5792  0012E4  6E05               	movwf	strncmp@n^0,c
  5793  0012E6  EC1B  F03B         	call	_strncmp	;wreg free
  5794  0012EA  5001               	movf	?_strncmp^0,w,c
  5795  0012EC  1002               	iorwf	(?_strncmp+1)^0,w,c
  5796  0012EE  B4D8               	btfsc	status,2,c
  5797  0012F0  EF7C  F009         	goto	u5631
  5798  0012F4  EF7F  F009         	goto	u5630
  5799  0012F8                     u5631:
  5800  0012F8  FFFF               	dw	65535	; assembler added errata NOP
  5801  0012FA  EF9C  F009         	goto	l4644
  5802  0012FE                     u5630:
  5803  0012FE  FFFF               	dw	65535	; assembler added errata NOP
  5804  001300  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5805  001304  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5806  001308  CFDE F001          	movff	postinc2,strncmp@_l
  5807  00130C  CFDD F002          	movff	postdec2,strncmp@_l+1
  5808  001310  0EE7               	movlw	low STR_105
  5809  001312  6E03               	movwf	strncmp@_r^0,c
  5810  001314  0E7F               	movlw	high STR_105
  5811  001316  6E04               	movwf	(strncmp@_r+1)^0,c
  5812  001318  0E00               	movlw	0
  5813  00131A  6E06               	movwf	(strncmp@n+1)^0,c
  5814  00131C  0E02               	movlw	2
  5815  00131E  6E05               	movwf	strncmp@n^0,c
  5816  001320  EC1B  F03B         	call	_strncmp	;wreg free
  5817  001324  5001               	movf	?_strncmp^0,w,c
  5818  001326  1002               	iorwf	(?_strncmp+1)^0,w,c
  5819  001328  A4D8               	btfss	status,2,c
  5820  00132A  EF99  F009         	goto	u5641
  5821  00132E  EF9C  F009         	goto	u5640
  5822  001332                     u5641:
  5823  001332  FFFF               	dw	65535	; assembler added errata NOP
  5824  001334  EFD9  F009         	goto	l4654
  5825  001338                     u5640:
  5826  001338                     l4644:
  5827  001338  FFFF               	dw	65535	; assembler added errata NOP
  5828                           
  5829                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1338: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1340:             c = (*fmt)
      +                          [1];
  5830  00133A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5831  00133E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5832  001342  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  5833  001346  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  5834  00134A  0E01               	movlw	1
  5835  00134C  2649               	addwf	??_vfpfcnvrt^0,f,c
  5836  00134E  0E00               	movlw	0
  5837  001350  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5838  001352  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5839  001356  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5840  00135A                     	if	0	;tblptru may be non-zero
  5841  00135A                     	endif
  5842  00135A                     	if	0	;tblptru may be non-zero
  5843  00135A                     	endif
  5844  00135A  0008               	tblrd		*
  5845  00135C  FFFF               	dw	65535	; errata NOP
  5846  00135E  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5847  001362                     
  5848                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1341:            
      +                           *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  5849  001362  0E02               	movlw	2
  5850  001364  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5851  001368  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5852  00136C  26DE               	addwf	postinc2,f,c
  5853  00136E  0E00               	movlw	0
  5854  001370  22DD               	addwfc	postdec2,f,c
  5855  001372                     
  5856                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1342:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5857  001372  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5858  001376  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5859  00137A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5860  00137E  0E02               	movlw	2
  5861  001380  26DE               	addwf	postinc2,f,c
  5862  001382  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5863  001386  0E00               	movlw	0
  5864  001388  22DD               	addwfc	postdec2,f,c
  5865  00138A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5866  00138E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5867  001392  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5868  001396  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5869  00139A  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5870  00139E  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5871  0013A2  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5872  0013A4  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5873  0013A6  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5874  0013A8  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5875  0013AA  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5876  0013AC  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5877  0013AE  EF6E  F008         	goto	l4608
  5878  0013B2                     l4654:
  5879  0013B2  FFFF               	dw	65535	; assembler added errata NOP
  5880                           
  5881                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  5882  0013B4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5883  0013B8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5884  0013BC  CFDE FFF6          	movff	postinc2,tblptrl
  5885  0013C0  CFDD FFF7          	movff	postdec2,tblptrh
  5886  0013C4                     	if	0	;tblptru may be non-zero
  5887  0013C4                     	endif
  5888  0013C4                     	if	0	;tblptru may be non-zero
  5889  0013C4                     	endif
  5890  0013C4  0008               	tblrd		*
  5891  0013C6  FFFF               	dw	65535	; errata NOP
  5892  0013C8  50F5               	movf	tablat,w,c
  5893  0013CA  0A25               	xorlw	37
  5894  0013CC  A4D8               	btfss	status,2,c
  5895  0013CE  EFEB  F009         	goto	u5651
  5896  0013D2  EFEE  F009         	goto	u5650
  5897  0013D6                     u5651:
  5898  0013D6  FFFF               	dw	65535	; assembler added errata NOP
  5899  0013D8  EF07  F00A         	goto	l4664
  5900  0013DC                     u5650:
  5901  0013DC  FFFF               	dw	65535	; assembler added errata NOP
  5902  0013DE                     
  5903                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  5904  0013DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5905  0013E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5906  0013E6  2ADE               	incf	postinc2,f,c
  5907  0013E8  0E00               	movlw	0
  5908  0013EA  22DD               	addwfc	postdec2,f,c
  5909  0013EC                     
  5910                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  5911  0013EC  0E00               	movlw	0
  5912  0013EE  6E02               	movwf	(fputc@c+1)^0,c
  5913  0013F0  0E25               	movlw	37
  5914  0013F2  6E01               	movwf	fputc@c^0,c
  5915  0013F4  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5916  0013F8  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5917  0013FC  EC4A  F039         	call	_fputc	;wreg free
  5918  001400                     l4660:
  5919  001400  FFFF               	dw	65535	; assembler added errata NOP
  5920                           
  5921                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  5922  001402  0E00               	movlw	0
  5923  001404  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  5924  001406  0E01               	movlw	1
  5925  001408  6E43               	movwf	?_vfpfcnvrt^0,c
  5926  00140A  EF2E  F00A         	goto	l1301
  5927  00140E                     l4664:
  5928  00140E  FFFF               	dw	65535	; assembler added errata NOP
  5929                           
  5930                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  5931  001410  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5932  001414  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5933  001418  2ADE               	incf	postinc2,f,c
  5934  00141A  0E00               	movlw	0
  5935  00141C  22DD               	addwfc	postdec2,f,c
  5936  00141E  EF44  F005         	goto	l4516
  5937  001422                     l4670:
  5938  001422  FFFF               	dw	65535	; assembler added errata NOP
  5939                           
  5940                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  5941  001424  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5942  001428  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5943  00142C  CFDE FFF6          	movff	postinc2,tblptrl
  5944  001430  CFDD FFF7          	movff	postdec2,tblptrh
  5945  001434                     	if	0	;tblptru may be non-zero
  5946  001434                     	endif
  5947  001434                     	if	0	;tblptru may be non-zero
  5948  001434                     	endif
  5949  001434  0008               	tblrd		*
  5950  001436  FFFF               	dw	65535	; errata NOP
  5951  001438  50F5               	movf	tablat,w,c
  5952  00143A  6E01               	movwf	fputc@c^0,c
  5953  00143C  6A02               	clrf	(fputc@c+1)^0,c
  5954  00143E  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5955  001442  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5956  001446  EC4A  F039         	call	_fputc	;wreg free
  5957  00144A                     
  5958                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  5959  00144A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5960  00144E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5961  001452  2ADE               	incf	postinc2,f,c
  5962  001454  0E00               	movlw	0
  5963  001456  22DD               	addwfc	postdec2,f,c
  5964  001458  EF00  F00A         	goto	l4660
  5965  00145C                     l1301:
  5966  00145C  FFFF               	dw	65535	; assembler added errata NOP
  5967  00145E  0012               	return		;funcret
  5968  001460  FFFF               	dw	65535	; errata NOP
  5969  001462                     __end_of_vfpfcnvrt:
  5970                           	callstack 0
  5971                           
  5972 ;; *************** function _xtoa *****************
  5973 ;; Defined at:
  5974 ;;		line 623 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5975 ;; Parameters:    Size  Location     Type
  5976 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5977 ;;		 -> vsnprintf@f(6), 
  5978 ;;  d               8   29[COMRAM] unsigned long long 
  5979 ;;  x               1   37[COMRAM] unsigned char 
  5980 ;; Auto vars:     Size  Location     Type
  5981 ;;  n               8   54[COMRAM] unsigned long long 
  5982 ;;  c               2   64[COMRAM] int 
  5983 ;;  i               2   62[COMRAM] int 
  5984 ;;  w               2   52[COMRAM] int 
  5985 ;;  p               2   50[COMRAM] int 
  5986 ;; Return value:  Size  Location     Type
  5987 ;;                  2   27[COMRAM] int 
  5988 ;; Registers used:
  5989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5995 ;;      Params:        11       0       0       0       0       0       0
  5996 ;;      Locals:        20       0       0       0       0       0       0
  5997 ;;      Temps:          8       0       0       0       0       0       0
  5998 ;;      Totals:        39       0       0       0       0       0       0
  5999 ;;Total ram usage:       39 bytes
  6000 ;; Hardware stack levels used:    1
  6001 ;; Hardware stack levels required when called:    5
  6002 ;; This function calls:
  6003 ;;		_isalpha
  6004 ;;		_isupper
  6005 ;;		_pad
  6006 ;;		_toupper
  6007 ;; This function is called by:
  6008 ;;		_vfpfcnvrt
  6009 ;; This function uses a non-reentrant model
  6010 ;;
  6011                           
  6012                           	psect	text9
  6013  00311A                     __ptext9:
  6014                           	callstack 0
  6015  00311A                     _xtoa:
  6016                           	callstack 0
  6017  00311A  FFFF               	dw	65535	; assembler added errata NOP
  6018  00311C                     
  6019                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 623: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 624: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 625:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources
      +                          \c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0)) {
  6020  00311C  0100               	movlb	0	; () banked
  6021  00311E  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6022  003120  EF94  F018         	goto	u4491
  6023  003124  EF97  F018         	goto	u4490
  6024  003128                     u4491:
  6025  003128  FFFF               	dw	65535	; assembler added errata NOP
  6026  00312A  EF99  F018         	goto	l4026
  6027  00312E                     u4490:
  6028  00312E  FFFF               	dw	65535	; assembler added errata NOP
  6029  003130                     
  6030                           ; BSR set to: 0
  6031                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 630:         flag
      +                          s &= ~(1 << 1);
  6032  003130  938A               	bcf	_flags& (0+255),1,b
  6033  003132                     l4026:
  6034  003132  FFFF               	dw	65535	; assembler added errata NOP
  6035                           
  6036                           ; BSR set to: 0
  6037                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 632:     p = (0 <
      +                           prec) ? prec : 1;
  6038  003134  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6039  003136  EFA8  F018         	goto	u4500
  6040  00313A  5189               	movf	(_prec+1)& (0+255),w,b
  6041  00313C  E106               	bnz	u4501
  6042  00313E  0588               	decf	_prec& (0+255),w,b
  6043  003140  B0D8               	btfsc	status,0,c
  6044  003142  EFA5  F018         	goto	u4501
  6045  003146  EFA8  F018         	goto	u4500
  6046  00314A                     u4501:
  6047  00314A  FFFF               	dw	65535	; assembler added errata NOP
  6048  00314C  EFAF  F018         	goto	l1239
  6049  003150                     u4500:
  6050  003150  FFFF               	dw	65535	; assembler added errata NOP
  6051  003152                     
  6052                           ; BSR set to: 0
  6053  003152  0E00               	movlw	0
  6054  003154  6E34               	movwf	(xtoa@p+1)^0,c
  6055  003156  0E01               	movlw	1
  6056  003158  6E33               	movwf	xtoa@p^0,c
  6057  00315A  EFB4  F018         	goto	l1241
  6058  00315E                     l1239:
  6059  00315E  FFFF               	dw	65535	; assembler added errata NOP
  6060                           
  6061                           ; BSR set to: 0
  6062  003160  C088  F033         	movff	_prec,xtoa@p
  6063  003164  C089  F034         	movff	_prec+1,xtoa@p+1
  6064  003168                     l1241:
  6065  003168  FFFF               	dw	65535	; assembler added errata NOP
  6066                           
  6067                           ; BSR set to: 0
  6068                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 633:     w = widt
      +                          h;
  6069  00316A  C086  F035         	movff	_width,xtoa@w
  6070  00316E  C087  F036         	movff	_width+1,xtoa@w+1
  6071                           
  6072                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 634:     if (flag
      +                          s & (1 << 4)) {
  6073  003172  A98A               	btfss	_flags& (0+255),4,b
  6074  003174  EFBE  F018         	goto	u4511
  6075  003178  EFC1  F018         	goto	u4510
  6076  00317C                     u4511:
  6077  00317C  FFFF               	dw	65535	; assembler added errata NOP
  6078  00317E  EFC6  F018         	goto	l4032
  6079  003182                     u4510:
  6080  003182  FFFF               	dw	65535	; assembler added errata NOP
  6081  003184                     
  6082                           ; BSR set to: 0
  6083                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 635:         w -=
      +                           2;
  6084  003184  0EFE               	movlw	254
  6085  003186  2635               	addwf	xtoa@w^0,f,c
  6086  003188  0EFF               	movlw	255
  6087  00318A  2236               	addwfc	(xtoa@w+1)^0,f,c
  6088  00318C                     l4032:
  6089  00318C  FFFF               	dw	65535	; assembler added errata NOP
  6090                           
  6091                           ; BSR set to: 0
  6092                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 639:     n = d;
  6093  00318E  C01E  F037         	movff	xtoa@d,xtoa@n
  6094  003192  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  6095  003196  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  6096  00319A  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  6097  00319E  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  6098  0031A2  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  6099  0031A6  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  6100  0031AA  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  6101  0031AE                     
  6102                           ; BSR set to: 0
  6103                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 640:     i = size
      +                          of(dbuf) - 1;
  6104  0031AE  0E00               	movlw	0
  6105  0031B0  6E40               	movwf	(xtoa@i+1)^0,c
  6106  0031B2  0E1F               	movlw	31
  6107  0031B4  6E3F               	movwf	xtoa@i^0,c
  6108  0031B6                     
  6109                           ; BSR set to: 0
  6110                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 641:     dbuf[i] 
      +                          = '\0';
  6111  0031B6  0E00               	movlw	0
  6112  0031B8  6FB7               	movwf	(_dbuf+31)& (0+255),b
  6113                           
  6114                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6115  0031BA  EFA4  F019         	goto	l4068
  6116  0031BE                     l4038:
  6117  0031BE  FFFF               	dw	65535	; assembler added errata NOP
  6118                           
  6119                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 643:         --i;
  6120  0031C0  063F               	decf	xtoa@i^0,f,c
  6121  0031C2  A0D8               	btfss	status,0,c
  6122  0031C4  0640               	decf	(xtoa@i+1)^0,f,c
  6123  0031C6                     
  6124                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 644:         c = 
      +                          n & 0x0f;
  6125  0031C6  0E0F               	movlw	15
  6126  0031C8  1437               	andwf	xtoa@n^0,w,c
  6127  0031CA  6E41               	movwf	xtoa@c^0,c
  6128  0031CC  6A42               	clrf	(xtoa@c+1)^0,c
  6129  0031CE                     
  6130                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 645:         c = 
      +                          (c < 10) ? '0' + c : 'a' + (c - 10);
  6131  0031CE  BE42               	btfsc	(xtoa@c+1)^0,7,c
  6132  0031D0  EFF3  F018         	goto	u4521
  6133  0031D4  5042               	movf	(xtoa@c+1)^0,w,c
  6134  0031D6  E10A               	bnz	u4520
  6135  0031D8  0E0A               	movlw	10
  6136  0031DA  5C41               	subwf	xtoa@c^0,w,c
  6137  0031DC  A0D8               	btfss	status,0,c
  6138  0031DE  EFF3  F018         	goto	u4521
  6139  0031E2  EFF6  F018         	goto	u4520
  6140  0031E6                     u4521:
  6141  0031E6  FFFF               	dw	65535	; assembler added errata NOP
  6142  0031E8  EFFF  F018         	goto	l4046
  6143  0031EC                     u4520:
  6144  0031EC  FFFF               	dw	65535	; assembler added errata NOP
  6145  0031EE  0E57               	movlw	87
  6146  0031F0  2441               	addwf	xtoa@c^0,w,c
  6147  0031F2  6E41               	movwf	xtoa@c^0,c
  6148  0031F4  0E00               	movlw	0
  6149  0031F6  2042               	addwfc	(xtoa@c+1)^0,w,c
  6150  0031F8  6E42               	movwf	(xtoa@c+1)^0,c
  6151  0031FA  EF06  F019         	goto	l1248
  6152  0031FE                     l4046:
  6153  0031FE  FFFF               	dw	65535	; assembler added errata NOP
  6154  003200  0E30               	movlw	48
  6155  003202  2441               	addwf	xtoa@c^0,w,c
  6156  003204  6E41               	movwf	xtoa@c^0,c
  6157  003206  0E00               	movlw	0
  6158  003208  2042               	addwfc	(xtoa@c+1)^0,w,c
  6159  00320A  6E42               	movwf	(xtoa@c+1)^0,c
  6160  00320C                     l1248:
  6161  00320C  FFFF               	dw	65535	; assembler added errata NOP
  6162  00320E  0EBF               	movlw	191
  6163  003210  6E27               	movwf	??_xtoa^0,c
  6164  003212  0EFF               	movlw	255
  6165  003214  6E28               	movwf	(??_xtoa+1)^0,c
  6166  003216  5026               	movf	xtoa@x^0,w,c
  6167  003218  6E29               	movwf	(??_xtoa+2)^0,c
  6168  00321A  6A2A               	clrf	(??_xtoa+3)^0,c
  6169  00321C  5027               	movf	??_xtoa^0,w,c
  6170  00321E  2629               	addwf	(??_xtoa+2)^0,f,c
  6171  003220  5028               	movf	(??_xtoa+1)^0,w,c
  6172  003222  222A               	addwfc	(??_xtoa+3)^0,f,c
  6173  003224  502A               	movf	(??_xtoa+3)^0,w,c
  6174  003226  E10B               	bnz	u4530
  6175  003228  0E1A               	movlw	26
  6176  00322A  5C29               	subwf	(??_xtoa+2)^0,w,c
  6177  00322C  A0D8               	btfss	status,0,c
  6178  00322E  EF1B  F019         	goto	u4531
  6179  003232  EF1F  F019         	goto	u4530
  6180  003236                     u4531:
  6181  003236  FFFF               	dw	65535	; assembler added errata NOP
  6182  003238  0E01               	movlw	1
  6183  00323A  EF21  F019         	goto	u4540
  6184  00323E                     u4530:
  6185  00323E  FFFF               	dw	65535	; assembler added errata NOP
  6186  003240  0E00               	movlw	0
  6187  003242                     u4540:
  6188  003242  FFFF               	dw	65535	; assembler added errata NOP
  6189  003244  6E2F               	movwf	_xtoa$1668^0,c
  6190  003246  6A30               	clrf	(_xtoa$1668+1)^0,c
  6191  003248  502F               	movf	_xtoa$1668^0,w,c
  6192  00324A  1030               	iorwf	(_xtoa$1668+1)^0,w,c
  6193  00324C  B4D8               	btfsc	status,2,c
  6194  00324E  EF2B  F019         	goto	u4551
  6195  003252  EF2E  F019         	goto	u4550
  6196  003256                     u4551:
  6197  003256  FFFF               	dw	65535	; assembler added errata NOP
  6198  003258  EF64  F019         	goto	l4060
  6199  00325C                     u4550:
  6200  00325C  FFFF               	dw	65535	; assembler added errata NOP
  6201  00325E  0E9F               	movlw	159
  6202  003260  6E27               	movwf	??_xtoa^0,c
  6203  003262  0EFF               	movlw	255
  6204  003264  6E28               	movwf	(??_xtoa+1)^0,c
  6205  003266  0E20               	movlw	32
  6206  003268  1041               	iorwf	xtoa@c^0,w,c
  6207  00326A  6E29               	movwf	(??_xtoa+2)^0,c
  6208  00326C  0E00               	movlw	0
  6209  00326E  1042               	iorwf	(xtoa@c+1)^0,w,c
  6210  003270  6E2A               	movwf	(??_xtoa+3)^0,c
  6211  003272  5027               	movf	??_xtoa^0,w,c
  6212  003274  2629               	addwf	(??_xtoa+2)^0,f,c
  6213  003276  5028               	movf	(??_xtoa+1)^0,w,c
  6214  003278  222A               	addwfc	(??_xtoa+3)^0,f,c
  6215  00327A  502A               	movf	(??_xtoa+3)^0,w,c
  6216  00327C  E10B               	bnz	u4560
  6217  00327E  0E1A               	movlw	26
  6218  003280  5C29               	subwf	(??_xtoa+2)^0,w,c
  6219  003282  A0D8               	btfss	status,0,c
  6220  003284  EF46  F019         	goto	u4561
  6221  003288  EF4A  F019         	goto	u4560
  6222  00328C                     u4561:
  6223  00328C  FFFF               	dw	65535	; assembler added errata NOP
  6224  00328E  0E01               	movlw	1
  6225  003290  EF4C  F019         	goto	u4570
  6226  003294                     u4560:
  6227  003294  FFFF               	dw	65535	; assembler added errata NOP
  6228  003296  0E00               	movlw	0
  6229  003298                     u4570:
  6230  003298  FFFF               	dw	65535	; assembler added errata NOP
  6231  00329A  6E31               	movwf	_xtoa$1669^0,c
  6232  00329C  6A32               	clrf	(_xtoa$1669+1)^0,c
  6233  00329E  5031               	movf	_xtoa$1669^0,w,c
  6234  0032A0  1032               	iorwf	(_xtoa$1669+1)^0,w,c
  6235  0032A2  B4D8               	btfsc	status,2,c
  6236  0032A4  EF56  F019         	goto	u4581
  6237  0032A8  EF59  F019         	goto	u4580
  6238  0032AC                     u4581:
  6239  0032AC  FFFF               	dw	65535	; assembler added errata NOP
  6240  0032AE  EF64  F019         	goto	l4060
  6241  0032B2                     u4580:
  6242  0032B2  FFFF               	dw	65535	; assembler added errata NOP
  6243  0032B4                     
  6244                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 647:             
      +                          c = toupper(c);
  6245  0032B4  C041  F007         	movff	xtoa@c,toupper@c
  6246  0032B8  C042  F008         	movff	xtoa@c+1,toupper@c+1
  6247  0032BC  ECA1  F035         	call	_toupper	;wreg free
  6248  0032C0  C007  F041         	movff	?_toupper,xtoa@c
  6249  0032C4  C008  F042         	movff	?_toupper+1,xtoa@c+1
  6250  0032C8                     l4060:
  6251  0032C8  FFFF               	dw	65535	; assembler added errata NOP
  6252                           
  6253                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 649:         dbuf
      +                          [i] = (char)c;
  6254  0032CA  0E98               	movlw	low _dbuf
  6255  0032CC  243F               	addwf	xtoa@i^0,w,c
  6256  0032CE  6ED9               	movwf	fsr2l,c
  6257  0032D0  0E00               	movlw	high _dbuf
  6258  0032D2  2040               	addwfc	(xtoa@i+1)^0,w,c
  6259  0032D4  6EDA               	movwf	fsr2h,c
  6260  0032D6  C041  FFDF         	movff	xtoa@c,indf2
  6261  0032DA                     
  6262                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 650:         --p;
  6263  0032DA  0633               	decf	xtoa@p^0,f,c
  6264  0032DC  A0D8               	btfss	status,0,c
  6265  0032DE  0634               	decf	(xtoa@p+1)^0,f,c
  6266  0032E0                     
  6267                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 651:         --w;
  6268  0032E0  0635               	decf	xtoa@w^0,f,c
  6269  0032E2  A0D8               	btfss	status,0,c
  6270  0032E4  0636               	decf	(xtoa@w+1)^0,f,c
  6271  0032E6                     
  6272                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 652:         n = 
      +                          n >> 4;
  6273  0032E6  C037  F027         	movff	xtoa@n,??_xtoa
  6274  0032EA  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  6275  0032EE  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  6276  0032F2  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  6277  0032F6  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  6278  0032FA  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  6279  0032FE  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  6280  003302  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  6281  003306  0E05               	movlw	5
  6282  003308  EF90  F019         	goto	u4590
  6283  00330C                     u4595:
  6284  00330C  FFFF               	dw	65535	; assembler added errata NOP
  6285  00330E  90D8               	bcf	status,0,c
  6286  003310  322E               	rrcf	(??_xtoa+7)^0,f,c
  6287  003312  322D               	rrcf	(??_xtoa+6)^0,f,c
  6288  003314  322C               	rrcf	(??_xtoa+5)^0,f,c
  6289  003316  322B               	rrcf	(??_xtoa+4)^0,f,c
  6290  003318  322A               	rrcf	(??_xtoa+3)^0,f,c
  6291  00331A  3229               	rrcf	(??_xtoa+2)^0,f,c
  6292  00331C  3228               	rrcf	(??_xtoa+1)^0,f,c
  6293  00331E  3227               	rrcf	??_xtoa^0,f,c
  6294  003320                     u4590:
  6295  003320  FFFF               	dw	65535	; assembler added errata NOP
  6296  003322  2EE8               	decfsz	wreg,f,c
  6297  003324  EF86  F019         	goto	u4595
  6298  003328  C027  F037         	movff	??_xtoa,xtoa@n
  6299  00332C  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  6300  003330  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  6301  003334  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  6302  003338  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  6303  00333C  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  6304  003340  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  6305  003344  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  6306  003348                     l4068:
  6307  003348  FFFF               	dw	65535	; assembler added errata NOP
  6308                           
  6309                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6310  00334A  BE40               	btfsc	(xtoa@i+1)^0,7,c
  6311  00334C  EFB1  F019         	goto	u4601
  6312  003350  5040               	movf	(xtoa@i+1)^0,w,c
  6313  003352  E10A               	bnz	u4600
  6314  003354  0E02               	movlw	2
  6315  003356  5C3F               	subwf	xtoa@i^0,w,c
  6316  003358  A0D8               	btfss	status,0,c
  6317  00335A  EFB1  F019         	goto	u4601
  6318  00335E  EFB4  F019         	goto	u4600
  6319  003362                     u4601:
  6320  003362  FFFF               	dw	65535	; assembler added errata NOP
  6321  003364  EFED  F019         	goto	l1262
  6322  003368                     u4600:
  6323  003368  FFFF               	dw	65535	; assembler added errata NOP
  6324  00336A  5037               	movf	xtoa@n^0,w,c
  6325  00336C  1038               	iorwf	(xtoa@n+1)^0,w,c
  6326  00336E  1039               	iorwf	(xtoa@n+2)^0,w,c
  6327  003370  103A               	iorwf	(xtoa@n+3)^0,w,c
  6328  003372  103B               	iorwf	(xtoa@n+4)^0,w,c
  6329  003374  103C               	iorwf	(xtoa@n+5)^0,w,c
  6330  003376  103D               	iorwf	(xtoa@n+6)^0,w,c
  6331  003378  103E               	iorwf	(xtoa@n+7)^0,w,c
  6332  00337A  A4D8               	btfss	status,2,c
  6333  00337C  EFC2  F019         	goto	u4611
  6334  003380  EFC5  F019         	goto	u4610
  6335  003384                     u4611:
  6336  003384  FFFF               	dw	65535	; assembler added errata NOP
  6337  003386  EFDF  F018         	goto	l4038
  6338  00338A                     u4610:
  6339  00338A  FFFF               	dw	65535	; assembler added errata NOP
  6340  00338C  BE34               	btfsc	(xtoa@p+1)^0,7,c
  6341  00338E  EFD4  F019         	goto	u4620
  6342  003392  5034               	movf	(xtoa@p+1)^0,w,c
  6343  003394  E106               	bnz	u4621
  6344  003396  0433               	decf	xtoa@p^0,w,c
  6345  003398  B0D8               	btfsc	status,0,c
  6346  00339A  EFD1  F019         	goto	u4621
  6347  00339E  EFD4  F019         	goto	u4620
  6348  0033A2                     u4621:
  6349  0033A2  FFFF               	dw	65535	; assembler added errata NOP
  6350  0033A4  EFDF  F018         	goto	l4038
  6351  0033A8                     u4620:
  6352  0033A8  FFFF               	dw	65535	; assembler added errata NOP
  6353  0033AA  BE36               	btfsc	(xtoa@w+1)^0,7,c
  6354  0033AC  EFE0  F019         	goto	u4631
  6355  0033B0  5036               	movf	(xtoa@w+1)^0,w,c
  6356  0033B2  E109               	bnz	u4630
  6357  0033B4  0435               	decf	xtoa@w^0,w,c
  6358  0033B6  A0D8               	btfss	status,0,c
  6359  0033B8  EFE0  F019         	goto	u4631
  6360  0033BC  EFE3  F019         	goto	u4630
  6361  0033C0                     u4631:
  6362  0033C0  FFFF               	dw	65535	; assembler added errata NOP
  6363  0033C2  EFED  F019         	goto	l1262
  6364  0033C6                     u4630:
  6365  0033C6  FFFF               	dw	65535	; assembler added errata NOP
  6366  0033C8  0100               	movlb	0	; () banked
  6367  0033CA  B38A               	btfsc	_flags& (0+255),1,b
  6368  0033CC  EFEA  F019         	goto	u4641
  6369  0033D0  EFED  F019         	goto	u4640
  6370  0033D4                     u4641:
  6371  0033D4  FFFF               	dw	65535	; assembler added errata NOP
  6372  0033D6  EFDF  F018         	goto	l4038
  6373  0033DA                     u4640:
  6374  0033DA                     l1262:
  6375  0033DA  FFFF               	dw	65535	; assembler added errata NOP
  6376                           
  6377                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  6378  0033DC  0100               	movlb	0	; () banked
  6379  0033DE  A98A               	btfss	_flags& (0+255),4,b
  6380  0033E0  EFF4  F019         	goto	u4651
  6381  0033E4  EFF7  F019         	goto	u4650
  6382  0033E8                     u4651:
  6383  0033E8  FFFF               	dw	65535	; assembler added errata NOP
  6384  0033EA  EF0E  F01A         	goto	l4084
  6385  0033EE                     u4650:
  6386  0033EE  FFFF               	dw	65535	; assembler added errata NOP
  6387  0033F0                     
  6388                           ; BSR set to: 0
  6389                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 657:         --i;
  6390  0033F0  063F               	decf	xtoa@i^0,f,c
  6391  0033F2  A0D8               	btfss	status,0,c
  6392  0033F4  0640               	decf	(xtoa@i+1)^0,f,c
  6393  0033F6                     
  6394                           ; BSR set to: 0
  6395                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 658:         dbuf
      +                          [i] = x;
  6396  0033F6  0E98               	movlw	low _dbuf
  6397  0033F8  243F               	addwf	xtoa@i^0,w,c
  6398  0033FA  6ED9               	movwf	fsr2l,c
  6399  0033FC  0E00               	movlw	high _dbuf
  6400  0033FE  2040               	addwfc	(xtoa@i+1)^0,w,c
  6401  003400  6EDA               	movwf	fsr2h,c
  6402  003402  C026  FFDF         	movff	xtoa@x,indf2
  6403  003406                     
  6404                           ; BSR set to: 0
  6405                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 659:         --i;
  6406  003406  063F               	decf	xtoa@i^0,f,c
  6407  003408  A0D8               	btfss	status,0,c
  6408  00340A  0640               	decf	(xtoa@i+1)^0,f,c
  6409                           
  6410                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 660:         dbuf
      +                          [i] = '0';
  6411  00340C  0E98               	movlw	low _dbuf
  6412  00340E  243F               	addwf	xtoa@i^0,w,c
  6413  003410  6ED9               	movwf	fsr2l,c
  6414  003412  0E00               	movlw	high _dbuf
  6415  003414  2040               	addwfc	(xtoa@i+1)^0,w,c
  6416  003416  6EDA               	movwf	fsr2h,c
  6417  003418  0E30               	movlw	48
  6418  00341A  6EDF               	movwf	indf2,c
  6419  00341C                     l4084:
  6420  00341C  FFFF               	dw	65535	; assembler added errata NOP
  6421                           
  6422                           ; BSR set to: 0
  6423                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 664:     return p
      +                          ad(fp, &dbuf[i], w);
  6424  00341E  C01C  F011         	movff	xtoa@fp,pad@fp
  6425  003422  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  6426  003426  0E98               	movlw	low _dbuf
  6427  003428  243F               	addwf	xtoa@i^0,w,c
  6428  00342A  6E13               	movwf	pad@buf^0,c
  6429  00342C  0E00               	movlw	high _dbuf
  6430  00342E  2040               	addwfc	(xtoa@i+1)^0,w,c
  6431  003430  6E14               	movwf	(pad@buf+1)^0,c
  6432  003432  C035  F015         	movff	xtoa@w,pad@p
  6433  003436  C036  F016         	movff	xtoa@w+1,pad@p+1
  6434  00343A  ECBB  F039         	call	_pad	;wreg free
  6435  00343E  C011  F01C         	movff	?_pad,?_xtoa
  6436  003442  C012  F01D         	movff	?_pad+1,?_xtoa+1
  6437  003446  0012               	return		;funcret
  6438  003448  FFFF               	dw	65535	; errata NOP
  6439  00344A                     __end_of_xtoa:
  6440                           	callstack 0
  6441                           
  6442 ;; *************** function _toupper *****************
  6443 ;; Defined at:
  6444 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\toupper.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;  c               2    6[COMRAM] int 
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;		None
  6449 ;; Return value:  Size  Location     Type
  6450 ;;                  2    6[COMRAM] int 
  6451 ;; Registers used:
  6452 ;;		wreg, status,2, status,0
  6453 ;; Tracked objects:
  6454 ;;		On entry : 0/0
  6455 ;;		On exit  : 0/0
  6456 ;;		Unchanged: 0/0
  6457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6458 ;;      Params:         2       0       0       0       0       0       0
  6459 ;;      Locals:         2       0       0       0       0       0       0
  6460 ;;      Temps:          4       0       0       0       0       0       0
  6461 ;;      Totals:         8       0       0       0       0       0       0
  6462 ;;Total ram usage:        8 bytes
  6463 ;; Hardware stack levels used:    1
  6464 ;; Hardware stack levels required when called:    2
  6465 ;; This function calls:
  6466 ;;		_islower
  6467 ;; This function is called by:
  6468 ;;		_xtoa
  6469 ;; This function uses a non-reentrant model
  6470 ;;
  6471                           
  6472                           	psect	text10
  6473  006B42                     __ptext10:
  6474                           	callstack 0
  6475  006B42                     _toupper:
  6476                           	callstack 0
  6477  006B42  FFFF               	dw	65535	; assembler added errata NOP
  6478  006B44  0E9F               	movlw	159
  6479  006B46  6E09               	movwf	??_toupper^0,c
  6480  006B48  0EFF               	movlw	255
  6481  006B4A  6E0A               	movwf	(??_toupper+1)^0,c
  6482  006B4C  C007  F00B         	movff	toupper@c,??_toupper+2
  6483  006B50  C008  F00C         	movff	toupper@c+1,??_toupper+3
  6484  006B54  5009               	movf	??_toupper^0,w,c
  6485  006B56  260B               	addwf	(??_toupper+2)^0,f,c
  6486  006B58  500A               	movf	(??_toupper+1)^0,w,c
  6487  006B5A  220C               	addwfc	(??_toupper+3)^0,f,c
  6488  006B5C  500C               	movf	(??_toupper+3)^0,w,c
  6489  006B5E  E10B               	bnz	u3990
  6490  006B60  0E1A               	movlw	26
  6491  006B62  5C0B               	subwf	(??_toupper+2)^0,w,c
  6492  006B64  A0D8               	btfss	status,0,c
  6493  006B66  EFB7  F035         	goto	u3991
  6494  006B6A  EFBB  F035         	goto	u3990
  6495  006B6E                     u3991:
  6496  006B6E  FFFF               	dw	65535	; assembler added errata NOP
  6497  006B70  0E01               	movlw	1
  6498  006B72  EFBD  F035         	goto	u4000
  6499  006B76                     u3990:
  6500  006B76  FFFF               	dw	65535	; assembler added errata NOP
  6501  006B78  0E00               	movlw	0
  6502  006B7A                     u4000:
  6503  006B7A  FFFF               	dw	65535	; assembler added errata NOP
  6504  006B7C  6E0D               	movwf	_toupper$1894^0,c
  6505  006B7E  6A0E               	clrf	(_toupper$1894+1)^0,c
  6506  006B80  500D               	movf	_toupper$1894^0,w,c
  6507  006B82  100E               	iorwf	(_toupper$1894+1)^0,w,c
  6508  006B84  B4D8               	btfsc	status,2,c
  6509  006B86  EFC7  F035         	goto	u4011
  6510  006B8A  EFCA  F035         	goto	u4010
  6511  006B8E                     u4011:
  6512  006B8E  FFFF               	dw	65535	; assembler added errata NOP
  6513  006B90  EFD1  F035         	goto	l1448
  6514  006B94                     u4010:
  6515  006B94  FFFF               	dw	65535	; assembler added errata NOP
  6516  006B96  0E5F               	movlw	95
  6517  006B98  1407               	andwf	toupper@c^0,w,c
  6518  006B9A  6E07               	movwf	?_toupper^0,c
  6519  006B9C  6A08               	clrf	(?_toupper+1)^0,c
  6520  006B9E  EFD6  F035         	goto	l1453
  6521  006BA2                     l1448:
  6522  006BA2  FFFF               	dw	65535	; assembler added errata NOP
  6523  006BA4  C007  F007         	movff	toupper@c,?_toupper
  6524  006BA8  C008  F008         	movff	toupper@c+1,?_toupper+1
  6525  006BAC                     l1453:
  6526  006BAC  FFFF               	dw	65535	; assembler added errata NOP
  6527  006BAE  0012               	return		;funcret
  6528  006BB0  FFFF               	dw	65535	; errata NOP
  6529  006BB2                     __end_of_toupper:
  6530                           	callstack 0
  6531                           
  6532 ;; *************** function _islower *****************
  6533 ;; Defined at:
  6534 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\islower.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;  c               2    0[COMRAM] int 
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;		None
  6539 ;; Return value:  Size  Location     Type
  6540 ;;                  2    0[COMRAM] int 
  6541 ;; Registers used:
  6542 ;;		wreg, status,2, status,0
  6543 ;; Tracked objects:
  6544 ;;		On entry : 0/0
  6545 ;;		On exit  : 0/0
  6546 ;;		Unchanged: 0/0
  6547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6548 ;;      Params:         2       0       0       0       0       0       0
  6549 ;;      Locals:         0       0       0       0       0       0       0
  6550 ;;      Temps:          4       0       0       0       0       0       0
  6551 ;;      Totals:         6       0       0       0       0       0       0
  6552 ;;Total ram usage:        6 bytes
  6553 ;; Hardware stack levels used:    1
  6554 ;; Hardware stack levels required when called:    1
  6555 ;; This function calls:
  6556 ;;		Nothing
  6557 ;; This function is called by:
  6558 ;;		_toupper
  6559 ;; This function uses a non-reentrant model
  6560 ;;
  6561                           
  6562                           	psect	text11
  6563  00684C                     __ptext11:
  6564                           	callstack 0
  6565  00684C                     _islower:
  6566                           	callstack 23
  6567  00684C  FFFF               	dw	65535	; assembler added errata NOP
  6568  00684E  0E9F               	movlw	159
  6569  006850  6E03               	movwf	??_islower^0,c
  6570  006852  0EFF               	movlw	255
  6571  006854  6E04               	movwf	(??_islower+1)^0,c
  6572  006856  C001  F005         	movff	islower@c,??_islower+2
  6573  00685A  C002  F006         	movff	islower@c+1,??_islower+3
  6574  00685E  5003               	movf	??_islower^0,w,c
  6575  006860  2605               	addwf	(??_islower+2)^0,f,c
  6576  006862  5004               	movf	(??_islower+1)^0,w,c
  6577  006864  2206               	addwfc	(??_islower+3)^0,f,c
  6578  006866  5006               	movf	(??_islower+3)^0,w,c
  6579  006868  E10B               	bnz	u3680
  6580  00686A  0E1A               	movlw	26
  6581  00686C  5C05               	subwf	(??_islower+2)^0,w,c
  6582  00686E  A0D8               	btfss	status,0,c
  6583  006870  EF3C  F034         	goto	u3681
  6584  006874  EF40  F034         	goto	u3680
  6585  006878                     u3681:
  6586  006878  FFFF               	dw	65535	; assembler added errata NOP
  6587  00687A  0E01               	movlw	1
  6588  00687C  EF42  F034         	goto	u3690
  6589  006880                     u3680:
  6590  006880  FFFF               	dw	65535	; assembler added errata NOP
  6591  006882  0E00               	movlw	0
  6592  006884                     u3690:
  6593  006884  FFFF               	dw	65535	; assembler added errata NOP
  6594  006886  6E01               	movwf	?_islower^0,c
  6595  006888  6A02               	clrf	(?_islower+1)^0,c
  6596  00688A  0012               	return		;funcret
  6597  00688C  FFFF               	dw	65535	; errata NOP
  6598  00688E                     __end_of_islower:
  6599                           	callstack 0
  6600                           
  6601 ;; *************** function _isupper *****************
  6602 ;; Defined at:
  6603 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  6604 ;; Parameters:    Size  Location     Type
  6605 ;;  c               2    0[COMRAM] int 
  6606 ;; Auto vars:     Size  Location     Type
  6607 ;;		None
  6608 ;; Return value:  Size  Location     Type
  6609 ;;                  2    0[COMRAM] int 
  6610 ;; Registers used:
  6611 ;;		wreg, status,2, status,0
  6612 ;; Tracked objects:
  6613 ;;		On entry : 0/0
  6614 ;;		On exit  : 0/0
  6615 ;;		Unchanged: 0/0
  6616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6617 ;;      Params:         2       0       0       0       0       0       0
  6618 ;;      Locals:         0       0       0       0       0       0       0
  6619 ;;      Temps:          4       0       0       0       0       0       0
  6620 ;;      Totals:         6       0       0       0       0       0       0
  6621 ;;Total ram usage:        6 bytes
  6622 ;; Hardware stack levels used:    1
  6623 ;; Hardware stack levels required when called:    1
  6624 ;; This function calls:
  6625 ;;		Nothing
  6626 ;; This function is called by:
  6627 ;;		_xtoa
  6628 ;; This function uses a non-reentrant model
  6629 ;;
  6630                           
  6631                           	psect	text12
  6632  00680A                     __ptext12:
  6633                           	callstack 0
  6634  00680A                     _isupper:
  6635                           	callstack 24
  6636  00680A  FFFF               	dw	65535	; assembler added errata NOP
  6637  00680C  0EBF               	movlw	191
  6638  00680E  6E03               	movwf	??_isupper^0,c
  6639  006810  0EFF               	movlw	255
  6640  006812  6E04               	movwf	(??_isupper+1)^0,c
  6641  006814  C001  F005         	movff	isupper@c,??_isupper+2
  6642  006818  C002  F006         	movff	isupper@c+1,??_isupper+3
  6643  00681C  5003               	movf	??_isupper^0,w,c
  6644  00681E  2605               	addwf	(??_isupper+2)^0,f,c
  6645  006820  5004               	movf	(??_isupper+1)^0,w,c
  6646  006822  2206               	addwfc	(??_isupper+3)^0,f,c
  6647  006824  5006               	movf	(??_isupper+3)^0,w,c
  6648  006826  E10B               	bnz	u3950
  6649  006828  0E1A               	movlw	26
  6650  00682A  5C05               	subwf	(??_isupper+2)^0,w,c
  6651  00682C  A0D8               	btfss	status,0,c
  6652  00682E  EF1B  F034         	goto	u3951
  6653  006832  EF1F  F034         	goto	u3950
  6654  006836                     u3951:
  6655  006836  FFFF               	dw	65535	; assembler added errata NOP
  6656  006838  0E01               	movlw	1
  6657  00683A  EF21  F034         	goto	u3960
  6658  00683E                     u3950:
  6659  00683E  FFFF               	dw	65535	; assembler added errata NOP
  6660  006840  0E00               	movlw	0
  6661  006842                     u3960:
  6662  006842  FFFF               	dw	65535	; assembler added errata NOP
  6663  006844  6E01               	movwf	?_isupper^0,c
  6664  006846  6A02               	clrf	(?_isupper+1)^0,c
  6665  006848  0012               	return		;funcret
  6666  00684A  FFFF               	dw	65535	; errata NOP
  6667  00684C                     __end_of_isupper:
  6668                           	callstack 0
  6669                           
  6670 ;; *************** function _isalpha *****************
  6671 ;; Defined at:
  6672 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isalpha.c"
  6673 ;; Parameters:    Size  Location     Type
  6674 ;;  c               2    0[COMRAM] int 
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;		None
  6677 ;; Return value:  Size  Location     Type
  6678 ;;                  2    0[COMRAM] int 
  6679 ;; Registers used:
  6680 ;;		wreg, status,2, status,0
  6681 ;; Tracked objects:
  6682 ;;		On entry : 0/0
  6683 ;;		On exit  : 0/0
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6686 ;;      Params:         2       0       0       0       0       0       0
  6687 ;;      Locals:         0       0       0       0       0       0       0
  6688 ;;      Temps:          4       0       0       0       0       0       0
  6689 ;;      Totals:         6       0       0       0       0       0       0
  6690 ;;Total ram usage:        6 bytes
  6691 ;; Hardware stack levels used:    1
  6692 ;; Hardware stack levels required when called:    1
  6693 ;; This function calls:
  6694 ;;		Nothing
  6695 ;; This function is called by:
  6696 ;;		_xtoa
  6697 ;; This function uses a non-reentrant model
  6698 ;;
  6699                           
  6700                           	psect	text13
  6701  00688E                     __ptext13:
  6702                           	callstack 0
  6703  00688E                     _isalpha:
  6704                           	callstack 24
  6705  00688E  FFFF               	dw	65535	; assembler added errata NOP
  6706  006890  0E9F               	movlw	159
  6707  006892  6E03               	movwf	??_isalpha^0,c
  6708  006894  0EFF               	movlw	255
  6709  006896  6E04               	movwf	(??_isalpha+1)^0,c
  6710  006898  0E20               	movlw	32
  6711  00689A  1001               	iorwf	isalpha@c^0,w,c
  6712  00689C  6E05               	movwf	(??_isalpha+2)^0,c
  6713  00689E  0E00               	movlw	0
  6714  0068A0  1002               	iorwf	(isalpha@c+1)^0,w,c
  6715  0068A2  6E06               	movwf	(??_isalpha+3)^0,c
  6716  0068A4  5003               	movf	??_isalpha^0,w,c
  6717  0068A6  2605               	addwf	(??_isalpha+2)^0,f,c
  6718  0068A8  5004               	movf	(??_isalpha+1)^0,w,c
  6719  0068AA  2206               	addwfc	(??_isalpha+3)^0,f,c
  6720  0068AC  5006               	movf	(??_isalpha+3)^0,w,c
  6721  0068AE  E10B               	bnz	u3970
  6722  0068B0  0E1A               	movlw	26
  6723  0068B2  5C05               	subwf	(??_isalpha+2)^0,w,c
  6724  0068B4  A0D8               	btfss	status,0,c
  6725  0068B6  EF5F  F034         	goto	u3971
  6726  0068BA  EF63  F034         	goto	u3970
  6727  0068BE                     u3971:
  6728  0068BE  FFFF               	dw	65535	; assembler added errata NOP
  6729  0068C0  0E01               	movlw	1
  6730  0068C2  EF65  F034         	goto	u3980
  6731  0068C6                     u3970:
  6732  0068C6  FFFF               	dw	65535	; assembler added errata NOP
  6733  0068C8  0E00               	movlw	0
  6734  0068CA                     u3980:
  6735  0068CA  FFFF               	dw	65535	; assembler added errata NOP
  6736  0068CC  6E01               	movwf	?_isalpha^0,c
  6737  0068CE  6A02               	clrf	(?_isalpha+1)^0,c
  6738  0068D0  0012               	return		;funcret
  6739  0068D2  FFFF               	dw	65535	; errata NOP
  6740  0068D4                     __end_of_isalpha:
  6741                           	callstack 0
  6742                           
  6743 ;; *************** function _utoa *****************
  6744 ;; Defined at:
  6745 ;;		line 593 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6746 ;; Parameters:    Size  Location     Type
  6747 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6748 ;;		 -> vsnprintf@f(6), 
  6749 ;;  d               8   29[COMRAM] unsigned long long 
  6750 ;; Auto vars:     Size  Location     Type
  6751 ;;  n               8   49[COMRAM] unsigned long long 
  6752 ;;  i               2   57[COMRAM] int 
  6753 ;;  w               2   47[COMRAM] int 
  6754 ;;  p               2   45[COMRAM] int 
  6755 ;; Return value:  Size  Location     Type
  6756 ;;                  2   27[COMRAM] int 
  6757 ;; Registers used:
  6758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6759 ;; Tracked objects:
  6760 ;;		On entry : 0/0
  6761 ;;		On exit  : 0/0
  6762 ;;		Unchanged: 0/0
  6763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6764 ;;      Params:        10       0       0       0       0       0       0
  6765 ;;      Locals:        14       0       0       0       0       0       0
  6766 ;;      Temps:          8       0       0       0       0       0       0
  6767 ;;      Totals:        32       0       0       0       0       0       0
  6768 ;;Total ram usage:       32 bytes
  6769 ;; Hardware stack levels used:    1
  6770 ;; Hardware stack levels required when called:    5
  6771 ;; This function calls:
  6772 ;;		___lodiv
  6773 ;;		___lomod
  6774 ;;		_pad
  6775 ;; This function is called by:
  6776 ;;		_vfpfcnvrt
  6777 ;; This function uses a non-reentrant model
  6778 ;;
  6779                           
  6780                           	psect	text14
  6781  00344A                     __ptext14:
  6782                           	callstack 0
  6783  00344A                     _utoa:
  6784                           	callstack 0
  6785  00344A  FFFF               	dw	65535	; assembler added errata NOP
  6786  00344C                     
  6787                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 593: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 594: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 595:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common
      +                          \doprnt.c: 596:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sourc
      +                          es\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  6788  00344C  0100               	movlb	0	; () banked
  6789  00344E  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6790  003450  EF2C  F01A         	goto	u4421
  6791  003454  EF2F  F01A         	goto	u4420
  6792  003458                     u4421:
  6793  003458  FFFF               	dw	65535	; assembler added errata NOP
  6794  00345A  EF31  F01A         	goto	l3990
  6795  00345E                     u4420:
  6796  00345E  FFFF               	dw	65535	; assembler added errata NOP
  6797  003460                     
  6798                           ; BSR set to: 0
  6799                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 600:         flag
      +                          s &= ~(1 << 1);
  6800  003460  938A               	bcf	_flags& (0+255),1,b
  6801  003462                     l3990:
  6802  003462  FFFF               	dw	65535	; assembler added errata NOP
  6803                           
  6804                           ; BSR set to: 0
  6805                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 602:     p = (0 <
      +                           prec) ? prec : 1;
  6806  003464  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6807  003466  EF40  F01A         	goto	u4430
  6808  00346A  5189               	movf	(_prec+1)& (0+255),w,b
  6809  00346C  E106               	bnz	u4431
  6810  00346E  0588               	decf	_prec& (0+255),w,b
  6811  003470  B0D8               	btfsc	status,0,c
  6812  003472  EF3D  F01A         	goto	u4431
  6813  003476  EF40  F01A         	goto	u4430
  6814  00347A                     u4431:
  6815  00347A  FFFF               	dw	65535	; assembler added errata NOP
  6816  00347C  EF47  F01A         	goto	l1224
  6817  003480                     u4430:
  6818  003480  FFFF               	dw	65535	; assembler added errata NOP
  6819  003482                     
  6820                           ; BSR set to: 0
  6821  003482  0E00               	movlw	0
  6822  003484  6E2F               	movwf	(utoa@p+1)^0,c
  6823  003486  0E01               	movlw	1
  6824  003488  6E2E               	movwf	utoa@p^0,c
  6825  00348A  EF4C  F01A         	goto	l1226
  6826  00348E                     l1224:
  6827  00348E  FFFF               	dw	65535	; assembler added errata NOP
  6828                           
  6829                           ; BSR set to: 0
  6830  003490  C088  F02E         	movff	_prec,utoa@p
  6831  003494  C089  F02F         	movff	_prec+1,utoa@p+1
  6832  003498                     l1226:
  6833  003498  FFFF               	dw	65535	; assembler added errata NOP
  6834                           
  6835                           ; BSR set to: 0
  6836                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 603:     w = widt
      +                          h;
  6837  00349A  C086  F030         	movff	_width,utoa@w
  6838  00349E  C087  F031         	movff	_width+1,utoa@w+1
  6839                           
  6840                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 606:     n = d;
  6841  0034A2  C01E  F032         	movff	utoa@d,utoa@n
  6842  0034A6  C01F  F033         	movff	utoa@d+1,utoa@n+1
  6843  0034AA  C020  F034         	movff	utoa@d+2,utoa@n+2
  6844  0034AE  C021  F035         	movff	utoa@d+3,utoa@n+3
  6845  0034B2  C022  F036         	movff	utoa@d+4,utoa@n+4
  6846  0034B6  C023  F037         	movff	utoa@d+5,utoa@n+5
  6847  0034BA  C024  F038         	movff	utoa@d+6,utoa@n+6
  6848  0034BE  C025  F039         	movff	utoa@d+7,utoa@n+7
  6849  0034C2                     
  6850                           ; BSR set to: 0
  6851                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 607:     i = size
      +                          of(dbuf) - 1;
  6852  0034C2  0E00               	movlw	0
  6853  0034C4  6E3B               	movwf	(utoa@i+1)^0,c
  6854  0034C6  0E1F               	movlw	31
  6855  0034C8  6E3A               	movwf	utoa@i^0,c
  6856  0034CA                     
  6857                           ; BSR set to: 0
  6858                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 608:     dbuf[i] 
      +                          = '\0';
  6859  0034CA  0E00               	movlw	0
  6860  0034CC  6FB7               	movwf	(_dbuf+31)& (0+255),b
  6861                           
  6862                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6863  0034CE  EFE0  F01A         	goto	l4008
  6864  0034D2                     l3998:
  6865  0034D2  FFFF               	dw	65535	; assembler added errata NOP
  6866                           
  6867                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 610:         --i;
  6868  0034D4  063A               	decf	utoa@i^0,f,c
  6869  0034D6  A0D8               	btfss	status,0,c
  6870  0034D8  063B               	decf	(utoa@i+1)^0,f,c
  6871  0034DA                     
  6872                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 611:         dbuf
      +                          [i] = '0' + (n % 10);
  6873  0034DA  0E98               	movlw	low _dbuf
  6874  0034DC  243A               	addwf	utoa@i^0,w,c
  6875  0034DE  6ED9               	movwf	fsr2l,c
  6876  0034E0  0E00               	movlw	high _dbuf
  6877  0034E2  203B               	addwfc	(utoa@i+1)^0,w,c
  6878  0034E4  6EDA               	movwf	fsr2h,c
  6879  0034E6  C032  F001         	movff	utoa@n,___lomod@dividend
  6880  0034EA  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  6881  0034EE  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  6882  0034F2  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  6883  0034F6  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  6884  0034FA  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  6885  0034FE  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  6886  003502  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  6887  003506  0E0A               	movlw	10
  6888  003508  6E09               	movwf	___lomod@divisor^0,c
  6889  00350A  0E00               	movlw	0
  6890  00350C  6E0A               	movwf	(___lomod@divisor+1)^0,c
  6891  00350E  0E00               	movlw	0
  6892  003510  6E0B               	movwf	(___lomod@divisor+2)^0,c
  6893  003512  0E00               	movlw	0
  6894  003514  6E0C               	movwf	(___lomod@divisor+3)^0,c
  6895  003516  0E00               	movlw	0
  6896  003518  6E0D               	movwf	(___lomod@divisor+4)^0,c
  6897  00351A  0E00               	movlw	0
  6898  00351C  6E0E               	movwf	(___lomod@divisor+5)^0,c
  6899  00351E  0E00               	movlw	0
  6900  003520  6E0F               	movwf	(___lomod@divisor+6)^0,c
  6901  003522  0E00               	movlw	0
  6902  003524  6E10               	movwf	(___lomod@divisor+7)^0,c
  6903  003526  EC2E  F03A         	call	___lomod	;wreg free
  6904  00352A  C001  F026         	movff	?___lomod,??_utoa
  6905  00352E  C002  F027         	movff	?___lomod+1,??_utoa+1
  6906  003532  C003  F028         	movff	?___lomod+2,??_utoa+2
  6907  003536  C004  F029         	movff	?___lomod+3,??_utoa+3
  6908  00353A  C005  F02A         	movff	?___lomod+4,??_utoa+4
  6909  00353E  C006  F02B         	movff	?___lomod+5,??_utoa+5
  6910  003542  C007  F02C         	movff	?___lomod+6,??_utoa+6
  6911  003546  C008  F02D         	movff	?___lomod+7,??_utoa+7
  6912  00354A  5026               	movf	??_utoa^0,w,c
  6913  00354C  0F30               	addlw	48
  6914  00354E  6EDF               	movwf	indf2,c
  6915  003550                     
  6916                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 612:         --p;
  6917  003550  062E               	decf	utoa@p^0,f,c
  6918  003552  A0D8               	btfss	status,0,c
  6919  003554  062F               	decf	(utoa@p+1)^0,f,c
  6920  003556                     
  6921                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 613:         --w;
  6922  003556  0630               	decf	utoa@w^0,f,c
  6923  003558  A0D8               	btfss	status,0,c
  6924  00355A  0631               	decf	(utoa@w+1)^0,f,c
  6925  00355C                     
  6926                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 614:         n = 
      +                          n / 10;
  6927  00355C  C032  F001         	movff	utoa@n,___lodiv@dividend
  6928  003560  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  6929  003564  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  6930  003568  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  6931  00356C  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  6932  003570  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  6933  003574  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  6934  003578  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  6935  00357C  0E0A               	movlw	10
  6936  00357E  6E09               	movwf	___lodiv@divisor^0,c
  6937  003580  0E00               	movlw	0
  6938  003582  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  6939  003584  0E00               	movlw	0
  6940  003586  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  6941  003588  0E00               	movlw	0
  6942  00358A  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  6943  00358C  0E00               	movlw	0
  6944  00358E  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  6945  003590  0E00               	movlw	0
  6946  003592  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  6947  003594  0E00               	movlw	0
  6948  003596  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  6949  003598  0E00               	movlw	0
  6950  00359A  6E10               	movwf	(___lodiv@divisor+7)^0,c
  6951  00359C  EC9F  F03B         	call	___lodiv	;wreg free
  6952  0035A0  C001  F032         	movff	?___lodiv,utoa@n
  6953  0035A4  C002  F033         	movff	?___lodiv+1,utoa@n+1
  6954  0035A8  C003  F034         	movff	?___lodiv+2,utoa@n+2
  6955  0035AC  C004  F035         	movff	?___lodiv+3,utoa@n+3
  6956  0035B0  C005  F036         	movff	?___lodiv+4,utoa@n+4
  6957  0035B4  C006  F037         	movff	?___lodiv+5,utoa@n+5
  6958  0035B8  C007  F038         	movff	?___lodiv+6,utoa@n+6
  6959  0035BC  C008  F039         	movff	?___lodiv+7,utoa@n+7
  6960  0035C0                     l4008:
  6961  0035C0  FFFF               	dw	65535	; assembler added errata NOP
  6962                           
  6963                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6964  0035C2  503A               	movf	utoa@i^0,w,c
  6965  0035C4  103B               	iorwf	(utoa@i+1)^0,w,c
  6966  0035C6  B4D8               	btfsc	status,2,c
  6967  0035C8  EFE8  F01A         	goto	u4441
  6968  0035CC  EFEB  F01A         	goto	u4440
  6969  0035D0                     u4441:
  6970  0035D0  FFFF               	dw	65535	; assembler added errata NOP
  6971  0035D2  EF24  F01B         	goto	l4018
  6972  0035D6                     u4440:
  6973  0035D6  FFFF               	dw	65535	; assembler added errata NOP
  6974  0035D8  5032               	movf	utoa@n^0,w,c
  6975  0035DA  1033               	iorwf	(utoa@n+1)^0,w,c
  6976  0035DC  1034               	iorwf	(utoa@n+2)^0,w,c
  6977  0035DE  1035               	iorwf	(utoa@n+3)^0,w,c
  6978  0035E0  1036               	iorwf	(utoa@n+4)^0,w,c
  6979  0035E2  1037               	iorwf	(utoa@n+5)^0,w,c
  6980  0035E4  1038               	iorwf	(utoa@n+6)^0,w,c
  6981  0035E6  1039               	iorwf	(utoa@n+7)^0,w,c
  6982  0035E8  A4D8               	btfss	status,2,c
  6983  0035EA  EFF9  F01A         	goto	u4451
  6984  0035EE  EFFC  F01A         	goto	u4450
  6985  0035F2                     u4451:
  6986  0035F2  FFFF               	dw	65535	; assembler added errata NOP
  6987  0035F4  EF69  F01A         	goto	l3998
  6988  0035F8                     u4450:
  6989  0035F8  FFFF               	dw	65535	; assembler added errata NOP
  6990  0035FA  BE2F               	btfsc	(utoa@p+1)^0,7,c
  6991  0035FC  EF0B  F01B         	goto	u4460
  6992  003600  502F               	movf	(utoa@p+1)^0,w,c
  6993  003602  E106               	bnz	u4461
  6994  003604  042E               	decf	utoa@p^0,w,c
  6995  003606  B0D8               	btfsc	status,0,c
  6996  003608  EF08  F01B         	goto	u4461
  6997  00360C  EF0B  F01B         	goto	u4460
  6998  003610                     u4461:
  6999  003610  FFFF               	dw	65535	; assembler added errata NOP
  7000  003612  EF69  F01A         	goto	l3998
  7001  003616                     u4460:
  7002  003616  FFFF               	dw	65535	; assembler added errata NOP
  7003  003618  BE31               	btfsc	(utoa@w+1)^0,7,c
  7004  00361A  EF17  F01B         	goto	u4471
  7005  00361E  5031               	movf	(utoa@w+1)^0,w,c
  7006  003620  E109               	bnz	u4470
  7007  003622  0430               	decf	utoa@w^0,w,c
  7008  003624  A0D8               	btfss	status,0,c
  7009  003626  EF17  F01B         	goto	u4471
  7010  00362A  EF1A  F01B         	goto	u4470
  7011  00362E                     u4471:
  7012  00362E  FFFF               	dw	65535	; assembler added errata NOP
  7013  003630  EF24  F01B         	goto	l4018
  7014  003634                     u4470:
  7015  003634  FFFF               	dw	65535	; assembler added errata NOP
  7016  003636  0100               	movlb	0	; () banked
  7017  003638  B38A               	btfsc	_flags& (0+255),1,b
  7018  00363A  EF21  F01B         	goto	u4481
  7019  00363E  EF24  F01B         	goto	u4480
  7020  003642                     u4481:
  7021  003642  FFFF               	dw	65535	; assembler added errata NOP
  7022  003644  EF69  F01A         	goto	l3998
  7023  003648                     u4480:
  7024  003648                     l4018:
  7025  003648  FFFF               	dw	65535	; assembler added errata NOP
  7026                           
  7027                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 618:     return p
      +                          ad(fp, &dbuf[i], w);
  7028  00364A  C01C  F011         	movff	utoa@fp,pad@fp
  7029  00364E  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  7030  003652  0E98               	movlw	low _dbuf
  7031  003654  243A               	addwf	utoa@i^0,w,c
  7032  003656  6E13               	movwf	pad@buf^0,c
  7033  003658  0E00               	movlw	high _dbuf
  7034  00365A  203B               	addwfc	(utoa@i+1)^0,w,c
  7035  00365C  6E14               	movwf	(pad@buf+1)^0,c
  7036  00365E  C030  F015         	movff	utoa@w,pad@p
  7037  003662  C031  F016         	movff	utoa@w+1,pad@p+1
  7038  003666  ECBB  F039         	call	_pad	;wreg free
  7039  00366A  C011  F01C         	movff	?_pad,?_utoa
  7040  00366E  C012  F01D         	movff	?_pad+1,?_utoa+1
  7041  003672  0012               	return		;funcret
  7042  003674  FFFF               	dw	65535	; errata NOP
  7043  003676                     __end_of_utoa:
  7044                           	callstack 0
  7045                           
  7046 ;; *************** function ___lomod *****************
  7047 ;; Defined at:
  7048 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lomod.c"
  7049 ;; Parameters:    Size  Location     Type
  7050 ;;  dividend        8    0[COMRAM] unsigned long long 
  7051 ;;  divisor         8    8[COMRAM] unsigned long long 
  7052 ;; Auto vars:     Size  Location     Type
  7053 ;;  counter         1   16[COMRAM] unsigned char 
  7054 ;; Return value:  Size  Location     Type
  7055 ;;                  8    0[COMRAM] unsigned long long 
  7056 ;; Registers used:
  7057 ;;		wreg, status,2, status,0
  7058 ;; Tracked objects:
  7059 ;;		On entry : 0/0
  7060 ;;		On exit  : 0/0
  7061 ;;		Unchanged: 0/0
  7062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7063 ;;      Params:        16       0       0       0       0       0       0
  7064 ;;      Locals:         1       0       0       0       0       0       0
  7065 ;;      Temps:          0       0       0       0       0       0       0
  7066 ;;      Totals:        17       0       0       0       0       0       0
  7067 ;;Total ram usage:       17 bytes
  7068 ;; Hardware stack levels used:    1
  7069 ;; Hardware stack levels required when called:    1
  7070 ;; This function calls:
  7071 ;;		Nothing
  7072 ;; This function is called by:
  7073 ;;		_utoa
  7074 ;; This function uses a non-reentrant model
  7075 ;;
  7076                           
  7077                           	psect	text15
  7078  00745C                     __ptext15:
  7079                           	callstack 0
  7080  00745C                     ___lomod:
  7081                           	callstack 0
  7082  00745C  FFFF               	dw	65535	; assembler added errata NOP
  7083  00745E  5009               	movf	___lomod@divisor^0,w,c
  7084  007460  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  7085  007462  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  7086  007464  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  7087  007466  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  7088  007468  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  7089  00746A  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  7090  00746C  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  7091  00746E  B4D8               	btfsc	status,2,c
  7092  007470  EF3C  F03A         	goto	u3881
  7093  007474  EF3F  F03A         	goto	u3880
  7094  007478                     u3881:
  7095  007478  FFFF               	dw	65535	; assembler added errata NOP
  7096  00747A  EF90  F03A         	goto	l836
  7097  00747E                     u3880:
  7098  00747E  FFFF               	dw	65535	; assembler added errata NOP
  7099  007480  0E01               	movlw	1
  7100  007482  6E11               	movwf	___lomod@counter^0,c
  7101  007484  EF4F  F03A         	goto	l3754
  7102  007488                     l3752:
  7103  007488  FFFF               	dw	65535	; assembler added errata NOP
  7104  00748A  90D8               	bcf	status,0,c
  7105  00748C  3609               	rlcf	___lomod@divisor^0,f,c
  7106  00748E  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  7107  007490  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  7108  007492  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  7109  007494  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  7110  007496  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  7111  007498  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  7112  00749A  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  7113  00749C  2A11               	incf	___lomod@counter^0,f,c
  7114  00749E                     l3754:
  7115  00749E  FFFF               	dw	65535	; assembler added errata NOP
  7116  0074A0  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  7117  0074A2  EF55  F03A         	goto	u3891
  7118  0074A6  EF58  F03A         	goto	u3890
  7119  0074AA                     u3891:
  7120  0074AA  FFFF               	dw	65535	; assembler added errata NOP
  7121  0074AC  EF44  F03A         	goto	l3752
  7122  0074B0                     u3890:
  7123  0074B0  FFFF               	dw	65535	; assembler added errata NOP
  7124  0074B2                     l3756:
  7125  0074B2  FFFF               	dw	65535	; assembler added errata NOP
  7126  0074B4  5009               	movf	___lomod@divisor^0,w,c
  7127  0074B6  5C01               	subwf	___lomod@dividend^0,w,c
  7128  0074B8  500A               	movf	(___lomod@divisor+1)^0,w,c
  7129  0074BA  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  7130  0074BC  500B               	movf	(___lomod@divisor+2)^0,w,c
  7131  0074BE  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  7132  0074C0  500C               	movf	(___lomod@divisor+3)^0,w,c
  7133  0074C2  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  7134  0074C4  500D               	movf	(___lomod@divisor+4)^0,w,c
  7135  0074C6  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  7136  0074C8  500E               	movf	(___lomod@divisor+5)^0,w,c
  7137  0074CA  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  7138  0074CC  500F               	movf	(___lomod@divisor+6)^0,w,c
  7139  0074CE  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  7140  0074D0  5010               	movf	(___lomod@divisor+7)^0,w,c
  7141  0074D2  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  7142  0074D4  A0D8               	btfss	status,0,c
  7143  0074D6  EF6F  F03A         	goto	u3901
  7144  0074DA  EF72  F03A         	goto	u3900
  7145  0074DE                     u3901:
  7146  0074DE  FFFF               	dw	65535	; assembler added errata NOP
  7147  0074E0  EF83  F03A         	goto	l3760
  7148  0074E4                     u3900:
  7149  0074E4  FFFF               	dw	65535	; assembler added errata NOP
  7150  0074E6  5009               	movf	___lomod@divisor^0,w,c
  7151  0074E8  5E01               	subwf	___lomod@dividend^0,f,c
  7152  0074EA  500A               	movf	(___lomod@divisor+1)^0,w,c
  7153  0074EC  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  7154  0074EE  500B               	movf	(___lomod@divisor+2)^0,w,c
  7155  0074F0  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  7156  0074F2  500C               	movf	(___lomod@divisor+3)^0,w,c
  7157  0074F4  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  7158  0074F6  500D               	movf	(___lomod@divisor+4)^0,w,c
  7159  0074F8  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  7160  0074FA  500E               	movf	(___lomod@divisor+5)^0,w,c
  7161  0074FC  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  7162  0074FE  500F               	movf	(___lomod@divisor+6)^0,w,c
  7163  007500  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  7164  007502  5010               	movf	(___lomod@divisor+7)^0,w,c
  7165  007504  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  7166  007506                     l3760:
  7167  007506  FFFF               	dw	65535	; assembler added errata NOP
  7168  007508  90D8               	bcf	status,0,c
  7169  00750A  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  7170  00750C  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  7171  00750E  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  7172  007510  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  7173  007512  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  7174  007514  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  7175  007516  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  7176  007518  3209               	rrcf	___lomod@divisor^0,f,c
  7177  00751A  2E11               	decfsz	___lomod@counter^0,f,c
  7178  00751C  EF59  F03A         	goto	l3756
  7179  007520                     l836:
  7180  007520  FFFF               	dw	65535	; assembler added errata NOP
  7181  007522  C001  F001         	movff	___lomod@dividend,?___lomod
  7182  007526  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  7183  00752A  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  7184  00752E  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  7185  007532  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  7186  007536  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  7187  00753A  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  7188  00753E  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  7189  007542  0012               	return		;funcret
  7190  007544  FFFF               	dw	65535	; errata NOP
  7191  007546                     __end_of___lomod:
  7192                           	callstack 0
  7193                           
  7194 ;; *************** function ___lodiv *****************
  7195 ;; Defined at:
  7196 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lodiv.c"
  7197 ;; Parameters:    Size  Location     Type
  7198 ;;  dividend        8    0[COMRAM] unsigned long long 
  7199 ;;  divisor         8    8[COMRAM] unsigned long long 
  7200 ;; Auto vars:     Size  Location     Type
  7201 ;;  quotient        8   16[COMRAM] unsigned long long 
  7202 ;;  counter         1   24[COMRAM] unsigned char 
  7203 ;; Return value:  Size  Location     Type
  7204 ;;                  8    0[COMRAM] unsigned long long 
  7205 ;; Registers used:
  7206 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7207 ;; Tracked objects:
  7208 ;;		On entry : 0/0
  7209 ;;		On exit  : 0/0
  7210 ;;		Unchanged: 0/0
  7211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7212 ;;      Params:        16       0       0       0       0       0       0
  7213 ;;      Locals:         9       0       0       0       0       0       0
  7214 ;;      Temps:          0       0       0       0       0       0       0
  7215 ;;      Totals:        25       0       0       0       0       0       0
  7216 ;;Total ram usage:       25 bytes
  7217 ;; Hardware stack levels used:    1
  7218 ;; Hardware stack levels required when called:    1
  7219 ;; This function calls:
  7220 ;;		Nothing
  7221 ;; This function is called by:
  7222 ;;		_utoa
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226                           	psect	text16
  7227  00773E                     __ptext16:
  7228                           	callstack 0
  7229  00773E                     ___lodiv:
  7230                           	callstack 0
  7231  00773E  FFFF               	dw	65535	; assembler added errata NOP
  7232  007740  EE20  F011         	lfsr	2,___lodiv@quotient
  7233  007744  0E07               	movlw	7
  7234  007746                     u3841:
  7235  007746  6ADE               	clrf	postinc2,c
  7236  007748  06E8               	decf	wreg,f,c
  7237  00774A  E2FD               	bc	u3841
  7238  00774C  5009               	movf	___lodiv@divisor^0,w,c
  7239  00774E  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  7240  007750  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  7241  007752  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  7242  007754  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  7243  007756  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  7244  007758  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  7245  00775A  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  7246  00775C  B4D8               	btfsc	status,2,c
  7247  00775E  EFB3  F03B         	goto	u3851
  7248  007762  EFB6  F03B         	goto	u3850
  7249  007766                     u3851:
  7250  007766  FFFF               	dw	65535	; assembler added errata NOP
  7251  007768  EF11  F03C         	goto	l826
  7252  00776C                     u3850:
  7253  00776C  FFFF               	dw	65535	; assembler added errata NOP
  7254  00776E  0E01               	movlw	1
  7255  007770  6E19               	movwf	___lodiv@counter^0,c
  7256  007772  EFC6  F03B         	goto	l3734
  7257  007776                     l3732:
  7258  007776  FFFF               	dw	65535	; assembler added errata NOP
  7259  007778  90D8               	bcf	status,0,c
  7260  00777A  3609               	rlcf	___lodiv@divisor^0,f,c
  7261  00777C  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  7262  00777E  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  7263  007780  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  7264  007782  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  7265  007784  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  7266  007786  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  7267  007788  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  7268  00778A  2A19               	incf	___lodiv@counter^0,f,c
  7269  00778C                     l3734:
  7270  00778C  FFFF               	dw	65535	; assembler added errata NOP
  7271  00778E  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  7272  007790  EFCC  F03B         	goto	u3861
  7273  007794  EFCF  F03B         	goto	u3860
  7274  007798                     u3861:
  7275  007798  FFFF               	dw	65535	; assembler added errata NOP
  7276  00779A  EFBB  F03B         	goto	l3732
  7277  00779E                     u3860:
  7278  00779E  FFFF               	dw	65535	; assembler added errata NOP
  7279  0077A0                     l3736:
  7280  0077A0  FFFF               	dw	65535	; assembler added errata NOP
  7281  0077A2  90D8               	bcf	status,0,c
  7282  0077A4  3611               	rlcf	___lodiv@quotient^0,f,c
  7283  0077A6  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  7284  0077A8  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  7285  0077AA  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  7286  0077AC  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  7287  0077AE  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  7288  0077B0  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  7289  0077B2  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  7290  0077B4  5009               	movf	___lodiv@divisor^0,w,c
  7291  0077B6  5C01               	subwf	___lodiv@dividend^0,w,c
  7292  0077B8  500A               	movf	(___lodiv@divisor+1)^0,w,c
  7293  0077BA  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  7294  0077BC  500B               	movf	(___lodiv@divisor+2)^0,w,c
  7295  0077BE  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  7296  0077C0  500C               	movf	(___lodiv@divisor+3)^0,w,c
  7297  0077C2  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  7298  0077C4  500D               	movf	(___lodiv@divisor+4)^0,w,c
  7299  0077C6  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  7300  0077C8  500E               	movf	(___lodiv@divisor+5)^0,w,c
  7301  0077CA  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  7302  0077CC  500F               	movf	(___lodiv@divisor+6)^0,w,c
  7303  0077CE  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  7304  0077D0  5010               	movf	(___lodiv@divisor+7)^0,w,c
  7305  0077D2  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  7306  0077D4  A0D8               	btfss	status,0,c
  7307  0077D6  EFEF  F03B         	goto	u3871
  7308  0077DA  EFF2  F03B         	goto	u3870
  7309  0077DE                     u3871:
  7310  0077DE  FFFF               	dw	65535	; assembler added errata NOP
  7311  0077E0  EF04  F03C         	goto	l3744
  7312  0077E4                     u3870:
  7313  0077E4  FFFF               	dw	65535	; assembler added errata NOP
  7314  0077E6  5009               	movf	___lodiv@divisor^0,w,c
  7315  0077E8  5E01               	subwf	___lodiv@dividend^0,f,c
  7316  0077EA  500A               	movf	(___lodiv@divisor+1)^0,w,c
  7317  0077EC  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  7318  0077EE  500B               	movf	(___lodiv@divisor+2)^0,w,c
  7319  0077F0  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  7320  0077F2  500C               	movf	(___lodiv@divisor+3)^0,w,c
  7321  0077F4  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  7322  0077F6  500D               	movf	(___lodiv@divisor+4)^0,w,c
  7323  0077F8  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  7324  0077FA  500E               	movf	(___lodiv@divisor+5)^0,w,c
  7325  0077FC  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  7326  0077FE  500F               	movf	(___lodiv@divisor+6)^0,w,c
  7327  007800  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  7328  007802  5010               	movf	(___lodiv@divisor+7)^0,w,c
  7329  007804  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  7330  007806  8011               	bsf	___lodiv@quotient^0,0,c
  7331  007808                     l3744:
  7332  007808  FFFF               	dw	65535	; assembler added errata NOP
  7333  00780A  90D8               	bcf	status,0,c
  7334  00780C  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  7335  00780E  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  7336  007810  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  7337  007812  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  7338  007814  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  7339  007816  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  7340  007818  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  7341  00781A  3209               	rrcf	___lodiv@divisor^0,f,c
  7342  00781C  2E19               	decfsz	___lodiv@counter^0,f,c
  7343  00781E  EFD0  F03B         	goto	l3736
  7344  007822                     l826:
  7345  007822  FFFF               	dw	65535	; assembler added errata NOP
  7346  007824  C011  F001         	movff	___lodiv@quotient,?___lodiv
  7347  007828  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  7348  00782C  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  7349  007830  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  7350  007834  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  7351  007838  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  7352  00783C  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  7353  007840  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  7354  007844  0012               	return		;funcret
  7355  007846  FFFF               	dw	65535	; errata NOP
  7356  007848                     __end_of___lodiv:
  7357                           	callstack 0
  7358                           
  7359 ;; *************** function _strncmp *****************
  7360 ;; Defined at:
  7361 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  7362 ;; Parameters:    Size  Location     Type
  7363 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  7364 ;;		 -> STR_10(3), 
  7365 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  7366 ;;		 -> STR_107(3), STR_103(3), STR_98(3), STR_94(3), 
  7367 ;;		 -> STR_89(4), STR_85(4), STR_80(3), STR_75(3), 
  7368 ;;		 -> STR_70(4), STR_65(3), STR_60(3), STR_55(4), 
  7369 ;;		 -> STR_50(3), STR_45(3), STR_40(4), STR_35(3), 
  7370 ;;		 -> STR_31(3), STR_26(3), STR_22(3), STR_17(4), 
  7371 ;;		 -> STR_13(4), 
  7372 ;;  n               2    4[COMRAM] unsigned int 
  7373 ;; Auto vars:     Size  Location     Type
  7374 ;;  r               2    9[COMRAM] PTR const unsigned char 
  7375 ;;		 -> STR_107(3), STR_103(3), STR_98(3), STR_94(3), 
  7376 ;;		 -> STR_89(4), STR_85(4), STR_80(3), STR_75(3), 
  7377 ;;		 -> STR_70(4), STR_65(3), STR_60(3), STR_55(4), 
  7378 ;;		 -> STR_50(3), STR_45(3), STR_40(4), STR_35(3), 
  7379 ;;		 -> STR_31(3), STR_26(3), STR_22(3), STR_17(4), 
  7380 ;;		 -> STR_13(4), 
  7381 ;;  l               2    7[COMRAM] PTR const unsigned char 
  7382 ;;		 -> STR_10(3), 
  7383 ;; Return value:  Size  Location     Type
  7384 ;;                  2    0[COMRAM] int 
  7385 ;; Registers used:
  7386 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7387 ;; Tracked objects:
  7388 ;;		On entry : 0/0
  7389 ;;		On exit  : 0/0
  7390 ;;		Unchanged: 0/0
  7391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7392 ;;      Params:         6       0       0       0       0       0       0
  7393 ;;      Locals:         4       0       0       0       0       0       0
  7394 ;;      Temps:          1       0       0       0       0       0       0
  7395 ;;      Totals:        11       0       0       0       0       0       0
  7396 ;;Total ram usage:       11 bytes
  7397 ;; Hardware stack levels used:    1
  7398 ;; Hardware stack levels required when called:    1
  7399 ;; This function calls:
  7400 ;;		Nothing
  7401 ;; This function is called by:
  7402 ;;		_vfpfcnvrt
  7403 ;; This function uses a non-reentrant model
  7404 ;;
  7405                           
  7406                           	psect	text17
  7407  007636                     __ptext17:
  7408                           	callstack 0
  7409  007636                     _strncmp:
  7410                           	callstack 0
  7411  007636  FFFF               	dw	65535	; assembler added errata NOP
  7412  007638  C001  F008         	movff	strncmp@_l,strncmp@l
  7413  00763C  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  7414  007640  C003  F00A         	movff	strncmp@_r,strncmp@r
  7415  007644  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  7416  007648  0605               	decf	strncmp@n^0,f,c
  7417  00764A  A0D8               	btfss	status,0,c
  7418  00764C  0606               	decf	(strncmp@n+1)^0,f,c
  7419  00764E  2805               	incf	strncmp@n^0,w,c
  7420  007650  E106               	bnz	u4731
  7421  007652  2806               	incf	(strncmp@n+1)^0,w,c
  7422  007654  A4D8               	btfss	status,2,c
  7423  007656  EF2F  F03B         	goto	u4731
  7424  00765A  EF32  F03B         	goto	u4730
  7425  00765E                     u4731:
  7426  00765E  FFFF               	dw	65535	; assembler added errata NOP
  7427  007660  EF41  F03B         	goto	l4138
  7428  007664                     u4730:
  7429  007664  FFFF               	dw	65535	; assembler added errata NOP
  7430  007666  0E00               	movlw	0
  7431  007668  6E02               	movwf	(?_strncmp+1)^0,c
  7432  00766A  0E00               	movlw	0
  7433  00766C  6E01               	movwf	?_strncmp^0,c
  7434  00766E  EF9C  F03B         	goto	l1438
  7435  007672                     l4136:
  7436  007672  FFFF               	dw	65535	; assembler added errata NOP
  7437  007674  4A08               	infsnz	strncmp@l^0,f,c
  7438  007676  2A09               	incf	(strncmp@l+1)^0,f,c
  7439  007678  4A0A               	infsnz	strncmp@r^0,f,c
  7440  00767A  2A0B               	incf	(strncmp@r+1)^0,f,c
  7441  00767C  0605               	decf	strncmp@n^0,f,c
  7442  00767E  A0D8               	btfss	status,0,c
  7443  007680  0606               	decf	(strncmp@n+1)^0,f,c
  7444  007682                     l4138:
  7445  007682  FFFF               	dw	65535	; assembler added errata NOP
  7446  007684  C008  FFF6         	movff	strncmp@l,tblptrl
  7447  007688  C009  FFF7         	movff	strncmp@l+1,tblptrh
  7448  00768C                     	if	0	;tblptru may be non-zero
  7449  00768C                     	endif
  7450  00768C                     	if	0	;tblptru may be non-zero
  7451  00768C                     	endif
  7452  00768C  0008               	tblrd		*
  7453  00768E  FFFF               	dw	65535	; errata NOP
  7454  007690  50F5               	movf	tablat,w,c
  7455  007692  0900               	iorlw	0
  7456  007694  B4D8               	btfsc	status,2,c
  7457  007696  EF4F  F03B         	goto	u4741
  7458  00769A  EF52  F03B         	goto	u4740
  7459  00769E                     u4741:
  7460  00769E  FFFF               	dw	65535	; assembler added errata NOP
  7461  0076A0  EF87  F03B         	goto	l4146
  7462  0076A4                     u4740:
  7463  0076A4  FFFF               	dw	65535	; assembler added errata NOP
  7464  0076A6  C00A  FFF6         	movff	strncmp@r,tblptrl
  7465  0076AA  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7466  0076AE                     	if	0	;tblptru may be non-zero
  7467  0076AE                     	endif
  7468  0076AE                     	if	0	;tblptru may be non-zero
  7469  0076AE                     	endif
  7470  0076AE  0008               	tblrd		*
  7471  0076B0  FFFF               	dw	65535	; errata NOP
  7472  0076B2  50F5               	movf	tablat,w,c
  7473  0076B4  0900               	iorlw	0
  7474  0076B6  B4D8               	btfsc	status,2,c
  7475  0076B8  EF60  F03B         	goto	u4751
  7476  0076BC  EF63  F03B         	goto	u4750
  7477  0076C0                     u4751:
  7478  0076C0  FFFF               	dw	65535	; assembler added errata NOP
  7479  0076C2  EF87  F03B         	goto	l4146
  7480  0076C6                     u4750:
  7481  0076C6  FFFF               	dw	65535	; assembler added errata NOP
  7482  0076C8  5005               	movf	strncmp@n^0,w,c
  7483  0076CA  1006               	iorwf	(strncmp@n+1)^0,w,c
  7484  0076CC  B4D8               	btfsc	status,2,c
  7485  0076CE  EF6B  F03B         	goto	u4761
  7486  0076D2  EF6E  F03B         	goto	u4760
  7487  0076D6                     u4761:
  7488  0076D6  FFFF               	dw	65535	; assembler added errata NOP
  7489  0076D8  EF87  F03B         	goto	l4146
  7490  0076DC                     u4760:
  7491  0076DC  FFFF               	dw	65535	; assembler added errata NOP
  7492  0076DE  C008  FFF6         	movff	strncmp@l,tblptrl
  7493  0076E2  C009  FFF7         	movff	strncmp@l+1,tblptrh
  7494  0076E6                     	if	0	;tblptru may be non-zero
  7495  0076E6                     	endif
  7496  0076E6                     	if	0	;tblptru may be non-zero
  7497  0076E6                     	endif
  7498  0076E6  0008               	tblrd		*
  7499  0076E8  FFFF               	dw	65535	; errata NOP
  7500  0076EA  CFF5 F007          	movff	tablat,??_strncmp
  7501  0076EE  C00A  FFF6         	movff	strncmp@r,tblptrl
  7502  0076F2  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7503  0076F6                     	if	0	;tblptru may be non-zero
  7504  0076F6                     	endif
  7505  0076F6                     	if	0	;tblptru may be non-zero
  7506  0076F6                     	endif
  7507  0076F6  0008               	tblrd		*
  7508  0076F8  FFFF               	dw	65535	; errata NOP
  7509  0076FA  50F5               	movf	tablat,w,c
  7510  0076FC  1807               	xorwf	??_strncmp^0,w,c
  7511  0076FE  B4D8               	btfsc	status,2,c
  7512  007700  EF84  F03B         	goto	u4771
  7513  007704  EF87  F03B         	goto	u4770
  7514  007708                     u4771:
  7515  007708  FFFF               	dw	65535	; assembler added errata NOP
  7516  00770A  EF39  F03B         	goto	l4136
  7517  00770E                     u4770:
  7518  00770E                     l4146:
  7519  00770E  FFFF               	dw	65535	; assembler added errata NOP
  7520  007710  C008  FFF6         	movff	strncmp@l,tblptrl
  7521  007714  C009  FFF7         	movff	strncmp@l+1,tblptrh
  7522  007718                     	if	0	;tblptru may be non-zero
  7523  007718                     	endif
  7524  007718                     	if	0	;tblptru may be non-zero
  7525  007718                     	endif
  7526  007718  0008               	tblrd		*
  7527  00771A  FFFF               	dw	65535	; errata NOP
  7528  00771C  CFF5 F007          	movff	tablat,??_strncmp
  7529  007720  C00A  FFF6         	movff	strncmp@r,tblptrl
  7530  007724  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7531  007728                     	if	0	;tblptru may be non-zero
  7532  007728                     	endif
  7533  007728                     	if	0	;tblptru may be non-zero
  7534  007728                     	endif
  7535  007728  0008               	tblrd		*
  7536  00772A  FFFF               	dw	65535	; errata NOP
  7537  00772C  50F5               	movf	tablat,w,c
  7538  00772E  5C07               	subwf	??_strncmp^0,w,c
  7539  007730  6E01               	movwf	?_strncmp^0,c
  7540  007732  6A02               	clrf	(?_strncmp+1)^0,c
  7541  007734  A0D8               	btfss	status,0,c
  7542  007736  0602               	decf	(?_strncmp+1)^0,f,c
  7543  007738                     l1438:
  7544  007738  FFFF               	dw	65535	; assembler added errata NOP
  7545  00773A  0012               	return		;funcret
  7546  00773C  FFFF               	dw	65535	; errata NOP
  7547  00773E                     __end_of_strncmp:
  7548                           	callstack 0
  7549                           
  7550 ;; *************** function _stoa *****************
  7551 ;; Defined at:
  7552 ;;		line 546 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7553 ;; Parameters:    Size  Location     Type
  7554 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  7555 ;;		 -> vsnprintf@f(6), 
  7556 ;;  s               2   11[COMRAM] PTR unsigned char 
  7557 ;;		 -> ?_snprintf(2), STR_8(50), STR_7(9), STR_6(7), 
  7558 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  7559 ;;		 -> STR_1(49), 
  7560 ;; Auto vars:     Size  Location     Type
  7561 ;;  nuls            7   14[COMRAM] unsigned char [7]
  7562 ;;  l               2   29[COMRAM] int 
  7563 ;;  p               2   27[COMRAM] int 
  7564 ;;  cp              2   25[COMRAM] PTR unsigned char 
  7565 ;;		 -> stoa@nuls(7), ?_snprintf(2), STR_8(50), STR_7(9), 
  7566 ;;		 -> STR_6(7), STR_5(9), STR_4(39), STR_3(9), 
  7567 ;;		 -> STR_2(64), STR_1(49), 
  7568 ;;  w               2   23[COMRAM] int 
  7569 ;;  i               2   21[COMRAM] int 
  7570 ;; Return value:  Size  Location     Type
  7571 ;;                  2    9[COMRAM] int 
  7572 ;; Registers used:
  7573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7574 ;; Tracked objects:
  7575 ;;		On entry : 0/0
  7576 ;;		On exit  : 0/0
  7577 ;;		Unchanged: 0/0
  7578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7579 ;;      Params:         4       0       0       0       0       0       0
  7580 ;;      Locals:        17       0       0       0       0       0       0
  7581 ;;      Temps:          1       0       0       0       0       0       0
  7582 ;;      Totals:        22       0       0       0       0       0       0
  7583 ;;Total ram usage:       22 bytes
  7584 ;; Hardware stack levels used:    1
  7585 ;; Hardware stack levels required when called:    3
  7586 ;; This function calls:
  7587 ;;		_fputc
  7588 ;;		_strlen
  7589 ;; This function is called by:
  7590 ;;		_vfpfcnvrt
  7591 ;; This function uses a non-reentrant model
  7592 ;;
  7593                           
  7594                           	psect	text18
  7595  003A94                     __ptext18:
  7596                           	callstack 0
  7597  003A94                     _stoa:
  7598                           	callstack 0
  7599  003A94  FFFF               	dw	65535	; assembler added errata NOP
  7600  003A96                     
  7601                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 546: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 547: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 548:  
      +                             char *cp, nuls[] = "(null)";
  7602  003A96  EE20  F0DE         	lfsr	2,stoa@F1152
  7603  003A9A  EE10  F00F         	lfsr	1,stoa@nuls
  7604  003A9E  0E06               	movlw	6
  7605  003AA0                     u4321:
  7606  003AA0  CFDB FFE3          	movff	plusw2,plusw1
  7607  003AA4  06E8               	decf	wreg,f,c
  7608  003AA6  E2FC               	bc	u4321
  7609  003AA8                     
  7610                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 549:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 552:     c
      +                          p = s;
  7611  003AA8  C00C  F01A         	movff	stoa@s,stoa@cp
  7612  003AAC  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  7613  003AB0                     
  7614                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 553:     if (!cp)
      +                           {
  7615  003AB0  501A               	movf	stoa@cp^0,w,c
  7616  003AB2  101B               	iorwf	(stoa@cp+1)^0,w,c
  7617  003AB4  A4D8               	btfss	status,2,c
  7618  003AB6  EF5F  F01D         	goto	u4331
  7619  003ABA  EF62  F01D         	goto	u4330
  7620  003ABE                     u4331:
  7621  003ABE  FFFF               	dw	65535	; assembler added errata NOP
  7622  003AC0  EF67  F01D         	goto	l3952
  7623  003AC4                     u4330:
  7624  003AC4  FFFF               	dw	65535	; assembler added errata NOP
  7625  003AC6                     
  7626                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 554:         cp =
      +                           nuls;
  7627  003AC6  0E0F               	movlw	low stoa@nuls
  7628  003AC8  6E1A               	movwf	stoa@cp^0,c
  7629  003ACA  0E00               	movlw	high stoa@nuls
  7630  003ACC  6E1B               	movwf	(stoa@cp+1)^0,c
  7631  003ACE                     l3952:
  7632  003ACE  FFFF               	dw	65535	; assembler added errata NOP
  7633                           
  7634                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 558:     l = strl
      +                          en(cp);
  7635  003AD0  C01A  F001         	movff	stoa@cp,strlen@s
  7636  003AD4  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  7637  003AD8  ECDD  F034         	call	_strlen	;wreg free
  7638  003ADC  C001  F01E         	movff	?_strlen,stoa@l
  7639  003AE0  C002  F01F         	movff	?_strlen+1,stoa@l+1
  7640  003AE4                     
  7641                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 559:     p = prec
      +                          ;
  7642  003AE4  C088  F01C         	movff	_prec,stoa@p
  7643  003AE8  C089  F01D         	movff	_prec+1,stoa@p+1
  7644  003AEC                     
  7645                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 560:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  7646  003AEC  BE1D               	btfsc	(stoa@p+1)^0,7,c
  7647  003AEE  EF7B  F01D         	goto	u4341
  7648  003AF2  EF7E  F01D         	goto	u4340
  7649  003AF6                     u4341:
  7650  003AF6  FFFF               	dw	65535	; assembler added errata NOP
  7651  003AF8  EF97  F01D         	goto	l1205
  7652  003AFC                     u4340:
  7653  003AFC  FFFF               	dw	65535	; assembler added errata NOP
  7654  003AFE  501E               	movf	stoa@l^0,w,c
  7655  003B00  5C1C               	subwf	stoa@p^0,w,c
  7656  003B02  501D               	movf	(stoa@p+1)^0,w,c
  7657  003B04  0A80               	xorlw	128
  7658  003B06  6E0E               	movwf	??_stoa^0,c
  7659  003B08  501F               	movf	(stoa@l+1)^0,w,c
  7660  003B0A  0A80               	xorlw	128
  7661  003B0C  580E               	subwfb	??_stoa^0,w,c
  7662  003B0E  A0D8               	btfss	status,0,c
  7663  003B10  EF8C  F01D         	goto	u4351
  7664  003B14  EF8F  F01D         	goto	u4350
  7665  003B18                     u4351:
  7666  003B18  FFFF               	dw	65535	; assembler added errata NOP
  7667  003B1A  EF92  F01D         	goto	l1203
  7668  003B1E                     u4350:
  7669  003B1E  FFFF               	dw	65535	; assembler added errata NOP
  7670  003B20  EF97  F01D         	goto	l1205
  7671  003B24                     l1203:
  7672  003B24  FFFF               	dw	65535	; assembler added errata NOP
  7673  003B26  C01C  F01E         	movff	stoa@p,stoa@l
  7674  003B2A  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  7675  003B2E                     l1205:
  7676  003B2E  FFFF               	dw	65535	; assembler added errata NOP
  7677                           
  7678                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 561:     p = l;
  7679  003B30  C01E  F01C         	movff	stoa@l,stoa@p
  7680  003B34  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  7681                           
  7682                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 562:     w = widt
      +                          h;
  7683  003B38  C086  F018         	movff	_width,stoa@w
  7684  003B3C  C087  F019         	movff	_width+1,stoa@w+1
  7685                           
  7686                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 565:     if (!(fl
      +                          ags & (1 << 0))) {
  7687  003B40  0100               	movlb	0	; () banked
  7688  003B42  B18A               	btfsc	_flags& (0+255),0,b
  7689  003B44  EFA6  F01D         	goto	u4361
  7690  003B48  EFA9  F01D         	goto	u4360
  7691  003B4C                     u4361:
  7692  003B4C  FFFF               	dw	65535	; assembler added errata NOP
  7693  003B4E  EFCA  F01D         	goto	l3968
  7694  003B52                     u4360:
  7695  003B52  FFFF               	dw	65535	; assembler added errata NOP
  7696  003B54  EFB9  F01D         	goto	l3966
  7697  003B58                     l3962:
  7698  003B58  FFFF               	dw	65535	; assembler added errata NOP
  7699                           
  7700                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 567:             
      +                          fputc(' ', fp);
  7701  003B5A  0E00               	movlw	0
  7702  003B5C  6E02               	movwf	(fputc@c+1)^0,c
  7703  003B5E  0E20               	movlw	32
  7704  003B60  6E01               	movwf	fputc@c^0,c
  7705  003B62  C00A  F003         	movff	stoa@fp,fputc@fp
  7706  003B66  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7707  003B6A  EC4A  F039         	call	_fputc	;wreg free
  7708  003B6E                     
  7709                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 568:             
      +                          ++l;
  7710  003B6E  4A1E               	infsnz	stoa@l^0,f,c
  7711  003B70  2A1F               	incf	(stoa@l+1)^0,f,c
  7712  003B72                     l3966:
  7713  003B72  FFFF               	dw	65535	; assembler added errata NOP
  7714                           
  7715                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 566:         whil
      +                          e (l < w) {
  7716  003B74  5018               	movf	stoa@w^0,w,c
  7717  003B76  5C1E               	subwf	stoa@l^0,w,c
  7718  003B78  501F               	movf	(stoa@l+1)^0,w,c
  7719  003B7A  0A80               	xorlw	128
  7720  003B7C  6E0E               	movwf	??_stoa^0,c
  7721  003B7E  5019               	movf	(stoa@w+1)^0,w,c
  7722  003B80  0A80               	xorlw	128
  7723  003B82  580E               	subwfb	??_stoa^0,w,c
  7724  003B84  A0D8               	btfss	status,0,c
  7725  003B86  EFC7  F01D         	goto	u4371
  7726  003B8A  EFCA  F01D         	goto	u4370
  7727  003B8E                     u4371:
  7728  003B8E  FFFF               	dw	65535	; assembler added errata NOP
  7729  003B90  EFAC  F01D         	goto	l3962
  7730  003B94                     u4370:
  7731  003B94                     l3968:
  7732  003B94  FFFF               	dw	65535	; assembler added errata NOP
  7733                           
  7734                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 573:     i = 0;
  7735  003B96  0E00               	movlw	0
  7736  003B98  6E17               	movwf	(stoa@i+1)^0,c
  7737  003B9A  0E00               	movlw	0
  7738  003B9C  6E16               	movwf	stoa@i^0,c
  7739                           
  7740                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  7741  003B9E  EFF1  F01D         	goto	l3976
  7742  003BA2                     l3970:
  7743  003BA2  FFFF               	dw	65535	; assembler added errata NOP
  7744                           
  7745                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 575:         fput
      +                          c(*cp, fp);
  7746  003BA4  C01A  FFF6         	movff	stoa@cp,tblptrl
  7747  003BA8  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  7748  003BAC  6AF8               	clrf	tblptru,c
  7749  003BAE  0E05               	movlw	(high __ramtop+-1)
  7750  003BB0  64F7               	cpfsgt	tblptrh,c
  7751  003BB2  D004               	bra	u4387
  7752  003BB4  0008               	tblrd		*
  7753  003BB6  FFFF               	dw	65535	; errata NOP
  7754  003BB8  50F5               	movf	tablat,w,c
  7755  003BBA  D005               	bra	u4380
  7756  003BBC                     u4387:
  7757  003BBC  CFF6 FFE1          	movff	tblptrl,fsr1l
  7758  003BC0  CFF7 FFE2          	movff	tblptrh,fsr1h
  7759  003BC4  50E7               	movf	indf1,w,c
  7760  003BC6                     u4380:
  7761  003BC6  6E0E               	movwf	??_stoa^0,c
  7762  003BC8  500E               	movf	??_stoa^0,w,c
  7763  003BCA  6E01               	movwf	fputc@c^0,c
  7764  003BCC  6A02               	clrf	(fputc@c+1)^0,c
  7765  003BCE  C00A  F003         	movff	stoa@fp,fputc@fp
  7766  003BD2  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7767  003BD6  EC4A  F039         	call	_fputc	;wreg free
  7768  003BDA                     
  7769                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 576:         ++cp
      +                          ;
  7770  003BDA  4A1A               	infsnz	stoa@cp^0,f,c
  7771  003BDC  2A1B               	incf	(stoa@cp+1)^0,f,c
  7772  003BDE                     
  7773                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 577:         ++i;
  7774  003BDE  4A16               	infsnz	stoa@i^0,f,c
  7775  003BE0  2A17               	incf	(stoa@i+1)^0,f,c
  7776  003BE2                     l3976:
  7777  003BE2  FFFF               	dw	65535	; assembler added errata NOP
  7778                           
  7779                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  7780  003BE4  501C               	movf	stoa@p^0,w,c
  7781  003BE6  5C16               	subwf	stoa@i^0,w,c
  7782  003BE8  5017               	movf	(stoa@i+1)^0,w,c
  7783  003BEA  0A80               	xorlw	128
  7784  003BEC  6E0E               	movwf	??_stoa^0,c
  7785  003BEE  501D               	movf	(stoa@p+1)^0,w,c
  7786  003BF0  0A80               	xorlw	128
  7787  003BF2  580E               	subwfb	??_stoa^0,w,c
  7788  003BF4  A0D8               	btfss	status,0,c
  7789  003BF6  EFFF  F01D         	goto	u4391
  7790  003BFA  EF02  F01E         	goto	u4390
  7791  003BFE                     u4391:
  7792  003BFE  FFFF               	dw	65535	; assembler added errata NOP
  7793  003C00  EFD1  F01D         	goto	l3970
  7794  003C04                     u4390:
  7795  003C04  FFFF               	dw	65535	; assembler added errata NOP
  7796  003C06                     
  7797                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 581:     if (flag
      +                          s & (1 << 0)) {
  7798  003C06  0100               	movlb	0	; () banked
  7799  003C08  A18A               	btfss	_flags& (0+255),0,b
  7800  003C0A  EF09  F01E         	goto	u4401
  7801  003C0E  EF0C  F01E         	goto	u4400
  7802  003C12                     u4401:
  7803  003C12  FFFF               	dw	65535	; assembler added errata NOP
  7804  003C14  EF2D  F01E         	goto	l1215
  7805  003C18                     u4400:
  7806  003C18  FFFF               	dw	65535	; assembler added errata NOP
  7807  003C1A  EF1C  F01E         	goto	l3984
  7808  003C1E                     l3980:
  7809  003C1E  FFFF               	dw	65535	; assembler added errata NOP
  7810                           
  7811                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 583:             
      +                          fputc(' ', fp);
  7812  003C20  0E00               	movlw	0
  7813  003C22  6E02               	movwf	(fputc@c+1)^0,c
  7814  003C24  0E20               	movlw	32
  7815  003C26  6E01               	movwf	fputc@c^0,c
  7816  003C28  C00A  F003         	movff	stoa@fp,fputc@fp
  7817  003C2C  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7818  003C30  EC4A  F039         	call	_fputc	;wreg free
  7819  003C34                     
  7820                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 584:             
      +                          ++l;
  7821  003C34  4A1E               	infsnz	stoa@l^0,f,c
  7822  003C36  2A1F               	incf	(stoa@l+1)^0,f,c
  7823  003C38                     l3984:
  7824  003C38  FFFF               	dw	65535	; assembler added errata NOP
  7825                           
  7826                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 582:         whil
      +                          e (l < w) {
  7827  003C3A  5018               	movf	stoa@w^0,w,c
  7828  003C3C  5C1E               	subwf	stoa@l^0,w,c
  7829  003C3E  501F               	movf	(stoa@l+1)^0,w,c
  7830  003C40  0A80               	xorlw	128
  7831  003C42  6E0E               	movwf	??_stoa^0,c
  7832  003C44  5019               	movf	(stoa@w+1)^0,w,c
  7833  003C46  0A80               	xorlw	128
  7834  003C48  580E               	subwfb	??_stoa^0,w,c
  7835  003C4A  A0D8               	btfss	status,0,c
  7836  003C4C  EF2A  F01E         	goto	u4411
  7837  003C50  EF2D  F01E         	goto	u4410
  7838  003C54                     u4411:
  7839  003C54  FFFF               	dw	65535	; assembler added errata NOP
  7840  003C56  EF0F  F01E         	goto	l3980
  7841  003C5A                     u4410:
  7842  003C5A                     l1215:
  7843  003C5A  FFFF               	dw	65535	; assembler added errata NOP
  7844                           
  7845                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 588:     return l
      +                          ;
  7846  003C5C  C01E  F00A         	movff	stoa@l,?_stoa
  7847  003C60  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  7848  003C64  0012               	return		;funcret
  7849  003C66  FFFF               	dw	65535	; errata NOP
  7850  003C68                     __end_of_stoa:
  7851                           	callstack 0
  7852                           
  7853 ;; *************** function _otoa *****************
  7854 ;; Defined at:
  7855 ;;		line 507 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7856 ;; Parameters:    Size  Location     Type
  7857 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7858 ;;		 -> vsnprintf@f(6), 
  7859 ;;  d               8   29[COMRAM] unsigned long long 
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;  n               8   51[COMRAM] unsigned long long 
  7862 ;;  i               2   59[COMRAM] int 
  7863 ;;  w               2   49[COMRAM] int 
  7864 ;;  t               2   47[COMRAM] int 
  7865 ;;  p               2   45[COMRAM] int 
  7866 ;; Return value:  Size  Location     Type
  7867 ;;                  2   27[COMRAM] int 
  7868 ;; Registers used:
  7869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7870 ;; Tracked objects:
  7871 ;;		On entry : 0/0
  7872 ;;		On exit  : 0/0
  7873 ;;		Unchanged: 0/0
  7874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7875 ;;      Params:        10       0       0       0       0       0       0
  7876 ;;      Locals:        16       0       0       0       0       0       0
  7877 ;;      Temps:          8       0       0       0       0       0       0
  7878 ;;      Totals:        34       0       0       0       0       0       0
  7879 ;;Total ram usage:       34 bytes
  7880 ;; Hardware stack levels used:    1
  7881 ;; Hardware stack levels required when called:    5
  7882 ;; This function calls:
  7883 ;;		_pad
  7884 ;; This function is called by:
  7885 ;;		_vfpfcnvrt
  7886 ;; This function uses a non-reentrant model
  7887 ;;
  7888                           
  7889                           	psect	text19
  7890  003676                     __ptext19:
  7891                           	callstack 0
  7892  003676                     _otoa:
  7893                           	callstack 0
  7894  003676  FFFF               	dw	65535	; assembler added errata NOP
  7895  003678                     
  7896                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 507: static int o
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 508: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 509:     int i, p, t, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\com
      +                          mon\doprnt.c: 510:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\so
      +                          urces\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  7897  003678  0100               	movlb	0	; () banked
  7898  00367A  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7899  00367C  EF42  F01B         	goto	u4221
  7900  003680  EF45  F01B         	goto	u4220
  7901  003684                     u4221:
  7902  003684  FFFF               	dw	65535	; assembler added errata NOP
  7903  003686  EF47  F01B         	goto	l3900
  7904  00368A                     u4220:
  7905  00368A  FFFF               	dw	65535	; assembler added errata NOP
  7906  00368C                     
  7907                           ; BSR set to: 0
  7908                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 514:         flag
      +                          s &= ~(1 << 1);
  7909  00368C  938A               	bcf	_flags& (0+255),1,b
  7910  00368E                     l3900:
  7911  00368E  FFFF               	dw	65535	; assembler added errata NOP
  7912                           
  7913                           ; BSR set to: 0
  7914                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 516:     p = (0 <
      +                           prec) ? prec : 1;
  7915  003690  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7916  003692  EF56  F01B         	goto	u4230
  7917  003696  5189               	movf	(_prec+1)& (0+255),w,b
  7918  003698  E106               	bnz	u4231
  7919  00369A  0588               	decf	_prec& (0+255),w,b
  7920  00369C  B0D8               	btfsc	status,0,c
  7921  00369E  EF53  F01B         	goto	u4231
  7922  0036A2  EF56  F01B         	goto	u4230
  7923  0036A6                     u4231:
  7924  0036A6  FFFF               	dw	65535	; assembler added errata NOP
  7925  0036A8  EF5D  F01B         	goto	l1185
  7926  0036AC                     u4230:
  7927  0036AC  FFFF               	dw	65535	; assembler added errata NOP
  7928  0036AE                     
  7929                           ; BSR set to: 0
  7930  0036AE  0E00               	movlw	0
  7931  0036B0  6E2F               	movwf	(otoa@p+1)^0,c
  7932  0036B2  0E01               	movlw	1
  7933  0036B4  6E2E               	movwf	otoa@p^0,c
  7934  0036B6  EF62  F01B         	goto	l1187
  7935  0036BA                     l1185:
  7936  0036BA  FFFF               	dw	65535	; assembler added errata NOP
  7937                           
  7938                           ; BSR set to: 0
  7939  0036BC  C088  F02E         	movff	_prec,otoa@p
  7940  0036C0  C089  F02F         	movff	_prec+1,otoa@p+1
  7941  0036C4                     l1187:
  7942  0036C4  FFFF               	dw	65535	; assembler added errata NOP
  7943                           
  7944                           ; BSR set to: 0
  7945                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 517:     w = widt
      +                          h;
  7946  0036C6  C086  F032         	movff	_width,otoa@w
  7947  0036CA  C087  F033         	movff	_width+1,otoa@w+1
  7948                           
  7949                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 520:     n = d;
  7950  0036CE  C01E  F034         	movff	otoa@d,otoa@n
  7951  0036D2  C01F  F035         	movff	otoa@d+1,otoa@n+1
  7952  0036D6  C020  F036         	movff	otoa@d+2,otoa@n+2
  7953  0036DA  C021  F037         	movff	otoa@d+3,otoa@n+3
  7954  0036DE  C022  F038         	movff	otoa@d+4,otoa@n+4
  7955  0036E2  C023  F039         	movff	otoa@d+5,otoa@n+5
  7956  0036E6  C024  F03A         	movff	otoa@d+6,otoa@n+6
  7957  0036EA  C025  F03B         	movff	otoa@d+7,otoa@n+7
  7958  0036EE                     
  7959                           ; BSR set to: 0
  7960                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 521:     i = size
      +                          of(dbuf) - 1;
  7961  0036EE  0E00               	movlw	0
  7962  0036F0  6E3D               	movwf	(otoa@i+1)^0,c
  7963  0036F2  0E1F               	movlw	31
  7964  0036F4  6E3C               	movwf	otoa@i^0,c
  7965  0036F6                     
  7966                           ; BSR set to: 0
  7967                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 522:     dbuf[i] 
      +                          = '\0';
  7968  0036F6  0E00               	movlw	0
  7969  0036F8  6FB7               	movwf	(_dbuf+31)& (0+255),b
  7970  0036FA                     
  7971                           ; BSR set to: 0
  7972                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 523:     t = 0;
  7973  0036FA  0E00               	movlw	0
  7974  0036FC  6E31               	movwf	(otoa@t+1)^0,c
  7975  0036FE  0E00               	movlw	0
  7976  003700  6E30               	movwf	otoa@t^0,c
  7977                           
  7978                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 524:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7979  003702  EFCB  F01B         	goto	l3922
  7980  003706                     l3910:
  7981  003706  FFFF               	dw	65535	; assembler added errata NOP
  7982                           
  7983                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 525:         --i;
  7984  003708  063C               	decf	otoa@i^0,f,c
  7985  00370A  A0D8               	btfss	status,0,c
  7986  00370C  063D               	decf	(otoa@i+1)^0,f,c
  7987  00370E                     
  7988                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 526:         t = 
      +                          n & 07;
  7989  00370E  0E07               	movlw	7
  7990  003710  1434               	andwf	otoa@n^0,w,c
  7991  003712  6E30               	movwf	otoa@t^0,c
  7992  003714  6A31               	clrf	(otoa@t+1)^0,c
  7993  003716                     
  7994                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 527:         dbuf
      +                          [i] = '0' + t;
  7995  003716  0E98               	movlw	low _dbuf
  7996  003718  243C               	addwf	otoa@i^0,w,c
  7997  00371A  6ED9               	movwf	fsr2l,c
  7998  00371C  0E00               	movlw	high _dbuf
  7999  00371E  203D               	addwfc	(otoa@i+1)^0,w,c
  8000  003720  6EDA               	movwf	fsr2h,c
  8001  003722  5030               	movf	otoa@t^0,w,c
  8002  003724  0F30               	addlw	48
  8003  003726  6EDF               	movwf	indf2,c
  8004  003728                     
  8005                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 528:         --p;
  8006  003728  062E               	decf	otoa@p^0,f,c
  8007  00372A  A0D8               	btfss	status,0,c
  8008  00372C  062F               	decf	(otoa@p+1)^0,f,c
  8009  00372E                     
  8010                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 529:         --w;
  8011  00372E  0632               	decf	otoa@w^0,f,c
  8012  003730  A0D8               	btfss	status,0,c
  8013  003732  0633               	decf	(otoa@w+1)^0,f,c
  8014  003734                     
  8015                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 530:         n = 
      +                          n >> 3;
  8016  003734  C034  F026         	movff	otoa@n,??_otoa
  8017  003738  C035  F027         	movff	otoa@n+1,??_otoa+1
  8018  00373C  C036  F028         	movff	otoa@n+2,??_otoa+2
  8019  003740  C037  F029         	movff	otoa@n+3,??_otoa+3
  8020  003744  C038  F02A         	movff	otoa@n+4,??_otoa+4
  8021  003748  C039  F02B         	movff	otoa@n+5,??_otoa+5
  8022  00374C  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  8023  003750  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  8024  003754  0E04               	movlw	4
  8025  003756  EFB7  F01B         	goto	u4240
  8026  00375A                     u4245:
  8027  00375A  FFFF               	dw	65535	; assembler added errata NOP
  8028  00375C  90D8               	bcf	status,0,c
  8029  00375E  322D               	rrcf	(??_otoa+7)^0,f,c
  8030  003760  322C               	rrcf	(??_otoa+6)^0,f,c
  8031  003762  322B               	rrcf	(??_otoa+5)^0,f,c
  8032  003764  322A               	rrcf	(??_otoa+4)^0,f,c
  8033  003766  3229               	rrcf	(??_otoa+3)^0,f,c
  8034  003768  3228               	rrcf	(??_otoa+2)^0,f,c
  8035  00376A  3227               	rrcf	(??_otoa+1)^0,f,c
  8036  00376C  3226               	rrcf	??_otoa^0,f,c
  8037  00376E                     u4240:
  8038  00376E  FFFF               	dw	65535	; assembler added errata NOP
  8039  003770  2EE8               	decfsz	wreg,f,c
  8040  003772  EFAD  F01B         	goto	u4245
  8041  003776  C026  F034         	movff	??_otoa,otoa@n
  8042  00377A  C027  F035         	movff	??_otoa+1,otoa@n+1
  8043  00377E  C028  F036         	movff	??_otoa+2,otoa@n+2
  8044  003782  C029  F037         	movff	??_otoa+3,otoa@n+3
  8045  003786  C02A  F038         	movff	??_otoa+4,otoa@n+4
  8046  00378A  C02B  F039         	movff	??_otoa+5,otoa@n+5
  8047  00378E  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  8048  003792  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  8049  003796                     l3922:
  8050  003796  FFFF               	dw	65535	; assembler added errata NOP
  8051                           
  8052                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 524:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8053  003798  BE3D               	btfsc	(otoa@i+1)^0,7,c
  8054  00379A  EFD7  F01B         	goto	u4251
  8055  00379E  503D               	movf	(otoa@i+1)^0,w,c
  8056  0037A0  E109               	bnz	u4250
  8057  0037A2  043C               	decf	otoa@i^0,w,c
  8058  0037A4  A0D8               	btfss	status,0,c
  8059  0037A6  EFD7  F01B         	goto	u4251
  8060  0037AA  EFDA  F01B         	goto	u4250
  8061  0037AE                     u4251:
  8062  0037AE  FFFF               	dw	65535	; assembler added errata NOP
  8063  0037B0  EF13  F01C         	goto	l1194
  8064  0037B4                     u4250:
  8065  0037B4  FFFF               	dw	65535	; assembler added errata NOP
  8066  0037B6  5034               	movf	otoa@n^0,w,c
  8067  0037B8  1035               	iorwf	(otoa@n+1)^0,w,c
  8068  0037BA  1036               	iorwf	(otoa@n+2)^0,w,c
  8069  0037BC  1037               	iorwf	(otoa@n+3)^0,w,c
  8070  0037BE  1038               	iorwf	(otoa@n+4)^0,w,c
  8071  0037C0  1039               	iorwf	(otoa@n+5)^0,w,c
  8072  0037C2  103A               	iorwf	(otoa@n+6)^0,w,c
  8073  0037C4  103B               	iorwf	(otoa@n+7)^0,w,c
  8074  0037C6  A4D8               	btfss	status,2,c
  8075  0037C8  EFE8  F01B         	goto	u4261
  8076  0037CC  EFEB  F01B         	goto	u4260
  8077  0037D0                     u4261:
  8078  0037D0  FFFF               	dw	65535	; assembler added errata NOP
  8079  0037D2  EF83  F01B         	goto	l3910
  8080  0037D6                     u4260:
  8081  0037D6  FFFF               	dw	65535	; assembler added errata NOP
  8082  0037D8  BE2F               	btfsc	(otoa@p+1)^0,7,c
  8083  0037DA  EFFA  F01B         	goto	u4270
  8084  0037DE  502F               	movf	(otoa@p+1)^0,w,c
  8085  0037E0  E106               	bnz	u4271
  8086  0037E2  042E               	decf	otoa@p^0,w,c
  8087  0037E4  B0D8               	btfsc	status,0,c
  8088  0037E6  EFF7  F01B         	goto	u4271
  8089  0037EA  EFFA  F01B         	goto	u4270
  8090  0037EE                     u4271:
  8091  0037EE  FFFF               	dw	65535	; assembler added errata NOP
  8092  0037F0  EF83  F01B         	goto	l3910
  8093  0037F4                     u4270:
  8094  0037F4  FFFF               	dw	65535	; assembler added errata NOP
  8095  0037F6  BE33               	btfsc	(otoa@w+1)^0,7,c
  8096  0037F8  EF06  F01C         	goto	u4281
  8097  0037FC  5033               	movf	(otoa@w+1)^0,w,c
  8098  0037FE  E109               	bnz	u4280
  8099  003800  0432               	decf	otoa@w^0,w,c
  8100  003802  A0D8               	btfss	status,0,c
  8101  003804  EF06  F01C         	goto	u4281
  8102  003808  EF09  F01C         	goto	u4280
  8103  00380C                     u4281:
  8104  00380C  FFFF               	dw	65535	; assembler added errata NOP
  8105  00380E  EF13  F01C         	goto	l1194
  8106  003812                     u4280:
  8107  003812  FFFF               	dw	65535	; assembler added errata NOP
  8108  003814  0100               	movlb	0	; () banked
  8109  003816  B38A               	btfsc	_flags& (0+255),1,b
  8110  003818  EF10  F01C         	goto	u4291
  8111  00381C  EF13  F01C         	goto	u4290
  8112  003820                     u4291:
  8113  003820  FFFF               	dw	65535	; assembler added errata NOP
  8114  003822  EF83  F01B         	goto	l3910
  8115  003826                     u4290:
  8116  003826                     l1194:
  8117  003826  FFFF               	dw	65535	; assembler added errata NOP
  8118                           
  8119                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 534:     if ((fla
      +                          gs & (1 << 4)) && t) {
  8120  003828  0100               	movlb	0	; () banked
  8121  00382A  A98A               	btfss	_flags& (0+255),4,b
  8122  00382C  EF1A  F01C         	goto	u4301
  8123  003830  EF1D  F01C         	goto	u4300
  8124  003834                     u4301:
  8125  003834  FFFF               	dw	65535	; assembler added errata NOP
  8126  003836  EF37  F01C         	goto	l3940
  8127  00383A                     u4300:
  8128  00383A  FFFF               	dw	65535	; assembler added errata NOP
  8129  00383C                     
  8130                           ; BSR set to: 0
  8131  00383C  5030               	movf	otoa@t^0,w,c
  8132  00383E  1031               	iorwf	(otoa@t+1)^0,w,c
  8133  003840  B4D8               	btfsc	status,2,c
  8134  003842  EF25  F01C         	goto	u4311
  8135  003846  EF28  F01C         	goto	u4310
  8136  00384A                     u4311:
  8137  00384A  FFFF               	dw	65535	; assembler added errata NOP
  8138  00384C  EF37  F01C         	goto	l3940
  8139  003850                     u4310:
  8140  003850  FFFF               	dw	65535	; assembler added errata NOP
  8141  003852                     
  8142                           ; BSR set to: 0
  8143                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 535:         --i;
  8144  003852  063C               	decf	otoa@i^0,f,c
  8145  003854  A0D8               	btfss	status,0,c
  8146  003856  063D               	decf	(otoa@i+1)^0,f,c
  8147  003858                     
  8148                           ; BSR set to: 0
  8149                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 536:         dbuf
      +                          [i] = '0';
  8150  003858  0E98               	movlw	low _dbuf
  8151  00385A  243C               	addwf	otoa@i^0,w,c
  8152  00385C  6ED9               	movwf	fsr2l,c
  8153  00385E  0E00               	movlw	high _dbuf
  8154  003860  203D               	addwfc	(otoa@i+1)^0,w,c
  8155  003862  6EDA               	movwf	fsr2h,c
  8156  003864  0E30               	movlw	48
  8157  003866  6EDF               	movwf	indf2,c
  8158  003868                     
  8159                           ; BSR set to: 0
  8160                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 537:         --w;
  8161  003868  0632               	decf	otoa@w^0,f,c
  8162  00386A  A0D8               	btfss	status,0,c
  8163  00386C  0633               	decf	(otoa@w+1)^0,f,c
  8164  00386E                     l3940:
  8165  00386E  FFFF               	dw	65535	; assembler added errata NOP
  8166                           
  8167                           ; BSR set to: 0
  8168                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 541:     return p
      +                          ad(fp, &dbuf[i], w);
  8169  003870  C01C  F011         	movff	otoa@fp,pad@fp
  8170  003874  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  8171  003878  0E98               	movlw	low _dbuf
  8172  00387A  243C               	addwf	otoa@i^0,w,c
  8173  00387C  6E13               	movwf	pad@buf^0,c
  8174  00387E  0E00               	movlw	high _dbuf
  8175  003880  203D               	addwfc	(otoa@i+1)^0,w,c
  8176  003882  6E14               	movwf	(pad@buf+1)^0,c
  8177  003884  C032  F015         	movff	otoa@w,pad@p
  8178  003888  C033  F016         	movff	otoa@w+1,pad@p+1
  8179  00388C  ECBB  F039         	call	_pad	;wreg free
  8180  003890  C011  F01C         	movff	?_pad,?_otoa
  8181  003894  C012  F01D         	movff	?_pad+1,?_otoa+1
  8182  003898  0012               	return		;funcret
  8183  00389A  FFFF               	dw	65535	; errata NOP
  8184  00389C                     __end_of_otoa:
  8185                           	callstack 0
  8186                           
  8187 ;; *************** function _dtoa *****************
  8188 ;; Defined at:
  8189 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  8190 ;; Parameters:    Size  Location     Type
  8191 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8192 ;;		 -> vsnprintf@f(6), 
  8193 ;;  d               8   29[COMRAM] long long 
  8194 ;; Auto vars:     Size  Location     Type
  8195 ;;  n               8   53[COMRAM] long long 
  8196 ;;  i               2   61[COMRAM] int 
  8197 ;;  s               2   51[COMRAM] int 
  8198 ;;  w               2   49[COMRAM] int 
  8199 ;;  p               2   47[COMRAM] int 
  8200 ;; Return value:  Size  Location     Type
  8201 ;;                  2   27[COMRAM] int 
  8202 ;; Registers used:
  8203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8204 ;; Tracked objects:
  8205 ;;		On entry : 0/0
  8206 ;;		On exit  : 0/0
  8207 ;;		Unchanged: 0/0
  8208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8209 ;;      Params:        10       0       0       0       0       0       0
  8210 ;;      Locals:        18       0       0       0       0       0       0
  8211 ;;      Temps:          8       0       0       0       0       0       0
  8212 ;;      Totals:        36       0       0       0       0       0       0
  8213 ;;Total ram usage:       36 bytes
  8214 ;; Hardware stack levels used:    1
  8215 ;; Hardware stack levels required when called:    5
  8216 ;; This function calls:
  8217 ;;		___aodiv
  8218 ;;		___aomod
  8219 ;;		_abs
  8220 ;;		_pad
  8221 ;; This function is called by:
  8222 ;;		_vfpfcnvrt
  8223 ;; This function uses a non-reentrant model
  8224 ;;
  8225                           
  8226                           	psect	text20
  8227  002DE6                     __ptext20:
  8228                           	callstack 0
  8229  002DE6                     _dtoa:
  8230                           	callstack 0
  8231  002DE6  FFFF               	dw	65535	; assembler added errata NOP
  8232  002DE8                     
  8233                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  8234  002DE8  C01E  F036         	movff	dtoa@d,dtoa@n
  8235  002DEC  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  8236  002DF0  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  8237  002DF4  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  8238  002DF8  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  8239  002DFC  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  8240  002E00  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  8241  002E04  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  8242  002E08                     
  8243                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  8244  002E08  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  8245  002E0A  EF09  F017         	goto	u4071
  8246  002E0E  EF0D  F017         	goto	u4070
  8247  002E12                     u4071:
  8248  002E12  FFFF               	dw	65535	; assembler added errata NOP
  8249  002E14  0E01               	movlw	1
  8250  002E16  EF0F  F017         	goto	u4080
  8251  002E1A                     u4070:
  8252  002E1A  FFFF               	dw	65535	; assembler added errata NOP
  8253  002E1C  0E00               	movlw	0
  8254  002E1E                     u4080:
  8255  002E1E  FFFF               	dw	65535	; assembler added errata NOP
  8256  002E20  6E34               	movwf	dtoa@s^0,c
  8257  002E22  6A35               	clrf	(dtoa@s+1)^0,c
  8258                           
  8259                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  8260  002E24  5034               	movf	dtoa@s^0,w,c
  8261  002E26  1035               	iorwf	(dtoa@s+1)^0,w,c
  8262  002E28  B4D8               	btfsc	status,2,c
  8263  002E2A  EF19  F017         	goto	u4091
  8264  002E2E  EF1C  F017         	goto	u4090
  8265  002E32                     u4091:
  8266  002E32  FFFF               	dw	65535	; assembler added errata NOP
  8267  002E34  EF2D  F017         	goto	l3840
  8268  002E38                     u4090:
  8269  002E38  FFFF               	dw	65535	; assembler added errata NOP
  8270  002E3A                     
  8271                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  8272  002E3A  1E3D               	comf	(dtoa@n+7)^0,f,c
  8273  002E3C  1E3C               	comf	(dtoa@n+6)^0,f,c
  8274  002E3E  1E3B               	comf	(dtoa@n+5)^0,f,c
  8275  002E40  1E3A               	comf	(dtoa@n+4)^0,f,c
  8276  002E42  1E39               	comf	(dtoa@n+3)^0,f,c
  8277  002E44  1E38               	comf	(dtoa@n+2)^0,f,c
  8278  002E46  1E37               	comf	(dtoa@n+1)^0,f,c
  8279  002E48  6C36               	negf	dtoa@n^0,c
  8280  002E4A  0E00               	movlw	0
  8281  002E4C  2237               	addwfc	(dtoa@n+1)^0,f,c
  8282  002E4E  2238               	addwfc	(dtoa@n+2)^0,f,c
  8283  002E50  2239               	addwfc	(dtoa@n+3)^0,f,c
  8284  002E52  223A               	addwfc	(dtoa@n+4)^0,f,c
  8285  002E54  223B               	addwfc	(dtoa@n+5)^0,f,c
  8286  002E56  223C               	addwfc	(dtoa@n+6)^0,f,c
  8287  002E58  223D               	addwfc	(dtoa@n+7)^0,f,c
  8288  002E5A                     l3840:
  8289  002E5A  FFFF               	dw	65535	; assembler added errata NOP
  8290                           
  8291                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  8292  002E5C  0100               	movlb	0	; () banked
  8293  002E5E  BF89               	btfsc	(_prec+1)& (0+255),7,b
  8294  002E60  EF34  F017         	goto	u4101
  8295  002E64  EF37  F017         	goto	u4100
  8296  002E68                     u4101:
  8297  002E68  FFFF               	dw	65535	; assembler added errata NOP
  8298  002E6A  EF39  F017         	goto	l3844
  8299  002E6E                     u4100:
  8300  002E6E  FFFF               	dw	65535	; assembler added errata NOP
  8301  002E70                     
  8302                           ; BSR set to: 0
  8303                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  8304  002E70  938A               	bcf	_flags& (0+255),1,b
  8305  002E72                     l3844:
  8306  002E72  FFFF               	dw	65535	; assembler added errata NOP
  8307                           
  8308                           ; BSR set to: 0
  8309                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  8310  002E74  BF89               	btfsc	(_prec+1)& (0+255),7,b
  8311  002E76  EF48  F017         	goto	u4110
  8312  002E7A  5189               	movf	(_prec+1)& (0+255),w,b
  8313  002E7C  E106               	bnz	u4111
  8314  002E7E  0588               	decf	_prec& (0+255),w,b
  8315  002E80  B0D8               	btfsc	status,0,c
  8316  002E82  EF45  F017         	goto	u4111
  8317  002E86  EF48  F017         	goto	u4110
  8318  002E8A                     u4111:
  8319  002E8A  FFFF               	dw	65535	; assembler added errata NOP
  8320  002E8C  EF4F  F017         	goto	l1160
  8321  002E90                     u4110:
  8322  002E90  FFFF               	dw	65535	; assembler added errata NOP
  8323  002E92                     
  8324                           ; BSR set to: 0
  8325  002E92  0E00               	movlw	0
  8326  002E94  6E31               	movwf	(dtoa@p+1)^0,c
  8327  002E96  0E01               	movlw	1
  8328  002E98  6E30               	movwf	dtoa@p^0,c
  8329  002E9A  EF54  F017         	goto	l1162
  8330  002E9E                     l1160:
  8331  002E9E  FFFF               	dw	65535	; assembler added errata NOP
  8332                           
  8333                           ; BSR set to: 0
  8334  002EA0  C088  F030         	movff	_prec,dtoa@p
  8335  002EA4  C089  F031         	movff	_prec+1,dtoa@p+1
  8336  002EA8                     l1162:
  8337  002EA8  FFFF               	dw	65535	; assembler added errata NOP
  8338                           
  8339                           ; BSR set to: 0
  8340                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  8341  002EAA  C086  F032         	movff	_width,dtoa@w
  8342  002EAE  C087  F033         	movff	_width+1,dtoa@w+1
  8343  002EB2                     
  8344                           ; BSR set to: 0
  8345                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  8346  002EB2  5034               	movf	dtoa@s^0,w,c
  8347  002EB4  1035               	iorwf	(dtoa@s+1)^0,w,c
  8348  002EB6  A4D8               	btfss	status,2,c
  8349  002EB8  EF60  F017         	goto	u4121
  8350  002EBC  EF63  F017         	goto	u4120
  8351  002EC0                     u4121:
  8352  002EC0  FFFF               	dw	65535	; assembler added errata NOP
  8353  002EC2  EF6C  F017         	goto	l3852
  8354  002EC6                     u4120:
  8355  002EC6  FFFF               	dw	65535	; assembler added errata NOP
  8356  002EC8                     
  8357                           ; BSR set to: 0
  8358  002EC8  A58A               	btfss	_flags& (0+255),2,b
  8359  002ECA  EF69  F017         	goto	u4131
  8360  002ECE  EF6C  F017         	goto	u4130
  8361  002ED2                     u4131:
  8362  002ED2  FFFF               	dw	65535	; assembler added errata NOP
  8363  002ED4  EF70  F017         	goto	l3854
  8364  002ED8                     u4130:
  8365  002ED8                     l3852:
  8366  002ED8  FFFF               	dw	65535	; assembler added errata NOP
  8367                           
  8368                           ; BSR set to: 0
  8369                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  8370  002EDA  0632               	decf	dtoa@w^0,f,c
  8371  002EDC  A0D8               	btfss	status,0,c
  8372  002EDE  0633               	decf	(dtoa@w+1)^0,f,c
  8373  002EE0                     l3854:
  8374  002EE0  FFFF               	dw	65535	; assembler added errata NOP
  8375                           
  8376                           ; BSR set to: 0
  8377                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  8378  002EE2  0E00               	movlw	0
  8379  002EE4  6E3F               	movwf	(dtoa@i+1)^0,c
  8380  002EE6  0E1F               	movlw	31
  8381  002EE8  6E3E               	movwf	dtoa@i^0,c
  8382  002EEA                     
  8383                           ; BSR set to: 0
  8384                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  8385  002EEA  0E00               	movlw	0
  8386  002EEC  6FB7               	movwf	(_dbuf+31)& (0+255),b
  8387                           
  8388                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8389  002EEE  EFF6  F017         	goto	l3868
  8390  002EF2                     l3858:
  8391  002EF2  FFFF               	dw	65535	; assembler added errata NOP
  8392                           
  8393                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  8394  002EF4  063E               	decf	dtoa@i^0,f,c
  8395  002EF6  A0D8               	btfss	status,0,c
  8396  002EF8  063F               	decf	(dtoa@i+1)^0,f,c
  8397  002EFA                     
  8398                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  8399  002EFA  0E98               	movlw	low _dbuf
  8400  002EFC  243E               	addwf	dtoa@i^0,w,c
  8401  002EFE  6ED9               	movwf	fsr2l,c
  8402  002F00  0E00               	movlw	high _dbuf
  8403  002F02  203F               	addwfc	(dtoa@i+1)^0,w,c
  8404  002F04  6EDA               	movwf	fsr2h,c
  8405  002F06  C036  F001         	movff	dtoa@n,___aomod@dividend
  8406  002F0A  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  8407  002F0E  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  8408  002F12  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  8409  002F16  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  8410  002F1A  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  8411  002F1E  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  8412  002F22  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  8413  002F26  0E0A               	movlw	10
  8414  002F28  6E09               	movwf	___aomod@divisor^0,c
  8415  002F2A  0E00               	movlw	0
  8416  002F2C  6E0A               	movwf	(___aomod@divisor+1)^0,c
  8417  002F2E  0E00               	movlw	0
  8418  002F30  6E0B               	movwf	(___aomod@divisor+2)^0,c
  8419  002F32  0E00               	movlw	0
  8420  002F34  6E0C               	movwf	(___aomod@divisor+3)^0,c
  8421  002F36  0E00               	movlw	0
  8422  002F38  6E0D               	movwf	(___aomod@divisor+4)^0,c
  8423  002F3A  0E00               	movlw	0
  8424  002F3C  6E0E               	movwf	(___aomod@divisor+5)^0,c
  8425  002F3E  0E00               	movlw	0
  8426  002F40  6E0F               	movwf	(___aomod@divisor+6)^0,c
  8427  002F42  0E00               	movlw	0
  8428  002F44  6E10               	movwf	(___aomod@divisor+7)^0,c
  8429  002F46  EC92  F03E         	call	___aomod	;wreg free
  8430  002F4A  C001  F026         	movff	?___aomod,??_dtoa
  8431  002F4E  C002  F027         	movff	?___aomod+1,??_dtoa+1
  8432  002F52  C003  F028         	movff	?___aomod+2,??_dtoa+2
  8433  002F56  C004  F029         	movff	?___aomod+3,??_dtoa+3
  8434  002F5A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  8435  002F5E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  8436  002F62  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  8437  002F66  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  8438  002F6A  C026  F013         	movff	??_dtoa,abs@a
  8439  002F6E  C028  F014         	movff	??_dtoa+2,abs@a+1
  8440  002F72  EC8F  F034         	call	_abs	;wreg free
  8441  002F76  5013               	movf	?_abs^0,w,c
  8442  002F78  0F30               	addlw	48
  8443  002F7A  6EDF               	movwf	indf2,c
  8444  002F7C                     
  8445                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  8446  002F7C  0630               	decf	dtoa@p^0,f,c
  8447  002F7E  A0D8               	btfss	status,0,c
  8448  002F80  0631               	decf	(dtoa@p+1)^0,f,c
  8449  002F82                     
  8450                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  8451  002F82  0632               	decf	dtoa@w^0,f,c
  8452  002F84  A0D8               	btfss	status,0,c
  8453  002F86  0633               	decf	(dtoa@w+1)^0,f,c
  8454  002F88                     
  8455                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  8456  002F88  C036  F001         	movff	dtoa@n,___aodiv@dividend
  8457  002F8C  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  8458  002F90  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  8459  002F94  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  8460  002F98  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  8461  002F9C  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  8462  002FA0  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  8463  002FA4  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  8464  002FA8  0E0A               	movlw	10
  8465  002FAA  6E09               	movwf	___aodiv@divisor^0,c
  8466  002FAC  0E00               	movlw	0
  8467  002FAE  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  8468  002FB0  0E00               	movlw	0
  8469  002FB2  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  8470  002FB4  0E00               	movlw	0
  8471  002FB6  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  8472  002FB8  0E00               	movlw	0
  8473  002FBA  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  8474  002FBC  0E00               	movlw	0
  8475  002FBE  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  8476  002FC0  0E00               	movlw	0
  8477  002FC2  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  8478  002FC4  0E00               	movlw	0
  8479  002FC6  6E10               	movwf	(___aodiv@divisor+7)^0,c
  8480  002FC8  EC1B  F01F         	call	___aodiv	;wreg free
  8481  002FCC  C001  F036         	movff	?___aodiv,dtoa@n
  8482  002FD0  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  8483  002FD4  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  8484  002FD8  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  8485  002FDC  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  8486  002FE0  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  8487  002FE4  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  8488  002FE8  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  8489  002FEC                     l3868:
  8490  002FEC  FFFF               	dw	65535	; assembler added errata NOP
  8491                           
  8492                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8493  002FEE  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  8494  002FF0  EF02  F018         	goto	u4141
  8495  002FF4  503F               	movf	(dtoa@i+1)^0,w,c
  8496  002FF6  E109               	bnz	u4140
  8497  002FF8  043E               	decf	dtoa@i^0,w,c
  8498  002FFA  A0D8               	btfss	status,0,c
  8499  002FFC  EF02  F018         	goto	u4141
  8500  003000  EF05  F018         	goto	u4140
  8501  003004                     u4141:
  8502  003004  FFFF               	dw	65535	; assembler added errata NOP
  8503  003006  EF3E  F018         	goto	l3878
  8504  00300A                     u4140:
  8505  00300A  FFFF               	dw	65535	; assembler added errata NOP
  8506  00300C  5036               	movf	dtoa@n^0,w,c
  8507  00300E  1037               	iorwf	(dtoa@n+1)^0,w,c
  8508  003010  1038               	iorwf	(dtoa@n+2)^0,w,c
  8509  003012  1039               	iorwf	(dtoa@n+3)^0,w,c
  8510  003014  103A               	iorwf	(dtoa@n+4)^0,w,c
  8511  003016  103B               	iorwf	(dtoa@n+5)^0,w,c
  8512  003018  103C               	iorwf	(dtoa@n+6)^0,w,c
  8513  00301A  103D               	iorwf	(dtoa@n+7)^0,w,c
  8514  00301C  A4D8               	btfss	status,2,c
  8515  00301E  EF13  F018         	goto	u4151
  8516  003022  EF16  F018         	goto	u4150
  8517  003026                     u4151:
  8518  003026  FFFF               	dw	65535	; assembler added errata NOP
  8519  003028  EF79  F017         	goto	l3858
  8520  00302C                     u4150:
  8521  00302C  FFFF               	dw	65535	; assembler added errata NOP
  8522  00302E  BE31               	btfsc	(dtoa@p+1)^0,7,c
  8523  003030  EF25  F018         	goto	u4160
  8524  003034  5031               	movf	(dtoa@p+1)^0,w,c
  8525  003036  E106               	bnz	u4161
  8526  003038  0430               	decf	dtoa@p^0,w,c
  8527  00303A  B0D8               	btfsc	status,0,c
  8528  00303C  EF22  F018         	goto	u4161
  8529  003040  EF25  F018         	goto	u4160
  8530  003044                     u4161:
  8531  003044  FFFF               	dw	65535	; assembler added errata NOP
  8532  003046  EF79  F017         	goto	l3858
  8533  00304A                     u4160:
  8534  00304A  FFFF               	dw	65535	; assembler added errata NOP
  8535  00304C  BE33               	btfsc	(dtoa@w+1)^0,7,c
  8536  00304E  EF31  F018         	goto	u4171
  8537  003052  5033               	movf	(dtoa@w+1)^0,w,c
  8538  003054  E109               	bnz	u4170
  8539  003056  0432               	decf	dtoa@w^0,w,c
  8540  003058  A0D8               	btfss	status,0,c
  8541  00305A  EF31  F018         	goto	u4171
  8542  00305E  EF34  F018         	goto	u4170
  8543  003062                     u4171:
  8544  003062  FFFF               	dw	65535	; assembler added errata NOP
  8545  003064  EF3E  F018         	goto	l3878
  8546  003068                     u4170:
  8547  003068  FFFF               	dw	65535	; assembler added errata NOP
  8548  00306A  0100               	movlb	0	; () banked
  8549  00306C  B38A               	btfsc	_flags& (0+255),1,b
  8550  00306E  EF3B  F018         	goto	u4181
  8551  003072  EF3E  F018         	goto	u4180
  8552  003076                     u4181:
  8553  003076  FFFF               	dw	65535	; assembler added errata NOP
  8554  003078  EF79  F017         	goto	l3858
  8555  00307C                     u4180:
  8556  00307C                     l3878:
  8557  00307C  FFFF               	dw	65535	; assembler added errata NOP
  8558                           
  8559                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  8560  00307E  5034               	movf	dtoa@s^0,w,c
  8561  003080  1035               	iorwf	(dtoa@s+1)^0,w,c
  8562  003082  A4D8               	btfss	status,2,c
  8563  003084  EF46  F018         	goto	u4191
  8564  003088  EF49  F018         	goto	u4190
  8565  00308C                     u4191:
  8566  00308C  FFFF               	dw	65535	; assembler added errata NOP
  8567  00308E  EF53  F018         	goto	l3882
  8568  003092                     u4190:
  8569  003092  FFFF               	dw	65535	; assembler added errata NOP
  8570  003094  0100               	movlb	0	; () banked
  8571  003096  A58A               	btfss	_flags& (0+255),2,b
  8572  003098  EF50  F018         	goto	u4201
  8573  00309C  EF53  F018         	goto	u4200
  8574  0030A0                     u4201:
  8575  0030A0  FFFF               	dw	65535	; assembler added errata NOP
  8576  0030A2  EF76  F018         	goto	l3892
  8577  0030A6                     u4200:
  8578  0030A6                     l3882:
  8579  0030A6  FFFF               	dw	65535	; assembler added errata NOP
  8580                           
  8581                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  8582  0030A8  063E               	decf	dtoa@i^0,f,c
  8583  0030AA  A0D8               	btfss	status,0,c
  8584  0030AC  063F               	decf	(dtoa@i+1)^0,f,c
  8585  0030AE                     
  8586                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  8587  0030AE  5034               	movf	dtoa@s^0,w,c
  8588  0030B0  1035               	iorwf	(dtoa@s+1)^0,w,c
  8589  0030B2  A4D8               	btfss	status,2,c
  8590  0030B4  EF5E  F018         	goto	u4211
  8591  0030B8  EF61  F018         	goto	u4210
  8592  0030BC                     u4211:
  8593  0030BC  FFFF               	dw	65535	; assembler added errata NOP
  8594  0030BE  EF68  F018         	goto	l3888
  8595  0030C2                     u4210:
  8596  0030C2  FFFF               	dw	65535	; assembler added errata NOP
  8597  0030C4  0E00               	movlw	0
  8598  0030C6  6E2F               	movwf	(_dtoa$1632+1)^0,c
  8599  0030C8  0E2B               	movlw	43
  8600  0030CA  6E2E               	movwf	_dtoa$1632^0,c
  8601  0030CC  EF6D  F018         	goto	l3890
  8602  0030D0                     l3888:
  8603  0030D0  FFFF               	dw	65535	; assembler added errata NOP
  8604  0030D2  0E00               	movlw	0
  8605  0030D4  6E2F               	movwf	(_dtoa$1632+1)^0,c
  8606  0030D6  0E2D               	movlw	45
  8607  0030D8  6E2E               	movwf	_dtoa$1632^0,c
  8608  0030DA                     l3890:
  8609  0030DA  FFFF               	dw	65535	; assembler added errata NOP
  8610  0030DC  0E98               	movlw	low _dbuf
  8611  0030DE  243E               	addwf	dtoa@i^0,w,c
  8612  0030E0  6ED9               	movwf	fsr2l,c
  8613  0030E2  0E00               	movlw	high _dbuf
  8614  0030E4  203F               	addwfc	(dtoa@i+1)^0,w,c
  8615  0030E6  6EDA               	movwf	fsr2h,c
  8616  0030E8  C02E  FFDF         	movff	_dtoa$1632,indf2
  8617  0030EC                     l3892:
  8618  0030EC  FFFF               	dw	65535	; assembler added errata NOP
  8619                           
  8620                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  8621  0030EE  C01C  F011         	movff	dtoa@fp,pad@fp
  8622  0030F2  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  8623  0030F6  0E98               	movlw	low _dbuf
  8624  0030F8  243E               	addwf	dtoa@i^0,w,c
  8625  0030FA  6E13               	movwf	pad@buf^0,c
  8626  0030FC  0E00               	movlw	high _dbuf
  8627  0030FE  203F               	addwfc	(dtoa@i+1)^0,w,c
  8628  003100  6E14               	movwf	(pad@buf+1)^0,c
  8629  003102  C032  F015         	movff	dtoa@w,pad@p
  8630  003106  C033  F016         	movff	dtoa@w+1,pad@p+1
  8631  00310A  ECBB  F039         	call	_pad	;wreg free
  8632  00310E  C011  F01C         	movff	?_pad,?_dtoa
  8633  003112  C012  F01D         	movff	?_pad+1,?_dtoa+1
  8634  003116  0012               	return		;funcret
  8635  003118  FFFF               	dw	65535	; errata NOP
  8636  00311A                     __end_of_dtoa:
  8637                           	callstack 0
  8638                           
  8639 ;; *************** function ___aomod *****************
  8640 ;; Defined at:
  8641 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  8642 ;; Parameters:    Size  Location     Type
  8643 ;;  dividend        8    0[COMRAM] long long 
  8644 ;;  divisor         8    8[COMRAM] long long 
  8645 ;; Auto vars:     Size  Location     Type
  8646 ;;  sign            1   17[COMRAM] unsigned char 
  8647 ;;  counter         1   16[COMRAM] unsigned char 
  8648 ;; Return value:  Size  Location     Type
  8649 ;;                  8    0[COMRAM] long long 
  8650 ;; Registers used:
  8651 ;;		wreg, status,2, status,0
  8652 ;; Tracked objects:
  8653 ;;		On entry : 0/0
  8654 ;;		On exit  : 0/0
  8655 ;;		Unchanged: 0/0
  8656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8657 ;;      Params:        16       0       0       0       0       0       0
  8658 ;;      Locals:         2       0       0       0       0       0       0
  8659 ;;      Temps:          0       0       0       0       0       0       0
  8660 ;;      Totals:        18       0       0       0       0       0       0
  8661 ;;Total ram usage:       18 bytes
  8662 ;; Hardware stack levels used:    1
  8663 ;; Hardware stack levels required when called:    1
  8664 ;; This function calls:
  8665 ;;		Nothing
  8666 ;; This function is called by:
  8667 ;;		_dtoa
  8668 ;; This function uses a non-reentrant model
  8669 ;;
  8670                           
  8671                           	psect	text21
  8672  007D24                     __ptext21:
  8673                           	callstack 0
  8674  007D24                     ___aomod:
  8675                           	callstack 0
  8676  007D24  FFFF               	dw	65535	; assembler added errata NOP
  8677  007D26  0E00               	movlw	0
  8678  007D28  6E12               	movwf	___aomod@sign^0,c
  8679  007D2A  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8680  007D2C  EF9D  F03E         	goto	u3780
  8681  007D30  EF9A  F03E         	goto	u3781
  8682  007D34                     u3781:
  8683  007D34  FFFF               	dw	65535	; assembler added errata NOP
  8684  007D36  EFB0  F03E         	goto	l3698
  8685  007D3A                     u3780:
  8686  007D3A  FFFF               	dw	65535	; assembler added errata NOP
  8687  007D3C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8688  007D3E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8689  007D40  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8690  007D42  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8691  007D44  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8692  007D46  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8693  007D48  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8694  007D4A  6C01               	negf	___aomod@dividend^0,c
  8695  007D4C  0E00               	movlw	0
  8696  007D4E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8697  007D50  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8698  007D52  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8699  007D54  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8700  007D56  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8701  007D58  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8702  007D5A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8703  007D5C  0E01               	movlw	1
  8704  007D5E  6E12               	movwf	___aomod@sign^0,c
  8705  007D60                     l3698:
  8706  007D60  FFFF               	dw	65535	; assembler added errata NOP
  8707  007D62  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8708  007D64  EFB9  F03E         	goto	u3790
  8709  007D68  EFB6  F03E         	goto	u3791
  8710  007D6C                     u3791:
  8711  007D6C  FFFF               	dw	65535	; assembler added errata NOP
  8712  007D6E  EFCA  F03E         	goto	l3702
  8713  007D72                     u3790:
  8714  007D72  FFFF               	dw	65535	; assembler added errata NOP
  8715  007D74  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8716  007D76  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8717  007D78  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8718  007D7A  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8719  007D7C  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8720  007D7E  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8721  007D80  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8722  007D82  6C09               	negf	___aomod@divisor^0,c
  8723  007D84  0E00               	movlw	0
  8724  007D86  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8725  007D88  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8726  007D8A  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8727  007D8C  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8728  007D8E  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8729  007D90  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8730  007D92  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8731  007D94                     l3702:
  8732  007D94  FFFF               	dw	65535	; assembler added errata NOP
  8733  007D96  5009               	movf	___aomod@divisor^0,w,c
  8734  007D98  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8735  007D9A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8736  007D9C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8737  007D9E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8738  007DA0  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8739  007DA2  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8740  007DA4  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8741  007DA6  B4D8               	btfsc	status,2,c
  8742  007DA8  EFD8  F03E         	goto	u3801
  8743  007DAC  EFDB  F03E         	goto	u3800
  8744  007DB0                     u3801:
  8745  007DB0  FFFF               	dw	65535	; assembler added errata NOP
  8746  007DB2  EF2C  F03F         	goto	l3718
  8747  007DB6                     u3800:
  8748  007DB6  FFFF               	dw	65535	; assembler added errata NOP
  8749  007DB8  0E01               	movlw	1
  8750  007DBA  6E11               	movwf	___aomod@counter^0,c
  8751  007DBC  EFEB  F03E         	goto	l3708
  8752  007DC0                     l3706:
  8753  007DC0  FFFF               	dw	65535	; assembler added errata NOP
  8754  007DC2  90D8               	bcf	status,0,c
  8755  007DC4  3609               	rlcf	___aomod@divisor^0,f,c
  8756  007DC6  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8757  007DC8  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8758  007DCA  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8759  007DCC  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8760  007DCE  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8761  007DD0  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8762  007DD2  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8763  007DD4  2A11               	incf	___aomod@counter^0,f,c
  8764  007DD6                     l3708:
  8765  007DD6  FFFF               	dw	65535	; assembler added errata NOP
  8766  007DD8  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8767  007DDA  EFF1  F03E         	goto	u3811
  8768  007DDE  EFF4  F03E         	goto	u3810
  8769  007DE2                     u3811:
  8770  007DE2  FFFF               	dw	65535	; assembler added errata NOP
  8771  007DE4  EFE0  F03E         	goto	l3706
  8772  007DE8                     u3810:
  8773  007DE8  FFFF               	dw	65535	; assembler added errata NOP
  8774  007DEA                     l3710:
  8775  007DEA  FFFF               	dw	65535	; assembler added errata NOP
  8776  007DEC  5009               	movf	___aomod@divisor^0,w,c
  8777  007DEE  5C01               	subwf	___aomod@dividend^0,w,c
  8778  007DF0  500A               	movf	(___aomod@divisor+1)^0,w,c
  8779  007DF2  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8780  007DF4  500B               	movf	(___aomod@divisor+2)^0,w,c
  8781  007DF6  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8782  007DF8  500C               	movf	(___aomod@divisor+3)^0,w,c
  8783  007DFA  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8784  007DFC  500D               	movf	(___aomod@divisor+4)^0,w,c
  8785  007DFE  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8786  007E00  500E               	movf	(___aomod@divisor+5)^0,w,c
  8787  007E02  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8788  007E04  500F               	movf	(___aomod@divisor+6)^0,w,c
  8789  007E06  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8790  007E08  5010               	movf	(___aomod@divisor+7)^0,w,c
  8791  007E0A  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8792  007E0C  A0D8               	btfss	status,0,c
  8793  007E0E  EF0B  F03F         	goto	u3821
  8794  007E12  EF0E  F03F         	goto	u3820
  8795  007E16                     u3821:
  8796  007E16  FFFF               	dw	65535	; assembler added errata NOP
  8797  007E18  EF1F  F03F         	goto	l3714
  8798  007E1C                     u3820:
  8799  007E1C  FFFF               	dw	65535	; assembler added errata NOP
  8800  007E1E  5009               	movf	___aomod@divisor^0,w,c
  8801  007E20  5E01               	subwf	___aomod@dividend^0,f,c
  8802  007E22  500A               	movf	(___aomod@divisor+1)^0,w,c
  8803  007E24  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8804  007E26  500B               	movf	(___aomod@divisor+2)^0,w,c
  8805  007E28  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8806  007E2A  500C               	movf	(___aomod@divisor+3)^0,w,c
  8807  007E2C  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8808  007E2E  500D               	movf	(___aomod@divisor+4)^0,w,c
  8809  007E30  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8810  007E32  500E               	movf	(___aomod@divisor+5)^0,w,c
  8811  007E34  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8812  007E36  500F               	movf	(___aomod@divisor+6)^0,w,c
  8813  007E38  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8814  007E3A  5010               	movf	(___aomod@divisor+7)^0,w,c
  8815  007E3C  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8816  007E3E                     l3714:
  8817  007E3E  FFFF               	dw	65535	; assembler added errata NOP
  8818  007E40  90D8               	bcf	status,0,c
  8819  007E42  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8820  007E44  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8821  007E46  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8822  007E48  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8823  007E4A  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8824  007E4C  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8825  007E4E  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8826  007E50  3209               	rrcf	___aomod@divisor^0,f,c
  8827  007E52  2E11               	decfsz	___aomod@counter^0,f,c
  8828  007E54  EFF5  F03E         	goto	l3710
  8829  007E58                     l3718:
  8830  007E58  FFFF               	dw	65535	; assembler added errata NOP
  8831  007E5A  5012               	movf	___aomod@sign^0,w,c
  8832  007E5C  B4D8               	btfsc	status,2,c
  8833  007E5E  EF33  F03F         	goto	u3831
  8834  007E62  EF36  F03F         	goto	u3830
  8835  007E66                     u3831:
  8836  007E66  FFFF               	dw	65535	; assembler added errata NOP
  8837  007E68  EF47  F03F         	goto	l3722
  8838  007E6C                     u3830:
  8839  007E6C  FFFF               	dw	65535	; assembler added errata NOP
  8840  007E6E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8841  007E70  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8842  007E72  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8843  007E74  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8844  007E76  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8845  007E78  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8846  007E7A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8847  007E7C  6C01               	negf	___aomod@dividend^0,c
  8848  007E7E  0E00               	movlw	0
  8849  007E80  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8850  007E82  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8851  007E84  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8852  007E86  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8853  007E88  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8854  007E8A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8855  007E8C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8856  007E8E                     l3722:
  8857  007E8E  FFFF               	dw	65535	; assembler added errata NOP
  8858  007E90  C001  F001         	movff	___aomod@dividend,?___aomod
  8859  007E94  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8860  007E98  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8861  007E9C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8862  007EA0  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8863  007EA4  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8864  007EA8  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8865  007EAC  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8866  007EB0  0012               	return		;funcret
  8867  007EB2  FFFF               	dw	65535	; errata NOP
  8868  007EB4                     __end_of___aomod:
  8869                           	callstack 0
  8870                           
  8871 ;; *************** function ___aodiv *****************
  8872 ;; Defined at:
  8873 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  8874 ;; Parameters:    Size  Location     Type
  8875 ;;  dividend        8    0[COMRAM] long long 
  8876 ;;  divisor         8    8[COMRAM] long long 
  8877 ;; Auto vars:     Size  Location     Type
  8878 ;;  quotient        8   18[COMRAM] long long 
  8879 ;;  sign            1   17[COMRAM] unsigned char 
  8880 ;;  counter         1   16[COMRAM] unsigned char 
  8881 ;; Return value:  Size  Location     Type
  8882 ;;                  8    0[COMRAM] long long 
  8883 ;; Registers used:
  8884 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8885 ;; Tracked objects:
  8886 ;;		On entry : 0/0
  8887 ;;		On exit  : 0/0
  8888 ;;		Unchanged: 0/0
  8889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8890 ;;      Params:        16       0       0       0       0       0       0
  8891 ;;      Locals:        10       0       0       0       0       0       0
  8892 ;;      Temps:          0       0       0       0       0       0       0
  8893 ;;      Totals:        26       0       0       0       0       0       0
  8894 ;;Total ram usage:       26 bytes
  8895 ;; Hardware stack levels used:    1
  8896 ;; Hardware stack levels required when called:    1
  8897 ;; This function calls:
  8898 ;;		Nothing
  8899 ;; This function is called by:
  8900 ;;		_dtoa
  8901 ;; This function uses a non-reentrant model
  8902 ;;
  8903                           
  8904                           	psect	text22
  8905  003E36                     __ptext22:
  8906                           	callstack 0
  8907  003E36                     ___aodiv:
  8908                           	callstack 0
  8909  003E36  FFFF               	dw	65535	; assembler added errata NOP
  8910  003E38  0E00               	movlw	0
  8911  003E3A  6E12               	movwf	___aodiv@sign^0,c
  8912  003E3C  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8913  003E3E  EF26  F01F         	goto	u3710
  8914  003E42  EF23  F01F         	goto	u3711
  8915  003E46                     u3711:
  8916  003E46  FFFF               	dw	65535	; assembler added errata NOP
  8917  003E48  EF39  F01F         	goto	l3654
  8918  003E4C                     u3710:
  8919  003E4C  FFFF               	dw	65535	; assembler added errata NOP
  8920  003E4E  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8921  003E50  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8922  003E52  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8923  003E54  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8924  003E56  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8925  003E58  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8926  003E5A  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8927  003E5C  6C09               	negf	___aodiv@divisor^0,c
  8928  003E5E  0E00               	movlw	0
  8929  003E60  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8930  003E62  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8931  003E64  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8932  003E66  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8933  003E68  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8934  003E6A  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8935  003E6C  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8936  003E6E  0E01               	movlw	1
  8937  003E70  6E12               	movwf	___aodiv@sign^0,c
  8938  003E72                     l3654:
  8939  003E72  FFFF               	dw	65535	; assembler added errata NOP
  8940  003E74  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8941  003E76  EF42  F01F         	goto	u3720
  8942  003E7A  EF3F  F01F         	goto	u3721
  8943  003E7E                     u3721:
  8944  003E7E  FFFF               	dw	65535	; assembler added errata NOP
  8945  003E80  EF55  F01F         	goto	l3660
  8946  003E84                     u3720:
  8947  003E84  FFFF               	dw	65535	; assembler added errata NOP
  8948  003E86  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8949  003E88  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8950  003E8A  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8951  003E8C  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8952  003E8E  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8953  003E90  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8954  003E92  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8955  003E94  6C01               	negf	___aodiv@dividend^0,c
  8956  003E96  0E00               	movlw	0
  8957  003E98  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8958  003E9A  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8959  003E9C  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8960  003E9E  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8961  003EA0  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8962  003EA2  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8963  003EA4  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8964  003EA6  0E01               	movlw	1
  8965  003EA8  1A12               	xorwf	___aodiv@sign^0,f,c
  8966  003EAA                     l3660:
  8967  003EAA  FFFF               	dw	65535	; assembler added errata NOP
  8968  003EAC  EE20  F013         	lfsr	2,___aodiv@quotient
  8969  003EB0  0E07               	movlw	7
  8970  003EB2                     u3731:
  8971  003EB2  6ADE               	clrf	postinc2,c
  8972  003EB4  06E8               	decf	wreg,f,c
  8973  003EB6  E2FD               	bc	u3731
  8974  003EB8  5009               	movf	___aodiv@divisor^0,w,c
  8975  003EBA  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8976  003EBC  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8977  003EBE  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8978  003EC0  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8979  003EC2  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8980  003EC4  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8981  003EC6  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8982  003EC8  B4D8               	btfsc	status,2,c
  8983  003ECA  EF69  F01F         	goto	u3741
  8984  003ECE  EF6C  F01F         	goto	u3740
  8985  003ED2                     u3741:
  8986  003ED2  FFFF               	dw	65535	; assembler added errata NOP
  8987  003ED4  EFC7  F01F         	goto	l3682
  8988  003ED8                     u3740:
  8989  003ED8  FFFF               	dw	65535	; assembler added errata NOP
  8990  003EDA  0E01               	movlw	1
  8991  003EDC  6E11               	movwf	___aodiv@counter^0,c
  8992  003EDE  EF7C  F01F         	goto	l3668
  8993  003EE2                     l3666:
  8994  003EE2  FFFF               	dw	65535	; assembler added errata NOP
  8995  003EE4  90D8               	bcf	status,0,c
  8996  003EE6  3609               	rlcf	___aodiv@divisor^0,f,c
  8997  003EE8  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8998  003EEA  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8999  003EEC  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  9000  003EEE  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  9001  003EF0  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  9002  003EF2  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  9003  003EF4  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  9004  003EF6  2A11               	incf	___aodiv@counter^0,f,c
  9005  003EF8                     l3668:
  9006  003EF8  FFFF               	dw	65535	; assembler added errata NOP
  9007  003EFA  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  9008  003EFC  EF82  F01F         	goto	u3751
  9009  003F00  EF85  F01F         	goto	u3750
  9010  003F04                     u3751:
  9011  003F04  FFFF               	dw	65535	; assembler added errata NOP
  9012  003F06  EF71  F01F         	goto	l3666
  9013  003F0A                     u3750:
  9014  003F0A  FFFF               	dw	65535	; assembler added errata NOP
  9015  003F0C                     l3670:
  9016  003F0C  FFFF               	dw	65535	; assembler added errata NOP
  9017  003F0E  90D8               	bcf	status,0,c
  9018  003F10  3613               	rlcf	___aodiv@quotient^0,f,c
  9019  003F12  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  9020  003F14  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  9021  003F16  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  9022  003F18  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  9023  003F1A  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  9024  003F1C  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  9025  003F1E  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  9026  003F20  5009               	movf	___aodiv@divisor^0,w,c
  9027  003F22  5C01               	subwf	___aodiv@dividend^0,w,c
  9028  003F24  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9029  003F26  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  9030  003F28  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9031  003F2A  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  9032  003F2C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9033  003F2E  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  9034  003F30  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9035  003F32  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  9036  003F34  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9037  003F36  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  9038  003F38  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9039  003F3A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  9040  003F3C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9041  003F3E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  9042  003F40  A0D8               	btfss	status,0,c
  9043  003F42  EFA5  F01F         	goto	u3761
  9044  003F46  EFA8  F01F         	goto	u3760
  9045  003F4A                     u3761:
  9046  003F4A  FFFF               	dw	65535	; assembler added errata NOP
  9047  003F4C  EFBA  F01F         	goto	l3678
  9048  003F50                     u3760:
  9049  003F50  FFFF               	dw	65535	; assembler added errata NOP
  9050  003F52  5009               	movf	___aodiv@divisor^0,w,c
  9051  003F54  5E01               	subwf	___aodiv@dividend^0,f,c
  9052  003F56  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9053  003F58  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  9054  003F5A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9055  003F5C  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  9056  003F5E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9057  003F60  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  9058  003F62  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9059  003F64  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  9060  003F66  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9061  003F68  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  9062  003F6A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9063  003F6C  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  9064  003F6E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9065  003F70  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  9066  003F72  8013               	bsf	___aodiv@quotient^0,0,c
  9067  003F74                     l3678:
  9068  003F74  FFFF               	dw	65535	; assembler added errata NOP
  9069  003F76  90D8               	bcf	status,0,c
  9070  003F78  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  9071  003F7A  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  9072  003F7C  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  9073  003F7E  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  9074  003F80  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  9075  003F82  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  9076  003F84  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  9077  003F86  3209               	rrcf	___aodiv@divisor^0,f,c
  9078  003F88  2E11               	decfsz	___aodiv@counter^0,f,c
  9079  003F8A  EF86  F01F         	goto	l3670
  9080  003F8E                     l3682:
  9081  003F8E  FFFF               	dw	65535	; assembler added errata NOP
  9082  003F90  5012               	movf	___aodiv@sign^0,w,c
  9083  003F92  B4D8               	btfsc	status,2,c
  9084  003F94  EFCE  F01F         	goto	u3771
  9085  003F98  EFD1  F01F         	goto	u3770
  9086  003F9C                     u3771:
  9087  003F9C  FFFF               	dw	65535	; assembler added errata NOP
  9088  003F9E  EFE2  F01F         	goto	l3686
  9089  003FA2                     u3770:
  9090  003FA2  FFFF               	dw	65535	; assembler added errata NOP
  9091  003FA4  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  9092  003FA6  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  9093  003FA8  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  9094  003FAA  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  9095  003FAC  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  9096  003FAE  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  9097  003FB0  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  9098  003FB2  6C13               	negf	___aodiv@quotient^0,c
  9099  003FB4  0E00               	movlw	0
  9100  003FB6  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  9101  003FB8  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  9102  003FBA  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  9103  003FBC  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  9104  003FBE  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  9105  003FC0  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  9106  003FC2  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  9107  003FC4                     l3686:
  9108  003FC4  FFFF               	dw	65535	; assembler added errata NOP
  9109  003FC6  C013  F001         	movff	___aodiv@quotient,?___aodiv
  9110  003FCA  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  9111  003FCE  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  9112  003FD2  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  9113  003FD6  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  9114  003FDA  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  9115  003FDE  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  9116  003FE2  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  9117  003FE6  0012               	return		;funcret
  9118  003FE8  FFFF               	dw	65535	; errata NOP
  9119  003FEA                     __end_of___aodiv:
  9120                           	callstack 0
  9121                           
  9122 ;; *************** function _ctoa *****************
  9123 ;; Defined at:
  9124 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  9125 ;; Parameters:    Size  Location     Type
  9126 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  9127 ;;		 -> vsnprintf@f(6), 
  9128 ;;  c               1   29[COMRAM] unsigned char 
  9129 ;; Auto vars:     Size  Location     Type
  9130 ;;  w               2   30[COMRAM] int 
  9131 ;;  l               2    0        int 
  9132 ;; Return value:  Size  Location     Type
  9133 ;;                  2   27[COMRAM] int 
  9134 ;; Registers used:
  9135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9136 ;; Tracked objects:
  9137 ;;		On entry : 0/0
  9138 ;;		On exit  : 0/0
  9139 ;;		Unchanged: 0/0
  9140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9141 ;;      Params:         3       0       0       0       0       0       0
  9142 ;;      Locals:         2       0       0       0       0       0       0
  9143 ;;      Temps:          0       0       0       0       0       0       0
  9144 ;;      Totals:         5       0       0       0       0       0       0
  9145 ;;Total ram usage:        5 bytes
  9146 ;; Hardware stack levels used:    1
  9147 ;; Hardware stack levels required when called:    5
  9148 ;; This function calls:
  9149 ;;		_pad
  9150 ;; This function is called by:
  9151 ;;		_vfpfcnvrt
  9152 ;; This function uses a non-reentrant model
  9153 ;;
  9154                           
  9155                           	psect	text23
  9156  006A76                     __ptext23:
  9157                           	callstack 0
  9158  006A76                     _ctoa:
  9159                           	callstack 0
  9160  006A76  FFFF               	dw	65535	; assembler added errata NOP
  9161  006A78                     
  9162                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  9163  006A78  0100               	movlb	0	; () banked
  9164  006A7A  5186               	movf	_width& (0+255),w,b
  9165  006A7C  1187               	iorwf	(_width+1)& (0+255),w,b
  9166  006A7E  A4D8               	btfss	status,2,c
  9167  006A80  EF44  F035         	goto	u4061
  9168  006A84  EF47  F035         	goto	u4060
  9169  006A88                     u4061:
  9170  006A88  FFFF               	dw	65535	; assembler added errata NOP
  9171  006A8A  EF4E  F035         	goto	l3824
  9172  006A8E                     u4060:
  9173  006A8E  FFFF               	dw	65535	; assembler added errata NOP
  9174  006A90                     
  9175                           ; BSR set to: 0
  9176  006A90  C086  F01F         	movff	_width,ctoa@w
  9177  006A94  C087  F020         	movff	_width+1,ctoa@w+1
  9178  006A98  EF55  F035         	goto	l3826
  9179  006A9C                     l3824:
  9180  006A9C  FFFF               	dw	65535	; assembler added errata NOP
  9181                           
  9182                           ; BSR set to: 0
  9183  006A9E  0EFF               	movlw	255
  9184  006AA0  2586               	addwf	_width& (0+255),w,b
  9185  006AA2  6E1F               	movwf	ctoa@w^0,c
  9186  006AA4  0EFF               	movlw	255
  9187  006AA6  2187               	addwfc	(_width+1)& (0+255),w,b
  9188  006AA8  6E20               	movwf	(ctoa@w+1)^0,c
  9189  006AAA                     l3826:
  9190  006AAA  FFFF               	dw	65535	; assembler added errata NOP
  9191                           
  9192                           ; BSR set to: 0
  9193                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 267:     dbuf[0] 
      +                          = c;
  9194  006AAC  C01E  F098         	movff	ctoa@c,_dbuf
  9195  006AB0                     
  9196                           ; BSR set to: 0
  9197                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 268:     dbuf[1] 
      +                          = '\0';
  9198  006AB0  0E00               	movlw	0
  9199  006AB2  6F99               	movwf	(_dbuf+1)& (0+255),b
  9200  006AB4                     
  9201                           ; BSR set to: 0
  9202                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 269:     return p
      +                          ad(fp, &dbuf[0], w);
  9203  006AB4  C01C  F011         	movff	ctoa@fp,pad@fp
  9204  006AB8  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  9205  006ABC  0E98               	movlw	low _dbuf
  9206  006ABE  6E13               	movwf	pad@buf^0,c
  9207  006AC0  0E00               	movlw	high _dbuf
  9208  006AC2  6E14               	movwf	(pad@buf+1)^0,c
  9209  006AC4  C01F  F015         	movff	ctoa@w,pad@p
  9210  006AC8  C020  F016         	movff	ctoa@w+1,pad@p+1
  9211  006ACC  ECBB  F039         	call	_pad	;wreg free
  9212  006AD0  C011  F01C         	movff	?_pad,?_ctoa
  9213  006AD4  C012  F01D         	movff	?_pad+1,?_ctoa+1
  9214  006AD8  0012               	return		;funcret
  9215  006ADA  FFFF               	dw	65535	; errata NOP
  9216  006ADC                     __end_of_ctoa:
  9217                           	callstack 0
  9218                           
  9219 ;; *************** function _pad *****************
  9220 ;; Defined at:
  9221 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  9222 ;; Parameters:    Size  Location     Type
  9223 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9224 ;;		 -> vsnprintf@f(6), 
  9225 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9226 ;;		 -> dbuf(32), 
  9227 ;;  p               2   20[COMRAM] int 
  9228 ;; Auto vars:     Size  Location     Type
  9229 ;;  w               2   25[COMRAM] int 
  9230 ;;  i               2   23[COMRAM] int 
  9231 ;; Return value:  Size  Location     Type
  9232 ;;                  2   16[COMRAM] int 
  9233 ;; Registers used:
  9234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9235 ;; Tracked objects:
  9236 ;;		On entry : 0/0
  9237 ;;		On exit  : 0/0
  9238 ;;		Unchanged: 0/0
  9239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9240 ;;      Params:         6       0       0       0       0       0       0
  9241 ;;      Locals:         4       0       0       0       0       0       0
  9242 ;;      Temps:          1       0       0       0       0       0       0
  9243 ;;      Totals:        11       0       0       0       0       0       0
  9244 ;;Total ram usage:       11 bytes
  9245 ;; Hardware stack levels used:    1
  9246 ;; Hardware stack levels required when called:    4
  9247 ;; This function calls:
  9248 ;;		_fputc
  9249 ;;		_fputs
  9250 ;;		_strlen
  9251 ;; This function is called by:
  9252 ;;		_ctoa
  9253 ;;		_dtoa
  9254 ;;		_otoa
  9255 ;;		_utoa
  9256 ;;		_xtoa
  9257 ;; This function uses a non-reentrant model
  9258 ;;
  9259                           
  9260                           	psect	text24
  9261  007376                     __ptext24:
  9262                           	callstack 0
  9263  007376                     _pad:
  9264                           	callstack 0
  9265  007376  FFFF               	dw	65535	; assembler added errata NOP
  9266  007378                     
  9267                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  9268  007378  0100               	movlb	0	; () banked
  9269  00737A  A18A               	btfss	_flags& (0+255),0,b
  9270  00737C  EFC2  F039         	goto	u3911
  9271  007380  EFC5  F039         	goto	u3910
  9272  007384                     u3911:
  9273  007384  FFFF               	dw	65535	; assembler added errata NOP
  9274  007386  EFD0  F039         	goto	l3768
  9275  00738A                     u3910:
  9276  00738A  FFFF               	dw	65535	; assembler added errata NOP
  9277  00738C                     
  9278                           ; BSR set to: 0
  9279                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  9280  00738C  C013  F00A         	movff	pad@buf,fputs@s
  9281  007390  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9282  007394  C011  F00C         	movff	pad@fp,fputs@fp
  9283  007398  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9284  00739C  ECB5  F034         	call	_fputs	;wreg free
  9285  0073A0                     l3768:
  9286  0073A0  FFFF               	dw	65535	; assembler added errata NOP
  9287                           
  9288                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  9289  0073A2  BE16               	btfsc	(pad@p+1)^0,7,c
  9290  0073A4  EFD6  F039         	goto	u3921
  9291  0073A8  EFD9  F039         	goto	u3920
  9292  0073AC                     u3921:
  9293  0073AC  FFFF               	dw	65535	; assembler added errata NOP
  9294  0073AE  EFE0  F039         	goto	l3772
  9295  0073B2                     u3920:
  9296  0073B2  FFFF               	dw	65535	; assembler added errata NOP
  9297  0073B4  C015  F01A         	movff	pad@p,pad@w
  9298  0073B8  C016  F01B         	movff	pad@p+1,pad@w+1
  9299  0073BC  EFE5  F039         	goto	l1142
  9300  0073C0                     l3772:
  9301  0073C0  FFFF               	dw	65535	; assembler added errata NOP
  9302  0073C2  0E00               	movlw	0
  9303  0073C4  6E1B               	movwf	(pad@w+1)^0,c
  9304  0073C6  0E00               	movlw	0
  9305  0073C8  6E1A               	movwf	pad@w^0,c
  9306  0073CA                     l1142:
  9307  0073CA  FFFF               	dw	65535	; assembler added errata NOP
  9308                           
  9309                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  9310  0073CC  0E00               	movlw	0
  9311  0073CE  6E19               	movwf	(pad@i+1)^0,c
  9312  0073D0  0E00               	movlw	0
  9313  0073D2  6E18               	movwf	pad@i^0,c
  9314                           
  9315                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9316  0073D4  EFF9  F039         	goto	l3778
  9317  0073D8                     l3774:
  9318  0073D8  FFFF               	dw	65535	; assembler added errata NOP
  9319                           
  9320                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  9321  0073DA  0E00               	movlw	0
  9322  0073DC  6E02               	movwf	(fputc@c+1)^0,c
  9323  0073DE  0E20               	movlw	32
  9324  0073E0  6E01               	movwf	fputc@c^0,c
  9325  0073E2  C011  F003         	movff	pad@fp,fputc@fp
  9326  0073E6  C012  F004         	movff	pad@fp+1,fputc@fp+1
  9327  0073EA  EC4A  F039         	call	_fputc	;wreg free
  9328  0073EE                     
  9329                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  9330  0073EE  4A18               	infsnz	pad@i^0,f,c
  9331  0073F0  2A19               	incf	(pad@i+1)^0,f,c
  9332  0073F2                     l3778:
  9333  0073F2  FFFF               	dw	65535	; assembler added errata NOP
  9334                           
  9335                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9336  0073F4  501A               	movf	pad@w^0,w,c
  9337  0073F6  5C18               	subwf	pad@i^0,w,c
  9338  0073F8  5019               	movf	(pad@i+1)^0,w,c
  9339  0073FA  0A80               	xorlw	128
  9340  0073FC  6E17               	movwf	??_pad^0,c
  9341  0073FE  501B               	movf	(pad@w+1)^0,w,c
  9342  007400  0A80               	xorlw	128
  9343  007402  5817               	subwfb	??_pad^0,w,c
  9344  007404  A0D8               	btfss	status,0,c
  9345  007406  EF07  F03A         	goto	u3931
  9346  00740A  EF0A  F03A         	goto	u3930
  9347  00740E                     u3931:
  9348  00740E  FFFF               	dw	65535	; assembler added errata NOP
  9349  007410  EFEC  F039         	goto	l3774
  9350  007414                     u3930:
  9351  007414  FFFF               	dw	65535	; assembler added errata NOP
  9352  007416                     
  9353                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  9354  007416  0100               	movlb	0	; () banked
  9355  007418  B18A               	btfsc	_flags& (0+255),0,b
  9356  00741A  EF11  F03A         	goto	u3941
  9357  00741E  EF14  F03A         	goto	u3940
  9358  007422                     u3941:
  9359  007422  FFFF               	dw	65535	; assembler added errata NOP
  9360  007424  EF1F  F03A         	goto	l3782
  9361  007428                     u3940:
  9362  007428  FFFF               	dw	65535	; assembler added errata NOP
  9363  00742A                     
  9364                           ; BSR set to: 0
  9365                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  9366  00742A  C013  F00A         	movff	pad@buf,fputs@s
  9367  00742E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9368  007432  C011  F00C         	movff	pad@fp,fputs@fp
  9369  007436  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9370  00743A  ECB5  F034         	call	_fputs	;wreg free
  9371  00743E                     l3782:
  9372  00743E  FFFF               	dw	65535	; assembler added errata NOP
  9373                           
  9374                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  9375  007440  C013  F001         	movff	pad@buf,strlen@s
  9376  007444  C014  F002         	movff	pad@buf+1,strlen@s+1
  9377  007448  ECDD  F034         	call	_strlen	;wreg free
  9378  00744C  501A               	movf	pad@w^0,w,c
  9379  00744E  2401               	addwf	?_strlen^0,w,c
  9380  007450  6E11               	movwf	?_pad^0,c
  9381  007452  501B               	movf	(pad@w+1)^0,w,c
  9382  007454  2002               	addwfc	(?_strlen+1)^0,w,c
  9383  007456  6E12               	movwf	(?_pad+1)^0,c
  9384  007458  0012               	return		;funcret
  9385  00745A  FFFF               	dw	65535	; errata NOP
  9386  00745C                     __end_of_pad:
  9387                           	callstack 0
  9388                           
  9389 ;; *************** function _strlen *****************
  9390 ;; Defined at:
  9391 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  9392 ;; Parameters:    Size  Location     Type
  9393 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9394 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), STR_8(50), 
  9395 ;;		 -> STR_7(9), STR_6(7), STR_5(9), STR_4(39), 
  9396 ;;		 -> STR_3(9), STR_2(64), STR_1(49), 
  9397 ;; Auto vars:     Size  Location     Type
  9398 ;;  a               2    2[COMRAM] PTR const unsigned char 
  9399 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), STR_8(50), 
  9400 ;;		 -> STR_7(9), STR_6(7), STR_5(9), STR_4(39), 
  9401 ;;		 -> STR_3(9), STR_2(64), STR_1(49), 
  9402 ;; Return value:  Size  Location     Type
  9403 ;;                  2    0[COMRAM] unsigned int 
  9404 ;; Registers used:
  9405 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  9406 ;; Tracked objects:
  9407 ;;		On entry : 0/0
  9408 ;;		On exit  : 0/0
  9409 ;;		Unchanged: 0/0
  9410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9411 ;;      Params:         2       0       0       0       0       0       0
  9412 ;;      Locals:         2       0       0       0       0       0       0
  9413 ;;      Temps:          0       0       0       0       0       0       0
  9414 ;;      Totals:         4       0       0       0       0       0       0
  9415 ;;Total ram usage:        4 bytes
  9416 ;; Hardware stack levels used:    1
  9417 ;; Hardware stack levels required when called:    1
  9418 ;; This function calls:
  9419 ;;		Nothing
  9420 ;; This function is called by:
  9421 ;;		_pad
  9422 ;;		_stoa
  9423 ;; This function uses a non-reentrant model
  9424 ;;
  9425                           
  9426                           	psect	text25
  9427  0069BA                     __ptext25:
  9428                           	callstack 0
  9429  0069BA                     _strlen:
  9430                           	callstack 0
  9431  0069BA  FFFF               	dw	65535	; assembler added errata NOP
  9432  0069BC  C001  F003         	movff	strlen@s,strlen@a
  9433  0069C0  C002  F004         	movff	strlen@s+1,strlen@a+1
  9434  0069C4  EFE7  F034         	goto	l3626
  9435  0069C8                     l3624:
  9436  0069C8  FFFF               	dw	65535	; assembler added errata NOP
  9437  0069CA  4A01               	infsnz	strlen@s^0,f,c
  9438  0069CC  2A02               	incf	(strlen@s+1)^0,f,c
  9439  0069CE                     l3626:
  9440  0069CE  FFFF               	dw	65535	; assembler added errata NOP
  9441  0069D0  C001  FFF6         	movff	strlen@s,tblptrl
  9442  0069D4  C002  FFF7         	movff	strlen@s+1,tblptrh
  9443  0069D8  6AF8               	clrf	tblptru,c
  9444  0069DA  0E05               	movlw	(high __ramtop+-1)
  9445  0069DC  64F7               	cpfsgt	tblptrh,c
  9446  0069DE  D004               	bra	u3667
  9447  0069E0  0008               	tblrd		*
  9448  0069E2  FFFF               	dw	65535	; errata NOP
  9449  0069E4  50F5               	movf	tablat,w,c
  9450  0069E6  D005               	bra	u3660
  9451  0069E8                     u3667:
  9452  0069E8  CFF6 FFE1          	movff	tblptrl,fsr1l
  9453  0069EC  CFF7 FFE2          	movff	tblptrh,fsr1h
  9454  0069F0  50E7               	movf	indf1,w,c
  9455  0069F2                     u3660:
  9456  0069F2  0900               	iorlw	0
  9457  0069F4  A4D8               	btfss	status,2,c
  9458  0069F6  EFFF  F034         	goto	u3671
  9459  0069FA  EF02  F035         	goto	u3670
  9460  0069FE                     u3671:
  9461  0069FE  FFFF               	dw	65535	; assembler added errata NOP
  9462  006A00  EFE4  F034         	goto	l3624
  9463  006A04                     u3670:
  9464  006A04  FFFF               	dw	65535	; assembler added errata NOP
  9465  006A06  5003               	movf	strlen@a^0,w,c
  9466  006A08  5C01               	subwf	strlen@s^0,w,c
  9467  006A0A  6E01               	movwf	?_strlen^0,c
  9468  006A0C  5004               	movf	(strlen@a+1)^0,w,c
  9469  006A0E  5802               	subwfb	(strlen@s+1)^0,w,c
  9470  006A10  6E02               	movwf	(?_strlen+1)^0,c
  9471  006A12  0012               	return		;funcret
  9472  006A14  FFFF               	dw	65535	; errata NOP
  9473  006A16                     __end_of_strlen:
  9474                           	callstack 0
  9475                           
  9476 ;; *************** function _fputs *****************
  9477 ;; Defined at:
  9478 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  9479 ;; Parameters:    Size  Location     Type
  9480 ;;  s               2    9[COMRAM] PTR const unsigned char 
  9481 ;;		 -> dbuf(32), 
  9482 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  9483 ;;		 -> vsnprintf@f(6), 
  9484 ;; Auto vars:     Size  Location     Type
  9485 ;;  i               2   14[COMRAM] int 
  9486 ;;  c               1   13[COMRAM] unsigned char 
  9487 ;; Return value:  Size  Location     Type
  9488 ;;                  2    9[COMRAM] int 
  9489 ;; Registers used:
  9490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9491 ;; Tracked objects:
  9492 ;;		On entry : 0/0
  9493 ;;		On exit  : 0/0
  9494 ;;		Unchanged: 0/0
  9495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9496 ;;      Params:         4       0       0       0       0       0       0
  9497 ;;      Locals:         3       0       0       0       0       0       0
  9498 ;;      Temps:          0       0       0       0       0       0       0
  9499 ;;      Totals:         7       0       0       0       0       0       0
  9500 ;;Total ram usage:        7 bytes
  9501 ;; Hardware stack levels used:    1
  9502 ;; Hardware stack levels required when called:    3
  9503 ;; This function calls:
  9504 ;;		_fputc
  9505 ;; This function is called by:
  9506 ;;		_pad
  9507 ;; This function uses a non-reentrant model
  9508 ;;
  9509                           
  9510                           	psect	text26
  9511  00696A                     __ptext26:
  9512                           	callstack 0
  9513  00696A                     _fputs:
  9514                           	callstack 0
  9515  00696A  FFFF               	dw	65535	; assembler added errata NOP
  9516  00696C  0E00               	movlw	0
  9517  00696E  6E10               	movwf	(fputs@i+1)^0,c
  9518  006970  0E00               	movlw	0
  9519  006972  6E0F               	movwf	fputs@i^0,c
  9520  006974  EFC8  F034         	goto	l3620
  9521  006978                     l3616:
  9522  006978  FFFF               	dw	65535	; assembler added errata NOP
  9523  00697A  C00E  F001         	movff	fputs@c,fputc@c
  9524  00697E  6A02               	clrf	(fputc@c+1)^0,c
  9525  006980  C00C  F003         	movff	fputs@fp,fputc@fp
  9526  006984  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  9527  006988  EC4A  F039         	call	_fputc	;wreg free
  9528  00698C  4A0F               	infsnz	fputs@i^0,f,c
  9529  00698E  2A10               	incf	(fputs@i+1)^0,f,c
  9530  006990                     l3620:
  9531  006990  FFFF               	dw	65535	; assembler added errata NOP
  9532  006992  500F               	movf	fputs@i^0,w,c
  9533  006994  240A               	addwf	fputs@s^0,w,c
  9534  006996  6ED9               	movwf	fsr2l,c
  9535  006998  5010               	movf	(fputs@i+1)^0,w,c
  9536  00699A  200B               	addwfc	(fputs@s+1)^0,w,c
  9537  00699C  6EDA               	movwf	fsr2h,c
  9538  00699E  50DF               	movf	indf2,w,c
  9539  0069A0  6E0E               	movwf	fputs@c^0,c
  9540  0069A2  500E               	movf	fputs@c^0,w,c
  9541  0069A4  A4D8               	btfss	status,2,c
  9542  0069A6  EFD7  F034         	goto	u3651
  9543  0069AA  EFDA  F034         	goto	u3650
  9544  0069AE                     u3651:
  9545  0069AE  FFFF               	dw	65535	; assembler added errata NOP
  9546  0069B0  EFBC  F034         	goto	l3616
  9547  0069B4                     u3650:
  9548  0069B4  FFFF               	dw	65535	; assembler added errata NOP
  9549  0069B6  0012               	return		;funcret
  9550  0069B8  FFFF               	dw	65535	; errata NOP
  9551  0069BA                     __end_of_fputs:
  9552                           	callstack 0
  9553                           
  9554 ;; *************** function _fputc *****************
  9555 ;; Defined at:
  9556 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  9557 ;; Parameters:    Size  Location     Type
  9558 ;;  c               2    0[COMRAM] int 
  9559 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  9560 ;;		 -> vsnprintf@f(6), 
  9561 ;; Auto vars:     Size  Location     Type
  9562 ;;		None
  9563 ;; Return value:  Size  Location     Type
  9564 ;;                  2    0[COMRAM] int 
  9565 ;; Registers used:
  9566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9567 ;; Tracked objects:
  9568 ;;		On entry : 0/0
  9569 ;;		On exit  : 0/0
  9570 ;;		Unchanged: 0/0
  9571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9572 ;;      Params:         4       0       0       0       0       0       0
  9573 ;;      Locals:         0       0       0       0       0       0       0
  9574 ;;      Temps:          5       0       0       0       0       0       0
  9575 ;;      Totals:         9       0       0       0       0       0       0
  9576 ;;Total ram usage:        9 bytes
  9577 ;; Hardware stack levels used:    1
  9578 ;; Hardware stack levels required when called:    2
  9579 ;; This function calls:
  9580 ;;		_putch
  9581 ;; This function is called by:
  9582 ;;		_pad
  9583 ;;		_stoa
  9584 ;;		_vfpfcnvrt
  9585 ;;		_fputs
  9586 ;; This function uses a non-reentrant model
  9587 ;;
  9588                           
  9589                           	psect	text27
  9590  007294                     __ptext27:
  9591                           	callstack 0
  9592  007294                     _fputc:
  9593                           	callstack 0
  9594  007294  FFFF               	dw	65535	; assembler added errata NOP
  9595  007296  5003               	movf	fputc@fp^0,w,c
  9596  007298  1004               	iorwf	(fputc@fp+1)^0,w,c
  9597  00729A  B4D8               	btfsc	status,2,c
  9598  00729C  EF52  F039         	goto	u3611
  9599  0072A0  EF55  F039         	goto	u3610
  9600  0072A4                     u3611:
  9601  0072A4  FFFF               	dw	65535	; assembler added errata NOP
  9602  0072A6  EF60  F039         	goto	l3604
  9603  0072AA                     u3610:
  9604  0072AA  FFFF               	dw	65535	; assembler added errata NOP
  9605  0072AC  5003               	movf	fputc@fp^0,w,c
  9606  0072AE  1004               	iorwf	(fputc@fp+1)^0,w,c
  9607  0072B0  A4D8               	btfss	status,2,c
  9608  0072B2  EF5D  F039         	goto	u3621
  9609  0072B6  EF60  F039         	goto	u3620
  9610  0072BA                     u3621:
  9611  0072BA  FFFF               	dw	65535	; assembler added errata NOP
  9612  0072BC  EF66  F039         	goto	l3606
  9613  0072C0                     u3620:
  9614  0072C0                     l3604:
  9615  0072C0  FFFF               	dw	65535	; assembler added errata NOP
  9616  0072C2  5001               	movf	fputc@c^0,w,c
  9617  0072C4  EC78  F032         	call	_putch
  9618  0072C8  EFB8  F039         	goto	l1417
  9619  0072CC                     l3606:
  9620  0072CC  FFFF               	dw	65535	; assembler added errata NOP
  9621  0072CE  EE20 F004          	lfsr	2,4
  9622  0072D2  5003               	movf	fputc@fp^0,w,c
  9623  0072D4  26D9               	addwf	fsr2l,f,c
  9624  0072D6  5004               	movf	(fputc@fp+1)^0,w,c
  9625  0072D8  22DA               	addwfc	fsr2h,f,c
  9626  0072DA  50DE               	movf	postinc2,w,c
  9627  0072DC  10DE               	iorwf	postinc2,w,c
  9628  0072DE  B4D8               	btfsc	status,2,c
  9629  0072E0  EF74  F039         	goto	u3631
  9630  0072E4  EF77  F039         	goto	u3630
  9631  0072E8                     u3631:
  9632  0072E8  FFFF               	dw	65535	; assembler added errata NOP
  9633  0072EA  EF94  F039         	goto	l3610
  9634  0072EE                     u3630:
  9635  0072EE  FFFF               	dw	65535	; assembler added errata NOP
  9636  0072F0  EE20 F004          	lfsr	2,4
  9637  0072F4  5003               	movf	fputc@fp^0,w,c
  9638  0072F6  26D9               	addwf	fsr2l,f,c
  9639  0072F8  5004               	movf	(fputc@fp+1)^0,w,c
  9640  0072FA  22DA               	addwfc	fsr2h,f,c
  9641  0072FC  EE10 F002          	lfsr	1,2
  9642  007300  5003               	movf	fputc@fp^0,w,c
  9643  007302  26E1               	addwf	fsr1l,f,c
  9644  007304  5004               	movf	(fputc@fp+1)^0,w,c
  9645  007306  22E2               	addwfc	fsr1h,f,c
  9646  007308  50DE               	movf	postinc2,w,c
  9647  00730A  5CE6               	subwf	postinc1,w,c
  9648  00730C  50E6               	movf	postinc1,w,c
  9649  00730E  0A80               	xorlw	128
  9650  007310  6E09               	movwf	(??_fputc+4)^0,c
  9651  007312  50DE               	movf	postinc2,w,c
  9652  007314  0A80               	xorlw	128
  9653  007316  5809               	subwfb	(??_fputc+4)^0,w,c
  9654  007318  B0D8               	btfsc	status,0,c
  9655  00731A  EF91  F039         	goto	u3641
  9656  00731E  EF94  F039         	goto	u3640
  9657  007322                     u3641:
  9658  007322  FFFF               	dw	65535	; assembler added errata NOP
  9659  007324  EFB8  F039         	goto	l1417
  9660  007328                     u3640:
  9661  007328                     l3610:
  9662  007328  FFFF               	dw	65535	; assembler added errata NOP
  9663  00732A  EE20 F002          	lfsr	2,2
  9664  00732E  5003               	movf	fputc@fp^0,w,c
  9665  007330  26D9               	addwf	fsr2l,f,c
  9666  007332  5004               	movf	(fputc@fp+1)^0,w,c
  9667  007334  22DA               	addwfc	fsr2h,f,c
  9668  007336  CFDE F005          	movff	postinc2,??_fputc
  9669  00733A  CFDD F006          	movff	postdec2,??_fputc+1
  9670  00733E  C003  FFD9         	movff	fputc@fp,fsr2l
  9671  007342  C004  FFDA         	movff	fputc@fp+1,fsr2h
  9672  007346  CFDE F007          	movff	postinc2,??_fputc+2
  9673  00734A  CFDD F008          	movff	postdec2,??_fputc+3
  9674  00734E  5005               	movf	??_fputc^0,w,c
  9675  007350  2407               	addwf	(??_fputc+2)^0,w,c
  9676  007352  6ED9               	movwf	fsr2l,c
  9677  007354  5006               	movf	(??_fputc+1)^0,w,c
  9678  007356  2008               	addwfc	(??_fputc+3)^0,w,c
  9679  007358  6EDA               	movwf	fsr2h,c
  9680  00735A  C001  FFDF         	movff	fputc@c,indf2
  9681  00735E  EE20 F002          	lfsr	2,2
  9682  007362  5003               	movf	fputc@fp^0,w,c
  9683  007364  26D9               	addwf	fsr2l,f,c
  9684  007366  5004               	movf	(fputc@fp+1)^0,w,c
  9685  007368  22DA               	addwfc	fsr2h,f,c
  9686  00736A  2ADE               	incf	postinc2,f,c
  9687  00736C  0E00               	movlw	0
  9688  00736E  22DD               	addwfc	postdec2,f,c
  9689  007370                     l1417:
  9690  007370  FFFF               	dw	65535	; assembler added errata NOP
  9691  007372  0012               	return		;funcret
  9692  007374  FFFF               	dw	65535	; errata NOP
  9693  007376                     __end_of_fputc:
  9694                           	callstack 0
  9695                           
  9696 ;; *************** function _putch *****************
  9697 ;; Defined at:
  9698 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  9699 ;; Parameters:    Size  Location     Type
  9700 ;;  c               1    wreg     unsigned char 
  9701 ;; Auto vars:     Size  Location     Type
  9702 ;;  c               1    0[COMRAM] unsigned char 
  9703 ;; Return value:  Size  Location     Type
  9704 ;;                  1    wreg      void 
  9705 ;; Registers used:
  9706 ;;		wreg
  9707 ;; Tracked objects:
  9708 ;;		On entry : 0/0
  9709 ;;		On exit  : 0/0
  9710 ;;		Unchanged: 0/0
  9711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9712 ;;      Params:         0       0       0       0       0       0       0
  9713 ;;      Locals:         0       0       0       0       0       0       0
  9714 ;;      Temps:          0       0       0       0       0       0       0
  9715 ;;      Totals:         0       0       0       0       0       0       0
  9716 ;;Total ram usage:        0 bytes
  9717 ;; Hardware stack levels used:    1
  9718 ;; Hardware stack levels required when called:    1
  9719 ;; This function calls:
  9720 ;;		Nothing
  9721 ;; This function is called by:
  9722 ;;		_fputc
  9723 ;; This function uses a non-reentrant model
  9724 ;;
  9725                           
  9726                           	psect	text28
  9727  0064F0                     __ptext28:
  9728                           	callstack 0
  9729  0064F0                     _putch:
  9730                           	callstack 0
  9731  0064F0  FFFF               	dw	65535	; assembler added errata NOP
  9732  0064F2  0012               	return		;funcret
  9733  0064F4  FFFF               	dw	65535	; errata NOP
  9734  0064F6                     __end_of_putch:
  9735                           	callstack 0
  9736                           
  9737 ;; *************** function _atoi *****************
  9738 ;; Defined at:
  9739 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  9740 ;; Parameters:    Size  Location     Type
  9741 ;;  s               2    7[COMRAM] PTR const unsigned char 
  9742 ;;		 -> STR_10(3), 
  9743 ;; Auto vars:     Size  Location     Type
  9744 ;;  n               2   20[COMRAM] int 
  9745 ;;  neg             2   13[COMRAM] int 
  9746 ;; Return value:  Size  Location     Type
  9747 ;;                  2    7[COMRAM] int 
  9748 ;; Registers used:
  9749 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9750 ;; Tracked objects:
  9751 ;;		On entry : 0/0
  9752 ;;		On exit  : 0/0
  9753 ;;		Unchanged: 0/0
  9754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9755 ;;      Params:         2       0       0       0       0       0       0
  9756 ;;      Locals:         9       0       0       0       0       0       0
  9757 ;;      Temps:          4       0       0       0       0       0       0
  9758 ;;      Totals:        15       0       0       0       0       0       0
  9759 ;;Total ram usage:       15 bytes
  9760 ;; Hardware stack levels used:    1
  9761 ;; Hardware stack levels required when called:    2
  9762 ;; This function calls:
  9763 ;;		___wmul
  9764 ;;		_isdigit
  9765 ;;		_isspace
  9766 ;; This function is called by:
  9767 ;;		_vfpfcnvrt
  9768 ;; This function uses a non-reentrant model
  9769 ;;
  9770                           
  9771                           	psect	text29
  9772  003C68                     __ptext29:
  9773                           	callstack 0
  9774  003C68                     _atoi:
  9775                           	callstack 0
  9776  003C68  FFFF               	dw	65535	; assembler added errata NOP
  9777  003C6A  0E00               	movlw	0
  9778  003C6C  6E16               	movwf	(atoi@n+1)^0,c
  9779  003C6E  0E00               	movlw	0
  9780  003C70  6E15               	movwf	atoi@n^0,c
  9781  003C72  0E00               	movlw	0
  9782  003C74  6E0F               	movwf	(atoi@neg+1)^0,c
  9783  003C76  0E00               	movlw	0
  9784  003C78  6E0E               	movwf	atoi@neg^0,c
  9785  003C7A  EF42  F01E         	goto	l4092
  9786  003C7E                     l4090:
  9787  003C7E  FFFF               	dw	65535	; assembler added errata NOP
  9788  003C80  4A08               	infsnz	atoi@s^0,f,c
  9789  003C82  2A09               	incf	(atoi@s+1)^0,f,c
  9790  003C84                     l4092:
  9791  003C84  FFFF               	dw	65535	; assembler added errata NOP
  9792  003C86  0E01               	movlw	1
  9793  003C88  6E14               	movwf	_atoi$1807^0,c
  9794  003C8A  C008  FFF6         	movff	atoi@s,tblptrl
  9795  003C8E  C009  FFF7         	movff	atoi@s+1,tblptrh
  9796  003C92                     	if	0	;tblptru may be non-zero
  9797  003C92                     	endif
  9798  003C92                     	if	0	;tblptru may be non-zero
  9799  003C92                     	endif
  9800  003C92  0008               	tblrd		*
  9801  003C94  FFFF               	dw	65535	; errata NOP
  9802  003C96  50F5               	movf	tablat,w,c
  9803  003C98  0A20               	xorlw	32
  9804  003C9A  B4D8               	btfsc	status,2,c
  9805  003C9C  EF52  F01E         	goto	u4661
  9806  003CA0  EF55  F01E         	goto	u4660
  9807  003CA4                     u4661:
  9808  003CA4  FFFF               	dw	65535	; assembler added errata NOP
  9809  003CA6  EF76  F01E         	goto	l4100
  9810  003CAA                     u4660:
  9811  003CAA  FFFF               	dw	65535	; assembler added errata NOP
  9812  003CAC  0EF7               	movlw	247
  9813  003CAE  6E0A               	movwf	??_atoi^0,c
  9814  003CB0  0EFF               	movlw	255
  9815  003CB2  6E0B               	movwf	(??_atoi+1)^0,c
  9816  003CB4  C008  FFF6         	movff	atoi@s,tblptrl
  9817  003CB8  C009  FFF7         	movff	atoi@s+1,tblptrh
  9818  003CBC                     	if	0	;tblptru may be non-zero
  9819  003CBC                     	endif
  9820  003CBC                     	if	0	;tblptru may be non-zero
  9821  003CBC                     	endif
  9822  003CBC  0008               	tblrd		*
  9823  003CBE  FFFF               	dw	65535	; errata NOP
  9824  003CC0  50F5               	movf	tablat,w,c
  9825  003CC2  6E0C               	movwf	(??_atoi+2)^0,c
  9826  003CC4  6A0D               	clrf	(??_atoi+3)^0,c
  9827  003CC6  500A               	movf	??_atoi^0,w,c
  9828  003CC8  260C               	addwf	(??_atoi+2)^0,f,c
  9829  003CCA  500B               	movf	(??_atoi+1)^0,w,c
  9830  003CCC  220D               	addwfc	(??_atoi+3)^0,f,c
  9831  003CCE  500D               	movf	(??_atoi+3)^0,w,c
  9832  003CD0  E10A               	bnz	u4670
  9833  003CD2  0E05               	movlw	5
  9834  003CD4  5C0C               	subwf	(??_atoi+2)^0,w,c
  9835  003CD6  A0D8               	btfss	status,0,c
  9836  003CD8  EF70  F01E         	goto	u4671
  9837  003CDC  EF73  F01E         	goto	u4670
  9838  003CE0                     u4671:
  9839  003CE0  FFFF               	dw	65535	; assembler added errata NOP
  9840  003CE2  EF76  F01E         	goto	l4100
  9841  003CE6                     u4670:
  9842  003CE6  FFFF               	dw	65535	; assembler added errata NOP
  9843  003CE8  0E00               	movlw	0
  9844  003CEA  6E14               	movwf	_atoi$1807^0,c
  9845  003CEC                     l4100:
  9846  003CEC  FFFF               	dw	65535	; assembler added errata NOP
  9847  003CEE  C014  F010         	movff	_atoi$1807,_atoi$1806
  9848  003CF2  6A11               	clrf	(_atoi$1806+1)^0,c
  9849  003CF4  5010               	movf	_atoi$1806^0,w,c
  9850  003CF6  1011               	iorwf	(_atoi$1806+1)^0,w,c
  9851  003CF8  A4D8               	btfss	status,2,c
  9852  003CFA  EF81  F01E         	goto	u4681
  9853  003CFE  EF84  F01E         	goto	u4680
  9854  003D02                     u4681:
  9855  003D02  FFFF               	dw	65535	; assembler added errata NOP
  9856  003D04  EF3F  F01E         	goto	l4090
  9857  003D08                     u4680:
  9858  003D08  FFFF               	dw	65535	; assembler added errata NOP
  9859  003D0A  EF91  F01E         	goto	l4110
  9860  003D0E                     l4106:
  9861  003D0E  FFFF               	dw	65535	; assembler added errata NOP
  9862  003D10  0E00               	movlw	0
  9863  003D12  6E0F               	movwf	(atoi@neg+1)^0,c
  9864  003D14  0E01               	movlw	1
  9865  003D16  6E0E               	movwf	atoi@neg^0,c
  9866  003D18                     l4108:
  9867  003D18  FFFF               	dw	65535	; assembler added errata NOP
  9868  003D1A  4A08               	infsnz	atoi@s^0,f,c
  9869  003D1C  2A09               	incf	(atoi@s+1)^0,f,c
  9870  003D1E  EFCB  F01E         	goto	l4116
  9871  003D22                     l4110:
  9872  003D22  FFFF               	dw	65535	; assembler added errata NOP
  9873  003D24  C008  FFF6         	movff	atoi@s,tblptrl
  9874  003D28  C009  FFF7         	movff	atoi@s+1,tblptrh
  9875  003D2C                     	if	0	;tblptru may be non-zero
  9876  003D2C                     	endif
  9877  003D2C                     	if	0	;tblptru may be non-zero
  9878  003D2C                     	endif
  9879  003D2C  0008               	tblrd		*
  9880  003D2E  FFFF               	dw	65535	; errata NOP
  9881  003D30  50F5               	movf	tablat,w,c
  9882  003D32  6E0A               	movwf	??_atoi^0,c
  9883  003D34  6A0B               	clrf	(??_atoi+1)^0,c
  9884                           
  9885                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9886                           ; Switch size 1, requested type "simple"
  9887                           ; Number of cases is 1, Range of values is 0 to 0
  9888                           ; switch strategies available:
  9889                           ; Name         Instructions Cycles
  9890                           ; simple_byte            4     3 (average)
  9891                           ;	Chosen strategy is simple_byte
  9892  003D36  500B               	movf	(??_atoi+1)^0,w,c
  9893  003D38  0A00               	xorlw	0	; case 0
  9894  003D3A  B4D8               	btfsc	status,2,c
  9895  003D3C  EFA2  F01E         	goto	l5754
  9896  003D40  EFCB  F01E         	goto	l4116
  9897  003D44                     l5754:
  9898  003D44  FFFF               	dw	65535	; assembler added errata NOP
  9899                           
  9900                           ; Switch size 1, requested type "simple"
  9901                           ; Number of cases is 2, Range of values is 43 to 45
  9902                           ; switch strategies available:
  9903                           ; Name         Instructions Cycles
  9904                           ; simple_byte            7     4 (average)
  9905                           ;	Chosen strategy is simple_byte
  9906  003D46  500A               	movf	??_atoi^0,w,c
  9907  003D48  0A2B               	xorlw	43	; case 43
  9908  003D4A  B4D8               	btfsc	status,2,c
  9909  003D4C  EF8C  F01E         	goto	l4108
  9910  003D50  0A06               	xorlw	6	; case 45
  9911  003D52  B4D8               	btfsc	status,2,c
  9912  003D54  EF87  F01E         	goto	l4106
  9913  003D58  EFCB  F01E         	goto	l4116
  9914  003D5C                     l4112:
  9915  003D5C  FFFF               	dw	65535	; assembler added errata NOP
  9916  003D5E  C015  F001         	movff	atoi@n,___wmul@multiplier
  9917  003D62  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  9918  003D66  0E00               	movlw	0
  9919  003D68  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9920  003D6A  0E0A               	movlw	10
  9921  003D6C  6E03               	movwf	___wmul@multiplicand^0,c
  9922  003D6E  EC24  F033         	call	___wmul	;wreg free
  9923  003D72  C008  FFF6         	movff	atoi@s,tblptrl
  9924  003D76  C009  FFF7         	movff	atoi@s+1,tblptrh
  9925  003D7A                     	if	0	;tblptru may be non-zero
  9926  003D7A                     	endif
  9927  003D7A                     	if	0	;tblptru may be non-zero
  9928  003D7A                     	endif
  9929  003D7A  0008               	tblrd		*
  9930  003D7C  FFFF               	dw	65535	; errata NOP
  9931  003D7E  50F5               	movf	tablat,w,c
  9932  003D80  5E01               	subwf	?___wmul^0,f,c
  9933  003D82  0E00               	movlw	0
  9934  003D84  5A02               	subwfb	(?___wmul+1)^0,f,c
  9935  003D86  0E30               	movlw	48
  9936  003D88  2401               	addwf	?___wmul^0,w,c
  9937  003D8A  6E15               	movwf	atoi@n^0,c
  9938  003D8C  0E00               	movlw	0
  9939  003D8E  2002               	addwfc	(?___wmul+1)^0,w,c
  9940  003D90  6E16               	movwf	(atoi@n+1)^0,c
  9941  003D92  EF8C  F01E         	goto	l4108
  9942  003D96                     l4116:
  9943  003D96  FFFF               	dw	65535	; assembler added errata NOP
  9944  003D98  0ED0               	movlw	208
  9945  003D9A  6E0A               	movwf	??_atoi^0,c
  9946  003D9C  0EFF               	movlw	255
  9947  003D9E  6E0B               	movwf	(??_atoi+1)^0,c
  9948  003DA0  C008  FFF6         	movff	atoi@s,tblptrl
  9949  003DA4  C009  FFF7         	movff	atoi@s+1,tblptrh
  9950  003DA8                     	if	0	;tblptru may be non-zero
  9951  003DA8                     	endif
  9952  003DA8                     	if	0	;tblptru may be non-zero
  9953  003DA8                     	endif
  9954  003DA8  0008               	tblrd		*
  9955  003DAA  FFFF               	dw	65535	; errata NOP
  9956  003DAC  50F5               	movf	tablat,w,c
  9957  003DAE  6E0C               	movwf	(??_atoi+2)^0,c
  9958  003DB0  6A0D               	clrf	(??_atoi+3)^0,c
  9959  003DB2  500A               	movf	??_atoi^0,w,c
  9960  003DB4  260C               	addwf	(??_atoi+2)^0,f,c
  9961  003DB6  500B               	movf	(??_atoi+1)^0,w,c
  9962  003DB8  220D               	addwfc	(??_atoi+3)^0,f,c
  9963  003DBA  500D               	movf	(??_atoi+3)^0,w,c
  9964  003DBC  E10B               	bnz	u4690
  9965  003DBE  0E0A               	movlw	10
  9966  003DC0  5C0C               	subwf	(??_atoi+2)^0,w,c
  9967  003DC2  A0D8               	btfss	status,0,c
  9968  003DC4  EFE6  F01E         	goto	u4691
  9969  003DC8  EFEA  F01E         	goto	u4690
  9970  003DCC                     u4691:
  9971  003DCC  FFFF               	dw	65535	; assembler added errata NOP
  9972  003DCE  0E01               	movlw	1
  9973  003DD0  EFEC  F01E         	goto	u4700
  9974  003DD4                     u4690:
  9975  003DD4  FFFF               	dw	65535	; assembler added errata NOP
  9976  003DD6  0E00               	movlw	0
  9977  003DD8                     u4700:
  9978  003DD8  FFFF               	dw	65535	; assembler added errata NOP
  9979  003DDA  6E12               	movwf	_atoi$1808^0,c
  9980  003DDC  6A13               	clrf	(_atoi$1808+1)^0,c
  9981  003DDE  5012               	movf	_atoi$1808^0,w,c
  9982  003DE0  1013               	iorwf	(_atoi$1808+1)^0,w,c
  9983  003DE2  A4D8               	btfss	status,2,c
  9984  003DE4  EFF6  F01E         	goto	u4711
  9985  003DE8  EFF9  F01E         	goto	u4710
  9986  003DEC                     u4711:
  9987  003DEC  FFFF               	dw	65535	; assembler added errata NOP
  9988  003DEE  EFAE  F01E         	goto	l4112
  9989  003DF2                     u4710:
  9990  003DF2  FFFF               	dw	65535	; assembler added errata NOP
  9991  003DF4  500E               	movf	atoi@neg^0,w,c
  9992  003DF6  100F               	iorwf	(atoi@neg+1)^0,w,c
  9993  003DF8  A4D8               	btfss	status,2,c
  9994  003DFA  EF01  F01F         	goto	u4721
  9995  003DFE  EF04  F01F         	goto	u4720
  9996  003E02                     u4721:
  9997  003E02  FFFF               	dw	65535	; assembler added errata NOP
  9998  003E04  EF13  F01F         	goto	l1374
  9999  003E08                     u4720:
 10000  003E08  FFFF               	dw	65535	; assembler added errata NOP
 10001  003E0A  C015  F00A         	movff	atoi@n,??_atoi
 10002  003E0E  C016  F00B         	movff	atoi@n+1,??_atoi+1
 10003  003E12  1E0A               	comf	??_atoi^0,f,c
 10004  003E14  1E0B               	comf	(??_atoi+1)^0,f,c
 10005  003E16  4A0A               	infsnz	??_atoi^0,f,c
 10006  003E18  2A0B               	incf	(??_atoi+1)^0,f,c
 10007  003E1A  C00A  F008         	movff	??_atoi,?_atoi
 10008  003E1E  C00B  F009         	movff	??_atoi+1,?_atoi+1
 10009  003E22  EF18  F01F         	goto	l1377
 10010  003E26                     l1374:
 10011  003E26  FFFF               	dw	65535	; assembler added errata NOP
 10012  003E28  C015  F008         	movff	atoi@n,?_atoi
 10013  003E2C  C016  F009         	movff	atoi@n+1,?_atoi+1
 10014  003E30                     l1377:
 10015  003E30  FFFF               	dw	65535	; assembler added errata NOP
 10016  003E32  0012               	return		;funcret
 10017  003E34  FFFF               	dw	65535	; errata NOP
 10018  003E36                     __end_of_atoi:
 10019                           	callstack 0
 10020                           
 10021 ;; *************** function _isspace *****************
 10022 ;; Defined at:
 10023 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
 10024 ;; Parameters:    Size  Location     Type
 10025 ;;  c               2    0[COMRAM] int 
 10026 ;; Auto vars:     Size  Location     Type
 10027 ;;		None
 10028 ;; Return value:  Size  Location     Type
 10029 ;;                  2    0[COMRAM] int 
 10030 ;; Registers used:
 10031 ;;		wreg, status,2, status,0
 10032 ;; Tracked objects:
 10033 ;;		On entry : 0/0
 10034 ;;		On exit  : 0/0
 10035 ;;		Unchanged: 0/0
 10036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10037 ;;      Params:         2       0       0       0       0       0       0
 10038 ;;      Locals:         1       0       0       0       0       0       0
 10039 ;;      Temps:          4       0       0       0       0       0       0
 10040 ;;      Totals:         7       0       0       0       0       0       0
 10041 ;;Total ram usage:        7 bytes
 10042 ;; Hardware stack levels used:    1
 10043 ;; Hardware stack levels required when called:    1
 10044 ;; This function calls:
 10045 ;;		Nothing
 10046 ;; This function is called by:
 10047 ;;		_atoi
 10048 ;; This function uses a non-reentrant model
 10049 ;;
 10050                           
 10051                           	psect	text30
 10052  006A16                     __ptext30:
 10053                           	callstack 0
 10054  006A16                     _isspace:
 10055                           	callstack 24
 10056  006A16  FFFF               	dw	65535	; assembler added errata NOP
 10057  006A18  0E01               	movlw	1
 10058  006A1A  6E07               	movwf	_isspace$1834^0,c
 10059  006A1C  0E20               	movlw	32
 10060  006A1E  1801               	xorwf	isspace@c^0,w,c
 10061  006A20  1002               	iorwf	(isspace@c+1)^0,w,c
 10062  006A22  B4D8               	btfsc	status,2,c
 10063  006A24  EF16  F035         	goto	u4041
 10064  006A28  EF19  F035         	goto	u4040
 10065  006A2C                     u4041:
 10066  006A2C  FFFF               	dw	65535	; assembler added errata NOP
 10067  006A2E  EF35  F035         	goto	l3816
 10068  006A32                     u4040:
 10069  006A32  FFFF               	dw	65535	; assembler added errata NOP
 10070  006A34  0EF7               	movlw	247
 10071  006A36  6E03               	movwf	??_isspace^0,c
 10072  006A38  0EFF               	movlw	255
 10073  006A3A  6E04               	movwf	(??_isspace+1)^0,c
 10074  006A3C  C001  F005         	movff	isspace@c,??_isspace+2
 10075  006A40  C002  F006         	movff	isspace@c+1,??_isspace+3
 10076  006A44  5003               	movf	??_isspace^0,w,c
 10077  006A46  2605               	addwf	(??_isspace+2)^0,f,c
 10078  006A48  5004               	movf	(??_isspace+1)^0,w,c
 10079  006A4A  2206               	addwfc	(??_isspace+3)^0,f,c
 10080  006A4C  5006               	movf	(??_isspace+3)^0,w,c
 10081  006A4E  E10A               	bnz	u4050
 10082  006A50  0E05               	movlw	5
 10083  006A52  5C05               	subwf	(??_isspace+2)^0,w,c
 10084  006A54  A0D8               	btfss	status,0,c
 10085  006A56  EF2F  F035         	goto	u4051
 10086  006A5A  EF32  F035         	goto	u4050
 10087  006A5E                     u4051:
 10088  006A5E  FFFF               	dw	65535	; assembler added errata NOP
 10089  006A60  EF35  F035         	goto	l3816
 10090  006A64                     u4050:
 10091  006A64  FFFF               	dw	65535	; assembler added errata NOP
 10092  006A66  0E00               	movlw	0
 10093  006A68  6E07               	movwf	_isspace$1834^0,c
 10094  006A6A                     l3816:
 10095  006A6A  FFFF               	dw	65535	; assembler added errata NOP
 10096  006A6C  C007  F001         	movff	_isspace$1834,?_isspace
 10097  006A70  6A02               	clrf	(?_isspace+1)^0,c
 10098  006A72  0012               	return		;funcret
 10099  006A74  FFFF               	dw	65535	; errata NOP
 10100  006A76                     __end_of_isspace:
 10101                           	callstack 0
 10102                           
 10103 ;; *************** function _isdigit *****************
 10104 ;; Defined at:
 10105 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 10106 ;; Parameters:    Size  Location     Type
 10107 ;;  c               2    0[COMRAM] int 
 10108 ;; Auto vars:     Size  Location     Type
 10109 ;;		None
 10110 ;; Return value:  Size  Location     Type
 10111 ;;                  2    0[COMRAM] int 
 10112 ;; Registers used:
 10113 ;;		wreg, status,2, status,0
 10114 ;; Tracked objects:
 10115 ;;		On entry : 0/0
 10116 ;;		On exit  : 0/0
 10117 ;;		Unchanged: 0/0
 10118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10119 ;;      Params:         2       0       0       0       0       0       0
 10120 ;;      Locals:         0       0       0       0       0       0       0
 10121 ;;      Temps:          4       0       0       0       0       0       0
 10122 ;;      Totals:         6       0       0       0       0       0       0
 10123 ;;Total ram usage:        6 bytes
 10124 ;; Hardware stack levels used:    1
 10125 ;; Hardware stack levels required when called:    1
 10126 ;; This function calls:
 10127 ;;		Nothing
 10128 ;; This function is called by:
 10129 ;;		_vfpfcnvrt
 10130 ;;		_atoi
 10131 ;; This function uses a non-reentrant model
 10132 ;;
 10133                           
 10134                           	psect	text31
 10135  0067C8                     __ptext31:
 10136                           	callstack 0
 10137  0067C8                     _isdigit:
 10138                           	callstack 25
 10139  0067C8  FFFF               	dw	65535	; assembler added errata NOP
 10140  0067CA  0ED0               	movlw	208
 10141  0067CC  6E03               	movwf	??_isdigit^0,c
 10142  0067CE  0EFF               	movlw	255
 10143  0067D0  6E04               	movwf	(??_isdigit+1)^0,c
 10144  0067D2  C001  F005         	movff	isdigit@c,??_isdigit+2
 10145  0067D6  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 10146  0067DA  5003               	movf	??_isdigit^0,w,c
 10147  0067DC  2605               	addwf	(??_isdigit+2)^0,f,c
 10148  0067DE  5004               	movf	(??_isdigit+1)^0,w,c
 10149  0067E0  2206               	addwfc	(??_isdigit+3)^0,f,c
 10150  0067E2  5006               	movf	(??_isdigit+3)^0,w,c
 10151  0067E4  E10B               	bnz	u4020
 10152  0067E6  0E0A               	movlw	10
 10153  0067E8  5C05               	subwf	(??_isdigit+2)^0,w,c
 10154  0067EA  A0D8               	btfss	status,0,c
 10155  0067EC  EFFA  F033         	goto	u4021
 10156  0067F0  EFFE  F033         	goto	u4020
 10157  0067F4                     u4021:
 10158  0067F4  FFFF               	dw	65535	; assembler added errata NOP
 10159  0067F6  0E01               	movlw	1
 10160  0067F8  EF00  F034         	goto	u4030
 10161  0067FC                     u4020:
 10162  0067FC  FFFF               	dw	65535	; assembler added errata NOP
 10163  0067FE  0E00               	movlw	0
 10164  006800                     u4030:
 10165  006800  FFFF               	dw	65535	; assembler added errata NOP
 10166  006802  6E01               	movwf	?_isdigit^0,c
 10167  006804  6A02               	clrf	(?_isdigit+1)^0,c
 10168  006806  0012               	return		;funcret
 10169  006808  FFFF               	dw	65535	; errata NOP
 10170  00680A                     __end_of_isdigit:
 10171                           	callstack 0
 10172                           
 10173 ;; *************** function ___wmul *****************
 10174 ;; Defined at:
 10175 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 10176 ;; Parameters:    Size  Location     Type
 10177 ;;  multiplier      2    0[COMRAM] unsigned int 
 10178 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10179 ;; Auto vars:     Size  Location     Type
 10180 ;;  product         2    4[COMRAM] unsigned int 
 10181 ;; Return value:  Size  Location     Type
 10182 ;;                  2    0[COMRAM] unsigned int 
 10183 ;; Registers used:
 10184 ;;		wreg, status,2, status,0, prodl, prodh
 10185 ;; Tracked objects:
 10186 ;;		On entry : 0/0
 10187 ;;		On exit  : 0/0
 10188 ;;		Unchanged: 0/0
 10189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10190 ;;      Params:         4       0       0       0       0       0       0
 10191 ;;      Locals:         2       0       0       0       0       0       0
 10192 ;;      Temps:          0       0       0       0       0       0       0
 10193 ;;      Totals:         6       0       0       0       0       0       0
 10194 ;;Total ram usage:        6 bytes
 10195 ;; Hardware stack levels used:    1
 10196 ;; Hardware stack levels required when called:    1
 10197 ;; This function calls:
 10198 ;;		Nothing
 10199 ;; This function is called by:
 10200 ;;		_main
 10201 ;;		_atoi
 10202 ;; This function uses a non-reentrant model
 10203 ;;
 10204                           
 10205                           	psect	text32
 10206  006648                     __ptext32:
 10207                           	callstack 0
 10208  006648                     ___wmul:
 10209                           	callstack 0
 10210  006648  FFFF               	dw	65535	; assembler added errata NOP
 10211  00664A  5001               	movf	___wmul@multiplier^0,w,c
 10212  00664C  0203               	mulwf	___wmul@multiplicand^0,c
 10213  00664E  CFF3 F005          	movff	prodl,___wmul@product
 10214  006652  CFF4 F006          	movff	prodh,___wmul@product+1
 10215  006656  5001               	movf	___wmul@multiplier^0,w,c
 10216  006658  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10217  00665A  50F3               	movf	243,w,c
 10218  00665C  2606               	addwf	(___wmul@product+1)^0,f,c
 10219  00665E  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10220  006660  0203               	mulwf	___wmul@multiplicand^0,c
 10221  006662  50F3               	movf	243,w,c
 10222  006664  2606               	addwf	(___wmul@product+1)^0,f,c
 10223  006666  C005  F001         	movff	___wmul@product,?___wmul
 10224  00666A  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10225  00666E  0012               	return		;funcret
 10226  006670  FFFF               	dw	65535	; errata NOP
 10227  006672                     __end_of___wmul:
 10228                           	callstack 0
 10229                           
 10230 ;; *************** function _serial_tx_char *****************
 10231 ;; Defined at:
 10232 ;;		line 39 in file "serial_rs232.c"
 10233 ;; Parameters:    Size  Location     Type
 10234 ;;  val             1    wreg     unsigned char 
 10235 ;; Auto vars:     Size  Location     Type
 10236 ;;  val             1    0[COMRAM] unsigned char 
 10237 ;; Return value:  Size  Location     Type
 10238 ;;                  1    wreg      void 
 10239 ;; Registers used:
 10240 ;;		wreg
 10241 ;; Tracked objects:
 10242 ;;		On entry : 0/0
 10243 ;;		On exit  : 0/0
 10244 ;;		Unchanged: 0/0
 10245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10246 ;;      Params:         0       0       0       0       0       0       0
 10247 ;;      Locals:         1       0       0       0       0       0       0
 10248 ;;      Temps:          0       0       0       0       0       0       0
 10249 ;;      Totals:         1       0       0       0       0       0       0
 10250 ;;Total ram usage:        1 bytes
 10251 ;; Hardware stack levels used:    1
 10252 ;; Hardware stack levels required when called:    1
 10253 ;; This function calls:
 10254 ;;		Nothing
 10255 ;; This function is called by:
 10256 ;;		_main
 10257 ;;		_serial_tx_string
 10258 ;; This function uses a non-reentrant model
 10259 ;;
 10260                           
 10261                           	psect	text33
 10262  00651E                     __ptext33:
 10263                           	callstack 0
 10264  00651E                     _serial_tx_char:
 10265                           	callstack 0
 10266  00651E  FFFF               	dw	65535	; assembler added errata NOP
 10267                           
 10268                           ;incstack = 0
 10269                           ;serial_tx_char@val stored from wreg
 10270  006520  6E01               	movwf	serial_tx_char@val^0,c
 10271  006522                     
 10272                           ;serial_rs232.c: 40:     TXREG = val;
 10273  006522  C001  FFAD         	movff	serial_tx_char@val,4013	;volatile
 10274  006526                     l24:
 10275  006526  FFFF               	dw	65535	; assembler added errata NOP
 10276  006528  A2AC               	btfss	172,1,c	;volatile
 10277  00652A  EF99  F032         	goto	u6571
 10278  00652E  EF9C  F032         	goto	u6570
 10279  006532                     u6571:
 10280  006532  FFFF               	dw	65535	; assembler added errata NOP
 10281  006534  EF93  F032         	goto	l24
 10282  006538                     u6570:
 10283  006538  FFFF               	dw	65535	; assembler added errata NOP
 10284  00653A  0012               	return		;funcret
 10285  00653C  FFFF               	dw	65535	; errata NOP
 10286  00653E                     __end_of_serial_tx_char:
 10287                           	callstack 0
 10288                           
 10289 ;; *************** function _reach_goal *****************
 10290 ;; Defined at:
 10291 ;;		line 29 in file "stepper_motor.c"
 10292 ;; Parameters:    Size  Location     Type
 10293 ;;  stepper_moto    2    6[COMRAM] PTR struct .
 10294 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
 10295 ;;  goal_to_reac    2    8[COMRAM] int 
 10296 ;; Auto vars:     Size  Location     Type
 10297 ;;		None
 10298 ;; Return value:  Size  Location     Type
 10299 ;;                  2    6[COMRAM] int 
 10300 ;; Registers used:
 10301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10302 ;; Tracked objects:
 10303 ;;		On entry : 0/0
 10304 ;;		On exit  : 0/0
 10305 ;;		Unchanged: 0/0
 10306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10307 ;;      Params:         4       0       0       0       0       0       0
 10308 ;;      Locals:         0       0       0       0       0       0       0
 10309 ;;      Temps:          3       0       0       0       0       0       0
 10310 ;;      Totals:         7       0       0       0       0       0       0
 10311 ;;Total ram usage:        7 bytes
 10312 ;; Hardware stack levels used:    1
 10313 ;; Hardware stack levels required when called:    2
 10314 ;; This function calls:
 10315 ;;		_turn_on_current_coil
 10316 ;;		_update_current_coil
 10317 ;; This function is called by:
 10318 ;;		_main
 10319 ;; This function uses a non-reentrant model
 10320 ;;
 10321                           
 10322                           	psect	text34
 10323  006C94                     __ptext34:
 10324                           	callstack 0
 10325  006C94                     _reach_goal:
 10326                           	callstack 0
 10327  006C94  FFFF               	dw	65535	; assembler added errata NOP
 10328  006C96                     
 10329                           ;stepper_motor.c: 30:     if(stepper_motor -> step_counter >= goal_to_reach){
 10330  006C96  EE20 F002          	lfsr	2,2
 10331  006C9A  5007               	movf	reach_goal@stepper_motor^0,w,c
 10332  006C9C  26D9               	addwf	fsr2l,f,c
 10333  006C9E  5008               	movf	(reach_goal@stepper_motor+1)^0,w,c
 10334  006CA0  22DA               	addwfc	fsr2h,f,c
 10335  006CA2  5009               	movf	reach_goal@goal_to_reach^0,w,c
 10336  006CA4  5CDE               	subwf	postinc2,w,c
 10337  006CA6  50DE               	movf	postinc2,w,c
 10338  006CA8  0A80               	xorlw	128
 10339  006CAA  6E0D               	movwf	(??_reach_goal+2)^0,c
 10340  006CAC  500A               	movf	(reach_goal@goal_to_reach+1)^0,w,c
 10341  006CAE  0A80               	xorlw	128
 10342  006CB0  580D               	subwfb	(??_reach_goal+2)^0,w,c
 10343  006CB2  A0D8               	btfss	status,0,c
 10344  006CB4  EF5E  F036         	goto	u6751
 10345  006CB8  EF61  F036         	goto	u6750
 10346  006CBC                     u6751:
 10347  006CBC  FFFF               	dw	65535	; assembler added errata NOP
 10348  006CBE  EF72  F036         	goto	l5490
 10349  006CC2                     u6750:
 10350  006CC2  FFFF               	dw	65535	; assembler added errata NOP
 10351  006CC4                     
 10352                           ;stepper_motor.c: 31:         stepper_motor -> step_counter = 0;
 10353  006CC4  EE20 F002          	lfsr	2,2
 10354  006CC8  5007               	movf	reach_goal@stepper_motor^0,w,c
 10355  006CCA  26D9               	addwf	fsr2l,f,c
 10356  006CCC  5008               	movf	(reach_goal@stepper_motor+1)^0,w,c
 10357  006CCE  22DA               	addwfc	fsr2h,f,c
 10358  006CD0  0E00               	movlw	0
 10359  006CD2  6EDE               	movwf	postinc2,c
 10360  006CD4  0E00               	movlw	0
 10361  006CD6  6EDD               	movwf	postdec2,c
 10362  006CD8                     
 10363                           ;stepper_motor.c: 32:         return 1;
 10364  006CD8  0E00               	movlw	0
 10365  006CDA  6E08               	movwf	(?_reach_goal+1)^0,c
 10366  006CDC  0E01               	movlw	1
 10367  006CDE  6E07               	movwf	?_reach_goal^0,c
 10368  006CE0  EF83  F036         	goto	l338
 10369  006CE4                     l5490:
 10370  006CE4  FFFF               	dw	65535	; assembler added errata NOP
 10371                           
 10372                           ;stepper_motor.c: 34:         turn_on_current_coil(stepper_motor);
 10373  006CE6  C007  F001         	movff	reach_goal@stepper_motor,turn_on_current_coil@stepper_motor
 10374  006CEA  C008  F002         	movff	reach_goal@stepper_motor+1,turn_on_current_coil@stepper_motor+1
 10375  006CEE  EC84  F033         	call	_turn_on_current_coil	;wreg free
 10376                           
 10377                           ;stepper_motor.c: 35:         update_current_coil(stepper_motor);
 10378  006CF2  C007  F001         	movff	reach_goal@stepper_motor,update_current_coil@stepper_motor
 10379  006CF6  C008  F002         	movff	reach_goal@stepper_motor+1,update_current_coil@stepper_motor+1
 10380  006CFA  EC6F  F038         	call	_update_current_coil	;wreg free
 10381  006CFE                     
 10382                           ;stepper_motor.c: 36:         return 0;
 10383  006CFE  0E00               	movlw	0
 10384  006D00  6E08               	movwf	(?_reach_goal+1)^0,c
 10385  006D02  0E00               	movlw	0
 10386  006D04  6E07               	movwf	?_reach_goal^0,c
 10387  006D06                     l338:
 10388  006D06  FFFF               	dw	65535	; assembler added errata NOP
 10389  006D08  0012               	return		;funcret
 10390  006D0A  FFFF               	dw	65535	; errata NOP
 10391  006D0C                     __end_of_reach_goal:
 10392                           	callstack 0
 10393                           
 10394 ;; *************** function _update_current_coil *****************
 10395 ;; Defined at:
 10396 ;;		line 18 in file "stepper_motor.c"
 10397 ;; Parameters:    Size  Location     Type
 10398 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 10399 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
 10400 ;; Auto vars:     Size  Location     Type
 10401 ;;		None
 10402 ;; Return value:  Size  Location     Type
 10403 ;;                  1    wreg      void 
 10404 ;; Registers used:
 10405 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10406 ;; Tracked objects:
 10407 ;;		On entry : 0/0
 10408 ;;		On exit  : 0/0
 10409 ;;		Unchanged: 0/0
 10410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10411 ;;      Params:         2       0       0       0       0       0       0
 10412 ;;      Locals:         0       0       0       0       0       0       0
 10413 ;;      Temps:          4       0       0       0       0       0       0
 10414 ;;      Totals:         6       0       0       0       0       0       0
 10415 ;;Total ram usage:        6 bytes
 10416 ;; Hardware stack levels used:    1
 10417 ;; Hardware stack levels required when called:    1
 10418 ;; This function calls:
 10419 ;;		Nothing
 10420 ;; This function is called by:
 10421 ;;		_reach_goal
 10422 ;; This function uses a non-reentrant model
 10423 ;;
 10424                           
 10425                           	psect	text35
 10426  0070DE                     __ptext35:
 10427                           	callstack 0
 10428  0070DE                     _update_current_coil:
 10429                           	callstack 0
 10430  0070DE  FFFF               	dw	65535	; assembler added errata NOP
 10431  0070E0                     
 10432                           ;stepper_motor.c: 19:     stepper_motor -> current_coil = stepper_motor -> current_coil 
      +                          + stepper_motor -> direction;
 10433  0070E0  EE20 F004          	lfsr	2,4
 10434  0070E4  5001               	movf	update_current_coil@stepper_motor^0,w,c
 10435  0070E6  26D9               	addwf	fsr2l,f,c
 10436  0070E8  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
 10437  0070EA  22DA               	addwfc	fsr2h,f,c
 10438  0070EC  CFDE F003          	movff	postinc2,??_update_current_coil
 10439  0070F0  CFDD F004          	movff	postdec2,??_update_current_coil+1
 10440  0070F4  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10441  0070F8  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10442  0070FC  CFDE F005          	movff	postinc2,??_update_current_coil+2
 10443  007100  CFDD F006          	movff	postdec2,??_update_current_coil+3
 10444  007104  5003               	movf	??_update_current_coil^0,w,c
 10445  007106  2605               	addwf	(??_update_current_coil+2)^0,f,c
 10446  007108  5004               	movf	(??_update_current_coil+1)^0,w,c
 10447  00710A  2206               	addwfc	(??_update_current_coil+3)^0,f,c
 10448  00710C  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10449  007110  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10450  007114  C005  FFDE         	movff	??_update_current_coil+2,postinc2
 10451  007118  C006  FFDD         	movff	??_update_current_coil+3,postdec2
 10452                           
 10453                           ;stepper_motor.c: 20:     stepper_motor -> step_counter = stepper_motor -> step_counter 
      +                          + 1;
 10454  00711C  EE20 F002          	lfsr	2,2
 10455  007120  5001               	movf	update_current_coil@stepper_motor^0,w,c
 10456  007122  26D9               	addwf	fsr2l,f,c
 10457  007124  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
 10458  007126  22DA               	addwfc	fsr2h,f,c
 10459  007128  CFDE F003          	movff	postinc2,??_update_current_coil
 10460  00712C  CFDD F004          	movff	postdec2,??_update_current_coil+1
 10461  007130  0E01               	movlw	1
 10462  007132  2603               	addwf	??_update_current_coil^0,f,c
 10463  007134  0E00               	movlw	0
 10464  007136  2204               	addwfc	(??_update_current_coil+1)^0,f,c
 10465  007138  EE20 F002          	lfsr	2,2
 10466  00713C  5001               	movf	update_current_coil@stepper_motor^0,w,c
 10467  00713E  26D9               	addwf	fsr2l,f,c
 10468  007140  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
 10469  007142  22DA               	addwfc	fsr2h,f,c
 10470  007144  C003  FFDE         	movff	??_update_current_coil,postinc2
 10471  007148  C004  FFDD         	movff	??_update_current_coil+1,postdec2
 10472                           
 10473                           ;stepper_motor.c: 21:     if (stepper_motor -> current_coil == -1) {
 10474  00714C  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10475  007150  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10476  007154  28DE               	incf	postinc2,w,c
 10477  007156  E106               	bnz	u6441
 10478  007158  28DE               	incf	postinc2,w,c
 10479  00715A  A4D8               	btfss	status,2,c
 10480  00715C  EFB2  F038         	goto	u6441
 10481  007160  EFB5  F038         	goto	u6440
 10482  007164                     u6441:
 10483  007164  FFFF               	dw	65535	; assembler added errata NOP
 10484  007166  EFC0  F038         	goto	l5182
 10485  00716A                     u6440:
 10486  00716A  FFFF               	dw	65535	; assembler added errata NOP
 10487  00716C                     
 10488                           ;stepper_motor.c: 22:         stepper_motor -> current_coil = 3;
 10489  00716C  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10490  007170  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10491  007174  0E03               	movlw	3
 10492  007176  6EDE               	movwf	postinc2,c
 10493  007178  0E00               	movlw	0
 10494  00717A  6EDD               	movwf	postdec2,c
 10495                           
 10496                           ;stepper_motor.c: 23:     } else if(stepper_motor -> current_coil == 4) {
 10497  00717C  EFD9  F038         	goto	l334
 10498  007180                     l5182:
 10499  007180  FFFF               	dw	65535	; assembler added errata NOP
 10500  007182  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10501  007186  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10502  00718A  0E04               	movlw	4
 10503  00718C  18DE               	xorwf	postinc2,w,c
 10504  00718E  10DE               	iorwf	postinc2,w,c
 10505  007190  A4D8               	btfss	status,2,c
 10506  007192  EFCD  F038         	goto	u6451
 10507  007196  EFD0  F038         	goto	u6450
 10508  00719A                     u6451:
 10509  00719A  FFFF               	dw	65535	; assembler added errata NOP
 10510  00719C  EFD9  F038         	goto	l334
 10511  0071A0                     u6450:
 10512  0071A0  FFFF               	dw	65535	; assembler added errata NOP
 10513  0071A2                     
 10514                           ;stepper_motor.c: 24:         stepper_motor -> current_coil = 0;
 10515  0071A2  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10516  0071A6  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10517  0071AA  0E00               	movlw	0
 10518  0071AC  6EDE               	movwf	postinc2,c
 10519  0071AE  0E00               	movlw	0
 10520  0071B0  6EDD               	movwf	postdec2,c
 10521  0071B2                     l334:
 10522  0071B2  FFFF               	dw	65535	; assembler added errata NOP
 10523  0071B4  0012               	return		;funcret
 10524  0071B6  FFFF               	dw	65535	; errata NOP
 10525  0071B8                     __end_of_update_current_coil:
 10526                           	callstack 0
 10527                           
 10528 ;; *************** function _turn_on_current_coil *****************
 10529 ;; Defined at:
 10530 ;;		line 13 in file "stepper_motor.c"
 10531 ;; Parameters:    Size  Location     Type
 10532 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 10533 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
 10534 ;; Auto vars:     Size  Location     Type
 10535 ;;		None
 10536 ;; Return value:  Size  Location     Type
 10537 ;;                  1    wreg      void 
 10538 ;; Registers used:
 10539 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10540 ;; Tracked objects:
 10541 ;;		On entry : 0/0
 10542 ;;		On exit  : 0/0
 10543 ;;		Unchanged: 0/0
 10544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10545 ;;      Params:         2       0       0       0       0       0       0
 10546 ;;      Locals:         0       0       0       0       0       0       0
 10547 ;;      Temps:          4       0       0       0       0       0       0
 10548 ;;      Totals:         6       0       0       0       0       0       0
 10549 ;;Total ram usage:        6 bytes
 10550 ;; Hardware stack levels used:    1
 10551 ;; Hardware stack levels required when called:    1
 10552 ;; This function calls:
 10553 ;;		Nothing
 10554 ;; This function is called by:
 10555 ;;		_reach_goal
 10556 ;; This function uses a non-reentrant model
 10557 ;;
 10558                           
 10559                           	psect	text36
 10560  006708                     __ptext36:
 10561                           	callstack 0
 10562  006708                     _turn_on_current_coil:
 10563                           	callstack 0
 10564  006708  FFFF               	dw	65535	; assembler added errata NOP
 10565  00670A                     
 10566                           ;stepper_motor.c: 14:     LATB = stepper_motor -> hex_coil_register_values[stepper_motor
      +                           -> current_coil];
 10567  00670A  C001  FFD9         	movff	turn_on_current_coil@stepper_motor,fsr2l
 10568  00670E  C002  FFDA         	movff	turn_on_current_coil@stepper_motor+1,fsr2h
 10569  006712  CFDE F003          	movff	postinc2,??_turn_on_current_coil
 10570  006716  CFDD F004          	movff	postdec2,??_turn_on_current_coil+1
 10571  00671A  90D8               	bcf	status,0,c
 10572  00671C  3603               	rlcf	??_turn_on_current_coil^0,f,c
 10573  00671E  3604               	rlcf	(??_turn_on_current_coil+1)^0,f,c
 10574  006720  C001  F005         	movff	turn_on_current_coil@stepper_motor,??_turn_on_current_coil+2
 10575  006724  C002  F006         	movff	turn_on_current_coil@stepper_motor+1,??_turn_on_current_coil+3
 10576  006728  5003               	movf	??_turn_on_current_coil^0,w,c
 10577  00672A  2605               	addwf	(??_turn_on_current_coil+2)^0,f,c
 10578  00672C  5004               	movf	(??_turn_on_current_coil+1)^0,w,c
 10579  00672E  2206               	addwfc	(??_turn_on_current_coil+3)^0,f,c
 10580  006730  0E06               	movlw	6
 10581  006732  2405               	addwf	(??_turn_on_current_coil+2)^0,w,c
 10582  006734  6ED9               	movwf	fsr2l,c
 10583  006736  0E00               	movlw	0
 10584  006738  2006               	addwfc	(??_turn_on_current_coil+3)^0,w,c
 10585  00673A  6EDA               	movwf	fsr2h,c
 10586  00673C  50DF               	movf	indf2,w,c
 10587  00673E  6E8A               	movwf	138,c	;volatile
 10588  006740  0012               	return		;funcret
 10589  006742  FFFF               	dw	65535	; errata NOP
 10590  006744                     __end_of_turn_on_current_coil:
 10591                           	callstack 0
 10592                           
 10593 ;; *************** function _lcd_str *****************
 10594 ;; Defined at:
 10595 ;;		line 62 in file "lcd.c"
 10596 ;; Parameters:    Size  Location     Type
 10597 ;;  str             2    2[COMRAM] PTR const unsigned char 
 10598 ;;		 -> main@greet_str(160), STR_9(22), 
 10599 ;; Auto vars:     Size  Location     Type
 10600 ;;  i               1    6[COMRAM] unsigned char 
 10601 ;; Return value:  Size  Location     Type
 10602 ;;                  1    wreg      void 
 10603 ;; Registers used:
 10604 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10605 ;; Tracked objects:
 10606 ;;		On entry : 0/0
 10607 ;;		On exit  : 0/0
 10608 ;;		Unchanged: 0/0
 10609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10610 ;;      Params:         2       0       0       0       0       0       0
 10611 ;;      Locals:         1       0       0       0       0       0       0
 10612 ;;      Temps:          2       0       0       0       0       0       0
 10613 ;;      Totals:         5       0       0       0       0       0       0
 10614 ;;Total ram usage:        5 bytes
 10615 ;; Hardware stack levels used:    1
 10616 ;; Hardware stack levels required when called:    3
 10617 ;; This function calls:
 10618 ;;		_lcd_dat
 10619 ;; This function is called by:
 10620 ;;		_main
 10621 ;; This function uses a non-reentrant model
 10622 ;;
 10623                           
 10624                           	psect	text37
 10625  006D8A                     __ptext37:
 10626                           	callstack 0
 10627  006D8A                     _lcd_str:
 10628                           	callstack 0
 10629  006D8A  FFFF               	dw	65535	; assembler added errata NOP
 10630  006D8C                     
 10631                           ;lcd.c: 62: void lcd_str(const char* str);lcd.c: 63: {;lcd.c: 64:     unsigned char i=0;
 10632  006D8C  0E00               	movlw	0
 10633  006D8E  6E07               	movwf	lcd_str@i^0,c
 10634                           
 10635                           ;lcd.c: 66:     while(str[i] != 0 )
 10636  006D90  EFE5  F036         	goto	l5386
 10637  006D94                     l5382:
 10638  006D94  FFFF               	dw	65535	; assembler added errata NOP
 10639                           
 10640                           ;lcd.c: 67:     {;lcd.c: 68:       lcd_dat(str[i]);
 10641  006D96  5007               	movf	lcd_str@i^0,w,c
 10642  006D98  2403               	addwf	lcd_str@str^0,w,c
 10643  006D9A  6E05               	movwf	??_lcd_str^0,c
 10644  006D9C  0E00               	movlw	0
 10645  006D9E  2004               	addwfc	(lcd_str@str+1)^0,w,c
 10646  006DA0  6E06               	movwf	(??_lcd_str+1)^0,c
 10647  006DA2  C005  FFF6         	movff	??_lcd_str,tblptrl
 10648  006DA6  C006  FFF7         	movff	??_lcd_str+1,tblptrh
 10649  006DAA  6AF8               	clrf	tblptru,c
 10650  006DAC  0E05               	movlw	(high __ramtop+-1)
 10651  006DAE  64F7               	cpfsgt	tblptrh,c
 10652  006DB0  D004               	bra	u6597
 10653  006DB2  0008               	tblrd		*
 10654  006DB4  FFFF               	dw	65535	; errata NOP
 10655  006DB6  50F5               	movf	tablat,w,c
 10656  006DB8  D005               	bra	u6590
 10657  006DBA                     u6597:
 10658  006DBA  CFF6 FFE1          	movff	tblptrl,fsr1l
 10659  006DBE  CFF7 FFE2          	movff	tblptrh,fsr1h
 10660  006DC2  50E7               	movf	indf1,w,c
 10661  006DC4                     u6590:
 10662  006DC4  EC0F  F033         	call	_lcd_dat
 10663  006DC8                     
 10664                           ;lcd.c: 69:       i++;
 10665  006DC8  2A07               	incf	lcd_str@i^0,f,c
 10666  006DCA                     l5386:
 10667  006DCA  FFFF               	dw	65535	; assembler added errata NOP
 10668                           
 10669                           ;lcd.c: 66:     while(str[i] != 0 )
 10670  006DCC  5007               	movf	lcd_str@i^0,w,c
 10671  006DCE  2403               	addwf	lcd_str@str^0,w,c
 10672  006DD0  6E05               	movwf	??_lcd_str^0,c
 10673  006DD2  0E00               	movlw	0
 10674  006DD4  2004               	addwfc	(lcd_str@str+1)^0,w,c
 10675  006DD6  6E06               	movwf	(??_lcd_str+1)^0,c
 10676  006DD8  C005  FFF6         	movff	??_lcd_str,tblptrl
 10677  006DDC  C006  FFF7         	movff	??_lcd_str+1,tblptrh
 10678  006DE0  6AF8               	clrf	tblptru,c
 10679  006DE2  0E05               	movlw	(high __ramtop+-1)
 10680  006DE4  64F7               	cpfsgt	tblptrh,c
 10681  006DE6  D004               	bra	u6607
 10682  006DE8  0008               	tblrd		*
 10683  006DEA  FFFF               	dw	65535	; errata NOP
 10684  006DEC  50F5               	movf	tablat,w,c
 10685  006DEE  D005               	bra	u6600
 10686  006DF0                     u6607:
 10687  006DF0  CFF6 FFE1          	movff	tblptrl,fsr1l
 10688  006DF4  CFF7 FFE2          	movff	tblptrh,fsr1h
 10689  006DF8  50E7               	movf	indf1,w,c
 10690  006DFA                     u6600:
 10691  006DFA  0900               	iorlw	0
 10692  006DFC  A4D8               	btfss	status,2,c
 10693  006DFE  EF03  F037         	goto	u6611
 10694  006E02  EF06  F037         	goto	u6610
 10695  006E06                     u6611:
 10696  006E06  FFFF               	dw	65535	; assembler added errata NOP
 10697  006E08  EFCA  F036         	goto	l5382
 10698  006E0C                     u6610:
 10699  006E0C  FFFF               	dw	65535	; assembler added errata NOP
 10700  006E0E  0012               	return		;funcret
 10701  006E10  FFFF               	dw	65535	; errata NOP
 10702  006E12                     __end_of_lcd_str:
 10703                           	callstack 0
 10704                           
 10705 ;; *************** function _lcd_dat *****************
 10706 ;; Defined at:
 10707 ;;		line 21 in file "lcd.c"
 10708 ;; Parameters:    Size  Location     Type
 10709 ;;  val             1    wreg     unsigned char 
 10710 ;; Auto vars:     Size  Location     Type
 10711 ;;  val             1    1[COMRAM] unsigned char 
 10712 ;; Return value:  Size  Location     Type
 10713 ;;                  1    wreg      void 
 10714 ;; Registers used:
 10715 ;;		wreg, status,2, cstack
 10716 ;; Tracked objects:
 10717 ;;		On entry : 0/0
 10718 ;;		On exit  : 0/0
 10719 ;;		Unchanged: 0/0
 10720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10721 ;;      Params:         0       0       0       0       0       0       0
 10722 ;;      Locals:         1       0       0       0       0       0       0
 10723 ;;      Temps:          0       0       0       0       0       0       0
 10724 ;;      Totals:         1       0       0       0       0       0       0
 10725 ;;Total ram usage:        1 bytes
 10726 ;; Hardware stack levels used:    1
 10727 ;; Hardware stack levels required when called:    2
 10728 ;; This function calls:
 10729 ;;		_lcd_wr
 10730 ;; This function is called by:
 10731 ;;		_lcd_str
 10732 ;;		_state_translator_fpga_to_micro
 10733 ;; This function uses a non-reentrant model
 10734 ;;
 10735                           
 10736                           	psect	text38
 10737  00661E                     __ptext38:
 10738                           	callstack 0
 10739  00661E                     _lcd_dat:
 10740                           	callstack 0
 10741  00661E  FFFF               	dw	65535	; assembler added errata NOP
 10742                           
 10743                           ;incstack = 0
 10744                           ;lcd_dat@val stored from wreg
 10745  006620  6E02               	movwf	lcd_dat@val^0,c
 10746  006622                     
 10747                           ;lcd.c: 21: void lcd_dat(unsigned char val);lcd.c: 22: {;lcd.c: 23:  PORTEbits.RE1=1;
 10748  006622  8284               	bsf	132,1,c	;volatile
 10749  006624                     
 10750                           ;lcd.c: 24:     lcd_wr(val);
 10751  006624  5002               	movf	lcd_dat@val^0,w,c
 10752  006626  EC81  F032         	call	_lcd_wr
 10753  00662A                     
 10754                           ;lcd.c: 25:     PORTEbits.RE2=1;
 10755  00662A  8484               	bsf	132,2,c	;volatile
 10756  00662C                     
 10757                           ;lcd.c: 26:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10758  00662C  0EC8               	movlw	200
 10759  00662E                     u7247:
 10760  00662E  FFFF               	dw	65535	; errata NOP
 10761  006630  F000               	nop	
 10762  006632  2EE8               	decfsz	wreg,f,c
 10763  006634  D7FC               	bra	u7247
 10764  006636                     
 10765                           ;lcd.c: 27:     PORTEbits.RE1=0;
 10766  006636  9284               	bcf	132,1,c	;volatile
 10767  006638                     
 10768                           ;lcd.c: 28:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10769  006638  0EC8               	movlw	200
 10770  00663A                     u7257:
 10771  00663A  FFFF               	dw	65535	; errata NOP
 10772  00663C  F000               	nop	
 10773  00663E  2EE8               	decfsz	wreg,f,c
 10774  006640  D7FC               	bra	u7257
 10775  006642                     
 10776                           ;lcd.c: 29:  PORTEbits.RE1=1;
 10777  006642  8284               	bsf	132,1,c	;volatile
 10778  006644  0012               	return		;funcret
 10779  006646  FFFF               	dw	65535	; errata NOP
 10780  006648                     __end_of_lcd_dat:
 10781                           	callstack 0
 10782                           
 10783 ;; *************** function _lcd_init *****************
 10784 ;; Defined at:
 10785 ;;		line 32 in file "lcd.c"
 10786 ;; Parameters:    Size  Location     Type
 10787 ;;		None
 10788 ;; Auto vars:     Size  Location     Type
 10789 ;;		None
 10790 ;; Return value:  Size  Location     Type
 10791 ;;                  1    wreg      void 
 10792 ;; Registers used:
 10793 ;;		wreg, status,2, cstack
 10794 ;; Tracked objects:
 10795 ;;		On entry : 0/0
 10796 ;;		On exit  : 0/0
 10797 ;;		Unchanged: 0/0
 10798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10799 ;;      Params:         0       0       0       0       0       0       0
 10800 ;;      Locals:         0       0       0       0       0       0       0
 10801 ;;      Temps:          1       0       0       0       0       0       0
 10802 ;;      Totals:         1       0       0       0       0       0       0
 10803 ;;Total ram usage:        1 bytes
 10804 ;; Hardware stack levels used:    1
 10805 ;; Hardware stack levels required when called:    3
 10806 ;; This function calls:
 10807 ;;		_lcd_cmd
 10808 ;; This function is called by:
 10809 ;;		_main
 10810 ;; This function uses a non-reentrant model
 10811 ;;
 10812                           
 10813                           	psect	text39
 10814  006D0C                     __ptext39:
 10815                           	callstack 0
 10816  006D0C                     _lcd_init:
 10817                           	callstack 0
 10818  006D0C  FFFF               	dw	65535	; assembler added errata NOP
 10819  006D0E  6A83               	clrf	3971,c	;# 
 10820  006D10  0E00               	movlw	0	;# 
 10821  006D12  6E95               	movwf	3989,c	;# 
 10822  006D14  6A84               	clrf	3972,c	;# 
 10823  006D16  0E00               	movlw	0	;# 
 10824  006D18  6E96               	movwf	3990,c	;# 
 10825                           
 10826                           ;lcd.c: 45:  PORTEbits.RE1=0;
 10827  006D1A  9284               	bcf	132,1,c	;volatile
 10828                           
 10829                           ;lcd.c: 46:  PORTEbits.RE2=0;
 10830  006D1C  9484               	bcf	132,2,c	;volatile
 10831  006D1E                     
 10832                           ;lcd.c: 47:  _delay((unsigned long)((30)*(4000000/4000.0)));
 10833  006D1E  0E1E               	movlw	30
 10834  006D20  6E03               	movwf	??_lcd_init^0,c
 10835  006D22  0E3C               	movlw	60
 10836  006D24                     u7267:
 10837  006D24  FFFF               	dw	65535	; errata NOP
 10838  006D26  2EE8               	decfsz	wreg,f,c
 10839  006D28  D7FD               	bra	u7267
 10840  006D2A  2E03               	decfsz	??_lcd_init^0,f,c
 10841  006D2C  D7FB               	bra	u7267
 10842  006D2E  D000               	nop2	
 10843  006D30                     
 10844                           ;lcd.c: 48:  PORTEbits.RE1=1;
 10845  006D30  8284               	bsf	132,1,c	;volatile
 10846  006D32                     
 10847                           ;lcd.c: 50:  lcd_cmd(0x38);
 10848  006D32  0E38               	movlw	56
 10849  006D34  ECFA  F032         	call	_lcd_cmd
 10850  006D38                     
 10851                           ;lcd.c: 51:  _delay((unsigned long)((30)*(4000000/4000.0)));
 10852  006D38  0E1E               	movlw	30
 10853  006D3A  6E03               	movwf	??_lcd_init^0,c
 10854  006D3C  0E3C               	movlw	60
 10855  006D3E                     u7277:
 10856  006D3E  FFFF               	dw	65535	; errata NOP
 10857  006D40  2EE8               	decfsz	wreg,f,c
 10858  006D42  D7FD               	bra	u7277
 10859  006D44  2E03               	decfsz	??_lcd_init^0,f,c
 10860  006D46  D7FB               	bra	u7277
 10861  006D48  D000               	nop2	
 10862                           
 10863                           ;lcd.c: 52:  lcd_cmd(0x38);
 10864  006D4A  0E38               	movlw	56
 10865  006D4C  ECFA  F032         	call	_lcd_cmd
 10866  006D50                     
 10867                           ;lcd.c: 53:     _delay((unsigned long)((30)*(4000000/4000.0)));
 10868  006D50  0E1E               	movlw	30
 10869  006D52  6E03               	movwf	??_lcd_init^0,c
 10870  006D54  0E3C               	movlw	60
 10871  006D56                     u7287:
 10872  006D56  FFFF               	dw	65535	; errata NOP
 10873  006D58  2EE8               	decfsz	wreg,f,c
 10874  006D5A  D7FD               	bra	u7287
 10875  006D5C  2E03               	decfsz	??_lcd_init^0,f,c
 10876  006D5E  D7FB               	bra	u7287
 10877  006D60  D000               	nop2	
 10878  006D62                     
 10879                           ;lcd.c: 54:  lcd_cmd(0x38);
 10880  006D62  0E38               	movlw	56
 10881  006D64  ECFA  F032         	call	_lcd_cmd
 10882  006D68                     
 10883                           ;lcd.c: 55:  lcd_cmd(0x08);
 10884  006D68  0E08               	movlw	8
 10885  006D6A  ECFA  F032         	call	_lcd_cmd
 10886  006D6E                     
 10887                           ;lcd.c: 56:  lcd_cmd(0x0F);
 10888  006D6E  0E0F               	movlw	15
 10889  006D70  ECFA  F032         	call	_lcd_cmd
 10890  006D74                     
 10891                           ;lcd.c: 57:  lcd_cmd(0x01);
 10892  006D74  0E01               	movlw	1
 10893  006D76  ECFA  F032         	call	_lcd_cmd
 10894  006D7A                     
 10895                           ;lcd.c: 58:  lcd_cmd(0x38);
 10896  006D7A  0E38               	movlw	56
 10897  006D7C  ECFA  F032         	call	_lcd_cmd
 10898  006D80                     
 10899                           ;lcd.c: 59:     lcd_cmd(0x80);
 10900  006D80  0E80               	movlw	128
 10901  006D82  ECFA  F032         	call	_lcd_cmd
 10902  006D86  0012               	return		;funcret
 10903  006D88  FFFF               	dw	65535	; errata NOP
 10904  006D8A                     __end_of_lcd_init:
 10905                           	callstack 0
 10906                           
 10907 ;; *************** function _lcd_cmd *****************
 10908 ;; Defined at:
 10909 ;;		line 10 in file "lcd.c"
 10910 ;; Parameters:    Size  Location     Type
 10911 ;;  val             1    wreg     unsigned char 
 10912 ;; Auto vars:     Size  Location     Type
 10913 ;;  val             1    1[COMRAM] unsigned char 
 10914 ;; Return value:  Size  Location     Type
 10915 ;;                  1    wreg      void 
 10916 ;; Registers used:
 10917 ;;		wreg, status,2, cstack
 10918 ;; Tracked objects:
 10919 ;;		On entry : 0/0
 10920 ;;		On exit  : 0/0
 10921 ;;		Unchanged: 0/0
 10922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10923 ;;      Params:         0       0       0       0       0       0       0
 10924 ;;      Locals:         1       0       0       0       0       0       0
 10925 ;;      Temps:          0       0       0       0       0       0       0
 10926 ;;      Totals:         1       0       0       0       0       0       0
 10927 ;;Total ram usage:        1 bytes
 10928 ;; Hardware stack levels used:    1
 10929 ;; Hardware stack levels required when called:    2
 10930 ;; This function calls:
 10931 ;;		_lcd_wr
 10932 ;; This function is called by:
 10933 ;;		_main
 10934 ;;		_lcd_init
 10935 ;; This function uses a non-reentrant model
 10936 ;;
 10937                           
 10938                           	psect	text40
 10939  0065F4                     __ptext40:
 10940                           	callstack 0
 10941  0065F4                     _lcd_cmd:
 10942                           	callstack 0
 10943  0065F4  FFFF               	dw	65535	; assembler added errata NOP
 10944                           
 10945                           ;incstack = 0
 10946                           ;lcd_cmd@val stored from wreg
 10947  0065F6  6E02               	movwf	lcd_cmd@val^0,c
 10948  0065F8                     
 10949                           ;lcd.c: 10: void lcd_cmd(unsigned char val);lcd.c: 11: {;lcd.c: 12:  PORTEbits.RE1=1;
 10950  0065F8  8284               	bsf	132,1,c	;volatile
 10951  0065FA                     
 10952                           ;lcd.c: 13:     lcd_wr(val);
 10953  0065FA  5002               	movf	lcd_cmd@val^0,w,c
 10954  0065FC  EC81  F032         	call	_lcd_wr
 10955  006600                     
 10956                           ;lcd.c: 14:     PORTEbits.RE2=0;
 10957  006600  9484               	bcf	132,2,c	;volatile
 10958  006602                     
 10959                           ;lcd.c: 15:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10960  006602  0EC8               	movlw	200
 10961  006604                     u7297:
 10962  006604  FFFF               	dw	65535	; errata NOP
 10963  006606  F000               	nop	
 10964  006608  2EE8               	decfsz	wreg,f,c
 10965  00660A  D7FC               	bra	u7297
 10966  00660C                     
 10967                           ;lcd.c: 16:     PORTEbits.RE1=0;
 10968  00660C  9284               	bcf	132,1,c	;volatile
 10969  00660E                     
 10970                           ;lcd.c: 17:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10971  00660E  0EC8               	movlw	200
 10972  006610                     u7307:
 10973  006610  FFFF               	dw	65535	; errata NOP
 10974  006612  F000               	nop	
 10975  006614  2EE8               	decfsz	wreg,f,c
 10976  006616  D7FC               	bra	u7307
 10977  006618                     
 10978                           ;lcd.c: 18:  PORTEbits.RE1=1;
 10979  006618  8284               	bsf	132,1,c	;volatile
 10980  00661A  0012               	return		;funcret
 10981  00661C  FFFF               	dw	65535	; errata NOP
 10982  00661E                     __end_of_lcd_cmd:
 10983                           	callstack 0
 10984                           
 10985 ;; *************** function _lcd_wr *****************
 10986 ;; Defined at:
 10987 ;;		line 5 in file "lcd.c"
 10988 ;; Parameters:    Size  Location     Type
 10989 ;;  val             1    wreg     unsigned char 
 10990 ;; Auto vars:     Size  Location     Type
 10991 ;;  val             1    0[COMRAM] unsigned char 
 10992 ;; Return value:  Size  Location     Type
 10993 ;;                  1    wreg      void 
 10994 ;; Registers used:
 10995 ;;		wreg
 10996 ;; Tracked objects:
 10997 ;;		On entry : 0/0
 10998 ;;		On exit  : 0/0
 10999 ;;		Unchanged: 0/0
 11000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11001 ;;      Params:         0       0       0       0       0       0       0
 11002 ;;      Locals:         1       0       0       0       0       0       0
 11003 ;;      Temps:          0       0       0       0       0       0       0
 11004 ;;      Totals:         1       0       0       0       0       0       0
 11005 ;;Total ram usage:        1 bytes
 11006 ;; Hardware stack levels used:    1
 11007 ;; Hardware stack levels required when called:    1
 11008 ;; This function calls:
 11009 ;;		Nothing
 11010 ;; This function is called by:
 11011 ;;		_lcd_cmd
 11012 ;;		_lcd_dat
 11013 ;; This function uses a non-reentrant model
 11014 ;;
 11015                           
 11016                           	psect	text41
 11017  006502                     __ptext41:
 11018                           	callstack 0
 11019  006502                     _lcd_wr:
 11020                           	callstack 0
 11021  006502  FFFF               	dw	65535	; assembler added errata NOP
 11022                           
 11023                           ;incstack = 0
 11024                           ;lcd_wr@val stored from wreg
 11025  006504  6E01               	movwf	lcd_wr@val^0,c
 11026  006506                     
 11027                           ;lcd.c: 5: void lcd_wr(unsigned char val);lcd.c: 6: {;lcd.c: 7:     PORTD=val;
 11028  006506  C001  FF83         	movff	lcd_wr@val,3971	;volatile
 11029  00650A  0012               	return		;funcret
 11030  00650C  FFFF               	dw	65535	; errata NOP
 11031  00650E                     __end_of_lcd_wr:
 11032                           	callstack 0
 11033                           
 11034 ;; *************** function _init_timer_2 *****************
 11035 ;; Defined at:
 11036 ;;		line 27 in file "timer.c"
 11037 ;; Parameters:    Size  Location     Type
 11038 ;;		None
 11039 ;; Auto vars:     Size  Location     Type
 11040 ;;		None
 11041 ;; Return value:  Size  Location     Type
 11042 ;;                  1    wreg      void 
 11043 ;; Registers used:
 11044 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11045 ;; Tracked objects:
 11046 ;;		On entry : 0/0
 11047 ;;		On exit  : 0/0
 11048 ;;		Unchanged: 0/0
 11049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11050 ;;      Params:         0       0       0       0       0       0       0
 11051 ;;      Locals:         0       4       0       0       0       0       0
 11052 ;;      Temps:          0       0       0       0       0       0       0
 11053 ;;      Totals:         0       4       0       0       0       0       0
 11054 ;;Total ram usage:        4 bytes
 11055 ;; Hardware stack levels used:    1
 11056 ;; Hardware stack levels required when called:    2
 11057 ;; This function calls:
 11058 ;;		___fladd
 11059 ;;		___fldiv
 11060 ;;		___flmul
 11061 ;;		___fltol
 11062 ;; This function is called by:
 11063 ;;		_main
 11064 ;; This function uses a non-reentrant model
 11065 ;;
 11066                           
 11067                           	psect	text42
 11068  007010                     __ptext42:
 11069                           	callstack 0
 11070  007010                     _init_timer_2:
 11071                           	callstack 0
 11072  007010  FFFF               	dw	65535	; assembler added errata NOP
 11073  007012                     
 11074                           ;timer.c: 29:     T2CON = 0;
 11075  007012  0E00               	movlw	0
 11076  007014  6ECA               	movwf	202,c	;volatile
 11077                           
 11078                           ;timer.c: 30:     TMR2 = 0;
 11079  007016  0E00               	movlw	0
 11080  007018  6ECC               	movwf	204,c	;volatile
 11081  00701A                     
 11082                           ;timer.c: 32:     T2CONbits.TMR2ON = 1;
 11083  00701A  84CA               	bsf	202,2,c	;volatile
 11084  00701C                     
 11085                           ;timer.c: 33:     T2CONbits.T2CKPS0 = 1;
 11086  00701C  80CA               	bsf	202,0,c	;volatile
 11087  00701E                     
 11088                           ;timer.c: 34:     T2CONbits.T2CKPS1 = 1;
 11089  00701E  82CA               	bsf	202,1,c	;volatile
 11090  007020                     
 11091                           ;timer.c: 36:     PR2 = (uint8_t) (((pwm_period / (4*t_osc*tmr2_prescaler)) - 1)*4);
 11092  007020  0E00               	movlw	0
 11093  007022  6E63               	movwf	___fladd@a^0,c
 11094  007024  0E00               	movlw	0
 11095  007026  6E64               	movwf	(___fladd@a+1)^0,c
 11096  007028  0E80               	movlw	128
 11097  00702A  6E65               	movwf	(___fladd@a+2)^0,c
 11098  00702C  0EBF               	movlw	191
 11099  00702E  6E66               	movwf	(___fladd@a+3)^0,c
 11100  007030  0EBD               	movlw	189
 11101  007032  6E31               	movwf	___flmul@a^0,c
 11102  007034  0E37               	movlw	55
 11103  007036  6E32               	movwf	(___flmul@a+1)^0,c
 11104  007038  0E86               	movlw	134
 11105  00703A  6E33               	movwf	(___flmul@a+2)^0,c
 11106  00703C  0E36               	movlw	54
 11107  00703E  6E34               	movwf	(___flmul@a+3)^0,c
 11108  007040  C0ED  F02D         	movff	_tmr2_prescaler,___flmul@b
 11109  007044  C0EE  F02E         	movff	_tmr2_prescaler+1,___flmul@b+1
 11110  007048  C0EF  F02F         	movff	_tmr2_prescaler+2,___flmul@b+2
 11111  00704C  C0F0  F030         	movff	_tmr2_prescaler+3,___flmul@b+3
 11112  007050  EC93  F010         	call	___flmul	;wreg free
 11113  007054  C02D  F04A         	movff	?___flmul,___fldiv@a
 11114  007058  C02E  F04B         	movff	?___flmul+1,___fldiv@a+1
 11115  00705C  C02F  F04C         	movff	?___flmul+2,___fldiv@a+2
 11116  007060  C030  F04D         	movff	?___flmul+3,___fldiv@a+3
 11117  007064  0E0A               	movlw	10
 11118  007066  6E46               	movwf	___fldiv@b^0,c
 11119  007068  0ED7               	movlw	215
 11120  00706A  6E47               	movwf	(___fldiv@b+1)^0,c
 11121  00706C  0EA3               	movlw	163
 11122  00706E  6E48               	movwf	(___fldiv@b+2)^0,c
 11123  007070  0E3C               	movlw	60
 11124  007072  6E49               	movwf	(___fldiv@b+3)^0,c
 11125  007074  ECE5  F012         	call	___fldiv	;wreg free
 11126  007078  C046  F05F         	movff	?___fldiv,___fladd@b
 11127  00707C  C047  F060         	movff	?___fldiv+1,___fladd@b+1
 11128  007080  C048  F061         	movff	?___fldiv+2,___fladd@b+2
 11129  007084  C049  F062         	movff	?___fldiv+3,___fladd@b+3
 11130  007088  ECBF  F00D         	call	___fladd	;wreg free
 11131  00708C  C05F  F0D4         	movff	?___fladd,_init_timer_2$2131
 11132  007090  C060  F0D5         	movff	?___fladd+1,_init_timer_2$2131+1
 11133  007094  C061  F0D6         	movff	?___fladd+2,_init_timer_2$2131+2
 11134  007098  C062  F0D7         	movff	?___fladd+3,_init_timer_2$2131+3
 11135  00709C                     
 11136                           ;timer.c: 36:     PR2 = (uint8_t) (((pwm_period / (4*t_osc*tmr2_prescaler)) - 1)*4);
 11137  00709C  0E00               	movlw	0
 11138  00709E  6E31               	movwf	___flmul@a^0,c
 11139  0070A0  0E00               	movlw	0
 11140  0070A2  6E32               	movwf	(___flmul@a+1)^0,c
 11141  0070A4  0E80               	movlw	128
 11142  0070A6  6E33               	movwf	(___flmul@a+2)^0,c
 11143  0070A8  0E40               	movlw	64
 11144  0070AA  6E34               	movwf	(___flmul@a+3)^0,c
 11145  0070AC  C0D4  F02D         	movff	_init_timer_2$2131,___flmul@b
 11146  0070B0  C0D5  F02E         	movff	_init_timer_2$2131+1,___flmul@b+1
 11147  0070B4  C0D6  F02F         	movff	_init_timer_2$2131+2,___flmul@b+2
 11148  0070B8  C0D7  F030         	movff	_init_timer_2$2131+3,___flmul@b+3
 11149  0070BC  EC93  F010         	call	___flmul	;wreg free
 11150  0070C0  C02D  F0CA         	movff	?___flmul,___fltol@f1
 11151  0070C4  C02E  F0CB         	movff	?___flmul+1,___fltol@f1+1
 11152  0070C8  C02F  F0CC         	movff	?___flmul+2,___fltol@f1+2
 11153  0070CC  C030  F0CD         	movff	?___flmul+3,___fltol@f1+3
 11154  0070D0  ECB8  F03C         	call	___fltol	;wreg free
 11155  0070D4  0100               	movlb	0	; () banked
 11156  0070D6  51CA               	movf	?___fltol& (0+255),w,b
 11157  0070D8  6ECB               	movwf	203,c	;volatile
 11158  0070DA                     
 11159                           ; BSR set to: 0
 11160  0070DA  0012               	return		;funcret
 11161  0070DC  FFFF               	dw	65535	; errata NOP
 11162  0070DE                     __end_of_init_timer_2:
 11163                           	callstack 0
 11164                           
 11165 ;; *************** function _init_timer_0 *****************
 11166 ;; Defined at:
 11167 ;;		line 11 in file "timer.c"
 11168 ;; Parameters:    Size  Location     Type
 11169 ;;		None
 11170 ;; Auto vars:     Size  Location     Type
 11171 ;;		None
 11172 ;; Return value:  Size  Location     Type
 11173 ;;                  1    wreg      void 
 11174 ;; Registers used:
 11175 ;;		wreg, status,2
 11176 ;; Tracked objects:
 11177 ;;		On entry : 0/0
 11178 ;;		On exit  : 0/0
 11179 ;;		Unchanged: 0/0
 11180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11181 ;;      Params:         0       0       0       0       0       0       0
 11182 ;;      Locals:         0       0       0       0       0       0       0
 11183 ;;      Temps:          0       0       0       0       0       0       0
 11184 ;;      Totals:         0       0       0       0       0       0       0
 11185 ;;Total ram usage:        0 bytes
 11186 ;; Hardware stack levels used:    1
 11187 ;; Hardware stack levels required when called:    1
 11188 ;; This function calls:
 11189 ;;		Nothing
 11190 ;; This function is called by:
 11191 ;;		_main
 11192 ;; This function uses a non-reentrant model
 11193 ;;
 11194                           
 11195                           	psect	text43
 11196  00655E                     __ptext43:
 11197                           	callstack 0
 11198  00655E                     _init_timer_0:
 11199                           	callstack 0
 11200  00655E  FFFF               	dw	65535	; assembler added errata NOP
 11201  006560                     
 11202                           ;timer.c: 13:     T0CON = 0;
 11203  006560  0E00               	movlw	0
 11204  006562  6ED5               	movwf	213,c	;volatile
 11205                           
 11206                           ;timer.c: 15:     TMR0L = 0x96;
 11207  006564  0E96               	movlw	150
 11208  006566  6ED6               	movwf	214,c	;volatile
 11209                           
 11210                           ;timer.c: 16:     TMR0H = 0x98;
 11211  006568  0E98               	movlw	152
 11212  00656A  6ED7               	movwf	215,c	;volatile
 11213  00656C                     
 11214                           ;timer.c: 17:     INTCONbits.TMR0IE = 1;
 11215  00656C  8AF2               	bsf	242,5,c	;volatile
 11216  00656E                     
 11217                           ;timer.c: 18:     T0CONbits.T08BIT = 0;
 11218  00656E  9CD5               	bcf	213,6,c	;volatile
 11219  006570                     
 11220                           ;timer.c: 19:     T0CONbits.T0CS = 0;
 11221  006570  9AD5               	bcf	213,5,c	;volatile
 11222  006572                     
 11223                           ;timer.c: 20:     T0CONbits.PSA = 0;
 11224  006572  96D5               	bcf	213,3,c	;volatile
 11225  006574                     
 11226                           ;timer.c: 21:     T0CONbits.T0PS0 = 1;
 11227  006574  80D5               	bsf	213,0,c	;volatile
 11228  006576                     
 11229                           ;timer.c: 22:     T0CONbits.T0PS1 = 1;
 11230  006576  82D5               	bsf	213,1,c	;volatile
 11231  006578                     
 11232                           ;timer.c: 23:     T0CONbits.T0PS2 = 1;
 11233  006578  84D5               	bsf	213,2,c	;volatile
 11234  00657A                     
 11235                           ;timer.c: 24:     T0CONbits.TMR0ON = 1;
 11236  00657A  8ED5               	bsf	213,7,c	;volatile
 11237  00657C  0012               	return		;funcret
 11238  00657E  FFFF               	dw	65535	; errata NOP
 11239  006580                     __end_of_init_timer_0:
 11240                           	callstack 0
 11241                           
 11242 ;; *************** function _init_stepper *****************
 11243 ;; Defined at:
 11244 ;;		line 4 in file "stepper_motor.c"
 11245 ;; Parameters:    Size  Location     Type
 11246 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 11247 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
 11248 ;;  current_coil    2    2[COMRAM] int 
 11249 ;;  step_counter    2    4[COMRAM] int 
 11250 ;;  direction       2    6[COMRAM] int 
 11251 ;;  hex_coil_reg    2    8[COMRAM] PTR int 
 11252 ;;		 -> hex_end_effector_values(8), hex_joint_values(8), 
 11253 ;; Auto vars:     Size  Location     Type
 11254 ;;  i               2   14[COMRAM] int 
 11255 ;; Return value:  Size  Location     Type
 11256 ;;                  1    wreg      void 
 11257 ;; Registers used:
 11258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11259 ;; Tracked objects:
 11260 ;;		On entry : 0/0
 11261 ;;		On exit  : 0/0
 11262 ;;		Unchanged: 0/0
 11263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11264 ;;      Params:        10       0       0       0       0       0       0
 11265 ;;      Locals:         2       0       0       0       0       0       0
 11266 ;;      Temps:          4       0       0       0       0       0       0
 11267 ;;      Totals:        16       0       0       0       0       0       0
 11268 ;;Total ram usage:       16 bytes
 11269 ;; Hardware stack levels used:    1
 11270 ;; Hardware stack levels required when called:    1
 11271 ;; This function calls:
 11272 ;;		Nothing
 11273 ;; This function is called by:
 11274 ;;		_main
 11275 ;; This function uses a non-reentrant model
 11276 ;;
 11277                           
 11278                           	psect	text44
 11279  006E9C                     __ptext44:
 11280                           	callstack 0
 11281  006E9C                     _init_stepper:
 11282                           	callstack 0
 11283  006E9C  FFFF               	dw	65535	; assembler added errata NOP
 11284  006E9E                     
 11285                           ;stepper_motor.c: 5:     for (int i = 0; i < 4; i++) {
 11286  006E9E  0E00               	movlw	0
 11287  006EA0  6E10               	movwf	(init_stepper@i+1)^0,c
 11288  006EA2  0E00               	movlw	0
 11289  006EA4  6E0F               	movwf	init_stepper@i^0,c
 11290  006EA6                     l5344:
 11291  006EA6  FFFF               	dw	65535	; assembler added errata NOP
 11292                           
 11293                           ;stepper_motor.c: 6:        stepper_motor -> hex_coil_register_values[i] = hex_coil_regi
      +                          ster_values[i];
 11294  006EA8  90D8               	bcf	status,0,c
 11295  006EAA  340F               	rlcf	init_stepper@i^0,w,c
 11296  006EAC  6ED9               	movwf	fsr2l,c
 11297  006EAE  3410               	rlcf	(init_stepper@i+1)^0,w,c
 11298  006EB0  6EDA               	movwf	fsr2h,c
 11299  006EB2  5009               	movf	init_stepper@hex_coil_register_values^0,w,c
 11300  006EB4  26D9               	addwf	fsr2l,f,c
 11301  006EB6  500A               	movf	(init_stepper@hex_coil_register_values+1)^0,w,c
 11302  006EB8  22DA               	addwfc	fsr2h,f,c
 11303  006EBA  C00F  F00B         	movff	init_stepper@i,??_init_stepper
 11304  006EBE  C010  F00C         	movff	init_stepper@i+1,??_init_stepper+1
 11305  006EC2  90D8               	bcf	status,0,c
 11306  006EC4  360B               	rlcf	??_init_stepper^0,f,c
 11307  006EC6  360C               	rlcf	(??_init_stepper+1)^0,f,c
 11308  006EC8  C001  F00D         	movff	init_stepper@stepper_motor,??_init_stepper+2
 11309  006ECC  C002  F00E         	movff	init_stepper@stepper_motor+1,??_init_stepper+3
 11310  006ED0  500B               	movf	??_init_stepper^0,w,c
 11311  006ED2  260D               	addwf	(??_init_stepper+2)^0,f,c
 11312  006ED4  500C               	movf	(??_init_stepper+1)^0,w,c
 11313  006ED6  220E               	addwfc	(??_init_stepper+3)^0,f,c
 11314  006ED8  0E06               	movlw	6
 11315  006EDA  240D               	addwf	(??_init_stepper+2)^0,w,c
 11316  006EDC  6EE1               	movwf	fsr1l,c
 11317  006EDE  0E00               	movlw	0
 11318  006EE0  200E               	addwfc	(??_init_stepper+3)^0,w,c
 11319  006EE2  6EE2               	movwf	fsr1h,c
 11320  006EE4  CFDE FFE6          	movff	postinc2,postinc1
 11321  006EE8  CFDD FFE5          	movff	postdec2,postdec1
 11322  006EEC                     
 11323                           ;stepper_motor.c: 7:     }
 11324  006EEC  4A0F               	infsnz	init_stepper@i^0,f,c
 11325  006EEE  2A10               	incf	(init_stepper@i+1)^0,f,c
 11326  006EF0  BE10               	btfsc	(init_stepper@i+1)^0,7,c
 11327  006EF2  EF84  F037         	goto	u6581
 11328  006EF6  5010               	movf	(init_stepper@i+1)^0,w,c
 11329  006EF8  E10A               	bnz	u6580
 11330  006EFA  0E04               	movlw	4
 11331  006EFC  5C0F               	subwf	init_stepper@i^0,w,c
 11332  006EFE  A0D8               	btfss	status,0,c
 11333  006F00  EF84  F037         	goto	u6581
 11334  006F04  EF87  F037         	goto	u6580
 11335  006F08                     u6581:
 11336  006F08  FFFF               	dw	65535	; assembler added errata NOP
 11337  006F0A  EF53  F037         	goto	l5344
 11338  006F0E                     u6580:
 11339  006F0E  FFFF               	dw	65535	; assembler added errata NOP
 11340  006F10                     
 11341                           ;stepper_motor.c: 8:     stepper_motor -> current_coil = current_coil;
 11342  006F10  C001  FFD9         	movff	init_stepper@stepper_motor,fsr2l
 11343  006F14  C002  FFDA         	movff	init_stepper@stepper_motor+1,fsr2h
 11344  006F18  C003  FFDE         	movff	init_stepper@current_coil,postinc2
 11345  006F1C  C004  FFDD         	movff	init_stepper@current_coil+1,postdec2
 11346  006F20                     
 11347                           ;stepper_motor.c: 9:     stepper_motor -> step_counter = step_counter;
 11348  006F20  EE20 F002          	lfsr	2,2
 11349  006F24  5001               	movf	init_stepper@stepper_motor^0,w,c
 11350  006F26  26D9               	addwf	fsr2l,f,c
 11351  006F28  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
 11352  006F2A  22DA               	addwfc	fsr2h,f,c
 11353  006F2C  C005  FFDE         	movff	init_stepper@step_counter,postinc2
 11354  006F30  C006  FFDD         	movff	init_stepper@step_counter+1,postdec2
 11355  006F34                     
 11356                           ;stepper_motor.c: 10:     stepper_motor -> direction = direction;
 11357  006F34  EE20 F004          	lfsr	2,4
 11358  006F38  5001               	movf	init_stepper@stepper_motor^0,w,c
 11359  006F3A  26D9               	addwf	fsr2l,f,c
 11360  006F3C  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
 11361  006F3E  22DA               	addwfc	fsr2h,f,c
 11362  006F40  C007  FFDE         	movff	init_stepper@direction,postinc2
 11363  006F44  C008  FFDD         	movff	init_stepper@direction+1,postdec2
 11364  006F48  0012               	return		;funcret
 11365  006F4A  FFFF               	dw	65535	; errata NOP
 11366  006F4C                     __end_of_init_stepper:
 11367                           	callstack 0
 11368                           
 11369 ;; *************** function _init_interrupts *****************
 11370 ;; Defined at:
 11371 ;;		line 81 in file "init_PIC.c"
 11372 ;; Parameters:    Size  Location     Type
 11373 ;;		None
 11374 ;; Auto vars:     Size  Location     Type
 11375 ;;		None
 11376 ;; Return value:  Size  Location     Type
 11377 ;;                  1    wreg      void 
 11378 ;; Registers used:
 11379 ;;		None
 11380 ;; Tracked objects:
 11381 ;;		On entry : 0/0
 11382 ;;		On exit  : 0/0
 11383 ;;		Unchanged: 0/0
 11384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11385 ;;      Params:         0       0       0       0       0       0       0
 11386 ;;      Locals:         0       0       0       0       0       0       0
 11387 ;;      Temps:          0       0       0       0       0       0       0
 11388 ;;      Totals:         0       0       0       0       0       0       0
 11389 ;;Total ram usage:        0 bytes
 11390 ;; Hardware stack levels used:    1
 11391 ;; Hardware stack levels required when called:    1
 11392 ;; This function calls:
 11393 ;;		Nothing
 11394 ;; This function is called by:
 11395 ;;		_main
 11396 ;; This function uses a non-reentrant model
 11397 ;;
 11398                           
 11399                           	psect	text45
 11400  0064F6                     __ptext45:
 11401                           	callstack 0
 11402  0064F6                     _init_interrupts:
 11403                           	callstack 0
 11404  0064F6  FFFF               	dw	65535	; assembler added errata NOP
 11405  0064F8                     
 11406                           ;init_PIC.c: 83:     PIR1bits.RCIF = 0;
 11407  0064F8  9A9E               	bcf	158,5,c	;volatile
 11408                           
 11409                           ;init_PIC.c: 84:     PIE1bits.RCIE = 1;
 11410  0064FA  8A9D               	bsf	157,5,c	;volatile
 11411                           
 11412                           ;init_PIC.c: 85:     INTCONbits.PEIE = 1;
 11413  0064FC  8CF2               	bsf	242,6,c	;volatile
 11414  0064FE  0012               	return		;funcret
 11415  006500  FFFF               	dw	65535	; errata NOP
 11416  006502                     __end_of_init_interrupts:
 11417                           	callstack 0
 11418                           
 11419 ;; *************** function _init_ccp1 *****************
 11420 ;; Defined at:
 11421 ;;		line 41 in file "timer.c"
 11422 ;; Parameters:    Size  Location     Type
 11423 ;;		None
 11424 ;; Auto vars:     Size  Location     Type
 11425 ;;		None
 11426 ;; Return value:  Size  Location     Type
 11427 ;;                  1    wreg      void 
 11428 ;; Registers used:
 11429 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11430 ;; Tracked objects:
 11431 ;;		On entry : 0/0
 11432 ;;		On exit  : 0/0
 11433 ;;		Unchanged: 0/0
 11434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11435 ;;      Params:         0       0       0       0       0       0       0
 11436 ;;      Locals:         0       0       0       0       0       0       0
 11437 ;;      Temps:          0       0       0       0       0       0       0
 11438 ;;      Totals:         0       0       0       0       0       0       0
 11439 ;;Total ram usage:        0 bytes
 11440 ;; Hardware stack levels used:    1
 11441 ;; Hardware stack levels required when called:    3
 11442 ;; This function calls:
 11443 ;;		_update_pwm_duty_ccp1
 11444 ;; This function is called by:
 11445 ;;		_main
 11446 ;; This function uses a non-reentrant model
 11447 ;;
 11448                           
 11449                           	psect	text46
 11450  006580                     __ptext46:
 11451                           	callstack 0
 11452  006580                     _init_ccp1:
 11453                           	callstack 0
 11454  006580  FFFF               	dw	65535	; assembler added errata NOP
 11455  006582                     
 11456                           ;timer.c: 42:     CCP1CON = 0x00;
 11457  006582  0E00               	movlw	0
 11458  006584  6EBD               	movwf	189,c	;volatile
 11459  006586                     
 11460                           ;timer.c: 45:     update_pwm_duty_ccp1(5e-3);
 11461  006586  0E0A               	movlw	10
 11462  006588  0100               	movlb	0	; () banked
 11463  00658A  6FD4               	movwf	update_pwm_duty_ccp1@time_up& (0+255),b
 11464  00658C  0ED7               	movlw	215
 11465  00658E  6FD5               	movwf	(update_pwm_duty_ccp1@time_up+1)& (0+255),b
 11466  006590  0EA3               	movlw	163
 11467  006592  6FD6               	movwf	(update_pwm_duty_ccp1@time_up+2)& (0+255),b
 11468  006594  0E3B               	movlw	59
 11469  006596  6FD7               	movwf	(update_pwm_duty_ccp1@time_up+3)& (0+255),b
 11470  006598  ECA6  F037         	call	_update_pwm_duty_ccp1	;wreg free
 11471  00659C                     
 11472                           ;timer.c: 48:     CCP1CONbits.CCP1M3 = 1;
 11473  00659C  86BD               	bsf	189,3,c	;volatile
 11474  00659E                     
 11475                           ;timer.c: 49:     CCP1CONbits.CCP1M2 = 1;
 11476  00659E  84BD               	bsf	189,2,c	;volatile
 11477  0065A0  0012               	return		;funcret
 11478  0065A2  FFFF               	dw	65535	; errata NOP
 11479  0065A4                     __end_of_init_ccp1:
 11480                           	callstack 0
 11481                           
 11482 ;; *************** function _update_pwm_duty_ccp1 *****************
 11483 ;; Defined at:
 11484 ;;		line 53 in file "timer.c"
 11485 ;; Parameters:    Size  Location     Type
 11486 ;;  time_up         4   28[BANK0 ] void 
 11487 ;; Auto vars:     Size  Location     Type
 11488 ;;  new_duty        2   34[BANK0 ] unsigned short 
 11489 ;;  lsbs_duty       1   36[BANK0 ] unsigned char 
 11490 ;; Return value:  Size  Location     Type
 11491 ;;                  1    wreg      void 
 11492 ;; Registers used:
 11493 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11494 ;; Tracked objects:
 11495 ;;		On entry : 0/0
 11496 ;;		On exit  : 0/0
 11497 ;;		Unchanged: 0/0
 11498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11499 ;;      Params:         0       4       0       0       0       0       0
 11500 ;;      Locals:         0       3       0       0       0       0       0
 11501 ;;      Temps:          0       2       0       0       0       0       0
 11502 ;;      Totals:         0       9       0       0       0       0       0
 11503 ;;Total ram usage:        9 bytes
 11504 ;; Hardware stack levels used:    1
 11505 ;; Hardware stack levels required when called:    2
 11506 ;; This function calls:
 11507 ;;		___fldiv
 11508 ;;		___flmul
 11509 ;;		___fltol
 11510 ;; This function is called by:
 11511 ;;		_init_ccp1
 11512 ;; This function uses a non-reentrant model
 11513 ;;
 11514                           
 11515                           	psect	text47
 11516  006F4C                     __ptext47:
 11517                           	callstack 0
 11518  006F4C                     _update_pwm_duty_ccp1:
 11519                           	callstack 0
 11520  006F4C  FFFF               	dw	65535	; assembler added errata NOP
 11521  006F4E                     
 11522                           ;timer.c: 56:     uint16_t new_duty;;timer.c: 57:     uint8_t lsbs_duty;;timer.c: 59:   
      +                            new_duty = (0.001) / (t_osc * tmr2_prescaler);
 11523  006F4E  0EBD               	movlw	189
 11524  006F50  6E31               	movwf	___flmul@a^0,c
 11525  006F52  0E37               	movlw	55
 11526  006F54  6E32               	movwf	(___flmul@a+1)^0,c
 11527  006F56  0E86               	movlw	134
 11528  006F58  6E33               	movwf	(___flmul@a+2)^0,c
 11529  006F5A  0E35               	movlw	53
 11530  006F5C  6E34               	movwf	(___flmul@a+3)^0,c
 11531  006F5E  C0ED  F02D         	movff	_tmr2_prescaler,___flmul@b
 11532  006F62  C0EE  F02E         	movff	_tmr2_prescaler+1,___flmul@b+1
 11533  006F66  C0EF  F02F         	movff	_tmr2_prescaler+2,___flmul@b+2
 11534  006F6A  C0F0  F030         	movff	_tmr2_prescaler+3,___flmul@b+3
 11535  006F6E  EC93  F010         	call	___flmul	;wreg free
 11536  006F72  C02D  F04A         	movff	?___flmul,___fldiv@a
 11537  006F76  C02E  F04B         	movff	?___flmul+1,___fldiv@a+1
 11538  006F7A  C02F  F04C         	movff	?___flmul+2,___fldiv@a+2
 11539  006F7E  C030  F04D         	movff	?___flmul+3,___fldiv@a+3
 11540  006F82  0E6F               	movlw	111
 11541  006F84  6E46               	movwf	___fldiv@b^0,c
 11542  006F86  0E12               	movlw	18
 11543  006F88  6E47               	movwf	(___fldiv@b+1)^0,c
 11544  006F8A  0E83               	movlw	131
 11545  006F8C  6E48               	movwf	(___fldiv@b+2)^0,c
 11546  006F8E  0E3A               	movlw	58
 11547  006F90  6E49               	movwf	(___fldiv@b+3)^0,c
 11548  006F92  ECE5  F012         	call	___fldiv	;wreg free
 11549  006F96  C046  F0CA         	movff	?___fldiv,___fltol@f1
 11550  006F9A  C047  F0CB         	movff	?___fldiv+1,___fltol@f1+1
 11551  006F9E  C048  F0CC         	movff	?___fldiv+2,___fltol@f1+2
 11552  006FA2  C049  F0CD         	movff	?___fldiv+3,___fltol@f1+3
 11553  006FA6  ECB8  F03C         	call	___fltol	;wreg free
 11554  006FAA  C0CA  F0DA         	movff	?___fltol,update_pwm_duty_ccp1@new_duty
 11555  006FAE  C0CB  F0DB         	movff	?___fltol+1,update_pwm_duty_ccp1@new_duty+1
 11556  006FB2                     
 11557                           ;timer.c: 60:     lsbs_duty = (uint8_t) new_duty;
 11558  006FB2  C0DA  F0DC         	movff	update_pwm_duty_ccp1@new_duty,update_pwm_duty_ccp1@lsbs_duty
 11559  006FB6                     
 11560                           ;timer.c: 64:     if (lsbs_duty & 0x01) CCP1CON |= (1u << 4);
 11561  006FB6  0100               	movlb	0	; () banked
 11562  006FB8  A1DC               	btfss	update_pwm_duty_ccp1@lsbs_duty& (0+255),0,b
 11563  006FBA  EFE1  F037         	goto	u6421
 11564  006FBE  EFE4  F037         	goto	u6420
 11565  006FC2                     u6421:
 11566  006FC2  FFFF               	dw	65535	; assembler added errata NOP
 11567  006FC4  EFE8  F037         	goto	l5164
 11568  006FC8                     u6420:
 11569  006FC8  FFFF               	dw	65535	; assembler added errata NOP
 11570  006FCA                     
 11571                           ; BSR set to: 0
 11572  006FCA  88BD               	bsf	189,4,c	;volatile
 11573  006FCC  EFEA  F037         	goto	l5166
 11574  006FD0                     l5164:
 11575  006FD0  FFFF               	dw	65535	; assembler added errata NOP
 11576                           
 11577                           ; BSR set to: 0
 11578  006FD2  98BD               	bcf	189,4,c	;volatile
 11579  006FD4                     l5166:
 11580  006FD4  FFFF               	dw	65535	; assembler added errata NOP
 11581                           
 11582                           ; BSR set to: 0
 11583                           ;timer.c: 67:     if (lsbs_duty & 0x02) CCP1CON |= (1u << 5);
 11584  006FD6  A3DC               	btfss	update_pwm_duty_ccp1@lsbs_duty& (0+255),1,b
 11585  006FD8  EFF0  F037         	goto	u6431
 11586  006FDC  EFF3  F037         	goto	u6430
 11587  006FE0                     u6431:
 11588  006FE0  FFFF               	dw	65535	; assembler added errata NOP
 11589  006FE2  EFF7  F037         	goto	l5170
 11590  006FE6                     u6430:
 11591  006FE6  FFFF               	dw	65535	; assembler added errata NOP
 11592  006FE8                     
 11593                           ; BSR set to: 0
 11594  006FE8  8ABD               	bsf	189,5,c	;volatile
 11595  006FEA  EFF9  F037         	goto	l5172
 11596  006FEE                     l5170:
 11597  006FEE  FFFF               	dw	65535	; assembler added errata NOP
 11598                           
 11599                           ; BSR set to: 0
 11600  006FF0  9ABD               	bcf	189,5,c	;volatile
 11601  006FF2                     l5172:
 11602  006FF2  FFFF               	dw	65535	; assembler added errata NOP
 11603                           
 11604                           ; BSR set to: 0
 11605                           ;timer.c: 71:     CCPR1L = (uint8_t) (new_duty >> 2);
 11606  006FF4  C0DA  F0D8         	movff	update_pwm_duty_ccp1@new_duty,??_update_pwm_duty_ccp1
 11607  006FF8  C0DB  F0D9         	movff	update_pwm_duty_ccp1@new_duty+1,??_update_pwm_duty_ccp1+1
 11608  006FFC  90D8               	bcf	status,0,c
 11609  006FFE  33D9               	rrcf	(??_update_pwm_duty_ccp1+1)& (0+255),f,b
 11610  007000  33D8               	rrcf	??_update_pwm_duty_ccp1& (0+255),f,b
 11611  007002  90D8               	bcf	status,0,c
 11612  007004  33D9               	rrcf	(??_update_pwm_duty_ccp1+1)& (0+255),f,b
 11613  007006  33D8               	rrcf	??_update_pwm_duty_ccp1& (0+255),f,b
 11614  007008  51D8               	movf	??_update_pwm_duty_ccp1& (0+255),w,b
 11615  00700A  6EBE               	movwf	190,c	;volatile
 11616  00700C                     
 11617                           ; BSR set to: 0
 11618  00700C  0012               	return		;funcret
 11619  00700E  FFFF               	dw	65535	; errata NOP
 11620  007010                     __end_of_update_pwm_duty_ccp1:
 11621                           	callstack 0
 11622                           
 11623 ;; *************** function ___fldiv *****************
 11624 ;; Defined at:
 11625 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 11626 ;; Parameters:    Size  Location     Type
 11627 ;;  b               4   69[COMRAM] void 
 11628 ;;  a               4   73[COMRAM] void 
 11629 ;; Auto vars:     Size  Location     Type
 11630 ;;  grs             4   88[COMRAM] unsigned long 
 11631 ;;  rem             4   81[COMRAM] unsigned long 
 11632 ;;  new_exp         2   86[COMRAM] short 
 11633 ;;  aexp            1   93[COMRAM] unsigned char 
 11634 ;;  bexp            1   92[COMRAM] unsigned char 
 11635 ;;  sign            1   85[COMRAM] unsigned char 
 11636 ;; Return value:  Size  Location     Type
 11637 ;;                  4   69[COMRAM] unsigned char 
 11638 ;; Registers used:
 11639 ;;		wreg, status,2, status,0
 11640 ;; Tracked objects:
 11641 ;;		On entry : 0/0
 11642 ;;		On exit  : 0/0
 11643 ;;		Unchanged: 0/0
 11644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11645 ;;      Params:         8       0       0       0       0       0       0
 11646 ;;      Locals:        13       0       0       0       0       0       0
 11647 ;;      Temps:          4       0       0       0       0       0       0
 11648 ;;      Totals:        25       0       0       0       0       0       0
 11649 ;;Total ram usage:       25 bytes
 11650 ;; Hardware stack levels used:    1
 11651 ;; Hardware stack levels required when called:    1
 11652 ;; This function calls:
 11653 ;;		Nothing
 11654 ;; This function is called by:
 11655 ;;		_init_timer_2
 11656 ;;		_update_pwm_duty_ccp1
 11657 ;; This function uses a non-reentrant model
 11658 ;;
 11659                           
 11660                           	psect	text48
 11661  0025CA                     __ptext48:
 11662                           	callstack 0
 11663  0025CA                     ___fldiv:
 11664                           	callstack 0
 11665  0025CA  FFFF               	dw	65535	; assembler added errata NOP
 11666  0025CC  5049               	movf	(___fldiv@b+3)^0,w,c
 11667  0025CE  0B80               	andlw	128
 11668  0025D0  6E56               	movwf	___fldiv@sign^0,c
 11669  0025D2  5049               	movf	(___fldiv@b+3)^0,w,c
 11670  0025D4  2449               	addwf	(___fldiv@b+3)^0,w,c
 11671  0025D6  6E5D               	movwf	___fldiv@bexp^0,c
 11672  0025D8  AE48               	btfss	(___fldiv@b+2)^0,7,c
 11673  0025DA  EFF1  F012         	goto	u5661
 11674  0025DE  EFF4  F012         	goto	u5660
 11675  0025E2                     u5661:
 11676  0025E2  FFFF               	dw	65535	; assembler added errata NOP
 11677  0025E4  EFF6  F012         	goto	l4692
 11678  0025E8                     u5660:
 11679  0025E8  FFFF               	dw	65535	; assembler added errata NOP
 11680  0025EA  805D               	bsf	___fldiv@bexp^0,0,c
 11681  0025EC                     l4692:
 11682  0025EC  FFFF               	dw	65535	; assembler added errata NOP
 11683  0025EE  505D               	movf	___fldiv@bexp^0,w,c
 11684  0025F0  B4D8               	btfsc	status,2,c
 11685  0025F2  EFFD  F012         	goto	u5671
 11686  0025F6  EF00  F013         	goto	u5670
 11687  0025FA                     u5671:
 11688  0025FA  FFFF               	dw	65535	; assembler added errata NOP
 11689  0025FC  EF19  F013         	goto	l4702
 11690  002600                     u5670:
 11691  002600  FFFF               	dw	65535	; assembler added errata NOP
 11692  002602  285D               	incf	___fldiv@bexp^0,w,c
 11693  002604  A4D8               	btfss	status,2,c
 11694  002606  EF07  F013         	goto	u5681
 11695  00260A  EF0A  F013         	goto	u5680
 11696  00260E                     u5681:
 11697  00260E  FFFF               	dw	65535	; assembler added errata NOP
 11698  002610  EF13  F013         	goto	l4698
 11699  002614                     u5680:
 11700  002614  FFFF               	dw	65535	; assembler added errata NOP
 11701  002616  0E00               	movlw	0
 11702  002618  6E46               	movwf	___fldiv@b^0,c
 11703  00261A  0E00               	movlw	0
 11704  00261C  6E47               	movwf	(___fldiv@b+1)^0,c
 11705  00261E  0E00               	movlw	0
 11706  002620  6E48               	movwf	(___fldiv@b+2)^0,c
 11707  002622  0E00               	movlw	0
 11708  002624  6E49               	movwf	(___fldiv@b+3)^0,c
 11709  002626                     l4698:
 11710  002626  FFFF               	dw	65535	; assembler added errata NOP
 11711  002628  8E48               	bsf	(___fldiv@b+2)^0,7,c
 11712  00262A  0E00               	movlw	0
 11713  00262C  6E49               	movwf	(___fldiv@b+3)^0,c
 11714  00262E  EF22  F013         	goto	l4704
 11715  002632                     l4702:
 11716  002632  FFFF               	dw	65535	; assembler added errata NOP
 11717  002634  0E00               	movlw	0
 11718  002636  6E46               	movwf	___fldiv@b^0,c
 11719  002638  0E00               	movlw	0
 11720  00263A  6E47               	movwf	(___fldiv@b+1)^0,c
 11721  00263C  0E00               	movlw	0
 11722  00263E  6E48               	movwf	(___fldiv@b+2)^0,c
 11723  002640  0E00               	movlw	0
 11724  002642  6E49               	movwf	(___fldiv@b+3)^0,c
 11725  002644                     l4704:
 11726  002644  FFFF               	dw	65535	; assembler added errata NOP
 11727  002646  504D               	movf	(___fldiv@a+3)^0,w,c
 11728  002648  0B80               	andlw	128
 11729  00264A  1A56               	xorwf	___fldiv@sign^0,f,c
 11730  00264C  504D               	movf	(___fldiv@a+3)^0,w,c
 11731  00264E  244D               	addwf	(___fldiv@a+3)^0,w,c
 11732  002650  6E5E               	movwf	___fldiv@aexp^0,c
 11733  002652  AE4C               	btfss	(___fldiv@a+2)^0,7,c
 11734  002654  EF2E  F013         	goto	u5691
 11735  002658  EF31  F013         	goto	u5690
 11736  00265C                     u5691:
 11737  00265C  FFFF               	dw	65535	; assembler added errata NOP
 11738  00265E  EF33  F013         	goto	l4712
 11739  002662                     u5690:
 11740  002662  FFFF               	dw	65535	; assembler added errata NOP
 11741  002664  805E               	bsf	___fldiv@aexp^0,0,c
 11742  002666                     l4712:
 11743  002666  FFFF               	dw	65535	; assembler added errata NOP
 11744  002668  505E               	movf	___fldiv@aexp^0,w,c
 11745  00266A  B4D8               	btfsc	status,2,c
 11746  00266C  EF3A  F013         	goto	u5701
 11747  002670  EF3D  F013         	goto	u5700
 11748  002674                     u5701:
 11749  002674  FFFF               	dw	65535	; assembler added errata NOP
 11750  002676  EF56  F013         	goto	l4722
 11751  00267A                     u5700:
 11752  00267A  FFFF               	dw	65535	; assembler added errata NOP
 11753  00267C  285E               	incf	___fldiv@aexp^0,w,c
 11754  00267E  A4D8               	btfss	status,2,c
 11755  002680  EF44  F013         	goto	u5711
 11756  002684  EF47  F013         	goto	u5710
 11757  002688                     u5711:
 11758  002688  FFFF               	dw	65535	; assembler added errata NOP
 11759  00268A  EF50  F013         	goto	l4718
 11760  00268E                     u5710:
 11761  00268E  FFFF               	dw	65535	; assembler added errata NOP
 11762  002690  0E00               	movlw	0
 11763  002692  6E4A               	movwf	___fldiv@a^0,c
 11764  002694  0E00               	movlw	0
 11765  002696  6E4B               	movwf	(___fldiv@a+1)^0,c
 11766  002698  0E00               	movlw	0
 11767  00269A  6E4C               	movwf	(___fldiv@a+2)^0,c
 11768  00269C  0E00               	movlw	0
 11769  00269E  6E4D               	movwf	(___fldiv@a+3)^0,c
 11770  0026A0                     l4718:
 11771  0026A0  FFFF               	dw	65535	; assembler added errata NOP
 11772  0026A2  8E4C               	bsf	(___fldiv@a+2)^0,7,c
 11773  0026A4  0E00               	movlw	0
 11774  0026A6  6E4D               	movwf	(___fldiv@a+3)^0,c
 11775  0026A8  EF5F  F013         	goto	l4724
 11776  0026AC                     l4722:
 11777  0026AC  FFFF               	dw	65535	; assembler added errata NOP
 11778  0026AE  0E00               	movlw	0
 11779  0026B0  6E4A               	movwf	___fldiv@a^0,c
 11780  0026B2  0E00               	movlw	0
 11781  0026B4  6E4B               	movwf	(___fldiv@a+1)^0,c
 11782  0026B6  0E00               	movlw	0
 11783  0026B8  6E4C               	movwf	(___fldiv@a+2)^0,c
 11784  0026BA  0E00               	movlw	0
 11785  0026BC  6E4D               	movwf	(___fldiv@a+3)^0,c
 11786  0026BE                     l4724:
 11787  0026BE  FFFF               	dw	65535	; assembler added errata NOP
 11788  0026C0  504A               	movf	___fldiv@a^0,w,c
 11789  0026C2  104B               	iorwf	(___fldiv@a+1)^0,w,c
 11790  0026C4  104C               	iorwf	(___fldiv@a+2)^0,w,c
 11791  0026C6  104D               	iorwf	(___fldiv@a+3)^0,w,c
 11792  0026C8  A4D8               	btfss	status,2,c
 11793  0026CA  EF69  F013         	goto	u5721
 11794  0026CE  EF6C  F013         	goto	u5720
 11795  0026D2                     u5721:
 11796  0026D2  FFFF               	dw	65535	; assembler added errata NOP
 11797  0026D4  EF86  F013         	goto	l4736
 11798  0026D8                     u5720:
 11799  0026D8  FFFF               	dw	65535	; assembler added errata NOP
 11800  0026DA  0E00               	movlw	0
 11801  0026DC  6E46               	movwf	___fldiv@b^0,c
 11802  0026DE  0E00               	movlw	0
 11803  0026E0  6E47               	movwf	(___fldiv@b+1)^0,c
 11804  0026E2  0E00               	movlw	0
 11805  0026E4  6E48               	movwf	(___fldiv@b+2)^0,c
 11806  0026E6  0E00               	movlw	0
 11807  0026E8  6E49               	movwf	(___fldiv@b+3)^0,c
 11808  0026EA  0E80               	movlw	128
 11809  0026EC  1248               	iorwf	(___fldiv@b+2)^0,f,c
 11810  0026EE  0E7F               	movlw	127
 11811  0026F0  1249               	iorwf	(___fldiv@b+3)^0,f,c
 11812  0026F2                     l4730:
 11813  0026F2  FFFF               	dw	65535	; assembler added errata NOP
 11814  0026F4  5056               	movf	___fldiv@sign^0,w,c
 11815  0026F6  1249               	iorwf	(___fldiv@b+3)^0,f,c
 11816  0026F8  C046  F046         	movff	___fldiv@b,?___fldiv
 11817  0026FC  C047  F047         	movff	___fldiv@b+1,?___fldiv+1
 11818  002700  C048  F048         	movff	___fldiv@b+2,?___fldiv+2
 11819  002704  C049  F049         	movff	___fldiv@b+3,?___fldiv+3
 11820  002708  EFFB  F014         	goto	l970
 11821  00270C                     l4736:
 11822  00270C  FFFF               	dw	65535	; assembler added errata NOP
 11823  00270E  505D               	movf	___fldiv@bexp^0,w,c
 11824  002710  A4D8               	btfss	status,2,c
 11825  002712  EF8D  F013         	goto	u5731
 11826  002716  EF90  F013         	goto	u5730
 11827  00271A                     u5731:
 11828  00271A  FFFF               	dw	65535	; assembler added errata NOP
 11829  00271C  EF9B  F013         	goto	l4744
 11830  002720                     u5730:
 11831  002720  FFFF               	dw	65535	; assembler added errata NOP
 11832  002722  0E00               	movlw	0
 11833  002724  6E46               	movwf	?___fldiv^0,c
 11834  002726  0E00               	movlw	0
 11835  002728  6E47               	movwf	(?___fldiv+1)^0,c
 11836  00272A  0E00               	movlw	0
 11837  00272C  6E48               	movwf	(?___fldiv+2)^0,c
 11838  00272E  0E00               	movlw	0
 11839  002730  6E49               	movwf	(?___fldiv+3)^0,c
 11840  002732  EFFB  F014         	goto	l970
 11841  002736                     l4744:
 11842  002736  FFFF               	dw	65535	; assembler added errata NOP
 11843  002738  505E               	movf	___fldiv@aexp^0,w,c
 11844  00273A  C05D  F04E         	movff	___fldiv@bexp,??___fldiv
 11845  00273E  6A4F               	clrf	(??___fldiv+1)^0,c
 11846  002740  5E4E               	subwf	??___fldiv^0,f,c
 11847  002742  0E00               	movlw	0
 11848  002744  5A4F               	subwfb	(??___fldiv+1)^0,f,c
 11849  002746  0E7F               	movlw	127
 11850  002748  244E               	addwf	??___fldiv^0,w,c
 11851  00274A  6E57               	movwf	___fldiv@new_exp^0,c
 11852  00274C  0E00               	movlw	0
 11853  00274E  204F               	addwfc	(??___fldiv+1)^0,w,c
 11854  002750  6E58               	movwf	(___fldiv@new_exp+1)^0,c
 11855  002752  C046  F052         	movff	___fldiv@b,___fldiv@rem
 11856  002756  C047  F053         	movff	___fldiv@b+1,___fldiv@rem+1
 11857  00275A  C048  F054         	movff	___fldiv@b+2,___fldiv@rem+2
 11858  00275E  C049  F055         	movff	___fldiv@b+3,___fldiv@rem+3
 11859  002762  0E00               	movlw	0
 11860  002764  6E46               	movwf	___fldiv@b^0,c
 11861  002766  0E00               	movlw	0
 11862  002768  6E47               	movwf	(___fldiv@b+1)^0,c
 11863  00276A  0E00               	movlw	0
 11864  00276C  6E48               	movwf	(___fldiv@b+2)^0,c
 11865  00276E  0E00               	movlw	0
 11866  002770  6E49               	movwf	(___fldiv@b+3)^0,c
 11867  002772  0E00               	movlw	0
 11868  002774  6E59               	movwf	___fldiv@grs^0,c
 11869  002776  0E00               	movlw	0
 11870  002778  6E5A               	movwf	(___fldiv@grs+1)^0,c
 11871  00277A  0E00               	movlw	0
 11872  00277C  6E5B               	movwf	(___fldiv@grs+2)^0,c
 11873  00277E  0E00               	movlw	0
 11874  002780  6E5C               	movwf	(___fldiv@grs+3)^0,c
 11875  002782  0E00               	movlw	0
 11876  002784  6E5E               	movwf	___fldiv@aexp^0,c
 11877  002786  EF07  F014         	goto	l972
 11878  00278A                     l4754:
 11879  00278A  FFFF               	dw	65535	; assembler added errata NOP
 11880  00278C  505E               	movf	___fldiv@aexp^0,w,c
 11881  00278E  B4D8               	btfsc	status,2,c
 11882  002790  EFCC  F013         	goto	u5741
 11883  002794  EFCF  F013         	goto	u5740
 11884  002798                     u5741:
 11885  002798  FFFF               	dw	65535	; assembler added errata NOP
 11886  00279A  EFEA  F013         	goto	l4762
 11887  00279E                     u5740:
 11888  00279E  FFFF               	dw	65535	; assembler added errata NOP
 11889  0027A0  90D8               	bcf	status,0,c
 11890  0027A2  3652               	rlcf	___fldiv@rem^0,f,c
 11891  0027A4  3653               	rlcf	(___fldiv@rem+1)^0,f,c
 11892  0027A6  3654               	rlcf	(___fldiv@rem+2)^0,f,c
 11893  0027A8  3655               	rlcf	(___fldiv@rem+3)^0,f,c
 11894  0027AA  90D8               	bcf	status,0,c
 11895  0027AC  3646               	rlcf	___fldiv@b^0,f,c
 11896  0027AE  3647               	rlcf	(___fldiv@b+1)^0,f,c
 11897  0027B0  3648               	rlcf	(___fldiv@b+2)^0,f,c
 11898  0027B2  3649               	rlcf	(___fldiv@b+3)^0,f,c
 11899  0027B4  AE5C               	btfss	(___fldiv@grs+3)^0,7,c
 11900  0027B6  EFDF  F013         	goto	u5751
 11901  0027BA  EFE2  F013         	goto	u5750
 11902  0027BE                     u5751:
 11903  0027BE  FFFF               	dw	65535	; assembler added errata NOP
 11904  0027C0  EFE4  F013         	goto	l975
 11905  0027C4                     u5750:
 11906  0027C4  FFFF               	dw	65535	; assembler added errata NOP
 11907  0027C6  8046               	bsf	___fldiv@b^0,0,c
 11908  0027C8                     l975:
 11909  0027C8  FFFF               	dw	65535	; assembler added errata NOP
 11910  0027CA  90D8               	bcf	status,0,c
 11911  0027CC  3659               	rlcf	___fldiv@grs^0,f,c
 11912  0027CE  365A               	rlcf	(___fldiv@grs+1)^0,f,c
 11913  0027D0  365B               	rlcf	(___fldiv@grs+2)^0,f,c
 11914  0027D2  365C               	rlcf	(___fldiv@grs+3)^0,f,c
 11915  0027D4                     l4762:
 11916  0027D4  FFFF               	dw	65535	; assembler added errata NOP
 11917  0027D6  504A               	movf	___fldiv@a^0,w,c
 11918  0027D8  5C52               	subwf	___fldiv@rem^0,w,c
 11919  0027DA  504B               	movf	(___fldiv@a+1)^0,w,c
 11920  0027DC  5853               	subwfb	(___fldiv@rem+1)^0,w,c
 11921  0027DE  504C               	movf	(___fldiv@a+2)^0,w,c
 11922  0027E0  5854               	subwfb	(___fldiv@rem+2)^0,w,c
 11923  0027E2  504D               	movf	(___fldiv@a+3)^0,w,c
 11924  0027E4  5855               	subwfb	(___fldiv@rem+3)^0,w,c
 11925  0027E6  A0D8               	btfss	status,0,c
 11926  0027E8  EFF8  F013         	goto	u5761
 11927  0027EC  EFFB  F013         	goto	u5760
 11928  0027F0                     u5761:
 11929  0027F0  FFFF               	dw	65535	; assembler added errata NOP
 11930  0027F2  EF05  F014         	goto	l4768
 11931  0027F6                     u5760:
 11932  0027F6  FFFF               	dw	65535	; assembler added errata NOP
 11933  0027F8  8C5C               	bsf	(___fldiv@grs+3)^0,6,c
 11934  0027FA  504A               	movf	___fldiv@a^0,w,c
 11935  0027FC  5E52               	subwf	___fldiv@rem^0,f,c
 11936  0027FE  504B               	movf	(___fldiv@a+1)^0,w,c
 11937  002800  5A53               	subwfb	(___fldiv@rem+1)^0,f,c
 11938  002802  504C               	movf	(___fldiv@a+2)^0,w,c
 11939  002804  5A54               	subwfb	(___fldiv@rem+2)^0,f,c
 11940  002806  504D               	movf	(___fldiv@a+3)^0,w,c
 11941  002808  5A55               	subwfb	(___fldiv@rem+3)^0,f,c
 11942  00280A                     l4768:
 11943  00280A  FFFF               	dw	65535	; assembler added errata NOP
 11944  00280C  2A5E               	incf	___fldiv@aexp^0,f,c
 11945  00280E                     l972:
 11946  00280E  FFFF               	dw	65535	; assembler added errata NOP
 11947  002810  0E19               	movlw	25
 11948  002812  645E               	cpfsgt	___fldiv@aexp^0,c
 11949  002814  EF0E  F014         	goto	u5771
 11950  002818  EF11  F014         	goto	u5770
 11951  00281C                     u5771:
 11952  00281C  FFFF               	dw	65535	; assembler added errata NOP
 11953  00281E  EFC5  F013         	goto	l4754
 11954  002822                     u5770:
 11955  002822  FFFF               	dw	65535	; assembler added errata NOP
 11956  002824  5052               	movf	___fldiv@rem^0,w,c
 11957  002826  1053               	iorwf	(___fldiv@rem+1)^0,w,c
 11958  002828  1054               	iorwf	(___fldiv@rem+2)^0,w,c
 11959  00282A  1055               	iorwf	(___fldiv@rem+3)^0,w,c
 11960  00282C  B4D8               	btfsc	status,2,c
 11961  00282E  EF1B  F014         	goto	u5781
 11962  002832  EF1E  F014         	goto	u5780
 11963  002836                     u5781:
 11964  002836  FFFF               	dw	65535	; assembler added errata NOP
 11965  002838  EF3B  F014         	goto	l4780
 11966  00283C                     u5780:
 11967  00283C  FFFF               	dw	65535	; assembler added errata NOP
 11968  00283E  8059               	bsf	___fldiv@grs^0,0,c
 11969  002840  EF3B  F014         	goto	l4780
 11970  002844                     l4774:
 11971  002844  FFFF               	dw	65535	; assembler added errata NOP
 11972  002846  90D8               	bcf	status,0,c
 11973  002848  3646               	rlcf	___fldiv@b^0,f,c
 11974  00284A  3647               	rlcf	(___fldiv@b+1)^0,f,c
 11975  00284C  3648               	rlcf	(___fldiv@b+2)^0,f,c
 11976  00284E  3649               	rlcf	(___fldiv@b+3)^0,f,c
 11977  002850  AE5C               	btfss	(___fldiv@grs+3)^0,7,c
 11978  002852  EF2D  F014         	goto	u5791
 11979  002856  EF30  F014         	goto	u5790
 11980  00285A                     u5791:
 11981  00285A  FFFF               	dw	65535	; assembler added errata NOP
 11982  00285C  EF32  F014         	goto	l981
 11983  002860                     u5790:
 11984  002860  FFFF               	dw	65535	; assembler added errata NOP
 11985  002862  8046               	bsf	___fldiv@b^0,0,c
 11986  002864                     l981:
 11987  002864  FFFF               	dw	65535	; assembler added errata NOP
 11988  002866  90D8               	bcf	status,0,c
 11989  002868  3659               	rlcf	___fldiv@grs^0,f,c
 11990  00286A  365A               	rlcf	(___fldiv@grs+1)^0,f,c
 11991  00286C  365B               	rlcf	(___fldiv@grs+2)^0,f,c
 11992  00286E  365C               	rlcf	(___fldiv@grs+3)^0,f,c
 11993  002870  0657               	decf	___fldiv@new_exp^0,f,c
 11994  002872  A0D8               	btfss	status,0,c
 11995  002874  0658               	decf	(___fldiv@new_exp+1)^0,f,c
 11996  002876                     l4780:
 11997  002876  FFFF               	dw	65535	; assembler added errata NOP
 11998  002878  AE48               	btfss	(___fldiv@b+2)^0,7,c
 11999  00287A  EF41  F014         	goto	u5801
 12000  00287E  EF44  F014         	goto	u5800
 12001  002882                     u5801:
 12002  002882  FFFF               	dw	65535	; assembler added errata NOP
 12003  002884  EF22  F014         	goto	l4774
 12004  002888                     u5800:
 12005  002888  FFFF               	dw	65535	; assembler added errata NOP
 12006  00288A  0E00               	movlw	0
 12007  00288C  6E5E               	movwf	___fldiv@aexp^0,c
 12008  00288E  AE5C               	btfss	(___fldiv@grs+3)^0,7,c
 12009  002890  EF4C  F014         	goto	u5811
 12010  002894  EF4F  F014         	goto	u5810
 12011  002898                     u5811:
 12012  002898  FFFF               	dw	65535	; assembler added errata NOP
 12013  00289A  EF7A  F014         	goto	l983
 12014  00289E                     u5810:
 12015  00289E  FFFF               	dw	65535	; assembler added errata NOP
 12016  0028A0  0EFF               	movlw	255
 12017  0028A2  1459               	andwf	___fldiv@grs^0,w,c
 12018  0028A4  6E4E               	movwf	??___fldiv^0,c
 12019  0028A6  0EFF               	movlw	255
 12020  0028A8  145A               	andwf	(___fldiv@grs+1)^0,w,c
 12021  0028AA  6E4F               	movwf	(??___fldiv+1)^0,c
 12022  0028AC  0EFF               	movlw	255
 12023  0028AE  145B               	andwf	(___fldiv@grs+2)^0,w,c
 12024  0028B0  6E50               	movwf	(??___fldiv+2)^0,c
 12025  0028B2  0E7F               	movlw	127
 12026  0028B4  145C               	andwf	(___fldiv@grs+3)^0,w,c
 12027  0028B6  6E51               	movwf	(??___fldiv+3)^0,c
 12028  0028B8  504E               	movf	??___fldiv^0,w,c
 12029  0028BA  104F               	iorwf	(??___fldiv+1)^0,w,c
 12030  0028BC  1050               	iorwf	(??___fldiv+2)^0,w,c
 12031  0028BE  1051               	iorwf	(??___fldiv+3)^0,w,c
 12032  0028C0  B4D8               	btfsc	status,2,c
 12033  0028C2  EF65  F014         	goto	u5821
 12034  0028C6  EF68  F014         	goto	u5820
 12035  0028CA                     u5821:
 12036  0028CA  FFFF               	dw	65535	; assembler added errata NOP
 12037  0028CC  EF6E  F014         	goto	l984
 12038  0028D0                     u5820:
 12039  0028D0  FFFF               	dw	65535	; assembler added errata NOP
 12040  0028D2                     l4788:
 12041  0028D2  FFFF               	dw	65535	; assembler added errata NOP
 12042  0028D4  0E01               	movlw	1
 12043  0028D6  6E5E               	movwf	___fldiv@aexp^0,c
 12044  0028D8  EF7A  F014         	goto	l983
 12045  0028DC                     l984:
 12046  0028DC  FFFF               	dw	65535	; assembler added errata NOP
 12047  0028DE  A046               	btfss	___fldiv@b^0,0,c
 12048  0028E0  EF74  F014         	goto	u5831
 12049  0028E4  EF77  F014         	goto	u5830
 12050  0028E8                     u5831:
 12051  0028E8  FFFF               	dw	65535	; assembler added errata NOP
 12052  0028EA  EF7A  F014         	goto	l983
 12053  0028EE                     u5830:
 12054  0028EE  FFFF               	dw	65535	; assembler added errata NOP
 12055  0028F0  EF69  F014         	goto	l4788
 12056  0028F4                     l983:
 12057  0028F4  FFFF               	dw	65535	; assembler added errata NOP
 12058  0028F6  505E               	movf	___fldiv@aexp^0,w,c
 12059  0028F8  B4D8               	btfsc	status,2,c
 12060  0028FA  EF81  F014         	goto	u5841
 12061  0028FE  EF84  F014         	goto	u5840
 12062  002902                     u5841:
 12063  002902  FFFF               	dw	65535	; assembler added errata NOP
 12064  002904  EFAB  F014         	goto	l4800
 12065  002908                     u5840:
 12066  002908  FFFF               	dw	65535	; assembler added errata NOP
 12067  00290A  0E01               	movlw	1
 12068  00290C  2646               	addwf	___fldiv@b^0,f,c
 12069  00290E  0E00               	movlw	0
 12070  002910  2247               	addwfc	(___fldiv@b+1)^0,f,c
 12071  002912  2248               	addwfc	(___fldiv@b+2)^0,f,c
 12072  002914  2249               	addwfc	(___fldiv@b+3)^0,f,c
 12073  002916  A049               	btfss	(___fldiv@b+3)^0,0,c
 12074  002918  EF90  F014         	goto	u5851
 12075  00291C  EF93  F014         	goto	u5850
 12076  002920                     u5851:
 12077  002920  FFFF               	dw	65535	; assembler added errata NOP
 12078  002922  EFAB  F014         	goto	l4800
 12079  002926                     u5850:
 12080  002926  FFFF               	dw	65535	; assembler added errata NOP
 12081  002928  C046  F04E         	movff	___fldiv@b,??___fldiv
 12082  00292C  C047  F04F         	movff	___fldiv@b+1,??___fldiv+1
 12083  002930  C048  F050         	movff	___fldiv@b+2,??___fldiv+2
 12084  002934  C049  F051         	movff	___fldiv@b+3,??___fldiv+3
 12085  002938  3451               	rlcf	(??___fldiv+3)^0,w,c
 12086  00293A  3251               	rrcf	(??___fldiv+3)^0,f,c
 12087  00293C  3250               	rrcf	(??___fldiv+2)^0,f,c
 12088  00293E  324F               	rrcf	(??___fldiv+1)^0,f,c
 12089  002940  324E               	rrcf	??___fldiv^0,f,c
 12090  002942  C04E  F046         	movff	??___fldiv,___fldiv@b
 12091  002946  C04F  F047         	movff	??___fldiv+1,___fldiv@b+1
 12092  00294A  C050  F048         	movff	??___fldiv+2,___fldiv@b+2
 12093  00294E  C051  F049         	movff	??___fldiv+3,___fldiv@b+3
 12094  002952  4A57               	infsnz	___fldiv@new_exp^0,f,c
 12095  002954  2A58               	incf	(___fldiv@new_exp+1)^0,f,c
 12096  002956                     l4800:
 12097  002956  FFFF               	dw	65535	; assembler added errata NOP
 12098  002958  BE58               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12099  00295A  EFB7  F014         	goto	u5861
 12100  00295E  5058               	movf	(___fldiv@new_exp+1)^0,w,c
 12101  002960  E109               	bnz	u5860
 12102  002962  2857               	incf	___fldiv@new_exp^0,w,c
 12103  002964  A0D8               	btfss	status,0,c
 12104  002966  EFB7  F014         	goto	u5861
 12105  00296A  EFBA  F014         	goto	u5860
 12106  00296E                     u5861:
 12107  00296E  FFFF               	dw	65535	; assembler added errata NOP
 12108  002970  EFC6  F014         	goto	l4804
 12109  002974                     u5860:
 12110  002974  FFFF               	dw	65535	; assembler added errata NOP
 12111  002976  0E00               	movlw	0
 12112  002978  6E58               	movwf	(___fldiv@new_exp+1)^0,c
 12113  00297A  6857               	setf	___fldiv@new_exp^0,c
 12114  00297C  0E00               	movlw	0
 12115  00297E  6E46               	movwf	___fldiv@b^0,c
 12116  002980  0E00               	movlw	0
 12117  002982  6E47               	movwf	(___fldiv@b+1)^0,c
 12118  002984  0E00               	movlw	0
 12119  002986  6E48               	movwf	(___fldiv@b+2)^0,c
 12120  002988  0E00               	movlw	0
 12121  00298A  6E49               	movwf	(___fldiv@b+3)^0,c
 12122  00298C                     l4804:
 12123  00298C  FFFF               	dw	65535	; assembler added errata NOP
 12124  00298E  BE58               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12125  002990  EFD5  F014         	goto	u5870
 12126  002994  5058               	movf	(___fldiv@new_exp+1)^0,w,c
 12127  002996  E106               	bnz	u5871
 12128  002998  0457               	decf	___fldiv@new_exp^0,w,c
 12129  00299A  B0D8               	btfsc	status,0,c
 12130  00299C  EFD2  F014         	goto	u5871
 12131  0029A0  EFD5  F014         	goto	u5870
 12132  0029A4                     u5871:
 12133  0029A4  FFFF               	dw	65535	; assembler added errata NOP
 12134  0029A6  EFE4  F014         	goto	l4808
 12135  0029AA                     u5870:
 12136  0029AA  FFFF               	dw	65535	; assembler added errata NOP
 12137  0029AC  0E00               	movlw	0
 12138  0029AE  6E58               	movwf	(___fldiv@new_exp+1)^0,c
 12139  0029B0  0E00               	movlw	0
 12140  0029B2  6E57               	movwf	___fldiv@new_exp^0,c
 12141  0029B4  0E00               	movlw	0
 12142  0029B6  6E46               	movwf	___fldiv@b^0,c
 12143  0029B8  0E00               	movlw	0
 12144  0029BA  6E47               	movwf	(___fldiv@b+1)^0,c
 12145  0029BC  0E00               	movlw	0
 12146  0029BE  6E48               	movwf	(___fldiv@b+2)^0,c
 12147  0029C0  0E00               	movlw	0
 12148  0029C2  6E49               	movwf	(___fldiv@b+3)^0,c
 12149  0029C4  0E00               	movlw	0
 12150  0029C6  6E56               	movwf	___fldiv@sign^0,c
 12151  0029C8                     l4808:
 12152  0029C8  FFFF               	dw	65535	; assembler added errata NOP
 12153  0029CA  C057  F05D         	movff	___fldiv@new_exp,___fldiv@bexp
 12154  0029CE  A05D               	btfss	___fldiv@bexp^0,0,c
 12155  0029D0  EFEC  F014         	goto	u5881
 12156  0029D4  EFEF  F014         	goto	u5880
 12157  0029D8                     u5881:
 12158  0029D8  FFFF               	dw	65535	; assembler added errata NOP
 12159  0029DA  EFF3  F014         	goto	l4814
 12160  0029DE                     u5880:
 12161  0029DE  FFFF               	dw	65535	; assembler added errata NOP
 12162  0029E0  8E48               	bsf	(___fldiv@b+2)^0,7,c
 12163  0029E2  EFF5  F014         	goto	l4816
 12164  0029E6                     l4814:
 12165  0029E6  FFFF               	dw	65535	; assembler added errata NOP
 12166  0029E8  9E48               	bcf	(___fldiv@b+2)^0,7,c
 12167  0029EA                     l4816:
 12168  0029EA  FFFF               	dw	65535	; assembler added errata NOP
 12169  0029EC  90D8               	bcf	status,0,c
 12170  0029EE  305D               	rrcf	___fldiv@bexp^0,w,c
 12171  0029F0  6E49               	movwf	(___fldiv@b+3)^0,c
 12172  0029F2  EF79  F013         	goto	l4730
 12173  0029F6                     l970:
 12174  0029F6  FFFF               	dw	65535	; assembler added errata NOP
 12175  0029F8  0012               	return		;funcret
 12176  0029FA  FFFF               	dw	65535	; errata NOP
 12177  0029FC                     __end_of___fldiv:
 12178                           	callstack 0
 12179                           
 12180 ;; *************** function _init_USART *****************
 12181 ;; Defined at:
 12182 ;;		line 13 in file "serial_rs232.c"
 12183 ;; Parameters:    Size  Location     Type
 12184 ;;		None
 12185 ;; Auto vars:     Size  Location     Type
 12186 ;;		None
 12187 ;; Return value:  Size  Location     Type
 12188 ;;                  1    wreg      void 
 12189 ;; Registers used:
 12190 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12191 ;; Tracked objects:
 12192 ;;		On entry : 0/0
 12193 ;;		On exit  : 0/0
 12194 ;;		Unchanged: 0/0
 12195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12196 ;;      Params:         0       0       0       0       0       0       0
 12197 ;;      Locals:         0       0       0       0       0       0       0
 12198 ;;      Temps:          0       0       0       0       0       0       0
 12199 ;;      Totals:         0       0       0       0       0       0       0
 12200 ;;Total ram usage:        0 bytes
 12201 ;; Hardware stack levels used:    1
 12202 ;; Hardware stack levels required when called:    4
 12203 ;; This function calls:
 12204 ;;		___fltol
 12205 ;;		_roundf
 12206 ;; This function is called by:
 12207 ;;		_main
 12208 ;; This function uses a non-reentrant model
 12209 ;;
 12210                           
 12211                           	psect	text49
 12212  006786                     __ptext49:
 12213                           	callstack 0
 12214  006786                     _init_USART:
 12215                           	callstack 0
 12216  006786  FFFF               	dw	65535	; assembler added errata NOP
 12217  006788                     
 12218                           ;serial_rs232.c: 24:     SPBRG = roundf(((fosc / desired_baudrate) / 16) - 1);
 12219  006788  0E55               	movlw	85
 12220  00678A  6E77               	movwf	roundf@x^0,c
 12221  00678C  0E55               	movlw	85
 12222  00678E  6E78               	movwf	(roundf@x+1)^0,c
 12223  006790  0EC8               	movlw	200
 12224  006792  6E79               	movwf	(roundf@x+2)^0,c
 12225  006794  0E41               	movlw	65
 12226  006796  6E7A               	movwf	(roundf@x+3)^0,c
 12227  006798  ECFE  F014         	call	_roundf	;wreg free
 12228  00679C  C077  F0CA         	movff	?_roundf,___fltol@f1
 12229  0067A0  C078  F0CB         	movff	?_roundf+1,___fltol@f1+1
 12230  0067A4  C079  F0CC         	movff	?_roundf+2,___fltol@f1+2
 12231  0067A8  C07A  F0CD         	movff	?_roundf+3,___fltol@f1+3
 12232  0067AC  ECB8  F03C         	call	___fltol	;wreg free
 12233  0067B0  0100               	movlb	0	; () banked
 12234  0067B2  51CA               	movf	?___fltol& (0+255),w,b
 12235  0067B4  6EAF               	movwf	175,c	;volatile
 12236  0067B6                     
 12237                           ; BSR set to: 0
 12238                           ;serial_rs232.c: 28:     TXSTAbits.TX9 = 0;
 12239  0067B6  9CAC               	bcf	172,6,c	;volatile
 12240  0067B8                     
 12241                           ; BSR set to: 0
 12242                           ;serial_rs232.c: 29:     TXSTAbits.TXEN = 1;
 12243  0067B8  8AAC               	bsf	172,5,c	;volatile
 12244  0067BA                     
 12245                           ; BSR set to: 0
 12246                           ;serial_rs232.c: 30:     TXSTAbits.SYNC =0;
 12247  0067BA  98AC               	bcf	172,4,c	;volatile
 12248  0067BC                     
 12249                           ; BSR set to: 0
 12250                           ;serial_rs232.c: 31:     TXSTAbits.BRGH = 1;
 12251  0067BC  84AC               	bsf	172,2,c	;volatile
 12252  0067BE                     
 12253                           ; BSR set to: 0
 12254                           ;serial_rs232.c: 33:     RCSTAbits.SPEN = 1;
 12255  0067BE  8EAB               	bsf	171,7,c	;volatile
 12256  0067C0                     
 12257                           ; BSR set to: 0
 12258                           ;serial_rs232.c: 34:     RCSTAbits.RX9 = 0;
 12259  0067C0  9CAB               	bcf	171,6,c	;volatile
 12260  0067C2                     
 12261                           ; BSR set to: 0
 12262                           ;serial_rs232.c: 35:     RCSTAbits.CREN = 1;
 12263  0067C2  88AB               	bsf	171,4,c	;volatile
 12264  0067C4                     
 12265                           ; BSR set to: 0
 12266  0067C4  0012               	return		;funcret
 12267  0067C6  FFFF               	dw	65535	; errata NOP
 12268  0067C8                     __end_of_init_USART:
 12269                           	callstack 0
 12270                           
 12271 ;; *************** function _roundf *****************
 12272 ;; Defined at:
 12273 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\roundf.c"
 12274 ;; Parameters:    Size  Location     Type
 12275 ;;  x               4  118[COMRAM] float 
 12276 ;; Auto vars:     Size  Location     Type
 12277 ;;  y               4   14[BANK0 ] float 
 12278 ;;  u               4   10[BANK0 ] struct .
 12279 ;;  e               2    4[BANK0 ] int 
 12280 ;; Return value:  Size  Location     Type
 12281 ;;                  4  118[COMRAM] float 
 12282 ;; Registers used:
 12283 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12284 ;; Tracked objects:
 12285 ;;		On entry : 0/0
 12286 ;;		On exit  : 0/0
 12287 ;;		Unchanged: 0/0
 12288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12289 ;;      Params:         4       0       0       0       0       0       0
 12290 ;;      Locals:         0      18       0       0       0       0       0
 12291 ;;      Temps:          4       0       0       0       0       0       0
 12292 ;;      Totals:         8      18       0       0       0       0       0
 12293 ;;Total ram usage:       26 bytes
 12294 ;; Hardware stack levels used:    1
 12295 ;; Hardware stack levels required when called:    3
 12296 ;; This function calls:
 12297 ;;		___fladd
 12298 ;;		___flge
 12299 ;;		___flmul
 12300 ;;		___flneg
 12301 ;;		___flsub
 12302 ;; This function is called by:
 12303 ;;		_init_USART
 12304 ;; This function uses a non-reentrant model
 12305 ;;
 12306                           
 12307                           	psect	text50
 12308  0029FC                     __ptext50:
 12309                           	callstack 0
 12310  0029FC                     _roundf:
 12311                           	callstack 0
 12312  0029FC  FFFF               	dw	65535	; assembler added errata NOP
 12313  0029FE  C080  F0C2         	movff	roundf@F525,roundf@u
 12314  002A02  C081  F0C3         	movff	roundf@F525+1,roundf@u+1
 12315  002A06  C082  F0C4         	movff	roundf@F525+2,roundf@u+2
 12316  002A0A  C083  F0C5         	movff	roundf@F525+3,roundf@u+3
 12317  002A0E  C077  F0C2         	movff	roundf@x,roundf@u
 12318  002A12  C078  F0C3         	movff	roundf@x+1,roundf@u+1
 12319  002A16  C079  F0C4         	movff	roundf@x+2,roundf@u+2
 12320  002A1A  C07A  F0C5         	movff	roundf@x+3,roundf@u+3
 12321  002A1E  C0C2  F07B         	movff	roundf@u,??_roundf
 12322  002A22  C0C3  F07C         	movff	roundf@u+1,??_roundf+1
 12323  002A26  C0C4  F07D         	movff	roundf@u+2,??_roundf+2
 12324  002A2A  C0C5  F07E         	movff	roundf@u+3,??_roundf+3
 12325  002A2E  0E18               	movlw	24
 12326  002A30  EF20  F015         	goto	u6320
 12327  002A34                     u6325:
 12328  002A34  FFFF               	dw	65535	; assembler added errata NOP
 12329  002A36  90D8               	bcf	status,0,c
 12330  002A38  327E               	rrcf	(??_roundf+3)^0,f,c
 12331  002A3A  327D               	rrcf	(??_roundf+2)^0,f,c
 12332  002A3C  327C               	rrcf	(??_roundf+1)^0,f,c
 12333  002A3E  327B               	rrcf	??_roundf^0,f,c
 12334  002A40                     u6320:
 12335  002A40  FFFF               	dw	65535	; assembler added errata NOP
 12336  002A42  2EE8               	decfsz	wreg,f,c
 12337  002A44  EF1A  F015         	goto	u6325
 12338  002A48  507B               	movf	??_roundf^0,w,c
 12339  002A4A  0100               	movlb	0	; () banked
 12340  002A4C  6FBC               	movwf	roundf@e& (0+255),b
 12341  002A4E  6BBD               	clrf	(roundf@e+1)& (0+255),b
 12342  002A50  BFBD               	btfsc	(roundf@e+1)& (0+255),7,b
 12343  002A52  EF34  F015         	goto	u6331
 12344  002A56  51BD               	movf	(roundf@e+1)& (0+255),w,b
 12345  002A58  E10A               	bnz	u6330
 12346  002A5A  0E96               	movlw	150
 12347  002A5C  5DBC               	subwf	roundf@e& (0+255),w,b
 12348  002A5E  A0D8               	btfss	status,0,c
 12349  002A60  EF34  F015         	goto	u6331
 12350  002A64  EF37  F015         	goto	u6330
 12351  002A68                     u6331:
 12352  002A68  FFFF               	dw	65535	; assembler added errata NOP
 12353  002A6A  EF42  F015         	goto	l5094
 12354  002A6E                     u6330:
 12355  002A6E  FFFF               	dw	65535	; assembler added errata NOP
 12356  002A70                     
 12357                           ; BSR set to: 0
 12358  002A70  C077  F077         	movff	roundf@x,?_roundf
 12359  002A74  C078  F078         	movff	roundf@x+1,?_roundf+1
 12360  002A78  C079  F079         	movff	roundf@x+2,?_roundf+2
 12361  002A7C  C07A  F07A         	movff	roundf@x+3,?_roundf+3
 12362  002A80  EFF0  F016         	goto	l1074
 12363  002A84                     l5094:
 12364  002A84  FFFF               	dw	65535	; assembler added errata NOP
 12365                           
 12366                           ; BSR set to: 0
 12367  002A86  C0C2  F07B         	movff	roundf@u,??_roundf
 12368  002A8A  C0C3  F07C         	movff	roundf@u+1,??_roundf+1
 12369  002A8E  C0C4  F07D         	movff	roundf@u+2,??_roundf+2
 12370  002A92  C0C5  F07E         	movff	roundf@u+3,??_roundf+3
 12371  002A96  0E20               	movlw	32
 12372  002A98  EF54  F015         	goto	u6340
 12373  002A9C                     u6345:
 12374  002A9C  FFFF               	dw	65535	; assembler added errata NOP
 12375  002A9E  90D8               	bcf	status,0,c
 12376  002AA0  327E               	rrcf	(??_roundf+3)^0,f,c
 12377  002AA2  327D               	rrcf	(??_roundf+2)^0,f,c
 12378  002AA4  327C               	rrcf	(??_roundf+1)^0,f,c
 12379  002AA6  327B               	rrcf	??_roundf^0,f,c
 12380  002AA8                     u6340:
 12381  002AA8  FFFF               	dw	65535	; assembler added errata NOP
 12382  002AAA  2EE8               	decfsz	wreg,f,c
 12383  002AAC  EF4E  F015         	goto	u6345
 12384  002AB0  507B               	movf	??_roundf^0,w,c
 12385  002AB2  107C               	iorwf	(??_roundf+1)^0,w,c
 12386  002AB4  107D               	iorwf	(??_roundf+2)^0,w,c
 12387  002AB6  107E               	iorwf	(??_roundf+3)^0,w,c
 12388  002AB8  B4D8               	btfsc	status,2,c
 12389  002ABA  EF61  F015         	goto	u6351
 12390  002ABE  EF64  F015         	goto	u6350
 12391  002AC2                     u6351:
 12392  002AC2  FFFF               	dw	65535	; assembler added errata NOP
 12393  002AC4  EF77  F015         	goto	l5098
 12394  002AC8                     u6350:
 12395  002AC8  FFFF               	dw	65535	; assembler added errata NOP
 12396  002ACA                     
 12397                           ; BSR set to: 0
 12398  002ACA  C077  F001         	movff	roundf@x,___flneg@f1
 12399  002ACE  C078  F002         	movff	roundf@x+1,___flneg@f1+1
 12400  002AD2  C079  F003         	movff	roundf@x+2,___flneg@f1+2
 12401  002AD6  C07A  F004         	movff	roundf@x+3,___flneg@f1+3
 12402  002ADA  ECA2  F033         	call	___flneg	;wreg free
 12403  002ADE  C001  F077         	movff	?___flneg,roundf@x
 12404  002AE2  C002  F078         	movff	?___flneg+1,roundf@x+1
 12405  002AE6  C003  F079         	movff	?___flneg+2,roundf@x+2
 12406  002AEA  C004  F07A         	movff	?___flneg+3,roundf@x+3
 12407  002AEE                     l5098:
 12408  002AEE  FFFF               	dw	65535	; assembler added errata NOP
 12409  002AF0  0100               	movlb	0	; () banked
 12410  002AF2  BFBD               	btfsc	(roundf@e+1)& (0+255),7,b
 12411  002AF4  EF88  F015         	goto	u6360
 12412  002AF8  51BD               	movf	(roundf@e+1)& (0+255),w,b
 12413  002AFA  E107               	bnz	u6361
 12414  002AFC  0E7E               	movlw	126
 12415  002AFE  5DBC               	subwf	roundf@e& (0+255),w,b
 12416  002B00  B0D8               	btfsc	status,0,c
 12417  002B02  EF85  F015         	goto	u6361
 12418  002B06  EF88  F015         	goto	u6360
 12419  002B0A                     u6361:
 12420  002B0A  FFFF               	dw	65535	; assembler added errata NOP
 12421  002B0C  EFA5  F015         	goto	l5104
 12422  002B10                     u6360:
 12423  002B10  FFFF               	dw	65535	; assembler added errata NOP
 12424  002B12                     
 12425                           ; BSR set to: 0
 12426  002B12  C0C2  F02D         	movff	roundf@u,___flmul@b
 12427  002B16  C0C3  F02E         	movff	roundf@u+1,___flmul@b+1
 12428  002B1A  C0C4  F02F         	movff	roundf@u+2,___flmul@b+2
 12429  002B1E  C0C5  F030         	movff	roundf@u+3,___flmul@b+3
 12430  002B22  0E00               	movlw	0
 12431  002B24  6E31               	movwf	___flmul@a^0,c
 12432  002B26  0E00               	movlw	0
 12433  002B28  6E32               	movwf	(___flmul@a+1)^0,c
 12434  002B2A  0E00               	movlw	0
 12435  002B2C  6E33               	movwf	(___flmul@a+2)^0,c
 12436  002B2E  0E00               	movlw	0
 12437  002B30  6E34               	movwf	(___flmul@a+3)^0,c
 12438  002B32  EC93  F010         	call	___flmul	;wreg free
 12439  002B36  C02D  F077         	movff	?___flmul,?_roundf
 12440  002B3A  C02E  F078         	movff	?___flmul+1,?_roundf+1
 12441  002B3E  C02F  F079         	movff	?___flmul+2,?_roundf+2
 12442  002B42  C030  F07A         	movff	?___flmul+3,?_roundf+3
 12443  002B46  EFF0  F016         	goto	l1074
 12444  002B4A                     l5104:
 12445  002B4A  FFFF               	dw	65535	; assembler added errata NOP
 12446                           
 12447                           ; BSR set to: 0
 12448  002B4C  0E00               	movlw	0
 12449  002B4E  6E63               	movwf	___fladd@a^0,c
 12450  002B50  0E00               	movlw	0
 12451  002B52  6E64               	movwf	(___fladd@a+1)^0,c
 12452  002B54  0E00               	movlw	0
 12453  002B56  6E65               	movwf	(___fladd@a+2)^0,c
 12454  002B58  0E4B               	movlw	75
 12455  002B5A  6E66               	movwf	(___fladd@a+3)^0,c
 12456  002B5C  C077  F05F         	movff	roundf@x,___fladd@b
 12457  002B60  C078  F060         	movff	roundf@x+1,___fladd@b+1
 12458  002B64  C079  F061         	movff	roundf@x+2,___fladd@b+2
 12459  002B68  C07A  F062         	movff	roundf@x+3,___fladd@b+3
 12460  002B6C  ECBF  F00D         	call	___fladd	;wreg free
 12461  002B70  C05F  F0BE         	movff	?___fladd,_roundf$2132
 12462  002B74  C060  F0BF         	movff	?___fladd+1,_roundf$2132+1
 12463  002B78  C061  F0C0         	movff	?___fladd+2,_roundf$2132+2
 12464  002B7C  C062  F0C1         	movff	?___fladd+3,_roundf$2132+3
 12465  002B80  0E00               	movlw	0
 12466  002B82  6E63               	movwf	___fladd@a^0,c
 12467  002B84  0E00               	movlw	0
 12468  002B86  6E64               	movwf	(___fladd@a+1)^0,c
 12469  002B88  0E00               	movlw	0
 12470  002B8A  6E65               	movwf	(___fladd@a+2)^0,c
 12471  002B8C  0ECB               	movlw	203
 12472  002B8E  6E66               	movwf	(___fladd@a+3)^0,c
 12473  002B90  C0BE  F05F         	movff	_roundf$2132,___fladd@b
 12474  002B94  C0BF  F060         	movff	_roundf$2132+1,___fladd@b+1
 12475  002B98  C0C0  F061         	movff	_roundf$2132+2,___fladd@b+2
 12476  002B9C  C0C1  F062         	movff	_roundf$2132+3,___fladd@b+3
 12477  002BA0  ECBF  F00D         	call	___fladd	;wreg free
 12478  002BA4  C05F  F0B8         	movff	?___fladd,_roundf$2133
 12479  002BA8  C060  F0B9         	movff	?___fladd+1,_roundf$2133+1
 12480  002BAC  C061  F0BA         	movff	?___fladd+2,_roundf$2133+2
 12481  002BB0  C062  F0BB         	movff	?___fladd+3,_roundf$2133+3
 12482  002BB4  C0B8  F06F         	movff	_roundf$2133,___flsub@b
 12483  002BB8  C0B9  F070         	movff	_roundf$2133+1,___flsub@b+1
 12484  002BBC  C0BA  F071         	movff	_roundf$2133+2,___flsub@b+2
 12485  002BC0  C0BB  F072         	movff	_roundf$2133+3,___flsub@b+3
 12486  002BC4  C077  F073         	movff	roundf@x,___flsub@a
 12487  002BC8  C078  F074         	movff	roundf@x+1,___flsub@a+1
 12488  002BCC  C079  F075         	movff	roundf@x+2,___flsub@a+2
 12489  002BD0  C07A  F076         	movff	roundf@x+3,___flsub@a+3
 12490  002BD4  EC6A  F034         	call	___flsub	;wreg free
 12491  002BD8  C06F  F0C6         	movff	?___flsub,roundf@y
 12492  002BDC  C070  F0C7         	movff	?___flsub+1,roundf@y+1
 12493  002BE0  C071  F0C8         	movff	?___flsub+2,roundf@y+2
 12494  002BE4  C072  F0C9         	movff	?___flsub+3,roundf@y+3
 12495  002BE8  0E00               	movlw	0
 12496  002BEA  6E01               	movwf	___flge@ff1^0,c
 12497  002BEC  0E00               	movlw	0
 12498  002BEE  6E02               	movwf	(___flge@ff1+1)^0,c
 12499  002BF0  0E00               	movlw	0
 12500  002BF2  6E03               	movwf	(___flge@ff1+2)^0,c
 12501  002BF4  0E3F               	movlw	63
 12502  002BF6  6E04               	movwf	(___flge@ff1+3)^0,c
 12503  002BF8  C0C6  F005         	movff	roundf@y,___flge@ff2
 12504  002BFC  C0C7  F006         	movff	roundf@y+1,___flge@ff2+1
 12505  002C00  C0C8  F007         	movff	roundf@y+2,___flge@ff2+2
 12506  002C04  C0C9  F008         	movff	roundf@y+3,___flge@ff2+3
 12507  002C08  EC24  F03C         	call	___flge	;wreg free
 12508  002C0C  B0D8               	btfsc	status,0,c
 12509  002C0E  EF0B  F016         	goto	u6371
 12510  002C12  EF0E  F016         	goto	u6370
 12511  002C16                     u6371:
 12512  002C16  FFFF               	dw	65535	; assembler added errata NOP
 12513  002C18  EF45  F016         	goto	l5108
 12514  002C1C                     u6370:
 12515  002C1C  FFFF               	dw	65535	; assembler added errata NOP
 12516  002C1E  C077  F063         	movff	roundf@x,___fladd@a
 12517  002C22  C078  F064         	movff	roundf@x+1,___fladd@a+1
 12518  002C26  C079  F065         	movff	roundf@x+2,___fladd@a+2
 12519  002C2A  C07A  F066         	movff	roundf@x+3,___fladd@a+3
 12520  002C2E  C0C6  F05F         	movff	roundf@y,___fladd@b
 12521  002C32  C0C7  F060         	movff	roundf@y+1,___fladd@b+1
 12522  002C36  C0C8  F061         	movff	roundf@y+2,___fladd@b+2
 12523  002C3A  C0C9  F062         	movff	roundf@y+3,___fladd@b+3
 12524  002C3E  ECBF  F00D         	call	___fladd	;wreg free
 12525  002C42  C05F  F0BE         	movff	?___fladd,_roundf$2132
 12526  002C46  C060  F0BF         	movff	?___fladd+1,_roundf$2132+1
 12527  002C4A  C061  F0C0         	movff	?___fladd+2,_roundf$2132+2
 12528  002C4E  C062  F0C1         	movff	?___fladd+3,_roundf$2132+3
 12529  002C52  C0BE  F05F         	movff	_roundf$2132,___fladd@b
 12530  002C56  C0BF  F060         	movff	_roundf$2132+1,___fladd@b+1
 12531  002C5A  C0C0  F061         	movff	_roundf$2132+2,___fladd@b+2
 12532  002C5E  C0C1  F062         	movff	_roundf$2132+3,___fladd@b+3
 12533  002C62  0E00               	movlw	0
 12534  002C64  6E63               	movwf	___fladd@a^0,c
 12535  002C66  0E00               	movlw	0
 12536  002C68  6E64               	movwf	(___fladd@a+1)^0,c
 12537  002C6A  0E80               	movlw	128
 12538  002C6C  6E65               	movwf	(___fladd@a+2)^0,c
 12539  002C6E  0EBF               	movlw	191
 12540  002C70  6E66               	movwf	(___fladd@a+3)^0,c
 12541  002C72  ECBF  F00D         	call	___fladd	;wreg free
 12542  002C76  C05F  F0C6         	movff	?___fladd,roundf@y
 12543  002C7A  C060  F0C7         	movff	?___fladd+1,roundf@y+1
 12544  002C7E  C061  F0C8         	movff	?___fladd+2,roundf@y+2
 12545  002C82  C062  F0C9         	movff	?___fladd+3,roundf@y+3
 12546  002C86  EFB2  F016         	goto	l5114
 12547  002C8A                     l5108:
 12548  002C8A  FFFF               	dw	65535	; assembler added errata NOP
 12549  002C8C  0E00               	movlw	0
 12550  002C8E  6E01               	movwf	___flge@ff1^0,c
 12551  002C90  0E00               	movlw	0
 12552  002C92  6E02               	movwf	(___flge@ff1+1)^0,c
 12553  002C94  0E00               	movlw	0
 12554  002C96  6E03               	movwf	(___flge@ff1+2)^0,c
 12555  002C98  0EBF               	movlw	191
 12556  002C9A  6E04               	movwf	(___flge@ff1+3)^0,c
 12557  002C9C  C0C6  F005         	movff	roundf@y,___flge@ff2
 12558  002CA0  C0C7  F006         	movff	roundf@y+1,___flge@ff2+1
 12559  002CA4  C0C8  F007         	movff	roundf@y+2,___flge@ff2+2
 12560  002CA8  C0C9  F008         	movff	roundf@y+3,___flge@ff2+3
 12561  002CAC  EC24  F03C         	call	___flge	;wreg free
 12562  002CB0  A0D8               	btfss	status,0,c
 12563  002CB2  EF5D  F016         	goto	u6381
 12564  002CB6  EF60  F016         	goto	u6380
 12565  002CBA                     u6381:
 12566  002CBA  FFFF               	dw	65535	; assembler added errata NOP
 12567  002CBC  EF97  F016         	goto	l5112
 12568  002CC0                     u6380:
 12569  002CC0  FFFF               	dw	65535	; assembler added errata NOP
 12570  002CC2  C077  F063         	movff	roundf@x,___fladd@a
 12571  002CC6  C078  F064         	movff	roundf@x+1,___fladd@a+1
 12572  002CCA  C079  F065         	movff	roundf@x+2,___fladd@a+2
 12573  002CCE  C07A  F066         	movff	roundf@x+3,___fladd@a+3
 12574  002CD2  C0C6  F05F         	movff	roundf@y,___fladd@b
 12575  002CD6  C0C7  F060         	movff	roundf@y+1,___fladd@b+1
 12576  002CDA  C0C8  F061         	movff	roundf@y+2,___fladd@b+2
 12577  002CDE  C0C9  F062         	movff	roundf@y+3,___fladd@b+3
 12578  002CE2  ECBF  F00D         	call	___fladd	;wreg free
 12579  002CE6  C05F  F0BE         	movff	?___fladd,_roundf$2132
 12580  002CEA  C060  F0BF         	movff	?___fladd+1,_roundf$2132+1
 12581  002CEE  C061  F0C0         	movff	?___fladd+2,_roundf$2132+2
 12582  002CF2  C062  F0C1         	movff	?___fladd+3,_roundf$2132+3
 12583  002CF6  C0BE  F05F         	movff	_roundf$2132,___fladd@b
 12584  002CFA  C0BF  F060         	movff	_roundf$2132+1,___fladd@b+1
 12585  002CFE  C0C0  F061         	movff	_roundf$2132+2,___fladd@b+2
 12586  002D02  C0C1  F062         	movff	_roundf$2132+3,___fladd@b+3
 12587  002D06  0E00               	movlw	0
 12588  002D08  6E63               	movwf	___fladd@a^0,c
 12589  002D0A  0E00               	movlw	0
 12590  002D0C  6E64               	movwf	(___fladd@a+1)^0,c
 12591  002D0E  0E80               	movlw	128
 12592  002D10  6E65               	movwf	(___fladd@a+2)^0,c
 12593  002D12  0E3F               	movlw	63
 12594  002D14  6E66               	movwf	(___fladd@a+3)^0,c
 12595  002D16  ECBF  F00D         	call	___fladd	;wreg free
 12596  002D1A  C05F  F0C6         	movff	?___fladd,roundf@y
 12597  002D1E  C060  F0C7         	movff	?___fladd+1,roundf@y+1
 12598  002D22  C061  F0C8         	movff	?___fladd+2,roundf@y+2
 12599  002D26  C062  F0C9         	movff	?___fladd+3,roundf@y+3
 12600  002D2A  EFB2  F016         	goto	l5114
 12601  002D2E                     l5112:
 12602  002D2E  FFFF               	dw	65535	; assembler added errata NOP
 12603  002D30  C0C6  F05F         	movff	roundf@y,___fladd@b
 12604  002D34  C0C7  F060         	movff	roundf@y+1,___fladd@b+1
 12605  002D38  C0C8  F061         	movff	roundf@y+2,___fladd@b+2
 12606  002D3C  C0C9  F062         	movff	roundf@y+3,___fladd@b+3
 12607  002D40  C077  F063         	movff	roundf@x,___fladd@a
 12608  002D44  C078  F064         	movff	roundf@x+1,___fladd@a+1
 12609  002D48  C079  F065         	movff	roundf@x+2,___fladd@a+2
 12610  002D4C  C07A  F066         	movff	roundf@x+3,___fladd@a+3
 12611  002D50  ECBF  F00D         	call	___fladd	;wreg free
 12612  002D54  C05F  F0C6         	movff	?___fladd,roundf@y
 12613  002D58  C060  F0C7         	movff	?___fladd+1,roundf@y+1
 12614  002D5C  C061  F0C8         	movff	?___fladd+2,roundf@y+2
 12615  002D60  C062  F0C9         	movff	?___fladd+3,roundf@y+3
 12616  002D64                     l5114:
 12617  002D64  FFFF               	dw	65535	; assembler added errata NOP
 12618  002D66  C0C2  F07B         	movff	roundf@u,??_roundf
 12619  002D6A  C0C3  F07C         	movff	roundf@u+1,??_roundf+1
 12620  002D6E  C0C4  F07D         	movff	roundf@u+2,??_roundf+2
 12621  002D72  C0C5  F07E         	movff	roundf@u+3,??_roundf+3
 12622  002D76  0E20               	movlw	32
 12623  002D78  EFC4  F016         	goto	u6390
 12624  002D7C                     u6395:
 12625  002D7C  FFFF               	dw	65535	; assembler added errata NOP
 12626  002D7E  90D8               	bcf	status,0,c
 12627  002D80  327E               	rrcf	(??_roundf+3)^0,f,c
 12628  002D82  327D               	rrcf	(??_roundf+2)^0,f,c
 12629  002D84  327C               	rrcf	(??_roundf+1)^0,f,c
 12630  002D86  327B               	rrcf	??_roundf^0,f,c
 12631  002D88                     u6390:
 12632  002D88  FFFF               	dw	65535	; assembler added errata NOP
 12633  002D8A  2EE8               	decfsz	wreg,f,c
 12634  002D8C  EFBE  F016         	goto	u6395
 12635  002D90  507B               	movf	??_roundf^0,w,c
 12636  002D92  107C               	iorwf	(??_roundf+1)^0,w,c
 12637  002D94  107D               	iorwf	(??_roundf+2)^0,w,c
 12638  002D96  107E               	iorwf	(??_roundf+3)^0,w,c
 12639  002D98  B4D8               	btfsc	status,2,c
 12640  002D9A  EFD1  F016         	goto	u6401
 12641  002D9E  EFD4  F016         	goto	u6400
 12642  002DA2                     u6401:
 12643  002DA2  FFFF               	dw	65535	; assembler added errata NOP
 12644  002DA4  EFE7  F016         	goto	l5118
 12645  002DA8                     u6400:
 12646  002DA8  FFFF               	dw	65535	; assembler added errata NOP
 12647  002DAA  C0C6  F001         	movff	roundf@y,___flneg@f1
 12648  002DAE  C0C7  F002         	movff	roundf@y+1,___flneg@f1+1
 12649  002DB2  C0C8  F003         	movff	roundf@y+2,___flneg@f1+2
 12650  002DB6  C0C9  F004         	movff	roundf@y+3,___flneg@f1+3
 12651  002DBA  ECA2  F033         	call	___flneg	;wreg free
 12652  002DBE  C001  F0C6         	movff	?___flneg,roundf@y
 12653  002DC2  C002  F0C7         	movff	?___flneg+1,roundf@y+1
 12654  002DC6  C003  F0C8         	movff	?___flneg+2,roundf@y+2
 12655  002DCA  C004  F0C9         	movff	?___flneg+3,roundf@y+3
 12656  002DCE                     l5118:
 12657  002DCE  FFFF               	dw	65535	; assembler added errata NOP
 12658  002DD0  C0C6  F077         	movff	roundf@y,?_roundf
 12659  002DD4  C0C7  F078         	movff	roundf@y+1,?_roundf+1
 12660  002DD8  C0C8  F079         	movff	roundf@y+2,?_roundf+2
 12661  002DDC  C0C9  F07A         	movff	roundf@y+3,?_roundf+3
 12662  002DE0                     l1074:
 12663  002DE0  FFFF               	dw	65535	; assembler added errata NOP
 12664  002DE2  0012               	return		;funcret
 12665  002DE4  FFFF               	dw	65535	; errata NOP
 12666  002DE6                     __end_of_roundf:
 12667                           	callstack 0
 12668                           
 12669 ;; *************** function ___flsub *****************
 12670 ;; Defined at:
 12671 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 12672 ;; Parameters:    Size  Location     Type
 12673 ;;  b               4  110[COMRAM] float 
 12674 ;;  a               4  114[COMRAM] float 
 12675 ;; Auto vars:     Size  Location     Type
 12676 ;;		None
 12677 ;; Return value:  Size  Location     Type
 12678 ;;                  4  110[COMRAM] float 
 12679 ;; Registers used:
 12680 ;;		wreg, status,2, status,0, cstack
 12681 ;; Tracked objects:
 12682 ;;		On entry : 0/0
 12683 ;;		On exit  : 0/0
 12684 ;;		Unchanged: 0/0
 12685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12686 ;;      Params:         8       0       0       0       0       0       0
 12687 ;;      Locals:         0       0       0       0       0       0       0
 12688 ;;      Temps:          0       0       0       0       0       0       0
 12689 ;;      Totals:         8       0       0       0       0       0       0
 12690 ;;Total ram usage:        8 bytes
 12691 ;; Hardware stack levels used:    1
 12692 ;; Hardware stack levels required when called:    2
 12693 ;; This function calls:
 12694 ;;		___fladd
 12695 ;; This function is called by:
 12696 ;;		_roundf
 12697 ;; This function uses a non-reentrant model
 12698 ;;
 12699                           
 12700                           	psect	text51
 12701  0068D4                     __ptext51:
 12702                           	callstack 0
 12703  0068D4                     ___flsub:
 12704                           	callstack 0
 12705  0068D4  FFFF               	dw	65535	; assembler added errata NOP
 12706  0068D6  0E00               	movlw	0
 12707  0068D8  1A73               	xorwf	___flsub@a^0,f,c
 12708  0068DA  0E00               	movlw	0
 12709  0068DC  1A74               	xorwf	(___flsub@a+1)^0,f,c
 12710  0068DE  0E00               	movlw	0
 12711  0068E0  1A75               	xorwf	(___flsub@a+2)^0,f,c
 12712  0068E2  0E80               	movlw	128
 12713  0068E4  1A76               	xorwf	(___flsub@a+3)^0,f,c
 12714  0068E6  C06F  F05F         	movff	___flsub@b,___fladd@b
 12715  0068EA  C070  F060         	movff	___flsub@b+1,___fladd@b+1
 12716  0068EE  C071  F061         	movff	___flsub@b+2,___fladd@b+2
 12717  0068F2  C072  F062         	movff	___flsub@b+3,___fladd@b+3
 12718  0068F6  C073  F063         	movff	___flsub@a,___fladd@a
 12719  0068FA  C074  F064         	movff	___flsub@a+1,___fladd@a+1
 12720  0068FE  C075  F065         	movff	___flsub@a+2,___fladd@a+2
 12721  006902  C076  F066         	movff	___flsub@a+3,___fladd@a+3
 12722  006906  ECBF  F00D         	call	___fladd	;wreg free
 12723  00690A  C05F  F06F         	movff	?___fladd,?___flsub
 12724  00690E  C060  F070         	movff	?___fladd+1,?___flsub+1
 12725  006912  C061  F071         	movff	?___fladd+2,?___flsub+2
 12726  006916  C062  F072         	movff	?___fladd+3,?___flsub+3
 12727  00691A  0012               	return		;funcret
 12728  00691C  FFFF               	dw	65535	; errata NOP
 12729  00691E                     __end_of___flsub:
 12730                           	callstack 0
 12731                           
 12732 ;; *************** function ___fladd *****************
 12733 ;; Defined at:
 12734 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 12735 ;; Parameters:    Size  Location     Type
 12736 ;;  b               4   94[COMRAM] float 
 12737 ;;  a               4   98[COMRAM] float 
 12738 ;; Auto vars:     Size  Location     Type
 12739 ;;  grs             1  109[COMRAM] unsigned char 
 12740 ;;  bexp            1  108[COMRAM] unsigned char 
 12741 ;;  aexp            1  107[COMRAM] unsigned char 
 12742 ;;  signs           1  106[COMRAM] unsigned char 
 12743 ;; Return value:  Size  Location     Type
 12744 ;;                  4   94[COMRAM] unsigned char 
 12745 ;; Registers used:
 12746 ;;		wreg, status,2, status,0
 12747 ;; Tracked objects:
 12748 ;;		On entry : 0/0
 12749 ;;		On exit  : 0/0
 12750 ;;		Unchanged: 0/0
 12751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12752 ;;      Params:         8       0       0       0       0       0       0
 12753 ;;      Locals:         4       0       0       0       0       0       0
 12754 ;;      Temps:          4       0       0       0       0       0       0
 12755 ;;      Totals:        16       0       0       0       0       0       0
 12756 ;;Total ram usage:       16 bytes
 12757 ;; Hardware stack levels used:    1
 12758 ;; Hardware stack levels required when called:    1
 12759 ;; This function calls:
 12760 ;;		Nothing
 12761 ;; This function is called by:
 12762 ;;		_init_timer_2
 12763 ;;		___flsub
 12764 ;;		_roundf
 12765 ;; This function uses a non-reentrant model
 12766 ;;
 12767                           
 12768                           	psect	text52
 12769  001B7E                     __ptext52:
 12770                           	callstack 0
 12771  001B7E                     ___fladd:
 12772                           	callstack 0
 12773  001B7E  FFFF               	dw	65535	; assembler added errata NOP
 12774  001B80  5062               	movf	(___fladd@b+3)^0,w,c
 12775  001B82  0B80               	andlw	128
 12776  001B84  6E6B               	movwf	___fladd@signs^0,c
 12777  001B86  5062               	movf	(___fladd@b+3)^0,w,c
 12778  001B88  2462               	addwf	(___fladd@b+3)^0,w,c
 12779  001B8A  6E6D               	movwf	___fladd@bexp^0,c
 12780  001B8C  AE61               	btfss	(___fladd@b+2)^0,7,c
 12781  001B8E  EFCB  F00D         	goto	u4781
 12782  001B92  EFCE  F00D         	goto	u4780
 12783  001B96                     u4781:
 12784  001B96  FFFF               	dw	65535	; assembler added errata NOP
 12785  001B98  EFD0  F00D         	goto	l4156
 12786  001B9C                     u4780:
 12787  001B9C  FFFF               	dw	65535	; assembler added errata NOP
 12788  001B9E  806D               	bsf	___fladd@bexp^0,0,c
 12789  001BA0                     l4156:
 12790  001BA0  FFFF               	dw	65535	; assembler added errata NOP
 12791  001BA2  506D               	movf	___fladd@bexp^0,w,c
 12792  001BA4  B4D8               	btfsc	status,2,c
 12793  001BA6  EFD7  F00D         	goto	u4791
 12794  001BAA  EFDA  F00D         	goto	u4790
 12795  001BAE                     u4791:
 12796  001BAE  FFFF               	dw	65535	; assembler added errata NOP
 12797  001BB0  EFF3  F00D         	goto	l4166
 12798  001BB4                     u4790:
 12799  001BB4  FFFF               	dw	65535	; assembler added errata NOP
 12800  001BB6  286D               	incf	___fladd@bexp^0,w,c
 12801  001BB8  A4D8               	btfss	status,2,c
 12802  001BBA  EFE1  F00D         	goto	u4801
 12803  001BBE  EFE4  F00D         	goto	u4800
 12804  001BC2                     u4801:
 12805  001BC2  FFFF               	dw	65535	; assembler added errata NOP
 12806  001BC4  EFED  F00D         	goto	l4162
 12807  001BC8                     u4800:
 12808  001BC8  FFFF               	dw	65535	; assembler added errata NOP
 12809  001BCA  0E00               	movlw	0
 12810  001BCC  6E5F               	movwf	___fladd@b^0,c
 12811  001BCE  0E00               	movlw	0
 12812  001BD0  6E60               	movwf	(___fladd@b+1)^0,c
 12813  001BD2  0E00               	movlw	0
 12814  001BD4  6E61               	movwf	(___fladd@b+2)^0,c
 12815  001BD6  0E00               	movlw	0
 12816  001BD8  6E62               	movwf	(___fladd@b+3)^0,c
 12817  001BDA                     l4162:
 12818  001BDA  FFFF               	dw	65535	; assembler added errata NOP
 12819  001BDC  8E61               	bsf	(___fladd@b+2)^0,7,c
 12820  001BDE  0E00               	movlw	0
 12821  001BE0  6E62               	movwf	(___fladd@b+3)^0,c
 12822  001BE2  EFFC  F00D         	goto	l4168
 12823  001BE6                     l4166:
 12824  001BE6  FFFF               	dw	65535	; assembler added errata NOP
 12825  001BE8  0E00               	movlw	0
 12826  001BEA  6E5F               	movwf	___fladd@b^0,c
 12827  001BEC  0E00               	movlw	0
 12828  001BEE  6E60               	movwf	(___fladd@b+1)^0,c
 12829  001BF0  0E00               	movlw	0
 12830  001BF2  6E61               	movwf	(___fladd@b+2)^0,c
 12831  001BF4  0E00               	movlw	0
 12832  001BF6  6E62               	movwf	(___fladd@b+3)^0,c
 12833  001BF8                     l4168:
 12834  001BF8  FFFF               	dw	65535	; assembler added errata NOP
 12835  001BFA  5066               	movf	(___fladd@a+3)^0,w,c
 12836  001BFC  0B80               	andlw	128
 12837  001BFE  6E6C               	movwf	___fladd@aexp^0,c
 12838  001C00  506B               	movf	___fladd@signs^0,w,c
 12839  001C02  186C               	xorwf	___fladd@aexp^0,w,c
 12840  001C04  B4D8               	btfsc	status,2,c
 12841  001C06  EF07  F00E         	goto	u4811
 12842  001C0A  EF0A  F00E         	goto	u4810
 12843  001C0E                     u4811:
 12844  001C0E  FFFF               	dw	65535	; assembler added errata NOP
 12845  001C10  EF0C  F00E         	goto	l4174
 12846  001C14                     u4810:
 12847  001C14  FFFF               	dw	65535	; assembler added errata NOP
 12848  001C16  8C6B               	bsf	___fladd@signs^0,6,c
 12849  001C18                     l4174:
 12850  001C18  FFFF               	dw	65535	; assembler added errata NOP
 12851  001C1A  5066               	movf	(___fladd@a+3)^0,w,c
 12852  001C1C  2466               	addwf	(___fladd@a+3)^0,w,c
 12853  001C1E  6E6C               	movwf	___fladd@aexp^0,c
 12854  001C20  AE65               	btfss	(___fladd@a+2)^0,7,c
 12855  001C22  EF15  F00E         	goto	u4821
 12856  001C26  EF18  F00E         	goto	u4820
 12857  001C2A                     u4821:
 12858  001C2A  FFFF               	dw	65535	; assembler added errata NOP
 12859  001C2C  EF1A  F00E         	goto	l4180
 12860  001C30                     u4820:
 12861  001C30  FFFF               	dw	65535	; assembler added errata NOP
 12862  001C32  806C               	bsf	___fladd@aexp^0,0,c
 12863  001C34                     l4180:
 12864  001C34  FFFF               	dw	65535	; assembler added errata NOP
 12865  001C36  506C               	movf	___fladd@aexp^0,w,c
 12866  001C38  B4D8               	btfsc	status,2,c
 12867  001C3A  EF21  F00E         	goto	u4831
 12868  001C3E  EF24  F00E         	goto	u4830
 12869  001C42                     u4831:
 12870  001C42  FFFF               	dw	65535	; assembler added errata NOP
 12871  001C44  EF3D  F00E         	goto	l4190
 12872  001C48                     u4830:
 12873  001C48  FFFF               	dw	65535	; assembler added errata NOP
 12874  001C4A  286C               	incf	___fladd@aexp^0,w,c
 12875  001C4C  A4D8               	btfss	status,2,c
 12876  001C4E  EF2B  F00E         	goto	u4841
 12877  001C52  EF2E  F00E         	goto	u4840
 12878  001C56                     u4841:
 12879  001C56  FFFF               	dw	65535	; assembler added errata NOP
 12880  001C58  EF37  F00E         	goto	l4186
 12881  001C5C                     u4840:
 12882  001C5C  FFFF               	dw	65535	; assembler added errata NOP
 12883  001C5E  0E00               	movlw	0
 12884  001C60  6E63               	movwf	___fladd@a^0,c
 12885  001C62  0E00               	movlw	0
 12886  001C64  6E64               	movwf	(___fladd@a+1)^0,c
 12887  001C66  0E00               	movlw	0
 12888  001C68  6E65               	movwf	(___fladd@a+2)^0,c
 12889  001C6A  0E00               	movlw	0
 12890  001C6C  6E66               	movwf	(___fladd@a+3)^0,c
 12891  001C6E                     l4186:
 12892  001C6E  FFFF               	dw	65535	; assembler added errata NOP
 12893  001C70  8E65               	bsf	(___fladd@a+2)^0,7,c
 12894  001C72  0E00               	movlw	0
 12895  001C74  6E66               	movwf	(___fladd@a+3)^0,c
 12896  001C76  EF46  F00E         	goto	l4192
 12897  001C7A                     l4190:
 12898  001C7A  FFFF               	dw	65535	; assembler added errata NOP
 12899  001C7C  0E00               	movlw	0
 12900  001C7E  6E63               	movwf	___fladd@a^0,c
 12901  001C80  0E00               	movlw	0
 12902  001C82  6E64               	movwf	(___fladd@a+1)^0,c
 12903  001C84  0E00               	movlw	0
 12904  001C86  6E65               	movwf	(___fladd@a+2)^0,c
 12905  001C88  0E00               	movlw	0
 12906  001C8A  6E66               	movwf	(___fladd@a+3)^0,c
 12907  001C8C                     l4192:
 12908  001C8C  FFFF               	dw	65535	; assembler added errata NOP
 12909  001C8E  506D               	movf	___fladd@bexp^0,w,c
 12910  001C90  5C6C               	subwf	___fladd@aexp^0,w,c
 12911  001C92  B0D8               	btfsc	status,0,c
 12912  001C94  EF4E  F00E         	goto	u4851
 12913  001C98  EF51  F00E         	goto	u4850
 12914  001C9C                     u4851:
 12915  001C9C  FFFF               	dw	65535	; assembler added errata NOP
 12916  001C9E  EF7C  F00E         	goto	l4228
 12917  001CA2                     u4850:
 12918  001CA2  FFFF               	dw	65535	; assembler added errata NOP
 12919  001CA4  AC6B               	btfss	___fladd@signs^0,6,c
 12920  001CA6  EF57  F00E         	goto	u4861
 12921  001CAA  EF5A  F00E         	goto	u4860
 12922  001CAE                     u4861:
 12923  001CAE  FFFF               	dw	65535	; assembler added errata NOP
 12924  001CB0  EF5D  F00E         	goto	l4198
 12925  001CB4                     u4860:
 12926  001CB4  FFFF               	dw	65535	; assembler added errata NOP
 12927  001CB6  0E80               	movlw	128
 12928  001CB8  1A6B               	xorwf	___fladd@signs^0,f,c
 12929  001CBA                     l4198:
 12930  001CBA  FFFF               	dw	65535	; assembler added errata NOP
 12931  001CBC  C06D  F06E         	movff	___fladd@bexp,___fladd@grs
 12932  001CC0  C06C  F06D         	movff	___fladd@aexp,___fladd@bexp
 12933  001CC4  C06E  F06C         	movff	___fladd@grs,___fladd@aexp
 12934  001CC8  C05F  F06E         	movff	___fladd@b,___fladd@grs
 12935  001CCC  C063  F05F         	movff	___fladd@a,___fladd@b
 12936  001CD0  C06E  F063         	movff	___fladd@grs,___fladd@a
 12937  001CD4  C060  F06E         	movff	___fladd@b+1,___fladd@grs
 12938  001CD8  C064  F060         	movff	___fladd@a+1,___fladd@b+1
 12939  001CDC  C06E  F064         	movff	___fladd@grs,___fladd@a+1
 12940  001CE0  C061  F06E         	movff	___fladd@b+2,___fladd@grs
 12941  001CE4  C065  F061         	movff	___fladd@a+2,___fladd@b+2
 12942  001CE8  C06E  F065         	movff	___fladd@grs,___fladd@a+2
 12943  001CEC  C062  F06E         	movff	___fladd@b+3,___fladd@grs
 12944  001CF0  C066  F062         	movff	___fladd@a+3,___fladd@b+3
 12945  001CF4  C06E  F066         	movff	___fladd@grs,___fladd@a+3
 12946  001CF8                     l4228:
 12947  001CF8  FFFF               	dw	65535	; assembler added errata NOP
 12948  001CFA  0E00               	movlw	0
 12949  001CFC  6E6E               	movwf	___fladd@grs^0,c
 12950  001CFE  506D               	movf	___fladd@bexp^0,w,c
 12951  001D00  C06C  F067         	movff	___fladd@aexp,??___fladd
 12952  001D04  6A68               	clrf	(??___fladd+1)^0,c
 12953  001D06  5E67               	subwf	??___fladd^0,f,c
 12954  001D08  0E00               	movlw	0
 12955  001D0A  5A68               	subwfb	(??___fladd+1)^0,f,c
 12956  001D0C  BE68               	btfsc	(??___fladd+1)^0,7,c
 12957  001D0E  EF92  F00E         	goto	u4871
 12958  001D12  5068               	movf	(??___fladd+1)^0,w,c
 12959  001D14  E10A               	bnz	u4870
 12960  001D16  0E1A               	movlw	26
 12961  001D18  5C67               	subwf	??___fladd^0,w,c
 12962  001D1A  A0D8               	btfss	status,0,c
 12963  001D1C  EF92  F00E         	goto	u4871
 12964  001D20  EF95  F00E         	goto	u4870
 12965  001D24                     u4871:
 12966  001D24  FFFF               	dw	65535	; assembler added errata NOP
 12967  001D26  EFD8  F00E         	goto	l917
 12968  001D2A                     u4870:
 12969  001D2A  FFFF               	dw	65535	; assembler added errata NOP
 12970  001D2C  505F               	movf	___fladd@b^0,w,c
 12971  001D2E  1060               	iorwf	(___fladd@b+1)^0,w,c
 12972  001D30  1061               	iorwf	(___fladd@b+2)^0,w,c
 12973  001D32  1062               	iorwf	(___fladd@b+3)^0,w,c
 12974  001D34  A4D8               	btfss	status,2,c
 12975  001D36  EF9F  F00E         	goto	u4881
 12976  001D3A  EFA3  F00E         	goto	u4880
 12977  001D3E                     u4881:
 12978  001D3E  FFFF               	dw	65535	; assembler added errata NOP
 12979  001D40  0E01               	movlw	1
 12980  001D42  EFA5  F00E         	goto	u4890
 12981  001D46                     u4880:
 12982  001D46  FFFF               	dw	65535	; assembler added errata NOP
 12983  001D48  0E00               	movlw	0
 12984  001D4A                     u4890:
 12985  001D4A  FFFF               	dw	65535	; assembler added errata NOP
 12986  001D4C  6E6E               	movwf	___fladd@grs^0,c
 12987  001D4E  0E00               	movlw	0
 12988  001D50  6E5F               	movwf	___fladd@b^0,c
 12989  001D52  0E00               	movlw	0
 12990  001D54  6E60               	movwf	(___fladd@b+1)^0,c
 12991  001D56  0E00               	movlw	0
 12992  001D58  6E61               	movwf	(___fladd@b+2)^0,c
 12993  001D5A  0E00               	movlw	0
 12994  001D5C  6E62               	movwf	(___fladd@b+3)^0,c
 12995  001D5E  C06C  F06D         	movff	___fladd@aexp,___fladd@bexp
 12996  001D62  EFE3  F00E         	goto	l916
 12997  001D66                     l918:
 12998  001D66  FFFF               	dw	65535	; assembler added errata NOP
 12999  001D68  A06E               	btfss	___fladd@grs^0,0,c
 13000  001D6A  EFB9  F00E         	goto	u4901
 13001  001D6E  EFBC  F00E         	goto	u4900
 13002  001D72                     u4901:
 13003  001D72  FFFF               	dw	65535	; assembler added errata NOP
 13004  001D74  EFC3  F00E         	goto	l4240
 13005  001D78                     u4900:
 13006  001D78  FFFF               	dw	65535	; assembler added errata NOP
 13007  001D7A  90D8               	bcf	status,0,c
 13008  001D7C  306E               	rrcf	___fladd@grs^0,w,c
 13009  001D7E  0901               	iorlw	1
 13010  001D80  6E6E               	movwf	___fladd@grs^0,c
 13011  001D82  EFC6  F00E         	goto	l4242
 13012  001D86                     l4240:
 13013  001D86  FFFF               	dw	65535	; assembler added errata NOP
 13014  001D88  90D8               	bcf	status,0,c
 13015  001D8A  326E               	rrcf	___fladd@grs^0,f,c
 13016  001D8C                     l4242:
 13017  001D8C  FFFF               	dw	65535	; assembler added errata NOP
 13018  001D8E  A05F               	btfss	___fladd@b^0,0,c
 13019  001D90  EFCC  F00E         	goto	u4911
 13020  001D94  EFCF  F00E         	goto	u4910
 13021  001D98                     u4911:
 13022  001D98  FFFF               	dw	65535	; assembler added errata NOP
 13023  001D9A  EFD1  F00E         	goto	l4246
 13024  001D9E                     u4910:
 13025  001D9E  FFFF               	dw	65535	; assembler added errata NOP
 13026  001DA0  8E6E               	bsf	___fladd@grs^0,7,c
 13027  001DA2                     l4246:
 13028  001DA2  FFFF               	dw	65535	; assembler added errata NOP
 13029  001DA4  3462               	rlcf	(___fladd@b+3)^0,w,c
 13030  001DA6  3262               	rrcf	(___fladd@b+3)^0,f,c
 13031  001DA8  3261               	rrcf	(___fladd@b+2)^0,f,c
 13032  001DAA  3260               	rrcf	(___fladd@b+1)^0,f,c
 13033  001DAC  325F               	rrcf	___fladd@b^0,f,c
 13034  001DAE  2A6D               	incf	___fladd@bexp^0,f,c
 13035  001DB0                     l917:
 13036  001DB0  FFFF               	dw	65535	; assembler added errata NOP
 13037  001DB2  506C               	movf	___fladd@aexp^0,w,c
 13038  001DB4  5C6D               	subwf	___fladd@bexp^0,w,c
 13039  001DB6  A0D8               	btfss	status,0,c
 13040  001DB8  EFE0  F00E         	goto	u4921
 13041  001DBC  EFE3  F00E         	goto	u4920
 13042  001DC0                     u4921:
 13043  001DC0  FFFF               	dw	65535	; assembler added errata NOP
 13044  001DC2  EFB3  F00E         	goto	l918
 13045  001DC6                     u4920:
 13046  001DC6                     l916:
 13047  001DC6  FFFF               	dw	65535	; assembler added errata NOP
 13048  001DC8  BC6B               	btfsc	___fladd@signs^0,6,c
 13049  001DCA  EFE9  F00E         	goto	u4931
 13050  001DCE  EFEC  F00E         	goto	u4930
 13051  001DD2                     u4931:
 13052  001DD2  FFFF               	dw	65535	; assembler added errata NOP
 13053  001DD4  EF39  F00F         	goto	l4274
 13054  001DD8                     u4930:
 13055  001DD8  FFFF               	dw	65535	; assembler added errata NOP
 13056  001DDA  506D               	movf	___fladd@bexp^0,w,c
 13057  001DDC  A4D8               	btfss	status,2,c
 13058  001DDE  EFF3  F00E         	goto	u4941
 13059  001DE2  EFF6  F00E         	goto	u4940
 13060  001DE6                     u4941:
 13061  001DE6  FFFF               	dw	65535	; assembler added errata NOP
 13062  001DE8  EF01  F00F         	goto	l4256
 13063  001DEC                     u4940:
 13064  001DEC  FFFF               	dw	65535	; assembler added errata NOP
 13065  001DEE  0E00               	movlw	0
 13066  001DF0  6E5F               	movwf	?___fladd^0,c
 13067  001DF2  0E00               	movlw	0
 13068  001DF4  6E60               	movwf	(?___fladd+1)^0,c
 13069  001DF6  0E00               	movlw	0
 13070  001DF8  6E61               	movwf	(?___fladd+2)^0,c
 13071  001DFA  0E00               	movlw	0
 13072  001DFC  6E62               	movwf	(?___fladd+3)^0,c
 13073  001DFE  EF90  F010         	goto	l925
 13074  001E02                     l4256:
 13075  001E02  FFFF               	dw	65535	; assembler added errata NOP
 13076  001E04  5063               	movf	___fladd@a^0,w,c
 13077  001E06  265F               	addwf	___fladd@b^0,f,c
 13078  001E08  5064               	movf	(___fladd@a+1)^0,w,c
 13079  001E0A  2260               	addwfc	(___fladd@b+1)^0,f,c
 13080  001E0C  5065               	movf	(___fladd@a+2)^0,w,c
 13081  001E0E  2261               	addwfc	(___fladd@b+2)^0,f,c
 13082  001E10  5066               	movf	(___fladd@a+3)^0,w,c
 13083  001E12  2262               	addwfc	(___fladd@b+3)^0,f,c
 13084  001E14  A062               	btfss	(___fladd@b+3)^0,0,c
 13085  001E16  EF0F  F00F         	goto	u4951
 13086  001E1A  EF12  F00F         	goto	u4950
 13087  001E1E                     u4951:
 13088  001E1E  FFFF               	dw	65535	; assembler added errata NOP
 13089  001E20  EFDD  F00F         	goto	l4310
 13090  001E24                     u4950:
 13091  001E24  FFFF               	dw	65535	; assembler added errata NOP
 13092  001E26  A06E               	btfss	___fladd@grs^0,0,c
 13093  001E28  EF18  F00F         	goto	u4961
 13094  001E2C  EF1B  F00F         	goto	u4960
 13095  001E30                     u4961:
 13096  001E30  FFFF               	dw	65535	; assembler added errata NOP
 13097  001E32  EF22  F00F         	goto	l4264
 13098  001E36                     u4960:
 13099  001E36  FFFF               	dw	65535	; assembler added errata NOP
 13100  001E38  90D8               	bcf	status,0,c
 13101  001E3A  306E               	rrcf	___fladd@grs^0,w,c
 13102  001E3C  0901               	iorlw	1
 13103  001E3E  6E6E               	movwf	___fladd@grs^0,c
 13104  001E40  EF25  F00F         	goto	l4266
 13105  001E44                     l4264:
 13106  001E44  FFFF               	dw	65535	; assembler added errata NOP
 13107  001E46  90D8               	bcf	status,0,c
 13108  001E48  326E               	rrcf	___fladd@grs^0,f,c
 13109  001E4A                     l4266:
 13110  001E4A  FFFF               	dw	65535	; assembler added errata NOP
 13111  001E4C  A05F               	btfss	___fladd@b^0,0,c
 13112  001E4E  EF2B  F00F         	goto	u4971
 13113  001E52  EF2E  F00F         	goto	u4970
 13114  001E56                     u4971:
 13115  001E56  FFFF               	dw	65535	; assembler added errata NOP
 13116  001E58  EF30  F00F         	goto	l4270
 13117  001E5C                     u4970:
 13118  001E5C  FFFF               	dw	65535	; assembler added errata NOP
 13119  001E5E  8E6E               	bsf	___fladd@grs^0,7,c
 13120  001E60                     l4270:
 13121  001E60  FFFF               	dw	65535	; assembler added errata NOP
 13122  001E62  3462               	rlcf	(___fladd@b+3)^0,w,c
 13123  001E64  3262               	rrcf	(___fladd@b+3)^0,f,c
 13124  001E66  3261               	rrcf	(___fladd@b+2)^0,f,c
 13125  001E68  3260               	rrcf	(___fladd@b+1)^0,f,c
 13126  001E6A  325F               	rrcf	___fladd@b^0,f,c
 13127  001E6C  2A6D               	incf	___fladd@bexp^0,f,c
 13128  001E6E  EFDD  F00F         	goto	l4310
 13129  001E72                     l4274:
 13130  001E72  FFFF               	dw	65535	; assembler added errata NOP
 13131  001E74  5063               	movf	___fladd@a^0,w,c
 13132  001E76  5C5F               	subwf	___fladd@b^0,w,c
 13133  001E78  5064               	movf	(___fladd@a+1)^0,w,c
 13134  001E7A  5860               	subwfb	(___fladd@b+1)^0,w,c
 13135  001E7C  5065               	movf	(___fladd@a+2)^0,w,c
 13136  001E7E  5861               	subwfb	(___fladd@b+2)^0,w,c
 13137  001E80  5062               	movf	(___fladd@b+3)^0,w,c
 13138  001E82  0A80               	xorlw	128
 13139  001E84  6E67               	movwf	??___fladd^0,c
 13140  001E86  5066               	movf	(___fladd@a+3)^0,w,c
 13141  001E88  0A80               	xorlw	128
 13142  001E8A  5867               	subwfb	??___fladd^0,w,c
 13143  001E8C  B0D8               	btfsc	status,0,c
 13144  001E8E  EF4B  F00F         	goto	u4981
 13145  001E92  EF4E  F00F         	goto	u4980
 13146  001E96                     u4981:
 13147  001E96  FFFF               	dw	65535	; assembler added errata NOP
 13148  001E98  EF7C  F00F         	goto	l4284
 13149  001E9C                     u4980:
 13150  001E9C  FFFF               	dw	65535	; assembler added errata NOP
 13151  001E9E  505F               	movf	___fladd@b^0,w,c
 13152  001EA0  5C63               	subwf	___fladd@a^0,w,c
 13153  001EA2  6E67               	movwf	??___fladd^0,c
 13154  001EA4  5060               	movf	(___fladd@b+1)^0,w,c
 13155  001EA6  5864               	subwfb	(___fladd@a+1)^0,w,c
 13156  001EA8  6E68               	movwf	(??___fladd+1)^0,c
 13157  001EAA  5061               	movf	(___fladd@b+2)^0,w,c
 13158  001EAC  5865               	subwfb	(___fladd@a+2)^0,w,c
 13159  001EAE  6E69               	movwf	(??___fladd+2)^0,c
 13160  001EB0  5062               	movf	(___fladd@b+3)^0,w,c
 13161  001EB2  5866               	subwfb	(___fladd@a+3)^0,w,c
 13162  001EB4  6E6A               	movwf	(??___fladd+3)^0,c
 13163  001EB6  0EFF               	movlw	255
 13164  001EB8  2467               	addwf	??___fladd^0,w,c
 13165  001EBA  6E5F               	movwf	___fladd@b^0,c
 13166  001EBC  0EFF               	movlw	255
 13167  001EBE  2068               	addwfc	(??___fladd+1)^0,w,c
 13168  001EC0  6E60               	movwf	(___fladd@b+1)^0,c
 13169  001EC2  0EFF               	movlw	255
 13170  001EC4  2069               	addwfc	(??___fladd+2)^0,w,c
 13171  001EC6  6E61               	movwf	(___fladd@b+2)^0,c
 13172  001EC8  0EFF               	movlw	255
 13173  001ECA  206A               	addwfc	(??___fladd+3)^0,w,c
 13174  001ECC  6E62               	movwf	(___fladd@b+3)^0,c
 13175  001ECE  0E80               	movlw	128
 13176  001ED0  1A6B               	xorwf	___fladd@signs^0,f,c
 13177  001ED2  6C6E               	negf	___fladd@grs^0,c
 13178  001ED4  506E               	movf	___fladd@grs^0,w,c
 13179  001ED6  A4D8               	btfss	status,2,c
 13180  001ED8  EF70  F00F         	goto	u4991
 13181  001EDC  EF73  F00F         	goto	u4990
 13182  001EE0                     u4991:
 13183  001EE0  FFFF               	dw	65535	; assembler added errata NOP
 13184  001EE2  EF85  F00F         	goto	l933
 13185  001EE6                     u4990:
 13186  001EE6  FFFF               	dw	65535	; assembler added errata NOP
 13187  001EE8  0E01               	movlw	1
 13188  001EEA  265F               	addwf	___fladd@b^0,f,c
 13189  001EEC  0E00               	movlw	0
 13190  001EEE  2260               	addwfc	(___fladd@b+1)^0,f,c
 13191  001EF0  2261               	addwfc	(___fladd@b+2)^0,f,c
 13192  001EF2  2262               	addwfc	(___fladd@b+3)^0,f,c
 13193  001EF4  EF85  F00F         	goto	l933
 13194  001EF8                     l4284:
 13195  001EF8  FFFF               	dw	65535	; assembler added errata NOP
 13196  001EFA  5063               	movf	___fladd@a^0,w,c
 13197  001EFC  5E5F               	subwf	___fladd@b^0,f,c
 13198  001EFE  5064               	movf	(___fladd@a+1)^0,w,c
 13199  001F00  5A60               	subwfb	(___fladd@b+1)^0,f,c
 13200  001F02  5065               	movf	(___fladd@a+2)^0,w,c
 13201  001F04  5A61               	subwfb	(___fladd@b+2)^0,f,c
 13202  001F06  5066               	movf	(___fladd@a+3)^0,w,c
 13203  001F08  5A62               	subwfb	(___fladd@b+3)^0,f,c
 13204  001F0A                     l933:
 13205  001F0A  FFFF               	dw	65535	; assembler added errata NOP
 13206  001F0C  505F               	movf	___fladd@b^0,w,c
 13207  001F0E  1060               	iorwf	(___fladd@b+1)^0,w,c
 13208  001F10  1061               	iorwf	(___fladd@b+2)^0,w,c
 13209  001F12  1062               	iorwf	(___fladd@b+3)^0,w,c
 13210  001F14  A4D8               	btfss	status,2,c
 13211  001F16  EF8F  F00F         	goto	u5001
 13212  001F1A  EF92  F00F         	goto	u5000
 13213  001F1E                     u5001:
 13214  001F1E  FFFF               	dw	65535	; assembler added errata NOP
 13215  001F20  EFD4  F00F         	goto	l4308
 13216  001F24                     u5000:
 13217  001F24  FFFF               	dw	65535	; assembler added errata NOP
 13218  001F26  506E               	movf	___fladd@grs^0,w,c
 13219  001F28  A4D8               	btfss	status,2,c
 13220  001F2A  EF99  F00F         	goto	u5011
 13221  001F2E  EF9C  F00F         	goto	u5010
 13222  001F32                     u5011:
 13223  001F32  FFFF               	dw	65535	; assembler added errata NOP
 13224  001F34  EFD4  F00F         	goto	l4308
 13225  001F38                     u5010:
 13226  001F38  FFFF               	dw	65535	; assembler added errata NOP
 13227  001F3A  0E00               	movlw	0
 13228  001F3C  6E5F               	movwf	?___fladd^0,c
 13229  001F3E  0E00               	movlw	0
 13230  001F40  6E60               	movwf	(?___fladd+1)^0,c
 13231  001F42  0E00               	movlw	0
 13232  001F44  6E61               	movwf	(?___fladd+2)^0,c
 13233  001F46  0E00               	movlw	0
 13234  001F48  6E62               	movwf	(?___fladd+3)^0,c
 13235  001F4A  EF90  F010         	goto	l925
 13236  001F4E                     l4292:
 13237  001F4E  FFFF               	dw	65535	; assembler added errata NOP
 13238  001F50  90D8               	bcf	status,0,c
 13239  001F52  365F               	rlcf	___fladd@b^0,f,c
 13240  001F54  3660               	rlcf	(___fladd@b+1)^0,f,c
 13241  001F56  3661               	rlcf	(___fladd@b+2)^0,f,c
 13242  001F58  3662               	rlcf	(___fladd@b+3)^0,f,c
 13243  001F5A  AE6E               	btfss	___fladd@grs^0,7,c
 13244  001F5C  EFB2  F00F         	goto	u5021
 13245  001F60  EFB5  F00F         	goto	u5020
 13246  001F64                     u5021:
 13247  001F64  FFFF               	dw	65535	; assembler added errata NOP
 13248  001F66  EFB7  F00F         	goto	l4298
 13249  001F6A                     u5020:
 13250  001F6A  FFFF               	dw	65535	; assembler added errata NOP
 13251  001F6C  805F               	bsf	___fladd@b^0,0,c
 13252  001F6E                     l4298:
 13253  001F6E  FFFF               	dw	65535	; assembler added errata NOP
 13254  001F70  A06E               	btfss	___fladd@grs^0,0,c
 13255  001F72  EFBD  F00F         	goto	u5031
 13256  001F76  EFC0  F00F         	goto	u5030
 13257  001F7A                     u5031:
 13258  001F7A  FFFF               	dw	65535	; assembler added errata NOP
 13259  001F7C  EFC5  F00F         	goto	l4302
 13260  001F80                     u5030:
 13261  001F80  FFFF               	dw	65535	; assembler added errata NOP
 13262  001F82  80D8               	bsf	status,0,c
 13263  001F84  366E               	rlcf	___fladd@grs^0,f,c
 13264  001F86  EFC8  F00F         	goto	l4304
 13265  001F8A                     l4302:
 13266  001F8A  FFFF               	dw	65535	; assembler added errata NOP
 13267  001F8C  90D8               	bcf	status,0,c
 13268  001F8E  366E               	rlcf	___fladd@grs^0,f,c
 13269  001F90                     l4304:
 13270  001F90  FFFF               	dw	65535	; assembler added errata NOP
 13271  001F92  506D               	movf	___fladd@bexp^0,w,c
 13272  001F94  B4D8               	btfsc	status,2,c
 13273  001F96  EFCF  F00F         	goto	u5041
 13274  001F9A  EFD2  F00F         	goto	u5040
 13275  001F9E                     u5041:
 13276  001F9E  FFFF               	dw	65535	; assembler added errata NOP
 13277  001FA0  EFD4  F00F         	goto	l4308
 13278  001FA4                     u5040:
 13279  001FA4  FFFF               	dw	65535	; assembler added errata NOP
 13280  001FA6  066D               	decf	___fladd@bexp^0,f,c
 13281  001FA8                     l4308:
 13282  001FA8  FFFF               	dw	65535	; assembler added errata NOP
 13283  001FAA  AE61               	btfss	(___fladd@b+2)^0,7,c
 13284  001FAC  EFDA  F00F         	goto	u5051
 13285  001FB0  EFDD  F00F         	goto	u5050
 13286  001FB4                     u5051:
 13287  001FB4  FFFF               	dw	65535	; assembler added errata NOP
 13288  001FB6  EFA7  F00F         	goto	l4292
 13289  001FBA                     u5050:
 13290  001FBA                     l4310:
 13291  001FBA  FFFF               	dw	65535	; assembler added errata NOP
 13292  001FBC  0E00               	movlw	0
 13293  001FBE  6E6C               	movwf	___fladd@aexp^0,c
 13294  001FC0  AE6E               	btfss	___fladd@grs^0,7,c
 13295  001FC2  EFE5  F00F         	goto	u5061
 13296  001FC6  EFE8  F00F         	goto	u5060
 13297  001FCA                     u5061:
 13298  001FCA  FFFF               	dw	65535	; assembler added errata NOP
 13299  001FCC  EF07  F010         	goto	l942
 13300  001FD0                     u5060:
 13301  001FD0  FFFF               	dw	65535	; assembler added errata NOP
 13302  001FD2  C06E  F067         	movff	___fladd@grs,??___fladd
 13303  001FD6  0E7F               	movlw	127
 13304  001FD8  1667               	andwf	??___fladd^0,f,c
 13305  001FDA  B4D8               	btfsc	status,2,c
 13306  001FDC  EFF2  F00F         	goto	u5071
 13307  001FE0  EFF5  F00F         	goto	u5070
 13308  001FE4                     u5071:
 13309  001FE4  FFFF               	dw	65535	; assembler added errata NOP
 13310  001FE6  EFFB  F00F         	goto	l943
 13311  001FEA                     u5070:
 13312  001FEA  FFFF               	dw	65535	; assembler added errata NOP
 13313  001FEC                     l4316:
 13314  001FEC  FFFF               	dw	65535	; assembler added errata NOP
 13315  001FEE  0E01               	movlw	1
 13316  001FF0  6E6C               	movwf	___fladd@aexp^0,c
 13317  001FF2  EF07  F010         	goto	l942
 13318  001FF6                     l943:
 13319  001FF6  FFFF               	dw	65535	; assembler added errata NOP
 13320  001FF8  A05F               	btfss	___fladd@b^0,0,c
 13321  001FFA  EF01  F010         	goto	u5081
 13322  001FFE  EF04  F010         	goto	u5080
 13323  002002                     u5081:
 13324  002002  FFFF               	dw	65535	; assembler added errata NOP
 13325  002004  EF07  F010         	goto	l942
 13326  002008                     u5080:
 13327  002008  FFFF               	dw	65535	; assembler added errata NOP
 13328  00200A  EFF6  F00F         	goto	l4316
 13329  00200E                     l942:
 13330  00200E  FFFF               	dw	65535	; assembler added errata NOP
 13331  002010  506C               	movf	___fladd@aexp^0,w,c
 13332  002012  B4D8               	btfsc	status,2,c
 13333  002014  EF0E  F010         	goto	u5091
 13334  002018  EF11  F010         	goto	u5090
 13335  00201C                     u5091:
 13336  00201C  FFFF               	dw	65535	; assembler added errata NOP
 13337  00201E  EF41  F010         	goto	l4328
 13338  002022                     u5090:
 13339  002022  FFFF               	dw	65535	; assembler added errata NOP
 13340  002024  0E01               	movlw	1
 13341  002026  265F               	addwf	___fladd@b^0,f,c
 13342  002028  0E00               	movlw	0
 13343  00202A  2260               	addwfc	(___fladd@b+1)^0,f,c
 13344  00202C  2261               	addwfc	(___fladd@b+2)^0,f,c
 13345  00202E  2262               	addwfc	(___fladd@b+3)^0,f,c
 13346  002030  A062               	btfss	(___fladd@b+3)^0,0,c
 13347  002032  EF1D  F010         	goto	u5101
 13348  002036  EF20  F010         	goto	u5100
 13349  00203A                     u5101:
 13350  00203A  FFFF               	dw	65535	; assembler added errata NOP
 13351  00203C  EF41  F010         	goto	l4328
 13352  002040                     u5100:
 13353  002040  FFFF               	dw	65535	; assembler added errata NOP
 13354  002042  C05F  F067         	movff	___fladd@b,??___fladd
 13355  002046  C060  F068         	movff	___fladd@b+1,??___fladd+1
 13356  00204A  C061  F069         	movff	___fladd@b+2,??___fladd+2
 13357  00204E  C062  F06A         	movff	___fladd@b+3,??___fladd+3
 13358  002052  346A               	rlcf	(??___fladd+3)^0,w,c
 13359  002054  326A               	rrcf	(??___fladd+3)^0,f,c
 13360  002056  3269               	rrcf	(??___fladd+2)^0,f,c
 13361  002058  3268               	rrcf	(??___fladd+1)^0,f,c
 13362  00205A  3267               	rrcf	??___fladd^0,f,c
 13363  00205C  C067  F05F         	movff	??___fladd,___fladd@b
 13364  002060  C068  F060         	movff	??___fladd+1,___fladd@b+1
 13365  002064  C069  F061         	movff	??___fladd+2,___fladd@b+2
 13366  002068  C06A  F062         	movff	??___fladd+3,___fladd@b+3
 13367  00206C  286D               	incf	___fladd@bexp^0,w,c
 13368  00206E  B4D8               	btfsc	status,2,c
 13369  002070  EF3C  F010         	goto	u5111
 13370  002074  EF3F  F010         	goto	u5110
 13371  002078                     u5111:
 13372  002078  FFFF               	dw	65535	; assembler added errata NOP
 13373  00207A  EF41  F010         	goto	l4328
 13374  00207E                     u5110:
 13375  00207E  FFFF               	dw	65535	; assembler added errata NOP
 13376  002080  2A6D               	incf	___fladd@bexp^0,f,c
 13377  002082                     l4328:
 13378  002082  FFFF               	dw	65535	; assembler added errata NOP
 13379  002084  286D               	incf	___fladd@bexp^0,w,c
 13380  002086  B4D8               	btfsc	status,2,c
 13381  002088  EF48  F010         	goto	u5121
 13382  00208C  EF4B  F010         	goto	u5120
 13383  002090                     u5121:
 13384  002090  FFFF               	dw	65535	; assembler added errata NOP
 13385  002092  EF55  F010         	goto	l4332
 13386  002096                     u5120:
 13387  002096  FFFF               	dw	65535	; assembler added errata NOP
 13388  002098  506D               	movf	___fladd@bexp^0,w,c
 13389  00209A  A4D8               	btfss	status,2,c
 13390  00209C  EF52  F010         	goto	u5131
 13391  0020A0  EF55  F010         	goto	u5130
 13392  0020A4                     u5131:
 13393  0020A4  FFFF               	dw	65535	; assembler added errata NOP
 13394  0020A6  EF6A  F010         	goto	l4336
 13395  0020AA                     u5130:
 13396  0020AA                     l4332:
 13397  0020AA  FFFF               	dw	65535	; assembler added errata NOP
 13398  0020AC  0E00               	movlw	0
 13399  0020AE  6E5F               	movwf	___fladd@b^0,c
 13400  0020B0  0E00               	movlw	0
 13401  0020B2  6E60               	movwf	(___fladd@b+1)^0,c
 13402  0020B4  0E00               	movlw	0
 13403  0020B6  6E61               	movwf	(___fladd@b+2)^0,c
 13404  0020B8  0E00               	movlw	0
 13405  0020BA  6E62               	movwf	(___fladd@b+3)^0,c
 13406  0020BC  506D               	movf	___fladd@bexp^0,w,c
 13407  0020BE  A4D8               	btfss	status,2,c
 13408  0020C0  EF64  F010         	goto	u5141
 13409  0020C4  EF67  F010         	goto	u5140
 13410  0020C8                     u5141:
 13411  0020C8  FFFF               	dw	65535	; assembler added errata NOP
 13412  0020CA  EF6A  F010         	goto	l4336
 13413  0020CE                     u5140:
 13414  0020CE  FFFF               	dw	65535	; assembler added errata NOP
 13415  0020D0  0E00               	movlw	0
 13416  0020D2  6E6B               	movwf	___fladd@signs^0,c
 13417  0020D4                     l4336:
 13418  0020D4  FFFF               	dw	65535	; assembler added errata NOP
 13419  0020D6  A06D               	btfss	___fladd@bexp^0,0,c
 13420  0020D8  EF70  F010         	goto	u5151
 13421  0020DC  EF73  F010         	goto	u5150
 13422  0020E0                     u5151:
 13423  0020E0  FFFF               	dw	65535	; assembler added errata NOP
 13424  0020E2  EF77  F010         	goto	l4340
 13425  0020E6                     u5150:
 13426  0020E6  FFFF               	dw	65535	; assembler added errata NOP
 13427  0020E8  8E61               	bsf	(___fladd@b+2)^0,7,c
 13428  0020EA  EF79  F010         	goto	l4342
 13429  0020EE                     l4340:
 13430  0020EE  FFFF               	dw	65535	; assembler added errata NOP
 13431  0020F0  9E61               	bcf	(___fladd@b+2)^0,7,c
 13432  0020F2                     l4342:
 13433  0020F2  FFFF               	dw	65535	; assembler added errata NOP
 13434  0020F4  90D8               	bcf	status,0,c
 13435  0020F6  306D               	rrcf	___fladd@bexp^0,w,c
 13436  0020F8  6E62               	movwf	(___fladd@b+3)^0,c
 13437  0020FA  AE6B               	btfss	___fladd@signs^0,7,c
 13438  0020FC  EF82  F010         	goto	u5161
 13439  002100  EF85  F010         	goto	u5160
 13440  002104                     u5161:
 13441  002104  FFFF               	dw	65535	; assembler added errata NOP
 13442  002106  EF87  F010         	goto	l4348
 13443  00210A                     u5160:
 13444  00210A  FFFF               	dw	65535	; assembler added errata NOP
 13445  00210C  8E62               	bsf	(___fladd@b+3)^0,7,c
 13446  00210E                     l4348:
 13447  00210E  FFFF               	dw	65535	; assembler added errata NOP
 13448  002110  C05F  F05F         	movff	___fladd@b,?___fladd
 13449  002114  C060  F060         	movff	___fladd@b+1,?___fladd+1
 13450  002118  C061  F061         	movff	___fladd@b+2,?___fladd+2
 13451  00211C  C062  F062         	movff	___fladd@b+3,?___fladd+3
 13452  002120                     l925:
 13453  002120  FFFF               	dw	65535	; assembler added errata NOP
 13454  002122  0012               	return		;funcret
 13455  002124  FFFF               	dw	65535	; errata NOP
 13456  002126                     __end_of___fladd:
 13457                           	callstack 0
 13458                           
 13459 ;; *************** function ___flneg *****************
 13460 ;; Defined at:
 13461 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
 13462 ;; Parameters:    Size  Location     Type
 13463 ;;  f1              4    0[COMRAM] unsigned char 
 13464 ;; Auto vars:     Size  Location     Type
 13465 ;;		None
 13466 ;; Return value:  Size  Location     Type
 13467 ;;                  4    0[COMRAM] unsigned char 
 13468 ;; Registers used:
 13469 ;;		wreg, status,2, status,0
 13470 ;; Tracked objects:
 13471 ;;		On entry : 0/0
 13472 ;;		On exit  : 0/0
 13473 ;;		Unchanged: 0/0
 13474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13475 ;;      Params:         4       0       0       0       0       0       0
 13476 ;;      Locals:         0       0       0       0       0       0       0
 13477 ;;      Temps:          0       0       0       0       0       0       0
 13478 ;;      Totals:         4       0       0       0       0       0       0
 13479 ;;Total ram usage:        4 bytes
 13480 ;; Hardware stack levels used:    1
 13481 ;; Hardware stack levels required when called:    1
 13482 ;; This function calls:
 13483 ;;		Nothing
 13484 ;; This function is called by:
 13485 ;;		_roundf
 13486 ;; This function uses a non-reentrant model
 13487 ;;
 13488                           
 13489                           	psect	text53
 13490  006744                     __ptext53:
 13491                           	callstack 0
 13492  006744                     ___flneg:
 13493                           	callstack 0
 13494  006744  FFFF               	dw	65535	; assembler added errata NOP
 13495  006746  5001               	movf	___flneg@f1^0,w,c
 13496  006748  1002               	iorwf	(___flneg@f1+1)^0,w,c
 13497  00674A  1003               	iorwf	(___flneg@f1+2)^0,w,c
 13498  00674C  1004               	iorwf	(___flneg@f1+3)^0,w,c
 13499  00674E  B4D8               	btfsc	status,2,c
 13500  006750  EFAC  F033         	goto	u6131
 13501  006754  EFAF  F033         	goto	u6130
 13502  006758                     u6131:
 13503  006758  FFFF               	dw	65535	; assembler added errata NOP
 13504  00675A  EFB8  F033         	goto	l4986
 13505  00675E                     u6130:
 13506  00675E  FFFF               	dw	65535	; assembler added errata NOP
 13507  006760  0E00               	movlw	0
 13508  006762  1A01               	xorwf	___flneg@f1^0,f,c
 13509  006764  0E00               	movlw	0
 13510  006766  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 13511  006768  0E00               	movlw	0
 13512  00676A  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 13513  00676C  0E80               	movlw	128
 13514  00676E  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 13515  006770                     l4986:
 13516  006770  FFFF               	dw	65535	; assembler added errata NOP
 13517  006772  C001  F001         	movff	___flneg@f1,?___flneg
 13518  006776  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 13519  00677A  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 13520  00677E  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 13521  006782  0012               	return		;funcret
 13522  006784  FFFF               	dw	65535	; errata NOP
 13523  006786                     __end_of___flneg:
 13524                           	callstack 0
 13525                           
 13526 ;; *************** function ___flmul *****************
 13527 ;; Defined at:
 13528 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 13529 ;; Parameters:    Size  Location     Type
 13530 ;;  b               4   44[COMRAM] unsigned char 
 13531 ;;  a               4   48[COMRAM] unsigned char 
 13532 ;; Auto vars:     Size  Location     Type
 13533 ;;  prod            4   63[COMRAM] struct .
 13534 ;;  grs             4   57[COMRAM] unsigned long 
 13535 ;;  temp            2   67[COMRAM] struct .
 13536 ;;  bexp            1   62[COMRAM] unsigned char 
 13537 ;;  aexp            1   61[COMRAM] unsigned char 
 13538 ;;  sign            1   56[COMRAM] unsigned char 
 13539 ;; Return value:  Size  Location     Type
 13540 ;;                  4   44[COMRAM] unsigned char 
 13541 ;; Registers used:
 13542 ;;		wreg, status,2, status,0, prodl, prodh
 13543 ;; Tracked objects:
 13544 ;;		On entry : 0/0
 13545 ;;		On exit  : 0/0
 13546 ;;		Unchanged: 0/0
 13547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13548 ;;      Params:         8       0       0       0       0       0       0
 13549 ;;      Locals:        13       0       0       0       0       0       0
 13550 ;;      Temps:          4       0       0       0       0       0       0
 13551 ;;      Totals:        25       0       0       0       0       0       0
 13552 ;;Total ram usage:       25 bytes
 13553 ;; Hardware stack levels used:    1
 13554 ;; Hardware stack levels required when called:    1
 13555 ;; This function calls:
 13556 ;;		Nothing
 13557 ;; This function is called by:
 13558 ;;		_init_timer_2
 13559 ;;		_update_pwm_duty_ccp1
 13560 ;;		_get_temperature
 13561 ;;		_roundf
 13562 ;; This function uses a non-reentrant model
 13563 ;;
 13564                           
 13565                           	psect	text54
 13566  002126                     __ptext54:
 13567                           	callstack 0
 13568  002126                     ___flmul:
 13569                           	callstack 0
 13570  002126  FFFF               	dw	65535	; assembler added errata NOP
 13571  002128  5030               	movf	(___flmul@b+3)^0,w,c
 13572  00212A  0B80               	andlw	128
 13573  00212C  6E39               	movwf	___flmul@sign^0,c
 13574  00212E  5030               	movf	(___flmul@b+3)^0,w,c
 13575  002130  2430               	addwf	(___flmul@b+3)^0,w,c
 13576  002132  6E3F               	movwf	___flmul@bexp^0,c
 13577  002134  AE2F               	btfss	(___flmul@b+2)^0,7,c
 13578  002136  EF9F  F010         	goto	u5891
 13579  00213A  EFA2  F010         	goto	u5890
 13580  00213E                     u5891:
 13581  00213E  FFFF               	dw	65535	; assembler added errata NOP
 13582  002140  EFA4  F010         	goto	l4830
 13583  002144                     u5890:
 13584  002144  FFFF               	dw	65535	; assembler added errata NOP
 13585  002146  803F               	bsf	___flmul@bexp^0,0,c
 13586  002148                     l4830:
 13587  002148  FFFF               	dw	65535	; assembler added errata NOP
 13588  00214A  503F               	movf	___flmul@bexp^0,w,c
 13589  00214C  B4D8               	btfsc	status,2,c
 13590  00214E  EFAB  F010         	goto	u5901
 13591  002152  EFAE  F010         	goto	u5900
 13592  002156                     u5901:
 13593  002156  FFFF               	dw	65535	; assembler added errata NOP
 13594  002158  EFC5  F010         	goto	l4838
 13595  00215C                     u5900:
 13596  00215C  FFFF               	dw	65535	; assembler added errata NOP
 13597  00215E  283F               	incf	___flmul@bexp^0,w,c
 13598  002160  A4D8               	btfss	status,2,c
 13599  002162  EFB5  F010         	goto	u5911
 13600  002166  EFB8  F010         	goto	u5910
 13601  00216A                     u5911:
 13602  00216A  FFFF               	dw	65535	; assembler added errata NOP
 13603  00216C  EFC1  F010         	goto	l4836
 13604  002170                     u5910:
 13605  002170  FFFF               	dw	65535	; assembler added errata NOP
 13606  002172  0E00               	movlw	0
 13607  002174  6E2D               	movwf	___flmul@b^0,c
 13608  002176  0E00               	movlw	0
 13609  002178  6E2E               	movwf	(___flmul@b+1)^0,c
 13610  00217A  0E00               	movlw	0
 13611  00217C  6E2F               	movwf	(___flmul@b+2)^0,c
 13612  00217E  0E00               	movlw	0
 13613  002180  6E30               	movwf	(___flmul@b+3)^0,c
 13614  002182                     l4836:
 13615  002182  FFFF               	dw	65535	; assembler added errata NOP
 13616  002184  8E2F               	bsf	(___flmul@b+2)^0,7,c
 13617  002186  EFCE  F010         	goto	l4840
 13618  00218A                     l4838:
 13619  00218A  FFFF               	dw	65535	; assembler added errata NOP
 13620  00218C  0E00               	movlw	0
 13621  00218E  6E2D               	movwf	___flmul@b^0,c
 13622  002190  0E00               	movlw	0
 13623  002192  6E2E               	movwf	(___flmul@b+1)^0,c
 13624  002194  0E00               	movlw	0
 13625  002196  6E2F               	movwf	(___flmul@b+2)^0,c
 13626  002198  0E00               	movlw	0
 13627  00219A  6E30               	movwf	(___flmul@b+3)^0,c
 13628  00219C                     l4840:
 13629  00219C  FFFF               	dw	65535	; assembler added errata NOP
 13630  00219E  5034               	movf	(___flmul@a+3)^0,w,c
 13631  0021A0  0B80               	andlw	128
 13632  0021A2  1A39               	xorwf	___flmul@sign^0,f,c
 13633  0021A4  5034               	movf	(___flmul@a+3)^0,w,c
 13634  0021A6  2434               	addwf	(___flmul@a+3)^0,w,c
 13635  0021A8  6E3E               	movwf	___flmul@aexp^0,c
 13636  0021AA  AE33               	btfss	(___flmul@a+2)^0,7,c
 13637  0021AC  EFDA  F010         	goto	u5921
 13638  0021B0  EFDD  F010         	goto	u5920
 13639  0021B4                     u5921:
 13640  0021B4  FFFF               	dw	65535	; assembler added errata NOP
 13641  0021B6  EFDF  F010         	goto	l4848
 13642  0021BA                     u5920:
 13643  0021BA  FFFF               	dw	65535	; assembler added errata NOP
 13644  0021BC  803E               	bsf	___flmul@aexp^0,0,c
 13645  0021BE                     l4848:
 13646  0021BE  FFFF               	dw	65535	; assembler added errata NOP
 13647  0021C0  503E               	movf	___flmul@aexp^0,w,c
 13648  0021C2  B4D8               	btfsc	status,2,c
 13649  0021C4  EFE6  F010         	goto	u5931
 13650  0021C8  EFE9  F010         	goto	u5930
 13651  0021CC                     u5931:
 13652  0021CC  FFFF               	dw	65535	; assembler added errata NOP
 13653  0021CE  EF00  F011         	goto	l4856
 13654  0021D2                     u5930:
 13655  0021D2  FFFF               	dw	65535	; assembler added errata NOP
 13656  0021D4  283E               	incf	___flmul@aexp^0,w,c
 13657  0021D6  A4D8               	btfss	status,2,c
 13658  0021D8  EFF0  F010         	goto	u5941
 13659  0021DC  EFF3  F010         	goto	u5940
 13660  0021E0                     u5941:
 13661  0021E0  FFFF               	dw	65535	; assembler added errata NOP
 13662  0021E2  EFFC  F010         	goto	l4854
 13663  0021E6                     u5940:
 13664  0021E6  FFFF               	dw	65535	; assembler added errata NOP
 13665  0021E8  0E00               	movlw	0
 13666  0021EA  6E31               	movwf	___flmul@a^0,c
 13667  0021EC  0E00               	movlw	0
 13668  0021EE  6E32               	movwf	(___flmul@a+1)^0,c
 13669  0021F0  0E00               	movlw	0
 13670  0021F2  6E33               	movwf	(___flmul@a+2)^0,c
 13671  0021F4  0E00               	movlw	0
 13672  0021F6  6E34               	movwf	(___flmul@a+3)^0,c
 13673  0021F8                     l4854:
 13674  0021F8  FFFF               	dw	65535	; assembler added errata NOP
 13675  0021FA  8E33               	bsf	(___flmul@a+2)^0,7,c
 13676  0021FC  EF09  F011         	goto	l1002
 13677  002200                     l4856:
 13678  002200  FFFF               	dw	65535	; assembler added errata NOP
 13679  002202  0E00               	movlw	0
 13680  002204  6E31               	movwf	___flmul@a^0,c
 13681  002206  0E00               	movlw	0
 13682  002208  6E32               	movwf	(___flmul@a+1)^0,c
 13683  00220A  0E00               	movlw	0
 13684  00220C  6E33               	movwf	(___flmul@a+2)^0,c
 13685  00220E  0E00               	movlw	0
 13686  002210  6E34               	movwf	(___flmul@a+3)^0,c
 13687  002212                     l1002:
 13688  002212  FFFF               	dw	65535	; assembler added errata NOP
 13689  002214  503E               	movf	___flmul@aexp^0,w,c
 13690  002216  B4D8               	btfsc	status,2,c
 13691  002218  EF10  F011         	goto	u5951
 13692  00221C  EF13  F011         	goto	u5950
 13693  002220                     u5951:
 13694  002220  FFFF               	dw	65535	; assembler added errata NOP
 13695  002222  EF1D  F011         	goto	l4860
 13696  002226                     u5950:
 13697  002226  FFFF               	dw	65535	; assembler added errata NOP
 13698  002228  503F               	movf	___flmul@bexp^0,w,c
 13699  00222A  A4D8               	btfss	status,2,c
 13700  00222C  EF1A  F011         	goto	u5961
 13701  002230  EF1D  F011         	goto	u5960
 13702  002234                     u5961:
 13703  002234  FFFF               	dw	65535	; assembler added errata NOP
 13704  002236  EF28  F011         	goto	l4864
 13705  00223A                     u5960:
 13706  00223A                     l4860:
 13707  00223A  FFFF               	dw	65535	; assembler added errata NOP
 13708  00223C  0E00               	movlw	0
 13709  00223E  6E2D               	movwf	?___flmul^0,c
 13710  002240  0E00               	movlw	0
 13711  002242  6E2E               	movwf	(?___flmul+1)^0,c
 13712  002244  0E00               	movlw	0
 13713  002246  6E2F               	movwf	(?___flmul+2)^0,c
 13714  002248  0E00               	movlw	0
 13715  00224A  6E30               	movwf	(?___flmul+3)^0,c
 13716  00224C  EFE2  F012         	goto	l1006
 13717  002250                     l4864:
 13718  002250  FFFF               	dw	65535	; assembler added errata NOP
 13719  002252  5033               	movf	(___flmul@a+2)^0,w,c
 13720  002254  022D               	mulwf	___flmul@b^0,c
 13721  002256  CFF3 F044          	movff	prodl,___flmul@temp
 13722  00225A  CFF4 F045          	movff	prodh,___flmul@temp+1
 13723  00225E  5044               	movf	___flmul@temp^0,w,c
 13724  002260  6E3A               	movwf	___flmul@grs^0,c
 13725  002262  6A3B               	clrf	(___flmul@grs+1)^0,c
 13726  002264  6A3C               	clrf	(___flmul@grs+2)^0,c
 13727  002266  6A3D               	clrf	(___flmul@grs+3)^0,c
 13728  002268  5045               	movf	(___flmul@temp+1)^0,w,c
 13729  00226A  6E40               	movwf	___flmul@prod^0,c
 13730  00226C  6A41               	clrf	(___flmul@prod+1)^0,c
 13731  00226E  6A42               	clrf	(___flmul@prod+2)^0,c
 13732  002270  6A43               	clrf	(___flmul@prod+3)^0,c
 13733  002272  5032               	movf	(___flmul@a+1)^0,w,c
 13734  002274  022E               	mulwf	(___flmul@b+1)^0,c
 13735  002276  CFF3 F044          	movff	prodl,___flmul@temp
 13736  00227A  CFF4 F045          	movff	prodh,___flmul@temp+1
 13737  00227E  5044               	movf	___flmul@temp^0,w,c
 13738  002280  263A               	addwf	___flmul@grs^0,f,c
 13739  002282  0E00               	movlw	0
 13740  002284  223B               	addwfc	(___flmul@grs+1)^0,f,c
 13741  002286  223C               	addwfc	(___flmul@grs+2)^0,f,c
 13742  002288  223D               	addwfc	(___flmul@grs+3)^0,f,c
 13743  00228A  5045               	movf	(___flmul@temp+1)^0,w,c
 13744  00228C  2640               	addwf	___flmul@prod^0,f,c
 13745  00228E  0E00               	movlw	0
 13746  002290  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13747  002292  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13748  002294  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13749  002296  5031               	movf	___flmul@a^0,w,c
 13750  002298  022F               	mulwf	(___flmul@b+2)^0,c
 13751  00229A  CFF3 F044          	movff	prodl,___flmul@temp
 13752  00229E  CFF4 F045          	movff	prodh,___flmul@temp+1
 13753  0022A2  5044               	movf	___flmul@temp^0,w,c
 13754  0022A4  263A               	addwf	___flmul@grs^0,f,c
 13755  0022A6  0E00               	movlw	0
 13756  0022A8  223B               	addwfc	(___flmul@grs+1)^0,f,c
 13757  0022AA  223C               	addwfc	(___flmul@grs+2)^0,f,c
 13758  0022AC  223D               	addwfc	(___flmul@grs+3)^0,f,c
 13759  0022AE  5045               	movf	(___flmul@temp+1)^0,w,c
 13760  0022B0  2640               	addwf	___flmul@prod^0,f,c
 13761  0022B2  0E00               	movlw	0
 13762  0022B4  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13763  0022B6  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13764  0022B8  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13765  0022BA  C03C  F03D         	movff	___flmul@grs+2,___flmul@grs+3
 13766  0022BE  C03B  F03C         	movff	___flmul@grs+1,___flmul@grs+2
 13767  0022C2  C03A  F03B         	movff	___flmul@grs,___flmul@grs+1
 13768  0022C6  6A3A               	clrf	___flmul@grs^0,c
 13769  0022C8  5031               	movf	___flmul@a^0,w,c
 13770  0022CA  022E               	mulwf	(___flmul@b+1)^0,c
 13771  0022CC  CFF3 F044          	movff	prodl,___flmul@temp
 13772  0022D0  CFF4 F045          	movff	prodh,___flmul@temp+1
 13773  0022D4  5044               	movf	___flmul@temp^0,w,c
 13774  0022D6  263A               	addwf	___flmul@grs^0,f,c
 13775  0022D8  5045               	movf	(___flmul@temp+1)^0,w,c
 13776  0022DA  223B               	addwfc	(___flmul@grs+1)^0,f,c
 13777  0022DC  0E00               	movlw	0
 13778  0022DE  223C               	addwfc	(___flmul@grs+2)^0,f,c
 13779  0022E0  0E00               	movlw	0
 13780  0022E2  223D               	addwfc	(___flmul@grs+3)^0,f,c
 13781  0022E4  5032               	movf	(___flmul@a+1)^0,w,c
 13782  0022E6  022D               	mulwf	___flmul@b^0,c
 13783  0022E8  CFF3 F044          	movff	prodl,___flmul@temp
 13784  0022EC  CFF4 F045          	movff	prodh,___flmul@temp+1
 13785  0022F0  5044               	movf	___flmul@temp^0,w,c
 13786  0022F2  263A               	addwf	___flmul@grs^0,f,c
 13787  0022F4  5045               	movf	(___flmul@temp+1)^0,w,c
 13788  0022F6  223B               	addwfc	(___flmul@grs+1)^0,f,c
 13789  0022F8  0E00               	movlw	0
 13790  0022FA  223C               	addwfc	(___flmul@grs+2)^0,f,c
 13791  0022FC  0E00               	movlw	0
 13792  0022FE  223D               	addwfc	(___flmul@grs+3)^0,f,c
 13793  002300  C03C  F03D         	movff	___flmul@grs+2,___flmul@grs+3
 13794  002304  C03B  F03C         	movff	___flmul@grs+1,___flmul@grs+2
 13795  002308  C03A  F03B         	movff	___flmul@grs,___flmul@grs+1
 13796  00230C  6A3A               	clrf	___flmul@grs^0,c
 13797  00230E  5031               	movf	___flmul@a^0,w,c
 13798  002310  022D               	mulwf	___flmul@b^0,c
 13799  002312  CFF3 F044          	movff	prodl,___flmul@temp
 13800  002316  CFF4 F045          	movff	prodh,___flmul@temp+1
 13801  00231A  5044               	movf	___flmul@temp^0,w,c
 13802  00231C  263A               	addwf	___flmul@grs^0,f,c
 13803  00231E  5045               	movf	(___flmul@temp+1)^0,w,c
 13804  002320  223B               	addwfc	(___flmul@grs+1)^0,f,c
 13805  002322  0E00               	movlw	0
 13806  002324  223C               	addwfc	(___flmul@grs+2)^0,f,c
 13807  002326  0E00               	movlw	0
 13808  002328  223D               	addwfc	(___flmul@grs+3)^0,f,c
 13809  00232A  5033               	movf	(___flmul@a+2)^0,w,c
 13810  00232C  022E               	mulwf	(___flmul@b+1)^0,c
 13811  00232E  CFF3 F044          	movff	prodl,___flmul@temp
 13812  002332  CFF4 F045          	movff	prodh,___flmul@temp+1
 13813  002336  5044               	movf	___flmul@temp^0,w,c
 13814  002338  2640               	addwf	___flmul@prod^0,f,c
 13815  00233A  5045               	movf	(___flmul@temp+1)^0,w,c
 13816  00233C  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13817  00233E  0E00               	movlw	0
 13818  002340  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13819  002342  0E00               	movlw	0
 13820  002344  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13821  002346  5032               	movf	(___flmul@a+1)^0,w,c
 13822  002348  022F               	mulwf	(___flmul@b+2)^0,c
 13823  00234A  CFF3 F044          	movff	prodl,___flmul@temp
 13824  00234E  CFF4 F045          	movff	prodh,___flmul@temp+1
 13825  002352  5044               	movf	___flmul@temp^0,w,c
 13826  002354  2640               	addwf	___flmul@prod^0,f,c
 13827  002356  5045               	movf	(___flmul@temp+1)^0,w,c
 13828  002358  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13829  00235A  0E00               	movlw	0
 13830  00235C  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13831  00235E  0E00               	movlw	0
 13832  002360  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13833  002362  5033               	movf	(___flmul@a+2)^0,w,c
 13834  002364  022F               	mulwf	(___flmul@b+2)^0,c
 13835  002366  CFF3 F044          	movff	prodl,___flmul@temp
 13836  00236A  CFF4 F045          	movff	prodh,___flmul@temp+1
 13837  00236E  5044               	movf	___flmul@temp^0,w,c
 13838  002370  6E35               	movwf	??___flmul^0,c
 13839  002372  5045               	movf	(___flmul@temp+1)^0,w,c
 13840  002374  6E36               	movwf	(??___flmul+1)^0,c
 13841  002376  6A37               	clrf	(??___flmul+2)^0,c
 13842  002378  6A38               	clrf	(??___flmul+3)^0,c
 13843  00237A  C037  F038         	movff	??___flmul+2,??___flmul+3
 13844  00237E  C036  F037         	movff	??___flmul+1,??___flmul+2
 13845  002382  C035  F036         	movff	??___flmul,??___flmul+1
 13846  002386  6A35               	clrf	??___flmul^0,c
 13847  002388  5035               	movf	??___flmul^0,w,c
 13848  00238A  2640               	addwf	___flmul@prod^0,f,c
 13849  00238C  5036               	movf	(??___flmul+1)^0,w,c
 13850  00238E  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13851  002390  5037               	movf	(??___flmul+2)^0,w,c
 13852  002392  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13853  002394  5038               	movf	(??___flmul+3)^0,w,c
 13854  002396  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13855  002398  C03A  F035         	movff	___flmul@grs,??___flmul
 13856  00239C  C03B  F036         	movff	___flmul@grs+1,??___flmul+1
 13857  0023A0  C03C  F037         	movff	___flmul@grs+2,??___flmul+2
 13858  0023A4  C03D  F038         	movff	___flmul@grs+3,??___flmul+3
 13859  0023A8  0E19               	movlw	25
 13860  0023AA  EFDD  F011         	goto	u5970
 13861  0023AE                     u5975:
 13862  0023AE  FFFF               	dw	65535	; assembler added errata NOP
 13863  0023B0  90D8               	bcf	status,0,c
 13864  0023B2  3238               	rrcf	(??___flmul+3)^0,f,c
 13865  0023B4  3237               	rrcf	(??___flmul+2)^0,f,c
 13866  0023B6  3236               	rrcf	(??___flmul+1)^0,f,c
 13867  0023B8  3235               	rrcf	??___flmul^0,f,c
 13868  0023BA                     u5970:
 13869  0023BA  FFFF               	dw	65535	; assembler added errata NOP
 13870  0023BC  2EE8               	decfsz	wreg,f,c
 13871  0023BE  EFD7  F011         	goto	u5975
 13872  0023C2  5035               	movf	??___flmul^0,w,c
 13873  0023C4  2640               	addwf	___flmul@prod^0,f,c
 13874  0023C6  5036               	movf	(??___flmul+1)^0,w,c
 13875  0023C8  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13876  0023CA  5037               	movf	(??___flmul+2)^0,w,c
 13877  0023CC  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13878  0023CE  5038               	movf	(??___flmul+3)^0,w,c
 13879  0023D0  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13880  0023D2  C03C  F03D         	movff	___flmul@grs+2,___flmul@grs+3
 13881  0023D6  C03B  F03C         	movff	___flmul@grs+1,___flmul@grs+2
 13882  0023DA  C03A  F03B         	movff	___flmul@grs,___flmul@grs+1
 13883  0023DE  6A3A               	clrf	___flmul@grs^0,c
 13884  0023E0  503E               	movf	___flmul@aexp^0,w,c
 13885  0023E2  C03F  F035         	movff	___flmul@bexp,??___flmul
 13886  0023E6  6A36               	clrf	(??___flmul+1)^0,c
 13887  0023E8  2635               	addwf	??___flmul^0,f,c
 13888  0023EA  0E00               	movlw	0
 13889  0023EC  2236               	addwfc	(??___flmul+1)^0,f,c
 13890  0023EE  0E82               	movlw	130
 13891  0023F0  2435               	addwf	??___flmul^0,w,c
 13892  0023F2  6E44               	movwf	___flmul@temp^0,c
 13893  0023F4  0EFF               	movlw	255
 13894  0023F6  2036               	addwfc	(??___flmul+1)^0,w,c
 13895  0023F8  6E45               	movwf	(___flmul@temp+1)^0,c
 13896  0023FA  EF18  F012         	goto	l4912
 13897  0023FE                     l4906:
 13898  0023FE  FFFF               	dw	65535	; assembler added errata NOP
 13899  002400  90D8               	bcf	status,0,c
 13900  002402  3640               	rlcf	___flmul@prod^0,f,c
 13901  002404  3641               	rlcf	(___flmul@prod+1)^0,f,c
 13902  002406  3642               	rlcf	(___flmul@prod+2)^0,f,c
 13903  002408  3643               	rlcf	(___flmul@prod+3)^0,f,c
 13904  00240A  AE3D               	btfss	(___flmul@grs+3)^0,7,c
 13905  00240C  EF0A  F012         	goto	u5981
 13906  002410  EF0D  F012         	goto	u5980
 13907  002414                     u5981:
 13908  002414  FFFF               	dw	65535	; assembler added errata NOP
 13909  002416  EF0F  F012         	goto	l1009
 13910  00241A                     u5980:
 13911  00241A  FFFF               	dw	65535	; assembler added errata NOP
 13912  00241C  8040               	bsf	___flmul@prod^0,0,c
 13913  00241E                     l1009:
 13914  00241E  FFFF               	dw	65535	; assembler added errata NOP
 13915  002420  90D8               	bcf	status,0,c
 13916  002422  363A               	rlcf	___flmul@grs^0,f,c
 13917  002424  363B               	rlcf	(___flmul@grs+1)^0,f,c
 13918  002426  363C               	rlcf	(___flmul@grs+2)^0,f,c
 13919  002428  363D               	rlcf	(___flmul@grs+3)^0,f,c
 13920  00242A  0644               	decf	___flmul@temp^0,f,c
 13921  00242C  A0D8               	btfss	status,0,c
 13922  00242E  0645               	decf	(___flmul@temp+1)^0,f,c
 13923  002430                     l4912:
 13924  002430  FFFF               	dw	65535	; assembler added errata NOP
 13925  002432  AE42               	btfss	(___flmul@prod+2)^0,7,c
 13926  002434  EF1E  F012         	goto	u5991
 13927  002438  EF21  F012         	goto	u5990
 13928  00243C                     u5991:
 13929  00243C  FFFF               	dw	65535	; assembler added errata NOP
 13930  00243E  EFFF  F011         	goto	l4906
 13931  002442                     u5990:
 13932  002442  FFFF               	dw	65535	; assembler added errata NOP
 13933  002444  0E00               	movlw	0
 13934  002446  6E3E               	movwf	___flmul@aexp^0,c
 13935  002448  AE3D               	btfss	(___flmul@grs+3)^0,7,c
 13936  00244A  EF29  F012         	goto	u6001
 13937  00244E  EF2C  F012         	goto	u6000
 13938  002452                     u6001:
 13939  002452  FFFF               	dw	65535	; assembler added errata NOP
 13940  002454  EF57  F012         	goto	l1011
 13941  002458                     u6000:
 13942  002458  FFFF               	dw	65535	; assembler added errata NOP
 13943  00245A  0EFF               	movlw	255
 13944  00245C  143A               	andwf	___flmul@grs^0,w,c
 13945  00245E  6E35               	movwf	??___flmul^0,c
 13946  002460  0EFF               	movlw	255
 13947  002462  143B               	andwf	(___flmul@grs+1)^0,w,c
 13948  002464  6E36               	movwf	(??___flmul+1)^0,c
 13949  002466  0EFF               	movlw	255
 13950  002468  143C               	andwf	(___flmul@grs+2)^0,w,c
 13951  00246A  6E37               	movwf	(??___flmul+2)^0,c
 13952  00246C  0E7F               	movlw	127
 13953  00246E  143D               	andwf	(___flmul@grs+3)^0,w,c
 13954  002470  6E38               	movwf	(??___flmul+3)^0,c
 13955  002472  5035               	movf	??___flmul^0,w,c
 13956  002474  1036               	iorwf	(??___flmul+1)^0,w,c
 13957  002476  1037               	iorwf	(??___flmul+2)^0,w,c
 13958  002478  1038               	iorwf	(??___flmul+3)^0,w,c
 13959  00247A  B4D8               	btfsc	status,2,c
 13960  00247C  EF42  F012         	goto	u6011
 13961  002480  EF45  F012         	goto	u6010
 13962  002484                     u6011:
 13963  002484  FFFF               	dw	65535	; assembler added errata NOP
 13964  002486  EF4B  F012         	goto	l1012
 13965  00248A                     u6010:
 13966  00248A  FFFF               	dw	65535	; assembler added errata NOP
 13967  00248C                     l4920:
 13968  00248C  FFFF               	dw	65535	; assembler added errata NOP
 13969  00248E  0E01               	movlw	1
 13970  002490  6E3E               	movwf	___flmul@aexp^0,c
 13971  002492  EF57  F012         	goto	l1011
 13972  002496                     l1012:
 13973  002496  FFFF               	dw	65535	; assembler added errata NOP
 13974  002498  A040               	btfss	___flmul@prod^0,0,c
 13975  00249A  EF51  F012         	goto	u6021
 13976  00249E  EF54  F012         	goto	u6020
 13977  0024A2                     u6021:
 13978  0024A2  FFFF               	dw	65535	; assembler added errata NOP
 13979  0024A4  EF57  F012         	goto	l1011
 13980  0024A8                     u6020:
 13981  0024A8  FFFF               	dw	65535	; assembler added errata NOP
 13982  0024AA  EF46  F012         	goto	l4920
 13983  0024AE                     l1011:
 13984  0024AE  FFFF               	dw	65535	; assembler added errata NOP
 13985  0024B0  503E               	movf	___flmul@aexp^0,w,c
 13986  0024B2  B4D8               	btfsc	status,2,c
 13987  0024B4  EF5E  F012         	goto	u6031
 13988  0024B8  EF61  F012         	goto	u6030
 13989  0024BC                     u6031:
 13990  0024BC  FFFF               	dw	65535	; assembler added errata NOP
 13991  0024BE  EF88  F012         	goto	l4932
 13992  0024C2                     u6030:
 13993  0024C2  FFFF               	dw	65535	; assembler added errata NOP
 13994  0024C4  0E01               	movlw	1
 13995  0024C6  2640               	addwf	___flmul@prod^0,f,c
 13996  0024C8  0E00               	movlw	0
 13997  0024CA  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13998  0024CC  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13999  0024CE  2243               	addwfc	(___flmul@prod+3)^0,f,c
 14000  0024D0  A043               	btfss	(___flmul@prod+3)^0,0,c
 14001  0024D2  EF6D  F012         	goto	u6041
 14002  0024D6  EF70  F012         	goto	u6040
 14003  0024DA                     u6041:
 14004  0024DA  FFFF               	dw	65535	; assembler added errata NOP
 14005  0024DC  EF88  F012         	goto	l4932
 14006  0024E0                     u6040:
 14007  0024E0  FFFF               	dw	65535	; assembler added errata NOP
 14008  0024E2  C040  F035         	movff	___flmul@prod,??___flmul
 14009  0024E6  C041  F036         	movff	___flmul@prod+1,??___flmul+1
 14010  0024EA  C042  F037         	movff	___flmul@prod+2,??___flmul+2
 14011  0024EE  C043  F038         	movff	___flmul@prod+3,??___flmul+3
 14012  0024F2  3438               	rlcf	(??___flmul+3)^0,w,c
 14013  0024F4  3238               	rrcf	(??___flmul+3)^0,f,c
 14014  0024F6  3237               	rrcf	(??___flmul+2)^0,f,c
 14015  0024F8  3236               	rrcf	(??___flmul+1)^0,f,c
 14016  0024FA  3235               	rrcf	??___flmul^0,f,c
 14017  0024FC  C035  F040         	movff	??___flmul,___flmul@prod
 14018  002500  C036  F041         	movff	??___flmul+1,___flmul@prod+1
 14019  002504  C037  F042         	movff	??___flmul+2,___flmul@prod+2
 14020  002508  C038  F043         	movff	??___flmul+3,___flmul@prod+3
 14021  00250C  4A44               	infsnz	___flmul@temp^0,f,c
 14022  00250E  2A45               	incf	(___flmul@temp+1)^0,f,c
 14023  002510                     l4932:
 14024  002510  FFFF               	dw	65535	; assembler added errata NOP
 14025  002512  BE45               	btfsc	(___flmul@temp+1)^0,7,c
 14026  002514  EF94  F012         	goto	u6051
 14027  002518  5045               	movf	(___flmul@temp+1)^0,w,c
 14028  00251A  E109               	bnz	u6050
 14029  00251C  2844               	incf	___flmul@temp^0,w,c
 14030  00251E  A0D8               	btfss	status,0,c
 14031  002520  EF94  F012         	goto	u6051
 14032  002524  EF97  F012         	goto	u6050
 14033  002528                     u6051:
 14034  002528  FFFF               	dw	65535	; assembler added errata NOP
 14035  00252A  EFA2  F012         	goto	l4936
 14036  00252E                     u6050:
 14037  00252E  FFFF               	dw	65535	; assembler added errata NOP
 14038  002530  0E00               	movlw	0
 14039  002532  6E40               	movwf	___flmul@prod^0,c
 14040  002534  0E00               	movlw	0
 14041  002536  6E41               	movwf	(___flmul@prod+1)^0,c
 14042  002538  0E80               	movlw	128
 14043  00253A  6E42               	movwf	(___flmul@prod+2)^0,c
 14044  00253C  0E7F               	movlw	127
 14045  00253E  6E43               	movwf	(___flmul@prod+3)^0,c
 14046  002540  EFD7  F012         	goto	l4948
 14047  002544                     l4936:
 14048  002544  FFFF               	dw	65535	; assembler added errata NOP
 14049  002546  BE45               	btfsc	(___flmul@temp+1)^0,7,c
 14050  002548  EFB1  F012         	goto	u6060
 14051  00254C  5045               	movf	(___flmul@temp+1)^0,w,c
 14052  00254E  E106               	bnz	u6061
 14053  002550  0444               	decf	___flmul@temp^0,w,c
 14054  002552  B0D8               	btfsc	status,0,c
 14055  002554  EFAE  F012         	goto	u6061
 14056  002558  EFB1  F012         	goto	u6060
 14057  00255C                     u6061:
 14058  00255C  FFFF               	dw	65535	; assembler added errata NOP
 14059  00255E  EFBE  F012         	goto	l1019
 14060  002562                     u6060:
 14061  002562  FFFF               	dw	65535	; assembler added errata NOP
 14062  002564  0E00               	movlw	0
 14063  002566  6E40               	movwf	___flmul@prod^0,c
 14064  002568  0E00               	movlw	0
 14065  00256A  6E41               	movwf	(___flmul@prod+1)^0,c
 14066  00256C  0E00               	movlw	0
 14067  00256E  6E42               	movwf	(___flmul@prod+2)^0,c
 14068  002570  0E00               	movlw	0
 14069  002572  6E43               	movwf	(___flmul@prod+3)^0,c
 14070  002574  0E00               	movlw	0
 14071  002576  6E39               	movwf	___flmul@sign^0,c
 14072  002578  EFD7  F012         	goto	l4948
 14073  00257C                     l1019:
 14074  00257C  FFFF               	dw	65535	; assembler added errata NOP
 14075  00257E  C044  F03F         	movff	___flmul@temp,___flmul@bexp
 14076  002582  0EFF               	movlw	255
 14077  002584  1640               	andwf	___flmul@prod^0,f,c
 14078  002586  0EFF               	movlw	255
 14079  002588  1641               	andwf	(___flmul@prod+1)^0,f,c
 14080  00258A  0E7F               	movlw	127
 14081  00258C  1642               	andwf	(___flmul@prod+2)^0,f,c
 14082  00258E  0E00               	movlw	0
 14083  002590  1643               	andwf	(___flmul@prod+3)^0,f,c
 14084  002592  A03F               	btfss	___flmul@bexp^0,0,c
 14085  002594  EFCE  F012         	goto	u6071
 14086  002598  EFD1  F012         	goto	u6070
 14087  00259C                     u6071:
 14088  00259C  FFFF               	dw	65535	; assembler added errata NOP
 14089  00259E  EFD3  F012         	goto	l4946
 14090  0025A2                     u6070:
 14091  0025A2  FFFF               	dw	65535	; assembler added errata NOP
 14092  0025A4  8E42               	bsf	(___flmul@prod+2)^0,7,c
 14093  0025A6                     l4946:
 14094  0025A6  FFFF               	dw	65535	; assembler added errata NOP
 14095  0025A8  90D8               	bcf	status,0,c
 14096  0025AA  303F               	rrcf	___flmul@bexp^0,w,c
 14097  0025AC  6E43               	movwf	(___flmul@prod+3)^0,c
 14098  0025AE                     l4948:
 14099  0025AE  FFFF               	dw	65535	; assembler added errata NOP
 14100  0025B0  5039               	movf	___flmul@sign^0,w,c
 14101  0025B2  1243               	iorwf	(___flmul@prod+3)^0,f,c
 14102  0025B4  C040  F02D         	movff	___flmul@prod,?___flmul
 14103  0025B8  C041  F02E         	movff	___flmul@prod+1,?___flmul+1
 14104  0025BC  C042  F02F         	movff	___flmul@prod+2,?___flmul+2
 14105  0025C0  C043  F030         	movff	___flmul@prod+3,?___flmul+3
 14106  0025C4                     l1006:
 14107  0025C4  FFFF               	dw	65535	; assembler added errata NOP
 14108  0025C6  0012               	return		;funcret
 14109  0025C8  FFFF               	dw	65535	; errata NOP
 14110  0025CA                     __end_of___flmul:
 14111                           	callstack 0
 14112                           
 14113 ;; *************** function ___fltol *****************
 14114 ;; Defined at:
 14115 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
 14116 ;; Parameters:    Size  Location     Type
 14117 ;;  f1              4   18[BANK0 ] unsigned char 
 14118 ;; Auto vars:     Size  Location     Type
 14119 ;;  exp1            1   27[BANK0 ] unsigned char 
 14120 ;;  sign1           1   26[BANK0 ] unsigned char 
 14121 ;; Return value:  Size  Location     Type
 14122 ;;                  4   18[BANK0 ] long 
 14123 ;; Registers used:
 14124 ;;		wreg, status,2, status,0
 14125 ;; Tracked objects:
 14126 ;;		On entry : 0/0
 14127 ;;		On exit  : 0/0
 14128 ;;		Unchanged: 0/0
 14129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14130 ;;      Params:         0       4       0       0       0       0       0
 14131 ;;      Locals:         0       2       0       0       0       0       0
 14132 ;;      Temps:          0       4       0       0       0       0       0
 14133 ;;      Totals:         0      10       0       0       0       0       0
 14134 ;;Total ram usage:       10 bytes
 14135 ;; Hardware stack levels used:    1
 14136 ;; Hardware stack levels required when called:    1
 14137 ;; This function calls:
 14138 ;;		Nothing
 14139 ;; This function is called by:
 14140 ;;		_init_USART
 14141 ;;		_init_timer_2
 14142 ;;		_update_pwm_duty_ccp1
 14143 ;;		_get_temperature
 14144 ;; This function uses a non-reentrant model
 14145 ;;
 14146                           
 14147                           	psect	text55
 14148  007970                     __ptext55:
 14149                           	callstack 0
 14150  007970                     ___fltol:
 14151                           	callstack 0
 14152  007970  FFFF               	dw	65535	; assembler added errata NOP
 14153  007972  0100               	movlb	0	; () banked
 14154  007974  35CC               	rlcf	(___fltol@f1+2)& (0+255),w,b
 14155  007976  35CD               	rlcf	(___fltol@f1+3)& (0+255),w,b
 14156  007978  6FD3               	movwf	___fltol@exp1& (0+255),b
 14157  00797A  51D3               	movf	___fltol@exp1& (0+255),w,b
 14158  00797C  A4D8               	btfss	status,2,c
 14159  00797E  EFC3  F03C         	goto	u6141
 14160  007982  EFC6  F03C         	goto	u6140
 14161  007986                     u6141:
 14162  007986  FFFF               	dw	65535	; assembler added errata NOP
 14163  007988  EFD2  F03C         	goto	l4996
 14164  00798C                     u6140:
 14165  00798C  FFFF               	dw	65535	; assembler added errata NOP
 14166  00798E                     l4992:
 14167  00798E  FFFF               	dw	65535	; assembler added errata NOP
 14168                           
 14169                           ; BSR set to: 0
 14170  007990  0E00               	movlw	0
 14171  007992  6FCA               	movwf	?___fltol& (0+255),b
 14172  007994  0E00               	movlw	0
 14173  007996  6FCB               	movwf	(?___fltol+1)& (0+255),b
 14174  007998  0E00               	movlw	0
 14175  00799A  6FCC               	movwf	(?___fltol+2)& (0+255),b
 14176  00799C  0E00               	movlw	0
 14177  00799E  6FCD               	movwf	(?___fltol+3)& (0+255),b
 14178  0079A0  EF51  F03D         	goto	l685
 14179  0079A4                     l4996:
 14180  0079A4  FFFF               	dw	65535	; assembler added errata NOP
 14181                           
 14182                           ; BSR set to: 0
 14183  0079A6  C0CA  F0CE         	movff	___fltol@f1,??___fltol
 14184  0079AA  C0CB  F0CF         	movff	___fltol@f1+1,??___fltol+1
 14185  0079AE  C0CC  F0D0         	movff	___fltol@f1+2,??___fltol+2
 14186  0079B2  C0CD  F0D1         	movff	___fltol@f1+3,??___fltol+3
 14187  0079B6  0E20               	movlw	32
 14188  0079B8  EFE4  F03C         	goto	u6150
 14189  0079BC                     u6155:
 14190  0079BC  FFFF               	dw	65535	; assembler added errata NOP
 14191  0079BE  90D8               	bcf	status,0,c
 14192  0079C0  33D1               	rrcf	(??___fltol+3)& (0+255),f,b
 14193  0079C2  33D0               	rrcf	(??___fltol+2)& (0+255),f,b
 14194  0079C4  33CF               	rrcf	(??___fltol+1)& (0+255),f,b
 14195  0079C6  33CE               	rrcf	??___fltol& (0+255),f,b
 14196  0079C8                     u6150:
 14197  0079C8  FFFF               	dw	65535	; assembler added errata NOP
 14198  0079CA  2EE8               	decfsz	wreg,f,c
 14199  0079CC  EFDE  F03C         	goto	u6155
 14200  0079D0  51CE               	movf	??___fltol& (0+255),w,b
 14201  0079D2  6FD2               	movwf	___fltol@sign1& (0+255),b
 14202  0079D4                     
 14203                           ; BSR set to: 0
 14204  0079D4  8FCC               	bsf	(___fltol@f1+2)& (0+255),7,b
 14205  0079D6                     
 14206                           ; BSR set to: 0
 14207  0079D6  0EFF               	movlw	255
 14208  0079D8  17CA               	andwf	___fltol@f1& (0+255),f,b
 14209  0079DA  0EFF               	movlw	255
 14210  0079DC  17CB               	andwf	(___fltol@f1+1)& (0+255),f,b
 14211  0079DE  0EFF               	movlw	255
 14212  0079E0  17CC               	andwf	(___fltol@f1+2)& (0+255),f,b
 14213  0079E2  0E00               	movlw	0
 14214  0079E4  17CD               	andwf	(___fltol@f1+3)& (0+255),f,b
 14215  0079E6                     
 14216                           ; BSR set to: 0
 14217  0079E6  0E96               	movlw	150
 14218  0079E8  5FD3               	subwf	___fltol@exp1& (0+255),f,b
 14219  0079EA                     
 14220                           ; BSR set to: 0
 14221  0079EA  BFD3               	btfsc	___fltol@exp1& (0+255),7,b
 14222  0079EC  EFFD  F03C         	goto	u6160
 14223  0079F0  EFFA  F03C         	goto	u6161
 14224  0079F4                     u6161:
 14225  0079F4  FFFF               	dw	65535	; assembler added errata NOP
 14226  0079F6  EF17  F03D         	goto	l5016
 14227  0079FA                     u6160:
 14228  0079FA  FFFF               	dw	65535	; assembler added errata NOP
 14229  0079FC                     
 14230                           ; BSR set to: 0
 14231  0079FC  51D3               	movf	___fltol@exp1& (0+255),w,b
 14232  0079FE  0A80               	xorlw	128
 14233  007A00  0F97               	addlw	151
 14234  007A02  B0D8               	btfsc	status,0,c
 14235  007A04  EF06  F03D         	goto	u6171
 14236  007A08  EF09  F03D         	goto	u6170
 14237  007A0C                     u6171:
 14238  007A0C  FFFF               	dw	65535	; assembler added errata NOP
 14239  007A0E  EF0C  F03D         	goto	l5012
 14240  007A12                     u6170:
 14241  007A12  FFFF               	dw	65535	; assembler added errata NOP
 14242  007A14  EFC7  F03C         	goto	l4992
 14243  007A18                     l5012:
 14244  007A18  FFFF               	dw	65535	; assembler added errata NOP
 14245                           
 14246                           ; BSR set to: 0
 14247  007A1A  90D8               	bcf	status,0,c
 14248  007A1C  33CD               	rrcf	(___fltol@f1+3)& (0+255),f,b
 14249  007A1E  33CC               	rrcf	(___fltol@f1+2)& (0+255),f,b
 14250  007A20  33CB               	rrcf	(___fltol@f1+1)& (0+255),f,b
 14251  007A22  33CA               	rrcf	___fltol@f1& (0+255),f,b
 14252  007A24                     
 14253                           ; BSR set to: 0
 14254  007A24  3FD3               	incfsz	___fltol@exp1& (0+255),f,b
 14255  007A26  EF0C  F03D         	goto	l5012
 14256  007A2A  EF35  F03D         	goto	l5026
 14257  007A2E                     l5016:
 14258  007A2E  FFFF               	dw	65535	; assembler added errata NOP
 14259                           
 14260                           ; BSR set to: 0
 14261  007A30  0E1F               	movlw	31
 14262  007A32  65D3               	cpfsgt	___fltol@exp1& (0+255),b
 14263  007A34  EF1E  F03D         	goto	u6181
 14264  007A38  EF21  F03D         	goto	u6180
 14265  007A3C                     u6181:
 14266  007A3C  FFFF               	dw	65535	; assembler added errata NOP
 14267  007A3E  EF2B  F03D         	goto	l5024
 14268  007A42                     u6180:
 14269  007A42  FFFF               	dw	65535	; assembler added errata NOP
 14270  007A44  EFC7  F03C         	goto	l4992
 14271  007A48                     l5022:
 14272  007A48  FFFF               	dw	65535	; assembler added errata NOP
 14273                           
 14274                           ; BSR set to: 0
 14275  007A4A  90D8               	bcf	status,0,c
 14276  007A4C  37CA               	rlcf	___fltol@f1& (0+255),f,b
 14277  007A4E  37CB               	rlcf	(___fltol@f1+1)& (0+255),f,b
 14278  007A50  37CC               	rlcf	(___fltol@f1+2)& (0+255),f,b
 14279  007A52  37CD               	rlcf	(___fltol@f1+3)& (0+255),f,b
 14280  007A54  07D3               	decf	___fltol@exp1& (0+255),f,b
 14281  007A56                     l5024:
 14282  007A56  FFFF               	dw	65535	; assembler added errata NOP
 14283                           
 14284                           ; BSR set to: 0
 14285  007A58  51D3               	movf	___fltol@exp1& (0+255),w,b
 14286  007A5A  A4D8               	btfss	status,2,c
 14287  007A5C  EF32  F03D         	goto	u6191
 14288  007A60  EF35  F03D         	goto	u6190
 14289  007A64                     u6191:
 14290  007A64  FFFF               	dw	65535	; assembler added errata NOP
 14291  007A66  EF24  F03D         	goto	l5022
 14292  007A6A                     u6190:
 14293  007A6A                     l5026:
 14294  007A6A  FFFF               	dw	65535	; assembler added errata NOP
 14295                           
 14296                           ; BSR set to: 0
 14297  007A6C  51D2               	movf	___fltol@sign1& (0+255),w,b
 14298  007A6E  B4D8               	btfsc	status,2,c
 14299  007A70  EF3C  F03D         	goto	u6201
 14300  007A74  EF3F  F03D         	goto	u6200
 14301  007A78                     u6201:
 14302  007A78  FFFF               	dw	65535	; assembler added errata NOP
 14303  007A7A  EF48  F03D         	goto	l5030
 14304  007A7E                     u6200:
 14305  007A7E  FFFF               	dw	65535	; assembler added errata NOP
 14306  007A80                     
 14307                           ; BSR set to: 0
 14308  007A80  1FCD               	comf	(___fltol@f1+3)& (0+255),f,b
 14309  007A82  1FCC               	comf	(___fltol@f1+2)& (0+255),f,b
 14310  007A84  1FCB               	comf	(___fltol@f1+1)& (0+255),f,b
 14311  007A86  6DCA               	negf	___fltol@f1& (0+255),b
 14312  007A88  0E00               	movlw	0
 14313  007A8A  23CB               	addwfc	(___fltol@f1+1)& (0+255),f,b
 14314  007A8C  23CC               	addwfc	(___fltol@f1+2)& (0+255),f,b
 14315  007A8E  23CD               	addwfc	(___fltol@f1+3)& (0+255),f,b
 14316  007A90                     l5030:
 14317  007A90  FFFF               	dw	65535	; assembler added errata NOP
 14318                           
 14319                           ; BSR set to: 0
 14320  007A92  C0CA  F0CA         	movff	___fltol@f1,?___fltol
 14321  007A96  C0CB  F0CB         	movff	___fltol@f1+1,?___fltol+1
 14322  007A9A  C0CC  F0CC         	movff	___fltol@f1+2,?___fltol+2
 14323  007A9E  C0CD  F0CD         	movff	___fltol@f1+3,?___fltol+3
 14324  007AA2                     l685:
 14325  007AA2  FFFF               	dw	65535	; assembler added errata NOP
 14326                           
 14327                           ; BSR set to: 0
 14328  007AA4  0012               	return		;funcret
 14329  007AA6  FFFF               	dw	65535	; errata NOP
 14330  007AA8                     __end_of___fltol:
 14331                           	callstack 0
 14332                           
 14333 ;; *************** function _init_PORTS *****************
 14334 ;; Defined at:
 14335 ;;		line 61 in file "init_PIC.c"
 14336 ;; Parameters:    Size  Location     Type
 14337 ;;		None
 14338 ;; Auto vars:     Size  Location     Type
 14339 ;;		None
 14340 ;; Return value:  Size  Location     Type
 14341 ;;                  1    wreg      void 
 14342 ;; Registers used:
 14343 ;;		wreg, status,2
 14344 ;; Tracked objects:
 14345 ;;		On entry : 0/0
 14346 ;;		On exit  : 0/0
 14347 ;;		Unchanged: 0/0
 14348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14349 ;;      Params:         0       0       0       0       0       0       0
 14350 ;;      Locals:         0       0       0       0       0       0       0
 14351 ;;      Temps:          0       0       0       0       0       0       0
 14352 ;;      Totals:         0       0       0       0       0       0       0
 14353 ;;Total ram usage:        0 bytes
 14354 ;; Hardware stack levels used:    1
 14355 ;; Hardware stack levels required when called:    1
 14356 ;; This function calls:
 14357 ;;		Nothing
 14358 ;; This function is called by:
 14359 ;;		_main
 14360 ;; This function uses a non-reentrant model
 14361 ;;
 14362                           
 14363                           	psect	text56
 14364  006672                     __ptext56:
 14365                           	callstack 0
 14366  006672                     _init_PORTS:
 14367                           	callstack 0
 14368  006672  FFFF               	dw	65535	; assembler added errata NOP
 14369  006674                     
 14370                           ;init_PIC.c: 63:     LATA = 0;
 14371  006674  0E00               	movlw	0
 14372  006676  6E89               	movwf	137,c	;volatile
 14373                           
 14374                           ;init_PIC.c: 64:     PORTA = 0;
 14375  006678  0E00               	movlw	0
 14376  00667A  6E80               	movwf	128,c	;volatile
 14377                           
 14378                           ;init_PIC.c: 65:     TRISA = 0xF0;
 14379  00667C  0EF0               	movlw	240
 14380  00667E  6E92               	movwf	146,c	;volatile
 14381                           
 14382                           ;init_PIC.c: 67:     LATB = 0;
 14383  006680  0E00               	movlw	0
 14384  006682  6E8A               	movwf	138,c	;volatile
 14385                           
 14386                           ;init_PIC.c: 68:     PORTB = 0;
 14387  006684  0E00               	movlw	0
 14388  006686  6E81               	movwf	129,c	;volatile
 14389                           
 14390                           ;init_PIC.c: 69:     TRISB = 0x00;
 14391  006688  0E00               	movlw	0
 14392  00668A  6E93               	movwf	147,c	;volatile
 14393                           
 14394                           ;init_PIC.c: 72:     LATC = 0;
 14395  00668C  0E00               	movlw	0
 14396  00668E  6E8B               	movwf	139,c	;volatile
 14397                           
 14398                           ;init_PIC.c: 73:     PORTC = 0;
 14399  006690  0E00               	movlw	0
 14400  006692  6E82               	movwf	130,c	;volatile
 14401  006694                     
 14402                           ;init_PIC.c: 74:     TRISCbits.RC2 = 0;
 14403  006694  9494               	bcf	148,2,c	;volatile
 14404  006696                     
 14405                           ;init_PIC.c: 75:     TRISCbits.RC7 = 1;
 14406  006696  8E94               	bsf	148,7,c	;volatile
 14407  006698                     
 14408                           ;init_PIC.c: 76:     TRISCbits.RC6 = 0;
 14409  006698  9C94               	bcf	148,6,c	;volatile
 14410  00669A  0012               	return		;funcret
 14411  00669C  FFFF               	dw	65535	; errata NOP
 14412  00669E                     __end_of_init_PORTS:
 14413                           	callstack 0
 14414                           
 14415 ;; *************** function _get_reg_value *****************
 14416 ;; Defined at:
 14417 ;;		line 51 in file "serial_rs232.c"
 14418 ;; Parameters:    Size  Location     Type
 14419 ;;		None
 14420 ;; Auto vars:     Size  Location     Type
 14421 ;;  rx_char         1    0[COMRAM] unsigned char 
 14422 ;; Return value:  Size  Location     Type
 14423 ;;                  1    wreg      unsigned char 
 14424 ;; Registers used:
 14425 ;;		wreg, status,2
 14426 ;; Tracked objects:
 14427 ;;		On entry : 0/0
 14428 ;;		On exit  : 0/0
 14429 ;;		Unchanged: 0/0
 14430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14431 ;;      Params:         0       0       0       0       0       0       0
 14432 ;;      Locals:         1       0       0       0       0       0       0
 14433 ;;      Temps:          0       0       0       0       0       0       0
 14434 ;;      Totals:         1       0       0       0       0       0       0
 14435 ;;Total ram usage:        1 bytes
 14436 ;; Hardware stack levels used:    1
 14437 ;; Hardware stack levels required when called:    1
 14438 ;; This function calls:
 14439 ;;		Nothing
 14440 ;; This function is called by:
 14441 ;;		_main
 14442 ;; This function uses a non-reentrant model
 14443 ;;
 14444                           
 14445                           	psect	text57
 14446  00650E                     __ptext57:
 14447                           	callstack 0
 14448  00650E                     _get_reg_value:
 14449                           	callstack 0
 14450  00650E  FFFF               	dw	65535	; assembler added errata NOP
 14451  006510                     
 14452                           ;serial_rs232.c: 52:     unsigned char rx_char = RCREG;
 14453  006510  CFAE F001          	movff	4014,get_reg_value@rx_char	;volatile
 14454  006514                     
 14455                           ;serial_rs232.c: 53:     RCREG = 0;
 14456  006514  0E00               	movlw	0
 14457  006516  6EAE               	movwf	174,c	;volatile
 14458                           
 14459                           ;serial_rs232.c: 54:     return rx_char;
 14460  006518  5001               	movf	get_reg_value@rx_char^0,w,c
 14461  00651A  0012               	return		;funcret
 14462  00651C  FFFF               	dw	65535	; errata NOP
 14463  00651E                     __end_of_get_reg_value:
 14464                           	callstack 0
 14465                           
 14466 ;; *************** function _configure_analog_digital_conversion *****************
 14467 ;; Defined at:
 14468 ;;		line 8 in file "oven.c"
 14469 ;; Parameters:    Size  Location     Type
 14470 ;;		None
 14471 ;; Auto vars:     Size  Location     Type
 14472 ;;		None
 14473 ;; Return value:  Size  Location     Type
 14474 ;;                  1    wreg      void 
 14475 ;; Registers used:
 14476 ;;		wreg, status,2
 14477 ;; Tracked objects:
 14478 ;;		On entry : 0/0
 14479 ;;		On exit  : 0/0
 14480 ;;		Unchanged: 0/0
 14481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14482 ;;      Params:         0       0       0       0       0       0       0
 14483 ;;      Locals:         0       0       0       0       0       0       0
 14484 ;;      Temps:          0       0       0       0       0       0       0
 14485 ;;      Totals:         0       0       0       0       0       0       0
 14486 ;;Total ram usage:        0 bytes
 14487 ;; Hardware stack levels used:    1
 14488 ;; Hardware stack levels required when called:    1
 14489 ;; This function calls:
 14490 ;;		Nothing
 14491 ;; This function is called by:
 14492 ;;		_main
 14493 ;; This function uses a non-reentrant model
 14494 ;;
 14495                           
 14496                           	psect	text58
 14497  0065A4                     __ptext58:
 14498                           	callstack 0
 14499  0065A4                     _configure_analog_digital_conversion:
 14500                           	callstack 0
 14501  0065A4  FFFF               	dw	65535	; assembler added errata NOP
 14502  0065A6                     
 14503                           ;oven.c: 9:     LATA = 0;
 14504  0065A6  0E00               	movlw	0
 14505  0065A8  6E89               	movwf	137,c	;volatile
 14506                           
 14507                           ;oven.c: 10:     PORTA = 0;
 14508  0065AA  0E00               	movlw	0
 14509  0065AC  6E80               	movwf	128,c	;volatile
 14510  0065AE                     
 14511                           ;oven.c: 11:     TRISA = 0xFF;
 14512  0065AE  6892               	setf	146,c	;volatile
 14513                           
 14514                           ;oven.c: 12:     ADCON0 = 0;
 14515  0065B0  0E00               	movlw	0
 14516  0065B2  6EC2               	movwf	194,c	;volatile
 14517  0065B4                     
 14518                           ;oven.c: 13:     ADCON0bits.CHS0 = 0;
 14519  0065B4  96C2               	bcf	194,3,c	;volatile
 14520  0065B6                     
 14521                           ;oven.c: 14:     ADCON0bits.CHS1 = 0;
 14522  0065B6  98C2               	bcf	194,4,c	;volatile
 14523  0065B8                     
 14524                           ;oven.c: 15:     ADCON0bits.CHS2 = 1;
 14525  0065B8  8AC2               	bsf	194,5,c	;volatile
 14526  0065BA                     
 14527                           ;oven.c: 16:     ADCON0bits.ADON = 1;
 14528  0065BA  80C2               	bsf	194,0,c	;volatile
 14529                           
 14530                           ;oven.c: 17:     ADRESH = 0;
 14531  0065BC  0E00               	movlw	0
 14532  0065BE  6EC4               	movwf	196,c	;volatile
 14533                           
 14534                           ;oven.c: 18:     ADRESL = 0;
 14535  0065C0  0E00               	movlw	0
 14536  0065C2  6EC3               	movwf	195,c	;volatile
 14537                           
 14538                           ;oven.c: 19:     ADCON1 = 0;
 14539  0065C4  0E00               	movlw	0
 14540  0065C6  6EC1               	movwf	193,c	;volatile
 14541  0065C8  0012               	return		;funcret
 14542  0065CA  FFFF               	dw	65535	; errata NOP
 14543  0065CC                     __end_of_configure_analog_digital_conversion:
 14544                           	callstack 0
 14545                           
 14546 ;; *************** function _check_temperature *****************
 14547 ;; Defined at:
 14548 ;;		line 36 in file "oven.c"
 14549 ;; Parameters:    Size  Location     Type
 14550 ;;  temp_to_be_c    2   30[BANK0 ] int 
 14551 ;; Auto vars:     Size  Location     Type
 14552 ;;  grad            4   32[BANK0 ] float 
 14553 ;; Return value:  Size  Location     Type
 14554 ;;                  2   30[BANK0 ] int 
 14555 ;; Registers used:
 14556 ;;		wreg, status,2, status,0, cstack
 14557 ;; Tracked objects:
 14558 ;;		On entry : 0/0
 14559 ;;		On exit  : 0/0
 14560 ;;		Unchanged: 0/0
 14561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14562 ;;      Params:         0       2       0       0       0       0       0
 14563 ;;      Locals:         0       4       0       0       0       0       0
 14564 ;;      Temps:          0       0       0       0       0       0       0
 14565 ;;      Totals:         0       6       0       0       0       0       0
 14566 ;;Total ram usage:        6 bytes
 14567 ;; Hardware stack levels used:    1
 14568 ;; Hardware stack levels required when called:    2
 14569 ;; This function calls:
 14570 ;;		___awdiv
 14571 ;;		___flge
 14572 ;;		___xxtofl
 14573 ;;		_abs
 14574 ;; This function is called by:
 14575 ;;		_main
 14576 ;; This function uses a non-reentrant model
 14577 ;;
 14578                           
 14579                           	psect	text59
 14580  0071B8                     __ptext59:
 14581                           	callstack 0
 14582  0071B8                     _check_temperature:
 14583                           	callstack 0
 14584  0071B8  FFFF               	dw	65535	; assembler added errata NOP
 14585  0071BA                     
 14586                           ;oven.c: 37:     float grad = abs(temp_to_be_checked - (-63))/5;
 14587  0071BA  0E00               	movlw	0
 14588  0071BC  6E1A               	movwf	(___awdiv@divisor+1)^0,c
 14589  0071BE  0E05               	movlw	5
 14590  0071C0  6E19               	movwf	___awdiv@divisor^0,c
 14591  0071C2  0E3F               	movlw	63
 14592  0071C4  0100               	movlb	0	; () banked
 14593  0071C6  25D6               	addwf	check_temperature@temp_to_be_checked& (0+255),w,b
 14594  0071C8  6E13               	movwf	abs@a^0,c
 14595  0071CA  0E00               	movlw	0
 14596  0071CC  21D7               	addwfc	(check_temperature@temp_to_be_checked+1)& (0+255),w,b
 14597  0071CE  6E14               	movwf	(abs@a+1)^0,c
 14598  0071D0  EC8F  F034         	call	_abs	;wreg free
 14599  0071D4  C013  F017         	movff	?_abs,___awdiv@dividend
 14600  0071D8  C014  F018         	movff	?_abs+1,___awdiv@dividend+1
 14601  0071DC  ECA3  F03A         	call	___awdiv	;wreg free
 14602  0071E0  C017  F01F         	movff	?___awdiv,___xxtofl@val
 14603  0071E4  C018  F020         	movff	?___awdiv+1,___xxtofl@val+1
 14604  0071E8  0E00               	movlw	0
 14605  0071EA  BE20               	btfsc	(___xxtofl@val+1)^0,7,c
 14606  0071EC  0EFF               	movlw	-1
 14607  0071EE  6E21               	movwf	(___xxtofl@val+2)^0,c
 14608  0071F0  6E22               	movwf	(___xxtofl@val+3)^0,c
 14609  0071F2  0E01               	movlw	1
 14610  0071F4  EC4E  F01C         	call	___xxtofl
 14611  0071F8  C01F  F0D8         	movff	?___xxtofl,check_temperature@grad
 14612  0071FC  C020  F0D9         	movff	?___xxtofl+1,check_temperature@grad+1
 14613  007200  C021  F0DA         	movff	?___xxtofl+2,check_temperature@grad+2
 14614  007204  C022  F0DB         	movff	?___xxtofl+3,check_temperature@grad+3
 14615                           
 14616                           ;oven.c: 38:     if (grad >= 12 && grad <= 13){
 14617  007208  C0D8  F001         	movff	check_temperature@grad,___flge@ff1
 14618  00720C  C0D9  F002         	movff	check_temperature@grad+1,___flge@ff1+1
 14619  007210  C0DA  F003         	movff	check_temperature@grad+2,___flge@ff1+2
 14620  007214  C0DB  F004         	movff	check_temperature@grad+3,___flge@ff1+3
 14621  007218  0E00               	movlw	0
 14622  00721A  6E05               	movwf	___flge@ff2^0,c
 14623  00721C  0E00               	movlw	0
 14624  00721E  6E06               	movwf	(___flge@ff2+1)^0,c
 14625  007220  0E40               	movlw	64
 14626  007222  6E07               	movwf	(___flge@ff2+2)^0,c
 14627  007224  0E41               	movlw	65
 14628  007226  6E08               	movwf	(___flge@ff2+3)^0,c
 14629  007228  EC24  F03C         	call	___flge	;wreg free
 14630  00722C  A0D8               	btfss	status,0,c
 14631  00722E  EF1B  F039         	goto	u6721
 14632  007232  EF1E  F039         	goto	u6720
 14633  007236                     u6721:
 14634  007236  FFFF               	dw	65535	; assembler added errata NOP
 14635  007238  EF41  F039         	goto	l5454
 14636  00723C                     u6720:
 14637  00723C  FFFF               	dw	65535	; assembler added errata NOP
 14638  00723E  0E00               	movlw	0
 14639  007240  6E01               	movwf	___flge@ff1^0,c
 14640  007242  0E00               	movlw	0
 14641  007244  6E02               	movwf	(___flge@ff1+1)^0,c
 14642  007246  0E50               	movlw	80
 14643  007248  6E03               	movwf	(___flge@ff1+2)^0,c
 14644  00724A  0E41               	movlw	65
 14645  00724C  6E04               	movwf	(___flge@ff1+3)^0,c
 14646  00724E  C0D8  F005         	movff	check_temperature@grad,___flge@ff2
 14647  007252  C0D9  F006         	movff	check_temperature@grad+1,___flge@ff2+1
 14648  007256  C0DA  F007         	movff	check_temperature@grad+2,___flge@ff2+2
 14649  00725A  C0DB  F008         	movff	check_temperature@grad+3,___flge@ff2+3
 14650  00725E  EC24  F03C         	call	___flge	;wreg free
 14651  007262  A0D8               	btfss	status,0,c
 14652  007264  EF36  F039         	goto	u6731
 14653  007268  EF39  F039         	goto	u6730
 14654  00726C                     u6731:
 14655  00726C  FFFF               	dw	65535	; assembler added errata NOP
 14656  00726E  EF41  F039         	goto	l5454
 14657  007272                     u6730:
 14658  007272  FFFF               	dw	65535	; assembler added errata NOP
 14659  007274                     
 14660                           ;oven.c: 39:         return 1;
 14661  007274  0E00               	movlw	0
 14662  007276  0100               	movlb	0	; () banked
 14663  007278  6FD7               	movwf	(?_check_temperature+1)& (0+255),b
 14664  00727A  0E01               	movlw	1
 14665  00727C  6FD6               	movwf	?_check_temperature& (0+255),b
 14666  00727E  EF47  F039         	goto	l384
 14667  007282                     l5454:
 14668  007282  FFFF               	dw	65535	; assembler added errata NOP
 14669                           
 14670                           ;oven.c: 41:         return 0;
 14671  007284  0E00               	movlw	0
 14672  007286  0100               	movlb	0	; () banked
 14673  007288  6FD7               	movwf	(?_check_temperature+1)& (0+255),b
 14674  00728A  0E00               	movlw	0
 14675  00728C  6FD6               	movwf	?_check_temperature& (0+255),b
 14676  00728E                     l384:
 14677  00728E  FFFF               	dw	65535	; assembler added errata NOP
 14678                           
 14679                           ; BSR set to: 0
 14680  007290  0012               	return		;funcret
 14681  007292  FFFF               	dw	65535	; errata NOP
 14682  007294                     __end_of_check_temperature:
 14683                           	callstack 0
 14684                           
 14685 ;; *************** function _abs *****************
 14686 ;; Defined at:
 14687 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
 14688 ;; Parameters:    Size  Location     Type
 14689 ;;  a               2   18[COMRAM] int 
 14690 ;; Auto vars:     Size  Location     Type
 14691 ;;		None
 14692 ;; Return value:  Size  Location     Type
 14693 ;;                  2   18[COMRAM] int 
 14694 ;; Registers used:
 14695 ;;		wreg, status,2, status,0
 14696 ;; Tracked objects:
 14697 ;;		On entry : 0/0
 14698 ;;		On exit  : 0/0
 14699 ;;		Unchanged: 0/0
 14700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14701 ;;      Params:         2       0       0       0       0       0       0
 14702 ;;      Locals:         0       0       0       0       0       0       0
 14703 ;;      Temps:          2       0       0       0       0       0       0
 14704 ;;      Totals:         4       0       0       0       0       0       0
 14705 ;;Total ram usage:        4 bytes
 14706 ;; Hardware stack levels used:    1
 14707 ;; Hardware stack levels required when called:    1
 14708 ;; This function calls:
 14709 ;;		Nothing
 14710 ;; This function is called by:
 14711 ;;		_check_temperature
 14712 ;;		_dtoa
 14713 ;; This function uses a non-reentrant model
 14714 ;;
 14715                           
 14716                           	psect	text60
 14717  00691E                     __ptext60:
 14718                           	callstack 0
 14719  00691E                     _abs:
 14720                           	callstack 0
 14721  00691E  FFFF               	dw	65535	; assembler added errata NOP
 14722  006920  BE14               	btfsc	(abs@a+1)^0,7,c
 14723  006922  EF9E  F034         	goto	u3700
 14724  006926  5014               	movf	(abs@a+1)^0,w,c
 14725  006928  E106               	bnz	u3701
 14726  00692A  0413               	decf	abs@a^0,w,c
 14727  00692C  B0D8               	btfsc	status,0,c
 14728  00692E  EF9B  F034         	goto	u3701
 14729  006932  EF9E  F034         	goto	u3700
 14730  006936                     u3701:
 14731  006936  FFFF               	dw	65535	; assembler added errata NOP
 14732  006938  EFAD  F034         	goto	l1063
 14733  00693C                     u3700:
 14734  00693C  FFFF               	dw	65535	; assembler added errata NOP
 14735  00693E  C013  F015         	movff	abs@a,??_abs
 14736  006942  C014  F016         	movff	abs@a+1,??_abs+1
 14737  006946  1E15               	comf	??_abs^0,f,c
 14738  006948  1E16               	comf	(??_abs+1)^0,f,c
 14739  00694A  4A15               	infsnz	??_abs^0,f,c
 14740  00694C  2A16               	incf	(??_abs+1)^0,f,c
 14741  00694E  C015  F013         	movff	??_abs,?_abs
 14742  006952  C016  F014         	movff	??_abs+1,?_abs+1
 14743  006956  EFB2  F034         	goto	l1066
 14744  00695A                     l1063:
 14745  00695A  FFFF               	dw	65535	; assembler added errata NOP
 14746  00695C  C013  F013         	movff	abs@a,?_abs
 14747  006960  C014  F014         	movff	abs@a+1,?_abs+1
 14748  006964                     l1066:
 14749  006964  FFFF               	dw	65535	; assembler added errata NOP
 14750  006966  0012               	return		;funcret
 14751  006968  FFFF               	dw	65535	; errata NOP
 14752  00696A                     __end_of_abs:
 14753                           	callstack 0
 14754                           
 14755 ;; *************** function ___xxtofl *****************
 14756 ;; Defined at:
 14757 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
 14758 ;; Parameters:    Size  Location     Type
 14759 ;;  sign            1    wreg     unsigned char 
 14760 ;;  val             4   30[COMRAM] long 
 14761 ;; Auto vars:     Size  Location     Type
 14762 ;;  sign            1   38[COMRAM] unsigned char 
 14763 ;;  arg             4   40[COMRAM] unsigned long 
 14764 ;;  exp             1   39[COMRAM] unsigned char 
 14765 ;; Return value:  Size  Location     Type
 14766 ;;                  4   30[COMRAM] unsigned char 
 14767 ;; Registers used:
 14768 ;;		wreg, status,2, status,0
 14769 ;; Tracked objects:
 14770 ;;		On entry : 0/0
 14771 ;;		On exit  : 0/0
 14772 ;;		Unchanged: 0/0
 14773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14774 ;;      Params:         4       0       0       0       0       0       0
 14775 ;;      Locals:         6       0       0       0       0       0       0
 14776 ;;      Temps:          4       0       0       0       0       0       0
 14777 ;;      Totals:        14       0       0       0       0       0       0
 14778 ;;Total ram usage:       14 bytes
 14779 ;; Hardware stack levels used:    1
 14780 ;; Hardware stack levels required when called:    1
 14781 ;; This function calls:
 14782 ;;		Nothing
 14783 ;; This function is called by:
 14784 ;;		_get_temperature
 14785 ;;		_check_temperature
 14786 ;; This function uses a non-reentrant model
 14787 ;;
 14788                           
 14789                           	psect	text61
 14790  00389C                     __ptext61:
 14791                           	callstack 0
 14792  00389C                     ___xxtofl:
 14793                           	callstack 0
 14794  00389C  FFFF               	dw	65535	; assembler added errata NOP
 14795                           
 14796                           ;incstack = 0
 14797                           ;___xxtofl@sign stored from wreg
 14798  00389E  6E27               	movwf	___xxtofl@sign^0,c
 14799  0038A0  5027               	movf	___xxtofl@sign^0,w,c
 14800  0038A2  B4D8               	btfsc	status,2,c
 14801  0038A4  EF56  F01C         	goto	u6211
 14802  0038A8  EF59  F01C         	goto	u6210
 14803  0038AC                     u6211:
 14804  0038AC  FFFF               	dw	65535	; assembler added errata NOP
 14805  0038AE  EF7E  F01C         	goto	l1043
 14806  0038B2                     u6210:
 14807  0038B2  FFFF               	dw	65535	; assembler added errata NOP
 14808  0038B4  BE22               	btfsc	(___xxtofl@val+3)^0,7,c
 14809  0038B6  EF62  F01C         	goto	u6220
 14810  0038BA  EF5F  F01C         	goto	u6221
 14811  0038BE                     u6221:
 14812  0038BE  FFFF               	dw	65535	; assembler added errata NOP
 14813  0038C0  EF7E  F01C         	goto	l1043
 14814  0038C4                     u6220:
 14815  0038C4  FFFF               	dw	65535	; assembler added errata NOP
 14816  0038C6  C01F  F023         	movff	___xxtofl@val,??___xxtofl
 14817  0038CA  C020  F024         	movff	___xxtofl@val+1,??___xxtofl+1
 14818  0038CE  C021  F025         	movff	___xxtofl@val+2,??___xxtofl+2
 14819  0038D2  C022  F026         	movff	___xxtofl@val+3,??___xxtofl+3
 14820  0038D6  1E23               	comf	??___xxtofl^0,f,c
 14821  0038D8  1E24               	comf	(??___xxtofl+1)^0,f,c
 14822  0038DA  1E25               	comf	(??___xxtofl+2)^0,f,c
 14823  0038DC  1E26               	comf	(??___xxtofl+3)^0,f,c
 14824  0038DE  2A23               	incf	??___xxtofl^0,f,c
 14825  0038E0  0E00               	movlw	0
 14826  0038E2  2224               	addwfc	(??___xxtofl+1)^0,f,c
 14827  0038E4  2225               	addwfc	(??___xxtofl+2)^0,f,c
 14828  0038E6  2226               	addwfc	(??___xxtofl+3)^0,f,c
 14829  0038E8  C023  F029         	movff	??___xxtofl,___xxtofl@arg
 14830  0038EC  C024  F02A         	movff	??___xxtofl+1,___xxtofl@arg+1
 14831  0038F0  C025  F02B         	movff	??___xxtofl+2,___xxtofl@arg+2
 14832  0038F4  C026  F02C         	movff	??___xxtofl+3,___xxtofl@arg+3
 14833  0038F8  EF87  F01C         	goto	l5040
 14834  0038FC                     l1043:
 14835  0038FC  FFFF               	dw	65535	; assembler added errata NOP
 14836  0038FE  C01F  F029         	movff	___xxtofl@val,___xxtofl@arg
 14837  003902  C020  F02A         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14838  003906  C021  F02B         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14839  00390A  C022  F02C         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14840  00390E                     l5040:
 14841  00390E  FFFF               	dw	65535	; assembler added errata NOP
 14842  003910  501F               	movf	___xxtofl@val^0,w,c
 14843  003912  1020               	iorwf	(___xxtofl@val+1)^0,w,c
 14844  003914  1021               	iorwf	(___xxtofl@val+2)^0,w,c
 14845  003916  1022               	iorwf	(___xxtofl@val+3)^0,w,c
 14846  003918  A4D8               	btfss	status,2,c
 14847  00391A  EF91  F01C         	goto	u6231
 14848  00391E  EF94  F01C         	goto	u6230
 14849  003922                     u6231:
 14850  003922  FFFF               	dw	65535	; assembler added errata NOP
 14851  003924  EF9F  F01C         	goto	l5046
 14852  003928                     u6230:
 14853  003928  FFFF               	dw	65535	; assembler added errata NOP
 14854  00392A  0E00               	movlw	0
 14855  00392C  6E1F               	movwf	?___xxtofl^0,c
 14856  00392E  0E00               	movlw	0
 14857  003930  6E20               	movwf	(?___xxtofl+1)^0,c
 14858  003932  0E00               	movlw	0
 14859  003934  6E21               	movwf	(?___xxtofl+2)^0,c
 14860  003936  0E00               	movlw	0
 14861  003938  6E22               	movwf	(?___xxtofl+3)^0,c
 14862  00393A  EF47  F01D         	goto	l1046
 14863  00393E                     l5046:
 14864  00393E  FFFF               	dw	65535	; assembler added errata NOP
 14865  003940  0E96               	movlw	150
 14866  003942  6E28               	movwf	___xxtofl@exp^0,c
 14867  003944  EFAB  F01C         	goto	l5050
 14868  003948                     l5048:
 14869  003948  FFFF               	dw	65535	; assembler added errata NOP
 14870  00394A  2A28               	incf	___xxtofl@exp^0,f,c
 14871  00394C  90D8               	bcf	status,0,c
 14872  00394E  322C               	rrcf	(___xxtofl@arg+3)^0,f,c
 14873  003950  322B               	rrcf	(___xxtofl@arg+2)^0,f,c
 14874  003952  322A               	rrcf	(___xxtofl@arg+1)^0,f,c
 14875  003954  3229               	rrcf	___xxtofl@arg^0,f,c
 14876  003956                     l5050:
 14877  003956  FFFF               	dw	65535	; assembler added errata NOP
 14878  003958  0E00               	movlw	0
 14879  00395A  1429               	andwf	___xxtofl@arg^0,w,c
 14880  00395C  6E23               	movwf	??___xxtofl^0,c
 14881  00395E  0E00               	movlw	0
 14882  003960  142A               	andwf	(___xxtofl@arg+1)^0,w,c
 14883  003962  6E24               	movwf	(??___xxtofl+1)^0,c
 14884  003964  0E00               	movlw	0
 14885  003966  142B               	andwf	(___xxtofl@arg+2)^0,w,c
 14886  003968  6E25               	movwf	(??___xxtofl+2)^0,c
 14887  00396A  0EFE               	movlw	254
 14888  00396C  142C               	andwf	(___xxtofl@arg+3)^0,w,c
 14889  00396E  6E26               	movwf	(??___xxtofl+3)^0,c
 14890  003970  5023               	movf	??___xxtofl^0,w,c
 14891  003972  1024               	iorwf	(??___xxtofl+1)^0,w,c
 14892  003974  1025               	iorwf	(??___xxtofl+2)^0,w,c
 14893  003976  1026               	iorwf	(??___xxtofl+3)^0,w,c
 14894  003978  A4D8               	btfss	status,2,c
 14895  00397A  EFC1  F01C         	goto	u6241
 14896  00397E  EFC4  F01C         	goto	u6240
 14897  003982                     u6241:
 14898  003982  FFFF               	dw	65535	; assembler added errata NOP
 14899  003984  EFA4  F01C         	goto	l5048
 14900  003988                     u6240:
 14901  003988  FFFF               	dw	65535	; assembler added errata NOP
 14902  00398A  EFD4  F01C         	goto	l1050
 14903  00398E                     l5052:
 14904  00398E  FFFF               	dw	65535	; assembler added errata NOP
 14905  003990  2A28               	incf	___xxtofl@exp^0,f,c
 14906  003992  0E01               	movlw	1
 14907  003994  2629               	addwf	___xxtofl@arg^0,f,c
 14908  003996  0E00               	movlw	0
 14909  003998  222A               	addwfc	(___xxtofl@arg+1)^0,f,c
 14910  00399A  222B               	addwfc	(___xxtofl@arg+2)^0,f,c
 14911  00399C  222C               	addwfc	(___xxtofl@arg+3)^0,f,c
 14912  00399E  90D8               	bcf	status,0,c
 14913  0039A0  322C               	rrcf	(___xxtofl@arg+3)^0,f,c
 14914  0039A2  322B               	rrcf	(___xxtofl@arg+2)^0,f,c
 14915  0039A4  322A               	rrcf	(___xxtofl@arg+1)^0,f,c
 14916  0039A6  3229               	rrcf	___xxtofl@arg^0,f,c
 14917  0039A8                     l1050:
 14918  0039A8  FFFF               	dw	65535	; assembler added errata NOP
 14919  0039AA  0E00               	movlw	0
 14920  0039AC  1429               	andwf	___xxtofl@arg^0,w,c
 14921  0039AE  6E23               	movwf	??___xxtofl^0,c
 14922  0039B0  0E00               	movlw	0
 14923  0039B2  142A               	andwf	(___xxtofl@arg+1)^0,w,c
 14924  0039B4  6E24               	movwf	(??___xxtofl+1)^0,c
 14925  0039B6  0E00               	movlw	0
 14926  0039B8  142B               	andwf	(___xxtofl@arg+2)^0,w,c
 14927  0039BA  6E25               	movwf	(??___xxtofl+2)^0,c
 14928  0039BC  0EFF               	movlw	255
 14929  0039BE  142C               	andwf	(___xxtofl@arg+3)^0,w,c
 14930  0039C0  6E26               	movwf	(??___xxtofl+3)^0,c
 14931  0039C2  5023               	movf	??___xxtofl^0,w,c
 14932  0039C4  1024               	iorwf	(??___xxtofl+1)^0,w,c
 14933  0039C6  1025               	iorwf	(??___xxtofl+2)^0,w,c
 14934  0039C8  1026               	iorwf	(??___xxtofl+3)^0,w,c
 14935  0039CA  A4D8               	btfss	status,2,c
 14936  0039CC  EFEA  F01C         	goto	u6251
 14937  0039D0  EFED  F01C         	goto	u6250
 14938  0039D4                     u6251:
 14939  0039D4  FFFF               	dw	65535	; assembler added errata NOP
 14940  0039D6  EFC7  F01C         	goto	l5052
 14941  0039DA                     u6250:
 14942  0039DA  FFFF               	dw	65535	; assembler added errata NOP
 14943  0039DC  EFF7  F01C         	goto	l5060
 14944  0039E0                     l5058:
 14945  0039E0  FFFF               	dw	65535	; assembler added errata NOP
 14946  0039E2  0628               	decf	___xxtofl@exp^0,f,c
 14947  0039E4  90D8               	bcf	status,0,c
 14948  0039E6  3629               	rlcf	___xxtofl@arg^0,f,c
 14949  0039E8  362A               	rlcf	(___xxtofl@arg+1)^0,f,c
 14950  0039EA  362B               	rlcf	(___xxtofl@arg+2)^0,f,c
 14951  0039EC  362C               	rlcf	(___xxtofl@arg+3)^0,f,c
 14952  0039EE                     l5060:
 14953  0039EE  FFFF               	dw	65535	; assembler added errata NOP
 14954  0039F0  BE2B               	btfsc	(___xxtofl@arg+2)^0,7,c
 14955  0039F2  EFFD  F01C         	goto	u6261
 14956  0039F6  EF00  F01D         	goto	u6260
 14957  0039FA                     u6261:
 14958  0039FA  FFFF               	dw	65535	; assembler added errata NOP
 14959  0039FC  EF0A  F01D         	goto	l1057
 14960  003A00                     u6260:
 14961  003A00  FFFF               	dw	65535	; assembler added errata NOP
 14962  003A02  0E02               	movlw	2
 14963  003A04  6028               	cpfslt	___xxtofl@exp^0,c
 14964  003A06  EF07  F01D         	goto	u6271
 14965  003A0A  EF0A  F01D         	goto	u6270
 14966  003A0E                     u6271:
 14967  003A0E  FFFF               	dw	65535	; assembler added errata NOP
 14968  003A10  EFF0  F01C         	goto	l5058
 14969  003A14                     u6270:
 14970  003A14                     l1057:
 14971  003A14  FFFF               	dw	65535	; assembler added errata NOP
 14972  003A16  B028               	btfsc	___xxtofl@exp^0,0,c
 14973  003A18  EF10  F01D         	goto	u6281
 14974  003A1C  EF13  F01D         	goto	u6280
 14975  003A20                     u6281:
 14976  003A20  FFFF               	dw	65535	; assembler added errata NOP
 14977  003A22  EF15  F01D         	goto	l5066
 14978  003A26                     u6280:
 14979  003A26  FFFF               	dw	65535	; assembler added errata NOP
 14980  003A28  9E2B               	bcf	(___xxtofl@arg+2)^0,7,c
 14981  003A2A                     l5066:
 14982  003A2A  FFFF               	dw	65535	; assembler added errata NOP
 14983  003A2C  90D8               	bcf	status,0,c
 14984  003A2E  3228               	rrcf	___xxtofl@exp^0,f,c
 14985  003A30  C028  F023         	movff	___xxtofl@exp,??___xxtofl
 14986  003A34  6A24               	clrf	(??___xxtofl+1)^0,c
 14987  003A36  6A25               	clrf	(??___xxtofl+2)^0,c
 14988  003A38  6A26               	clrf	(??___xxtofl+3)^0,c
 14989  003A3A  C023  F026         	movff	??___xxtofl,??___xxtofl+3
 14990  003A3E  6A25               	clrf	(??___xxtofl+2)^0,c
 14991  003A40  6A24               	clrf	(??___xxtofl+1)^0,c
 14992  003A42  6A23               	clrf	??___xxtofl^0,c
 14993  003A44  5023               	movf	??___xxtofl^0,w,c
 14994  003A46  1229               	iorwf	___xxtofl@arg^0,f,c
 14995  003A48  5024               	movf	(??___xxtofl+1)^0,w,c
 14996  003A4A  122A               	iorwf	(___xxtofl@arg+1)^0,f,c
 14997  003A4C  5025               	movf	(??___xxtofl+2)^0,w,c
 14998  003A4E  122B               	iorwf	(___xxtofl@arg+2)^0,f,c
 14999  003A50  5026               	movf	(??___xxtofl+3)^0,w,c
 15000  003A52  122C               	iorwf	(___xxtofl@arg+3)^0,f,c
 15001  003A54  5027               	movf	___xxtofl@sign^0,w,c
 15002  003A56  B4D8               	btfsc	status,2,c
 15003  003A58  EF30  F01D         	goto	u6291
 15004  003A5C  EF33  F01D         	goto	u6290
 15005  003A60                     u6291:
 15006  003A60  FFFF               	dw	65535	; assembler added errata NOP
 15007  003A62  EF3E  F01D         	goto	l5076
 15008  003A66                     u6290:
 15009  003A66  FFFF               	dw	65535	; assembler added errata NOP
 15010  003A68  BE22               	btfsc	(___xxtofl@val+3)^0,7,c
 15011  003A6A  EF3C  F01D         	goto	u6300
 15012  003A6E  EF39  F01D         	goto	u6301
 15013  003A72                     u6301:
 15014  003A72  FFFF               	dw	65535	; assembler added errata NOP
 15015  003A74  EF3E  F01D         	goto	l5076
 15016  003A78                     u6300:
 15017  003A78  FFFF               	dw	65535	; assembler added errata NOP
 15018  003A7A  8E2C               	bsf	(___xxtofl@arg+3)^0,7,c
 15019  003A7C                     l5076:
 15020  003A7C  FFFF               	dw	65535	; assembler added errata NOP
 15021  003A7E  C029  F01F         	movff	___xxtofl@arg,?___xxtofl
 15022  003A82  C02A  F020         	movff	___xxtofl@arg+1,?___xxtofl+1
 15023  003A86  C02B  F021         	movff	___xxtofl@arg+2,?___xxtofl+2
 15024  003A8A  C02C  F022         	movff	___xxtofl@arg+3,?___xxtofl+3
 15025  003A8E                     l1046:
 15026  003A8E  FFFF               	dw	65535	; assembler added errata NOP
 15027  003A90  0012               	return		;funcret
 15028  003A92  FFFF               	dw	65535	; errata NOP
 15029  003A94                     __end_of___xxtofl:
 15030                           	callstack 0
 15031                           
 15032 ;; *************** function ___flge *****************
 15033 ;; Defined at:
 15034 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 15035 ;; Parameters:    Size  Location     Type
 15036 ;;  ff1             4    0[COMRAM] unsigned char 
 15037 ;;  ff2             4    4[COMRAM] unsigned char 
 15038 ;; Auto vars:     Size  Location     Type
 15039 ;;		None
 15040 ;; Return value:  Size  Location     Type
 15041 ;;		None               void
 15042 ;; Registers used:
 15043 ;;		wreg, status,2, status,0
 15044 ;; Tracked objects:
 15045 ;;		On entry : 0/0
 15046 ;;		On exit  : 0/0
 15047 ;;		Unchanged: 0/0
 15048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15049 ;;      Params:         8       0       0       0       0       0       0
 15050 ;;      Locals:         0       0       0       0       0       0       0
 15051 ;;      Temps:          4       0       0       0       0       0       0
 15052 ;;      Totals:        12       0       0       0       0       0       0
 15053 ;;Total ram usage:       12 bytes
 15054 ;; Hardware stack levels used:    1
 15055 ;; Hardware stack levels required when called:    1
 15056 ;; This function calls:
 15057 ;;		Nothing
 15058 ;; This function is called by:
 15059 ;;		_check_temperature
 15060 ;;		_roundf
 15061 ;; This function uses a non-reentrant model
 15062 ;;
 15063                           
 15064                           	psect	text62
 15065  007848                     __ptext62:
 15066                           	callstack 0
 15067  007848                     ___flge:
 15068                           	callstack 0
 15069  007848  FFFF               	dw	65535	; assembler added errata NOP
 15070  00784A  0E00               	movlw	0
 15071  00784C  1401               	andwf	___flge@ff1^0,w,c
 15072  00784E  6E09               	movwf	??___flge^0,c
 15073  007850  0E00               	movlw	0
 15074  007852  1402               	andwf	(___flge@ff1+1)^0,w,c
 15075  007854  6E0A               	movwf	(??___flge+1)^0,c
 15076  007856  0E80               	movlw	128
 15077  007858  1403               	andwf	(___flge@ff1+2)^0,w,c
 15078  00785A  6E0B               	movwf	(??___flge+2)^0,c
 15079  00785C  0E7F               	movlw	127
 15080  00785E  1404               	andwf	(___flge@ff1+3)^0,w,c
 15081  007860  6E0C               	movwf	(??___flge+3)^0,c
 15082  007862  5009               	movf	??___flge^0,w,c
 15083  007864  100A               	iorwf	(??___flge+1)^0,w,c
 15084  007866  100B               	iorwf	(??___flge+2)^0,w,c
 15085  007868  100C               	iorwf	(??___flge+3)^0,w,c
 15086  00786A  A4D8               	btfss	status,2,c
 15087  00786C  EF3A  F03C         	goto	u6081
 15088  007870  EF3D  F03C         	goto	u6080
 15089  007874                     u6081:
 15090  007874  FFFF               	dw	65535	; assembler added errata NOP
 15091  007876  EF46  F03C         	goto	l4964
 15092  00787A                     u6080:
 15093  00787A  FFFF               	dw	65535	; assembler added errata NOP
 15094  00787C  0E00               	movlw	0
 15095  00787E  6E01               	movwf	___flge@ff1^0,c
 15096  007880  0E00               	movlw	0
 15097  007882  6E02               	movwf	(___flge@ff1+1)^0,c
 15098  007884  0E00               	movlw	0
 15099  007886  6E03               	movwf	(___flge@ff1+2)^0,c
 15100  007888  0E00               	movlw	0
 15101  00788A  6E04               	movwf	(___flge@ff1+3)^0,c
 15102  00788C                     l4964:
 15103  00788C  FFFF               	dw	65535	; assembler added errata NOP
 15104  00788E  0E00               	movlw	0
 15105  007890  1405               	andwf	___flge@ff2^0,w,c
 15106  007892  6E09               	movwf	??___flge^0,c
 15107  007894  0E00               	movlw	0
 15108  007896  1406               	andwf	(___flge@ff2+1)^0,w,c
 15109  007898  6E0A               	movwf	(??___flge+1)^0,c
 15110  00789A  0E80               	movlw	128
 15111  00789C  1407               	andwf	(___flge@ff2+2)^0,w,c
 15112  00789E  6E0B               	movwf	(??___flge+2)^0,c
 15113  0078A0  0E7F               	movlw	127
 15114  0078A2  1408               	andwf	(___flge@ff2+3)^0,w,c
 15115  0078A4  6E0C               	movwf	(??___flge+3)^0,c
 15116  0078A6  5009               	movf	??___flge^0,w,c
 15117  0078A8  100A               	iorwf	(??___flge+1)^0,w,c
 15118  0078AA  100B               	iorwf	(??___flge+2)^0,w,c
 15119  0078AC  100C               	iorwf	(??___flge+3)^0,w,c
 15120  0078AE  A4D8               	btfss	status,2,c
 15121  0078B0  EF5C  F03C         	goto	u6091
 15122  0078B4  EF5F  F03C         	goto	u6090
 15123  0078B8                     u6091:
 15124  0078B8  FFFF               	dw	65535	; assembler added errata NOP
 15125  0078BA  EF68  F03C         	goto	l4968
 15126  0078BE                     u6090:
 15127  0078BE  FFFF               	dw	65535	; assembler added errata NOP
 15128  0078C0  0E00               	movlw	0
 15129  0078C2  6E05               	movwf	___flge@ff2^0,c
 15130  0078C4  0E00               	movlw	0
 15131  0078C6  6E06               	movwf	(___flge@ff2+1)^0,c
 15132  0078C8  0E00               	movlw	0
 15133  0078CA  6E07               	movwf	(___flge@ff2+2)^0,c
 15134  0078CC  0E00               	movlw	0
 15135  0078CE  6E08               	movwf	(___flge@ff2+3)^0,c
 15136  0078D0                     l4968:
 15137  0078D0  FFFF               	dw	65535	; assembler added errata NOP
 15138  0078D2  AE04               	btfss	(___flge@ff1+3)^0,7,c
 15139  0078D4  EF6E  F03C         	goto	u6101
 15140  0078D8  EF71  F03C         	goto	u6100
 15141  0078DC                     u6101:
 15142  0078DC  FFFF               	dw	65535	; assembler added errata NOP
 15143  0078DE  EF7B  F03C         	goto	l4972
 15144  0078E2                     u6100:
 15145  0078E2  FFFF               	dw	65535	; assembler added errata NOP
 15146  0078E4  6C01               	negf	___flge@ff1^0,c
 15147  0078E6  1E02               	comf	(___flge@ff1+1)^0,f,c
 15148  0078E8  B0D8               	btfsc	status,0,c
 15149  0078EA  2A02               	incf	(___flge@ff1+1)^0,f,c
 15150  0078EC  1E03               	comf	(___flge@ff1+2)^0,f,c
 15151  0078EE  B0D8               	btfsc	status,0,c
 15152  0078F0  2A03               	incf	(___flge@ff1+2)^0,f,c
 15153  0078F2  0E80               	movlw	128
 15154  0078F4  5604               	subfwb	(___flge@ff1+3)^0,f,c
 15155  0078F6                     l4972:
 15156  0078F6  FFFF               	dw	65535	; assembler added errata NOP
 15157  0078F8  AE08               	btfss	(___flge@ff2+3)^0,7,c
 15158  0078FA  EF81  F03C         	goto	u6111
 15159  0078FE  EF84  F03C         	goto	u6110
 15160  007902                     u6111:
 15161  007902  FFFF               	dw	65535	; assembler added errata NOP
 15162  007904  EF8E  F03C         	goto	l653
 15163  007908                     u6110:
 15164  007908  FFFF               	dw	65535	; assembler added errata NOP
 15165  00790A  6C05               	negf	___flge@ff2^0,c
 15166  00790C  1E06               	comf	(___flge@ff2+1)^0,f,c
 15167  00790E  B0D8               	btfsc	status,0,c
 15168  007910  2A06               	incf	(___flge@ff2+1)^0,f,c
 15169  007912  1E07               	comf	(___flge@ff2+2)^0,f,c
 15170  007914  B0D8               	btfsc	status,0,c
 15171  007916  2A07               	incf	(___flge@ff2+2)^0,f,c
 15172  007918  0E80               	movlw	128
 15173  00791A  5608               	subfwb	(___flge@ff2+3)^0,f,c
 15174  00791C                     l653:
 15175  00791C  FFFF               	dw	65535	; assembler added errata NOP
 15176  00791E  0E00               	movlw	0
 15177  007920  1A01               	xorwf	___flge@ff1^0,f,c
 15178  007922  0E00               	movlw	0
 15179  007924  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 15180  007926  0E00               	movlw	0
 15181  007928  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 15182  00792A  0E80               	movlw	128
 15183  00792C  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 15184  00792E  0E00               	movlw	0
 15185  007930  1A05               	xorwf	___flge@ff2^0,f,c
 15186  007932  0E00               	movlw	0
 15187  007934  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 15188  007936  0E00               	movlw	0
 15189  007938  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 15190  00793A  0E80               	movlw	128
 15191  00793C  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 15192  00793E  5005               	movf	___flge@ff2^0,w,c
 15193  007940  5C01               	subwf	___flge@ff1^0,w,c
 15194  007942  5006               	movf	(___flge@ff2+1)^0,w,c
 15195  007944  5802               	subwfb	(___flge@ff1+1)^0,w,c
 15196  007946  5007               	movf	(___flge@ff2+2)^0,w,c
 15197  007948  5803               	subwfb	(___flge@ff1+2)^0,w,c
 15198  00794A  5008               	movf	(___flge@ff2+3)^0,w,c
 15199  00794C  5804               	subwfb	(___flge@ff1+3)^0,w,c
 15200  00794E  B0D8               	btfsc	status,0,c
 15201  007950  EFAC  F03C         	goto	u6121
 15202  007954  EFAF  F03C         	goto	u6120
 15203  007958                     u6121:
 15204  007958  FFFF               	dw	65535	; assembler added errata NOP
 15205  00795A  EFB3  F03C         	goto	l4978
 15206  00795E                     u6120:
 15207  00795E  FFFF               	dw	65535	; assembler added errata NOP
 15208  007960  90D8               	bcf	status,0,c
 15209  007962  EFB5  F03C         	goto	l658
 15210  007966                     l4978:
 15211  007966  FFFF               	dw	65535	; assembler added errata NOP
 15212  007968  80D8               	bsf	status,0,c
 15213  00796A                     l658:
 15214  00796A  FFFF               	dw	65535	; assembler added errata NOP
 15215  00796C  0012               	return		;funcret
 15216  00796E  FFFF               	dw	65535	; errata NOP
 15217  007970                     __end_of___flge:
 15218                           	callstack 0
 15219                           
 15220 ;; *************** function ___awdiv *****************
 15221 ;; Defined at:
 15222 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
 15223 ;; Parameters:    Size  Location     Type
 15224 ;;  dividend        2   22[COMRAM] int 
 15225 ;;  divisor         2   24[COMRAM] int 
 15226 ;; Auto vars:     Size  Location     Type
 15227 ;;  quotient        2   28[COMRAM] int 
 15228 ;;  sign            1   27[COMRAM] unsigned char 
 15229 ;;  counter         1   26[COMRAM] unsigned char 
 15230 ;; Return value:  Size  Location     Type
 15231 ;;                  2   22[COMRAM] int 
 15232 ;; Registers used:
 15233 ;;		wreg, status,2, status,0
 15234 ;; Tracked objects:
 15235 ;;		On entry : 0/0
 15236 ;;		On exit  : 0/0
 15237 ;;		Unchanged: 0/0
 15238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15239 ;;      Params:         4       0       0       0       0       0       0
 15240 ;;      Locals:         4       0       0       0       0       0       0
 15241 ;;      Temps:          0       0       0       0       0       0       0
 15242 ;;      Totals:         8       0       0       0       0       0       0
 15243 ;;Total ram usage:        8 bytes
 15244 ;; Hardware stack levels used:    1
 15245 ;; Hardware stack levels required when called:    1
 15246 ;; This function calls:
 15247 ;;		Nothing
 15248 ;; This function is called by:
 15249 ;;		_check_temperature
 15250 ;; This function uses a non-reentrant model
 15251 ;;
 15252                           
 15253                           	psect	text63
 15254  007546                     __ptext63:
 15255                           	callstack 0
 15256  007546                     ___awdiv:
 15257                           	callstack 0
 15258  007546  FFFF               	dw	65535	; assembler added errata NOP
 15259  007548  0E00               	movlw	0
 15260  00754A  6E1C               	movwf	___awdiv@sign^0,c
 15261  00754C  BE1A               	btfsc	(___awdiv@divisor+1)^0,7,c
 15262  00754E  EFAE  F03A         	goto	u6460
 15263  007552  EFAB  F03A         	goto	u6461
 15264  007556                     u6461:
 15265  007556  FFFF               	dw	65535	; assembler added errata NOP
 15266  007558  EFB5  F03A         	goto	l5196
 15267  00755C                     u6460:
 15268  00755C  FFFF               	dw	65535	; assembler added errata NOP
 15269  00755E  6C19               	negf	___awdiv@divisor^0,c
 15270  007560  1E1A               	comf	(___awdiv@divisor+1)^0,f,c
 15271  007562  B0D8               	btfsc	status,0,c
 15272  007564  2A1A               	incf	(___awdiv@divisor+1)^0,f,c
 15273  007566  0E01               	movlw	1
 15274  007568  6E1C               	movwf	___awdiv@sign^0,c
 15275  00756A                     l5196:
 15276  00756A  FFFF               	dw	65535	; assembler added errata NOP
 15277  00756C  BE18               	btfsc	(___awdiv@dividend+1)^0,7,c
 15278  00756E  EFBE  F03A         	goto	u6470
 15279  007572  EFBB  F03A         	goto	u6471
 15280  007576                     u6471:
 15281  007576  FFFF               	dw	65535	; assembler added errata NOP
 15282  007578  EFC5  F03A         	goto	l5202
 15283  00757C                     u6470:
 15284  00757C  FFFF               	dw	65535	; assembler added errata NOP
 15285  00757E  6C17               	negf	___awdiv@dividend^0,c
 15286  007580  1E18               	comf	(___awdiv@dividend+1)^0,f,c
 15287  007582  B0D8               	btfsc	status,0,c
 15288  007584  2A18               	incf	(___awdiv@dividend+1)^0,f,c
 15289  007586  0E01               	movlw	1
 15290  007588  1A1C               	xorwf	___awdiv@sign^0,f,c
 15291  00758A                     l5202:
 15292  00758A  FFFF               	dw	65535	; assembler added errata NOP
 15293  00758C  0E00               	movlw	0
 15294  00758E  6E1E               	movwf	(___awdiv@quotient+1)^0,c
 15295  007590  0E00               	movlw	0
 15296  007592  6E1D               	movwf	___awdiv@quotient^0,c
 15297  007594  5019               	movf	___awdiv@divisor^0,w,c
 15298  007596  101A               	iorwf	(___awdiv@divisor+1)^0,w,c
 15299  007598  B4D8               	btfsc	status,2,c
 15300  00759A  EFD1  F03A         	goto	u6481
 15301  00759E  EFD4  F03A         	goto	u6480
 15302  0075A2                     u6481:
 15303  0075A2  FFFF               	dw	65535	; assembler added errata NOP
 15304  0075A4  EF05  F03B         	goto	l5224
 15305  0075A8                     u6480:
 15306  0075A8  FFFF               	dw	65535	; assembler added errata NOP
 15307  0075AA  0E01               	movlw	1
 15308  0075AC  6E1B               	movwf	___awdiv@counter^0,c
 15309  0075AE  EFDE  F03A         	goto	l5210
 15310  0075B2                     l5208:
 15311  0075B2  FFFF               	dw	65535	; assembler added errata NOP
 15312  0075B4  90D8               	bcf	status,0,c
 15313  0075B6  3619               	rlcf	___awdiv@divisor^0,f,c
 15314  0075B8  361A               	rlcf	(___awdiv@divisor+1)^0,f,c
 15315  0075BA  2A1B               	incf	___awdiv@counter^0,f,c
 15316  0075BC                     l5210:
 15317  0075BC  FFFF               	dw	65535	; assembler added errata NOP
 15318  0075BE  AE1A               	btfss	(___awdiv@divisor+1)^0,7,c
 15319  0075C0  EFE4  F03A         	goto	u6491
 15320  0075C4  EFE7  F03A         	goto	u6490
 15321  0075C8                     u6491:
 15322  0075C8  FFFF               	dw	65535	; assembler added errata NOP
 15323  0075CA  EFD9  F03A         	goto	l5208
 15324  0075CE                     u6490:
 15325  0075CE  FFFF               	dw	65535	; assembler added errata NOP
 15326  0075D0                     l5212:
 15327  0075D0  FFFF               	dw	65535	; assembler added errata NOP
 15328  0075D2  90D8               	bcf	status,0,c
 15329  0075D4  361D               	rlcf	___awdiv@quotient^0,f,c
 15330  0075D6  361E               	rlcf	(___awdiv@quotient+1)^0,f,c
 15331  0075D8  5019               	movf	___awdiv@divisor^0,w,c
 15332  0075DA  5C17               	subwf	___awdiv@dividend^0,w,c
 15333  0075DC  501A               	movf	(___awdiv@divisor+1)^0,w,c
 15334  0075DE  5818               	subwfb	(___awdiv@dividend+1)^0,w,c
 15335  0075E0  A0D8               	btfss	status,0,c
 15336  0075E2  EFF5  F03A         	goto	u6501
 15337  0075E6  EFF8  F03A         	goto	u6500
 15338  0075EA                     u6501:
 15339  0075EA  FFFF               	dw	65535	; assembler added errata NOP
 15340  0075EC  EFFE  F03A         	goto	l5220
 15341  0075F0                     u6500:
 15342  0075F0  FFFF               	dw	65535	; assembler added errata NOP
 15343  0075F2  5019               	movf	___awdiv@divisor^0,w,c
 15344  0075F4  5E17               	subwf	___awdiv@dividend^0,f,c
 15345  0075F6  501A               	movf	(___awdiv@divisor+1)^0,w,c
 15346  0075F8  5A18               	subwfb	(___awdiv@dividend+1)^0,f,c
 15347  0075FA  801D               	bsf	___awdiv@quotient^0,0,c
 15348  0075FC                     l5220:
 15349  0075FC  FFFF               	dw	65535	; assembler added errata NOP
 15350  0075FE  90D8               	bcf	status,0,c
 15351  007600  321A               	rrcf	(___awdiv@divisor+1)^0,f,c
 15352  007602  3219               	rrcf	___awdiv@divisor^0,f,c
 15353  007604  2E1B               	decfsz	___awdiv@counter^0,f,c
 15354  007606  EFE8  F03A         	goto	l5212
 15355  00760A                     l5224:
 15356  00760A  FFFF               	dw	65535	; assembler added errata NOP
 15357  00760C  501C               	movf	___awdiv@sign^0,w,c
 15358  00760E  B4D8               	btfsc	status,2,c
 15359  007610  EF0C  F03B         	goto	u6511
 15360  007614  EF0F  F03B         	goto	u6510
 15361  007618                     u6511:
 15362  007618  FFFF               	dw	65535	; assembler added errata NOP
 15363  00761A  EF14  F03B         	goto	l5228
 15364  00761E                     u6510:
 15365  00761E  FFFF               	dw	65535	; assembler added errata NOP
 15366  007620  6C1D               	negf	___awdiv@quotient^0,c
 15367  007622  1E1E               	comf	(___awdiv@quotient+1)^0,f,c
 15368  007624  B0D8               	btfsc	status,0,c
 15369  007626  2A1E               	incf	(___awdiv@quotient+1)^0,f,c
 15370  007628                     l5228:
 15371  007628  FFFF               	dw	65535	; assembler added errata NOP
 15372  00762A  C01D  F017         	movff	___awdiv@quotient,?___awdiv
 15373  00762E  C01E  F018         	movff	___awdiv@quotient+1,?___awdiv+1
 15374  007632  0012               	return		;funcret
 15375  007634  FFFF               	dw	65535	; errata NOP
 15376  007636                     __end_of___awdiv:
 15377                           	callstack 0
 15378                           
 15379 ;; *************** function _change_direction *****************
 15380 ;; Defined at:
 15381 ;;		line 40 in file "stepper_motor.c"
 15382 ;; Parameters:    Size  Location     Type
 15383 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 15384 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
 15385 ;; Auto vars:     Size  Location     Type
 15386 ;;		None
 15387 ;; Return value:  Size  Location     Type
 15388 ;;                  1    wreg      void 
 15389 ;; Registers used:
 15390 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15391 ;; Tracked objects:
 15392 ;;		On entry : 0/0
 15393 ;;		On exit  : 0/0
 15394 ;;		Unchanged: 0/0
 15395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15396 ;;      Params:         2       0       0       0       0       0       0
 15397 ;;      Locals:         0       0       0       0       0       0       0
 15398 ;;      Temps:          2       0       0       0       0       0       0
 15399 ;;      Totals:         4       0       0       0       0       0       0
 15400 ;;Total ram usage:        4 bytes
 15401 ;; Hardware stack levels used:    1
 15402 ;; Hardware stack levels required when called:    1
 15403 ;; This function calls:
 15404 ;;		Nothing
 15405 ;; This function is called by:
 15406 ;;		_main
 15407 ;; This function uses a non-reentrant model
 15408 ;;
 15409                           
 15410                           	psect	text64
 15411  0066D2                     __ptext64:
 15412                           	callstack 0
 15413  0066D2                     _change_direction:
 15414                           	callstack 0
 15415  0066D2  FFFF               	dw	65535	; assembler added errata NOP
 15416  0066D4                     
 15417                           ;stepper_motor.c: 41:     stepper_motor -> direction = stepper_motor -> direction*(-1);
 15418  0066D4  EE20 F004          	lfsr	2,4
 15419  0066D8  5001               	movf	change_direction@stepper_motor^0,w,c
 15420  0066DA  26D9               	addwf	fsr2l,f,c
 15421  0066DC  5002               	movf	(change_direction@stepper_motor+1)^0,w,c
 15422  0066DE  22DA               	addwfc	fsr2h,f,c
 15423  0066E0  CFDE F003          	movff	postinc2,??_change_direction
 15424  0066E4  CFDD F004          	movff	postdec2,??_change_direction+1
 15425  0066E8  1E03               	comf	??_change_direction^0,f,c
 15426  0066EA  1E04               	comf	(??_change_direction+1)^0,f,c
 15427  0066EC  4A03               	infsnz	??_change_direction^0,f,c
 15428  0066EE  2A04               	incf	(??_change_direction+1)^0,f,c
 15429  0066F0  EE20 F004          	lfsr	2,4
 15430  0066F4  5001               	movf	change_direction@stepper_motor^0,w,c
 15431  0066F6  26D9               	addwf	fsr2l,f,c
 15432  0066F8  5002               	movf	(change_direction@stepper_motor+1)^0,w,c
 15433  0066FA  22DA               	addwfc	fsr2h,f,c
 15434  0066FC  C003  FFDE         	movff	??_change_direction,postinc2
 15435  006700  C004  FFDD         	movff	??_change_direction+1,postdec2
 15436  006704  0012               	return		;funcret
 15437  006706  FFFF               	dw	65535	; errata NOP
 15438  006708                     __end_of_change_direction:
 15439                           	callstack 0
 15440                           
 15441 ;; *************** function _rx_char_usart *****************
 15442 ;; Defined at:
 15443 ;;		line 198 in file "main.c"
 15444 ;; Parameters:    Size  Location     Type
 15445 ;;		None
 15446 ;; Auto vars:     Size  Location     Type
 15447 ;;		None
 15448 ;; Return value:  Size  Location     Type
 15449 ;;                  1    wreg      void 
 15450 ;; Registers used:
 15451 ;;		wreg, status,2
 15452 ;; Tracked objects:
 15453 ;;		On entry : 0/0
 15454 ;;		On exit  : 0/0
 15455 ;;		Unchanged: 0/0
 15456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15457 ;;      Params:         0       0       0       0       0       0       0
 15458 ;;      Locals:         0       0       0       0       0       0       0
 15459 ;;      Temps:          0       0       0       0       0       0       0
 15460 ;;      Totals:         0       0       0       0       0       0       0
 15461 ;;Total ram usage:        0 bytes
 15462 ;; Hardware stack levels used:    1
 15463 ;; This function calls:
 15464 ;;		Nothing
 15465 ;; This function is called by:
 15466 ;;		Interrupt level 2
 15467 ;; This function uses a non-reentrant model
 15468 ;;
 15469                           
 15470                           	psect	intcode
 15471  000008                     __pintcode:
 15472                           	callstack 0
 15473  000008                     _rx_char_usart:
 15474                           	callstack 0
 15475  000008  FFFF               	dw	65535	; assembler added errata NOP
 15476                           
 15477                           ;incstack = 0
 15478  00000A  827F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15479  00000C                     
 15480                           ;main.c: 199:     if(PIE1bits.RCIE && PIR1bits.RCIF){
 15481  00000C  AA9D               	btfss	157,5,c	;volatile
 15482  00000E  EF0B  F000         	goto	i2u717_41
 15483  000012  EF0E  F000         	goto	i2u717_40
 15484  000016                     i2u717_41:
 15485  000016  FFFF               	dw	65535	; assembler added errata NOP
 15486  000018  EF1E  F000         	goto	i2l5694
 15487  00001C                     i2u717_40:
 15488  00001C  FFFF               	dw	65535	; assembler added errata NOP
 15489  00001E  AA9E               	btfss	158,5,c	;volatile
 15490  000020  EF14  F000         	goto	i2u718_41
 15491  000024  EF17  F000         	goto	i2u718_40
 15492  000028                     i2u718_41:
 15493  000028  FFFF               	dw	65535	; assembler added errata NOP
 15494  00002A  EF1E  F000         	goto	i2l5694
 15495  00002E                     i2u718_40:
 15496  00002E  FFFF               	dw	65535	; assembler added errata NOP
 15497  000030                     
 15498                           ;main.c: 200:         PIR1bits.RCIF = 0;
 15499  000030  9A9E               	bcf	158,5,c	;volatile
 15500  000032                     
 15501                           ;main.c: 201:         state_changed = 1;
 15502  000032  0E01               	movlw	1
 15503  000034  0101               	movlb	1	; () banked
 15504  000036  6FB0               	movwf	_state_changed& (0+255),b
 15505                           
 15506                           ;main.c: 202:         read_new_char = 1;
 15507  000038  0E01               	movlw	1
 15508  00003A  6FAE               	movwf	_read_new_char& (0+255),b
 15509  00003C                     i2l5694:
 15510  00003C  FFFF               	dw	65535	; assembler added errata NOP
 15511                           
 15512                           ;main.c: 204:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF){
 15513  00003E  AAF2               	btfss	242,5,c	;volatile
 15514  000040  EF24  F000         	goto	i2u719_41
 15515  000044  EF27  F000         	goto	i2u719_40
 15516  000048                     i2u719_41:
 15517  000048  FFFF               	dw	65535	; assembler added errata NOP
 15518  00004A  EF37  F000         	goto	i2l186
 15519  00004E                     i2u719_40:
 15520  00004E  FFFF               	dw	65535	; assembler added errata NOP
 15521  000050  A4F2               	btfss	242,2,c	;volatile
 15522  000052  EF2D  F000         	goto	i2u720_41
 15523  000056  EF30  F000         	goto	i2u720_40
 15524  00005A                     i2u720_41:
 15525  00005A  FFFF               	dw	65535	; assembler added errata NOP
 15526  00005C  EF37  F000         	goto	i2l186
 15527  000060                     i2u720_40:
 15528  000060  FFFF               	dw	65535	; assembler added errata NOP
 15529  000062                     
 15530                           ;main.c: 205:         T0CON = 0;
 15531  000062  0E00               	movlw	0
 15532  000064  6ED5               	movwf	213,c	;volatile
 15533  000066                     
 15534                           ;main.c: 206:         INTCONbits.TMR0IF = 0;
 15535  000066  94F2               	bcf	242,2,c	;volatile
 15536                           
 15537                           ;main.c: 207:         timer_done = 1;
 15538  000068  0E01               	movlw	1
 15539  00006A  0101               	movlb	1	; () banked
 15540  00006C  6FAD               	movwf	_timer_done& (0+255),b
 15541  00006E                     i2l186:
 15542  00006E  FFFF               	dw	65535	; assembler added errata NOP
 15543  000070  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15544  000072  0011               	retfie		f
 15545  000074  FFFF               	dw	65535	; errata NOP
 15546  000076                     __end_of_rx_char_usart:
 15547                           	callstack 0
 15548                           
 15549                           	psect	rparam
 15550  0000                     
 15551                           	psect	temp
 15552  00007F                     btemp:
 15553                           	callstack 0
 15554  00007F                     	ds	1
 15555  0000                     int$flags	set	btemp
 15556  0000                     wtemp8	set	btemp+1
 15557  0000                     ttemp5	set	btemp+1
 15558  0000                     ttemp6	set	btemp+4
 15559  0000                     ttemp7	set	btemp+8
 15560                           
 15561                           	psect	idloc
 15562                           
 15563                           ;Config register IDLOC0 @ 0x200000
 15564                           ;	unspecified, using default values
 15565  200000                     	org	2097152
 15566  200000  FF                 	db	255
 15567                           
 15568                           ;Config register IDLOC1 @ 0x200001
 15569                           ;	unspecified, using default values
 15570  200001                     	org	2097153
 15571  200001  FF                 	db	255
 15572                           
 15573                           ;Config register IDLOC2 @ 0x200002
 15574                           ;	unspecified, using default values
 15575  200002                     	org	2097154
 15576  200002  FF                 	db	255
 15577                           
 15578                           ;Config register IDLOC3 @ 0x200003
 15579                           ;	unspecified, using default values
 15580  200003                     	org	2097155
 15581  200003  FF                 	db	255
 15582                           
 15583                           ;Config register IDLOC4 @ 0x200004
 15584                           ;	unspecified, using default values
 15585  200004                     	org	2097156
 15586  200004  FF                 	db	255
 15587                           
 15588                           ;Config register IDLOC5 @ 0x200005
 15589                           ;	unspecified, using default values
 15590  200005                     	org	2097157
 15591  200005  FF                 	db	255
 15592                           
 15593                           ;Config register IDLOC6 @ 0x200006
 15594                           ;	unspecified, using default values
 15595  200006                     	org	2097158
 15596  200006  FF                 	db	255
 15597                           
 15598                           ;Config register IDLOC7 @ 0x200007
 15599                           ;	unspecified, using default values
 15600  200007                     	org	2097159
 15601  200007  FF                 	db	255
 15602                           
 15603                           	psect	config
 15604                           
 15605                           ; Padding undefined space
 15606  300000                     	org	3145728
 15607  300000  FF                 	db	255
 15608                           
 15609                           ;Config register CONFIG1H @ 0x300001
 15610                           ;	Oscillator Selection bits
 15611                           ;	OSC = RCIO, RC oscillator w/ OSC2 configured as RA6
 15612                           ;	Oscillator System Clock Switch Enable bit
 15613                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
 15614  300001                     	org	3145729
 15615  300001  27                 	db	39
 15616                           
 15617                           ;Config register CONFIG2L @ 0x300002
 15618                           ;	Power-up Timer Enable bit
 15619                           ;	PWRT = OFF, PWRT disabled
 15620                           ;	Brown-out Reset Enable bit
 15621                           ;	BOR = ON, Brown-out Reset enabled
 15622                           ;	Brown-out Reset Voltage bits
 15623                           ;	BORV = 20, VBOR set to 2.0V
 15624  300002                     	org	3145730
 15625  300002  0F                 	db	15
 15626                           
 15627                           ;Config register CONFIG2H @ 0x300003
 15628                           ;	Watchdog Timer Enable bit
 15629                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 15630                           ;	Watchdog Timer Postscale Select bits
 15631                           ;	WDTPS = 128, 1:128
 15632  300003                     	org	3145731
 15633  300003  0E                 	db	14
 15634                           
 15635                           ; Padding undefined space
 15636  300004                     	org	3145732
 15637  300004  FF                 	db	255
 15638                           
 15639                           ;Config register CONFIG3H @ 0x300005
 15640                           ;	CCP2 Mux bit
 15641                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
 15642  300005                     	org	3145733
 15643  300005  01                 	db	1
 15644                           
 15645                           ;Config register CONFIG4L @ 0x300006
 15646                           ;	Stack Full/Underflow Reset Enable bit
 15647                           ;	STVR = ON, Stack Full/Underflow will cause RESET
 15648                           ;	Low Voltage ICSP Enable bit
 15649                           ;	LVP = ON, Low Voltage ICSP enabled
 15650                           ;	Background Debugger Enable bit
 15651                           ;	DEBUG = 0x1, unprogrammed default
 15652  300006                     	org	3145734
 15653  300006  85                 	db	133
 15654                           
 15655                           ; Padding undefined space
 15656  300007                     	org	3145735
 15657  300007  FF                 	db	255
 15658                           
 15659                           ;Config register CONFIG5L @ 0x300008
 15660                           ;	Code Protection bit
 15661                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
 15662                           ;	Code Protection bit
 15663                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
 15664                           ;	Code Protection bit
 15665                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
 15666                           ;	Code Protection bit
 15667                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
 15668  300008                     	org	3145736
 15669  300008  0F                 	db	15
 15670                           
 15671                           ;Config register CONFIG5H @ 0x300009
 15672                           ;	Boot Block Code Protection bit
 15673                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
 15674                           ;	Data EEPROM Code Protection bit
 15675                           ;	CPD = OFF, Data EEPROM not code protected
 15676  300009                     	org	3145737
 15677  300009  C0                 	db	192
 15678                           
 15679                           ;Config register CONFIG6L @ 0x30000A
 15680                           ;	Write Protection bit
 15681                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
 15682                           ;	Write Protection bit
 15683                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
 15684                           ;	Write Protection bit
 15685                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
 15686                           ;	Write Protection bit
 15687                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
 15688  30000A                     	org	3145738
 15689  30000A  0F                 	db	15
 15690                           
 15691                           ;Config register CONFIG6H @ 0x30000B
 15692                           ;	Configuration Register Write Protection bit
 15693                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
 15694                           ;	Boot Block Write Protection bit
 15695                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
 15696                           ;	Data EEPROM Write Protection bit
 15697                           ;	WRTD = OFF, Data EEPROM not write protected
 15698  30000B                     	org	3145739
 15699  30000B  E0                 	db	224
 15700                           
 15701                           ;Config register CONFIG7L @ 0x30000C
 15702                           ;	Table Read Protection bit
 15703                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
 15704                           ;	Table Read Protection bit
 15705                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
 15706                           ;	Table Read Protection bit
 15707                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
 15708                           ;	Table Read Protection bit
 15709                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
 15710  30000C                     	org	3145740
 15711  30000C  0F                 	db	15
 15712                           
 15713                           ;Config register CONFIG7H @ 0x30000D
 15714                           ;	Boot Block Table Read Protection bit
 15715                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
 15716  30000D                     	org	3145741
 15717  30000D  40                 	db	64
 15718                           tosu	equ	0xFFF
 15719                           tosh	equ	0xFFE
 15720                           tosl	equ	0xFFD
 15721                           stkptr	equ	0xFFC
 15722                           pclatu	equ	0xFFB
 15723                           pclath	equ	0xFFA
 15724                           pcl	equ	0xFF9
 15725                           tblptru	equ	0xFF8
 15726                           tblptrh	equ	0xFF7
 15727                           tblptrl	equ	0xFF6
 15728                           tablat	equ	0xFF5
 15729                           prodh	equ	0xFF4
 15730                           prodl	equ	0xFF3
 15731                           indf0	equ	0xFEF
 15732                           postinc0	equ	0xFEE
 15733                           postdec0	equ	0xFED
 15734                           preinc0	equ	0xFEC
 15735                           plusw0	equ	0xFEB
 15736                           fsr0h	equ	0xFEA
 15737                           fsr0l	equ	0xFE9
 15738                           wreg	equ	0xFE8
 15739                           indf1	equ	0xFE7
 15740                           postinc1	equ	0xFE6
 15741                           postdec1	equ	0xFE5
 15742                           preinc1	equ	0xFE4
 15743                           plusw1	equ	0xFE3
 15744                           fsr1h	equ	0xFE2
 15745                           fsr1l	equ	0xFE1
 15746                           bsr	equ	0xFE0
 15747                           indf2	equ	0xFDF
 15748                           postinc2	equ	0xFDE
 15749                           postdec2	equ	0xFDD
 15750                           preinc2	equ	0xFDC
 15751                           plusw2	equ	0xFDB
 15752                           fsr2h	equ	0xFDA
 15753                           fsr2l	equ	0xFD9
 15754                           status	equ	0xFD8

Data Sizes:
    Strings     310
    Constant    20
    Data        51
    BSS         100
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    126     126
    BANK0           128     38     113
    BANK1           256    163     239
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    main$2130	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[9]), 
		 -> STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_107(CODE[3]), STR_103(CODE[3]), STR_98(CODE[3]), STR_94(CODE[3]), 
		 -> STR_89(CODE[4]), STR_85(CODE[4]), STR_80(CODE[3]), STR_75(CODE[3]), 
		 -> STR_70(CODE[4]), STR_65(CODE[3]), STR_60(CODE[3]), STR_55(CODE[4]), 
		 -> STR_50(CODE[3]), STR_45(CODE[3]), STR_40(CODE[4]), STR_35(CODE[3]), 
		 -> STR_31(CODE[3]), STR_26(CODE[3]), STR_22(CODE[3]), STR_17(CODE[4]), 
		 -> STR_13(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_107(CODE[3]), STR_103(CODE[3]), STR_98(CODE[3]), STR_94(CODE[3]), 
		 -> STR_89(CODE[4]), STR_85(CODE[4]), STR_80(CODE[3]), STR_75(CODE[3]), 
		 -> STR_70(CODE[4]), STR_65(CODE[3]), STR_60(CODE[3]), STR_55(CODE[4]), 
		 -> STR_50(CODE[3]), STR_45(CODE[3]), STR_40(CODE[4]), STR_35(CODE[3]), 
		 -> STR_31(CODE[3]), STR_26(CODE[3]), STR_22(CODE[3]), STR_17(CODE[4]), 
		 -> STR_13(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), STR_8(CODE[50]), 
		 -> STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), STR_8(CODE[50]), 
		 -> STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), 
		 -> STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), 
		 -> STR_2(CODE[64]), STR_1(CODE[49]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    S1526_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    change_direction@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    reach_goal@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    update_current_coil@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    turn_on_current_coil@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    init_stepper@hex_coil_register_values	PTR int  size(2) Largest target is 8
		 -> hex_end_effector_values(BANK1[8]), hex_joint_values(BANK1[8]), 

    init_stepper@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    state_translator_micro_to_fpga@state	PTR int  size(2) Largest target is 2
		 -> state(BANK1[2]), 

    state_translator_fpga_to_micro@state	PTR int  size(2) Largest target is 2
		 -> state(BANK1[2]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), STR_9(CODE[22]), 

    main@greet_str	PTR const unsigned char [80] size(2) Largest target is 64
		 -> ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    state_msgs	PTR const unsigned char [8] size(2) Largest target is 64
		 -> STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[9]), 
		 -> STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 


Critical Paths under _main in COMRAM

    _state_translator_fpga_to_micro->_lcd_dat
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _reach_goal->_turn_on_current_coil
    _reach_goal->_update_current_coil
    _lcd_str->_lcd_dat
    _lcd_dat->_lcd_wr
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_wr
    ___fldiv->___flmul
    _init_USART->_roundf
    _roundf->___flsub
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___fltol->_roundf
    _abs->___aomod
    ___xxtofl->___awdiv
    ___awdiv->_abs

Critical Paths under _rx_char_usart in COMRAM

    None.

Critical Paths under _main in BANK0

    _wait_for_zero->_get_temperature
    _get_temperature->___fltol
    _snprintf->_vsnprintf
    _init_timer_2->___fltol
    _init_ccp1->_update_pwm_duty_ccp1
    _update_pwm_duty_ccp1->___fltol
    _init_USART->___fltol
    ___fltol->_roundf
    _check_temperature->_get_temperature

Critical Paths under _rx_char_usart in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rx_char_usart in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rx_char_usart in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rx_char_usart in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rx_char_usart in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rx_char_usart in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               164   164      0   85046
                                             37 BANK0      1     1      0
                                              0 BANK1    163   163      0
                             ___wmul
                   _change_direction
                  _check_temperature
_configure_analog_digital_conversion
                      _get_reg_value
                    _get_temperature
                         _init_PORTS
                         _init_USART
                          _init_ccp1
                    _init_interrupts
                       _init_stepper
                       _init_timer_0
                       _init_timer_2
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                         _reach_goal
                     _serial_tx_char
                           _snprintf
     _state_translator_fpga_to_micro
     _state_translator_micro_to_fpga
                      _wait_for_zero
 ---------------------------------------------------------------------------------
 (1) _wait_for_zero                                        0     0      0    3359
                    _get_temperature
 ---------------------------------------------------------------------------------
 (2) _get_temperature                                      2     0      2    3359
                                             28 BANK0      2     0      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _state_translator_micro_to_fpga                       5     3      2     168
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _state_translator_fpga_to_micro                       3     1      2     450
                                              2 COMRAM     3     1      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            12     4      8   46693
                                             10 BANK0     12     4      8
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   46319
                                            111 COMRAM    12     4      8
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   45556
                                            103 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   45095
                                             66 COMRAM    37    31      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7075
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6115
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    5013
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    5560
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6790
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2168
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1175
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _serial_tx_char                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _reach_goal                                           7     3      4    1264
                                              6 COMRAM     7     3      4
               _turn_on_current_coil
                _update_current_coil
 ---------------------------------------------------------------------------------
 (2) _update_current_coil                                  6     4      2     274
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _turn_on_current_coil                                 6     4      2     120
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              5     3      2     286
                                              2 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      44
                                              2 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_timer_2                                         4     4      0    7937
                                             28 BANK0      4     4      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _init_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_stepper                                        16     6     10    1406
                                              0 COMRAM    16     6     10
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ccp1                                            0     0      0    4602
               _update_pwm_duty_ccp1
 ---------------------------------------------------------------------------------
 (2) _update_pwm_duty_ccp1                                 9     5      4    4602
                                             28 BANK0      9     5      4
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1551
                                             69 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   11790
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   11257
                                            118 COMRAM     8     4      4
                                              0 BANK0     18    18      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3801
                                            110 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    3478
                                             94 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2352
                                             44 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     533
                                             18 BANK0     10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_reg_value                                        1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configure_analog_digital_conversion                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_temperature                                    6     4      2    2077
                                             30 BANK0      6     4      2
                            ___awdiv
                             ___flge
                           ___xxtofl
                                _abs
                    _get_temperature (ARG)
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     218
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     474
                                             30 COMRAM    14    10      4
                            ___awdiv (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                             22 COMRAM     8     4      4
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (1) _change_direction                                     4     2      2     272
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _rx_char_usart                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _change_direction
   _check_temperature
     ___awdiv
       _abs (ARG)
         ___aomod (ARG)
     ___flge
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _abs (ARG)
         ___aomod (ARG)
     _abs
       ___aomod (ARG)
     _get_temperature (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _roundf (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                         ___aomod (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
   _configure_analog_digital_conversion
   _get_reg_value
   _get_temperature
     ___flmul
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flge
         ___flmul
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _abs (ARG)
         ___aomod (ARG)
   _init_PORTS
   _init_USART
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flge
         ___flmul
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
     _roundf
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flge
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
   _init_ccp1
     _update_pwm_duty_ccp1
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _roundf (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                         ___aomod (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
   _init_interrupts
   _init_stepper
   _init_timer_0
   _init_timer_2
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
     ___flmul
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flge
         ___flmul
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
   _lcd_cmd
     _lcd_wr
   _lcd_init
     _lcd_cmd
       _lcd_wr
   _lcd_str
     _lcd_dat
       _lcd_wr
   _reach_goal
     _turn_on_current_coil
     _update_current_coil
   _serial_tx_char
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _state_translator_fpga_to_micro
     _lcd_dat
       _lcd_wr
   _state_translator_micro_to_fpga
   _wait_for_zero
     _get_temperature
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _roundf (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                         ___aomod (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)

 _rx_char_usart (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A3      EF       7       93.4%
BITBANK0            80      0       0       4        0.0%
BANK0               80     26      71       5       88.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7E      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1DE      15        0.0%
DATA                 0      0     1DE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Jun 15 23:46:05 2023

                                  ?_get_reg_value 0001                                   ??_wait_for_zero 007F  
                                    ___fldiv@aexp 005E                                      ___fldiv@bexp 005D  
                                    ___fldiv@sign 0056                                                l21 67C4  
                                              l24 6526                                                l27 653A  
                                              l36 651A                                      ___awdiv@sign 001C  
                             ___wmul@multiplicand 0003                                               l213 669A  
                                             l311 65A0                                               l231 6644  
                                             l216 64FE                                               l240 6E0E  
                                             l305 657C                                               l225 650A  
                                             l137 1660                                               l234 6D86  
                                             l308 70DA                                               l228 661A  
                                             l325 6F48                                               l149 1746  
                                             l342 6704                                               l318 700C  
                                             l334 71B2                                               l502 3FE6  
                                             l174 1B5E                                               l263 6E94  
                                             l328 6740                                               l338 6D06  
                                             l370 6C26                                               l515 7EB0  
                                             l259 7D1E                                               l268 6E98  
                                             l380 65F0                                               l373 6C90  
                                             l367 65C8                                               l384 728E  
                                             l376 65CE                                               l619 7632  
                                             l388 666E                                               l653 791C  
                                             l662 6782                                               l833 7844  
                                             l658 796A                                               l826 7822  
                                             l843 7542                                               l916 1DC6  
                                             l836 7520                                               l685 7AA2  
                                             l933 1F0A                                               l925 2120  
                                             l917 1DB0                                               l942 200E  
                                             l918 1D66                                               l943 1FF6  
                                             l970 29F6                                               l972 280E  
                                             l981 2864                                               l958 691A  
                                             l983 28F4                                               l975 27C8  
                                             l984 28DC                                 ??_init_interrupts 0001  
                                             _PR2 000FCB                                               _abs 691E  
                                             _pad 7376                                               wreg 000FE8  
                                  ?_rx_char_usart 0001                                      ___flmul@aexp 003E  
                                    ___flmul@bexp 003F                                      ___flmul@sign 0039  
                                    ___flmul@temp 0044                                      ___flmul@prod 0040  
                                    ___fltol@exp1 00D3                                              l1002 2212  
                                            l1011 24AE                                              l1012 2496  
                                            l1101 7BB6                                              l1006 25C4  
                                            l1009 241E                                              l1050 39A8  
                                            l1043 38FC                                              l1019 257C  
                                            l1203 3B24                                              ?_abs 0013  
                                            l1205 3B2E                                              l1301 145C  
                                            l1046 3A8E                                              l1142 73CA  
                                            l1214 3C06                                              l1063 695A  
                                            l1215 3C5A                                              l1160 2E9E  
                                            l1224 348E                                              l1057 3A14  
                                            l1145 7416                                              l1241 3168  
                                            l1066 6964                                              l1074 2DE0  
                                            l1154 6AD8                                              l1162 2EA8  
                                            l1234 3672                                              l1226 3498  
                                            l1402 6848                                              l1147 7458  
                                            l1219 3C64                                              l1180 3116  
                                            PORTD 000F83                                              PORTE 000F84  
                                            l1262 33DA                                              l1239 315E  
                                            l4000 34DA                                              l1264 3446  
                                            l1248 320C                                              l1096 7BDC  
                                            l1088 66CE                                              l1417 7370  
                                            l1425 69B6                                              l1185 36BA  
                                            l1345 6C16                                              l1434 6A12  
                                            l1194 3826                                              l4010 35D8  
                                            l4002 3550                                              l1346 6C1E  
                                            l1187 36C4                                              l4100 3CEC  
                                            l1428 64F2                                              l1196 3898  
                                            l4012 35FA                                              l4004 3556  
                                            l1453 6BAC                                              l1374 3E26  
                                            l4110 3D22                                              l1438 7738  
                                            l4014 3618                                              l4006 355C  
                                            l1382 68D0                                              l4030 3184  
                                            l4022 311C                                              l1278 0198  
                                            l5000 79D6                                              l4200 1CC0  
                                            l4120 3DDE                                              l4112 3D5C  
                                            l4104 3CF4                                              l4016 3636  
                                            l4008 35C0                                              l1448 6BA2  
                                            l4040 31C6                                              l4032 318C  
                                            l4024 3130                                              l1377 3E30  
                                            l5002 79E6                                              l4210 1CD4  
                                            l4202 1CC4                                              l4122 3DF4  
                                            l4106 3D0E                                              l4130 7638  
                                            l4018 3648                                              l4050 3248  
                                            l4042 31CE                                              l4034 31AE  
                                            l4026 3132                                              l1459 688A  
                                            l5012 7A18                                              l5004 79EA  
                                            l4300 1F82                                              l4220 1CE8  
                                            l4212 1CD8                                              l4204 1CC8  
                                            l5100 2B12                                              l1388 6806  
                                            l1396 6A72                                              l4124 3E0A  
                                            l4116 3D96                                              l4108 3D18  
                                            l4140 76A6                                              l4132 7666  
                                            l4052 325E                                              l4060 32C8  
                                            l4044 31EE                                              l4036 31B6  
                                            l4028 3152                                              l5030 7A90  
                                            l5022 7A48                                              l5014 7A24  
                                            l5006 79FC                                              l4302 1F8A  
                                            l4310 1FBA                                              l4230 1CFE  
                                            l4222 1CEC                                              l4214 1CDC  
                                            l4206 1CCC                                              l4150 1B80  
                                            l5110 2CC2                                              l4142 76C8  
                                            l4070 336A                                              l4062 32DA  
                                            l4046 31FE                                              l4038 31BE  
                                            l5200 7586                                              l5040 390E  
                                            l5024 7A56                                              l5016 7A2E  
                                            l4320 2024                                              l4312 1FC0  
                                            l4304 1F90                                              l4240 1D86  
                                            l4232 1D2C                                              l4224 1CF0  
                                            l4216 1CE0                                              l4208 1CD0  
                                            l4160 1BCA                                              l4152 1B8C  
                                            l5112 2D2E                                              l5104 2B4A  
                                            l3600 7296                                              l4144 76DE  
                                            l4136 7672                                              l4080 33F6  
                                            l4072 338C                                              l4064 32E0  
                                            l4056 329E                                              l4400 0230  
                                            l5210 75BC                                              l5202 758A  
                                            l5050 3956                                              l5042 392A  
                                            l5034 38A0                                              l5026 7A6A  
                                            l4330 2098                                              l4322 2030  
                                            l4314 1FD2                                              l4306 1FA6  
                                            l4250 1DDA                                              l4242 1D8C  
                                            l4234 1D4E                                              l4226 1CF4  
                                            l4218 1CE4                                              l4170 1C00  
                                            l4162 1BDA                                              l4154 1B9E  
                                            l5114 2D64                                              l5106 2C1E  
                                            l5130 660C                                              l5122 65F8  
                                            l4090 3C7E                                              l3610 7328  
                                            l3602 72AC                                              l4146 770E  
                                            l4138 7682                                              l4082 3406  
                                            l4074 33AA                                              l4066 32E6  
                                            l4058 32B4                                              l4402 0252  
                                            l4410 02C6                                              l5220 75FC  
                                            l5212 75D0                                              l5204 7594  
                                            l5060 39EE                                              l5052 398E  
                                            l5036 38B4                                              l5028 7A80  
                                            l4340 20EE                                              l4332 20AA  
                                            l4324 2042                                              l4316 1FEC  
                                            l4308 1FA8                                              l4260 1E26  
                                            l4252 1DEE                                              l4244 1DA0  
                                            l4236 1D5E                                              l4228 1CF8  
                                            l4180 1C34                                              l4172 1C16  
                                            l4164 1BDE                                              l4156 1BA0  
                                            l5116 2DAA                                              l5108 2C8A  
                                            l5300 7012                                              l5132 660E  
                                            l5124 65FA                                              l4092 3C84  
                                            l3604 72C0                                              l3620 6990  
                                            l3700 7D74                                              l4084 341C  
                                            l4076 33C8                                              l4068 3348  
                                            l4420 036E                                              l4412 02F2  
                                            l4404 0262                                              l5222 7604  
                                            l5214 75D8                                              l5206 75AA  
                                            l5070 3A54                                              l5062 3A02  
                                            l5054 3992                                              l5046 393E  
                                            l5038 38C6                                              l4342 20F2  
                                            l4334 20D0                                              l4326 2080  
                                            l4270 1E60                                              l4262 1E38  
                                            l4246 1DA2                                              l4238 1D7A  
                                            l4182 1C4A                                              l4190 1C7A  
                                            l4174 1C18                                              l4158 1BB6  
                                            l4166 1BE6                                              l5118 2DCE  
                                            l5310 709C                                              l5302 701A  
                                            l5134 6618                                              l5126 6600  
                                            l5150 6636                                              l5142 6622  
                                            l4094 3C8A                                              l3606 72CC  
                                            l3614 696C                                              l3622 69BC  
                                            l3710 7DEA                                              l3702 7D94  
                                            l4078 33F0                                              l4510 09F0  
                                            l4502 0964                                              l4422 0390  
                                            l4414 02FC                                              l4430 0404  
                                            l5216 75F2                                              l5208 75B2  
                                            l5224 760A                                              l5072 3A68  
                                            l5064 3A28                                              l5056 399E  
                                            l5048 3948                                              l4344 20FA  
                                            l4336 20D4                                              l4328 2082  
                                            l4280 1ED4                                              l4272 1E6C  
                                            l4264 1E44                                              l4256 1E02  
                                            l4248 1DAE                                              l4192 1C8C  
                                            l4184 1C5E                                              l4176 1C20  
                                            l4168 1BF8                                              l5160 6FB6  
                                            l5320 659E                                              l5304 701C  
                                            l5128 6602                                              l5152 6638  
                                            l5144 6624                                              l3640 664A  
                                            l4096 3CAC                                              l4088 3C6A  
                                            l3608 72F0                                              l3616 6978  
                                            l3624 69C8                                              l3720 7E6E  
                                            l3712 7E1E                                              l3704 7DB8  
                                            l3632 684C                                              l3800 6B96  
                                            l4600 1034                                              l4512 0A2C  
                                            l4520 0A96                                              l4504 09A0  
                                            l4440 04BA                                              l4432 0430  
                                            l4424 03A0                                              l4416 030A  
                                            l4408 02B2                                              l4360 00CA  
                                            l4352 007C                                              l5080 6BB4  
                                            l5240 7AD2                                              l5232 7AAA  
                                            l5400 7C58                                              l5136 6C24  
                                            l5226 7620                                              l5218 75FA  
                                            l5074 3A7A                                              l5066 3A2A  
                                            l5058 39E0                                              l5330 65B4  
                                            l4346 210C                                              l4338 20E8  
                                            l4282 1EE8                                              l4266 1E4A  
                                            l4258 1E14                                              l4274 1E72  
                                            l4194 1CA4                                              l4186 1C6E  
                                            l4178 1C32                                              l5090 2A1E  
                                            l5170 6FEE                                              l5162 6FCA  
                                            l5314 6582                                              l5306 701E  
                                            l5154 6642                                              l5146 662A  
                                            l3642 6666                                              l3810 6A1C  
                                            l4098 3CE8                                              l3618 698C  
                                            l3626 69CE                                              l3650 3E4E  
                                            l3722 7E8E                                              l3714 7E3E  
                                            l3706 7DC0                                              l3730 776E  
                                            l4602 106C                                              l4522 0AD2  
                                            l4530 0B3C                                              l4514 0A64  
                                            l4450 05B2                                              l4442 04F2  
                                            l4434 0462                                              l4418 0334  
                                            l4370 00FA                                              l4362 00D6  
                                            l4354 00A6                                              l5082 6BBC  
                                            l5250 7B4A                                              l5242 7AF6  
                                            l5234 7AC0                                              l5410 7CC4  
                                            l5402 7C6C                                              l5138 6C3A  
                                            l5228 7628                                              l5076 3A7C  
                                            l5068 3A30                                              l3636 6920  
                                            l5332 65B6                                              l4348 210E  
                                            l4292 1F4E                                              l4276 1E9E  
                                            l4284 1EF8                                              l4268 1E5E  
                                            l4196 1CB6                                              l4188 1C72  
                                            l5092 2A70                                              l4700 262A  
                                            l5172 6FF2                                              l5164 6FD0  
                                            l5156 6F4E                                              l5316 6586  
                                            l5324 64F8                                              l5308 7020  
                                            l5148 662C                                              l5180 716C  
                                            l3804 67C8                                              l3812 6A34  
                                            l3628 6A06                                              l3820 6A78  
                                            l3660 3EAA                                              l3652 3E6E  
                                            l3716 7E52                                              l3708 7DD6  
                                            l3900 368E                                              l3740 77E6  
                                            l3732 7776                                              l4620 11C8  
                                            l4604 1096                                              l4612 111A  
                                            l4532 0B68                                              l4540 0BD0  
                                            l4524 0B0A                                              l4516 0A88  
                                            l4460 0666                                              l4452 05EA  
                                            l4444 053C                                              l4428 03F0  
                                            l4364 00DC                                              l4356 00B4  
                                            l5084 6BCA                                              l5252 7B60  
                                            l5260 7BD2                                              l5244 7B04  
                                            l5236 7ACA                                              l5412 7CDC  
                                            l5404 7C84                                              l5190 754C  
                                            l3638 693E                                              l5334 65B8  
                                            l5326 65A6                                              l4294 1F5A  
                                            l4286 1F26                                              l4278 1ED2  
                                            l4198 1CBA                                              l5094 2A84  
                                            l5270 67BA                                              l4710 2664  
                                            l4702 2632                                              l5166 6FD4  
                                            l5158 6FB2                                              l5318 659C  
                                            l5350 6F10                                              l5174 670A  
                                            l5182 7180                                              l3814 6A66  
                                            l3830 6AB4                                              l3822 6A90  
                                            l3670 3F0C                                              l3662 3EB8  
                                            l3654 3E72                                              l3646 3E38  
                                            l3718 7E58                                              l3910 3706  
                                            l3902 36AE                                              l3742 7806  
                                            l3734 778C                                              l3726 7740  
                                            l3750 7480                                              l4630 125C  
                                            l4614 1156                                              l4606 10A6  
                                            l4542 0C0C                                              l4550 0C76  
                                            l4534 0B9E                                              l4470 0718  
                                            l4462 068E                                              l4438 047E  
                                            l4390 01AC                                              l4382 0118  
                                            l4374 0104                                              l4366 00F0  
                                            l4358 00C6                                              l5086 6BF2  
                                            l5254 7B74                                              l5246 7B10  
                                            l5422 66A0                                              l5414 7CF0  
                                            l5406 7C98                                              l5430 6E34  
                                            l5510 1462                                              ?_pad 0011  
                                            l5192 755E                                              l5336 65BA  
                                            l5328 65AE                                              l4296 1F6C  
                                            l4288 1F3A                                              l5096 2ACA  
                                            l5088 29FE                                              l5272 67BC  
                                            l5264 6788                                              l4800 2956  
                                            l4720 26A4                                              l4712 2666  
                                            l4704 2644                                              l5168 6FE8  
                                            l5352 6F20                                              l5344 6EA6  
                                            l5360 6D30                                              l5184 71A2  
                                            l3816 6A6A                                              l3808 6A16  
                                            l3824 6A9C                                              l3680 3F88  
                                            l3672 3F20                                              l3664 3EDA  
                                            l3656 3E86                                              l3648 3E3C  
                                            l3840 2E5A                                              l3920 3734  
                                            l3912 370E                                              l3904 36EE  
                                            l3744 7808                                              l3736 77A0  
                                            l3728 774C                                              l3760 7506  
                                            l3752 7488                                              l4632 1276  
                                            l4640 12C4                                              l4616 118E  
                                            l4608 10DC                                              l4560 0D54  
                                            l4552 0CA2                                              l4544 0C44  
                                            l4480 07DE                                              l4472 0750  
                                            l4448 0576                                              l4392 01AE  
                                            l5256 7BA6                                              l5248 7B24  
                                            l5424 66AA                                              l5408 7CB0  
                                            l5440 6E8E                                              l5432 6E3C  
                                            l5600 175A                                              l5520 1478  
                                            l5512 1468                                              l5194 7566  
                                            l5290 6674                                              l4298 1F6E  
                                            l5098 2AEE                                              l5274 67BE  
                                            l5266 67B6                                              l4810 29CE  
                                            l4802 2976                                              l4730 26F2  
                                            l4714 267C                                              l4722 26AC  
                                            l4706 264C                                              l5354 6F34  
                                            l5346 6EEC                                              l5338 6E9E  
                                            l5370 6D68                                              l5362 6D32  
                                            l5178 70E0                                              l5282 6522  
                                            l3770 73B4                                              l3826 6AAA  
                                            l3674 3F52                                              l3666 3EE2  
                                            l3682 3F8E                                              l3658 3EA6  
                                            l3690 7D26                                              l3850 2EC8  
                                            l3842 2E70                                              l3834 2DE8  
                                            l3930 3814                                              l3914 3716  
                                            l3922 3796                                              l3906 36F6  
                                            l3746 781C                                              l3738 77B4  
                                            l3762 751A                                              l3754 749E  
                                            l4642 1300                                              l4634 1284  
                                            l4618 11B8                                              l4626 1208  
                                            l4570 0E2C                                              l4562 0D8A  
                                            l4554 0CEC                                              l4482 0824  
                                            l4458 063A                                              l4394 01DA  
                                            l4386 0126                                              l4378 010E  
                                            l5258 7BC0                                              l5418 7D0C  
                                            l5434 6E5C                                              l5610 179E  
                                            l5602 175E                                              l5530 14DE  
                                            l5522 147C                                              l5514 146C  
                                            l5196 756A                                              l5188 7548  
                                            l5444 71BA                                              l5284 6510  
                                            l5292 6694                                              l4900 2398  
                                            l5276 67C0                                              l5268 67B8  
                                            l4812 29E0                                              l4804 298C  
                                            l4740 2722                                              l4732 26F8  
                                            l4724 26BE                                              l4716 2690  
                                            l4708 2652                                              l5348 6EF0  
                                            l5372 6D6E                                              l5364 6D38  
                                            l5356 6D0E                                              l5380 6D8C  
                                            l3780 742A                                              l3772 73C0  
                                            l3764 7378                                              l3828 6AB0  
                                            l3684 3FA4                                              l3676 3F72  
                                            l3668 3EF8                                              l3692 7D2A  
                                            l3860 2EFA                                              l3852 2ED8  
                                            l3844 2E72                                              l3836 2E08  
                                            l3932 383C                                              l3940 386E  
                                            l3924 37B6                                              l3916 3728  
                                            l3908 36FA                                              l3756 74B2  
                                            l3748 745E                                              l4660 1400  
                                            l4644 1338                                              l4628 1234  
                                            l4468 06DC                                              l4396 0210  
                                            l4388 0180                                              l5436 6E64  
                                            l5428 6E14                                              l5620 181A  
                                            l5612 17B8                                              l5604 1762  
                                            l5540 1502                                              l5532 14E4  
                                            l5524 14A8                                              l5516 1470  
                                            l5508 1462                                              l5198 757E  
                                            l5446 723E                                              l5454 7282  
                                            l5286 6514                                              l5294 6696  
                                            l4910 241C                                              l4902 23D2  
                                            l4830 2148                                              l5278 67C2  
                                            l4814 29E6                                              l4806 29AC  
                                            l4750 2772                                              l4726 26DA  
                                            l4718 26A0                                              l5470 6572  
                                            l5462 6560                                              l5374 6D74  
                                            l5366 6D50                                              l5358 6D1E  
                                            l5382 6D94                                              l3782 743E  
                                            l3774 73D8                                              l3766 738C  
                                            l3686 3FC4                                              l3678 3F74  
                                            l3694 7D3C                                              l3870 300C  
                                            l3862 2F7C                                              l3854 2EE0  
                                            l3846 2E92                                              l3838 2E3A  
                                            l3934 3852                                              l3926 37D8  
                                            l3918 372E                                              l3950 3AC6  
                                            l3758 74E6                                              l3790 688E  
                                            l4646 1362                                              l4654 13B2  
                                            l4590 0F6C                                              l4582 0EF2  
                                            l4574 0E66                                              l4566 0DAA  
                                            l4558 0D28                                              l4494 08EA  
                                            l4486 085E                                              l4478 07A2  
                                            l4398 0222                                              l4670 1422  
                                            l5390 7BEC                                              l5438 6E86  
                                            l5630 18DC                                              l5622 1834  
                                            l5614 17CE                                              l5606 1774  
                                            l5550 154A                                              l5542 151A  
                                            l5534 14EA                                              l5526 14D4  
                                            l5518 1474                                              l5448 7274  
                                            l5296 6698                                              l4920 248C  
                                            l4912 2430                                              l4904 23E0  
                                            l4840 219C                                              l4832 215E  
                                            l4824 2128                                              l4816 29EA  
                                            l4808 29C8                                              l4760 27C6  
                                            l4752 2782                                              l4744 2736  
                                            l4728 26EA                                              l4736 270C  
                                            l5472 6574                                              l5464 656C  
                                            l5376 6D7A                                              l5368 6D62  
                                            l5384 6DC8                                              l5480 6C96  
                                            l3776 73EE                                              l3768 73A0  
                                            l3696 7D5C                                              l3880 3094  
                                            l3872 302E                                              l3864 2F82  
                                            l3856 2EEA                                              l3848 2EB2  
                                            l3936 3858                                              l3928 37F6  
                                            l3952 3ACE                                              l3944 3A96  
                                            l4672 144A                                              l4656 13DE  
                                            l4664 140E                                              l4648 1372  
                                            l4592 0FA8                                              l4584 0F1E  
                                            l4576 0EA2                                              l4568 0DE6  
                                            l4496 0916                                              l4488 089A  
                                            l5392 7C00                                              l5640 1954  
                                            l5624 184A                                              l5616 17E6  
                                            l5632 18EE                                              l5608 178E  
                                            l5560 15B2                                              l5552 1584  
                                            l5544 152E                                              l5536 14F6  
                                            l5528 14D8                                              l4930 250C  
                                            l4914 2444                                              l4906 23FE  
                                            l4850 21D4                                              l4842 21A4  
                                            l4834 2172                                              l4826 2134  
                                            l4770 2824                                              l4762 27D4  
                                            l4754 278A                                              l4746 2752  
                                            l4738 2722                                              l4690 25EA  
                                            l5474 6576                                              l5466 656E  
                                            l5378 6D80                                              l5386 6DCA  
                                            l5482 6CC4                                              l5490 6CE4  
                                            l3778 73F2                                              l3698 7D60  
                                            l3890 30DA                                              l3882 30A6  
                                            l3874 304C                                              l3866 2F88  
                                            l3858 2EF2                                              l3938 3868  
                                            l3970 3BA2                                              l3962 3B58  
                                            l3954 3AE4                                              l3946 3AA8  
                                            l3786 680A                                              l3794 6B44  
                                            l4658 13EC                                              l5394 7C14  
                                            l5458 65D0                                              l5650 19C6  
                                            l5642 195A                                              l5634 1908  
                                            l5626 1874                                              l5618 1810  
                                            l5570 15F0                                              l5562 15BA  
                                            l5554 158A                                              l5546 1536  
                                            l5538 14F8                                              l4940 2582  
                                            l4924 24C4                                              l4932 2510  
                                            l4916 2448                                              l4908 240A  
                                            l4860 223A                                              l4852 21E8  
                                            l4844 21AA                                              l4836 2182  
                                            l4828 2146                                              l4772 283E  
                                            l4780 2876                                              l4764 27F8  
                                            l4756 27A0                                              l4748 2762  
                                            l4692 25EC                                              l5476 6578  
                                            l5468 6570                                              l4684 6506  
                                            l5492 6CFE                                              l5484 6CD8  
                                            l3884 30AE                                              l3892 30EC  
                                            l3876 306A                                              l3868 2FEC  
                                            l3980 3C1E                                              l3972 3BDA  
                                            l3964 3B6E                                              l3956 3AEC  
                                            l3948 3AB0                                              l5396 7C2C  
                                            l5388 7BE6                                              l5660 1A48  
                                            l5644 197E                                              l5636 191E  
                                            l5652 19D6                                              l5628 187E  
                                            l5580 1664                                              l5572 1610  
                                            l5556 1590                                              l5548 1544  
                                            l5564 15BE                                              l4950 25B4  
                                            l4942 2592                                              l4934 2530  
                                            l4926 24D0                                              l4918 245A  
                                            l4870 227E                                              l4854 21F8  
                                            l4846 21BC                                              l4838 218A  
                                            l4782 288A                                              l4774 2844  
                                            l4766 27FA                                              l4758 27B4  
                                            l4694 2602                                              l4686 25CC  
                                            l5478 657A                                              l3886 30C4  
                                            l3878 307C                                              l3982 3C34  
                                            l3974 3BDE                                              l3966 3B72  
                                            l3958 3AFE                                              l3990 3462  
                                            l3798 6B80                                              l4598 0FF8  
                                            l5398 7C40                                              l5670 1AB6  
                                            l5662 1A52                                              l5654 19F0  
                                            l5646 198E                                              l5638 1948  
                                            l5590 16CA                                              l5582 167E  
                                            l5574 1618                                              l5566 15D8  
                                            l5558 15A0                                              TRISD 000F95  
                                            TRISE 000F96                                              l5496 66D4  
                                            l4960 784A                                              l4944 25A4  
                                            l4936 2544                                              l4928 24E2  
                                            l4880 22C8                                              l4872 228A  
                                            l4864 2250                                              l4856 2200  
                                            l4848 21BE                                              l4792 290A  
                                            l4784 288E                                              l4776 2850  
                                            l4768 280A                                              l4696 2616  
                                            l4688 25D8                                              l3888 30D0  
                                            l3896 3678                                              l3984 3C38  
                                            l3976 3BE2                                              l3968 3B94  
                                            l3992 3482                                              l5752 0150  
                                            l5680 1B2A                                              l5664 1A6C  
                                            l5656 1A06                                              l5648 19BA  
                                            l5592 16DA                                              l5584 1684  
                                            l5576 1630                                              l5568 15DA  
                                            l4970 78E4                                              l4962 787C  
                                            l4946 25A6                                              l4938 2564  
                                            l4890 231A                                              l4882 22D4  
                                            l4874 22A2                                              l4866 225E  
                                            l4858 2228                                              l4954 68D6  
                                            l4794 2916                                              l4786 28A0  
                                            l4778 2862                                              l4698 2626  
                                            l5754 3D44                                              l3898 368C  
                                            l3994 34C2                                              l3986 344C  
                                            l5682 1B3E                                              l5666 1A82  
                                            l5658 1A1E                                              l5674 1AE6  
                                            l5594 16F4                                              l5586 169C  
                                            l5578 1650                                              l4972 78F6  
                                            l4964 788C                                              l4948 25AE  
                                            l4892 232A                                              l4884 22E4  
                                            l4876 22AE                                              l4868 2268  
                                            l4956 68E6                                              l4796 2928  
                                            l4788 28D2                                              l3996 34CA  
                                            l3988 3460                                              l5684 1B72  
                                            l5676 1B00                                              l5668 1AAC  
                                            l5596 1708                                              l5588 16B0  
                                            l4974 790A                                              l4966 78C0  
                                            l4990 7972                                              l4894 2346  
                                            l4886 22F0                                              l4878 22BA  
                                            l4982 6746                                              l4798 2952  
                                            l3998 34D2                                              l5678 1B10  
                                            l5598 1730                                              l4976 7960  
                                            l4968 78D0                                              l4992 798E  
                                            l4896 2352                                              l4888 2300  
                                            l4984 6760                                              l4978 7966  
                                            l4898 236E                                              l4986 6770  
                                            l4996 79A4                                              l4998 79D4  
                                            STR_1 7F3B                                              STR_2 7EC9  
                                            STR_3 7FBB                                              STR_4 7F6C  
                                            STR_5 7FA9                                              STR_6 7FC4  
                                            STR_7 7FB2                                              STR_8 7F09  
                                            STR_9 7F93                                     _state_changed 01B0  
                                            _LATA 000F89                                              _LATB 000F8A  
                                            _LATC 000F8B                                              u4000 6B7A  
                                            u4010 6B94                                              u4011 6B8E  
                                            u4020 67FC                                              u4100 2E6E  
                                            u4021 67F4                                              u4101 2E68  
                                            u4030 6800                                              u4110 2E90  
                                            u4111 2E8A                                              u5000 1F24  
                                            u4040 6A32                                              u4200 30A6  
                                            u4120 2EC6                                              u5001 1F1E  
                                            u4041 6A2C                                              u4201 30A0  
                                            u4121 2EC0                                              u5010 1F38  
                                            u4050 6A64                                              u4210 30C2  
                                            u4130 2ED8                                              u5011 1F32  
                                            u4051 6A5E                                              u4211 30BC  
                                            u4131 2ED2                                              u5100 2040  
                                            u5020 1F6A                                              u4060 6A8E  
                                            u4140 300A                                              u4300 383A  
                                            u4220 368A                                              u5101 203A  
                                            u5021 1F64                                              u4061 6A88  
                                            u4141 3004                                              u4301 3834  
                                            u4221 3684                                              u5110 207E  
                                            u5030 1F80                                              u4150 302C  
                                            u4070 2E1A                                              u4310 3850  
                                            u4230 36AC                                              u5111 2078  
                                            u5031 1F7A                                              u4151 3026  
                                            u4071 2E12                                              u4311 384A  
                                            u4231 36A6                                              u6000 2458  
                                            u5120 2096                                              u5040 1FA4  
                                            u4160 304A                                              u4080 2E1E  
                                            u4240 376E                                              u4400 3C18  
                                            u5200 01D8                                              u6001 2452  
                                            u5121 2090                                              u5041 1F9E  
                                            u4161 3044                                              u4401 3C12  
                                            u4321 3AA0                                              u5201 01D2  
                                            u6010 248A                                              u5130 20AA  
                                            u5050 1FBA                                              u3610 72AA  
                                            u4170 3068                                              u4090 2E38  
                                            u4250 37B4                                              u4410 3C5A  
                                            u4330 3AC4                                              u5210 0220  
                                            u6011 2484                                              u5131 20A4  
                                            u5051 1FB4                                              u3611 72A4  
                                            u4171 3062                                              u4091 2E32  
                                            u4251 37AE                                              u4411 3C54  
                                            u4331 3ABE                                              u5211 021A  
                                            u6100 78E2                                              u3700 693C  
                                            u6020 24A8                                              u5140 20CE  
                                            u5060 1FD0                                              u3620 72C0  
                                            u4180 307C                                              u4260 37D6  
                                            u4340 3AFC                                              u4420 345E  
                                            u4500 3150                                              u5300 042E  
                                            u5220 02A8                                              u6101 78DC  
                                            u3701 6936                                              u6021 24A2  
                                            u5141 20C8                                              u5061 1FCA  
                                            u3621 72BA                                              u4181 3076  
                                            u4261 37D0                                              u4245 375A  
                                            u4341 3AF6                                              u4421 3458  
                                            u4501 314A                                              u5301 0428  
                                            u5221 02A0                                              u6110 7908  
                                            u6030 24C2                                              u5150 20E6  
                                            u5070 1FEA                                              u3630 72EE  
                                            u3710 3E4C                                              u4190 3092  
                                            u4270 37F4                                              u4350 3B1E  
                                            u4430 3480                                              u4510 3182  
                                            u5310 04B8                                              u5230 02AC  
                                            u6111 7902                                              u6031 24BC  
                                            u5151 20E0                                              u5071 1FE4  
                                            u3631 72E8                                              u3711 3E46  
                                            u4191 308C                                              u4271 37EE  
                                            u4351 3B18                                              u4431 347A  
                                            u4511 317C                                              u5311 04B2  
                                            u6120 795E                                              u6200 7A7E  
                                            u6040 24E0                                              u5160 210A  
                                            u5080 2008                                              u3640 7328  
                                            u3720 3E84                                              u3800 7DB6  
                                            u4280 3812                                              u4360 3B52  
                                            u4440 35D6                                              u4600 3368  
                                            u4520 31EC                                              u5400 0898  
                                            u5320 04F2                                              u5240 02C6  
                                            u7000 18B8                                              u6121 7958  
                                            u6201 7A78                                              u6041 24DA  
                                            u5161 2104                                              u5081 2002  
                                            u3641 7322                                              u3721 3E7E  
                                            u3801 7DB0                                              u4281 380C  
                                            u4361 3B4C                                              u4441 35D0  
                                            u4601 3362                                              u4521 31E6  
                                            u5401 0892                                              u5321 04EC  
                                            u5241 02C0                                              u7001 18B0  
                                            u6210 38B2                                              u6050 252E  
                                            u6130 675E                                              u5090 2022  
                                            u3650 69B4                                              u3810 7DE8  
                                            u4290 3826                                              u4370 3B94  
                                            u4450 35F8                                              u4610 338A  
                                            u4530 323E                                              u5410 0914  
                                            u5330 05B0                                              u5250 02F0  
                                            u5170 00A4                                              u7010 18BC  
                                            u6211 38AC                                              u6051 2528  
                                            u6131 6758                                              u5091 201C  
                                            u3651 69AE                                              u3731 3EB2  
                                            u3811 7DE2                                              u4291 3820  
                                            u4371 3B8E                                              u4451 35F2  
                                            u4611 3384                                              u4531 3236  
                                            u5411 090E                                              u5331 05AA  
                                            u5251 02EA                                              u5171 009E  
                                            u6300 3A78                                              u6220 38C4  
                                            u6140 798C                                              u6060 2562  
                                            u4700 3DD8                                              u3660 69F2  
                                            u3740 3ED8                                              u3820 7E1C  
                                            u4380 3BC6                                              u3900 74E4  
                                            u4460 3616                                              u4620 33A8  
                                            u4540 3242                                              u5500 0C72  
                                            u5420 099E                                              u5340 05EA  
                                            u5260 0332                                              u5180 0196  
                                            u7100 1A80                                              u7020 18DA  
                                            u6301 3A72                                              u6221 38BE  
                                            u6141 7986                                              u6061 255C  
                                            u3741 3ED2                                              u3821 7E16  
                                            u3901 74DE                                              u4461 3610  
                                            u4621 33A2                                              u5421 0998  
                                            u5341 05E4                                              u5261 032C  
                                            u5181 0190                                              u7101 1A7A  
                                            u7021 18D4                                              u6230 3928  
                                            u6150 79C8                                              u6070 25A2  
                                            u4710 3DF2                                              u3670 6A04  
                                            u3910 738A                                              u3750 3F0A  
                                            u3830 7E6C                                              u4390 3C04  
                                            u4470 3634                                              u4630 33C6  
                                            u4550 325C                                              u5510 0CA0  
                                            u5430 0A2A                                              u5350 0664  
                                            u5270 03E6                                              u5190 01AA  
                                            u6310 6C14                                              u7110 1AAA  
                                            u7030 1906                                              u6231 3922  
                                            u6071 259C                                              u4711 3DEC  
                                            u3671 69FE                                              u3911 7384  
                                            u3751 3F04                                              u3831 7E66  
                                            u4391 3BFE                                              u4471 362E  
                                            u4631 33C0                                              u4551 3256  
                                            u5511 0C9A                                              u5431 0A24  
                                            u5351 065E                                              u5271 03DE  
                                            u5191 01A4                                              u6311 6C0E  
                                            u7111 1AA4                                              u7031 1900  
                                            u6080 787A                                              u6240 3988  
                                            u6160 79FA                                              u4800 1BC8  
                                            u6400 2DA8                                              u6320 2A40  
                                            u4720 3E08                                              u3920 73B2  
                                            u3760 3F50                                              u4480 3648  
                                            u3680 6880                                              u4640 33DA  
                                            u4560 3294                                              u5600 118E  
                                            u5520 0D52                                              u5440 0A88  
                                            u5360 068E                                              u5280 03EA  
                                            u7120 1AE0                                              u7040 1946  
                                            u6081 7874                                              u6241 3982  
                                            u6161 79F4                                              u4801 1BC2  
                                            u6401 2DA2                                              u4721 3E02  
                                            u3921 73AC                                              u3761 3F4A  
                                            u3841 7746                                              u4481 3642  
                                            u3681 6878                                              u4641 33D4  
                                            u4561 328C                                              u5601 1188  
                                            u5521 0D4C                                              u5361 0688  
                                            u7121 1ADA                                              u7041 1940  
                                            u6090 78BE                                              u6250 39DA  
                                            u6170 7A12                                              u4810 1C14  
                                            u6330 2A6E                                              u3930 7414  
                                            u3770 3FA2                                              u4730 7664  
                                            u3850 776C                                              u3690 6884  
                                            u4650 33EE                                              u4570 3298  
                                            u4490 312E                                              u5610 1232  
                                            u5530 0DE4                                              u5450 0AD0  
                                            u5370 0716                                              u5290 0404  
                                            u6410 6C38                                              u7130 1AFE  
                                            u7050 197C                                              u6091 78B8  
                                            u6251 39D4                                              u6171 7A0C  
                                            u6155 79BC                                              u4811 1C0E  
                                            u6331 2A68                                              u3667 69E8  
                                            u3931 740E                                              u3771 3F9C  
                                            u4387 3BBC                                              u4731 765E  
                                            u3851 7766                                              u4651 33E8  
                                            u4491 3128                                              u5611 122C  
                                            u5531 0DDE                                              u5507 0C62  
                                            u5451 0ACA                                              u5371 0710  
                                            u5291 03FE                                              u6411 6C32  
                                            u7131 1AF8                                              u7051 1976  
                                            u6500 75F0                                              u6260 3A00  
                                            u6180 7A42                                              u4900 1D78  
                                            u4820 1C30                                              u6340 2AA8  
                                            u5700 267A                                              u6420 6FC8  
                                            u4660 3CAA                                              u3940 7428  
                                            u3780 7D3A                                              u4740 76A4  
                                            u3860 779E                                              u4580 32B2  
                                            u5620 125C                                              u5540 0EA0  
                                            u5460 0B38                                              u5380 0750  
                                            u7140 1B28                                              u7060 19EE  
                                            u6501 75EA                                              u6261 39FA  
                                            u6181 7A3C                                              u4901 1D72  
                                            u4821 1C2A                                              u6325 2A34  
                                            u5701 2674                                              u6421 6FC2  
                                            u4661 3CA4                                              u3941 7422  
                                            u3781 7D34                                              u4741 769E  
                                            u3861 7798                                              u4581 32AC  
                                            u5621 1256                                              u5541 0E9A  
                                            u5381 074A                                              u7141 1B22  
                                            u7061 19E8                                              u6510 761E  
                                            u6270 3A14                                              u6190 7A6A  
                                            u4910 1D9E                                              u4830 1C48  
                                            u6350 2AC8                                              u5710 268E  
                                            u6430 6FE6                                              u4670 3CE6  
                                            u3790 7D72                                              u4750 76C6  
                                            u3870 77E4                                              u3950 683E  
                                            u4590 3320                                              u5630 12FE  
                                            u5550 0F1C                                              u5470 0B66  
                                            u5390 07DC                                              u7150 1B3C  
                                            u7070 1A1C                                              u6511 7618  
                                            u6271 3A0E                                              u6191 7A64  
                                            u4911 1D98                                              u4831 1C42  
                                            u6351 2AC2                                              u5711 2688  
                                            u6431 6FE0                                              u4671 3CE0  
                                            u3791 7D6C                                              u4751 76C0  
                                            u3871 77DE                                              u3951 6836  
                                            u5631 12F8                                              u5551 0F16  
                                            u5471 0B60                                              u5447 0A7C  
                                            u5391 07D6                                              u7151 1B36  
                                            u7071 1A16                                              u6280 3A26  
                                            u4920 1DC6                                              u4840 1C5C  
                                            u6360 2B10                                              u5800 2888  
                                            u5720 26D8                                              u6600 6DFA  
                                            u6440 716A                                              u4680 3D08  
                                            u4760 76DC                                              u3880 747E  
                                            u3960 6842                                              u5640 1338  
                                            u5560 0FA6                                              u5480 0BCC  
                                            u6520 7ABE                                              u7160 1B70  
                                            u7080 1A46                                              u6281 3A20  
                                            u4921 1DC0                                              u4841 1C56  
                                            u6361 2B0A                                              u6345 2A9C  
                                            u5801 2882                                              u5721 26D2  
                                            u6441 7164                                              u4681 3D02  
                                            u4761 76D6                                              u3881 7478  
                                            u5641 1332                                              u5561 0FA0  
                                            u6521 7AB8                                              u7161 1B6A  
                                            u7081 1A40                                              u7217 17C0  
                                            u6290 3A66                                              u4930 1DD8  
                                            u4850 1CA2                                              u6370 2C1C  
                                            u5810 289E                                              u5730 2720  
                                            u6610 6E0C                                              u6450 71A0  
                                            u4690 3DD4                                              u4770 770E  
                                            u3890 74B0                                              u3970 68C6  
                                            u5650 13DC                                              u5570 1032  
                                            u5490 0C0A                                              u6530 7AF4  
                                            u7090 1A6A                                              u6291 3A60  
                                            u4931 1DD2                                              u4851 1C9C  
                                            u6371 2C16                                              u5811 2898  
                                            u5731 271A                                              u7307 6610  
                                            u6611 6E06                                              u6451 719A  
                                            u4691 3DCC                                              u4771 7708  
                                            u3891 74AA                                              u3971 68BE  
                                            u4595 330C                                              u5651 13D6  
                                            u5571 102C                                              u5491 0C04  
                                            u5467 0B28                                              u6531 7AEE  
                                            u7091 1A64                                              u7227 1910  
                                            u6460 755C                                              u5900 215C  
                                            u4940 1DEC                                              u4860 1CB4  
                                            u4780 1B9C                                              u6380 2CC0  
                                            u5820 28D0                                              u5740 279E  
                                            u5660 25E8                                              u3980 68CA  
                                            u5580 106C                                              u6540 7B5E  
                                            u6620 7BFE                                              u6700 6E5A  
                                            u6461 7556                                              u5901 2156  
                                            u4941 1DE6                                              u4861 1CAE  
                                            u4781 1B96                                              u6381 2CBA  
                                            u5821 28CA                                              u5741 2798  
                                            u5661 25E2                                              u5581 1066  
                                            u6541 7B58                                              u6621 7BF8  
                                            u6701 6E54                                              u7237 19F8  
                                            u6470 757C                                              u5910 2170  
                                            u4950 1E24                                              u4870 1D2A  
                                            u4790 1BB4                                              u6390 2D88  
                                            u5830 28EE                                              u5750 27C4  
                                            u5670 2600                                              u3990 6B76  
                                            u5590 1154                                              u6550 7B72  
                                            u6630 7C2A                                              u6710 6E84  
                                            u6471 7576                                              u5911 216A  
                                            u4951 1E1E                                              u4871 1D24  
                                            u4791 1BAE                                              u5831 28E8  
                                            u5751 27BE                                              u5671 25FA  
                                            u7247 662E                                              u6607 6DF0  
                                            u3991 6B6E                                              u5591 114E  
                                            u5487 0BBC                                              u6551 7B6C  
                                            u6631 7C24                                              u6711 6E7E  
                                            u6480 75A8                                              u6720 723C  
                                            u5920 21BA                                              u4960 1E36  
                                            u4880 1D46                                              u5840 2908  
                                            u5760 27F6                                              u5680 2614  
                                            u6560 7BA4                                              u6640 7C56  
                                            u6800 15EE                                              u6481 75A2  
                                            u6721 7236                                              u5921 21B4  
                                            u4961 1E30                                              u4881 1D3E  
                                            u5841 2902                                              u5761 27F0  
                                            u5681 260E                                              u7257 663A  
                                            u6561 7B9E                                              u6641 7C50  
                                            u6801 15E8                                              u6490 75CE  
                                            u6730 7272                                              u5930 21D2  
                                            u4970 1E5C                                              u4890 1D4A  
                                            u5850 2926                                              u5770 2822  
                                            u5690 2662                                              u6570 6538  
                                            u6650 7C82                                              u6810 160E  
                                            u6491 75C8                                              u6731 726C  
                                            u5931 21CC                                              u4971 1E56  
                                            u6395 2D7C                                              u5851 2920  
                                            u5771 281C                                              u5691 265C  
                                            u7267 6D24                                              u6571 6532  
                                            u6651 7C7C                                              u6811 1608  
                                            u5940 21E6                                              u4980 1E9C  
                                            u5860 2974                                              u5780 283C  
                                            u6580 6F0E                                              u6660 7CAE  
                                            u6740 65EE                                              u6900 1758  
                                            u6820 162E                                              u5941 21E0  
                                            u4981 1E96                                              u5861 296E  
                                            u5781 2836                                              u6581 6F08  
                                            u7277 6D3E                                              u6661 7CA8  
                                            u6741 65E8                                              u6901 1752  
                                            u6821 1628                                              u5950 2226  
                                            u4990 1EE6                                              u5870 29AA  
                                            u5790 2860                                              u6590 6DC4  
                                            u6750 6CC2                                              u6670 7CDA  
                                            u6910 178C                                              u6830 164E  
                                            u5951 2220                                              u4991 1EE0  
                                            u5871 29A4                                              u5791 285A  
                                            u7287 6D56                                              u6751 6CBC  
                                            u6671 7CD4                                              u6911 1786  
                                            u6831 1648                                              u5960 223A  
                                            u5880 29DE                                              u6680 7D06  
                                            u6920 17B6                                              u6840 1678  
                                            u5961 2234                                              u5881 29D8  
                                            u7297 6604                                              u6681 7D00  
                                            u6921 17B0                                              u6841 1672  
                                            u5970 23BA                                              u5890 2144  
                                            u6690 6E32                                              u6930 17E4  
                                            u6850 169A                                              u6770 1518  
                                            u5891 213E                                              u6691 6E2C  
                                            u6931 17DE                                              u6851 1694  
                                            u6771 1512                                              u5980 241A  
                                            u6940 180E                                              u6860 16C8  
                                            u6780 152C                                              u5981 2414  
                                            u6597 6DBA                                              u6941 1808  
                                            u6861 16C2                                              u6781 1526  
                                            u5990 2442                                              u6950 1832  
                                            u6870 16F2                                              u6790 15D6  
                                            u5991 243C                                              u5975 23AE  
                                            u6951 182C                                              u6871 16EC  
                                            u6791 15D0                                              u6960 1848  
                                            u6880 1706                                              u6961 1842  
                                            u6881 1700                                              u6970 1872  
                                            u6890 172E                                              u6971 186C  
                                            u6891 1728                                              u6980 1898  
                                            u6981 1890                                              u6990 189C  
                                            _TMR2 000FCC                                              abs@a 0013  
                                            _dbuf 0098                                              _atoi 3C68  
                                            _ctoa 6A76                                              _main 1462  
                                            _dtoa 2DE6                                              _fosc 7EC5  
                                            _prec 0088                                              _otoa 3676  
                                            _nout 0084                                              pad@i 0018  
                                            pad@p 0015                                              fsr1h 000FE2  
                                            fsr2h 000FDA                                              indf1 000FE7  
                                            indf2 000FDF                                              fsr1l 000FE1  
                                            pad@w 001A                                              fsr2l 000FD9  
                                            _tosc 00E9                                              _stoa 3A94  
                                            btemp 007F                                              _utoa 344A  
                                            _xtoa 311A                       update_pwm_duty_ccp1@time_up 00D4  
                                     main@rx_char 01A2                                              prodh 000FF4  
                                   _trash_counter 01A5                                              prodl 000FF3  
                                            start 0076                                   ___fldiv@new_exp 0057  
state_translator_fpga_to_micro@state_machine_code 0005                                      ___param_bank 000000  
                                           ??_abs 0015                              _update_pwm_duty_ccp1 6F4C  
                                           ??_pad 0017                                     ___fltol@sign1 00D2  
                                 __end_of___aodiv 3FEA                                             ?_atoi 0008  
                                           ?_ctoa 001C                                   __end_of___fladd 2126  
                                           ?_main 0001                                             ?_dtoa 001C  
                                 __end_of___aomod 7EB4                                   __end_of___fldiv 29FC  
                                 __end_of___awdiv 7636                                   __end_of___flneg 6786  
                                           STR_10 7FFC                                             STR_11 7FCF  
                                           STR_13 7FCF                                             STR_22 7FD0  
                                           STR_31 7FEA                                             STR_15 7FD3  
                                           STR_40 7FDB                                             STR_17 7FD3  
                                           STR_33 7FED                                             STR_26 7FD4  
                                           STR_50 7FF3                                             STR_35 7FED  
                                           STR_60 7FD8                                             STR_45 7FDC  
                                           STR_29 7FEA                                             STR_53 7FD7  
                                           STR_70 7FDF                                             STR_38 7FDB  
                                           STR_55 7FD7                                             STR_63 7FF0  
                                           STR_80 7FF6                                             STR_48 7FF3  
                                           STR_65 7FF0                                             STR_75 7FE0  
                                           STR_83 7FE3                                             STR_68 7FDF  
                                           STR_85 7FE3                                             STR_94 7FE4  
                                           STR_78 7FF6                                             STR_87 7FCB  
                                 __end_of___flmul 25CA                                             STR_89 7FCB  
                                           STR_98 7FCC                                             ?_otoa 001C  
                                 __end_of___flsub 691E                                   __end_of___fltol 7AA8  
                                           ?_stoa 000A                                             ?_utoa 001C  
                                           _T0CON 000FD5                                   __end_of___lodiv 7848  
                                 ___awdiv@divisor 0019                                             ?_xtoa 001C  
                                           _T2CON 000FCA                                   __end_of___lomod 7546  
                                           i2l186 006E                       __end_of_update_current_coil 71B8  
                                 ___awdiv@counter 001B                                             _RCREG 000FAE  
                                    vfpfcnvrt@fmt 0045                                             _TMR0H 000FD7  
                                    vfpfcnvrt@llu 0060                                             _TMR0L 000FD6  
                                           _SPBRG 000FAF                                             _PORTA 000F80  
                                           _PORTB 000F81                                             _PORTC 000F82  
                                           _PORTD 000F83                                             _TRISA 000F92  
                                           _TRISB 000F93                                             _TXREG 000FAD  
                                ?_get_temperature 00D4                                   __end_of_lcd_dat 6648  
                                 __end_of_lcd_cmd 661E                                   __end_of_lcd_str 6E12  
                                           _f_osc 7EC1                                             _flags 008A  
                                           _errno 008C                                             _fputc 7294  
                                 __end_of_isalpha 68D4                                             _fputs 696A  
                                 __end_of_isdigit 680A                                             _t_osc 7EBD  
                                           atoi@n 0015                                             pad@fp 0011  
                                           atoi@s 0008                                             _width 0086  
                                           ctoa@c 001E                                             _state 01CD  
                                           _putch 64F0                                             _toint 7EB5  
                                           ctoa@w 001F                                             dtoa@d 001E  
                                           dtoa@i 003E                                             dtoa@n 0036  
                                           dtoa@p 0030                                             dtoa@s 0034  
                                           dtoa@w 0032                                   __end_of_islower 688E  
                                 __end_of_isspace 6A76                                   __end_of_isupper 684C  
                                           tablat 000FF5                                             otoa@d 001E  
                                           otoa@i 003C                                             otoa@n 0034  
                                           otoa@p 002E                                             otoa@t 0030  
                                           otoa@w 0032                                             plusw1 000FE3  
                                           plusw2 000FDB                                             stoa@i 0016  
                                           stoa@l 001E                                             stoa@p 001C  
                                           stoa@s 000C                                             stoa@w 0018  
                                           ttemp5 0080                                             ttemp6 0083  
                                           ttemp7 0087                                             utoa@d 001E  
                                           utoa@i 003A                                             utoa@n 0032  
                                           utoa@p 002E                                             utoa@w 0030  
                                           status 000FD8                                             wtemp8 0080  
                                           xtoa@c 0041                                             xtoa@d 001E  
                                           xtoa@i 003F                                             xtoa@n 0037  
                                           xtoa@p 0033                                             xtoa@w 0035  
                                           xtoa@x 0026                                   __end_of_strncmp 773E  
                                 __end_of_toupper 6BB2                                  ___lodiv@dividend 0001  
                              _end_effector_homed 01A7                                   ??_get_reg_value 0001  
                                    _toupper$1894 000D                              get_reg_value@rx_char 0001  
                                 __initialization 6ADC                                      __end_of_atoi 3E36  
                                    __end_of_ctoa 6ADC                                      __end_of_main 1B7E  
                                    __end_of_dtoa 311A                                      __end_of_fosc 7EC9  
                                    __end_of_otoa 389C                                      __end_of_stoa 3C68  
                                    __end_of_utoa 3676                             ?_update_pwm_duty_ccp1 00D4  
                                    __end_of_xtoa 344A                                            ??_atoi 000A  
                                          ??_ctoa 001F                                            ??_main 00DD  
                                          ??_dtoa 0026                                            ??_otoa 0026  
                                          ??_stoa 000E                                            ??_utoa 0026  
                                          ??_xtoa 0027                                     __activetblptr 000002  
                                 ??_rx_char_usart 0001                                  ___lodiv@quotient 0011  
                                          _ADCON0 000FC2                                            _ADCON1 000FC1  
                                _change_direction 66D2                                            ?_fputc 0001  
                                          STR_101 7FF9                                            ?_fputs 000A  
                                          STR_103 7FF9                                            STR_105 7FE7  
                                          _ADRESH 000FC4                                            STR_107 7FE7  
                                          _ADRESL 000FC3                      __end_of_turn_on_current_coil 6744  
                                          _CCPR1L 000FBE                                  ___awdiv@dividend 0017  
                                          ?_putch 0001                                            i2l5700 0066  
                                          i2l5690 0030                                            i2l5692 0032  
                                          i2l5694 003C                                            i2l5686 000C  
                                          i2l5696 0050                                            i2l5688 001E  
                                          i2l5698 0062                                     main@greet_str 0100  
                                   vfpfcnvrt@done 004F                                  __end_of___xxtofl 3A94  
                                   ?_init_timer_0 0001                                     ?_init_timer_2 0001  
          __end_of_state_translator_fpga_to_micro 7D24           __size_of_state_translator_fpga_to_micro 0142  
                  _state_translator_fpga_to_micro 7BE2                                     ?_init_stepper 0001  
                                    vfprintf@cfmt 006E                                  __end_of_lcd_init 6D8A  
                                          ___flge 7848                                 _init_timer_2$2131 00D4  
                                       ??___aodiv 0011                                         ??___fladd 0067  
                                       ??___aomod 0011                                            ___wmul 6648  
                                       ??___fldiv 004E                                         ??___awdiv 001B  
                                       ??___flneg 0005                                         ??___flmul 0035  
                                       ??___flsub 0077                                         ??___fltol 00CE  
                                       ??___lodiv 0011                                         ??___lomod 0011  
                                          _lcd_wr 6502                                            clear_0 6B22  
                                          clear_1 6B2E                                  ___awdiv@quotient 001D  
                                          pad@buf 0013                                            ctoa@fp 001C  
                                          _roundf 29FC                                         ??_lcd_dat 0002  
                                       ??_lcd_cmd 0002                                            dtoa@fp 001C  
                                          _strlen 69BA                                         ??_lcd_str 0005  
                                          fputc@c 0001                                            fputs@c 000E  
                                          fputs@i 000F                                            fputs@s 000A  
                                       ??_isalpha 0003                                         ??_isdigit 0003  
                                       ??_islower 0003                                      __mediumconst 7EB4  
                                       ??_isspace 0003                                            otoa@fp 001C  
                                          tblptrh 000FF7                                         ??_isupper 0003  
                                          tblptrl 000FF6                                            tblptru 000FF8  
                         reach_goal@goal_to_reach 0009                                            stoa@cp 001A  
                                          stoa@fp 000A                                            putch@c 0001  
                                __end_of_vfprintf 6C22                                            utoa@fp 001C  
                                __end_of_snprintf 66D2                                            xtoa@fp 001C  
                                       ??_strncmp 0007                                         ??_toupper 0009  
                                      ___flge@ff1 0001                                        ___flge@ff2 0005  
                update_current_coil@stepper_motor 0001                                      ___xxtofl@arg 0029  
                                    ___xxtofl@exp 0028                                      ___xxtofl@val 001F  
                                      __accesstop 0080                           __end_of__initialization 6B34  
                                      ___flneg@f1 0001                                 serial_tx_char@val 0001  
                                  ??_init_timer_0 0001                                    ??_init_timer_2 007F  
                                   ___rparam_used 000001                                        ___fltol@f1 00CA  
                                  ??_init_stepper 000B                                    _tmr2_prescaler 00ED  
                                 _init_interrupts 64F6                            ??_update_pwm_duty_ccp1 00D8  
                                  __pcstackCOMRAM 0001                                      __pidataBANK0 3FEA  
                                    __pidataBANK1 653E                                     __end_of_f_osc 7EC5  
                                   __end_of_fputc 7376                                     __end_of_fputs 69BA  
                                   __end_of_t_osc 7EC1                                     __end_of_putch 64F6  
                                   __end_of_toint 7EB9                                   _temperature_int 0090  
                         __size_of_serial_tx_char 0020               state_translator_fpga_to_micro@state 0003  
                                         ??_fputc 0005                                           ??_fputs 000E  
                                         ??_putch 0001                                  _mix_current_step 0096  
                                      __pbssBANK0 0080                                        __pbssBANK1 01A3  
                              __size_of_init_ccp1 0024                                           ?___flge 0001  
                                         ?___wmul 0001               check_temperature@temp_to_be_checked 00D6  
                                         ?_lcd_wr 0001                                           _CCP1CON 000FBD  
                            _turn_on_current_coil 6708                             __end_of_wait_for_zero 65F4  
                         _hex_end_effector_values 01DF                                     _read_new_char 01AE  
                                         ?_roundf 0077                                           ?_strlen 0001  
                              _temperature_scaled 008E                                         ?___xxtofl 001F  
                         reach_goal@stepper_motor 0007                                __size_of_vfpfcnvrt 13E8  
               turn_on_current_coil@stepper_motor 0001                                  _desired_baudrate 7EB9  
                                       ?_lcd_init 0001                                  ___lomod@dividend 0001  
                         __end_of_init_interrupts 6502                                 _check_temperature 71B8  
                   change_direction@stepper_motor 0001                                           __Hparam 0000  
                              ?_check_temperature 00D6                                           __Lparam 0000  
                              __size_of_vsnprintf 013A                                        _init_PORTS 6672  
                                      _init_USART 6786                                   __size_of___flge 0128  
                                         ___aodiv 3E36                                           ___fladd 1B7E  
                                         ___aomod 7D24                                           ___fldiv 25CA  
                                         ___awdiv 7546                                           ___flneg 6744  
                                         ___flmul 2126                          __end_of_change_direction 6708  
                                         ___flsub 68D4                                           ___fltol 7970  
                                 __size_of___wmul 002A                                           ___lodiv 773E  
                           ?_turn_on_current_coil 0001                                           ___lomod 745C  
                                       ?_vfprintf 0068                                         ?_snprintf 00C2  
                                 __size_of_lcd_wr 000C                               ??_check_temperature 007F  
                                         __pcinit 6ADC              init_stepper@hex_coil_register_values 0009  
                                         __ramtop 0600                                        _reach_goal 6C94  
                                         __ptext0 1462                                           __ptext1 65CC  
                                         __ptext2 6C22                                           __ptext3 6E12  
                                         __ptext4 7BE2                                           __ptext5 669E  
                                         __ptext6 7AA8                                           __ptext7 6BB2  
                                         __ptext8 007A                                           __ptext9 311A  
                                         _lcd_dat 661E                                           _lcd_cmd 65F4  
                                         _lcd_str 6D8A                                         _T0CONbits 000FD5  
                                 __size_of_roundf 03EA                                   __size_of_strlen 005C  
                               __end_of_init_ccp1 65A4                                         _T2CONbits 000FCA  
                                    __size_of_abs 004C                                      __size_of_pad 00E6  
                                         _isalpha 688E                                           _isdigit 67C8  
                                      ??___xxtofl 0023                              __end_of_init_timer_0 6580  
                            __end_of_init_timer_2 70DE                                           _islower 684C  
                                         _isspace 6A16                                           _isupper 680A  
                            __end_of_init_stepper 6F4C                                           atoi@neg 000E  
                                   _joint_stepper 01BF                                        ??_lcd_init 0003  
                                         _strncmp 7636                                           _toupper 6B42  
                    __size_of_update_current_coil 00DA                              end_of_initialization 6B34  
                       __end_of_check_temperature 7294                          __size_of_get_temperature 0072  
                                         fputc@fp 0003                                     __Lmediumconst 7EB4  
                                         fputs@fp 000C               state_translator_micro_to_fpga@state 0001  
                               __end_of_vfpfcnvrt 1462                             __end_of_get_reg_value 651E  
                                       _RCSTAbits 000FAB                                           postdec1 000FE5  
                                         postdec2 000FDD                                           postinc0 000FEE  
                                         postinc1 000FE6                                           postinc2 000FDE  
                                         roundf@e 00BC                                           roundf@u 00C2  
                                         roundf@x 0077                                           roundf@y 00C6  
                                      ??_vfprintf 006E                                        ??_snprintf 007C  
                                         strlen@a 0003                                           strlen@s 0001  
                                      _timer_done 01AD                                         _PORTEbits 000F84  
                ??_state_translator_fpga_to_micro 0005                   ?_state_translator_fpga_to_micro 0003  
                                     ___fladd@grs 006E                                    _serial_tx_char 651E  
                                   ___xxtofl@sign 0027                             __end_of_rx_char_usart 0076  
                                       _TRISCbits 000F94                                        lcd_dat@val 0002  
                               __end_of_vsnprintf 7BE2                                        lcd_cmd@val 0002  
                                     ___fldiv@grs 0059                                       ___fldiv@rem 0052  
                                      _pwm_period 00E5                                        _state_msgs 01CF  
                                   _mix_direction 0094                              _end_effector_stepper 01B1  
                                     ___flmul@grs 003A                                  ?_init_interrupts 0001  
                                     _CCP1CONbits 000FBD                                         _TXSTAbits 000FAC  
                                main@current_temp 01A0                                        lcd_str@str 0003  
     __end_of_configure_analog_digital_conversion 65CC      __size_of_configure_analog_digital_conversion 0028  
           ??_configure_analog_digital_conversion 0001              ?_configure_analog_digital_conversion 0001  
             _configure_analog_digital_conversion 65A4                                       ?_init_PORTS 0001  
                                     ?_init_USART 0001                            ??_turn_on_current_coil 0003  
                                  __end_of___flge 7970            __end_of_state_translator_micro_to_fpga 6E9C  
         __size_of_state_translator_micro_to_fpga 008A                    _state_translator_micro_to_fpga 6E12  
                                     vfpfcnvrt@ap 0047                                       vfpfcnvrt@cp 004D  
                                     vfpfcnvrt@fp 0043                                       vfpfcnvrt@ll 0055  
                                  __end_of___wmul 6672                                       vfpfcnvrt@vp 005D  
                                  __end_of_lcd_wr 650E                                       ?_reach_goal 0007  
state_translator_micro_to_fpga@state_machine_code 0005                            __end_of_serial_tx_char 653E  
                                  __end_of_roundf 2DE6                                    __end_of_strlen 6A16  
                             start_initialization 6ADC                                   ___lodiv@divisor 0009  
                                 ___lodiv@counter 0019                                       __end_of_abs 696A  
                                     __end_of_pad 745C                                  _hex_joint_values 01E7  
                      __size_of_check_temperature 00DC                          init_stepper@current_coil 0003  
                       init_stepper@stepper_motor 0001                                 ??_get_temperature 007F  
                                     vfprintf@fmt 006A                                          ??___flge 0009  
                        __end_of_desired_baudrate 7EBD                                          ??___wmul 0005  
                   __size_of_update_pwm_duty_ccp1 00C4                                          ??_lcd_wr 0001  
                                     __pdataBANK0 00DE                                       __pdataBANK1 01CF  
                           check_temperature@grad 00D8                             __size_of_init_timer_0 0022  
                           __size_of_init_timer_2 00CE                             __size_of_init_stepper 00B0  
                                        ??_roundf 007B                                          ??_strlen 0003  
                                 ?_serial_tx_char 0001                                         ___fladd@a 0063  
                                       ___fladd@b 005F                                      vsnprintf@cnt 00BA  
                                    vsnprintf@fmt 0074                                         ___fldiv@a 004A  
                                       ___fldiv@b 0046                                         ___flmul@a 0031  
                                       ___flmul@b 002D                                         ___flsub@a 0073  
                                       ___flsub@b 006F                                     __pcstackBANK0 00B8  
                                   __pcstackBANK1 0100                                  ___aodiv@dividend 0001  
                                     snprintf@fmt 00C6                                 __size_of___xxtofl 01F8  
                             __size_of_init_PORTS 002C                               __size_of_init_USART 0042  
                               __size_of_lcd_init 007E                               __size_of_reach_goal 0078  
                                       _atoi$1806 0010                                         _atoi$1807 0014  
                                       _atoi$1808 0012                                      _init_timer_0 655E  
                                    _init_timer_2 7010                                         _dtoa$1632 002E  
                                    _init_stepper 6E9C                             init_stepper@direction 0007  
                                       __pintcode 0008                                     __pmediumconst 7EB4  
                                        ?___aodiv 0001                                          ?___fladd 005F  
                                        ?___aomod 0001                                          ?___fldiv 0046  
                                        ?___awdiv 0017                                  ___aodiv@quotient 0013  
                                        ?___flneg 0001                                          ?___flmul 002D  
                                        ?___flsub 006F                                          ?___fltol 00CA  
                                        ?___lodiv 0001                                          ?___lomod 0001  
                             _update_current_coil 70DE                                 ?_change_direction 0001  
                              ??_change_direction 0003                                          ?_lcd_dat 0001  
                                        ?_lcd_cmd 0001                                 __size_of_vfprintf 0070  
                                        ?_lcd_str 0003                                 __size_of_snprintf 0034  
                                 ___lomod@divisor 0009                      update_pwm_duty_ccp1@new_duty 00DA  
                                 ___lomod@counter 0011                                          ?_isalpha 0001  
                                        ?_isdigit 0001                                  _mix_step_counter 0092  
                                        ?_islower 0001                                          ?_isspace 0001  
                                        ?_isupper 0001                                         _init_ccp1 6580  
                                  __size_of_fputc 00E2                                    __size_of_fputs 0050  
                            ?_update_current_coil 0001                                          ?_strncmp 0001  
                                        ?_toupper 0007                                    __size_of_putch 0006  
                          __size_of_wait_for_zero 0028                                    ___wmul@product 0005  
                                        _LATAbits 000F89                                          _PIE1bits 000F9D  
                                   _move_to_trash 01A3                                          _PIR1bits 000F9E  
                                        i2u720_40 0060                                          i2u720_41 005A  
                                        i2u717_40 001C                                          i2u717_41 0016  
                                        i2u718_40 002E                                          i2u718_41 0028  
                                        i2u719_40 004E                                          i2u719_41 0048  
                                       _vfpfcnvrt 007A                                         _xtoa$1668 002F  
                                       _xtoa$1669 0031                                        _ADCON0bits 000FC2  
                               ___wmul@multiplier 0001                                         lcd_wr@val 0001  
                                    _isspace$1834 0007                                        ?_init_ccp1 0001  
                           ??_update_current_coil 0003                                        vfpfcnvrt@c 005F  
                                       copy_data0 6AF0                                         copy_data1 6B10  
                                       _vsnprintf 7AA8                                        roundf@F525 0080  
                                        __Hrparam 0000                                      ??_init_PORTS 0001  
                                    ??_init_USART 007F                                        vfprintf@ap 006C  
                                        __Lrparam 0000                                        vfprintf@fp 0068  
                                __size_of___aodiv 01B4                                  __size_of___fladd 05A8  
                                __size_of___aomod 0190                                  __size_of___fldiv 0432  
                                __size_of___awdiv 00F0                                  __size_of___flneg 0042  
                                     vsnprintf@ap 0076                                  __size_of___flmul 04A4  
                                __size_of___flsub 004A                                  __size_of___fltol 0138  
                                __size_of___lodiv 010A                                  __size_of___lomod 00EA  
                                      ?_vfpfcnvrt 0043                                     _wait_for_zero 65CC  
                                    ??_reach_goal 000B                                        snprintf@ap 00CC  
                                 ___aodiv@divisor 0009                                   ___aodiv@counter 0011  
                                __size_of_lcd_dat 002A                                  __size_of_lcd_cmd 002A  
                                __size_of_lcd_str 0088                                          ___xxtofl 389C  
                                __size_of_isalpha 0046                                  __size_of_isdigit 0042  
                                __size_of_islower 0042                                  __size_of_isspace 0060  
                                        __ptext10 6B42                                          __ptext11 684C  
                                        __ptext20 2DE6                                          __ptext12 680A  
                                        __ptext21 7D24                                          __ptext13 688E  
                                        __ptext30 6A16                                          __ptext22 3E36  
                                        __ptext14 344A                                          __ptext31 67C8  
                                        __ptext23 6A76                                          __ptext15 745C  
                                        __ptext40 65F4                                          __ptext32 6648  
                                        __ptext24 7376                                          __ptext16 773E  
                                        __ptext41 6502                                          __ptext33 651E  
                                        __ptext25 69BA                                          __ptext17 7636  
                                        __ptext50 29FC                                          __ptext42 7010  
                                        __ptext34 6C94                                          __ptext26 696A  
                                        __ptext18 3A94                                          __ptext51 68D4  
                                        __ptext43 655E                                          __ptext35 70DE  
                                        __ptext27 7294                                          __ptext19 3676  
                                        __ptext60 691E                                          __ptext52 1B7E  
                                        __ptext44 6E9C                                          __ptext36 6708  
                                        __ptext28 64F0                                          __ptext61 389C  
                                        __ptext53 6744                                          __ptext45 64F6  
                                        __ptext37 6D8A                                          __ptext29 3C68  
                                        __ptext62 7848                                          __ptext54 2126  
                                        __ptext46 6580                                          __ptext38 661E  
                                        __ptext63 7546                                          __ptext55 7970  
                                        __ptext47 6F4C                                          __ptext39 6D0C  
                                        __ptext64 66D2                                          __ptext56 6672  
                                        __ptext48 25CA                                          __ptext57 650E  
                                        __ptext49 6786                                          __ptext58 65A4  
                                        __ptext59 71B8                                  __size_of_isupper 0042  
                ??_state_translator_micro_to_fpga 0003                   ?_state_translator_micro_to_fpga 0001  
                          __size_of_get_reg_value 0010                                __end_of_init_PORTS 669E  
                                        _lcd_init 6D0C                                __end_of_init_USART 67C8  
                                 _get_temperature 6C22                                  __size_of_strncmp 0108  
                                __size_of_toupper 0070                                        ?_vsnprintf 0070  
                                   __size_of_atoi 01CE                                     __size_of_ctoa 0066  
                                   __size_of_main 071C                                     __size_of_dtoa 0334  
                                   __size_of_otoa 0226                                     __size_of_stoa 01D4  
                                   __size_of_utoa 022C                                       _joint_homed 01A9  
                                   __size_of_xtoa 0330                                __end_of_reach_goal 6D0C  
                                       stoa@F1152 00DE                            __size_of_rx_char_usart 006E  
                        __size_of_init_interrupts 000C                                          int$flags 007F  
                                ??_serial_tx_char 0001                                          _vfprintf 6BB2  
                   __size_of_turn_on_current_coil 003C                                    ?_wait_for_zero 0001  
                                        _snprintf 669E                                          lcd_str@i 0007  
                                     _mix_counter 01AB                                  ___aomod@dividend 0001  
                                  _vfpfcnvrt$1683 0051                                    _vfpfcnvrt$1684 0053  
                                      _INTCONbits 000FF2                                          isalpha@c 0001  
                                        isdigit@c 0001                                       ??_init_ccp1 007F  
                    __end_of_update_pwm_duty_ccp1 7010                                        vsnprintf@f 00BC  
                                   _idle_msg_sent 01AF                                        vsnprintf@n 0072  
                                      vsnprintf@s 0070                                         snprintf@n 00C4  
                                       snprintf@s 00C2                                          intlevel2 3FFE  
                                        islower@c 0001                                          isspace@c 0001  
                                        isupper@c 0001                                         strncmp@_l 0001  
                                       strncmp@_r 0003                                     _get_reg_value 650E  
                                   init_stepper@i 000F                                   ___aomod@divisor 0009  
                                     ??_vfpfcnvrt 0049                                          stoa@nuls 000F  
                                 ___aomod@counter 0011                                    _vsnprintf$1550 00B8  
                         __end_of_get_temperature 6C94                                          strncmp@l 0008  
                                        strncmp@n 0005                                          strncmp@r 000A  
                                        toupper@c 0007                          init_stepper@step_counter 0005  
                                   _rx_char_usart 0008                         __size_of_change_direction 0036  
                                   ___fladd@signs 006B                     update_pwm_duty_ccp1@lsbs_duty 00DC  
                                    ___aodiv@sign 0012                                       ??_vsnprintf 0078  
                                    ___fladd@aexp 006C                                      ___fladd@bexp 006D  
                                    ___aomod@sign 0012                                       _roundf$2132 00BE  
                                     _roundf$2133 00B8  
