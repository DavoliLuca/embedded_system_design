

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Jun 15 00:14:34 2023

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=3
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    82                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    83                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    84                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    85                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    86                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    87  0000                     
    88                           ; Version 2.20
    89                           ; Generated 12/02/2020 GMT
    90                           ; 
    91                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    92                           ; All rights reserved.
    93                           ; 
    94                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    95                           ; 
    96                           ; Redistribution and use in source and binary forms, with or without modification, are
    97                           ; permitted provided that the following conditions are met:
    98                           ; 
    99                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   100                           ;        conditions and the following disclaimer.
   101                           ; 
   102                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   103                           ;        of conditions and the following disclaimer in the documentation and/or other
   104                           ;        materials provided with the distribution.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC18F452 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122  0000                     
   123                           	psect	idataBANK0
   124  0065AF                     __pidataBANK0:
   125                           	callstack 0
   126                           
   127                           ;initializer for stoa@F1152
   128  0065AF  28                 	db	40
   129  0065B0  6E                 	db	110
   130  0065B1  75                 	db	117
   131  0065B2  6C                 	db	108
   132  0065B3  6C                 	db	108
   133  0065B4  29                 	db	41
   134  0065B5  00                 	db	0
   135                           
   136                           ;initializer for _pwm_period
   137                           ;timer.c: 5: static double const f_osc = 1000000;;timer.c: 6: static double const t_osc 
      +                          = 1/f_osc;;timer.c: 7: static double pwm_period = 20e-3;
   138  0065B6  D70A               	dw	55050
   139  0065B8  3CA3               	dw	15523
   140                           
   141                           ;initializer for _tosc
   142  0065BA  37BD               	dw	14269
   143  0065BC  3486               	dw	13446
   144                           
   145                           ;initializer for _tmr2_prescaler
   146  0065BE  0000               	dw	0
   147  0065C0  4180               	dw	16768
   148                           
   149                           	psect	idataBANK1
   150  0065E2                     __pidataBANK1:
   151                           	callstack 0
   152                           
   153                           ;initializer for _state_msgs
   154  0065E2  3B                 	db	low STR_1
   155  0065E3  7F                 	db	high STR_1
   156  0065E4  C9                 	db	low STR_2
   157  0065E5  7E                 	db	high STR_2
   158  0065E6  BB                 	db	low STR_3
   159  0065E7  7F                 	db	high STR_3
   160  0065E8  6C                 	db	low STR_4
   161  0065E9  7F                 	db	high STR_4
   162  0065EA  A9                 	db	low STR_5
   163  0065EB  7F                 	db	high STR_5
   164  0065EC  C4                 	db	low STR_6
   165  0065ED  7F                 	db	high STR_6
   166  0065EE  B2                 	db	low STR_7
   167  0065EF  7F                 	db	high STR_7
   168  0065F0  09                 	db	low STR_8
   169  0065F1  7F                 	db	high STR_8
   170                           
   171                           ;initializer for _hex_end_effector_values
   172  0065F2  0010               	dw	16
   173  0065F4  0020               	dw	32
   174  0065F6  0040               	dw	64
   175  0065F8  0080               	dw	128
   176                           
   177                           ;initializer for _hex_joint_values
   178  0065FA  0001               	dw	1
   179  0065FC  0002               	dw	2
   180  0065FE  0004               	dw	4
   181  006600  0008               	dw	8
   182                           
   183                           	psect	mediumconst
   184  007EB4                     __pmediumconst:
   185                           	callstack 0
   186  007EB4  00                 	db	0
   187  007EB5  0000               	dw	0
   188  007EB7  4B00               	dw	19200
   189  007EB9                     __end_of_toint:
   190                           	callstack 0
   191  007EB9  0000               	dw	0
   192  007EBB  4616               	dw	17942
   193  007EBD                     __end_of_desired_baudrate:
   194                           	callstack 0
   195  007EBD  37BD               	dw	14269
   196  007EBF  3586               	dw	13702
   197  007EC1                     __end_of_t_osc:
   198                           	callstack 0
   199  007EC1  2400               	dw	9216
   200  007EC3  4974               	dw	18804
   201  007EC5                     __end_of_f_osc:
   202                           	callstack 0
   203  007EC5  2400               	dw	9216
   204  007EC7  4A74               	dw	19060
   205  007EC9                     __end_of_fosc:
   206                           	callstack 0
   207  0000                     _ADCON1	set	4033
   208  0000                     _ADRESL	set	4035
   209  0000                     _ADRESH	set	4036
   210  0000                     _ADCON0bits	set	4034
   211  0000                     _ADCON0	set	4034
   212  0000                     _CCPR1L	set	4030
   213  0000                     _CCP1CONbits	set	4029
   214  0000                     _CCP1CON	set	4029
   215  0000                     _PR2	set	4043
   216  0000                     _T2CONbits	set	4042
   217  0000                     _TMR2	set	4044
   218  0000                     _T2CON	set	4042
   219  0000                     _TMR0H	set	4055
   220  0000                     _TMR0L	set	4054
   221  0000                     _PORTEbits	set	3972
   222  0000                     _PORTD	set	3971
   223  0000                     _TRISCbits	set	3988
   224  0000                     _PORTC	set	3970
   225  0000                     _LATC	set	3979
   226  0000                     _TRISB	set	3987
   227  0000                     _PORTB	set	3969
   228  0000                     _LATB	set	3978
   229  0000                     _TRISA	set	3986
   230  0000                     _PORTA	set	3968
   231  0000                     _LATA	set	3977
   232  0000                     _T0CON	set	4053
   233  0000                     _PIR1bits	set	3998
   234  0000                     _PIE1bits	set	3997
   235  0000                     _T0CONbits	set	4053
   236  0000                     _LATAbits	set	3977
   237  0000                     _INTCONbits	set	4082
   238  0000                     _RCREG	set	4014
   239  0000                     _TXREG	set	4013
   240  0000                     _RCSTAbits	set	4011
   241  0000                     _TXSTAbits	set	4012
   242  0000                     _SPBRG	set	4015
   243  007EC9                     STR_2:
   244  007EC9  49                 	db	73	;'I'
   245  007ECA  4E                 	db	78	;'N'
   246  007ECB  49                 	db	73	;'I'
   247  007ECC  54                 	db	84	;'T'
   248  007ECD  5F                 	db	95	;'_'
   249  007ECE  50                 	db	80	;'P'
   250  007ECF  4F                 	db	79	;'O'
   251  007ED0  53                 	db	83	;'S'
   252  007ED1  3A                 	db	58	;':'
   253  007ED2  20                 	db	32
   254  007ED3  74                 	db	116	;'t'
   255  007ED4  68                 	db	104	;'h'
   256  007ED5  65                 	db	101	;'e'
   257  007ED6  20                 	db	32
   258  007ED7  76                 	db	118	;'v'
   259  007ED8  69                 	db	105	;'i'
   260  007ED9  61                 	db	97	;'a'
   261  007EDA  6C                 	db	108	;'l'
   262  007EDB  20                 	db	32
   263  007EDC  69                 	db	105	;'i'
   264  007EDD  73                 	db	115	;'s'
   265  007EDE  20                 	db	32
   266  007EDF  61                 	db	97	;'a'
   267  007EE0  74                 	db	116	;'t'
   268  007EE1  20                 	db	32
   269  007EE2  74                 	db	116	;'t'
   270  007EE3  68                 	db	104	;'h'
   271  007EE4  65                 	db	101	;'e'
   272  007EE5  20                 	db	32
   273  007EE6  69                 	db	105	;'i'
   274  007EE7  6E                 	db	110	;'n'
   275  007EE8  69                 	db	105	;'i'
   276  007EE9  74                 	db	116	;'t'
   277  007EEA  20                 	db	32
   278  007EEB  70                 	db	112	;'p'
   279  007EEC  6F                 	db	111	;'o'
   280  007EED  73                 	db	115	;'s'
   281  007EEE  69                 	db	105	;'i'
   282  007EEF  74                 	db	116	;'t'
   283  007EF0  69                 	db	105	;'i'
   284  007EF1  6F                 	db	111	;'o'
   285  007EF2  6E                 	db	110	;'n'
   286  007EF3  2C                 	db	44
   287  007EF4  20                 	db	32
   288  007EF5  70                 	db	112	;'p'
   289  007EF6  72                 	db	114	;'r'
   290  007EF7  6F                 	db	111	;'o'
   291  007EF8  63                 	db	99	;'c'
   292  007EF9  65                 	db	101	;'e'
   293  007EFA  73                 	db	115	;'s'
   294  007EFB  73                 	db	115	;'s'
   295  007EFC  20                 	db	32
   296  007EFD  69                 	db	105	;'i'
   297  007EFE  73                 	db	115	;'s'
   298  007EFF  20                 	db	32
   299  007F00  73                 	db	115	;'s'
   300  007F01  74                 	db	116	;'t'
   301  007F02  61                 	db	97	;'a'
   302  007F03  72                 	db	114	;'r'
   303  007F04  74                 	db	116	;'t'
   304  007F05  69                 	db	105	;'i'
   305  007F06  6E                 	db	110	;'n'
   306  007F07  67                 	db	103	;'g'
   307  007F08  00                 	db	0
   308  007F09                     STR_8:
   309  007F09  50                 	db	80	;'P'
   310  007F0A  49                 	db	73	;'I'
   311  007F0B  43                 	db	67	;'C'
   312  007F0C  4B                 	db	75	;'K'
   313  007F0D  5F                 	db	95	;'_'
   314  007F0E  55                 	db	85	;'U'
   315  007F0F  50                 	db	80	;'P'
   316  007F10  3A                 	db	58	;':'
   317  007F11  20                 	db	32
   318  007F12  74                 	db	116	;'t'
   319  007F13  68                 	db	104	;'h'
   320  007F14  65                 	db	101	;'e'
   321  007F15  20                 	db	32
   322  007F16  76                 	db	118	;'v'
   323  007F17  69                 	db	105	;'i'
   324  007F18  61                 	db	97	;'a'
   325  007F19  6C                 	db	108	;'l'
   326  007F1A  20                 	db	32
   327  007F1B  68                 	db	104	;'h'
   328  007F1C  61                 	db	97	;'a'
   329  007F1D  73                 	db	115	;'s'
   330  007F1E  20                 	db	32
   331  007F1F  72                 	db	114	;'r'
   332  007F20  65                 	db	101	;'e'
   333  007F21  61                 	db	97	;'a'
   334  007F22  63                 	db	99	;'c'
   335  007F23  68                 	db	104	;'h'
   336  007F24  65                 	db	101	;'e'
   337  007F25  64                 	db	100	;'d'
   338  007F26  20                 	db	32
   339  007F27  74                 	db	116	;'t'
   340  007F28  68                 	db	104	;'h'
   341  007F29  65                 	db	101	;'e'
   342  007F2A  20                 	db	32
   343  007F2B  70                 	db	112	;'p'
   344  007F2C  69                 	db	105	;'i'
   345  007F2D  63                 	db	99	;'c'
   346  007F2E  6B                 	db	107	;'k'
   347  007F2F  20                 	db	32
   348  007F30  75                 	db	117	;'u'
   349  007F31  70                 	db	112	;'p'
   350  007F32  20                 	db	32
   351  007F33  73                 	db	115	;'s'
   352  007F34  74                 	db	116	;'t'
   353  007F35  61                 	db	97	;'a'
   354  007F36  74                 	db	116	;'t'
   355  007F37  69                 	db	105	;'i'
   356  007F38  6F                 	db	111	;'o'
   357  007F39  6E                 	db	110	;'n'
   358  007F3A  00                 	db	0
   359  007F3B                     STR_1:
   360  007F3B  49                 	db	73	;'I'
   361  007F3C  44                 	db	68	;'D'
   362  007F3D  4C                 	db	76	;'L'
   363  007F3E  45                 	db	69	;'E'
   364  007F3F  3A                 	db	58	;':'
   365  007F40  20                 	db	32
   366  007F41  77                 	db	119	;'w'
   367  007F42  61                 	db	97	;'a'
   368  007F43  69                 	db	105	;'i'
   369  007F44  74                 	db	116	;'t'
   370  007F45  69                 	db	105	;'i'
   371  007F46  6E                 	db	110	;'n'
   372  007F47  67                 	db	103	;'g'
   373  007F48  20                 	db	32
   374  007F49  66                 	db	102	;'f'
   375  007F4A  6F                 	db	111	;'o'
   376  007F4B  72                 	db	114	;'r'
   377  007F4C  20                 	db	32
   378  007F4D  20                 	db	32
   379  007F4E  76                 	db	118	;'v'
   380  007F4F  69                 	db	105	;'i'
   381  007F50  61                 	db	97	;'a'
   382  007F51  6C                 	db	108	;'l'
   383  007F52  20                 	db	32
   384  007F53  74                 	db	116	;'t'
   385  007F54  6F                 	db	111	;'o'
   386  007F55  20                 	db	32
   387  007F56  62                 	db	98	;'b'
   388  007F57  65                 	db	101	;'e'
   389  007F58  20                 	db	32
   390  007F59  70                 	db	112	;'p'
   391  007F5A  6C                 	db	108	;'l'
   392  007F5B  61                 	db	97	;'a'
   393  007F5C  63                 	db	99	;'c'
   394  007F5D  65                 	db	101	;'e'
   395  007F5E  64                 	db	100	;'d'
   396  007F5F  20                 	db	32
   397  007F60  69                 	db	105	;'i'
   398  007F61  6E                 	db	110	;'n'
   399  007F62  20                 	db	32
   400  007F63  69                 	db	105	;'i'
   401  007F64  6E                 	db	110	;'n'
   402  007F65  69                 	db	105	;'i'
   403  007F66  74                 	db	116	;'t'
   404  007F67  20                 	db	32
   405  007F68  70                 	db	112	;'p'
   406  007F69  6F                 	db	111	;'o'
   407  007F6A  73                 	db	115	;'s'
   408  007F6B  00                 	db	0
   409  007F6C                     STR_4:
   410  007F6C  4F                 	db	79	;'O'
   411  007F6D  56                 	db	86	;'V'
   412  007F6E  45                 	db	69	;'E'
   413  007F6F  4E                 	db	78	;'N'
   414  007F70  3A                 	db	58	;':'
   415  007F71  20                 	db	32
   416  007F72  72                 	db	114	;'r'
   417  007F73  65                 	db	101	;'e'
   418  007F74  61                 	db	97	;'a'
   419  007F75  63                 	db	99	;'c'
   420  007F76  68                 	db	104	;'h'
   421  007F77  69                 	db	105	;'i'
   422  007F78  6E                 	db	110	;'n'
   423  007F79  67                 	db	103	;'g'
   424  007F7A  20                 	db	32
   425  007F7B  74                 	db	116	;'t'
   426  007F7C  68                 	db	104	;'h'
   427  007F7D  65                 	db	101	;'e'
   428  007F7E  20                 	db	32
   429  007F7F  63                 	db	99	;'c'
   430  007F80  6F                 	db	111	;'o'
   431  007F81  72                 	db	114	;'r'
   432  007F82  72                 	db	114	;'r'
   433  007F83  65                 	db	101	;'e'
   434  007F84  63                 	db	99	;'c'
   435  007F85  74                 	db	116	;'t'
   436  007F86  20                 	db	32
   437  007F87  74                 	db	116	;'t'
   438  007F88  65                 	db	101	;'e'
   439  007F89  6D                 	db	109	;'m'
   440  007F8A  70                 	db	112	;'p'
   441  007F8B  65                 	db	101	;'e'
   442  007F8C  72                 	db	114	;'r'
   443  007F8D  61                 	db	97	;'a'
   444  007F8E  74                 	db	116	;'t'
   445  007F8F  75                 	db	117	;'u'
   446  007F90  72                 	db	114	;'r'
   447  007F91  65                 	db	101	;'e'
   448  007F92  00                 	db	0
   449  007F93                     STR_9:
   450  007F93  44                 	db	68	;'D'
   451  007F94  65                 	db	101	;'e'
   452  007F95  76                 	db	118	;'v'
   453  007F96  69                 	db	105	;'i'
   454  007F97  63                 	db	99	;'c'
   455  007F98  65                 	db	101	;'e'
   456  007F99  20                 	db	32
   457  007F9A  68                 	db	104	;'h'
   458  007F9B  61                 	db	97	;'a'
   459  007F9C  73                 	db	115	;'s'
   460  007F9D  20                 	db	32
   461  007F9E  62                 	db	98	;'b'
   462  007F9F  65                 	db	101	;'e'
   463  007FA0  65                 	db	101	;'e'
   464  007FA1  6E                 	db	110	;'n'
   465  007FA2  20                 	db	32
   466  007FA3  72                 	db	114	;'r'
   467  007FA4  65                 	db	101	;'e'
   468  007FA5  73                 	db	115	;'s'
   469  007FA6  65                 	db	101	;'e'
   470  007FA7  74                 	db	116	;'t'
   471  007FA8  00                 	db	0
   472  007FA9                     STR_5:
   473  007FA9  47                 	db	71	;'G'
   474  007FAA  52                 	db	82	;'R'
   475  007FAB  41                 	db	65	;'A'
   476  007FAC  53                 	db	83	;'S'
   477  007FAD  50                 	db	80	;'P'
   478  007FAE  49                 	db	73	;'I'
   479  007FAF  4E                 	db	78	;'N'
   480  007FB0  47                 	db	71	;'G'
   481  007FB1  00                 	db	0
   482  007FB2                     STR_7:
   483  007FB2  44                 	db	68	;'D'
   484  007FB3  49                 	db	73	;'I'
   485  007FB4  4C                 	db	76	;'L'
   486  007FB5  55                 	db	85	;'U'
   487  007FB6  54                 	db	84	;'T'
   488  007FB7  49                 	db	73	;'I'
   489  007FB8  4E                 	db	78	;'N'
   490  007FB9  47                 	db	71	;'G'
   491  007FBA  00                 	db	0
   492  007FBB                     STR_3:
   493  007FBB  4D                 	db	77	;'M'
   494  007FBC  4F                 	db	79	;'O'
   495  007FBD  56                 	db	86	;'V'
   496  007FBE  45                 	db	69	;'E'
   497  007FBF  4D                 	db	77	;'M'
   498  007FC0  45                 	db	69	;'E'
   499  007FC1  4E                 	db	78	;'N'
   500  007FC2  54                 	db	84	;'T'
   501  007FC3  00                 	db	0
   502  007FC4                     STR_6:
   503  007FC4  4D                 	db	77	;'M'
   504  007FC5  49                 	db	73	;'I'
   505  007FC6  58                 	db	88	;'X'
   506  007FC7  49                 	db	73	;'I'
   507  007FC8  4E                 	db	78	;'N'
   508  007FC9  47                 	db	71	;'G'
   509  007FCA  00                 	db	0
   510  007FCB                     STR_87:
   511  007FCB  68                 	db	104	;'h'
   512  007FCC  68                 	db	104	;'h'
   513  007FCD  58                 	db	88	;'X'
   514  007FCE  00                 	db	0
   515  007FCF                     STR_11:
   516  007FCF  68                 	db	104	;'h'
   517  007FD0  68                 	db	104	;'h'
   518  007FD1  64                 	db	100	;'d'
   519  007FD2  00                 	db	0
   520  007FD3                     STR_15:
   521  007FD3  68                 	db	104	;'h'
   522  007FD4  68                 	db	104	;'h'
   523  007FD5  69                 	db	105	;'i'
   524  007FD6  00                 	db	0
   525  007FD7                     STR_53:
   526  007FD7  68                 	db	104	;'h'
   527  007FD8  68                 	db	104	;'h'
   528  007FD9  6E                 	db	110	;'n'
   529  007FDA  00                 	db	0
   530  007FDB                     STR_38:
   531  007FDB  68                 	db	104	;'h'
   532  007FDC  68                 	db	104	;'h'
   533  007FDD  6F                 	db	111	;'o'
   534  007FDE  00                 	db	0
   535  007FDF                     STR_68:
   536  007FDF  68                 	db	104	;'h'
   537  007FE0  68                 	db	104	;'h'
   538  007FE1  75                 	db	117	;'u'
   539  007FE2  00                 	db	0
   540  007FE3                     STR_83:
   541  007FE3  68                 	db	104	;'h'
   542  007FE4  68                 	db	104	;'h'
   543  007FE5  78                 	db	120	;'x'
   544  007FE6  00                 	db	0
   545  007FE7                     STR_105:
   546  007FE7  7A                 	db	122	;'z'
   547  007FE8  58                 	db	88	;'X'
   548  007FE9  00                 	db	0
   549  007FEA                     STR_29:
   550  007FEA  7A                 	db	122	;'z'
   551  007FEB  64                 	db	100	;'d'
   552  007FEC  00                 	db	0
   553  007FED                     STR_33:
   554  007FED  7A                 	db	122	;'z'
   555  007FEE  69                 	db	105	;'i'
   556  007FEF  00                 	db	0
   557  007FF0                     STR_63:
   558  007FF0  7A                 	db	122	;'z'
   559  007FF1  6E                 	db	110	;'n'
   560  007FF2  00                 	db	0
   561  007FF3                     STR_48:
   562  007FF3  7A                 	db	122	;'z'
   563  007FF4  6F                 	db	111	;'o'
   564  007FF5  00                 	db	0
   565  007FF6                     STR_78:
   566  007FF6  7A                 	db	122	;'z'
   567  007FF7  75                 	db	117	;'u'
   568  007FF8  00                 	db	0
   569  007FF9                     STR_101:
   570  007FF9  7A                 	db	122	;'z'
   571  007FFA  78                 	db	120	;'x'
   572  007FFB  00                 	db	0
   573  007FFC                     STR_10:
   574  007FFC  25                 	db	37
   575  007FFD  73                 	db	115	;'s'
   576  007FFE  00                 	db	0
   577  007FFF  00                 	db	0	; dummy byte at the end
   578  0000                     
   579                           ; #config settings
   580                           
   581                           	psect	cinit
   582  006B80                     __pcinit:
   583                           	callstack 0
   584  006B80                     start_initialization:
   585                           	callstack 0
   586  006B80                     __initialization:
   587                           	callstack 0
   588                           
   589                           ; Initialize objects allocated to BANK1 (32 bytes)
   590                           ; load TBLPTR registers with __pidataBANK1
   591  006B80  0EE2               	movlw	low __pidataBANK1
   592  006B82  6EF6               	movwf	tblptrl,c
   593  006B84  0E65               	movlw	high __pidataBANK1
   594  006B86  6EF7               	movwf	tblptrh,c
   595  006B88  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   596  006B8A  6EF8               	movwf	tblptru,c
   597  006B8C  EE01  F0CF         	lfsr	0,__pdataBANK1
   598  006B90  EE10 F020          	lfsr	1,32
   599  006B94                     copy_data0:
   600  006B94  0009               	tblrd		*+
   601  006B96  CFF5 FFEE          	movff	tablat,postinc0
   602  006B9A  50E5               	movf	postdec1,w,c
   603  006B9C  50E1               	movf	fsr1l,w,c
   604  006B9E  E1FA               	bnz	copy_data0
   605                           
   606                           ; Initialize objects allocated to BANK0 (19 bytes)
   607                           ; load TBLPTR registers with __pidataBANK0
   608  006BA0  0EAF               	movlw	low __pidataBANK0
   609  006BA2  6EF6               	movwf	tblptrl,c
   610  006BA4  0E65               	movlw	high __pidataBANK0
   611  006BA6  6EF7               	movwf	tblptrh,c
   612  006BA8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   613  006BAA  6EF8               	movwf	tblptru,c
   614  006BAC  EE00  F0DE         	lfsr	0,__pdataBANK0
   615  006BB0  EE10 F013          	lfsr	1,19
   616  006BB4                     copy_data1:
   617  006BB4  0009               	tblrd		*+
   618  006BB6  CFF5 FFEE          	movff	tablat,postinc0
   619  006BBA  50E5               	movf	postdec1,w,c
   620  006BBC  50E1               	movf	fsr1l,w,c
   621  006BBE  E1FA               	bnz	copy_data1
   622                           
   623                           ; Clear objects allocated to BANK1 (44 bytes)
   624  006BC0  EE01  F0A3         	lfsr	0,__pbssBANK1
   625  006BC4  0E2C               	movlw	44
   626  006BC6                     clear_0:
   627  006BC6  6AEE               	clrf	postinc0,c
   628  006BC8  06E8               	decf	wreg,f,c
   629  006BCA  E1FD               	bnz	clear_0
   630                           
   631                           ; Clear objects allocated to BANK0 (56 bytes)
   632  006BCC  EE00  F080         	lfsr	0,__pbssBANK0
   633  006BD0  0E38               	movlw	56
   634  006BD2                     clear_1:
   635  006BD2  6AEE               	clrf	postinc0,c
   636  006BD4  06E8               	decf	wreg,f,c
   637  006BD6  E1FD               	bnz	clear_1
   638  006BD8                     end_of_initialization:
   639                           	callstack 0
   640  006BD8                     __end_of__initialization:
   641                           	callstack 0
   642  006BD8  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   643  006BDA  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   644  006BDC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   645  006BDE  6EF8               	movwf	tblptru,c
   646  006BE0  0100               	movlb	0
   647  006BE2  EF31  F00A         	goto	_main	;jump to C main() function
   648                           
   649                           	psect	bssBANK0
   650  000080                     __pbssBANK0:
   651                           	callstack 0
   652  000080                     roundf@F525:
   653                           	callstack 0
   654  000080                     	ds	4
   655  000084                     _nout:
   656                           	callstack 0
   657  000084                     	ds	2
   658  000086                     _width:
   659                           	callstack 0
   660  000086                     	ds	2
   661  000088                     _prec:
   662                           	callstack 0
   663  000088                     	ds	2
   664  00008A                     _flags:
   665                           	callstack 0
   666  00008A                     	ds	2
   667  00008C                     _errno:
   668                           	callstack 0
   669  00008C                     	ds	2
   670  00008E                     _temperature_scaled:
   671                           	callstack 0
   672  00008E                     	ds	2
   673  000090                     _temperature_int:
   674                           	callstack 0
   675  000090                     	ds	2
   676  000092                     _mix_step_counter:
   677                           	callstack 0
   678  000092                     	ds	2
   679  000094                     _mix_direction:
   680                           	callstack 0
   681  000094                     	ds	2
   682  000096                     _mix_current_step:
   683                           	callstack 0
   684  000096                     	ds	2
   685  000098                     _dbuf:
   686                           	callstack 0
   687  000098                     	ds	32
   688                           
   689                           	psect	dataBANK0
   690  0000DE                     __pdataBANK0:
   691                           	callstack 0
   692  0000DE                     stoa@F1152:
   693                           	callstack 0
   694  0000DE                     	ds	7
   695  0000E5                     	ds	4
   696  0000E9                     	ds	4
   697  0000ED                     _tmr2_prescaler:
   698                           	callstack 0
   699  0000ED                     	ds	4
   700                           
   701                           	psect	bssBANK1
   702  0001A3                     __pbssBANK1:
   703                           	callstack 0
   704  0001A3                     _move_to_trash:
   705                           	callstack 0
   706  0001A3                     	ds	2
   707  0001A5                     _trash_counter:
   708                           	callstack 0
   709  0001A5                     	ds	2
   710  0001A7                     _end_effector_homed:
   711                           	callstack 0
   712  0001A7                     	ds	2
   713  0001A9                     _joint_homed:
   714                           	callstack 0
   715  0001A9                     	ds	2
   716  0001AB                     _mix_counter:
   717                           	callstack 0
   718  0001AB                     	ds	2
   719  0001AD                     _timer_done:
   720                           	callstack 0
   721  0001AD                     	ds	1
   722  0001AE                     _read_new_char:
   723                           	callstack 0
   724  0001AE                     	ds	1
   725  0001AF                     _idle_msg_sent:
   726                           	callstack 0
   727  0001AF                     	ds	1
   728  0001B0                     _state_changed:
   729                           	callstack 0
   730  0001B0                     	ds	1
   731  0001B1                     _end_effector_stepper:
   732                           	callstack 0
   733  0001B1                     	ds	14
   734  0001BF                     _joint_stepper:
   735                           	callstack 0
   736  0001BF                     	ds	14
   737  0001CD                     _state:
   738                           	callstack 0
   739  0001CD                     	ds	2
   740                           
   741                           	psect	dataBANK1
   742  0001CF                     __pdataBANK1:
   743                           	callstack 0
   744  0001CF                     _state_msgs:
   745                           	callstack 0
   746  0001CF                     	ds	16
   747  0001DF                     _hex_end_effector_values:
   748                           	callstack 0
   749  0001DF                     	ds	8
   750  0001E7                     _hex_joint_values:
   751                           	callstack 0
   752  0001E7                     	ds	8
   753                           
   754                           	psect	cstackBANK1
   755  000100                     __pcstackBANK1:
   756                           	callstack 0
   757  000100                     main@greet_str:
   758                           	callstack 0
   759                           
   760                           ; 160 bytes @ 0x0
   761  000100                     	ds	160
   762  0001A0                     main@current_temp:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0xA0
   766  0001A0                     	ds	2
   767  0001A2                     main@rx_char:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0xA2
   771  0001A2                     	ds	1
   772                           
   773                           	psect	cstackBANK0
   774  0000B8                     __pcstackBANK0:
   775                           	callstack 0
   776  0000B8                     _vsnprintf$1550:
   777                           	callstack 0
   778  0000B8                     _roundf$2133:
   779                           	callstack 0
   780                           
   781                           ; 4 bytes @ 0x0
   782  0000B8                     	ds	2
   783  0000BA                     vsnprintf@cnt:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x2
   787  0000BA                     	ds	2
   788  0000BC                     roundf@e:
   789                           	callstack 0
   790  0000BC                     vsnprintf@f:
   791                           	callstack 0
   792                           
   793                           ; 6 bytes @ 0x4
   794  0000BC                     	ds	2
   795  0000BE                     _roundf$2132:
   796                           	callstack 0
   797                           
   798                           ; 4 bytes @ 0x6
   799  0000BE                     	ds	4
   800  0000C2                     ?_snprintf:
   801                           	callstack 0
   802  0000C2                     snprintf@s:
   803                           	callstack 0
   804  0000C2                     roundf@u:
   805                           	callstack 0
   806                           
   807                           ; 4 bytes @ 0xA
   808  0000C2                     	ds	2
   809  0000C4                     snprintf@n:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0xC
   813  0000C4                     	ds	2
   814  0000C6                     snprintf@fmt:
   815                           	callstack 0
   816  0000C6                     roundf@y:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0xE
   820  0000C6                     	ds	4
   821  0000CA                     ?___fltol:
   822                           	callstack 0
   823  0000CA                     ___fltol@f1:
   824                           	callstack 0
   825                           
   826                           ; 4 bytes @ 0x12
   827  0000CA                     	ds	2
   828  0000CC                     snprintf@ap:
   829                           	callstack 0
   830                           
   831                           ; 2 bytes @ 0x14
   832  0000CC                     	ds	2
   833  0000CE                     ??___fltol:
   834                           
   835                           ; 1 bytes @ 0x16
   836  0000CE                     	ds	4
   837  0000D2                     ___fltol@sign1:
   838                           	callstack 0
   839                           
   840                           ; 1 bytes @ 0x1A
   841  0000D2                     	ds	1
   842  0000D3                     ___fltol@exp1:
   843                           	callstack 0
   844                           
   845                           ; 1 bytes @ 0x1B
   846  0000D3                     	ds	1
   847  0000D4                     ?_get_temperature:
   848                           	callstack 0
   849  0000D4                     update_pwm_duty_ccp1@time_up:
   850                           	callstack 0
   851  0000D4                     _init_timer_2$2131:
   852                           	callstack 0
   853                           
   854                           ; 4 bytes @ 0x1C
   855  0000D4                     	ds	2
   856  0000D6                     ?_check_temperature:
   857                           	callstack 0
   858  0000D6                     check_temperature@temp_to_be_checked:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x1E
   862  0000D6                     	ds	2
   863  0000D8                     ??_update_pwm_duty_ccp1:
   864  0000D8                     check_temperature@grad:
   865                           	callstack 0
   866                           
   867                           ; 4 bytes @ 0x20
   868  0000D8                     	ds	2
   869  0000DA                     update_pwm_duty_ccp1@new_duty:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0x22
   873  0000DA                     	ds	2
   874  0000DC                     update_pwm_duty_ccp1@lsbs_duty:
   875                           	callstack 0
   876                           
   877                           ; 1 bytes @ 0x24
   878  0000DC                     	ds	1
   879  0000DD                     ??_main:
   880                           
   881                           ; 1 bytes @ 0x25
   882  0000DD                     	ds	1
   883                           
   884                           	psect	cstackCOMRAM
   885  000001                     __pcstackCOMRAM:
   886                           	callstack 0
   887  000001                     ?_strlen:
   888                           	callstack 0
   889  000001                     ?_isupper:
   890                           	callstack 0
   891  000001                     ?_isalpha:
   892                           	callstack 0
   893  000001                     ?_isdigit:
   894                           	callstack 0
   895  000001                     ?_strncmp:
   896                           	callstack 0
   897  000001                     ?_isspace:
   898                           	callstack 0
   899  000001                     ?_islower:
   900                           	callstack 0
   901  000001                     ?___wmul:
   902                           	callstack 0
   903  000001                     ?___flneg:
   904                           	callstack 0
   905  000001                     ?___aodiv:
   906                           	callstack 0
   907  000001                     ?___aomod:
   908                           	callstack 0
   909  000001                     ?___lodiv:
   910                           	callstack 0
   911  000001                     ?___lomod:
   912                           	callstack 0
   913  000001                     serial_tx_char@val:
   914                           	callstack 0
   915  000001                     get_reg_value@rx_char:
   916                           	callstack 0
   917  000001                     lcd_wr@val:
   918                           	callstack 0
   919  000001                     state_translator_micro_to_fpga@state:
   920                           	callstack 0
   921  000001                     init_stepper@stepper_motor:
   922                           	callstack 0
   923  000001                     turn_on_current_coil@stepper_motor:
   924                           	callstack 0
   925  000001                     update_current_coil@stepper_motor:
   926                           	callstack 0
   927  000001                     change_direction@stepper_motor:
   928                           	callstack 0
   929  000001                     ___wmul@multiplier:
   930                           	callstack 0
   931  000001                     isalpha@c:
   932                           	callstack 0
   933  000001                     isdigit@c:
   934                           	callstack 0
   935  000001                     isspace@c:
   936                           	callstack 0
   937  000001                     isupper@c:
   938                           	callstack 0
   939  000001                     fputc@c:
   940                           	callstack 0
   941  000001                     strlen@s:
   942                           	callstack 0
   943  000001                     strncmp@_l:
   944                           	callstack 0
   945  000001                     islower@c:
   946                           	callstack 0
   947  000001                     ___flge@ff1:
   948                           	callstack 0
   949  000001                     ___flneg@f1:
   950                           	callstack 0
   951  000001                     ___aodiv@dividend:
   952                           	callstack 0
   953  000001                     ___aomod@dividend:
   954                           	callstack 0
   955  000001                     ___lodiv@dividend:
   956                           	callstack 0
   957  000001                     ___lomod@dividend:
   958                           	callstack 0
   959                           
   960                           ; 8 bytes @ 0x0
   961  000001                     	ds	1
   962  000002                     lcd_cmd@val:
   963                           	callstack 0
   964  000002                     lcd_dat@val:
   965                           	callstack 0
   966                           
   967                           ; 1 bytes @ 0x1
   968  000002                     	ds	1
   969  000003                     ??_lcd_init:
   970  000003                     ??_change_direction:
   971  000003                     ??_isupper:
   972  000003                     ??_isalpha:
   973  000003                     ??_isdigit:
   974  000003                     ??_isspace:
   975  000003                     ??_islower:
   976  000003                     ??_turn_on_current_coil:
   977  000003                     ??_update_current_coil:
   978  000003                     lcd_str@str:
   979                           	callstack 0
   980  000003                     state_translator_fpga_to_micro@state:
   981                           	callstack 0
   982  000003                     init_stepper@current_coil:
   983                           	callstack 0
   984  000003                     ___wmul@multiplicand:
   985                           	callstack 0
   986  000003                     fputc@fp:
   987                           	callstack 0
   988  000003                     strlen@a:
   989                           	callstack 0
   990  000003                     strncmp@_r:
   991                           	callstack 0
   992                           
   993                           ; 2 bytes @ 0x2
   994  000003                     	ds	2
   995  000005                     ??_lcd_str:
   996  000005                     ??_fputc:
   997  000005                     state_translator_fpga_to_micro@state_machine_code:
   998                           	callstack 0
   999  000005                     state_translator_micro_to_fpga@state_machine_code:
  1000                           	callstack 0
  1001  000005                     init_stepper@step_counter:
  1002                           	callstack 0
  1003  000005                     ___wmul@product:
  1004                           	callstack 0
  1005  000005                     strncmp@n:
  1006                           	callstack 0
  1007  000005                     ___flge@ff2:
  1008                           	callstack 0
  1009                           
  1010                           ; 4 bytes @ 0x4
  1011  000005                     	ds	2
  1012  000007                     ??_strncmp:
  1013  000007                     ?_reach_goal:
  1014                           	callstack 0
  1015  000007                     ?_toupper:
  1016                           	callstack 0
  1017  000007                     lcd_str@i:
  1018                           	callstack 0
  1019  000007                     _isspace$1834:
  1020                           	callstack 0
  1021  000007                     init_stepper@direction:
  1022                           	callstack 0
  1023  000007                     reach_goal@stepper_motor:
  1024                           	callstack 0
  1025  000007                     toupper@c:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x6
  1029  000007                     	ds	1
  1030  000008                     ?_atoi:
  1031                           	callstack 0
  1032  000008                     atoi@s:
  1033                           	callstack 0
  1034  000008                     strncmp@l:
  1035                           	callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x7
  1038  000008                     	ds	1
  1039  000009                     ??_toupper:
  1040  000009                     ??___flge:
  1041  000009                     init_stepper@hex_coil_register_values:
  1042                           	callstack 0
  1043  000009                     reach_goal@goal_to_reach:
  1044                           	callstack 0
  1045  000009                     ___aodiv@divisor:
  1046                           	callstack 0
  1047  000009                     ___aomod@divisor:
  1048                           	callstack 0
  1049  000009                     ___lodiv@divisor:
  1050                           	callstack 0
  1051  000009                     ___lomod@divisor:
  1052                           	callstack 0
  1053                           
  1054                           ; 8 bytes @ 0x8
  1055  000009                     	ds	1
  1056  00000A                     ??_atoi:
  1057  00000A                     ?_stoa:
  1058                           	callstack 0
  1059  00000A                     stoa@fp:
  1060                           	callstack 0
  1061  00000A                     fputs@s:
  1062                           	callstack 0
  1063  00000A                     strncmp@r:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x9
  1067  00000A                     	ds	1
  1068  00000B                     ??_init_stepper:
  1069  00000B                     ??_reach_goal:
  1070                           
  1071                           ; 1 bytes @ 0xA
  1072  00000B                     	ds	1
  1073  00000C                     stoa@s:
  1074                           	callstack 0
  1075  00000C                     fputs@fp:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0xB
  1079  00000C                     	ds	1
  1080  00000D                     _toupper$1894:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0xC
  1084  00000D                     	ds	1
  1085  00000E                     ??_stoa:
  1086  00000E                     fputs@c:
  1087                           	callstack 0
  1088  00000E                     atoi@neg:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0xD
  1092  00000E                     	ds	1
  1093  00000F                     init_stepper@i:
  1094                           	callstack 0
  1095  00000F                     fputs@i:
  1096                           	callstack 0
  1097  00000F                     stoa@nuls:
  1098                           	callstack 0
  1099                           
  1100                           ; 7 bytes @ 0xE
  1101  00000F                     	ds	1
  1102  000010                     _atoi$1806:
  1103                           	callstack 0
  1104                           
  1105                           ; 2 bytes @ 0xF
  1106  000010                     	ds	1
  1107  000011                     ?_pad:
  1108                           	callstack 0
  1109  000011                     ___aodiv@counter:
  1110                           	callstack 0
  1111  000011                     ___aomod@counter:
  1112                           	callstack 0
  1113  000011                     ___lomod@counter:
  1114                           	callstack 0
  1115  000011                     pad@fp:
  1116                           	callstack 0
  1117  000011                     ___lodiv@quotient:
  1118                           	callstack 0
  1119                           
  1120                           ; 8 bytes @ 0x10
  1121  000011                     	ds	1
  1122  000012                     ___aodiv@sign:
  1123                           	callstack 0
  1124  000012                     ___aomod@sign:
  1125                           	callstack 0
  1126  000012                     _atoi$1808:
  1127                           	callstack 0
  1128                           
  1129                           ; 2 bytes @ 0x11
  1130  000012                     	ds	1
  1131  000013                     ?_abs:
  1132                           	callstack 0
  1133  000013                     abs@a:
  1134                           	callstack 0
  1135  000013                     pad@buf:
  1136                           	callstack 0
  1137  000013                     ___aodiv@quotient:
  1138                           	callstack 0
  1139                           
  1140                           ; 8 bytes @ 0x12
  1141  000013                     	ds	1
  1142  000014                     _atoi$1807:
  1143                           	callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x13
  1146  000014                     	ds	1
  1147  000015                     ??_abs:
  1148  000015                     pad@p:
  1149                           	callstack 0
  1150  000015                     atoi@n:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x14
  1154  000015                     	ds	1
  1155  000016                     stoa@i:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x15
  1159  000016                     	ds	1
  1160  000017                     ??_pad:
  1161  000017                     ?___awdiv:
  1162                           	callstack 0
  1163  000017                     ___awdiv@dividend:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x16
  1167  000017                     	ds	1
  1168  000018                     pad@i:
  1169                           	callstack 0
  1170  000018                     stoa@w:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x17
  1174  000018                     	ds	1
  1175  000019                     ___lodiv@counter:
  1176                           	callstack 0
  1177  000019                     ___awdiv@divisor:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x18
  1181  000019                     	ds	1
  1182  00001A                     pad@w:
  1183                           	callstack 0
  1184  00001A                     stoa@cp:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x19
  1188  00001A                     	ds	1
  1189  00001B                     ___awdiv@counter:
  1190                           	callstack 0
  1191                           
  1192                           ; 1 bytes @ 0x1A
  1193  00001B                     	ds	1
  1194  00001C                     ?_ctoa:
  1195                           	callstack 0
  1196  00001C                     ?_dtoa:
  1197                           	callstack 0
  1198  00001C                     ?_otoa:
  1199                           	callstack 0
  1200  00001C                     ?_utoa:
  1201                           	callstack 0
  1202  00001C                     ?_xtoa:
  1203                           	callstack 0
  1204  00001C                     ___awdiv@sign:
  1205                           	callstack 0
  1206  00001C                     ctoa@fp:
  1207                           	callstack 0
  1208  00001C                     dtoa@fp:
  1209                           	callstack 0
  1210  00001C                     otoa@fp:
  1211                           	callstack 0
  1212  00001C                     stoa@p:
  1213                           	callstack 0
  1214  00001C                     utoa@fp:
  1215                           	callstack 0
  1216  00001C                     xtoa@fp:
  1217                           	callstack 0
  1218                           
  1219                           ; 2 bytes @ 0x1B
  1220  00001C                     	ds	1
  1221  00001D                     ___awdiv@quotient:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x1C
  1225  00001D                     	ds	1
  1226  00001E                     ctoa@c:
  1227                           	callstack 0
  1228  00001E                     stoa@l:
  1229                           	callstack 0
  1230  00001E                     dtoa@d:
  1231                           	callstack 0
  1232  00001E                     otoa@d:
  1233                           	callstack 0
  1234  00001E                     utoa@d:
  1235                           	callstack 0
  1236  00001E                     xtoa@d:
  1237                           	callstack 0
  1238                           
  1239                           ; 8 bytes @ 0x1D
  1240  00001E                     	ds	1
  1241  00001F                     ?___xxtofl:
  1242                           	callstack 0
  1243  00001F                     ctoa@w:
  1244                           	callstack 0
  1245  00001F                     ___xxtofl@val:
  1246                           	callstack 0
  1247                           
  1248                           ; 4 bytes @ 0x1E
  1249  00001F                     	ds	4
  1250  000023                     ??___xxtofl:
  1251                           
  1252                           ; 1 bytes @ 0x22
  1253  000023                     	ds	3
  1254  000026                     ??_dtoa:
  1255  000026                     ??_otoa:
  1256  000026                     ??_utoa:
  1257  000026                     xtoa@x:
  1258                           	callstack 0
  1259                           
  1260                           ; 1 bytes @ 0x25
  1261  000026                     	ds	1
  1262  000027                     ??_xtoa:
  1263  000027                     ___xxtofl@sign:
  1264                           	callstack 0
  1265                           
  1266                           ; 1 bytes @ 0x26
  1267  000027                     	ds	1
  1268  000028                     ___xxtofl@exp:
  1269                           	callstack 0
  1270                           
  1271                           ; 1 bytes @ 0x27
  1272  000028                     	ds	1
  1273  000029                     ___xxtofl@arg:
  1274                           	callstack 0
  1275                           
  1276                           ; 4 bytes @ 0x28
  1277  000029                     	ds	4
  1278  00002D                     ?___flmul:
  1279                           	callstack 0
  1280  00002D                     ___flmul@b:
  1281                           	callstack 0
  1282                           
  1283                           ; 4 bytes @ 0x2C
  1284  00002D                     	ds	1
  1285  00002E                     _dtoa$1632:
  1286                           	callstack 0
  1287  00002E                     otoa@p:
  1288                           	callstack 0
  1289  00002E                     utoa@p:
  1290                           	callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x2D
  1293  00002E                     	ds	1
  1294  00002F                     _xtoa$1668:
  1295                           	callstack 0
  1296                           
  1297                           ; 2 bytes @ 0x2E
  1298  00002F                     	ds	1
  1299  000030                     dtoa@p:
  1300                           	callstack 0
  1301  000030                     otoa@t:
  1302                           	callstack 0
  1303  000030                     utoa@w:
  1304                           	callstack 0
  1305                           
  1306                           ; 2 bytes @ 0x2F
  1307  000030                     	ds	1
  1308  000031                     _xtoa$1669:
  1309                           	callstack 0
  1310  000031                     ___flmul@a:
  1311                           	callstack 0
  1312                           
  1313                           ; 4 bytes @ 0x30
  1314  000031                     	ds	1
  1315  000032                     dtoa@w:
  1316                           	callstack 0
  1317  000032                     otoa@w:
  1318                           	callstack 0
  1319  000032                     utoa@n:
  1320                           	callstack 0
  1321                           
  1322                           ; 8 bytes @ 0x31
  1323  000032                     	ds	1
  1324  000033                     xtoa@p:
  1325                           	callstack 0
  1326                           
  1327                           ; 2 bytes @ 0x32
  1328  000033                     	ds	1
  1329  000034                     dtoa@s:
  1330                           	callstack 0
  1331  000034                     otoa@n:
  1332                           	callstack 0
  1333                           
  1334                           ; 8 bytes @ 0x33
  1335  000034                     	ds	1
  1336  000035                     ??___flmul:
  1337  000035                     xtoa@w:
  1338                           	callstack 0
  1339                           
  1340                           ; 2 bytes @ 0x34
  1341  000035                     	ds	1
  1342  000036                     dtoa@n:
  1343                           	callstack 0
  1344                           
  1345                           ; 8 bytes @ 0x35
  1346  000036                     	ds	1
  1347  000037                     xtoa@n:
  1348                           	callstack 0
  1349                           
  1350                           ; 8 bytes @ 0x36
  1351  000037                     	ds	2
  1352  000039                     ___flmul@sign:
  1353                           	callstack 0
  1354                           
  1355                           ; 1 bytes @ 0x38
  1356  000039                     	ds	1
  1357  00003A                     utoa@i:
  1358                           	callstack 0
  1359  00003A                     ___flmul@grs:
  1360                           	callstack 0
  1361                           
  1362                           ; 4 bytes @ 0x39
  1363  00003A                     	ds	2
  1364  00003C                     otoa@i:
  1365                           	callstack 0
  1366                           
  1367                           ; 2 bytes @ 0x3B
  1368  00003C                     	ds	2
  1369  00003E                     ___flmul@aexp:
  1370                           	callstack 0
  1371  00003E                     dtoa@i:
  1372                           	callstack 0
  1373                           
  1374                           ; 2 bytes @ 0x3D
  1375  00003E                     	ds	1
  1376  00003F                     ___flmul@bexp:
  1377                           	callstack 0
  1378  00003F                     xtoa@i:
  1379                           	callstack 0
  1380                           
  1381                           ; 2 bytes @ 0x3E
  1382  00003F                     	ds	1
  1383  000040                     ___flmul@prod:
  1384                           	callstack 0
  1385                           
  1386                           ; 4 bytes @ 0x3F
  1387  000040                     	ds	1
  1388  000041                     xtoa@c:
  1389                           	callstack 0
  1390                           
  1391                           ; 2 bytes @ 0x40
  1392  000041                     	ds	2
  1393  000043                     ?_vfpfcnvrt:
  1394                           	callstack 0
  1395  000043                     vfpfcnvrt@fp:
  1396                           	callstack 0
  1397                           
  1398                           ; 2 bytes @ 0x42
  1399  000043                     	ds	1
  1400  000044                     ___flmul@temp:
  1401                           	callstack 0
  1402                           
  1403                           ; 2 bytes @ 0x43
  1404  000044                     	ds	1
  1405  000045                     vfpfcnvrt@fmt:
  1406                           	callstack 0
  1407                           
  1408                           ; 2 bytes @ 0x44
  1409  000045                     	ds	1
  1410  000046                     ?___fldiv:
  1411                           	callstack 0
  1412  000046                     ___fldiv@b:
  1413                           	callstack 0
  1414                           
  1415                           ; 4 bytes @ 0x45
  1416  000046                     	ds	1
  1417  000047                     vfpfcnvrt@ap:
  1418                           	callstack 0
  1419                           
  1420                           ; 2 bytes @ 0x46
  1421  000047                     	ds	2
  1422  000049                     ??_vfpfcnvrt:
  1423                           
  1424                           ; 1 bytes @ 0x48
  1425  000049                     	ds	1
  1426  00004A                     ___fldiv@a:
  1427                           	callstack 0
  1428                           
  1429                           ; 4 bytes @ 0x49
  1430  00004A                     	ds	3
  1431  00004D                     vfpfcnvrt@cp:
  1432                           	callstack 0
  1433                           
  1434                           ; 2 bytes @ 0x4C
  1435  00004D                     	ds	1
  1436  00004E                     ??___fldiv:
  1437                           
  1438                           ; 1 bytes @ 0x4D
  1439  00004E                     	ds	1
  1440  00004F                     vfpfcnvrt@done:
  1441                           	callstack 0
  1442                           
  1443                           ; 2 bytes @ 0x4E
  1444  00004F                     	ds	2
  1445  000051                     _vfpfcnvrt$1683:
  1446                           	callstack 0
  1447                           
  1448                           ; 2 bytes @ 0x50
  1449  000051                     	ds	1
  1450  000052                     ___fldiv@rem:
  1451                           	callstack 0
  1452                           
  1453                           ; 4 bytes @ 0x51
  1454  000052                     	ds	1
  1455  000053                     _vfpfcnvrt$1684:
  1456                           	callstack 0
  1457                           
  1458                           ; 2 bytes @ 0x52
  1459  000053                     	ds	2
  1460  000055                     vfpfcnvrt@ll:
  1461                           	callstack 0
  1462                           
  1463                           ; 8 bytes @ 0x54
  1464  000055                     	ds	1
  1465  000056                     ___fldiv@sign:
  1466                           	callstack 0
  1467                           
  1468                           ; 1 bytes @ 0x55
  1469  000056                     	ds	1
  1470  000057                     ___fldiv@new_exp:
  1471                           	callstack 0
  1472                           
  1473                           ; 2 bytes @ 0x56
  1474  000057                     	ds	2
  1475  000059                     ___fldiv@grs:
  1476                           	callstack 0
  1477                           
  1478                           ; 4 bytes @ 0x58
  1479  000059                     	ds	4
  1480  00005D                     ___fldiv@bexp:
  1481                           	callstack 0
  1482  00005D                     vfpfcnvrt@vp:
  1483                           	callstack 0
  1484                           
  1485                           ; 2 bytes @ 0x5C
  1486  00005D                     	ds	1
  1487  00005E                     ___fldiv@aexp:
  1488                           	callstack 0
  1489                           
  1490                           ; 1 bytes @ 0x5D
  1491  00005E                     	ds	1
  1492  00005F                     ?___fladd:
  1493                           	callstack 0
  1494  00005F                     vfpfcnvrt@c:
  1495                           	callstack 0
  1496  00005F                     ___fladd@b:
  1497                           	callstack 0
  1498                           
  1499                           ; 4 bytes @ 0x5E
  1500  00005F                     	ds	1
  1501  000060                     vfpfcnvrt@llu:
  1502                           	callstack 0
  1503                           
  1504                           ; 8 bytes @ 0x5F
  1505  000060                     	ds	3
  1506  000063                     ___fladd@a:
  1507                           	callstack 0
  1508                           
  1509                           ; 4 bytes @ 0x62
  1510  000063                     	ds	4
  1511  000067                     ??___fladd:
  1512                           
  1513                           ; 1 bytes @ 0x66
  1514  000067                     	ds	1
  1515  000068                     ?_vfprintf:
  1516                           	callstack 0
  1517  000068                     vfprintf@fp:
  1518                           	callstack 0
  1519                           
  1520                           ; 2 bytes @ 0x67
  1521  000068                     	ds	2
  1522  00006A                     vfprintf@fmt:
  1523                           	callstack 0
  1524                           
  1525                           ; 2 bytes @ 0x69
  1526  00006A                     	ds	1
  1527  00006B                     ___fladd@signs:
  1528                           	callstack 0
  1529                           
  1530                           ; 1 bytes @ 0x6A
  1531  00006B                     	ds	1
  1532  00006C                     ___fladd@aexp:
  1533                           	callstack 0
  1534  00006C                     vfprintf@ap:
  1535                           	callstack 0
  1536                           
  1537                           ; 2 bytes @ 0x6B
  1538  00006C                     	ds	1
  1539  00006D                     ___fladd@bexp:
  1540                           	callstack 0
  1541                           
  1542                           ; 1 bytes @ 0x6C
  1543  00006D                     	ds	1
  1544  00006E                     ___fladd@grs:
  1545                           	callstack 0
  1546  00006E                     vfprintf@cfmt:
  1547                           	callstack 0
  1548                           
  1549                           ; 2 bytes @ 0x6D
  1550  00006E                     	ds	1
  1551  00006F                     ?___flsub:
  1552                           	callstack 0
  1553  00006F                     ___flsub@b:
  1554                           	callstack 0
  1555                           
  1556                           ; 4 bytes @ 0x6E
  1557  00006F                     	ds	1
  1558  000070                     ?_vsnprintf:
  1559                           	callstack 0
  1560  000070                     vsnprintf@s:
  1561                           	callstack 0
  1562                           
  1563                           ; 2 bytes @ 0x6F
  1564  000070                     	ds	2
  1565  000072                     vsnprintf@n:
  1566                           	callstack 0
  1567                           
  1568                           ; 2 bytes @ 0x71
  1569  000072                     	ds	1
  1570  000073                     ___flsub@a:
  1571                           	callstack 0
  1572                           
  1573                           ; 4 bytes @ 0x72
  1574  000073                     	ds	1
  1575  000074                     vsnprintf@fmt:
  1576                           	callstack 0
  1577                           
  1578                           ; 2 bytes @ 0x73
  1579  000074                     	ds	2
  1580  000076                     vsnprintf@ap:
  1581                           	callstack 0
  1582                           
  1583                           ; 2 bytes @ 0x75
  1584  000076                     	ds	1
  1585  000077                     ?_roundf:
  1586                           	callstack 0
  1587  000077                     roundf@x:
  1588                           	callstack 0
  1589                           
  1590                           ; 4 bytes @ 0x76
  1591  000077                     	ds	1
  1592  000078                     ??_vsnprintf:
  1593                           
  1594                           ; 1 bytes @ 0x77
  1595  000078                     	ds	3
  1596  00007B                     ??_roundf:
  1597                           
  1598                           ; 1 bytes @ 0x7A
  1599  00007B                     	ds	1
  1600  00007C                     
  1601                           ; 1 bytes @ 0x7B
  1602  00007C                     	ds	3
  1603  00007F                     
  1604                           ; 1 bytes @ 0x7E
  1605 ;;
  1606 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1607 ;;
  1608 ;; *************** function _main *****************
  1609 ;; Defined at:
  1610 ;;		line 54 in file "main.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;		None
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  current_temp    2  160[BANK1 ] int 
  1615 ;;  greet_str     160    0[BANK1 ] PTR const unsigned char 
  1616 ;;		 -> ?_snprintf(2), STR_8(50), STR_7(9), STR_6(7), 
  1617 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  1618 ;;		 -> STR_1(49), 
  1619 ;;  rx_char         1  162[BANK1 ] unsigned char 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1629 ;;      Params:         0       0       0       0       0       0       0
  1630 ;;      Locals:         0       0     163       0       0       0       0
  1631 ;;      Temps:          0       1       0       0       0       0       0
  1632 ;;      Totals:         0       1     163       0       0       0       0
  1633 ;;Total ram usage:      164 bytes
  1634 ;; Hardware stack levels required when called:   10
  1635 ;; This function calls:
  1636 ;;		___wmul
  1637 ;;		_change_direction
  1638 ;;		_check_temperature
  1639 ;;		_configure_analog_digital_conversion
  1640 ;;		_get_reg_value
  1641 ;;		_get_temperature
  1642 ;;		_init_PORTS
  1643 ;;		_init_USART
  1644 ;;		_init_ccp1
  1645 ;;		_init_interrupts
  1646 ;;		_init_stepper
  1647 ;;		_init_timer_0
  1648 ;;		_init_timer_2
  1649 ;;		_lcd_cmd
  1650 ;;		_lcd_init
  1651 ;;		_lcd_str
  1652 ;;		_reach_goal
  1653 ;;		_serial_tx_char
  1654 ;;		_snprintf
  1655 ;;		_state_translator_fpga_to_micro
  1656 ;;		_state_translator_micro_to_fpga
  1657 ;;		_wait_for_zero
  1658 ;; This function is called by:
  1659 ;;		Startup code after reset
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text0
  1664  001462                     __ptext0:
  1665                           	callstack 0
  1666  001462                     _main:
  1667                           	callstack 21
  1668  001462  FFFF               	dw	65535	; assembler added errata NOP
  1669                           
  1670                           ;main.c: 56:     init_PORTS();
  1671  001464  EC8B  F033         	call	_init_PORTS	;wreg free
  1672  001468                     
  1673                           ;main.c: 57:     init_USART();
  1674  001468  EC15  F034         	call	_init_USART	;wreg free
  1675  00146C                     
  1676                           ;main.c: 58:     init_timer_2();
  1677  00146C  EC15  F038         	call	_init_timer_2	;wreg free
  1678  001470                     
  1679                           ;main.c: 59:     init_ccp1();
  1680  001470  EC12  F033         	call	_init_ccp1	;wreg free
  1681  001474                     
  1682                           ;main.c: 60:     init_interrupts();
  1683  001474  ECC3  F032         	call	_init_interrupts	;wreg free
  1684  001478                     
  1685                           ;main.c: 61:     configure_analog_digital_conversion();
  1686  001478  EC24  F033         	call	_configure_analog_digital_conversion	;wreg free
  1687  00147C                     
  1688                           ;main.c: 62:     init_stepper(&joint_stepper, 0, 0, 1, hex_joint_values);
  1689  00147C  0EBF               	movlw	low _joint_stepper
  1690  00147E  6E01               	movwf	init_stepper@stepper_motor^0,c
  1691  001480  0E01               	movlw	high _joint_stepper
  1692  001482  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  1693  001484  0E00               	movlw	0
  1694  001486  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  1695  001488  0E00               	movlw	0
  1696  00148A  6E03               	movwf	init_stepper@current_coil^0,c
  1697  00148C  0E00               	movlw	0
  1698  00148E  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  1699  001490  0E00               	movlw	0
  1700  001492  6E05               	movwf	init_stepper@step_counter^0,c
  1701  001494  0E00               	movlw	0
  1702  001496  6E08               	movwf	(init_stepper@direction+1)^0,c
  1703  001498  0E01               	movlw	1
  1704  00149A  6E07               	movwf	init_stepper@direction^0,c
  1705  00149C  0EE7               	movlw	low _hex_joint_values
  1706  00149E  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  1707  0014A0  0E01               	movlw	high _hex_joint_values
  1708  0014A2  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  1709  0014A4  EC5B  F037         	call	_init_stepper	;wreg free
  1710  0014A8                     
  1711                           ;main.c: 63:     init_stepper(&end_effector_stepper, 0, 0, 1, hex_end_effector_values);
  1712  0014A8  0EB1               	movlw	low _end_effector_stepper
  1713  0014AA  6E01               	movwf	init_stepper@stepper_motor^0,c
  1714  0014AC  0E01               	movlw	high _end_effector_stepper
  1715  0014AE  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  1716  0014B0  0E00               	movlw	0
  1717  0014B2  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  1718  0014B4  0E00               	movlw	0
  1719  0014B6  6E03               	movwf	init_stepper@current_coil^0,c
  1720  0014B8  0E00               	movlw	0
  1721  0014BA  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  1722  0014BC  0E00               	movlw	0
  1723  0014BE  6E05               	movwf	init_stepper@step_counter^0,c
  1724  0014C0  0E00               	movlw	0
  1725  0014C2  6E08               	movwf	(init_stepper@direction+1)^0,c
  1726  0014C4  0E01               	movlw	1
  1727  0014C6  6E07               	movwf	init_stepper@direction^0,c
  1728  0014C8  0EDF               	movlw	low _hex_end_effector_values
  1729  0014CA  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  1730  0014CC  0E01               	movlw	high _hex_end_effector_values
  1731  0014CE  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  1732  0014D0  EC5B  F037         	call	_init_stepper	;wreg free
  1733  0014D4                     
  1734                           ;main.c: 64:     lcd_init();
  1735  0014D4  ECD8  F036         	call	_lcd_init	;wreg free
  1736  0014D8                     
  1737                           ;main.c: 65:     lcd_cmd(0x0C);
  1738  0014D8  0E0C               	movlw	12
  1739  0014DA  EC4C  F033         	call	_lcd_cmd
  1740  0014DE                     
  1741                           ;main.c: 67:     lcd_cmd(0x01);
  1742  0014DE  0E01               	movlw	1
  1743  0014E0  EC4C  F033         	call	_lcd_cmd
  1744  0014E4                     
  1745                           ;main.c: 68:     lcd_cmd(0x80);
  1746  0014E4  0E80               	movlw	128
  1747  0014E6  EC4C  F033         	call	_lcd_cmd
  1748  0014EA                     
  1749                           ;main.c: 69:     lcd_str("Device has been reset");
  1750  0014EA  0E93               	movlw	low STR_9
  1751  0014EC  6E03               	movwf	lcd_str@str^0,c
  1752  0014EE  0E7F               	movlw	high STR_9
  1753  0014F0  6E04               	movwf	(lcd_str@str+1)^0,c
  1754  0014F2  EC17  F037         	call	_lcd_str	;wreg free
  1755  0014F6                     
  1756                           ;main.c: 71:     (INTCONbits.GIE = 1);
  1757  0014F6  8EF2               	bsf	242,7,c	;volatile
  1758  0014F8                     
  1759                           ;main.c: 73:     mix_counter = 0;
  1760  0014F8  0E00               	movlw	0
  1761  0014FA  0101               	movlb	1	; () banked
  1762  0014FC  6FAC               	movwf	(_mix_counter+1)& (0+255),b
  1763  0014FE  0E00               	movlw	0
  1764  001500  6FAB               	movwf	_mix_counter& (0+255),b
  1765  001502                     l5512:
  1766  001502  FFFF               	dw	65535	; assembler added errata NOP
  1767                           
  1768                           ;main.c: 76:         if (state_changed){
  1769  001504  0101               	movlb	1	; () banked
  1770  001506  51B0               	movf	_state_changed& (0+255),w,b
  1771  001508  B4D8               	btfsc	status,2,c
  1772  00150A  EF89  F00A         	goto	u6721
  1773  00150E  EF8C  F00A         	goto	u6720
  1774  001512                     u6721:
  1775  001512  FFFF               	dw	65535	; assembler added errata NOP
  1776  001514  EFDF  F00A         	goto	l5536
  1777  001518                     u6720:
  1778  001518  FFFF               	dw	65535	; assembler added errata NOP
  1779  00151A                     
  1780                           ; BSR set to: 1
  1781                           ;main.c: 77:             const char* greet_str[80];;main.c: 78:             if (read_new
      +                          _char){
  1782  00151A  51AE               	movf	_read_new_char& (0+255),w,b
  1783  00151C  B4D8               	btfsc	status,2,c
  1784  00151E  EF93  F00A         	goto	u6731
  1785  001522  EF96  F00A         	goto	u6730
  1786  001526                     u6731:
  1787  001526  FFFF               	dw	65535	; assembler added errata NOP
  1788  001528  EFA7  F00A         	goto	l5522
  1789  00152C                     u6730:
  1790  00152C  FFFF               	dw	65535	; assembler added errata NOP
  1791  00152E                     
  1792                           ; BSR set to: 1
  1793                           ;main.c: 79:                 rx_char = get_reg_value();
  1794  00152E  ECCF  F032         	call	_get_reg_value	;wreg free
  1795  001532  0101               	movlb	1	; () banked
  1796  001534  6FA2               	movwf	main@rx_char& (0+255),b
  1797  001536                     
  1798                           ; BSR set to: 1
  1799                           ;main.c: 84:                 state_translator_fpga_to_micro(rx_char, &state);
  1800  001536  0ECD               	movlw	low _state
  1801  001538  6E03               	movwf	state_translator_fpga_to_micro@state^0,c
  1802  00153A  0E01               	movlw	high _state
  1803  00153C  6E04               	movwf	(state_translator_fpga_to_micro@state+1)^0,c
  1804  00153E  51A2               	movf	main@rx_char& (0+255),w,b
  1805  001540  ECC5  F03C         	call	_state_translator_fpga_to_micro
  1806  001544                     
  1807                           ;main.c: 85:                 read_new_char = 0;
  1808  001544  0E00               	movlw	0
  1809  001546  0101               	movlb	1	; () banked
  1810  001548  6FAE               	movwf	_read_new_char& (0+255),b
  1811                           
  1812                           ;main.c: 86:             } else {
  1813  00154A  EFB0  F00A         	goto	l5524
  1814  00154E                     l5522:
  1815  00154E  FFFF               	dw	65535	; assembler added errata NOP
  1816                           
  1817                           ; BSR set to: 1
  1818                           ;main.c: 87:                 serial_tx_char(state_translator_micro_to_fpga(&state));
  1819  001550  0ECD               	movlw	low _state
  1820  001552  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  1821  001554  0E01               	movlw	high _state
  1822  001556  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  1823  001558  ECB9  F01F         	call	_state_translator_micro_to_fpga	;wreg free
  1824  00155C  ECE1  F032         	call	_serial_tx_char
  1825  001560                     l5524:
  1826  001560  FFFF               	dw	65535	; assembler added errata NOP
  1827                           
  1828                           ;main.c: 89:             snprintf(greet_str, sizeof(greet_str), "%s", state_msgs[state])
      +                          ;
  1829  001562  0E00               	movlw	low main@greet_str
  1830  001564  0100               	movlb	0	; () banked
  1831  001566  6FC2               	movwf	snprintf@s& (0+255),b
  1832  001568  0E01               	movlw	high main@greet_str
  1833  00156A  6FC3               	movwf	(snprintf@s+1)& (0+255),b
  1834  00156C  0E00               	movlw	0
  1835  00156E  6FC5               	movwf	(snprintf@n+1)& (0+255),b
  1836  001570  0EA0               	movlw	160
  1837  001572  6FC4               	movwf	snprintf@n& (0+255),b
  1838  001574  0EFC               	movlw	low STR_10
  1839  001576  6FC6               	movwf	snprintf@fmt& (0+255),b
  1840  001578  0E7F               	movlw	high STR_10
  1841  00157A  6FC7               	movwf	(snprintf@fmt+1)& (0+255),b
  1842  00157C  90D8               	bcf	status,0,c
  1843  00157E  0101               	movlb	1	; () banked
  1844  001580  35CD               	rlcf	_state& (0+255),w,b
  1845  001582  6ED9               	movwf	fsr2l,c
  1846  001584  35CE               	rlcf	(_state+1)& (0+255),w,b
  1847  001586  6EDA               	movwf	fsr2h,c
  1848  001588  0ECF               	movlw	low _state_msgs
  1849  00158A  26D9               	addwf	fsr2l,f,c
  1850  00158C  0E01               	movlw	high _state_msgs
  1851  00158E  22DA               	addwfc	fsr2h,f,c
  1852  001590  CFDE F0C8          	movff	postinc2,?_snprintf+6
  1853  001594  CFDD F0C9          	movff	postdec2,?_snprintf+7
  1854  001598  ECA1  F033         	call	_snprintf	;wreg free
  1855  00159C                     
  1856                           ;main.c: 90:             lcd_cmd(0x01);
  1857  00159C  0E01               	movlw	1
  1858  00159E  EC4C  F033         	call	_lcd_cmd
  1859  0015A2                     
  1860                           ;main.c: 91:             lcd_cmd(0x80);
  1861  0015A2  0E80               	movlw	128
  1862  0015A4  EC4C  F033         	call	_lcd_cmd
  1863  0015A8                     
  1864                           ;main.c: 92:             lcd_str(greet_str);
  1865  0015A8  0E00               	movlw	low main@greet_str
  1866  0015AA  6E03               	movwf	lcd_str@str^0,c
  1867  0015AC  0E01               	movlw	high main@greet_str
  1868  0015AE  6E04               	movwf	(lcd_str@str+1)^0,c
  1869  0015B0  EC17  F037         	call	_lcd_str	;wreg free
  1870  0015B4                     
  1871                           ;main.c: 94:             state_changed = 0;
  1872  0015B4  0E00               	movlw	0
  1873  0015B6  0101               	movlb	1	; () banked
  1874  0015B8  6FB0               	movwf	_state_changed& (0+255),b
  1875  0015BA                     
  1876                           ; BSR set to: 1
  1877                           ;main.c: 95:             idle_msg_sent = 0;
  1878  0015BA  0E00               	movlw	0
  1879  0015BC  6FAF               	movwf	_idle_msg_sent& (0+255),b
  1880  0015BE                     l5536:
  1881  0015BE  FFFF               	dw	65535	; assembler added errata NOP
  1882                           
  1883                           ; BSR set to: 1
  1884                           ;main.c: 99:         if (state == 2){
  1885  0015C0  0E02               	movlw	2
  1886  0015C2  19CD               	xorwf	_state& (0+255),w,b
  1887  0015C4  11CE               	iorwf	(_state+1)& (0+255),w,b
  1888  0015C6  A4D8               	btfss	status,2,c
  1889  0015C8  EFE8  F00A         	goto	u6741
  1890  0015CC  EFEB  F00A         	goto	u6740
  1891  0015D0                     u6741:
  1892  0015D0  FFFF               	dw	65535	; assembler added errata NOP
  1893  0015D2  EF30  F00B         	goto	l137
  1894  0015D6                     u6740:
  1895  0015D6  FFFF               	dw	65535	; assembler added errata NOP
  1896  0015D8                     
  1897                           ; BSR set to: 1
  1898                           ;main.c: 100:             LATAbits.LATA1 = 1;
  1899  0015D8  8289               	bsf	137,1,c	;volatile
  1900  0015DA                     
  1901                           ; BSR set to: 1
  1902                           ;main.c: 101:             if (move_to_trash && trash_counter < 100){
  1903  0015DA  51A3               	movf	_move_to_trash& (0+255),w,b
  1904  0015DC  11A4               	iorwf	(_move_to_trash+1)& (0+255),w,b
  1905  0015DE  B4D8               	btfsc	status,2,c
  1906  0015E0  EFF4  F00A         	goto	u6751
  1907  0015E4  EFF7  F00A         	goto	u6750
  1908  0015E8                     u6751:
  1909  0015E8  FFFF               	dw	65535	; assembler added errata NOP
  1910  0015EA  EF0C  F00B         	goto	l5546
  1911  0015EE                     u6750:
  1912  0015EE  FFFF               	dw	65535	; assembler added errata NOP
  1913  0015F0                     
  1914                           ; BSR set to: 1
  1915  0015F0  BFA6               	btfsc	(_trash_counter+1)& (0+255),7,b
  1916  0015F2  EF07  F00B         	goto	u6760
  1917  0015F6  51A6               	movf	(_trash_counter+1)& (0+255),w,b
  1918  0015F8  E107               	bnz	u6761
  1919  0015FA  0E64               	movlw	100
  1920  0015FC  5DA5               	subwf	_trash_counter& (0+255),w,b
  1921  0015FE  B0D8               	btfsc	status,0,c
  1922  001600  EF04  F00B         	goto	u6761
  1923  001604  EF07  F00B         	goto	u6760
  1924  001608                     u6761:
  1925  001608  FFFF               	dw	65535	; assembler added errata NOP
  1926  00160A  EF0C  F00B         	goto	l5546
  1927  00160E                     u6760:
  1928  00160E  FFFF               	dw	65535	; assembler added errata NOP
  1929  001610                     
  1930                           ; BSR set to: 1
  1931                           ;main.c: 102:                 trash_counter++;
  1932  001610  4BA5               	infsnz	_trash_counter& (0+255),f,b
  1933  001612  2BA6               	incf	(_trash_counter+1)& (0+255),f,b
  1934                           
  1935                           ;main.c: 103:             } else if (move_to_trash && trash_counter >= 100){
  1936  001614  EF81  F00A         	goto	l5512
  1937  001618                     l5546:
  1938  001618  FFFF               	dw	65535	; assembler added errata NOP
  1939                           
  1940                           ; BSR set to: 1
  1941  00161A  51A3               	movf	_move_to_trash& (0+255),w,b
  1942  00161C  11A4               	iorwf	(_move_to_trash+1)& (0+255),w,b
  1943  00161E  B4D8               	btfsc	status,2,c
  1944  001620  EF14  F00B         	goto	u6771
  1945  001624  EF17  F00B         	goto	u6770
  1946  001628                     u6771:
  1947  001628  FFFF               	dw	65535	; assembler added errata NOP
  1948  00162A  EF3F  F00B         	goto	l5554
  1949  00162E                     u6770:
  1950  00162E  FFFF               	dw	65535	; assembler added errata NOP
  1951  001630                     
  1952                           ; BSR set to: 1
  1953  001630  BFA6               	btfsc	(_trash_counter+1)& (0+255),7,b
  1954  001632  EF24  F00B         	goto	u6781
  1955  001636  51A6               	movf	(_trash_counter+1)& (0+255),w,b
  1956  001638  E10A               	bnz	u6780
  1957  00163A  0E64               	movlw	100
  1958  00163C  5DA5               	subwf	_trash_counter& (0+255),w,b
  1959  00163E  A0D8               	btfss	status,0,c
  1960  001640  EF24  F00B         	goto	u6781
  1961  001644  EF27  F00B         	goto	u6780
  1962  001648                     u6781:
  1963  001648  FFFF               	dw	65535	; assembler added errata NOP
  1964  00164A  EF3F  F00B         	goto	l5554
  1965  00164E                     u6780:
  1966  00164E  FFFF               	dw	65535	; assembler added errata NOP
  1967  001650                     
  1968                           ; BSR set to: 1
  1969                           ;main.c: 104:                 state = 0;
  1970  001650  0E00               	movlw	0
  1971  001652  6FCE               	movwf	(_state+1)& (0+255),b
  1972  001654  0E00               	movlw	0
  1973  001656  6FCD               	movwf	_state& (0+255),b
  1974                           
  1975                           ;main.c: 105:                 state_changed = 1;
  1976  001658  0E01               	movlw	1
  1977  00165A  6FB0               	movwf	_state_changed& (0+255),b
  1978  00165C  EF81  F00A         	goto	l5512
  1979  001660                     l137:
  1980  001660  FFFF               	dw	65535	; assembler added errata NOP
  1981                           
  1982                           ; BSR set to: 1
  1983                           ;main.c: 108:             LATAbits.LATA1 = 0;
  1984  001662  9289               	bcf	137,1,c	;volatile
  1985  001664                     
  1986                           ; BSR set to: 1
  1987                           ;main.c: 109:             if (state == 0) {
  1988  001664  51CD               	movf	_state& (0+255),w,b
  1989  001666  11CE               	iorwf	(_state+1)& (0+255),w,b
  1990  001668  A4D8               	btfss	status,2,c
  1991  00166A  EF39  F00B         	goto	u6791
  1992  00166E  EF3C  F00B         	goto	u6790
  1993  001672                     u6791:
  1994  001672  FFFF               	dw	65535	; assembler added errata NOP
  1995  001674  EF42  F00B         	goto	l5556
  1996  001678                     u6790:
  1997  001678  FFFF               	dw	65535	; assembler added errata NOP
  1998  00167A  EF81  F00A         	goto	l5512
  1999  00167E                     l5554:
  2000  00167E  FFFF               	dw	65535	; assembler added errata NOP
  2001                           
  2002                           ;main.c: 111:             } else if (state == 1){
  2003  001680  EF81  F00A         	goto	l5512
  2004  001684                     l5556:
  2005  001684  FFFF               	dw	65535	; assembler added errata NOP
  2006                           
  2007                           ; BSR set to: 1
  2008  001686  05CD               	decf	_state& (0+255),w,b
  2009  001688  11CE               	iorwf	(_state+1)& (0+255),w,b
  2010  00168A  A4D8               	btfss	status,2,c
  2011  00168C  EF4A  F00B         	goto	u6801
  2012  001690  EF4D  F00B         	goto	u6800
  2013  001694                     u6801:
  2014  001694  FFFF               	dw	65535	; assembler added errata NOP
  2015  001696  EF56  F00B         	goto	l5560
  2016  00169A                     u6800:
  2017  00169A  FFFF               	dw	65535	; assembler added errata NOP
  2018  00169C                     
  2019                           ; BSR set to: 1
  2020                           ;main.c: 112:                 state = 2;
  2021  00169C  0E00               	movlw	0
  2022  00169E  6FCE               	movwf	(_state+1)& (0+255),b
  2023  0016A0  0E02               	movlw	2
  2024  0016A2  6FCD               	movwf	_state& (0+255),b
  2025                           
  2026                           ;main.c: 113:                 state_changed = 1;
  2027  0016A4  0E01               	movlw	1
  2028  0016A6  6FB0               	movwf	_state_changed& (0+255),b
  2029                           
  2030                           ;main.c: 114:             } else if (state == 3){
  2031  0016A8  EF81  F00A         	goto	l5512
  2032  0016AC                     l5560:
  2033  0016AC  FFFF               	dw	65535	; assembler added errata NOP
  2034                           
  2035                           ; BSR set to: 1
  2036  0016AE  0E03               	movlw	3
  2037  0016B0  19CD               	xorwf	_state& (0+255),w,b
  2038  0016B2  11CE               	iorwf	(_state+1)& (0+255),w,b
  2039  0016B4  A4D8               	btfss	status,2,c
  2040  0016B6  EF5F  F00B         	goto	u6811
  2041  0016BA  EF62  F00B         	goto	u6810
  2042  0016BE                     u6811:
  2043  0016BE  FFFF               	dw	65535	; assembler added errata NOP
  2044  0016C0  EFA3  F00B         	goto	l5574
  2045  0016C4                     u6810:
  2046  0016C4  FFFF               	dw	65535	; assembler added errata NOP
  2047  0016C6                     
  2048                           ; BSR set to: 1
  2049                           ;main.c: 115:                 if (timer_done){
  2050  0016C6  51AD               	movf	_timer_done& (0+255),w,b
  2051  0016C8  B4D8               	btfsc	status,2,c
  2052  0016CA  EF69  F00B         	goto	u6821
  2053  0016CE  EF6C  F00B         	goto	u6820
  2054  0016D2                     u6821:
  2055  0016D2  FFFF               	dw	65535	; assembler added errata NOP
  2056  0016D4  EF8C  F00B         	goto	l147
  2057  0016D8                     u6820:
  2058  0016D8  FFFF               	dw	65535	; assembler added errata NOP
  2059  0016DA                     
  2060                           ; BSR set to: 1
  2061                           ;main.c: 116:                     if(check_temperature(get_temperature())){
  2062  0016DA  EC63  F036         	call	_get_temperature	;wreg free
  2063  0016DE  C0D4  F0D6         	movff	?_get_temperature,check_temperature@temp_to_be_checked
  2064  0016E2  C0D5  F0D7         	movff	?_get_temperature+1,check_temperature@temp_to_be_checked+1
  2065  0016E6  ECE9  F038         	call	_check_temperature	;wreg free
  2066  0016EA  0100               	movlb	0	; () banked
  2067  0016EC  51D6               	movf	?_check_temperature& (0+255),w,b
  2068  0016EE  11D7               	iorwf	(?_check_temperature+1)& (0+255),w,b
  2069  0016F0  B4D8               	btfsc	status,2,c
  2070  0016F2  EF7D  F00B         	goto	u6831
  2071  0016F6  EF80  F00B         	goto	u6830
  2072  0016FA                     u6831:
  2073  0016FA  FFFF               	dw	65535	; assembler added errata NOP
  2074  0016FC  EF3F  F00B         	goto	l5554
  2075  001700                     u6830:
  2076  001700  FFFF               	dw	65535	; assembler added errata NOP
  2077  001702                     
  2078                           ; BSR set to: 0
  2079                           ;main.c: 117:                         state = 2;
  2080  001702  0E00               	movlw	0
  2081  001704  0101               	movlb	1	; () banked
  2082  001706  6FCE               	movwf	(_state+1)& (0+255),b
  2083  001708  0E02               	movlw	2
  2084  00170A  6FCD               	movwf	_state& (0+255),b
  2085                           
  2086                           ;main.c: 118:                         state_changed = 1;
  2087  00170C  0E01               	movlw	1
  2088  00170E  6FB0               	movwf	_state_changed& (0+255),b
  2089                           
  2090                           ;main.c: 119:                         timer_done = 0;
  2091  001710  0E00               	movlw	0
  2092  001712  6FAD               	movwf	_timer_done& (0+255),b
  2093                           
  2094                           ;main.c: 120:                     } else{
  2095  001714  EF81  F00A         	goto	l5512
  2096  001718                     l147:
  2097  001718  FFFF               	dw	65535	; assembler added errata NOP
  2098                           
  2099                           ; BSR set to: 1
  2100                           ;main.c: 125:                     if (T0CONbits.TMR0ON == 0){
  2101  00171A  BED5               	btfsc	213,7,c	;volatile
  2102  00171C  EF92  F00B         	goto	u6841
  2103  001720  EF95  F00B         	goto	u6840
  2104  001724                     u6841:
  2105  001724  FFFF               	dw	65535	; assembler added errata NOP
  2106  001726  EF9A  F00B         	goto	l5572
  2107  00172A                     u6840:
  2108  00172A  FFFF               	dw	65535	; assembler added errata NOP
  2109  00172C                     
  2110                           ; BSR set to: 1
  2111                           ;main.c: 126:                         wait_for_zero();
  2112  00172C  EC38  F033         	call	_wait_for_zero	;wreg free
  2113  001730                     
  2114                           ;main.c: 127:                         init_timer_0();
  2115  001730  EC01  F033         	call	_init_timer_0	;wreg free
  2116  001734                     l5572:
  2117  001734  FFFF               	dw	65535	; assembler added errata NOP
  2118                           
  2119                           ;main.c: 129:                     int current_temp = get_temperature();
  2120  001736  EC63  F036         	call	_get_temperature	;wreg free
  2121  00173A  C0D4  F1A0         	movff	?_get_temperature,main@current_temp
  2122  00173E  C0D5  F1A1         	movff	?_get_temperature+1,main@current_temp+1
  2123  001742  EF81  F00A         	goto	l5512
  2124  001746                     l5574:
  2125  001746  FFFF               	dw	65535	; assembler added errata NOP
  2126                           
  2127                           ; BSR set to: 1
  2128  001748  0E04               	movlw	4
  2129  00174A  19CD               	xorwf	_state& (0+255),w,b
  2130  00174C  11CE               	iorwf	(_state+1)& (0+255),w,b
  2131  00174E  A4D8               	btfss	status,2,c
  2132  001750  EFAC  F00B         	goto	u6851
  2133  001754  EFAF  F00B         	goto	u6850
  2134  001758                     u6851:
  2135  001758  FFFF               	dw	65535	; assembler added errata NOP
  2136  00175A  EF4B  F00C         	goto	l5596
  2137  00175E                     u6850:
  2138  00175E  FFFF               	dw	65535	; assembler added errata NOP
  2139  001760                     
  2140                           ; BSR set to: 1
  2141                           ;main.c: 133:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2142  001760  0E03               	movlw	3
  2143  001762  0100               	movlb	0	; () banked
  2144  001764  6FDD               	movwf	??_main& (0+255),b
  2145  001766  0EEB               	movlw	235
  2146  001768                     u7137:
  2147  001768  FFFF               	dw	65535	; errata NOP
  2148  00176A  2EE8               	decfsz	wreg,f,c
  2149  00176C  D7FD               	bra	u7137
  2150  00176E  2FDD               	decfsz	??_main& (0+255),f,b
  2151  001770  D7FB               	bra	u7137
  2152  001772  D000               	nop2	
  2153  001774  F000               	nop	
  2154  001776                     
  2155                           ;main.c: 134:                 if (joint_homed && reach_goal(&joint_stepper, 50)){
  2156  001776  0101               	movlb	1	; () banked
  2157  001778  51A9               	movf	_joint_homed& (0+255),w,b
  2158  00177A  11AA               	iorwf	(_joint_homed+1)& (0+255),w,b
  2159  00177C  B4D8               	btfsc	status,2,c
  2160  00177E  EFC3  F00B         	goto	u6861
  2161  001782  EFC6  F00B         	goto	u6860
  2162  001786                     u6861:
  2163  001786  FFFF               	dw	65535	; assembler added errata NOP
  2164  001788  EFE1  F00B         	goto	l5584
  2165  00178C                     u6860:
  2166  00178C  FFFF               	dw	65535	; assembler added errata NOP
  2167  00178E                     
  2168                           ; BSR set to: 1
  2169  00178E  0EBF               	movlw	low _joint_stepper
  2170  001790  6E07               	movwf	reach_goal@stepper_motor^0,c
  2171  001792  0E01               	movlw	high _joint_stepper
  2172  001794  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2173  001796  0E00               	movlw	0
  2174  001798  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2175  00179A  0E32               	movlw	50
  2176  00179C  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2177  00179E  EC9C  F036         	call	_reach_goal	;wreg free
  2178  0017A2  5007               	movf	?_reach_goal^0,w,c
  2179  0017A4  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2180  0017A6  B4D8               	btfsc	status,2,c
  2181  0017A8  EFD8  F00B         	goto	u6871
  2182  0017AC  EFDB  F00B         	goto	u6870
  2183  0017B0                     u6871:
  2184  0017B0  FFFF               	dw	65535	; assembler added errata NOP
  2185  0017B2  EFE1  F00B         	goto	l5584
  2186  0017B6                     u6870:
  2187  0017B6  FFFF               	dw	65535	; assembler added errata NOP
  2188  0017B8                     
  2189                           ;main.c: 135:                     joint_homed = 0;
  2190  0017B8  0E00               	movlw	0
  2191  0017BA  0101               	movlb	1	; () banked
  2192  0017BC  6FAA               	movwf	(_joint_homed+1)& (0+255),b
  2193  0017BE  0E00               	movlw	0
  2194  0017C0  6FA9               	movwf	_joint_homed& (0+255),b
  2195  0017C2                     l5584:
  2196  0017C2  FFFF               	dw	65535	; assembler added errata NOP
  2197                           
  2198                           ;main.c: 137:                 if (!joint_homed && end_effector_homed && reach_goal(&end_
      +                          effector_stepper, 100)){
  2199  0017C4  0101               	movlb	1	; () banked
  2200  0017C6  51A9               	movf	_joint_homed& (0+255),w,b
  2201  0017C8  11AA               	iorwf	(_joint_homed+1)& (0+255),w,b
  2202  0017CA  A4D8               	btfss	status,2,c
  2203  0017CC  EFEA  F00B         	goto	u6881
  2204  0017D0  EFED  F00B         	goto	u6880
  2205  0017D4                     u6881:
  2206  0017D4  FFFF               	dw	65535	; assembler added errata NOP
  2207  0017D6  EF13  F00C         	goto	l5592
  2208  0017DA                     u6880:
  2209  0017DA  FFFF               	dw	65535	; assembler added errata NOP
  2210  0017DC                     
  2211                           ; BSR set to: 1
  2212  0017DC  51A7               	movf	_end_effector_homed& (0+255),w,b
  2213  0017DE  11A8               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  2214  0017E0  B4D8               	btfsc	status,2,c
  2215  0017E2  EFF5  F00B         	goto	u6891
  2216  0017E6  EFF8  F00B         	goto	u6890
  2217  0017EA                     u6891:
  2218  0017EA  FFFF               	dw	65535	; assembler added errata NOP
  2219  0017EC  EF13  F00C         	goto	l5592
  2220  0017F0                     u6890:
  2221  0017F0  FFFF               	dw	65535	; assembler added errata NOP
  2222  0017F2                     
  2223                           ; BSR set to: 1
  2224  0017F2  0EB1               	movlw	low _end_effector_stepper
  2225  0017F4  6E07               	movwf	reach_goal@stepper_motor^0,c
  2226  0017F6  0E01               	movlw	high _end_effector_stepper
  2227  0017F8  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2228  0017FA  0E00               	movlw	0
  2229  0017FC  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2230  0017FE  0E64               	movlw	100
  2231  001800  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2232  001802  EC9C  F036         	call	_reach_goal	;wreg free
  2233  001806  5007               	movf	?_reach_goal^0,w,c
  2234  001808  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2235  00180A  B4D8               	btfsc	status,2,c
  2236  00180C  EF0A  F00C         	goto	u6901
  2237  001810  EF0D  F00C         	goto	u6900
  2238  001814                     u6901:
  2239  001814  FFFF               	dw	65535	; assembler added errata NOP
  2240  001816  EF13  F00C         	goto	l5592
  2241  00181A                     u6900:
  2242  00181A  FFFF               	dw	65535	; assembler added errata NOP
  2243  00181C                     
  2244                           ;main.c: 138:                     end_effector_homed = 0;
  2245  00181C  0E00               	movlw	0
  2246  00181E  0101               	movlb	1	; () banked
  2247  001820  6FA8               	movwf	(_end_effector_homed+1)& (0+255),b
  2248  001822  0E00               	movlw	0
  2249  001824  6FA7               	movwf	_end_effector_homed& (0+255),b
  2250  001826                     l5592:
  2251  001826  FFFF               	dw	65535	; assembler added errata NOP
  2252                           
  2253                           ;main.c: 140:                 if (!end_effector_homed * !joint_homed){
  2254  001828  0101               	movlb	1	; () banked
  2255  00182A  51A7               	movf	_end_effector_homed& (0+255),w,b
  2256  00182C  11A8               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  2257  00182E  B4D8               	btfsc	status,2,c
  2258  001830  EF1C  F00C         	goto	u6911
  2259  001834  EF20  F00C         	goto	u6910
  2260  001838                     u6911:
  2261  001838  FFFF               	dw	65535	; assembler added errata NOP
  2262  00183A  0E01               	movlw	1
  2263  00183C  EF22  F00C         	goto	u6920
  2264  001840                     u6910:
  2265  001840  FFFF               	dw	65535	; assembler added errata NOP
  2266  001842  0E00               	movlw	0
  2267  001844                     u6920:
  2268  001844  FFFF               	dw	65535	; assembler added errata NOP
  2269  001846  6E01               	movwf	___wmul@multiplier^0,c
  2270  001848  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2271  00184A  51A9               	movf	_joint_homed& (0+255),w,b
  2272  00184C  11AA               	iorwf	(_joint_homed+1)& (0+255),w,b
  2273  00184E  B4D8               	btfsc	status,2,c
  2274  001850  EF2C  F00C         	goto	u6931
  2275  001854  EF30  F00C         	goto	u6930
  2276  001858                     u6931:
  2277  001858  FFFF               	dw	65535	; assembler added errata NOP
  2278  00185A  0E01               	movlw	1
  2279  00185C  EF32  F00C         	goto	u6940
  2280  001860                     u6930:
  2281  001860  FFFF               	dw	65535	; assembler added errata NOP
  2282  001862  0E00               	movlw	0
  2283  001864                     u6940:
  2284  001864  FFFF               	dw	65535	; assembler added errata NOP
  2285  001866  6E03               	movwf	___wmul@multiplicand^0,c
  2286  001868  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  2287  00186A  EC76  F033         	call	___wmul	;wreg free
  2288  00186E  5001               	movf	?___wmul^0,w,c
  2289  001870  1002               	iorwf	(?___wmul+1)^0,w,c
  2290  001872  B4D8               	btfsc	status,2,c
  2291  001874  EF3E  F00C         	goto	u6951
  2292  001878  EF41  F00C         	goto	u6950
  2293  00187C                     u6951:
  2294  00187C  FFFF               	dw	65535	; assembler added errata NOP
  2295  00187E  EF81  F00A         	goto	l5512
  2296  001882                     u6950:
  2297  001882  FFFF               	dw	65535	; assembler added errata NOP
  2298  001884                     
  2299                           ;main.c: 141:                     state = 5;
  2300  001884  0E00               	movlw	0
  2301  001886  0101               	movlb	1	; () banked
  2302  001888  6FCE               	movwf	(_state+1)& (0+255),b
  2303  00188A  0E05               	movlw	5
  2304  00188C  6FCD               	movwf	_state& (0+255),b
  2305                           
  2306                           ;main.c: 142:                     state_changed = 1;
  2307  00188E  0E01               	movlw	1
  2308  001890  6FB0               	movwf	_state_changed& (0+255),b
  2309  001892  EF81  F00A         	goto	l5512
  2310  001896                     l5596:
  2311  001896  FFFF               	dw	65535	; assembler added errata NOP
  2312                           
  2313                           ; BSR set to: 1
  2314  001898  0E05               	movlw	5
  2315  00189A  19CD               	xorwf	_state& (0+255),w,b
  2316  00189C  11CE               	iorwf	(_state+1)& (0+255),w,b
  2317  00189E  A4D8               	btfss	status,2,c
  2318  0018A0  EF54  F00C         	goto	u6961
  2319  0018A4  EF57  F00C         	goto	u6960
  2320  0018A8                     u6961:
  2321  0018A8  FFFF               	dw	65535	; assembler added errata NOP
  2322  0018AA  EFBF  F00C         	goto	l5616
  2323  0018AE                     u6960:
  2324  0018AE  FFFF               	dw	65535	; assembler added errata NOP
  2325  0018B0                     
  2326                           ; BSR set to: 1
  2327                           ;main.c: 145:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2328  0018B0  0E03               	movlw	3
  2329  0018B2  0100               	movlb	0	; () banked
  2330  0018B4  6FDD               	movwf	??_main& (0+255),b
  2331  0018B6  0EEB               	movlw	235
  2332  0018B8                     u7147:
  2333  0018B8  FFFF               	dw	65535	; errata NOP
  2334  0018BA  2EE8               	decfsz	wreg,f,c
  2335  0018BC  D7FD               	bra	u7147
  2336  0018BE  2FDD               	decfsz	??_main& (0+255),f,b
  2337  0018C0  D7FB               	bra	u7147
  2338  0018C2  D000               	nop2	
  2339  0018C4  F000               	nop	
  2340  0018C6                     
  2341                           ;main.c: 146:                 if (reach_goal(&joint_stepper, 100)) {
  2342  0018C6  0EBF               	movlw	low _joint_stepper
  2343  0018C8  6E07               	movwf	reach_goal@stepper_motor^0,c
  2344  0018CA  0E01               	movlw	high _joint_stepper
  2345  0018CC  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2346  0018CE  0E00               	movlw	0
  2347  0018D0  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2348  0018D2  0E64               	movlw	100
  2349  0018D4  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2350  0018D6  EC9C  F036         	call	_reach_goal	;wreg free
  2351  0018DA  5007               	movf	?_reach_goal^0,w,c
  2352  0018DC  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2353  0018DE  B4D8               	btfsc	status,2,c
  2354  0018E0  EF74  F00C         	goto	u6971
  2355  0018E4  EF77  F00C         	goto	u6970
  2356  0018E8                     u6971:
  2357  0018E8  FFFF               	dw	65535	; assembler added errata NOP
  2358  0018EA  EF81  F00C         	goto	l5606
  2359  0018EE                     u6970:
  2360  0018EE  FFFF               	dw	65535	; assembler added errata NOP
  2361  0018F0                     
  2362                           ;main.c: 147:                     change_direction(&joint_stepper);
  2363  0018F0  0EBF               	movlw	low _joint_stepper
  2364  0018F2  6E01               	movwf	change_direction@stepper_motor^0,c
  2365  0018F4  0E01               	movlw	high _joint_stepper
  2366  0018F6  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2367  0018F8  ECBB  F033         	call	_change_direction	;wreg free
  2368  0018FC                     
  2369                           ;main.c: 148:                     mix_counter++;
  2370  0018FC  0101               	movlb	1	; () banked
  2371  0018FE  4BAB               	infsnz	_mix_counter& (0+255),f,b
  2372  001900  2BAC               	incf	(_mix_counter+1)& (0+255),f,b
  2373  001902                     l5606:
  2374  001902  FFFF               	dw	65535	; assembler added errata NOP
  2375                           
  2376                           ;main.c: 151:                 if (mix_counter >= 20){
  2377  001904  0101               	movlb	1	; () banked
  2378  001906  BFAC               	btfsc	(_mix_counter+1)& (0+255),7,b
  2379  001908  EF8F  F00C         	goto	u6981
  2380  00190C  51AC               	movf	(_mix_counter+1)& (0+255),w,b
  2381  00190E  E10A               	bnz	u6980
  2382  001910  0E14               	movlw	20
  2383  001912  5DAB               	subwf	_mix_counter& (0+255),w,b
  2384  001914  A0D8               	btfss	status,0,c
  2385  001916  EF8F  F00C         	goto	u6981
  2386  00191A  EF92  F00C         	goto	u6980
  2387  00191E                     u6981:
  2388  00191E  FFFF               	dw	65535	; assembler added errata NOP
  2389  001920  EF81  F00A         	goto	l5512
  2390  001924                     u6980:
  2391  001924  FFFF               	dw	65535	; assembler added errata NOP
  2392  001926                     
  2393                           ; BSR set to: 1
  2394                           ;main.c: 152:                     state = 6;
  2395  001926  0E00               	movlw	0
  2396  001928  6FCE               	movwf	(_state+1)& (0+255),b
  2397  00192A  0E06               	movlw	6
  2398  00192C  6FCD               	movwf	_state& (0+255),b
  2399                           
  2400                           ;main.c: 153:                     mix_counter = 0;
  2401  00192E  0E00               	movlw	0
  2402  001930  6FAC               	movwf	(_mix_counter+1)& (0+255),b
  2403  001932  0E00               	movlw	0
  2404  001934  6FAB               	movwf	_mix_counter& (0+255),b
  2405  001936                     
  2406                           ; BSR set to: 1
  2407                           ;main.c: 154:                     init_stepper(&joint_stepper, 0, 0, 1, hex_joint_values
      +                          );
  2408  001936  0EBF               	movlw	low _joint_stepper
  2409  001938  6E01               	movwf	init_stepper@stepper_motor^0,c
  2410  00193A  0E01               	movlw	high _joint_stepper
  2411  00193C  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  2412  00193E  0E00               	movlw	0
  2413  001940  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  2414  001942  0E00               	movlw	0
  2415  001944  6E03               	movwf	init_stepper@current_coil^0,c
  2416  001946  0E00               	movlw	0
  2417  001948  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  2418  00194A  0E00               	movlw	0
  2419  00194C  6E05               	movwf	init_stepper@step_counter^0,c
  2420  00194E  0E00               	movlw	0
  2421  001950  6E08               	movwf	(init_stepper@direction+1)^0,c
  2422  001952  0E01               	movlw	1
  2423  001954  6E07               	movwf	init_stepper@direction^0,c
  2424  001956  0EE7               	movlw	low _hex_joint_values
  2425  001958  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  2426  00195A  0E01               	movlw	high _hex_joint_values
  2427  00195C  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  2428  00195E  EC5B  F037         	call	_init_stepper	;wreg free
  2429  001962                     
  2430                           ;main.c: 155:                     change_direction(&joint_stepper);
  2431  001962  0EBF               	movlw	low _joint_stepper
  2432  001964  6E01               	movwf	change_direction@stepper_motor^0,c
  2433  001966  0E01               	movlw	high _joint_stepper
  2434  001968  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2435  00196A  ECBB  F033         	call	_change_direction	;wreg free
  2436  00196E                     
  2437                           ;main.c: 156:                     change_direction(&end_effector_stepper);
  2438  00196E  0EB1               	movlw	low _end_effector_stepper
  2439  001970  6E01               	movwf	change_direction@stepper_motor^0,c
  2440  001972  0E01               	movlw	high _end_effector_stepper
  2441  001974  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2442  001976  ECBB  F033         	call	_change_direction	;wreg free
  2443  00197A  EF81  F00A         	goto	l5512
  2444  00197E                     l5616:
  2445  00197E  FFFF               	dw	65535	; assembler added errata NOP
  2446                           
  2447                           ; BSR set to: 1
  2448  001980  0E06               	movlw	6
  2449  001982  19CD               	xorwf	_state& (0+255),w,b
  2450  001984  11CE               	iorwf	(_state+1)& (0+255),w,b
  2451  001986  A4D8               	btfss	status,2,c
  2452  001988  EFC8  F00C         	goto	u6991
  2453  00198C  EFCB  F00C         	goto	u6990
  2454  001990                     u6991:
  2455  001990  FFFF               	dw	65535	; assembler added errata NOP
  2456  001992  EF4C  F00D         	goto	l5638
  2457  001996                     u6990:
  2458  001996  FFFF               	dw	65535	; assembler added errata NOP
  2459  001998                     
  2460                           ; BSR set to: 1
  2461                           ;main.c: 159:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2462  001998  0E03               	movlw	3
  2463  00199A  0100               	movlb	0	; () banked
  2464  00199C  6FDD               	movwf	??_main& (0+255),b
  2465  00199E  0EEB               	movlw	235
  2466  0019A0                     u7157:
  2467  0019A0  FFFF               	dw	65535	; errata NOP
  2468  0019A2  2EE8               	decfsz	wreg,f,c
  2469  0019A4  D7FD               	bra	u7157
  2470  0019A6  2FDD               	decfsz	??_main& (0+255),f,b
  2471  0019A8  D7FB               	bra	u7157
  2472  0019AA  D000               	nop2	
  2473  0019AC  F000               	nop	
  2474  0019AE                     
  2475                           ;main.c: 161:                 if (!end_effector_homed && reach_goal(&end_effector_steppe
      +                          r, 100)){
  2476  0019AE  0101               	movlb	1	; () banked
  2477  0019B0  51A7               	movf	_end_effector_homed& (0+255),w,b
  2478  0019B2  11A8               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  2479  0019B4  A4D8               	btfss	status,2,c
  2480  0019B6  EFDF  F00C         	goto	u7001
  2481  0019BA  EFE2  F00C         	goto	u7000
  2482  0019BE                     u7001:
  2483  0019BE  FFFF               	dw	65535	; assembler added errata NOP
  2484  0019C0  EFFD  F00C         	goto	l5626
  2485  0019C4                     u7000:
  2486  0019C4  FFFF               	dw	65535	; assembler added errata NOP
  2487  0019C6                     
  2488                           ; BSR set to: 1
  2489  0019C6  0EB1               	movlw	low _end_effector_stepper
  2490  0019C8  6E07               	movwf	reach_goal@stepper_motor^0,c
  2491  0019CA  0E01               	movlw	high _end_effector_stepper
  2492  0019CC  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2493  0019CE  0E00               	movlw	0
  2494  0019D0  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2495  0019D2  0E64               	movlw	100
  2496  0019D4  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2497  0019D6  EC9C  F036         	call	_reach_goal	;wreg free
  2498  0019DA  5007               	movf	?_reach_goal^0,w,c
  2499  0019DC  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2500  0019DE  B4D8               	btfsc	status,2,c
  2501  0019E0  EFF4  F00C         	goto	u7011
  2502  0019E4  EFF7  F00C         	goto	u7010
  2503  0019E8                     u7011:
  2504  0019E8  FFFF               	dw	65535	; assembler added errata NOP
  2505  0019EA  EFFD  F00C         	goto	l5626
  2506  0019EE                     u7010:
  2507  0019EE  FFFF               	dw	65535	; assembler added errata NOP
  2508  0019F0                     
  2509                           ;main.c: 162:                     end_effector_homed = 1;
  2510  0019F0  0E00               	movlw	0
  2511  0019F2  0101               	movlb	1	; () banked
  2512  0019F4  6FA8               	movwf	(_end_effector_homed+1)& (0+255),b
  2513  0019F6  0E01               	movlw	1
  2514  0019F8  6FA7               	movwf	_end_effector_homed& (0+255),b
  2515  0019FA                     l5626:
  2516  0019FA  FFFF               	dw	65535	; assembler added errata NOP
  2517                           
  2518                           ;main.c: 165:                 if (end_effector_homed && !joint_homed && reach_goal(&join
      +                          t_stepper, 50)){
  2519  0019FC  0101               	movlb	1	; () banked
  2520  0019FE  51A7               	movf	_end_effector_homed& (0+255),w,b
  2521  001A00  11A8               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  2522  001A02  B4D8               	btfsc	status,2,c
  2523  001A04  EF06  F00D         	goto	u7021
  2524  001A08  EF09  F00D         	goto	u7020
  2525  001A0C                     u7021:
  2526  001A0C  FFFF               	dw	65535	; assembler added errata NOP
  2527  001A0E  EF2F  F00D         	goto	l5634
  2528  001A12                     u7020:
  2529  001A12  FFFF               	dw	65535	; assembler added errata NOP
  2530  001A14                     
  2531                           ; BSR set to: 1
  2532  001A14  51A9               	movf	_joint_homed& (0+255),w,b
  2533  001A16  11AA               	iorwf	(_joint_homed+1)& (0+255),w,b
  2534  001A18  A4D8               	btfss	status,2,c
  2535  001A1A  EF11  F00D         	goto	u7031
  2536  001A1E  EF14  F00D         	goto	u7030
  2537  001A22                     u7031:
  2538  001A22  FFFF               	dw	65535	; assembler added errata NOP
  2539  001A24  EF2F  F00D         	goto	l5634
  2540  001A28                     u7030:
  2541  001A28  FFFF               	dw	65535	; assembler added errata NOP
  2542  001A2A                     
  2543                           ; BSR set to: 1
  2544  001A2A  0EBF               	movlw	low _joint_stepper
  2545  001A2C  6E07               	movwf	reach_goal@stepper_motor^0,c
  2546  001A2E  0E01               	movlw	high _joint_stepper
  2547  001A30  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2548  001A32  0E00               	movlw	0
  2549  001A34  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2550  001A36  0E32               	movlw	50
  2551  001A38  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2552  001A3A  EC9C  F036         	call	_reach_goal	;wreg free
  2553  001A3E  5007               	movf	?_reach_goal^0,w,c
  2554  001A40  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2555  001A42  B4D8               	btfsc	status,2,c
  2556  001A44  EF26  F00D         	goto	u7041
  2557  001A48  EF29  F00D         	goto	u7040
  2558  001A4C                     u7041:
  2559  001A4C  FFFF               	dw	65535	; assembler added errata NOP
  2560  001A4E  EF2F  F00D         	goto	l5634
  2561  001A52                     u7040:
  2562  001A52  FFFF               	dw	65535	; assembler added errata NOP
  2563  001A54                     
  2564                           ;main.c: 166:                     joint_homed = 1;
  2565  001A54  0E00               	movlw	0
  2566  001A56  0101               	movlb	1	; () banked
  2567  001A58  6FAA               	movwf	(_joint_homed+1)& (0+255),b
  2568  001A5A  0E01               	movlw	1
  2569  001A5C  6FA9               	movwf	_joint_homed& (0+255),b
  2570  001A5E                     l5634:
  2571  001A5E  FFFF               	dw	65535	; assembler added errata NOP
  2572                           
  2573                           ;main.c: 169:                 if (end_effector_homed * joint_homed){
  2574  001A60  C1A7  F001         	movff	_end_effector_homed,___wmul@multiplier
  2575  001A64  C1A8  F002         	movff	_end_effector_homed+1,___wmul@multiplier+1
  2576  001A68  C1A9  F003         	movff	_joint_homed,___wmul@multiplicand
  2577  001A6C  C1AA  F004         	movff	_joint_homed+1,___wmul@multiplicand+1
  2578  001A70  EC76  F033         	call	___wmul	;wreg free
  2579  001A74  5001               	movf	?___wmul^0,w,c
  2580  001A76  1002               	iorwf	(?___wmul+1)^0,w,c
  2581  001A78  B4D8               	btfsc	status,2,c
  2582  001A7A  EF41  F00D         	goto	u7051
  2583  001A7E  EF44  F00D         	goto	u7050
  2584  001A82                     u7051:
  2585  001A82  FFFF               	dw	65535	; assembler added errata NOP
  2586  001A84  EF81  F00A         	goto	l5512
  2587  001A88                     u7050:
  2588  001A88  FFFF               	dw	65535	; assembler added errata NOP
  2589  001A8A                     
  2590                           ;main.c: 170:                     state = 2;
  2591  001A8A  0E00               	movlw	0
  2592  001A8C  0101               	movlb	1	; () banked
  2593  001A8E  6FCE               	movwf	(_state+1)& (0+255),b
  2594  001A90  0E02               	movlw	2
  2595  001A92  6FCD               	movwf	_state& (0+255),b
  2596  001A94  EF81  F00A         	goto	l5512
  2597  001A98                     l5638:
  2598  001A98  FFFF               	dw	65535	; assembler added errata NOP
  2599                           
  2600                           ; BSR set to: 1
  2601  001A9A  0E07               	movlw	7
  2602  001A9C  19CD               	xorwf	_state& (0+255),w,b
  2603  001A9E  11CE               	iorwf	(_state+1)& (0+255),w,b
  2604  001AA0  A4D8               	btfss	status,2,c
  2605  001AA2  EF55  F00D         	goto	u7061
  2606  001AA6  EF58  F00D         	goto	u7060
  2607  001AAA                     u7061:
  2608  001AAA  FFFF               	dw	65535	; assembler added errata NOP
  2609  001AAC  EF3F  F00B         	goto	l5554
  2610  001AB0                     u7060:
  2611  001AB0  FFFF               	dw	65535	; assembler added errata NOP
  2612  001AB2                     
  2613                           ; BSR set to: 1
  2614                           ;main.c: 173:                 if (timer_done){
  2615  001AB2  51AD               	movf	_timer_done& (0+255),w,b
  2616  001AB4  B4D8               	btfsc	status,2,c
  2617  001AB6  EF5F  F00D         	goto	u7071
  2618  001ABA  EF62  F00D         	goto	u7070
  2619  001ABE                     u7071:
  2620  001ABE  FFFF               	dw	65535	; assembler added errata NOP
  2621  001AC0  EF73  F00D         	goto	l168
  2622  001AC4                     u7070:
  2623  001AC4  FFFF               	dw	65535	; assembler added errata NOP
  2624  001AC6                     
  2625                           ; BSR set to: 1
  2626                           ;main.c: 174:                     state_changed = 1;
  2627  001AC6  0E01               	movlw	1
  2628  001AC8  6FB0               	movwf	_state_changed& (0+255),b
  2629                           
  2630                           ;main.c: 175:                     state = 2;
  2631  001ACA  0E00               	movlw	0
  2632  001ACC  6FCE               	movwf	(_state+1)& (0+255),b
  2633  001ACE  0E02               	movlw	2
  2634  001AD0  6FCD               	movwf	_state& (0+255),b
  2635                           
  2636                           ;main.c: 176:                     move_to_trash = 1;
  2637  001AD2  0E00               	movlw	0
  2638  001AD4  6FA4               	movwf	(_move_to_trash+1)& (0+255),b
  2639  001AD6  0E01               	movlw	1
  2640  001AD8  6FA3               	movwf	_move_to_trash& (0+255),b
  2641                           
  2642                           ;main.c: 177:                     trash_counter = 0;
  2643  001ADA  0E00               	movlw	0
  2644  001ADC  6FA6               	movwf	(_trash_counter+1)& (0+255),b
  2645  001ADE  0E00               	movlw	0
  2646  001AE0  6FA5               	movwf	_trash_counter& (0+255),b
  2647                           
  2648                           ;main.c: 178:                 } else {
  2649  001AE2  EF81  F00A         	goto	l5512
  2650  001AE6                     l168:
  2651  001AE6  FFFF               	dw	65535	; assembler added errata NOP
  2652                           
  2653                           ; BSR set to: 1
  2654                           ;main.c: 179:                     if (T0CONbits.TMR0ON == 0){
  2655  001AE8  BED5               	btfsc	213,7,c	;volatile
  2656  001AEA  EF79  F00D         	goto	u7081
  2657  001AEE  EF7C  F00D         	goto	u7080
  2658  001AF2                     u7081:
  2659  001AF2  FFFF               	dw	65535	; assembler added errata NOP
  2660  001AF4  EF3F  F00B         	goto	l5554
  2661  001AF8                     u7080:
  2662  001AF8  FFFF               	dw	65535	; assembler added errata NOP
  2663  001AFA                     
  2664                           ; BSR set to: 1
  2665                           ;main.c: 180:                         init_timer_0();
  2666  001AFA  EC01  F033         	call	_init_timer_0	;wreg free
  2667  001AFE  EF81  F00A         	goto	l5512
  2668  001B02  EF3B  F000         	goto	start
  2669  001B06                     __end_of_main:
  2670                           	callstack 0
  2671                           
  2672 ;; *************** function _wait_for_zero *****************
  2673 ;; Defined at:
  2674 ;;		line 28 in file "oven.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;		None
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;		None
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      void 
  2681 ;; Registers used:
  2682 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2688 ;;      Params:         0       0       0       0       0       0       0
  2689 ;;      Locals:         0       0       0       0       0       0       0
  2690 ;;      Temps:          0       0       0       0       0       0       0
  2691 ;;      Totals:         0       0       0       0       0       0       0
  2692 ;;Total ram usage:        0 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:    3
  2695 ;; This function calls:
  2696 ;;		_get_temperature
  2697 ;; This function is called by:
  2698 ;;		_main
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           	psect	text1
  2703  006670                     __ptext1:
  2704                           	callstack 0
  2705  006670                     _wait_for_zero:
  2706                           	callstack 0
  2707  006670  FFFF               	dw	65535	; assembler added errata NOP
  2708  006672                     l368:
  2709  006672  FFFF               	dw	65535	; assembler added errata NOP
  2710  006674                     
  2711                           ;oven.c: 30:         if (get_temperature() == -55){
  2712  006674  EC63  F036         	call	_get_temperature	;wreg free
  2713  006678  0EC9               	movlw	201
  2714  00667A  0100               	movlb	0	; () banked
  2715  00667C  19D4               	xorwf	?_get_temperature& (0+255),w,b
  2716  00667E  E106               	bnz	u6691
  2717  006680  29D5               	incf	(?_get_temperature+1)& (0+255),w,b
  2718  006682  A4D8               	btfss	status,2,c
  2719  006684  EF46  F033         	goto	u6691
  2720  006688  EF49  F033         	goto	u6690
  2721  00668C                     u6691:
  2722  00668C  FFFF               	dw	65535	; assembler added errata NOP
  2723  00668E  EF39  F033         	goto	l368
  2724  006692                     u6690:
  2725  006692  FFFF               	dw	65535	; assembler added errata NOP
  2726  006694                     
  2727                           ; BSR set to: 0
  2728  006694  0012               	return		;funcret
  2729  006696  FFFF               	dw	65535	; errata NOP
  2730  006698                     __end_of_wait_for_zero:
  2731                           	callstack 0
  2732                           
  2733 ;; *************** function _get_temperature *****************
  2734 ;; Defined at:
  2735 ;;		line 22 in file "oven.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;		None
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;		None
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  2   28[BANK0 ] int 
  2742 ;; Registers used:
  2743 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2749 ;;      Params:         0       2       0       0       0       0       0
  2750 ;;      Locals:         0       0       0       0       0       0       0
  2751 ;;      Temps:          0       0       0       0       0       0       0
  2752 ;;      Totals:         0       2       0       0       0       0       0
  2753 ;;Total ram usage:        2 bytes
  2754 ;; Hardware stack levels used:    1
  2755 ;; Hardware stack levels required when called:    2
  2756 ;; This function calls:
  2757 ;;		___flmul
  2758 ;;		___fltol
  2759 ;;		___xxtofl
  2760 ;; This function is called by:
  2761 ;;		_main
  2762 ;;		_wait_for_zero
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           	psect	text2
  2767  006CC6                     __ptext2:
  2768                           	callstack 0
  2769  006CC6                     _get_temperature:
  2770                           	callstack 0
  2771  006CC6  FFFF               	dw	65535	; assembler added errata NOP
  2772  006CC8                     
  2773                           ;oven.c: 23:     ADCON0bits.GO = 1;
  2774  006CC8  84C2               	bsf	194,2,c	;volatile
  2775  006CCA                     l362:
  2776  006CCA  FFFF               	dw	65535	; assembler added errata NOP
  2777  006CCC  B4C2               	btfsc	194,2,c	;volatile
  2778  006CCE  EF6B  F036         	goto	u6371
  2779  006CD2  EF6E  F036         	goto	u6370
  2780  006CD6                     u6371:
  2781  006CD6  FFFF               	dw	65535	; assembler added errata NOP
  2782  006CD8  EF65  F036         	goto	l362
  2783  006CDC                     u6370:
  2784  006CDC  FFFF               	dw	65535	; assembler added errata NOP
  2785  006CDE                     
  2786                           ;oven.c: 25:     return (int) (ADRESH * 0.25) + -55;
  2787  006CDE  0E00               	movlw	0
  2788  006CE0  6E31               	movwf	___flmul@a^0,c
  2789  006CE2  0E00               	movlw	0
  2790  006CE4  6E32               	movwf	(___flmul@a+1)^0,c
  2791  006CE6  0E80               	movlw	128
  2792  006CE8  6E33               	movwf	(___flmul@a+2)^0,c
  2793  006CEA  0E3E               	movlw	62
  2794  006CEC  6E34               	movwf	(___flmul@a+3)^0,c
  2795  006CEE  50C4               	movf	196,w,c	;volatile
  2796  006CF0  6E1F               	movwf	___xxtofl@val^0,c
  2797  006CF2  6A20               	clrf	(___xxtofl@val+1)^0,c
  2798  006CF4  6A21               	clrf	(___xxtofl@val+2)^0,c
  2799  006CF6  6A22               	clrf	(___xxtofl@val+3)^0,c
  2800  006CF8  0E01               	movlw	1
  2801  006CFA  EC12  F01C         	call	___xxtofl
  2802  006CFE  C01F  F02D         	movff	?___xxtofl,___flmul@b
  2803  006D02  C020  F02E         	movff	?___xxtofl+1,___flmul@b+1
  2804  006D06  C021  F02F         	movff	?___xxtofl+2,___flmul@b+2
  2805  006D0A  C022  F030         	movff	?___xxtofl+3,___flmul@b+3
  2806  006D0E  EC57  F010         	call	___flmul	;wreg free
  2807  006D12  C02D  F0CA         	movff	?___flmul,___fltol@f1
  2808  006D16  C02E  F0CB         	movff	?___flmul+1,___fltol@f1+1
  2809  006D1A  C02F  F0CC         	movff	?___flmul+2,___fltol@f1+2
  2810  006D1E  C030  F0CD         	movff	?___flmul+3,___fltol@f1+3
  2811  006D22  EC59  F03D         	call	___fltol	;wreg free
  2812  006D26  0EC9               	movlw	201
  2813  006D28  0100               	movlb	0	; () banked
  2814  006D2A  25CA               	addwf	?___fltol& (0+255),w,b
  2815  006D2C  6FD4               	movwf	?_get_temperature& (0+255),b
  2816  006D2E  0EFF               	movlw	255
  2817  006D30  21CB               	addwfc	(?___fltol+1)& (0+255),w,b
  2818  006D32  6FD5               	movwf	(?_get_temperature+1)& (0+255),b
  2819  006D34                     
  2820                           ; BSR set to: 0
  2821  006D34  0012               	return		;funcret
  2822  006D36  FFFF               	dw	65535	; errata NOP
  2823  006D38                     __end_of_get_temperature:
  2824                           	callstack 0
  2825                           
  2826 ;; *************** function _state_translator_micro_to_fpga *****************
  2827 ;; Defined at:
  2828 ;;		line 22 in file "utils.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;  state           2    0[COMRAM] PTR int 
  2831 ;;		 -> state(2), 
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;  state_machin    1    4[COMRAM] unsigned char 
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      unsigned char 
  2836 ;; Registers used:
  2837 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2843 ;;      Params:         2       0       0       0       0       0       0
  2844 ;;      Locals:         1       0       0       0       0       0       0
  2845 ;;      Temps:          2       0       0       0       0       0       0
  2846 ;;      Totals:         5       0       0       0       0       0       0
  2847 ;;Total ram usage:        5 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:    1
  2850 ;; This function calls:
  2851 ;;		Nothing
  2852 ;; This function is called by:
  2853 ;;		_main
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           	psect	text3
  2858  003F72                     __ptext3:
  2859                           	callstack 0
  2860  003F72                     _state_translator_micro_to_fpga:
  2861                           	callstack 0
  2862  003F72  FFFF               	dw	65535	; assembler added errata NOP
  2863  003F74                     
  2864                           ;utils.c: 23:     unsigned char state_machine_code;;utils.c: 24:     if (*state == 2){
  2865  003F74  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2866  003F78  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2867  003F7C  0E02               	movlw	2
  2868  003F7E  18DE               	xorwf	postinc2,w,c
  2869  003F80  10DE               	iorwf	postinc2,w,c
  2870  003F82  A4D8               	btfss	status,2,c
  2871  003F84  EFC6  F01F         	goto	u6641
  2872  003F88  EFC9  F01F         	goto	u6640
  2873  003F8C                     u6641:
  2874  003F8C  FFFF               	dw	65535	; assembler added errata NOP
  2875  003F8E  EFCE  F01F         	goto	l5398
  2876  003F92                     u6640:
  2877  003F92  FFFF               	dw	65535	; assembler added errata NOP
  2878  003F94                     
  2879                           ;utils.c: 25:         state_machine_code = 0x90;
  2880  003F94  0E90               	movlw	144
  2881  003F96  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2882                           
  2883                           ;utils.c: 26:     } else if (*state == 0) {
  2884  003F98  EFFA  F01F         	goto	l255
  2885  003F9C                     l5398:
  2886  003F9C  FFFF               	dw	65535	; assembler added errata NOP
  2887  003F9E  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2888  003FA2  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2889  003FA6  50DE               	movf	postinc2,w,c
  2890  003FA8  10DE               	iorwf	postinc2,w,c
  2891  003FAA  A4D8               	btfss	status,2,c
  2892  003FAC  EFDA  F01F         	goto	u6651
  2893  003FB0  EFDD  F01F         	goto	u6650
  2894  003FB4                     u6651:
  2895  003FB4  FFFF               	dw	65535	; assembler added errata NOP
  2896  003FB6  EFE2  F01F         	goto	l5402
  2897  003FBA                     u6650:
  2898  003FBA  FFFF               	dw	65535	; assembler added errata NOP
  2899  003FBC                     
  2900                           ;utils.c: 27:         state_machine_code = 0x89;
  2901  003FBC  0E89               	movlw	137
  2902  003FBE  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2903                           
  2904                           ;utils.c: 28:     } else if (*state == 8) {
  2905  003FC0  EFFA  F01F         	goto	l255
  2906  003FC4                     l5402:
  2907  003FC4  FFFF               	dw	65535	; assembler added errata NOP
  2908  003FC6  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2909  003FCA  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2910  003FCE  0E08               	movlw	8
  2911  003FD0  18DE               	xorwf	postinc2,w,c
  2912  003FD2  10DE               	iorwf	postinc2,w,c
  2913  003FD4  A4D8               	btfss	status,2,c
  2914  003FD6  EFEF  F01F         	goto	u6661
  2915  003FDA  EFF2  F01F         	goto	u6660
  2916  003FDE                     u6661:
  2917  003FDE  FFFF               	dw	65535	; assembler added errata NOP
  2918  003FE0  EFF7  F01F         	goto	l5406
  2919  003FE4                     u6660:
  2920  003FE4  FFFF               	dw	65535	; assembler added errata NOP
  2921  003FE6                     
  2922                           ;utils.c: 29:         state_machine_code = 0xA0;
  2923  003FE6  0EA0               	movlw	160
  2924  003FE8  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2925                           
  2926                           ;utils.c: 30:     } else {
  2927  003FEA  EFFA  F01F         	goto	l255
  2928  003FEE                     l5406:
  2929  003FEE  FFFF               	dw	65535	; assembler added errata NOP
  2930                           
  2931                           ;utils.c: 31:         state_machine_code = 0x93;
  2932  003FF0  0E93               	movlw	147
  2933  003FF2  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2934  003FF4                     l255:
  2935  003FF4  FFFF               	dw	65535	; assembler added errata NOP
  2936                           
  2937                           ;utils.c: 33:     return state_machine_code;
  2938  003FF6  5005               	movf	state_translator_micro_to_fpga@state_machine_code^0,w,c
  2939  003FF8  0012               	return		;funcret
  2940  003FFA  FFFF               	dw	65535	; errata NOP
  2941  003FFC                     __end_of_state_translator_micro_to_fpga:
  2942                           	callstack 0
  2943                           
  2944 ;; *************** function _state_translator_fpga_to_micro *****************
  2945 ;; Defined at:
  2946 ;;		line 2 in file "utils.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;  state_machin    1    wreg     unsigned char 
  2949 ;;  state           2    2[COMRAM] PTR int 
  2950 ;;		 -> state(2), 
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;  state_machin    1    4[COMRAM] unsigned char 
  2953 ;; Return value:  Size  Location     Type
  2954 ;;                  1    wreg      void 
  2955 ;; Registers used:
  2956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2957 ;; Tracked objects:
  2958 ;;		On entry : 0/0
  2959 ;;		On exit  : 0/0
  2960 ;;		Unchanged: 0/0
  2961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2962 ;;      Params:         2       0       0       0       0       0       0
  2963 ;;      Locals:         1       0       0       0       0       0       0
  2964 ;;      Temps:          0       0       0       0       0       0       0
  2965 ;;      Totals:         3       0       0       0       0       0       0
  2966 ;;Total ram usage:        3 bytes
  2967 ;; Hardware stack levels used:    1
  2968 ;; Hardware stack levels required when called:    3
  2969 ;; This function calls:
  2970 ;;		_lcd_dat
  2971 ;; This function is called by:
  2972 ;;		_main
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976                           	psect	text4
  2977  00798A                     __ptext4:
  2978                           	callstack 0
  2979  00798A                     _state_translator_fpga_to_micro:
  2980                           	callstack 0
  2981  00798A  FFFF               	dw	65535	; assembler added errata NOP
  2982                           
  2983                           ;incstack = 0
  2984                           ;state_translator_fpga_to_micro@state_machine_code stored from wreg
  2985  00798C  6E05               	movwf	state_translator_fpga_to_micro@state_machine_code^0,c
  2986  00798E                     
  2987                           ;utils.c: 3:     lcd_dat(state_machine_code);
  2988  00798E  5005               	movf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  2989  007990  EC61  F033         	call	_lcd_dat
  2990  007994                     
  2991                           ;utils.c: 4:     if (state_machine_code == 0x81){
  2992  007994  0E81               	movlw	129
  2993  007996  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  2994  007998  A4D8               	btfss	status,2,c
  2995  00799A  EFD1  F03C         	goto	u6581
  2996  00799E  EFD4  F03C         	goto	u6580
  2997  0079A2                     u6581:
  2998  0079A2  FFFF               	dw	65535	; assembler added errata NOP
  2999  0079A4  EFDF  F03C         	goto	l5370
  3000  0079A8                     u6580:
  3001  0079A8  FFFF               	dw	65535	; assembler added errata NOP
  3002  0079AA                     
  3003                           ;utils.c: 5:         *state = 1;
  3004  0079AA  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3005  0079AE  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3006  0079B2  0E01               	movlw	1
  3007  0079B4  6EDE               	movwf	postinc2,c
  3008  0079B6  0E00               	movlw	0
  3009  0079B8  6EDD               	movwf	postdec2,c
  3010                           
  3011                           ;utils.c: 6:     } else if (state_machine_code == 0x82){
  3012  0079BA  EF56  F03D         	goto	l251
  3013  0079BE                     l5370:
  3014  0079BE  FFFF               	dw	65535	; assembler added errata NOP
  3015  0079C0  0E82               	movlw	130
  3016  0079C2  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3017  0079C4  A4D8               	btfss	status,2,c
  3018  0079C6  EFE7  F03C         	goto	u6591
  3019  0079CA  EFEA  F03C         	goto	u6590
  3020  0079CE                     u6591:
  3021  0079CE  FFFF               	dw	65535	; assembler added errata NOP
  3022  0079D0  EFF5  F03C         	goto	l5374
  3023  0079D4                     u6590:
  3024  0079D4  FFFF               	dw	65535	; assembler added errata NOP
  3025  0079D6                     
  3026                           ;utils.c: 7:         *state = 3;
  3027  0079D6  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3028  0079DA  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3029  0079DE  0E03               	movlw	3
  3030  0079E0  6EDE               	movwf	postinc2,c
  3031  0079E2  0E00               	movlw	0
  3032  0079E4  6EDD               	movwf	postdec2,c
  3033                           
  3034                           ;utils.c: 8:     } else if (state_machine_code == 0x84){
  3035  0079E6  EF56  F03D         	goto	l251
  3036  0079EA                     l5374:
  3037  0079EA  FFFF               	dw	65535	; assembler added errata NOP
  3038  0079EC  0E84               	movlw	132
  3039  0079EE  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3040  0079F0  A4D8               	btfss	status,2,c
  3041  0079F2  EFFD  F03C         	goto	u6601
  3042  0079F6  EF00  F03D         	goto	u6600
  3043  0079FA                     u6601:
  3044  0079FA  FFFF               	dw	65535	; assembler added errata NOP
  3045  0079FC  EF0B  F03D         	goto	l5378
  3046  007A00                     u6600:
  3047  007A00  FFFF               	dw	65535	; assembler added errata NOP
  3048  007A02                     
  3049                           ;utils.c: 9:         *state = 4;
  3050  007A02  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3051  007A06  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3052  007A0A  0E04               	movlw	4
  3053  007A0C  6EDE               	movwf	postinc2,c
  3054  007A0E  0E00               	movlw	0
  3055  007A10  6EDD               	movwf	postdec2,c
  3056                           
  3057                           ;utils.c: 10:     } else if (state_machine_code == 0x88){
  3058  007A12  EF56  F03D         	goto	l251
  3059  007A16                     l5378:
  3060  007A16  FFFF               	dw	65535	; assembler added errata NOP
  3061  007A18  0E88               	movlw	136
  3062  007A1A  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3063  007A1C  A4D8               	btfss	status,2,c
  3064  007A1E  EF13  F03D         	goto	u6611
  3065  007A22  EF16  F03D         	goto	u6610
  3066  007A26                     u6611:
  3067  007A26  FFFF               	dw	65535	; assembler added errata NOP
  3068  007A28  EF21  F03D         	goto	l5382
  3069  007A2C                     u6610:
  3070  007A2C  FFFF               	dw	65535	; assembler added errata NOP
  3071  007A2E                     
  3072                           ;utils.c: 11:         *state = 7;
  3073  007A2E  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3074  007A32  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3075  007A36  0E07               	movlw	7
  3076  007A38  6EDE               	movwf	postinc2,c
  3077  007A3A  0E00               	movlw	0
  3078  007A3C  6EDD               	movwf	postdec2,c
  3079                           
  3080                           ;utils.c: 12:     } else if (state_machine_code == 0x90){
  3081  007A3E  EF56  F03D         	goto	l251
  3082  007A42                     l5382:
  3083  007A42  FFFF               	dw	65535	; assembler added errata NOP
  3084  007A44  0E90               	movlw	144
  3085  007A46  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3086  007A48  A4D8               	btfss	status,2,c
  3087  007A4A  EF29  F03D         	goto	u6621
  3088  007A4E  EF2C  F03D         	goto	u6620
  3089  007A52                     u6621:
  3090  007A52  FFFF               	dw	65535	; assembler added errata NOP
  3091  007A54  EF37  F03D         	goto	l5386
  3092  007A58                     u6620:
  3093  007A58  FFFF               	dw	65535	; assembler added errata NOP
  3094  007A5A                     
  3095                           ;utils.c: 13:         *state = 2;
  3096  007A5A  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3097  007A5E  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3098  007A62  0E02               	movlw	2
  3099  007A64  6EDE               	movwf	postinc2,c
  3100  007A66  0E00               	movlw	0
  3101  007A68  6EDD               	movwf	postdec2,c
  3102                           
  3103                           ;utils.c: 14:     } else if (state_machine_code == 0xA0){
  3104  007A6A  EF56  F03D         	goto	l251
  3105  007A6E                     l5386:
  3106  007A6E  FFFF               	dw	65535	; assembler added errata NOP
  3107  007A70  0EA0               	movlw	160
  3108  007A72  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3109  007A74  A4D8               	btfss	status,2,c
  3110  007A76  EF3F  F03D         	goto	u6631
  3111  007A7A  EF42  F03D         	goto	u6630
  3112  007A7E                     u6631:
  3113  007A7E  FFFF               	dw	65535	; assembler added errata NOP
  3114  007A80  EF4D  F03D         	goto	l5390
  3115  007A84                     u6630:
  3116  007A84  FFFF               	dw	65535	; assembler added errata NOP
  3117  007A86                     
  3118                           ;utils.c: 15:         *state = 8;
  3119  007A86  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3120  007A8A  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3121  007A8E  0E08               	movlw	8
  3122  007A90  6EDE               	movwf	postinc2,c
  3123  007A92  0E00               	movlw	0
  3124  007A94  6EDD               	movwf	postdec2,c
  3125                           
  3126                           ;utils.c: 16:     } else {
  3127  007A96  EF56  F03D         	goto	l251
  3128  007A9A                     l5390:
  3129  007A9A  FFFF               	dw	65535	; assembler added errata NOP
  3130                           
  3131                           ;utils.c: 17:         *state = 0;
  3132  007A9C  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3133  007AA0  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3134  007AA4  0E00               	movlw	0
  3135  007AA6  6EDE               	movwf	postinc2,c
  3136  007AA8  0E00               	movlw	0
  3137  007AAA  6EDD               	movwf	postdec2,c
  3138  007AAC                     l251:
  3139  007AAC  FFFF               	dw	65535	; assembler added errata NOP
  3140  007AAE  0012               	return		;funcret
  3141  007AB0  FFFF               	dw	65535	; errata NOP
  3142  007AB2                     __end_of_state_translator_fpga_to_micro:
  3143                           	callstack 0
  3144                           
  3145 ;; *************** function _snprintf *****************
  3146 ;; Defined at:
  3147 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\snprintf.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;  s               2   10[BANK0 ] PTR unsigned char 
  3150 ;;		 -> main@greet_str(160), 
  3151 ;;  n               2   12[BANK0 ] unsigned int 
  3152 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  3153 ;;		 -> STR_10(3), 
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;  ap              2   20[BANK0 ] PTR void [1]
  3156 ;;		 -> ?_snprintf(2), 
  3157 ;;  ret             2    0        int 
  3158 ;; Return value:  Size  Location     Type
  3159 ;;                  2   10[BANK0 ] int 
  3160 ;; Registers used:
  3161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3167 ;;      Params:         0       8       0       0       0       0       0
  3168 ;;      Locals:         0       4       0       0       0       0       0
  3169 ;;      Temps:          0       0       0       0       0       0       0
  3170 ;;      Totals:         0      12       0       0       0       0       0
  3171 ;;Total ram usage:       12 bytes
  3172 ;; Hardware stack levels used:    1
  3173 ;; Hardware stack levels required when called:    9
  3174 ;; This function calls:
  3175 ;;		_vsnprintf
  3176 ;; This function is called by:
  3177 ;;		_main
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           	psect	text5
  3182  006742                     __ptext5:
  3183                           	callstack 0
  3184  006742                     _snprintf:
  3185                           	callstack 0
  3186  006742  FFFF               	dw	65535	; assembler added errata NOP
  3187  006744  0EC8               	movlw	low (?_snprintf+6)
  3188  006746  0100               	movlb	0	; () banked
  3189  006748  6FCC               	movwf	snprintf@ap& (0+255),b
  3190  00674A  0E00               	movlw	high (?_snprintf+6)
  3191  00674C  6FCD               	movwf	(snprintf@ap+1)& (0+255),b
  3192  00674E                     
  3193                           ; BSR set to: 0
  3194  00674E  C0C2  F070         	movff	snprintf@s,vsnprintf@s
  3195  006752  C0C3  F071         	movff	snprintf@s+1,vsnprintf@s+1
  3196  006756  C0C4  F072         	movff	snprintf@n,vsnprintf@n
  3197  00675A  C0C5  F073         	movff	snprintf@n+1,vsnprintf@n+1
  3198  00675E  C0C6  F074         	movff	snprintf@fmt,vsnprintf@fmt
  3199  006762  C0C7  F075         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  3200  006766  0ECC               	movlw	low snprintf@ap
  3201  006768  6E76               	movwf	vsnprintf@ap^0,c
  3202  00676A  0E00               	movlw	high snprintf@ap
  3203  00676C  6E77               	movwf	(vsnprintf@ap+1)^0,c
  3204  00676E  ECF5  F03D         	call	_vsnprintf	;wreg free
  3205  006772  0012               	return		;funcret
  3206  006774  FFFF               	dw	65535	; errata NOP
  3207  006776                     __end_of_snprintf:
  3208                           	callstack 0
  3209                           
  3210 ;; *************** function _vsnprintf *****************
  3211 ;; Defined at:
  3212 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_vsnprintf.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;  s               2  111[COMRAM] PTR unsigned char 
  3215 ;;		 -> main@greet_str(160), 
  3216 ;;  n               2  113[COMRAM] unsigned int 
  3217 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  3218 ;;		 -> STR_10(3), 
  3219 ;;  ap              2  117[COMRAM] PTR PTR void 
  3220 ;;		 -> snprintf@ap(2), 
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;  f               6    4[BANK0 ] struct _IO_FILE
  3223 ;;  cnt             2    2[BANK0 ] int 
  3224 ;; Return value:  Size  Location     Type
  3225 ;;                  2  111[COMRAM] int 
  3226 ;; Registers used:
  3227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3228 ;; Tracked objects:
  3229 ;;		On entry : 0/0
  3230 ;;		On exit  : 0/0
  3231 ;;		Unchanged: 0/0
  3232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3233 ;;      Params:         8       0       0       0       0       0       0
  3234 ;;      Locals:         0      10       0       0       0       0       0
  3235 ;;      Temps:          4       0       0       0       0       0       0
  3236 ;;      Totals:        12      10       0       0       0       0       0
  3237 ;;Total ram usage:       22 bytes
  3238 ;; Hardware stack levels used:    1
  3239 ;; Hardware stack levels required when called:    8
  3240 ;; This function calls:
  3241 ;;		_vfprintf
  3242 ;; This function is called by:
  3243 ;;		_snprintf
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247                           	psect	text6
  3248  007BEA                     __ptext6:
  3249                           	callstack 0
  3250  007BEA                     _vsnprintf:
  3251                           	callstack 0
  3252  007BEA  FFFF               	dw	65535	; assembler added errata NOP
  3253  007BEC  0E80               	movlw	128
  3254  007BEE  5C73               	subwf	(vsnprintf@n+1)^0,w,c
  3255  007BF0  A0D8               	btfss	status,0,c
  3256  007BF2  EFFD  F03D         	goto	u6481
  3257  007BF6  EF00  F03E         	goto	u6480
  3258  007BFA                     u6481:
  3259  007BFA  FFFF               	dw	65535	; assembler added errata NOP
  3260  007BFC  EF0A  F03E         	goto	l5216
  3261  007C00                     u6480:
  3262  007C00  FFFF               	dw	65535	; assembler added errata NOP
  3263  007C02  0E00               	movlw	0
  3264  007C04  0100               	movlb	0	; () banked
  3265  007C06  6F8D               	movwf	(_errno+1)& (0+255),b
  3266  007C08  0E4B               	movlw	75
  3267  007C0A  6F8C               	movwf	_errno& (0+255),b
  3268  007C0C                     
  3269                           ; BSR set to: 0
  3270  007C0C  6870               	setf	?_vsnprintf^0,c
  3271  007C0E  6871               	setf	(?_vsnprintf+1)^0,c
  3272  007C10  EF8F  F03E         	goto	l1088
  3273  007C14                     l5216:
  3274  007C14  FFFF               	dw	65535	; assembler added errata NOP
  3275  007C16  C070  F0BC         	movff	vsnprintf@s,vsnprintf@f
  3276  007C1A  C071  F0BD         	movff	vsnprintf@s+1,vsnprintf@f+1
  3277  007C1E  5073               	movf	(vsnprintf@n+1)^0,w,c
  3278  007C20  E10A               	bnz	u6490
  3279  007C22  0E02               	movlw	2
  3280  007C24  5C72               	subwf	vsnprintf@n^0,w,c
  3281  007C26  A0D8               	btfss	status,0,c
  3282  007C28  EF18  F03E         	goto	u6491
  3283  007C2C  EF1B  F03E         	goto	u6490
  3284  007C30                     u6491:
  3285  007C30  FFFF               	dw	65535	; assembler added errata NOP
  3286  007C32  EF29  F03E         	goto	l5222
  3287  007C36                     u6490:
  3288  007C36  FFFF               	dw	65535	; assembler added errata NOP
  3289  007C38  0EFF               	movlw	255
  3290  007C3A  2472               	addwf	vsnprintf@n^0,w,c
  3291  007C3C  0100               	movlb	0	; () banked
  3292  007C3E  6FC0               	movwf	(vsnprintf@f+4)& (0+255),b
  3293  007C40  0EFF               	movlw	255
  3294  007C42  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  3295  007C44  6FC1               	movwf	(vsnprintf@f+5)& (0+255),b
  3296  007C46                     
  3297                           ; BSR set to: 0
  3298  007C46  0E00               	movlw	0
  3299  007C48  6FBF               	movwf	(vsnprintf@f+3)& (0+255),b
  3300  007C4A  0E00               	movlw	0
  3301  007C4C  6FBE               	movwf	(vsnprintf@f+2)& (0+255),b
  3302  007C4E  EF33  F03E         	goto	l5224
  3303  007C52                     l5222:
  3304  007C52  FFFF               	dw	65535	; assembler added errata NOP
  3305  007C54  0E00               	movlw	0
  3306  007C56  0100               	movlb	0	; () banked
  3307  007C58  6FC1               	movwf	(vsnprintf@f+5)& (0+255),b
  3308  007C5A  0E01               	movlw	1
  3309  007C5C  6FC0               	movwf	(vsnprintf@f+4)& (0+255),b
  3310  007C5E  0E00               	movlw	0
  3311  007C60  6FBF               	movwf	(vsnprintf@f+3)& (0+255),b
  3312  007C62  0E01               	movlw	1
  3313  007C64  6FBE               	movwf	(vsnprintf@f+2)& (0+255),b
  3314  007C66                     l5224:
  3315  007C66  FFFF               	dw	65535	; assembler added errata NOP
  3316                           
  3317                           ; BSR set to: 0
  3318  007C68  0EBC               	movlw	low vsnprintf@f
  3319  007C6A  6E68               	movwf	vfprintf@fp^0,c
  3320  007C6C  0E00               	movlw	high vsnprintf@f
  3321  007C6E  6E69               	movwf	(vfprintf@fp+1)^0,c
  3322  007C70  C074  F06A         	movff	vsnprintf@fmt,vfprintf@fmt
  3323  007C74  C075  F06B         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  3324  007C78  C076  F06C         	movff	vsnprintf@ap,vfprintf@ap
  3325  007C7C  C077  F06D         	movff	vsnprintf@ap+1,vfprintf@ap+1
  3326  007C80  EC2B  F036         	call	_vfprintf	;wreg free
  3327  007C84  C068  F0BA         	movff	?_vfprintf,vsnprintf@cnt
  3328  007C88  C069  F0BB         	movff	?_vfprintf+1,vsnprintf@cnt+1
  3329  007C8C  5072               	movf	vsnprintf@n^0,w,c
  3330  007C8E  1073               	iorwf	(vsnprintf@n+1)^0,w,c
  3331  007C90  B4D8               	btfsc	status,2,c
  3332  007C92  EF4D  F03E         	goto	u6501
  3333  007C96  EF50  F03E         	goto	u6500
  3334  007C9A                     u6501:
  3335  007C9A  FFFF               	dw	65535	; assembler added errata NOP
  3336  007C9C  EF8A  F03E         	goto	l5236
  3337  007CA0                     u6500:
  3338  007CA0  FFFF               	dw	65535	; assembler added errata NOP
  3339  007CA2  0100               	movlb	0	; () banked
  3340  007CA4  BFBB               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  3341  007CA6  EF57  F03E         	goto	u6511
  3342  007CAA  EF5A  F03E         	goto	u6510
  3343  007CAE                     u6511:
  3344  007CAE  FFFF               	dw	65535	; assembler added errata NOP
  3345  007CB0  EF8A  F03E         	goto	l5236
  3346  007CB4                     u6510:
  3347  007CB4  FFFF               	dw	65535	; assembler added errata NOP
  3348  007CB6                     
  3349                           ; BSR set to: 0
  3350  007CB6  0EFF               	movlw	255
  3351  007CB8  6E78               	movwf	??_vsnprintf^0,c
  3352  007CBA  0EFF               	movlw	255
  3353  007CBC  6E79               	movwf	(??_vsnprintf+1)^0,c
  3354  007CBE  C072  F07A         	movff	vsnprintf@n,??_vsnprintf+2
  3355  007CC2  C073  F07B         	movff	vsnprintf@n+1,??_vsnprintf+3
  3356  007CC6  5078               	movf	??_vsnprintf^0,w,c
  3357  007CC8  267A               	addwf	(??_vsnprintf+2)^0,f,c
  3358  007CCA  5079               	movf	(??_vsnprintf+1)^0,w,c
  3359  007CCC  227B               	addwfc	(??_vsnprintf+3)^0,f,c
  3360  007CCE  507A               	movf	(??_vsnprintf+2)^0,w,c
  3361  007CD0  5DBA               	subwf	vsnprintf@cnt& (0+255),w,b
  3362  007CD2  507B               	movf	(??_vsnprintf+3)^0,w,c
  3363  007CD4  59BB               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  3364  007CD6  A0D8               	btfss	status,0,c
  3365  007CD8  EF70  F03E         	goto	u6521
  3366  007CDC  EF73  F03E         	goto	u6520
  3367  007CE0                     u6521:
  3368  007CE0  FFFF               	dw	65535	; assembler added errata NOP
  3369  007CE2  EF7C  F03E         	goto	l1093
  3370  007CE6                     u6520:
  3371  007CE6  FFFF               	dw	65535	; assembler added errata NOP
  3372  007CE8                     
  3373                           ; BSR set to: 0
  3374  007CE8  0EFF               	movlw	255
  3375  007CEA  2472               	addwf	vsnprintf@n^0,w,c
  3376  007CEC  6FB8               	movwf	_vsnprintf$1550& (0+255),b
  3377  007CEE  0EFF               	movlw	255
  3378  007CF0  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  3379  007CF2  6FB9               	movwf	(_vsnprintf$1550+1)& (0+255),b
  3380  007CF4  EF81  F03E         	goto	l5234
  3381  007CF8                     l1093:
  3382  007CF8  FFFF               	dw	65535	; assembler added errata NOP
  3383                           
  3384                           ; BSR set to: 0
  3385  007CFA  C0BA  F0B8         	movff	vsnprintf@cnt,_vsnprintf$1550
  3386  007CFE  C0BB  F0B9         	movff	vsnprintf@cnt+1,_vsnprintf$1550+1
  3387  007D02                     l5234:
  3388  007D02  FFFF               	dw	65535	; assembler added errata NOP
  3389                           
  3390                           ; BSR set to: 0
  3391  007D04  51B8               	movf	_vsnprintf$1550& (0+255),w,b
  3392  007D06  2470               	addwf	vsnprintf@s^0,w,c
  3393  007D08  6ED9               	movwf	fsr2l,c
  3394  007D0A  51B9               	movf	(_vsnprintf$1550+1)& (0+255),w,b
  3395  007D0C  2071               	addwfc	(vsnprintf@s+1)^0,w,c
  3396  007D0E  6EDA               	movwf	fsr2h,c
  3397  007D10  0E00               	movlw	0
  3398  007D12  6EDF               	movwf	indf2,c
  3399  007D14                     l5236:
  3400  007D14  FFFF               	dw	65535	; assembler added errata NOP
  3401  007D16  C0BA  F070         	movff	vsnprintf@cnt,?_vsnprintf
  3402  007D1A  C0BB  F071         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  3403  007D1E                     l1088:
  3404  007D1E  FFFF               	dw	65535	; assembler added errata NOP
  3405  007D20  0012               	return		;funcret
  3406  007D22  FFFF               	dw	65535	; errata NOP
  3407  007D24                     __end_of_vsnprintf:
  3408                           	callstack 0
  3409                           
  3410 ;; *************** function _vfprintf *****************
  3411 ;; Defined at:
  3412 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;  fp              2  103[COMRAM] PTR struct _IO_FILE
  3415 ;;		 -> vsnprintf@f(6), 
  3416 ;;  fmt             2  105[COMRAM] PTR const unsigned char 
  3417 ;;		 -> STR_10(3), 
  3418 ;;  ap              2  107[COMRAM] PTR PTR void 
  3419 ;;		 -> snprintf@ap(2), 
  3420 ;; Auto vars:     Size  Location     Type
  3421 ;;  cfmt            2  109[COMRAM] PTR unsigned char 
  3422 ;;		 -> STR_10(3), 
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  2  103[COMRAM] int 
  3425 ;; Registers used:
  3426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3432 ;;      Params:         6       0       0       0       0       0       0
  3433 ;;      Locals:         2       0       0       0       0       0       0
  3434 ;;      Temps:          0       0       0       0       0       0       0
  3435 ;;      Totals:         8       0       0       0       0       0       0
  3436 ;;Total ram usage:        8 bytes
  3437 ;; Hardware stack levels used:    1
  3438 ;; Hardware stack levels required when called:    7
  3439 ;; This function calls:
  3440 ;;		_vfpfcnvrt
  3441 ;; This function is called by:
  3442 ;;		_vsnprintf
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           	psect	text7
  3447  006C56                     __ptext7:
  3448                           	callstack 0
  3449  006C56                     _vfprintf:
  3450                           	callstack 0
  3451  006C56  FFFF               	dw	65535	; assembler added errata NOP
  3452  006C58                     
  3453                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3454  006C58  C06A  F06E         	movff	vfprintf@fmt,vfprintf@cfmt
  3455  006C5C  C06B  F06F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3456  006C60                     
  3457                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  3458  006C60  0E00               	movlw	0
  3459  006C62  0100               	movlb	0	; () banked
  3460  006C64  6F85               	movwf	(_nout+1)& (0+255),b
  3461  006C66  0E00               	movlw	0
  3462  006C68  6F84               	movwf	_nout& (0+255),b
  3463                           
  3464                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  3465  006C6A  EF4B  F036         	goto	l5062
  3466  006C6E                     l5060:
  3467  006C6E  FFFF               	dw	65535	; assembler added errata NOP
  3468                           
  3469                           ; BSR set to: 0
  3470                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3471  006C70  C068  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  3472  006C74  C069  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3473  006C78  0E6E               	movlw	low vfprintf@cfmt
  3474  006C7A  6E45               	movwf	vfpfcnvrt@fmt^0,c
  3475  006C7C  0E00               	movlw	high vfprintf@cfmt
  3476  006C7E  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3477  006C80  C06C  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  3478  006C84  C06D  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3479  006C88  EC3D  F000         	call	_vfpfcnvrt	;wreg free
  3480  006C8C  5043               	movf	?_vfpfcnvrt^0,w,c
  3481  006C8E  0100               	movlb	0	; () banked
  3482  006C90  2784               	addwf	_nout& (0+255),f,b
  3483  006C92  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  3484  006C94  2385               	addwfc	(_nout+1)& (0+255),f,b
  3485  006C96                     l5062:
  3486  006C96  FFFF               	dw	65535	; assembler added errata NOP
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  3490  006C98  C06E  FFF6         	movff	vfprintf@cfmt,tblptrl
  3491  006C9C  C06F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3492  006CA0                     	if	0	;tblptru may be non-zero
  3493  006CA0                     	endif
  3494  006CA0                     	if	0	;tblptru may be non-zero
  3495  006CA0                     	endif
  3496  006CA0  0008               	tblrd		*
  3497  006CA2  FFFF               	dw	65535	; errata NOP
  3498  006CA4  50F5               	movf	tablat,w,c
  3499  006CA6  0900               	iorlw	0
  3500  006CA8  A4D8               	btfss	status,2,c
  3501  006CAA  EF59  F036         	goto	u6271
  3502  006CAE  EF5C  F036         	goto	u6270
  3503  006CB2                     u6271:
  3504  006CB2  FFFF               	dw	65535	; assembler added errata NOP
  3505  006CB4  EF37  F036         	goto	l5060
  3506  006CB8                     u6270:
  3507  006CB8  FFFF               	dw	65535	; assembler added errata NOP
  3508  006CBA                     
  3509                           ; BSR set to: 0
  3510                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  3511  006CBA  C084  F068         	movff	_nout,?_vfprintf
  3512  006CBE  C085  F069         	movff	_nout+1,?_vfprintf+1
  3513  006CC2                     
  3514                           ; BSR set to: 0
  3515  006CC2  0012               	return		;funcret
  3516  006CC4  FFFF               	dw	65535	; errata NOP
  3517  006CC6                     __end_of_vfprintf:
  3518                           	callstack 0
  3519                           
  3520 ;; *************** function _vfpfcnvrt *****************
  3521 ;; Defined at:
  3522 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  3525 ;;		 -> vsnprintf@f(6), 
  3526 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  3527 ;;		 -> vfprintf@cfmt(2), 
  3528 ;;  ap              2   70[COMRAM] PTR PTR void 
  3529 ;;		 -> snprintf@ap(2), 
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;  llu             8   95[COMRAM] unsigned long long 
  3532 ;;  ll              8   84[COMRAM] long long 
  3533 ;;  f               4    0        long long 
  3534 ;;  ct              3    0        unsigned char [3]
  3535 ;;  vp              2   92[COMRAM] PTR void 
  3536 ;;		 -> ?_snprintf(2), STR_8(50), STR_7(9), STR_6(7), 
  3537 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  3538 ;;		 -> STR_1(49), 
  3539 ;;  done            2   78[COMRAM] int 
  3540 ;;  cp              2   76[COMRAM] PTR unsigned char 
  3541 ;;		 -> ?_snprintf(2), STR_8(50), STR_7(9), STR_6(7), 
  3542 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  3543 ;;		 -> STR_1(49), 
  3544 ;;  i               2    0        int 
  3545 ;;  c               1   94[COMRAM] unsigned char 
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  2   66[COMRAM] int 
  3548 ;; Registers used:
  3549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3555 ;;      Params:         6       0       0       0       0       0       0
  3556 ;;      Locals:        27       0       0       0       0       0       0
  3557 ;;      Temps:          4       0       0       0       0       0       0
  3558 ;;      Totals:        37       0       0       0       0       0       0
  3559 ;;Total ram usage:       37 bytes
  3560 ;; Hardware stack levels used:    1
  3561 ;; Hardware stack levels required when called:    6
  3562 ;; This function calls:
  3563 ;;		_atoi
  3564 ;;		_ctoa
  3565 ;;		_dtoa
  3566 ;;		_fputc
  3567 ;;		_isdigit
  3568 ;;		_otoa
  3569 ;;		_stoa
  3570 ;;		_strncmp
  3571 ;;		_utoa
  3572 ;;		_xtoa
  3573 ;; This function is called by:
  3574 ;;		_vfprintf
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578                           	psect	text8
  3579  00007A                     __ptext8:
  3580                           	callstack 0
  3581  00007A                     _vfpfcnvrt:
  3582                           	callstack 0
  3583  00007A  FFFF               	dw	65535	; assembler added errata NOP
  3584  00007C                     
  3585                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  3586  00007C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3587  000080  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3588  000084  CFDE FFF6          	movff	postinc2,tblptrl
  3589  000088  CFDD FFF7          	movff	postdec2,tblptrh
  3590  00008C                     	if	0	;tblptru may be non-zero
  3591  00008C                     	endif
  3592  00008C                     	if	0	;tblptru may be non-zero
  3593  00008C                     	endif
  3594  00008C  0008               	tblrd		*
  3595  00008E  FFFF               	dw	65535	; errata NOP
  3596  000090  50F5               	movf	tablat,w,c
  3597  000092  0A25               	xorlw	37
  3598  000094  A4D8               	btfss	status,2,c
  3599  000096  EF4F  F000         	goto	u5131
  3600  00009A  EF52  F000         	goto	u5130
  3601  00009E                     u5131:
  3602  00009E  FFFF               	dw	65535	; assembler added errata NOP
  3603  0000A0  EF11  F00A         	goto	l4646
  3604  0000A4                     u5130:
  3605  0000A4  FFFF               	dw	65535	; assembler added errata NOP
  3606  0000A6                     
  3607                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  3608  0000A6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3609  0000AA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3610  0000AE  2ADE               	incf	postinc2,f,c
  3611  0000B0  0E00               	movlw	0
  3612  0000B2  22DD               	addwfc	postdec2,f,c
  3613  0000B4                     
  3614                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  3615  0000B4  0E00               	movlw	0
  3616  0000B6  0100               	movlb	0	; () banked
  3617  0000B8  6F87               	movwf	(_width+1)& (0+255),b
  3618  0000BA  0E00               	movlw	0
  3619  0000BC  6F86               	movwf	_width& (0+255),b
  3620  0000BE  C086  F08A         	movff	_width,_flags
  3621  0000C2  C087  F08B         	movff	_width+1,_flags+1
  3622  0000C6                     
  3623                           ; BSR set to: 0
  3624                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  3625  0000C6  6988               	setf	_prec& (0+255),b
  3626  0000C8  6989               	setf	(_prec+1)& (0+255),b
  3627  0000CA                     
  3628                           ; BSR set to: 0
  3629                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  3630  0000CA  0E00               	movlw	0
  3631  0000CC  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  3632  0000CE  0E00               	movlw	0
  3633  0000D0  6E4F               	movwf	vfpfcnvrt@done^0,c
  3634                           
  3635                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  3636  0000D2  EFC0  F000         	goto	l4364
  3637  0000D6                     l4338:
  3638  0000D6  FFFF               	dw	65535	; assembler added errata NOP
  3639                           
  3640                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  3641  0000D8  0100               	movlb	0	; () banked
  3642  0000DA  818A               	bsf	_flags& (0+255),0,b
  3643  0000DC                     l4340:
  3644  0000DC  FFFF               	dw	65535	; assembler added errata NOP
  3645                           
  3646                           ; BSR set to: 0
  3647                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  3648  0000DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3649  0000E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3650  0000E6  2ADE               	incf	postinc2,f,c
  3651  0000E8  0E00               	movlw	0
  3652  0000EA  22DD               	addwfc	postdec2,f,c
  3653                           
  3654                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  3655  0000EC  EFC0  F000         	goto	l4364
  3656  0000F0                     l4342:
  3657  0000F0  FFFF               	dw	65535	; assembler added errata NOP
  3658                           
  3659                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  3660  0000F2  0100               	movlb	0	; () banked
  3661  0000F4  838A               	bsf	_flags& (0+255),1,b
  3662  0000F6  EF6E  F000         	goto	l4340
  3663  0000FA                     l4346:
  3664  0000FA  FFFF               	dw	65535	; assembler added errata NOP
  3665                           
  3666                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  3667  0000FC  0100               	movlb	0	; () banked
  3668  0000FE  858A               	bsf	_flags& (0+255),2,b
  3669  000100  EF6E  F000         	goto	l4340
  3670  000104                     l4350:
  3671  000104  FFFF               	dw	65535	; assembler added errata NOP
  3672                           
  3673                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  3674  000106  0100               	movlb	0	; () banked
  3675  000108  878A               	bsf	_flags& (0+255),3,b
  3676  00010A  EF6E  F000         	goto	l4340
  3677  00010E                     l4354:
  3678  00010E  FFFF               	dw	65535	; assembler added errata NOP
  3679                           
  3680                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  3681  000110  0100               	movlb	0	; () banked
  3682  000112  898A               	bsf	_flags& (0+255),4,b
  3683  000114  EF6E  F000         	goto	l4340
  3684  000118                     l4358:
  3685  000118  FFFF               	dw	65535	; assembler added errata NOP
  3686                           
  3687                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  3688  00011A  0E00               	movlw	0
  3689  00011C  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  3690  00011E  0E01               	movlw	1
  3691  000120  6E4F               	movwf	vfpfcnvrt@done^0,c
  3692                           
  3693                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  3694  000122  EFC0  F000         	goto	l4364
  3695  000126                     l4362:
  3696  000126  FFFF               	dw	65535	; assembler added errata NOP
  3697  000128  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3698  00012C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3699  000130  CFDE FFF6          	movff	postinc2,tblptrl
  3700  000134  CFDD FFF7          	movff	postdec2,tblptrh
  3701  000138                     	if	0	;tblptru may be non-zero
  3702  000138                     	endif
  3703  000138                     	if	0	;tblptru may be non-zero
  3704  000138                     	endif
  3705  000138  0008               	tblrd		*
  3706  00013A  FFFF               	dw	65535	; errata NOP
  3707  00013C  50F5               	movf	tablat,w,c
  3708  00013E  6E49               	movwf	??_vfpfcnvrt^0,c
  3709  000140  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  3710                           
  3711                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3712                           ; Switch size 1, requested type "simple"
  3713                           ; Number of cases is 1, Range of values is 0 to 0
  3714                           ; switch strategies available:
  3715                           ; Name         Instructions Cycles
  3716                           ; simple_byte            4     3 (average)
  3717                           ;	Chosen strategy is simple_byte
  3718  000142  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3719  000144  0A00               	xorlw	0	; case 0
  3720  000146  B4D8               	btfsc	status,2,c
  3721  000148  EFA8  F000         	goto	l5712
  3722  00014C  EF8C  F000         	goto	l4358
  3723  000150                     l5712:
  3724  000150  FFFF               	dw	65535	; assembler added errata NOP
  3725                           
  3726                           ; Switch size 1, requested type "simple"
  3727                           ; Number of cases is 5, Range of values is 32 to 48
  3728                           ; switch strategies available:
  3729                           ; Name         Instructions Cycles
  3730                           ; simple_byte           16     9 (average)
  3731                           ;	Chosen strategy is simple_byte
  3732  000152  5049               	movf	??_vfpfcnvrt^0,w,c
  3733  000154  0A20               	xorlw	32	; case 32
  3734  000156  B4D8               	btfsc	status,2,c
  3735  000158  EF82  F000         	goto	l4350
  3736  00015C  0A03               	xorlw	3	; case 35
  3737  00015E  B4D8               	btfsc	status,2,c
  3738  000160  EF87  F000         	goto	l4354
  3739  000164  0A08               	xorlw	8	; case 43
  3740  000166  B4D8               	btfsc	status,2,c
  3741  000168  EF7D  F000         	goto	l4346
  3742  00016C  0A06               	xorlw	6	; case 45
  3743  00016E  B4D8               	btfsc	status,2,c
  3744  000170  EF6B  F000         	goto	l4338
  3745  000174  0A1D               	xorlw	29	; case 48
  3746  000176  B4D8               	btfsc	status,2,c
  3747  000178  EF78  F000         	goto	l4342
  3748  00017C  EF8C  F000         	goto	l4358
  3749  000180                     l4364:
  3750  000180  FFFF               	dw	65535	; assembler added errata NOP
  3751                           
  3752                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  3753  000182  504F               	movf	vfpfcnvrt@done^0,w,c
  3754  000184  1050               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  3755  000186  B4D8               	btfsc	status,2,c
  3756  000188  EFC8  F000         	goto	u5141
  3757  00018C  EFCB  F000         	goto	u5140
  3758  000190                     u5141:
  3759  000190  FFFF               	dw	65535	; assembler added errata NOP
  3760  000192  EF93  F000         	goto	l4362
  3761  000196                     u5140:
  3762  000196  FFFF               	dw	65535	; assembler added errata NOP
  3763  000198                     
  3764                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  3765  000198  0100               	movlb	0	; () banked
  3766  00019A  A18A               	btfss	_flags& (0+255),0,b
  3767  00019C  EFD2  F000         	goto	u5151
  3768  0001A0  EFD5  F000         	goto	u5150
  3769  0001A4                     u5151:
  3770  0001A4  FFFF               	dw	65535	; assembler added errata NOP
  3771  0001A6  EFD7  F000         	goto	l4368
  3772  0001AA                     u5150:
  3773  0001AA  FFFF               	dw	65535	; assembler added errata NOP
  3774  0001AC                     
  3775                           ; BSR set to: 0
  3776                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  3777  0001AC  938A               	bcf	_flags& (0+255),1,b
  3778  0001AE                     l4368:
  3779  0001AE  FFFF               	dw	65535	; assembler added errata NOP
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  3783  0001B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3784  0001B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3785  0001B8  CFDE FFF6          	movff	postinc2,tblptrl
  3786  0001BC  CFDD FFF7          	movff	postdec2,tblptrh
  3787  0001C0                     	if	0	;tblptru may be non-zero
  3788  0001C0                     	endif
  3789  0001C0                     	if	0	;tblptru may be non-zero
  3790  0001C0                     	endif
  3791  0001C0  0008               	tblrd		*
  3792  0001C2  FFFF               	dw	65535	; errata NOP
  3793  0001C4  50F5               	movf	tablat,w,c
  3794  0001C6  0A2A               	xorlw	42
  3795  0001C8  A4D8               	btfss	status,2,c
  3796  0001CA  EFE9  F000         	goto	u5161
  3797  0001CE  EFEC  F000         	goto	u5160
  3798  0001D2                     u5161:
  3799  0001D2  FFFF               	dw	65535	; assembler added errata NOP
  3800  0001D4  EF18  F001         	goto	l4376
  3801  0001D8                     u5160:
  3802  0001D8  FFFF               	dw	65535	; assembler added errata NOP
  3803  0001DA                     
  3804                           ; BSR set to: 0
  3805                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  3806  0001DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3807  0001DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3808  0001E2  2ADE               	incf	postinc2,f,c
  3809  0001E4  0E00               	movlw	0
  3810  0001E6  22DD               	addwfc	postdec2,f,c
  3811                           
  3812                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3813  0001E8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3814  0001EC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3815  0001F0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3816  0001F4  0E02               	movlw	2
  3817  0001F6  26DE               	addwf	postinc2,f,c
  3818  0001F8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3819  0001FC  0E00               	movlw	0
  3820  0001FE  22DD               	addwfc	postdec2,f,c
  3821  000200  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3822  000204  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3823  000208  CFDE F086          	movff	postinc2,_width
  3824  00020C  CFDD F087          	movff	postdec2,_width+1
  3825  000210                     
  3826                           ; BSR set to: 0
  3827                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  3828  000210  BF87               	btfsc	(_width+1)& (0+255),7,b
  3829  000212  EF10  F001         	goto	u5170
  3830  000216  EF0D  F001         	goto	u5171
  3831  00021A                     u5171:
  3832  00021A  FFFF               	dw	65535	; assembler added errata NOP
  3833  00021C  EF63  F001         	goto	l4386
  3834  000220                     u5170:
  3835  000220  FFFF               	dw	65535	; assembler added errata NOP
  3836  000222                     
  3837                           ; BSR set to: 0
  3838                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  3839  000222  818A               	bsf	_flags& (0+255),0,b
  3840                           
  3841                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  3842  000224  6D86               	negf	_width& (0+255),b
  3843  000226  1F87               	comf	(_width+1)& (0+255),f,b
  3844  000228  B0D8               	btfsc	status,0,c
  3845  00022A  2B87               	incf	(_width+1)& (0+255),f,b
  3846  00022C  EF63  F001         	goto	l4386
  3847  000230                     l4376:
  3848  000230  FFFF               	dw	65535	; assembler added errata NOP
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  3852  000232  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3853  000236  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3854  00023A  CFDE F008          	movff	postinc2,atoi@s
  3855  00023E  CFDD F009          	movff	postdec2,atoi@s+1
  3856  000242  ECF8  F01D         	call	_atoi	;wreg free
  3857  000246  C008  F086         	movff	?_atoi,_width
  3858  00024A  C009  F087         	movff	?_atoi+1,_width+1
  3859                           
  3860                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3861  00024E  EF31  F001         	goto	l4380
  3862  000252                     l4378:
  3863  000252  FFFF               	dw	65535	; assembler added errata NOP
  3864                           
  3865                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  3866  000254  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3867  000258  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3868  00025C  2ADE               	incf	postinc2,f,c
  3869  00025E  0E00               	movlw	0
  3870  000260  22DD               	addwfc	postdec2,f,c
  3871  000262                     l4380:
  3872  000262  FFFF               	dw	65535	; assembler added errata NOP
  3873  000264  0ED0               	movlw	208
  3874  000266  6E49               	movwf	??_vfpfcnvrt^0,c
  3875  000268  0EFF               	movlw	255
  3876  00026A  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  3877  00026C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3878  000270  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3879  000274  CFDE FFF6          	movff	postinc2,tblptrl
  3880  000278  CFDD FFF7          	movff	postdec2,tblptrh
  3881  00027C                     	if	0	;tblptru may be non-zero
  3882  00027C                     	endif
  3883  00027C                     	if	0	;tblptru may be non-zero
  3884  00027C                     	endif
  3885  00027C  0008               	tblrd		*
  3886  00027E  FFFF               	dw	65535	; errata NOP
  3887  000280  50F5               	movf	tablat,w,c
  3888  000282  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3889  000284  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  3890  000286  5049               	movf	??_vfpfcnvrt^0,w,c
  3891  000288  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3892  00028A  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3893  00028C  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3894  00028E  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  3895  000290  E10B               	bnz	u5180
  3896  000292  0E0A               	movlw	10
  3897  000294  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3898  000296  A0D8               	btfss	status,0,c
  3899  000298  EF50  F001         	goto	u5181
  3900  00029C  EF54  F001         	goto	u5180
  3901  0002A0                     u5181:
  3902  0002A0  FFFF               	dw	65535	; assembler added errata NOP
  3903  0002A2  0E01               	movlw	1
  3904  0002A4  EF56  F001         	goto	u5190
  3905  0002A8                     u5180:
  3906  0002A8  FFFF               	dw	65535	; assembler added errata NOP
  3907  0002AA  0E00               	movlw	0
  3908  0002AC                     u5190:
  3909  0002AC  FFFF               	dw	65535	; assembler added errata NOP
  3910  0002AE  6E51               	movwf	_vfpfcnvrt$1683^0,c
  3911  0002B0  6A52               	clrf	(_vfpfcnvrt$1683+1)^0,c
  3912  0002B2  5051               	movf	_vfpfcnvrt$1683^0,w,c
  3913  0002B4  1052               	iorwf	(_vfpfcnvrt$1683+1)^0,w,c
  3914  0002B6  A4D8               	btfss	status,2,c
  3915  0002B8  EF60  F001         	goto	u5201
  3916  0002BC  EF63  F001         	goto	u5200
  3917  0002C0                     u5201:
  3918  0002C0  FFFF               	dw	65535	; assembler added errata NOP
  3919  0002C2  EF29  F001         	goto	l4378
  3920  0002C6                     u5200:
  3921  0002C6                     l4386:
  3922  0002C6  FFFF               	dw	65535	; assembler added errata NOP
  3923                           
  3924                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  3925  0002C8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3926  0002CC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3927  0002D0  CFDE FFF6          	movff	postinc2,tblptrl
  3928  0002D4  CFDD FFF7          	movff	postdec2,tblptrh
  3929  0002D8                     	if	0	;tblptru may be non-zero
  3930  0002D8                     	endif
  3931  0002D8                     	if	0	;tblptru may be non-zero
  3932  0002D8                     	endif
  3933  0002D8  0008               	tblrd		*
  3934  0002DA  FFFF               	dw	65535	; errata NOP
  3935  0002DC  50F5               	movf	tablat,w,c
  3936  0002DE  0A2E               	xorlw	46
  3937  0002E0  A4D8               	btfss	status,2,c
  3938  0002E2  EF75  F001         	goto	u5211
  3939  0002E6  EF78  F001         	goto	u5210
  3940  0002EA                     u5211:
  3941  0002EA  FFFF               	dw	65535	; assembler added errata NOP
  3942  0002EC  EF02  F002         	goto	l4406
  3943  0002F0                     u5210:
  3944  0002F0  FFFF               	dw	65535	; assembler added errata NOP
  3945  0002F2                     
  3946                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  3947  0002F2  0E00               	movlw	0
  3948  0002F4  0100               	movlb	0	; () banked
  3949  0002F6  6F89               	movwf	(_prec+1)& (0+255),b
  3950  0002F8  0E00               	movlw	0
  3951  0002FA  6F88               	movwf	_prec& (0+255),b
  3952  0002FC                     
  3953                           ; BSR set to: 0
  3954                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  3955  0002FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3956  000300  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3957  000304  2ADE               	incf	postinc2,f,c
  3958  000306  0E00               	movlw	0
  3959  000308  22DD               	addwfc	postdec2,f,c
  3960  00030A                     
  3961                           ; BSR set to: 0
  3962                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  3963  00030A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3964  00030E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3965  000312  CFDE FFF6          	movff	postinc2,tblptrl
  3966  000316  CFDD FFF7          	movff	postdec2,tblptrh
  3967  00031A                     	if	0	;tblptru may be non-zero
  3968  00031A                     	endif
  3969  00031A                     	if	0	;tblptru may be non-zero
  3970  00031A                     	endif
  3971  00031A  0008               	tblrd		*
  3972  00031C  FFFF               	dw	65535	; errata NOP
  3973  00031E  50F5               	movf	tablat,w,c
  3974  000320  0A2A               	xorlw	42
  3975  000322  A4D8               	btfss	status,2,c
  3976  000324  EF96  F001         	goto	u5221
  3977  000328  EF99  F001         	goto	u5220
  3978  00032C                     u5221:
  3979  00032C  FFFF               	dw	65535	; assembler added errata NOP
  3980  00032E  EFB7  F001         	goto	l4396
  3981  000332                     u5220:
  3982  000332  FFFF               	dw	65535	; assembler added errata NOP
  3983  000334                     
  3984                           ; BSR set to: 0
  3985                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  3986  000334  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3987  000338  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3988  00033C  2ADE               	incf	postinc2,f,c
  3989  00033E  0E00               	movlw	0
  3990  000340  22DD               	addwfc	postdec2,f,c
  3991                           
  3992                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3993  000342  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3994  000346  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3995  00034A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3996  00034E  0E02               	movlw	2
  3997  000350  26DE               	addwf	postinc2,f,c
  3998  000352  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3999  000356  0E00               	movlw	0
  4000  000358  22DD               	addwfc	postdec2,f,c
  4001  00035A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4002  00035E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4003  000362  CFDE F088          	movff	postinc2,_prec
  4004  000366  CFDD F089          	movff	postdec2,_prec+1
  4005                           
  4006                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  4007  00036A  EF02  F002         	goto	l4406
  4008  00036E                     l4396:
  4009  00036E  FFFF               	dw	65535	; assembler added errata NOP
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  4013  000370  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4014  000374  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4015  000378  CFDE F008          	movff	postinc2,atoi@s
  4016  00037C  CFDD F009          	movff	postdec2,atoi@s+1
  4017  000380  ECF8  F01D         	call	_atoi	;wreg free
  4018  000384  C008  F088         	movff	?_atoi,_prec
  4019  000388  C009  F089         	movff	?_atoi+1,_prec+1
  4020                           
  4021                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4022  00038C  EFD0  F001         	goto	l4400
  4023  000390                     l4398:
  4024  000390  FFFF               	dw	65535	; assembler added errata NOP
  4025                           
  4026                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  4027  000392  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4028  000396  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4029  00039A  2ADE               	incf	postinc2,f,c
  4030  00039C  0E00               	movlw	0
  4031  00039E  22DD               	addwfc	postdec2,f,c
  4032  0003A0                     l4400:
  4033  0003A0  FFFF               	dw	65535	; assembler added errata NOP
  4034  0003A2  0ED0               	movlw	208
  4035  0003A4  6E49               	movwf	??_vfpfcnvrt^0,c
  4036  0003A6  0EFF               	movlw	255
  4037  0003A8  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  4038  0003AA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4039  0003AE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4040  0003B2  CFDE FFF6          	movff	postinc2,tblptrl
  4041  0003B6  CFDD FFF7          	movff	postdec2,tblptrh
  4042  0003BA                     	if	0	;tblptru may be non-zero
  4043  0003BA                     	endif
  4044  0003BA                     	if	0	;tblptru may be non-zero
  4045  0003BA                     	endif
  4046  0003BA  0008               	tblrd		*
  4047  0003BC  FFFF               	dw	65535	; errata NOP
  4048  0003BE  50F5               	movf	tablat,w,c
  4049  0003C0  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4050  0003C2  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  4051  0003C4  5049               	movf	??_vfpfcnvrt^0,w,c
  4052  0003C6  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4053  0003C8  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  4054  0003CA  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4055  0003CC  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  4056  0003CE  E10B               	bnz	u5230
  4057  0003D0  0E0A               	movlw	10
  4058  0003D2  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4059  0003D4  A0D8               	btfss	status,0,c
  4060  0003D6  EFEF  F001         	goto	u5231
  4061  0003DA  EFF3  F001         	goto	u5230
  4062  0003DE                     u5231:
  4063  0003DE  FFFF               	dw	65535	; assembler added errata NOP
  4064  0003E0  0E01               	movlw	1
  4065  0003E2  EFF5  F001         	goto	u5240
  4066  0003E6                     u5230:
  4067  0003E6  FFFF               	dw	65535	; assembler added errata NOP
  4068  0003E8  0E00               	movlw	0
  4069  0003EA                     u5240:
  4070  0003EA  FFFF               	dw	65535	; assembler added errata NOP
  4071  0003EC  6E53               	movwf	_vfpfcnvrt$1684^0,c
  4072  0003EE  6A54               	clrf	(_vfpfcnvrt$1684+1)^0,c
  4073  0003F0  5053               	movf	_vfpfcnvrt$1684^0,w,c
  4074  0003F2  1054               	iorwf	(_vfpfcnvrt$1684+1)^0,w,c
  4075  0003F4  A4D8               	btfss	status,2,c
  4076  0003F6  EFFF  F001         	goto	u5251
  4077  0003FA  EF02  F002         	goto	u5250
  4078  0003FE                     u5251:
  4079  0003FE  FFFF               	dw	65535	; assembler added errata NOP
  4080  000400  EFC8  F001         	goto	l4398
  4081  000404                     u5250:
  4082  000404                     l4406:
  4083  000404  FFFF               	dw	65535	; assembler added errata NOP
  4084                           
  4085                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 792:         if (
      +                          *fmt[0] == 'c') {
  4086  000406  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4087  00040A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4088  00040E  CFDE FFF6          	movff	postinc2,tblptrl
  4089  000412  CFDD FFF7          	movff	postdec2,tblptrh
  4090  000416                     	if	0	;tblptru may be non-zero
  4091  000416                     	endif
  4092  000416                     	if	0	;tblptru may be non-zero
  4093  000416                     	endif
  4094  000416  0008               	tblrd		*
  4095  000418  FFFF               	dw	65535	; errata NOP
  4096  00041A  50F5               	movf	tablat,w,c
  4097  00041C  0A63               	xorlw	99
  4098  00041E  A4D8               	btfss	status,2,c
  4099  000420  EF14  F002         	goto	u5261
  4100  000424  EF17  F002         	goto	u5260
  4101  000428                     u5261:
  4102  000428  FFFF               	dw	65535	; assembler added errata NOP
  4103  00042A  EF3F  F002         	goto	l4414
  4104  00042E                     u5260:
  4105  00042E  FFFF               	dw	65535	; assembler added errata NOP
  4106  000430                     
  4107                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 793:             
      +                          ++*fmt;
  4108  000430  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4109  000434  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4110  000438  2ADE               	incf	postinc2,f,c
  4111  00043A  0E00               	movlw	0
  4112  00043C  22DD               	addwfc	postdec2,f,c
  4113                           
  4114                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 794:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4115  00043E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4116  000442  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4117  000446  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4118  00044A  0E02               	movlw	2
  4119  00044C  26DE               	addwf	postinc2,f,c
  4120  00044E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4121  000452  0E00               	movlw	0
  4122  000454  22DD               	addwfc	postdec2,f,c
  4123  000456  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4124  00045A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4125  00045E  50DF               	movf	indf2,w,c
  4126  000460  6E5F               	movwf	vfpfcnvrt@c^0,c
  4127  000462                     
  4128                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 795:             
      +                          return ctoa(fp, c);
  4129  000462  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  4130  000466  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4131  00046A  C05F  F01E         	movff	vfpfcnvrt@c,ctoa@c
  4132  00046E  EC8D  F035         	call	_ctoa	;wreg free
  4133  000472  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  4134  000476  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4135  00047A  EF2E  F00A         	goto	l1293
  4136  00047E                     l4414:
  4137  00047E  FFFF               	dw	65535	; assembler added errata NOP
  4138                           
  4139                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 802:         if (
      +                          !strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((s
      +                          izeof("hhi")/sizeof("hhi"[0]))-1))) {
  4140  000480  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4141  000484  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4142  000488  CFDE F001          	movff	postinc2,strncmp@_l
  4143  00048C  CFDD F002          	movff	postdec2,strncmp@_l+1
  4144  000490  0ECF               	movlw	low STR_11
  4145  000492  6E03               	movwf	strncmp@_r^0,c
  4146  000494  0E7F               	movlw	high STR_11
  4147  000496  6E04               	movwf	(strncmp@_r+1)^0,c
  4148  000498  0E00               	movlw	0
  4149  00049A  6E06               	movwf	(strncmp@n+1)^0,c
  4150  00049C  0E03               	movlw	3
  4151  00049E  6E05               	movwf	strncmp@n^0,c
  4152  0004A0  EC28  F03B         	call	_strncmp	;wreg free
  4153  0004A4  5001               	movf	?_strncmp^0,w,c
  4154  0004A6  1002               	iorwf	(?_strncmp+1)^0,w,c
  4155  0004A8  B4D8               	btfsc	status,2,c
  4156  0004AA  EF59  F002         	goto	u5271
  4157  0004AE  EF5C  F002         	goto	u5270
  4158  0004B2                     u5271:
  4159  0004B2  FFFF               	dw	65535	; assembler added errata NOP
  4160  0004B4  EF79  F002         	goto	l4418
  4161  0004B8                     u5270:
  4162  0004B8  FFFF               	dw	65535	; assembler added errata NOP
  4163  0004BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4164  0004BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4165  0004C2  CFDE F001          	movff	postinc2,strncmp@_l
  4166  0004C6  CFDD F002          	movff	postdec2,strncmp@_l+1
  4167  0004CA  0ED3               	movlw	low STR_15
  4168  0004CC  6E03               	movwf	strncmp@_r^0,c
  4169  0004CE  0E7F               	movlw	high STR_15
  4170  0004D0  6E04               	movwf	(strncmp@_r+1)^0,c
  4171  0004D2  0E00               	movlw	0
  4172  0004D4  6E06               	movwf	(strncmp@n+1)^0,c
  4173  0004D6  0E03               	movlw	3
  4174  0004D8  6E05               	movwf	strncmp@n^0,c
  4175  0004DA  EC28  F03B         	call	_strncmp	;wreg free
  4176  0004DE  5001               	movf	?_strncmp^0,w,c
  4177  0004E0  1002               	iorwf	(?_strncmp+1)^0,w,c
  4178  0004E2  A4D8               	btfss	status,2,c
  4179  0004E4  EF76  F002         	goto	u5281
  4180  0004E8  EF79  F002         	goto	u5280
  4181  0004EC                     u5281:
  4182  0004EC  FFFF               	dw	65535	; assembler added errata NOP
  4183  0004EE  EFBB  F002         	goto	l4424
  4184  0004F2                     u5280:
  4185  0004F2                     l4418:
  4186  0004F2  FFFF               	dw	65535	; assembler added errata NOP
  4187                           
  4188                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 803: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 805:             *fmt += ((si
      +                          zeof("hhd")/sizeof("hhd"[0]))-1);
  4189  0004F4  0E03               	movlw	3
  4190  0004F6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4191  0004FA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4192  0004FE  26DE               	addwf	postinc2,f,c
  4193  000500  0E00               	movlw	0
  4194  000502  22DD               	addwfc	postdec2,f,c
  4195                           
  4196                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 806:             
      +                          ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4197  000504  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4198  000508  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4199  00050C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4200  000510  0E02               	movlw	2
  4201  000512  26DE               	addwf	postinc2,f,c
  4202  000514  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4203  000518  0E00               	movlw	0
  4204  00051A  22DD               	addwfc	postdec2,f,c
  4205  00051C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4206  000520  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4207  000524  50DF               	movf	indf2,w,c
  4208  000526  6E55               	movwf	vfpfcnvrt@ll^0,c
  4209  000528  0E00               	movlw	0
  4210  00052A  BE55               	btfsc	vfpfcnvrt@ll^0,7,c
  4211  00052C  0EFF               	movlw	-1
  4212  00052E  6E56               	movwf	(vfpfcnvrt@ll+1)^0,c
  4213  000530  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  4214  000532  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  4215  000534  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  4216  000536  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  4217  000538  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  4218  00053A  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  4219  00053C                     l4420:
  4220  00053C  FFFF               	dw	65535	; assembler added errata NOP
  4221                           
  4222                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 808:             
      +                          return dtoa(fp, ll);
  4223  00053E  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  4224  000542  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4225  000546  C055  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  4226  00054A  C056  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4227  00054E  C057  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4228  000552  C058  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4229  000556  C059  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4230  00055A  C05A  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4231  00055E  C05B  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4232  000562  C05C  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4233  000566  ECB7  F016         	call	_dtoa	;wreg free
  4234  00056A  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  4235  00056E  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4236  000572  EF2E  F00A         	goto	l1293
  4237  000576                     l4424:
  4238  000576  FFFF               	dw	65535	; assembler added errata NOP
  4239                           
  4240                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          !strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeo
      +                          f("hi")/sizeof("hi"[0]))-1))) {
  4241  000578  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4242  00057C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4243  000580  CFDE F001          	movff	postinc2,strncmp@_l
  4244  000584  CFDD F002          	movff	postdec2,strncmp@_l+1
  4245  000588  0ED0               	movlw	low (STR_11+1)
  4246  00058A  6E03               	movwf	strncmp@_r^0,c
  4247  00058C  0E7F               	movlw	high (STR_11+1)
  4248  00058E  6E04               	movwf	(strncmp@_r+1)^0,c
  4249  000590  0E00               	movlw	0
  4250  000592  6E06               	movwf	(strncmp@n+1)^0,c
  4251  000594  0E02               	movlw	2
  4252  000596  6E05               	movwf	strncmp@n^0,c
  4253  000598  EC28  F03B         	call	_strncmp	;wreg free
  4254  00059C  5001               	movf	?_strncmp^0,w,c
  4255  00059E  1002               	iorwf	(?_strncmp+1)^0,w,c
  4256  0005A0  B4D8               	btfsc	status,2,c
  4257  0005A2  EFD5  F002         	goto	u5291
  4258  0005A6  EFD8  F002         	goto	u5290
  4259  0005AA                     u5291:
  4260  0005AA  FFFF               	dw	65535	; assembler added errata NOP
  4261  0005AC  EFF5  F002         	goto	l4428
  4262  0005B0                     u5290:
  4263  0005B0  FFFF               	dw	65535	; assembler added errata NOP
  4264  0005B2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4265  0005B6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4266  0005BA  CFDE F001          	movff	postinc2,strncmp@_l
  4267  0005BE  CFDD F002          	movff	postdec2,strncmp@_l+1
  4268  0005C2  0ED4               	movlw	low (STR_15+1)
  4269  0005C4  6E03               	movwf	strncmp@_r^0,c
  4270  0005C6  0E7F               	movlw	high (STR_15+1)
  4271  0005C8  6E04               	movwf	(strncmp@_r+1)^0,c
  4272  0005CA  0E00               	movlw	0
  4273  0005CC  6E06               	movwf	(strncmp@n+1)^0,c
  4274  0005CE  0E02               	movlw	2
  4275  0005D0  6E05               	movwf	strncmp@n^0,c
  4276  0005D2  EC28  F03B         	call	_strncmp	;wreg free
  4277  0005D6  5001               	movf	?_strncmp^0,w,c
  4278  0005D8  1002               	iorwf	(?_strncmp+1)^0,w,c
  4279  0005DA  A4D8               	btfss	status,2,c
  4280  0005DC  EFF2  F002         	goto	u5301
  4281  0005E0  EFF5  F002         	goto	u5300
  4282  0005E4                     u5301:
  4283  0005E4  FFFF               	dw	65535	; assembler added errata NOP
  4284  0005E6  EF1D  F003         	goto	l4434
  4285  0005EA                     u5300:
  4286  0005EA                     l4428:
  4287  0005EA  FFFF               	dw	65535	; assembler added errata NOP
  4288                           
  4289                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 815: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 817:             *fmt += ((si
      +                          zeof("hd")/sizeof("hd"[0]))-1);
  4290  0005EC  0E02               	movlw	2
  4291  0005EE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4292  0005F2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4293  0005F6  26DE               	addwf	postinc2,f,c
  4294  0005F8  0E00               	movlw	0
  4295  0005FA  22DD               	addwfc	postdec2,f,c
  4296                           
  4297                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 818:             
      +                          ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4298  0005FC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4299  000600  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4300  000604  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4301  000608  0E02               	movlw	2
  4302  00060A  26DE               	addwf	postinc2,f,c
  4303  00060C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4304  000610  0E00               	movlw	0
  4305  000612  22DD               	addwfc	postdec2,f,c
  4306  000614  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4307  000618  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4308  00061C  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  4309  000620  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  4310  000624  0E00               	movlw	0
  4311  000626  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4312  000628  0EFF               	movlw	-1
  4313  00062A  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  4314  00062C  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  4315  00062E  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  4316  000630  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  4317  000632  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  4318  000634  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  4319  000636  EF9E  F002         	goto	l4420
  4320  00063A                     l4434:
  4321  00063A  FFFF               	dw	65535	; assembler added errata NOP
  4322                           
  4323                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4324  00063C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4325  000640  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4326  000644  CFDE FFF6          	movff	postinc2,tblptrl
  4327  000648  CFDD FFF7          	movff	postdec2,tblptrh
  4328  00064C                     	if	0	;tblptru may be non-zero
  4329  00064C                     	endif
  4330  00064C                     	if	0	;tblptru may be non-zero
  4331  00064C                     	endif
  4332  00064C  0008               	tblrd		*
  4333  00064E  FFFF               	dw	65535	; errata NOP
  4334  000650  50F5               	movf	tablat,w,c
  4335  000652  0A64               	xorlw	100
  4336  000654  B4D8               	btfsc	status,2,c
  4337  000656  EF2F  F003         	goto	u5311
  4338  00065A  EF32  F003         	goto	u5310
  4339  00065E                     u5311:
  4340  00065E  FFFF               	dw	65535	; assembler added errata NOP
  4341  000660  EF47  F003         	goto	l4438
  4342  000664                     u5310:
  4343  000664  FFFF               	dw	65535	; assembler added errata NOP
  4344  000666  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4345  00066A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4346  00066E  CFDE FFF6          	movff	postinc2,tblptrl
  4347  000672  CFDD FFF7          	movff	postdec2,tblptrh
  4348  000676                     	if	0	;tblptru may be non-zero
  4349  000676                     	endif
  4350  000676                     	if	0	;tblptru may be non-zero
  4351  000676                     	endif
  4352  000676  0008               	tblrd		*
  4353  000678  FFFF               	dw	65535	; errata NOP
  4354  00067A  50F5               	movf	tablat,w,c
  4355  00067C  0A69               	xorlw	105
  4356  00067E  A4D8               	btfss	status,2,c
  4357  000680  EF44  F003         	goto	u5321
  4358  000684  EF47  F003         	goto	u5320
  4359  000688                     u5321:
  4360  000688  FFFF               	dw	65535	; assembler added errata NOP
  4361  00068A  EF6E  F003         	goto	l4444
  4362  00068E                     u5320:
  4363  00068E                     l4438:
  4364  00068E  FFFF               	dw	65535	; assembler added errata NOP
  4365                           
  4366                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  4367  000690  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4368  000694  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4369  000698  2ADE               	incf	postinc2,f,c
  4370  00069A  0E00               	movlw	0
  4371  00069C  22DD               	addwfc	postdec2,f,c
  4372                           
  4373                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4374  00069E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4375  0006A2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4376  0006A6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4377  0006AA  0E02               	movlw	2
  4378  0006AC  26DE               	addwf	postinc2,f,c
  4379  0006AE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4380  0006B2  0E00               	movlw	0
  4381  0006B4  22DD               	addwfc	postdec2,f,c
  4382  0006B6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4383  0006BA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4384  0006BE  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  4385  0006C2  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  4386  0006C6  0E00               	movlw	0
  4387  0006C8  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4388  0006CA  0EFF               	movlw	-1
  4389  0006CC  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  4390  0006CE  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  4391  0006D0  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  4392  0006D2  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  4393  0006D4  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  4394  0006D6  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  4395  0006D8  EF9E  F002         	goto	l4420
  4396  0006DC                     l4444:
  4397  0006DC  FFFF               	dw	65535	; assembler added errata NOP
  4398                           
  4399                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 883:         if (
      +                          !strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeo
      +                          f("zi")/sizeof("zi"[0]))-1))) {
  4400  0006DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4401  0006E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4402  0006E6  CFDE F001          	movff	postinc2,strncmp@_l
  4403  0006EA  CFDD F002          	movff	postdec2,strncmp@_l+1
  4404  0006EE  0EEA               	movlw	low STR_29
  4405  0006F0  6E03               	movwf	strncmp@_r^0,c
  4406  0006F2  0E7F               	movlw	high STR_29
  4407  0006F4  6E04               	movwf	(strncmp@_r+1)^0,c
  4408  0006F6  0E00               	movlw	0
  4409  0006F8  6E06               	movwf	(strncmp@n+1)^0,c
  4410  0006FA  0E02               	movlw	2
  4411  0006FC  6E05               	movwf	strncmp@n^0,c
  4412  0006FE  EC28  F03B         	call	_strncmp	;wreg free
  4413  000702  5001               	movf	?_strncmp^0,w,c
  4414  000704  1002               	iorwf	(?_strncmp+1)^0,w,c
  4415  000706  B4D8               	btfsc	status,2,c
  4416  000708  EF88  F003         	goto	u5331
  4417  00070C  EF8B  F003         	goto	u5330
  4418  000710                     u5331:
  4419  000710  FFFF               	dw	65535	; assembler added errata NOP
  4420  000712  EFA8  F003         	goto	l4448
  4421  000716                     u5330:
  4422  000716  FFFF               	dw	65535	; assembler added errata NOP
  4423  000718  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4424  00071C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4425  000720  CFDE F001          	movff	postinc2,strncmp@_l
  4426  000724  CFDD F002          	movff	postdec2,strncmp@_l+1
  4427  000728  0EED               	movlw	low STR_33
  4428  00072A  6E03               	movwf	strncmp@_r^0,c
  4429  00072C  0E7F               	movlw	high STR_33
  4430  00072E  6E04               	movwf	(strncmp@_r+1)^0,c
  4431  000730  0E00               	movlw	0
  4432  000732  6E06               	movwf	(strncmp@n+1)^0,c
  4433  000734  0E02               	movlw	2
  4434  000736  6E05               	movwf	strncmp@n^0,c
  4435  000738  EC28  F03B         	call	_strncmp	;wreg free
  4436  00073C  5001               	movf	?_strncmp^0,w,c
  4437  00073E  1002               	iorwf	(?_strncmp+1)^0,w,c
  4438  000740  A4D8               	btfss	status,2,c
  4439  000742  EFA5  F003         	goto	u5341
  4440  000746  EFA8  F003         	goto	u5340
  4441  00074A                     u5341:
  4442  00074A  FFFF               	dw	65535	; assembler added errata NOP
  4443  00074C  EFD1  F003         	goto	l4454
  4444  000750                     u5340:
  4445  000750                     l4448:
  4446  000750  FFFF               	dw	65535	; assembler added errata NOP
  4447                           
  4448                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 884: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 886:             *fmt += ((si
      +                          zeof("zd")/sizeof("zd"[0]))-1);
  4449  000752  0E02               	movlw	2
  4450  000754  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4451  000758  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4452  00075C  26DE               	addwf	postinc2,f,c
  4453  00075E  0E00               	movlw	0
  4454  000760  22DD               	addwfc	postdec2,f,c
  4455                           
  4456                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 887:             
      +                          ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4457  000762  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4458  000766  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4459  00076A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4460  00076E  0E02               	movlw	2
  4461  000770  26DE               	addwf	postinc2,f,c
  4462  000772  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4463  000776  0E00               	movlw	0
  4464  000778  22DD               	addwfc	postdec2,f,c
  4465  00077A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4466  00077E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4467  000782  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4468  000786  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4469  00078A  C04B  F055         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  4470  00078E  C04C  F056         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  4471  000792  6A57               	clrf	(vfpfcnvrt@ll+2)^0,c
  4472  000794  6A58               	clrf	(vfpfcnvrt@ll+3)^0,c
  4473  000796  6A59               	clrf	(vfpfcnvrt@ll+4)^0,c
  4474  000798  6A5A               	clrf	(vfpfcnvrt@ll+5)^0,c
  4475  00079A  6A5B               	clrf	(vfpfcnvrt@ll+6)^0,c
  4476  00079C  6A5C               	clrf	(vfpfcnvrt@ll+7)^0,c
  4477  00079E  EF9E  F002         	goto	l4420
  4478  0007A2                     l4454:
  4479  0007A2  FFFF               	dw	65535	; assembler added errata NOP
  4480                           
  4481                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 969:         if (
      +                          !strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  4482  0007A4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4483  0007A8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4484  0007AC  CFDE F001          	movff	postinc2,strncmp@_l
  4485  0007B0  CFDD F002          	movff	postdec2,strncmp@_l+1
  4486  0007B4  0EDB               	movlw	low STR_38
  4487  0007B6  6E03               	movwf	strncmp@_r^0,c
  4488  0007B8  0E7F               	movlw	high STR_38
  4489  0007BA  6E04               	movwf	(strncmp@_r+1)^0,c
  4490  0007BC  0E00               	movlw	0
  4491  0007BE  6E06               	movwf	(strncmp@n+1)^0,c
  4492  0007C0  0E03               	movlw	3
  4493  0007C2  6E05               	movwf	strncmp@n^0,c
  4494  0007C4  EC28  F03B         	call	_strncmp	;wreg free
  4495  0007C8  5001               	movf	?_strncmp^0,w,c
  4496  0007CA  1002               	iorwf	(?_strncmp+1)^0,w,c
  4497  0007CC  A4D8               	btfss	status,2,c
  4498  0007CE  EFEB  F003         	goto	u5351
  4499  0007D2  EFEE  F003         	goto	u5350
  4500  0007D6                     u5351:
  4501  0007D6  FFFF               	dw	65535	; assembler added errata NOP
  4502  0007D8  EF2F  F004         	goto	l4462
  4503  0007DC                     u5350:
  4504  0007DC  FFFF               	dw	65535	; assembler added errata NOP
  4505  0007DE                     
  4506                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 971:             
      +                          *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  4507  0007DE  0E03               	movlw	3
  4508  0007E0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4509  0007E4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4510  0007E8  26DE               	addwf	postinc2,f,c
  4511  0007EA  0E00               	movlw	0
  4512  0007EC  22DD               	addwfc	postdec2,f,c
  4513                           
  4514                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 972:             
      +                          llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4515  0007EE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4516  0007F2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4517  0007F6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4518  0007FA  0E02               	movlw	2
  4519  0007FC  26DE               	addwf	postinc2,f,c
  4520  0007FE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4521  000802  0E00               	movlw	0
  4522  000804  22DD               	addwfc	postdec2,f,c
  4523  000806  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4524  00080A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4525  00080E  50DF               	movf	indf2,w,c
  4526  000810  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4527  000812  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  4528  000814  6E60               	movwf	vfpfcnvrt@llu^0,c
  4529  000816  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  4530  000818  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4531  00081A  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4532  00081C  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4533  00081E  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4534  000820  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4535  000822  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4536  000824                     l4458:
  4537  000824  FFFF               	dw	65535	; assembler added errata NOP
  4538                           
  4539                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 974:             
      +                          return otoa(fp, llu);
  4540  000826  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  4541  00082A  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  4542  00082E  C060  F01E         	movff	vfpfcnvrt@llu,otoa@d
  4543  000832  C061  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  4544  000836  C062  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  4545  00083A  C063  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  4546  00083E  C064  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  4547  000842  C065  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  4548  000846  C066  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  4549  00084A  C067  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  4550  00084E  ECFF  F01A         	call	_otoa	;wreg free
  4551  000852  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  4552  000856  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  4553  00085A  EF2E  F00A         	goto	l1293
  4554  00085E                     l4462:
  4555  00085E  FFFF               	dw	65535	; assembler added errata NOP
  4556                           
  4557                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 980:         if (
      +                          !strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  4558  000860  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4559  000864  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4560  000868  CFDE F001          	movff	postinc2,strncmp@_l
  4561  00086C  CFDD F002          	movff	postdec2,strncmp@_l+1
  4562  000870  0EDC               	movlw	low (STR_38+1)
  4563  000872  6E03               	movwf	strncmp@_r^0,c
  4564  000874  0E7F               	movlw	high (STR_38+1)
  4565  000876  6E04               	movwf	(strncmp@_r+1)^0,c
  4566  000878  0E00               	movlw	0
  4567  00087A  6E06               	movwf	(strncmp@n+1)^0,c
  4568  00087C  0E02               	movlw	2
  4569  00087E  6E05               	movwf	strncmp@n^0,c
  4570  000880  EC28  F03B         	call	_strncmp	;wreg free
  4571  000884  5001               	movf	?_strncmp^0,w,c
  4572  000886  1002               	iorwf	(?_strncmp+1)^0,w,c
  4573  000888  A4D8               	btfss	status,2,c
  4574  00088A  EF49  F004         	goto	u5361
  4575  00088E  EF4C  F004         	goto	u5360
  4576  000892                     u5361:
  4577  000892  FFFF               	dw	65535	; assembler added errata NOP
  4578  000894  EF75  F004         	goto	l4470
  4579  000898                     u5360:
  4580  000898  FFFF               	dw	65535	; assembler added errata NOP
  4581  00089A                     
  4582                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 982:             
      +                          *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  4583  00089A  0E02               	movlw	2
  4584  00089C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4585  0008A0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4586  0008A4  26DE               	addwf	postinc2,f,c
  4587  0008A6  0E00               	movlw	0
  4588  0008A8  22DD               	addwfc	postdec2,f,c
  4589                           
  4590                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 983:             
      +                          llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4591  0008AA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4592  0008AE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4593  0008B2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4594  0008B6  0E02               	movlw	2
  4595  0008B8  26DE               	addwf	postinc2,f,c
  4596  0008BA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4597  0008BE  0E00               	movlw	0
  4598  0008C0  22DD               	addwfc	postdec2,f,c
  4599  0008C2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4600  0008C6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4601  0008CA  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4602  0008CE  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4603  0008D2  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4604  0008D6  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4605  0008DA  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4606  0008DC  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4607  0008DE  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4608  0008E0  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4609  0008E2  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4610  0008E4  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4611  0008E6  EF12  F004         	goto	l4458
  4612  0008EA                     l4470:
  4613  0008EA  FFFF               	dw	65535	; assembler added errata NOP
  4614                           
  4615                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 990:         if (
      +                          *fmt[0] == 'o') {
  4616  0008EC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4617  0008F0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4618  0008F4  CFDE FFF6          	movff	postinc2,tblptrl
  4619  0008F8  CFDD FFF7          	movff	postdec2,tblptrh
  4620  0008FC                     	if	0	;tblptru may be non-zero
  4621  0008FC                     	endif
  4622  0008FC                     	if	0	;tblptru may be non-zero
  4623  0008FC                     	endif
  4624  0008FC  0008               	tblrd		*
  4625  0008FE  FFFF               	dw	65535	; errata NOP
  4626  000900  50F5               	movf	tablat,w,c
  4627  000902  0A6F               	xorlw	111
  4628  000904  A4D8               	btfss	status,2,c
  4629  000906  EF87  F004         	goto	u5371
  4630  00090A  EF8A  F004         	goto	u5370
  4631  00090E                     u5371:
  4632  00090E  FFFF               	dw	65535	; assembler added errata NOP
  4633  000910  EFB2  F004         	goto	l4478
  4634  000914                     u5370:
  4635  000914  FFFF               	dw	65535	; assembler added errata NOP
  4636  000916                     
  4637                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 992:             
      +                          ++*fmt;
  4638  000916  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4639  00091A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4640  00091E  2ADE               	incf	postinc2,f,c
  4641  000920  0E00               	movlw	0
  4642  000922  22DD               	addwfc	postdec2,f,c
  4643                           
  4644                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 993:             
      +                          llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int
      +                          )0));
  4645  000924  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4646  000928  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4647  00092C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4648  000930  0E02               	movlw	2
  4649  000932  26DE               	addwf	postinc2,f,c
  4650  000934  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4651  000938  0E00               	movlw	0
  4652  00093A  22DD               	addwfc	postdec2,f,c
  4653  00093C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4654  000940  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4655  000944  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4656  000948  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4657  00094C  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4658  000950  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4659  000954  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4660  000956  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4661  000958  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4662  00095A  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4663  00095C  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4664  00095E  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4665  000960  EF12  F004         	goto	l4458
  4666  000964                     l4478:
  4667  000964  FFFF               	dw	65535	; assembler added errata NOP
  4668                           
  4669                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1044:         if 
      +                          (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  4670  000966  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4671  00096A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4672  00096E  CFDE F001          	movff	postinc2,strncmp@_l
  4673  000972  CFDD F002          	movff	postdec2,strncmp@_l+1
  4674  000976  0EF3               	movlw	low STR_48
  4675  000978  6E03               	movwf	strncmp@_r^0,c
  4676  00097A  0E7F               	movlw	high STR_48
  4677  00097C  6E04               	movwf	(strncmp@_r+1)^0,c
  4678  00097E  0E00               	movlw	0
  4679  000980  6E06               	movwf	(strncmp@n+1)^0,c
  4680  000982  0E02               	movlw	2
  4681  000984  6E05               	movwf	strncmp@n^0,c
  4682  000986  EC28  F03B         	call	_strncmp	;wreg free
  4683  00098A  5001               	movf	?_strncmp^0,w,c
  4684  00098C  1002               	iorwf	(?_strncmp+1)^0,w,c
  4685  00098E  A4D8               	btfss	status,2,c
  4686  000990  EFCC  F004         	goto	u5381
  4687  000994  EFCF  F004         	goto	u5380
  4688  000998                     u5381:
  4689  000998  FFFF               	dw	65535	; assembler added errata NOP
  4690  00099A  EFF8  F004         	goto	l4486
  4691  00099E                     u5380:
  4692  00099E  FFFF               	dw	65535	; assembler added errata NOP
  4693  0009A0                     
  4694                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1046:            
      +                           *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  4695  0009A0  0E02               	movlw	2
  4696  0009A2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4697  0009A6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4698  0009AA  26DE               	addwf	postinc2,f,c
  4699  0009AC  0E00               	movlw	0
  4700  0009AE  22DD               	addwfc	postdec2,f,c
  4701                           
  4702                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1047:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4703  0009B0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4704  0009B4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4705  0009B8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4706  0009BC  0E02               	movlw	2
  4707  0009BE  26DE               	addwf	postinc2,f,c
  4708  0009C0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4709  0009C4  0E00               	movlw	0
  4710  0009C6  22DD               	addwfc	postdec2,f,c
  4711  0009C8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4712  0009CC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4713  0009D0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4714  0009D4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4715  0009D8  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4716  0009DC  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4717  0009E0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4718  0009E2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4719  0009E4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4720  0009E6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4721  0009E8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4722  0009EA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4723  0009EC  EF12  F004         	goto	l4458
  4724  0009F0                     l4486:
  4725  0009F0  FFFF               	dw	65535	; assembler added errata NOP
  4726                           
  4727                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1058:         if 
      +                          (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  4728  0009F2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4729  0009F6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4730  0009FA  CFDE F001          	movff	postinc2,strncmp@_l
  4731  0009FE  CFDD F002          	movff	postdec2,strncmp@_l+1
  4732  000A02  0ED7               	movlw	low STR_53
  4733  000A04  6E03               	movwf	strncmp@_r^0,c
  4734  000A06  0E7F               	movlw	high STR_53
  4735  000A08  6E04               	movwf	(strncmp@_r+1)^0,c
  4736  000A0A  0E00               	movlw	0
  4737  000A0C  6E06               	movwf	(strncmp@n+1)^0,c
  4738  000A0E  0E03               	movlw	3
  4739  000A10  6E05               	movwf	strncmp@n^0,c
  4740  000A12  EC28  F03B         	call	_strncmp	;wreg free
  4741  000A16  5001               	movf	?_strncmp^0,w,c
  4742  000A18  1002               	iorwf	(?_strncmp+1)^0,w,c
  4743  000A1A  A4D8               	btfss	status,2,c
  4744  000A1C  EF12  F005         	goto	u5391
  4745  000A20  EF15  F005         	goto	u5390
  4746  000A24                     u5391:
  4747  000A24  FFFF               	dw	65535	; assembler added errata NOP
  4748  000A26  EF4B  F005         	goto	l4496
  4749  000A2A                     u5390:
  4750  000A2A  FFFF               	dw	65535	; assembler added errata NOP
  4751  000A2C                     
  4752                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1060:            
      +                           *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  4753  000A2C  0E03               	movlw	3
  4754  000A2E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4755  000A32  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4756  000A36  26DE               	addwf	postinc2,f,c
  4757  000A38  0E00               	movlw	0
  4758  000A3A  22DD               	addwfc	postdec2,f,c
  4759                           
  4760                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1061:            
      +                           vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4761  000A3C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4762  000A40  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4763  000A44  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4764  000A48  0E02               	movlw	2
  4765  000A4A  26DE               	addwf	postinc2,f,c
  4766  000A4C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4767  000A50  0E00               	movlw	0
  4768  000A52  22DD               	addwfc	postdec2,f,c
  4769  000A54  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4770  000A58  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4771  000A5C  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4772  000A60  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4773  000A64                     
  4774                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1062:            
      +                           *(char *)vp = (char)nout;
  4775  000A64  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4776  000A68  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4777  000A6C  6AF8               	clrf	tblptru,c
  4778  000A6E  0E05               	movlw	(high __ramtop+-1)
  4779  000A70  64F7               	cpfsgt	tblptrh,c
  4780  000A72  D004               	bra	u5407
  4781  000A74  C084  FFF5         	movff	_nout,tablat
  4782  000A78  000C               	tblwt		*
  4783  000A7A  D006               	bra	u5400
  4784  000A7C                     u5407:
  4785  000A7C  CFF6 FFE1          	movff	tblptrl,fsr1l
  4786  000A80  CFF7 FFE2          	movff	tblptrh,fsr1h
  4787  000A84  C084  FFE7         	movff	_nout,indf1
  4788  000A88                     u5400:
  4789  000A88                     l4492:
  4790  000A88  FFFF               	dw	65535	; assembler added errata NOP
  4791                           
  4792                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1063:            
      +                           return 0;
  4793  000A8A  0E00               	movlw	0
  4794  000A8C  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  4795  000A8E  0E00               	movlw	0
  4796  000A90  6E43               	movwf	?_vfpfcnvrt^0,c
  4797  000A92  EF2E  F00A         	goto	l1293
  4798  000A96                     l4496:
  4799  000A96  FFFF               	dw	65535	; assembler added errata NOP
  4800                           
  4801                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1068:         if 
      +                          (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  4802  000A98  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4803  000A9C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4804  000AA0  CFDE F001          	movff	postinc2,strncmp@_l
  4805  000AA4  CFDD F002          	movff	postdec2,strncmp@_l+1
  4806  000AA8  0ED8               	movlw	low (STR_53+1)
  4807  000AAA  6E03               	movwf	strncmp@_r^0,c
  4808  000AAC  0E7F               	movlw	high (STR_53+1)
  4809  000AAE  6E04               	movwf	(strncmp@_r+1)^0,c
  4810  000AB0  0E00               	movlw	0
  4811  000AB2  6E06               	movwf	(strncmp@n+1)^0,c
  4812  000AB4  0E02               	movlw	2
  4813  000AB6  6E05               	movwf	strncmp@n^0,c
  4814  000AB8  EC28  F03B         	call	_strncmp	;wreg free
  4815  000ABC  5001               	movf	?_strncmp^0,w,c
  4816  000ABE  1002               	iorwf	(?_strncmp+1)^0,w,c
  4817  000AC0  A4D8               	btfss	status,2,c
  4818  000AC2  EF65  F005         	goto	u5411
  4819  000AC6  EF68  F005         	goto	u5410
  4820  000ACA                     u5411:
  4821  000ACA  FFFF               	dw	65535	; assembler added errata NOP
  4822  000ACC  EF9E  F005         	goto	l4506
  4823  000AD0                     u5410:
  4824  000AD0  FFFF               	dw	65535	; assembler added errata NOP
  4825  000AD2                     
  4826                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1070:            
      +                           *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  4827  000AD2  0E02               	movlw	2
  4828  000AD4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4829  000AD8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4830  000ADC  26DE               	addwf	postinc2,f,c
  4831  000ADE  0E00               	movlw	0
  4832  000AE0  22DD               	addwfc	postdec2,f,c
  4833                           
  4834                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1071:            
      +                           vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  4835  000AE2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4836  000AE6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4837  000AEA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4838  000AEE  0E02               	movlw	2
  4839  000AF0  26DE               	addwf	postinc2,f,c
  4840  000AF2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4841  000AF6  0E00               	movlw	0
  4842  000AF8  22DD               	addwfc	postdec2,f,c
  4843  000AFA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4844  000AFE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4845  000B02  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4846  000B06  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4847  000B0A                     
  4848                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1072:            
      +                           *(short *)vp = (short)nout;
  4849  000B0A  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4850  000B0E  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4851  000B12  6AF8               	clrf	tblptru,c
  4852  000B14  0E05               	movlw	(high __ramtop+-1)
  4853  000B16  64F7               	cpfsgt	tblptrh,c
  4854  000B18  D007               	bra	u5427
  4855  000B1A  C084  FFF5         	movff	_nout,tablat
  4856  000B1E  000D               	tblwt		*+
  4857  000B20  C085  FFF5         	movff	_nout+1,tablat
  4858  000B24  000C               	tblwt		*
  4859  000B26  D008               	bra	u5420
  4860  000B28                     u5427:
  4861  000B28  CFF6 FFE1          	movff	tblptrl,fsr1l
  4862  000B2C  CFF7 FFE2          	movff	tblptrh,fsr1h
  4863  000B30  C084  FFE6         	movff	_nout,postinc1
  4864  000B34  C085  FFE7         	movff	_nout+1,indf1
  4865  000B38                     u5420:
  4866  000B38  EF44  F005         	goto	l4492
  4867  000B3C                     l4506:
  4868  000B3C  FFFF               	dw	65535	; assembler added errata NOP
  4869                           
  4870                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1077:         if 
      +                          (*fmt[0] == 'n') {
  4871  000B3E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4872  000B42  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4873  000B46  CFDE FFF6          	movff	postinc2,tblptrl
  4874  000B4A  CFDD FFF7          	movff	postdec2,tblptrh
  4875  000B4E                     	if	0	;tblptru may be non-zero
  4876  000B4E                     	endif
  4877  000B4E                     	if	0	;tblptru may be non-zero
  4878  000B4E                     	endif
  4879  000B4E  0008               	tblrd		*
  4880  000B50  FFFF               	dw	65535	; errata NOP
  4881  000B52  50F5               	movf	tablat,w,c
  4882  000B54  0A6E               	xorlw	110
  4883  000B56  A4D8               	btfss	status,2,c
  4884  000B58  EFB0  F005         	goto	u5431
  4885  000B5C  EFB3  F005         	goto	u5430
  4886  000B60                     u5431:
  4887  000B60  FFFF               	dw	65535	; assembler added errata NOP
  4888  000B62  EFE8  F005         	goto	l4516
  4889  000B66                     u5430:
  4890  000B66  FFFF               	dw	65535	; assembler added errata NOP
  4891  000B68                     
  4892                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1078:            
      +                           ++*fmt;
  4893  000B68  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4894  000B6C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4895  000B70  2ADE               	incf	postinc2,f,c
  4896  000B72  0E00               	movlw	0
  4897  000B74  22DD               	addwfc	postdec2,f,c
  4898                           
  4899                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1079:            
      +                           vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  4900  000B76  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4901  000B7A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4902  000B7E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4903  000B82  0E02               	movlw	2
  4904  000B84  26DE               	addwf	postinc2,f,c
  4905  000B86  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4906  000B8A  0E00               	movlw	0
  4907  000B8C  22DD               	addwfc	postdec2,f,c
  4908  000B8E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4909  000B92  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4910  000B96  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4911  000B9A  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4912  000B9E                     
  4913                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1080:            
      +                           *(int *)vp = nout;
  4914  000B9E  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4915  000BA2  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4916  000BA6  6AF8               	clrf	tblptru,c
  4917  000BA8  0E05               	movlw	(high __ramtop+-1)
  4918  000BAA  64F7               	cpfsgt	tblptrh,c
  4919  000BAC  D007               	bra	u5447
  4920  000BAE  C084  FFF5         	movff	_nout,tablat
  4921  000BB2  000D               	tblwt		*+
  4922  000BB4  C085  FFF5         	movff	_nout+1,tablat
  4923  000BB8  000C               	tblwt		*
  4924  000BBA  D008               	bra	u5440
  4925  000BBC                     u5447:
  4926  000BBC  CFF6 FFE1          	movff	tblptrl,fsr1l
  4927  000BC0  CFF7 FFE2          	movff	tblptrh,fsr1h
  4928  000BC4  C084  FFE6         	movff	_nout,postinc1
  4929  000BC8  C085  FFE7         	movff	_nout+1,indf1
  4930  000BCC                     u5440:
  4931  000BCC  EF44  F005         	goto	l4492
  4932  000BD0                     l4516:
  4933  000BD0  FFFF               	dw	65535	; assembler added errata NOP
  4934                           
  4935                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1125:         if 
      +                          (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  4936  000BD2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4937  000BD6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4938  000BDA  CFDE F001          	movff	postinc2,strncmp@_l
  4939  000BDE  CFDD F002          	movff	postdec2,strncmp@_l+1
  4940  000BE2  0EF0               	movlw	low STR_63
  4941  000BE4  6E03               	movwf	strncmp@_r^0,c
  4942  000BE6  0E7F               	movlw	high STR_63
  4943  000BE8  6E04               	movwf	(strncmp@_r+1)^0,c
  4944  000BEA  0E00               	movlw	0
  4945  000BEC  6E06               	movwf	(strncmp@n+1)^0,c
  4946  000BEE  0E02               	movlw	2
  4947  000BF0  6E05               	movwf	strncmp@n^0,c
  4948  000BF2  EC28  F03B         	call	_strncmp	;wreg free
  4949  000BF6  5001               	movf	?_strncmp^0,w,c
  4950  000BF8  1002               	iorwf	(?_strncmp+1)^0,w,c
  4951  000BFA  A4D8               	btfss	status,2,c
  4952  000BFC  EF02  F006         	goto	u5451
  4953  000C00  EF05  F006         	goto	u5450
  4954  000C04                     u5451:
  4955  000C04  FFFF               	dw	65535	; assembler added errata NOP
  4956  000C06  EF3B  F006         	goto	l4526
  4957  000C0A                     u5450:
  4958  000C0A  FFFF               	dw	65535	; assembler added errata NOP
  4959  000C0C                     
  4960                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1127:            
      +                           *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  4961  000C0C  0E02               	movlw	2
  4962  000C0E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4963  000C12  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4964  000C16  26DE               	addwf	postinc2,f,c
  4965  000C18  0E00               	movlw	0
  4966  000C1A  22DD               	addwfc	postdec2,f,c
  4967                           
  4968                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1128:            
      +                           vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  4969  000C1C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4970  000C20  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4971  000C24  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4972  000C28  0E02               	movlw	2
  4973  000C2A  26DE               	addwf	postinc2,f,c
  4974  000C2C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4975  000C30  0E00               	movlw	0
  4976  000C32  22DD               	addwfc	postdec2,f,c
  4977  000C34  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4978  000C38  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4979  000C3C  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4980  000C40  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4981  000C44                     
  4982                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1129:            
      +                           *(size_t *)vp = (size_t)nout;
  4983  000C44  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4984  000C48  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4985  000C4C  6AF8               	clrf	tblptru,c
  4986  000C4E  0E05               	movlw	(high __ramtop+-1)
  4987  000C50  64F7               	cpfsgt	tblptrh,c
  4988  000C52  D007               	bra	u5467
  4989  000C54  C084  FFF5         	movff	_nout,tablat
  4990  000C58  000D               	tblwt		*+
  4991  000C5A  C085  FFF5         	movff	_nout+1,tablat
  4992  000C5E  000C               	tblwt		*
  4993  000C60  D008               	bra	u5460
  4994  000C62                     u5467:
  4995  000C62  CFF6 FFE1          	movff	tblptrl,fsr1l
  4996  000C66  CFF7 FFE2          	movff	tblptrh,fsr1h
  4997  000C6A  C084  FFE6         	movff	_nout,postinc1
  4998  000C6E  C085  FFE7         	movff	_nout+1,indf1
  4999  000C72                     u5460:
  5000  000C72  EF44  F005         	goto	l4492
  5001  000C76                     l4526:
  5002  000C76  FFFF               	dw	65535	; assembler added errata NOP
  5003                           
  5004                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1138:         if 
      +                          (*fmt[0] == 'p') {
  5005  000C78  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5006  000C7C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5007  000C80  CFDE FFF6          	movff	postinc2,tblptrl
  5008  000C84  CFDD FFF7          	movff	postdec2,tblptrh
  5009  000C88                     	if	0	;tblptru may be non-zero
  5010  000C88                     	endif
  5011  000C88                     	if	0	;tblptru may be non-zero
  5012  000C88                     	endif
  5013  000C88  0008               	tblrd		*
  5014  000C8A  FFFF               	dw	65535	; errata NOP
  5015  000C8C  50F5               	movf	tablat,w,c
  5016  000C8E  0A70               	xorlw	112
  5017  000C90  A4D8               	btfss	status,2,c
  5018  000C92  EF4D  F006         	goto	u5471
  5019  000C96  EF50  F006         	goto	u5470
  5020  000C9A                     u5471:
  5021  000C9A  FFFF               	dw	65535	; assembler added errata NOP
  5022  000C9C  EF94  F006         	goto	l4534
  5023  000CA0                     u5470:
  5024  000CA0  FFFF               	dw	65535	; assembler added errata NOP
  5025  000CA2                     
  5026                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1140:            
      +                           ++*fmt;
  5027  000CA2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5028  000CA6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5029  000CAA  2ADE               	incf	postinc2,f,c
  5030  000CAC  0E00               	movlw	0
  5031  000CAE  22DD               	addwfc	postdec2,f,c
  5032                           
  5033                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1141:            
      +                           llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  5034  000CB0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5035  000CB4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5036  000CB8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5037  000CBC  0E02               	movlw	2
  5038  000CBE  26DE               	addwf	postinc2,f,c
  5039  000CC0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5040  000CC4  0E00               	movlw	0
  5041  000CC6  22DD               	addwfc	postdec2,f,c
  5042  000CC8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5043  000CCC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5044  000CD0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5045  000CD4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5046  000CD8  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5047  000CDC  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5048  000CE0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5049  000CE2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5050  000CE4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5051  000CE6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5052  000CE8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5053  000CEA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5054  000CEC                     
  5055                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1143:            
      +                           return xtoa(fp, llu, 'x');
  5056  000CEC  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  5057  000CF0  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5058  000CF4  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  5059  000CF8  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5060  000CFC  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5061  000D00  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5062  000D04  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5063  000D08  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5064  000D0C  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5065  000D10  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5066  000D14  0E78               	movlw	120
  5067  000D16  6E26               	movwf	xtoa@x^0,c
  5068  000D18  EC51  F018         	call	_xtoa	;wreg free
  5069  000D1C  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  5070  000D20  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5071  000D24  EF2E  F00A         	goto	l1293
  5072  000D28                     l4534:
  5073  000D28  FFFF               	dw	65535	; assembler added errata NOP
  5074                           
  5075                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1149:         if 
      +                          (*fmt[0] == 's') {
  5076  000D2A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5077  000D2E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5078  000D32  CFDE FFF6          	movff	postinc2,tblptrl
  5079  000D36  CFDD FFF7          	movff	postdec2,tblptrh
  5080  000D3A                     	if	0	;tblptru may be non-zero
  5081  000D3A                     	endif
  5082  000D3A                     	if	0	;tblptru may be non-zero
  5083  000D3A                     	endif
  5084  000D3A  0008               	tblrd		*
  5085  000D3C  FFFF               	dw	65535	; errata NOP
  5086  000D3E  50F5               	movf	tablat,w,c
  5087  000D40  0A73               	xorlw	115
  5088  000D42  A4D8               	btfss	status,2,c
  5089  000D44  EFA6  F006         	goto	u5481
  5090  000D48  EFA9  F006         	goto	u5480
  5091  000D4C                     u5481:
  5092  000D4C  FFFF               	dw	65535	; assembler added errata NOP
  5093  000D4E  EFD5  F006         	goto	l4542
  5094  000D52                     u5480:
  5095  000D52  FFFF               	dw	65535	; assembler added errata NOP
  5096  000D54                     
  5097                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1151:            
      +                           ++*fmt;
  5098  000D54  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5099  000D58  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5100  000D5C  2ADE               	incf	postinc2,f,c
  5101  000D5E  0E00               	movlw	0
  5102  000D60  22DD               	addwfc	postdec2,f,c
  5103                           
  5104                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1152:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5105  000D62  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5106  000D66  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5107  000D6A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5108  000D6E  0E02               	movlw	2
  5109  000D70  26DE               	addwf	postinc2,f,c
  5110  000D72  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5111  000D76  0E00               	movlw	0
  5112  000D78  22DD               	addwfc	postdec2,f,c
  5113  000D7A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5114  000D7E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5115  000D82  CFDE F04D          	movff	postinc2,vfpfcnvrt@cp
  5116  000D86  CFDD F04E          	movff	postdec2,vfpfcnvrt@cp+1
  5117  000D8A                     
  5118                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1154:            
      +                           return stoa(fp, cp);
  5119  000D8A  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  5120  000D8E  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5121  000D92  C04D  F00C         	movff	vfpfcnvrt@cp,stoa@s
  5122  000D96  C04E  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  5123  000D9A  EC0E  F01D         	call	_stoa	;wreg free
  5124  000D9E  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  5125  000DA2  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  5126  000DA6  EF2E  F00A         	goto	l1293
  5127  000DAA                     l4542:
  5128  000DAA  FFFF               	dw	65535	; assembler added errata NOP
  5129                           
  5130                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1161:         if 
      +                          (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  5131  000DAC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5132  000DB0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5133  000DB4  CFDE F001          	movff	postinc2,strncmp@_l
  5134  000DB8  CFDD F002          	movff	postdec2,strncmp@_l+1
  5135  000DBC  0EDF               	movlw	low STR_68
  5136  000DBE  6E03               	movwf	strncmp@_r^0,c
  5137  000DC0  0E7F               	movlw	high STR_68
  5138  000DC2  6E04               	movwf	(strncmp@_r+1)^0,c
  5139  000DC4  0E00               	movlw	0
  5140  000DC6  6E06               	movwf	(strncmp@n+1)^0,c
  5141  000DC8  0E03               	movlw	3
  5142  000DCA  6E05               	movwf	strncmp@n^0,c
  5143  000DCC  EC28  F03B         	call	_strncmp	;wreg free
  5144  000DD0  5001               	movf	?_strncmp^0,w,c
  5145  000DD2  1002               	iorwf	(?_strncmp+1)^0,w,c
  5146  000DD4  A4D8               	btfss	status,2,c
  5147  000DD6  EFEF  F006         	goto	u5491
  5148  000DDA  EFF2  F006         	goto	u5490
  5149  000DDE                     u5491:
  5150  000DDE  FFFF               	dw	65535	; assembler added errata NOP
  5151  000DE0  EF33  F007         	goto	l4550
  5152  000DE4                     u5490:
  5153  000DE4  FFFF               	dw	65535	; assembler added errata NOP
  5154  000DE6                     
  5155                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1163:            
      +                           *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  5156  000DE6  0E03               	movlw	3
  5157  000DE8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5158  000DEC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5159  000DF0  26DE               	addwf	postinc2,f,c
  5160  000DF2  0E00               	movlw	0
  5161  000DF4  22DD               	addwfc	postdec2,f,c
  5162                           
  5163                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1164:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5164  000DF6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5165  000DFA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5166  000DFE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5167  000E02  0E02               	movlw	2
  5168  000E04  26DE               	addwf	postinc2,f,c
  5169  000E06  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5170  000E0A  0E00               	movlw	0
  5171  000E0C  22DD               	addwfc	postdec2,f,c
  5172  000E0E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5173  000E12  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5174  000E16  50DF               	movf	indf2,w,c
  5175  000E18  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  5176  000E1A  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  5177  000E1C  6E60               	movwf	vfpfcnvrt@llu^0,c
  5178  000E1E  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  5179  000E20  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5180  000E22  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5181  000E24  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5182  000E26  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5183  000E28  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5184  000E2A  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5185  000E2C                     l4546:
  5186  000E2C  FFFF               	dw	65535	; assembler added errata NOP
  5187                           
  5188                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1166:            
      +                           return utoa(fp, llu);
  5189  000E2E  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  5190  000E32  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  5191  000E36  C060  F01E         	movff	vfpfcnvrt@llu,utoa@d
  5192  000E3A  C061  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  5193  000E3E  C062  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  5194  000E42  C063  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  5195  000E46  C064  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  5196  000E4A  C065  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  5197  000E4E  C066  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  5198  000E52  C067  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  5199  000E56  ECE9  F019         	call	_utoa	;wreg free
  5200  000E5A  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  5201  000E5E  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  5202  000E62  EF2E  F00A         	goto	l1293
  5203  000E66                     l4550:
  5204  000E66  FFFF               	dw	65535	; assembler added errata NOP
  5205                           
  5206                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1172:         if 
      +                          (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  5207  000E68  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5208  000E6C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5209  000E70  CFDE F001          	movff	postinc2,strncmp@_l
  5210  000E74  CFDD F002          	movff	postdec2,strncmp@_l+1
  5211  000E78  0EE0               	movlw	low (STR_68+1)
  5212  000E7A  6E03               	movwf	strncmp@_r^0,c
  5213  000E7C  0E7F               	movlw	high (STR_68+1)
  5214  000E7E  6E04               	movwf	(strncmp@_r+1)^0,c
  5215  000E80  0E00               	movlw	0
  5216  000E82  6E06               	movwf	(strncmp@n+1)^0,c
  5217  000E84  0E02               	movlw	2
  5218  000E86  6E05               	movwf	strncmp@n^0,c
  5219  000E88  EC28  F03B         	call	_strncmp	;wreg free
  5220  000E8C  5001               	movf	?_strncmp^0,w,c
  5221  000E8E  1002               	iorwf	(?_strncmp+1)^0,w,c
  5222  000E90  A4D8               	btfss	status,2,c
  5223  000E92  EF4D  F007         	goto	u5501
  5224  000E96  EF50  F007         	goto	u5500
  5225  000E9A                     u5501:
  5226  000E9A  FFFF               	dw	65535	; assembler added errata NOP
  5227  000E9C  EF79  F007         	goto	l4558
  5228  000EA0                     u5500:
  5229  000EA0  FFFF               	dw	65535	; assembler added errata NOP
  5230  000EA2                     
  5231                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1174:            
      +                           *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  5232  000EA2  0E02               	movlw	2
  5233  000EA4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5234  000EA8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5235  000EAC  26DE               	addwf	postinc2,f,c
  5236  000EAE  0E00               	movlw	0
  5237  000EB0  22DD               	addwfc	postdec2,f,c
  5238                           
  5239                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1175:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5240  000EB2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5241  000EB6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5242  000EBA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5243  000EBE  0E02               	movlw	2
  5244  000EC0  26DE               	addwf	postinc2,f,c
  5245  000EC2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5246  000EC6  0E00               	movlw	0
  5247  000EC8  22DD               	addwfc	postdec2,f,c
  5248  000ECA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5249  000ECE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5250  000ED2  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5251  000ED6  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5252  000EDA  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5253  000EDE  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5254  000EE2  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5255  000EE4  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5256  000EE6  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5257  000EE8  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5258  000EEA  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5259  000EEC  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5260  000EEE  EF16  F007         	goto	l4546
  5261  000EF2                     l4558:
  5262  000EF2  FFFF               	dw	65535	; assembler added errata NOP
  5263                           
  5264                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1182:         if 
      +                          (*fmt[0] == 'u') {
  5265  000EF4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5266  000EF8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5267  000EFC  CFDE FFF6          	movff	postinc2,tblptrl
  5268  000F00  CFDD FFF7          	movff	postdec2,tblptrh
  5269  000F04                     	if	0	;tblptru may be non-zero
  5270  000F04                     	endif
  5271  000F04                     	if	0	;tblptru may be non-zero
  5272  000F04                     	endif
  5273  000F04  0008               	tblrd		*
  5274  000F06  FFFF               	dw	65535	; errata NOP
  5275  000F08  50F5               	movf	tablat,w,c
  5276  000F0A  0A75               	xorlw	117
  5277  000F0C  A4D8               	btfss	status,2,c
  5278  000F0E  EF8B  F007         	goto	u5511
  5279  000F12  EF8E  F007         	goto	u5510
  5280  000F16                     u5511:
  5281  000F16  FFFF               	dw	65535	; assembler added errata NOP
  5282  000F18  EFB6  F007         	goto	l4566
  5283  000F1C                     u5510:
  5284  000F1C  FFFF               	dw	65535	; assembler added errata NOP
  5285  000F1E                     
  5286                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1184:            
      +                           ++*fmt;
  5287  000F1E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5288  000F22  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5289  000F26  2ADE               	incf	postinc2,f,c
  5290  000F28  0E00               	movlw	0
  5291  000F2A  22DD               	addwfc	postdec2,f,c
  5292                           
  5293                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1185:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5294  000F2C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5295  000F30  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5296  000F34  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5297  000F38  0E02               	movlw	2
  5298  000F3A  26DE               	addwf	postinc2,f,c
  5299  000F3C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5300  000F40  0E00               	movlw	0
  5301  000F42  22DD               	addwfc	postdec2,f,c
  5302  000F44  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5303  000F48  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5304  000F4C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5305  000F50  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5306  000F54  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5307  000F58  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5308  000F5C  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5309  000F5E  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5310  000F60  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5311  000F62  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5312  000F64  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5313  000F66  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5314  000F68  EF16  F007         	goto	l4546
  5315  000F6C                     l4566:
  5316  000F6C  FFFF               	dw	65535	; assembler added errata NOP
  5317                           
  5318                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1236:         if 
      +                          (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  5319  000F6E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5320  000F72  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5321  000F76  CFDE F001          	movff	postinc2,strncmp@_l
  5322  000F7A  CFDD F002          	movff	postdec2,strncmp@_l+1
  5323  000F7E  0EF6               	movlw	low STR_78
  5324  000F80  6E03               	movwf	strncmp@_r^0,c
  5325  000F82  0E7F               	movlw	high STR_78
  5326  000F84  6E04               	movwf	(strncmp@_r+1)^0,c
  5327  000F86  0E00               	movlw	0
  5328  000F88  6E06               	movwf	(strncmp@n+1)^0,c
  5329  000F8A  0E02               	movlw	2
  5330  000F8C  6E05               	movwf	strncmp@n^0,c
  5331  000F8E  EC28  F03B         	call	_strncmp	;wreg free
  5332  000F92  5001               	movf	?_strncmp^0,w,c
  5333  000F94  1002               	iorwf	(?_strncmp+1)^0,w,c
  5334  000F96  A4D8               	btfss	status,2,c
  5335  000F98  EFD0  F007         	goto	u5521
  5336  000F9C  EFD3  F007         	goto	u5520
  5337  000FA0                     u5521:
  5338  000FA0  FFFF               	dw	65535	; assembler added errata NOP
  5339  000FA2  EFFC  F007         	goto	l4574
  5340  000FA6                     u5520:
  5341  000FA6  FFFF               	dw	65535	; assembler added errata NOP
  5342  000FA8                     
  5343                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1238:            
      +                           *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  5344  000FA8  0E02               	movlw	2
  5345  000FAA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5346  000FAE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5347  000FB2  26DE               	addwf	postinc2,f,c
  5348  000FB4  0E00               	movlw	0
  5349  000FB6  22DD               	addwfc	postdec2,f,c
  5350                           
  5351                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1239:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5352  000FB8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5353  000FBC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5354  000FC0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5355  000FC4  0E02               	movlw	2
  5356  000FC6  26DE               	addwf	postinc2,f,c
  5357  000FC8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5358  000FCC  0E00               	movlw	0
  5359  000FCE  22DD               	addwfc	postdec2,f,c
  5360  000FD0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5361  000FD4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5362  000FD8  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5363  000FDC  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5364  000FE0  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5365  000FE4  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5366  000FE8  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5367  000FEA  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5368  000FEC  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5369  000FEE  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5370  000FF0  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5371  000FF2  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5372  000FF4  EF16  F007         	goto	l4546
  5373  000FF8                     l4574:
  5374  000FF8  FFFF               	dw	65535	; assembler added errata NOP
  5375                           
  5376                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1249:         if 
      +                          (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((
      +                          sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  5377  000FFA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5378  000FFE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5379  001002  CFDE F001          	movff	postinc2,strncmp@_l
  5380  001006  CFDD F002          	movff	postdec2,strncmp@_l+1
  5381  00100A  0EE3               	movlw	low STR_83
  5382  00100C  6E03               	movwf	strncmp@_r^0,c
  5383  00100E  0E7F               	movlw	high STR_83
  5384  001010  6E04               	movwf	(strncmp@_r+1)^0,c
  5385  001012  0E00               	movlw	0
  5386  001014  6E06               	movwf	(strncmp@n+1)^0,c
  5387  001016  0E03               	movlw	3
  5388  001018  6E05               	movwf	strncmp@n^0,c
  5389  00101A  EC28  F03B         	call	_strncmp	;wreg free
  5390  00101E  5001               	movf	?_strncmp^0,w,c
  5391  001020  1002               	iorwf	(?_strncmp+1)^0,w,c
  5392  001022  B4D8               	btfsc	status,2,c
  5393  001024  EF16  F008         	goto	u5531
  5394  001028  EF19  F008         	goto	u5530
  5395  00102C                     u5531:
  5396  00102C  FFFF               	dw	65535	; assembler added errata NOP
  5397  00102E  EF36  F008         	goto	l4578
  5398  001032                     u5530:
  5399  001032  FFFF               	dw	65535	; assembler added errata NOP
  5400  001034  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5401  001038  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5402  00103C  CFDE F001          	movff	postinc2,strncmp@_l
  5403  001040  CFDD F002          	movff	postdec2,strncmp@_l+1
  5404  001044  0ECB               	movlw	low STR_87
  5405  001046  6E03               	movwf	strncmp@_r^0,c
  5406  001048  0E7F               	movlw	high STR_87
  5407  00104A  6E04               	movwf	(strncmp@_r+1)^0,c
  5408  00104C  0E00               	movlw	0
  5409  00104E  6E06               	movwf	(strncmp@n+1)^0,c
  5410  001050  0E03               	movlw	3
  5411  001052  6E05               	movwf	strncmp@n^0,c
  5412  001054  EC28  F03B         	call	_strncmp	;wreg free
  5413  001058  5001               	movf	?_strncmp^0,w,c
  5414  00105A  1002               	iorwf	(?_strncmp+1)^0,w,c
  5415  00105C  A4D8               	btfss	status,2,c
  5416  00105E  EF33  F008         	goto	u5541
  5417  001062  EF36  F008         	goto	u5540
  5418  001066                     u5541:
  5419  001066  FFFF               	dw	65535	; assembler added errata NOP
  5420  001068  EF8D  F008         	goto	l4588
  5421  00106C                     u5540:
  5422  00106C                     l4578:
  5423  00106C  FFFF               	dw	65535	; assembler added errata NOP
  5424                           
  5425                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1250: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1252:             c = (*fmt)
      +                          [2];
  5426  00106E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5427  001072  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5428  001076  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  5429  00107A  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  5430  00107E  0E02               	movlw	2
  5431  001080  2649               	addwf	??_vfpfcnvrt^0,f,c
  5432  001082  0E00               	movlw	0
  5433  001084  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5434  001086  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5435  00108A  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5436  00108E                     	if	0	;tblptru may be non-zero
  5437  00108E                     	endif
  5438  00108E                     	if	0	;tblptru may be non-zero
  5439  00108E                     	endif
  5440  00108E  0008               	tblrd		*
  5441  001090  FFFF               	dw	65535	; errata NOP
  5442  001092  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5443  001096                     
  5444                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1253:            
      +                           *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  5445  001096  0E03               	movlw	3
  5446  001098  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5447  00109C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5448  0010A0  26DE               	addwf	postinc2,f,c
  5449  0010A2  0E00               	movlw	0
  5450  0010A4  22DD               	addwfc	postdec2,f,c
  5451  0010A6                     
  5452                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1254:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5453  0010A6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5454  0010AA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5455  0010AE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5456  0010B2  0E02               	movlw	2
  5457  0010B4  26DE               	addwf	postinc2,f,c
  5458  0010B6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5459  0010BA  0E00               	movlw	0
  5460  0010BC  22DD               	addwfc	postdec2,f,c
  5461  0010BE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5462  0010C2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5463  0010C6  50DF               	movf	indf2,w,c
  5464  0010C8  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  5465  0010CA  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  5466  0010CC  6E60               	movwf	vfpfcnvrt@llu^0,c
  5467  0010CE  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  5468  0010D0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5469  0010D2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5470  0010D4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5471  0010D6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5472  0010D8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5473  0010DA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5474  0010DC                     l4584:
  5475  0010DC  FFFF               	dw	65535	; assembler added errata NOP
  5476                           
  5477                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1256:            
      +                           return xtoa(fp, llu, c);
  5478  0010DE  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  5479  0010E2  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5480  0010E6  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  5481  0010EA  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5482  0010EE  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5483  0010F2  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5484  0010F6  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5485  0010FA  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5486  0010FE  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5487  001102  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5488  001106  C05F  F026         	movff	vfpfcnvrt@c,xtoa@x
  5489  00110A  EC51  F018         	call	_xtoa	;wreg free
  5490  00110E  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  5491  001112  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5492  001116  EF2E  F00A         	goto	l1293
  5493  00111A                     l4588:
  5494  00111A  FFFF               	dw	65535	; assembler added errata NOP
  5495                           
  5496                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1262:         if 
      +                          (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((size
      +                          of("hX")/sizeof("hX"[0]))-1))) {
  5497  00111C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5498  001120  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5499  001124  CFDE F001          	movff	postinc2,strncmp@_l
  5500  001128  CFDD F002          	movff	postdec2,strncmp@_l+1
  5501  00112C  0EE4               	movlw	low (STR_83+1)
  5502  00112E  6E03               	movwf	strncmp@_r^0,c
  5503  001130  0E7F               	movlw	high (STR_83+1)
  5504  001132  6E04               	movwf	(strncmp@_r+1)^0,c
  5505  001134  0E00               	movlw	0
  5506  001136  6E06               	movwf	(strncmp@n+1)^0,c
  5507  001138  0E02               	movlw	2
  5508  00113A  6E05               	movwf	strncmp@n^0,c
  5509  00113C  EC28  F03B         	call	_strncmp	;wreg free
  5510  001140  5001               	movf	?_strncmp^0,w,c
  5511  001142  1002               	iorwf	(?_strncmp+1)^0,w,c
  5512  001144  B4D8               	btfsc	status,2,c
  5513  001146  EFA7  F008         	goto	u5551
  5514  00114A  EFAA  F008         	goto	u5550
  5515  00114E                     u5551:
  5516  00114E  FFFF               	dw	65535	; assembler added errata NOP
  5517  001150  EFC7  F008         	goto	l4592
  5518  001154                     u5550:
  5519  001154  FFFF               	dw	65535	; assembler added errata NOP
  5520  001156  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5521  00115A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5522  00115E  CFDE F001          	movff	postinc2,strncmp@_l
  5523  001162  CFDD F002          	movff	postdec2,strncmp@_l+1
  5524  001166  0ECC               	movlw	low (STR_87+1)
  5525  001168  6E03               	movwf	strncmp@_r^0,c
  5526  00116A  0E7F               	movlw	high (STR_87+1)
  5527  00116C  6E04               	movwf	(strncmp@_r+1)^0,c
  5528  00116E  0E00               	movlw	0
  5529  001170  6E06               	movwf	(strncmp@n+1)^0,c
  5530  001172  0E02               	movlw	2
  5531  001174  6E05               	movwf	strncmp@n^0,c
  5532  001176  EC28  F03B         	call	_strncmp	;wreg free
  5533  00117A  5001               	movf	?_strncmp^0,w,c
  5534  00117C  1002               	iorwf	(?_strncmp+1)^0,w,c
  5535  00117E  A4D8               	btfss	status,2,c
  5536  001180  EFC4  F008         	goto	u5561
  5537  001184  EFC7  F008         	goto	u5560
  5538  001188                     u5561:
  5539  001188  FFFF               	dw	65535	; assembler added errata NOP
  5540  00118A  EF04  F009         	goto	l4602
  5541  00118E                     u5560:
  5542  00118E                     l4592:
  5543  00118E  FFFF               	dw	65535	; assembler added errata NOP
  5544                           
  5545                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1263: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1265:             c = (*fmt)
      +                          [1];
  5546  001190  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5547  001194  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5548  001198  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  5549  00119C  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  5550  0011A0  0E01               	movlw	1
  5551  0011A2  2649               	addwf	??_vfpfcnvrt^0,f,c
  5552  0011A4  0E00               	movlw	0
  5553  0011A6  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5554  0011A8  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5555  0011AC  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5556  0011B0                     	if	0	;tblptru may be non-zero
  5557  0011B0                     	endif
  5558  0011B0                     	if	0	;tblptru may be non-zero
  5559  0011B0                     	endif
  5560  0011B0  0008               	tblrd		*
  5561  0011B2  FFFF               	dw	65535	; errata NOP
  5562  0011B4  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5563  0011B8                     
  5564                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1266:            
      +                           *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  5565  0011B8  0E02               	movlw	2
  5566  0011BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5567  0011BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5568  0011C2  26DE               	addwf	postinc2,f,c
  5569  0011C4  0E00               	movlw	0
  5570  0011C6  22DD               	addwfc	postdec2,f,c
  5571  0011C8                     
  5572                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1267:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5573  0011C8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5574  0011CC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5575  0011D0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5576  0011D4  0E02               	movlw	2
  5577  0011D6  26DE               	addwf	postinc2,f,c
  5578  0011D8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5579  0011DC  0E00               	movlw	0
  5580  0011DE  22DD               	addwfc	postdec2,f,c
  5581  0011E0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5582  0011E4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5583  0011E8  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5584  0011EC  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5585  0011F0  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5586  0011F4  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5587  0011F8  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5588  0011FA  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5589  0011FC  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5590  0011FE  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5591  001200  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5592  001202  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5593  001204  EF6E  F008         	goto	l4584
  5594  001208                     l4602:
  5595  001208  FFFF               	dw	65535	; assembler added errata NOP
  5596                           
  5597                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1274:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  5598  00120A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5599  00120E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5600  001212  CFDE FFF6          	movff	postinc2,tblptrl
  5601  001216  CFDD FFF7          	movff	postdec2,tblptrh
  5602  00121A                     	if	0	;tblptru may be non-zero
  5603  00121A                     	endif
  5604  00121A                     	if	0	;tblptru may be non-zero
  5605  00121A                     	endif
  5606  00121A  0008               	tblrd		*
  5607  00121C  FFFF               	dw	65535	; errata NOP
  5608  00121E  50F5               	movf	tablat,w,c
  5609  001220  0A78               	xorlw	120
  5610  001222  B4D8               	btfsc	status,2,c
  5611  001224  EF16  F009         	goto	u5571
  5612  001228  EF19  F009         	goto	u5570
  5613  00122C                     u5571:
  5614  00122C  FFFF               	dw	65535	; assembler added errata NOP
  5615  00122E  EF2E  F009         	goto	l4606
  5616  001232                     u5570:
  5617  001232  FFFF               	dw	65535	; assembler added errata NOP
  5618  001234  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5619  001238  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5620  00123C  CFDE FFF6          	movff	postinc2,tblptrl
  5621  001240  CFDD FFF7          	movff	postdec2,tblptrh
  5622  001244                     	if	0	;tblptru may be non-zero
  5623  001244                     	endif
  5624  001244                     	if	0	;tblptru may be non-zero
  5625  001244                     	endif
  5626  001244  0008               	tblrd		*
  5627  001246  FFFF               	dw	65535	; errata NOP
  5628  001248  50F5               	movf	tablat,w,c
  5629  00124A  0A58               	xorlw	88
  5630  00124C  A4D8               	btfss	status,2,c
  5631  00124E  EF2B  F009         	goto	u5581
  5632  001252  EF2E  F009         	goto	u5580
  5633  001256                     u5581:
  5634  001256  FFFF               	dw	65535	; assembler added errata NOP
  5635  001258  EF62  F009         	goto	l4616
  5636  00125C                     u5580:
  5637  00125C                     l4606:
  5638  00125C  FFFF               	dw	65535	; assembler added errata NOP
  5639                           
  5640                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1276:            
      +                           c = (*fmt)[0];
  5641  00125E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5642  001262  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5643  001266  CFDE FFF6          	movff	postinc2,tblptrl
  5644  00126A  CFDD FFF7          	movff	postdec2,tblptrh
  5645  00126E                     	if	0	;tblptru may be non-zero
  5646  00126E                     	endif
  5647  00126E                     	if	0	;tblptru may be non-zero
  5648  00126E                     	endif
  5649  00126E  0008               	tblrd		*
  5650  001270  FFFF               	dw	65535	; errata NOP
  5651  001272  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5652  001276                     
  5653                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1277:            
      +                           ++*fmt;
  5654  001276  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5655  00127A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5656  00127E  2ADE               	incf	postinc2,f,c
  5657  001280  0E00               	movlw	0
  5658  001282  22DD               	addwfc	postdec2,f,c
  5659  001284                     
  5660                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1278:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5661  001284  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5662  001288  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5663  00128C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5664  001290  0E02               	movlw	2
  5665  001292  26DE               	addwf	postinc2,f,c
  5666  001294  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5667  001298  0E00               	movlw	0
  5668  00129A  22DD               	addwfc	postdec2,f,c
  5669  00129C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5670  0012A0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5671  0012A4  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5672  0012A8  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5673  0012AC  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5674  0012B0  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5675  0012B4  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5676  0012B6  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5677  0012B8  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5678  0012BA  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5679  0012BC  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5680  0012BE  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5681  0012C0  EF6E  F008         	goto	l4584
  5682  0012C4                     l4616:
  5683  0012C4  FFFF               	dw	65535	; assembler added errata NOP
  5684                           
  5685                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1337:         if 
      +                          (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((size
      +                          of("zX")/sizeof("zX"[0]))-1))) {
  5686  0012C6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5687  0012CA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5688  0012CE  CFDE F001          	movff	postinc2,strncmp@_l
  5689  0012D2  CFDD F002          	movff	postdec2,strncmp@_l+1
  5690  0012D6  0EF9               	movlw	low STR_101
  5691  0012D8  6E03               	movwf	strncmp@_r^0,c
  5692  0012DA  0E7F               	movlw	high STR_101
  5693  0012DC  6E04               	movwf	(strncmp@_r+1)^0,c
  5694  0012DE  0E00               	movlw	0
  5695  0012E0  6E06               	movwf	(strncmp@n+1)^0,c
  5696  0012E2  0E02               	movlw	2
  5697  0012E4  6E05               	movwf	strncmp@n^0,c
  5698  0012E6  EC28  F03B         	call	_strncmp	;wreg free
  5699  0012EA  5001               	movf	?_strncmp^0,w,c
  5700  0012EC  1002               	iorwf	(?_strncmp+1)^0,w,c
  5701  0012EE  B4D8               	btfsc	status,2,c
  5702  0012F0  EF7C  F009         	goto	u5591
  5703  0012F4  EF7F  F009         	goto	u5590
  5704  0012F8                     u5591:
  5705  0012F8  FFFF               	dw	65535	; assembler added errata NOP
  5706  0012FA  EF9C  F009         	goto	l4620
  5707  0012FE                     u5590:
  5708  0012FE  FFFF               	dw	65535	; assembler added errata NOP
  5709  001300  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5710  001304  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5711  001308  CFDE F001          	movff	postinc2,strncmp@_l
  5712  00130C  CFDD F002          	movff	postdec2,strncmp@_l+1
  5713  001310  0EE7               	movlw	low STR_105
  5714  001312  6E03               	movwf	strncmp@_r^0,c
  5715  001314  0E7F               	movlw	high STR_105
  5716  001316  6E04               	movwf	(strncmp@_r+1)^0,c
  5717  001318  0E00               	movlw	0
  5718  00131A  6E06               	movwf	(strncmp@n+1)^0,c
  5719  00131C  0E02               	movlw	2
  5720  00131E  6E05               	movwf	strncmp@n^0,c
  5721  001320  EC28  F03B         	call	_strncmp	;wreg free
  5722  001324  5001               	movf	?_strncmp^0,w,c
  5723  001326  1002               	iorwf	(?_strncmp+1)^0,w,c
  5724  001328  A4D8               	btfss	status,2,c
  5725  00132A  EF99  F009         	goto	u5601
  5726  00132E  EF9C  F009         	goto	u5600
  5727  001332                     u5601:
  5728  001332  FFFF               	dw	65535	; assembler added errata NOP
  5729  001334  EFD9  F009         	goto	l4630
  5730  001338                     u5600:
  5731  001338                     l4620:
  5732  001338  FFFF               	dw	65535	; assembler added errata NOP
  5733                           
  5734                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1338: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1340:             c = (*fmt)
      +                          [1];
  5735  00133A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5736  00133E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5737  001342  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  5738  001346  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  5739  00134A  0E01               	movlw	1
  5740  00134C  2649               	addwf	??_vfpfcnvrt^0,f,c
  5741  00134E  0E00               	movlw	0
  5742  001350  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5743  001352  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5744  001356  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5745  00135A                     	if	0	;tblptru may be non-zero
  5746  00135A                     	endif
  5747  00135A                     	if	0	;tblptru may be non-zero
  5748  00135A                     	endif
  5749  00135A  0008               	tblrd		*
  5750  00135C  FFFF               	dw	65535	; errata NOP
  5751  00135E  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5752  001362                     
  5753                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1341:            
      +                           *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  5754  001362  0E02               	movlw	2
  5755  001364  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5756  001368  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5757  00136C  26DE               	addwf	postinc2,f,c
  5758  00136E  0E00               	movlw	0
  5759  001370  22DD               	addwfc	postdec2,f,c
  5760  001372                     
  5761                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1342:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5762  001372  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5763  001376  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5764  00137A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5765  00137E  0E02               	movlw	2
  5766  001380  26DE               	addwf	postinc2,f,c
  5767  001382  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5768  001386  0E00               	movlw	0
  5769  001388  22DD               	addwfc	postdec2,f,c
  5770  00138A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5771  00138E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5772  001392  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5773  001396  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5774  00139A  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5775  00139E  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5776  0013A2  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5777  0013A4  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5778  0013A6  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5779  0013A8  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5780  0013AA  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5781  0013AC  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5782  0013AE  EF6E  F008         	goto	l4584
  5783  0013B2                     l4630:
  5784  0013B2  FFFF               	dw	65535	; assembler added errata NOP
  5785                           
  5786                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  5787  0013B4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5788  0013B8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5789  0013BC  CFDE FFF6          	movff	postinc2,tblptrl
  5790  0013C0  CFDD FFF7          	movff	postdec2,tblptrh
  5791  0013C4                     	if	0	;tblptru may be non-zero
  5792  0013C4                     	endif
  5793  0013C4                     	if	0	;tblptru may be non-zero
  5794  0013C4                     	endif
  5795  0013C4  0008               	tblrd		*
  5796  0013C6  FFFF               	dw	65535	; errata NOP
  5797  0013C8  50F5               	movf	tablat,w,c
  5798  0013CA  0A25               	xorlw	37
  5799  0013CC  A4D8               	btfss	status,2,c
  5800  0013CE  EFEB  F009         	goto	u5611
  5801  0013D2  EFEE  F009         	goto	u5610
  5802  0013D6                     u5611:
  5803  0013D6  FFFF               	dw	65535	; assembler added errata NOP
  5804  0013D8  EF07  F00A         	goto	l4640
  5805  0013DC                     u5610:
  5806  0013DC  FFFF               	dw	65535	; assembler added errata NOP
  5807  0013DE                     
  5808                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  5809  0013DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5810  0013E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5811  0013E6  2ADE               	incf	postinc2,f,c
  5812  0013E8  0E00               	movlw	0
  5813  0013EA  22DD               	addwfc	postdec2,f,c
  5814  0013EC                     
  5815                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  5816  0013EC  0E00               	movlw	0
  5817  0013EE  6E02               	movwf	(fputc@c+1)^0,c
  5818  0013F0  0E25               	movlw	37
  5819  0013F2  6E01               	movwf	fputc@c^0,c
  5820  0013F4  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5821  0013F8  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5822  0013FC  EC57  F039         	call	_fputc	;wreg free
  5823  001400                     l4636:
  5824  001400  FFFF               	dw	65535	; assembler added errata NOP
  5825                           
  5826                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  5827  001402  0E00               	movlw	0
  5828  001404  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  5829  001406  0E01               	movlw	1
  5830  001408  6E43               	movwf	?_vfpfcnvrt^0,c
  5831  00140A  EF2E  F00A         	goto	l1293
  5832  00140E                     l4640:
  5833  00140E  FFFF               	dw	65535	; assembler added errata NOP
  5834                           
  5835                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  5836  001410  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5837  001414  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5838  001418  2ADE               	incf	postinc2,f,c
  5839  00141A  0E00               	movlw	0
  5840  00141C  22DD               	addwfc	postdec2,f,c
  5841  00141E  EF44  F005         	goto	l4492
  5842  001422                     l4646:
  5843  001422  FFFF               	dw	65535	; assembler added errata NOP
  5844                           
  5845                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  5846  001424  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5847  001428  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5848  00142C  CFDE FFF6          	movff	postinc2,tblptrl
  5849  001430  CFDD FFF7          	movff	postdec2,tblptrh
  5850  001434                     	if	0	;tblptru may be non-zero
  5851  001434                     	endif
  5852  001434                     	if	0	;tblptru may be non-zero
  5853  001434                     	endif
  5854  001434  0008               	tblrd		*
  5855  001436  FFFF               	dw	65535	; errata NOP
  5856  001438  50F5               	movf	tablat,w,c
  5857  00143A  6E01               	movwf	fputc@c^0,c
  5858  00143C  6A02               	clrf	(fputc@c+1)^0,c
  5859  00143E  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5860  001442  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5861  001446  EC57  F039         	call	_fputc	;wreg free
  5862  00144A                     
  5863                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  5864  00144A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5865  00144E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5866  001452  2ADE               	incf	postinc2,f,c
  5867  001454  0E00               	movlw	0
  5868  001456  22DD               	addwfc	postdec2,f,c
  5869  001458  EF00  F00A         	goto	l4636
  5870  00145C                     l1293:
  5871  00145C  FFFF               	dw	65535	; assembler added errata NOP
  5872  00145E  0012               	return		;funcret
  5873  001460  FFFF               	dw	65535	; errata NOP
  5874  001462                     __end_of_vfpfcnvrt:
  5875                           	callstack 0
  5876                           
  5877 ;; *************** function _xtoa *****************
  5878 ;; Defined at:
  5879 ;;		line 623 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5880 ;; Parameters:    Size  Location     Type
  5881 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5882 ;;		 -> vsnprintf@f(6), 
  5883 ;;  d               8   29[COMRAM] unsigned long long 
  5884 ;;  x               1   37[COMRAM] unsigned char 
  5885 ;; Auto vars:     Size  Location     Type
  5886 ;;  n               8   54[COMRAM] unsigned long long 
  5887 ;;  c               2   64[COMRAM] int 
  5888 ;;  i               2   62[COMRAM] int 
  5889 ;;  w               2   52[COMRAM] int 
  5890 ;;  p               2   50[COMRAM] int 
  5891 ;; Return value:  Size  Location     Type
  5892 ;;                  2   27[COMRAM] int 
  5893 ;; Registers used:
  5894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5895 ;; Tracked objects:
  5896 ;;		On entry : 0/0
  5897 ;;		On exit  : 0/0
  5898 ;;		Unchanged: 0/0
  5899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5900 ;;      Params:        11       0       0       0       0       0       0
  5901 ;;      Locals:        20       0       0       0       0       0       0
  5902 ;;      Temps:          8       0       0       0       0       0       0
  5903 ;;      Totals:        39       0       0       0       0       0       0
  5904 ;;Total ram usage:       39 bytes
  5905 ;; Hardware stack levels used:    1
  5906 ;; Hardware stack levels required when called:    5
  5907 ;; This function calls:
  5908 ;;		_isalpha
  5909 ;;		_isupper
  5910 ;;		_pad
  5911 ;;		_toupper
  5912 ;; This function is called by:
  5913 ;;		_vfpfcnvrt
  5914 ;; This function uses a non-reentrant model
  5915 ;;
  5916                           
  5917                           	psect	text9
  5918  0030A2                     __ptext9:
  5919                           	callstack 0
  5920  0030A2                     _xtoa:
  5921                           	callstack 0
  5922  0030A2  FFFF               	dw	65535	; assembler added errata NOP
  5923  0030A4                     
  5924                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 623: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 624: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 625:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources
      +                          \c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0)) {
  5925  0030A4  0100               	movlb	0	; () banked
  5926  0030A6  BF89               	btfsc	(_prec+1)& (0+255),7,b
  5927  0030A8  EF58  F018         	goto	u4451
  5928  0030AC  EF5B  F018         	goto	u4450
  5929  0030B0                     u4451:
  5930  0030B0  FFFF               	dw	65535	; assembler added errata NOP
  5931  0030B2  EF5D  F018         	goto	l4002
  5932  0030B6                     u4450:
  5933  0030B6  FFFF               	dw	65535	; assembler added errata NOP
  5934  0030B8                     
  5935                           ; BSR set to: 0
  5936                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 630:         flag
      +                          s &= ~(1 << 1);
  5937  0030B8  938A               	bcf	_flags& (0+255),1,b
  5938  0030BA                     l4002:
  5939  0030BA  FFFF               	dw	65535	; assembler added errata NOP
  5940                           
  5941                           ; BSR set to: 0
  5942                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 632:     p = (0 <
      +                           prec) ? prec : 1;
  5943  0030BC  BF89               	btfsc	(_prec+1)& (0+255),7,b
  5944  0030BE  EF6C  F018         	goto	u4460
  5945  0030C2  5189               	movf	(_prec+1)& (0+255),w,b
  5946  0030C4  E106               	bnz	u4461
  5947  0030C6  0588               	decf	_prec& (0+255),w,b
  5948  0030C8  B0D8               	btfsc	status,0,c
  5949  0030CA  EF69  F018         	goto	u4461
  5950  0030CE  EF6C  F018         	goto	u4460
  5951  0030D2                     u4461:
  5952  0030D2  FFFF               	dw	65535	; assembler added errata NOP
  5953  0030D4  EF73  F018         	goto	l1231
  5954  0030D8                     u4460:
  5955  0030D8  FFFF               	dw	65535	; assembler added errata NOP
  5956  0030DA                     
  5957                           ; BSR set to: 0
  5958  0030DA  0E00               	movlw	0
  5959  0030DC  6E34               	movwf	(xtoa@p+1)^0,c
  5960  0030DE  0E01               	movlw	1
  5961  0030E0  6E33               	movwf	xtoa@p^0,c
  5962  0030E2  EF78  F018         	goto	l1233
  5963  0030E6                     l1231:
  5964  0030E6  FFFF               	dw	65535	; assembler added errata NOP
  5965                           
  5966                           ; BSR set to: 0
  5967  0030E8  C088  F033         	movff	_prec,xtoa@p
  5968  0030EC  C089  F034         	movff	_prec+1,xtoa@p+1
  5969  0030F0                     l1233:
  5970  0030F0  FFFF               	dw	65535	; assembler added errata NOP
  5971                           
  5972                           ; BSR set to: 0
  5973                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 633:     w = widt
      +                          h;
  5974  0030F2  C086  F035         	movff	_width,xtoa@w
  5975  0030F6  C087  F036         	movff	_width+1,xtoa@w+1
  5976                           
  5977                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 634:     if (flag
      +                          s & (1 << 4)) {
  5978  0030FA  A98A               	btfss	_flags& (0+255),4,b
  5979  0030FC  EF82  F018         	goto	u4471
  5980  003100  EF85  F018         	goto	u4470
  5981  003104                     u4471:
  5982  003104  FFFF               	dw	65535	; assembler added errata NOP
  5983  003106  EF8A  F018         	goto	l4008
  5984  00310A                     u4470:
  5985  00310A  FFFF               	dw	65535	; assembler added errata NOP
  5986  00310C                     
  5987                           ; BSR set to: 0
  5988                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 635:         w -=
      +                           2;
  5989  00310C  0EFE               	movlw	254
  5990  00310E  2635               	addwf	xtoa@w^0,f,c
  5991  003110  0EFF               	movlw	255
  5992  003112  2236               	addwfc	(xtoa@w+1)^0,f,c
  5993  003114                     l4008:
  5994  003114  FFFF               	dw	65535	; assembler added errata NOP
  5995                           
  5996                           ; BSR set to: 0
  5997                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 639:     n = d;
  5998  003116  C01E  F037         	movff	xtoa@d,xtoa@n
  5999  00311A  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  6000  00311E  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  6001  003122  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  6002  003126  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  6003  00312A  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  6004  00312E  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  6005  003132  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  6006  003136                     
  6007                           ; BSR set to: 0
  6008                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 640:     i = size
      +                          of(dbuf) - 1;
  6009  003136  0E00               	movlw	0
  6010  003138  6E40               	movwf	(xtoa@i+1)^0,c
  6011  00313A  0E1F               	movlw	31
  6012  00313C  6E3F               	movwf	xtoa@i^0,c
  6013  00313E                     
  6014                           ; BSR set to: 0
  6015                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 641:     dbuf[i] 
      +                          = '\0';
  6016  00313E  0E00               	movlw	0
  6017  003140  6FB7               	movwf	(_dbuf+31)& (0+255),b
  6018                           
  6019                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6020  003142  EF68  F019         	goto	l4044
  6021  003146                     l4014:
  6022  003146  FFFF               	dw	65535	; assembler added errata NOP
  6023                           
  6024                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 643:         --i;
  6025  003148  063F               	decf	xtoa@i^0,f,c
  6026  00314A  A0D8               	btfss	status,0,c
  6027  00314C  0640               	decf	(xtoa@i+1)^0,f,c
  6028  00314E                     
  6029                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 644:         c = 
      +                          n & 0x0f;
  6030  00314E  0E0F               	movlw	15
  6031  003150  1437               	andwf	xtoa@n^0,w,c
  6032  003152  6E41               	movwf	xtoa@c^0,c
  6033  003154  6A42               	clrf	(xtoa@c+1)^0,c
  6034  003156                     
  6035                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 645:         c = 
      +                          (c < 10) ? '0' + c : 'a' + (c - 10);
  6036  003156  BE42               	btfsc	(xtoa@c+1)^0,7,c
  6037  003158  EFB7  F018         	goto	u4481
  6038  00315C  5042               	movf	(xtoa@c+1)^0,w,c
  6039  00315E  E10A               	bnz	u4480
  6040  003160  0E0A               	movlw	10
  6041  003162  5C41               	subwf	xtoa@c^0,w,c
  6042  003164  A0D8               	btfss	status,0,c
  6043  003166  EFB7  F018         	goto	u4481
  6044  00316A  EFBA  F018         	goto	u4480
  6045  00316E                     u4481:
  6046  00316E  FFFF               	dw	65535	; assembler added errata NOP
  6047  003170  EFC3  F018         	goto	l4022
  6048  003174                     u4480:
  6049  003174  FFFF               	dw	65535	; assembler added errata NOP
  6050  003176  0E57               	movlw	87
  6051  003178  2441               	addwf	xtoa@c^0,w,c
  6052  00317A  6E41               	movwf	xtoa@c^0,c
  6053  00317C  0E00               	movlw	0
  6054  00317E  2042               	addwfc	(xtoa@c+1)^0,w,c
  6055  003180  6E42               	movwf	(xtoa@c+1)^0,c
  6056  003182  EFCA  F018         	goto	l1240
  6057  003186                     l4022:
  6058  003186  FFFF               	dw	65535	; assembler added errata NOP
  6059  003188  0E30               	movlw	48
  6060  00318A  2441               	addwf	xtoa@c^0,w,c
  6061  00318C  6E41               	movwf	xtoa@c^0,c
  6062  00318E  0E00               	movlw	0
  6063  003190  2042               	addwfc	(xtoa@c+1)^0,w,c
  6064  003192  6E42               	movwf	(xtoa@c+1)^0,c
  6065  003194                     l1240:
  6066  003194  FFFF               	dw	65535	; assembler added errata NOP
  6067  003196  0EBF               	movlw	191
  6068  003198  6E27               	movwf	??_xtoa^0,c
  6069  00319A  0EFF               	movlw	255
  6070  00319C  6E28               	movwf	(??_xtoa+1)^0,c
  6071  00319E  5026               	movf	xtoa@x^0,w,c
  6072  0031A0  6E29               	movwf	(??_xtoa+2)^0,c
  6073  0031A2  6A2A               	clrf	(??_xtoa+3)^0,c
  6074  0031A4  5027               	movf	??_xtoa^0,w,c
  6075  0031A6  2629               	addwf	(??_xtoa+2)^0,f,c
  6076  0031A8  5028               	movf	(??_xtoa+1)^0,w,c
  6077  0031AA  222A               	addwfc	(??_xtoa+3)^0,f,c
  6078  0031AC  502A               	movf	(??_xtoa+3)^0,w,c
  6079  0031AE  E10B               	bnz	u4490
  6080  0031B0  0E1A               	movlw	26
  6081  0031B2  5C29               	subwf	(??_xtoa+2)^0,w,c
  6082  0031B4  A0D8               	btfss	status,0,c
  6083  0031B6  EFDF  F018         	goto	u4491
  6084  0031BA  EFE3  F018         	goto	u4490
  6085  0031BE                     u4491:
  6086  0031BE  FFFF               	dw	65535	; assembler added errata NOP
  6087  0031C0  0E01               	movlw	1
  6088  0031C2  EFE5  F018         	goto	u4500
  6089  0031C6                     u4490:
  6090  0031C6  FFFF               	dw	65535	; assembler added errata NOP
  6091  0031C8  0E00               	movlw	0
  6092  0031CA                     u4500:
  6093  0031CA  FFFF               	dw	65535	; assembler added errata NOP
  6094  0031CC  6E2F               	movwf	_xtoa$1668^0,c
  6095  0031CE  6A30               	clrf	(_xtoa$1668+1)^0,c
  6096  0031D0  502F               	movf	_xtoa$1668^0,w,c
  6097  0031D2  1030               	iorwf	(_xtoa$1668+1)^0,w,c
  6098  0031D4  B4D8               	btfsc	status,2,c
  6099  0031D6  EFEF  F018         	goto	u4511
  6100  0031DA  EFF2  F018         	goto	u4510
  6101  0031DE                     u4511:
  6102  0031DE  FFFF               	dw	65535	; assembler added errata NOP
  6103  0031E0  EF28  F019         	goto	l4036
  6104  0031E4                     u4510:
  6105  0031E4  FFFF               	dw	65535	; assembler added errata NOP
  6106  0031E6  0E9F               	movlw	159
  6107  0031E8  6E27               	movwf	??_xtoa^0,c
  6108  0031EA  0EFF               	movlw	255
  6109  0031EC  6E28               	movwf	(??_xtoa+1)^0,c
  6110  0031EE  0E20               	movlw	32
  6111  0031F0  1041               	iorwf	xtoa@c^0,w,c
  6112  0031F2  6E29               	movwf	(??_xtoa+2)^0,c
  6113  0031F4  0E00               	movlw	0
  6114  0031F6  1042               	iorwf	(xtoa@c+1)^0,w,c
  6115  0031F8  6E2A               	movwf	(??_xtoa+3)^0,c
  6116  0031FA  5027               	movf	??_xtoa^0,w,c
  6117  0031FC  2629               	addwf	(??_xtoa+2)^0,f,c
  6118  0031FE  5028               	movf	(??_xtoa+1)^0,w,c
  6119  003200  222A               	addwfc	(??_xtoa+3)^0,f,c
  6120  003202  502A               	movf	(??_xtoa+3)^0,w,c
  6121  003204  E10B               	bnz	u4520
  6122  003206  0E1A               	movlw	26
  6123  003208  5C29               	subwf	(??_xtoa+2)^0,w,c
  6124  00320A  A0D8               	btfss	status,0,c
  6125  00320C  EF0A  F019         	goto	u4521
  6126  003210  EF0E  F019         	goto	u4520
  6127  003214                     u4521:
  6128  003214  FFFF               	dw	65535	; assembler added errata NOP
  6129  003216  0E01               	movlw	1
  6130  003218  EF10  F019         	goto	u4530
  6131  00321C                     u4520:
  6132  00321C  FFFF               	dw	65535	; assembler added errata NOP
  6133  00321E  0E00               	movlw	0
  6134  003220                     u4530:
  6135  003220  FFFF               	dw	65535	; assembler added errata NOP
  6136  003222  6E31               	movwf	_xtoa$1669^0,c
  6137  003224  6A32               	clrf	(_xtoa$1669+1)^0,c
  6138  003226  5031               	movf	_xtoa$1669^0,w,c
  6139  003228  1032               	iorwf	(_xtoa$1669+1)^0,w,c
  6140  00322A  B4D8               	btfsc	status,2,c
  6141  00322C  EF1A  F019         	goto	u4541
  6142  003230  EF1D  F019         	goto	u4540
  6143  003234                     u4541:
  6144  003234  FFFF               	dw	65535	; assembler added errata NOP
  6145  003236  EF28  F019         	goto	l4036
  6146  00323A                     u4540:
  6147  00323A  FFFF               	dw	65535	; assembler added errata NOP
  6148  00323C                     
  6149                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 647:             
      +                          c = toupper(c);
  6150  00323C  C041  F007         	movff	xtoa@c,toupper@c
  6151  003240  C042  F008         	movff	xtoa@c+1,toupper@c+1
  6152  003244  ECF3  F035         	call	_toupper	;wreg free
  6153  003248  C007  F041         	movff	?_toupper,xtoa@c
  6154  00324C  C008  F042         	movff	?_toupper+1,xtoa@c+1
  6155  003250                     l4036:
  6156  003250  FFFF               	dw	65535	; assembler added errata NOP
  6157                           
  6158                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 649:         dbuf
      +                          [i] = (char)c;
  6159  003252  0E98               	movlw	low _dbuf
  6160  003254  243F               	addwf	xtoa@i^0,w,c
  6161  003256  6ED9               	movwf	fsr2l,c
  6162  003258  0E00               	movlw	high _dbuf
  6163  00325A  2040               	addwfc	(xtoa@i+1)^0,w,c
  6164  00325C  6EDA               	movwf	fsr2h,c
  6165  00325E  C041  FFDF         	movff	xtoa@c,indf2
  6166  003262                     
  6167                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 650:         --p;
  6168  003262  0633               	decf	xtoa@p^0,f,c
  6169  003264  A0D8               	btfss	status,0,c
  6170  003266  0634               	decf	(xtoa@p+1)^0,f,c
  6171  003268                     
  6172                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 651:         --w;
  6173  003268  0635               	decf	xtoa@w^0,f,c
  6174  00326A  A0D8               	btfss	status,0,c
  6175  00326C  0636               	decf	(xtoa@w+1)^0,f,c
  6176  00326E                     
  6177                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 652:         n = 
      +                          n >> 4;
  6178  00326E  C037  F027         	movff	xtoa@n,??_xtoa
  6179  003272  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  6180  003276  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  6181  00327A  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  6182  00327E  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  6183  003282  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  6184  003286  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  6185  00328A  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  6186  00328E  0E05               	movlw	5
  6187  003290  EF54  F019         	goto	u4550
  6188  003294                     u4555:
  6189  003294  FFFF               	dw	65535	; assembler added errata NOP
  6190  003296  90D8               	bcf	status,0,c
  6191  003298  322E               	rrcf	(??_xtoa+7)^0,f,c
  6192  00329A  322D               	rrcf	(??_xtoa+6)^0,f,c
  6193  00329C  322C               	rrcf	(??_xtoa+5)^0,f,c
  6194  00329E  322B               	rrcf	(??_xtoa+4)^0,f,c
  6195  0032A0  322A               	rrcf	(??_xtoa+3)^0,f,c
  6196  0032A2  3229               	rrcf	(??_xtoa+2)^0,f,c
  6197  0032A4  3228               	rrcf	(??_xtoa+1)^0,f,c
  6198  0032A6  3227               	rrcf	??_xtoa^0,f,c
  6199  0032A8                     u4550:
  6200  0032A8  FFFF               	dw	65535	; assembler added errata NOP
  6201  0032AA  2EE8               	decfsz	wreg,f,c
  6202  0032AC  EF4A  F019         	goto	u4555
  6203  0032B0  C027  F037         	movff	??_xtoa,xtoa@n
  6204  0032B4  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  6205  0032B8  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  6206  0032BC  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  6207  0032C0  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  6208  0032C4  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  6209  0032C8  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  6210  0032CC  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  6211  0032D0                     l4044:
  6212  0032D0  FFFF               	dw	65535	; assembler added errata NOP
  6213                           
  6214                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6215  0032D2  BE40               	btfsc	(xtoa@i+1)^0,7,c
  6216  0032D4  EF75  F019         	goto	u4561
  6217  0032D8  5040               	movf	(xtoa@i+1)^0,w,c
  6218  0032DA  E10A               	bnz	u4560
  6219  0032DC  0E02               	movlw	2
  6220  0032DE  5C3F               	subwf	xtoa@i^0,w,c
  6221  0032E0  A0D8               	btfss	status,0,c
  6222  0032E2  EF75  F019         	goto	u4561
  6223  0032E6  EF78  F019         	goto	u4560
  6224  0032EA                     u4561:
  6225  0032EA  FFFF               	dw	65535	; assembler added errata NOP
  6226  0032EC  EFB1  F019         	goto	l1254
  6227  0032F0                     u4560:
  6228  0032F0  FFFF               	dw	65535	; assembler added errata NOP
  6229  0032F2  5037               	movf	xtoa@n^0,w,c
  6230  0032F4  1038               	iorwf	(xtoa@n+1)^0,w,c
  6231  0032F6  1039               	iorwf	(xtoa@n+2)^0,w,c
  6232  0032F8  103A               	iorwf	(xtoa@n+3)^0,w,c
  6233  0032FA  103B               	iorwf	(xtoa@n+4)^0,w,c
  6234  0032FC  103C               	iorwf	(xtoa@n+5)^0,w,c
  6235  0032FE  103D               	iorwf	(xtoa@n+6)^0,w,c
  6236  003300  103E               	iorwf	(xtoa@n+7)^0,w,c
  6237  003302  A4D8               	btfss	status,2,c
  6238  003304  EF86  F019         	goto	u4571
  6239  003308  EF89  F019         	goto	u4570
  6240  00330C                     u4571:
  6241  00330C  FFFF               	dw	65535	; assembler added errata NOP
  6242  00330E  EFA3  F018         	goto	l4014
  6243  003312                     u4570:
  6244  003312  FFFF               	dw	65535	; assembler added errata NOP
  6245  003314  BE34               	btfsc	(xtoa@p+1)^0,7,c
  6246  003316  EF98  F019         	goto	u4580
  6247  00331A  5034               	movf	(xtoa@p+1)^0,w,c
  6248  00331C  E106               	bnz	u4581
  6249  00331E  0433               	decf	xtoa@p^0,w,c
  6250  003320  B0D8               	btfsc	status,0,c
  6251  003322  EF95  F019         	goto	u4581
  6252  003326  EF98  F019         	goto	u4580
  6253  00332A                     u4581:
  6254  00332A  FFFF               	dw	65535	; assembler added errata NOP
  6255  00332C  EFA3  F018         	goto	l4014
  6256  003330                     u4580:
  6257  003330  FFFF               	dw	65535	; assembler added errata NOP
  6258  003332  BE36               	btfsc	(xtoa@w+1)^0,7,c
  6259  003334  EFA4  F019         	goto	u4591
  6260  003338  5036               	movf	(xtoa@w+1)^0,w,c
  6261  00333A  E109               	bnz	u4590
  6262  00333C  0435               	decf	xtoa@w^0,w,c
  6263  00333E  A0D8               	btfss	status,0,c
  6264  003340  EFA4  F019         	goto	u4591
  6265  003344  EFA7  F019         	goto	u4590
  6266  003348                     u4591:
  6267  003348  FFFF               	dw	65535	; assembler added errata NOP
  6268  00334A  EFB1  F019         	goto	l1254
  6269  00334E                     u4590:
  6270  00334E  FFFF               	dw	65535	; assembler added errata NOP
  6271  003350  0100               	movlb	0	; () banked
  6272  003352  B38A               	btfsc	_flags& (0+255),1,b
  6273  003354  EFAE  F019         	goto	u4601
  6274  003358  EFB1  F019         	goto	u4600
  6275  00335C                     u4601:
  6276  00335C  FFFF               	dw	65535	; assembler added errata NOP
  6277  00335E  EFA3  F018         	goto	l4014
  6278  003362                     u4600:
  6279  003362                     l1254:
  6280  003362  FFFF               	dw	65535	; assembler added errata NOP
  6281                           
  6282                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  6283  003364  0100               	movlb	0	; () banked
  6284  003366  A98A               	btfss	_flags& (0+255),4,b
  6285  003368  EFB8  F019         	goto	u4611
  6286  00336C  EFBB  F019         	goto	u4610
  6287  003370                     u4611:
  6288  003370  FFFF               	dw	65535	; assembler added errata NOP
  6289  003372  EFD2  F019         	goto	l4060
  6290  003376                     u4610:
  6291  003376  FFFF               	dw	65535	; assembler added errata NOP
  6292  003378                     
  6293                           ; BSR set to: 0
  6294                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 657:         --i;
  6295  003378  063F               	decf	xtoa@i^0,f,c
  6296  00337A  A0D8               	btfss	status,0,c
  6297  00337C  0640               	decf	(xtoa@i+1)^0,f,c
  6298  00337E                     
  6299                           ; BSR set to: 0
  6300                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 658:         dbuf
      +                          [i] = x;
  6301  00337E  0E98               	movlw	low _dbuf
  6302  003380  243F               	addwf	xtoa@i^0,w,c
  6303  003382  6ED9               	movwf	fsr2l,c
  6304  003384  0E00               	movlw	high _dbuf
  6305  003386  2040               	addwfc	(xtoa@i+1)^0,w,c
  6306  003388  6EDA               	movwf	fsr2h,c
  6307  00338A  C026  FFDF         	movff	xtoa@x,indf2
  6308  00338E                     
  6309                           ; BSR set to: 0
  6310                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 659:         --i;
  6311  00338E  063F               	decf	xtoa@i^0,f,c
  6312  003390  A0D8               	btfss	status,0,c
  6313  003392  0640               	decf	(xtoa@i+1)^0,f,c
  6314                           
  6315                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 660:         dbuf
      +                          [i] = '0';
  6316  003394  0E98               	movlw	low _dbuf
  6317  003396  243F               	addwf	xtoa@i^0,w,c
  6318  003398  6ED9               	movwf	fsr2l,c
  6319  00339A  0E00               	movlw	high _dbuf
  6320  00339C  2040               	addwfc	(xtoa@i+1)^0,w,c
  6321  00339E  6EDA               	movwf	fsr2h,c
  6322  0033A0  0E30               	movlw	48
  6323  0033A2  6EDF               	movwf	indf2,c
  6324  0033A4                     l4060:
  6325  0033A4  FFFF               	dw	65535	; assembler added errata NOP
  6326                           
  6327                           ; BSR set to: 0
  6328                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 664:     return p
      +                          ad(fp, &dbuf[i], w);
  6329  0033A6  C01C  F011         	movff	xtoa@fp,pad@fp
  6330  0033AA  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  6331  0033AE  0E98               	movlw	low _dbuf
  6332  0033B0  243F               	addwf	xtoa@i^0,w,c
  6333  0033B2  6E13               	movwf	pad@buf^0,c
  6334  0033B4  0E00               	movlw	high _dbuf
  6335  0033B6  2040               	addwfc	(xtoa@i+1)^0,w,c
  6336  0033B8  6E14               	movwf	(pad@buf+1)^0,c
  6337  0033BA  C035  F015         	movff	xtoa@w,pad@p
  6338  0033BE  C036  F016         	movff	xtoa@w+1,pad@p+1
  6339  0033C2  ECC8  F039         	call	_pad	;wreg free
  6340  0033C6  C011  F01C         	movff	?_pad,?_xtoa
  6341  0033CA  C012  F01D         	movff	?_pad+1,?_xtoa+1
  6342  0033CE  0012               	return		;funcret
  6343  0033D0  FFFF               	dw	65535	; errata NOP
  6344  0033D2                     __end_of_xtoa:
  6345                           	callstack 0
  6346                           
  6347 ;; *************** function _toupper *****************
  6348 ;; Defined at:
  6349 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\toupper.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;  c               2    6[COMRAM] int 
  6352 ;; Auto vars:     Size  Location     Type
  6353 ;;		None
  6354 ;; Return value:  Size  Location     Type
  6355 ;;                  2    6[COMRAM] int 
  6356 ;; Registers used:
  6357 ;;		wreg, status,2, status,0
  6358 ;; Tracked objects:
  6359 ;;		On entry : 0/0
  6360 ;;		On exit  : 0/0
  6361 ;;		Unchanged: 0/0
  6362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6363 ;;      Params:         2       0       0       0       0       0       0
  6364 ;;      Locals:         2       0       0       0       0       0       0
  6365 ;;      Temps:          4       0       0       0       0       0       0
  6366 ;;      Totals:         8       0       0       0       0       0       0
  6367 ;;Total ram usage:        8 bytes
  6368 ;; Hardware stack levels used:    1
  6369 ;; Hardware stack levels required when called:    2
  6370 ;; This function calls:
  6371 ;;		_islower
  6372 ;; This function is called by:
  6373 ;;		_xtoa
  6374 ;; This function uses a non-reentrant model
  6375 ;;
  6376                           
  6377                           	psect	text10
  6378  006BE6                     __ptext10:
  6379                           	callstack 0
  6380  006BE6                     _toupper:
  6381                           	callstack 0
  6382  006BE6  FFFF               	dw	65535	; assembler added errata NOP
  6383  006BE8  0E9F               	movlw	159
  6384  006BEA  6E09               	movwf	??_toupper^0,c
  6385  006BEC  0EFF               	movlw	255
  6386  006BEE  6E0A               	movwf	(??_toupper+1)^0,c
  6387  006BF0  C007  F00B         	movff	toupper@c,??_toupper+2
  6388  006BF4  C008  F00C         	movff	toupper@c+1,??_toupper+3
  6389  006BF8  5009               	movf	??_toupper^0,w,c
  6390  006BFA  260B               	addwf	(??_toupper+2)^0,f,c
  6391  006BFC  500A               	movf	(??_toupper+1)^0,w,c
  6392  006BFE  220C               	addwfc	(??_toupper+3)^0,f,c
  6393  006C00  500C               	movf	(??_toupper+3)^0,w,c
  6394  006C02  E10B               	bnz	u3950
  6395  006C04  0E1A               	movlw	26
  6396  006C06  5C0B               	subwf	(??_toupper+2)^0,w,c
  6397  006C08  A0D8               	btfss	status,0,c
  6398  006C0A  EF09  F036         	goto	u3951
  6399  006C0E  EF0D  F036         	goto	u3950
  6400  006C12                     u3951:
  6401  006C12  FFFF               	dw	65535	; assembler added errata NOP
  6402  006C14  0E01               	movlw	1
  6403  006C16  EF0F  F036         	goto	u3960
  6404  006C1A                     u3950:
  6405  006C1A  FFFF               	dw	65535	; assembler added errata NOP
  6406  006C1C  0E00               	movlw	0
  6407  006C1E                     u3960:
  6408  006C1E  FFFF               	dw	65535	; assembler added errata NOP
  6409  006C20  6E0D               	movwf	_toupper$1894^0,c
  6410  006C22  6A0E               	clrf	(_toupper$1894+1)^0,c
  6411  006C24  500D               	movf	_toupper$1894^0,w,c
  6412  006C26  100E               	iorwf	(_toupper$1894+1)^0,w,c
  6413  006C28  B4D8               	btfsc	status,2,c
  6414  006C2A  EF19  F036         	goto	u3971
  6415  006C2E  EF1C  F036         	goto	u3970
  6416  006C32                     u3971:
  6417  006C32  FFFF               	dw	65535	; assembler added errata NOP
  6418  006C34  EF23  F036         	goto	l1440
  6419  006C38                     u3970:
  6420  006C38  FFFF               	dw	65535	; assembler added errata NOP
  6421  006C3A  0E5F               	movlw	95
  6422  006C3C  1407               	andwf	toupper@c^0,w,c
  6423  006C3E  6E07               	movwf	?_toupper^0,c
  6424  006C40  6A08               	clrf	(?_toupper+1)^0,c
  6425  006C42  EF28  F036         	goto	l1445
  6426  006C46                     l1440:
  6427  006C46  FFFF               	dw	65535	; assembler added errata NOP
  6428  006C48  C007  F007         	movff	toupper@c,?_toupper
  6429  006C4C  C008  F008         	movff	toupper@c+1,?_toupper+1
  6430  006C50                     l1445:
  6431  006C50  FFFF               	dw	65535	; assembler added errata NOP
  6432  006C52  0012               	return		;funcret
  6433  006C54  FFFF               	dw	65535	; errata NOP
  6434  006C56                     __end_of_toupper:
  6435                           	callstack 0
  6436                           
  6437 ;; *************** function _islower *****************
  6438 ;; Defined at:
  6439 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\islower.c"
  6440 ;; Parameters:    Size  Location     Type
  6441 ;;  c               2    0[COMRAM] int 
  6442 ;; Auto vars:     Size  Location     Type
  6443 ;;		None
  6444 ;; Return value:  Size  Location     Type
  6445 ;;                  2    0[COMRAM] int 
  6446 ;; Registers used:
  6447 ;;		wreg, status,2, status,0
  6448 ;; Tracked objects:
  6449 ;;		On entry : 0/0
  6450 ;;		On exit  : 0/0
  6451 ;;		Unchanged: 0/0
  6452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6453 ;;      Params:         2       0       0       0       0       0       0
  6454 ;;      Locals:         0       0       0       0       0       0       0
  6455 ;;      Temps:          4       0       0       0       0       0       0
  6456 ;;      Totals:         6       0       0       0       0       0       0
  6457 ;;Total ram usage:        6 bytes
  6458 ;; Hardware stack levels used:    1
  6459 ;; Hardware stack levels required when called:    1
  6460 ;; This function calls:
  6461 ;;		Nothing
  6462 ;; This function is called by:
  6463 ;;		_toupper
  6464 ;; This function uses a non-reentrant model
  6465 ;;
  6466                           
  6467                           	psect	text11
  6468  0068F0                     __ptext11:
  6469                           	callstack 0
  6470  0068F0                     _islower:
  6471                           	callstack 23
  6472  0068F0  FFFF               	dw	65535	; assembler added errata NOP
  6473  0068F2  0E9F               	movlw	159
  6474  0068F4  6E03               	movwf	??_islower^0,c
  6475  0068F6  0EFF               	movlw	255
  6476  0068F8  6E04               	movwf	(??_islower+1)^0,c
  6477  0068FA  C001  F005         	movff	islower@c,??_islower+2
  6478  0068FE  C002  F006         	movff	islower@c+1,??_islower+3
  6479  006902  5003               	movf	??_islower^0,w,c
  6480  006904  2605               	addwf	(??_islower+2)^0,f,c
  6481  006906  5004               	movf	(??_islower+1)^0,w,c
  6482  006908  2206               	addwfc	(??_islower+3)^0,f,c
  6483  00690A  5006               	movf	(??_islower+3)^0,w,c
  6484  00690C  E10B               	bnz	u3640
  6485  00690E  0E1A               	movlw	26
  6486  006910  5C05               	subwf	(??_islower+2)^0,w,c
  6487  006912  A0D8               	btfss	status,0,c
  6488  006914  EF8E  F034         	goto	u3641
  6489  006918  EF92  F034         	goto	u3640
  6490  00691C                     u3641:
  6491  00691C  FFFF               	dw	65535	; assembler added errata NOP
  6492  00691E  0E01               	movlw	1
  6493  006920  EF94  F034         	goto	u3650
  6494  006924                     u3640:
  6495  006924  FFFF               	dw	65535	; assembler added errata NOP
  6496  006926  0E00               	movlw	0
  6497  006928                     u3650:
  6498  006928  FFFF               	dw	65535	; assembler added errata NOP
  6499  00692A  6E01               	movwf	?_islower^0,c
  6500  00692C  6A02               	clrf	(?_islower+1)^0,c
  6501  00692E  0012               	return		;funcret
  6502  006930  FFFF               	dw	65535	; errata NOP
  6503  006932                     __end_of_islower:
  6504                           	callstack 0
  6505                           
  6506 ;; *************** function _isupper *****************
  6507 ;; Defined at:
  6508 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  6509 ;; Parameters:    Size  Location     Type
  6510 ;;  c               2    0[COMRAM] int 
  6511 ;; Auto vars:     Size  Location     Type
  6512 ;;		None
  6513 ;; Return value:  Size  Location     Type
  6514 ;;                  2    0[COMRAM] int 
  6515 ;; Registers used:
  6516 ;;		wreg, status,2, status,0
  6517 ;; Tracked objects:
  6518 ;;		On entry : 0/0
  6519 ;;		On exit  : 0/0
  6520 ;;		Unchanged: 0/0
  6521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6522 ;;      Params:         2       0       0       0       0       0       0
  6523 ;;      Locals:         0       0       0       0       0       0       0
  6524 ;;      Temps:          4       0       0       0       0       0       0
  6525 ;;      Totals:         6       0       0       0       0       0       0
  6526 ;;Total ram usage:        6 bytes
  6527 ;; Hardware stack levels used:    1
  6528 ;; Hardware stack levels required when called:    1
  6529 ;; This function calls:
  6530 ;;		Nothing
  6531 ;; This function is called by:
  6532 ;;		_xtoa
  6533 ;; This function uses a non-reentrant model
  6534 ;;
  6535                           
  6536                           	psect	text12
  6537  0068AE                     __ptext12:
  6538                           	callstack 0
  6539  0068AE                     _isupper:
  6540                           	callstack 24
  6541  0068AE  FFFF               	dw	65535	; assembler added errata NOP
  6542  0068B0  0EBF               	movlw	191
  6543  0068B2  6E03               	movwf	??_isupper^0,c
  6544  0068B4  0EFF               	movlw	255
  6545  0068B6  6E04               	movwf	(??_isupper+1)^0,c
  6546  0068B8  C001  F005         	movff	isupper@c,??_isupper+2
  6547  0068BC  C002  F006         	movff	isupper@c+1,??_isupper+3
  6548  0068C0  5003               	movf	??_isupper^0,w,c
  6549  0068C2  2605               	addwf	(??_isupper+2)^0,f,c
  6550  0068C4  5004               	movf	(??_isupper+1)^0,w,c
  6551  0068C6  2206               	addwfc	(??_isupper+3)^0,f,c
  6552  0068C8  5006               	movf	(??_isupper+3)^0,w,c
  6553  0068CA  E10B               	bnz	u3910
  6554  0068CC  0E1A               	movlw	26
  6555  0068CE  5C05               	subwf	(??_isupper+2)^0,w,c
  6556  0068D0  A0D8               	btfss	status,0,c
  6557  0068D2  EF6D  F034         	goto	u3911
  6558  0068D6  EF71  F034         	goto	u3910
  6559  0068DA                     u3911:
  6560  0068DA  FFFF               	dw	65535	; assembler added errata NOP
  6561  0068DC  0E01               	movlw	1
  6562  0068DE  EF73  F034         	goto	u3920
  6563  0068E2                     u3910:
  6564  0068E2  FFFF               	dw	65535	; assembler added errata NOP
  6565  0068E4  0E00               	movlw	0
  6566  0068E6                     u3920:
  6567  0068E6  FFFF               	dw	65535	; assembler added errata NOP
  6568  0068E8  6E01               	movwf	?_isupper^0,c
  6569  0068EA  6A02               	clrf	(?_isupper+1)^0,c
  6570  0068EC  0012               	return		;funcret
  6571  0068EE  FFFF               	dw	65535	; errata NOP
  6572  0068F0                     __end_of_isupper:
  6573                           	callstack 0
  6574                           
  6575 ;; *************** function _isalpha *****************
  6576 ;; Defined at:
  6577 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isalpha.c"
  6578 ;; Parameters:    Size  Location     Type
  6579 ;;  c               2    0[COMRAM] int 
  6580 ;; Auto vars:     Size  Location     Type
  6581 ;;		None
  6582 ;; Return value:  Size  Location     Type
  6583 ;;                  2    0[COMRAM] int 
  6584 ;; Registers used:
  6585 ;;		wreg, status,2, status,0
  6586 ;; Tracked objects:
  6587 ;;		On entry : 0/0
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6591 ;;      Params:         2       0       0       0       0       0       0
  6592 ;;      Locals:         0       0       0       0       0       0       0
  6593 ;;      Temps:          4       0       0       0       0       0       0
  6594 ;;      Totals:         6       0       0       0       0       0       0
  6595 ;;Total ram usage:        6 bytes
  6596 ;; Hardware stack levels used:    1
  6597 ;; Hardware stack levels required when called:    1
  6598 ;; This function calls:
  6599 ;;		Nothing
  6600 ;; This function is called by:
  6601 ;;		_xtoa
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           
  6605                           	psect	text13
  6606  006932                     __ptext13:
  6607                           	callstack 0
  6608  006932                     _isalpha:
  6609                           	callstack 24
  6610  006932  FFFF               	dw	65535	; assembler added errata NOP
  6611  006934  0E9F               	movlw	159
  6612  006936  6E03               	movwf	??_isalpha^0,c
  6613  006938  0EFF               	movlw	255
  6614  00693A  6E04               	movwf	(??_isalpha+1)^0,c
  6615  00693C  0E20               	movlw	32
  6616  00693E  1001               	iorwf	isalpha@c^0,w,c
  6617  006940  6E05               	movwf	(??_isalpha+2)^0,c
  6618  006942  0E00               	movlw	0
  6619  006944  1002               	iorwf	(isalpha@c+1)^0,w,c
  6620  006946  6E06               	movwf	(??_isalpha+3)^0,c
  6621  006948  5003               	movf	??_isalpha^0,w,c
  6622  00694A  2605               	addwf	(??_isalpha+2)^0,f,c
  6623  00694C  5004               	movf	(??_isalpha+1)^0,w,c
  6624  00694E  2206               	addwfc	(??_isalpha+3)^0,f,c
  6625  006950  5006               	movf	(??_isalpha+3)^0,w,c
  6626  006952  E10B               	bnz	u3930
  6627  006954  0E1A               	movlw	26
  6628  006956  5C05               	subwf	(??_isalpha+2)^0,w,c
  6629  006958  A0D8               	btfss	status,0,c
  6630  00695A  EFB1  F034         	goto	u3931
  6631  00695E  EFB5  F034         	goto	u3930
  6632  006962                     u3931:
  6633  006962  FFFF               	dw	65535	; assembler added errata NOP
  6634  006964  0E01               	movlw	1
  6635  006966  EFB7  F034         	goto	u3940
  6636  00696A                     u3930:
  6637  00696A  FFFF               	dw	65535	; assembler added errata NOP
  6638  00696C  0E00               	movlw	0
  6639  00696E                     u3940:
  6640  00696E  FFFF               	dw	65535	; assembler added errata NOP
  6641  006970  6E01               	movwf	?_isalpha^0,c
  6642  006972  6A02               	clrf	(?_isalpha+1)^0,c
  6643  006974  0012               	return		;funcret
  6644  006976  FFFF               	dw	65535	; errata NOP
  6645  006978                     __end_of_isalpha:
  6646                           	callstack 0
  6647                           
  6648 ;; *************** function _utoa *****************
  6649 ;; Defined at:
  6650 ;;		line 593 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6651 ;; Parameters:    Size  Location     Type
  6652 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6653 ;;		 -> vsnprintf@f(6), 
  6654 ;;  d               8   29[COMRAM] unsigned long long 
  6655 ;; Auto vars:     Size  Location     Type
  6656 ;;  n               8   49[COMRAM] unsigned long long 
  6657 ;;  i               2   57[COMRAM] int 
  6658 ;;  w               2   47[COMRAM] int 
  6659 ;;  p               2   45[COMRAM] int 
  6660 ;; Return value:  Size  Location     Type
  6661 ;;                  2   27[COMRAM] int 
  6662 ;; Registers used:
  6663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6664 ;; Tracked objects:
  6665 ;;		On entry : 0/0
  6666 ;;		On exit  : 0/0
  6667 ;;		Unchanged: 0/0
  6668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6669 ;;      Params:        10       0       0       0       0       0       0
  6670 ;;      Locals:        14       0       0       0       0       0       0
  6671 ;;      Temps:          8       0       0       0       0       0       0
  6672 ;;      Totals:        32       0       0       0       0       0       0
  6673 ;;Total ram usage:       32 bytes
  6674 ;; Hardware stack levels used:    1
  6675 ;; Hardware stack levels required when called:    5
  6676 ;; This function calls:
  6677 ;;		___lodiv
  6678 ;;		___lomod
  6679 ;;		_pad
  6680 ;; This function is called by:
  6681 ;;		_vfpfcnvrt
  6682 ;; This function uses a non-reentrant model
  6683 ;;
  6684                           
  6685                           	psect	text14
  6686  0033D2                     __ptext14:
  6687                           	callstack 0
  6688  0033D2                     _utoa:
  6689                           	callstack 0
  6690  0033D2  FFFF               	dw	65535	; assembler added errata NOP
  6691  0033D4                     
  6692                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 593: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 594: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 595:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common
      +                          \doprnt.c: 596:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sourc
      +                          es\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  6693  0033D4  0100               	movlb	0	; () banked
  6694  0033D6  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6695  0033D8  EFF0  F019         	goto	u4381
  6696  0033DC  EFF3  F019         	goto	u4380
  6697  0033E0                     u4381:
  6698  0033E0  FFFF               	dw	65535	; assembler added errata NOP
  6699  0033E2  EFF5  F019         	goto	l3966
  6700  0033E6                     u4380:
  6701  0033E6  FFFF               	dw	65535	; assembler added errata NOP
  6702  0033E8                     
  6703                           ; BSR set to: 0
  6704                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 600:         flag
      +                          s &= ~(1 << 1);
  6705  0033E8  938A               	bcf	_flags& (0+255),1,b
  6706  0033EA                     l3966:
  6707  0033EA  FFFF               	dw	65535	; assembler added errata NOP
  6708                           
  6709                           ; BSR set to: 0
  6710                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 602:     p = (0 <
      +                           prec) ? prec : 1;
  6711  0033EC  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6712  0033EE  EF04  F01A         	goto	u4390
  6713  0033F2  5189               	movf	(_prec+1)& (0+255),w,b
  6714  0033F4  E106               	bnz	u4391
  6715  0033F6  0588               	decf	_prec& (0+255),w,b
  6716  0033F8  B0D8               	btfsc	status,0,c
  6717  0033FA  EF01  F01A         	goto	u4391
  6718  0033FE  EF04  F01A         	goto	u4390
  6719  003402                     u4391:
  6720  003402  FFFF               	dw	65535	; assembler added errata NOP
  6721  003404  EF0B  F01A         	goto	l1216
  6722  003408                     u4390:
  6723  003408  FFFF               	dw	65535	; assembler added errata NOP
  6724  00340A                     
  6725                           ; BSR set to: 0
  6726  00340A  0E00               	movlw	0
  6727  00340C  6E2F               	movwf	(utoa@p+1)^0,c
  6728  00340E  0E01               	movlw	1
  6729  003410  6E2E               	movwf	utoa@p^0,c
  6730  003412  EF10  F01A         	goto	l1218
  6731  003416                     l1216:
  6732  003416  FFFF               	dw	65535	; assembler added errata NOP
  6733                           
  6734                           ; BSR set to: 0
  6735  003418  C088  F02E         	movff	_prec,utoa@p
  6736  00341C  C089  F02F         	movff	_prec+1,utoa@p+1
  6737  003420                     l1218:
  6738  003420  FFFF               	dw	65535	; assembler added errata NOP
  6739                           
  6740                           ; BSR set to: 0
  6741                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 603:     w = widt
      +                          h;
  6742  003422  C086  F030         	movff	_width,utoa@w
  6743  003426  C087  F031         	movff	_width+1,utoa@w+1
  6744                           
  6745                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 606:     n = d;
  6746  00342A  C01E  F032         	movff	utoa@d,utoa@n
  6747  00342E  C01F  F033         	movff	utoa@d+1,utoa@n+1
  6748  003432  C020  F034         	movff	utoa@d+2,utoa@n+2
  6749  003436  C021  F035         	movff	utoa@d+3,utoa@n+3
  6750  00343A  C022  F036         	movff	utoa@d+4,utoa@n+4
  6751  00343E  C023  F037         	movff	utoa@d+5,utoa@n+5
  6752  003442  C024  F038         	movff	utoa@d+6,utoa@n+6
  6753  003446  C025  F039         	movff	utoa@d+7,utoa@n+7
  6754  00344A                     
  6755                           ; BSR set to: 0
  6756                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 607:     i = size
      +                          of(dbuf) - 1;
  6757  00344A  0E00               	movlw	0
  6758  00344C  6E3B               	movwf	(utoa@i+1)^0,c
  6759  00344E  0E1F               	movlw	31
  6760  003450  6E3A               	movwf	utoa@i^0,c
  6761  003452                     
  6762                           ; BSR set to: 0
  6763                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 608:     dbuf[i] 
      +                          = '\0';
  6764  003452  0E00               	movlw	0
  6765  003454  6FB7               	movwf	(_dbuf+31)& (0+255),b
  6766                           
  6767                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6768  003456  EFA4  F01A         	goto	l3984
  6769  00345A                     l3974:
  6770  00345A  FFFF               	dw	65535	; assembler added errata NOP
  6771                           
  6772                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 610:         --i;
  6773  00345C  063A               	decf	utoa@i^0,f,c
  6774  00345E  A0D8               	btfss	status,0,c
  6775  003460  063B               	decf	(utoa@i+1)^0,f,c
  6776  003462                     
  6777                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 611:         dbuf
      +                          [i] = '0' + (n % 10);
  6778  003462  0E98               	movlw	low _dbuf
  6779  003464  243A               	addwf	utoa@i^0,w,c
  6780  003466  6ED9               	movwf	fsr2l,c
  6781  003468  0E00               	movlw	high _dbuf
  6782  00346A  203B               	addwfc	(utoa@i+1)^0,w,c
  6783  00346C  6EDA               	movwf	fsr2h,c
  6784  00346E  C032  F001         	movff	utoa@n,___lomod@dividend
  6785  003472  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  6786  003476  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  6787  00347A  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  6788  00347E  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  6789  003482  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  6790  003486  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  6791  00348A  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  6792  00348E  0E0A               	movlw	10
  6793  003490  6E09               	movwf	___lomod@divisor^0,c
  6794  003492  0E00               	movlw	0
  6795  003494  6E0A               	movwf	(___lomod@divisor+1)^0,c
  6796  003496  0E00               	movlw	0
  6797  003498  6E0B               	movwf	(___lomod@divisor+2)^0,c
  6798  00349A  0E00               	movlw	0
  6799  00349C  6E0C               	movwf	(___lomod@divisor+3)^0,c
  6800  00349E  0E00               	movlw	0
  6801  0034A0  6E0D               	movwf	(___lomod@divisor+4)^0,c
  6802  0034A2  0E00               	movlw	0
  6803  0034A4  6E0E               	movwf	(___lomod@divisor+5)^0,c
  6804  0034A6  0E00               	movlw	0
  6805  0034A8  6E0F               	movwf	(___lomod@divisor+6)^0,c
  6806  0034AA  0E00               	movlw	0
  6807  0034AC  6E10               	movwf	(___lomod@divisor+7)^0,c
  6808  0034AE  EC3B  F03A         	call	___lomod	;wreg free
  6809  0034B2  C001  F026         	movff	?___lomod,??_utoa
  6810  0034B6  C002  F027         	movff	?___lomod+1,??_utoa+1
  6811  0034BA  C003  F028         	movff	?___lomod+2,??_utoa+2
  6812  0034BE  C004  F029         	movff	?___lomod+3,??_utoa+3
  6813  0034C2  C005  F02A         	movff	?___lomod+4,??_utoa+4
  6814  0034C6  C006  F02B         	movff	?___lomod+5,??_utoa+5
  6815  0034CA  C007  F02C         	movff	?___lomod+6,??_utoa+6
  6816  0034CE  C008  F02D         	movff	?___lomod+7,??_utoa+7
  6817  0034D2  5026               	movf	??_utoa^0,w,c
  6818  0034D4  0F30               	addlw	48
  6819  0034D6  6EDF               	movwf	indf2,c
  6820  0034D8                     
  6821                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 612:         --p;
  6822  0034D8  062E               	decf	utoa@p^0,f,c
  6823  0034DA  A0D8               	btfss	status,0,c
  6824  0034DC  062F               	decf	(utoa@p+1)^0,f,c
  6825  0034DE                     
  6826                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 613:         --w;
  6827  0034DE  0630               	decf	utoa@w^0,f,c
  6828  0034E0  A0D8               	btfss	status,0,c
  6829  0034E2  0631               	decf	(utoa@w+1)^0,f,c
  6830  0034E4                     
  6831                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 614:         n = 
      +                          n / 10;
  6832  0034E4  C032  F001         	movff	utoa@n,___lodiv@dividend
  6833  0034E8  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  6834  0034EC  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  6835  0034F0  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  6836  0034F4  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  6837  0034F8  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  6838  0034FC  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  6839  003500  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  6840  003504  0E0A               	movlw	10
  6841  003506  6E09               	movwf	___lodiv@divisor^0,c
  6842  003508  0E00               	movlw	0
  6843  00350A  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  6844  00350C  0E00               	movlw	0
  6845  00350E  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  6846  003510  0E00               	movlw	0
  6847  003512  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  6848  003514  0E00               	movlw	0
  6849  003516  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  6850  003518  0E00               	movlw	0
  6851  00351A  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  6852  00351C  0E00               	movlw	0
  6853  00351E  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  6854  003520  0E00               	movlw	0
  6855  003522  6E10               	movwf	(___lodiv@divisor+7)^0,c
  6856  003524  ECAC  F03B         	call	___lodiv	;wreg free
  6857  003528  C001  F032         	movff	?___lodiv,utoa@n
  6858  00352C  C002  F033         	movff	?___lodiv+1,utoa@n+1
  6859  003530  C003  F034         	movff	?___lodiv+2,utoa@n+2
  6860  003534  C004  F035         	movff	?___lodiv+3,utoa@n+3
  6861  003538  C005  F036         	movff	?___lodiv+4,utoa@n+4
  6862  00353C  C006  F037         	movff	?___lodiv+5,utoa@n+5
  6863  003540  C007  F038         	movff	?___lodiv+6,utoa@n+6
  6864  003544  C008  F039         	movff	?___lodiv+7,utoa@n+7
  6865  003548                     l3984:
  6866  003548  FFFF               	dw	65535	; assembler added errata NOP
  6867                           
  6868                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6869  00354A  503A               	movf	utoa@i^0,w,c
  6870  00354C  103B               	iorwf	(utoa@i+1)^0,w,c
  6871  00354E  B4D8               	btfsc	status,2,c
  6872  003550  EFAC  F01A         	goto	u4401
  6873  003554  EFAF  F01A         	goto	u4400
  6874  003558                     u4401:
  6875  003558  FFFF               	dw	65535	; assembler added errata NOP
  6876  00355A  EFE8  F01A         	goto	l3994
  6877  00355E                     u4400:
  6878  00355E  FFFF               	dw	65535	; assembler added errata NOP
  6879  003560  5032               	movf	utoa@n^0,w,c
  6880  003562  1033               	iorwf	(utoa@n+1)^0,w,c
  6881  003564  1034               	iorwf	(utoa@n+2)^0,w,c
  6882  003566  1035               	iorwf	(utoa@n+3)^0,w,c
  6883  003568  1036               	iorwf	(utoa@n+4)^0,w,c
  6884  00356A  1037               	iorwf	(utoa@n+5)^0,w,c
  6885  00356C  1038               	iorwf	(utoa@n+6)^0,w,c
  6886  00356E  1039               	iorwf	(utoa@n+7)^0,w,c
  6887  003570  A4D8               	btfss	status,2,c
  6888  003572  EFBD  F01A         	goto	u4411
  6889  003576  EFC0  F01A         	goto	u4410
  6890  00357A                     u4411:
  6891  00357A  FFFF               	dw	65535	; assembler added errata NOP
  6892  00357C  EF2D  F01A         	goto	l3974
  6893  003580                     u4410:
  6894  003580  FFFF               	dw	65535	; assembler added errata NOP
  6895  003582  BE2F               	btfsc	(utoa@p+1)^0,7,c
  6896  003584  EFCF  F01A         	goto	u4420
  6897  003588  502F               	movf	(utoa@p+1)^0,w,c
  6898  00358A  E106               	bnz	u4421
  6899  00358C  042E               	decf	utoa@p^0,w,c
  6900  00358E  B0D8               	btfsc	status,0,c
  6901  003590  EFCC  F01A         	goto	u4421
  6902  003594  EFCF  F01A         	goto	u4420
  6903  003598                     u4421:
  6904  003598  FFFF               	dw	65535	; assembler added errata NOP
  6905  00359A  EF2D  F01A         	goto	l3974
  6906  00359E                     u4420:
  6907  00359E  FFFF               	dw	65535	; assembler added errata NOP
  6908  0035A0  BE31               	btfsc	(utoa@w+1)^0,7,c
  6909  0035A2  EFDB  F01A         	goto	u4431
  6910  0035A6  5031               	movf	(utoa@w+1)^0,w,c
  6911  0035A8  E109               	bnz	u4430
  6912  0035AA  0430               	decf	utoa@w^0,w,c
  6913  0035AC  A0D8               	btfss	status,0,c
  6914  0035AE  EFDB  F01A         	goto	u4431
  6915  0035B2  EFDE  F01A         	goto	u4430
  6916  0035B6                     u4431:
  6917  0035B6  FFFF               	dw	65535	; assembler added errata NOP
  6918  0035B8  EFE8  F01A         	goto	l3994
  6919  0035BC                     u4430:
  6920  0035BC  FFFF               	dw	65535	; assembler added errata NOP
  6921  0035BE  0100               	movlb	0	; () banked
  6922  0035C0  B38A               	btfsc	_flags& (0+255),1,b
  6923  0035C2  EFE5  F01A         	goto	u4441
  6924  0035C6  EFE8  F01A         	goto	u4440
  6925  0035CA                     u4441:
  6926  0035CA  FFFF               	dw	65535	; assembler added errata NOP
  6927  0035CC  EF2D  F01A         	goto	l3974
  6928  0035D0                     u4440:
  6929  0035D0                     l3994:
  6930  0035D0  FFFF               	dw	65535	; assembler added errata NOP
  6931                           
  6932                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 618:     return p
      +                          ad(fp, &dbuf[i], w);
  6933  0035D2  C01C  F011         	movff	utoa@fp,pad@fp
  6934  0035D6  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  6935  0035DA  0E98               	movlw	low _dbuf
  6936  0035DC  243A               	addwf	utoa@i^0,w,c
  6937  0035DE  6E13               	movwf	pad@buf^0,c
  6938  0035E0  0E00               	movlw	high _dbuf
  6939  0035E2  203B               	addwfc	(utoa@i+1)^0,w,c
  6940  0035E4  6E14               	movwf	(pad@buf+1)^0,c
  6941  0035E6  C030  F015         	movff	utoa@w,pad@p
  6942  0035EA  C031  F016         	movff	utoa@w+1,pad@p+1
  6943  0035EE  ECC8  F039         	call	_pad	;wreg free
  6944  0035F2  C011  F01C         	movff	?_pad,?_utoa
  6945  0035F6  C012  F01D         	movff	?_pad+1,?_utoa+1
  6946  0035FA  0012               	return		;funcret
  6947  0035FC  FFFF               	dw	65535	; errata NOP
  6948  0035FE                     __end_of_utoa:
  6949                           	callstack 0
  6950                           
  6951 ;; *************** function ___lomod *****************
  6952 ;; Defined at:
  6953 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lomod.c"
  6954 ;; Parameters:    Size  Location     Type
  6955 ;;  dividend        8    0[COMRAM] unsigned long long 
  6956 ;;  divisor         8    8[COMRAM] unsigned long long 
  6957 ;; Auto vars:     Size  Location     Type
  6958 ;;  counter         1   16[COMRAM] unsigned char 
  6959 ;; Return value:  Size  Location     Type
  6960 ;;                  8    0[COMRAM] unsigned long long 
  6961 ;; Registers used:
  6962 ;;		wreg, status,2, status,0
  6963 ;; Tracked objects:
  6964 ;;		On entry : 0/0
  6965 ;;		On exit  : 0/0
  6966 ;;		Unchanged: 0/0
  6967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6968 ;;      Params:        16       0       0       0       0       0       0
  6969 ;;      Locals:         1       0       0       0       0       0       0
  6970 ;;      Temps:          0       0       0       0       0       0       0
  6971 ;;      Totals:        17       0       0       0       0       0       0
  6972 ;;Total ram usage:       17 bytes
  6973 ;; Hardware stack levels used:    1
  6974 ;; Hardware stack levels required when called:    1
  6975 ;; This function calls:
  6976 ;;		Nothing
  6977 ;; This function is called by:
  6978 ;;		_utoa
  6979 ;; This function uses a non-reentrant model
  6980 ;;
  6981                           
  6982                           	psect	text15
  6983  007476                     __ptext15:
  6984                           	callstack 0
  6985  007476                     ___lomod:
  6986                           	callstack 0
  6987  007476  FFFF               	dw	65535	; assembler added errata NOP
  6988  007478  5009               	movf	___lomod@divisor^0,w,c
  6989  00747A  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  6990  00747C  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  6991  00747E  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  6992  007480  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  6993  007482  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  6994  007484  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  6995  007486  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  6996  007488  B4D8               	btfsc	status,2,c
  6997  00748A  EF49  F03A         	goto	u3841
  6998  00748E  EF4C  F03A         	goto	u3840
  6999  007492                     u3841:
  7000  007492  FFFF               	dw	65535	; assembler added errata NOP
  7001  007494  EF9D  F03A         	goto	l828
  7002  007498                     u3840:
  7003  007498  FFFF               	dw	65535	; assembler added errata NOP
  7004  00749A  0E01               	movlw	1
  7005  00749C  6E11               	movwf	___lomod@counter^0,c
  7006  00749E  EF5C  F03A         	goto	l3730
  7007  0074A2                     l3728:
  7008  0074A2  FFFF               	dw	65535	; assembler added errata NOP
  7009  0074A4  90D8               	bcf	status,0,c
  7010  0074A6  3609               	rlcf	___lomod@divisor^0,f,c
  7011  0074A8  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  7012  0074AA  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  7013  0074AC  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  7014  0074AE  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  7015  0074B0  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  7016  0074B2  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  7017  0074B4  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  7018  0074B6  2A11               	incf	___lomod@counter^0,f,c
  7019  0074B8                     l3730:
  7020  0074B8  FFFF               	dw	65535	; assembler added errata NOP
  7021  0074BA  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  7022  0074BC  EF62  F03A         	goto	u3851
  7023  0074C0  EF65  F03A         	goto	u3850
  7024  0074C4                     u3851:
  7025  0074C4  FFFF               	dw	65535	; assembler added errata NOP
  7026  0074C6  EF51  F03A         	goto	l3728
  7027  0074CA                     u3850:
  7028  0074CA  FFFF               	dw	65535	; assembler added errata NOP
  7029  0074CC                     l3732:
  7030  0074CC  FFFF               	dw	65535	; assembler added errata NOP
  7031  0074CE  5009               	movf	___lomod@divisor^0,w,c
  7032  0074D0  5C01               	subwf	___lomod@dividend^0,w,c
  7033  0074D2  500A               	movf	(___lomod@divisor+1)^0,w,c
  7034  0074D4  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  7035  0074D6  500B               	movf	(___lomod@divisor+2)^0,w,c
  7036  0074D8  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  7037  0074DA  500C               	movf	(___lomod@divisor+3)^0,w,c
  7038  0074DC  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  7039  0074DE  500D               	movf	(___lomod@divisor+4)^0,w,c
  7040  0074E0  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  7041  0074E2  500E               	movf	(___lomod@divisor+5)^0,w,c
  7042  0074E4  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  7043  0074E6  500F               	movf	(___lomod@divisor+6)^0,w,c
  7044  0074E8  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  7045  0074EA  5010               	movf	(___lomod@divisor+7)^0,w,c
  7046  0074EC  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  7047  0074EE  A0D8               	btfss	status,0,c
  7048  0074F0  EF7C  F03A         	goto	u3861
  7049  0074F4  EF7F  F03A         	goto	u3860
  7050  0074F8                     u3861:
  7051  0074F8  FFFF               	dw	65535	; assembler added errata NOP
  7052  0074FA  EF90  F03A         	goto	l3736
  7053  0074FE                     u3860:
  7054  0074FE  FFFF               	dw	65535	; assembler added errata NOP
  7055  007500  5009               	movf	___lomod@divisor^0,w,c
  7056  007502  5E01               	subwf	___lomod@dividend^0,f,c
  7057  007504  500A               	movf	(___lomod@divisor+1)^0,w,c
  7058  007506  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  7059  007508  500B               	movf	(___lomod@divisor+2)^0,w,c
  7060  00750A  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  7061  00750C  500C               	movf	(___lomod@divisor+3)^0,w,c
  7062  00750E  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  7063  007510  500D               	movf	(___lomod@divisor+4)^0,w,c
  7064  007512  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  7065  007514  500E               	movf	(___lomod@divisor+5)^0,w,c
  7066  007516  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  7067  007518  500F               	movf	(___lomod@divisor+6)^0,w,c
  7068  00751A  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  7069  00751C  5010               	movf	(___lomod@divisor+7)^0,w,c
  7070  00751E  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  7071  007520                     l3736:
  7072  007520  FFFF               	dw	65535	; assembler added errata NOP
  7073  007522  90D8               	bcf	status,0,c
  7074  007524  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  7075  007526  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  7076  007528  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  7077  00752A  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  7078  00752C  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  7079  00752E  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  7080  007530  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  7081  007532  3209               	rrcf	___lomod@divisor^0,f,c
  7082  007534  2E11               	decfsz	___lomod@counter^0,f,c
  7083  007536  EF66  F03A         	goto	l3732
  7084  00753A                     l828:
  7085  00753A  FFFF               	dw	65535	; assembler added errata NOP
  7086  00753C  C001  F001         	movff	___lomod@dividend,?___lomod
  7087  007540  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  7088  007544  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  7089  007548  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  7090  00754C  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  7091  007550  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  7092  007554  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  7093  007558  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  7094  00755C  0012               	return		;funcret
  7095  00755E  FFFF               	dw	65535	; errata NOP
  7096  007560                     __end_of___lomod:
  7097                           	callstack 0
  7098                           
  7099 ;; *************** function ___lodiv *****************
  7100 ;; Defined at:
  7101 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lodiv.c"
  7102 ;; Parameters:    Size  Location     Type
  7103 ;;  dividend        8    0[COMRAM] unsigned long long 
  7104 ;;  divisor         8    8[COMRAM] unsigned long long 
  7105 ;; Auto vars:     Size  Location     Type
  7106 ;;  quotient        8   16[COMRAM] unsigned long long 
  7107 ;;  counter         1   24[COMRAM] unsigned char 
  7108 ;; Return value:  Size  Location     Type
  7109 ;;                  8    0[COMRAM] unsigned long long 
  7110 ;; Registers used:
  7111 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7112 ;; Tracked objects:
  7113 ;;		On entry : 0/0
  7114 ;;		On exit  : 0/0
  7115 ;;		Unchanged: 0/0
  7116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7117 ;;      Params:        16       0       0       0       0       0       0
  7118 ;;      Locals:         9       0       0       0       0       0       0
  7119 ;;      Temps:          0       0       0       0       0       0       0
  7120 ;;      Totals:        25       0       0       0       0       0       0
  7121 ;;Total ram usage:       25 bytes
  7122 ;; Hardware stack levels used:    1
  7123 ;; Hardware stack levels required when called:    1
  7124 ;; This function calls:
  7125 ;;		Nothing
  7126 ;; This function is called by:
  7127 ;;		_utoa
  7128 ;; This function uses a non-reentrant model
  7129 ;;
  7130                           
  7131                           	psect	text16
  7132  007758                     __ptext16:
  7133                           	callstack 0
  7134  007758                     ___lodiv:
  7135                           	callstack 0
  7136  007758  FFFF               	dw	65535	; assembler added errata NOP
  7137  00775A  EE20  F011         	lfsr	2,___lodiv@quotient
  7138  00775E  0E07               	movlw	7
  7139  007760                     u3801:
  7140  007760  6ADE               	clrf	postinc2,c
  7141  007762  06E8               	decf	wreg,f,c
  7142  007764  E2FD               	bc	u3801
  7143  007766  5009               	movf	___lodiv@divisor^0,w,c
  7144  007768  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  7145  00776A  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  7146  00776C  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  7147  00776E  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  7148  007770  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  7149  007772  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  7150  007774  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  7151  007776  B4D8               	btfsc	status,2,c
  7152  007778  EFC0  F03B         	goto	u3811
  7153  00777C  EFC3  F03B         	goto	u3810
  7154  007780                     u3811:
  7155  007780  FFFF               	dw	65535	; assembler added errata NOP
  7156  007782  EF1E  F03C         	goto	l818
  7157  007786                     u3810:
  7158  007786  FFFF               	dw	65535	; assembler added errata NOP
  7159  007788  0E01               	movlw	1
  7160  00778A  6E19               	movwf	___lodiv@counter^0,c
  7161  00778C  EFD3  F03B         	goto	l3710
  7162  007790                     l3708:
  7163  007790  FFFF               	dw	65535	; assembler added errata NOP
  7164  007792  90D8               	bcf	status,0,c
  7165  007794  3609               	rlcf	___lodiv@divisor^0,f,c
  7166  007796  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  7167  007798  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  7168  00779A  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  7169  00779C  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  7170  00779E  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  7171  0077A0  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  7172  0077A2  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  7173  0077A4  2A19               	incf	___lodiv@counter^0,f,c
  7174  0077A6                     l3710:
  7175  0077A6  FFFF               	dw	65535	; assembler added errata NOP
  7176  0077A8  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  7177  0077AA  EFD9  F03B         	goto	u3821
  7178  0077AE  EFDC  F03B         	goto	u3820
  7179  0077B2                     u3821:
  7180  0077B2  FFFF               	dw	65535	; assembler added errata NOP
  7181  0077B4  EFC8  F03B         	goto	l3708
  7182  0077B8                     u3820:
  7183  0077B8  FFFF               	dw	65535	; assembler added errata NOP
  7184  0077BA                     l3712:
  7185  0077BA  FFFF               	dw	65535	; assembler added errata NOP
  7186  0077BC  90D8               	bcf	status,0,c
  7187  0077BE  3611               	rlcf	___lodiv@quotient^0,f,c
  7188  0077C0  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  7189  0077C2  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  7190  0077C4  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  7191  0077C6  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  7192  0077C8  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  7193  0077CA  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  7194  0077CC  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  7195  0077CE  5009               	movf	___lodiv@divisor^0,w,c
  7196  0077D0  5C01               	subwf	___lodiv@dividend^0,w,c
  7197  0077D2  500A               	movf	(___lodiv@divisor+1)^0,w,c
  7198  0077D4  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  7199  0077D6  500B               	movf	(___lodiv@divisor+2)^0,w,c
  7200  0077D8  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  7201  0077DA  500C               	movf	(___lodiv@divisor+3)^0,w,c
  7202  0077DC  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  7203  0077DE  500D               	movf	(___lodiv@divisor+4)^0,w,c
  7204  0077E0  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  7205  0077E2  500E               	movf	(___lodiv@divisor+5)^0,w,c
  7206  0077E4  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  7207  0077E6  500F               	movf	(___lodiv@divisor+6)^0,w,c
  7208  0077E8  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  7209  0077EA  5010               	movf	(___lodiv@divisor+7)^0,w,c
  7210  0077EC  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  7211  0077EE  A0D8               	btfss	status,0,c
  7212  0077F0  EFFC  F03B         	goto	u3831
  7213  0077F4  EFFF  F03B         	goto	u3830
  7214  0077F8                     u3831:
  7215  0077F8  FFFF               	dw	65535	; assembler added errata NOP
  7216  0077FA  EF11  F03C         	goto	l3720
  7217  0077FE                     u3830:
  7218  0077FE  FFFF               	dw	65535	; assembler added errata NOP
  7219  007800  5009               	movf	___lodiv@divisor^0,w,c
  7220  007802  5E01               	subwf	___lodiv@dividend^0,f,c
  7221  007804  500A               	movf	(___lodiv@divisor+1)^0,w,c
  7222  007806  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  7223  007808  500B               	movf	(___lodiv@divisor+2)^0,w,c
  7224  00780A  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  7225  00780C  500C               	movf	(___lodiv@divisor+3)^0,w,c
  7226  00780E  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  7227  007810  500D               	movf	(___lodiv@divisor+4)^0,w,c
  7228  007812  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  7229  007814  500E               	movf	(___lodiv@divisor+5)^0,w,c
  7230  007816  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  7231  007818  500F               	movf	(___lodiv@divisor+6)^0,w,c
  7232  00781A  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  7233  00781C  5010               	movf	(___lodiv@divisor+7)^0,w,c
  7234  00781E  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  7235  007820  8011               	bsf	___lodiv@quotient^0,0,c
  7236  007822                     l3720:
  7237  007822  FFFF               	dw	65535	; assembler added errata NOP
  7238  007824  90D8               	bcf	status,0,c
  7239  007826  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  7240  007828  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  7241  00782A  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  7242  00782C  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  7243  00782E  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  7244  007830  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  7245  007832  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  7246  007834  3209               	rrcf	___lodiv@divisor^0,f,c
  7247  007836  2E19               	decfsz	___lodiv@counter^0,f,c
  7248  007838  EFDD  F03B         	goto	l3712
  7249  00783C                     l818:
  7250  00783C  FFFF               	dw	65535	; assembler added errata NOP
  7251  00783E  C011  F001         	movff	___lodiv@quotient,?___lodiv
  7252  007842  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  7253  007846  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  7254  00784A  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  7255  00784E  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  7256  007852  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  7257  007856  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  7258  00785A  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  7259  00785E  0012               	return		;funcret
  7260  007860  FFFF               	dw	65535	; errata NOP
  7261  007862                     __end_of___lodiv:
  7262                           	callstack 0
  7263                           
  7264 ;; *************** function _strncmp *****************
  7265 ;; Defined at:
  7266 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  7267 ;; Parameters:    Size  Location     Type
  7268 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  7269 ;;		 -> STR_10(3), 
  7270 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  7271 ;;		 -> STR_107(3), STR_103(3), STR_98(3), STR_94(3), 
  7272 ;;		 -> STR_89(4), STR_85(4), STR_80(3), STR_75(3), 
  7273 ;;		 -> STR_70(4), STR_65(3), STR_60(3), STR_55(4), 
  7274 ;;		 -> STR_50(3), STR_45(3), STR_40(4), STR_35(3), 
  7275 ;;		 -> STR_31(3), STR_26(3), STR_22(3), STR_17(4), 
  7276 ;;		 -> STR_13(4), 
  7277 ;;  n               2    4[COMRAM] unsigned int 
  7278 ;; Auto vars:     Size  Location     Type
  7279 ;;  r               2    9[COMRAM] PTR const unsigned char 
  7280 ;;		 -> STR_107(3), STR_103(3), STR_98(3), STR_94(3), 
  7281 ;;		 -> STR_89(4), STR_85(4), STR_80(3), STR_75(3), 
  7282 ;;		 -> STR_70(4), STR_65(3), STR_60(3), STR_55(4), 
  7283 ;;		 -> STR_50(3), STR_45(3), STR_40(4), STR_35(3), 
  7284 ;;		 -> STR_31(3), STR_26(3), STR_22(3), STR_17(4), 
  7285 ;;		 -> STR_13(4), 
  7286 ;;  l               2    7[COMRAM] PTR const unsigned char 
  7287 ;;		 -> STR_10(3), 
  7288 ;; Return value:  Size  Location     Type
  7289 ;;                  2    0[COMRAM] int 
  7290 ;; Registers used:
  7291 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7292 ;; Tracked objects:
  7293 ;;		On entry : 0/0
  7294 ;;		On exit  : 0/0
  7295 ;;		Unchanged: 0/0
  7296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7297 ;;      Params:         6       0       0       0       0       0       0
  7298 ;;      Locals:         4       0       0       0       0       0       0
  7299 ;;      Temps:          1       0       0       0       0       0       0
  7300 ;;      Totals:        11       0       0       0       0       0       0
  7301 ;;Total ram usage:       11 bytes
  7302 ;; Hardware stack levels used:    1
  7303 ;; Hardware stack levels required when called:    1
  7304 ;; This function calls:
  7305 ;;		Nothing
  7306 ;; This function is called by:
  7307 ;;		_vfpfcnvrt
  7308 ;; This function uses a non-reentrant model
  7309 ;;
  7310                           
  7311                           	psect	text17
  7312  007650                     __ptext17:
  7313                           	callstack 0
  7314  007650                     _strncmp:
  7315                           	callstack 0
  7316  007650  FFFF               	dw	65535	; assembler added errata NOP
  7317  007652  C001  F008         	movff	strncmp@_l,strncmp@l
  7318  007656  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  7319  00765A  C003  F00A         	movff	strncmp@_r,strncmp@r
  7320  00765E  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  7321  007662  0605               	decf	strncmp@n^0,f,c
  7322  007664  A0D8               	btfss	status,0,c
  7323  007666  0606               	decf	(strncmp@n+1)^0,f,c
  7324  007668  2805               	incf	strncmp@n^0,w,c
  7325  00766A  E106               	bnz	u4691
  7326  00766C  2806               	incf	(strncmp@n+1)^0,w,c
  7327  00766E  A4D8               	btfss	status,2,c
  7328  007670  EF3C  F03B         	goto	u4691
  7329  007674  EF3F  F03B         	goto	u4690
  7330  007678                     u4691:
  7331  007678  FFFF               	dw	65535	; assembler added errata NOP
  7332  00767A  EF4E  F03B         	goto	l4114
  7333  00767E                     u4690:
  7334  00767E  FFFF               	dw	65535	; assembler added errata NOP
  7335  007680  0E00               	movlw	0
  7336  007682  6E02               	movwf	(?_strncmp+1)^0,c
  7337  007684  0E00               	movlw	0
  7338  007686  6E01               	movwf	?_strncmp^0,c
  7339  007688  EFA9  F03B         	goto	l1430
  7340  00768C                     l4112:
  7341  00768C  FFFF               	dw	65535	; assembler added errata NOP
  7342  00768E  4A08               	infsnz	strncmp@l^0,f,c
  7343  007690  2A09               	incf	(strncmp@l+1)^0,f,c
  7344  007692  4A0A               	infsnz	strncmp@r^0,f,c
  7345  007694  2A0B               	incf	(strncmp@r+1)^0,f,c
  7346  007696  0605               	decf	strncmp@n^0,f,c
  7347  007698  A0D8               	btfss	status,0,c
  7348  00769A  0606               	decf	(strncmp@n+1)^0,f,c
  7349  00769C                     l4114:
  7350  00769C  FFFF               	dw	65535	; assembler added errata NOP
  7351  00769E  C008  FFF6         	movff	strncmp@l,tblptrl
  7352  0076A2  C009  FFF7         	movff	strncmp@l+1,tblptrh
  7353  0076A6                     	if	0	;tblptru may be non-zero
  7354  0076A6                     	endif
  7355  0076A6                     	if	0	;tblptru may be non-zero
  7356  0076A6                     	endif
  7357  0076A6  0008               	tblrd		*
  7358  0076A8  FFFF               	dw	65535	; errata NOP
  7359  0076AA  50F5               	movf	tablat,w,c
  7360  0076AC  0900               	iorlw	0
  7361  0076AE  B4D8               	btfsc	status,2,c
  7362  0076B0  EF5C  F03B         	goto	u4701
  7363  0076B4  EF5F  F03B         	goto	u4700
  7364  0076B8                     u4701:
  7365  0076B8  FFFF               	dw	65535	; assembler added errata NOP
  7366  0076BA  EF94  F03B         	goto	l4122
  7367  0076BE                     u4700:
  7368  0076BE  FFFF               	dw	65535	; assembler added errata NOP
  7369  0076C0  C00A  FFF6         	movff	strncmp@r,tblptrl
  7370  0076C4  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7371  0076C8                     	if	0	;tblptru may be non-zero
  7372  0076C8                     	endif
  7373  0076C8                     	if	0	;tblptru may be non-zero
  7374  0076C8                     	endif
  7375  0076C8  0008               	tblrd		*
  7376  0076CA  FFFF               	dw	65535	; errata NOP
  7377  0076CC  50F5               	movf	tablat,w,c
  7378  0076CE  0900               	iorlw	0
  7379  0076D0  B4D8               	btfsc	status,2,c
  7380  0076D2  EF6D  F03B         	goto	u4711
  7381  0076D6  EF70  F03B         	goto	u4710
  7382  0076DA                     u4711:
  7383  0076DA  FFFF               	dw	65535	; assembler added errata NOP
  7384  0076DC  EF94  F03B         	goto	l4122
  7385  0076E0                     u4710:
  7386  0076E0  FFFF               	dw	65535	; assembler added errata NOP
  7387  0076E2  5005               	movf	strncmp@n^0,w,c
  7388  0076E4  1006               	iorwf	(strncmp@n+1)^0,w,c
  7389  0076E6  B4D8               	btfsc	status,2,c
  7390  0076E8  EF78  F03B         	goto	u4721
  7391  0076EC  EF7B  F03B         	goto	u4720
  7392  0076F0                     u4721:
  7393  0076F0  FFFF               	dw	65535	; assembler added errata NOP
  7394  0076F2  EF94  F03B         	goto	l4122
  7395  0076F6                     u4720:
  7396  0076F6  FFFF               	dw	65535	; assembler added errata NOP
  7397  0076F8  C008  FFF6         	movff	strncmp@l,tblptrl
  7398  0076FC  C009  FFF7         	movff	strncmp@l+1,tblptrh
  7399  007700                     	if	0	;tblptru may be non-zero
  7400  007700                     	endif
  7401  007700                     	if	0	;tblptru may be non-zero
  7402  007700                     	endif
  7403  007700  0008               	tblrd		*
  7404  007702  FFFF               	dw	65535	; errata NOP
  7405  007704  CFF5 F007          	movff	tablat,??_strncmp
  7406  007708  C00A  FFF6         	movff	strncmp@r,tblptrl
  7407  00770C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7408  007710                     	if	0	;tblptru may be non-zero
  7409  007710                     	endif
  7410  007710                     	if	0	;tblptru may be non-zero
  7411  007710                     	endif
  7412  007710  0008               	tblrd		*
  7413  007712  FFFF               	dw	65535	; errata NOP
  7414  007714  50F5               	movf	tablat,w,c
  7415  007716  1807               	xorwf	??_strncmp^0,w,c
  7416  007718  B4D8               	btfsc	status,2,c
  7417  00771A  EF91  F03B         	goto	u4731
  7418  00771E  EF94  F03B         	goto	u4730
  7419  007722                     u4731:
  7420  007722  FFFF               	dw	65535	; assembler added errata NOP
  7421  007724  EF46  F03B         	goto	l4112
  7422  007728                     u4730:
  7423  007728                     l4122:
  7424  007728  FFFF               	dw	65535	; assembler added errata NOP
  7425  00772A  C008  FFF6         	movff	strncmp@l,tblptrl
  7426  00772E  C009  FFF7         	movff	strncmp@l+1,tblptrh
  7427  007732                     	if	0	;tblptru may be non-zero
  7428  007732                     	endif
  7429  007732                     	if	0	;tblptru may be non-zero
  7430  007732                     	endif
  7431  007732  0008               	tblrd		*
  7432  007734  FFFF               	dw	65535	; errata NOP
  7433  007736  CFF5 F007          	movff	tablat,??_strncmp
  7434  00773A  C00A  FFF6         	movff	strncmp@r,tblptrl
  7435  00773E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7436  007742                     	if	0	;tblptru may be non-zero
  7437  007742                     	endif
  7438  007742                     	if	0	;tblptru may be non-zero
  7439  007742                     	endif
  7440  007742  0008               	tblrd		*
  7441  007744  FFFF               	dw	65535	; errata NOP
  7442  007746  50F5               	movf	tablat,w,c
  7443  007748  5C07               	subwf	??_strncmp^0,w,c
  7444  00774A  6E01               	movwf	?_strncmp^0,c
  7445  00774C  6A02               	clrf	(?_strncmp+1)^0,c
  7446  00774E  A0D8               	btfss	status,0,c
  7447  007750  0602               	decf	(?_strncmp+1)^0,f,c
  7448  007752                     l1430:
  7449  007752  FFFF               	dw	65535	; assembler added errata NOP
  7450  007754  0012               	return		;funcret
  7451  007756  FFFF               	dw	65535	; errata NOP
  7452  007758                     __end_of_strncmp:
  7453                           	callstack 0
  7454                           
  7455 ;; *************** function _stoa *****************
  7456 ;; Defined at:
  7457 ;;		line 546 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7458 ;; Parameters:    Size  Location     Type
  7459 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  7460 ;;		 -> vsnprintf@f(6), 
  7461 ;;  s               2   11[COMRAM] PTR unsigned char 
  7462 ;;		 -> ?_snprintf(2), STR_8(50), STR_7(9), STR_6(7), 
  7463 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  7464 ;;		 -> STR_1(49), 
  7465 ;; Auto vars:     Size  Location     Type
  7466 ;;  nuls            7   14[COMRAM] unsigned char [7]
  7467 ;;  l               2   29[COMRAM] int 
  7468 ;;  p               2   27[COMRAM] int 
  7469 ;;  cp              2   25[COMRAM] PTR unsigned char 
  7470 ;;		 -> stoa@nuls(7), ?_snprintf(2), STR_8(50), STR_7(9), 
  7471 ;;		 -> STR_6(7), STR_5(9), STR_4(39), STR_3(9), 
  7472 ;;		 -> STR_2(64), STR_1(49), 
  7473 ;;  w               2   23[COMRAM] int 
  7474 ;;  i               2   21[COMRAM] int 
  7475 ;; Return value:  Size  Location     Type
  7476 ;;                  2    9[COMRAM] int 
  7477 ;; Registers used:
  7478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7479 ;; Tracked objects:
  7480 ;;		On entry : 0/0
  7481 ;;		On exit  : 0/0
  7482 ;;		Unchanged: 0/0
  7483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7484 ;;      Params:         4       0       0       0       0       0       0
  7485 ;;      Locals:        17       0       0       0       0       0       0
  7486 ;;      Temps:          1       0       0       0       0       0       0
  7487 ;;      Totals:        22       0       0       0       0       0       0
  7488 ;;Total ram usage:       22 bytes
  7489 ;; Hardware stack levels used:    1
  7490 ;; Hardware stack levels required when called:    3
  7491 ;; This function calls:
  7492 ;;		_fputc
  7493 ;;		_strlen
  7494 ;; This function is called by:
  7495 ;;		_vfpfcnvrt
  7496 ;; This function uses a non-reentrant model
  7497 ;;
  7498                           
  7499                           	psect	text18
  7500  003A1C                     __ptext18:
  7501                           	callstack 0
  7502  003A1C                     _stoa:
  7503                           	callstack 0
  7504  003A1C  FFFF               	dw	65535	; assembler added errata NOP
  7505  003A1E                     
  7506                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 546: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 547: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 548:  
      +                             char *cp, nuls[] = "(null)";
  7507  003A1E  EE20  F0DE         	lfsr	2,stoa@F1152
  7508  003A22  EE10  F00F         	lfsr	1,stoa@nuls
  7509  003A26  0E06               	movlw	6
  7510  003A28                     u4281:
  7511  003A28  CFDB FFE3          	movff	plusw2,plusw1
  7512  003A2C  06E8               	decf	wreg,f,c
  7513  003A2E  E2FC               	bc	u4281
  7514  003A30                     
  7515                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 549:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 552:     c
      +                          p = s;
  7516  003A30  C00C  F01A         	movff	stoa@s,stoa@cp
  7517  003A34  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  7518  003A38                     
  7519                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 553:     if (!cp)
      +                           {
  7520  003A38  501A               	movf	stoa@cp^0,w,c
  7521  003A3A  101B               	iorwf	(stoa@cp+1)^0,w,c
  7522  003A3C  A4D8               	btfss	status,2,c
  7523  003A3E  EF23  F01D         	goto	u4291
  7524  003A42  EF26  F01D         	goto	u4290
  7525  003A46                     u4291:
  7526  003A46  FFFF               	dw	65535	; assembler added errata NOP
  7527  003A48  EF2B  F01D         	goto	l3928
  7528  003A4C                     u4290:
  7529  003A4C  FFFF               	dw	65535	; assembler added errata NOP
  7530  003A4E                     
  7531                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 554:         cp =
      +                           nuls;
  7532  003A4E  0E0F               	movlw	low stoa@nuls
  7533  003A50  6E1A               	movwf	stoa@cp^0,c
  7534  003A52  0E00               	movlw	high stoa@nuls
  7535  003A54  6E1B               	movwf	(stoa@cp+1)^0,c
  7536  003A56                     l3928:
  7537  003A56  FFFF               	dw	65535	; assembler added errata NOP
  7538                           
  7539                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 558:     l = strl
      +                          en(cp);
  7540  003A58  C01A  F001         	movff	stoa@cp,strlen@s
  7541  003A5C  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  7542  003A60  EC2F  F035         	call	_strlen	;wreg free
  7543  003A64  C001  F01E         	movff	?_strlen,stoa@l
  7544  003A68  C002  F01F         	movff	?_strlen+1,stoa@l+1
  7545  003A6C                     
  7546                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 559:     p = prec
      +                          ;
  7547  003A6C  C088  F01C         	movff	_prec,stoa@p
  7548  003A70  C089  F01D         	movff	_prec+1,stoa@p+1
  7549  003A74                     
  7550                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 560:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  7551  003A74  BE1D               	btfsc	(stoa@p+1)^0,7,c
  7552  003A76  EF3F  F01D         	goto	u4301
  7553  003A7A  EF42  F01D         	goto	u4300
  7554  003A7E                     u4301:
  7555  003A7E  FFFF               	dw	65535	; assembler added errata NOP
  7556  003A80  EF5B  F01D         	goto	l1197
  7557  003A84                     u4300:
  7558  003A84  FFFF               	dw	65535	; assembler added errata NOP
  7559  003A86  501E               	movf	stoa@l^0,w,c
  7560  003A88  5C1C               	subwf	stoa@p^0,w,c
  7561  003A8A  501D               	movf	(stoa@p+1)^0,w,c
  7562  003A8C  0A80               	xorlw	128
  7563  003A8E  6E0E               	movwf	??_stoa^0,c
  7564  003A90  501F               	movf	(stoa@l+1)^0,w,c
  7565  003A92  0A80               	xorlw	128
  7566  003A94  580E               	subwfb	??_stoa^0,w,c
  7567  003A96  A0D8               	btfss	status,0,c
  7568  003A98  EF50  F01D         	goto	u4311
  7569  003A9C  EF53  F01D         	goto	u4310
  7570  003AA0                     u4311:
  7571  003AA0  FFFF               	dw	65535	; assembler added errata NOP
  7572  003AA2  EF56  F01D         	goto	l1195
  7573  003AA6                     u4310:
  7574  003AA6  FFFF               	dw	65535	; assembler added errata NOP
  7575  003AA8  EF5B  F01D         	goto	l1197
  7576  003AAC                     l1195:
  7577  003AAC  FFFF               	dw	65535	; assembler added errata NOP
  7578  003AAE  C01C  F01E         	movff	stoa@p,stoa@l
  7579  003AB2  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  7580  003AB6                     l1197:
  7581  003AB6  FFFF               	dw	65535	; assembler added errata NOP
  7582                           
  7583                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 561:     p = l;
  7584  003AB8  C01E  F01C         	movff	stoa@l,stoa@p
  7585  003ABC  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  7586                           
  7587                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 562:     w = widt
      +                          h;
  7588  003AC0  C086  F018         	movff	_width,stoa@w
  7589  003AC4  C087  F019         	movff	_width+1,stoa@w+1
  7590                           
  7591                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 565:     if (!(fl
      +                          ags & (1 << 0))) {
  7592  003AC8  0100               	movlb	0	; () banked
  7593  003ACA  B18A               	btfsc	_flags& (0+255),0,b
  7594  003ACC  EF6A  F01D         	goto	u4321
  7595  003AD0  EF6D  F01D         	goto	u4320
  7596  003AD4                     u4321:
  7597  003AD4  FFFF               	dw	65535	; assembler added errata NOP
  7598  003AD6  EF8E  F01D         	goto	l3944
  7599  003ADA                     u4320:
  7600  003ADA  FFFF               	dw	65535	; assembler added errata NOP
  7601  003ADC  EF7D  F01D         	goto	l3942
  7602  003AE0                     l3938:
  7603  003AE0  FFFF               	dw	65535	; assembler added errata NOP
  7604                           
  7605                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 567:             
      +                          fputc(' ', fp);
  7606  003AE2  0E00               	movlw	0
  7607  003AE4  6E02               	movwf	(fputc@c+1)^0,c
  7608  003AE6  0E20               	movlw	32
  7609  003AE8  6E01               	movwf	fputc@c^0,c
  7610  003AEA  C00A  F003         	movff	stoa@fp,fputc@fp
  7611  003AEE  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7612  003AF2  EC57  F039         	call	_fputc	;wreg free
  7613  003AF6                     
  7614                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 568:             
      +                          ++l;
  7615  003AF6  4A1E               	infsnz	stoa@l^0,f,c
  7616  003AF8  2A1F               	incf	(stoa@l+1)^0,f,c
  7617  003AFA                     l3942:
  7618  003AFA  FFFF               	dw	65535	; assembler added errata NOP
  7619                           
  7620                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 566:         whil
      +                          e (l < w) {
  7621  003AFC  5018               	movf	stoa@w^0,w,c
  7622  003AFE  5C1E               	subwf	stoa@l^0,w,c
  7623  003B00  501F               	movf	(stoa@l+1)^0,w,c
  7624  003B02  0A80               	xorlw	128
  7625  003B04  6E0E               	movwf	??_stoa^0,c
  7626  003B06  5019               	movf	(stoa@w+1)^0,w,c
  7627  003B08  0A80               	xorlw	128
  7628  003B0A  580E               	subwfb	??_stoa^0,w,c
  7629  003B0C  A0D8               	btfss	status,0,c
  7630  003B0E  EF8B  F01D         	goto	u4331
  7631  003B12  EF8E  F01D         	goto	u4330
  7632  003B16                     u4331:
  7633  003B16  FFFF               	dw	65535	; assembler added errata NOP
  7634  003B18  EF70  F01D         	goto	l3938
  7635  003B1C                     u4330:
  7636  003B1C                     l3944:
  7637  003B1C  FFFF               	dw	65535	; assembler added errata NOP
  7638                           
  7639                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 573:     i = 0;
  7640  003B1E  0E00               	movlw	0
  7641  003B20  6E17               	movwf	(stoa@i+1)^0,c
  7642  003B22  0E00               	movlw	0
  7643  003B24  6E16               	movwf	stoa@i^0,c
  7644                           
  7645                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  7646  003B26  EFB5  F01D         	goto	l3952
  7647  003B2A                     l3946:
  7648  003B2A  FFFF               	dw	65535	; assembler added errata NOP
  7649                           
  7650                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 575:         fput
      +                          c(*cp, fp);
  7651  003B2C  C01A  FFF6         	movff	stoa@cp,tblptrl
  7652  003B30  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  7653  003B34  6AF8               	clrf	tblptru,c
  7654  003B36  0E05               	movlw	(high __ramtop+-1)
  7655  003B38  64F7               	cpfsgt	tblptrh,c
  7656  003B3A  D004               	bra	u4347
  7657  003B3C  0008               	tblrd		*
  7658  003B3E  FFFF               	dw	65535	; errata NOP
  7659  003B40  50F5               	movf	tablat,w,c
  7660  003B42  D005               	bra	u4340
  7661  003B44                     u4347:
  7662  003B44  CFF6 FFE1          	movff	tblptrl,fsr1l
  7663  003B48  CFF7 FFE2          	movff	tblptrh,fsr1h
  7664  003B4C  50E7               	movf	indf1,w,c
  7665  003B4E                     u4340:
  7666  003B4E  6E0E               	movwf	??_stoa^0,c
  7667  003B50  500E               	movf	??_stoa^0,w,c
  7668  003B52  6E01               	movwf	fputc@c^0,c
  7669  003B54  6A02               	clrf	(fputc@c+1)^0,c
  7670  003B56  C00A  F003         	movff	stoa@fp,fputc@fp
  7671  003B5A  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7672  003B5E  EC57  F039         	call	_fputc	;wreg free
  7673  003B62                     
  7674                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 576:         ++cp
      +                          ;
  7675  003B62  4A1A               	infsnz	stoa@cp^0,f,c
  7676  003B64  2A1B               	incf	(stoa@cp+1)^0,f,c
  7677  003B66                     
  7678                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 577:         ++i;
  7679  003B66  4A16               	infsnz	stoa@i^0,f,c
  7680  003B68  2A17               	incf	(stoa@i+1)^0,f,c
  7681  003B6A                     l3952:
  7682  003B6A  FFFF               	dw	65535	; assembler added errata NOP
  7683                           
  7684                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  7685  003B6C  501C               	movf	stoa@p^0,w,c
  7686  003B6E  5C16               	subwf	stoa@i^0,w,c
  7687  003B70  5017               	movf	(stoa@i+1)^0,w,c
  7688  003B72  0A80               	xorlw	128
  7689  003B74  6E0E               	movwf	??_stoa^0,c
  7690  003B76  501D               	movf	(stoa@p+1)^0,w,c
  7691  003B78  0A80               	xorlw	128
  7692  003B7A  580E               	subwfb	??_stoa^0,w,c
  7693  003B7C  A0D8               	btfss	status,0,c
  7694  003B7E  EFC3  F01D         	goto	u4351
  7695  003B82  EFC6  F01D         	goto	u4350
  7696  003B86                     u4351:
  7697  003B86  FFFF               	dw	65535	; assembler added errata NOP
  7698  003B88  EF95  F01D         	goto	l3946
  7699  003B8C                     u4350:
  7700  003B8C  FFFF               	dw	65535	; assembler added errata NOP
  7701  003B8E                     
  7702                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 581:     if (flag
      +                          s & (1 << 0)) {
  7703  003B8E  0100               	movlb	0	; () banked
  7704  003B90  A18A               	btfss	_flags& (0+255),0,b
  7705  003B92  EFCD  F01D         	goto	u4361
  7706  003B96  EFD0  F01D         	goto	u4360
  7707  003B9A                     u4361:
  7708  003B9A  FFFF               	dw	65535	; assembler added errata NOP
  7709  003B9C  EFF1  F01D         	goto	l1207
  7710  003BA0                     u4360:
  7711  003BA0  FFFF               	dw	65535	; assembler added errata NOP
  7712  003BA2  EFE0  F01D         	goto	l3960
  7713  003BA6                     l3956:
  7714  003BA6  FFFF               	dw	65535	; assembler added errata NOP
  7715                           
  7716                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 583:             
      +                          fputc(' ', fp);
  7717  003BA8  0E00               	movlw	0
  7718  003BAA  6E02               	movwf	(fputc@c+1)^0,c
  7719  003BAC  0E20               	movlw	32
  7720  003BAE  6E01               	movwf	fputc@c^0,c
  7721  003BB0  C00A  F003         	movff	stoa@fp,fputc@fp
  7722  003BB4  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7723  003BB8  EC57  F039         	call	_fputc	;wreg free
  7724  003BBC                     
  7725                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 584:             
      +                          ++l;
  7726  003BBC  4A1E               	infsnz	stoa@l^0,f,c
  7727  003BBE  2A1F               	incf	(stoa@l+1)^0,f,c
  7728  003BC0                     l3960:
  7729  003BC0  FFFF               	dw	65535	; assembler added errata NOP
  7730                           
  7731                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 582:         whil
      +                          e (l < w) {
  7732  003BC2  5018               	movf	stoa@w^0,w,c
  7733  003BC4  5C1E               	subwf	stoa@l^0,w,c
  7734  003BC6  501F               	movf	(stoa@l+1)^0,w,c
  7735  003BC8  0A80               	xorlw	128
  7736  003BCA  6E0E               	movwf	??_stoa^0,c
  7737  003BCC  5019               	movf	(stoa@w+1)^0,w,c
  7738  003BCE  0A80               	xorlw	128
  7739  003BD0  580E               	subwfb	??_stoa^0,w,c
  7740  003BD2  A0D8               	btfss	status,0,c
  7741  003BD4  EFEE  F01D         	goto	u4371
  7742  003BD8  EFF1  F01D         	goto	u4370
  7743  003BDC                     u4371:
  7744  003BDC  FFFF               	dw	65535	; assembler added errata NOP
  7745  003BDE  EFD3  F01D         	goto	l3956
  7746  003BE2                     u4370:
  7747  003BE2                     l1207:
  7748  003BE2  FFFF               	dw	65535	; assembler added errata NOP
  7749                           
  7750                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 588:     return l
      +                          ;
  7751  003BE4  C01E  F00A         	movff	stoa@l,?_stoa
  7752  003BE8  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  7753  003BEC  0012               	return		;funcret
  7754  003BEE  FFFF               	dw	65535	; errata NOP
  7755  003BF0                     __end_of_stoa:
  7756                           	callstack 0
  7757                           
  7758 ;; *************** function _otoa *****************
  7759 ;; Defined at:
  7760 ;;		line 507 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7763 ;;		 -> vsnprintf@f(6), 
  7764 ;;  d               8   29[COMRAM] unsigned long long 
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;  n               8   51[COMRAM] unsigned long long 
  7767 ;;  i               2   59[COMRAM] int 
  7768 ;;  w               2   49[COMRAM] int 
  7769 ;;  t               2   47[COMRAM] int 
  7770 ;;  p               2   45[COMRAM] int 
  7771 ;; Return value:  Size  Location     Type
  7772 ;;                  2   27[COMRAM] int 
  7773 ;; Registers used:
  7774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7775 ;; Tracked objects:
  7776 ;;		On entry : 0/0
  7777 ;;		On exit  : 0/0
  7778 ;;		Unchanged: 0/0
  7779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7780 ;;      Params:        10       0       0       0       0       0       0
  7781 ;;      Locals:        16       0       0       0       0       0       0
  7782 ;;      Temps:          8       0       0       0       0       0       0
  7783 ;;      Totals:        34       0       0       0       0       0       0
  7784 ;;Total ram usage:       34 bytes
  7785 ;; Hardware stack levels used:    1
  7786 ;; Hardware stack levels required when called:    5
  7787 ;; This function calls:
  7788 ;;		_pad
  7789 ;; This function is called by:
  7790 ;;		_vfpfcnvrt
  7791 ;; This function uses a non-reentrant model
  7792 ;;
  7793                           
  7794                           	psect	text19
  7795  0035FE                     __ptext19:
  7796                           	callstack 0
  7797  0035FE                     _otoa:
  7798                           	callstack 0
  7799  0035FE  FFFF               	dw	65535	; assembler added errata NOP
  7800  003600                     
  7801                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 507: static int o
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 508: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 509:     int i, p, t, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\com
      +                          mon\doprnt.c: 510:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\so
      +                          urces\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  7802  003600  0100               	movlb	0	; () banked
  7803  003602  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7804  003604  EF06  F01B         	goto	u4181
  7805  003608  EF09  F01B         	goto	u4180
  7806  00360C                     u4181:
  7807  00360C  FFFF               	dw	65535	; assembler added errata NOP
  7808  00360E  EF0B  F01B         	goto	l3876
  7809  003612                     u4180:
  7810  003612  FFFF               	dw	65535	; assembler added errata NOP
  7811  003614                     
  7812                           ; BSR set to: 0
  7813                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 514:         flag
      +                          s &= ~(1 << 1);
  7814  003614  938A               	bcf	_flags& (0+255),1,b
  7815  003616                     l3876:
  7816  003616  FFFF               	dw	65535	; assembler added errata NOP
  7817                           
  7818                           ; BSR set to: 0
  7819                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 516:     p = (0 <
      +                           prec) ? prec : 1;
  7820  003618  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7821  00361A  EF1A  F01B         	goto	u4190
  7822  00361E  5189               	movf	(_prec+1)& (0+255),w,b
  7823  003620  E106               	bnz	u4191
  7824  003622  0588               	decf	_prec& (0+255),w,b
  7825  003624  B0D8               	btfsc	status,0,c
  7826  003626  EF17  F01B         	goto	u4191
  7827  00362A  EF1A  F01B         	goto	u4190
  7828  00362E                     u4191:
  7829  00362E  FFFF               	dw	65535	; assembler added errata NOP
  7830  003630  EF21  F01B         	goto	l1177
  7831  003634                     u4190:
  7832  003634  FFFF               	dw	65535	; assembler added errata NOP
  7833  003636                     
  7834                           ; BSR set to: 0
  7835  003636  0E00               	movlw	0
  7836  003638  6E2F               	movwf	(otoa@p+1)^0,c
  7837  00363A  0E01               	movlw	1
  7838  00363C  6E2E               	movwf	otoa@p^0,c
  7839  00363E  EF26  F01B         	goto	l1179
  7840  003642                     l1177:
  7841  003642  FFFF               	dw	65535	; assembler added errata NOP
  7842                           
  7843                           ; BSR set to: 0
  7844  003644  C088  F02E         	movff	_prec,otoa@p
  7845  003648  C089  F02F         	movff	_prec+1,otoa@p+1
  7846  00364C                     l1179:
  7847  00364C  FFFF               	dw	65535	; assembler added errata NOP
  7848                           
  7849                           ; BSR set to: 0
  7850                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 517:     w = widt
      +                          h;
  7851  00364E  C086  F032         	movff	_width,otoa@w
  7852  003652  C087  F033         	movff	_width+1,otoa@w+1
  7853                           
  7854                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 520:     n = d;
  7855  003656  C01E  F034         	movff	otoa@d,otoa@n
  7856  00365A  C01F  F035         	movff	otoa@d+1,otoa@n+1
  7857  00365E  C020  F036         	movff	otoa@d+2,otoa@n+2
  7858  003662  C021  F037         	movff	otoa@d+3,otoa@n+3
  7859  003666  C022  F038         	movff	otoa@d+4,otoa@n+4
  7860  00366A  C023  F039         	movff	otoa@d+5,otoa@n+5
  7861  00366E  C024  F03A         	movff	otoa@d+6,otoa@n+6
  7862  003672  C025  F03B         	movff	otoa@d+7,otoa@n+7
  7863  003676                     
  7864                           ; BSR set to: 0
  7865                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 521:     i = size
      +                          of(dbuf) - 1;
  7866  003676  0E00               	movlw	0
  7867  003678  6E3D               	movwf	(otoa@i+1)^0,c
  7868  00367A  0E1F               	movlw	31
  7869  00367C  6E3C               	movwf	otoa@i^0,c
  7870  00367E                     
  7871                           ; BSR set to: 0
  7872                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 522:     dbuf[i] 
      +                          = '\0';
  7873  00367E  0E00               	movlw	0
  7874  003680  6FB7               	movwf	(_dbuf+31)& (0+255),b
  7875  003682                     
  7876                           ; BSR set to: 0
  7877                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 523:     t = 0;
  7878  003682  0E00               	movlw	0
  7879  003684  6E31               	movwf	(otoa@t+1)^0,c
  7880  003686  0E00               	movlw	0
  7881  003688  6E30               	movwf	otoa@t^0,c
  7882                           
  7883                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 524:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7884  00368A  EF8F  F01B         	goto	l3898
  7885  00368E                     l3886:
  7886  00368E  FFFF               	dw	65535	; assembler added errata NOP
  7887                           
  7888                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 525:         --i;
  7889  003690  063C               	decf	otoa@i^0,f,c
  7890  003692  A0D8               	btfss	status,0,c
  7891  003694  063D               	decf	(otoa@i+1)^0,f,c
  7892  003696                     
  7893                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 526:         t = 
      +                          n & 07;
  7894  003696  0E07               	movlw	7
  7895  003698  1434               	andwf	otoa@n^0,w,c
  7896  00369A  6E30               	movwf	otoa@t^0,c
  7897  00369C  6A31               	clrf	(otoa@t+1)^0,c
  7898  00369E                     
  7899                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 527:         dbuf
      +                          [i] = '0' + t;
  7900  00369E  0E98               	movlw	low _dbuf
  7901  0036A0  243C               	addwf	otoa@i^0,w,c
  7902  0036A2  6ED9               	movwf	fsr2l,c
  7903  0036A4  0E00               	movlw	high _dbuf
  7904  0036A6  203D               	addwfc	(otoa@i+1)^0,w,c
  7905  0036A8  6EDA               	movwf	fsr2h,c
  7906  0036AA  5030               	movf	otoa@t^0,w,c
  7907  0036AC  0F30               	addlw	48
  7908  0036AE  6EDF               	movwf	indf2,c
  7909  0036B0                     
  7910                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 528:         --p;
  7911  0036B0  062E               	decf	otoa@p^0,f,c
  7912  0036B2  A0D8               	btfss	status,0,c
  7913  0036B4  062F               	decf	(otoa@p+1)^0,f,c
  7914  0036B6                     
  7915                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 529:         --w;
  7916  0036B6  0632               	decf	otoa@w^0,f,c
  7917  0036B8  A0D8               	btfss	status,0,c
  7918  0036BA  0633               	decf	(otoa@w+1)^0,f,c
  7919  0036BC                     
  7920                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 530:         n = 
      +                          n >> 3;
  7921  0036BC  C034  F026         	movff	otoa@n,??_otoa
  7922  0036C0  C035  F027         	movff	otoa@n+1,??_otoa+1
  7923  0036C4  C036  F028         	movff	otoa@n+2,??_otoa+2
  7924  0036C8  C037  F029         	movff	otoa@n+3,??_otoa+3
  7925  0036CC  C038  F02A         	movff	otoa@n+4,??_otoa+4
  7926  0036D0  C039  F02B         	movff	otoa@n+5,??_otoa+5
  7927  0036D4  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  7928  0036D8  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  7929  0036DC  0E04               	movlw	4
  7930  0036DE  EF7B  F01B         	goto	u4200
  7931  0036E2                     u4205:
  7932  0036E2  FFFF               	dw	65535	; assembler added errata NOP
  7933  0036E4  90D8               	bcf	status,0,c
  7934  0036E6  322D               	rrcf	(??_otoa+7)^0,f,c
  7935  0036E8  322C               	rrcf	(??_otoa+6)^0,f,c
  7936  0036EA  322B               	rrcf	(??_otoa+5)^0,f,c
  7937  0036EC  322A               	rrcf	(??_otoa+4)^0,f,c
  7938  0036EE  3229               	rrcf	(??_otoa+3)^0,f,c
  7939  0036F0  3228               	rrcf	(??_otoa+2)^0,f,c
  7940  0036F2  3227               	rrcf	(??_otoa+1)^0,f,c
  7941  0036F4  3226               	rrcf	??_otoa^0,f,c
  7942  0036F6                     u4200:
  7943  0036F6  FFFF               	dw	65535	; assembler added errata NOP
  7944  0036F8  2EE8               	decfsz	wreg,f,c
  7945  0036FA  EF71  F01B         	goto	u4205
  7946  0036FE  C026  F034         	movff	??_otoa,otoa@n
  7947  003702  C027  F035         	movff	??_otoa+1,otoa@n+1
  7948  003706  C028  F036         	movff	??_otoa+2,otoa@n+2
  7949  00370A  C029  F037         	movff	??_otoa+3,otoa@n+3
  7950  00370E  C02A  F038         	movff	??_otoa+4,otoa@n+4
  7951  003712  C02B  F039         	movff	??_otoa+5,otoa@n+5
  7952  003716  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  7953  00371A  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  7954  00371E                     l3898:
  7955  00371E  FFFF               	dw	65535	; assembler added errata NOP
  7956                           
  7957                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 524:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7958  003720  BE3D               	btfsc	(otoa@i+1)^0,7,c
  7959  003722  EF9B  F01B         	goto	u4211
  7960  003726  503D               	movf	(otoa@i+1)^0,w,c
  7961  003728  E109               	bnz	u4210
  7962  00372A  043C               	decf	otoa@i^0,w,c
  7963  00372C  A0D8               	btfss	status,0,c
  7964  00372E  EF9B  F01B         	goto	u4211
  7965  003732  EF9E  F01B         	goto	u4210
  7966  003736                     u4211:
  7967  003736  FFFF               	dw	65535	; assembler added errata NOP
  7968  003738  EFD7  F01B         	goto	l1186
  7969  00373C                     u4210:
  7970  00373C  FFFF               	dw	65535	; assembler added errata NOP
  7971  00373E  5034               	movf	otoa@n^0,w,c
  7972  003740  1035               	iorwf	(otoa@n+1)^0,w,c
  7973  003742  1036               	iorwf	(otoa@n+2)^0,w,c
  7974  003744  1037               	iorwf	(otoa@n+3)^0,w,c
  7975  003746  1038               	iorwf	(otoa@n+4)^0,w,c
  7976  003748  1039               	iorwf	(otoa@n+5)^0,w,c
  7977  00374A  103A               	iorwf	(otoa@n+6)^0,w,c
  7978  00374C  103B               	iorwf	(otoa@n+7)^0,w,c
  7979  00374E  A4D8               	btfss	status,2,c
  7980  003750  EFAC  F01B         	goto	u4221
  7981  003754  EFAF  F01B         	goto	u4220
  7982  003758                     u4221:
  7983  003758  FFFF               	dw	65535	; assembler added errata NOP
  7984  00375A  EF47  F01B         	goto	l3886
  7985  00375E                     u4220:
  7986  00375E  FFFF               	dw	65535	; assembler added errata NOP
  7987  003760  BE2F               	btfsc	(otoa@p+1)^0,7,c
  7988  003762  EFBE  F01B         	goto	u4230
  7989  003766  502F               	movf	(otoa@p+1)^0,w,c
  7990  003768  E106               	bnz	u4231
  7991  00376A  042E               	decf	otoa@p^0,w,c
  7992  00376C  B0D8               	btfsc	status,0,c
  7993  00376E  EFBB  F01B         	goto	u4231
  7994  003772  EFBE  F01B         	goto	u4230
  7995  003776                     u4231:
  7996  003776  FFFF               	dw	65535	; assembler added errata NOP
  7997  003778  EF47  F01B         	goto	l3886
  7998  00377C                     u4230:
  7999  00377C  FFFF               	dw	65535	; assembler added errata NOP
  8000  00377E  BE33               	btfsc	(otoa@w+1)^0,7,c
  8001  003780  EFCA  F01B         	goto	u4241
  8002  003784  5033               	movf	(otoa@w+1)^0,w,c
  8003  003786  E109               	bnz	u4240
  8004  003788  0432               	decf	otoa@w^0,w,c
  8005  00378A  A0D8               	btfss	status,0,c
  8006  00378C  EFCA  F01B         	goto	u4241
  8007  003790  EFCD  F01B         	goto	u4240
  8008  003794                     u4241:
  8009  003794  FFFF               	dw	65535	; assembler added errata NOP
  8010  003796  EFD7  F01B         	goto	l1186
  8011  00379A                     u4240:
  8012  00379A  FFFF               	dw	65535	; assembler added errata NOP
  8013  00379C  0100               	movlb	0	; () banked
  8014  00379E  B38A               	btfsc	_flags& (0+255),1,b
  8015  0037A0  EFD4  F01B         	goto	u4251
  8016  0037A4  EFD7  F01B         	goto	u4250
  8017  0037A8                     u4251:
  8018  0037A8  FFFF               	dw	65535	; assembler added errata NOP
  8019  0037AA  EF47  F01B         	goto	l3886
  8020  0037AE                     u4250:
  8021  0037AE                     l1186:
  8022  0037AE  FFFF               	dw	65535	; assembler added errata NOP
  8023                           
  8024                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 534:     if ((fla
      +                          gs & (1 << 4)) && t) {
  8025  0037B0  0100               	movlb	0	; () banked
  8026  0037B2  A98A               	btfss	_flags& (0+255),4,b
  8027  0037B4  EFDE  F01B         	goto	u4261
  8028  0037B8  EFE1  F01B         	goto	u4260
  8029  0037BC                     u4261:
  8030  0037BC  FFFF               	dw	65535	; assembler added errata NOP
  8031  0037BE  EFFB  F01B         	goto	l3916
  8032  0037C2                     u4260:
  8033  0037C2  FFFF               	dw	65535	; assembler added errata NOP
  8034  0037C4                     
  8035                           ; BSR set to: 0
  8036  0037C4  5030               	movf	otoa@t^0,w,c
  8037  0037C6  1031               	iorwf	(otoa@t+1)^0,w,c
  8038  0037C8  B4D8               	btfsc	status,2,c
  8039  0037CA  EFE9  F01B         	goto	u4271
  8040  0037CE  EFEC  F01B         	goto	u4270
  8041  0037D2                     u4271:
  8042  0037D2  FFFF               	dw	65535	; assembler added errata NOP
  8043  0037D4  EFFB  F01B         	goto	l3916
  8044  0037D8                     u4270:
  8045  0037D8  FFFF               	dw	65535	; assembler added errata NOP
  8046  0037DA                     
  8047                           ; BSR set to: 0
  8048                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 535:         --i;
  8049  0037DA  063C               	decf	otoa@i^0,f,c
  8050  0037DC  A0D8               	btfss	status,0,c
  8051  0037DE  063D               	decf	(otoa@i+1)^0,f,c
  8052  0037E0                     
  8053                           ; BSR set to: 0
  8054                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 536:         dbuf
      +                          [i] = '0';
  8055  0037E0  0E98               	movlw	low _dbuf
  8056  0037E2  243C               	addwf	otoa@i^0,w,c
  8057  0037E4  6ED9               	movwf	fsr2l,c
  8058  0037E6  0E00               	movlw	high _dbuf
  8059  0037E8  203D               	addwfc	(otoa@i+1)^0,w,c
  8060  0037EA  6EDA               	movwf	fsr2h,c
  8061  0037EC  0E30               	movlw	48
  8062  0037EE  6EDF               	movwf	indf2,c
  8063  0037F0                     
  8064                           ; BSR set to: 0
  8065                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 537:         --w;
  8066  0037F0  0632               	decf	otoa@w^0,f,c
  8067  0037F2  A0D8               	btfss	status,0,c
  8068  0037F4  0633               	decf	(otoa@w+1)^0,f,c
  8069  0037F6                     l3916:
  8070  0037F6  FFFF               	dw	65535	; assembler added errata NOP
  8071                           
  8072                           ; BSR set to: 0
  8073                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 541:     return p
      +                          ad(fp, &dbuf[i], w);
  8074  0037F8  C01C  F011         	movff	otoa@fp,pad@fp
  8075  0037FC  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  8076  003800  0E98               	movlw	low _dbuf
  8077  003802  243C               	addwf	otoa@i^0,w,c
  8078  003804  6E13               	movwf	pad@buf^0,c
  8079  003806  0E00               	movlw	high _dbuf
  8080  003808  203D               	addwfc	(otoa@i+1)^0,w,c
  8081  00380A  6E14               	movwf	(pad@buf+1)^0,c
  8082  00380C  C032  F015         	movff	otoa@w,pad@p
  8083  003810  C033  F016         	movff	otoa@w+1,pad@p+1
  8084  003814  ECC8  F039         	call	_pad	;wreg free
  8085  003818  C011  F01C         	movff	?_pad,?_otoa
  8086  00381C  C012  F01D         	movff	?_pad+1,?_otoa+1
  8087  003820  0012               	return		;funcret
  8088  003822  FFFF               	dw	65535	; errata NOP
  8089  003824                     __end_of_otoa:
  8090                           	callstack 0
  8091                           
  8092 ;; *************** function _dtoa *****************
  8093 ;; Defined at:
  8094 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  8095 ;; Parameters:    Size  Location     Type
  8096 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8097 ;;		 -> vsnprintf@f(6), 
  8098 ;;  d               8   29[COMRAM] long long 
  8099 ;; Auto vars:     Size  Location     Type
  8100 ;;  n               8   53[COMRAM] long long 
  8101 ;;  i               2   61[COMRAM] int 
  8102 ;;  s               2   51[COMRAM] int 
  8103 ;;  w               2   49[COMRAM] int 
  8104 ;;  p               2   47[COMRAM] int 
  8105 ;; Return value:  Size  Location     Type
  8106 ;;                  2   27[COMRAM] int 
  8107 ;; Registers used:
  8108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8109 ;; Tracked objects:
  8110 ;;		On entry : 0/0
  8111 ;;		On exit  : 0/0
  8112 ;;		Unchanged: 0/0
  8113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8114 ;;      Params:        10       0       0       0       0       0       0
  8115 ;;      Locals:        18       0       0       0       0       0       0
  8116 ;;      Temps:          8       0       0       0       0       0       0
  8117 ;;      Totals:        36       0       0       0       0       0       0
  8118 ;;Total ram usage:       36 bytes
  8119 ;; Hardware stack levels used:    1
  8120 ;; Hardware stack levels required when called:    5
  8121 ;; This function calls:
  8122 ;;		___aodiv
  8123 ;;		___aomod
  8124 ;;		_abs
  8125 ;;		_pad
  8126 ;; This function is called by:
  8127 ;;		_vfpfcnvrt
  8128 ;; This function uses a non-reentrant model
  8129 ;;
  8130                           
  8131                           	psect	text20
  8132  002D6E                     __ptext20:
  8133                           	callstack 0
  8134  002D6E                     _dtoa:
  8135                           	callstack 0
  8136  002D6E  FFFF               	dw	65535	; assembler added errata NOP
  8137  002D70                     
  8138                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  8139  002D70  C01E  F036         	movff	dtoa@d,dtoa@n
  8140  002D74  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  8141  002D78  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  8142  002D7C  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  8143  002D80  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  8144  002D84  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  8145  002D88  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  8146  002D8C  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  8147  002D90                     
  8148                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  8149  002D90  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  8150  002D92  EFCD  F016         	goto	u4031
  8151  002D96  EFD1  F016         	goto	u4030
  8152  002D9A                     u4031:
  8153  002D9A  FFFF               	dw	65535	; assembler added errata NOP
  8154  002D9C  0E01               	movlw	1
  8155  002D9E  EFD3  F016         	goto	u4040
  8156  002DA2                     u4030:
  8157  002DA2  FFFF               	dw	65535	; assembler added errata NOP
  8158  002DA4  0E00               	movlw	0
  8159  002DA6                     u4040:
  8160  002DA6  FFFF               	dw	65535	; assembler added errata NOP
  8161  002DA8  6E34               	movwf	dtoa@s^0,c
  8162  002DAA  6A35               	clrf	(dtoa@s+1)^0,c
  8163                           
  8164                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  8165  002DAC  5034               	movf	dtoa@s^0,w,c
  8166  002DAE  1035               	iorwf	(dtoa@s+1)^0,w,c
  8167  002DB0  B4D8               	btfsc	status,2,c
  8168  002DB2  EFDD  F016         	goto	u4051
  8169  002DB6  EFE0  F016         	goto	u4050
  8170  002DBA                     u4051:
  8171  002DBA  FFFF               	dw	65535	; assembler added errata NOP
  8172  002DBC  EFF1  F016         	goto	l3816
  8173  002DC0                     u4050:
  8174  002DC0  FFFF               	dw	65535	; assembler added errata NOP
  8175  002DC2                     
  8176                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  8177  002DC2  1E3D               	comf	(dtoa@n+7)^0,f,c
  8178  002DC4  1E3C               	comf	(dtoa@n+6)^0,f,c
  8179  002DC6  1E3B               	comf	(dtoa@n+5)^0,f,c
  8180  002DC8  1E3A               	comf	(dtoa@n+4)^0,f,c
  8181  002DCA  1E39               	comf	(dtoa@n+3)^0,f,c
  8182  002DCC  1E38               	comf	(dtoa@n+2)^0,f,c
  8183  002DCE  1E37               	comf	(dtoa@n+1)^0,f,c
  8184  002DD0  6C36               	negf	dtoa@n^0,c
  8185  002DD2  0E00               	movlw	0
  8186  002DD4  2237               	addwfc	(dtoa@n+1)^0,f,c
  8187  002DD6  2238               	addwfc	(dtoa@n+2)^0,f,c
  8188  002DD8  2239               	addwfc	(dtoa@n+3)^0,f,c
  8189  002DDA  223A               	addwfc	(dtoa@n+4)^0,f,c
  8190  002DDC  223B               	addwfc	(dtoa@n+5)^0,f,c
  8191  002DDE  223C               	addwfc	(dtoa@n+6)^0,f,c
  8192  002DE0  223D               	addwfc	(dtoa@n+7)^0,f,c
  8193  002DE2                     l3816:
  8194  002DE2  FFFF               	dw	65535	; assembler added errata NOP
  8195                           
  8196                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  8197  002DE4  0100               	movlb	0	; () banked
  8198  002DE6  BF89               	btfsc	(_prec+1)& (0+255),7,b
  8199  002DE8  EFF8  F016         	goto	u4061
  8200  002DEC  EFFB  F016         	goto	u4060
  8201  002DF0                     u4061:
  8202  002DF0  FFFF               	dw	65535	; assembler added errata NOP
  8203  002DF2  EFFD  F016         	goto	l3820
  8204  002DF6                     u4060:
  8205  002DF6  FFFF               	dw	65535	; assembler added errata NOP
  8206  002DF8                     
  8207                           ; BSR set to: 0
  8208                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  8209  002DF8  938A               	bcf	_flags& (0+255),1,b
  8210  002DFA                     l3820:
  8211  002DFA  FFFF               	dw	65535	; assembler added errata NOP
  8212                           
  8213                           ; BSR set to: 0
  8214                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  8215  002DFC  BF89               	btfsc	(_prec+1)& (0+255),7,b
  8216  002DFE  EF0C  F017         	goto	u4070
  8217  002E02  5189               	movf	(_prec+1)& (0+255),w,b
  8218  002E04  E106               	bnz	u4071
  8219  002E06  0588               	decf	_prec& (0+255),w,b
  8220  002E08  B0D8               	btfsc	status,0,c
  8221  002E0A  EF09  F017         	goto	u4071
  8222  002E0E  EF0C  F017         	goto	u4070
  8223  002E12                     u4071:
  8224  002E12  FFFF               	dw	65535	; assembler added errata NOP
  8225  002E14  EF13  F017         	goto	l1152
  8226  002E18                     u4070:
  8227  002E18  FFFF               	dw	65535	; assembler added errata NOP
  8228  002E1A                     
  8229                           ; BSR set to: 0
  8230  002E1A  0E00               	movlw	0
  8231  002E1C  6E31               	movwf	(dtoa@p+1)^0,c
  8232  002E1E  0E01               	movlw	1
  8233  002E20  6E30               	movwf	dtoa@p^0,c
  8234  002E22  EF18  F017         	goto	l1154
  8235  002E26                     l1152:
  8236  002E26  FFFF               	dw	65535	; assembler added errata NOP
  8237                           
  8238                           ; BSR set to: 0
  8239  002E28  C088  F030         	movff	_prec,dtoa@p
  8240  002E2C  C089  F031         	movff	_prec+1,dtoa@p+1
  8241  002E30                     l1154:
  8242  002E30  FFFF               	dw	65535	; assembler added errata NOP
  8243                           
  8244                           ; BSR set to: 0
  8245                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  8246  002E32  C086  F032         	movff	_width,dtoa@w
  8247  002E36  C087  F033         	movff	_width+1,dtoa@w+1
  8248  002E3A                     
  8249                           ; BSR set to: 0
  8250                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  8251  002E3A  5034               	movf	dtoa@s^0,w,c
  8252  002E3C  1035               	iorwf	(dtoa@s+1)^0,w,c
  8253  002E3E  A4D8               	btfss	status,2,c
  8254  002E40  EF24  F017         	goto	u4081
  8255  002E44  EF27  F017         	goto	u4080
  8256  002E48                     u4081:
  8257  002E48  FFFF               	dw	65535	; assembler added errata NOP
  8258  002E4A  EF30  F017         	goto	l3828
  8259  002E4E                     u4080:
  8260  002E4E  FFFF               	dw	65535	; assembler added errata NOP
  8261  002E50                     
  8262                           ; BSR set to: 0
  8263  002E50  A58A               	btfss	_flags& (0+255),2,b
  8264  002E52  EF2D  F017         	goto	u4091
  8265  002E56  EF30  F017         	goto	u4090
  8266  002E5A                     u4091:
  8267  002E5A  FFFF               	dw	65535	; assembler added errata NOP
  8268  002E5C  EF34  F017         	goto	l3830
  8269  002E60                     u4090:
  8270  002E60                     l3828:
  8271  002E60  FFFF               	dw	65535	; assembler added errata NOP
  8272                           
  8273                           ; BSR set to: 0
  8274                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  8275  002E62  0632               	decf	dtoa@w^0,f,c
  8276  002E64  A0D8               	btfss	status,0,c
  8277  002E66  0633               	decf	(dtoa@w+1)^0,f,c
  8278  002E68                     l3830:
  8279  002E68  FFFF               	dw	65535	; assembler added errata NOP
  8280                           
  8281                           ; BSR set to: 0
  8282                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  8283  002E6A  0E00               	movlw	0
  8284  002E6C  6E3F               	movwf	(dtoa@i+1)^0,c
  8285  002E6E  0E1F               	movlw	31
  8286  002E70  6E3E               	movwf	dtoa@i^0,c
  8287  002E72                     
  8288                           ; BSR set to: 0
  8289                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  8290  002E72  0E00               	movlw	0
  8291  002E74  6FB7               	movwf	(_dbuf+31)& (0+255),b
  8292                           
  8293                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8294  002E76  EFBA  F017         	goto	l3844
  8295  002E7A                     l3834:
  8296  002E7A  FFFF               	dw	65535	; assembler added errata NOP
  8297                           
  8298                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  8299  002E7C  063E               	decf	dtoa@i^0,f,c
  8300  002E7E  A0D8               	btfss	status,0,c
  8301  002E80  063F               	decf	(dtoa@i+1)^0,f,c
  8302  002E82                     
  8303                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  8304  002E82  0E98               	movlw	low _dbuf
  8305  002E84  243E               	addwf	dtoa@i^0,w,c
  8306  002E86  6ED9               	movwf	fsr2l,c
  8307  002E88  0E00               	movlw	high _dbuf
  8308  002E8A  203F               	addwfc	(dtoa@i+1)^0,w,c
  8309  002E8C  6EDA               	movwf	fsr2h,c
  8310  002E8E  C036  F001         	movff	dtoa@n,___aomod@dividend
  8311  002E92  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  8312  002E96  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  8313  002E9A  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  8314  002E9E  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  8315  002EA2  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  8316  002EA6  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  8317  002EAA  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  8318  002EAE  0E0A               	movlw	10
  8319  002EB0  6E09               	movwf	___aomod@divisor^0,c
  8320  002EB2  0E00               	movlw	0
  8321  002EB4  6E0A               	movwf	(___aomod@divisor+1)^0,c
  8322  002EB6  0E00               	movlw	0
  8323  002EB8  6E0B               	movwf	(___aomod@divisor+2)^0,c
  8324  002EBA  0E00               	movlw	0
  8325  002EBC  6E0C               	movwf	(___aomod@divisor+3)^0,c
  8326  002EBE  0E00               	movlw	0
  8327  002EC0  6E0D               	movwf	(___aomod@divisor+4)^0,c
  8328  002EC2  0E00               	movlw	0
  8329  002EC4  6E0E               	movwf	(___aomod@divisor+5)^0,c
  8330  002EC6  0E00               	movlw	0
  8331  002EC8  6E0F               	movwf	(___aomod@divisor+6)^0,c
  8332  002ECA  0E00               	movlw	0
  8333  002ECC  6E10               	movwf	(___aomod@divisor+7)^0,c
  8334  002ECE  EC92  F03E         	call	___aomod	;wreg free
  8335  002ED2  C001  F026         	movff	?___aomod,??_dtoa
  8336  002ED6  C002  F027         	movff	?___aomod+1,??_dtoa+1
  8337  002EDA  C003  F028         	movff	?___aomod+2,??_dtoa+2
  8338  002EDE  C004  F029         	movff	?___aomod+3,??_dtoa+3
  8339  002EE2  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  8340  002EE6  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  8341  002EEA  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  8342  002EEE  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  8343  002EF2  C026  F013         	movff	??_dtoa,abs@a
  8344  002EF6  C028  F014         	movff	??_dtoa+2,abs@a+1
  8345  002EFA  ECE1  F034         	call	_abs	;wreg free
  8346  002EFE  5013               	movf	?_abs^0,w,c
  8347  002F00  0F30               	addlw	48
  8348  002F02  6EDF               	movwf	indf2,c
  8349  002F04                     
  8350                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  8351  002F04  0630               	decf	dtoa@p^0,f,c
  8352  002F06  A0D8               	btfss	status,0,c
  8353  002F08  0631               	decf	(dtoa@p+1)^0,f,c
  8354  002F0A                     
  8355                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  8356  002F0A  0632               	decf	dtoa@w^0,f,c
  8357  002F0C  A0D8               	btfss	status,0,c
  8358  002F0E  0633               	decf	(dtoa@w+1)^0,f,c
  8359  002F10                     
  8360                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  8361  002F10  C036  F001         	movff	dtoa@n,___aodiv@dividend
  8362  002F14  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  8363  002F18  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  8364  002F1C  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  8365  002F20  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  8366  002F24  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  8367  002F28  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  8368  002F2C  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  8369  002F30  0E0A               	movlw	10
  8370  002F32  6E09               	movwf	___aodiv@divisor^0,c
  8371  002F34  0E00               	movlw	0
  8372  002F36  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  8373  002F38  0E00               	movlw	0
  8374  002F3A  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  8375  002F3C  0E00               	movlw	0
  8376  002F3E  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  8377  002F40  0E00               	movlw	0
  8378  002F42  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  8379  002F44  0E00               	movlw	0
  8380  002F46  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  8381  002F48  0E00               	movlw	0
  8382  002F4A  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  8383  002F4C  0E00               	movlw	0
  8384  002F4E  6E10               	movwf	(___aodiv@divisor+7)^0,c
  8385  002F50  ECDF  F01E         	call	___aodiv	;wreg free
  8386  002F54  C001  F036         	movff	?___aodiv,dtoa@n
  8387  002F58  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  8388  002F5C  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  8389  002F60  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  8390  002F64  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  8391  002F68  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  8392  002F6C  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  8393  002F70  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  8394  002F74                     l3844:
  8395  002F74  FFFF               	dw	65535	; assembler added errata NOP
  8396                           
  8397                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8398  002F76  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  8399  002F78  EFC6  F017         	goto	u4101
  8400  002F7C  503F               	movf	(dtoa@i+1)^0,w,c
  8401  002F7E  E109               	bnz	u4100
  8402  002F80  043E               	decf	dtoa@i^0,w,c
  8403  002F82  A0D8               	btfss	status,0,c
  8404  002F84  EFC6  F017         	goto	u4101
  8405  002F88  EFC9  F017         	goto	u4100
  8406  002F8C                     u4101:
  8407  002F8C  FFFF               	dw	65535	; assembler added errata NOP
  8408  002F8E  EF02  F018         	goto	l3854
  8409  002F92                     u4100:
  8410  002F92  FFFF               	dw	65535	; assembler added errata NOP
  8411  002F94  5036               	movf	dtoa@n^0,w,c
  8412  002F96  1037               	iorwf	(dtoa@n+1)^0,w,c
  8413  002F98  1038               	iorwf	(dtoa@n+2)^0,w,c
  8414  002F9A  1039               	iorwf	(dtoa@n+3)^0,w,c
  8415  002F9C  103A               	iorwf	(dtoa@n+4)^0,w,c
  8416  002F9E  103B               	iorwf	(dtoa@n+5)^0,w,c
  8417  002FA0  103C               	iorwf	(dtoa@n+6)^0,w,c
  8418  002FA2  103D               	iorwf	(dtoa@n+7)^0,w,c
  8419  002FA4  A4D8               	btfss	status,2,c
  8420  002FA6  EFD7  F017         	goto	u4111
  8421  002FAA  EFDA  F017         	goto	u4110
  8422  002FAE                     u4111:
  8423  002FAE  FFFF               	dw	65535	; assembler added errata NOP
  8424  002FB0  EF3D  F017         	goto	l3834
  8425  002FB4                     u4110:
  8426  002FB4  FFFF               	dw	65535	; assembler added errata NOP
  8427  002FB6  BE31               	btfsc	(dtoa@p+1)^0,7,c
  8428  002FB8  EFE9  F017         	goto	u4120
  8429  002FBC  5031               	movf	(dtoa@p+1)^0,w,c
  8430  002FBE  E106               	bnz	u4121
  8431  002FC0  0430               	decf	dtoa@p^0,w,c
  8432  002FC2  B0D8               	btfsc	status,0,c
  8433  002FC4  EFE6  F017         	goto	u4121
  8434  002FC8  EFE9  F017         	goto	u4120
  8435  002FCC                     u4121:
  8436  002FCC  FFFF               	dw	65535	; assembler added errata NOP
  8437  002FCE  EF3D  F017         	goto	l3834
  8438  002FD2                     u4120:
  8439  002FD2  FFFF               	dw	65535	; assembler added errata NOP
  8440  002FD4  BE33               	btfsc	(dtoa@w+1)^0,7,c
  8441  002FD6  EFF5  F017         	goto	u4131
  8442  002FDA  5033               	movf	(dtoa@w+1)^0,w,c
  8443  002FDC  E109               	bnz	u4130
  8444  002FDE  0432               	decf	dtoa@w^0,w,c
  8445  002FE0  A0D8               	btfss	status,0,c
  8446  002FE2  EFF5  F017         	goto	u4131
  8447  002FE6  EFF8  F017         	goto	u4130
  8448  002FEA                     u4131:
  8449  002FEA  FFFF               	dw	65535	; assembler added errata NOP
  8450  002FEC  EF02  F018         	goto	l3854
  8451  002FF0                     u4130:
  8452  002FF0  FFFF               	dw	65535	; assembler added errata NOP
  8453  002FF2  0100               	movlb	0	; () banked
  8454  002FF4  B38A               	btfsc	_flags& (0+255),1,b
  8455  002FF6  EFFF  F017         	goto	u4141
  8456  002FFA  EF02  F018         	goto	u4140
  8457  002FFE                     u4141:
  8458  002FFE  FFFF               	dw	65535	; assembler added errata NOP
  8459  003000  EF3D  F017         	goto	l3834
  8460  003004                     u4140:
  8461  003004                     l3854:
  8462  003004  FFFF               	dw	65535	; assembler added errata NOP
  8463                           
  8464                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  8465  003006  5034               	movf	dtoa@s^0,w,c
  8466  003008  1035               	iorwf	(dtoa@s+1)^0,w,c
  8467  00300A  A4D8               	btfss	status,2,c
  8468  00300C  EF0A  F018         	goto	u4151
  8469  003010  EF0D  F018         	goto	u4150
  8470  003014                     u4151:
  8471  003014  FFFF               	dw	65535	; assembler added errata NOP
  8472  003016  EF17  F018         	goto	l3858
  8473  00301A                     u4150:
  8474  00301A  FFFF               	dw	65535	; assembler added errata NOP
  8475  00301C  0100               	movlb	0	; () banked
  8476  00301E  A58A               	btfss	_flags& (0+255),2,b
  8477  003020  EF14  F018         	goto	u4161
  8478  003024  EF17  F018         	goto	u4160
  8479  003028                     u4161:
  8480  003028  FFFF               	dw	65535	; assembler added errata NOP
  8481  00302A  EF3A  F018         	goto	l3868
  8482  00302E                     u4160:
  8483  00302E                     l3858:
  8484  00302E  FFFF               	dw	65535	; assembler added errata NOP
  8485                           
  8486                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  8487  003030  063E               	decf	dtoa@i^0,f,c
  8488  003032  A0D8               	btfss	status,0,c
  8489  003034  063F               	decf	(dtoa@i+1)^0,f,c
  8490  003036                     
  8491                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  8492  003036  5034               	movf	dtoa@s^0,w,c
  8493  003038  1035               	iorwf	(dtoa@s+1)^0,w,c
  8494  00303A  A4D8               	btfss	status,2,c
  8495  00303C  EF22  F018         	goto	u4171
  8496  003040  EF25  F018         	goto	u4170
  8497  003044                     u4171:
  8498  003044  FFFF               	dw	65535	; assembler added errata NOP
  8499  003046  EF2C  F018         	goto	l3864
  8500  00304A                     u4170:
  8501  00304A  FFFF               	dw	65535	; assembler added errata NOP
  8502  00304C  0E00               	movlw	0
  8503  00304E  6E2F               	movwf	(_dtoa$1632+1)^0,c
  8504  003050  0E2B               	movlw	43
  8505  003052  6E2E               	movwf	_dtoa$1632^0,c
  8506  003054  EF31  F018         	goto	l3866
  8507  003058                     l3864:
  8508  003058  FFFF               	dw	65535	; assembler added errata NOP
  8509  00305A  0E00               	movlw	0
  8510  00305C  6E2F               	movwf	(_dtoa$1632+1)^0,c
  8511  00305E  0E2D               	movlw	45
  8512  003060  6E2E               	movwf	_dtoa$1632^0,c
  8513  003062                     l3866:
  8514  003062  FFFF               	dw	65535	; assembler added errata NOP
  8515  003064  0E98               	movlw	low _dbuf
  8516  003066  243E               	addwf	dtoa@i^0,w,c
  8517  003068  6ED9               	movwf	fsr2l,c
  8518  00306A  0E00               	movlw	high _dbuf
  8519  00306C  203F               	addwfc	(dtoa@i+1)^0,w,c
  8520  00306E  6EDA               	movwf	fsr2h,c
  8521  003070  C02E  FFDF         	movff	_dtoa$1632,indf2
  8522  003074                     l3868:
  8523  003074  FFFF               	dw	65535	; assembler added errata NOP
  8524                           
  8525                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  8526  003076  C01C  F011         	movff	dtoa@fp,pad@fp
  8527  00307A  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  8528  00307E  0E98               	movlw	low _dbuf
  8529  003080  243E               	addwf	dtoa@i^0,w,c
  8530  003082  6E13               	movwf	pad@buf^0,c
  8531  003084  0E00               	movlw	high _dbuf
  8532  003086  203F               	addwfc	(dtoa@i+1)^0,w,c
  8533  003088  6E14               	movwf	(pad@buf+1)^0,c
  8534  00308A  C032  F015         	movff	dtoa@w,pad@p
  8535  00308E  C033  F016         	movff	dtoa@w+1,pad@p+1
  8536  003092  ECC8  F039         	call	_pad	;wreg free
  8537  003096  C011  F01C         	movff	?_pad,?_dtoa
  8538  00309A  C012  F01D         	movff	?_pad+1,?_dtoa+1
  8539  00309E  0012               	return		;funcret
  8540  0030A0  FFFF               	dw	65535	; errata NOP
  8541  0030A2                     __end_of_dtoa:
  8542                           	callstack 0
  8543                           
  8544 ;; *************** function ___aomod *****************
  8545 ;; Defined at:
  8546 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  8547 ;; Parameters:    Size  Location     Type
  8548 ;;  dividend        8    0[COMRAM] long long 
  8549 ;;  divisor         8    8[COMRAM] long long 
  8550 ;; Auto vars:     Size  Location     Type
  8551 ;;  sign            1   17[COMRAM] unsigned char 
  8552 ;;  counter         1   16[COMRAM] unsigned char 
  8553 ;; Return value:  Size  Location     Type
  8554 ;;                  8    0[COMRAM] long long 
  8555 ;; Registers used:
  8556 ;;		wreg, status,2, status,0
  8557 ;; Tracked objects:
  8558 ;;		On entry : 0/0
  8559 ;;		On exit  : 0/0
  8560 ;;		Unchanged: 0/0
  8561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8562 ;;      Params:        16       0       0       0       0       0       0
  8563 ;;      Locals:         2       0       0       0       0       0       0
  8564 ;;      Temps:          0       0       0       0       0       0       0
  8565 ;;      Totals:        18       0       0       0       0       0       0
  8566 ;;Total ram usage:       18 bytes
  8567 ;; Hardware stack levels used:    1
  8568 ;; Hardware stack levels required when called:    1
  8569 ;; This function calls:
  8570 ;;		Nothing
  8571 ;; This function is called by:
  8572 ;;		_dtoa
  8573 ;; This function uses a non-reentrant model
  8574 ;;
  8575                           
  8576                           	psect	text21
  8577  007D24                     __ptext21:
  8578                           	callstack 0
  8579  007D24                     ___aomod:
  8580                           	callstack 0
  8581  007D24  FFFF               	dw	65535	; assembler added errata NOP
  8582  007D26  0E00               	movlw	0
  8583  007D28  6E12               	movwf	___aomod@sign^0,c
  8584  007D2A  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8585  007D2C  EF9D  F03E         	goto	u3740
  8586  007D30  EF9A  F03E         	goto	u3741
  8587  007D34                     u3741:
  8588  007D34  FFFF               	dw	65535	; assembler added errata NOP
  8589  007D36  EFB0  F03E         	goto	l3674
  8590  007D3A                     u3740:
  8591  007D3A  FFFF               	dw	65535	; assembler added errata NOP
  8592  007D3C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8593  007D3E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8594  007D40  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8595  007D42  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8596  007D44  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8597  007D46  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8598  007D48  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8599  007D4A  6C01               	negf	___aomod@dividend^0,c
  8600  007D4C  0E00               	movlw	0
  8601  007D4E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8602  007D50  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8603  007D52  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8604  007D54  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8605  007D56  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8606  007D58  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8607  007D5A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8608  007D5C  0E01               	movlw	1
  8609  007D5E  6E12               	movwf	___aomod@sign^0,c
  8610  007D60                     l3674:
  8611  007D60  FFFF               	dw	65535	; assembler added errata NOP
  8612  007D62  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8613  007D64  EFB9  F03E         	goto	u3750
  8614  007D68  EFB6  F03E         	goto	u3751
  8615  007D6C                     u3751:
  8616  007D6C  FFFF               	dw	65535	; assembler added errata NOP
  8617  007D6E  EFCA  F03E         	goto	l3678
  8618  007D72                     u3750:
  8619  007D72  FFFF               	dw	65535	; assembler added errata NOP
  8620  007D74  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8621  007D76  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8622  007D78  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8623  007D7A  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8624  007D7C  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8625  007D7E  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8626  007D80  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8627  007D82  6C09               	negf	___aomod@divisor^0,c
  8628  007D84  0E00               	movlw	0
  8629  007D86  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8630  007D88  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8631  007D8A  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8632  007D8C  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8633  007D8E  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8634  007D90  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8635  007D92  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8636  007D94                     l3678:
  8637  007D94  FFFF               	dw	65535	; assembler added errata NOP
  8638  007D96  5009               	movf	___aomod@divisor^0,w,c
  8639  007D98  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8640  007D9A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8641  007D9C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8642  007D9E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8643  007DA0  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8644  007DA2  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8645  007DA4  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8646  007DA6  B4D8               	btfsc	status,2,c
  8647  007DA8  EFD8  F03E         	goto	u3761
  8648  007DAC  EFDB  F03E         	goto	u3760
  8649  007DB0                     u3761:
  8650  007DB0  FFFF               	dw	65535	; assembler added errata NOP
  8651  007DB2  EF2C  F03F         	goto	l3694
  8652  007DB6                     u3760:
  8653  007DB6  FFFF               	dw	65535	; assembler added errata NOP
  8654  007DB8  0E01               	movlw	1
  8655  007DBA  6E11               	movwf	___aomod@counter^0,c
  8656  007DBC  EFEB  F03E         	goto	l3684
  8657  007DC0                     l3682:
  8658  007DC0  FFFF               	dw	65535	; assembler added errata NOP
  8659  007DC2  90D8               	bcf	status,0,c
  8660  007DC4  3609               	rlcf	___aomod@divisor^0,f,c
  8661  007DC6  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8662  007DC8  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8663  007DCA  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8664  007DCC  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8665  007DCE  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8666  007DD0  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8667  007DD2  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8668  007DD4  2A11               	incf	___aomod@counter^0,f,c
  8669  007DD6                     l3684:
  8670  007DD6  FFFF               	dw	65535	; assembler added errata NOP
  8671  007DD8  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8672  007DDA  EFF1  F03E         	goto	u3771
  8673  007DDE  EFF4  F03E         	goto	u3770
  8674  007DE2                     u3771:
  8675  007DE2  FFFF               	dw	65535	; assembler added errata NOP
  8676  007DE4  EFE0  F03E         	goto	l3682
  8677  007DE8                     u3770:
  8678  007DE8  FFFF               	dw	65535	; assembler added errata NOP
  8679  007DEA                     l3686:
  8680  007DEA  FFFF               	dw	65535	; assembler added errata NOP
  8681  007DEC  5009               	movf	___aomod@divisor^0,w,c
  8682  007DEE  5C01               	subwf	___aomod@dividend^0,w,c
  8683  007DF0  500A               	movf	(___aomod@divisor+1)^0,w,c
  8684  007DF2  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8685  007DF4  500B               	movf	(___aomod@divisor+2)^0,w,c
  8686  007DF6  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8687  007DF8  500C               	movf	(___aomod@divisor+3)^0,w,c
  8688  007DFA  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8689  007DFC  500D               	movf	(___aomod@divisor+4)^0,w,c
  8690  007DFE  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8691  007E00  500E               	movf	(___aomod@divisor+5)^0,w,c
  8692  007E02  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8693  007E04  500F               	movf	(___aomod@divisor+6)^0,w,c
  8694  007E06  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8695  007E08  5010               	movf	(___aomod@divisor+7)^0,w,c
  8696  007E0A  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8697  007E0C  A0D8               	btfss	status,0,c
  8698  007E0E  EF0B  F03F         	goto	u3781
  8699  007E12  EF0E  F03F         	goto	u3780
  8700  007E16                     u3781:
  8701  007E16  FFFF               	dw	65535	; assembler added errata NOP
  8702  007E18  EF1F  F03F         	goto	l3690
  8703  007E1C                     u3780:
  8704  007E1C  FFFF               	dw	65535	; assembler added errata NOP
  8705  007E1E  5009               	movf	___aomod@divisor^0,w,c
  8706  007E20  5E01               	subwf	___aomod@dividend^0,f,c
  8707  007E22  500A               	movf	(___aomod@divisor+1)^0,w,c
  8708  007E24  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8709  007E26  500B               	movf	(___aomod@divisor+2)^0,w,c
  8710  007E28  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8711  007E2A  500C               	movf	(___aomod@divisor+3)^0,w,c
  8712  007E2C  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8713  007E2E  500D               	movf	(___aomod@divisor+4)^0,w,c
  8714  007E30  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8715  007E32  500E               	movf	(___aomod@divisor+5)^0,w,c
  8716  007E34  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8717  007E36  500F               	movf	(___aomod@divisor+6)^0,w,c
  8718  007E38  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8719  007E3A  5010               	movf	(___aomod@divisor+7)^0,w,c
  8720  007E3C  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8721  007E3E                     l3690:
  8722  007E3E  FFFF               	dw	65535	; assembler added errata NOP
  8723  007E40  90D8               	bcf	status,0,c
  8724  007E42  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8725  007E44  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8726  007E46  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8727  007E48  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8728  007E4A  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8729  007E4C  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8730  007E4E  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8731  007E50  3209               	rrcf	___aomod@divisor^0,f,c
  8732  007E52  2E11               	decfsz	___aomod@counter^0,f,c
  8733  007E54  EFF5  F03E         	goto	l3686
  8734  007E58                     l3694:
  8735  007E58  FFFF               	dw	65535	; assembler added errata NOP
  8736  007E5A  5012               	movf	___aomod@sign^0,w,c
  8737  007E5C  B4D8               	btfsc	status,2,c
  8738  007E5E  EF33  F03F         	goto	u3791
  8739  007E62  EF36  F03F         	goto	u3790
  8740  007E66                     u3791:
  8741  007E66  FFFF               	dw	65535	; assembler added errata NOP
  8742  007E68  EF47  F03F         	goto	l3698
  8743  007E6C                     u3790:
  8744  007E6C  FFFF               	dw	65535	; assembler added errata NOP
  8745  007E6E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8746  007E70  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8747  007E72  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8748  007E74  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8749  007E76  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8750  007E78  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8751  007E7A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8752  007E7C  6C01               	negf	___aomod@dividend^0,c
  8753  007E7E  0E00               	movlw	0
  8754  007E80  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8755  007E82  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8756  007E84  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8757  007E86  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8758  007E88  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8759  007E8A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8760  007E8C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8761  007E8E                     l3698:
  8762  007E8E  FFFF               	dw	65535	; assembler added errata NOP
  8763  007E90  C001  F001         	movff	___aomod@dividend,?___aomod
  8764  007E94  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8765  007E98  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8766  007E9C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8767  007EA0  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8768  007EA4  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8769  007EA8  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8770  007EAC  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8771  007EB0  0012               	return		;funcret
  8772  007EB2  FFFF               	dw	65535	; errata NOP
  8773  007EB4                     __end_of___aomod:
  8774                           	callstack 0
  8775                           
  8776 ;; *************** function ___aodiv *****************
  8777 ;; Defined at:
  8778 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  8779 ;; Parameters:    Size  Location     Type
  8780 ;;  dividend        8    0[COMRAM] long long 
  8781 ;;  divisor         8    8[COMRAM] long long 
  8782 ;; Auto vars:     Size  Location     Type
  8783 ;;  quotient        8   18[COMRAM] long long 
  8784 ;;  sign            1   17[COMRAM] unsigned char 
  8785 ;;  counter         1   16[COMRAM] unsigned char 
  8786 ;; Return value:  Size  Location     Type
  8787 ;;                  8    0[COMRAM] long long 
  8788 ;; Registers used:
  8789 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8790 ;; Tracked objects:
  8791 ;;		On entry : 0/0
  8792 ;;		On exit  : 0/0
  8793 ;;		Unchanged: 0/0
  8794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8795 ;;      Params:        16       0       0       0       0       0       0
  8796 ;;      Locals:        10       0       0       0       0       0       0
  8797 ;;      Temps:          0       0       0       0       0       0       0
  8798 ;;      Totals:        26       0       0       0       0       0       0
  8799 ;;Total ram usage:       26 bytes
  8800 ;; Hardware stack levels used:    1
  8801 ;; Hardware stack levels required when called:    1
  8802 ;; This function calls:
  8803 ;;		Nothing
  8804 ;; This function is called by:
  8805 ;;		_dtoa
  8806 ;; This function uses a non-reentrant model
  8807 ;;
  8808                           
  8809                           	psect	text22
  8810  003DBE                     __ptext22:
  8811                           	callstack 0
  8812  003DBE                     ___aodiv:
  8813                           	callstack 0
  8814  003DBE  FFFF               	dw	65535	; assembler added errata NOP
  8815  003DC0  0E00               	movlw	0
  8816  003DC2  6E12               	movwf	___aodiv@sign^0,c
  8817  003DC4  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8818  003DC6  EFEA  F01E         	goto	u3670
  8819  003DCA  EFE7  F01E         	goto	u3671
  8820  003DCE                     u3671:
  8821  003DCE  FFFF               	dw	65535	; assembler added errata NOP
  8822  003DD0  EFFD  F01E         	goto	l3630
  8823  003DD4                     u3670:
  8824  003DD4  FFFF               	dw	65535	; assembler added errata NOP
  8825  003DD6  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8826  003DD8  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8827  003DDA  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8828  003DDC  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8829  003DDE  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8830  003DE0  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8831  003DE2  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8832  003DE4  6C09               	negf	___aodiv@divisor^0,c
  8833  003DE6  0E00               	movlw	0
  8834  003DE8  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8835  003DEA  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8836  003DEC  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8837  003DEE  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8838  003DF0  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8839  003DF2  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8840  003DF4  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8841  003DF6  0E01               	movlw	1
  8842  003DF8  6E12               	movwf	___aodiv@sign^0,c
  8843  003DFA                     l3630:
  8844  003DFA  FFFF               	dw	65535	; assembler added errata NOP
  8845  003DFC  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8846  003DFE  EF06  F01F         	goto	u3680
  8847  003E02  EF03  F01F         	goto	u3681
  8848  003E06                     u3681:
  8849  003E06  FFFF               	dw	65535	; assembler added errata NOP
  8850  003E08  EF19  F01F         	goto	l3636
  8851  003E0C                     u3680:
  8852  003E0C  FFFF               	dw	65535	; assembler added errata NOP
  8853  003E0E  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8854  003E10  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8855  003E12  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8856  003E14  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8857  003E16  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8858  003E18  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8859  003E1A  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8860  003E1C  6C01               	negf	___aodiv@dividend^0,c
  8861  003E1E  0E00               	movlw	0
  8862  003E20  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8863  003E22  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8864  003E24  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8865  003E26  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8866  003E28  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8867  003E2A  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8868  003E2C  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8869  003E2E  0E01               	movlw	1
  8870  003E30  1A12               	xorwf	___aodiv@sign^0,f,c
  8871  003E32                     l3636:
  8872  003E32  FFFF               	dw	65535	; assembler added errata NOP
  8873  003E34  EE20  F013         	lfsr	2,___aodiv@quotient
  8874  003E38  0E07               	movlw	7
  8875  003E3A                     u3691:
  8876  003E3A  6ADE               	clrf	postinc2,c
  8877  003E3C  06E8               	decf	wreg,f,c
  8878  003E3E  E2FD               	bc	u3691
  8879  003E40  5009               	movf	___aodiv@divisor^0,w,c
  8880  003E42  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8881  003E44  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8882  003E46  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8883  003E48  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8884  003E4A  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8885  003E4C  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8886  003E4E  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8887  003E50  B4D8               	btfsc	status,2,c
  8888  003E52  EF2D  F01F         	goto	u3701
  8889  003E56  EF30  F01F         	goto	u3700
  8890  003E5A                     u3701:
  8891  003E5A  FFFF               	dw	65535	; assembler added errata NOP
  8892  003E5C  EF8B  F01F         	goto	l3658
  8893  003E60                     u3700:
  8894  003E60  FFFF               	dw	65535	; assembler added errata NOP
  8895  003E62  0E01               	movlw	1
  8896  003E64  6E11               	movwf	___aodiv@counter^0,c
  8897  003E66  EF40  F01F         	goto	l3644
  8898  003E6A                     l3642:
  8899  003E6A  FFFF               	dw	65535	; assembler added errata NOP
  8900  003E6C  90D8               	bcf	status,0,c
  8901  003E6E  3609               	rlcf	___aodiv@divisor^0,f,c
  8902  003E70  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8903  003E72  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8904  003E74  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8905  003E76  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8906  003E78  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8907  003E7A  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8908  003E7C  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  8909  003E7E  2A11               	incf	___aodiv@counter^0,f,c
  8910  003E80                     l3644:
  8911  003E80  FFFF               	dw	65535	; assembler added errata NOP
  8912  003E82  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8913  003E84  EF46  F01F         	goto	u3711
  8914  003E88  EF49  F01F         	goto	u3710
  8915  003E8C                     u3711:
  8916  003E8C  FFFF               	dw	65535	; assembler added errata NOP
  8917  003E8E  EF35  F01F         	goto	l3642
  8918  003E92                     u3710:
  8919  003E92  FFFF               	dw	65535	; assembler added errata NOP
  8920  003E94                     l3646:
  8921  003E94  FFFF               	dw	65535	; assembler added errata NOP
  8922  003E96  90D8               	bcf	status,0,c
  8923  003E98  3613               	rlcf	___aodiv@quotient^0,f,c
  8924  003E9A  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  8925  003E9C  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  8926  003E9E  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  8927  003EA0  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  8928  003EA2  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  8929  003EA4  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  8930  003EA6  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8931  003EA8  5009               	movf	___aodiv@divisor^0,w,c
  8932  003EAA  5C01               	subwf	___aodiv@dividend^0,w,c
  8933  003EAC  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8934  003EAE  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  8935  003EB0  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8936  003EB2  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  8937  003EB4  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8938  003EB6  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  8939  003EB8  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8940  003EBA  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  8941  003EBC  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8942  003EBE  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  8943  003EC0  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8944  003EC2  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  8945  003EC4  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8946  003EC6  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  8947  003EC8  A0D8               	btfss	status,0,c
  8948  003ECA  EF69  F01F         	goto	u3721
  8949  003ECE  EF6C  F01F         	goto	u3720
  8950  003ED2                     u3721:
  8951  003ED2  FFFF               	dw	65535	; assembler added errata NOP
  8952  003ED4  EF7E  F01F         	goto	l3654
  8953  003ED8                     u3720:
  8954  003ED8  FFFF               	dw	65535	; assembler added errata NOP
  8955  003EDA  5009               	movf	___aodiv@divisor^0,w,c
  8956  003EDC  5E01               	subwf	___aodiv@dividend^0,f,c
  8957  003EDE  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8958  003EE0  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  8959  003EE2  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8960  003EE4  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8961  003EE6  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8962  003EE8  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8963  003EEA  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8964  003EEC  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8965  003EEE  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8966  003EF0  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8967  003EF2  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8968  003EF4  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8969  003EF6  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8970  003EF8  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8971  003EFA  8013               	bsf	___aodiv@quotient^0,0,c
  8972  003EFC                     l3654:
  8973  003EFC  FFFF               	dw	65535	; assembler added errata NOP
  8974  003EFE  90D8               	bcf	status,0,c
  8975  003F00  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8976  003F02  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8977  003F04  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8978  003F06  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8979  003F08  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8980  003F0A  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8981  003F0C  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8982  003F0E  3209               	rrcf	___aodiv@divisor^0,f,c
  8983  003F10  2E11               	decfsz	___aodiv@counter^0,f,c
  8984  003F12  EF4A  F01F         	goto	l3646
  8985  003F16                     l3658:
  8986  003F16  FFFF               	dw	65535	; assembler added errata NOP
  8987  003F18  5012               	movf	___aodiv@sign^0,w,c
  8988  003F1A  B4D8               	btfsc	status,2,c
  8989  003F1C  EF92  F01F         	goto	u3731
  8990  003F20  EF95  F01F         	goto	u3730
  8991  003F24                     u3731:
  8992  003F24  FFFF               	dw	65535	; assembler added errata NOP
  8993  003F26  EFA6  F01F         	goto	l3662
  8994  003F2A                     u3730:
  8995  003F2A  FFFF               	dw	65535	; assembler added errata NOP
  8996  003F2C  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8997  003F2E  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8998  003F30  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8999  003F32  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  9000  003F34  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  9001  003F36  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  9002  003F38  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  9003  003F3A  6C13               	negf	___aodiv@quotient^0,c
  9004  003F3C  0E00               	movlw	0
  9005  003F3E  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  9006  003F40  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  9007  003F42  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  9008  003F44  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  9009  003F46  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  9010  003F48  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  9011  003F4A  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  9012  003F4C                     l3662:
  9013  003F4C  FFFF               	dw	65535	; assembler added errata NOP
  9014  003F4E  C013  F001         	movff	___aodiv@quotient,?___aodiv
  9015  003F52  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  9016  003F56  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  9017  003F5A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  9018  003F5E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  9019  003F62  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  9020  003F66  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  9021  003F6A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  9022  003F6E  0012               	return		;funcret
  9023  003F70  FFFF               	dw	65535	; errata NOP
  9024  003F72                     __end_of___aodiv:
  9025                           	callstack 0
  9026                           
  9027 ;; *************** function _ctoa *****************
  9028 ;; Defined at:
  9029 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  9030 ;; Parameters:    Size  Location     Type
  9031 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  9032 ;;		 -> vsnprintf@f(6), 
  9033 ;;  c               1   29[COMRAM] unsigned char 
  9034 ;; Auto vars:     Size  Location     Type
  9035 ;;  w               2   30[COMRAM] int 
  9036 ;;  l               2    0        int 
  9037 ;; Return value:  Size  Location     Type
  9038 ;;                  2   27[COMRAM] int 
  9039 ;; Registers used:
  9040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9041 ;; Tracked objects:
  9042 ;;		On entry : 0/0
  9043 ;;		On exit  : 0/0
  9044 ;;		Unchanged: 0/0
  9045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9046 ;;      Params:         3       0       0       0       0       0       0
  9047 ;;      Locals:         2       0       0       0       0       0       0
  9048 ;;      Temps:          0       0       0       0       0       0       0
  9049 ;;      Totals:         5       0       0       0       0       0       0
  9050 ;;Total ram usage:        5 bytes
  9051 ;; Hardware stack levels used:    1
  9052 ;; Hardware stack levels required when called:    5
  9053 ;; This function calls:
  9054 ;;		_pad
  9055 ;; This function is called by:
  9056 ;;		_vfpfcnvrt
  9057 ;; This function uses a non-reentrant model
  9058 ;;
  9059                           
  9060                           	psect	text23
  9061  006B1A                     __ptext23:
  9062                           	callstack 0
  9063  006B1A                     _ctoa:
  9064                           	callstack 0
  9065  006B1A  FFFF               	dw	65535	; assembler added errata NOP
  9066  006B1C                     
  9067                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  9068  006B1C  0100               	movlb	0	; () banked
  9069  006B1E  5186               	movf	_width& (0+255),w,b
  9070  006B20  1187               	iorwf	(_width+1)& (0+255),w,b
  9071  006B22  A4D8               	btfss	status,2,c
  9072  006B24  EF96  F035         	goto	u4021
  9073  006B28  EF99  F035         	goto	u4020
  9074  006B2C                     u4021:
  9075  006B2C  FFFF               	dw	65535	; assembler added errata NOP
  9076  006B2E  EFA0  F035         	goto	l3800
  9077  006B32                     u4020:
  9078  006B32  FFFF               	dw	65535	; assembler added errata NOP
  9079  006B34                     
  9080                           ; BSR set to: 0
  9081  006B34  C086  F01F         	movff	_width,ctoa@w
  9082  006B38  C087  F020         	movff	_width+1,ctoa@w+1
  9083  006B3C  EFA7  F035         	goto	l3802
  9084  006B40                     l3800:
  9085  006B40  FFFF               	dw	65535	; assembler added errata NOP
  9086                           
  9087                           ; BSR set to: 0
  9088  006B42  0EFF               	movlw	255
  9089  006B44  2586               	addwf	_width& (0+255),w,b
  9090  006B46  6E1F               	movwf	ctoa@w^0,c
  9091  006B48  0EFF               	movlw	255
  9092  006B4A  2187               	addwfc	(_width+1)& (0+255),w,b
  9093  006B4C  6E20               	movwf	(ctoa@w+1)^0,c
  9094  006B4E                     l3802:
  9095  006B4E  FFFF               	dw	65535	; assembler added errata NOP
  9096                           
  9097                           ; BSR set to: 0
  9098                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 267:     dbuf[0] 
      +                          = c;
  9099  006B50  C01E  F098         	movff	ctoa@c,_dbuf
  9100  006B54                     
  9101                           ; BSR set to: 0
  9102                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 268:     dbuf[1] 
      +                          = '\0';
  9103  006B54  0E00               	movlw	0
  9104  006B56  6F99               	movwf	(_dbuf+1)& (0+255),b
  9105  006B58                     
  9106                           ; BSR set to: 0
  9107                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 269:     return p
      +                          ad(fp, &dbuf[0], w);
  9108  006B58  C01C  F011         	movff	ctoa@fp,pad@fp
  9109  006B5C  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  9110  006B60  0E98               	movlw	low _dbuf
  9111  006B62  6E13               	movwf	pad@buf^0,c
  9112  006B64  0E00               	movlw	high _dbuf
  9113  006B66  6E14               	movwf	(pad@buf+1)^0,c
  9114  006B68  C01F  F015         	movff	ctoa@w,pad@p
  9115  006B6C  C020  F016         	movff	ctoa@w+1,pad@p+1
  9116  006B70  ECC8  F039         	call	_pad	;wreg free
  9117  006B74  C011  F01C         	movff	?_pad,?_ctoa
  9118  006B78  C012  F01D         	movff	?_pad+1,?_ctoa+1
  9119  006B7C  0012               	return		;funcret
  9120  006B7E  FFFF               	dw	65535	; errata NOP
  9121  006B80                     __end_of_ctoa:
  9122                           	callstack 0
  9123                           
  9124 ;; *************** function _pad *****************
  9125 ;; Defined at:
  9126 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  9127 ;; Parameters:    Size  Location     Type
  9128 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9129 ;;		 -> vsnprintf@f(6), 
  9130 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9131 ;;		 -> dbuf(32), 
  9132 ;;  p               2   20[COMRAM] int 
  9133 ;; Auto vars:     Size  Location     Type
  9134 ;;  w               2   25[COMRAM] int 
  9135 ;;  i               2   23[COMRAM] int 
  9136 ;; Return value:  Size  Location     Type
  9137 ;;                  2   16[COMRAM] int 
  9138 ;; Registers used:
  9139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9140 ;; Tracked objects:
  9141 ;;		On entry : 0/0
  9142 ;;		On exit  : 0/0
  9143 ;;		Unchanged: 0/0
  9144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9145 ;;      Params:         6       0       0       0       0       0       0
  9146 ;;      Locals:         4       0       0       0       0       0       0
  9147 ;;      Temps:          1       0       0       0       0       0       0
  9148 ;;      Totals:        11       0       0       0       0       0       0
  9149 ;;Total ram usage:       11 bytes
  9150 ;; Hardware stack levels used:    1
  9151 ;; Hardware stack levels required when called:    4
  9152 ;; This function calls:
  9153 ;;		_fputc
  9154 ;;		_fputs
  9155 ;;		_strlen
  9156 ;; This function is called by:
  9157 ;;		_ctoa
  9158 ;;		_dtoa
  9159 ;;		_otoa
  9160 ;;		_utoa
  9161 ;;		_xtoa
  9162 ;; This function uses a non-reentrant model
  9163 ;;
  9164                           
  9165                           	psect	text24
  9166  007390                     __ptext24:
  9167                           	callstack 0
  9168  007390                     _pad:
  9169                           	callstack 0
  9170  007390  FFFF               	dw	65535	; assembler added errata NOP
  9171  007392                     
  9172                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  9173  007392  0100               	movlb	0	; () banked
  9174  007394  A18A               	btfss	_flags& (0+255),0,b
  9175  007396  EFCF  F039         	goto	u3871
  9176  00739A  EFD2  F039         	goto	u3870
  9177  00739E                     u3871:
  9178  00739E  FFFF               	dw	65535	; assembler added errata NOP
  9179  0073A0  EFDD  F039         	goto	l3744
  9180  0073A4                     u3870:
  9181  0073A4  FFFF               	dw	65535	; assembler added errata NOP
  9182  0073A6                     
  9183                           ; BSR set to: 0
  9184                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  9185  0073A6  C013  F00A         	movff	pad@buf,fputs@s
  9186  0073AA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9187  0073AE  C011  F00C         	movff	pad@fp,fputs@fp
  9188  0073B2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9189  0073B6  EC07  F035         	call	_fputs	;wreg free
  9190  0073BA                     l3744:
  9191  0073BA  FFFF               	dw	65535	; assembler added errata NOP
  9192                           
  9193                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  9194  0073BC  BE16               	btfsc	(pad@p+1)^0,7,c
  9195  0073BE  EFE3  F039         	goto	u3881
  9196  0073C2  EFE6  F039         	goto	u3880
  9197  0073C6                     u3881:
  9198  0073C6  FFFF               	dw	65535	; assembler added errata NOP
  9199  0073C8  EFED  F039         	goto	l3748
  9200  0073CC                     u3880:
  9201  0073CC  FFFF               	dw	65535	; assembler added errata NOP
  9202  0073CE  C015  F01A         	movff	pad@p,pad@w
  9203  0073D2  C016  F01B         	movff	pad@p+1,pad@w+1
  9204  0073D6  EFF2  F039         	goto	l1134
  9205  0073DA                     l3748:
  9206  0073DA  FFFF               	dw	65535	; assembler added errata NOP
  9207  0073DC  0E00               	movlw	0
  9208  0073DE  6E1B               	movwf	(pad@w+1)^0,c
  9209  0073E0  0E00               	movlw	0
  9210  0073E2  6E1A               	movwf	pad@w^0,c
  9211  0073E4                     l1134:
  9212  0073E4  FFFF               	dw	65535	; assembler added errata NOP
  9213                           
  9214                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  9215  0073E6  0E00               	movlw	0
  9216  0073E8  6E19               	movwf	(pad@i+1)^0,c
  9217  0073EA  0E00               	movlw	0
  9218  0073EC  6E18               	movwf	pad@i^0,c
  9219                           
  9220                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9221  0073EE  EF06  F03A         	goto	l3754
  9222  0073F2                     l3750:
  9223  0073F2  FFFF               	dw	65535	; assembler added errata NOP
  9224                           
  9225                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  9226  0073F4  0E00               	movlw	0
  9227  0073F6  6E02               	movwf	(fputc@c+1)^0,c
  9228  0073F8  0E20               	movlw	32
  9229  0073FA  6E01               	movwf	fputc@c^0,c
  9230  0073FC  C011  F003         	movff	pad@fp,fputc@fp
  9231  007400  C012  F004         	movff	pad@fp+1,fputc@fp+1
  9232  007404  EC57  F039         	call	_fputc	;wreg free
  9233  007408                     
  9234                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  9235  007408  4A18               	infsnz	pad@i^0,f,c
  9236  00740A  2A19               	incf	(pad@i+1)^0,f,c
  9237  00740C                     l3754:
  9238  00740C  FFFF               	dw	65535	; assembler added errata NOP
  9239                           
  9240                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9241  00740E  501A               	movf	pad@w^0,w,c
  9242  007410  5C18               	subwf	pad@i^0,w,c
  9243  007412  5019               	movf	(pad@i+1)^0,w,c
  9244  007414  0A80               	xorlw	128
  9245  007416  6E17               	movwf	??_pad^0,c
  9246  007418  501B               	movf	(pad@w+1)^0,w,c
  9247  00741A  0A80               	xorlw	128
  9248  00741C  5817               	subwfb	??_pad^0,w,c
  9249  00741E  A0D8               	btfss	status,0,c
  9250  007420  EF14  F03A         	goto	u3891
  9251  007424  EF17  F03A         	goto	u3890
  9252  007428                     u3891:
  9253  007428  FFFF               	dw	65535	; assembler added errata NOP
  9254  00742A  EFF9  F039         	goto	l3750
  9255  00742E                     u3890:
  9256  00742E  FFFF               	dw	65535	; assembler added errata NOP
  9257  007430                     
  9258                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  9259  007430  0100               	movlb	0	; () banked
  9260  007432  B18A               	btfsc	_flags& (0+255),0,b
  9261  007434  EF1E  F03A         	goto	u3901
  9262  007438  EF21  F03A         	goto	u3900
  9263  00743C                     u3901:
  9264  00743C  FFFF               	dw	65535	; assembler added errata NOP
  9265  00743E  EF2C  F03A         	goto	l3758
  9266  007442                     u3900:
  9267  007442  FFFF               	dw	65535	; assembler added errata NOP
  9268  007444                     
  9269                           ; BSR set to: 0
  9270                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  9271  007444  C013  F00A         	movff	pad@buf,fputs@s
  9272  007448  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9273  00744C  C011  F00C         	movff	pad@fp,fputs@fp
  9274  007450  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9275  007454  EC07  F035         	call	_fputs	;wreg free
  9276  007458                     l3758:
  9277  007458  FFFF               	dw	65535	; assembler added errata NOP
  9278                           
  9279                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  9280  00745A  C013  F001         	movff	pad@buf,strlen@s
  9281  00745E  C014  F002         	movff	pad@buf+1,strlen@s+1
  9282  007462  EC2F  F035         	call	_strlen	;wreg free
  9283  007466  501A               	movf	pad@w^0,w,c
  9284  007468  2401               	addwf	?_strlen^0,w,c
  9285  00746A  6E11               	movwf	?_pad^0,c
  9286  00746C  501B               	movf	(pad@w+1)^0,w,c
  9287  00746E  2002               	addwfc	(?_strlen+1)^0,w,c
  9288  007470  6E12               	movwf	(?_pad+1)^0,c
  9289  007472  0012               	return		;funcret
  9290  007474  FFFF               	dw	65535	; errata NOP
  9291  007476                     __end_of_pad:
  9292                           	callstack 0
  9293                           
  9294 ;; *************** function _strlen *****************
  9295 ;; Defined at:
  9296 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  9297 ;; Parameters:    Size  Location     Type
  9298 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9299 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), STR_8(50), 
  9300 ;;		 -> STR_7(9), STR_6(7), STR_5(9), STR_4(39), 
  9301 ;;		 -> STR_3(9), STR_2(64), STR_1(49), 
  9302 ;; Auto vars:     Size  Location     Type
  9303 ;;  a               2    2[COMRAM] PTR const unsigned char 
  9304 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), STR_8(50), 
  9305 ;;		 -> STR_7(9), STR_6(7), STR_5(9), STR_4(39), 
  9306 ;;		 -> STR_3(9), STR_2(64), STR_1(49), 
  9307 ;; Return value:  Size  Location     Type
  9308 ;;                  2    0[COMRAM] unsigned int 
  9309 ;; Registers used:
  9310 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  9311 ;; Tracked objects:
  9312 ;;		On entry : 0/0
  9313 ;;		On exit  : 0/0
  9314 ;;		Unchanged: 0/0
  9315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9316 ;;      Params:         2       0       0       0       0       0       0
  9317 ;;      Locals:         2       0       0       0       0       0       0
  9318 ;;      Temps:          0       0       0       0       0       0       0
  9319 ;;      Totals:         4       0       0       0       0       0       0
  9320 ;;Total ram usage:        4 bytes
  9321 ;; Hardware stack levels used:    1
  9322 ;; Hardware stack levels required when called:    1
  9323 ;; This function calls:
  9324 ;;		Nothing
  9325 ;; This function is called by:
  9326 ;;		_pad
  9327 ;;		_stoa
  9328 ;; This function uses a non-reentrant model
  9329 ;;
  9330                           
  9331                           	psect	text25
  9332  006A5E                     __ptext25:
  9333                           	callstack 0
  9334  006A5E                     _strlen:
  9335                           	callstack 0
  9336  006A5E  FFFF               	dw	65535	; assembler added errata NOP
  9337  006A60  C001  F003         	movff	strlen@s,strlen@a
  9338  006A64  C002  F004         	movff	strlen@s+1,strlen@a+1
  9339  006A68  EF39  F035         	goto	l3602
  9340  006A6C                     l3600:
  9341  006A6C  FFFF               	dw	65535	; assembler added errata NOP
  9342  006A6E  4A01               	infsnz	strlen@s^0,f,c
  9343  006A70  2A02               	incf	(strlen@s+1)^0,f,c
  9344  006A72                     l3602:
  9345  006A72  FFFF               	dw	65535	; assembler added errata NOP
  9346  006A74  C001  FFF6         	movff	strlen@s,tblptrl
  9347  006A78  C002  FFF7         	movff	strlen@s+1,tblptrh
  9348  006A7C  6AF8               	clrf	tblptru,c
  9349  006A7E  0E05               	movlw	(high __ramtop+-1)
  9350  006A80  64F7               	cpfsgt	tblptrh,c
  9351  006A82  D004               	bra	u3627
  9352  006A84  0008               	tblrd		*
  9353  006A86  FFFF               	dw	65535	; errata NOP
  9354  006A88  50F5               	movf	tablat,w,c
  9355  006A8A  D005               	bra	u3620
  9356  006A8C                     u3627:
  9357  006A8C  CFF6 FFE1          	movff	tblptrl,fsr1l
  9358  006A90  CFF7 FFE2          	movff	tblptrh,fsr1h
  9359  006A94  50E7               	movf	indf1,w,c
  9360  006A96                     u3620:
  9361  006A96  0900               	iorlw	0
  9362  006A98  A4D8               	btfss	status,2,c
  9363  006A9A  EF51  F035         	goto	u3631
  9364  006A9E  EF54  F035         	goto	u3630
  9365  006AA2                     u3631:
  9366  006AA2  FFFF               	dw	65535	; assembler added errata NOP
  9367  006AA4  EF36  F035         	goto	l3600
  9368  006AA8                     u3630:
  9369  006AA8  FFFF               	dw	65535	; assembler added errata NOP
  9370  006AAA  5003               	movf	strlen@a^0,w,c
  9371  006AAC  5C01               	subwf	strlen@s^0,w,c
  9372  006AAE  6E01               	movwf	?_strlen^0,c
  9373  006AB0  5004               	movf	(strlen@a+1)^0,w,c
  9374  006AB2  5802               	subwfb	(strlen@s+1)^0,w,c
  9375  006AB4  6E02               	movwf	(?_strlen+1)^0,c
  9376  006AB6  0012               	return		;funcret
  9377  006AB8  FFFF               	dw	65535	; errata NOP
  9378  006ABA                     __end_of_strlen:
  9379                           	callstack 0
  9380                           
  9381 ;; *************** function _fputs *****************
  9382 ;; Defined at:
  9383 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  9384 ;; Parameters:    Size  Location     Type
  9385 ;;  s               2    9[COMRAM] PTR const unsigned char 
  9386 ;;		 -> dbuf(32), 
  9387 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  9388 ;;		 -> vsnprintf@f(6), 
  9389 ;; Auto vars:     Size  Location     Type
  9390 ;;  i               2   14[COMRAM] int 
  9391 ;;  c               1   13[COMRAM] unsigned char 
  9392 ;; Return value:  Size  Location     Type
  9393 ;;                  2    9[COMRAM] int 
  9394 ;; Registers used:
  9395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9396 ;; Tracked objects:
  9397 ;;		On entry : 0/0
  9398 ;;		On exit  : 0/0
  9399 ;;		Unchanged: 0/0
  9400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9401 ;;      Params:         4       0       0       0       0       0       0
  9402 ;;      Locals:         3       0       0       0       0       0       0
  9403 ;;      Temps:          0       0       0       0       0       0       0
  9404 ;;      Totals:         7       0       0       0       0       0       0
  9405 ;;Total ram usage:        7 bytes
  9406 ;; Hardware stack levels used:    1
  9407 ;; Hardware stack levels required when called:    3
  9408 ;; This function calls:
  9409 ;;		_fputc
  9410 ;; This function is called by:
  9411 ;;		_pad
  9412 ;; This function uses a non-reentrant model
  9413 ;;
  9414                           
  9415                           	psect	text26
  9416  006A0E                     __ptext26:
  9417                           	callstack 0
  9418  006A0E                     _fputs:
  9419                           	callstack 0
  9420  006A0E  FFFF               	dw	65535	; assembler added errata NOP
  9421  006A10  0E00               	movlw	0
  9422  006A12  6E10               	movwf	(fputs@i+1)^0,c
  9423  006A14  0E00               	movlw	0
  9424  006A16  6E0F               	movwf	fputs@i^0,c
  9425  006A18  EF1A  F035         	goto	l3596
  9426  006A1C                     l3592:
  9427  006A1C  FFFF               	dw	65535	; assembler added errata NOP
  9428  006A1E  C00E  F001         	movff	fputs@c,fputc@c
  9429  006A22  6A02               	clrf	(fputc@c+1)^0,c
  9430  006A24  C00C  F003         	movff	fputs@fp,fputc@fp
  9431  006A28  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  9432  006A2C  EC57  F039         	call	_fputc	;wreg free
  9433  006A30  4A0F               	infsnz	fputs@i^0,f,c
  9434  006A32  2A10               	incf	(fputs@i+1)^0,f,c
  9435  006A34                     l3596:
  9436  006A34  FFFF               	dw	65535	; assembler added errata NOP
  9437  006A36  500F               	movf	fputs@i^0,w,c
  9438  006A38  240A               	addwf	fputs@s^0,w,c
  9439  006A3A  6ED9               	movwf	fsr2l,c
  9440  006A3C  5010               	movf	(fputs@i+1)^0,w,c
  9441  006A3E  200B               	addwfc	(fputs@s+1)^0,w,c
  9442  006A40  6EDA               	movwf	fsr2h,c
  9443  006A42  50DF               	movf	indf2,w,c
  9444  006A44  6E0E               	movwf	fputs@c^0,c
  9445  006A46  500E               	movf	fputs@c^0,w,c
  9446  006A48  A4D8               	btfss	status,2,c
  9447  006A4A  EF29  F035         	goto	u3611
  9448  006A4E  EF2C  F035         	goto	u3610
  9449  006A52                     u3611:
  9450  006A52  FFFF               	dw	65535	; assembler added errata NOP
  9451  006A54  EF0E  F035         	goto	l3592
  9452  006A58                     u3610:
  9453  006A58  FFFF               	dw	65535	; assembler added errata NOP
  9454  006A5A  0012               	return		;funcret
  9455  006A5C  FFFF               	dw	65535	; errata NOP
  9456  006A5E                     __end_of_fputs:
  9457                           	callstack 0
  9458                           
  9459 ;; *************** function _fputc *****************
  9460 ;; Defined at:
  9461 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  9462 ;; Parameters:    Size  Location     Type
  9463 ;;  c               2    0[COMRAM] int 
  9464 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  9465 ;;		 -> vsnprintf@f(6), 
  9466 ;; Auto vars:     Size  Location     Type
  9467 ;;		None
  9468 ;; Return value:  Size  Location     Type
  9469 ;;                  2    0[COMRAM] int 
  9470 ;; Registers used:
  9471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9472 ;; Tracked objects:
  9473 ;;		On entry : 0/0
  9474 ;;		On exit  : 0/0
  9475 ;;		Unchanged: 0/0
  9476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9477 ;;      Params:         4       0       0       0       0       0       0
  9478 ;;      Locals:         0       0       0       0       0       0       0
  9479 ;;      Temps:          5       0       0       0       0       0       0
  9480 ;;      Totals:         9       0       0       0       0       0       0
  9481 ;;Total ram usage:        9 bytes
  9482 ;; Hardware stack levels used:    1
  9483 ;; Hardware stack levels required when called:    2
  9484 ;; This function calls:
  9485 ;;		_putch
  9486 ;; This function is called by:
  9487 ;;		_pad
  9488 ;;		_stoa
  9489 ;;		_vfpfcnvrt
  9490 ;;		_fputs
  9491 ;; This function uses a non-reentrant model
  9492 ;;
  9493                           
  9494                           	psect	text27
  9495  0072AE                     __ptext27:
  9496                           	callstack 0
  9497  0072AE                     _fputc:
  9498                           	callstack 0
  9499  0072AE  FFFF               	dw	65535	; assembler added errata NOP
  9500  0072B0  5003               	movf	fputc@fp^0,w,c
  9501  0072B2  1004               	iorwf	(fputc@fp+1)^0,w,c
  9502  0072B4  B4D8               	btfsc	status,2,c
  9503  0072B6  EF5F  F039         	goto	u3571
  9504  0072BA  EF62  F039         	goto	u3570
  9505  0072BE                     u3571:
  9506  0072BE  FFFF               	dw	65535	; assembler added errata NOP
  9507  0072C0  EF6D  F039         	goto	l3580
  9508  0072C4                     u3570:
  9509  0072C4  FFFF               	dw	65535	; assembler added errata NOP
  9510  0072C6  5003               	movf	fputc@fp^0,w,c
  9511  0072C8  1004               	iorwf	(fputc@fp+1)^0,w,c
  9512  0072CA  A4D8               	btfss	status,2,c
  9513  0072CC  EF6A  F039         	goto	u3581
  9514  0072D0  EF6D  F039         	goto	u3580
  9515  0072D4                     u3581:
  9516  0072D4  FFFF               	dw	65535	; assembler added errata NOP
  9517  0072D6  EF73  F039         	goto	l3582
  9518  0072DA                     u3580:
  9519  0072DA                     l3580:
  9520  0072DA  FFFF               	dw	65535	; assembler added errata NOP
  9521  0072DC  5001               	movf	fputc@c^0,w,c
  9522  0072DE  ECC0  F032         	call	_putch
  9523  0072E2  EFC5  F039         	goto	l1409
  9524  0072E6                     l3582:
  9525  0072E6  FFFF               	dw	65535	; assembler added errata NOP
  9526  0072E8  EE20 F004          	lfsr	2,4
  9527  0072EC  5003               	movf	fputc@fp^0,w,c
  9528  0072EE  26D9               	addwf	fsr2l,f,c
  9529  0072F0  5004               	movf	(fputc@fp+1)^0,w,c
  9530  0072F2  22DA               	addwfc	fsr2h,f,c
  9531  0072F4  50DE               	movf	postinc2,w,c
  9532  0072F6  10DE               	iorwf	postinc2,w,c
  9533  0072F8  B4D8               	btfsc	status,2,c
  9534  0072FA  EF81  F039         	goto	u3591
  9535  0072FE  EF84  F039         	goto	u3590
  9536  007302                     u3591:
  9537  007302  FFFF               	dw	65535	; assembler added errata NOP
  9538  007304  EFA1  F039         	goto	l3586
  9539  007308                     u3590:
  9540  007308  FFFF               	dw	65535	; assembler added errata NOP
  9541  00730A  EE20 F004          	lfsr	2,4
  9542  00730E  5003               	movf	fputc@fp^0,w,c
  9543  007310  26D9               	addwf	fsr2l,f,c
  9544  007312  5004               	movf	(fputc@fp+1)^0,w,c
  9545  007314  22DA               	addwfc	fsr2h,f,c
  9546  007316  EE10 F002          	lfsr	1,2
  9547  00731A  5003               	movf	fputc@fp^0,w,c
  9548  00731C  26E1               	addwf	fsr1l,f,c
  9549  00731E  5004               	movf	(fputc@fp+1)^0,w,c
  9550  007320  22E2               	addwfc	fsr1h,f,c
  9551  007322  50DE               	movf	postinc2,w,c
  9552  007324  5CE6               	subwf	postinc1,w,c
  9553  007326  50E6               	movf	postinc1,w,c
  9554  007328  0A80               	xorlw	128
  9555  00732A  6E09               	movwf	(??_fputc+4)^0,c
  9556  00732C  50DE               	movf	postinc2,w,c
  9557  00732E  0A80               	xorlw	128
  9558  007330  5809               	subwfb	(??_fputc+4)^0,w,c
  9559  007332  B0D8               	btfsc	status,0,c
  9560  007334  EF9E  F039         	goto	u3601
  9561  007338  EFA1  F039         	goto	u3600
  9562  00733C                     u3601:
  9563  00733C  FFFF               	dw	65535	; assembler added errata NOP
  9564  00733E  EFC5  F039         	goto	l1409
  9565  007342                     u3600:
  9566  007342                     l3586:
  9567  007342  FFFF               	dw	65535	; assembler added errata NOP
  9568  007344  EE20 F002          	lfsr	2,2
  9569  007348  5003               	movf	fputc@fp^0,w,c
  9570  00734A  26D9               	addwf	fsr2l,f,c
  9571  00734C  5004               	movf	(fputc@fp+1)^0,w,c
  9572  00734E  22DA               	addwfc	fsr2h,f,c
  9573  007350  CFDE F005          	movff	postinc2,??_fputc
  9574  007354  CFDD F006          	movff	postdec2,??_fputc+1
  9575  007358  C003  FFD9         	movff	fputc@fp,fsr2l
  9576  00735C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  9577  007360  CFDE F007          	movff	postinc2,??_fputc+2
  9578  007364  CFDD F008          	movff	postdec2,??_fputc+3
  9579  007368  5005               	movf	??_fputc^0,w,c
  9580  00736A  2407               	addwf	(??_fputc+2)^0,w,c
  9581  00736C  6ED9               	movwf	fsr2l,c
  9582  00736E  5006               	movf	(??_fputc+1)^0,w,c
  9583  007370  2008               	addwfc	(??_fputc+3)^0,w,c
  9584  007372  6EDA               	movwf	fsr2h,c
  9585  007374  C001  FFDF         	movff	fputc@c,indf2
  9586  007378  EE20 F002          	lfsr	2,2
  9587  00737C  5003               	movf	fputc@fp^0,w,c
  9588  00737E  26D9               	addwf	fsr2l,f,c
  9589  007380  5004               	movf	(fputc@fp+1)^0,w,c
  9590  007382  22DA               	addwfc	fsr2h,f,c
  9591  007384  2ADE               	incf	postinc2,f,c
  9592  007386  0E00               	movlw	0
  9593  007388  22DD               	addwfc	postdec2,f,c
  9594  00738A                     l1409:
  9595  00738A  FFFF               	dw	65535	; assembler added errata NOP
  9596  00738C  0012               	return		;funcret
  9597  00738E  FFFF               	dw	65535	; errata NOP
  9598  007390                     __end_of_fputc:
  9599                           	callstack 0
  9600                           
  9601 ;; *************** function _putch *****************
  9602 ;; Defined at:
  9603 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  9604 ;; Parameters:    Size  Location     Type
  9605 ;;  c               1    wreg     unsigned char 
  9606 ;; Auto vars:     Size  Location     Type
  9607 ;;  c               1    0[COMRAM] unsigned char 
  9608 ;; Return value:  Size  Location     Type
  9609 ;;                  1    wreg      void 
  9610 ;; Registers used:
  9611 ;;		wreg
  9612 ;; Tracked objects:
  9613 ;;		On entry : 0/0
  9614 ;;		On exit  : 0/0
  9615 ;;		Unchanged: 0/0
  9616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9617 ;;      Params:         0       0       0       0       0       0       0
  9618 ;;      Locals:         0       0       0       0       0       0       0
  9619 ;;      Temps:          0       0       0       0       0       0       0
  9620 ;;      Totals:         0       0       0       0       0       0       0
  9621 ;;Total ram usage:        0 bytes
  9622 ;; Hardware stack levels used:    1
  9623 ;; Hardware stack levels required when called:    1
  9624 ;; This function calls:
  9625 ;;		Nothing
  9626 ;; This function is called by:
  9627 ;;		_fputc
  9628 ;; This function uses a non-reentrant model
  9629 ;;
  9630                           
  9631                           	psect	text28
  9632  006580                     __ptext28:
  9633                           	callstack 0
  9634  006580                     _putch:
  9635                           	callstack 0
  9636  006580  FFFF               	dw	65535	; assembler added errata NOP
  9637  006582  0012               	return		;funcret
  9638  006584  FFFF               	dw	65535	; errata NOP
  9639  006586                     __end_of_putch:
  9640                           	callstack 0
  9641                           
  9642 ;; *************** function _atoi *****************
  9643 ;; Defined at:
  9644 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  9645 ;; Parameters:    Size  Location     Type
  9646 ;;  s               2    7[COMRAM] PTR const unsigned char 
  9647 ;;		 -> STR_10(3), 
  9648 ;; Auto vars:     Size  Location     Type
  9649 ;;  n               2   20[COMRAM] int 
  9650 ;;  neg             2   13[COMRAM] int 
  9651 ;; Return value:  Size  Location     Type
  9652 ;;                  2    7[COMRAM] int 
  9653 ;; Registers used:
  9654 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9655 ;; Tracked objects:
  9656 ;;		On entry : 0/0
  9657 ;;		On exit  : 0/0
  9658 ;;		Unchanged: 0/0
  9659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9660 ;;      Params:         2       0       0       0       0       0       0
  9661 ;;      Locals:         9       0       0       0       0       0       0
  9662 ;;      Temps:          4       0       0       0       0       0       0
  9663 ;;      Totals:        15       0       0       0       0       0       0
  9664 ;;Total ram usage:       15 bytes
  9665 ;; Hardware stack levels used:    1
  9666 ;; Hardware stack levels required when called:    2
  9667 ;; This function calls:
  9668 ;;		___wmul
  9669 ;;		_isdigit
  9670 ;;		_isspace
  9671 ;; This function is called by:
  9672 ;;		_vfpfcnvrt
  9673 ;; This function uses a non-reentrant model
  9674 ;;
  9675                           
  9676                           	psect	text29
  9677  003BF0                     __ptext29:
  9678                           	callstack 0
  9679  003BF0                     _atoi:
  9680                           	callstack 0
  9681  003BF0  FFFF               	dw	65535	; assembler added errata NOP
  9682  003BF2  0E00               	movlw	0
  9683  003BF4  6E16               	movwf	(atoi@n+1)^0,c
  9684  003BF6  0E00               	movlw	0
  9685  003BF8  6E15               	movwf	atoi@n^0,c
  9686  003BFA  0E00               	movlw	0
  9687  003BFC  6E0F               	movwf	(atoi@neg+1)^0,c
  9688  003BFE  0E00               	movlw	0
  9689  003C00  6E0E               	movwf	atoi@neg^0,c
  9690  003C02  EF06  F01E         	goto	l4068
  9691  003C06                     l4066:
  9692  003C06  FFFF               	dw	65535	; assembler added errata NOP
  9693  003C08  4A08               	infsnz	atoi@s^0,f,c
  9694  003C0A  2A09               	incf	(atoi@s+1)^0,f,c
  9695  003C0C                     l4068:
  9696  003C0C  FFFF               	dw	65535	; assembler added errata NOP
  9697  003C0E  0E01               	movlw	1
  9698  003C10  6E14               	movwf	_atoi$1807^0,c
  9699  003C12  C008  FFF6         	movff	atoi@s,tblptrl
  9700  003C16  C009  FFF7         	movff	atoi@s+1,tblptrh
  9701  003C1A                     	if	0	;tblptru may be non-zero
  9702  003C1A                     	endif
  9703  003C1A                     	if	0	;tblptru may be non-zero
  9704  003C1A                     	endif
  9705  003C1A  0008               	tblrd		*
  9706  003C1C  FFFF               	dw	65535	; errata NOP
  9707  003C1E  50F5               	movf	tablat,w,c
  9708  003C20  0A20               	xorlw	32
  9709  003C22  B4D8               	btfsc	status,2,c
  9710  003C24  EF16  F01E         	goto	u4621
  9711  003C28  EF19  F01E         	goto	u4620
  9712  003C2C                     u4621:
  9713  003C2C  FFFF               	dw	65535	; assembler added errata NOP
  9714  003C2E  EF3A  F01E         	goto	l4076
  9715  003C32                     u4620:
  9716  003C32  FFFF               	dw	65535	; assembler added errata NOP
  9717  003C34  0EF7               	movlw	247
  9718  003C36  6E0A               	movwf	??_atoi^0,c
  9719  003C38  0EFF               	movlw	255
  9720  003C3A  6E0B               	movwf	(??_atoi+1)^0,c
  9721  003C3C  C008  FFF6         	movff	atoi@s,tblptrl
  9722  003C40  C009  FFF7         	movff	atoi@s+1,tblptrh
  9723  003C44                     	if	0	;tblptru may be non-zero
  9724  003C44                     	endif
  9725  003C44                     	if	0	;tblptru may be non-zero
  9726  003C44                     	endif
  9727  003C44  0008               	tblrd		*
  9728  003C46  FFFF               	dw	65535	; errata NOP
  9729  003C48  50F5               	movf	tablat,w,c
  9730  003C4A  6E0C               	movwf	(??_atoi+2)^0,c
  9731  003C4C  6A0D               	clrf	(??_atoi+3)^0,c
  9732  003C4E  500A               	movf	??_atoi^0,w,c
  9733  003C50  260C               	addwf	(??_atoi+2)^0,f,c
  9734  003C52  500B               	movf	(??_atoi+1)^0,w,c
  9735  003C54  220D               	addwfc	(??_atoi+3)^0,f,c
  9736  003C56  500D               	movf	(??_atoi+3)^0,w,c
  9737  003C58  E10A               	bnz	u4630
  9738  003C5A  0E05               	movlw	5
  9739  003C5C  5C0C               	subwf	(??_atoi+2)^0,w,c
  9740  003C5E  A0D8               	btfss	status,0,c
  9741  003C60  EF34  F01E         	goto	u4631
  9742  003C64  EF37  F01E         	goto	u4630
  9743  003C68                     u4631:
  9744  003C68  FFFF               	dw	65535	; assembler added errata NOP
  9745  003C6A  EF3A  F01E         	goto	l4076
  9746  003C6E                     u4630:
  9747  003C6E  FFFF               	dw	65535	; assembler added errata NOP
  9748  003C70  0E00               	movlw	0
  9749  003C72  6E14               	movwf	_atoi$1807^0,c
  9750  003C74                     l4076:
  9751  003C74  FFFF               	dw	65535	; assembler added errata NOP
  9752  003C76  C014  F010         	movff	_atoi$1807,_atoi$1806
  9753  003C7A  6A11               	clrf	(_atoi$1806+1)^0,c
  9754  003C7C  5010               	movf	_atoi$1806^0,w,c
  9755  003C7E  1011               	iorwf	(_atoi$1806+1)^0,w,c
  9756  003C80  A4D8               	btfss	status,2,c
  9757  003C82  EF45  F01E         	goto	u4641
  9758  003C86  EF48  F01E         	goto	u4640
  9759  003C8A                     u4641:
  9760  003C8A  FFFF               	dw	65535	; assembler added errata NOP
  9761  003C8C  EF03  F01E         	goto	l4066
  9762  003C90                     u4640:
  9763  003C90  FFFF               	dw	65535	; assembler added errata NOP
  9764  003C92  EF55  F01E         	goto	l4086
  9765  003C96                     l4082:
  9766  003C96  FFFF               	dw	65535	; assembler added errata NOP
  9767  003C98  0E00               	movlw	0
  9768  003C9A  6E0F               	movwf	(atoi@neg+1)^0,c
  9769  003C9C  0E01               	movlw	1
  9770  003C9E  6E0E               	movwf	atoi@neg^0,c
  9771  003CA0                     l4084:
  9772  003CA0  FFFF               	dw	65535	; assembler added errata NOP
  9773  003CA2  4A08               	infsnz	atoi@s^0,f,c
  9774  003CA4  2A09               	incf	(atoi@s+1)^0,f,c
  9775  003CA6  EF8F  F01E         	goto	l4092
  9776  003CAA                     l4086:
  9777  003CAA  FFFF               	dw	65535	; assembler added errata NOP
  9778  003CAC  C008  FFF6         	movff	atoi@s,tblptrl
  9779  003CB0  C009  FFF7         	movff	atoi@s+1,tblptrh
  9780  003CB4                     	if	0	;tblptru may be non-zero
  9781  003CB4                     	endif
  9782  003CB4                     	if	0	;tblptru may be non-zero
  9783  003CB4                     	endif
  9784  003CB4  0008               	tblrd		*
  9785  003CB6  FFFF               	dw	65535	; errata NOP
  9786  003CB8  50F5               	movf	tablat,w,c
  9787  003CBA  6E0A               	movwf	??_atoi^0,c
  9788  003CBC  6A0B               	clrf	(??_atoi+1)^0,c
  9789                           
  9790                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9791                           ; Switch size 1, requested type "simple"
  9792                           ; Number of cases is 1, Range of values is 0 to 0
  9793                           ; switch strategies available:
  9794                           ; Name         Instructions Cycles
  9795                           ; simple_byte            4     3 (average)
  9796                           ;	Chosen strategy is simple_byte
  9797  003CBE  500B               	movf	(??_atoi+1)^0,w,c
  9798  003CC0  0A00               	xorlw	0	; case 0
  9799  003CC2  B4D8               	btfsc	status,2,c
  9800  003CC4  EF66  F01E         	goto	l5714
  9801  003CC8  EF8F  F01E         	goto	l4092
  9802  003CCC                     l5714:
  9803  003CCC  FFFF               	dw	65535	; assembler added errata NOP
  9804                           
  9805                           ; Switch size 1, requested type "simple"
  9806                           ; Number of cases is 2, Range of values is 43 to 45
  9807                           ; switch strategies available:
  9808                           ; Name         Instructions Cycles
  9809                           ; simple_byte            7     4 (average)
  9810                           ;	Chosen strategy is simple_byte
  9811  003CCE  500A               	movf	??_atoi^0,w,c
  9812  003CD0  0A2B               	xorlw	43	; case 43
  9813  003CD2  B4D8               	btfsc	status,2,c
  9814  003CD4  EF50  F01E         	goto	l4084
  9815  003CD8  0A06               	xorlw	6	; case 45
  9816  003CDA  B4D8               	btfsc	status,2,c
  9817  003CDC  EF4B  F01E         	goto	l4082
  9818  003CE0  EF8F  F01E         	goto	l4092
  9819  003CE4                     l4088:
  9820  003CE4  FFFF               	dw	65535	; assembler added errata NOP
  9821  003CE6  C015  F001         	movff	atoi@n,___wmul@multiplier
  9822  003CEA  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  9823  003CEE  0E00               	movlw	0
  9824  003CF0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9825  003CF2  0E0A               	movlw	10
  9826  003CF4  6E03               	movwf	___wmul@multiplicand^0,c
  9827  003CF6  EC76  F033         	call	___wmul	;wreg free
  9828  003CFA  C008  FFF6         	movff	atoi@s,tblptrl
  9829  003CFE  C009  FFF7         	movff	atoi@s+1,tblptrh
  9830  003D02                     	if	0	;tblptru may be non-zero
  9831  003D02                     	endif
  9832  003D02                     	if	0	;tblptru may be non-zero
  9833  003D02                     	endif
  9834  003D02  0008               	tblrd		*
  9835  003D04  FFFF               	dw	65535	; errata NOP
  9836  003D06  50F5               	movf	tablat,w,c
  9837  003D08  5E01               	subwf	?___wmul^0,f,c
  9838  003D0A  0E00               	movlw	0
  9839  003D0C  5A02               	subwfb	(?___wmul+1)^0,f,c
  9840  003D0E  0E30               	movlw	48
  9841  003D10  2401               	addwf	?___wmul^0,w,c
  9842  003D12  6E15               	movwf	atoi@n^0,c
  9843  003D14  0E00               	movlw	0
  9844  003D16  2002               	addwfc	(?___wmul+1)^0,w,c
  9845  003D18  6E16               	movwf	(atoi@n+1)^0,c
  9846  003D1A  EF50  F01E         	goto	l4084
  9847  003D1E                     l4092:
  9848  003D1E  FFFF               	dw	65535	; assembler added errata NOP
  9849  003D20  0ED0               	movlw	208
  9850  003D22  6E0A               	movwf	??_atoi^0,c
  9851  003D24  0EFF               	movlw	255
  9852  003D26  6E0B               	movwf	(??_atoi+1)^0,c
  9853  003D28  C008  FFF6         	movff	atoi@s,tblptrl
  9854  003D2C  C009  FFF7         	movff	atoi@s+1,tblptrh
  9855  003D30                     	if	0	;tblptru may be non-zero
  9856  003D30                     	endif
  9857  003D30                     	if	0	;tblptru may be non-zero
  9858  003D30                     	endif
  9859  003D30  0008               	tblrd		*
  9860  003D32  FFFF               	dw	65535	; errata NOP
  9861  003D34  50F5               	movf	tablat,w,c
  9862  003D36  6E0C               	movwf	(??_atoi+2)^0,c
  9863  003D38  6A0D               	clrf	(??_atoi+3)^0,c
  9864  003D3A  500A               	movf	??_atoi^0,w,c
  9865  003D3C  260C               	addwf	(??_atoi+2)^0,f,c
  9866  003D3E  500B               	movf	(??_atoi+1)^0,w,c
  9867  003D40  220D               	addwfc	(??_atoi+3)^0,f,c
  9868  003D42  500D               	movf	(??_atoi+3)^0,w,c
  9869  003D44  E10B               	bnz	u4650
  9870  003D46  0E0A               	movlw	10
  9871  003D48  5C0C               	subwf	(??_atoi+2)^0,w,c
  9872  003D4A  A0D8               	btfss	status,0,c
  9873  003D4C  EFAA  F01E         	goto	u4651
  9874  003D50  EFAE  F01E         	goto	u4650
  9875  003D54                     u4651:
  9876  003D54  FFFF               	dw	65535	; assembler added errata NOP
  9877  003D56  0E01               	movlw	1
  9878  003D58  EFB0  F01E         	goto	u4660
  9879  003D5C                     u4650:
  9880  003D5C  FFFF               	dw	65535	; assembler added errata NOP
  9881  003D5E  0E00               	movlw	0
  9882  003D60                     u4660:
  9883  003D60  FFFF               	dw	65535	; assembler added errata NOP
  9884  003D62  6E12               	movwf	_atoi$1808^0,c
  9885  003D64  6A13               	clrf	(_atoi$1808+1)^0,c
  9886  003D66  5012               	movf	_atoi$1808^0,w,c
  9887  003D68  1013               	iorwf	(_atoi$1808+1)^0,w,c
  9888  003D6A  A4D8               	btfss	status,2,c
  9889  003D6C  EFBA  F01E         	goto	u4671
  9890  003D70  EFBD  F01E         	goto	u4670
  9891  003D74                     u4671:
  9892  003D74  FFFF               	dw	65535	; assembler added errata NOP
  9893  003D76  EF72  F01E         	goto	l4088
  9894  003D7A                     u4670:
  9895  003D7A  FFFF               	dw	65535	; assembler added errata NOP
  9896  003D7C  500E               	movf	atoi@neg^0,w,c
  9897  003D7E  100F               	iorwf	(atoi@neg+1)^0,w,c
  9898  003D80  A4D8               	btfss	status,2,c
  9899  003D82  EFC5  F01E         	goto	u4681
  9900  003D86  EFC8  F01E         	goto	u4680
  9901  003D8A                     u4681:
  9902  003D8A  FFFF               	dw	65535	; assembler added errata NOP
  9903  003D8C  EFD7  F01E         	goto	l1366
  9904  003D90                     u4680:
  9905  003D90  FFFF               	dw	65535	; assembler added errata NOP
  9906  003D92  C015  F00A         	movff	atoi@n,??_atoi
  9907  003D96  C016  F00B         	movff	atoi@n+1,??_atoi+1
  9908  003D9A  1E0A               	comf	??_atoi^0,f,c
  9909  003D9C  1E0B               	comf	(??_atoi+1)^0,f,c
  9910  003D9E  4A0A               	infsnz	??_atoi^0,f,c
  9911  003DA0  2A0B               	incf	(??_atoi+1)^0,f,c
  9912  003DA2  C00A  F008         	movff	??_atoi,?_atoi
  9913  003DA6  C00B  F009         	movff	??_atoi+1,?_atoi+1
  9914  003DAA  EFDC  F01E         	goto	l1369
  9915  003DAE                     l1366:
  9916  003DAE  FFFF               	dw	65535	; assembler added errata NOP
  9917  003DB0  C015  F008         	movff	atoi@n,?_atoi
  9918  003DB4  C016  F009         	movff	atoi@n+1,?_atoi+1
  9919  003DB8                     l1369:
  9920  003DB8  FFFF               	dw	65535	; assembler added errata NOP
  9921  003DBA  0012               	return		;funcret
  9922  003DBC  FFFF               	dw	65535	; errata NOP
  9923  003DBE                     __end_of_atoi:
  9924                           	callstack 0
  9925                           
  9926 ;; *************** function _isspace *****************
  9927 ;; Defined at:
  9928 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
  9929 ;; Parameters:    Size  Location     Type
  9930 ;;  c               2    0[COMRAM] int 
  9931 ;; Auto vars:     Size  Location     Type
  9932 ;;		None
  9933 ;; Return value:  Size  Location     Type
  9934 ;;                  2    0[COMRAM] int 
  9935 ;; Registers used:
  9936 ;;		wreg, status,2, status,0
  9937 ;; Tracked objects:
  9938 ;;		On entry : 0/0
  9939 ;;		On exit  : 0/0
  9940 ;;		Unchanged: 0/0
  9941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9942 ;;      Params:         2       0       0       0       0       0       0
  9943 ;;      Locals:         1       0       0       0       0       0       0
  9944 ;;      Temps:          4       0       0       0       0       0       0
  9945 ;;      Totals:         7       0       0       0       0       0       0
  9946 ;;Total ram usage:        7 bytes
  9947 ;; Hardware stack levels used:    1
  9948 ;; Hardware stack levels required when called:    1
  9949 ;; This function calls:
  9950 ;;		Nothing
  9951 ;; This function is called by:
  9952 ;;		_atoi
  9953 ;; This function uses a non-reentrant model
  9954 ;;
  9955                           
  9956                           	psect	text30
  9957  006ABA                     __ptext30:
  9958                           	callstack 0
  9959  006ABA                     _isspace:
  9960                           	callstack 24
  9961  006ABA  FFFF               	dw	65535	; assembler added errata NOP
  9962  006ABC  0E01               	movlw	1
  9963  006ABE  6E07               	movwf	_isspace$1834^0,c
  9964  006AC0  0E20               	movlw	32
  9965  006AC2  1801               	xorwf	isspace@c^0,w,c
  9966  006AC4  1002               	iorwf	(isspace@c+1)^0,w,c
  9967  006AC6  B4D8               	btfsc	status,2,c
  9968  006AC8  EF68  F035         	goto	u4001
  9969  006ACC  EF6B  F035         	goto	u4000
  9970  006AD0                     u4001:
  9971  006AD0  FFFF               	dw	65535	; assembler added errata NOP
  9972  006AD2  EF87  F035         	goto	l3792
  9973  006AD6                     u4000:
  9974  006AD6  FFFF               	dw	65535	; assembler added errata NOP
  9975  006AD8  0EF7               	movlw	247
  9976  006ADA  6E03               	movwf	??_isspace^0,c
  9977  006ADC  0EFF               	movlw	255
  9978  006ADE  6E04               	movwf	(??_isspace+1)^0,c
  9979  006AE0  C001  F005         	movff	isspace@c,??_isspace+2
  9980  006AE4  C002  F006         	movff	isspace@c+1,??_isspace+3
  9981  006AE8  5003               	movf	??_isspace^0,w,c
  9982  006AEA  2605               	addwf	(??_isspace+2)^0,f,c
  9983  006AEC  5004               	movf	(??_isspace+1)^0,w,c
  9984  006AEE  2206               	addwfc	(??_isspace+3)^0,f,c
  9985  006AF0  5006               	movf	(??_isspace+3)^0,w,c
  9986  006AF2  E10A               	bnz	u4010
  9987  006AF4  0E05               	movlw	5
  9988  006AF6  5C05               	subwf	(??_isspace+2)^0,w,c
  9989  006AF8  A0D8               	btfss	status,0,c
  9990  006AFA  EF81  F035         	goto	u4011
  9991  006AFE  EF84  F035         	goto	u4010
  9992  006B02                     u4011:
  9993  006B02  FFFF               	dw	65535	; assembler added errata NOP
  9994  006B04  EF87  F035         	goto	l3792
  9995  006B08                     u4010:
  9996  006B08  FFFF               	dw	65535	; assembler added errata NOP
  9997  006B0A  0E00               	movlw	0
  9998  006B0C  6E07               	movwf	_isspace$1834^0,c
  9999  006B0E                     l3792:
 10000  006B0E  FFFF               	dw	65535	; assembler added errata NOP
 10001  006B10  C007  F001         	movff	_isspace$1834,?_isspace
 10002  006B14  6A02               	clrf	(?_isspace+1)^0,c
 10003  006B16  0012               	return		;funcret
 10004  006B18  FFFF               	dw	65535	; errata NOP
 10005  006B1A                     __end_of_isspace:
 10006                           	callstack 0
 10007                           
 10008 ;; *************** function _isdigit *****************
 10009 ;; Defined at:
 10010 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 10011 ;; Parameters:    Size  Location     Type
 10012 ;;  c               2    0[COMRAM] int 
 10013 ;; Auto vars:     Size  Location     Type
 10014 ;;		None
 10015 ;; Return value:  Size  Location     Type
 10016 ;;                  2    0[COMRAM] int 
 10017 ;; Registers used:
 10018 ;;		wreg, status,2, status,0
 10019 ;; Tracked objects:
 10020 ;;		On entry : 0/0
 10021 ;;		On exit  : 0/0
 10022 ;;		Unchanged: 0/0
 10023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10024 ;;      Params:         2       0       0       0       0       0       0
 10025 ;;      Locals:         0       0       0       0       0       0       0
 10026 ;;      Temps:          4       0       0       0       0       0       0
 10027 ;;      Totals:         6       0       0       0       0       0       0
 10028 ;;Total ram usage:        6 bytes
 10029 ;; Hardware stack levels used:    1
 10030 ;; Hardware stack levels required when called:    1
 10031 ;; This function calls:
 10032 ;;		Nothing
 10033 ;; This function is called by:
 10034 ;;		_vfpfcnvrt
 10035 ;;		_atoi
 10036 ;; This function uses a non-reentrant model
 10037 ;;
 10038                           
 10039                           	psect	text31
 10040  00686C                     __ptext31:
 10041                           	callstack 0
 10042  00686C                     _isdigit:
 10043                           	callstack 25
 10044  00686C  FFFF               	dw	65535	; assembler added errata NOP
 10045  00686E  0ED0               	movlw	208
 10046  006870  6E03               	movwf	??_isdigit^0,c
 10047  006872  0EFF               	movlw	255
 10048  006874  6E04               	movwf	(??_isdigit+1)^0,c
 10049  006876  C001  F005         	movff	isdigit@c,??_isdigit+2
 10050  00687A  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 10051  00687E  5003               	movf	??_isdigit^0,w,c
 10052  006880  2605               	addwf	(??_isdigit+2)^0,f,c
 10053  006882  5004               	movf	(??_isdigit+1)^0,w,c
 10054  006884  2206               	addwfc	(??_isdigit+3)^0,f,c
 10055  006886  5006               	movf	(??_isdigit+3)^0,w,c
 10056  006888  E10B               	bnz	u3980
 10057  00688A  0E0A               	movlw	10
 10058  00688C  5C05               	subwf	(??_isdigit+2)^0,w,c
 10059  00688E  A0D8               	btfss	status,0,c
 10060  006890  EF4C  F034         	goto	u3981
 10061  006894  EF50  F034         	goto	u3980
 10062  006898                     u3981:
 10063  006898  FFFF               	dw	65535	; assembler added errata NOP
 10064  00689A  0E01               	movlw	1
 10065  00689C  EF52  F034         	goto	u3990
 10066  0068A0                     u3980:
 10067  0068A0  FFFF               	dw	65535	; assembler added errata NOP
 10068  0068A2  0E00               	movlw	0
 10069  0068A4                     u3990:
 10070  0068A4  FFFF               	dw	65535	; assembler added errata NOP
 10071  0068A6  6E01               	movwf	?_isdigit^0,c
 10072  0068A8  6A02               	clrf	(?_isdigit+1)^0,c
 10073  0068AA  0012               	return		;funcret
 10074  0068AC  FFFF               	dw	65535	; errata NOP
 10075  0068AE                     __end_of_isdigit:
 10076                           	callstack 0
 10077                           
 10078 ;; *************** function ___wmul *****************
 10079 ;; Defined at:
 10080 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 10081 ;; Parameters:    Size  Location     Type
 10082 ;;  multiplier      2    0[COMRAM] unsigned int 
 10083 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10084 ;; Auto vars:     Size  Location     Type
 10085 ;;  product         2    4[COMRAM] unsigned int 
 10086 ;; Return value:  Size  Location     Type
 10087 ;;                  2    0[COMRAM] unsigned int 
 10088 ;; Registers used:
 10089 ;;		wreg, status,2, status,0, prodl, prodh
 10090 ;; Tracked objects:
 10091 ;;		On entry : 0/0
 10092 ;;		On exit  : 0/0
 10093 ;;		Unchanged: 0/0
 10094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10095 ;;      Params:         4       0       0       0       0       0       0
 10096 ;;      Locals:         2       0       0       0       0       0       0
 10097 ;;      Temps:          0       0       0       0       0       0       0
 10098 ;;      Totals:         6       0       0       0       0       0       0
 10099 ;;Total ram usage:        6 bytes
 10100 ;; Hardware stack levels used:    1
 10101 ;; Hardware stack levels required when called:    1
 10102 ;; This function calls:
 10103 ;;		Nothing
 10104 ;; This function is called by:
 10105 ;;		_main
 10106 ;;		_atoi
 10107 ;; This function uses a non-reentrant model
 10108 ;;
 10109                           
 10110                           	psect	text32
 10111  0066EC                     __ptext32:
 10112                           	callstack 0
 10113  0066EC                     ___wmul:
 10114                           	callstack 0
 10115  0066EC  FFFF               	dw	65535	; assembler added errata NOP
 10116  0066EE  5001               	movf	___wmul@multiplier^0,w,c
 10117  0066F0  0203               	mulwf	___wmul@multiplicand^0,c
 10118  0066F2  CFF3 F005          	movff	prodl,___wmul@product
 10119  0066F6  CFF4 F006          	movff	prodh,___wmul@product+1
 10120  0066FA  5001               	movf	___wmul@multiplier^0,w,c
 10121  0066FC  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10122  0066FE  50F3               	movf	243,w,c
 10123  006700  2606               	addwf	(___wmul@product+1)^0,f,c
 10124  006702  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10125  006704  0203               	mulwf	___wmul@multiplicand^0,c
 10126  006706  50F3               	movf	243,w,c
 10127  006708  2606               	addwf	(___wmul@product+1)^0,f,c
 10128  00670A  C005  F001         	movff	___wmul@product,?___wmul
 10129  00670E  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10130  006712  0012               	return		;funcret
 10131  006714  FFFF               	dw	65535	; errata NOP
 10132  006716                     __end_of___wmul:
 10133                           	callstack 0
 10134                           
 10135 ;; *************** function _serial_tx_char *****************
 10136 ;; Defined at:
 10137 ;;		line 39 in file "serial_rs232.c"
 10138 ;; Parameters:    Size  Location     Type
 10139 ;;  val             1    wreg     unsigned char 
 10140 ;; Auto vars:     Size  Location     Type
 10141 ;;  val             1    0[COMRAM] unsigned char 
 10142 ;; Return value:  Size  Location     Type
 10143 ;;                  1    wreg      void 
 10144 ;; Registers used:
 10145 ;;		wreg
 10146 ;; Tracked objects:
 10147 ;;		On entry : 0/0
 10148 ;;		On exit  : 0/0
 10149 ;;		Unchanged: 0/0
 10150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10151 ;;      Params:         0       0       0       0       0       0       0
 10152 ;;      Locals:         1       0       0       0       0       0       0
 10153 ;;      Temps:          0       0       0       0       0       0       0
 10154 ;;      Totals:         1       0       0       0       0       0       0
 10155 ;;Total ram usage:        1 bytes
 10156 ;; Hardware stack levels used:    1
 10157 ;; Hardware stack levels required when called:    1
 10158 ;; This function calls:
 10159 ;;		Nothing
 10160 ;; This function is called by:
 10161 ;;		_main
 10162 ;;		_serial_tx_string
 10163 ;; This function uses a non-reentrant model
 10164 ;;
 10165                           
 10166                           	psect	text33
 10167  0065C2                     __ptext33:
 10168                           	callstack 0
 10169  0065C2                     _serial_tx_char:
 10170                           	callstack 0
 10171  0065C2  FFFF               	dw	65535	; assembler added errata NOP
 10172                           
 10173                           ;incstack = 0
 10174                           ;serial_tx_char@val stored from wreg
 10175  0065C4  6E01               	movwf	serial_tx_char@val^0,c
 10176  0065C6                     
 10177                           ;serial_rs232.c: 40:     TXREG = val;
 10178  0065C6  C001  FFAD         	movff	serial_tx_char@val,4013	;volatile
 10179  0065CA                     l24:
 10180  0065CA  FFFF               	dw	65535	; assembler added errata NOP
 10181  0065CC  A2AC               	btfss	172,1,c	;volatile
 10182  0065CE  EFEB  F032         	goto	u6531
 10183  0065D2  EFEE  F032         	goto	u6530
 10184  0065D6                     u6531:
 10185  0065D6  FFFF               	dw	65535	; assembler added errata NOP
 10186  0065D8  EFE5  F032         	goto	l24
 10187  0065DC                     u6530:
 10188  0065DC  FFFF               	dw	65535	; assembler added errata NOP
 10189  0065DE  0012               	return		;funcret
 10190  0065E0  FFFF               	dw	65535	; errata NOP
 10191  0065E2                     __end_of_serial_tx_char:
 10192                           	callstack 0
 10193                           
 10194 ;; *************** function _reach_goal *****************
 10195 ;; Defined at:
 10196 ;;		line 29 in file "stepper_motor.c"
 10197 ;; Parameters:    Size  Location     Type
 10198 ;;  stepper_moto    2    6[COMRAM] PTR struct .
 10199 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
 10200 ;;  goal_to_reac    2    8[COMRAM] int 
 10201 ;; Auto vars:     Size  Location     Type
 10202 ;;		None
 10203 ;; Return value:  Size  Location     Type
 10204 ;;                  2    6[COMRAM] int 
 10205 ;; Registers used:
 10206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10207 ;; Tracked objects:
 10208 ;;		On entry : 0/0
 10209 ;;		On exit  : 0/0
 10210 ;;		Unchanged: 0/0
 10211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10212 ;;      Params:         4       0       0       0       0       0       0
 10213 ;;      Locals:         0       0       0       0       0       0       0
 10214 ;;      Temps:          3       0       0       0       0       0       0
 10215 ;;      Totals:         7       0       0       0       0       0       0
 10216 ;;Total ram usage:        7 bytes
 10217 ;; Hardware stack levels used:    1
 10218 ;; Hardware stack levels required when called:    2
 10219 ;; This function calls:
 10220 ;;		_turn_on_current_coil
 10221 ;;		_update_current_coil
 10222 ;; This function is called by:
 10223 ;;		_main
 10224 ;; This function uses a non-reentrant model
 10225 ;;
 10226                           
 10227                           	psect	text34
 10228  006D38                     __ptext34:
 10229                           	callstack 0
 10230  006D38                     _reach_goal:
 10231                           	callstack 0
 10232  006D38  FFFF               	dw	65535	; assembler added errata NOP
 10233  006D3A                     
 10234                           ;stepper_motor.c: 30:     if(stepper_motor -> step_counter >= goal_to_reach){
 10235  006D3A  EE20 F002          	lfsr	2,2
 10236  006D3E  5007               	movf	reach_goal@stepper_motor^0,w,c
 10237  006D40  26D9               	addwf	fsr2l,f,c
 10238  006D42  5008               	movf	(reach_goal@stepper_motor+1)^0,w,c
 10239  006D44  22DA               	addwfc	fsr2h,f,c
 10240  006D46  5009               	movf	reach_goal@goal_to_reach^0,w,c
 10241  006D48  5CDE               	subwf	postinc2,w,c
 10242  006D4A  50DE               	movf	postinc2,w,c
 10243  006D4C  0A80               	xorlw	128
 10244  006D4E  6E0D               	movwf	(??_reach_goal+2)^0,c
 10245  006D50  500A               	movf	(reach_goal@goal_to_reach+1)^0,w,c
 10246  006D52  0A80               	xorlw	128
 10247  006D54  580D               	subwfb	(??_reach_goal+2)^0,w,c
 10248  006D56  A0D8               	btfss	status,0,c
 10249  006D58  EFB0  F036         	goto	u6701
 10250  006D5C  EFB3  F036         	goto	u6700
 10251  006D60                     u6701:
 10252  006D60  FFFF               	dw	65535	; assembler added errata NOP
 10253  006D62  EFC4  F036         	goto	l5462
 10254  006D66                     u6700:
 10255  006D66  FFFF               	dw	65535	; assembler added errata NOP
 10256  006D68                     
 10257                           ;stepper_motor.c: 31:         stepper_motor -> step_counter = 0;
 10258  006D68  EE20 F002          	lfsr	2,2
 10259  006D6C  5007               	movf	reach_goal@stepper_motor^0,w,c
 10260  006D6E  26D9               	addwf	fsr2l,f,c
 10261  006D70  5008               	movf	(reach_goal@stepper_motor+1)^0,w,c
 10262  006D72  22DA               	addwfc	fsr2h,f,c
 10263  006D74  0E00               	movlw	0
 10264  006D76  6EDE               	movwf	postinc2,c
 10265  006D78  0E00               	movlw	0
 10266  006D7A  6EDD               	movwf	postdec2,c
 10267  006D7C                     
 10268                           ;stepper_motor.c: 32:         return 1;
 10269  006D7C  0E00               	movlw	0
 10270  006D7E  6E08               	movwf	(?_reach_goal+1)^0,c
 10271  006D80  0E01               	movlw	1
 10272  006D82  6E07               	movwf	?_reach_goal^0,c
 10273  006D84  EFD5  F036         	goto	l330
 10274  006D88                     l5462:
 10275  006D88  FFFF               	dw	65535	; assembler added errata NOP
 10276                           
 10277                           ;stepper_motor.c: 34:         turn_on_current_coil(stepper_motor);
 10278  006D8A  C007  F001         	movff	reach_goal@stepper_motor,turn_on_current_coil@stepper_motor
 10279  006D8E  C008  F002         	movff	reach_goal@stepper_motor+1,turn_on_current_coil@stepper_motor+1
 10280  006D92  ECD6  F033         	call	_turn_on_current_coil	;wreg free
 10281                           
 10282                           ;stepper_motor.c: 35:         update_current_coil(stepper_motor);
 10283  006D96  C007  F001         	movff	reach_goal@stepper_motor,update_current_coil@stepper_motor
 10284  006D9A  C008  F002         	movff	reach_goal@stepper_motor+1,update_current_coil@stepper_motor+1
 10285  006D9E  EC7C  F038         	call	_update_current_coil	;wreg free
 10286  006DA2                     
 10287                           ;stepper_motor.c: 36:         return 0;
 10288  006DA2  0E00               	movlw	0
 10289  006DA4  6E08               	movwf	(?_reach_goal+1)^0,c
 10290  006DA6  0E00               	movlw	0
 10291  006DA8  6E07               	movwf	?_reach_goal^0,c
 10292  006DAA                     l330:
 10293  006DAA  FFFF               	dw	65535	; assembler added errata NOP
 10294  006DAC  0012               	return		;funcret
 10295  006DAE  FFFF               	dw	65535	; errata NOP
 10296  006DB0                     __end_of_reach_goal:
 10297                           	callstack 0
 10298                           
 10299 ;; *************** function _update_current_coil *****************
 10300 ;; Defined at:
 10301 ;;		line 18 in file "stepper_motor.c"
 10302 ;; Parameters:    Size  Location     Type
 10303 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 10304 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
 10305 ;; Auto vars:     Size  Location     Type
 10306 ;;		None
 10307 ;; Return value:  Size  Location     Type
 10308 ;;                  1    wreg      void 
 10309 ;; Registers used:
 10310 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10311 ;; Tracked objects:
 10312 ;;		On entry : 0/0
 10313 ;;		On exit  : 0/0
 10314 ;;		Unchanged: 0/0
 10315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10316 ;;      Params:         2       0       0       0       0       0       0
 10317 ;;      Locals:         0       0       0       0       0       0       0
 10318 ;;      Temps:          4       0       0       0       0       0       0
 10319 ;;      Totals:         6       0       0       0       0       0       0
 10320 ;;Total ram usage:        6 bytes
 10321 ;; Hardware stack levels used:    1
 10322 ;; Hardware stack levels required when called:    1
 10323 ;; This function calls:
 10324 ;;		Nothing
 10325 ;; This function is called by:
 10326 ;;		_reach_goal
 10327 ;; This function uses a non-reentrant model
 10328 ;;
 10329                           
 10330                           	psect	text35
 10331  0070F8                     __ptext35:
 10332                           	callstack 0
 10333  0070F8                     _update_current_coil:
 10334                           	callstack 0
 10335  0070F8  FFFF               	dw	65535	; assembler added errata NOP
 10336  0070FA                     
 10337                           ;stepper_motor.c: 19:     stepper_motor -> current_coil = stepper_motor -> current_coil 
      +                          + stepper_motor -> direction;
 10338  0070FA  EE20 F004          	lfsr	2,4
 10339  0070FE  5001               	movf	update_current_coil@stepper_motor^0,w,c
 10340  007100  26D9               	addwf	fsr2l,f,c
 10341  007102  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
 10342  007104  22DA               	addwfc	fsr2h,f,c
 10343  007106  CFDE F003          	movff	postinc2,??_update_current_coil
 10344  00710A  CFDD F004          	movff	postdec2,??_update_current_coil+1
 10345  00710E  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10346  007112  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10347  007116  CFDE F005          	movff	postinc2,??_update_current_coil+2
 10348  00711A  CFDD F006          	movff	postdec2,??_update_current_coil+3
 10349  00711E  5003               	movf	??_update_current_coil^0,w,c
 10350  007120  2605               	addwf	(??_update_current_coil+2)^0,f,c
 10351  007122  5004               	movf	(??_update_current_coil+1)^0,w,c
 10352  007124  2206               	addwfc	(??_update_current_coil+3)^0,f,c
 10353  007126  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10354  00712A  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10355  00712E  C005  FFDE         	movff	??_update_current_coil+2,postinc2
 10356  007132  C006  FFDD         	movff	??_update_current_coil+3,postdec2
 10357                           
 10358                           ;stepper_motor.c: 20:     stepper_motor -> step_counter = stepper_motor -> step_counter 
      +                          + 1;
 10359  007136  EE20 F002          	lfsr	2,2
 10360  00713A  5001               	movf	update_current_coil@stepper_motor^0,w,c
 10361  00713C  26D9               	addwf	fsr2l,f,c
 10362  00713E  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
 10363  007140  22DA               	addwfc	fsr2h,f,c
 10364  007142  CFDE F003          	movff	postinc2,??_update_current_coil
 10365  007146  CFDD F004          	movff	postdec2,??_update_current_coil+1
 10366  00714A  0E01               	movlw	1
 10367  00714C  2603               	addwf	??_update_current_coil^0,f,c
 10368  00714E  0E00               	movlw	0
 10369  007150  2204               	addwfc	(??_update_current_coil+1)^0,f,c
 10370  007152  EE20 F002          	lfsr	2,2
 10371  007156  5001               	movf	update_current_coil@stepper_motor^0,w,c
 10372  007158  26D9               	addwf	fsr2l,f,c
 10373  00715A  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
 10374  00715C  22DA               	addwfc	fsr2h,f,c
 10375  00715E  C003  FFDE         	movff	??_update_current_coil,postinc2
 10376  007162  C004  FFDD         	movff	??_update_current_coil+1,postdec2
 10377                           
 10378                           ;stepper_motor.c: 21:     if (stepper_motor -> current_coil == -1) {
 10379  007166  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10380  00716A  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10381  00716E  28DE               	incf	postinc2,w,c
 10382  007170  E106               	bnz	u6401
 10383  007172  28DE               	incf	postinc2,w,c
 10384  007174  A4D8               	btfss	status,2,c
 10385  007176  EFBF  F038         	goto	u6401
 10386  00717A  EFC2  F038         	goto	u6400
 10387  00717E                     u6401:
 10388  00717E  FFFF               	dw	65535	; assembler added errata NOP
 10389  007180  EFCD  F038         	goto	l5158
 10390  007184                     u6400:
 10391  007184  FFFF               	dw	65535	; assembler added errata NOP
 10392  007186                     
 10393                           ;stepper_motor.c: 22:         stepper_motor -> current_coil = 3;
 10394  007186  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10395  00718A  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10396  00718E  0E03               	movlw	3
 10397  007190  6EDE               	movwf	postinc2,c
 10398  007192  0E00               	movlw	0
 10399  007194  6EDD               	movwf	postdec2,c
 10400                           
 10401                           ;stepper_motor.c: 23:     } else if(stepper_motor -> current_coil == 4) {
 10402  007196  EFE6  F038         	goto	l326
 10403  00719A                     l5158:
 10404  00719A  FFFF               	dw	65535	; assembler added errata NOP
 10405  00719C  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10406  0071A0  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10407  0071A4  0E04               	movlw	4
 10408  0071A6  18DE               	xorwf	postinc2,w,c
 10409  0071A8  10DE               	iorwf	postinc2,w,c
 10410  0071AA  A4D8               	btfss	status,2,c
 10411  0071AC  EFDA  F038         	goto	u6411
 10412  0071B0  EFDD  F038         	goto	u6410
 10413  0071B4                     u6411:
 10414  0071B4  FFFF               	dw	65535	; assembler added errata NOP
 10415  0071B6  EFE6  F038         	goto	l326
 10416  0071BA                     u6410:
 10417  0071BA  FFFF               	dw	65535	; assembler added errata NOP
 10418  0071BC                     
 10419                           ;stepper_motor.c: 24:         stepper_motor -> current_coil = 0;
 10420  0071BC  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10421  0071C0  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10422  0071C4  0E00               	movlw	0
 10423  0071C6  6EDE               	movwf	postinc2,c
 10424  0071C8  0E00               	movlw	0
 10425  0071CA  6EDD               	movwf	postdec2,c
 10426  0071CC                     l326:
 10427  0071CC  FFFF               	dw	65535	; assembler added errata NOP
 10428  0071CE  0012               	return		;funcret
 10429  0071D0  FFFF               	dw	65535	; errata NOP
 10430  0071D2                     __end_of_update_current_coil:
 10431                           	callstack 0
 10432                           
 10433 ;; *************** function _turn_on_current_coil *****************
 10434 ;; Defined at:
 10435 ;;		line 13 in file "stepper_motor.c"
 10436 ;; Parameters:    Size  Location     Type
 10437 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 10438 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
 10439 ;; Auto vars:     Size  Location     Type
 10440 ;;		None
 10441 ;; Return value:  Size  Location     Type
 10442 ;;                  1    wreg      void 
 10443 ;; Registers used:
 10444 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10445 ;; Tracked objects:
 10446 ;;		On entry : 0/0
 10447 ;;		On exit  : 0/0
 10448 ;;		Unchanged: 0/0
 10449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10450 ;;      Params:         2       0       0       0       0       0       0
 10451 ;;      Locals:         0       0       0       0       0       0       0
 10452 ;;      Temps:          4       0       0       0       0       0       0
 10453 ;;      Totals:         6       0       0       0       0       0       0
 10454 ;;Total ram usage:        6 bytes
 10455 ;; Hardware stack levels used:    1
 10456 ;; Hardware stack levels required when called:    1
 10457 ;; This function calls:
 10458 ;;		Nothing
 10459 ;; This function is called by:
 10460 ;;		_reach_goal
 10461 ;; This function uses a non-reentrant model
 10462 ;;
 10463                           
 10464                           	psect	text36
 10465  0067AC                     __ptext36:
 10466                           	callstack 0
 10467  0067AC                     _turn_on_current_coil:
 10468                           	callstack 0
 10469  0067AC  FFFF               	dw	65535	; assembler added errata NOP
 10470  0067AE                     
 10471                           ;stepper_motor.c: 14:     LATB = stepper_motor -> hex_coil_register_values[stepper_motor
      +                           -> current_coil];
 10472  0067AE  C001  FFD9         	movff	turn_on_current_coil@stepper_motor,fsr2l
 10473  0067B2  C002  FFDA         	movff	turn_on_current_coil@stepper_motor+1,fsr2h
 10474  0067B6  CFDE F003          	movff	postinc2,??_turn_on_current_coil
 10475  0067BA  CFDD F004          	movff	postdec2,??_turn_on_current_coil+1
 10476  0067BE  90D8               	bcf	status,0,c
 10477  0067C0  3603               	rlcf	??_turn_on_current_coil^0,f,c
 10478  0067C2  3604               	rlcf	(??_turn_on_current_coil+1)^0,f,c
 10479  0067C4  C001  F005         	movff	turn_on_current_coil@stepper_motor,??_turn_on_current_coil+2
 10480  0067C8  C002  F006         	movff	turn_on_current_coil@stepper_motor+1,??_turn_on_current_coil+3
 10481  0067CC  5003               	movf	??_turn_on_current_coil^0,w,c
 10482  0067CE  2605               	addwf	(??_turn_on_current_coil+2)^0,f,c
 10483  0067D0  5004               	movf	(??_turn_on_current_coil+1)^0,w,c
 10484  0067D2  2206               	addwfc	(??_turn_on_current_coil+3)^0,f,c
 10485  0067D4  0E06               	movlw	6
 10486  0067D6  2405               	addwf	(??_turn_on_current_coil+2)^0,w,c
 10487  0067D8  6ED9               	movwf	fsr2l,c
 10488  0067DA  0E00               	movlw	0
 10489  0067DC  2006               	addwfc	(??_turn_on_current_coil+3)^0,w,c
 10490  0067DE  6EDA               	movwf	fsr2h,c
 10491  0067E0  50DF               	movf	indf2,w,c
 10492  0067E2  6E8A               	movwf	138,c	;volatile
 10493  0067E4  0012               	return		;funcret
 10494  0067E6  FFFF               	dw	65535	; errata NOP
 10495  0067E8                     __end_of_turn_on_current_coil:
 10496                           	callstack 0
 10497                           
 10498 ;; *************** function _lcd_str *****************
 10499 ;; Defined at:
 10500 ;;		line 62 in file "lcd.c"
 10501 ;; Parameters:    Size  Location     Type
 10502 ;;  str             2    2[COMRAM] PTR const unsigned char 
 10503 ;;		 -> main@greet_str(160), STR_9(22), 
 10504 ;; Auto vars:     Size  Location     Type
 10505 ;;  i               1    6[COMRAM] unsigned char 
 10506 ;; Return value:  Size  Location     Type
 10507 ;;                  1    wreg      void 
 10508 ;; Registers used:
 10509 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10510 ;; Tracked objects:
 10511 ;;		On entry : 0/0
 10512 ;;		On exit  : 0/0
 10513 ;;		Unchanged: 0/0
 10514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10515 ;;      Params:         2       0       0       0       0       0       0
 10516 ;;      Locals:         1       0       0       0       0       0       0
 10517 ;;      Temps:          2       0       0       0       0       0       0
 10518 ;;      Totals:         5       0       0       0       0       0       0
 10519 ;;Total ram usage:        5 bytes
 10520 ;; Hardware stack levels used:    1
 10521 ;; Hardware stack levels required when called:    3
 10522 ;; This function calls:
 10523 ;;		_lcd_dat
 10524 ;; This function is called by:
 10525 ;;		_main
 10526 ;; This function uses a non-reentrant model
 10527 ;;
 10528                           
 10529                           	psect	text37
 10530  006E2E                     __ptext37:
 10531                           	callstack 0
 10532  006E2E                     _lcd_str:
 10533                           	callstack 0
 10534  006E2E  FFFF               	dw	65535	; assembler added errata NOP
 10535  006E30                     
 10536                           ;lcd.c: 62: void lcd_str(const char* str);lcd.c: 63: {;lcd.c: 64:     unsigned char i=0;
 10537  006E30  0E00               	movlw	0
 10538  006E32  6E07               	movwf	lcd_str@i^0,c
 10539                           
 10540                           ;lcd.c: 66:     while(str[i] != 0 )
 10541  006E34  EF37  F037         	goto	l5362
 10542  006E38                     l5358:
 10543  006E38  FFFF               	dw	65535	; assembler added errata NOP
 10544                           
 10545                           ;lcd.c: 67:     {;lcd.c: 68:       lcd_dat(str[i]);
 10546  006E3A  5007               	movf	lcd_str@i^0,w,c
 10547  006E3C  2403               	addwf	lcd_str@str^0,w,c
 10548  006E3E  6E05               	movwf	??_lcd_str^0,c
 10549  006E40  0E00               	movlw	0
 10550  006E42  2004               	addwfc	(lcd_str@str+1)^0,w,c
 10551  006E44  6E06               	movwf	(??_lcd_str+1)^0,c
 10552  006E46  C005  FFF6         	movff	??_lcd_str,tblptrl
 10553  006E4A  C006  FFF7         	movff	??_lcd_str+1,tblptrh
 10554  006E4E  6AF8               	clrf	tblptru,c
 10555  006E50  0E05               	movlw	(high __ramtop+-1)
 10556  006E52  64F7               	cpfsgt	tblptrh,c
 10557  006E54  D004               	bra	u6557
 10558  006E56  0008               	tblrd		*
 10559  006E58  FFFF               	dw	65535	; errata NOP
 10560  006E5A  50F5               	movf	tablat,w,c
 10561  006E5C  D005               	bra	u6550
 10562  006E5E                     u6557:
 10563  006E5E  CFF6 FFE1          	movff	tblptrl,fsr1l
 10564  006E62  CFF7 FFE2          	movff	tblptrh,fsr1h
 10565  006E66  50E7               	movf	indf1,w,c
 10566  006E68                     u6550:
 10567  006E68  EC61  F033         	call	_lcd_dat
 10568  006E6C                     
 10569                           ;lcd.c: 69:       i++;
 10570  006E6C  2A07               	incf	lcd_str@i^0,f,c
 10571  006E6E                     l5362:
 10572  006E6E  FFFF               	dw	65535	; assembler added errata NOP
 10573                           
 10574                           ;lcd.c: 66:     while(str[i] != 0 )
 10575  006E70  5007               	movf	lcd_str@i^0,w,c
 10576  006E72  2403               	addwf	lcd_str@str^0,w,c
 10577  006E74  6E05               	movwf	??_lcd_str^0,c
 10578  006E76  0E00               	movlw	0
 10579  006E78  2004               	addwfc	(lcd_str@str+1)^0,w,c
 10580  006E7A  6E06               	movwf	(??_lcd_str+1)^0,c
 10581  006E7C  C005  FFF6         	movff	??_lcd_str,tblptrl
 10582  006E80  C006  FFF7         	movff	??_lcd_str+1,tblptrh
 10583  006E84  6AF8               	clrf	tblptru,c
 10584  006E86  0E05               	movlw	(high __ramtop+-1)
 10585  006E88  64F7               	cpfsgt	tblptrh,c
 10586  006E8A  D004               	bra	u6567
 10587  006E8C  0008               	tblrd		*
 10588  006E8E  FFFF               	dw	65535	; errata NOP
 10589  006E90  50F5               	movf	tablat,w,c
 10590  006E92  D005               	bra	u6560
 10591  006E94                     u6567:
 10592  006E94  CFF6 FFE1          	movff	tblptrl,fsr1l
 10593  006E98  CFF7 FFE2          	movff	tblptrh,fsr1h
 10594  006E9C  50E7               	movf	indf1,w,c
 10595  006E9E                     u6560:
 10596  006E9E  0900               	iorlw	0
 10597  006EA0  A4D8               	btfss	status,2,c
 10598  006EA2  EF55  F037         	goto	u6571
 10599  006EA6  EF58  F037         	goto	u6570
 10600  006EAA                     u6571:
 10601  006EAA  FFFF               	dw	65535	; assembler added errata NOP
 10602  006EAC  EF1C  F037         	goto	l5358
 10603  006EB0                     u6570:
 10604  006EB0  FFFF               	dw	65535	; assembler added errata NOP
 10605  006EB2  0012               	return		;funcret
 10606  006EB4  FFFF               	dw	65535	; errata NOP
 10607  006EB6                     __end_of_lcd_str:
 10608                           	callstack 0
 10609                           
 10610 ;; *************** function _lcd_dat *****************
 10611 ;; Defined at:
 10612 ;;		line 21 in file "lcd.c"
 10613 ;; Parameters:    Size  Location     Type
 10614 ;;  val             1    wreg     unsigned char 
 10615 ;; Auto vars:     Size  Location     Type
 10616 ;;  val             1    1[COMRAM] unsigned char 
 10617 ;; Return value:  Size  Location     Type
 10618 ;;                  1    wreg      void 
 10619 ;; Registers used:
 10620 ;;		wreg, status,2, cstack
 10621 ;; Tracked objects:
 10622 ;;		On entry : 0/0
 10623 ;;		On exit  : 0/0
 10624 ;;		Unchanged: 0/0
 10625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10626 ;;      Params:         0       0       0       0       0       0       0
 10627 ;;      Locals:         1       0       0       0       0       0       0
 10628 ;;      Temps:          0       0       0       0       0       0       0
 10629 ;;      Totals:         1       0       0       0       0       0       0
 10630 ;;Total ram usage:        1 bytes
 10631 ;; Hardware stack levels used:    1
 10632 ;; Hardware stack levels required when called:    2
 10633 ;; This function calls:
 10634 ;;		_lcd_wr
 10635 ;; This function is called by:
 10636 ;;		_lcd_str
 10637 ;;		_state_translator_fpga_to_micro
 10638 ;; This function uses a non-reentrant model
 10639 ;;
 10640                           
 10641                           	psect	text38
 10642  0066C2                     __ptext38:
 10643                           	callstack 0
 10644  0066C2                     _lcd_dat:
 10645                           	callstack 0
 10646  0066C2  FFFF               	dw	65535	; assembler added errata NOP
 10647                           
 10648                           ;incstack = 0
 10649                           ;lcd_dat@val stored from wreg
 10650  0066C4  6E02               	movwf	lcd_dat@val^0,c
 10651  0066C6                     
 10652                           ;lcd.c: 21: void lcd_dat(unsigned char val);lcd.c: 22: {;lcd.c: 23:  PORTEbits.RE1=1;
 10653  0066C6  8284               	bsf	132,1,c	;volatile
 10654  0066C8                     
 10655                           ;lcd.c: 24:     lcd_wr(val);
 10656  0066C8  5002               	movf	lcd_dat@val^0,w,c
 10657  0066CA  ECC9  F032         	call	_lcd_wr
 10658  0066CE                     
 10659                           ;lcd.c: 25:     PORTEbits.RE2=1;
 10660  0066CE  8484               	bsf	132,2,c	;volatile
 10661  0066D0                     
 10662                           ;lcd.c: 26:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10663  0066D0  0EC8               	movlw	200
 10664  0066D2                     u7167:
 10665  0066D2  FFFF               	dw	65535	; errata NOP
 10666  0066D4  F000               	nop	
 10667  0066D6  2EE8               	decfsz	wreg,f,c
 10668  0066D8  D7FC               	bra	u7167
 10669  0066DA                     
 10670                           ;lcd.c: 27:     PORTEbits.RE1=0;
 10671  0066DA  9284               	bcf	132,1,c	;volatile
 10672  0066DC                     
 10673                           ;lcd.c: 28:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10674  0066DC  0EC8               	movlw	200
 10675  0066DE                     u7177:
 10676  0066DE  FFFF               	dw	65535	; errata NOP
 10677  0066E0  F000               	nop	
 10678  0066E2  2EE8               	decfsz	wreg,f,c
 10679  0066E4  D7FC               	bra	u7177
 10680  0066E6                     
 10681                           ;lcd.c: 29:  PORTEbits.RE1=1;
 10682  0066E6  8284               	bsf	132,1,c	;volatile
 10683  0066E8  0012               	return		;funcret
 10684  0066EA  FFFF               	dw	65535	; errata NOP
 10685  0066EC                     __end_of_lcd_dat:
 10686                           	callstack 0
 10687                           
 10688 ;; *************** function _lcd_init *****************
 10689 ;; Defined at:
 10690 ;;		line 32 in file "lcd.c"
 10691 ;; Parameters:    Size  Location     Type
 10692 ;;		None
 10693 ;; Auto vars:     Size  Location     Type
 10694 ;;		None
 10695 ;; Return value:  Size  Location     Type
 10696 ;;                  1    wreg      void 
 10697 ;; Registers used:
 10698 ;;		wreg, status,2, cstack
 10699 ;; Tracked objects:
 10700 ;;		On entry : 0/0
 10701 ;;		On exit  : 0/0
 10702 ;;		Unchanged: 0/0
 10703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10704 ;;      Params:         0       0       0       0       0       0       0
 10705 ;;      Locals:         0       0       0       0       0       0       0
 10706 ;;      Temps:          1       0       0       0       0       0       0
 10707 ;;      Totals:         1       0       0       0       0       0       0
 10708 ;;Total ram usage:        1 bytes
 10709 ;; Hardware stack levels used:    1
 10710 ;; Hardware stack levels required when called:    3
 10711 ;; This function calls:
 10712 ;;		_lcd_cmd
 10713 ;; This function is called by:
 10714 ;;		_main
 10715 ;; This function uses a non-reentrant model
 10716 ;;
 10717                           
 10718                           	psect	text39
 10719  006DB0                     __ptext39:
 10720                           	callstack 0
 10721  006DB0                     _lcd_init:
 10722                           	callstack 0
 10723  006DB0  FFFF               	dw	65535	; assembler added errata NOP
 10724  006DB2  6A83               	clrf	3971,c	;# 
 10725  006DB4  0E00               	movlw	0	;# 
 10726  006DB6  6E95               	movwf	3989,c	;# 
 10727  006DB8  6A84               	clrf	3972,c	;# 
 10728  006DBA  0E00               	movlw	0	;# 
 10729  006DBC  6E96               	movwf	3990,c	;# 
 10730                           
 10731                           ;lcd.c: 45:  PORTEbits.RE1=0;
 10732  006DBE  9284               	bcf	132,1,c	;volatile
 10733                           
 10734                           ;lcd.c: 46:  PORTEbits.RE2=0;
 10735  006DC0  9484               	bcf	132,2,c	;volatile
 10736  006DC2                     
 10737                           ;lcd.c: 47:  _delay((unsigned long)((30)*(4000000/4000.0)));
 10738  006DC2  0E1E               	movlw	30
 10739  006DC4  6E03               	movwf	??_lcd_init^0,c
 10740  006DC6  0E3C               	movlw	60
 10741  006DC8                     u7187:
 10742  006DC8  FFFF               	dw	65535	; errata NOP
 10743  006DCA  2EE8               	decfsz	wreg,f,c
 10744  006DCC  D7FD               	bra	u7187
 10745  006DCE  2E03               	decfsz	??_lcd_init^0,f,c
 10746  006DD0  D7FB               	bra	u7187
 10747  006DD2  D000               	nop2	
 10748  006DD4                     
 10749                           ;lcd.c: 48:  PORTEbits.RE1=1;
 10750  006DD4  8284               	bsf	132,1,c	;volatile
 10751  006DD6                     
 10752                           ;lcd.c: 50:  lcd_cmd(0x38);
 10753  006DD6  0E38               	movlw	56
 10754  006DD8  EC4C  F033         	call	_lcd_cmd
 10755  006DDC                     
 10756                           ;lcd.c: 51:  _delay((unsigned long)((30)*(4000000/4000.0)));
 10757  006DDC  0E1E               	movlw	30
 10758  006DDE  6E03               	movwf	??_lcd_init^0,c
 10759  006DE0  0E3C               	movlw	60
 10760  006DE2                     u7197:
 10761  006DE2  FFFF               	dw	65535	; errata NOP
 10762  006DE4  2EE8               	decfsz	wreg,f,c
 10763  006DE6  D7FD               	bra	u7197
 10764  006DE8  2E03               	decfsz	??_lcd_init^0,f,c
 10765  006DEA  D7FB               	bra	u7197
 10766  006DEC  D000               	nop2	
 10767                           
 10768                           ;lcd.c: 52:  lcd_cmd(0x38);
 10769  006DEE  0E38               	movlw	56
 10770  006DF0  EC4C  F033         	call	_lcd_cmd
 10771  006DF4                     
 10772                           ;lcd.c: 53:     _delay((unsigned long)((30)*(4000000/4000.0)));
 10773  006DF4  0E1E               	movlw	30
 10774  006DF6  6E03               	movwf	??_lcd_init^0,c
 10775  006DF8  0E3C               	movlw	60
 10776  006DFA                     u7207:
 10777  006DFA  FFFF               	dw	65535	; errata NOP
 10778  006DFC  2EE8               	decfsz	wreg,f,c
 10779  006DFE  D7FD               	bra	u7207
 10780  006E00  2E03               	decfsz	??_lcd_init^0,f,c
 10781  006E02  D7FB               	bra	u7207
 10782  006E04  D000               	nop2	
 10783  006E06                     
 10784                           ;lcd.c: 54:  lcd_cmd(0x38);
 10785  006E06  0E38               	movlw	56
 10786  006E08  EC4C  F033         	call	_lcd_cmd
 10787  006E0C                     
 10788                           ;lcd.c: 55:  lcd_cmd(0x08);
 10789  006E0C  0E08               	movlw	8
 10790  006E0E  EC4C  F033         	call	_lcd_cmd
 10791  006E12                     
 10792                           ;lcd.c: 56:  lcd_cmd(0x0F);
 10793  006E12  0E0F               	movlw	15
 10794  006E14  EC4C  F033         	call	_lcd_cmd
 10795  006E18                     
 10796                           ;lcd.c: 57:  lcd_cmd(0x01);
 10797  006E18  0E01               	movlw	1
 10798  006E1A  EC4C  F033         	call	_lcd_cmd
 10799  006E1E                     
 10800                           ;lcd.c: 58:  lcd_cmd(0x38);
 10801  006E1E  0E38               	movlw	56
 10802  006E20  EC4C  F033         	call	_lcd_cmd
 10803  006E24                     
 10804                           ;lcd.c: 59:     lcd_cmd(0x80);
 10805  006E24  0E80               	movlw	128
 10806  006E26  EC4C  F033         	call	_lcd_cmd
 10807  006E2A  0012               	return		;funcret
 10808  006E2C  FFFF               	dw	65535	; errata NOP
 10809  006E2E                     __end_of_lcd_init:
 10810                           	callstack 0
 10811                           
 10812 ;; *************** function _lcd_cmd *****************
 10813 ;; Defined at:
 10814 ;;		line 10 in file "lcd.c"
 10815 ;; Parameters:    Size  Location     Type
 10816 ;;  val             1    wreg     unsigned char 
 10817 ;; Auto vars:     Size  Location     Type
 10818 ;;  val             1    1[COMRAM] unsigned char 
 10819 ;; Return value:  Size  Location     Type
 10820 ;;                  1    wreg      void 
 10821 ;; Registers used:
 10822 ;;		wreg, status,2, cstack
 10823 ;; Tracked objects:
 10824 ;;		On entry : 0/0
 10825 ;;		On exit  : 0/0
 10826 ;;		Unchanged: 0/0
 10827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10828 ;;      Params:         0       0       0       0       0       0       0
 10829 ;;      Locals:         1       0       0       0       0       0       0
 10830 ;;      Temps:          0       0       0       0       0       0       0
 10831 ;;      Totals:         1       0       0       0       0       0       0
 10832 ;;Total ram usage:        1 bytes
 10833 ;; Hardware stack levels used:    1
 10834 ;; Hardware stack levels required when called:    2
 10835 ;; This function calls:
 10836 ;;		_lcd_wr
 10837 ;; This function is called by:
 10838 ;;		_main
 10839 ;;		_lcd_init
 10840 ;; This function uses a non-reentrant model
 10841 ;;
 10842                           
 10843                           	psect	text40
 10844  006698                     __ptext40:
 10845                           	callstack 0
 10846  006698                     _lcd_cmd:
 10847                           	callstack 0
 10848  006698  FFFF               	dw	65535	; assembler added errata NOP
 10849                           
 10850                           ;incstack = 0
 10851                           ;lcd_cmd@val stored from wreg
 10852  00669A  6E02               	movwf	lcd_cmd@val^0,c
 10853  00669C                     
 10854                           ;lcd.c: 10: void lcd_cmd(unsigned char val);lcd.c: 11: {;lcd.c: 12:  PORTEbits.RE1=1;
 10855  00669C  8284               	bsf	132,1,c	;volatile
 10856  00669E                     
 10857                           ;lcd.c: 13:     lcd_wr(val);
 10858  00669E  5002               	movf	lcd_cmd@val^0,w,c
 10859  0066A0  ECC9  F032         	call	_lcd_wr
 10860  0066A4                     
 10861                           ;lcd.c: 14:     PORTEbits.RE2=0;
 10862  0066A4  9484               	bcf	132,2,c	;volatile
 10863  0066A6                     
 10864                           ;lcd.c: 15:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10865  0066A6  0EC8               	movlw	200
 10866  0066A8                     u7217:
 10867  0066A8  FFFF               	dw	65535	; errata NOP
 10868  0066AA  F000               	nop	
 10869  0066AC  2EE8               	decfsz	wreg,f,c
 10870  0066AE  D7FC               	bra	u7217
 10871  0066B0                     
 10872                           ;lcd.c: 16:     PORTEbits.RE1=0;
 10873  0066B0  9284               	bcf	132,1,c	;volatile
 10874  0066B2                     
 10875                           ;lcd.c: 17:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10876  0066B2  0EC8               	movlw	200
 10877  0066B4                     u7227:
 10878  0066B4  FFFF               	dw	65535	; errata NOP
 10879  0066B6  F000               	nop	
 10880  0066B8  2EE8               	decfsz	wreg,f,c
 10881  0066BA  D7FC               	bra	u7227
 10882  0066BC                     
 10883                           ;lcd.c: 18:  PORTEbits.RE1=1;
 10884  0066BC  8284               	bsf	132,1,c	;volatile
 10885  0066BE  0012               	return		;funcret
 10886  0066C0  FFFF               	dw	65535	; errata NOP
 10887  0066C2                     __end_of_lcd_cmd:
 10888                           	callstack 0
 10889                           
 10890 ;; *************** function _lcd_wr *****************
 10891 ;; Defined at:
 10892 ;;		line 5 in file "lcd.c"
 10893 ;; Parameters:    Size  Location     Type
 10894 ;;  val             1    wreg     unsigned char 
 10895 ;; Auto vars:     Size  Location     Type
 10896 ;;  val             1    0[COMRAM] unsigned char 
 10897 ;; Return value:  Size  Location     Type
 10898 ;;                  1    wreg      void 
 10899 ;; Registers used:
 10900 ;;		wreg
 10901 ;; Tracked objects:
 10902 ;;		On entry : 0/0
 10903 ;;		On exit  : 0/0
 10904 ;;		Unchanged: 0/0
 10905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10906 ;;      Params:         0       0       0       0       0       0       0
 10907 ;;      Locals:         1       0       0       0       0       0       0
 10908 ;;      Temps:          0       0       0       0       0       0       0
 10909 ;;      Totals:         1       0       0       0       0       0       0
 10910 ;;Total ram usage:        1 bytes
 10911 ;; Hardware stack levels used:    1
 10912 ;; Hardware stack levels required when called:    1
 10913 ;; This function calls:
 10914 ;;		Nothing
 10915 ;; This function is called by:
 10916 ;;		_lcd_cmd
 10917 ;;		_lcd_dat
 10918 ;; This function uses a non-reentrant model
 10919 ;;
 10920                           
 10921                           	psect	text41
 10922  006592                     __ptext41:
 10923                           	callstack 0
 10924  006592                     _lcd_wr:
 10925                           	callstack 0
 10926  006592  FFFF               	dw	65535	; assembler added errata NOP
 10927                           
 10928                           ;incstack = 0
 10929                           ;lcd_wr@val stored from wreg
 10930  006594  6E01               	movwf	lcd_wr@val^0,c
 10931  006596                     
 10932                           ;lcd.c: 5: void lcd_wr(unsigned char val);lcd.c: 6: {;lcd.c: 7:     PORTD=val;
 10933  006596  C001  FF83         	movff	lcd_wr@val,3971	;volatile
 10934  00659A  0012               	return		;funcret
 10935  00659C  FFFF               	dw	65535	; errata NOP
 10936  00659E                     __end_of_lcd_wr:
 10937                           	callstack 0
 10938                           
 10939 ;; *************** function _init_timer_2 *****************
 10940 ;; Defined at:
 10941 ;;		line 27 in file "timer.c"
 10942 ;; Parameters:    Size  Location     Type
 10943 ;;		None
 10944 ;; Auto vars:     Size  Location     Type
 10945 ;;		None
 10946 ;; Return value:  Size  Location     Type
 10947 ;;                  1    wreg      void 
 10948 ;; Registers used:
 10949 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10950 ;; Tracked objects:
 10951 ;;		On entry : 0/0
 10952 ;;		On exit  : 0/0
 10953 ;;		Unchanged: 0/0
 10954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10955 ;;      Params:         0       0       0       0       0       0       0
 10956 ;;      Locals:         0       4       0       0       0       0       0
 10957 ;;      Temps:          0       0       0       0       0       0       0
 10958 ;;      Totals:         0       4       0       0       0       0       0
 10959 ;;Total ram usage:        4 bytes
 10960 ;; Hardware stack levels used:    1
 10961 ;; Hardware stack levels required when called:    2
 10962 ;; This function calls:
 10963 ;;		___fladd
 10964 ;;		___fldiv
 10965 ;;		___flmul
 10966 ;;		___fltol
 10967 ;; This function is called by:
 10968 ;;		_main
 10969 ;; This function uses a non-reentrant model
 10970 ;;
 10971                           
 10972                           	psect	text42
 10973  00702A                     __ptext42:
 10974                           	callstack 0
 10975  00702A                     _init_timer_2:
 10976                           	callstack 0
 10977  00702A  FFFF               	dw	65535	; assembler added errata NOP
 10978  00702C                     
 10979                           ;timer.c: 29:     T2CON = 0;
 10980  00702C  0E00               	movlw	0
 10981  00702E  6ECA               	movwf	202,c	;volatile
 10982                           
 10983                           ;timer.c: 30:     TMR2 = 0;
 10984  007030  0E00               	movlw	0
 10985  007032  6ECC               	movwf	204,c	;volatile
 10986  007034                     
 10987                           ;timer.c: 32:     T2CONbits.TMR2ON = 1;
 10988  007034  84CA               	bsf	202,2,c	;volatile
 10989  007036                     
 10990                           ;timer.c: 33:     T2CONbits.T2CKPS0 = 1;
 10991  007036  80CA               	bsf	202,0,c	;volatile
 10992  007038                     
 10993                           ;timer.c: 34:     T2CONbits.T2CKPS1 = 1;
 10994  007038  82CA               	bsf	202,1,c	;volatile
 10995  00703A                     
 10996                           ;timer.c: 36:     PR2 = (uint8_t) (((pwm_period / (4*t_osc*tmr2_prescaler)) - 1)*4);
 10997  00703A  0E00               	movlw	0
 10998  00703C  6E63               	movwf	___fladd@a^0,c
 10999  00703E  0E00               	movlw	0
 11000  007040  6E64               	movwf	(___fladd@a+1)^0,c
 11001  007042  0E80               	movlw	128
 11002  007044  6E65               	movwf	(___fladd@a+2)^0,c
 11003  007046  0EBF               	movlw	191
 11004  007048  6E66               	movwf	(___fladd@a+3)^0,c
 11005  00704A  0EBD               	movlw	189
 11006  00704C  6E31               	movwf	___flmul@a^0,c
 11007  00704E  0E37               	movlw	55
 11008  007050  6E32               	movwf	(___flmul@a+1)^0,c
 11009  007052  0E86               	movlw	134
 11010  007054  6E33               	movwf	(___flmul@a+2)^0,c
 11011  007056  0E36               	movlw	54
 11012  007058  6E34               	movwf	(___flmul@a+3)^0,c
 11013  00705A  C0ED  F02D         	movff	_tmr2_prescaler,___flmul@b
 11014  00705E  C0EE  F02E         	movff	_tmr2_prescaler+1,___flmul@b+1
 11015  007062  C0EF  F02F         	movff	_tmr2_prescaler+2,___flmul@b+2
 11016  007066  C0F0  F030         	movff	_tmr2_prescaler+3,___flmul@b+3
 11017  00706A  EC57  F010         	call	___flmul	;wreg free
 11018  00706E  C02D  F04A         	movff	?___flmul,___fldiv@a
 11019  007072  C02E  F04B         	movff	?___flmul+1,___fldiv@a+1
 11020  007076  C02F  F04C         	movff	?___flmul+2,___fldiv@a+2
 11021  00707A  C030  F04D         	movff	?___flmul+3,___fldiv@a+3
 11022  00707E  0E0A               	movlw	10
 11023  007080  6E46               	movwf	___fldiv@b^0,c
 11024  007082  0ED7               	movlw	215
 11025  007084  6E47               	movwf	(___fldiv@b+1)^0,c
 11026  007086  0EA3               	movlw	163
 11027  007088  6E48               	movwf	(___fldiv@b+2)^0,c
 11028  00708A  0E3C               	movlw	60
 11029  00708C  6E49               	movwf	(___fldiv@b+3)^0,c
 11030  00708E  ECA9  F012         	call	___fldiv	;wreg free
 11031  007092  C046  F05F         	movff	?___fldiv,___fladd@b
 11032  007096  C047  F060         	movff	?___fldiv+1,___fladd@b+1
 11033  00709A  C048  F061         	movff	?___fldiv+2,___fladd@b+2
 11034  00709E  C049  F062         	movff	?___fldiv+3,___fladd@b+3
 11035  0070A2  EC83  F00D         	call	___fladd	;wreg free
 11036  0070A6  C05F  F0D4         	movff	?___fladd,_init_timer_2$2131
 11037  0070AA  C060  F0D5         	movff	?___fladd+1,_init_timer_2$2131+1
 11038  0070AE  C061  F0D6         	movff	?___fladd+2,_init_timer_2$2131+2
 11039  0070B2  C062  F0D7         	movff	?___fladd+3,_init_timer_2$2131+3
 11040  0070B6                     
 11041                           ;timer.c: 36:     PR2 = (uint8_t) (((pwm_period / (4*t_osc*tmr2_prescaler)) - 1)*4);
 11042  0070B6  0E00               	movlw	0
 11043  0070B8  6E31               	movwf	___flmul@a^0,c
 11044  0070BA  0E00               	movlw	0
 11045  0070BC  6E32               	movwf	(___flmul@a+1)^0,c
 11046  0070BE  0E80               	movlw	128
 11047  0070C0  6E33               	movwf	(___flmul@a+2)^0,c
 11048  0070C2  0E40               	movlw	64
 11049  0070C4  6E34               	movwf	(___flmul@a+3)^0,c
 11050  0070C6  C0D4  F02D         	movff	_init_timer_2$2131,___flmul@b
 11051  0070CA  C0D5  F02E         	movff	_init_timer_2$2131+1,___flmul@b+1
 11052  0070CE  C0D6  F02F         	movff	_init_timer_2$2131+2,___flmul@b+2
 11053  0070D2  C0D7  F030         	movff	_init_timer_2$2131+3,___flmul@b+3
 11054  0070D6  EC57  F010         	call	___flmul	;wreg free
 11055  0070DA  C02D  F0CA         	movff	?___flmul,___fltol@f1
 11056  0070DE  C02E  F0CB         	movff	?___flmul+1,___fltol@f1+1
 11057  0070E2  C02F  F0CC         	movff	?___flmul+2,___fltol@f1+2
 11058  0070E6  C030  F0CD         	movff	?___flmul+3,___fltol@f1+3
 11059  0070EA  EC59  F03D         	call	___fltol	;wreg free
 11060  0070EE  0100               	movlb	0	; () banked
 11061  0070F0  51CA               	movf	?___fltol& (0+255),w,b
 11062  0070F2  6ECB               	movwf	203,c	;volatile
 11063  0070F4                     
 11064                           ; BSR set to: 0
 11065  0070F4  0012               	return		;funcret
 11066  0070F6  FFFF               	dw	65535	; errata NOP
 11067  0070F8                     __end_of_init_timer_2:
 11068                           	callstack 0
 11069                           
 11070 ;; *************** function _init_timer_0 *****************
 11071 ;; Defined at:
 11072 ;;		line 11 in file "timer.c"
 11073 ;; Parameters:    Size  Location     Type
 11074 ;;		None
 11075 ;; Auto vars:     Size  Location     Type
 11076 ;;		None
 11077 ;; Return value:  Size  Location     Type
 11078 ;;                  1    wreg      void 
 11079 ;; Registers used:
 11080 ;;		wreg, status,2
 11081 ;; Tracked objects:
 11082 ;;		On entry : 0/0
 11083 ;;		On exit  : 0/0
 11084 ;;		Unchanged: 0/0
 11085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11086 ;;      Params:         0       0       0       0       0       0       0
 11087 ;;      Locals:         0       0       0       0       0       0       0
 11088 ;;      Temps:          0       0       0       0       0       0       0
 11089 ;;      Totals:         0       0       0       0       0       0       0
 11090 ;;Total ram usage:        0 bytes
 11091 ;; Hardware stack levels used:    1
 11092 ;; Hardware stack levels required when called:    1
 11093 ;; This function calls:
 11094 ;;		Nothing
 11095 ;; This function is called by:
 11096 ;;		_main
 11097 ;; This function uses a non-reentrant model
 11098 ;;
 11099                           
 11100                           	psect	text43
 11101  006602                     __ptext43:
 11102                           	callstack 0
 11103  006602                     _init_timer_0:
 11104                           	callstack 0
 11105  006602  FFFF               	dw	65535	; assembler added errata NOP
 11106  006604                     
 11107                           ;timer.c: 13:     T0CON = 0;
 11108  006604  0E00               	movlw	0
 11109  006606  6ED5               	movwf	213,c	;volatile
 11110                           
 11111                           ;timer.c: 15:     TMR0L = 0x96;
 11112  006608  0E96               	movlw	150
 11113  00660A  6ED6               	movwf	214,c	;volatile
 11114                           
 11115                           ;timer.c: 16:     TMR0H = 0x98;
 11116  00660C  0E98               	movlw	152
 11117  00660E  6ED7               	movwf	215,c	;volatile
 11118  006610                     
 11119                           ;timer.c: 17:     INTCONbits.TMR0IE = 1;
 11120  006610  8AF2               	bsf	242,5,c	;volatile
 11121  006612                     
 11122                           ;timer.c: 18:     T0CONbits.T08BIT = 0;
 11123  006612  9CD5               	bcf	213,6,c	;volatile
 11124  006614                     
 11125                           ;timer.c: 19:     T0CONbits.T0CS = 0;
 11126  006614  9AD5               	bcf	213,5,c	;volatile
 11127  006616                     
 11128                           ;timer.c: 20:     T0CONbits.PSA = 0;
 11129  006616  96D5               	bcf	213,3,c	;volatile
 11130  006618                     
 11131                           ;timer.c: 21:     T0CONbits.T0PS0 = 1;
 11132  006618  80D5               	bsf	213,0,c	;volatile
 11133  00661A                     
 11134                           ;timer.c: 22:     T0CONbits.T0PS1 = 1;
 11135  00661A  82D5               	bsf	213,1,c	;volatile
 11136  00661C                     
 11137                           ;timer.c: 23:     T0CONbits.T0PS2 = 1;
 11138  00661C  84D5               	bsf	213,2,c	;volatile
 11139  00661E                     
 11140                           ;timer.c: 24:     T0CONbits.TMR0ON = 1;
 11141  00661E  8ED5               	bsf	213,7,c	;volatile
 11142  006620  0012               	return		;funcret
 11143  006622  FFFF               	dw	65535	; errata NOP
 11144  006624                     __end_of_init_timer_0:
 11145                           	callstack 0
 11146                           
 11147 ;; *************** function _init_stepper *****************
 11148 ;; Defined at:
 11149 ;;		line 4 in file "stepper_motor.c"
 11150 ;; Parameters:    Size  Location     Type
 11151 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 11152 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
 11153 ;;  current_coil    2    2[COMRAM] int 
 11154 ;;  step_counter    2    4[COMRAM] int 
 11155 ;;  direction       2    6[COMRAM] int 
 11156 ;;  hex_coil_reg    2    8[COMRAM] PTR int 
 11157 ;;		 -> hex_end_effector_values(8), hex_joint_values(8), 
 11158 ;; Auto vars:     Size  Location     Type
 11159 ;;  i               2   14[COMRAM] int 
 11160 ;; Return value:  Size  Location     Type
 11161 ;;                  1    wreg      void 
 11162 ;; Registers used:
 11163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11164 ;; Tracked objects:
 11165 ;;		On entry : 0/0
 11166 ;;		On exit  : 0/0
 11167 ;;		Unchanged: 0/0
 11168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11169 ;;      Params:        10       0       0       0       0       0       0
 11170 ;;      Locals:         2       0       0       0       0       0       0
 11171 ;;      Temps:          4       0       0       0       0       0       0
 11172 ;;      Totals:        16       0       0       0       0       0       0
 11173 ;;Total ram usage:       16 bytes
 11174 ;; Hardware stack levels used:    1
 11175 ;; Hardware stack levels required when called:    1
 11176 ;; This function calls:
 11177 ;;		Nothing
 11178 ;; This function is called by:
 11179 ;;		_main
 11180 ;; This function uses a non-reentrant model
 11181 ;;
 11182                           
 11183                           	psect	text44
 11184  006EB6                     __ptext44:
 11185                           	callstack 0
 11186  006EB6                     _init_stepper:
 11187                           	callstack 0
 11188  006EB6  FFFF               	dw	65535	; assembler added errata NOP
 11189  006EB8                     
 11190                           ;stepper_motor.c: 5:     for (int i = 0; i < 4; i++) {
 11191  006EB8  0E00               	movlw	0
 11192  006EBA  6E10               	movwf	(init_stepper@i+1)^0,c
 11193  006EBC  0E00               	movlw	0
 11194  006EBE  6E0F               	movwf	init_stepper@i^0,c
 11195  006EC0                     l5320:
 11196  006EC0  FFFF               	dw	65535	; assembler added errata NOP
 11197                           
 11198                           ;stepper_motor.c: 6:        stepper_motor -> hex_coil_register_values[i] = hex_coil_regi
      +                          ster_values[i];
 11199  006EC2  90D8               	bcf	status,0,c
 11200  006EC4  340F               	rlcf	init_stepper@i^0,w,c
 11201  006EC6  6ED9               	movwf	fsr2l,c
 11202  006EC8  3410               	rlcf	(init_stepper@i+1)^0,w,c
 11203  006ECA  6EDA               	movwf	fsr2h,c
 11204  006ECC  5009               	movf	init_stepper@hex_coil_register_values^0,w,c
 11205  006ECE  26D9               	addwf	fsr2l,f,c
 11206  006ED0  500A               	movf	(init_stepper@hex_coil_register_values+1)^0,w,c
 11207  006ED2  22DA               	addwfc	fsr2h,f,c
 11208  006ED4  C00F  F00B         	movff	init_stepper@i,??_init_stepper
 11209  006ED8  C010  F00C         	movff	init_stepper@i+1,??_init_stepper+1
 11210  006EDC  90D8               	bcf	status,0,c
 11211  006EDE  360B               	rlcf	??_init_stepper^0,f,c
 11212  006EE0  360C               	rlcf	(??_init_stepper+1)^0,f,c
 11213  006EE2  C001  F00D         	movff	init_stepper@stepper_motor,??_init_stepper+2
 11214  006EE6  C002  F00E         	movff	init_stepper@stepper_motor+1,??_init_stepper+3
 11215  006EEA  500B               	movf	??_init_stepper^0,w,c
 11216  006EEC  260D               	addwf	(??_init_stepper+2)^0,f,c
 11217  006EEE  500C               	movf	(??_init_stepper+1)^0,w,c
 11218  006EF0  220E               	addwfc	(??_init_stepper+3)^0,f,c
 11219  006EF2  0E06               	movlw	6
 11220  006EF4  240D               	addwf	(??_init_stepper+2)^0,w,c
 11221  006EF6  6EE1               	movwf	fsr1l,c
 11222  006EF8  0E00               	movlw	0
 11223  006EFA  200E               	addwfc	(??_init_stepper+3)^0,w,c
 11224  006EFC  6EE2               	movwf	fsr1h,c
 11225  006EFE  CFDE FFE6          	movff	postinc2,postinc1
 11226  006F02  CFDD FFE5          	movff	postdec2,postdec1
 11227  006F06                     
 11228                           ;stepper_motor.c: 7:     }
 11229  006F06  4A0F               	infsnz	init_stepper@i^0,f,c
 11230  006F08  2A10               	incf	(init_stepper@i+1)^0,f,c
 11231  006F0A  BE10               	btfsc	(init_stepper@i+1)^0,7,c
 11232  006F0C  EF91  F037         	goto	u6541
 11233  006F10  5010               	movf	(init_stepper@i+1)^0,w,c
 11234  006F12  E10A               	bnz	u6540
 11235  006F14  0E04               	movlw	4
 11236  006F16  5C0F               	subwf	init_stepper@i^0,w,c
 11237  006F18  A0D8               	btfss	status,0,c
 11238  006F1A  EF91  F037         	goto	u6541
 11239  006F1E  EF94  F037         	goto	u6540
 11240  006F22                     u6541:
 11241  006F22  FFFF               	dw	65535	; assembler added errata NOP
 11242  006F24  EF60  F037         	goto	l5320
 11243  006F28                     u6540:
 11244  006F28  FFFF               	dw	65535	; assembler added errata NOP
 11245  006F2A                     
 11246                           ;stepper_motor.c: 8:     stepper_motor -> current_coil = current_coil;
 11247  006F2A  C001  FFD9         	movff	init_stepper@stepper_motor,fsr2l
 11248  006F2E  C002  FFDA         	movff	init_stepper@stepper_motor+1,fsr2h
 11249  006F32  C003  FFDE         	movff	init_stepper@current_coil,postinc2
 11250  006F36  C004  FFDD         	movff	init_stepper@current_coil+1,postdec2
 11251  006F3A                     
 11252                           ;stepper_motor.c: 9:     stepper_motor -> step_counter = step_counter;
 11253  006F3A  EE20 F002          	lfsr	2,2
 11254  006F3E  5001               	movf	init_stepper@stepper_motor^0,w,c
 11255  006F40  26D9               	addwf	fsr2l,f,c
 11256  006F42  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
 11257  006F44  22DA               	addwfc	fsr2h,f,c
 11258  006F46  C005  FFDE         	movff	init_stepper@step_counter,postinc2
 11259  006F4A  C006  FFDD         	movff	init_stepper@step_counter+1,postdec2
 11260  006F4E                     
 11261                           ;stepper_motor.c: 10:     stepper_motor -> direction = direction;
 11262  006F4E  EE20 F004          	lfsr	2,4
 11263  006F52  5001               	movf	init_stepper@stepper_motor^0,w,c
 11264  006F54  26D9               	addwf	fsr2l,f,c
 11265  006F56  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
 11266  006F58  22DA               	addwfc	fsr2h,f,c
 11267  006F5A  C007  FFDE         	movff	init_stepper@direction,postinc2
 11268  006F5E  C008  FFDD         	movff	init_stepper@direction+1,postdec2
 11269  006F62  0012               	return		;funcret
 11270  006F64  FFFF               	dw	65535	; errata NOP
 11271  006F66                     __end_of_init_stepper:
 11272                           	callstack 0
 11273                           
 11274 ;; *************** function _init_interrupts *****************
 11275 ;; Defined at:
 11276 ;;		line 81 in file "init_PIC.c"
 11277 ;; Parameters:    Size  Location     Type
 11278 ;;		None
 11279 ;; Auto vars:     Size  Location     Type
 11280 ;;		None
 11281 ;; Return value:  Size  Location     Type
 11282 ;;                  1    wreg      void 
 11283 ;; Registers used:
 11284 ;;		None
 11285 ;; Tracked objects:
 11286 ;;		On entry : 0/0
 11287 ;;		On exit  : 0/0
 11288 ;;		Unchanged: 0/0
 11289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11290 ;;      Params:         0       0       0       0       0       0       0
 11291 ;;      Locals:         0       0       0       0       0       0       0
 11292 ;;      Temps:          0       0       0       0       0       0       0
 11293 ;;      Totals:         0       0       0       0       0       0       0
 11294 ;;Total ram usage:        0 bytes
 11295 ;; Hardware stack levels used:    1
 11296 ;; Hardware stack levels required when called:    1
 11297 ;; This function calls:
 11298 ;;		Nothing
 11299 ;; This function is called by:
 11300 ;;		_main
 11301 ;; This function uses a non-reentrant model
 11302 ;;
 11303                           
 11304                           	psect	text45
 11305  006586                     __ptext45:
 11306                           	callstack 0
 11307  006586                     _init_interrupts:
 11308                           	callstack 0
 11309  006586  FFFF               	dw	65535	; assembler added errata NOP
 11310  006588                     
 11311                           ;init_PIC.c: 83:     PIR1bits.RCIF = 0;
 11312  006588  9A9E               	bcf	158,5,c	;volatile
 11313                           
 11314                           ;init_PIC.c: 84:     PIE1bits.RCIE = 1;
 11315  00658A  8A9D               	bsf	157,5,c	;volatile
 11316                           
 11317                           ;init_PIC.c: 85:     INTCONbits.PEIE = 1;
 11318  00658C  8CF2               	bsf	242,6,c	;volatile
 11319  00658E  0012               	return		;funcret
 11320  006590  FFFF               	dw	65535	; errata NOP
 11321  006592                     __end_of_init_interrupts:
 11322                           	callstack 0
 11323                           
 11324 ;; *************** function _init_ccp1 *****************
 11325 ;; Defined at:
 11326 ;;		line 41 in file "timer.c"
 11327 ;; Parameters:    Size  Location     Type
 11328 ;;		None
 11329 ;; Auto vars:     Size  Location     Type
 11330 ;;		None
 11331 ;; Return value:  Size  Location     Type
 11332 ;;                  1    wreg      void 
 11333 ;; Registers used:
 11334 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11335 ;; Tracked objects:
 11336 ;;		On entry : 0/0
 11337 ;;		On exit  : 0/0
 11338 ;;		Unchanged: 0/0
 11339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11340 ;;      Params:         0       0       0       0       0       0       0
 11341 ;;      Locals:         0       0       0       0       0       0       0
 11342 ;;      Temps:          0       0       0       0       0       0       0
 11343 ;;      Totals:         0       0       0       0       0       0       0
 11344 ;;Total ram usage:        0 bytes
 11345 ;; Hardware stack levels used:    1
 11346 ;; Hardware stack levels required when called:    3
 11347 ;; This function calls:
 11348 ;;		_update_pwm_duty_ccp1
 11349 ;; This function is called by:
 11350 ;;		_main
 11351 ;; This function uses a non-reentrant model
 11352 ;;
 11353                           
 11354                           	psect	text46
 11355  006624                     __ptext46:
 11356                           	callstack 0
 11357  006624                     _init_ccp1:
 11358                           	callstack 0
 11359  006624  FFFF               	dw	65535	; assembler added errata NOP
 11360  006626                     
 11361                           ;timer.c: 42:     CCP1CON = 0x00;
 11362  006626  0E00               	movlw	0
 11363  006628  6EBD               	movwf	189,c	;volatile
 11364  00662A                     
 11365                           ;timer.c: 45:     update_pwm_duty_ccp1(5e-3);
 11366  00662A  0E0A               	movlw	10
 11367  00662C  0100               	movlb	0	; () banked
 11368  00662E  6FD4               	movwf	update_pwm_duty_ccp1@time_up& (0+255),b
 11369  006630  0ED7               	movlw	215
 11370  006632  6FD5               	movwf	(update_pwm_duty_ccp1@time_up+1)& (0+255),b
 11371  006634  0EA3               	movlw	163
 11372  006636  6FD6               	movwf	(update_pwm_duty_ccp1@time_up+2)& (0+255),b
 11373  006638  0E3B               	movlw	59
 11374  00663A  6FD7               	movwf	(update_pwm_duty_ccp1@time_up+3)& (0+255),b
 11375  00663C  ECB3  F037         	call	_update_pwm_duty_ccp1	;wreg free
 11376  006640                     
 11377                           ;timer.c: 48:     CCP1CONbits.CCP1M3 = 1;
 11378  006640  86BD               	bsf	189,3,c	;volatile
 11379  006642                     
 11380                           ;timer.c: 49:     CCP1CONbits.CCP1M2 = 1;
 11381  006642  84BD               	bsf	189,2,c	;volatile
 11382  006644  0012               	return		;funcret
 11383  006646  FFFF               	dw	65535	; errata NOP
 11384  006648                     __end_of_init_ccp1:
 11385                           	callstack 0
 11386                           
 11387 ;; *************** function _update_pwm_duty_ccp1 *****************
 11388 ;; Defined at:
 11389 ;;		line 53 in file "timer.c"
 11390 ;; Parameters:    Size  Location     Type
 11391 ;;  time_up         4   28[BANK0 ] void 
 11392 ;; Auto vars:     Size  Location     Type
 11393 ;;  new_duty        2   34[BANK0 ] unsigned short 
 11394 ;;  lsbs_duty       1   36[BANK0 ] unsigned char 
 11395 ;; Return value:  Size  Location     Type
 11396 ;;                  1    wreg      void 
 11397 ;; Registers used:
 11398 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11399 ;; Tracked objects:
 11400 ;;		On entry : 0/0
 11401 ;;		On exit  : 0/0
 11402 ;;		Unchanged: 0/0
 11403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11404 ;;      Params:         0       4       0       0       0       0       0
 11405 ;;      Locals:         0       3       0       0       0       0       0
 11406 ;;      Temps:          0       2       0       0       0       0       0
 11407 ;;      Totals:         0       9       0       0       0       0       0
 11408 ;;Total ram usage:        9 bytes
 11409 ;; Hardware stack levels used:    1
 11410 ;; Hardware stack levels required when called:    2
 11411 ;; This function calls:
 11412 ;;		___fldiv
 11413 ;;		___flmul
 11414 ;;		___fltol
 11415 ;; This function is called by:
 11416 ;;		_init_ccp1
 11417 ;; This function uses a non-reentrant model
 11418 ;;
 11419                           
 11420                           	psect	text47
 11421  006F66                     __ptext47:
 11422                           	callstack 0
 11423  006F66                     _update_pwm_duty_ccp1:
 11424                           	callstack 0
 11425  006F66  FFFF               	dw	65535	; assembler added errata NOP
 11426  006F68                     
 11427                           ;timer.c: 56:     uint16_t new_duty;;timer.c: 57:     uint8_t lsbs_duty;;timer.c: 59:   
      +                            new_duty = (0.001) / (t_osc * tmr2_prescaler);
 11428  006F68  0EBD               	movlw	189
 11429  006F6A  6E31               	movwf	___flmul@a^0,c
 11430  006F6C  0E37               	movlw	55
 11431  006F6E  6E32               	movwf	(___flmul@a+1)^0,c
 11432  006F70  0E86               	movlw	134
 11433  006F72  6E33               	movwf	(___flmul@a+2)^0,c
 11434  006F74  0E35               	movlw	53
 11435  006F76  6E34               	movwf	(___flmul@a+3)^0,c
 11436  006F78  C0ED  F02D         	movff	_tmr2_prescaler,___flmul@b
 11437  006F7C  C0EE  F02E         	movff	_tmr2_prescaler+1,___flmul@b+1
 11438  006F80  C0EF  F02F         	movff	_tmr2_prescaler+2,___flmul@b+2
 11439  006F84  C0F0  F030         	movff	_tmr2_prescaler+3,___flmul@b+3
 11440  006F88  EC57  F010         	call	___flmul	;wreg free
 11441  006F8C  C02D  F04A         	movff	?___flmul,___fldiv@a
 11442  006F90  C02E  F04B         	movff	?___flmul+1,___fldiv@a+1
 11443  006F94  C02F  F04C         	movff	?___flmul+2,___fldiv@a+2
 11444  006F98  C030  F04D         	movff	?___flmul+3,___fldiv@a+3
 11445  006F9C  0E6F               	movlw	111
 11446  006F9E  6E46               	movwf	___fldiv@b^0,c
 11447  006FA0  0E12               	movlw	18
 11448  006FA2  6E47               	movwf	(___fldiv@b+1)^0,c
 11449  006FA4  0E83               	movlw	131
 11450  006FA6  6E48               	movwf	(___fldiv@b+2)^0,c
 11451  006FA8  0E3A               	movlw	58
 11452  006FAA  6E49               	movwf	(___fldiv@b+3)^0,c
 11453  006FAC  ECA9  F012         	call	___fldiv	;wreg free
 11454  006FB0  C046  F0CA         	movff	?___fldiv,___fltol@f1
 11455  006FB4  C047  F0CB         	movff	?___fldiv+1,___fltol@f1+1
 11456  006FB8  C048  F0CC         	movff	?___fldiv+2,___fltol@f1+2
 11457  006FBC  C049  F0CD         	movff	?___fldiv+3,___fltol@f1+3
 11458  006FC0  EC59  F03D         	call	___fltol	;wreg free
 11459  006FC4  C0CA  F0DA         	movff	?___fltol,update_pwm_duty_ccp1@new_duty
 11460  006FC8  C0CB  F0DB         	movff	?___fltol+1,update_pwm_duty_ccp1@new_duty+1
 11461  006FCC                     
 11462                           ;timer.c: 60:     lsbs_duty = (uint8_t) new_duty;
 11463  006FCC  C0DA  F0DC         	movff	update_pwm_duty_ccp1@new_duty,update_pwm_duty_ccp1@lsbs_duty
 11464  006FD0                     
 11465                           ;timer.c: 64:     if (lsbs_duty & 0x01) CCP1CON |= (1u << 4);
 11466  006FD0  0100               	movlb	0	; () banked
 11467  006FD2  A1DC               	btfss	update_pwm_duty_ccp1@lsbs_duty& (0+255),0,b
 11468  006FD4  EFEE  F037         	goto	u6381
 11469  006FD8  EFF1  F037         	goto	u6380
 11470  006FDC                     u6381:
 11471  006FDC  FFFF               	dw	65535	; assembler added errata NOP
 11472  006FDE  EFF5  F037         	goto	l5140
 11473  006FE2                     u6380:
 11474  006FE2  FFFF               	dw	65535	; assembler added errata NOP
 11475  006FE4                     
 11476                           ; BSR set to: 0
 11477  006FE4  88BD               	bsf	189,4,c	;volatile
 11478  006FE6  EFF7  F037         	goto	l5142
 11479  006FEA                     l5140:
 11480  006FEA  FFFF               	dw	65535	; assembler added errata NOP
 11481                           
 11482                           ; BSR set to: 0
 11483  006FEC  98BD               	bcf	189,4,c	;volatile
 11484  006FEE                     l5142:
 11485  006FEE  FFFF               	dw	65535	; assembler added errata NOP
 11486                           
 11487                           ; BSR set to: 0
 11488                           ;timer.c: 67:     if (lsbs_duty & 0x02) CCP1CON |= (1u << 5);
 11489  006FF0  A3DC               	btfss	update_pwm_duty_ccp1@lsbs_duty& (0+255),1,b
 11490  006FF2  EFFD  F037         	goto	u6391
 11491  006FF6  EF00  F038         	goto	u6390
 11492  006FFA                     u6391:
 11493  006FFA  FFFF               	dw	65535	; assembler added errata NOP
 11494  006FFC  EF04  F038         	goto	l5146
 11495  007000                     u6390:
 11496  007000  FFFF               	dw	65535	; assembler added errata NOP
 11497  007002                     
 11498                           ; BSR set to: 0
 11499  007002  8ABD               	bsf	189,5,c	;volatile
 11500  007004  EF06  F038         	goto	l5148
 11501  007008                     l5146:
 11502  007008  FFFF               	dw	65535	; assembler added errata NOP
 11503                           
 11504                           ; BSR set to: 0
 11505  00700A  9ABD               	bcf	189,5,c	;volatile
 11506  00700C                     l5148:
 11507  00700C  FFFF               	dw	65535	; assembler added errata NOP
 11508                           
 11509                           ; BSR set to: 0
 11510                           ;timer.c: 71:     CCPR1L = (uint8_t) (new_duty >> 2);
 11511  00700E  C0DA  F0D8         	movff	update_pwm_duty_ccp1@new_duty,??_update_pwm_duty_ccp1
 11512  007012  C0DB  F0D9         	movff	update_pwm_duty_ccp1@new_duty+1,??_update_pwm_duty_ccp1+1
 11513  007016  90D8               	bcf	status,0,c
 11514  007018  33D9               	rrcf	(??_update_pwm_duty_ccp1+1)& (0+255),f,b
 11515  00701A  33D8               	rrcf	??_update_pwm_duty_ccp1& (0+255),f,b
 11516  00701C  90D8               	bcf	status,0,c
 11517  00701E  33D9               	rrcf	(??_update_pwm_duty_ccp1+1)& (0+255),f,b
 11518  007020  33D8               	rrcf	??_update_pwm_duty_ccp1& (0+255),f,b
 11519  007022  51D8               	movf	??_update_pwm_duty_ccp1& (0+255),w,b
 11520  007024  6EBE               	movwf	190,c	;volatile
 11521  007026                     
 11522                           ; BSR set to: 0
 11523  007026  0012               	return		;funcret
 11524  007028  FFFF               	dw	65535	; errata NOP
 11525  00702A                     __end_of_update_pwm_duty_ccp1:
 11526                           	callstack 0
 11527                           
 11528 ;; *************** function ___fldiv *****************
 11529 ;; Defined at:
 11530 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 11531 ;; Parameters:    Size  Location     Type
 11532 ;;  b               4   69[COMRAM] void 
 11533 ;;  a               4   73[COMRAM] void 
 11534 ;; Auto vars:     Size  Location     Type
 11535 ;;  grs             4   88[COMRAM] unsigned long 
 11536 ;;  rem             4   81[COMRAM] unsigned long 
 11537 ;;  new_exp         2   86[COMRAM] short 
 11538 ;;  aexp            1   93[COMRAM] unsigned char 
 11539 ;;  bexp            1   92[COMRAM] unsigned char 
 11540 ;;  sign            1   85[COMRAM] unsigned char 
 11541 ;; Return value:  Size  Location     Type
 11542 ;;                  4   69[COMRAM] unsigned char 
 11543 ;; Registers used:
 11544 ;;		wreg, status,2, status,0
 11545 ;; Tracked objects:
 11546 ;;		On entry : 0/0
 11547 ;;		On exit  : 0/0
 11548 ;;		Unchanged: 0/0
 11549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11550 ;;      Params:         8       0       0       0       0       0       0
 11551 ;;      Locals:        13       0       0       0       0       0       0
 11552 ;;      Temps:          4       0       0       0       0       0       0
 11553 ;;      Totals:        25       0       0       0       0       0       0
 11554 ;;Total ram usage:       25 bytes
 11555 ;; Hardware stack levels used:    1
 11556 ;; Hardware stack levels required when called:    1
 11557 ;; This function calls:
 11558 ;;		Nothing
 11559 ;; This function is called by:
 11560 ;;		_init_timer_2
 11561 ;;		_update_pwm_duty_ccp1
 11562 ;; This function uses a non-reentrant model
 11563 ;;
 11564                           
 11565                           	psect	text48
 11566  002552                     __ptext48:
 11567                           	callstack 0
 11568  002552                     ___fldiv:
 11569                           	callstack 0
 11570  002552  FFFF               	dw	65535	; assembler added errata NOP
 11571  002554  5049               	movf	(___fldiv@b+3)^0,w,c
 11572  002556  0B80               	andlw	128
 11573  002558  6E56               	movwf	___fldiv@sign^0,c
 11574  00255A  5049               	movf	(___fldiv@b+3)^0,w,c
 11575  00255C  2449               	addwf	(___fldiv@b+3)^0,w,c
 11576  00255E  6E5D               	movwf	___fldiv@bexp^0,c
 11577  002560  AE48               	btfss	(___fldiv@b+2)^0,7,c
 11578  002562  EFB5  F012         	goto	u5621
 11579  002566  EFB8  F012         	goto	u5620
 11580  00256A                     u5621:
 11581  00256A  FFFF               	dw	65535	; assembler added errata NOP
 11582  00256C  EFBA  F012         	goto	l4668
 11583  002570                     u5620:
 11584  002570  FFFF               	dw	65535	; assembler added errata NOP
 11585  002572  805D               	bsf	___fldiv@bexp^0,0,c
 11586  002574                     l4668:
 11587  002574  FFFF               	dw	65535	; assembler added errata NOP
 11588  002576  505D               	movf	___fldiv@bexp^0,w,c
 11589  002578  B4D8               	btfsc	status,2,c
 11590  00257A  EFC1  F012         	goto	u5631
 11591  00257E  EFC4  F012         	goto	u5630
 11592  002582                     u5631:
 11593  002582  FFFF               	dw	65535	; assembler added errata NOP
 11594  002584  EFDD  F012         	goto	l4678
 11595  002588                     u5630:
 11596  002588  FFFF               	dw	65535	; assembler added errata NOP
 11597  00258A  285D               	incf	___fldiv@bexp^0,w,c
 11598  00258C  A4D8               	btfss	status,2,c
 11599  00258E  EFCB  F012         	goto	u5641
 11600  002592  EFCE  F012         	goto	u5640
 11601  002596                     u5641:
 11602  002596  FFFF               	dw	65535	; assembler added errata NOP
 11603  002598  EFD7  F012         	goto	l4674
 11604  00259C                     u5640:
 11605  00259C  FFFF               	dw	65535	; assembler added errata NOP
 11606  00259E  0E00               	movlw	0
 11607  0025A0  6E46               	movwf	___fldiv@b^0,c
 11608  0025A2  0E00               	movlw	0
 11609  0025A4  6E47               	movwf	(___fldiv@b+1)^0,c
 11610  0025A6  0E00               	movlw	0
 11611  0025A8  6E48               	movwf	(___fldiv@b+2)^0,c
 11612  0025AA  0E00               	movlw	0
 11613  0025AC  6E49               	movwf	(___fldiv@b+3)^0,c
 11614  0025AE                     l4674:
 11615  0025AE  FFFF               	dw	65535	; assembler added errata NOP
 11616  0025B0  8E48               	bsf	(___fldiv@b+2)^0,7,c
 11617  0025B2  0E00               	movlw	0
 11618  0025B4  6E49               	movwf	(___fldiv@b+3)^0,c
 11619  0025B6  EFE6  F012         	goto	l4680
 11620  0025BA                     l4678:
 11621  0025BA  FFFF               	dw	65535	; assembler added errata NOP
 11622  0025BC  0E00               	movlw	0
 11623  0025BE  6E46               	movwf	___fldiv@b^0,c
 11624  0025C0  0E00               	movlw	0
 11625  0025C2  6E47               	movwf	(___fldiv@b+1)^0,c
 11626  0025C4  0E00               	movlw	0
 11627  0025C6  6E48               	movwf	(___fldiv@b+2)^0,c
 11628  0025C8  0E00               	movlw	0
 11629  0025CA  6E49               	movwf	(___fldiv@b+3)^0,c
 11630  0025CC                     l4680:
 11631  0025CC  FFFF               	dw	65535	; assembler added errata NOP
 11632  0025CE  504D               	movf	(___fldiv@a+3)^0,w,c
 11633  0025D0  0B80               	andlw	128
 11634  0025D2  1A56               	xorwf	___fldiv@sign^0,f,c
 11635  0025D4  504D               	movf	(___fldiv@a+3)^0,w,c
 11636  0025D6  244D               	addwf	(___fldiv@a+3)^0,w,c
 11637  0025D8  6E5E               	movwf	___fldiv@aexp^0,c
 11638  0025DA  AE4C               	btfss	(___fldiv@a+2)^0,7,c
 11639  0025DC  EFF2  F012         	goto	u5651
 11640  0025E0  EFF5  F012         	goto	u5650
 11641  0025E4                     u5651:
 11642  0025E4  FFFF               	dw	65535	; assembler added errata NOP
 11643  0025E6  EFF7  F012         	goto	l4688
 11644  0025EA                     u5650:
 11645  0025EA  FFFF               	dw	65535	; assembler added errata NOP
 11646  0025EC  805E               	bsf	___fldiv@aexp^0,0,c
 11647  0025EE                     l4688:
 11648  0025EE  FFFF               	dw	65535	; assembler added errata NOP
 11649  0025F0  505E               	movf	___fldiv@aexp^0,w,c
 11650  0025F2  B4D8               	btfsc	status,2,c
 11651  0025F4  EFFE  F012         	goto	u5661
 11652  0025F8  EF01  F013         	goto	u5660
 11653  0025FC                     u5661:
 11654  0025FC  FFFF               	dw	65535	; assembler added errata NOP
 11655  0025FE  EF1A  F013         	goto	l4698
 11656  002602                     u5660:
 11657  002602  FFFF               	dw	65535	; assembler added errata NOP
 11658  002604  285E               	incf	___fldiv@aexp^0,w,c
 11659  002606  A4D8               	btfss	status,2,c
 11660  002608  EF08  F013         	goto	u5671
 11661  00260C  EF0B  F013         	goto	u5670
 11662  002610                     u5671:
 11663  002610  FFFF               	dw	65535	; assembler added errata NOP
 11664  002612  EF14  F013         	goto	l4694
 11665  002616                     u5670:
 11666  002616  FFFF               	dw	65535	; assembler added errata NOP
 11667  002618  0E00               	movlw	0
 11668  00261A  6E4A               	movwf	___fldiv@a^0,c
 11669  00261C  0E00               	movlw	0
 11670  00261E  6E4B               	movwf	(___fldiv@a+1)^0,c
 11671  002620  0E00               	movlw	0
 11672  002622  6E4C               	movwf	(___fldiv@a+2)^0,c
 11673  002624  0E00               	movlw	0
 11674  002626  6E4D               	movwf	(___fldiv@a+3)^0,c
 11675  002628                     l4694:
 11676  002628  FFFF               	dw	65535	; assembler added errata NOP
 11677  00262A  8E4C               	bsf	(___fldiv@a+2)^0,7,c
 11678  00262C  0E00               	movlw	0
 11679  00262E  6E4D               	movwf	(___fldiv@a+3)^0,c
 11680  002630  EF23  F013         	goto	l4700
 11681  002634                     l4698:
 11682  002634  FFFF               	dw	65535	; assembler added errata NOP
 11683  002636  0E00               	movlw	0
 11684  002638  6E4A               	movwf	___fldiv@a^0,c
 11685  00263A  0E00               	movlw	0
 11686  00263C  6E4B               	movwf	(___fldiv@a+1)^0,c
 11687  00263E  0E00               	movlw	0
 11688  002640  6E4C               	movwf	(___fldiv@a+2)^0,c
 11689  002642  0E00               	movlw	0
 11690  002644  6E4D               	movwf	(___fldiv@a+3)^0,c
 11691  002646                     l4700:
 11692  002646  FFFF               	dw	65535	; assembler added errata NOP
 11693  002648  504A               	movf	___fldiv@a^0,w,c
 11694  00264A  104B               	iorwf	(___fldiv@a+1)^0,w,c
 11695  00264C  104C               	iorwf	(___fldiv@a+2)^0,w,c
 11696  00264E  104D               	iorwf	(___fldiv@a+3)^0,w,c
 11697  002650  A4D8               	btfss	status,2,c
 11698  002652  EF2D  F013         	goto	u5681
 11699  002656  EF30  F013         	goto	u5680
 11700  00265A                     u5681:
 11701  00265A  FFFF               	dw	65535	; assembler added errata NOP
 11702  00265C  EF4A  F013         	goto	l4712
 11703  002660                     u5680:
 11704  002660  FFFF               	dw	65535	; assembler added errata NOP
 11705  002662  0E00               	movlw	0
 11706  002664  6E46               	movwf	___fldiv@b^0,c
 11707  002666  0E00               	movlw	0
 11708  002668  6E47               	movwf	(___fldiv@b+1)^0,c
 11709  00266A  0E00               	movlw	0
 11710  00266C  6E48               	movwf	(___fldiv@b+2)^0,c
 11711  00266E  0E00               	movlw	0
 11712  002670  6E49               	movwf	(___fldiv@b+3)^0,c
 11713  002672  0E80               	movlw	128
 11714  002674  1248               	iorwf	(___fldiv@b+2)^0,f,c
 11715  002676  0E7F               	movlw	127
 11716  002678  1249               	iorwf	(___fldiv@b+3)^0,f,c
 11717  00267A                     l4706:
 11718  00267A  FFFF               	dw	65535	; assembler added errata NOP
 11719  00267C  5056               	movf	___fldiv@sign^0,w,c
 11720  00267E  1249               	iorwf	(___fldiv@b+3)^0,f,c
 11721  002680  C046  F046         	movff	___fldiv@b,?___fldiv
 11722  002684  C047  F047         	movff	___fldiv@b+1,?___fldiv+1
 11723  002688  C048  F048         	movff	___fldiv@b+2,?___fldiv+2
 11724  00268C  C049  F049         	movff	___fldiv@b+3,?___fldiv+3
 11725  002690  EFBF  F014         	goto	l962
 11726  002694                     l4712:
 11727  002694  FFFF               	dw	65535	; assembler added errata NOP
 11728  002696  505D               	movf	___fldiv@bexp^0,w,c
 11729  002698  A4D8               	btfss	status,2,c
 11730  00269A  EF51  F013         	goto	u5691
 11731  00269E  EF54  F013         	goto	u5690
 11732  0026A2                     u5691:
 11733  0026A2  FFFF               	dw	65535	; assembler added errata NOP
 11734  0026A4  EF5F  F013         	goto	l4720
 11735  0026A8                     u5690:
 11736  0026A8  FFFF               	dw	65535	; assembler added errata NOP
 11737  0026AA  0E00               	movlw	0
 11738  0026AC  6E46               	movwf	?___fldiv^0,c
 11739  0026AE  0E00               	movlw	0
 11740  0026B0  6E47               	movwf	(?___fldiv+1)^0,c
 11741  0026B2  0E00               	movlw	0
 11742  0026B4  6E48               	movwf	(?___fldiv+2)^0,c
 11743  0026B6  0E00               	movlw	0
 11744  0026B8  6E49               	movwf	(?___fldiv+3)^0,c
 11745  0026BA  EFBF  F014         	goto	l962
 11746  0026BE                     l4720:
 11747  0026BE  FFFF               	dw	65535	; assembler added errata NOP
 11748  0026C0  505E               	movf	___fldiv@aexp^0,w,c
 11749  0026C2  C05D  F04E         	movff	___fldiv@bexp,??___fldiv
 11750  0026C6  6A4F               	clrf	(??___fldiv+1)^0,c
 11751  0026C8  5E4E               	subwf	??___fldiv^0,f,c
 11752  0026CA  0E00               	movlw	0
 11753  0026CC  5A4F               	subwfb	(??___fldiv+1)^0,f,c
 11754  0026CE  0E7F               	movlw	127
 11755  0026D0  244E               	addwf	??___fldiv^0,w,c
 11756  0026D2  6E57               	movwf	___fldiv@new_exp^0,c
 11757  0026D4  0E00               	movlw	0
 11758  0026D6  204F               	addwfc	(??___fldiv+1)^0,w,c
 11759  0026D8  6E58               	movwf	(___fldiv@new_exp+1)^0,c
 11760  0026DA  C046  F052         	movff	___fldiv@b,___fldiv@rem
 11761  0026DE  C047  F053         	movff	___fldiv@b+1,___fldiv@rem+1
 11762  0026E2  C048  F054         	movff	___fldiv@b+2,___fldiv@rem+2
 11763  0026E6  C049  F055         	movff	___fldiv@b+3,___fldiv@rem+3
 11764  0026EA  0E00               	movlw	0
 11765  0026EC  6E46               	movwf	___fldiv@b^0,c
 11766  0026EE  0E00               	movlw	0
 11767  0026F0  6E47               	movwf	(___fldiv@b+1)^0,c
 11768  0026F2  0E00               	movlw	0
 11769  0026F4  6E48               	movwf	(___fldiv@b+2)^0,c
 11770  0026F6  0E00               	movlw	0
 11771  0026F8  6E49               	movwf	(___fldiv@b+3)^0,c
 11772  0026FA  0E00               	movlw	0
 11773  0026FC  6E59               	movwf	___fldiv@grs^0,c
 11774  0026FE  0E00               	movlw	0
 11775  002700  6E5A               	movwf	(___fldiv@grs+1)^0,c
 11776  002702  0E00               	movlw	0
 11777  002704  6E5B               	movwf	(___fldiv@grs+2)^0,c
 11778  002706  0E00               	movlw	0
 11779  002708  6E5C               	movwf	(___fldiv@grs+3)^0,c
 11780  00270A  0E00               	movlw	0
 11781  00270C  6E5E               	movwf	___fldiv@aexp^0,c
 11782  00270E  EFCB  F013         	goto	l964
 11783  002712                     l4730:
 11784  002712  FFFF               	dw	65535	; assembler added errata NOP
 11785  002714  505E               	movf	___fldiv@aexp^0,w,c
 11786  002716  B4D8               	btfsc	status,2,c
 11787  002718  EF90  F013         	goto	u5701
 11788  00271C  EF93  F013         	goto	u5700
 11789  002720                     u5701:
 11790  002720  FFFF               	dw	65535	; assembler added errata NOP
 11791  002722  EFAE  F013         	goto	l4738
 11792  002726                     u5700:
 11793  002726  FFFF               	dw	65535	; assembler added errata NOP
 11794  002728  90D8               	bcf	status,0,c
 11795  00272A  3652               	rlcf	___fldiv@rem^0,f,c
 11796  00272C  3653               	rlcf	(___fldiv@rem+1)^0,f,c
 11797  00272E  3654               	rlcf	(___fldiv@rem+2)^0,f,c
 11798  002730  3655               	rlcf	(___fldiv@rem+3)^0,f,c
 11799  002732  90D8               	bcf	status,0,c
 11800  002734  3646               	rlcf	___fldiv@b^0,f,c
 11801  002736  3647               	rlcf	(___fldiv@b+1)^0,f,c
 11802  002738  3648               	rlcf	(___fldiv@b+2)^0,f,c
 11803  00273A  3649               	rlcf	(___fldiv@b+3)^0,f,c
 11804  00273C  AE5C               	btfss	(___fldiv@grs+3)^0,7,c
 11805  00273E  EFA3  F013         	goto	u5711
 11806  002742  EFA6  F013         	goto	u5710
 11807  002746                     u5711:
 11808  002746  FFFF               	dw	65535	; assembler added errata NOP
 11809  002748  EFA8  F013         	goto	l967
 11810  00274C                     u5710:
 11811  00274C  FFFF               	dw	65535	; assembler added errata NOP
 11812  00274E  8046               	bsf	___fldiv@b^0,0,c
 11813  002750                     l967:
 11814  002750  FFFF               	dw	65535	; assembler added errata NOP
 11815  002752  90D8               	bcf	status,0,c
 11816  002754  3659               	rlcf	___fldiv@grs^0,f,c
 11817  002756  365A               	rlcf	(___fldiv@grs+1)^0,f,c
 11818  002758  365B               	rlcf	(___fldiv@grs+2)^0,f,c
 11819  00275A  365C               	rlcf	(___fldiv@grs+3)^0,f,c
 11820  00275C                     l4738:
 11821  00275C  FFFF               	dw	65535	; assembler added errata NOP
 11822  00275E  504A               	movf	___fldiv@a^0,w,c
 11823  002760  5C52               	subwf	___fldiv@rem^0,w,c
 11824  002762  504B               	movf	(___fldiv@a+1)^0,w,c
 11825  002764  5853               	subwfb	(___fldiv@rem+1)^0,w,c
 11826  002766  504C               	movf	(___fldiv@a+2)^0,w,c
 11827  002768  5854               	subwfb	(___fldiv@rem+2)^0,w,c
 11828  00276A  504D               	movf	(___fldiv@a+3)^0,w,c
 11829  00276C  5855               	subwfb	(___fldiv@rem+3)^0,w,c
 11830  00276E  A0D8               	btfss	status,0,c
 11831  002770  EFBC  F013         	goto	u5721
 11832  002774  EFBF  F013         	goto	u5720
 11833  002778                     u5721:
 11834  002778  FFFF               	dw	65535	; assembler added errata NOP
 11835  00277A  EFC9  F013         	goto	l4744
 11836  00277E                     u5720:
 11837  00277E  FFFF               	dw	65535	; assembler added errata NOP
 11838  002780  8C5C               	bsf	(___fldiv@grs+3)^0,6,c
 11839  002782  504A               	movf	___fldiv@a^0,w,c
 11840  002784  5E52               	subwf	___fldiv@rem^0,f,c
 11841  002786  504B               	movf	(___fldiv@a+1)^0,w,c
 11842  002788  5A53               	subwfb	(___fldiv@rem+1)^0,f,c
 11843  00278A  504C               	movf	(___fldiv@a+2)^0,w,c
 11844  00278C  5A54               	subwfb	(___fldiv@rem+2)^0,f,c
 11845  00278E  504D               	movf	(___fldiv@a+3)^0,w,c
 11846  002790  5A55               	subwfb	(___fldiv@rem+3)^0,f,c
 11847  002792                     l4744:
 11848  002792  FFFF               	dw	65535	; assembler added errata NOP
 11849  002794  2A5E               	incf	___fldiv@aexp^0,f,c
 11850  002796                     l964:
 11851  002796  FFFF               	dw	65535	; assembler added errata NOP
 11852  002798  0E19               	movlw	25
 11853  00279A  645E               	cpfsgt	___fldiv@aexp^0,c
 11854  00279C  EFD2  F013         	goto	u5731
 11855  0027A0  EFD5  F013         	goto	u5730
 11856  0027A4                     u5731:
 11857  0027A4  FFFF               	dw	65535	; assembler added errata NOP
 11858  0027A6  EF89  F013         	goto	l4730
 11859  0027AA                     u5730:
 11860  0027AA  FFFF               	dw	65535	; assembler added errata NOP
 11861  0027AC  5052               	movf	___fldiv@rem^0,w,c
 11862  0027AE  1053               	iorwf	(___fldiv@rem+1)^0,w,c
 11863  0027B0  1054               	iorwf	(___fldiv@rem+2)^0,w,c
 11864  0027B2  1055               	iorwf	(___fldiv@rem+3)^0,w,c
 11865  0027B4  B4D8               	btfsc	status,2,c
 11866  0027B6  EFDF  F013         	goto	u5741
 11867  0027BA  EFE2  F013         	goto	u5740
 11868  0027BE                     u5741:
 11869  0027BE  FFFF               	dw	65535	; assembler added errata NOP
 11870  0027C0  EFFF  F013         	goto	l4756
 11871  0027C4                     u5740:
 11872  0027C4  FFFF               	dw	65535	; assembler added errata NOP
 11873  0027C6  8059               	bsf	___fldiv@grs^0,0,c
 11874  0027C8  EFFF  F013         	goto	l4756
 11875  0027CC                     l4750:
 11876  0027CC  FFFF               	dw	65535	; assembler added errata NOP
 11877  0027CE  90D8               	bcf	status,0,c
 11878  0027D0  3646               	rlcf	___fldiv@b^0,f,c
 11879  0027D2  3647               	rlcf	(___fldiv@b+1)^0,f,c
 11880  0027D4  3648               	rlcf	(___fldiv@b+2)^0,f,c
 11881  0027D6  3649               	rlcf	(___fldiv@b+3)^0,f,c
 11882  0027D8  AE5C               	btfss	(___fldiv@grs+3)^0,7,c
 11883  0027DA  EFF1  F013         	goto	u5751
 11884  0027DE  EFF4  F013         	goto	u5750
 11885  0027E2                     u5751:
 11886  0027E2  FFFF               	dw	65535	; assembler added errata NOP
 11887  0027E4  EFF6  F013         	goto	l973
 11888  0027E8                     u5750:
 11889  0027E8  FFFF               	dw	65535	; assembler added errata NOP
 11890  0027EA  8046               	bsf	___fldiv@b^0,0,c
 11891  0027EC                     l973:
 11892  0027EC  FFFF               	dw	65535	; assembler added errata NOP
 11893  0027EE  90D8               	bcf	status,0,c
 11894  0027F0  3659               	rlcf	___fldiv@grs^0,f,c
 11895  0027F2  365A               	rlcf	(___fldiv@grs+1)^0,f,c
 11896  0027F4  365B               	rlcf	(___fldiv@grs+2)^0,f,c
 11897  0027F6  365C               	rlcf	(___fldiv@grs+3)^0,f,c
 11898  0027F8  0657               	decf	___fldiv@new_exp^0,f,c
 11899  0027FA  A0D8               	btfss	status,0,c
 11900  0027FC  0658               	decf	(___fldiv@new_exp+1)^0,f,c
 11901  0027FE                     l4756:
 11902  0027FE  FFFF               	dw	65535	; assembler added errata NOP
 11903  002800  AE48               	btfss	(___fldiv@b+2)^0,7,c
 11904  002802  EF05  F014         	goto	u5761
 11905  002806  EF08  F014         	goto	u5760
 11906  00280A                     u5761:
 11907  00280A  FFFF               	dw	65535	; assembler added errata NOP
 11908  00280C  EFE6  F013         	goto	l4750
 11909  002810                     u5760:
 11910  002810  FFFF               	dw	65535	; assembler added errata NOP
 11911  002812  0E00               	movlw	0
 11912  002814  6E5E               	movwf	___fldiv@aexp^0,c
 11913  002816  AE5C               	btfss	(___fldiv@grs+3)^0,7,c
 11914  002818  EF10  F014         	goto	u5771
 11915  00281C  EF13  F014         	goto	u5770
 11916  002820                     u5771:
 11917  002820  FFFF               	dw	65535	; assembler added errata NOP
 11918  002822  EF3E  F014         	goto	l975
 11919  002826                     u5770:
 11920  002826  FFFF               	dw	65535	; assembler added errata NOP
 11921  002828  0EFF               	movlw	255
 11922  00282A  1459               	andwf	___fldiv@grs^0,w,c
 11923  00282C  6E4E               	movwf	??___fldiv^0,c
 11924  00282E  0EFF               	movlw	255
 11925  002830  145A               	andwf	(___fldiv@grs+1)^0,w,c
 11926  002832  6E4F               	movwf	(??___fldiv+1)^0,c
 11927  002834  0EFF               	movlw	255
 11928  002836  145B               	andwf	(___fldiv@grs+2)^0,w,c
 11929  002838  6E50               	movwf	(??___fldiv+2)^0,c
 11930  00283A  0E7F               	movlw	127
 11931  00283C  145C               	andwf	(___fldiv@grs+3)^0,w,c
 11932  00283E  6E51               	movwf	(??___fldiv+3)^0,c
 11933  002840  504E               	movf	??___fldiv^0,w,c
 11934  002842  104F               	iorwf	(??___fldiv+1)^0,w,c
 11935  002844  1050               	iorwf	(??___fldiv+2)^0,w,c
 11936  002846  1051               	iorwf	(??___fldiv+3)^0,w,c
 11937  002848  B4D8               	btfsc	status,2,c
 11938  00284A  EF29  F014         	goto	u5781
 11939  00284E  EF2C  F014         	goto	u5780
 11940  002852                     u5781:
 11941  002852  FFFF               	dw	65535	; assembler added errata NOP
 11942  002854  EF32  F014         	goto	l976
 11943  002858                     u5780:
 11944  002858  FFFF               	dw	65535	; assembler added errata NOP
 11945  00285A                     l4764:
 11946  00285A  FFFF               	dw	65535	; assembler added errata NOP
 11947  00285C  0E01               	movlw	1
 11948  00285E  6E5E               	movwf	___fldiv@aexp^0,c
 11949  002860  EF3E  F014         	goto	l975
 11950  002864                     l976:
 11951  002864  FFFF               	dw	65535	; assembler added errata NOP
 11952  002866  A046               	btfss	___fldiv@b^0,0,c
 11953  002868  EF38  F014         	goto	u5791
 11954  00286C  EF3B  F014         	goto	u5790
 11955  002870                     u5791:
 11956  002870  FFFF               	dw	65535	; assembler added errata NOP
 11957  002872  EF3E  F014         	goto	l975
 11958  002876                     u5790:
 11959  002876  FFFF               	dw	65535	; assembler added errata NOP
 11960  002878  EF2D  F014         	goto	l4764
 11961  00287C                     l975:
 11962  00287C  FFFF               	dw	65535	; assembler added errata NOP
 11963  00287E  505E               	movf	___fldiv@aexp^0,w,c
 11964  002880  B4D8               	btfsc	status,2,c
 11965  002882  EF45  F014         	goto	u5801
 11966  002886  EF48  F014         	goto	u5800
 11967  00288A                     u5801:
 11968  00288A  FFFF               	dw	65535	; assembler added errata NOP
 11969  00288C  EF6F  F014         	goto	l4776
 11970  002890                     u5800:
 11971  002890  FFFF               	dw	65535	; assembler added errata NOP
 11972  002892  0E01               	movlw	1
 11973  002894  2646               	addwf	___fldiv@b^0,f,c
 11974  002896  0E00               	movlw	0
 11975  002898  2247               	addwfc	(___fldiv@b+1)^0,f,c
 11976  00289A  2248               	addwfc	(___fldiv@b+2)^0,f,c
 11977  00289C  2249               	addwfc	(___fldiv@b+3)^0,f,c
 11978  00289E  A049               	btfss	(___fldiv@b+3)^0,0,c
 11979  0028A0  EF54  F014         	goto	u5811
 11980  0028A4  EF57  F014         	goto	u5810
 11981  0028A8                     u5811:
 11982  0028A8  FFFF               	dw	65535	; assembler added errata NOP
 11983  0028AA  EF6F  F014         	goto	l4776
 11984  0028AE                     u5810:
 11985  0028AE  FFFF               	dw	65535	; assembler added errata NOP
 11986  0028B0  C046  F04E         	movff	___fldiv@b,??___fldiv
 11987  0028B4  C047  F04F         	movff	___fldiv@b+1,??___fldiv+1
 11988  0028B8  C048  F050         	movff	___fldiv@b+2,??___fldiv+2
 11989  0028BC  C049  F051         	movff	___fldiv@b+3,??___fldiv+3
 11990  0028C0  3451               	rlcf	(??___fldiv+3)^0,w,c
 11991  0028C2  3251               	rrcf	(??___fldiv+3)^0,f,c
 11992  0028C4  3250               	rrcf	(??___fldiv+2)^0,f,c
 11993  0028C6  324F               	rrcf	(??___fldiv+1)^0,f,c
 11994  0028C8  324E               	rrcf	??___fldiv^0,f,c
 11995  0028CA  C04E  F046         	movff	??___fldiv,___fldiv@b
 11996  0028CE  C04F  F047         	movff	??___fldiv+1,___fldiv@b+1
 11997  0028D2  C050  F048         	movff	??___fldiv+2,___fldiv@b+2
 11998  0028D6  C051  F049         	movff	??___fldiv+3,___fldiv@b+3
 11999  0028DA  4A57               	infsnz	___fldiv@new_exp^0,f,c
 12000  0028DC  2A58               	incf	(___fldiv@new_exp+1)^0,f,c
 12001  0028DE                     l4776:
 12002  0028DE  FFFF               	dw	65535	; assembler added errata NOP
 12003  0028E0  BE58               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12004  0028E2  EF7B  F014         	goto	u5821
 12005  0028E6  5058               	movf	(___fldiv@new_exp+1)^0,w,c
 12006  0028E8  E109               	bnz	u5820
 12007  0028EA  2857               	incf	___fldiv@new_exp^0,w,c
 12008  0028EC  A0D8               	btfss	status,0,c
 12009  0028EE  EF7B  F014         	goto	u5821
 12010  0028F2  EF7E  F014         	goto	u5820
 12011  0028F6                     u5821:
 12012  0028F6  FFFF               	dw	65535	; assembler added errata NOP
 12013  0028F8  EF8A  F014         	goto	l4780
 12014  0028FC                     u5820:
 12015  0028FC  FFFF               	dw	65535	; assembler added errata NOP
 12016  0028FE  0E00               	movlw	0
 12017  002900  6E58               	movwf	(___fldiv@new_exp+1)^0,c
 12018  002902  6857               	setf	___fldiv@new_exp^0,c
 12019  002904  0E00               	movlw	0
 12020  002906  6E46               	movwf	___fldiv@b^0,c
 12021  002908  0E00               	movlw	0
 12022  00290A  6E47               	movwf	(___fldiv@b+1)^0,c
 12023  00290C  0E00               	movlw	0
 12024  00290E  6E48               	movwf	(___fldiv@b+2)^0,c
 12025  002910  0E00               	movlw	0
 12026  002912  6E49               	movwf	(___fldiv@b+3)^0,c
 12027  002914                     l4780:
 12028  002914  FFFF               	dw	65535	; assembler added errata NOP
 12029  002916  BE58               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12030  002918  EF99  F014         	goto	u5830
 12031  00291C  5058               	movf	(___fldiv@new_exp+1)^0,w,c
 12032  00291E  E106               	bnz	u5831
 12033  002920  0457               	decf	___fldiv@new_exp^0,w,c
 12034  002922  B0D8               	btfsc	status,0,c
 12035  002924  EF96  F014         	goto	u5831
 12036  002928  EF99  F014         	goto	u5830
 12037  00292C                     u5831:
 12038  00292C  FFFF               	dw	65535	; assembler added errata NOP
 12039  00292E  EFA8  F014         	goto	l4784
 12040  002932                     u5830:
 12041  002932  FFFF               	dw	65535	; assembler added errata NOP
 12042  002934  0E00               	movlw	0
 12043  002936  6E58               	movwf	(___fldiv@new_exp+1)^0,c
 12044  002938  0E00               	movlw	0
 12045  00293A  6E57               	movwf	___fldiv@new_exp^0,c
 12046  00293C  0E00               	movlw	0
 12047  00293E  6E46               	movwf	___fldiv@b^0,c
 12048  002940  0E00               	movlw	0
 12049  002942  6E47               	movwf	(___fldiv@b+1)^0,c
 12050  002944  0E00               	movlw	0
 12051  002946  6E48               	movwf	(___fldiv@b+2)^0,c
 12052  002948  0E00               	movlw	0
 12053  00294A  6E49               	movwf	(___fldiv@b+3)^0,c
 12054  00294C  0E00               	movlw	0
 12055  00294E  6E56               	movwf	___fldiv@sign^0,c
 12056  002950                     l4784:
 12057  002950  FFFF               	dw	65535	; assembler added errata NOP
 12058  002952  C057  F05D         	movff	___fldiv@new_exp,___fldiv@bexp
 12059  002956  A05D               	btfss	___fldiv@bexp^0,0,c
 12060  002958  EFB0  F014         	goto	u5841
 12061  00295C  EFB3  F014         	goto	u5840
 12062  002960                     u5841:
 12063  002960  FFFF               	dw	65535	; assembler added errata NOP
 12064  002962  EFB7  F014         	goto	l4790
 12065  002966                     u5840:
 12066  002966  FFFF               	dw	65535	; assembler added errata NOP
 12067  002968  8E48               	bsf	(___fldiv@b+2)^0,7,c
 12068  00296A  EFB9  F014         	goto	l4792
 12069  00296E                     l4790:
 12070  00296E  FFFF               	dw	65535	; assembler added errata NOP
 12071  002970  9E48               	bcf	(___fldiv@b+2)^0,7,c
 12072  002972                     l4792:
 12073  002972  FFFF               	dw	65535	; assembler added errata NOP
 12074  002974  90D8               	bcf	status,0,c
 12075  002976  305D               	rrcf	___fldiv@bexp^0,w,c
 12076  002978  6E49               	movwf	(___fldiv@b+3)^0,c
 12077  00297A  EF3D  F013         	goto	l4706
 12078  00297E                     l962:
 12079  00297E  FFFF               	dw	65535	; assembler added errata NOP
 12080  002980  0012               	return		;funcret
 12081  002982  FFFF               	dw	65535	; errata NOP
 12082  002984                     __end_of___fldiv:
 12083                           	callstack 0
 12084                           
 12085 ;; *************** function _init_USART *****************
 12086 ;; Defined at:
 12087 ;;		line 13 in file "serial_rs232.c"
 12088 ;; Parameters:    Size  Location     Type
 12089 ;;		None
 12090 ;; Auto vars:     Size  Location     Type
 12091 ;;		None
 12092 ;; Return value:  Size  Location     Type
 12093 ;;                  1    wreg      void 
 12094 ;; Registers used:
 12095 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12096 ;; Tracked objects:
 12097 ;;		On entry : 0/0
 12098 ;;		On exit  : 0/0
 12099 ;;		Unchanged: 0/0
 12100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12101 ;;      Params:         0       0       0       0       0       0       0
 12102 ;;      Locals:         0       0       0       0       0       0       0
 12103 ;;      Temps:          0       0       0       0       0       0       0
 12104 ;;      Totals:         0       0       0       0       0       0       0
 12105 ;;Total ram usage:        0 bytes
 12106 ;; Hardware stack levels used:    1
 12107 ;; Hardware stack levels required when called:    4
 12108 ;; This function calls:
 12109 ;;		___fltol
 12110 ;;		_roundf
 12111 ;; This function is called by:
 12112 ;;		_main
 12113 ;; This function uses a non-reentrant model
 12114 ;;
 12115                           
 12116                           	psect	text49
 12117  00682A                     __ptext49:
 12118                           	callstack 0
 12119  00682A                     _init_USART:
 12120                           	callstack 0
 12121  00682A  FFFF               	dw	65535	; assembler added errata NOP
 12122  00682C                     
 12123                           ;serial_rs232.c: 24:     SPBRG = roundf(((fosc / desired_baudrate) / 16) - 1);
 12124  00682C  0E55               	movlw	85
 12125  00682E  6E77               	movwf	roundf@x^0,c
 12126  006830  0E55               	movlw	85
 12127  006832  6E78               	movwf	(roundf@x+1)^0,c
 12128  006834  0EC8               	movlw	200
 12129  006836  6E79               	movwf	(roundf@x+2)^0,c
 12130  006838  0E41               	movlw	65
 12131  00683A  6E7A               	movwf	(roundf@x+3)^0,c
 12132  00683C  ECC2  F014         	call	_roundf	;wreg free
 12133  006840  C077  F0CA         	movff	?_roundf,___fltol@f1
 12134  006844  C078  F0CB         	movff	?_roundf+1,___fltol@f1+1
 12135  006848  C079  F0CC         	movff	?_roundf+2,___fltol@f1+2
 12136  00684C  C07A  F0CD         	movff	?_roundf+3,___fltol@f1+3
 12137  006850  EC59  F03D         	call	___fltol	;wreg free
 12138  006854  0100               	movlb	0	; () banked
 12139  006856  51CA               	movf	?___fltol& (0+255),w,b
 12140  006858  6EAF               	movwf	175,c	;volatile
 12141  00685A                     
 12142                           ; BSR set to: 0
 12143                           ;serial_rs232.c: 28:     TXSTAbits.TX9 = 0;
 12144  00685A  9CAC               	bcf	172,6,c	;volatile
 12145  00685C                     
 12146                           ; BSR set to: 0
 12147                           ;serial_rs232.c: 29:     TXSTAbits.TXEN = 1;
 12148  00685C  8AAC               	bsf	172,5,c	;volatile
 12149  00685E                     
 12150                           ; BSR set to: 0
 12151                           ;serial_rs232.c: 30:     TXSTAbits.SYNC =0;
 12152  00685E  98AC               	bcf	172,4,c	;volatile
 12153  006860                     
 12154                           ; BSR set to: 0
 12155                           ;serial_rs232.c: 31:     TXSTAbits.BRGH = 1;
 12156  006860  84AC               	bsf	172,2,c	;volatile
 12157  006862                     
 12158                           ; BSR set to: 0
 12159                           ;serial_rs232.c: 33:     RCSTAbits.SPEN = 1;
 12160  006862  8EAB               	bsf	171,7,c	;volatile
 12161  006864                     
 12162                           ; BSR set to: 0
 12163                           ;serial_rs232.c: 34:     RCSTAbits.RX9 = 0;
 12164  006864  9CAB               	bcf	171,6,c	;volatile
 12165  006866                     
 12166                           ; BSR set to: 0
 12167                           ;serial_rs232.c: 35:     RCSTAbits.CREN = 1;
 12168  006866  88AB               	bsf	171,4,c	;volatile
 12169  006868                     
 12170                           ; BSR set to: 0
 12171  006868  0012               	return		;funcret
 12172  00686A  FFFF               	dw	65535	; errata NOP
 12173  00686C                     __end_of_init_USART:
 12174                           	callstack 0
 12175                           
 12176 ;; *************** function _roundf *****************
 12177 ;; Defined at:
 12178 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\roundf.c"
 12179 ;; Parameters:    Size  Location     Type
 12180 ;;  x               4  118[COMRAM] float 
 12181 ;; Auto vars:     Size  Location     Type
 12182 ;;  y               4   14[BANK0 ] float 
 12183 ;;  u               4   10[BANK0 ] struct .
 12184 ;;  e               2    4[BANK0 ] int 
 12185 ;; Return value:  Size  Location     Type
 12186 ;;                  4  118[COMRAM] float 
 12187 ;; Registers used:
 12188 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12189 ;; Tracked objects:
 12190 ;;		On entry : 0/0
 12191 ;;		On exit  : 0/0
 12192 ;;		Unchanged: 0/0
 12193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12194 ;;      Params:         4       0       0       0       0       0       0
 12195 ;;      Locals:         0      18       0       0       0       0       0
 12196 ;;      Temps:          4       0       0       0       0       0       0
 12197 ;;      Totals:         8      18       0       0       0       0       0
 12198 ;;Total ram usage:       26 bytes
 12199 ;; Hardware stack levels used:    1
 12200 ;; Hardware stack levels required when called:    3
 12201 ;; This function calls:
 12202 ;;		___fladd
 12203 ;;		___flge
 12204 ;;		___flmul
 12205 ;;		___flneg
 12206 ;;		___flsub
 12207 ;; This function is called by:
 12208 ;;		_init_USART
 12209 ;; This function uses a non-reentrant model
 12210 ;;
 12211                           
 12212                           	psect	text50
 12213  002984                     __ptext50:
 12214                           	callstack 0
 12215  002984                     _roundf:
 12216                           	callstack 0
 12217  002984  FFFF               	dw	65535	; assembler added errata NOP
 12218  002986  C080  F0C2         	movff	roundf@F525,roundf@u
 12219  00298A  C081  F0C3         	movff	roundf@F525+1,roundf@u+1
 12220  00298E  C082  F0C4         	movff	roundf@F525+2,roundf@u+2
 12221  002992  C083  F0C5         	movff	roundf@F525+3,roundf@u+3
 12222  002996  C077  F0C2         	movff	roundf@x,roundf@u
 12223  00299A  C078  F0C3         	movff	roundf@x+1,roundf@u+1
 12224  00299E  C079  F0C4         	movff	roundf@x+2,roundf@u+2
 12225  0029A2  C07A  F0C5         	movff	roundf@x+3,roundf@u+3
 12226  0029A6  C0C2  F07B         	movff	roundf@u,??_roundf
 12227  0029AA  C0C3  F07C         	movff	roundf@u+1,??_roundf+1
 12228  0029AE  C0C4  F07D         	movff	roundf@u+2,??_roundf+2
 12229  0029B2  C0C5  F07E         	movff	roundf@u+3,??_roundf+3
 12230  0029B6  0E18               	movlw	24
 12231  0029B8  EFE4  F014         	goto	u6280
 12232  0029BC                     u6285:
 12233  0029BC  FFFF               	dw	65535	; assembler added errata NOP
 12234  0029BE  90D8               	bcf	status,0,c
 12235  0029C0  327E               	rrcf	(??_roundf+3)^0,f,c
 12236  0029C2  327D               	rrcf	(??_roundf+2)^0,f,c
 12237  0029C4  327C               	rrcf	(??_roundf+1)^0,f,c
 12238  0029C6  327B               	rrcf	??_roundf^0,f,c
 12239  0029C8                     u6280:
 12240  0029C8  FFFF               	dw	65535	; assembler added errata NOP
 12241  0029CA  2EE8               	decfsz	wreg,f,c
 12242  0029CC  EFDE  F014         	goto	u6285
 12243  0029D0  507B               	movf	??_roundf^0,w,c
 12244  0029D2  0100               	movlb	0	; () banked
 12245  0029D4  6FBC               	movwf	roundf@e& (0+255),b
 12246  0029D6  6BBD               	clrf	(roundf@e+1)& (0+255),b
 12247  0029D8  BFBD               	btfsc	(roundf@e+1)& (0+255),7,b
 12248  0029DA  EFF8  F014         	goto	u6291
 12249  0029DE  51BD               	movf	(roundf@e+1)& (0+255),w,b
 12250  0029E0  E10A               	bnz	u6290
 12251  0029E2  0E96               	movlw	150
 12252  0029E4  5DBC               	subwf	roundf@e& (0+255),w,b
 12253  0029E6  A0D8               	btfss	status,0,c
 12254  0029E8  EFF8  F014         	goto	u6291
 12255  0029EC  EFFB  F014         	goto	u6290
 12256  0029F0                     u6291:
 12257  0029F0  FFFF               	dw	65535	; assembler added errata NOP
 12258  0029F2  EF06  F015         	goto	l5070
 12259  0029F6                     u6290:
 12260  0029F6  FFFF               	dw	65535	; assembler added errata NOP
 12261  0029F8                     
 12262                           ; BSR set to: 0
 12263  0029F8  C077  F077         	movff	roundf@x,?_roundf
 12264  0029FC  C078  F078         	movff	roundf@x+1,?_roundf+1
 12265  002A00  C079  F079         	movff	roundf@x+2,?_roundf+2
 12266  002A04  C07A  F07A         	movff	roundf@x+3,?_roundf+3
 12267  002A08  EFB4  F016         	goto	l1066
 12268  002A0C                     l5070:
 12269  002A0C  FFFF               	dw	65535	; assembler added errata NOP
 12270                           
 12271                           ; BSR set to: 0
 12272  002A0E  C0C2  F07B         	movff	roundf@u,??_roundf
 12273  002A12  C0C3  F07C         	movff	roundf@u+1,??_roundf+1
 12274  002A16  C0C4  F07D         	movff	roundf@u+2,??_roundf+2
 12275  002A1A  C0C5  F07E         	movff	roundf@u+3,??_roundf+3
 12276  002A1E  0E20               	movlw	32
 12277  002A20  EF18  F015         	goto	u6300
 12278  002A24                     u6305:
 12279  002A24  FFFF               	dw	65535	; assembler added errata NOP
 12280  002A26  90D8               	bcf	status,0,c
 12281  002A28  327E               	rrcf	(??_roundf+3)^0,f,c
 12282  002A2A  327D               	rrcf	(??_roundf+2)^0,f,c
 12283  002A2C  327C               	rrcf	(??_roundf+1)^0,f,c
 12284  002A2E  327B               	rrcf	??_roundf^0,f,c
 12285  002A30                     u6300:
 12286  002A30  FFFF               	dw	65535	; assembler added errata NOP
 12287  002A32  2EE8               	decfsz	wreg,f,c
 12288  002A34  EF12  F015         	goto	u6305
 12289  002A38  507B               	movf	??_roundf^0,w,c
 12290  002A3A  107C               	iorwf	(??_roundf+1)^0,w,c
 12291  002A3C  107D               	iorwf	(??_roundf+2)^0,w,c
 12292  002A3E  107E               	iorwf	(??_roundf+3)^0,w,c
 12293  002A40  B4D8               	btfsc	status,2,c
 12294  002A42  EF25  F015         	goto	u6311
 12295  002A46  EF28  F015         	goto	u6310
 12296  002A4A                     u6311:
 12297  002A4A  FFFF               	dw	65535	; assembler added errata NOP
 12298  002A4C  EF3B  F015         	goto	l5074
 12299  002A50                     u6310:
 12300  002A50  FFFF               	dw	65535	; assembler added errata NOP
 12301  002A52                     
 12302                           ; BSR set to: 0
 12303  002A52  C077  F001         	movff	roundf@x,___flneg@f1
 12304  002A56  C078  F002         	movff	roundf@x+1,___flneg@f1+1
 12305  002A5A  C079  F003         	movff	roundf@x+2,___flneg@f1+2
 12306  002A5E  C07A  F004         	movff	roundf@x+3,___flneg@f1+3
 12307  002A62  ECF4  F033         	call	___flneg	;wreg free
 12308  002A66  C001  F077         	movff	?___flneg,roundf@x
 12309  002A6A  C002  F078         	movff	?___flneg+1,roundf@x+1
 12310  002A6E  C003  F079         	movff	?___flneg+2,roundf@x+2
 12311  002A72  C004  F07A         	movff	?___flneg+3,roundf@x+3
 12312  002A76                     l5074:
 12313  002A76  FFFF               	dw	65535	; assembler added errata NOP
 12314  002A78  0100               	movlb	0	; () banked
 12315  002A7A  BFBD               	btfsc	(roundf@e+1)& (0+255),7,b
 12316  002A7C  EF4C  F015         	goto	u6320
 12317  002A80  51BD               	movf	(roundf@e+1)& (0+255),w,b
 12318  002A82  E107               	bnz	u6321
 12319  002A84  0E7E               	movlw	126
 12320  002A86  5DBC               	subwf	roundf@e& (0+255),w,b
 12321  002A88  B0D8               	btfsc	status,0,c
 12322  002A8A  EF49  F015         	goto	u6321
 12323  002A8E  EF4C  F015         	goto	u6320
 12324  002A92                     u6321:
 12325  002A92  FFFF               	dw	65535	; assembler added errata NOP
 12326  002A94  EF69  F015         	goto	l5080
 12327  002A98                     u6320:
 12328  002A98  FFFF               	dw	65535	; assembler added errata NOP
 12329  002A9A                     
 12330                           ; BSR set to: 0
 12331  002A9A  C0C2  F02D         	movff	roundf@u,___flmul@b
 12332  002A9E  C0C3  F02E         	movff	roundf@u+1,___flmul@b+1
 12333  002AA2  C0C4  F02F         	movff	roundf@u+2,___flmul@b+2
 12334  002AA6  C0C5  F030         	movff	roundf@u+3,___flmul@b+3
 12335  002AAA  0E00               	movlw	0
 12336  002AAC  6E31               	movwf	___flmul@a^0,c
 12337  002AAE  0E00               	movlw	0
 12338  002AB0  6E32               	movwf	(___flmul@a+1)^0,c
 12339  002AB2  0E00               	movlw	0
 12340  002AB4  6E33               	movwf	(___flmul@a+2)^0,c
 12341  002AB6  0E00               	movlw	0
 12342  002AB8  6E34               	movwf	(___flmul@a+3)^0,c
 12343  002ABA  EC57  F010         	call	___flmul	;wreg free
 12344  002ABE  C02D  F077         	movff	?___flmul,?_roundf
 12345  002AC2  C02E  F078         	movff	?___flmul+1,?_roundf+1
 12346  002AC6  C02F  F079         	movff	?___flmul+2,?_roundf+2
 12347  002ACA  C030  F07A         	movff	?___flmul+3,?_roundf+3
 12348  002ACE  EFB4  F016         	goto	l1066
 12349  002AD2                     l5080:
 12350  002AD2  FFFF               	dw	65535	; assembler added errata NOP
 12351                           
 12352                           ; BSR set to: 0
 12353  002AD4  0E00               	movlw	0
 12354  002AD6  6E63               	movwf	___fladd@a^0,c
 12355  002AD8  0E00               	movlw	0
 12356  002ADA  6E64               	movwf	(___fladd@a+1)^0,c
 12357  002ADC  0E00               	movlw	0
 12358  002ADE  6E65               	movwf	(___fladd@a+2)^0,c
 12359  002AE0  0E4B               	movlw	75
 12360  002AE2  6E66               	movwf	(___fladd@a+3)^0,c
 12361  002AE4  C077  F05F         	movff	roundf@x,___fladd@b
 12362  002AE8  C078  F060         	movff	roundf@x+1,___fladd@b+1
 12363  002AEC  C079  F061         	movff	roundf@x+2,___fladd@b+2
 12364  002AF0  C07A  F062         	movff	roundf@x+3,___fladd@b+3
 12365  002AF4  EC83  F00D         	call	___fladd	;wreg free
 12366  002AF8  C05F  F0BE         	movff	?___fladd,_roundf$2132
 12367  002AFC  C060  F0BF         	movff	?___fladd+1,_roundf$2132+1
 12368  002B00  C061  F0C0         	movff	?___fladd+2,_roundf$2132+2
 12369  002B04  C062  F0C1         	movff	?___fladd+3,_roundf$2132+3
 12370  002B08  0E00               	movlw	0
 12371  002B0A  6E63               	movwf	___fladd@a^0,c
 12372  002B0C  0E00               	movlw	0
 12373  002B0E  6E64               	movwf	(___fladd@a+1)^0,c
 12374  002B10  0E00               	movlw	0
 12375  002B12  6E65               	movwf	(___fladd@a+2)^0,c
 12376  002B14  0ECB               	movlw	203
 12377  002B16  6E66               	movwf	(___fladd@a+3)^0,c
 12378  002B18  C0BE  F05F         	movff	_roundf$2132,___fladd@b
 12379  002B1C  C0BF  F060         	movff	_roundf$2132+1,___fladd@b+1
 12380  002B20  C0C0  F061         	movff	_roundf$2132+2,___fladd@b+2
 12381  002B24  C0C1  F062         	movff	_roundf$2132+3,___fladd@b+3
 12382  002B28  EC83  F00D         	call	___fladd	;wreg free
 12383  002B2C  C05F  F0B8         	movff	?___fladd,_roundf$2133
 12384  002B30  C060  F0B9         	movff	?___fladd+1,_roundf$2133+1
 12385  002B34  C061  F0BA         	movff	?___fladd+2,_roundf$2133+2
 12386  002B38  C062  F0BB         	movff	?___fladd+3,_roundf$2133+3
 12387  002B3C  C0B8  F06F         	movff	_roundf$2133,___flsub@b
 12388  002B40  C0B9  F070         	movff	_roundf$2133+1,___flsub@b+1
 12389  002B44  C0BA  F071         	movff	_roundf$2133+2,___flsub@b+2
 12390  002B48  C0BB  F072         	movff	_roundf$2133+3,___flsub@b+3
 12391  002B4C  C077  F073         	movff	roundf@x,___flsub@a
 12392  002B50  C078  F074         	movff	roundf@x+1,___flsub@a+1
 12393  002B54  C079  F075         	movff	roundf@x+2,___flsub@a+2
 12394  002B58  C07A  F076         	movff	roundf@x+3,___flsub@a+3
 12395  002B5C  ECBC  F034         	call	___flsub	;wreg free
 12396  002B60  C06F  F0C6         	movff	?___flsub,roundf@y
 12397  002B64  C070  F0C7         	movff	?___flsub+1,roundf@y+1
 12398  002B68  C071  F0C8         	movff	?___flsub+2,roundf@y+2
 12399  002B6C  C072  F0C9         	movff	?___flsub+3,roundf@y+3
 12400  002B70  0E00               	movlw	0
 12401  002B72  6E01               	movwf	___flge@ff1^0,c
 12402  002B74  0E00               	movlw	0
 12403  002B76  6E02               	movwf	(___flge@ff1+1)^0,c
 12404  002B78  0E00               	movlw	0
 12405  002B7A  6E03               	movwf	(___flge@ff1+2)^0,c
 12406  002B7C  0E3F               	movlw	63
 12407  002B7E  6E04               	movwf	(___flge@ff1+3)^0,c
 12408  002B80  C0C6  F005         	movff	roundf@y,___flge@ff2
 12409  002B84  C0C7  F006         	movff	roundf@y+1,___flge@ff2+1
 12410  002B88  C0C8  F007         	movff	roundf@y+2,___flge@ff2+2
 12411  002B8C  C0C9  F008         	movff	roundf@y+3,___flge@ff2+3
 12412  002B90  EC31  F03C         	call	___flge	;wreg free
 12413  002B94  B0D8               	btfsc	status,0,c
 12414  002B96  EFCF  F015         	goto	u6331
 12415  002B9A  EFD2  F015         	goto	u6330
 12416  002B9E                     u6331:
 12417  002B9E  FFFF               	dw	65535	; assembler added errata NOP
 12418  002BA0  EF09  F016         	goto	l5084
 12419  002BA4                     u6330:
 12420  002BA4  FFFF               	dw	65535	; assembler added errata NOP
 12421  002BA6  C077  F063         	movff	roundf@x,___fladd@a
 12422  002BAA  C078  F064         	movff	roundf@x+1,___fladd@a+1
 12423  002BAE  C079  F065         	movff	roundf@x+2,___fladd@a+2
 12424  002BB2  C07A  F066         	movff	roundf@x+3,___fladd@a+3
 12425  002BB6  C0C6  F05F         	movff	roundf@y,___fladd@b
 12426  002BBA  C0C7  F060         	movff	roundf@y+1,___fladd@b+1
 12427  002BBE  C0C8  F061         	movff	roundf@y+2,___fladd@b+2
 12428  002BC2  C0C9  F062         	movff	roundf@y+3,___fladd@b+3
 12429  002BC6  EC83  F00D         	call	___fladd	;wreg free
 12430  002BCA  C05F  F0BE         	movff	?___fladd,_roundf$2132
 12431  002BCE  C060  F0BF         	movff	?___fladd+1,_roundf$2132+1
 12432  002BD2  C061  F0C0         	movff	?___fladd+2,_roundf$2132+2
 12433  002BD6  C062  F0C1         	movff	?___fladd+3,_roundf$2132+3
 12434  002BDA  C0BE  F05F         	movff	_roundf$2132,___fladd@b
 12435  002BDE  C0BF  F060         	movff	_roundf$2132+1,___fladd@b+1
 12436  002BE2  C0C0  F061         	movff	_roundf$2132+2,___fladd@b+2
 12437  002BE6  C0C1  F062         	movff	_roundf$2132+3,___fladd@b+3
 12438  002BEA  0E00               	movlw	0
 12439  002BEC  6E63               	movwf	___fladd@a^0,c
 12440  002BEE  0E00               	movlw	0
 12441  002BF0  6E64               	movwf	(___fladd@a+1)^0,c
 12442  002BF2  0E80               	movlw	128
 12443  002BF4  6E65               	movwf	(___fladd@a+2)^0,c
 12444  002BF6  0EBF               	movlw	191
 12445  002BF8  6E66               	movwf	(___fladd@a+3)^0,c
 12446  002BFA  EC83  F00D         	call	___fladd	;wreg free
 12447  002BFE  C05F  F0C6         	movff	?___fladd,roundf@y
 12448  002C02  C060  F0C7         	movff	?___fladd+1,roundf@y+1
 12449  002C06  C061  F0C8         	movff	?___fladd+2,roundf@y+2
 12450  002C0A  C062  F0C9         	movff	?___fladd+3,roundf@y+3
 12451  002C0E  EF76  F016         	goto	l5090
 12452  002C12                     l5084:
 12453  002C12  FFFF               	dw	65535	; assembler added errata NOP
 12454  002C14  0E00               	movlw	0
 12455  002C16  6E01               	movwf	___flge@ff1^0,c
 12456  002C18  0E00               	movlw	0
 12457  002C1A  6E02               	movwf	(___flge@ff1+1)^0,c
 12458  002C1C  0E00               	movlw	0
 12459  002C1E  6E03               	movwf	(___flge@ff1+2)^0,c
 12460  002C20  0EBF               	movlw	191
 12461  002C22  6E04               	movwf	(___flge@ff1+3)^0,c
 12462  002C24  C0C6  F005         	movff	roundf@y,___flge@ff2
 12463  002C28  C0C7  F006         	movff	roundf@y+1,___flge@ff2+1
 12464  002C2C  C0C8  F007         	movff	roundf@y+2,___flge@ff2+2
 12465  002C30  C0C9  F008         	movff	roundf@y+3,___flge@ff2+3
 12466  002C34  EC31  F03C         	call	___flge	;wreg free
 12467  002C38  A0D8               	btfss	status,0,c
 12468  002C3A  EF21  F016         	goto	u6341
 12469  002C3E  EF24  F016         	goto	u6340
 12470  002C42                     u6341:
 12471  002C42  FFFF               	dw	65535	; assembler added errata NOP
 12472  002C44  EF5B  F016         	goto	l5088
 12473  002C48                     u6340:
 12474  002C48  FFFF               	dw	65535	; assembler added errata NOP
 12475  002C4A  C077  F063         	movff	roundf@x,___fladd@a
 12476  002C4E  C078  F064         	movff	roundf@x+1,___fladd@a+1
 12477  002C52  C079  F065         	movff	roundf@x+2,___fladd@a+2
 12478  002C56  C07A  F066         	movff	roundf@x+3,___fladd@a+3
 12479  002C5A  C0C6  F05F         	movff	roundf@y,___fladd@b
 12480  002C5E  C0C7  F060         	movff	roundf@y+1,___fladd@b+1
 12481  002C62  C0C8  F061         	movff	roundf@y+2,___fladd@b+2
 12482  002C66  C0C9  F062         	movff	roundf@y+3,___fladd@b+3
 12483  002C6A  EC83  F00D         	call	___fladd	;wreg free
 12484  002C6E  C05F  F0BE         	movff	?___fladd,_roundf$2132
 12485  002C72  C060  F0BF         	movff	?___fladd+1,_roundf$2132+1
 12486  002C76  C061  F0C0         	movff	?___fladd+2,_roundf$2132+2
 12487  002C7A  C062  F0C1         	movff	?___fladd+3,_roundf$2132+3
 12488  002C7E  C0BE  F05F         	movff	_roundf$2132,___fladd@b
 12489  002C82  C0BF  F060         	movff	_roundf$2132+1,___fladd@b+1
 12490  002C86  C0C0  F061         	movff	_roundf$2132+2,___fladd@b+2
 12491  002C8A  C0C1  F062         	movff	_roundf$2132+3,___fladd@b+3
 12492  002C8E  0E00               	movlw	0
 12493  002C90  6E63               	movwf	___fladd@a^0,c
 12494  002C92  0E00               	movlw	0
 12495  002C94  6E64               	movwf	(___fladd@a+1)^0,c
 12496  002C96  0E80               	movlw	128
 12497  002C98  6E65               	movwf	(___fladd@a+2)^0,c
 12498  002C9A  0E3F               	movlw	63
 12499  002C9C  6E66               	movwf	(___fladd@a+3)^0,c
 12500  002C9E  EC83  F00D         	call	___fladd	;wreg free
 12501  002CA2  C05F  F0C6         	movff	?___fladd,roundf@y
 12502  002CA6  C060  F0C7         	movff	?___fladd+1,roundf@y+1
 12503  002CAA  C061  F0C8         	movff	?___fladd+2,roundf@y+2
 12504  002CAE  C062  F0C9         	movff	?___fladd+3,roundf@y+3
 12505  002CB2  EF76  F016         	goto	l5090
 12506  002CB6                     l5088:
 12507  002CB6  FFFF               	dw	65535	; assembler added errata NOP
 12508  002CB8  C0C6  F05F         	movff	roundf@y,___fladd@b
 12509  002CBC  C0C7  F060         	movff	roundf@y+1,___fladd@b+1
 12510  002CC0  C0C8  F061         	movff	roundf@y+2,___fladd@b+2
 12511  002CC4  C0C9  F062         	movff	roundf@y+3,___fladd@b+3
 12512  002CC8  C077  F063         	movff	roundf@x,___fladd@a
 12513  002CCC  C078  F064         	movff	roundf@x+1,___fladd@a+1
 12514  002CD0  C079  F065         	movff	roundf@x+2,___fladd@a+2
 12515  002CD4  C07A  F066         	movff	roundf@x+3,___fladd@a+3
 12516  002CD8  EC83  F00D         	call	___fladd	;wreg free
 12517  002CDC  C05F  F0C6         	movff	?___fladd,roundf@y
 12518  002CE0  C060  F0C7         	movff	?___fladd+1,roundf@y+1
 12519  002CE4  C061  F0C8         	movff	?___fladd+2,roundf@y+2
 12520  002CE8  C062  F0C9         	movff	?___fladd+3,roundf@y+3
 12521  002CEC                     l5090:
 12522  002CEC  FFFF               	dw	65535	; assembler added errata NOP
 12523  002CEE  C0C2  F07B         	movff	roundf@u,??_roundf
 12524  002CF2  C0C3  F07C         	movff	roundf@u+1,??_roundf+1
 12525  002CF6  C0C4  F07D         	movff	roundf@u+2,??_roundf+2
 12526  002CFA  C0C5  F07E         	movff	roundf@u+3,??_roundf+3
 12527  002CFE  0E20               	movlw	32
 12528  002D00  EF88  F016         	goto	u6350
 12529  002D04                     u6355:
 12530  002D04  FFFF               	dw	65535	; assembler added errata NOP
 12531  002D06  90D8               	bcf	status,0,c
 12532  002D08  327E               	rrcf	(??_roundf+3)^0,f,c
 12533  002D0A  327D               	rrcf	(??_roundf+2)^0,f,c
 12534  002D0C  327C               	rrcf	(??_roundf+1)^0,f,c
 12535  002D0E  327B               	rrcf	??_roundf^0,f,c
 12536  002D10                     u6350:
 12537  002D10  FFFF               	dw	65535	; assembler added errata NOP
 12538  002D12  2EE8               	decfsz	wreg,f,c
 12539  002D14  EF82  F016         	goto	u6355
 12540  002D18  507B               	movf	??_roundf^0,w,c
 12541  002D1A  107C               	iorwf	(??_roundf+1)^0,w,c
 12542  002D1C  107D               	iorwf	(??_roundf+2)^0,w,c
 12543  002D1E  107E               	iorwf	(??_roundf+3)^0,w,c
 12544  002D20  B4D8               	btfsc	status,2,c
 12545  002D22  EF95  F016         	goto	u6361
 12546  002D26  EF98  F016         	goto	u6360
 12547  002D2A                     u6361:
 12548  002D2A  FFFF               	dw	65535	; assembler added errata NOP
 12549  002D2C  EFAB  F016         	goto	l5094
 12550  002D30                     u6360:
 12551  002D30  FFFF               	dw	65535	; assembler added errata NOP
 12552  002D32  C0C6  F001         	movff	roundf@y,___flneg@f1
 12553  002D36  C0C7  F002         	movff	roundf@y+1,___flneg@f1+1
 12554  002D3A  C0C8  F003         	movff	roundf@y+2,___flneg@f1+2
 12555  002D3E  C0C9  F004         	movff	roundf@y+3,___flneg@f1+3
 12556  002D42  ECF4  F033         	call	___flneg	;wreg free
 12557  002D46  C001  F0C6         	movff	?___flneg,roundf@y
 12558  002D4A  C002  F0C7         	movff	?___flneg+1,roundf@y+1
 12559  002D4E  C003  F0C8         	movff	?___flneg+2,roundf@y+2
 12560  002D52  C004  F0C9         	movff	?___flneg+3,roundf@y+3
 12561  002D56                     l5094:
 12562  002D56  FFFF               	dw	65535	; assembler added errata NOP
 12563  002D58  C0C6  F077         	movff	roundf@y,?_roundf
 12564  002D5C  C0C7  F078         	movff	roundf@y+1,?_roundf+1
 12565  002D60  C0C8  F079         	movff	roundf@y+2,?_roundf+2
 12566  002D64  C0C9  F07A         	movff	roundf@y+3,?_roundf+3
 12567  002D68                     l1066:
 12568  002D68  FFFF               	dw	65535	; assembler added errata NOP
 12569  002D6A  0012               	return		;funcret
 12570  002D6C  FFFF               	dw	65535	; errata NOP
 12571  002D6E                     __end_of_roundf:
 12572                           	callstack 0
 12573                           
 12574 ;; *************** function ___flsub *****************
 12575 ;; Defined at:
 12576 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 12577 ;; Parameters:    Size  Location     Type
 12578 ;;  b               4  110[COMRAM] float 
 12579 ;;  a               4  114[COMRAM] float 
 12580 ;; Auto vars:     Size  Location     Type
 12581 ;;		None
 12582 ;; Return value:  Size  Location     Type
 12583 ;;                  4  110[COMRAM] float 
 12584 ;; Registers used:
 12585 ;;		wreg, status,2, status,0, cstack
 12586 ;; Tracked objects:
 12587 ;;		On entry : 0/0
 12588 ;;		On exit  : 0/0
 12589 ;;		Unchanged: 0/0
 12590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12591 ;;      Params:         8       0       0       0       0       0       0
 12592 ;;      Locals:         0       0       0       0       0       0       0
 12593 ;;      Temps:          0       0       0       0       0       0       0
 12594 ;;      Totals:         8       0       0       0       0       0       0
 12595 ;;Total ram usage:        8 bytes
 12596 ;; Hardware stack levels used:    1
 12597 ;; Hardware stack levels required when called:    2
 12598 ;; This function calls:
 12599 ;;		___fladd
 12600 ;; This function is called by:
 12601 ;;		_roundf
 12602 ;; This function uses a non-reentrant model
 12603 ;;
 12604                           
 12605                           	psect	text51
 12606  006978                     __ptext51:
 12607                           	callstack 0
 12608  006978                     ___flsub:
 12609                           	callstack 0
 12610  006978  FFFF               	dw	65535	; assembler added errata NOP
 12611  00697A  0E00               	movlw	0
 12612  00697C  1A73               	xorwf	___flsub@a^0,f,c
 12613  00697E  0E00               	movlw	0
 12614  006980  1A74               	xorwf	(___flsub@a+1)^0,f,c
 12615  006982  0E00               	movlw	0
 12616  006984  1A75               	xorwf	(___flsub@a+2)^0,f,c
 12617  006986  0E80               	movlw	128
 12618  006988  1A76               	xorwf	(___flsub@a+3)^0,f,c
 12619  00698A  C06F  F05F         	movff	___flsub@b,___fladd@b
 12620  00698E  C070  F060         	movff	___flsub@b+1,___fladd@b+1
 12621  006992  C071  F061         	movff	___flsub@b+2,___fladd@b+2
 12622  006996  C072  F062         	movff	___flsub@b+3,___fladd@b+3
 12623  00699A  C073  F063         	movff	___flsub@a,___fladd@a
 12624  00699E  C074  F064         	movff	___flsub@a+1,___fladd@a+1
 12625  0069A2  C075  F065         	movff	___flsub@a+2,___fladd@a+2
 12626  0069A6  C076  F066         	movff	___flsub@a+3,___fladd@a+3
 12627  0069AA  EC83  F00D         	call	___fladd	;wreg free
 12628  0069AE  C05F  F06F         	movff	?___fladd,?___flsub
 12629  0069B2  C060  F070         	movff	?___fladd+1,?___flsub+1
 12630  0069B6  C061  F071         	movff	?___fladd+2,?___flsub+2
 12631  0069BA  C062  F072         	movff	?___fladd+3,?___flsub+3
 12632  0069BE  0012               	return		;funcret
 12633  0069C0  FFFF               	dw	65535	; errata NOP
 12634  0069C2                     __end_of___flsub:
 12635                           	callstack 0
 12636                           
 12637 ;; *************** function ___fladd *****************
 12638 ;; Defined at:
 12639 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 12640 ;; Parameters:    Size  Location     Type
 12641 ;;  b               4   94[COMRAM] float 
 12642 ;;  a               4   98[COMRAM] float 
 12643 ;; Auto vars:     Size  Location     Type
 12644 ;;  grs             1  109[COMRAM] unsigned char 
 12645 ;;  bexp            1  108[COMRAM] unsigned char 
 12646 ;;  aexp            1  107[COMRAM] unsigned char 
 12647 ;;  signs           1  106[COMRAM] unsigned char 
 12648 ;; Return value:  Size  Location     Type
 12649 ;;                  4   94[COMRAM] unsigned char 
 12650 ;; Registers used:
 12651 ;;		wreg, status,2, status,0
 12652 ;; Tracked objects:
 12653 ;;		On entry : 0/0
 12654 ;;		On exit  : 0/0
 12655 ;;		Unchanged: 0/0
 12656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12657 ;;      Params:         8       0       0       0       0       0       0
 12658 ;;      Locals:         4       0       0       0       0       0       0
 12659 ;;      Temps:          4       0       0       0       0       0       0
 12660 ;;      Totals:        16       0       0       0       0       0       0
 12661 ;;Total ram usage:       16 bytes
 12662 ;; Hardware stack levels used:    1
 12663 ;; Hardware stack levels required when called:    1
 12664 ;; This function calls:
 12665 ;;		Nothing
 12666 ;; This function is called by:
 12667 ;;		_init_timer_2
 12668 ;;		___flsub
 12669 ;;		_roundf
 12670 ;; This function uses a non-reentrant model
 12671 ;;
 12672                           
 12673                           	psect	text52
 12674  001B06                     __ptext52:
 12675                           	callstack 0
 12676  001B06                     ___fladd:
 12677                           	callstack 0
 12678  001B06  FFFF               	dw	65535	; assembler added errata NOP
 12679  001B08  5062               	movf	(___fladd@b+3)^0,w,c
 12680  001B0A  0B80               	andlw	128
 12681  001B0C  6E6B               	movwf	___fladd@signs^0,c
 12682  001B0E  5062               	movf	(___fladd@b+3)^0,w,c
 12683  001B10  2462               	addwf	(___fladd@b+3)^0,w,c
 12684  001B12  6E6D               	movwf	___fladd@bexp^0,c
 12685  001B14  AE61               	btfss	(___fladd@b+2)^0,7,c
 12686  001B16  EF8F  F00D         	goto	u4741
 12687  001B1A  EF92  F00D         	goto	u4740
 12688  001B1E                     u4741:
 12689  001B1E  FFFF               	dw	65535	; assembler added errata NOP
 12690  001B20  EF94  F00D         	goto	l4132
 12691  001B24                     u4740:
 12692  001B24  FFFF               	dw	65535	; assembler added errata NOP
 12693  001B26  806D               	bsf	___fladd@bexp^0,0,c
 12694  001B28                     l4132:
 12695  001B28  FFFF               	dw	65535	; assembler added errata NOP
 12696  001B2A  506D               	movf	___fladd@bexp^0,w,c
 12697  001B2C  B4D8               	btfsc	status,2,c
 12698  001B2E  EF9B  F00D         	goto	u4751
 12699  001B32  EF9E  F00D         	goto	u4750
 12700  001B36                     u4751:
 12701  001B36  FFFF               	dw	65535	; assembler added errata NOP
 12702  001B38  EFB7  F00D         	goto	l4142
 12703  001B3C                     u4750:
 12704  001B3C  FFFF               	dw	65535	; assembler added errata NOP
 12705  001B3E  286D               	incf	___fladd@bexp^0,w,c
 12706  001B40  A4D8               	btfss	status,2,c
 12707  001B42  EFA5  F00D         	goto	u4761
 12708  001B46  EFA8  F00D         	goto	u4760
 12709  001B4A                     u4761:
 12710  001B4A  FFFF               	dw	65535	; assembler added errata NOP
 12711  001B4C  EFB1  F00D         	goto	l4138
 12712  001B50                     u4760:
 12713  001B50  FFFF               	dw	65535	; assembler added errata NOP
 12714  001B52  0E00               	movlw	0
 12715  001B54  6E5F               	movwf	___fladd@b^0,c
 12716  001B56  0E00               	movlw	0
 12717  001B58  6E60               	movwf	(___fladd@b+1)^0,c
 12718  001B5A  0E00               	movlw	0
 12719  001B5C  6E61               	movwf	(___fladd@b+2)^0,c
 12720  001B5E  0E00               	movlw	0
 12721  001B60  6E62               	movwf	(___fladd@b+3)^0,c
 12722  001B62                     l4138:
 12723  001B62  FFFF               	dw	65535	; assembler added errata NOP
 12724  001B64  8E61               	bsf	(___fladd@b+2)^0,7,c
 12725  001B66  0E00               	movlw	0
 12726  001B68  6E62               	movwf	(___fladd@b+3)^0,c
 12727  001B6A  EFC0  F00D         	goto	l4144
 12728  001B6E                     l4142:
 12729  001B6E  FFFF               	dw	65535	; assembler added errata NOP
 12730  001B70  0E00               	movlw	0
 12731  001B72  6E5F               	movwf	___fladd@b^0,c
 12732  001B74  0E00               	movlw	0
 12733  001B76  6E60               	movwf	(___fladd@b+1)^0,c
 12734  001B78  0E00               	movlw	0
 12735  001B7A  6E61               	movwf	(___fladd@b+2)^0,c
 12736  001B7C  0E00               	movlw	0
 12737  001B7E  6E62               	movwf	(___fladd@b+3)^0,c
 12738  001B80                     l4144:
 12739  001B80  FFFF               	dw	65535	; assembler added errata NOP
 12740  001B82  5066               	movf	(___fladd@a+3)^0,w,c
 12741  001B84  0B80               	andlw	128
 12742  001B86  6E6C               	movwf	___fladd@aexp^0,c
 12743  001B88  506B               	movf	___fladd@signs^0,w,c
 12744  001B8A  186C               	xorwf	___fladd@aexp^0,w,c
 12745  001B8C  B4D8               	btfsc	status,2,c
 12746  001B8E  EFCB  F00D         	goto	u4771
 12747  001B92  EFCE  F00D         	goto	u4770
 12748  001B96                     u4771:
 12749  001B96  FFFF               	dw	65535	; assembler added errata NOP
 12750  001B98  EFD0  F00D         	goto	l4150
 12751  001B9C                     u4770:
 12752  001B9C  FFFF               	dw	65535	; assembler added errata NOP
 12753  001B9E  8C6B               	bsf	___fladd@signs^0,6,c
 12754  001BA0                     l4150:
 12755  001BA0  FFFF               	dw	65535	; assembler added errata NOP
 12756  001BA2  5066               	movf	(___fladd@a+3)^0,w,c
 12757  001BA4  2466               	addwf	(___fladd@a+3)^0,w,c
 12758  001BA6  6E6C               	movwf	___fladd@aexp^0,c
 12759  001BA8  AE65               	btfss	(___fladd@a+2)^0,7,c
 12760  001BAA  EFD9  F00D         	goto	u4781
 12761  001BAE  EFDC  F00D         	goto	u4780
 12762  001BB2                     u4781:
 12763  001BB2  FFFF               	dw	65535	; assembler added errata NOP
 12764  001BB4  EFDE  F00D         	goto	l4156
 12765  001BB8                     u4780:
 12766  001BB8  FFFF               	dw	65535	; assembler added errata NOP
 12767  001BBA  806C               	bsf	___fladd@aexp^0,0,c
 12768  001BBC                     l4156:
 12769  001BBC  FFFF               	dw	65535	; assembler added errata NOP
 12770  001BBE  506C               	movf	___fladd@aexp^0,w,c
 12771  001BC0  B4D8               	btfsc	status,2,c
 12772  001BC2  EFE5  F00D         	goto	u4791
 12773  001BC6  EFE8  F00D         	goto	u4790
 12774  001BCA                     u4791:
 12775  001BCA  FFFF               	dw	65535	; assembler added errata NOP
 12776  001BCC  EF01  F00E         	goto	l4166
 12777  001BD0                     u4790:
 12778  001BD0  FFFF               	dw	65535	; assembler added errata NOP
 12779  001BD2  286C               	incf	___fladd@aexp^0,w,c
 12780  001BD4  A4D8               	btfss	status,2,c
 12781  001BD6  EFEF  F00D         	goto	u4801
 12782  001BDA  EFF2  F00D         	goto	u4800
 12783  001BDE                     u4801:
 12784  001BDE  FFFF               	dw	65535	; assembler added errata NOP
 12785  001BE0  EFFB  F00D         	goto	l4162
 12786  001BE4                     u4800:
 12787  001BE4  FFFF               	dw	65535	; assembler added errata NOP
 12788  001BE6  0E00               	movlw	0
 12789  001BE8  6E63               	movwf	___fladd@a^0,c
 12790  001BEA  0E00               	movlw	0
 12791  001BEC  6E64               	movwf	(___fladd@a+1)^0,c
 12792  001BEE  0E00               	movlw	0
 12793  001BF0  6E65               	movwf	(___fladd@a+2)^0,c
 12794  001BF2  0E00               	movlw	0
 12795  001BF4  6E66               	movwf	(___fladd@a+3)^0,c
 12796  001BF6                     l4162:
 12797  001BF6  FFFF               	dw	65535	; assembler added errata NOP
 12798  001BF8  8E65               	bsf	(___fladd@a+2)^0,7,c
 12799  001BFA  0E00               	movlw	0
 12800  001BFC  6E66               	movwf	(___fladd@a+3)^0,c
 12801  001BFE  EF0A  F00E         	goto	l4168
 12802  001C02                     l4166:
 12803  001C02  FFFF               	dw	65535	; assembler added errata NOP
 12804  001C04  0E00               	movlw	0
 12805  001C06  6E63               	movwf	___fladd@a^0,c
 12806  001C08  0E00               	movlw	0
 12807  001C0A  6E64               	movwf	(___fladd@a+1)^0,c
 12808  001C0C  0E00               	movlw	0
 12809  001C0E  6E65               	movwf	(___fladd@a+2)^0,c
 12810  001C10  0E00               	movlw	0
 12811  001C12  6E66               	movwf	(___fladd@a+3)^0,c
 12812  001C14                     l4168:
 12813  001C14  FFFF               	dw	65535	; assembler added errata NOP
 12814  001C16  506D               	movf	___fladd@bexp^0,w,c
 12815  001C18  5C6C               	subwf	___fladd@aexp^0,w,c
 12816  001C1A  B0D8               	btfsc	status,0,c
 12817  001C1C  EF12  F00E         	goto	u4811
 12818  001C20  EF15  F00E         	goto	u4810
 12819  001C24                     u4811:
 12820  001C24  FFFF               	dw	65535	; assembler added errata NOP
 12821  001C26  EF40  F00E         	goto	l4204
 12822  001C2A                     u4810:
 12823  001C2A  FFFF               	dw	65535	; assembler added errata NOP
 12824  001C2C  AC6B               	btfss	___fladd@signs^0,6,c
 12825  001C2E  EF1B  F00E         	goto	u4821
 12826  001C32  EF1E  F00E         	goto	u4820
 12827  001C36                     u4821:
 12828  001C36  FFFF               	dw	65535	; assembler added errata NOP
 12829  001C38  EF21  F00E         	goto	l4174
 12830  001C3C                     u4820:
 12831  001C3C  FFFF               	dw	65535	; assembler added errata NOP
 12832  001C3E  0E80               	movlw	128
 12833  001C40  1A6B               	xorwf	___fladd@signs^0,f,c
 12834  001C42                     l4174:
 12835  001C42  FFFF               	dw	65535	; assembler added errata NOP
 12836  001C44  C06D  F06E         	movff	___fladd@bexp,___fladd@grs
 12837  001C48  C06C  F06D         	movff	___fladd@aexp,___fladd@bexp
 12838  001C4C  C06E  F06C         	movff	___fladd@grs,___fladd@aexp
 12839  001C50  C05F  F06E         	movff	___fladd@b,___fladd@grs
 12840  001C54  C063  F05F         	movff	___fladd@a,___fladd@b
 12841  001C58  C06E  F063         	movff	___fladd@grs,___fladd@a
 12842  001C5C  C060  F06E         	movff	___fladd@b+1,___fladd@grs
 12843  001C60  C064  F060         	movff	___fladd@a+1,___fladd@b+1
 12844  001C64  C06E  F064         	movff	___fladd@grs,___fladd@a+1
 12845  001C68  C061  F06E         	movff	___fladd@b+2,___fladd@grs
 12846  001C6C  C065  F061         	movff	___fladd@a+2,___fladd@b+2
 12847  001C70  C06E  F065         	movff	___fladd@grs,___fladd@a+2
 12848  001C74  C062  F06E         	movff	___fladd@b+3,___fladd@grs
 12849  001C78  C066  F062         	movff	___fladd@a+3,___fladd@b+3
 12850  001C7C  C06E  F066         	movff	___fladd@grs,___fladd@a+3
 12851  001C80                     l4204:
 12852  001C80  FFFF               	dw	65535	; assembler added errata NOP
 12853  001C82  0E00               	movlw	0
 12854  001C84  6E6E               	movwf	___fladd@grs^0,c
 12855  001C86  506D               	movf	___fladd@bexp^0,w,c
 12856  001C88  C06C  F067         	movff	___fladd@aexp,??___fladd
 12857  001C8C  6A68               	clrf	(??___fladd+1)^0,c
 12858  001C8E  5E67               	subwf	??___fladd^0,f,c
 12859  001C90  0E00               	movlw	0
 12860  001C92  5A68               	subwfb	(??___fladd+1)^0,f,c
 12861  001C94  BE68               	btfsc	(??___fladd+1)^0,7,c
 12862  001C96  EF56  F00E         	goto	u4831
 12863  001C9A  5068               	movf	(??___fladd+1)^0,w,c
 12864  001C9C  E10A               	bnz	u4830
 12865  001C9E  0E1A               	movlw	26
 12866  001CA0  5C67               	subwf	??___fladd^0,w,c
 12867  001CA2  A0D8               	btfss	status,0,c
 12868  001CA4  EF56  F00E         	goto	u4831
 12869  001CA8  EF59  F00E         	goto	u4830
 12870  001CAC                     u4831:
 12871  001CAC  FFFF               	dw	65535	; assembler added errata NOP
 12872  001CAE  EF9C  F00E         	goto	l909
 12873  001CB2                     u4830:
 12874  001CB2  FFFF               	dw	65535	; assembler added errata NOP
 12875  001CB4  505F               	movf	___fladd@b^0,w,c
 12876  001CB6  1060               	iorwf	(___fladd@b+1)^0,w,c
 12877  001CB8  1061               	iorwf	(___fladd@b+2)^0,w,c
 12878  001CBA  1062               	iorwf	(___fladd@b+3)^0,w,c
 12879  001CBC  A4D8               	btfss	status,2,c
 12880  001CBE  EF63  F00E         	goto	u4841
 12881  001CC2  EF67  F00E         	goto	u4840
 12882  001CC6                     u4841:
 12883  001CC6  FFFF               	dw	65535	; assembler added errata NOP
 12884  001CC8  0E01               	movlw	1
 12885  001CCA  EF69  F00E         	goto	u4850
 12886  001CCE                     u4840:
 12887  001CCE  FFFF               	dw	65535	; assembler added errata NOP
 12888  001CD0  0E00               	movlw	0
 12889  001CD2                     u4850:
 12890  001CD2  FFFF               	dw	65535	; assembler added errata NOP
 12891  001CD4  6E6E               	movwf	___fladd@grs^0,c
 12892  001CD6  0E00               	movlw	0
 12893  001CD8  6E5F               	movwf	___fladd@b^0,c
 12894  001CDA  0E00               	movlw	0
 12895  001CDC  6E60               	movwf	(___fladd@b+1)^0,c
 12896  001CDE  0E00               	movlw	0
 12897  001CE0  6E61               	movwf	(___fladd@b+2)^0,c
 12898  001CE2  0E00               	movlw	0
 12899  001CE4  6E62               	movwf	(___fladd@b+3)^0,c
 12900  001CE6  C06C  F06D         	movff	___fladd@aexp,___fladd@bexp
 12901  001CEA  EFA7  F00E         	goto	l908
 12902  001CEE                     l910:
 12903  001CEE  FFFF               	dw	65535	; assembler added errata NOP
 12904  001CF0  A06E               	btfss	___fladd@grs^0,0,c
 12905  001CF2  EF7D  F00E         	goto	u4861
 12906  001CF6  EF80  F00E         	goto	u4860
 12907  001CFA                     u4861:
 12908  001CFA  FFFF               	dw	65535	; assembler added errata NOP
 12909  001CFC  EF87  F00E         	goto	l4216
 12910  001D00                     u4860:
 12911  001D00  FFFF               	dw	65535	; assembler added errata NOP
 12912  001D02  90D8               	bcf	status,0,c
 12913  001D04  306E               	rrcf	___fladd@grs^0,w,c
 12914  001D06  0901               	iorlw	1
 12915  001D08  6E6E               	movwf	___fladd@grs^0,c
 12916  001D0A  EF8A  F00E         	goto	l4218
 12917  001D0E                     l4216:
 12918  001D0E  FFFF               	dw	65535	; assembler added errata NOP
 12919  001D10  90D8               	bcf	status,0,c
 12920  001D12  326E               	rrcf	___fladd@grs^0,f,c
 12921  001D14                     l4218:
 12922  001D14  FFFF               	dw	65535	; assembler added errata NOP
 12923  001D16  A05F               	btfss	___fladd@b^0,0,c
 12924  001D18  EF90  F00E         	goto	u4871
 12925  001D1C  EF93  F00E         	goto	u4870
 12926  001D20                     u4871:
 12927  001D20  FFFF               	dw	65535	; assembler added errata NOP
 12928  001D22  EF95  F00E         	goto	l4222
 12929  001D26                     u4870:
 12930  001D26  FFFF               	dw	65535	; assembler added errata NOP
 12931  001D28  8E6E               	bsf	___fladd@grs^0,7,c
 12932  001D2A                     l4222:
 12933  001D2A  FFFF               	dw	65535	; assembler added errata NOP
 12934  001D2C  3462               	rlcf	(___fladd@b+3)^0,w,c
 12935  001D2E  3262               	rrcf	(___fladd@b+3)^0,f,c
 12936  001D30  3261               	rrcf	(___fladd@b+2)^0,f,c
 12937  001D32  3260               	rrcf	(___fladd@b+1)^0,f,c
 12938  001D34  325F               	rrcf	___fladd@b^0,f,c
 12939  001D36  2A6D               	incf	___fladd@bexp^0,f,c
 12940  001D38                     l909:
 12941  001D38  FFFF               	dw	65535	; assembler added errata NOP
 12942  001D3A  506C               	movf	___fladd@aexp^0,w,c
 12943  001D3C  5C6D               	subwf	___fladd@bexp^0,w,c
 12944  001D3E  A0D8               	btfss	status,0,c
 12945  001D40  EFA4  F00E         	goto	u4881
 12946  001D44  EFA7  F00E         	goto	u4880
 12947  001D48                     u4881:
 12948  001D48  FFFF               	dw	65535	; assembler added errata NOP
 12949  001D4A  EF77  F00E         	goto	l910
 12950  001D4E                     u4880:
 12951  001D4E                     l908:
 12952  001D4E  FFFF               	dw	65535	; assembler added errata NOP
 12953  001D50  BC6B               	btfsc	___fladd@signs^0,6,c
 12954  001D52  EFAD  F00E         	goto	u4891
 12955  001D56  EFB0  F00E         	goto	u4890
 12956  001D5A                     u4891:
 12957  001D5A  FFFF               	dw	65535	; assembler added errata NOP
 12958  001D5C  EFFD  F00E         	goto	l4250
 12959  001D60                     u4890:
 12960  001D60  FFFF               	dw	65535	; assembler added errata NOP
 12961  001D62  506D               	movf	___fladd@bexp^0,w,c
 12962  001D64  A4D8               	btfss	status,2,c
 12963  001D66  EFB7  F00E         	goto	u4901
 12964  001D6A  EFBA  F00E         	goto	u4900
 12965  001D6E                     u4901:
 12966  001D6E  FFFF               	dw	65535	; assembler added errata NOP
 12967  001D70  EFC5  F00E         	goto	l4232
 12968  001D74                     u4900:
 12969  001D74  FFFF               	dw	65535	; assembler added errata NOP
 12970  001D76  0E00               	movlw	0
 12971  001D78  6E5F               	movwf	?___fladd^0,c
 12972  001D7A  0E00               	movlw	0
 12973  001D7C  6E60               	movwf	(?___fladd+1)^0,c
 12974  001D7E  0E00               	movlw	0
 12975  001D80  6E61               	movwf	(?___fladd+2)^0,c
 12976  001D82  0E00               	movlw	0
 12977  001D84  6E62               	movwf	(?___fladd+3)^0,c
 12978  001D86  EF54  F010         	goto	l917
 12979  001D8A                     l4232:
 12980  001D8A  FFFF               	dw	65535	; assembler added errata NOP
 12981  001D8C  5063               	movf	___fladd@a^0,w,c
 12982  001D8E  265F               	addwf	___fladd@b^0,f,c
 12983  001D90  5064               	movf	(___fladd@a+1)^0,w,c
 12984  001D92  2260               	addwfc	(___fladd@b+1)^0,f,c
 12985  001D94  5065               	movf	(___fladd@a+2)^0,w,c
 12986  001D96  2261               	addwfc	(___fladd@b+2)^0,f,c
 12987  001D98  5066               	movf	(___fladd@a+3)^0,w,c
 12988  001D9A  2262               	addwfc	(___fladd@b+3)^0,f,c
 12989  001D9C  A062               	btfss	(___fladd@b+3)^0,0,c
 12990  001D9E  EFD3  F00E         	goto	u4911
 12991  001DA2  EFD6  F00E         	goto	u4910
 12992  001DA6                     u4911:
 12993  001DA6  FFFF               	dw	65535	; assembler added errata NOP
 12994  001DA8  EFA1  F00F         	goto	l4286
 12995  001DAC                     u4910:
 12996  001DAC  FFFF               	dw	65535	; assembler added errata NOP
 12997  001DAE  A06E               	btfss	___fladd@grs^0,0,c
 12998  001DB0  EFDC  F00E         	goto	u4921
 12999  001DB4  EFDF  F00E         	goto	u4920
 13000  001DB8                     u4921:
 13001  001DB8  FFFF               	dw	65535	; assembler added errata NOP
 13002  001DBA  EFE6  F00E         	goto	l4240
 13003  001DBE                     u4920:
 13004  001DBE  FFFF               	dw	65535	; assembler added errata NOP
 13005  001DC0  90D8               	bcf	status,0,c
 13006  001DC2  306E               	rrcf	___fladd@grs^0,w,c
 13007  001DC4  0901               	iorlw	1
 13008  001DC6  6E6E               	movwf	___fladd@grs^0,c
 13009  001DC8  EFE9  F00E         	goto	l4242
 13010  001DCC                     l4240:
 13011  001DCC  FFFF               	dw	65535	; assembler added errata NOP
 13012  001DCE  90D8               	bcf	status,0,c
 13013  001DD0  326E               	rrcf	___fladd@grs^0,f,c
 13014  001DD2                     l4242:
 13015  001DD2  FFFF               	dw	65535	; assembler added errata NOP
 13016  001DD4  A05F               	btfss	___fladd@b^0,0,c
 13017  001DD6  EFEF  F00E         	goto	u4931
 13018  001DDA  EFF2  F00E         	goto	u4930
 13019  001DDE                     u4931:
 13020  001DDE  FFFF               	dw	65535	; assembler added errata NOP
 13021  001DE0  EFF4  F00E         	goto	l4246
 13022  001DE4                     u4930:
 13023  001DE4  FFFF               	dw	65535	; assembler added errata NOP
 13024  001DE6  8E6E               	bsf	___fladd@grs^0,7,c
 13025  001DE8                     l4246:
 13026  001DE8  FFFF               	dw	65535	; assembler added errata NOP
 13027  001DEA  3462               	rlcf	(___fladd@b+3)^0,w,c
 13028  001DEC  3262               	rrcf	(___fladd@b+3)^0,f,c
 13029  001DEE  3261               	rrcf	(___fladd@b+2)^0,f,c
 13030  001DF0  3260               	rrcf	(___fladd@b+1)^0,f,c
 13031  001DF2  325F               	rrcf	___fladd@b^0,f,c
 13032  001DF4  2A6D               	incf	___fladd@bexp^0,f,c
 13033  001DF6  EFA1  F00F         	goto	l4286
 13034  001DFA                     l4250:
 13035  001DFA  FFFF               	dw	65535	; assembler added errata NOP
 13036  001DFC  5063               	movf	___fladd@a^0,w,c
 13037  001DFE  5C5F               	subwf	___fladd@b^0,w,c
 13038  001E00  5064               	movf	(___fladd@a+1)^0,w,c
 13039  001E02  5860               	subwfb	(___fladd@b+1)^0,w,c
 13040  001E04  5065               	movf	(___fladd@a+2)^0,w,c
 13041  001E06  5861               	subwfb	(___fladd@b+2)^0,w,c
 13042  001E08  5062               	movf	(___fladd@b+3)^0,w,c
 13043  001E0A  0A80               	xorlw	128
 13044  001E0C  6E67               	movwf	??___fladd^0,c
 13045  001E0E  5066               	movf	(___fladd@a+3)^0,w,c
 13046  001E10  0A80               	xorlw	128
 13047  001E12  5867               	subwfb	??___fladd^0,w,c
 13048  001E14  B0D8               	btfsc	status,0,c
 13049  001E16  EF0F  F00F         	goto	u4941
 13050  001E1A  EF12  F00F         	goto	u4940
 13051  001E1E                     u4941:
 13052  001E1E  FFFF               	dw	65535	; assembler added errata NOP
 13053  001E20  EF40  F00F         	goto	l4260
 13054  001E24                     u4940:
 13055  001E24  FFFF               	dw	65535	; assembler added errata NOP
 13056  001E26  505F               	movf	___fladd@b^0,w,c
 13057  001E28  5C63               	subwf	___fladd@a^0,w,c
 13058  001E2A  6E67               	movwf	??___fladd^0,c
 13059  001E2C  5060               	movf	(___fladd@b+1)^0,w,c
 13060  001E2E  5864               	subwfb	(___fladd@a+1)^0,w,c
 13061  001E30  6E68               	movwf	(??___fladd+1)^0,c
 13062  001E32  5061               	movf	(___fladd@b+2)^0,w,c
 13063  001E34  5865               	subwfb	(___fladd@a+2)^0,w,c
 13064  001E36  6E69               	movwf	(??___fladd+2)^0,c
 13065  001E38  5062               	movf	(___fladd@b+3)^0,w,c
 13066  001E3A  5866               	subwfb	(___fladd@a+3)^0,w,c
 13067  001E3C  6E6A               	movwf	(??___fladd+3)^0,c
 13068  001E3E  0EFF               	movlw	255
 13069  001E40  2467               	addwf	??___fladd^0,w,c
 13070  001E42  6E5F               	movwf	___fladd@b^0,c
 13071  001E44  0EFF               	movlw	255
 13072  001E46  2068               	addwfc	(??___fladd+1)^0,w,c
 13073  001E48  6E60               	movwf	(___fladd@b+1)^0,c
 13074  001E4A  0EFF               	movlw	255
 13075  001E4C  2069               	addwfc	(??___fladd+2)^0,w,c
 13076  001E4E  6E61               	movwf	(___fladd@b+2)^0,c
 13077  001E50  0EFF               	movlw	255
 13078  001E52  206A               	addwfc	(??___fladd+3)^0,w,c
 13079  001E54  6E62               	movwf	(___fladd@b+3)^0,c
 13080  001E56  0E80               	movlw	128
 13081  001E58  1A6B               	xorwf	___fladd@signs^0,f,c
 13082  001E5A  6C6E               	negf	___fladd@grs^0,c
 13083  001E5C  506E               	movf	___fladd@grs^0,w,c
 13084  001E5E  A4D8               	btfss	status,2,c
 13085  001E60  EF34  F00F         	goto	u4951
 13086  001E64  EF37  F00F         	goto	u4950
 13087  001E68                     u4951:
 13088  001E68  FFFF               	dw	65535	; assembler added errata NOP
 13089  001E6A  EF49  F00F         	goto	l925
 13090  001E6E                     u4950:
 13091  001E6E  FFFF               	dw	65535	; assembler added errata NOP
 13092  001E70  0E01               	movlw	1
 13093  001E72  265F               	addwf	___fladd@b^0,f,c
 13094  001E74  0E00               	movlw	0
 13095  001E76  2260               	addwfc	(___fladd@b+1)^0,f,c
 13096  001E78  2261               	addwfc	(___fladd@b+2)^0,f,c
 13097  001E7A  2262               	addwfc	(___fladd@b+3)^0,f,c
 13098  001E7C  EF49  F00F         	goto	l925
 13099  001E80                     l4260:
 13100  001E80  FFFF               	dw	65535	; assembler added errata NOP
 13101  001E82  5063               	movf	___fladd@a^0,w,c
 13102  001E84  5E5F               	subwf	___fladd@b^0,f,c
 13103  001E86  5064               	movf	(___fladd@a+1)^0,w,c
 13104  001E88  5A60               	subwfb	(___fladd@b+1)^0,f,c
 13105  001E8A  5065               	movf	(___fladd@a+2)^0,w,c
 13106  001E8C  5A61               	subwfb	(___fladd@b+2)^0,f,c
 13107  001E8E  5066               	movf	(___fladd@a+3)^0,w,c
 13108  001E90  5A62               	subwfb	(___fladd@b+3)^0,f,c
 13109  001E92                     l925:
 13110  001E92  FFFF               	dw	65535	; assembler added errata NOP
 13111  001E94  505F               	movf	___fladd@b^0,w,c
 13112  001E96  1060               	iorwf	(___fladd@b+1)^0,w,c
 13113  001E98  1061               	iorwf	(___fladd@b+2)^0,w,c
 13114  001E9A  1062               	iorwf	(___fladd@b+3)^0,w,c
 13115  001E9C  A4D8               	btfss	status,2,c
 13116  001E9E  EF53  F00F         	goto	u4961
 13117  001EA2  EF56  F00F         	goto	u4960
 13118  001EA6                     u4961:
 13119  001EA6  FFFF               	dw	65535	; assembler added errata NOP
 13120  001EA8  EF98  F00F         	goto	l4284
 13121  001EAC                     u4960:
 13122  001EAC  FFFF               	dw	65535	; assembler added errata NOP
 13123  001EAE  506E               	movf	___fladd@grs^0,w,c
 13124  001EB0  A4D8               	btfss	status,2,c
 13125  001EB2  EF5D  F00F         	goto	u4971
 13126  001EB6  EF60  F00F         	goto	u4970
 13127  001EBA                     u4971:
 13128  001EBA  FFFF               	dw	65535	; assembler added errata NOP
 13129  001EBC  EF98  F00F         	goto	l4284
 13130  001EC0                     u4970:
 13131  001EC0  FFFF               	dw	65535	; assembler added errata NOP
 13132  001EC2  0E00               	movlw	0
 13133  001EC4  6E5F               	movwf	?___fladd^0,c
 13134  001EC6  0E00               	movlw	0
 13135  001EC8  6E60               	movwf	(?___fladd+1)^0,c
 13136  001ECA  0E00               	movlw	0
 13137  001ECC  6E61               	movwf	(?___fladd+2)^0,c
 13138  001ECE  0E00               	movlw	0
 13139  001ED0  6E62               	movwf	(?___fladd+3)^0,c
 13140  001ED2  EF54  F010         	goto	l917
 13141  001ED6                     l4268:
 13142  001ED6  FFFF               	dw	65535	; assembler added errata NOP
 13143  001ED8  90D8               	bcf	status,0,c
 13144  001EDA  365F               	rlcf	___fladd@b^0,f,c
 13145  001EDC  3660               	rlcf	(___fladd@b+1)^0,f,c
 13146  001EDE  3661               	rlcf	(___fladd@b+2)^0,f,c
 13147  001EE0  3662               	rlcf	(___fladd@b+3)^0,f,c
 13148  001EE2  AE6E               	btfss	___fladd@grs^0,7,c
 13149  001EE4  EF76  F00F         	goto	u4981
 13150  001EE8  EF79  F00F         	goto	u4980
 13151  001EEC                     u4981:
 13152  001EEC  FFFF               	dw	65535	; assembler added errata NOP
 13153  001EEE  EF7B  F00F         	goto	l4274
 13154  001EF2                     u4980:
 13155  001EF2  FFFF               	dw	65535	; assembler added errata NOP
 13156  001EF4  805F               	bsf	___fladd@b^0,0,c
 13157  001EF6                     l4274:
 13158  001EF6  FFFF               	dw	65535	; assembler added errata NOP
 13159  001EF8  A06E               	btfss	___fladd@grs^0,0,c
 13160  001EFA  EF81  F00F         	goto	u4991
 13161  001EFE  EF84  F00F         	goto	u4990
 13162  001F02                     u4991:
 13163  001F02  FFFF               	dw	65535	; assembler added errata NOP
 13164  001F04  EF89  F00F         	goto	l4278
 13165  001F08                     u4990:
 13166  001F08  FFFF               	dw	65535	; assembler added errata NOP
 13167  001F0A  80D8               	bsf	status,0,c
 13168  001F0C  366E               	rlcf	___fladd@grs^0,f,c
 13169  001F0E  EF8C  F00F         	goto	l4280
 13170  001F12                     l4278:
 13171  001F12  FFFF               	dw	65535	; assembler added errata NOP
 13172  001F14  90D8               	bcf	status,0,c
 13173  001F16  366E               	rlcf	___fladd@grs^0,f,c
 13174  001F18                     l4280:
 13175  001F18  FFFF               	dw	65535	; assembler added errata NOP
 13176  001F1A  506D               	movf	___fladd@bexp^0,w,c
 13177  001F1C  B4D8               	btfsc	status,2,c
 13178  001F1E  EF93  F00F         	goto	u5001
 13179  001F22  EF96  F00F         	goto	u5000
 13180  001F26                     u5001:
 13181  001F26  FFFF               	dw	65535	; assembler added errata NOP
 13182  001F28  EF98  F00F         	goto	l4284
 13183  001F2C                     u5000:
 13184  001F2C  FFFF               	dw	65535	; assembler added errata NOP
 13185  001F2E  066D               	decf	___fladd@bexp^0,f,c
 13186  001F30                     l4284:
 13187  001F30  FFFF               	dw	65535	; assembler added errata NOP
 13188  001F32  AE61               	btfss	(___fladd@b+2)^0,7,c
 13189  001F34  EF9E  F00F         	goto	u5011
 13190  001F38  EFA1  F00F         	goto	u5010
 13191  001F3C                     u5011:
 13192  001F3C  FFFF               	dw	65535	; assembler added errata NOP
 13193  001F3E  EF6B  F00F         	goto	l4268
 13194  001F42                     u5010:
 13195  001F42                     l4286:
 13196  001F42  FFFF               	dw	65535	; assembler added errata NOP
 13197  001F44  0E00               	movlw	0
 13198  001F46  6E6C               	movwf	___fladd@aexp^0,c
 13199  001F48  AE6E               	btfss	___fladd@grs^0,7,c
 13200  001F4A  EFA9  F00F         	goto	u5021
 13201  001F4E  EFAC  F00F         	goto	u5020
 13202  001F52                     u5021:
 13203  001F52  FFFF               	dw	65535	; assembler added errata NOP
 13204  001F54  EFCB  F00F         	goto	l934
 13205  001F58                     u5020:
 13206  001F58  FFFF               	dw	65535	; assembler added errata NOP
 13207  001F5A  C06E  F067         	movff	___fladd@grs,??___fladd
 13208  001F5E  0E7F               	movlw	127
 13209  001F60  1667               	andwf	??___fladd^0,f,c
 13210  001F62  B4D8               	btfsc	status,2,c
 13211  001F64  EFB6  F00F         	goto	u5031
 13212  001F68  EFB9  F00F         	goto	u5030
 13213  001F6C                     u5031:
 13214  001F6C  FFFF               	dw	65535	; assembler added errata NOP
 13215  001F6E  EFBF  F00F         	goto	l935
 13216  001F72                     u5030:
 13217  001F72  FFFF               	dw	65535	; assembler added errata NOP
 13218  001F74                     l4292:
 13219  001F74  FFFF               	dw	65535	; assembler added errata NOP
 13220  001F76  0E01               	movlw	1
 13221  001F78  6E6C               	movwf	___fladd@aexp^0,c
 13222  001F7A  EFCB  F00F         	goto	l934
 13223  001F7E                     l935:
 13224  001F7E  FFFF               	dw	65535	; assembler added errata NOP
 13225  001F80  A05F               	btfss	___fladd@b^0,0,c
 13226  001F82  EFC5  F00F         	goto	u5041
 13227  001F86  EFC8  F00F         	goto	u5040
 13228  001F8A                     u5041:
 13229  001F8A  FFFF               	dw	65535	; assembler added errata NOP
 13230  001F8C  EFCB  F00F         	goto	l934
 13231  001F90                     u5040:
 13232  001F90  FFFF               	dw	65535	; assembler added errata NOP
 13233  001F92  EFBA  F00F         	goto	l4292
 13234  001F96                     l934:
 13235  001F96  FFFF               	dw	65535	; assembler added errata NOP
 13236  001F98  506C               	movf	___fladd@aexp^0,w,c
 13237  001F9A  B4D8               	btfsc	status,2,c
 13238  001F9C  EFD2  F00F         	goto	u5051
 13239  001FA0  EFD5  F00F         	goto	u5050
 13240  001FA4                     u5051:
 13241  001FA4  FFFF               	dw	65535	; assembler added errata NOP
 13242  001FA6  EF05  F010         	goto	l4304
 13243  001FAA                     u5050:
 13244  001FAA  FFFF               	dw	65535	; assembler added errata NOP
 13245  001FAC  0E01               	movlw	1
 13246  001FAE  265F               	addwf	___fladd@b^0,f,c
 13247  001FB0  0E00               	movlw	0
 13248  001FB2  2260               	addwfc	(___fladd@b+1)^0,f,c
 13249  001FB4  2261               	addwfc	(___fladd@b+2)^0,f,c
 13250  001FB6  2262               	addwfc	(___fladd@b+3)^0,f,c
 13251  001FB8  A062               	btfss	(___fladd@b+3)^0,0,c
 13252  001FBA  EFE1  F00F         	goto	u5061
 13253  001FBE  EFE4  F00F         	goto	u5060
 13254  001FC2                     u5061:
 13255  001FC2  FFFF               	dw	65535	; assembler added errata NOP
 13256  001FC4  EF05  F010         	goto	l4304
 13257  001FC8                     u5060:
 13258  001FC8  FFFF               	dw	65535	; assembler added errata NOP
 13259  001FCA  C05F  F067         	movff	___fladd@b,??___fladd
 13260  001FCE  C060  F068         	movff	___fladd@b+1,??___fladd+1
 13261  001FD2  C061  F069         	movff	___fladd@b+2,??___fladd+2
 13262  001FD6  C062  F06A         	movff	___fladd@b+3,??___fladd+3
 13263  001FDA  346A               	rlcf	(??___fladd+3)^0,w,c
 13264  001FDC  326A               	rrcf	(??___fladd+3)^0,f,c
 13265  001FDE  3269               	rrcf	(??___fladd+2)^0,f,c
 13266  001FE0  3268               	rrcf	(??___fladd+1)^0,f,c
 13267  001FE2  3267               	rrcf	??___fladd^0,f,c
 13268  001FE4  C067  F05F         	movff	??___fladd,___fladd@b
 13269  001FE8  C068  F060         	movff	??___fladd+1,___fladd@b+1
 13270  001FEC  C069  F061         	movff	??___fladd+2,___fladd@b+2
 13271  001FF0  C06A  F062         	movff	??___fladd+3,___fladd@b+3
 13272  001FF4  286D               	incf	___fladd@bexp^0,w,c
 13273  001FF6  B4D8               	btfsc	status,2,c
 13274  001FF8  EF00  F010         	goto	u5071
 13275  001FFC  EF03  F010         	goto	u5070
 13276  002000                     u5071:
 13277  002000  FFFF               	dw	65535	; assembler added errata NOP
 13278  002002  EF05  F010         	goto	l4304
 13279  002006                     u5070:
 13280  002006  FFFF               	dw	65535	; assembler added errata NOP
 13281  002008  2A6D               	incf	___fladd@bexp^0,f,c
 13282  00200A                     l4304:
 13283  00200A  FFFF               	dw	65535	; assembler added errata NOP
 13284  00200C  286D               	incf	___fladd@bexp^0,w,c
 13285  00200E  B4D8               	btfsc	status,2,c
 13286  002010  EF0C  F010         	goto	u5081
 13287  002014  EF0F  F010         	goto	u5080
 13288  002018                     u5081:
 13289  002018  FFFF               	dw	65535	; assembler added errata NOP
 13290  00201A  EF19  F010         	goto	l4308
 13291  00201E                     u5080:
 13292  00201E  FFFF               	dw	65535	; assembler added errata NOP
 13293  002020  506D               	movf	___fladd@bexp^0,w,c
 13294  002022  A4D8               	btfss	status,2,c
 13295  002024  EF16  F010         	goto	u5091
 13296  002028  EF19  F010         	goto	u5090
 13297  00202C                     u5091:
 13298  00202C  FFFF               	dw	65535	; assembler added errata NOP
 13299  00202E  EF2E  F010         	goto	l4312
 13300  002032                     u5090:
 13301  002032                     l4308:
 13302  002032  FFFF               	dw	65535	; assembler added errata NOP
 13303  002034  0E00               	movlw	0
 13304  002036  6E5F               	movwf	___fladd@b^0,c
 13305  002038  0E00               	movlw	0
 13306  00203A  6E60               	movwf	(___fladd@b+1)^0,c
 13307  00203C  0E00               	movlw	0
 13308  00203E  6E61               	movwf	(___fladd@b+2)^0,c
 13309  002040  0E00               	movlw	0
 13310  002042  6E62               	movwf	(___fladd@b+3)^0,c
 13311  002044  506D               	movf	___fladd@bexp^0,w,c
 13312  002046  A4D8               	btfss	status,2,c
 13313  002048  EF28  F010         	goto	u5101
 13314  00204C  EF2B  F010         	goto	u5100
 13315  002050                     u5101:
 13316  002050  FFFF               	dw	65535	; assembler added errata NOP
 13317  002052  EF2E  F010         	goto	l4312
 13318  002056                     u5100:
 13319  002056  FFFF               	dw	65535	; assembler added errata NOP
 13320  002058  0E00               	movlw	0
 13321  00205A  6E6B               	movwf	___fladd@signs^0,c
 13322  00205C                     l4312:
 13323  00205C  FFFF               	dw	65535	; assembler added errata NOP
 13324  00205E  A06D               	btfss	___fladd@bexp^0,0,c
 13325  002060  EF34  F010         	goto	u5111
 13326  002064  EF37  F010         	goto	u5110
 13327  002068                     u5111:
 13328  002068  FFFF               	dw	65535	; assembler added errata NOP
 13329  00206A  EF3B  F010         	goto	l4316
 13330  00206E                     u5110:
 13331  00206E  FFFF               	dw	65535	; assembler added errata NOP
 13332  002070  8E61               	bsf	(___fladd@b+2)^0,7,c
 13333  002072  EF3D  F010         	goto	l4318
 13334  002076                     l4316:
 13335  002076  FFFF               	dw	65535	; assembler added errata NOP
 13336  002078  9E61               	bcf	(___fladd@b+2)^0,7,c
 13337  00207A                     l4318:
 13338  00207A  FFFF               	dw	65535	; assembler added errata NOP
 13339  00207C  90D8               	bcf	status,0,c
 13340  00207E  306D               	rrcf	___fladd@bexp^0,w,c
 13341  002080  6E62               	movwf	(___fladd@b+3)^0,c
 13342  002082  AE6B               	btfss	___fladd@signs^0,7,c
 13343  002084  EF46  F010         	goto	u5121
 13344  002088  EF49  F010         	goto	u5120
 13345  00208C                     u5121:
 13346  00208C  FFFF               	dw	65535	; assembler added errata NOP
 13347  00208E  EF4B  F010         	goto	l4324
 13348  002092                     u5120:
 13349  002092  FFFF               	dw	65535	; assembler added errata NOP
 13350  002094  8E62               	bsf	(___fladd@b+3)^0,7,c
 13351  002096                     l4324:
 13352  002096  FFFF               	dw	65535	; assembler added errata NOP
 13353  002098  C05F  F05F         	movff	___fladd@b,?___fladd
 13354  00209C  C060  F060         	movff	___fladd@b+1,?___fladd+1
 13355  0020A0  C061  F061         	movff	___fladd@b+2,?___fladd+2
 13356  0020A4  C062  F062         	movff	___fladd@b+3,?___fladd+3
 13357  0020A8                     l917:
 13358  0020A8  FFFF               	dw	65535	; assembler added errata NOP
 13359  0020AA  0012               	return		;funcret
 13360  0020AC  FFFF               	dw	65535	; errata NOP
 13361  0020AE                     __end_of___fladd:
 13362                           	callstack 0
 13363                           
 13364 ;; *************** function ___flneg *****************
 13365 ;; Defined at:
 13366 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
 13367 ;; Parameters:    Size  Location     Type
 13368 ;;  f1              4    0[COMRAM] unsigned char 
 13369 ;; Auto vars:     Size  Location     Type
 13370 ;;		None
 13371 ;; Return value:  Size  Location     Type
 13372 ;;                  4    0[COMRAM] unsigned char 
 13373 ;; Registers used:
 13374 ;;		wreg, status,2, status,0
 13375 ;; Tracked objects:
 13376 ;;		On entry : 0/0
 13377 ;;		On exit  : 0/0
 13378 ;;		Unchanged: 0/0
 13379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13380 ;;      Params:         4       0       0       0       0       0       0
 13381 ;;      Locals:         0       0       0       0       0       0       0
 13382 ;;      Temps:          0       0       0       0       0       0       0
 13383 ;;      Totals:         4       0       0       0       0       0       0
 13384 ;;Total ram usage:        4 bytes
 13385 ;; Hardware stack levels used:    1
 13386 ;; Hardware stack levels required when called:    1
 13387 ;; This function calls:
 13388 ;;		Nothing
 13389 ;; This function is called by:
 13390 ;;		_roundf
 13391 ;; This function uses a non-reentrant model
 13392 ;;
 13393                           
 13394                           	psect	text53
 13395  0067E8                     __ptext53:
 13396                           	callstack 0
 13397  0067E8                     ___flneg:
 13398                           	callstack 0
 13399  0067E8  FFFF               	dw	65535	; assembler added errata NOP
 13400  0067EA  5001               	movf	___flneg@f1^0,w,c
 13401  0067EC  1002               	iorwf	(___flneg@f1+1)^0,w,c
 13402  0067EE  1003               	iorwf	(___flneg@f1+2)^0,w,c
 13403  0067F0  1004               	iorwf	(___flneg@f1+3)^0,w,c
 13404  0067F2  B4D8               	btfsc	status,2,c
 13405  0067F4  EFFE  F033         	goto	u6091
 13406  0067F8  EF01  F034         	goto	u6090
 13407  0067FC                     u6091:
 13408  0067FC  FFFF               	dw	65535	; assembler added errata NOP
 13409  0067FE  EF0A  F034         	goto	l4962
 13410  006802                     u6090:
 13411  006802  FFFF               	dw	65535	; assembler added errata NOP
 13412  006804  0E00               	movlw	0
 13413  006806  1A01               	xorwf	___flneg@f1^0,f,c
 13414  006808  0E00               	movlw	0
 13415  00680A  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 13416  00680C  0E00               	movlw	0
 13417  00680E  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 13418  006810  0E80               	movlw	128
 13419  006812  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 13420  006814                     l4962:
 13421  006814  FFFF               	dw	65535	; assembler added errata NOP
 13422  006816  C001  F001         	movff	___flneg@f1,?___flneg
 13423  00681A  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 13424  00681E  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 13425  006822  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 13426  006826  0012               	return		;funcret
 13427  006828  FFFF               	dw	65535	; errata NOP
 13428  00682A                     __end_of___flneg:
 13429                           	callstack 0
 13430                           
 13431 ;; *************** function ___flmul *****************
 13432 ;; Defined at:
 13433 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 13434 ;; Parameters:    Size  Location     Type
 13435 ;;  b               4   44[COMRAM] unsigned char 
 13436 ;;  a               4   48[COMRAM] unsigned char 
 13437 ;; Auto vars:     Size  Location     Type
 13438 ;;  prod            4   63[COMRAM] struct .
 13439 ;;  grs             4   57[COMRAM] unsigned long 
 13440 ;;  temp            2   67[COMRAM] struct .
 13441 ;;  bexp            1   62[COMRAM] unsigned char 
 13442 ;;  aexp            1   61[COMRAM] unsigned char 
 13443 ;;  sign            1   56[COMRAM] unsigned char 
 13444 ;; Return value:  Size  Location     Type
 13445 ;;                  4   44[COMRAM] unsigned char 
 13446 ;; Registers used:
 13447 ;;		wreg, status,2, status,0, prodl, prodh
 13448 ;; Tracked objects:
 13449 ;;		On entry : 0/0
 13450 ;;		On exit  : 0/0
 13451 ;;		Unchanged: 0/0
 13452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13453 ;;      Params:         8       0       0       0       0       0       0
 13454 ;;      Locals:        13       0       0       0       0       0       0
 13455 ;;      Temps:          4       0       0       0       0       0       0
 13456 ;;      Totals:        25       0       0       0       0       0       0
 13457 ;;Total ram usage:       25 bytes
 13458 ;; Hardware stack levels used:    1
 13459 ;; Hardware stack levels required when called:    1
 13460 ;; This function calls:
 13461 ;;		Nothing
 13462 ;; This function is called by:
 13463 ;;		_init_timer_2
 13464 ;;		_update_pwm_duty_ccp1
 13465 ;;		_get_temperature
 13466 ;;		_roundf
 13467 ;; This function uses a non-reentrant model
 13468 ;;
 13469                           
 13470                           	psect	text54
 13471  0020AE                     __ptext54:
 13472                           	callstack 0
 13473  0020AE                     ___flmul:
 13474                           	callstack 0
 13475  0020AE  FFFF               	dw	65535	; assembler added errata NOP
 13476  0020B0  5030               	movf	(___flmul@b+3)^0,w,c
 13477  0020B2  0B80               	andlw	128
 13478  0020B4  6E39               	movwf	___flmul@sign^0,c
 13479  0020B6  5030               	movf	(___flmul@b+3)^0,w,c
 13480  0020B8  2430               	addwf	(___flmul@b+3)^0,w,c
 13481  0020BA  6E3F               	movwf	___flmul@bexp^0,c
 13482  0020BC  AE2F               	btfss	(___flmul@b+2)^0,7,c
 13483  0020BE  EF63  F010         	goto	u5851
 13484  0020C2  EF66  F010         	goto	u5850
 13485  0020C6                     u5851:
 13486  0020C6  FFFF               	dw	65535	; assembler added errata NOP
 13487  0020C8  EF68  F010         	goto	l4806
 13488  0020CC                     u5850:
 13489  0020CC  FFFF               	dw	65535	; assembler added errata NOP
 13490  0020CE  803F               	bsf	___flmul@bexp^0,0,c
 13491  0020D0                     l4806:
 13492  0020D0  FFFF               	dw	65535	; assembler added errata NOP
 13493  0020D2  503F               	movf	___flmul@bexp^0,w,c
 13494  0020D4  B4D8               	btfsc	status,2,c
 13495  0020D6  EF6F  F010         	goto	u5861
 13496  0020DA  EF72  F010         	goto	u5860
 13497  0020DE                     u5861:
 13498  0020DE  FFFF               	dw	65535	; assembler added errata NOP
 13499  0020E0  EF89  F010         	goto	l4814
 13500  0020E4                     u5860:
 13501  0020E4  FFFF               	dw	65535	; assembler added errata NOP
 13502  0020E6  283F               	incf	___flmul@bexp^0,w,c
 13503  0020E8  A4D8               	btfss	status,2,c
 13504  0020EA  EF79  F010         	goto	u5871
 13505  0020EE  EF7C  F010         	goto	u5870
 13506  0020F2                     u5871:
 13507  0020F2  FFFF               	dw	65535	; assembler added errata NOP
 13508  0020F4  EF85  F010         	goto	l4812
 13509  0020F8                     u5870:
 13510  0020F8  FFFF               	dw	65535	; assembler added errata NOP
 13511  0020FA  0E00               	movlw	0
 13512  0020FC  6E2D               	movwf	___flmul@b^0,c
 13513  0020FE  0E00               	movlw	0
 13514  002100  6E2E               	movwf	(___flmul@b+1)^0,c
 13515  002102  0E00               	movlw	0
 13516  002104  6E2F               	movwf	(___flmul@b+2)^0,c
 13517  002106  0E00               	movlw	0
 13518  002108  6E30               	movwf	(___flmul@b+3)^0,c
 13519  00210A                     l4812:
 13520  00210A  FFFF               	dw	65535	; assembler added errata NOP
 13521  00210C  8E2F               	bsf	(___flmul@b+2)^0,7,c
 13522  00210E  EF92  F010         	goto	l4816
 13523  002112                     l4814:
 13524  002112  FFFF               	dw	65535	; assembler added errata NOP
 13525  002114  0E00               	movlw	0
 13526  002116  6E2D               	movwf	___flmul@b^0,c
 13527  002118  0E00               	movlw	0
 13528  00211A  6E2E               	movwf	(___flmul@b+1)^0,c
 13529  00211C  0E00               	movlw	0
 13530  00211E  6E2F               	movwf	(___flmul@b+2)^0,c
 13531  002120  0E00               	movlw	0
 13532  002122  6E30               	movwf	(___flmul@b+3)^0,c
 13533  002124                     l4816:
 13534  002124  FFFF               	dw	65535	; assembler added errata NOP
 13535  002126  5034               	movf	(___flmul@a+3)^0,w,c
 13536  002128  0B80               	andlw	128
 13537  00212A  1A39               	xorwf	___flmul@sign^0,f,c
 13538  00212C  5034               	movf	(___flmul@a+3)^0,w,c
 13539  00212E  2434               	addwf	(___flmul@a+3)^0,w,c
 13540  002130  6E3E               	movwf	___flmul@aexp^0,c
 13541  002132  AE33               	btfss	(___flmul@a+2)^0,7,c
 13542  002134  EF9E  F010         	goto	u5881
 13543  002138  EFA1  F010         	goto	u5880
 13544  00213C                     u5881:
 13545  00213C  FFFF               	dw	65535	; assembler added errata NOP
 13546  00213E  EFA3  F010         	goto	l4824
 13547  002142                     u5880:
 13548  002142  FFFF               	dw	65535	; assembler added errata NOP
 13549  002144  803E               	bsf	___flmul@aexp^0,0,c
 13550  002146                     l4824:
 13551  002146  FFFF               	dw	65535	; assembler added errata NOP
 13552  002148  503E               	movf	___flmul@aexp^0,w,c
 13553  00214A  B4D8               	btfsc	status,2,c
 13554  00214C  EFAA  F010         	goto	u5891
 13555  002150  EFAD  F010         	goto	u5890
 13556  002154                     u5891:
 13557  002154  FFFF               	dw	65535	; assembler added errata NOP
 13558  002156  EFC4  F010         	goto	l4832
 13559  00215A                     u5890:
 13560  00215A  FFFF               	dw	65535	; assembler added errata NOP
 13561  00215C  283E               	incf	___flmul@aexp^0,w,c
 13562  00215E  A4D8               	btfss	status,2,c
 13563  002160  EFB4  F010         	goto	u5901
 13564  002164  EFB7  F010         	goto	u5900
 13565  002168                     u5901:
 13566  002168  FFFF               	dw	65535	; assembler added errata NOP
 13567  00216A  EFC0  F010         	goto	l4830
 13568  00216E                     u5900:
 13569  00216E  FFFF               	dw	65535	; assembler added errata NOP
 13570  002170  0E00               	movlw	0
 13571  002172  6E31               	movwf	___flmul@a^0,c
 13572  002174  0E00               	movlw	0
 13573  002176  6E32               	movwf	(___flmul@a+1)^0,c
 13574  002178  0E00               	movlw	0
 13575  00217A  6E33               	movwf	(___flmul@a+2)^0,c
 13576  00217C  0E00               	movlw	0
 13577  00217E  6E34               	movwf	(___flmul@a+3)^0,c
 13578  002180                     l4830:
 13579  002180  FFFF               	dw	65535	; assembler added errata NOP
 13580  002182  8E33               	bsf	(___flmul@a+2)^0,7,c
 13581  002184  EFCD  F010         	goto	l994
 13582  002188                     l4832:
 13583  002188  FFFF               	dw	65535	; assembler added errata NOP
 13584  00218A  0E00               	movlw	0
 13585  00218C  6E31               	movwf	___flmul@a^0,c
 13586  00218E  0E00               	movlw	0
 13587  002190  6E32               	movwf	(___flmul@a+1)^0,c
 13588  002192  0E00               	movlw	0
 13589  002194  6E33               	movwf	(___flmul@a+2)^0,c
 13590  002196  0E00               	movlw	0
 13591  002198  6E34               	movwf	(___flmul@a+3)^0,c
 13592  00219A                     l994:
 13593  00219A  FFFF               	dw	65535	; assembler added errata NOP
 13594  00219C  503E               	movf	___flmul@aexp^0,w,c
 13595  00219E  B4D8               	btfsc	status,2,c
 13596  0021A0  EFD4  F010         	goto	u5911
 13597  0021A4  EFD7  F010         	goto	u5910
 13598  0021A8                     u5911:
 13599  0021A8  FFFF               	dw	65535	; assembler added errata NOP
 13600  0021AA  EFE1  F010         	goto	l4836
 13601  0021AE                     u5910:
 13602  0021AE  FFFF               	dw	65535	; assembler added errata NOP
 13603  0021B0  503F               	movf	___flmul@bexp^0,w,c
 13604  0021B2  A4D8               	btfss	status,2,c
 13605  0021B4  EFDE  F010         	goto	u5921
 13606  0021B8  EFE1  F010         	goto	u5920
 13607  0021BC                     u5921:
 13608  0021BC  FFFF               	dw	65535	; assembler added errata NOP
 13609  0021BE  EFEC  F010         	goto	l4840
 13610  0021C2                     u5920:
 13611  0021C2                     l4836:
 13612  0021C2  FFFF               	dw	65535	; assembler added errata NOP
 13613  0021C4  0E00               	movlw	0
 13614  0021C6  6E2D               	movwf	?___flmul^0,c
 13615  0021C8  0E00               	movlw	0
 13616  0021CA  6E2E               	movwf	(?___flmul+1)^0,c
 13617  0021CC  0E00               	movlw	0
 13618  0021CE  6E2F               	movwf	(?___flmul+2)^0,c
 13619  0021D0  0E00               	movlw	0
 13620  0021D2  6E30               	movwf	(?___flmul+3)^0,c
 13621  0021D4  EFA6  F012         	goto	l998
 13622  0021D8                     l4840:
 13623  0021D8  FFFF               	dw	65535	; assembler added errata NOP
 13624  0021DA  5033               	movf	(___flmul@a+2)^0,w,c
 13625  0021DC  022D               	mulwf	___flmul@b^0,c
 13626  0021DE  CFF3 F044          	movff	prodl,___flmul@temp
 13627  0021E2  CFF4 F045          	movff	prodh,___flmul@temp+1
 13628  0021E6  5044               	movf	___flmul@temp^0,w,c
 13629  0021E8  6E3A               	movwf	___flmul@grs^0,c
 13630  0021EA  6A3B               	clrf	(___flmul@grs+1)^0,c
 13631  0021EC  6A3C               	clrf	(___flmul@grs+2)^0,c
 13632  0021EE  6A3D               	clrf	(___flmul@grs+3)^0,c
 13633  0021F0  5045               	movf	(___flmul@temp+1)^0,w,c
 13634  0021F2  6E40               	movwf	___flmul@prod^0,c
 13635  0021F4  6A41               	clrf	(___flmul@prod+1)^0,c
 13636  0021F6  6A42               	clrf	(___flmul@prod+2)^0,c
 13637  0021F8  6A43               	clrf	(___flmul@prod+3)^0,c
 13638  0021FA  5032               	movf	(___flmul@a+1)^0,w,c
 13639  0021FC  022E               	mulwf	(___flmul@b+1)^0,c
 13640  0021FE  CFF3 F044          	movff	prodl,___flmul@temp
 13641  002202  CFF4 F045          	movff	prodh,___flmul@temp+1
 13642  002206  5044               	movf	___flmul@temp^0,w,c
 13643  002208  263A               	addwf	___flmul@grs^0,f,c
 13644  00220A  0E00               	movlw	0
 13645  00220C  223B               	addwfc	(___flmul@grs+1)^0,f,c
 13646  00220E  223C               	addwfc	(___flmul@grs+2)^0,f,c
 13647  002210  223D               	addwfc	(___flmul@grs+3)^0,f,c
 13648  002212  5045               	movf	(___flmul@temp+1)^0,w,c
 13649  002214  2640               	addwf	___flmul@prod^0,f,c
 13650  002216  0E00               	movlw	0
 13651  002218  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13652  00221A  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13653  00221C  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13654  00221E  5031               	movf	___flmul@a^0,w,c
 13655  002220  022F               	mulwf	(___flmul@b+2)^0,c
 13656  002222  CFF3 F044          	movff	prodl,___flmul@temp
 13657  002226  CFF4 F045          	movff	prodh,___flmul@temp+1
 13658  00222A  5044               	movf	___flmul@temp^0,w,c
 13659  00222C  263A               	addwf	___flmul@grs^0,f,c
 13660  00222E  0E00               	movlw	0
 13661  002230  223B               	addwfc	(___flmul@grs+1)^0,f,c
 13662  002232  223C               	addwfc	(___flmul@grs+2)^0,f,c
 13663  002234  223D               	addwfc	(___flmul@grs+3)^0,f,c
 13664  002236  5045               	movf	(___flmul@temp+1)^0,w,c
 13665  002238  2640               	addwf	___flmul@prod^0,f,c
 13666  00223A  0E00               	movlw	0
 13667  00223C  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13668  00223E  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13669  002240  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13670  002242  C03C  F03D         	movff	___flmul@grs+2,___flmul@grs+3
 13671  002246  C03B  F03C         	movff	___flmul@grs+1,___flmul@grs+2
 13672  00224A  C03A  F03B         	movff	___flmul@grs,___flmul@grs+1
 13673  00224E  6A3A               	clrf	___flmul@grs^0,c
 13674  002250  5031               	movf	___flmul@a^0,w,c
 13675  002252  022E               	mulwf	(___flmul@b+1)^0,c
 13676  002254  CFF3 F044          	movff	prodl,___flmul@temp
 13677  002258  CFF4 F045          	movff	prodh,___flmul@temp+1
 13678  00225C  5044               	movf	___flmul@temp^0,w,c
 13679  00225E  263A               	addwf	___flmul@grs^0,f,c
 13680  002260  5045               	movf	(___flmul@temp+1)^0,w,c
 13681  002262  223B               	addwfc	(___flmul@grs+1)^0,f,c
 13682  002264  0E00               	movlw	0
 13683  002266  223C               	addwfc	(___flmul@grs+2)^0,f,c
 13684  002268  0E00               	movlw	0
 13685  00226A  223D               	addwfc	(___flmul@grs+3)^0,f,c
 13686  00226C  5032               	movf	(___flmul@a+1)^0,w,c
 13687  00226E  022D               	mulwf	___flmul@b^0,c
 13688  002270  CFF3 F044          	movff	prodl,___flmul@temp
 13689  002274  CFF4 F045          	movff	prodh,___flmul@temp+1
 13690  002278  5044               	movf	___flmul@temp^0,w,c
 13691  00227A  263A               	addwf	___flmul@grs^0,f,c
 13692  00227C  5045               	movf	(___flmul@temp+1)^0,w,c
 13693  00227E  223B               	addwfc	(___flmul@grs+1)^0,f,c
 13694  002280  0E00               	movlw	0
 13695  002282  223C               	addwfc	(___flmul@grs+2)^0,f,c
 13696  002284  0E00               	movlw	0
 13697  002286  223D               	addwfc	(___flmul@grs+3)^0,f,c
 13698  002288  C03C  F03D         	movff	___flmul@grs+2,___flmul@grs+3
 13699  00228C  C03B  F03C         	movff	___flmul@grs+1,___flmul@grs+2
 13700  002290  C03A  F03B         	movff	___flmul@grs,___flmul@grs+1
 13701  002294  6A3A               	clrf	___flmul@grs^0,c
 13702  002296  5031               	movf	___flmul@a^0,w,c
 13703  002298  022D               	mulwf	___flmul@b^0,c
 13704  00229A  CFF3 F044          	movff	prodl,___flmul@temp
 13705  00229E  CFF4 F045          	movff	prodh,___flmul@temp+1
 13706  0022A2  5044               	movf	___flmul@temp^0,w,c
 13707  0022A4  263A               	addwf	___flmul@grs^0,f,c
 13708  0022A6  5045               	movf	(___flmul@temp+1)^0,w,c
 13709  0022A8  223B               	addwfc	(___flmul@grs+1)^0,f,c
 13710  0022AA  0E00               	movlw	0
 13711  0022AC  223C               	addwfc	(___flmul@grs+2)^0,f,c
 13712  0022AE  0E00               	movlw	0
 13713  0022B0  223D               	addwfc	(___flmul@grs+3)^0,f,c
 13714  0022B2  5033               	movf	(___flmul@a+2)^0,w,c
 13715  0022B4  022E               	mulwf	(___flmul@b+1)^0,c
 13716  0022B6  CFF3 F044          	movff	prodl,___flmul@temp
 13717  0022BA  CFF4 F045          	movff	prodh,___flmul@temp+1
 13718  0022BE  5044               	movf	___flmul@temp^0,w,c
 13719  0022C0  2640               	addwf	___flmul@prod^0,f,c
 13720  0022C2  5045               	movf	(___flmul@temp+1)^0,w,c
 13721  0022C4  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13722  0022C6  0E00               	movlw	0
 13723  0022C8  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13724  0022CA  0E00               	movlw	0
 13725  0022CC  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13726  0022CE  5032               	movf	(___flmul@a+1)^0,w,c
 13727  0022D0  022F               	mulwf	(___flmul@b+2)^0,c
 13728  0022D2  CFF3 F044          	movff	prodl,___flmul@temp
 13729  0022D6  CFF4 F045          	movff	prodh,___flmul@temp+1
 13730  0022DA  5044               	movf	___flmul@temp^0,w,c
 13731  0022DC  2640               	addwf	___flmul@prod^0,f,c
 13732  0022DE  5045               	movf	(___flmul@temp+1)^0,w,c
 13733  0022E0  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13734  0022E2  0E00               	movlw	0
 13735  0022E4  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13736  0022E6  0E00               	movlw	0
 13737  0022E8  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13738  0022EA  5033               	movf	(___flmul@a+2)^0,w,c
 13739  0022EC  022F               	mulwf	(___flmul@b+2)^0,c
 13740  0022EE  CFF3 F044          	movff	prodl,___flmul@temp
 13741  0022F2  CFF4 F045          	movff	prodh,___flmul@temp+1
 13742  0022F6  5044               	movf	___flmul@temp^0,w,c
 13743  0022F8  6E35               	movwf	??___flmul^0,c
 13744  0022FA  5045               	movf	(___flmul@temp+1)^0,w,c
 13745  0022FC  6E36               	movwf	(??___flmul+1)^0,c
 13746  0022FE  6A37               	clrf	(??___flmul+2)^0,c
 13747  002300  6A38               	clrf	(??___flmul+3)^0,c
 13748  002302  C037  F038         	movff	??___flmul+2,??___flmul+3
 13749  002306  C036  F037         	movff	??___flmul+1,??___flmul+2
 13750  00230A  C035  F036         	movff	??___flmul,??___flmul+1
 13751  00230E  6A35               	clrf	??___flmul^0,c
 13752  002310  5035               	movf	??___flmul^0,w,c
 13753  002312  2640               	addwf	___flmul@prod^0,f,c
 13754  002314  5036               	movf	(??___flmul+1)^0,w,c
 13755  002316  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13756  002318  5037               	movf	(??___flmul+2)^0,w,c
 13757  00231A  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13758  00231C  5038               	movf	(??___flmul+3)^0,w,c
 13759  00231E  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13760  002320  C03A  F035         	movff	___flmul@grs,??___flmul
 13761  002324  C03B  F036         	movff	___flmul@grs+1,??___flmul+1
 13762  002328  C03C  F037         	movff	___flmul@grs+2,??___flmul+2
 13763  00232C  C03D  F038         	movff	___flmul@grs+3,??___flmul+3
 13764  002330  0E19               	movlw	25
 13765  002332  EFA1  F011         	goto	u5930
 13766  002336                     u5935:
 13767  002336  FFFF               	dw	65535	; assembler added errata NOP
 13768  002338  90D8               	bcf	status,0,c
 13769  00233A  3238               	rrcf	(??___flmul+3)^0,f,c
 13770  00233C  3237               	rrcf	(??___flmul+2)^0,f,c
 13771  00233E  3236               	rrcf	(??___flmul+1)^0,f,c
 13772  002340  3235               	rrcf	??___flmul^0,f,c
 13773  002342                     u5930:
 13774  002342  FFFF               	dw	65535	; assembler added errata NOP
 13775  002344  2EE8               	decfsz	wreg,f,c
 13776  002346  EF9B  F011         	goto	u5935
 13777  00234A  5035               	movf	??___flmul^0,w,c
 13778  00234C  2640               	addwf	___flmul@prod^0,f,c
 13779  00234E  5036               	movf	(??___flmul+1)^0,w,c
 13780  002350  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13781  002352  5037               	movf	(??___flmul+2)^0,w,c
 13782  002354  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13783  002356  5038               	movf	(??___flmul+3)^0,w,c
 13784  002358  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13785  00235A  C03C  F03D         	movff	___flmul@grs+2,___flmul@grs+3
 13786  00235E  C03B  F03C         	movff	___flmul@grs+1,___flmul@grs+2
 13787  002362  C03A  F03B         	movff	___flmul@grs,___flmul@grs+1
 13788  002366  6A3A               	clrf	___flmul@grs^0,c
 13789  002368  503E               	movf	___flmul@aexp^0,w,c
 13790  00236A  C03F  F035         	movff	___flmul@bexp,??___flmul
 13791  00236E  6A36               	clrf	(??___flmul+1)^0,c
 13792  002370  2635               	addwf	??___flmul^0,f,c
 13793  002372  0E00               	movlw	0
 13794  002374  2236               	addwfc	(??___flmul+1)^0,f,c
 13795  002376  0E82               	movlw	130
 13796  002378  2435               	addwf	??___flmul^0,w,c
 13797  00237A  6E44               	movwf	___flmul@temp^0,c
 13798  00237C  0EFF               	movlw	255
 13799  00237E  2036               	addwfc	(??___flmul+1)^0,w,c
 13800  002380  6E45               	movwf	(___flmul@temp+1)^0,c
 13801  002382  EFDC  F011         	goto	l4888
 13802  002386                     l4882:
 13803  002386  FFFF               	dw	65535	; assembler added errata NOP
 13804  002388  90D8               	bcf	status,0,c
 13805  00238A  3640               	rlcf	___flmul@prod^0,f,c
 13806  00238C  3641               	rlcf	(___flmul@prod+1)^0,f,c
 13807  00238E  3642               	rlcf	(___flmul@prod+2)^0,f,c
 13808  002390  3643               	rlcf	(___flmul@prod+3)^0,f,c
 13809  002392  AE3D               	btfss	(___flmul@grs+3)^0,7,c
 13810  002394  EFCE  F011         	goto	u5941
 13811  002398  EFD1  F011         	goto	u5940
 13812  00239C                     u5941:
 13813  00239C  FFFF               	dw	65535	; assembler added errata NOP
 13814  00239E  EFD3  F011         	goto	l1001
 13815  0023A2                     u5940:
 13816  0023A2  FFFF               	dw	65535	; assembler added errata NOP
 13817  0023A4  8040               	bsf	___flmul@prod^0,0,c
 13818  0023A6                     l1001:
 13819  0023A6  FFFF               	dw	65535	; assembler added errata NOP
 13820  0023A8  90D8               	bcf	status,0,c
 13821  0023AA  363A               	rlcf	___flmul@grs^0,f,c
 13822  0023AC  363B               	rlcf	(___flmul@grs+1)^0,f,c
 13823  0023AE  363C               	rlcf	(___flmul@grs+2)^0,f,c
 13824  0023B0  363D               	rlcf	(___flmul@grs+3)^0,f,c
 13825  0023B2  0644               	decf	___flmul@temp^0,f,c
 13826  0023B4  A0D8               	btfss	status,0,c
 13827  0023B6  0645               	decf	(___flmul@temp+1)^0,f,c
 13828  0023B8                     l4888:
 13829  0023B8  FFFF               	dw	65535	; assembler added errata NOP
 13830  0023BA  AE42               	btfss	(___flmul@prod+2)^0,7,c
 13831  0023BC  EFE2  F011         	goto	u5951
 13832  0023C0  EFE5  F011         	goto	u5950
 13833  0023C4                     u5951:
 13834  0023C4  FFFF               	dw	65535	; assembler added errata NOP
 13835  0023C6  EFC3  F011         	goto	l4882
 13836  0023CA                     u5950:
 13837  0023CA  FFFF               	dw	65535	; assembler added errata NOP
 13838  0023CC  0E00               	movlw	0
 13839  0023CE  6E3E               	movwf	___flmul@aexp^0,c
 13840  0023D0  AE3D               	btfss	(___flmul@grs+3)^0,7,c
 13841  0023D2  EFED  F011         	goto	u5961
 13842  0023D6  EFF0  F011         	goto	u5960
 13843  0023DA                     u5961:
 13844  0023DA  FFFF               	dw	65535	; assembler added errata NOP
 13845  0023DC  EF1B  F012         	goto	l1003
 13846  0023E0                     u5960:
 13847  0023E0  FFFF               	dw	65535	; assembler added errata NOP
 13848  0023E2  0EFF               	movlw	255
 13849  0023E4  143A               	andwf	___flmul@grs^0,w,c
 13850  0023E6  6E35               	movwf	??___flmul^0,c
 13851  0023E8  0EFF               	movlw	255
 13852  0023EA  143B               	andwf	(___flmul@grs+1)^0,w,c
 13853  0023EC  6E36               	movwf	(??___flmul+1)^0,c
 13854  0023EE  0EFF               	movlw	255
 13855  0023F0  143C               	andwf	(___flmul@grs+2)^0,w,c
 13856  0023F2  6E37               	movwf	(??___flmul+2)^0,c
 13857  0023F4  0E7F               	movlw	127
 13858  0023F6  143D               	andwf	(___flmul@grs+3)^0,w,c
 13859  0023F8  6E38               	movwf	(??___flmul+3)^0,c
 13860  0023FA  5035               	movf	??___flmul^0,w,c
 13861  0023FC  1036               	iorwf	(??___flmul+1)^0,w,c
 13862  0023FE  1037               	iorwf	(??___flmul+2)^0,w,c
 13863  002400  1038               	iorwf	(??___flmul+3)^0,w,c
 13864  002402  B4D8               	btfsc	status,2,c
 13865  002404  EF06  F012         	goto	u5971
 13866  002408  EF09  F012         	goto	u5970
 13867  00240C                     u5971:
 13868  00240C  FFFF               	dw	65535	; assembler added errata NOP
 13869  00240E  EF0F  F012         	goto	l1004
 13870  002412                     u5970:
 13871  002412  FFFF               	dw	65535	; assembler added errata NOP
 13872  002414                     l4896:
 13873  002414  FFFF               	dw	65535	; assembler added errata NOP
 13874  002416  0E01               	movlw	1
 13875  002418  6E3E               	movwf	___flmul@aexp^0,c
 13876  00241A  EF1B  F012         	goto	l1003
 13877  00241E                     l1004:
 13878  00241E  FFFF               	dw	65535	; assembler added errata NOP
 13879  002420  A040               	btfss	___flmul@prod^0,0,c
 13880  002422  EF15  F012         	goto	u5981
 13881  002426  EF18  F012         	goto	u5980
 13882  00242A                     u5981:
 13883  00242A  FFFF               	dw	65535	; assembler added errata NOP
 13884  00242C  EF1B  F012         	goto	l1003
 13885  002430                     u5980:
 13886  002430  FFFF               	dw	65535	; assembler added errata NOP
 13887  002432  EF0A  F012         	goto	l4896
 13888  002436                     l1003:
 13889  002436  FFFF               	dw	65535	; assembler added errata NOP
 13890  002438  503E               	movf	___flmul@aexp^0,w,c
 13891  00243A  B4D8               	btfsc	status,2,c
 13892  00243C  EF22  F012         	goto	u5991
 13893  002440  EF25  F012         	goto	u5990
 13894  002444                     u5991:
 13895  002444  FFFF               	dw	65535	; assembler added errata NOP
 13896  002446  EF4C  F012         	goto	l4908
 13897  00244A                     u5990:
 13898  00244A  FFFF               	dw	65535	; assembler added errata NOP
 13899  00244C  0E01               	movlw	1
 13900  00244E  2640               	addwf	___flmul@prod^0,f,c
 13901  002450  0E00               	movlw	0
 13902  002452  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13903  002454  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13904  002456  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13905  002458  A043               	btfss	(___flmul@prod+3)^0,0,c
 13906  00245A  EF31  F012         	goto	u6001
 13907  00245E  EF34  F012         	goto	u6000
 13908  002462                     u6001:
 13909  002462  FFFF               	dw	65535	; assembler added errata NOP
 13910  002464  EF4C  F012         	goto	l4908
 13911  002468                     u6000:
 13912  002468  FFFF               	dw	65535	; assembler added errata NOP
 13913  00246A  C040  F035         	movff	___flmul@prod,??___flmul
 13914  00246E  C041  F036         	movff	___flmul@prod+1,??___flmul+1
 13915  002472  C042  F037         	movff	___flmul@prod+2,??___flmul+2
 13916  002476  C043  F038         	movff	___flmul@prod+3,??___flmul+3
 13917  00247A  3438               	rlcf	(??___flmul+3)^0,w,c
 13918  00247C  3238               	rrcf	(??___flmul+3)^0,f,c
 13919  00247E  3237               	rrcf	(??___flmul+2)^0,f,c
 13920  002480  3236               	rrcf	(??___flmul+1)^0,f,c
 13921  002482  3235               	rrcf	??___flmul^0,f,c
 13922  002484  C035  F040         	movff	??___flmul,___flmul@prod
 13923  002488  C036  F041         	movff	??___flmul+1,___flmul@prod+1
 13924  00248C  C037  F042         	movff	??___flmul+2,___flmul@prod+2
 13925  002490  C038  F043         	movff	??___flmul+3,___flmul@prod+3
 13926  002494  4A44               	infsnz	___flmul@temp^0,f,c
 13927  002496  2A45               	incf	(___flmul@temp+1)^0,f,c
 13928  002498                     l4908:
 13929  002498  FFFF               	dw	65535	; assembler added errata NOP
 13930  00249A  BE45               	btfsc	(___flmul@temp+1)^0,7,c
 13931  00249C  EF58  F012         	goto	u6011
 13932  0024A0  5045               	movf	(___flmul@temp+1)^0,w,c
 13933  0024A2  E109               	bnz	u6010
 13934  0024A4  2844               	incf	___flmul@temp^0,w,c
 13935  0024A6  A0D8               	btfss	status,0,c
 13936  0024A8  EF58  F012         	goto	u6011
 13937  0024AC  EF5B  F012         	goto	u6010
 13938  0024B0                     u6011:
 13939  0024B0  FFFF               	dw	65535	; assembler added errata NOP
 13940  0024B2  EF66  F012         	goto	l4912
 13941  0024B6                     u6010:
 13942  0024B6  FFFF               	dw	65535	; assembler added errata NOP
 13943  0024B8  0E00               	movlw	0
 13944  0024BA  6E40               	movwf	___flmul@prod^0,c
 13945  0024BC  0E00               	movlw	0
 13946  0024BE  6E41               	movwf	(___flmul@prod+1)^0,c
 13947  0024C0  0E80               	movlw	128
 13948  0024C2  6E42               	movwf	(___flmul@prod+2)^0,c
 13949  0024C4  0E7F               	movlw	127
 13950  0024C6  6E43               	movwf	(___flmul@prod+3)^0,c
 13951  0024C8  EF9B  F012         	goto	l4924
 13952  0024CC                     l4912:
 13953  0024CC  FFFF               	dw	65535	; assembler added errata NOP
 13954  0024CE  BE45               	btfsc	(___flmul@temp+1)^0,7,c
 13955  0024D0  EF75  F012         	goto	u6020
 13956  0024D4  5045               	movf	(___flmul@temp+1)^0,w,c
 13957  0024D6  E106               	bnz	u6021
 13958  0024D8  0444               	decf	___flmul@temp^0,w,c
 13959  0024DA  B0D8               	btfsc	status,0,c
 13960  0024DC  EF72  F012         	goto	u6021
 13961  0024E0  EF75  F012         	goto	u6020
 13962  0024E4                     u6021:
 13963  0024E4  FFFF               	dw	65535	; assembler added errata NOP
 13964  0024E6  EF82  F012         	goto	l1011
 13965  0024EA                     u6020:
 13966  0024EA  FFFF               	dw	65535	; assembler added errata NOP
 13967  0024EC  0E00               	movlw	0
 13968  0024EE  6E40               	movwf	___flmul@prod^0,c
 13969  0024F0  0E00               	movlw	0
 13970  0024F2  6E41               	movwf	(___flmul@prod+1)^0,c
 13971  0024F4  0E00               	movlw	0
 13972  0024F6  6E42               	movwf	(___flmul@prod+2)^0,c
 13973  0024F8  0E00               	movlw	0
 13974  0024FA  6E43               	movwf	(___flmul@prod+3)^0,c
 13975  0024FC  0E00               	movlw	0
 13976  0024FE  6E39               	movwf	___flmul@sign^0,c
 13977  002500  EF9B  F012         	goto	l4924
 13978  002504                     l1011:
 13979  002504  FFFF               	dw	65535	; assembler added errata NOP
 13980  002506  C044  F03F         	movff	___flmul@temp,___flmul@bexp
 13981  00250A  0EFF               	movlw	255
 13982  00250C  1640               	andwf	___flmul@prod^0,f,c
 13983  00250E  0EFF               	movlw	255
 13984  002510  1641               	andwf	(___flmul@prod+1)^0,f,c
 13985  002512  0E7F               	movlw	127
 13986  002514  1642               	andwf	(___flmul@prod+2)^0,f,c
 13987  002516  0E00               	movlw	0
 13988  002518  1643               	andwf	(___flmul@prod+3)^0,f,c
 13989  00251A  A03F               	btfss	___flmul@bexp^0,0,c
 13990  00251C  EF92  F012         	goto	u6031
 13991  002520  EF95  F012         	goto	u6030
 13992  002524                     u6031:
 13993  002524  FFFF               	dw	65535	; assembler added errata NOP
 13994  002526  EF97  F012         	goto	l4922
 13995  00252A                     u6030:
 13996  00252A  FFFF               	dw	65535	; assembler added errata NOP
 13997  00252C  8E42               	bsf	(___flmul@prod+2)^0,7,c
 13998  00252E                     l4922:
 13999  00252E  FFFF               	dw	65535	; assembler added errata NOP
 14000  002530  90D8               	bcf	status,0,c
 14001  002532  303F               	rrcf	___flmul@bexp^0,w,c
 14002  002534  6E43               	movwf	(___flmul@prod+3)^0,c
 14003  002536                     l4924:
 14004  002536  FFFF               	dw	65535	; assembler added errata NOP
 14005  002538  5039               	movf	___flmul@sign^0,w,c
 14006  00253A  1243               	iorwf	(___flmul@prod+3)^0,f,c
 14007  00253C  C040  F02D         	movff	___flmul@prod,?___flmul
 14008  002540  C041  F02E         	movff	___flmul@prod+1,?___flmul+1
 14009  002544  C042  F02F         	movff	___flmul@prod+2,?___flmul+2
 14010  002548  C043  F030         	movff	___flmul@prod+3,?___flmul+3
 14011  00254C                     l998:
 14012  00254C  FFFF               	dw	65535	; assembler added errata NOP
 14013  00254E  0012               	return		;funcret
 14014  002550  FFFF               	dw	65535	; errata NOP
 14015  002552                     __end_of___flmul:
 14016                           	callstack 0
 14017                           
 14018 ;; *************** function ___fltol *****************
 14019 ;; Defined at:
 14020 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
 14021 ;; Parameters:    Size  Location     Type
 14022 ;;  f1              4   18[BANK0 ] unsigned char 
 14023 ;; Auto vars:     Size  Location     Type
 14024 ;;  exp1            1   27[BANK0 ] unsigned char 
 14025 ;;  sign1           1   26[BANK0 ] unsigned char 
 14026 ;; Return value:  Size  Location     Type
 14027 ;;                  4   18[BANK0 ] long 
 14028 ;; Registers used:
 14029 ;;		wreg, status,2, status,0
 14030 ;; Tracked objects:
 14031 ;;		On entry : 0/0
 14032 ;;		On exit  : 0/0
 14033 ;;		Unchanged: 0/0
 14034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14035 ;;      Params:         0       4       0       0       0       0       0
 14036 ;;      Locals:         0       2       0       0       0       0       0
 14037 ;;      Temps:          0       4       0       0       0       0       0
 14038 ;;      Totals:         0      10       0       0       0       0       0
 14039 ;;Total ram usage:       10 bytes
 14040 ;; Hardware stack levels used:    1
 14041 ;; Hardware stack levels required when called:    1
 14042 ;; This function calls:
 14043 ;;		Nothing
 14044 ;; This function is called by:
 14045 ;;		_init_USART
 14046 ;;		_init_timer_2
 14047 ;;		_update_pwm_duty_ccp1
 14048 ;;		_get_temperature
 14049 ;; This function uses a non-reentrant model
 14050 ;;
 14051                           
 14052                           	psect	text55
 14053  007AB2                     __ptext55:
 14054                           	callstack 0
 14055  007AB2                     ___fltol:
 14056                           	callstack 0
 14057  007AB2  FFFF               	dw	65535	; assembler added errata NOP
 14058  007AB4  0100               	movlb	0	; () banked
 14059  007AB6  35CC               	rlcf	(___fltol@f1+2)& (0+255),w,b
 14060  007AB8  35CD               	rlcf	(___fltol@f1+3)& (0+255),w,b
 14061  007ABA  6FD3               	movwf	___fltol@exp1& (0+255),b
 14062  007ABC  51D3               	movf	___fltol@exp1& (0+255),w,b
 14063  007ABE  A4D8               	btfss	status,2,c
 14064  007AC0  EF64  F03D         	goto	u6101
 14065  007AC4  EF67  F03D         	goto	u6100
 14066  007AC8                     u6101:
 14067  007AC8  FFFF               	dw	65535	; assembler added errata NOP
 14068  007ACA  EF73  F03D         	goto	l4972
 14069  007ACE                     u6100:
 14070  007ACE  FFFF               	dw	65535	; assembler added errata NOP
 14071  007AD0                     l4968:
 14072  007AD0  FFFF               	dw	65535	; assembler added errata NOP
 14073                           
 14074                           ; BSR set to: 0
 14075  007AD2  0E00               	movlw	0
 14076  007AD4  6FCA               	movwf	?___fltol& (0+255),b
 14077  007AD6  0E00               	movlw	0
 14078  007AD8  6FCB               	movwf	(?___fltol+1)& (0+255),b
 14079  007ADA  0E00               	movlw	0
 14080  007ADC  6FCC               	movwf	(?___fltol+2)& (0+255),b
 14081  007ADE  0E00               	movlw	0
 14082  007AE0  6FCD               	movwf	(?___fltol+3)& (0+255),b
 14083  007AE2  EFF2  F03D         	goto	l677
 14084  007AE6                     l4972:
 14085  007AE6  FFFF               	dw	65535	; assembler added errata NOP
 14086                           
 14087                           ; BSR set to: 0
 14088  007AE8  C0CA  F0CE         	movff	___fltol@f1,??___fltol
 14089  007AEC  C0CB  F0CF         	movff	___fltol@f1+1,??___fltol+1
 14090  007AF0  C0CC  F0D0         	movff	___fltol@f1+2,??___fltol+2
 14091  007AF4  C0CD  F0D1         	movff	___fltol@f1+3,??___fltol+3
 14092  007AF8  0E20               	movlw	32
 14093  007AFA  EF85  F03D         	goto	u6110
 14094  007AFE                     u6115:
 14095  007AFE  FFFF               	dw	65535	; assembler added errata NOP
 14096  007B00  90D8               	bcf	status,0,c
 14097  007B02  33D1               	rrcf	(??___fltol+3)& (0+255),f,b
 14098  007B04  33D0               	rrcf	(??___fltol+2)& (0+255),f,b
 14099  007B06  33CF               	rrcf	(??___fltol+1)& (0+255),f,b
 14100  007B08  33CE               	rrcf	??___fltol& (0+255),f,b
 14101  007B0A                     u6110:
 14102  007B0A  FFFF               	dw	65535	; assembler added errata NOP
 14103  007B0C  2EE8               	decfsz	wreg,f,c
 14104  007B0E  EF7F  F03D         	goto	u6115
 14105  007B12  51CE               	movf	??___fltol& (0+255),w,b
 14106  007B14  6FD2               	movwf	___fltol@sign1& (0+255),b
 14107  007B16                     
 14108                           ; BSR set to: 0
 14109  007B16  8FCC               	bsf	(___fltol@f1+2)& (0+255),7,b
 14110  007B18                     
 14111                           ; BSR set to: 0
 14112  007B18  0EFF               	movlw	255
 14113  007B1A  17CA               	andwf	___fltol@f1& (0+255),f,b
 14114  007B1C  0EFF               	movlw	255
 14115  007B1E  17CB               	andwf	(___fltol@f1+1)& (0+255),f,b
 14116  007B20  0EFF               	movlw	255
 14117  007B22  17CC               	andwf	(___fltol@f1+2)& (0+255),f,b
 14118  007B24  0E00               	movlw	0
 14119  007B26  17CD               	andwf	(___fltol@f1+3)& (0+255),f,b
 14120  007B28                     
 14121                           ; BSR set to: 0
 14122  007B28  0E96               	movlw	150
 14123  007B2A  5FD3               	subwf	___fltol@exp1& (0+255),f,b
 14124  007B2C                     
 14125                           ; BSR set to: 0
 14126  007B2C  BFD3               	btfsc	___fltol@exp1& (0+255),7,b
 14127  007B2E  EF9E  F03D         	goto	u6120
 14128  007B32  EF9B  F03D         	goto	u6121
 14129  007B36                     u6121:
 14130  007B36  FFFF               	dw	65535	; assembler added errata NOP
 14131  007B38  EFB8  F03D         	goto	l4992
 14132  007B3C                     u6120:
 14133  007B3C  FFFF               	dw	65535	; assembler added errata NOP
 14134  007B3E                     
 14135                           ; BSR set to: 0
 14136  007B3E  51D3               	movf	___fltol@exp1& (0+255),w,b
 14137  007B40  0A80               	xorlw	128
 14138  007B42  0F97               	addlw	151
 14139  007B44  B0D8               	btfsc	status,0,c
 14140  007B46  EFA7  F03D         	goto	u6131
 14141  007B4A  EFAA  F03D         	goto	u6130
 14142  007B4E                     u6131:
 14143  007B4E  FFFF               	dw	65535	; assembler added errata NOP
 14144  007B50  EFAD  F03D         	goto	l4988
 14145  007B54                     u6130:
 14146  007B54  FFFF               	dw	65535	; assembler added errata NOP
 14147  007B56  EF68  F03D         	goto	l4968
 14148  007B5A                     l4988:
 14149  007B5A  FFFF               	dw	65535	; assembler added errata NOP
 14150                           
 14151                           ; BSR set to: 0
 14152  007B5C  90D8               	bcf	status,0,c
 14153  007B5E  33CD               	rrcf	(___fltol@f1+3)& (0+255),f,b
 14154  007B60  33CC               	rrcf	(___fltol@f1+2)& (0+255),f,b
 14155  007B62  33CB               	rrcf	(___fltol@f1+1)& (0+255),f,b
 14156  007B64  33CA               	rrcf	___fltol@f1& (0+255),f,b
 14157  007B66                     
 14158                           ; BSR set to: 0
 14159  007B66  3FD3               	incfsz	___fltol@exp1& (0+255),f,b
 14160  007B68  EFAD  F03D         	goto	l4988
 14161  007B6C  EFD6  F03D         	goto	l5002
 14162  007B70                     l4992:
 14163  007B70  FFFF               	dw	65535	; assembler added errata NOP
 14164                           
 14165                           ; BSR set to: 0
 14166  007B72  0E1F               	movlw	31
 14167  007B74  65D3               	cpfsgt	___fltol@exp1& (0+255),b
 14168  007B76  EFBF  F03D         	goto	u6141
 14169  007B7A  EFC2  F03D         	goto	u6140
 14170  007B7E                     u6141:
 14171  007B7E  FFFF               	dw	65535	; assembler added errata NOP
 14172  007B80  EFCC  F03D         	goto	l5000
 14173  007B84                     u6140:
 14174  007B84  FFFF               	dw	65535	; assembler added errata NOP
 14175  007B86  EF68  F03D         	goto	l4968
 14176  007B8A                     l4998:
 14177  007B8A  FFFF               	dw	65535	; assembler added errata NOP
 14178                           
 14179                           ; BSR set to: 0
 14180  007B8C  90D8               	bcf	status,0,c
 14181  007B8E  37CA               	rlcf	___fltol@f1& (0+255),f,b
 14182  007B90  37CB               	rlcf	(___fltol@f1+1)& (0+255),f,b
 14183  007B92  37CC               	rlcf	(___fltol@f1+2)& (0+255),f,b
 14184  007B94  37CD               	rlcf	(___fltol@f1+3)& (0+255),f,b
 14185  007B96  07D3               	decf	___fltol@exp1& (0+255),f,b
 14186  007B98                     l5000:
 14187  007B98  FFFF               	dw	65535	; assembler added errata NOP
 14188                           
 14189                           ; BSR set to: 0
 14190  007B9A  51D3               	movf	___fltol@exp1& (0+255),w,b
 14191  007B9C  A4D8               	btfss	status,2,c
 14192  007B9E  EFD3  F03D         	goto	u6151
 14193  007BA2  EFD6  F03D         	goto	u6150
 14194  007BA6                     u6151:
 14195  007BA6  FFFF               	dw	65535	; assembler added errata NOP
 14196  007BA8  EFC5  F03D         	goto	l4998
 14197  007BAC                     u6150:
 14198  007BAC                     l5002:
 14199  007BAC  FFFF               	dw	65535	; assembler added errata NOP
 14200                           
 14201                           ; BSR set to: 0
 14202  007BAE  51D2               	movf	___fltol@sign1& (0+255),w,b
 14203  007BB0  B4D8               	btfsc	status,2,c
 14204  007BB2  EFDD  F03D         	goto	u6161
 14205  007BB6  EFE0  F03D         	goto	u6160
 14206  007BBA                     u6161:
 14207  007BBA  FFFF               	dw	65535	; assembler added errata NOP
 14208  007BBC  EFE9  F03D         	goto	l5006
 14209  007BC0                     u6160:
 14210  007BC0  FFFF               	dw	65535	; assembler added errata NOP
 14211  007BC2                     
 14212                           ; BSR set to: 0
 14213  007BC2  1FCD               	comf	(___fltol@f1+3)& (0+255),f,b
 14214  007BC4  1FCC               	comf	(___fltol@f1+2)& (0+255),f,b
 14215  007BC6  1FCB               	comf	(___fltol@f1+1)& (0+255),f,b
 14216  007BC8  6DCA               	negf	___fltol@f1& (0+255),b
 14217  007BCA  0E00               	movlw	0
 14218  007BCC  23CB               	addwfc	(___fltol@f1+1)& (0+255),f,b
 14219  007BCE  23CC               	addwfc	(___fltol@f1+2)& (0+255),f,b
 14220  007BD0  23CD               	addwfc	(___fltol@f1+3)& (0+255),f,b
 14221  007BD2                     l5006:
 14222  007BD2  FFFF               	dw	65535	; assembler added errata NOP
 14223                           
 14224                           ; BSR set to: 0
 14225  007BD4  C0CA  F0CA         	movff	___fltol@f1,?___fltol
 14226  007BD8  C0CB  F0CB         	movff	___fltol@f1+1,?___fltol+1
 14227  007BDC  C0CC  F0CC         	movff	___fltol@f1+2,?___fltol+2
 14228  007BE0  C0CD  F0CD         	movff	___fltol@f1+3,?___fltol+3
 14229  007BE4                     l677:
 14230  007BE4  FFFF               	dw	65535	; assembler added errata NOP
 14231                           
 14232                           ; BSR set to: 0
 14233  007BE6  0012               	return		;funcret
 14234  007BE8  FFFF               	dw	65535	; errata NOP
 14235  007BEA                     __end_of___fltol:
 14236                           	callstack 0
 14237                           
 14238 ;; *************** function _init_PORTS *****************
 14239 ;; Defined at:
 14240 ;;		line 61 in file "init_PIC.c"
 14241 ;; Parameters:    Size  Location     Type
 14242 ;;		None
 14243 ;; Auto vars:     Size  Location     Type
 14244 ;;		None
 14245 ;; Return value:  Size  Location     Type
 14246 ;;                  1    wreg      void 
 14247 ;; Registers used:
 14248 ;;		wreg, status,2
 14249 ;; Tracked objects:
 14250 ;;		On entry : 0/0
 14251 ;;		On exit  : 0/0
 14252 ;;		Unchanged: 0/0
 14253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14254 ;;      Params:         0       0       0       0       0       0       0
 14255 ;;      Locals:         0       0       0       0       0       0       0
 14256 ;;      Temps:          0       0       0       0       0       0       0
 14257 ;;      Totals:         0       0       0       0       0       0       0
 14258 ;;Total ram usage:        0 bytes
 14259 ;; Hardware stack levels used:    1
 14260 ;; Hardware stack levels required when called:    1
 14261 ;; This function calls:
 14262 ;;		Nothing
 14263 ;; This function is called by:
 14264 ;;		_main
 14265 ;; This function uses a non-reentrant model
 14266 ;;
 14267                           
 14268                           	psect	text56
 14269  006716                     __ptext56:
 14270                           	callstack 0
 14271  006716                     _init_PORTS:
 14272                           	callstack 0
 14273  006716  FFFF               	dw	65535	; assembler added errata NOP
 14274  006718                     
 14275                           ;init_PIC.c: 63:     LATA = 0;
 14276  006718  0E00               	movlw	0
 14277  00671A  6E89               	movwf	137,c	;volatile
 14278                           
 14279                           ;init_PIC.c: 64:     PORTA = 0;
 14280  00671C  0E00               	movlw	0
 14281  00671E  6E80               	movwf	128,c	;volatile
 14282                           
 14283                           ;init_PIC.c: 65:     TRISA = 0xF0;
 14284  006720  0EF0               	movlw	240
 14285  006722  6E92               	movwf	146,c	;volatile
 14286                           
 14287                           ;init_PIC.c: 67:     LATB = 0;
 14288  006724  0E00               	movlw	0
 14289  006726  6E8A               	movwf	138,c	;volatile
 14290                           
 14291                           ;init_PIC.c: 68:     PORTB = 0;
 14292  006728  0E00               	movlw	0
 14293  00672A  6E81               	movwf	129,c	;volatile
 14294                           
 14295                           ;init_PIC.c: 69:     TRISB = 0x00;
 14296  00672C  0E00               	movlw	0
 14297  00672E  6E93               	movwf	147,c	;volatile
 14298                           
 14299                           ;init_PIC.c: 72:     LATC = 0;
 14300  006730  0E00               	movlw	0
 14301  006732  6E8B               	movwf	139,c	;volatile
 14302                           
 14303                           ;init_PIC.c: 73:     PORTC = 0;
 14304  006734  0E00               	movlw	0
 14305  006736  6E82               	movwf	130,c	;volatile
 14306  006738                     
 14307                           ;init_PIC.c: 74:     TRISCbits.RC2 = 0;
 14308  006738  9494               	bcf	148,2,c	;volatile
 14309  00673A                     
 14310                           ;init_PIC.c: 75:     TRISCbits.RC7 = 1;
 14311  00673A  8E94               	bsf	148,7,c	;volatile
 14312  00673C                     
 14313                           ;init_PIC.c: 76:     TRISCbits.RC6 = 0;
 14314  00673C  9C94               	bcf	148,6,c	;volatile
 14315  00673E  0012               	return		;funcret
 14316  006740  FFFF               	dw	65535	; errata NOP
 14317  006742                     __end_of_init_PORTS:
 14318                           	callstack 0
 14319                           
 14320 ;; *************** function _get_reg_value *****************
 14321 ;; Defined at:
 14322 ;;		line 51 in file "serial_rs232.c"
 14323 ;; Parameters:    Size  Location     Type
 14324 ;;		None
 14325 ;; Auto vars:     Size  Location     Type
 14326 ;;  rx_char         1    0[COMRAM] unsigned char 
 14327 ;; Return value:  Size  Location     Type
 14328 ;;                  1    wreg      unsigned char 
 14329 ;; Registers used:
 14330 ;;		wreg, status,2
 14331 ;; Tracked objects:
 14332 ;;		On entry : 0/0
 14333 ;;		On exit  : 0/0
 14334 ;;		Unchanged: 0/0
 14335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14336 ;;      Params:         0       0       0       0       0       0       0
 14337 ;;      Locals:         1       0       0       0       0       0       0
 14338 ;;      Temps:          0       0       0       0       0       0       0
 14339 ;;      Totals:         1       0       0       0       0       0       0
 14340 ;;Total ram usage:        1 bytes
 14341 ;; Hardware stack levels used:    1
 14342 ;; Hardware stack levels required when called:    1
 14343 ;; This function calls:
 14344 ;;		Nothing
 14345 ;; This function is called by:
 14346 ;;		_main
 14347 ;; This function uses a non-reentrant model
 14348 ;;
 14349                           
 14350                           	psect	text57
 14351  00659E                     __ptext57:
 14352                           	callstack 0
 14353  00659E                     _get_reg_value:
 14354                           	callstack 0
 14355  00659E  FFFF               	dw	65535	; assembler added errata NOP
 14356  0065A0                     
 14357                           ;serial_rs232.c: 52:     unsigned char rx_char = RCREG;
 14358  0065A0  CFAE F001          	movff	4014,get_reg_value@rx_char	;volatile
 14359  0065A4                     
 14360                           ;serial_rs232.c: 53:     RCREG = 0;
 14361  0065A4  0E00               	movlw	0
 14362  0065A6  6EAE               	movwf	174,c	;volatile
 14363                           
 14364                           ;serial_rs232.c: 54:     return rx_char;
 14365  0065A8  5001               	movf	get_reg_value@rx_char^0,w,c
 14366  0065AA  0012               	return		;funcret
 14367  0065AC  FFFF               	dw	65535	; errata NOP
 14368  0065AE                     __end_of_get_reg_value:
 14369                           	callstack 0
 14370                           
 14371 ;; *************** function _configure_analog_digital_conversion *****************
 14372 ;; Defined at:
 14373 ;;		line 8 in file "oven.c"
 14374 ;; Parameters:    Size  Location     Type
 14375 ;;		None
 14376 ;; Auto vars:     Size  Location     Type
 14377 ;;		None
 14378 ;; Return value:  Size  Location     Type
 14379 ;;                  1    wreg      void 
 14380 ;; Registers used:
 14381 ;;		wreg, status,2
 14382 ;; Tracked objects:
 14383 ;;		On entry : 0/0
 14384 ;;		On exit  : 0/0
 14385 ;;		Unchanged: 0/0
 14386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14387 ;;      Params:         0       0       0       0       0       0       0
 14388 ;;      Locals:         0       0       0       0       0       0       0
 14389 ;;      Temps:          0       0       0       0       0       0       0
 14390 ;;      Totals:         0       0       0       0       0       0       0
 14391 ;;Total ram usage:        0 bytes
 14392 ;; Hardware stack levels used:    1
 14393 ;; Hardware stack levels required when called:    1
 14394 ;; This function calls:
 14395 ;;		Nothing
 14396 ;; This function is called by:
 14397 ;;		_main
 14398 ;; This function uses a non-reentrant model
 14399 ;;
 14400                           
 14401                           	psect	text58
 14402  006648                     __ptext58:
 14403                           	callstack 0
 14404  006648                     _configure_analog_digital_conversion:
 14405                           	callstack 0
 14406  006648  FFFF               	dw	65535	; assembler added errata NOP
 14407  00664A                     
 14408                           ;oven.c: 9:     LATA = 0;
 14409  00664A  0E00               	movlw	0
 14410  00664C  6E89               	movwf	137,c	;volatile
 14411                           
 14412                           ;oven.c: 10:     PORTA = 0;
 14413  00664E  0E00               	movlw	0
 14414  006650  6E80               	movwf	128,c	;volatile
 14415  006652                     
 14416                           ;oven.c: 11:     TRISA = 0xFF;
 14417  006652  6892               	setf	146,c	;volatile
 14418                           
 14419                           ;oven.c: 12:     ADCON0 = 0;
 14420  006654  0E00               	movlw	0
 14421  006656  6EC2               	movwf	194,c	;volatile
 14422  006658                     
 14423                           ;oven.c: 13:     ADCON0bits.CHS0 = 0;
 14424  006658  96C2               	bcf	194,3,c	;volatile
 14425  00665A                     
 14426                           ;oven.c: 14:     ADCON0bits.CHS1 = 0;
 14427  00665A  98C2               	bcf	194,4,c	;volatile
 14428  00665C                     
 14429                           ;oven.c: 15:     ADCON0bits.CHS2 = 1;
 14430  00665C  8AC2               	bsf	194,5,c	;volatile
 14431  00665E                     
 14432                           ;oven.c: 16:     ADCON0bits.ADON = 1;
 14433  00665E  80C2               	bsf	194,0,c	;volatile
 14434                           
 14435                           ;oven.c: 17:     ADRESH = 0;
 14436  006660  0E00               	movlw	0
 14437  006662  6EC4               	movwf	196,c	;volatile
 14438                           
 14439                           ;oven.c: 18:     ADRESL = 0;
 14440  006664  0E00               	movlw	0
 14441  006666  6EC3               	movwf	195,c	;volatile
 14442                           
 14443                           ;oven.c: 19:     ADCON1 = 0;
 14444  006668  0E00               	movlw	0
 14445  00666A  6EC1               	movwf	193,c	;volatile
 14446  00666C  0012               	return		;funcret
 14447  00666E  FFFF               	dw	65535	; errata NOP
 14448  006670                     __end_of_configure_analog_digital_conversion:
 14449                           	callstack 0
 14450                           
 14451 ;; *************** function _check_temperature *****************
 14452 ;; Defined at:
 14453 ;;		line 36 in file "oven.c"
 14454 ;; Parameters:    Size  Location     Type
 14455 ;;  temp_to_be_c    2   30[BANK0 ] int 
 14456 ;; Auto vars:     Size  Location     Type
 14457 ;;  grad            4   32[BANK0 ] float 
 14458 ;; Return value:  Size  Location     Type
 14459 ;;                  2   30[BANK0 ] int 
 14460 ;; Registers used:
 14461 ;;		wreg, status,2, status,0, cstack
 14462 ;; Tracked objects:
 14463 ;;		On entry : 0/0
 14464 ;;		On exit  : 0/0
 14465 ;;		Unchanged: 0/0
 14466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14467 ;;      Params:         0       2       0       0       0       0       0
 14468 ;;      Locals:         0       4       0       0       0       0       0
 14469 ;;      Temps:          0       0       0       0       0       0       0
 14470 ;;      Totals:         0       6       0       0       0       0       0
 14471 ;;Total ram usage:        6 bytes
 14472 ;; Hardware stack levels used:    1
 14473 ;; Hardware stack levels required when called:    2
 14474 ;; This function calls:
 14475 ;;		___awdiv
 14476 ;;		___flge
 14477 ;;		___xxtofl
 14478 ;;		_abs
 14479 ;; This function is called by:
 14480 ;;		_main
 14481 ;; This function uses a non-reentrant model
 14482 ;;
 14483                           
 14484                           	psect	text59
 14485  0071D2                     __ptext59:
 14486                           	callstack 0
 14487  0071D2                     _check_temperature:
 14488                           	callstack 0
 14489  0071D2  FFFF               	dw	65535	; assembler added errata NOP
 14490  0071D4                     
 14491                           ;oven.c: 37:     float grad = abs(temp_to_be_checked - (-63))/5;
 14492  0071D4  0E00               	movlw	0
 14493  0071D6  6E1A               	movwf	(___awdiv@divisor+1)^0,c
 14494  0071D8  0E05               	movlw	5
 14495  0071DA  6E19               	movwf	___awdiv@divisor^0,c
 14496  0071DC  0E3F               	movlw	63
 14497  0071DE  0100               	movlb	0	; () banked
 14498  0071E0  25D6               	addwf	check_temperature@temp_to_be_checked& (0+255),w,b
 14499  0071E2  6E13               	movwf	abs@a^0,c
 14500  0071E4  0E00               	movlw	0
 14501  0071E6  21D7               	addwfc	(check_temperature@temp_to_be_checked+1)& (0+255),w,b
 14502  0071E8  6E14               	movwf	(abs@a+1)^0,c
 14503  0071EA  ECE1  F034         	call	_abs	;wreg free
 14504  0071EE  C013  F017         	movff	?_abs,___awdiv@dividend
 14505  0071F2  C014  F018         	movff	?_abs+1,___awdiv@dividend+1
 14506  0071F6  ECB0  F03A         	call	___awdiv	;wreg free
 14507  0071FA  C017  F01F         	movff	?___awdiv,___xxtofl@val
 14508  0071FE  C018  F020         	movff	?___awdiv+1,___xxtofl@val+1
 14509  007202  0E00               	movlw	0
 14510  007204  BE20               	btfsc	(___xxtofl@val+1)^0,7,c
 14511  007206  0EFF               	movlw	-1
 14512  007208  6E21               	movwf	(___xxtofl@val+2)^0,c
 14513  00720A  6E22               	movwf	(___xxtofl@val+3)^0,c
 14514  00720C  0E01               	movlw	1
 14515  00720E  EC12  F01C         	call	___xxtofl
 14516  007212  C01F  F0D8         	movff	?___xxtofl,check_temperature@grad
 14517  007216  C020  F0D9         	movff	?___xxtofl+1,check_temperature@grad+1
 14518  00721A  C021  F0DA         	movff	?___xxtofl+2,check_temperature@grad+2
 14519  00721E  C022  F0DB         	movff	?___xxtofl+3,check_temperature@grad+3
 14520                           
 14521                           ;oven.c: 38:     if (grad >= 12 && grad <= 13){
 14522  007222  C0D8  F001         	movff	check_temperature@grad,___flge@ff1
 14523  007226  C0D9  F002         	movff	check_temperature@grad+1,___flge@ff1+1
 14524  00722A  C0DA  F003         	movff	check_temperature@grad+2,___flge@ff1+2
 14525  00722E  C0DB  F004         	movff	check_temperature@grad+3,___flge@ff1+3
 14526  007232  0E00               	movlw	0
 14527  007234  6E05               	movwf	___flge@ff2^0,c
 14528  007236  0E00               	movlw	0
 14529  007238  6E06               	movwf	(___flge@ff2+1)^0,c
 14530  00723A  0E40               	movlw	64
 14531  00723C  6E07               	movwf	(___flge@ff2+2)^0,c
 14532  00723E  0E41               	movlw	65
 14533  007240  6E08               	movwf	(___flge@ff2+3)^0,c
 14534  007242  EC31  F03C         	call	___flge	;wreg free
 14535  007246  A0D8               	btfss	status,0,c
 14536  007248  EF28  F039         	goto	u6671
 14537  00724C  EF2B  F039         	goto	u6670
 14538  007250                     u6671:
 14539  007250  FFFF               	dw	65535	; assembler added errata NOP
 14540  007252  EF4E  F039         	goto	l5426
 14541  007256                     u6670:
 14542  007256  FFFF               	dw	65535	; assembler added errata NOP
 14543  007258  0E00               	movlw	0
 14544  00725A  6E01               	movwf	___flge@ff1^0,c
 14545  00725C  0E00               	movlw	0
 14546  00725E  6E02               	movwf	(___flge@ff1+1)^0,c
 14547  007260  0E50               	movlw	80
 14548  007262  6E03               	movwf	(___flge@ff1+2)^0,c
 14549  007264  0E41               	movlw	65
 14550  007266  6E04               	movwf	(___flge@ff1+3)^0,c
 14551  007268  C0D8  F005         	movff	check_temperature@grad,___flge@ff2
 14552  00726C  C0D9  F006         	movff	check_temperature@grad+1,___flge@ff2+1
 14553  007270  C0DA  F007         	movff	check_temperature@grad+2,___flge@ff2+2
 14554  007274  C0DB  F008         	movff	check_temperature@grad+3,___flge@ff2+3
 14555  007278  EC31  F03C         	call	___flge	;wreg free
 14556  00727C  A0D8               	btfss	status,0,c
 14557  00727E  EF43  F039         	goto	u6681
 14558  007282  EF46  F039         	goto	u6680
 14559  007286                     u6681:
 14560  007286  FFFF               	dw	65535	; assembler added errata NOP
 14561  007288  EF4E  F039         	goto	l5426
 14562  00728C                     u6680:
 14563  00728C  FFFF               	dw	65535	; assembler added errata NOP
 14564  00728E                     
 14565                           ;oven.c: 39:         return 1;
 14566  00728E  0E00               	movlw	0
 14567  007290  0100               	movlb	0	; () banked
 14568  007292  6FD7               	movwf	(?_check_temperature+1)& (0+255),b
 14569  007294  0E01               	movlw	1
 14570  007296  6FD6               	movwf	?_check_temperature& (0+255),b
 14571  007298  EF54  F039         	goto	l376
 14572  00729C                     l5426:
 14573  00729C  FFFF               	dw	65535	; assembler added errata NOP
 14574                           
 14575                           ;oven.c: 41:         return 0;
 14576  00729E  0E00               	movlw	0
 14577  0072A0  0100               	movlb	0	; () banked
 14578  0072A2  6FD7               	movwf	(?_check_temperature+1)& (0+255),b
 14579  0072A4  0E00               	movlw	0
 14580  0072A6  6FD6               	movwf	?_check_temperature& (0+255),b
 14581  0072A8                     l376:
 14582  0072A8  FFFF               	dw	65535	; assembler added errata NOP
 14583                           
 14584                           ; BSR set to: 0
 14585  0072AA  0012               	return		;funcret
 14586  0072AC  FFFF               	dw	65535	; errata NOP
 14587  0072AE                     __end_of_check_temperature:
 14588                           	callstack 0
 14589                           
 14590 ;; *************** function _abs *****************
 14591 ;; Defined at:
 14592 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
 14593 ;; Parameters:    Size  Location     Type
 14594 ;;  a               2   18[COMRAM] int 
 14595 ;; Auto vars:     Size  Location     Type
 14596 ;;		None
 14597 ;; Return value:  Size  Location     Type
 14598 ;;                  2   18[COMRAM] int 
 14599 ;; Registers used:
 14600 ;;		wreg, status,2, status,0
 14601 ;; Tracked objects:
 14602 ;;		On entry : 0/0
 14603 ;;		On exit  : 0/0
 14604 ;;		Unchanged: 0/0
 14605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14606 ;;      Params:         2       0       0       0       0       0       0
 14607 ;;      Locals:         0       0       0       0       0       0       0
 14608 ;;      Temps:          2       0       0       0       0       0       0
 14609 ;;      Totals:         4       0       0       0       0       0       0
 14610 ;;Total ram usage:        4 bytes
 14611 ;; Hardware stack levels used:    1
 14612 ;; Hardware stack levels required when called:    1
 14613 ;; This function calls:
 14614 ;;		Nothing
 14615 ;; This function is called by:
 14616 ;;		_check_temperature
 14617 ;;		_dtoa
 14618 ;; This function uses a non-reentrant model
 14619 ;;
 14620                           
 14621                           	psect	text60
 14622  0069C2                     __ptext60:
 14623                           	callstack 0
 14624  0069C2                     _abs:
 14625                           	callstack 0
 14626  0069C2  FFFF               	dw	65535	; assembler added errata NOP
 14627  0069C4  BE14               	btfsc	(abs@a+1)^0,7,c
 14628  0069C6  EFF0  F034         	goto	u3660
 14629  0069CA  5014               	movf	(abs@a+1)^0,w,c
 14630  0069CC  E106               	bnz	u3661
 14631  0069CE  0413               	decf	abs@a^0,w,c
 14632  0069D0  B0D8               	btfsc	status,0,c
 14633  0069D2  EFED  F034         	goto	u3661
 14634  0069D6  EFF0  F034         	goto	u3660
 14635  0069DA                     u3661:
 14636  0069DA  FFFF               	dw	65535	; assembler added errata NOP
 14637  0069DC  EFFF  F034         	goto	l1055
 14638  0069E0                     u3660:
 14639  0069E0  FFFF               	dw	65535	; assembler added errata NOP
 14640  0069E2  C013  F015         	movff	abs@a,??_abs
 14641  0069E6  C014  F016         	movff	abs@a+1,??_abs+1
 14642  0069EA  1E15               	comf	??_abs^0,f,c
 14643  0069EC  1E16               	comf	(??_abs+1)^0,f,c
 14644  0069EE  4A15               	infsnz	??_abs^0,f,c
 14645  0069F0  2A16               	incf	(??_abs+1)^0,f,c
 14646  0069F2  C015  F013         	movff	??_abs,?_abs
 14647  0069F6  C016  F014         	movff	??_abs+1,?_abs+1
 14648  0069FA  EF04  F035         	goto	l1058
 14649  0069FE                     l1055:
 14650  0069FE  FFFF               	dw	65535	; assembler added errata NOP
 14651  006A00  C013  F013         	movff	abs@a,?_abs
 14652  006A04  C014  F014         	movff	abs@a+1,?_abs+1
 14653  006A08                     l1058:
 14654  006A08  FFFF               	dw	65535	; assembler added errata NOP
 14655  006A0A  0012               	return		;funcret
 14656  006A0C  FFFF               	dw	65535	; errata NOP
 14657  006A0E                     __end_of_abs:
 14658                           	callstack 0
 14659                           
 14660 ;; *************** function ___xxtofl *****************
 14661 ;; Defined at:
 14662 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
 14663 ;; Parameters:    Size  Location     Type
 14664 ;;  sign            1    wreg     unsigned char 
 14665 ;;  val             4   30[COMRAM] long 
 14666 ;; Auto vars:     Size  Location     Type
 14667 ;;  sign            1   38[COMRAM] unsigned char 
 14668 ;;  arg             4   40[COMRAM] unsigned long 
 14669 ;;  exp             1   39[COMRAM] unsigned char 
 14670 ;; Return value:  Size  Location     Type
 14671 ;;                  4   30[COMRAM] unsigned char 
 14672 ;; Registers used:
 14673 ;;		wreg, status,2, status,0
 14674 ;; Tracked objects:
 14675 ;;		On entry : 0/0
 14676 ;;		On exit  : 0/0
 14677 ;;		Unchanged: 0/0
 14678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14679 ;;      Params:         4       0       0       0       0       0       0
 14680 ;;      Locals:         6       0       0       0       0       0       0
 14681 ;;      Temps:          4       0       0       0       0       0       0
 14682 ;;      Totals:        14       0       0       0       0       0       0
 14683 ;;Total ram usage:       14 bytes
 14684 ;; Hardware stack levels used:    1
 14685 ;; Hardware stack levels required when called:    1
 14686 ;; This function calls:
 14687 ;;		Nothing
 14688 ;; This function is called by:
 14689 ;;		_get_temperature
 14690 ;;		_check_temperature
 14691 ;; This function uses a non-reentrant model
 14692 ;;
 14693                           
 14694                           	psect	text61
 14695  003824                     __ptext61:
 14696                           	callstack 0
 14697  003824                     ___xxtofl:
 14698                           	callstack 0
 14699  003824  FFFF               	dw	65535	; assembler added errata NOP
 14700                           
 14701                           ;incstack = 0
 14702                           ;___xxtofl@sign stored from wreg
 14703  003826  6E27               	movwf	___xxtofl@sign^0,c
 14704  003828  5027               	movf	___xxtofl@sign^0,w,c
 14705  00382A  B4D8               	btfsc	status,2,c
 14706  00382C  EF1A  F01C         	goto	u6171
 14707  003830  EF1D  F01C         	goto	u6170
 14708  003834                     u6171:
 14709  003834  FFFF               	dw	65535	; assembler added errata NOP
 14710  003836  EF42  F01C         	goto	l1035
 14711  00383A                     u6170:
 14712  00383A  FFFF               	dw	65535	; assembler added errata NOP
 14713  00383C  BE22               	btfsc	(___xxtofl@val+3)^0,7,c
 14714  00383E  EF26  F01C         	goto	u6180
 14715  003842  EF23  F01C         	goto	u6181
 14716  003846                     u6181:
 14717  003846  FFFF               	dw	65535	; assembler added errata NOP
 14718  003848  EF42  F01C         	goto	l1035
 14719  00384C                     u6180:
 14720  00384C  FFFF               	dw	65535	; assembler added errata NOP
 14721  00384E  C01F  F023         	movff	___xxtofl@val,??___xxtofl
 14722  003852  C020  F024         	movff	___xxtofl@val+1,??___xxtofl+1
 14723  003856  C021  F025         	movff	___xxtofl@val+2,??___xxtofl+2
 14724  00385A  C022  F026         	movff	___xxtofl@val+3,??___xxtofl+3
 14725  00385E  1E23               	comf	??___xxtofl^0,f,c
 14726  003860  1E24               	comf	(??___xxtofl+1)^0,f,c
 14727  003862  1E25               	comf	(??___xxtofl+2)^0,f,c
 14728  003864  1E26               	comf	(??___xxtofl+3)^0,f,c
 14729  003866  2A23               	incf	??___xxtofl^0,f,c
 14730  003868  0E00               	movlw	0
 14731  00386A  2224               	addwfc	(??___xxtofl+1)^0,f,c
 14732  00386C  2225               	addwfc	(??___xxtofl+2)^0,f,c
 14733  00386E  2226               	addwfc	(??___xxtofl+3)^0,f,c
 14734  003870  C023  F029         	movff	??___xxtofl,___xxtofl@arg
 14735  003874  C024  F02A         	movff	??___xxtofl+1,___xxtofl@arg+1
 14736  003878  C025  F02B         	movff	??___xxtofl+2,___xxtofl@arg+2
 14737  00387C  C026  F02C         	movff	??___xxtofl+3,___xxtofl@arg+3
 14738  003880  EF4B  F01C         	goto	l5016
 14739  003884                     l1035:
 14740  003884  FFFF               	dw	65535	; assembler added errata NOP
 14741  003886  C01F  F029         	movff	___xxtofl@val,___xxtofl@arg
 14742  00388A  C020  F02A         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14743  00388E  C021  F02B         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14744  003892  C022  F02C         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14745  003896                     l5016:
 14746  003896  FFFF               	dw	65535	; assembler added errata NOP
 14747  003898  501F               	movf	___xxtofl@val^0,w,c
 14748  00389A  1020               	iorwf	(___xxtofl@val+1)^0,w,c
 14749  00389C  1021               	iorwf	(___xxtofl@val+2)^0,w,c
 14750  00389E  1022               	iorwf	(___xxtofl@val+3)^0,w,c
 14751  0038A0  A4D8               	btfss	status,2,c
 14752  0038A2  EF55  F01C         	goto	u6191
 14753  0038A6  EF58  F01C         	goto	u6190
 14754  0038AA                     u6191:
 14755  0038AA  FFFF               	dw	65535	; assembler added errata NOP
 14756  0038AC  EF63  F01C         	goto	l5022
 14757  0038B0                     u6190:
 14758  0038B0  FFFF               	dw	65535	; assembler added errata NOP
 14759  0038B2  0E00               	movlw	0
 14760  0038B4  6E1F               	movwf	?___xxtofl^0,c
 14761  0038B6  0E00               	movlw	0
 14762  0038B8  6E20               	movwf	(?___xxtofl+1)^0,c
 14763  0038BA  0E00               	movlw	0
 14764  0038BC  6E21               	movwf	(?___xxtofl+2)^0,c
 14765  0038BE  0E00               	movlw	0
 14766  0038C0  6E22               	movwf	(?___xxtofl+3)^0,c
 14767  0038C2  EF0B  F01D         	goto	l1038
 14768  0038C6                     l5022:
 14769  0038C6  FFFF               	dw	65535	; assembler added errata NOP
 14770  0038C8  0E96               	movlw	150
 14771  0038CA  6E28               	movwf	___xxtofl@exp^0,c
 14772  0038CC  EF6F  F01C         	goto	l5026
 14773  0038D0                     l5024:
 14774  0038D0  FFFF               	dw	65535	; assembler added errata NOP
 14775  0038D2  2A28               	incf	___xxtofl@exp^0,f,c
 14776  0038D4  90D8               	bcf	status,0,c
 14777  0038D6  322C               	rrcf	(___xxtofl@arg+3)^0,f,c
 14778  0038D8  322B               	rrcf	(___xxtofl@arg+2)^0,f,c
 14779  0038DA  322A               	rrcf	(___xxtofl@arg+1)^0,f,c
 14780  0038DC  3229               	rrcf	___xxtofl@arg^0,f,c
 14781  0038DE                     l5026:
 14782  0038DE  FFFF               	dw	65535	; assembler added errata NOP
 14783  0038E0  0E00               	movlw	0
 14784  0038E2  1429               	andwf	___xxtofl@arg^0,w,c
 14785  0038E4  6E23               	movwf	??___xxtofl^0,c
 14786  0038E6  0E00               	movlw	0
 14787  0038E8  142A               	andwf	(___xxtofl@arg+1)^0,w,c
 14788  0038EA  6E24               	movwf	(??___xxtofl+1)^0,c
 14789  0038EC  0E00               	movlw	0
 14790  0038EE  142B               	andwf	(___xxtofl@arg+2)^0,w,c
 14791  0038F0  6E25               	movwf	(??___xxtofl+2)^0,c
 14792  0038F2  0EFE               	movlw	254
 14793  0038F4  142C               	andwf	(___xxtofl@arg+3)^0,w,c
 14794  0038F6  6E26               	movwf	(??___xxtofl+3)^0,c
 14795  0038F8  5023               	movf	??___xxtofl^0,w,c
 14796  0038FA  1024               	iorwf	(??___xxtofl+1)^0,w,c
 14797  0038FC  1025               	iorwf	(??___xxtofl+2)^0,w,c
 14798  0038FE  1026               	iorwf	(??___xxtofl+3)^0,w,c
 14799  003900  A4D8               	btfss	status,2,c
 14800  003902  EF85  F01C         	goto	u6201
 14801  003906  EF88  F01C         	goto	u6200
 14802  00390A                     u6201:
 14803  00390A  FFFF               	dw	65535	; assembler added errata NOP
 14804  00390C  EF68  F01C         	goto	l5024
 14805  003910                     u6200:
 14806  003910  FFFF               	dw	65535	; assembler added errata NOP
 14807  003912  EF98  F01C         	goto	l1042
 14808  003916                     l5028:
 14809  003916  FFFF               	dw	65535	; assembler added errata NOP
 14810  003918  2A28               	incf	___xxtofl@exp^0,f,c
 14811  00391A  0E01               	movlw	1
 14812  00391C  2629               	addwf	___xxtofl@arg^0,f,c
 14813  00391E  0E00               	movlw	0
 14814  003920  222A               	addwfc	(___xxtofl@arg+1)^0,f,c
 14815  003922  222B               	addwfc	(___xxtofl@arg+2)^0,f,c
 14816  003924  222C               	addwfc	(___xxtofl@arg+3)^0,f,c
 14817  003926  90D8               	bcf	status,0,c
 14818  003928  322C               	rrcf	(___xxtofl@arg+3)^0,f,c
 14819  00392A  322B               	rrcf	(___xxtofl@arg+2)^0,f,c
 14820  00392C  322A               	rrcf	(___xxtofl@arg+1)^0,f,c
 14821  00392E  3229               	rrcf	___xxtofl@arg^0,f,c
 14822  003930                     l1042:
 14823  003930  FFFF               	dw	65535	; assembler added errata NOP
 14824  003932  0E00               	movlw	0
 14825  003934  1429               	andwf	___xxtofl@arg^0,w,c
 14826  003936  6E23               	movwf	??___xxtofl^0,c
 14827  003938  0E00               	movlw	0
 14828  00393A  142A               	andwf	(___xxtofl@arg+1)^0,w,c
 14829  00393C  6E24               	movwf	(??___xxtofl+1)^0,c
 14830  00393E  0E00               	movlw	0
 14831  003940  142B               	andwf	(___xxtofl@arg+2)^0,w,c
 14832  003942  6E25               	movwf	(??___xxtofl+2)^0,c
 14833  003944  0EFF               	movlw	255
 14834  003946  142C               	andwf	(___xxtofl@arg+3)^0,w,c
 14835  003948  6E26               	movwf	(??___xxtofl+3)^0,c
 14836  00394A  5023               	movf	??___xxtofl^0,w,c
 14837  00394C  1024               	iorwf	(??___xxtofl+1)^0,w,c
 14838  00394E  1025               	iorwf	(??___xxtofl+2)^0,w,c
 14839  003950  1026               	iorwf	(??___xxtofl+3)^0,w,c
 14840  003952  A4D8               	btfss	status,2,c
 14841  003954  EFAE  F01C         	goto	u6211
 14842  003958  EFB1  F01C         	goto	u6210
 14843  00395C                     u6211:
 14844  00395C  FFFF               	dw	65535	; assembler added errata NOP
 14845  00395E  EF8B  F01C         	goto	l5028
 14846  003962                     u6210:
 14847  003962  FFFF               	dw	65535	; assembler added errata NOP
 14848  003964  EFBB  F01C         	goto	l5036
 14849  003968                     l5034:
 14850  003968  FFFF               	dw	65535	; assembler added errata NOP
 14851  00396A  0628               	decf	___xxtofl@exp^0,f,c
 14852  00396C  90D8               	bcf	status,0,c
 14853  00396E  3629               	rlcf	___xxtofl@arg^0,f,c
 14854  003970  362A               	rlcf	(___xxtofl@arg+1)^0,f,c
 14855  003972  362B               	rlcf	(___xxtofl@arg+2)^0,f,c
 14856  003974  362C               	rlcf	(___xxtofl@arg+3)^0,f,c
 14857  003976                     l5036:
 14858  003976  FFFF               	dw	65535	; assembler added errata NOP
 14859  003978  BE2B               	btfsc	(___xxtofl@arg+2)^0,7,c
 14860  00397A  EFC1  F01C         	goto	u6221
 14861  00397E  EFC4  F01C         	goto	u6220
 14862  003982                     u6221:
 14863  003982  FFFF               	dw	65535	; assembler added errata NOP
 14864  003984  EFCE  F01C         	goto	l1049
 14865  003988                     u6220:
 14866  003988  FFFF               	dw	65535	; assembler added errata NOP
 14867  00398A  0E02               	movlw	2
 14868  00398C  6028               	cpfslt	___xxtofl@exp^0,c
 14869  00398E  EFCB  F01C         	goto	u6231
 14870  003992  EFCE  F01C         	goto	u6230
 14871  003996                     u6231:
 14872  003996  FFFF               	dw	65535	; assembler added errata NOP
 14873  003998  EFB4  F01C         	goto	l5034
 14874  00399C                     u6230:
 14875  00399C                     l1049:
 14876  00399C  FFFF               	dw	65535	; assembler added errata NOP
 14877  00399E  B028               	btfsc	___xxtofl@exp^0,0,c
 14878  0039A0  EFD4  F01C         	goto	u6241
 14879  0039A4  EFD7  F01C         	goto	u6240
 14880  0039A8                     u6241:
 14881  0039A8  FFFF               	dw	65535	; assembler added errata NOP
 14882  0039AA  EFD9  F01C         	goto	l5042
 14883  0039AE                     u6240:
 14884  0039AE  FFFF               	dw	65535	; assembler added errata NOP
 14885  0039B0  9E2B               	bcf	(___xxtofl@arg+2)^0,7,c
 14886  0039B2                     l5042:
 14887  0039B2  FFFF               	dw	65535	; assembler added errata NOP
 14888  0039B4  90D8               	bcf	status,0,c
 14889  0039B6  3228               	rrcf	___xxtofl@exp^0,f,c
 14890  0039B8  C028  F023         	movff	___xxtofl@exp,??___xxtofl
 14891  0039BC  6A24               	clrf	(??___xxtofl+1)^0,c
 14892  0039BE  6A25               	clrf	(??___xxtofl+2)^0,c
 14893  0039C0  6A26               	clrf	(??___xxtofl+3)^0,c
 14894  0039C2  C023  F026         	movff	??___xxtofl,??___xxtofl+3
 14895  0039C6  6A25               	clrf	(??___xxtofl+2)^0,c
 14896  0039C8  6A24               	clrf	(??___xxtofl+1)^0,c
 14897  0039CA  6A23               	clrf	??___xxtofl^0,c
 14898  0039CC  5023               	movf	??___xxtofl^0,w,c
 14899  0039CE  1229               	iorwf	___xxtofl@arg^0,f,c
 14900  0039D0  5024               	movf	(??___xxtofl+1)^0,w,c
 14901  0039D2  122A               	iorwf	(___xxtofl@arg+1)^0,f,c
 14902  0039D4  5025               	movf	(??___xxtofl+2)^0,w,c
 14903  0039D6  122B               	iorwf	(___xxtofl@arg+2)^0,f,c
 14904  0039D8  5026               	movf	(??___xxtofl+3)^0,w,c
 14905  0039DA  122C               	iorwf	(___xxtofl@arg+3)^0,f,c
 14906  0039DC  5027               	movf	___xxtofl@sign^0,w,c
 14907  0039DE  B4D8               	btfsc	status,2,c
 14908  0039E0  EFF4  F01C         	goto	u6251
 14909  0039E4  EFF7  F01C         	goto	u6250
 14910  0039E8                     u6251:
 14911  0039E8  FFFF               	dw	65535	; assembler added errata NOP
 14912  0039EA  EF02  F01D         	goto	l5052
 14913  0039EE                     u6250:
 14914  0039EE  FFFF               	dw	65535	; assembler added errata NOP
 14915  0039F0  BE22               	btfsc	(___xxtofl@val+3)^0,7,c
 14916  0039F2  EF00  F01D         	goto	u6260
 14917  0039F6  EFFD  F01C         	goto	u6261
 14918  0039FA                     u6261:
 14919  0039FA  FFFF               	dw	65535	; assembler added errata NOP
 14920  0039FC  EF02  F01D         	goto	l5052
 14921  003A00                     u6260:
 14922  003A00  FFFF               	dw	65535	; assembler added errata NOP
 14923  003A02  8E2C               	bsf	(___xxtofl@arg+3)^0,7,c
 14924  003A04                     l5052:
 14925  003A04  FFFF               	dw	65535	; assembler added errata NOP
 14926  003A06  C029  F01F         	movff	___xxtofl@arg,?___xxtofl
 14927  003A0A  C02A  F020         	movff	___xxtofl@arg+1,?___xxtofl+1
 14928  003A0E  C02B  F021         	movff	___xxtofl@arg+2,?___xxtofl+2
 14929  003A12  C02C  F022         	movff	___xxtofl@arg+3,?___xxtofl+3
 14930  003A16                     l1038:
 14931  003A16  FFFF               	dw	65535	; assembler added errata NOP
 14932  003A18  0012               	return		;funcret
 14933  003A1A  FFFF               	dw	65535	; errata NOP
 14934  003A1C                     __end_of___xxtofl:
 14935                           	callstack 0
 14936                           
 14937 ;; *************** function ___flge *****************
 14938 ;; Defined at:
 14939 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 14940 ;; Parameters:    Size  Location     Type
 14941 ;;  ff1             4    0[COMRAM] unsigned char 
 14942 ;;  ff2             4    4[COMRAM] unsigned char 
 14943 ;; Auto vars:     Size  Location     Type
 14944 ;;		None
 14945 ;; Return value:  Size  Location     Type
 14946 ;;		None               void
 14947 ;; Registers used:
 14948 ;;		wreg, status,2, status,0
 14949 ;; Tracked objects:
 14950 ;;		On entry : 0/0
 14951 ;;		On exit  : 0/0
 14952 ;;		Unchanged: 0/0
 14953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14954 ;;      Params:         8       0       0       0       0       0       0
 14955 ;;      Locals:         0       0       0       0       0       0       0
 14956 ;;      Temps:          4       0       0       0       0       0       0
 14957 ;;      Totals:        12       0       0       0       0       0       0
 14958 ;;Total ram usage:       12 bytes
 14959 ;; Hardware stack levels used:    1
 14960 ;; Hardware stack levels required when called:    1
 14961 ;; This function calls:
 14962 ;;		Nothing
 14963 ;; This function is called by:
 14964 ;;		_check_temperature
 14965 ;;		_roundf
 14966 ;; This function uses a non-reentrant model
 14967 ;;
 14968                           
 14969                           	psect	text62
 14970  007862                     __ptext62:
 14971                           	callstack 0
 14972  007862                     ___flge:
 14973                           	callstack 0
 14974  007862  FFFF               	dw	65535	; assembler added errata NOP
 14975  007864  0E00               	movlw	0
 14976  007866  1401               	andwf	___flge@ff1^0,w,c
 14977  007868  6E09               	movwf	??___flge^0,c
 14978  00786A  0E00               	movlw	0
 14979  00786C  1402               	andwf	(___flge@ff1+1)^0,w,c
 14980  00786E  6E0A               	movwf	(??___flge+1)^0,c
 14981  007870  0E80               	movlw	128
 14982  007872  1403               	andwf	(___flge@ff1+2)^0,w,c
 14983  007874  6E0B               	movwf	(??___flge+2)^0,c
 14984  007876  0E7F               	movlw	127
 14985  007878  1404               	andwf	(___flge@ff1+3)^0,w,c
 14986  00787A  6E0C               	movwf	(??___flge+3)^0,c
 14987  00787C  5009               	movf	??___flge^0,w,c
 14988  00787E  100A               	iorwf	(??___flge+1)^0,w,c
 14989  007880  100B               	iorwf	(??___flge+2)^0,w,c
 14990  007882  100C               	iorwf	(??___flge+3)^0,w,c
 14991  007884  A4D8               	btfss	status,2,c
 14992  007886  EF47  F03C         	goto	u6041
 14993  00788A  EF4A  F03C         	goto	u6040
 14994  00788E                     u6041:
 14995  00788E  FFFF               	dw	65535	; assembler added errata NOP
 14996  007890  EF53  F03C         	goto	l4940
 14997  007894                     u6040:
 14998  007894  FFFF               	dw	65535	; assembler added errata NOP
 14999  007896  0E00               	movlw	0
 15000  007898  6E01               	movwf	___flge@ff1^0,c
 15001  00789A  0E00               	movlw	0
 15002  00789C  6E02               	movwf	(___flge@ff1+1)^0,c
 15003  00789E  0E00               	movlw	0
 15004  0078A0  6E03               	movwf	(___flge@ff1+2)^0,c
 15005  0078A2  0E00               	movlw	0
 15006  0078A4  6E04               	movwf	(___flge@ff1+3)^0,c
 15007  0078A6                     l4940:
 15008  0078A6  FFFF               	dw	65535	; assembler added errata NOP
 15009  0078A8  0E00               	movlw	0
 15010  0078AA  1405               	andwf	___flge@ff2^0,w,c
 15011  0078AC  6E09               	movwf	??___flge^0,c
 15012  0078AE  0E00               	movlw	0
 15013  0078B0  1406               	andwf	(___flge@ff2+1)^0,w,c
 15014  0078B2  6E0A               	movwf	(??___flge+1)^0,c
 15015  0078B4  0E80               	movlw	128
 15016  0078B6  1407               	andwf	(___flge@ff2+2)^0,w,c
 15017  0078B8  6E0B               	movwf	(??___flge+2)^0,c
 15018  0078BA  0E7F               	movlw	127
 15019  0078BC  1408               	andwf	(___flge@ff2+3)^0,w,c
 15020  0078BE  6E0C               	movwf	(??___flge+3)^0,c
 15021  0078C0  5009               	movf	??___flge^0,w,c
 15022  0078C2  100A               	iorwf	(??___flge+1)^0,w,c
 15023  0078C4  100B               	iorwf	(??___flge+2)^0,w,c
 15024  0078C6  100C               	iorwf	(??___flge+3)^0,w,c
 15025  0078C8  A4D8               	btfss	status,2,c
 15026  0078CA  EF69  F03C         	goto	u6051
 15027  0078CE  EF6C  F03C         	goto	u6050
 15028  0078D2                     u6051:
 15029  0078D2  FFFF               	dw	65535	; assembler added errata NOP
 15030  0078D4  EF75  F03C         	goto	l4944
 15031  0078D8                     u6050:
 15032  0078D8  FFFF               	dw	65535	; assembler added errata NOP
 15033  0078DA  0E00               	movlw	0
 15034  0078DC  6E05               	movwf	___flge@ff2^0,c
 15035  0078DE  0E00               	movlw	0
 15036  0078E0  6E06               	movwf	(___flge@ff2+1)^0,c
 15037  0078E2  0E00               	movlw	0
 15038  0078E4  6E07               	movwf	(___flge@ff2+2)^0,c
 15039  0078E6  0E00               	movlw	0
 15040  0078E8  6E08               	movwf	(___flge@ff2+3)^0,c
 15041  0078EA                     l4944:
 15042  0078EA  FFFF               	dw	65535	; assembler added errata NOP
 15043  0078EC  AE04               	btfss	(___flge@ff1+3)^0,7,c
 15044  0078EE  EF7B  F03C         	goto	u6061
 15045  0078F2  EF7E  F03C         	goto	u6060
 15046  0078F6                     u6061:
 15047  0078F6  FFFF               	dw	65535	; assembler added errata NOP
 15048  0078F8  EF88  F03C         	goto	l4948
 15049  0078FC                     u6060:
 15050  0078FC  FFFF               	dw	65535	; assembler added errata NOP
 15051  0078FE  6C01               	negf	___flge@ff1^0,c
 15052  007900  1E02               	comf	(___flge@ff1+1)^0,f,c
 15053  007902  B0D8               	btfsc	status,0,c
 15054  007904  2A02               	incf	(___flge@ff1+1)^0,f,c
 15055  007906  1E03               	comf	(___flge@ff1+2)^0,f,c
 15056  007908  B0D8               	btfsc	status,0,c
 15057  00790A  2A03               	incf	(___flge@ff1+2)^0,f,c
 15058  00790C  0E80               	movlw	128
 15059  00790E  5604               	subfwb	(___flge@ff1+3)^0,f,c
 15060  007910                     l4948:
 15061  007910  FFFF               	dw	65535	; assembler added errata NOP
 15062  007912  AE08               	btfss	(___flge@ff2+3)^0,7,c
 15063  007914  EF8E  F03C         	goto	u6071
 15064  007918  EF91  F03C         	goto	u6070
 15065  00791C                     u6071:
 15066  00791C  FFFF               	dw	65535	; assembler added errata NOP
 15067  00791E  EF9B  F03C         	goto	l645
 15068  007922                     u6070:
 15069  007922  FFFF               	dw	65535	; assembler added errata NOP
 15070  007924  6C05               	negf	___flge@ff2^0,c
 15071  007926  1E06               	comf	(___flge@ff2+1)^0,f,c
 15072  007928  B0D8               	btfsc	status,0,c
 15073  00792A  2A06               	incf	(___flge@ff2+1)^0,f,c
 15074  00792C  1E07               	comf	(___flge@ff2+2)^0,f,c
 15075  00792E  B0D8               	btfsc	status,0,c
 15076  007930  2A07               	incf	(___flge@ff2+2)^0,f,c
 15077  007932  0E80               	movlw	128
 15078  007934  5608               	subfwb	(___flge@ff2+3)^0,f,c
 15079  007936                     l645:
 15080  007936  FFFF               	dw	65535	; assembler added errata NOP
 15081  007938  0E00               	movlw	0
 15082  00793A  1A01               	xorwf	___flge@ff1^0,f,c
 15083  00793C  0E00               	movlw	0
 15084  00793E  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 15085  007940  0E00               	movlw	0
 15086  007942  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 15087  007944  0E80               	movlw	128
 15088  007946  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 15089  007948  0E00               	movlw	0
 15090  00794A  1A05               	xorwf	___flge@ff2^0,f,c
 15091  00794C  0E00               	movlw	0
 15092  00794E  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 15093  007950  0E00               	movlw	0
 15094  007952  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 15095  007954  0E80               	movlw	128
 15096  007956  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 15097  007958  5005               	movf	___flge@ff2^0,w,c
 15098  00795A  5C01               	subwf	___flge@ff1^0,w,c
 15099  00795C  5006               	movf	(___flge@ff2+1)^0,w,c
 15100  00795E  5802               	subwfb	(___flge@ff1+1)^0,w,c
 15101  007960  5007               	movf	(___flge@ff2+2)^0,w,c
 15102  007962  5803               	subwfb	(___flge@ff1+2)^0,w,c
 15103  007964  5008               	movf	(___flge@ff2+3)^0,w,c
 15104  007966  5804               	subwfb	(___flge@ff1+3)^0,w,c
 15105  007968  B0D8               	btfsc	status,0,c
 15106  00796A  EFB9  F03C         	goto	u6081
 15107  00796E  EFBC  F03C         	goto	u6080
 15108  007972                     u6081:
 15109  007972  FFFF               	dw	65535	; assembler added errata NOP
 15110  007974  EFC0  F03C         	goto	l4954
 15111  007978                     u6080:
 15112  007978  FFFF               	dw	65535	; assembler added errata NOP
 15113  00797A  90D8               	bcf	status,0,c
 15114  00797C  EFC2  F03C         	goto	l650
 15115  007980                     l4954:
 15116  007980  FFFF               	dw	65535	; assembler added errata NOP
 15117  007982  80D8               	bsf	status,0,c
 15118  007984                     l650:
 15119  007984  FFFF               	dw	65535	; assembler added errata NOP
 15120  007986  0012               	return		;funcret
 15121  007988  FFFF               	dw	65535	; errata NOP
 15122  00798A                     __end_of___flge:
 15123                           	callstack 0
 15124                           
 15125 ;; *************** function ___awdiv *****************
 15126 ;; Defined at:
 15127 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
 15128 ;; Parameters:    Size  Location     Type
 15129 ;;  dividend        2   22[COMRAM] int 
 15130 ;;  divisor         2   24[COMRAM] int 
 15131 ;; Auto vars:     Size  Location     Type
 15132 ;;  quotient        2   28[COMRAM] int 
 15133 ;;  sign            1   27[COMRAM] unsigned char 
 15134 ;;  counter         1   26[COMRAM] unsigned char 
 15135 ;; Return value:  Size  Location     Type
 15136 ;;                  2   22[COMRAM] int 
 15137 ;; Registers used:
 15138 ;;		wreg, status,2, status,0
 15139 ;; Tracked objects:
 15140 ;;		On entry : 0/0
 15141 ;;		On exit  : 0/0
 15142 ;;		Unchanged: 0/0
 15143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15144 ;;      Params:         4       0       0       0       0       0       0
 15145 ;;      Locals:         4       0       0       0       0       0       0
 15146 ;;      Temps:          0       0       0       0       0       0       0
 15147 ;;      Totals:         8       0       0       0       0       0       0
 15148 ;;Total ram usage:        8 bytes
 15149 ;; Hardware stack levels used:    1
 15150 ;; Hardware stack levels required when called:    1
 15151 ;; This function calls:
 15152 ;;		Nothing
 15153 ;; This function is called by:
 15154 ;;		_check_temperature
 15155 ;; This function uses a non-reentrant model
 15156 ;;
 15157                           
 15158                           	psect	text63
 15159  007560                     __ptext63:
 15160                           	callstack 0
 15161  007560                     ___awdiv:
 15162                           	callstack 0
 15163  007560  FFFF               	dw	65535	; assembler added errata NOP
 15164  007562  0E00               	movlw	0
 15165  007564  6E1C               	movwf	___awdiv@sign^0,c
 15166  007566  BE1A               	btfsc	(___awdiv@divisor+1)^0,7,c
 15167  007568  EFBB  F03A         	goto	u6420
 15168  00756C  EFB8  F03A         	goto	u6421
 15169  007570                     u6421:
 15170  007570  FFFF               	dw	65535	; assembler added errata NOP
 15171  007572  EFC2  F03A         	goto	l5172
 15172  007576                     u6420:
 15173  007576  FFFF               	dw	65535	; assembler added errata NOP
 15174  007578  6C19               	negf	___awdiv@divisor^0,c
 15175  00757A  1E1A               	comf	(___awdiv@divisor+1)^0,f,c
 15176  00757C  B0D8               	btfsc	status,0,c
 15177  00757E  2A1A               	incf	(___awdiv@divisor+1)^0,f,c
 15178  007580  0E01               	movlw	1
 15179  007582  6E1C               	movwf	___awdiv@sign^0,c
 15180  007584                     l5172:
 15181  007584  FFFF               	dw	65535	; assembler added errata NOP
 15182  007586  BE18               	btfsc	(___awdiv@dividend+1)^0,7,c
 15183  007588  EFCB  F03A         	goto	u6430
 15184  00758C  EFC8  F03A         	goto	u6431
 15185  007590                     u6431:
 15186  007590  FFFF               	dw	65535	; assembler added errata NOP
 15187  007592  EFD2  F03A         	goto	l5178
 15188  007596                     u6430:
 15189  007596  FFFF               	dw	65535	; assembler added errata NOP
 15190  007598  6C17               	negf	___awdiv@dividend^0,c
 15191  00759A  1E18               	comf	(___awdiv@dividend+1)^0,f,c
 15192  00759C  B0D8               	btfsc	status,0,c
 15193  00759E  2A18               	incf	(___awdiv@dividend+1)^0,f,c
 15194  0075A0  0E01               	movlw	1
 15195  0075A2  1A1C               	xorwf	___awdiv@sign^0,f,c
 15196  0075A4                     l5178:
 15197  0075A4  FFFF               	dw	65535	; assembler added errata NOP
 15198  0075A6  0E00               	movlw	0
 15199  0075A8  6E1E               	movwf	(___awdiv@quotient+1)^0,c
 15200  0075AA  0E00               	movlw	0
 15201  0075AC  6E1D               	movwf	___awdiv@quotient^0,c
 15202  0075AE  5019               	movf	___awdiv@divisor^0,w,c
 15203  0075B0  101A               	iorwf	(___awdiv@divisor+1)^0,w,c
 15204  0075B2  B4D8               	btfsc	status,2,c
 15205  0075B4  EFDE  F03A         	goto	u6441
 15206  0075B8  EFE1  F03A         	goto	u6440
 15207  0075BC                     u6441:
 15208  0075BC  FFFF               	dw	65535	; assembler added errata NOP
 15209  0075BE  EF12  F03B         	goto	l5200
 15210  0075C2                     u6440:
 15211  0075C2  FFFF               	dw	65535	; assembler added errata NOP
 15212  0075C4  0E01               	movlw	1
 15213  0075C6  6E1B               	movwf	___awdiv@counter^0,c
 15214  0075C8  EFEB  F03A         	goto	l5186
 15215  0075CC                     l5184:
 15216  0075CC  FFFF               	dw	65535	; assembler added errata NOP
 15217  0075CE  90D8               	bcf	status,0,c
 15218  0075D0  3619               	rlcf	___awdiv@divisor^0,f,c
 15219  0075D2  361A               	rlcf	(___awdiv@divisor+1)^0,f,c
 15220  0075D4  2A1B               	incf	___awdiv@counter^0,f,c
 15221  0075D6                     l5186:
 15222  0075D6  FFFF               	dw	65535	; assembler added errata NOP
 15223  0075D8  AE1A               	btfss	(___awdiv@divisor+1)^0,7,c
 15224  0075DA  EFF1  F03A         	goto	u6451
 15225  0075DE  EFF4  F03A         	goto	u6450
 15226  0075E2                     u6451:
 15227  0075E2  FFFF               	dw	65535	; assembler added errata NOP
 15228  0075E4  EFE6  F03A         	goto	l5184
 15229  0075E8                     u6450:
 15230  0075E8  FFFF               	dw	65535	; assembler added errata NOP
 15231  0075EA                     l5188:
 15232  0075EA  FFFF               	dw	65535	; assembler added errata NOP
 15233  0075EC  90D8               	bcf	status,0,c
 15234  0075EE  361D               	rlcf	___awdiv@quotient^0,f,c
 15235  0075F0  361E               	rlcf	(___awdiv@quotient+1)^0,f,c
 15236  0075F2  5019               	movf	___awdiv@divisor^0,w,c
 15237  0075F4  5C17               	subwf	___awdiv@dividend^0,w,c
 15238  0075F6  501A               	movf	(___awdiv@divisor+1)^0,w,c
 15239  0075F8  5818               	subwfb	(___awdiv@dividend+1)^0,w,c
 15240  0075FA  A0D8               	btfss	status,0,c
 15241  0075FC  EF02  F03B         	goto	u6461
 15242  007600  EF05  F03B         	goto	u6460
 15243  007604                     u6461:
 15244  007604  FFFF               	dw	65535	; assembler added errata NOP
 15245  007606  EF0B  F03B         	goto	l5196
 15246  00760A                     u6460:
 15247  00760A  FFFF               	dw	65535	; assembler added errata NOP
 15248  00760C  5019               	movf	___awdiv@divisor^0,w,c
 15249  00760E  5E17               	subwf	___awdiv@dividend^0,f,c
 15250  007610  501A               	movf	(___awdiv@divisor+1)^0,w,c
 15251  007612  5A18               	subwfb	(___awdiv@dividend+1)^0,f,c
 15252  007614  801D               	bsf	___awdiv@quotient^0,0,c
 15253  007616                     l5196:
 15254  007616  FFFF               	dw	65535	; assembler added errata NOP
 15255  007618  90D8               	bcf	status,0,c
 15256  00761A  321A               	rrcf	(___awdiv@divisor+1)^0,f,c
 15257  00761C  3219               	rrcf	___awdiv@divisor^0,f,c
 15258  00761E  2E1B               	decfsz	___awdiv@counter^0,f,c
 15259  007620  EFF5  F03A         	goto	l5188
 15260  007624                     l5200:
 15261  007624  FFFF               	dw	65535	; assembler added errata NOP
 15262  007626  501C               	movf	___awdiv@sign^0,w,c
 15263  007628  B4D8               	btfsc	status,2,c
 15264  00762A  EF19  F03B         	goto	u6471
 15265  00762E  EF1C  F03B         	goto	u6470
 15266  007632                     u6471:
 15267  007632  FFFF               	dw	65535	; assembler added errata NOP
 15268  007634  EF21  F03B         	goto	l5204
 15269  007638                     u6470:
 15270  007638  FFFF               	dw	65535	; assembler added errata NOP
 15271  00763A  6C1D               	negf	___awdiv@quotient^0,c
 15272  00763C  1E1E               	comf	(___awdiv@quotient+1)^0,f,c
 15273  00763E  B0D8               	btfsc	status,0,c
 15274  007640  2A1E               	incf	(___awdiv@quotient+1)^0,f,c
 15275  007642                     l5204:
 15276  007642  FFFF               	dw	65535	; assembler added errata NOP
 15277  007644  C01D  F017         	movff	___awdiv@quotient,?___awdiv
 15278  007648  C01E  F018         	movff	___awdiv@quotient+1,?___awdiv+1
 15279  00764C  0012               	return		;funcret
 15280  00764E  FFFF               	dw	65535	; errata NOP
 15281  007650                     __end_of___awdiv:
 15282                           	callstack 0
 15283                           
 15284 ;; *************** function _change_direction *****************
 15285 ;; Defined at:
 15286 ;;		line 40 in file "stepper_motor.c"
 15287 ;; Parameters:    Size  Location     Type
 15288 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 15289 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
 15290 ;; Auto vars:     Size  Location     Type
 15291 ;;		None
 15292 ;; Return value:  Size  Location     Type
 15293 ;;                  1    wreg      void 
 15294 ;; Registers used:
 15295 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15296 ;; Tracked objects:
 15297 ;;		On entry : 0/0
 15298 ;;		On exit  : 0/0
 15299 ;;		Unchanged: 0/0
 15300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15301 ;;      Params:         2       0       0       0       0       0       0
 15302 ;;      Locals:         0       0       0       0       0       0       0
 15303 ;;      Temps:          2       0       0       0       0       0       0
 15304 ;;      Totals:         4       0       0       0       0       0       0
 15305 ;;Total ram usage:        4 bytes
 15306 ;; Hardware stack levels used:    1
 15307 ;; Hardware stack levels required when called:    1
 15308 ;; This function calls:
 15309 ;;		Nothing
 15310 ;; This function is called by:
 15311 ;;		_main
 15312 ;; This function uses a non-reentrant model
 15313 ;;
 15314                           
 15315                           	psect	text64
 15316  006776                     __ptext64:
 15317                           	callstack 0
 15318  006776                     _change_direction:
 15319                           	callstack 0
 15320  006776  FFFF               	dw	65535	; assembler added errata NOP
 15321  006778                     
 15322                           ;stepper_motor.c: 41:     stepper_motor -> direction = stepper_motor -> direction*(-1);
 15323  006778  EE20 F004          	lfsr	2,4
 15324  00677C  5001               	movf	change_direction@stepper_motor^0,w,c
 15325  00677E  26D9               	addwf	fsr2l,f,c
 15326  006780  5002               	movf	(change_direction@stepper_motor+1)^0,w,c
 15327  006782  22DA               	addwfc	fsr2h,f,c
 15328  006784  CFDE F003          	movff	postinc2,??_change_direction
 15329  006788  CFDD F004          	movff	postdec2,??_change_direction+1
 15330  00678C  1E03               	comf	??_change_direction^0,f,c
 15331  00678E  1E04               	comf	(??_change_direction+1)^0,f,c
 15332  006790  4A03               	infsnz	??_change_direction^0,f,c
 15333  006792  2A04               	incf	(??_change_direction+1)^0,f,c
 15334  006794  EE20 F004          	lfsr	2,4
 15335  006798  5001               	movf	change_direction@stepper_motor^0,w,c
 15336  00679A  26D9               	addwf	fsr2l,f,c
 15337  00679C  5002               	movf	(change_direction@stepper_motor+1)^0,w,c
 15338  00679E  22DA               	addwfc	fsr2h,f,c
 15339  0067A0  C003  FFDE         	movff	??_change_direction,postinc2
 15340  0067A4  C004  FFDD         	movff	??_change_direction+1,postdec2
 15341  0067A8  0012               	return		;funcret
 15342  0067AA  FFFF               	dw	65535	; errata NOP
 15343  0067AC                     __end_of_change_direction:
 15344                           	callstack 0
 15345                           
 15346 ;; *************** function _rx_char_usart *****************
 15347 ;; Defined at:
 15348 ;;		line 190 in file "main.c"
 15349 ;; Parameters:    Size  Location     Type
 15350 ;;		None
 15351 ;; Auto vars:     Size  Location     Type
 15352 ;;		None
 15353 ;; Return value:  Size  Location     Type
 15354 ;;                  1    wreg      void 
 15355 ;; Registers used:
 15356 ;;		wreg, status,2
 15357 ;; Tracked objects:
 15358 ;;		On entry : 0/0
 15359 ;;		On exit  : 0/0
 15360 ;;		Unchanged: 0/0
 15361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15362 ;;      Params:         0       0       0       0       0       0       0
 15363 ;;      Locals:         0       0       0       0       0       0       0
 15364 ;;      Temps:          0       0       0       0       0       0       0
 15365 ;;      Totals:         0       0       0       0       0       0       0
 15366 ;;Total ram usage:        0 bytes
 15367 ;; Hardware stack levels used:    1
 15368 ;; This function calls:
 15369 ;;		Nothing
 15370 ;; This function is called by:
 15371 ;;		Interrupt level 2
 15372 ;; This function uses a non-reentrant model
 15373 ;;
 15374                           
 15375                           	psect	intcode
 15376  000008                     __pintcode:
 15377                           	callstack 0
 15378  000008                     _rx_char_usart:
 15379                           	callstack 0
 15380  000008  FFFF               	dw	65535	; assembler added errata NOP
 15381                           
 15382                           ;incstack = 0
 15383  00000A  827F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15384  00000C                     
 15385                           ;main.c: 191:     if(PIE1bits.RCIE && PIR1bits.RCIF){
 15386  00000C  AA9D               	btfss	157,5,c	;volatile
 15387  00000E  EF0B  F000         	goto	i2u709_41
 15388  000012  EF0E  F000         	goto	i2u709_40
 15389  000016                     i2u709_41:
 15390  000016  FFFF               	dw	65535	; assembler added errata NOP
 15391  000018  EF1E  F000         	goto	i2l5654
 15392  00001C                     i2u709_40:
 15393  00001C  FFFF               	dw	65535	; assembler added errata NOP
 15394  00001E  AA9E               	btfss	158,5,c	;volatile
 15395  000020  EF14  F000         	goto	i2u710_41
 15396  000024  EF17  F000         	goto	i2u710_40
 15397  000028                     i2u710_41:
 15398  000028  FFFF               	dw	65535	; assembler added errata NOP
 15399  00002A  EF1E  F000         	goto	i2l5654
 15400  00002E                     i2u710_40:
 15401  00002E  FFFF               	dw	65535	; assembler added errata NOP
 15402  000030                     
 15403                           ;main.c: 192:         PIR1bits.RCIF = 0;
 15404  000030  9A9E               	bcf	158,5,c	;volatile
 15405  000032                     
 15406                           ;main.c: 193:         state_changed = 1;
 15407  000032  0E01               	movlw	1
 15408  000034  0101               	movlb	1	; () banked
 15409  000036  6FB0               	movwf	_state_changed& (0+255),b
 15410                           
 15411                           ;main.c: 194:         read_new_char = 1;
 15412  000038  0E01               	movlw	1
 15413  00003A  6FAE               	movwf	_read_new_char& (0+255),b
 15414  00003C                     i2l5654:
 15415  00003C  FFFF               	dw	65535	; assembler added errata NOP
 15416                           
 15417                           ;main.c: 196:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF){
 15418  00003E  AAF2               	btfss	242,5,c	;volatile
 15419  000040  EF24  F000         	goto	i2u711_41
 15420  000044  EF27  F000         	goto	i2u711_40
 15421  000048                     i2u711_41:
 15422  000048  FFFF               	dw	65535	; assembler added errata NOP
 15423  00004A  EF37  F000         	goto	i2l180
 15424  00004E                     i2u711_40:
 15425  00004E  FFFF               	dw	65535	; assembler added errata NOP
 15426  000050  A4F2               	btfss	242,2,c	;volatile
 15427  000052  EF2D  F000         	goto	i2u712_41
 15428  000056  EF30  F000         	goto	i2u712_40
 15429  00005A                     i2u712_41:
 15430  00005A  FFFF               	dw	65535	; assembler added errata NOP
 15431  00005C  EF37  F000         	goto	i2l180
 15432  000060                     i2u712_40:
 15433  000060  FFFF               	dw	65535	; assembler added errata NOP
 15434  000062                     
 15435                           ;main.c: 197:         T0CON = 0;
 15436  000062  0E00               	movlw	0
 15437  000064  6ED5               	movwf	213,c	;volatile
 15438  000066                     
 15439                           ;main.c: 198:         INTCONbits.TMR0IF = 0;
 15440  000066  94F2               	bcf	242,2,c	;volatile
 15441                           
 15442                           ;main.c: 199:         timer_done = 1;
 15443  000068  0E01               	movlw	1
 15444  00006A  0101               	movlb	1	; () banked
 15445  00006C  6FAD               	movwf	_timer_done& (0+255),b
 15446  00006E                     i2l180:
 15447  00006E  FFFF               	dw	65535	; assembler added errata NOP
 15448  000070  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15449  000072  0011               	retfie		f
 15450  000074  FFFF               	dw	65535	; errata NOP
 15451  000076                     __end_of_rx_char_usart:
 15452                           	callstack 0
 15453                           
 15454                           	psect	rparam
 15455  0000                     
 15456                           	psect	temp
 15457  00007F                     btemp:
 15458                           	callstack 0
 15459  00007F                     	ds	1
 15460  0000                     int$flags	set	btemp
 15461  0000                     wtemp8	set	btemp+1
 15462  0000                     ttemp5	set	btemp+1
 15463  0000                     ttemp6	set	btemp+4
 15464  0000                     ttemp7	set	btemp+8
 15465                           
 15466                           	psect	idloc
 15467                           
 15468                           ;Config register IDLOC0 @ 0x200000
 15469                           ;	unspecified, using default values
 15470  200000                     	org	2097152
 15471  200000  FF                 	db	255
 15472                           
 15473                           ;Config register IDLOC1 @ 0x200001
 15474                           ;	unspecified, using default values
 15475  200001                     	org	2097153
 15476  200001  FF                 	db	255
 15477                           
 15478                           ;Config register IDLOC2 @ 0x200002
 15479                           ;	unspecified, using default values
 15480  200002                     	org	2097154
 15481  200002  FF                 	db	255
 15482                           
 15483                           ;Config register IDLOC3 @ 0x200003
 15484                           ;	unspecified, using default values
 15485  200003                     	org	2097155
 15486  200003  FF                 	db	255
 15487                           
 15488                           ;Config register IDLOC4 @ 0x200004
 15489                           ;	unspecified, using default values
 15490  200004                     	org	2097156
 15491  200004  FF                 	db	255
 15492                           
 15493                           ;Config register IDLOC5 @ 0x200005
 15494                           ;	unspecified, using default values
 15495  200005                     	org	2097157
 15496  200005  FF                 	db	255
 15497                           
 15498                           ;Config register IDLOC6 @ 0x200006
 15499                           ;	unspecified, using default values
 15500  200006                     	org	2097158
 15501  200006  FF                 	db	255
 15502                           
 15503                           ;Config register IDLOC7 @ 0x200007
 15504                           ;	unspecified, using default values
 15505  200007                     	org	2097159
 15506  200007  FF                 	db	255
 15507                           
 15508                           	psect	config
 15509                           
 15510                           ; Padding undefined space
 15511  300000                     	org	3145728
 15512  300000  FF                 	db	255
 15513                           
 15514                           ;Config register CONFIG1H @ 0x300001
 15515                           ;	Oscillator Selection bits
 15516                           ;	OSC = RCIO, RC oscillator w/ OSC2 configured as RA6
 15517                           ;	Oscillator System Clock Switch Enable bit
 15518                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
 15519  300001                     	org	3145729
 15520  300001  27                 	db	39
 15521                           
 15522                           ;Config register CONFIG2L @ 0x300002
 15523                           ;	Power-up Timer Enable bit
 15524                           ;	PWRT = OFF, PWRT disabled
 15525                           ;	Brown-out Reset Enable bit
 15526                           ;	BOR = ON, Brown-out Reset enabled
 15527                           ;	Brown-out Reset Voltage bits
 15528                           ;	BORV = 20, VBOR set to 2.0V
 15529  300002                     	org	3145730
 15530  300002  0F                 	db	15
 15531                           
 15532                           ;Config register CONFIG2H @ 0x300003
 15533                           ;	Watchdog Timer Enable bit
 15534                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 15535                           ;	Watchdog Timer Postscale Select bits
 15536                           ;	WDTPS = 128, 1:128
 15537  300003                     	org	3145731
 15538  300003  0E                 	db	14
 15539                           
 15540                           ; Padding undefined space
 15541  300004                     	org	3145732
 15542  300004  FF                 	db	255
 15543                           
 15544                           ;Config register CONFIG3H @ 0x300005
 15545                           ;	CCP2 Mux bit
 15546                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
 15547  300005                     	org	3145733
 15548  300005  01                 	db	1
 15549                           
 15550                           ;Config register CONFIG4L @ 0x300006
 15551                           ;	Stack Full/Underflow Reset Enable bit
 15552                           ;	STVR = ON, Stack Full/Underflow will cause RESET
 15553                           ;	Low Voltage ICSP Enable bit
 15554                           ;	LVP = ON, Low Voltage ICSP enabled
 15555                           ;	Background Debugger Enable bit
 15556                           ;	DEBUG = 0x1, unprogrammed default
 15557  300006                     	org	3145734
 15558  300006  85                 	db	133
 15559                           
 15560                           ; Padding undefined space
 15561  300007                     	org	3145735
 15562  300007  FF                 	db	255
 15563                           
 15564                           ;Config register CONFIG5L @ 0x300008
 15565                           ;	Code Protection bit
 15566                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
 15567                           ;	Code Protection bit
 15568                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
 15569                           ;	Code Protection bit
 15570                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
 15571                           ;	Code Protection bit
 15572                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
 15573  300008                     	org	3145736
 15574  300008  0F                 	db	15
 15575                           
 15576                           ;Config register CONFIG5H @ 0x300009
 15577                           ;	Boot Block Code Protection bit
 15578                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
 15579                           ;	Data EEPROM Code Protection bit
 15580                           ;	CPD = OFF, Data EEPROM not code protected
 15581  300009                     	org	3145737
 15582  300009  C0                 	db	192
 15583                           
 15584                           ;Config register CONFIG6L @ 0x30000A
 15585                           ;	Write Protection bit
 15586                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
 15587                           ;	Write Protection bit
 15588                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
 15589                           ;	Write Protection bit
 15590                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
 15591                           ;	Write Protection bit
 15592                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
 15593  30000A                     	org	3145738
 15594  30000A  0F                 	db	15
 15595                           
 15596                           ;Config register CONFIG6H @ 0x30000B
 15597                           ;	Configuration Register Write Protection bit
 15598                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
 15599                           ;	Boot Block Write Protection bit
 15600                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
 15601                           ;	Data EEPROM Write Protection bit
 15602                           ;	WRTD = OFF, Data EEPROM not write protected
 15603  30000B                     	org	3145739
 15604  30000B  E0                 	db	224
 15605                           
 15606                           ;Config register CONFIG7L @ 0x30000C
 15607                           ;	Table Read Protection bit
 15608                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
 15609                           ;	Table Read Protection bit
 15610                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
 15611                           ;	Table Read Protection bit
 15612                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
 15613                           ;	Table Read Protection bit
 15614                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
 15615  30000C                     	org	3145740
 15616  30000C  0F                 	db	15
 15617                           
 15618                           ;Config register CONFIG7H @ 0x30000D
 15619                           ;	Boot Block Table Read Protection bit
 15620                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
 15621  30000D                     	org	3145741
 15622  30000D  40                 	db	64
 15623                           tosu	equ	0xFFF
 15624                           tosh	equ	0xFFE
 15625                           tosl	equ	0xFFD
 15626                           stkptr	equ	0xFFC
 15627                           pclatu	equ	0xFFB
 15628                           pclath	equ	0xFFA
 15629                           pcl	equ	0xFF9
 15630                           tblptru	equ	0xFF8
 15631                           tblptrh	equ	0xFF7
 15632                           tblptrl	equ	0xFF6
 15633                           tablat	equ	0xFF5
 15634                           prodh	equ	0xFF4
 15635                           prodl	equ	0xFF3
 15636                           indf0	equ	0xFEF
 15637                           postinc0	equ	0xFEE
 15638                           postdec0	equ	0xFED
 15639                           preinc0	equ	0xFEC
 15640                           plusw0	equ	0xFEB
 15641                           fsr0h	equ	0xFEA
 15642                           fsr0l	equ	0xFE9
 15643                           wreg	equ	0xFE8
 15644                           indf1	equ	0xFE7
 15645                           postinc1	equ	0xFE6
 15646                           postdec1	equ	0xFE5
 15647                           preinc1	equ	0xFE4
 15648                           plusw1	equ	0xFE3
 15649                           fsr1h	equ	0xFE2
 15650                           fsr1l	equ	0xFE1
 15651                           bsr	equ	0xFE0
 15652                           indf2	equ	0xFDF
 15653                           postinc2	equ	0xFDE
 15654                           postdec2	equ	0xFDD
 15655                           preinc2	equ	0xFDC
 15656                           plusw2	equ	0xFDB
 15657                           fsr2h	equ	0xFDA
 15658                           fsr2l	equ	0xFD9
 15659                           status	equ	0xFD8

Data Sizes:
    Strings     310
    Constant    20
    Data        51
    BSS         100
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    126     126
    BANK0           128     38     113
    BANK1           256    163     239
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    main$2130	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[9]), 
		 -> STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_107(CODE[3]), STR_103(CODE[3]), STR_98(CODE[3]), STR_94(CODE[3]), 
		 -> STR_89(CODE[4]), STR_85(CODE[4]), STR_80(CODE[3]), STR_75(CODE[3]), 
		 -> STR_70(CODE[4]), STR_65(CODE[3]), STR_60(CODE[3]), STR_55(CODE[4]), 
		 -> STR_50(CODE[3]), STR_45(CODE[3]), STR_40(CODE[4]), STR_35(CODE[3]), 
		 -> STR_31(CODE[3]), STR_26(CODE[3]), STR_22(CODE[3]), STR_17(CODE[4]), 
		 -> STR_13(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_107(CODE[3]), STR_103(CODE[3]), STR_98(CODE[3]), STR_94(CODE[3]), 
		 -> STR_89(CODE[4]), STR_85(CODE[4]), STR_80(CODE[3]), STR_75(CODE[3]), 
		 -> STR_70(CODE[4]), STR_65(CODE[3]), STR_60(CODE[3]), STR_55(CODE[4]), 
		 -> STR_50(CODE[3]), STR_45(CODE[3]), STR_40(CODE[4]), STR_35(CODE[3]), 
		 -> STR_31(CODE[3]), STR_26(CODE[3]), STR_22(CODE[3]), STR_17(CODE[4]), 
		 -> STR_13(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), STR_8(CODE[50]), 
		 -> STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), STR_8(CODE[50]), 
		 -> STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), 
		 -> STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), 
		 -> STR_2(CODE[64]), STR_1(CODE[49]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    S1526_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    change_direction@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    reach_goal@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    update_current_coil@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    turn_on_current_coil@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    init_stepper@hex_coil_register_values	PTR int  size(2) Largest target is 8
		 -> hex_end_effector_values(BANK1[8]), hex_joint_values(BANK1[8]), 

    init_stepper@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    state_translator_micro_to_fpga@state	PTR int  size(2) Largest target is 2
		 -> state(BANK1[2]), 

    state_translator_fpga_to_micro@state	PTR int  size(2) Largest target is 2
		 -> state(BANK1[2]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), STR_9(CODE[22]), 

    main@greet_str	PTR const unsigned char [80] size(2) Largest target is 64
		 -> ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    state_msgs	PTR const unsigned char [8] size(2) Largest target is 64
		 -> STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[9]), 
		 -> STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 


Critical Paths under _main in COMRAM

    _state_translator_fpga_to_micro->_lcd_dat
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _reach_goal->_turn_on_current_coil
    _reach_goal->_update_current_coil
    _lcd_str->_lcd_dat
    _lcd_dat->_lcd_wr
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_wr
    ___fldiv->___flmul
    _init_USART->_roundf
    _roundf->___flsub
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___fltol->_roundf
    _abs->___aomod
    ___xxtofl->___awdiv
    ___awdiv->_abs

Critical Paths under _rx_char_usart in COMRAM

    None.

Critical Paths under _main in BANK0

    _wait_for_zero->_get_temperature
    _get_temperature->___fltol
    _snprintf->_vsnprintf
    _init_timer_2->___fltol
    _init_ccp1->_update_pwm_duty_ccp1
    _update_pwm_duty_ccp1->___fltol
    _init_USART->___fltol
    ___fltol->_roundf
    _check_temperature->_get_temperature

Critical Paths under _rx_char_usart in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rx_char_usart in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rx_char_usart in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rx_char_usart in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rx_char_usart in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rx_char_usart in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               164   164      0   85024
                                             37 BANK0      1     1      0
                                              0 BANK1    163   163      0
                             ___wmul
                   _change_direction
                  _check_temperature
_configure_analog_digital_conversion
                      _get_reg_value
                    _get_temperature
                         _init_PORTS
                         _init_USART
                          _init_ccp1
                    _init_interrupts
                       _init_stepper
                       _init_timer_0
                       _init_timer_2
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                         _reach_goal
                     _serial_tx_char
                           _snprintf
     _state_translator_fpga_to_micro
     _state_translator_micro_to_fpga
                      _wait_for_zero
 ---------------------------------------------------------------------------------
 (1) _wait_for_zero                                        0     0      0    3359
                    _get_temperature
 ---------------------------------------------------------------------------------
 (2) _get_temperature                                      2     0      2    3359
                                             28 BANK0      2     0      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _state_translator_micro_to_fpga                       5     3      2     168
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _state_translator_fpga_to_micro                       3     1      2     428
                                              2 COMRAM     3     1      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            12     4      8   46693
                                             10 BANK0     12     4      8
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   46319
                                            111 COMRAM    12     4      8
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   45556
                                            103 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   45095
                                             66 COMRAM    37    31      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7075
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6115
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    5013
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    5560
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6790
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2168
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1175
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _serial_tx_char                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _reach_goal                                           7     3      4    1264
                                              6 COMRAM     7     3      4
               _turn_on_current_coil
                _update_current_coil
 ---------------------------------------------------------------------------------
 (2) _update_current_coil                                  6     4      2     274
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _turn_on_current_coil                                 6     4      2     120
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              5     3      2     286
                                              2 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      44
                                              2 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_timer_2                                         4     4      0    7937
                                             28 BANK0      4     4      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _init_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_stepper                                        16     6     10    1406
                                              0 COMRAM    16     6     10
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ccp1                                            0     0      0    4602
               _update_pwm_duty_ccp1
 ---------------------------------------------------------------------------------
 (2) _update_pwm_duty_ccp1                                 9     5      4    4602
                                             28 BANK0      9     5      4
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1551
                                             69 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   11790
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   11257
                                            118 COMRAM     8     4      4
                                              0 BANK0     18    18      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3801
                                            110 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    3478
                                             94 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2352
                                             44 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     533
                                             18 BANK0     10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_reg_value                                        1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configure_analog_digital_conversion                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_temperature                                    6     4      2    2077
                                             30 BANK0      6     4      2
                            ___awdiv
                             ___flge
                           ___xxtofl
                                _abs
                    _get_temperature (ARG)
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     218
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     474
                                             30 COMRAM    14    10      4
                            ___awdiv (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                             22 COMRAM     8     4      4
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (1) _change_direction                                     4     2      2     272
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _rx_char_usart                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _change_direction
   _check_temperature
     ___awdiv
       _abs (ARG)
         ___aomod (ARG)
     ___flge
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _abs (ARG)
         ___aomod (ARG)
     _abs
       ___aomod (ARG)
     _get_temperature (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _roundf (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                         ___aomod (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
   _configure_analog_digital_conversion
   _get_reg_value
   _get_temperature
     ___flmul
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flge
         ___flmul
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _abs (ARG)
         ___aomod (ARG)
   _init_PORTS
   _init_USART
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flge
         ___flmul
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
     _roundf
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flge
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
   _init_ccp1
     _update_pwm_duty_ccp1
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _roundf (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                         ___aomod (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
   _init_interrupts
   _init_stepper
   _init_timer_0
   _init_timer_2
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
     ___flmul
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flge
         ___flmul
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
   _lcd_cmd
     _lcd_wr
   _lcd_init
     _lcd_cmd
       _lcd_wr
   _lcd_str
     _lcd_dat
       _lcd_wr
   _reach_goal
     _turn_on_current_coil
     _update_current_coil
   _serial_tx_char
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _state_translator_fpga_to_micro
     _lcd_dat
       _lcd_wr
   _state_translator_micro_to_fpga
   _wait_for_zero
     _get_temperature
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _roundf (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                         ___aomod (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)

 _rx_char_usart (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A3      EF       7       93.4%
BITBANK0            80      0       0       4        0.0%
BANK0               80     26      71       5       88.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7E      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1DE      15        0.0%
DATA                 0      0     1DE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Jun 15 00:14:34 2023

                                  ?_get_reg_value 0001                                   ??_wait_for_zero 007F  
                                    ___fldiv@aexp 005E                                      ___fldiv@bexp 005D  
                                    ___fldiv@sign 0056                                                l21 6868  
                                              l24 65CA                                                l27 65DE  
                                              l36 65AA                                      ___awdiv@sign 001C  
                             ___wmul@multiplicand 0003                                               l210 658E  
                                             l300 70F4                                               l310 7026  
                                             l222 66BE                                               l207 673E  
                                             l303 6644                                               l320 67E4  
                                             l225 66E8                                               l137 1660  
                                             l234 6EB2                                               l330 6DAA  
                                             l219 659A                                               l251 7AAC  
                                             l147 1718                                               l228 6E2A  
                                             l260 3FF8                                               l317 6F62  
                                             l334 67A8                                               l326 71CC  
                                             l255 3FF4                                               l168 1AE6  
                                             l362 6CCA                                               l611 764C  
                                             l507 7EB0                                               l380 6712  
                                             l372 6694                                               l365 6D34  
                                             l359 666C                                               l376 72A8  
                                             l368 6672                                               l297 6620  
                                             l650 7984                                               l645 7936  
                                             l654 6826                                               l910 1CEE  
                                             l494 3F6E                                               l825 785E  
                                             l818 783C                                               l835 755C  
                                             l908 1D4E                                               l828 753A  
                                             l677 7BE4                                               l925 1E92  
                                             l917 20A8                                               l909 1D38  
                                             l934 1F96                                               l950 69BE  
                                             l935 1F7E                                               l962 297E  
                                             l964 2796                                               l973 27EC  
                                             l975 287C                                               l967 2750  
                                             l976 2864                                               l994 219A  
                                             l998 254C                                 ??_init_interrupts 0001  
                                             _PR2 000FCB                                               _abs 69C2  
                                             _pad 7390                                               wreg 000FE8  
                                  ?_rx_char_usart 0001                                      ___flmul@aexp 003E  
                                    ___flmul@bexp 003F                                      ___flmul@sign 0039  
                                    ___flmul@temp 0044                                      ___flmul@prod 0040  
                                    ___fltol@exp1 00D3                                              l1001 23A6  
                                            l1011 2504                                              l1003 2436  
                                            l1004 241E                                              l1042 3930  
                                            l1035 3884                                              l1211 3BEC  
                                            ?_abs 0013                                              l1038 3A16  
                                            l1134 73E4                                              l1206 3B8E  
                                            l1055 69FE                                              l1207 3BE2  
                                            l1231 30E6                                              l1152 2E26  
                                            l1216 3416                                              l1240 3194  
                                            l1080 6772                                              l1049 399C  
                                            l1137 7430                                              l1233 30F0  
                                            l1058 6A08                                              l1066 2D68  
                                            l1146 6B7C                                              l1154 2E30  
                                            l1226 35FA                                              l1218 3420  
                                            l1139 7472                                              l1420 6582  
                                            l1172 309E                                              PORTD 000F83  
                                            l1093 7CF8                                              PORTE 000F84  
                                            l1430 7752                                              l1254 3362  
                                            l1270 0198                                              l1440 6C46  
                                            l1256 33CE                                              l4000 30B8  
                                            l1088 7D1E                                              l1409 738A  
                                            l1417 6A5A                                              l1177 3642  
                                            l1337 6CBA                                              l1426 6AB6  
                                            l1186 37AE                                              l4010 3136  
                                            l4002 30BA                                              l1338 6CC2  
                                            l1179 364C                                              l1195 3AAC  
                                            l1451 692E                                              l1380 68AA  
                                            l4100 3D92                                              l1188 3820  
                                            l4020 3176                                              l4012 313E  
                                            l4004 30DA                                              l1197 3AB6  
                                            l1445 6C50                                              l1293 145C  
                                            l1366 3DAE                                              l1374 6974  
                                            l4022 3186                                              l4014 3146  
                                            l4006 310C                                              l5000 7B98  
                                            l4200 1C78                                              l4120 76F8  
                                            l4112 768C                                              l4040 3268  
                                            l4032 3226                                              l4016 314E  
                                            l4008 3114                                              l1369 3DB8  
                                            l5010 3828                                              l5002 7BAC  
                                            l4210 1CD6                                              l4202 1C7C  
                                            l4130 1B26                                              l4122 7728  
                                            l4114 769C                                              l4106 7652  
                                            l1394 68EC                                              l4050 3332  
                                            l4042 326E                                              l4034 323C  
                                            l4026 31D0                                              l4018 3156  
                                            l5012 383C                                              l5004 7BC2  
                                            l4300 1FCA                                              l4220 1D28  
                                            l4212 1CE6                                              l4204 1C80  
                                            l4140 1B66                                              l4132 1B28  
                                            l5100 669E                                              l1388 6B16  
                                            l4116 76C0                                              l4108 7680  
                                            l4060 33A4                                              l4052 3350  
                                            l4028 31E6                                              l4036 3250  
                                            l4044 32D0                                              l5030 391A  
                                            l5022 38C6                                              l5014 384E  
                                            l5006 7BD2                                              l4310 2058  
                                            l4302 2008                                              l4222 1D2A  
                                            l4214 1D02                                              l4206 1C86  
                                            l4150 1BA0                                              l4134 1B3E  
                                            l4142 1B6E                                              l4126 1B08  
                                            l5110 66BC                                              l5102 66A4  
                                            l4070 3C12                                              l4118 76E2  
                                            l4054 3378                                              l4046 32F2  
                                            l4038 3262                                              l5200 7624  
                                            l5040 39B0                                              l5032 3926  
                                            l5024 38D0                                              l5016 3896  
                                            l4320 2082                                              l4312 205C  
                                            l4304 200A                                              l4240 1DCC  
                                            l4232 1D8A                                              l4224 1D36  
                                            l4216 1D0E                                              l4208 1CB4  
                                            l4160 1BE6                                              l4152 1BA8  
                                            l4144 1B80                                              l4136 1B52  
                                            l4128 1B14                                              l5104 66A6  
                                            l5120 66C8                                              l4080 3C7C  
                                            l4072 3C34                                              l4064 3BF2  
                                            l3600 6A6C                                              l4056 337E  
                                            l4048 3314                                              l4400 03A0  
                                            l5112 6CC8                                              l5202 763A  
                                            l5050 3A02                                              l5042 39B2  
                                            l5034 3968                                              l5026 38DE  
                                            l5018 38B2                                              l4322 2094  
                                            l4314 2070                                              l4306 2020  
                                            l4242 1DD2                                              l4234 1D9C  
                                            l4226 1D62                                              l4250 1DFA  
                                            l4218 1D14                                              l4170 1C2C  
                                            l4162 1BF6                                              l4154 1BBA  
                                            l4146 1B88                                              l4138 1B62  
                                            l5106 66B0                                              l5130 66E6  
                                            l5122 66CE                                              l4082 3C96  
                                            l4074 3C70                                              l4066 3C06  
                                            l3602 6A72                                              l4058 338E  
                                            l4410 0462                                              l4330 00A6  
                                            l5210 7C02                                              l5114 6CDE  
                                            l5204 7642                                              l5052 3A04  
                                            l5044 39B8                                              l5036 3976  
                                            l5028 3916                                              l3612 69C4  
                                            l4324 2096                                              l4316 2076  
                                            l4308 2032                                              l4252 1E26  
                                            l4260 1E80                                              l4244 1DE6  
                                            l4236 1DAE                                              l4228 1D76  
                                            l4180 1C50                                              l4172 1C3E  
                                            l4164 1BFA                                              l4156 1BBC  
                                            l4148 1B9E                                              l5140 6FEA  
                                            l5132 6F68                                              l5300 6588  
                                            l5108 66B2                                              l5124 66D0  
                                            l4092 3D1E                                              l4084 3CA0  
                                            l4076 3C74                                              l4068 3C0C  
                                            l3604 6AAA                                              l4500 0B0A  
                                            l4420 053C                                              l4404 03F0  
                                            l4340 00DC                                              l4332 00B4  
                                            l5060 6C6E                                              l5220 7C46  
                                            l5212 7C0C                                              l5046 39DC  
                                            l5038 398A                                              l3614 69E2  
                                            l5310 665C                                              l5302 664A  
                                            l4318 207A                                              l4270 1EE2  
                                            l4262 1EAE                                              l4254 1E5A  
                                            l4246 1DE8                                              l4238 1DC0  
                                            l4190 1C64                                              l4182 1C54  
                                            l4174 1C42                                              l4158 1BD2  
                                            l4166 1C02                                              l5070 2A0C  
                                            l5142 6FEE                                              l5134 6FCC  
                                            l5126 66DA                                              l5118 66C6  
                                            l5150 67AE                                              l4086 3CAA  
                                            l3630 3DFA                                              l3622 3DC0  
                                            l3710 77A6                                              l3702 775A  
                                            l4510 0B9E                                              l4414 047E  
                                            l4406 0404                                              l4350 0104  
                                            l4342 00F0                                              l4334 00C6  
                                            l5062 6C96                                              l5230 7CB6  
                                            l5222 7C52                                              l5048 39F0  
                                            l5312 665E                                              l5304 6652  
                                            l4280 1F18                                              l4272 1EF4  
                                            l4264 1EC2                                              l4256 1E5C  
                                            l4248 1DF4                                              l4192 1C68  
                                            l4184 1C58                                              l4176 1C48  
                                            l4168 1C14                                              l5080 2AD2  
                                            l5072 2A52                                              l5064 2986  
                                            l5240 682C                                              l5144 7002  
                                            l5136 6FD0                                              l5320 6EC0  
                                            l5128 66DC                                              l5160 71BC  
                                            l3616 66EE                                              l4096 3D66  
                                            l4088 3CE4                                              l3800 6B40  
                                            l3640 3E62                                              l3632 3E0E  
                                            l3624 3DC4                                              l3720 7822  
                                            l3712 77BA                                              l3704 7766  
                                            l3608 68F0                                              l4520 0C44  
                                            l4424 0576                                              l4416 04BA  
                                            l4408 0430                                              l4336 00CA  
                                            l4328 007C                                              l5056 6C58  
                                            l5232 7CE8                                              l5224 7C66  
                                            l5216 7C14                                              l5208 7BEC  
                                            l5400 3FBC                                              l5170 7580  
                                            l5306 6658                                              l4290 1F5A  
                                            l4282 1F2E                                              l4274 1EF6  
                                            l4258 1E70                                              l4194 1C6C  
                                            l4186 1C5C                                              l4178 1C4C  
                                            l5090 2CEC                                              l5082 2BA6  
                                            l5074 2A76                                              l5066 29A6  
                                            l5250 6862                                              l5242 685A  
                                            l5146 7008                                              l5138 6FE4  
                                            l5330 6F4E                                              l5322 6F06  
                                            l5314 6EB8                                              l5154 70FA  
                                            l3618 670A                                              l4098 3D7C  
                                            l3802 6B4E                                              l3650 3EDA  
                                            l3642 3E6A                                              l3634 3E2E  
                                            l3626 3DD6                                              l3810 2D70  
                                            l3722 7836                                              l3714 77CE  
                                            l3706 7788                                              l3730 74B8  
                                            l4610 1284                                              l4602 1208  
                                            l4530 0CEC                                              l4506 0B3C  
                                            l4434 063A                                              l4426 05B2  
                                            l4418 04F2                                              l4370 01DA  
                                            l4362 0126                                              l4354 010E  
                                            l4346 00FA                                              l4338 00D6  
                                            l5058 6C60                                              l5234 7D02  
                                            l5226 7C8C                                              l5218 7C38  
                                            l5410 6744                                              l5402 3FC4  
                                            l5180 75AE                                              l5172 7584  
                                            l5164 7562                                              l5420 728E  
                                            l5308 665A                                              l5260 65A0  
                                            l4292 1F74                                              l4276 1F0A  
                                            l4268 1ED6                                              l4284 1F30  
                                            l4196 1C70                                              l4188 1C60  
                                            l5092 2D32                                              l5084 2C12  
                                            l5076 2A9A                                              l5068 29F8  
                                            l5252 6864                                              l5244 685C  
                                            l4700 2646                                              l5148 700C  
                                            l5324 6F0A                                              l5340 6DDC  
                                            l5332 6DB2                                              l5156 7186  
                                            l3580 72DA                                              l3740 7392  
                                            l3804 6B54                                              l3660 3F2C  
                                            l3652 3EFA                                              l3644 3E80  
                                            l3636 3E32                                              l3628 3DF6  
                                            l3820 2DFA                                              l3812 2D90  
                                            l3900 373E                                              l3716 7800  
                                            l3708 7790                                              l3732 74CC  
                                            l3724 7478                                              l4620 1338  
                                            l4604 1234                                              l4508 0B68  
                                            l4516 0BD0                                              l4444 06DC  
                                            l4436 0666                                              l4428 05EA  
                                            l4380 0262                                              l4372 0210  
                                            l4364 0180                                              l5228 7CA2  
                                            l5236 7D14                                              l5412 674E  
                                            l5404 3FE6                                              l5500 14D8  
                                            l5190 75F2                                              l5182 75C4  
                                            l5174 7598                                              l5166 7566  
                                            l5262 65A4                                              l5270 673A  
                                            l4278 1F12                                              l4286 1F42  
                                            l4198 1C74                                              l5094 2D56  
                                            l5086 2C4A                                              l5254 6866  
                                            l5246 685E                                              l4702 2662  
                                            l5326 6F2A                                              l5350 6E18  
                                            l5342 6DF4                                              l5334 6DC2  
                                            l5158 719A                                              l3582 72E6  
                                            l3590 6A10                                              l3750 73F2  
                                            l3742 73A6                                              l3806 6B58  
                                            l3662 3F4C                                              l3654 3EFC  
                                            l3646 3E94                                              l3638 3E40  
                                            l3670 7D3C                                              l3830 2E68  
                                            l3822 2E1A                                              l3814 2DC2  
                                            l3910 37DA                                              l3902 3760  
                                            l3718 7820                                              l3734 7500  
                                            l3726 749A                                              l4622 1362  
                                            l4630 13B2                                              l4606 125C  
                                            l4550 0E66                                              l4542 0DAA  
                                            l4534 0D28                                              l4518 0C0C  
                                            l4526 0C76                                              l4470 08EA  
                                            l4462 085E                                              l4454 07A2  
                                            l4446 0718                                              l4438 068E  
                                            l4390 02FC                                              l4374 0222  
                                            l4366 01AC                                              l4358 0118  
                                            l5406 3FEE                                              l5430 6674  
                                            l5510 14F8                                              l5502 14DE  
                                            ?_pad 0011                                              l5192 760C  
                                            l5184 75CC                                              l5176 75A0  
                                            l5168 7578                                              l5416 71D4  
                                            l5272 673C                                              l4800 20B0  
                                            l4296 1FAC                                              l4288 1F48  
                                            l5088 2CB6                                              l5248 6860  
                                            l4720 26BE                                              l4704 2672  
                                            l4712 2694                                              l5328 6F3A  
                                            l5440 6614                                              l5280 7036  
                                            l5352 6E1E                                              l5344 6E06  
                                            l5336 6DD4                                              l5360 6E6C  
                                            l3584 730A                                              l3576 72B0  
                                            l3592 6A1C                                              l3752 7408  
                                            l3744 73BA                                              l3656 3F10  
                                            l3648 3EA8                                              l3680 7DB8  
                                            l3672 7D5C                                              l3840 2F0A  
                                            l3832 2E72                                              l3824 2E3A  
                                            l3816 2DE2                                              l3912 37E0  
                                            l3904 377E                                              l3920 3A1E  
                                            l3736 7520                                              l3728 74A2  
                                            l4632 13DE                                              l4640 140E  
                                            l4624 1372                                              l4608 1276  
                                            l4616 12C4                                              l4560 0F1E  
                                            l4552 0EA2                                              l4544 0DE6  
                                            l4536 0D54                                              l4528 0CA2  
                                            l4480 09A0                                              l4472 0916  
                                            l4464 089A                                              l4456 07DE  
                                            l4448 0750                                              l4392 030A  
                                            l4384 02B2                                              l4376 0230  
                                            l4368 01AE                                              l5600 18C6  
                                            l5520 1544                                              l5512 1502  
                                            l5504 14E4                                              l5194 7614  
                                            l5186 75D6                                              l5178 75A4  
                                            l5418 7258                                              l5426 729C  
                                            l5266 6718                                              l4810 20FA  
                                            l4802 20BC                                              l4298 1FB8  
                                            l4730 2712                                              l4722 26DA  
                                            l4714 26AA                                              l4706 267A  
                                            l5290 6626                                              l5450 661E  
                                            l5442 6616                                              l5434 6604  
                                            l5282 7038                                              l5098 669C  
                                            l5354 6E24                                              l5346 6E0C  
                                            l5338 6DD6                                              l5362 6E6E  
                                            l5258 65C6                                              l3586 7342  
                                            l3578 72C6                                              l3594 6A30  
                                            l3754 740C                                              l3746 73CE  
                                            l3658 3F16                                              l3690 7E3E  
                                            l3682 7DC0                                              l3674 7D60  
                                            l3666 7D26                                              l3850 2FD4  
                                            l3842 2F10                                              l3834 2E7A  
                                            l3826 2E50                                              l3818 2DF8  
                                            l3914 37F0                                              l3906 379C  
                                            l3930 3A6C                                              l3922 3A30  
                                            l3738 7534                                              l3762 68AE  
                                            l3770 6BE8                                              l4634 13EC  
                                            l4618 1300                                              l4546 0E2C  
                                            l4538 0D8A                                              l4490 0A64  
                                            l4458 0824                                              l4394 0334  
                                            l4378 0252                                              l4386 02C6  
                                            l5370 79BE                                              l5610 1936  
                                            l5602 18F0                                              l5530 15A8  
                                            l5522 154E                                              l5514 151A  
                                            l5506 14EA                                              l5196 7616  
                                            l5188 75EA                                              l5268 6738  
                                            l4900 244C                                              l4820 2132  
                                            l4812 210A                                              l4804 20CE  
                                            l4740 2780                                              l4732 2728  
                                            l4724 26EA                                              l4716 26AA  
                                            l4708 2680                                              l5292 662A  
                                            l5444 6618                                              l5436 6610  
                                            l5284 703A                                              l5276 702C  
                                            l4660 6596                                              l5348 6E12  
                                            l5356 6E30                                              l5452 6D3A  
                                            l3780 686C                                              l3596 6A34  
                                            l3756 7444                                              l3748 73DA  
                                            l3692 7E52                                              l3684 7DD6  
                                            l3676 7D74                                              l3668 7D2A  
                                            l3860 3036                                              l3852 2FF2  
                                            l3836 2E82                                              l3844 2F74  
                                            l3828 2E60                                              l3908 37C4  
                                            l3916 37F6                                              l3940 3AF6  
                                            l3932 3A74                                              l3924 3A38  
                                            l4636 1400                                              l4580 1096  
                                            l4492 0A88                                              l4396 036E  
                                            l4388 02F2                                              l5380 7A2E  
                                            l5372 79D6                                              l5364 798E  
                                            l5620 19AE                                              l5612 1962  
                                            l5604 18FC                                              l5540 15DA  
                                            l5532 15B4                                              l5524 1560  
                                            l5516 152E                                              l5508 14F6  
                                            l5198 761E                                              l4910 24B8  
                                            l4902 2458                                              l4830 2180  
                                            l4822 2144                                              l4814 2112  
                                            l4806 20D0                                              l4750 27CC  
                                            l4742 2782                                              l4734 273C  
                                            l4726 26FA                                              l4670 258A  
                                            l4662 2554                                              l5294 6640  
                                            l5446 661A                                              l5438 6612  
                                            l5286 70B6                                              l5278 7034  
                                            l5358 6E38                                              l5454 6D68  
                                            l5462 6D88                                              l3790 6B0A  
                                            l3598 6A60                                              l3758 7458  
                                            l3686 7DEA                                              l3694 7E58  
                                            l3678 7D94                                              l3862 304C  
                                            l3846 2F94                                              l3854 3004  
                                            l3838 2F04                                              l3950 3B66  
                                            l3942 3AFA                                              l3934 3A86  
                                            l3926 3A4E                                              l3766 6932  
                                            l3774 6C24                                              l4590 1156  
                                            l4582 10A6                                              l4574 0FF8  
                                            l4566 0F6C                                              l4558 0EF2  
                                            l4486 09F0                                              l4478 0964  
                                            l4398 0390                                              l4646 1422  
                                            l5390 7A9A                                              l5382 7A42  
                                            l5374 79EA                                              l5366 7994  
                                            l5630 1A2A                                              l5622 19C6  
                                            l5614 196E                                              l5606 1902  
                                            l5550 1650                                              l5542 15F0  
                                            l5534 15BA                                              l5526 159C  
                                            l5518 1536                                              l4920 252C  
                                            l4912 24CC                                              l4904 246A  
                                            l4840 21D8                                              l4832 2188  
                                            l4824 2146                                              l4816 2124  
                                            l4808 20E6                                              l4760 2816  
                                            l4752 27D8                                              l4744 2792  
                                            l4736 274E                                              l4728 270A  
                                            l4680 25CC                                              l4672 259E  
                                            l4664 2560                                              l5296 6642  
                                            l5448 661C                                              l5464 6DA2  
                                            l5456 6D7C                                              l3792 6B0E  
                                            l3784 6ABA                                              l3696 7E6E  
                                            l3688 7E1E                                              l3864 3058  
                                            l3856 301C                                              l3848 2FB6  
                                            l3880 3676                                              l3872 3600  
                                            l3960 3BC0                                              l3952 3B6A  
                                            l3944 3B1C                                              l3928 3A56  
                                            l3776 6C3A                                              l4648 144A  
                                            l4592 118E                                              l4584 10DC  
                                            l4576 1034                                              l4568 0FA8  
                                            l4488 0A2C                                              l4496 0A96  
                                            l5712 0150                                              l5384 7A5A  
                                            l5376 7A02                                              l5368 79AA  
                                            l5640 1AB2                                              l5632 1A54  
                                            l5624 19F0                                              l5608 1926  
                                            l5616 197E                                              l5560 16AC  
                                            l5552 1664                                              l5544 1610  
                                            l5528 15A2                                              l5536 15BE  
                                            l5480 1462                                              l4922 252E  
                                            l4914 24EC                                              l4906 2494  
                                            l4850 222A                                              l4842 21E6  
                                            l4834 21B0                                              l4826 215C  
                                            l4818 212C                                              l4930 697A  
                                            l4770 289E                                              l4762 2828  
                                            l4754 27EA                                              l4746 27AC  
                                            l4738 275C                                              l4690 2604  
                                            l4682 25D4                                              l4674 25AE  
                                            l4666 2572                                              l3786 6AC0  
                                            l5714 3CCC                                              l3698 7E8E  
                                            l3866 3062                                              l3858 302E  
                                            l3890 369E                                              l3882 367E  
                                            l3874 3614                                              l3946 3B2A  
                                            l3938 3AE0                                              l3970 344A  
                                            l3962 33D4                                              l4594 11B8  
                                            l4578 106C                                              l4498 0AD2  
                                            l5386 7A6E                                              l5378 7A16  
                                            l5394 3F74                                              l5642 1AC6  
                                            l5634 1A5E                                              l5626 19FA  
                                            l5618 1998                                              l5570 1730  
                                            l5562 16C6                                              l5554 167E  
                                            l5546 1618                                              l5538 15D8  
                                            l5490 1474                                              l5482 1462  
                                            l5468 6778                                              l4940 78A6  
                                            l4916 250A                                              l4924 2536  
                                            l4908 2498                                              l4860 226C  
                                            l4852 2236                                              l4844 21F0  
                                            l4836 21C2                                              l4828 2170  
                                            l4932 698A                                              l4780 2914  
                                            l4772 28B0                                              l4764 285A  
                                            l4748 27C6                                              l4756 27FE  
                                            l4692 2618                                              l4684 25DA  
                                            l4676 25B2                                              l4668 2574  
                                            l3788 6AD8                                              l3796 6B1C  
                                            l3868 3074                                              l3892 36B0  
                                            l3884 3682                                              l3876 3616  
                                            l3956 3BA6                                              l3948 3B62  
                                            l3980 34DE                                              l3972 3452  
                                            l3964 33E8                                              l4596 11C8  
                                            l4588 111A                                              l5388 7A86  
                                            l5396 3F94                                              l5644 1AFA  
                                            l5636 1A8A                                              l5628 1A14  
                                            l5580 178E                                              l5572 1734  
                                            l5564 16DA                                              l5556 1684  
                                            l5548 1630                                              l5492 1478  
                                            l5484 1468                                              l4950 7924  
                                            l4942 78DA                                              l4926 253C  
                                            l4918 251A                                              l4870 22CE  
                                            l4862 2278                                              l4854 2242  
                                            l4846 2206                                              l4790 296E  
                                            l4782 2934                                              l4774 28DA  
                                            l4758 2812                                              l4694 2628  
                                            l4686 25EC                                              l4678 25BA  
                                            l3798 6B34                                              l3894 36B6  
                                            l3886 368E                                              l3878 3636  
                                            l3958 3BBC                                              l3990 35A0  
                                            l3982 34E4                                              l3974 345A  
                                            l3966 33EA                                              l5398 3F9C  
                                            l5638 1A98                                              l5590 181C  
                                            l5582 17B8                                              l5566 1702  
                                            l5574 1746                                              l5558 169C  
                                            l5494 147C                                              l5486 146C  
                                            TRISD 000F95                                              TRISE 000F96  
                                            l4952 797A                                              l4944 78EA  
                                            l4936 7864                                              l4880 2368  
                                            l4872 22DA                                              l4864 2288  
                                            l4856 2250                                              l4848 2212  
                                            l4960 6804                                              l4792 2972  
                                            l4784 2950                                              l4768 2892  
                                            l4776 28DE                                              l4696 262C  
                                            l4688 25EE                                              l3896 36BC  
                                            l3888 3696                                              l3992 35BE  
                                            l3976 3462                                              l3984 3548  
                                            l3968 340A                                              l5592 1826  
                                            l5584 17C2                                              l5576 1760  
                                            l5568 172C                                              l5496 14A8  
                                            l5488 1470                                              l4954 7980  
                                            l4946 78FE                                              l4938 7896  
                                            l4890 23CC                                              l4882 2386  
                                            l4874 22F6                                              l4866 22A2  
                                            l4858 225C                                              l4962 6814  
                                            l4786 2956                                              l4778 28FE  
                                            l4698 2634                                              l3898 371E  
                                            l3986 3560                                              l3994 35D0  
                                            l3978 34D8                                              l5594 1884  
                                            l5586 17DC                                              l5578 1776  
                                            l5498 14D4                                              l4948 7910  
                                            l4980 7B2C                                              l4972 7AE6  
                                            l4892 23D0                                              l4884 2392  
                                            l4876 2320                                              l4868 22B2  
                                            l4788 2968                                              l3988 3582  
                                            l5588 17F2                                              l5596 1896  
                                            l4990 7B66                                              l4982 7B3E  
                                            l4974 7B16                                              l4966 7AB4  
                                            l4894 23E2                                              l4886 23A4  
                                            l4878 235A                                              l4958 67EA  
                                            l3998 30A4                                              l5598 18B0  
                                            l4992 7B70                                              l4976 7B18  
                                            l4968 7AD0                                              l4896 2414  
                                            l4888 23B8                                              l4978 7B28  
                                            l4988 7B5A                                              l4998 7B8A  
                                            STR_1 7F3B                                              STR_2 7EC9  
                                            STR_3 7FBB                                              STR_4 7F6C  
                                            STR_5 7FA9                                              STR_6 7FC4  
                                            STR_7 7FB2                                              STR_8 7F09  
                                            STR_9 7F93                                     _state_changed 01B0  
                                            _LATA 000F89                                              _LATB 000F8A  
                                            _LATC 000F8B                                              u4000 6AD6  
                                            u4001 6AD0                                              u4010 6B08  
                                            u4011 6B02                                              u4020 6B32  
                                            u4100 2F92                                              u4021 6B2C  
                                            u4101 2F8C                                              u4110 2FB4  
                                            u4030 2DA2                                              u4111 2FAE  
                                            u4031 2D9A                                              u5000 1F2C  
                                            u4120 2FD2                                              u4040 2DA6  
                                            u4200 36F6                                              u5001 1F26  
                                            u4121 2FCC                                              u5010 1F42  
                                            u4130 2FF0                                              u4050 2DC0  
                                            u4210 373C                                              u5011 1F3C  
                                            u4131 2FEA                                              u4051 2DBA  
                                            u4211 3736                                              u5100 2056  
                                            u5020 1F58                                              u4140 3004  
                                            u4060 2DF6                                              u4220 375E  
                                            u4300 3A84                                              u5101 2050  
                                            u5021 1F52                                              u4141 2FFE  
                                            u4061 2DF0                                              u4221 3758  
                                            u4205 36E2                                              u4301 3A7E  
                                            u5110 206E                                              u5030 1F72  
                                            u4150 301A                                              u4070 2E18  
                                            u4230 377C                                              u4310 3AA6  
                                            u5111 2068                                              u5031 1F6C  
                                            u4151 3014                                              u4071 2E12  
                                            u4231 3776                                              u4311 3AA0  
                                            u6000 2468                                              u5120 2092  
                                            u5040 1F90                                              u3600 7342  
                                            u4160 302E                                              u4080 2E4E  
                                            u4240 379A                                              u4320 3ADA  
                                            u4400 355E                                              u5200 02C6  
                                            u6001 2462                                              u5121 208C  
                                            u5041 1F8A                                              u3601 733C  
                                            u4161 3028                                              u4081 2E48  
                                            u4241 3794                                              u4321 3AD4  
                                            u4401 3558                                              u5201 02C0  
                                            u6010 24B6                                              u5050 1FAA  
                                            u3610 6A58                                              u4170 304A  
                                            u4090 2E60                                              u4250 37AE  
                                            u4330 3B1C                                              u4410 3580  
                                            u5210 02F0                                              u5130 00A4  
                                            u6011 24B0                                              u5051 1FA4  
                                            u3611 6A52                                              u4171 3044  
                                            u4091 2E5A                                              u4251 37A8  
                                            u4331 3B16                                              u4411 357A  
                                            u5211 02EA                                              u5131 009E  
                                            u6100 7ACE                                              u6020 24EA  
                                            u5060 1FC8                                              u3620 6A96  
                                            u3700 3E60                                              u4260 37C2  
                                            u4180 3612                                              u4340 3B4E  
                                            u4420 359E                                              u4500 31CA  
                                            u5300 05EA                                              u5220 0332  
                                            u5140 0196                                              u6101 7AC8  
                                            u6021 24E4                                              u5061 1FC2  
                                            u3701 3E5A                                              u4261 37BC  
                                            u4181 360C                                              u4421 3598  
                                            u5301 05E4                                              u5221 032C  
                                            u5141 0190                                              u6110 7B0A  
                                            u6030 252A                                              u5070 2006  
                                            u3630 6AA8                                              u3710 3E92  
                                            u4270 37D8                                              u4190 3634  
                                            u4350 3B8C                                              u4430 35BC  
                                            u4510 31E4                                              u5310 0664  
                                            u5230 03E6                                              u5150 01AA  
                                            u6031 2524                                              u5071 2000  
                                            u3631 6AA2                                              u3711 3E8C  
                                            u4271 37D2                                              u4191 362E  
                                            u4351 3B86                                              u4431 35B6  
                                            u4511 31DE                                              u5311 065E  
                                            u5231 03DE                                              u5151 01A4  
                                            u6040 7894                                              u6200 3910  
                                            u6120 7B3C                                              u5080 201E  
                                            u3720 3ED8                                              u4360 3BA0  
                                            u4440 35D0                                              u3640 6924  
                                            u4600 3362                                              u4520 321C  
                                            u5400 0A88                                              u5320 068E  
                                            u5240 03EA                                              u5160 01D8  
                                            u7000 19C4                                              u6041 788E  
                                            u6201 390A                                              u6121 7B36  
                                            u5081 2018                                              u3721 3ED2  
                                            u4361 3B9A                                              u4281 3A28  
                                            u3801 7760                                              u4441 35CA  
                                            u3641 691C                                              u4601 335C  
                                            u4521 3214                                              u5321 0688  
                                            u5161 01D2                                              u7001 19BE  
                                            u6050 78D8                                              u6210 3962  
                                            u6130 7B54                                              u5090 2032  
                                            u3570 72C4                                              u3730 3F2A  
                                            u4370 3BE2                                              u4290 3A4C  
                                            u3810 7786                                              u3650 6928  
                                            u4610 3376                                              u4530 3220  
                                            u4450 30B6                                              u5410 0AD0  
                                            u5330 0716                                              u5250 0404  
                                            u5170 0220                                              u7010 19EE  
                                            u6051 78D2                                              u6211 395C  
                                            u6131 7B4E                                              u6115 7AFE  
                                            u5091 202C                                              u3571 72BE  
                                            u3627 6A8C                                              u3731 3F24  
                                            u4371 3BDC                                              u4347 3B44  
                                            u4291 3A46                                              u3811 7780  
                                            u4611 3370                                              u4451 30B0  
                                            u5411 0ACA                                              u5331 0710  
                                            u5251 03FE                                              u5171 021A  
                                            u7011 19E8                                              u6060 78FC  
                                            u6220 3988                                              u3660 69E0  
                                            u6140 7B84                                              u6300 2A30  
                                            u4620 3C32                                              u3580 72DA  
                                            u3900 7442                                              u3740 7D3A  
                                            u4700 76BE                                              u3820 77B8  
                                            u4380 33E6                                              u4540 323A  
                                            u4460 30D8                                              u5500 0EA0  
                                            u5420 0B38                                              u5340 0750  
                                            u5260 042E                                              u5180 02A8  
                                            u7020 1A12                                              u6061 78F6  
                                            u6221 3982                                              u3661 69DA  
                                            u6141 7B7E                                              u4621 3C2C  
                                            u3581 72D4                                              u3901 743C  
                                            u3741 7D34                                              u4701 76B8  
                                            u3821 77B2                                              u4381 33E0  
                                            u4541 3234                                              u4461 30D2  
                                            u5501 0E9A                                              u5341 074A  
                                            u5261 0428                                              u5181 02A0  
                                            u7021 1A0C                                              u6070 7922  
                                            u6230 399C                                              u6150 7BAC  
                                            u6310 2A50                                              u4630 3C6E  
                                            u3590 7308                                              u3670 3DD4  
                                            u3750 7D72                                              u4710 76E0  
                                            u3830 77FE                                              u4390 3408  
                                            u3910 68E2                                              u4550 32A8  
                                            u4470 310A                                              u5510 0F1C  
                                            u5430 0B66                                              u5350 07DC  
                                            u5270 04B8                                              u5190 02AC  
                                            u7030 1A28                                              u6071 791C  
                                            u6231 3996                                              u6151 7BA6  
                                            u6311 2A4A                                              u4631 3C68  
                                            u3591 7302                                              u3671 3DCE  
                                            u3751 7D6C                                              u4711 76DA  
                                            u3831 77F8                                              u4391 3402  
                                            u3911 68DA                                              u4471 3104  
                                            u5511 0F16                                              u5431 0B60  
                                            u5407 0A7C                                              u5351 07D6  
                                            u5271 04B2                                              u7031 1A22  
                                            u6080 7978                                              u6240 39AE  
                                            u6160 7BC0                                              u4800 1BE4  
                                            u6320 2A98                                              u6400 7184  
                                            u4640 3C90                                              u3680 3E0C  
                                            u3760 7DB6                                              u4720 76F6  
                                            u3840 7498                                              u3920 68E6  
                                            u4560 32F0                                              u4480 3174  
                                            u5600 1338                                              u5520 0FA6  
                                            u5440 0BCC                                              u5360 0898  
                                            u5280 04F2                                              u7040 1A52  
                                            u6081 7972                                              u6241 39A8  
                                            u6161 7BBA                                              u4801 1BDE  
                                            u6321 2A92                                              u6305 2A24  
                                            u6401 717E                                              u4641 3C8A  
                                            u3681 3E06                                              u3761 7DB0  
                                            u4721 76F0                                              u3841 7492  
                                            u4561 32EA                                              u4481 316E  
                                            u5601 1332                                              u5521 0FA0  
                                            u5361 0892                                              u5281 04EC  
                                            u7041 1A4C                                              u6250 39EE  
                                            u6170 383A                                              u6090 6802  
                                            u4810 1C2A                                              u6330 2BA4  
                                            u6410 71BA                                              u4650 3D5C  
                                            u3770 7DE8                                              u4730 7728  
                                            u3850 74CA                                              u3930 696A  
                                            u4570 3312                                              u4490 31C6  
                                            u5610 13DC                                              u5530 1032  
                                            u5450 0C0A                                              u5370 0914  
                                            u5290 05B0                                              u7050 1A88  
                                            u6251 39E8                                              u6171 3834  
                                            u6091 67FC                                              u4811 1C24  
                                            u6331 2B9E                                              u6411 71B4  
                                            u4651 3D54                                              u3691 3E3A  
                                            u3771 7DE2                                              u4731 7722  
                                            u3851 74C4                                              u3931 6962  
                                            u4571 330C                                              u4555 3294  
                                            u4491 31BE                                              u5611 13D6  
                                            u5531 102C                                              u5451 0C04  
                                            u5427 0B28                                              u5371 090E  
                                            u5291 05AA                                              u7051 1A82  
                                            u6420 7576                                              u6260 3A00  
                                            u6180 384C                                              u4900 1D74  
                                            u4820 1C3C                                              u4740 1B24  
                                            u6340 2C48                                              u5700 2726  
                                            u5620 2570                                              u4660 3D60  
                                            u3780 7E1C                                              u3860 74FE  
                                            u3940 696E                                              u4580 3330  
                                            u5540 106C                                              u5460 0C72  
                                            u5380 099E                                              u6500 7CA0  
                                            u7060 1AB0                                              u6421 7570  
                                            u6261 39FA                                              u6181 3846  
                                            u4901 1D6E                                              u4821 1C36  
                                            u4741 1B1E                                              u6341 2C42  
                                            u5701 2720                                              u5621 256A  
                                            u3781 7E16                                              u3861 74F8  
                                            u4581 332A                                              u5541 1066  
                                            u5381 0998                                              u6501 7C9A  
                                            u7061 1AAA                                              u6430 7596  
                                            u6190 38B0                                              u4910 1DAC  
                                            u4830 1CB2                                              u4750 1B3C  
                                            u6350 2D10                                              u5710 274C  
                                            u5630 2588                                              u4670 3D7A  
                                            u3870 73A4                                              u3790 7E6C  
                                            u3950 6C1A                                              u4590 334E  
                                            u5550 1154                                              u5470 0CA0  
                                            u5390 0A2A                                              u6270 6CB8  
                                            u6510 7CB4                                              u7070 1AC4  
                                            u6431 7590                                              u6191 38AA  
                                            u4911 1DA6                                              u4831 1CAC  
                                            u4751 1B36                                              u5711 2746  
                                            u5631 2582                                              u7207 6DFA  
                                            u4671 3D74                                              u3871 739E  
                                            u3791 7E66                                              u3951 6C12  
                                            u4591 3348                                              u5551 114E  
                                            u5471 0C9A                                              u5447 0BBC  
                                            u5391 0A24                                              u6271 6CB2  
                                            u6511 7CAE                                              u7071 1ABE  
                                            u6440 75C2                                              u4920 1DBE  
                                            u4840 1CCE                                              u4760 1B50  
                                            u6360 2D30                                              u6280 29C8  
                                            u5800 2890                                              u5720 277E  
                                            u5640 259C                                              u4680 3D90  
                                            u3880 73CC                                              u3960 6C1E  
                                            u5560 118E                                              u5480 0D52  
                                            u6520 7CE6                                              u6600 7A00  
                                            u7080 1AF8                                              u6441 75BC  
                                            u4921 1DB8                                              u4841 1CC6  
                                            u4761 1B4A                                              u6361 2D2A  
                                            u5801 288A                                              u5721 2778  
                                            u5641 2596                                              u7217 66A8  
                                            u4681 3D8A                                              u3881 73C6  
                                            u5561 1188                                              u5481 0D4C  
                                            u6521 7CE0                                              u6601 79FA  
                                            u7081 1AF2                                              u7137 1768  
                                            u6450 75E8                                              u4930 1DE4  
                                            u4850 1CD2                                              u4770 1B9C  
                                            u6290 29F6                                              u5810 28AE  
                                            u5730 27AA                                              u5650 25EA  
                                            u6530 65DC                                              u3890 742E  
                                            u4690 767E                                              u3970 6C38  
                                            u5570 1232                                              u5490 0DE4  
                                            u6610 7A2C                                              u6370 6CDC  
                                            u6451 75E2                                              u4931 1DDE  
                                            u4771 1B96                                              u6355 2D04  
                                            u6291 29F0                                              u5811 28A8  
                                            u5731 27A4                                              u5651 25E4  
                                            u7227 66B4                                              u6531 65D6  
                                            u3891 7428                                              u4691 7678  
                                            u3971 6C32                                              u5571 122C  
                                            u5491 0DDE                                              u5467 0C62  
                                            u6611 7A26                                              u6371 6CD6  
                                            u7147 18B8                                              u6460 760A  
                                            u5900 216E                                              u4940 1E24  
                                            u4860 1D00                                              u4780 1BB8  
                                            u5820 28FC                                              u5740 27C4  
                                            u5660 2602                                              u6380 6FE2  
                                            u6540 6F28                                              u6700 6D66  
                                            u3980 68A0                                              u5580 125C  
                                            u6620 7A58                                              u6461 7604  
                                            u5901 2168                                              u4941 1E1E  
                                            u4861 1CFA                                              u4781 1BB2  
                                            u6285 29BC                                              u5821 28F6  
                                            u5741 27BE                                              u5661 25FC  
                                            u6381 6FDC                                              u6541 6F22  
                                            u6701 6D60                                              u3981 6898  
                                            u5581 1256                                              u6621 7A52  
                                            u7157 19A0                                              u6470 7638  
                                            u5910 21AE                                              u4950 1E6E  
                                            u4870 1D26                                              u4790 1BD0  
                                            u5830 2932                                              u5750 27E8  
                                            u5670 2616                                              u6390 7000  
                                            u6550 6E68                                              u3990 68A4  
                                            u5590 12FE                                              u6630 7A84  
                                            u6471 7632                                              u5911 21A8  
                                            u4951 1E68                                              u4871 1D20  
                                            u4791 1BCA                                              u5831 292C  
                                            u5751 27E2                                              u5671 2610  
                                            u6391 6FFA                                              u7167 66D2  
                                            u5591 12F8                                              u6631 7A7E  
                                            u5920 21C2                                              u4960 1EAC  
                                            u4880 1D4E                                              u5840 2966  
                                            u5760 2810                                              u5680 2660  
                                            u6560 6E9E                                              u6480 7C00  
                                            u6640 3F92                                              u6800 169A  
                                            u6720 1518                                              u5921 21BC  
                                            u4961 1EA6                                              u4881 1D48  
                                            u5841 2960                                              u5761 280A  
                                            u5681 265A                                              u7177 66DE  
                                            u6481 7BFA                                              u6641 3F8C  
                                            u6801 1694                                              u6721 1512  
                                            u5930 2342                                              u5850 20CC  
                                            u4970 1EC0                                              u4890 1D60  
                                            u5770 2826                                              u5690 26A8  
                                            u6570 6EB0                                              u6490 7C36  
                                            u6650 3FBA                                              u6810 16C4  
                                            u6730 152C                                              u5851 20C6  
                                            u4971 1EBA                                              u4891 1D5A  
                                            u5771 2820                                              u5691 26A2  
                                            u7187 6DC8                                              u6571 6EAA  
                                            u6491 7C30                                              u6651 3FB4  
                                            u6811 16BE                                              u6731 1526  
                                            u5940 23A2                                              u5860 20E4  
                                            u4980 1EF2                                              u5780 2858  
                                            u6580 79A8                                              u6660 3FE4  
                                            u6900 181A                                              u6820 16D8  
                                            u6740 15D6                                              u5941 239C  
                                            u5861 20DE                                              u4981 1EEC  
                                            u5781 2852                                              u7197 6DE2  
                                            u6557 6E5E                                              u6581 79A2  
                                            u6661 3FDE                                              u6901 1814  
                                            u6821 16D2                                              u6741 15D0  
                                            u6670 7256                                              u5950 23CA  
                                            u5870 20F8                                              u4990 1F08  
                                            u5790 2876                                              u6590 79D4  
                                            u6910 1840                                              u6830 1700  
                                            u6750 15EE                                              u6671 7250  
                                            u5951 23C4                                              u5935 2336  
                                            u5871 20F2                                              u4991 1F02  
                                            u5791 2870                                              u6567 6E94  
                                            u6591 79CE                                              u6911 1838  
                                            u6831 16FA                                              u6751 15E8  
                                            u6680 728C                                              u5960 23E0  
                                            u5880 2142                                              u6920 1844  
                                            u6840 172A                                              u6760 160E  
                                            u6681 7286                                              u5961 23DA  
                                            u5881 213C                                              u6841 1724  
                                            u6761 1608                                              u5970 2412  
                                            u5890 215A                                              u6690 6692  
                                            u6930 1860                                              u6850 175E  
                                            u6770 162E                                              u5971 240C  
                                            u5891 2154                                              u6691 668C  
                                            u6931 1858                                              u6851 1758  
                                            u6771 1628                                              u5980 2430  
                                            u6940 1864                                              u6860 178C  
                                            u6780 164E                                              u5981 242A  
                                            u6861 1786                                              u6781 1648  
                                            u5990 244A                                              u6950 1882  
                                            u6870 17B6                                              u6790 1678  
                                            u5991 2444                                              u6951 187C  
                                            u6871 17B0                                              u6791 1672  
                                            u6960 18AE                                              u6880 17DA  
                                            u6961 18A8                                              u6881 17D4  
                                            u6970 18EE                                              u6890 17F0  
                                            u6971 18E8                                              u6891 17EA  
                                            u6980 1924                                              u6981 191E  
                                            u6990 1996                                              u6991 1990  
                                            _TMR2 000FCC                                              abs@a 0013  
                                            _dbuf 0098                                              _atoi 3BF0  
                                            _ctoa 6B1A                                              _main 1462  
                                            _dtoa 2D6E                                              _fosc 7EC5  
                                            _prec 0088                                              _otoa 35FE  
                                            _nout 0084                                              pad@i 0018  
                                            pad@p 0015                                              fsr1h 000FE2  
                                            fsr2h 000FDA                                              indf1 000FE7  
                                            indf2 000FDF                                              fsr1l 000FE1  
                                            pad@w 001A                                              fsr2l 000FD9  
                                            _tosc 00E9                                              _stoa 3A1C  
                                            btemp 007F                                              _utoa 33D2  
                                            _xtoa 30A2                       update_pwm_duty_ccp1@time_up 00D4  
                                     main@rx_char 01A2                                              prodh 000FF4  
                                   _trash_counter 01A5                                              prodl 000FF3  
                                            start 0076                                   ___fldiv@new_exp 0057  
state_translator_fpga_to_micro@state_machine_code 0005                                      ___param_bank 000000  
                                           ??_abs 0015                              _update_pwm_duty_ccp1 6F66  
                                           ??_pad 0017                                     ___fltol@sign1 00D2  
                                 __end_of___aodiv 3F72                                             ?_atoi 0008  
                                           ?_ctoa 001C                                   __end_of___fladd 20AE  
                                           ?_main 0001                                             ?_dtoa 001C  
                                 __end_of___aomod 7EB4                                   __end_of___fldiv 2984  
                                 __end_of___awdiv 7650                                   __end_of___flneg 682A  
                                           STR_10 7FFC                                             STR_11 7FCF  
                                           STR_13 7FCF                                             STR_22 7FD0  
                                           STR_31 7FEA                                             STR_15 7FD3  
                                           STR_40 7FDB                                             STR_17 7FD3  
                                           STR_33 7FED                                             STR_26 7FD4  
                                           STR_50 7FF3                                             STR_35 7FED  
                                           STR_60 7FD8                                             STR_45 7FDC  
                                           STR_29 7FEA                                             STR_53 7FD7  
                                           STR_70 7FDF                                             STR_38 7FDB  
                                           STR_55 7FD7                                             STR_63 7FF0  
                                           STR_80 7FF6                                             STR_48 7FF3  
                                           STR_65 7FF0                                             STR_75 7FE0  
                                           STR_83 7FE3                                             STR_68 7FDF  
                                           STR_85 7FE3                                             STR_94 7FE4  
                                           STR_78 7FF6                                             STR_87 7FCB  
                                 __end_of___flmul 2552                                             STR_89 7FCB  
                                           STR_98 7FCC                                             ?_otoa 001C  
                                 __end_of___flsub 69C2                                   __end_of___fltol 7BEA  
                                           ?_stoa 000A                                             ?_utoa 001C  
                                           _T0CON 000FD5                                   __end_of___lodiv 7862  
                                 ___awdiv@divisor 0019                                             ?_xtoa 001C  
                                           _T2CON 000FCA                                   __end_of___lomod 7560  
                                           i2l180 006E                       __end_of_update_current_coil 71D2  
                                 ___awdiv@counter 001B                                             _RCREG 000FAE  
                                    vfpfcnvrt@fmt 0045                                             _TMR0H 000FD7  
                                    vfpfcnvrt@llu 0060                                             _TMR0L 000FD6  
                                           _SPBRG 000FAF                                             _PORTA 000F80  
                                           _PORTB 000F81                                             _PORTC 000F82  
                                           _PORTD 000F83                                             _TRISA 000F92  
                                           _TRISB 000F93                                             _TXREG 000FAD  
                                ?_get_temperature 00D4                                   __end_of_lcd_dat 66EC  
                                 __end_of_lcd_cmd 66C2                                   __end_of_lcd_str 6EB6  
                                           _f_osc 7EC1                                             _flags 008A  
                                           _errno 008C                                             _fputc 72AE  
                                 __end_of_isalpha 6978                                             _fputs 6A0E  
                                 __end_of_isdigit 68AE                                             _t_osc 7EBD  
                                           atoi@n 0015                                             pad@fp 0011  
                                           atoi@s 0008                                             _width 0086  
                                           ctoa@c 001E                                             _state 01CD  
                                           _putch 6580                                             _toint 7EB5  
                                           ctoa@w 001F                                             dtoa@d 001E  
                                           dtoa@i 003E                                             dtoa@n 0036  
                                           dtoa@p 0030                                             dtoa@s 0034  
                                           dtoa@w 0032                                   __end_of_islower 6932  
                                 __end_of_isspace 6B1A                                   __end_of_isupper 68F0  
                                           tablat 000FF5                                             otoa@d 001E  
                                           otoa@i 003C                                             otoa@n 0034  
                                           otoa@p 002E                                             otoa@t 0030  
                                           otoa@w 0032                                             plusw1 000FE3  
                                           plusw2 000FDB                                             stoa@i 0016  
                                           stoa@l 001E                                             stoa@p 001C  
                                           stoa@s 000C                                             stoa@w 0018  
                                           ttemp5 0080                                             ttemp6 0083  
                                           ttemp7 0087                                             utoa@d 001E  
                                           utoa@i 003A                                             utoa@n 0032  
                                           utoa@p 002E                                             utoa@w 0030  
                                           status 000FD8                                             wtemp8 0080  
                                           xtoa@c 0041                                             xtoa@d 001E  
                                           xtoa@i 003F                                             xtoa@n 0037  
                                           xtoa@p 0033                                             xtoa@w 0035  
                                           xtoa@x 0026                                   __end_of_strncmp 7758  
                                 __end_of_toupper 6C56                                  ___lodiv@dividend 0001  
                              _end_effector_homed 01A7                                   ??_get_reg_value 0001  
                                    _toupper$1894 000D                              get_reg_value@rx_char 0001  
                                 __initialization 6B80                                      __end_of_atoi 3DBE  
                                    __end_of_ctoa 6B80                                      __end_of_main 1B06  
                                    __end_of_dtoa 30A2                                      __end_of_fosc 7EC9  
                                    __end_of_otoa 3824                                      __end_of_stoa 3BF0  
                                    __end_of_utoa 35FE                             ?_update_pwm_duty_ccp1 00D4  
                                    __end_of_xtoa 33D2                                            ??_atoi 000A  
                                          ??_ctoa 001F                                            ??_main 00DD  
                                          ??_dtoa 0026                                            ??_otoa 0026  
                                          ??_stoa 000E                                            ??_utoa 0026  
                                          ??_xtoa 0027                                     __activetblptr 000002  
                                 ??_rx_char_usart 0001                                  ___lodiv@quotient 0011  
                                          _ADCON0 000FC2                                            _ADCON1 000FC1  
                                _change_direction 6776                                            ?_fputc 0001  
                                          STR_101 7FF9                                            ?_fputs 000A  
                                          STR_103 7FF9                                            STR_105 7FE7  
                                          _ADRESH 000FC4                                            STR_107 7FE7  
                                          _ADRESL 000FC3                      __end_of_turn_on_current_coil 67E8  
                                          _CCPR1L 000FBE                                  ___awdiv@dividend 0017  
                                          ?_putch 0001                                            i2l5650 0030  
                                          i2l5660 0066                                            i2l5652 0032  
                                          i2l5654 003C                                            i2l5646 000C  
                                          i2l5656 0050                                            i2l5648 001E  
                                          i2l5658 0062                                     main@greet_str 0100  
                                   vfpfcnvrt@done 004F                                  __end_of___xxtofl 3A1C  
                                   ?_init_timer_0 0001                                     ?_init_timer_2 0001  
          __end_of_state_translator_fpga_to_micro 7AB2           __size_of_state_translator_fpga_to_micro 0128  
                  _state_translator_fpga_to_micro 798A                                     ?_init_stepper 0001  
                                    vfprintf@cfmt 006E                                  __end_of_lcd_init 6E2E  
                                          ___flge 7862                                 _init_timer_2$2131 00D4  
                                       ??___aodiv 0011                                         ??___fladd 0067  
                                       ??___aomod 0011                                            ___wmul 66EC  
                                       ??___fldiv 004E                                         ??___awdiv 001B  
                                       ??___flneg 0005                                         ??___flmul 0035  
                                       ??___flsub 0077                                         ??___fltol 00CE  
                                       ??___lodiv 0011                                         ??___lomod 0011  
                                          _lcd_wr 6592                                            clear_0 6BC6  
                                          clear_1 6BD2                                  ___awdiv@quotient 001D  
                                          pad@buf 0013                                            ctoa@fp 001C  
                                          _roundf 2984                                         ??_lcd_dat 0002  
                                       ??_lcd_cmd 0002                                            dtoa@fp 001C  
                                          _strlen 6A5E                                         ??_lcd_str 0005  
                                          fputc@c 0001                                            fputs@c 000E  
                                          fputs@i 000F                                            fputs@s 000A  
                                       ??_isalpha 0003                                         ??_isdigit 0003  
                                       ??_islower 0003                                      __mediumconst 7EB4  
                                       ??_isspace 0003                                            otoa@fp 001C  
                                          tblptrh 000FF7                                         ??_isupper 0003  
                                          tblptrl 000FF6                                            tblptru 000FF8  
                         reach_goal@goal_to_reach 0009                                            stoa@cp 001A  
                                          stoa@fp 000A                                            putch@c 0001  
                                __end_of_vfprintf 6CC6                                            utoa@fp 001C  
                                __end_of_snprintf 6776                                            xtoa@fp 001C  
                                       ??_strncmp 0007                                         ??_toupper 0009  
                                      ___flge@ff1 0001                                        ___flge@ff2 0005  
                update_current_coil@stepper_motor 0001                                      ___xxtofl@arg 0029  
                                    ___xxtofl@exp 0028                                      ___xxtofl@val 001F  
                                      __accesstop 0080                           __end_of__initialization 6BD8  
                                      ___flneg@f1 0001                                 serial_tx_char@val 0001  
                                  ??_init_timer_0 0001                                    ??_init_timer_2 007F  
                                   ___rparam_used 000001                                        ___fltol@f1 00CA  
                                  ??_init_stepper 000B                                    _tmr2_prescaler 00ED  
                                 _init_interrupts 6586                            ??_update_pwm_duty_ccp1 00D8  
                                  __pcstackCOMRAM 0001                                      __pidataBANK0 65AF  
                                    __pidataBANK1 65E2                                     __end_of_f_osc 7EC5  
                                   __end_of_fputc 7390                                     __end_of_fputs 6A5E  
                                   __end_of_t_osc 7EC1                                     __end_of_putch 6586  
                                   __end_of_toint 7EB9                                   _temperature_int 0090  
                         __size_of_serial_tx_char 0020               state_translator_fpga_to_micro@state 0003  
                                         ??_fputc 0005                                           ??_fputs 000E  
                                         ??_putch 0001                                  _mix_current_step 0096  
                                      __pbssBANK0 0080                                        __pbssBANK1 01A3  
                              __size_of_init_ccp1 0024                                           ?___flge 0001  
                                         ?___wmul 0001               check_temperature@temp_to_be_checked 00D6  
                                         ?_lcd_wr 0001                                           _CCP1CON 000FBD  
                            _turn_on_current_coil 67AC                             __end_of_wait_for_zero 6698  
                         _hex_end_effector_values 01DF                                     _read_new_char 01AE  
                                         ?_roundf 0077                                           ?_strlen 0001  
                              _temperature_scaled 008E                                         ?___xxtofl 001F  
                         reach_goal@stepper_motor 0007                                __size_of_vfpfcnvrt 13E8  
               turn_on_current_coil@stepper_motor 0001                                  _desired_baudrate 7EB9  
                                       ?_lcd_init 0001                                  ___lomod@dividend 0001  
                         __end_of_init_interrupts 6592                                 _check_temperature 71D2  
                   change_direction@stepper_motor 0001                                           __Hparam 0000  
                              ?_check_temperature 00D6                                           __Lparam 0000  
                              __size_of_vsnprintf 013A                                        _init_PORTS 6716  
                                      _init_USART 682A                                   __size_of___flge 0128  
                                         ___aodiv 3DBE                                           ___fladd 1B06  
                                         ___aomod 7D24                                           ___fldiv 2552  
                                         ___awdiv 7560                                           ___flneg 67E8  
                                         ___flmul 20AE                          __end_of_change_direction 67AC  
                                         ___flsub 6978                                           ___fltol 7AB2  
                                 __size_of___wmul 002A                                           ___lodiv 7758  
                           ?_turn_on_current_coil 0001                                           ___lomod 7476  
                                       ?_vfprintf 0068                                         ?_snprintf 00C2  
                                 __size_of_lcd_wr 000C                               ??_check_temperature 007F  
                                         __pcinit 6B80              init_stepper@hex_coil_register_values 0009  
                                         __ramtop 0600                                        _reach_goal 6D38  
                                         __ptext0 1462                                           __ptext1 6670  
                                         __ptext2 6CC6                                           __ptext3 3F72  
                                         __ptext4 798A                                           __ptext5 6742  
                                         __ptext6 7BEA                                           __ptext7 6C56  
                                         __ptext8 007A                                           __ptext9 30A2  
                                         _lcd_dat 66C2                                           _lcd_cmd 6698  
                                         _lcd_str 6E2E                                         _T0CONbits 000FD5  
                                 __size_of_roundf 03EA                                   __size_of_strlen 005C  
                               __end_of_init_ccp1 6648                                         _T2CONbits 000FCA  
                                    __size_of_abs 004C                                      __size_of_pad 00E6  
                                         _isalpha 6932                                           _isdigit 686C  
                                      ??___xxtofl 0023                              __end_of_init_timer_0 6624  
                            __end_of_init_timer_2 70F8                                           _islower 68F0  
                                         _isspace 6ABA                                           _isupper 68AE  
                            __end_of_init_stepper 6F66                                           atoi@neg 000E  
                                   _joint_stepper 01BF                                        ??_lcd_init 0003  
                                         _strncmp 7650                                           _toupper 6BE6  
                    __size_of_update_current_coil 00DA                              end_of_initialization 6BD8  
                       __end_of_check_temperature 72AE                          __size_of_get_temperature 0072  
                                         fputc@fp 0003                                     __Lmediumconst 7EB4  
                                         fputs@fp 000C               state_translator_micro_to_fpga@state 0001  
                               __end_of_vfpfcnvrt 1462                             __end_of_get_reg_value 65AE  
                                       _RCSTAbits 000FAB                                           postdec1 000FE5  
                                         postdec2 000FDD                                           postinc0 000FEE  
                                         postinc1 000FE6                                           postinc2 000FDE  
                                         roundf@e 00BC                                           roundf@u 00C2  
                                         roundf@x 0077                                           roundf@y 00C6  
                                      ??_vfprintf 006E                                        ??_snprintf 007C  
                                         strlen@a 0003                                           strlen@s 0001  
                                      _timer_done 01AD                                         _PORTEbits 000F84  
                ??_state_translator_fpga_to_micro 0005                   ?_state_translator_fpga_to_micro 0003  
                                     ___fladd@grs 006E                                    _serial_tx_char 65C2  
                                   ___xxtofl@sign 0027                             __end_of_rx_char_usart 0076  
                                       _TRISCbits 000F94                                        lcd_dat@val 0002  
                               __end_of_vsnprintf 7D24                                        lcd_cmd@val 0002  
                                     ___fldiv@grs 0059                                       ___fldiv@rem 0052  
                                      _pwm_period 00E5                                        _state_msgs 01CF  
                                   _mix_direction 0094                              _end_effector_stepper 01B1  
                                     ___flmul@grs 003A                                  ?_init_interrupts 0001  
                                     _CCP1CONbits 000FBD                                         _TXSTAbits 000FAC  
                                main@current_temp 01A0                                        lcd_str@str 0003  
     __end_of_configure_analog_digital_conversion 6670      __size_of_configure_analog_digital_conversion 0028  
           ??_configure_analog_digital_conversion 0001              ?_configure_analog_digital_conversion 0001  
             _configure_analog_digital_conversion 6648                                       ?_init_PORTS 0001  
                                     ?_init_USART 0001                            ??_turn_on_current_coil 0003  
                                  __end_of___flge 798A            __end_of_state_translator_micro_to_fpga 3FFC  
         __size_of_state_translator_micro_to_fpga 008A                    _state_translator_micro_to_fpga 3F72  
                                     vfpfcnvrt@ap 0047                                       vfpfcnvrt@cp 004D  
                                     vfpfcnvrt@fp 0043                                       vfpfcnvrt@ll 0055  
                                  __end_of___wmul 6716                                       vfpfcnvrt@vp 005D  
                                  __end_of_lcd_wr 659E                                       ?_reach_goal 0007  
state_translator_micro_to_fpga@state_machine_code 0005                            __end_of_serial_tx_char 65E2  
                                  __end_of_roundf 2D6E                                    __end_of_strlen 6ABA  
                             start_initialization 6B80                                   ___lodiv@divisor 0009  
                                 ___lodiv@counter 0019                                       __end_of_abs 6A0E  
                                     __end_of_pad 7476                                  _hex_joint_values 01E7  
                      __size_of_check_temperature 00DC                          init_stepper@current_coil 0003  
                       init_stepper@stepper_motor 0001                                 ??_get_temperature 007F  
                                     vfprintf@fmt 006A                                          ??___flge 0009  
                        __end_of_desired_baudrate 7EBD                                          ??___wmul 0005  
                   __size_of_update_pwm_duty_ccp1 00C4                                          ??_lcd_wr 0001  
                                     __pdataBANK0 00DE                                       __pdataBANK1 01CF  
                           check_temperature@grad 00D8                             __size_of_init_timer_0 0022  
                           __size_of_init_timer_2 00CE                             __size_of_init_stepper 00B0  
                                        ??_roundf 007B                                          ??_strlen 0003  
                                 ?_serial_tx_char 0001                                         ___fladd@a 0063  
                                       ___fladd@b 005F                                      vsnprintf@cnt 00BA  
                                    vsnprintf@fmt 0074                                         ___fldiv@a 004A  
                                       ___fldiv@b 0046                                         ___flmul@a 0031  
                                       ___flmul@b 002D                                         ___flsub@a 0073  
                                       ___flsub@b 006F                                     __pcstackBANK0 00B8  
                                   __pcstackBANK1 0100                                  ___aodiv@dividend 0001  
                                     snprintf@fmt 00C6                                 __size_of___xxtofl 01F8  
                             __size_of_init_PORTS 002C                               __size_of_init_USART 0042  
                               __size_of_lcd_init 007E                               __size_of_reach_goal 0078  
                                       _atoi$1806 0010                                         _atoi$1807 0014  
                                       _atoi$1808 0012                                      _init_timer_0 6602  
                                    _init_timer_2 702A                                         _dtoa$1632 002E  
                                    _init_stepper 6EB6                             init_stepper@direction 0007  
                                       __pintcode 0008                                     __pmediumconst 7EB4  
                                        ?___aodiv 0001                                          ?___fladd 005F  
                                        ?___aomod 0001                                          ?___fldiv 0046  
                                        ?___awdiv 0017                                  ___aodiv@quotient 0013  
                                        ?___flneg 0001                                          ?___flmul 002D  
                                        ?___flsub 006F                                          ?___fltol 00CA  
                                        ?___lodiv 0001                                          ?___lomod 0001  
                             _update_current_coil 70F8                                 ?_change_direction 0001  
                              ??_change_direction 0003                                          ?_lcd_dat 0001  
                                        ?_lcd_cmd 0001                                 __size_of_vfprintf 0070  
                                        ?_lcd_str 0003                                 __size_of_snprintf 0034  
                                 ___lomod@divisor 0009                      update_pwm_duty_ccp1@new_duty 00DA  
                                 ___lomod@counter 0011                                          ?_isalpha 0001  
                                        ?_isdigit 0001                                  _mix_step_counter 0092  
                                        ?_islower 0001                                          ?_isspace 0001  
                                        ?_isupper 0001                                         _init_ccp1 6624  
                                  __size_of_fputc 00E2                                    __size_of_fputs 0050  
                            ?_update_current_coil 0001                                          ?_strncmp 0001  
                                        ?_toupper 0007                                    __size_of_putch 0006  
                          __size_of_wait_for_zero 0028                                    ___wmul@product 0005  
                                        _LATAbits 000F89                                          _PIE1bits 000F9D  
                                   _move_to_trash 01A3                                          _PIR1bits 000F9E  
                                        i2u710_40 002E                                          i2u710_41 0028  
                                        i2u711_40 004E                                          i2u711_41 0048  
                                        i2u712_40 0060                                          i2u712_41 005A  
                                        i2u709_40 001C                                          i2u709_41 0016  
                                       _vfpfcnvrt 007A                                         _xtoa$1668 002F  
                                       _xtoa$1669 0031                                        _ADCON0bits 000FC2  
                               ___wmul@multiplier 0001                                         lcd_wr@val 0001  
                                    _isspace$1834 0007                                        ?_init_ccp1 0001  
                           ??_update_current_coil 0003                                        vfpfcnvrt@c 005F  
                                       copy_data0 6B94                                         copy_data1 6BB4  
                                       _vsnprintf 7BEA                                        roundf@F525 0080  
                                        __Hrparam 0000                                      ??_init_PORTS 0001  
                                    ??_init_USART 007F                                        vfprintf@ap 006C  
                                        __Lrparam 0000                                        vfprintf@fp 0068  
                                __size_of___aodiv 01B4                                  __size_of___fladd 05A8  
                                __size_of___aomod 0190                                  __size_of___fldiv 0432  
                                __size_of___awdiv 00F0                                  __size_of___flneg 0042  
                                     vsnprintf@ap 0076                                  __size_of___flmul 04A4  
                                __size_of___flsub 004A                                  __size_of___fltol 0138  
                                __size_of___lodiv 010A                                  __size_of___lomod 00EA  
                                      ?_vfpfcnvrt 0043                                     _wait_for_zero 6670  
                                    ??_reach_goal 000B                                        snprintf@ap 00CC  
                                 ___aodiv@divisor 0009                                   ___aodiv@counter 0011  
                                __size_of_lcd_dat 002A                                  __size_of_lcd_cmd 002A  
                                __size_of_lcd_str 0088                                          ___xxtofl 3824  
                                __size_of_isalpha 0046                                  __size_of_isdigit 0042  
                                __size_of_islower 0042                                  __size_of_isspace 0060  
                                        __ptext10 6BE6                                          __ptext11 68F0  
                                        __ptext20 2D6E                                          __ptext12 68AE  
                                        __ptext21 7D24                                          __ptext13 6932  
                                        __ptext30 6ABA                                          __ptext22 3DBE  
                                        __ptext14 33D2                                          __ptext31 686C  
                                        __ptext23 6B1A                                          __ptext15 7476  
                                        __ptext40 6698                                          __ptext32 66EC  
                                        __ptext24 7390                                          __ptext16 7758  
                                        __ptext41 6592                                          __ptext33 65C2  
                                        __ptext25 6A5E                                          __ptext17 7650  
                                        __ptext50 2984                                          __ptext42 702A  
                                        __ptext34 6D38                                          __ptext26 6A0E  
                                        __ptext18 3A1C                                          __ptext51 6978  
                                        __ptext43 6602                                          __ptext35 70F8  
                                        __ptext27 72AE                                          __ptext19 35FE  
                                        __ptext60 69C2                                          __ptext52 1B06  
                                        __ptext44 6EB6                                          __ptext36 67AC  
                                        __ptext28 6580                                          __ptext61 3824  
                                        __ptext53 67E8                                          __ptext45 6586  
                                        __ptext37 6E2E                                          __ptext29 3BF0  
                                        __ptext62 7862                                          __ptext54 20AE  
                                        __ptext46 6624                                          __ptext38 66C2  
                                        __ptext63 7560                                          __ptext55 7AB2  
                                        __ptext47 6F66                                          __ptext39 6DB0  
                                        __ptext64 6776                                          __ptext56 6716  
                                        __ptext48 2552                                          __ptext57 659E  
                                        __ptext49 682A                                          __ptext58 6648  
                                        __ptext59 71D2                                  __size_of_isupper 0042  
                ??_state_translator_micro_to_fpga 0003                   ?_state_translator_micro_to_fpga 0001  
                          __size_of_get_reg_value 0010                                __end_of_init_PORTS 6742  
                                        _lcd_init 6DB0                                __end_of_init_USART 686C  
                                 _get_temperature 6CC6                                  __size_of_strncmp 0108  
                                __size_of_toupper 0070                                        ?_vsnprintf 0070  
                                   __size_of_atoi 01CE                                     __size_of_ctoa 0066  
                                   __size_of_main 06A4                                     __size_of_dtoa 0334  
                                   __size_of_otoa 0226                                     __size_of_stoa 01D4  
                                   __size_of_utoa 022C                                       _joint_homed 01A9  
                                   __size_of_xtoa 0330                                __end_of_reach_goal 6DB0  
                                       stoa@F1152 00DE                            __size_of_rx_char_usart 006E  
                        __size_of_init_interrupts 000C                                          int$flags 007F  
                                ??_serial_tx_char 0001                                          _vfprintf 6C56  
                   __size_of_turn_on_current_coil 003C                                    ?_wait_for_zero 0001  
                                        _snprintf 6742                                          lcd_str@i 0007  
                                     _mix_counter 01AB                                  ___aomod@dividend 0001  
                                  _vfpfcnvrt$1683 0051                                    _vfpfcnvrt$1684 0053  
                                      _INTCONbits 000FF2                                          isalpha@c 0001  
                                        isdigit@c 0001                                       ??_init_ccp1 007F  
                    __end_of_update_pwm_duty_ccp1 702A                                        vsnprintf@f 00BC  
                                   _idle_msg_sent 01AF                                        vsnprintf@n 0072  
                                      vsnprintf@s 0070                                         snprintf@n 00C4  
                                       snprintf@s 00C2                                          intlevel2 3FFC  
                                        islower@c 0001                                          isspace@c 0001  
                                        isupper@c 0001                                         strncmp@_l 0001  
                                       strncmp@_r 0003                                     _get_reg_value 659E  
                                   init_stepper@i 000F                                   ___aomod@divisor 0009  
                                     ??_vfpfcnvrt 0049                                          stoa@nuls 000F  
                                 ___aomod@counter 0011                                    _vsnprintf$1550 00B8  
                         __end_of_get_temperature 6D38                                          strncmp@l 0008  
                                        strncmp@n 0005                                          strncmp@r 000A  
                                        toupper@c 0007                          init_stepper@step_counter 0005  
                                   _rx_char_usart 0008                         __size_of_change_direction 0036  
                                   ___fladd@signs 006B                     update_pwm_duty_ccp1@lsbs_duty 00DC  
                                    ___aodiv@sign 0012                                       ??_vsnprintf 0078  
                                    ___fladd@aexp 006C                                      ___fladd@bexp 006D  
                                    ___aomod@sign 0012                                       _roundf$2132 00BE  
                                     _roundf$2133 00B8  
