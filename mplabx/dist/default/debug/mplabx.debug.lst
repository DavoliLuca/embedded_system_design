

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Jun 17 00:34:54 2023

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=3
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    82                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    83                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    84                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    85                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    86                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    87  0000                     
    88                           ; Version 2.20
    89                           ; Generated 12/02/2020 GMT
    90                           ; 
    91                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    92                           ; All rights reserved.
    93                           ; 
    94                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    95                           ; 
    96                           ; Redistribution and use in source and binary forms, with or without modification, are
    97                           ; permitted provided that the following conditions are met:
    98                           ; 
    99                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   100                           ;        conditions and the following disclaimer.
   101                           ; 
   102                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   103                           ;        of conditions and the following disclaimer in the documentation and/or other
   104                           ;        materials provided with the distribution.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC18F452 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122  0000                     
   123                           	psect	idataBANK0
   124  006497                     __pidataBANK0:
   125                           	callstack 0
   126                           
   127                           ;initializer for stoa@F1152
   128  006497  28                 	db	40
   129  006498  6E                 	db	110
   130  006499  75                 	db	117
   131  00649A  6C                 	db	108
   132  00649B  6C                 	db	108
   133  00649C  29                 	db	41
   134  00649D  00                 	db	0
   135                           
   136                           ;initializer for _pwm_period
   137                           ;timer.c: 5: static double const f_osc = 1000000;;timer.c: 6: static double const t_osc 
      +                          = 1/f_osc;;timer.c: 7: static double pwm_period = 20e-3;
   138  00649E  D70A               	dw	55050
   139  0064A0  3CA3               	dw	15523
   140                           
   141                           ;initializer for _tosc
   142  0064A2  37BD               	dw	14269
   143  0064A4  3486               	dw	13446
   144                           
   145                           ;initializer for _tmr2_prescaler
   146  0064A6  0000               	dw	0
   147  0064A8  4180               	dw	16768
   148                           
   149                           	psect	idataBANK1
   150  0064CA                     __pidataBANK1:
   151                           	callstack 0
   152                           
   153                           ;initializer for _state_msgs
   154  0064CA  3B                 	db	low STR_1
   155  0064CB  7F                 	db	high STR_1
   156  0064CC  C9                 	db	low STR_2
   157  0064CD  7E                 	db	high STR_2
   158  0064CE  BB                 	db	low STR_3
   159  0064CF  7F                 	db	high STR_3
   160  0064D0  6C                 	db	low STR_4
   161  0064D1  7F                 	db	high STR_4
   162  0064D2  A9                 	db	low STR_5
   163  0064D3  7F                 	db	high STR_5
   164  0064D4  C4                 	db	low STR_6
   165  0064D5  7F                 	db	high STR_6
   166  0064D6  B2                 	db	low STR_7
   167  0064D7  7F                 	db	high STR_7
   168  0064D8  09                 	db	low STR_8
   169  0064D9  7F                 	db	high STR_8
   170                           
   171                           ;initializer for _hex_end_effector_values
   172  0064DA  0010               	dw	16
   173  0064DC  0020               	dw	32
   174  0064DE  0040               	dw	64
   175  0064E0  0080               	dw	128
   176                           
   177                           ;initializer for _hex_joint_values
   178  0064E2  0001               	dw	1
   179  0064E4  0002               	dw	2
   180  0064E6  0004               	dw	4
   181  0064E8  0008               	dw	8
   182                           
   183                           	psect	mediumconst
   184  007EB4                     __pmediumconst:
   185                           	callstack 0
   186  007EB4  00                 	db	0
   187  007EB5  0000               	dw	0
   188  007EB7  4B00               	dw	19200
   189  007EB9                     __end_of_toint:
   190                           	callstack 0
   191  007EB9  0000               	dw	0
   192  007EBB  4616               	dw	17942
   193  007EBD                     __end_of_desired_baudrate:
   194                           	callstack 0
   195  007EBD  37BD               	dw	14269
   196  007EBF  3586               	dw	13702
   197  007EC1                     __end_of_t_osc:
   198                           	callstack 0
   199  007EC1  2400               	dw	9216
   200  007EC3  4974               	dw	18804
   201  007EC5                     __end_of_f_osc:
   202                           	callstack 0
   203  007EC5  2400               	dw	9216
   204  007EC7  4A74               	dw	19060
   205  007EC9                     __end_of_fosc:
   206                           	callstack 0
   207  0000                     _ADCON1	set	4033
   208  0000                     _ADRESL	set	4035
   209  0000                     _ADRESH	set	4036
   210  0000                     _ADCON0bits	set	4034
   211  0000                     _ADCON0	set	4034
   212  0000                     _CCPR1L	set	4030
   213  0000                     _CCP1CONbits	set	4029
   214  0000                     _CCP1CON	set	4029
   215  0000                     _PR2	set	4043
   216  0000                     _T2CONbits	set	4042
   217  0000                     _TMR2	set	4044
   218  0000                     _T2CON	set	4042
   219  0000                     _TMR0H	set	4055
   220  0000                     _TMR0L	set	4054
   221  0000                     _PORTEbits	set	3972
   222  0000                     _PORTD	set	3971
   223  0000                     _TRISCbits	set	3988
   224  0000                     _PORTC	set	3970
   225  0000                     _LATC	set	3979
   226  0000                     _TRISB	set	3987
   227  0000                     _PORTB	set	3969
   228  0000                     _LATB	set	3978
   229  0000                     _TRISA	set	3986
   230  0000                     _PORTA	set	3968
   231  0000                     _LATA	set	3977
   232  0000                     _T0CON	set	4053
   233  0000                     _PIR1bits	set	3998
   234  0000                     _PIE1bits	set	3997
   235  0000                     _T0CONbits	set	4053
   236  0000                     _LATAbits	set	3977
   237  0000                     _INTCONbits	set	4082
   238  0000                     _RCREG	set	4014
   239  0000                     _TXREG	set	4013
   240  0000                     _RCSTAbits	set	4011
   241  0000                     _TXSTAbits	set	4012
   242  0000                     _SPBRG	set	4015
   243  007EC9                     STR_2:
   244  007EC9  49                 	db	73	;'I'
   245  007ECA  4E                 	db	78	;'N'
   246  007ECB  49                 	db	73	;'I'
   247  007ECC  54                 	db	84	;'T'
   248  007ECD  5F                 	db	95	;'_'
   249  007ECE  50                 	db	80	;'P'
   250  007ECF  4F                 	db	79	;'O'
   251  007ED0  53                 	db	83	;'S'
   252  007ED1  3A                 	db	58	;':'
   253  007ED2  20                 	db	32
   254  007ED3  74                 	db	116	;'t'
   255  007ED4  68                 	db	104	;'h'
   256  007ED5  65                 	db	101	;'e'
   257  007ED6  20                 	db	32
   258  007ED7  76                 	db	118	;'v'
   259  007ED8  69                 	db	105	;'i'
   260  007ED9  61                 	db	97	;'a'
   261  007EDA  6C                 	db	108	;'l'
   262  007EDB  20                 	db	32
   263  007EDC  69                 	db	105	;'i'
   264  007EDD  73                 	db	115	;'s'
   265  007EDE  20                 	db	32
   266  007EDF  61                 	db	97	;'a'
   267  007EE0  74                 	db	116	;'t'
   268  007EE1  20                 	db	32
   269  007EE2  74                 	db	116	;'t'
   270  007EE3  68                 	db	104	;'h'
   271  007EE4  65                 	db	101	;'e'
   272  007EE5  20                 	db	32
   273  007EE6  69                 	db	105	;'i'
   274  007EE7  6E                 	db	110	;'n'
   275  007EE8  69                 	db	105	;'i'
   276  007EE9  74                 	db	116	;'t'
   277  007EEA  20                 	db	32
   278  007EEB  70                 	db	112	;'p'
   279  007EEC  6F                 	db	111	;'o'
   280  007EED  73                 	db	115	;'s'
   281  007EEE  69                 	db	105	;'i'
   282  007EEF  74                 	db	116	;'t'
   283  007EF0  69                 	db	105	;'i'
   284  007EF1  6F                 	db	111	;'o'
   285  007EF2  6E                 	db	110	;'n'
   286  007EF3  2C                 	db	44
   287  007EF4  20                 	db	32
   288  007EF5  70                 	db	112	;'p'
   289  007EF6  72                 	db	114	;'r'
   290  007EF7  6F                 	db	111	;'o'
   291  007EF8  63                 	db	99	;'c'
   292  007EF9  65                 	db	101	;'e'
   293  007EFA  73                 	db	115	;'s'
   294  007EFB  73                 	db	115	;'s'
   295  007EFC  20                 	db	32
   296  007EFD  69                 	db	105	;'i'
   297  007EFE  73                 	db	115	;'s'
   298  007EFF  20                 	db	32
   299  007F00  73                 	db	115	;'s'
   300  007F01  74                 	db	116	;'t'
   301  007F02  61                 	db	97	;'a'
   302  007F03  72                 	db	114	;'r'
   303  007F04  74                 	db	116	;'t'
   304  007F05  69                 	db	105	;'i'
   305  007F06  6E                 	db	110	;'n'
   306  007F07  67                 	db	103	;'g'
   307  007F08  00                 	db	0
   308  007F09                     STR_8:
   309  007F09  50                 	db	80	;'P'
   310  007F0A  49                 	db	73	;'I'
   311  007F0B  43                 	db	67	;'C'
   312  007F0C  4B                 	db	75	;'K'
   313  007F0D  5F                 	db	95	;'_'
   314  007F0E  55                 	db	85	;'U'
   315  007F0F  50                 	db	80	;'P'
   316  007F10  3A                 	db	58	;':'
   317  007F11  20                 	db	32
   318  007F12  74                 	db	116	;'t'
   319  007F13  68                 	db	104	;'h'
   320  007F14  65                 	db	101	;'e'
   321  007F15  20                 	db	32
   322  007F16  76                 	db	118	;'v'
   323  007F17  69                 	db	105	;'i'
   324  007F18  61                 	db	97	;'a'
   325  007F19  6C                 	db	108	;'l'
   326  007F1A  20                 	db	32
   327  007F1B  68                 	db	104	;'h'
   328  007F1C  61                 	db	97	;'a'
   329  007F1D  73                 	db	115	;'s'
   330  007F1E  20                 	db	32
   331  007F1F  72                 	db	114	;'r'
   332  007F20  65                 	db	101	;'e'
   333  007F21  61                 	db	97	;'a'
   334  007F22  63                 	db	99	;'c'
   335  007F23  68                 	db	104	;'h'
   336  007F24  65                 	db	101	;'e'
   337  007F25  64                 	db	100	;'d'
   338  007F26  20                 	db	32
   339  007F27  74                 	db	116	;'t'
   340  007F28  68                 	db	104	;'h'
   341  007F29  65                 	db	101	;'e'
   342  007F2A  20                 	db	32
   343  007F2B  70                 	db	112	;'p'
   344  007F2C  69                 	db	105	;'i'
   345  007F2D  63                 	db	99	;'c'
   346  007F2E  6B                 	db	107	;'k'
   347  007F2F  20                 	db	32
   348  007F30  75                 	db	117	;'u'
   349  007F31  70                 	db	112	;'p'
   350  007F32  20                 	db	32
   351  007F33  73                 	db	115	;'s'
   352  007F34  74                 	db	116	;'t'
   353  007F35  61                 	db	97	;'a'
   354  007F36  74                 	db	116	;'t'
   355  007F37  69                 	db	105	;'i'
   356  007F38  6F                 	db	111	;'o'
   357  007F39  6E                 	db	110	;'n'
   358  007F3A  00                 	db	0
   359  007F3B                     STR_1:
   360  007F3B  49                 	db	73	;'I'
   361  007F3C  44                 	db	68	;'D'
   362  007F3D  4C                 	db	76	;'L'
   363  007F3E  45                 	db	69	;'E'
   364  007F3F  3A                 	db	58	;':'
   365  007F40  20                 	db	32
   366  007F41  77                 	db	119	;'w'
   367  007F42  61                 	db	97	;'a'
   368  007F43  69                 	db	105	;'i'
   369  007F44  74                 	db	116	;'t'
   370  007F45  69                 	db	105	;'i'
   371  007F46  6E                 	db	110	;'n'
   372  007F47  67                 	db	103	;'g'
   373  007F48  20                 	db	32
   374  007F49  66                 	db	102	;'f'
   375  007F4A  6F                 	db	111	;'o'
   376  007F4B  72                 	db	114	;'r'
   377  007F4C  20                 	db	32
   378  007F4D  20                 	db	32
   379  007F4E  76                 	db	118	;'v'
   380  007F4F  69                 	db	105	;'i'
   381  007F50  61                 	db	97	;'a'
   382  007F51  6C                 	db	108	;'l'
   383  007F52  20                 	db	32
   384  007F53  74                 	db	116	;'t'
   385  007F54  6F                 	db	111	;'o'
   386  007F55  20                 	db	32
   387  007F56  62                 	db	98	;'b'
   388  007F57  65                 	db	101	;'e'
   389  007F58  20                 	db	32
   390  007F59  70                 	db	112	;'p'
   391  007F5A  6C                 	db	108	;'l'
   392  007F5B  61                 	db	97	;'a'
   393  007F5C  63                 	db	99	;'c'
   394  007F5D  65                 	db	101	;'e'
   395  007F5E  64                 	db	100	;'d'
   396  007F5F  20                 	db	32
   397  007F60  69                 	db	105	;'i'
   398  007F61  6E                 	db	110	;'n'
   399  007F62  20                 	db	32
   400  007F63  69                 	db	105	;'i'
   401  007F64  6E                 	db	110	;'n'
   402  007F65  69                 	db	105	;'i'
   403  007F66  74                 	db	116	;'t'
   404  007F67  20                 	db	32
   405  007F68  70                 	db	112	;'p'
   406  007F69  6F                 	db	111	;'o'
   407  007F6A  73                 	db	115	;'s'
   408  007F6B  00                 	db	0
   409  007F6C                     STR_4:
   410  007F6C  4F                 	db	79	;'O'
   411  007F6D  56                 	db	86	;'V'
   412  007F6E  45                 	db	69	;'E'
   413  007F6F  4E                 	db	78	;'N'
   414  007F70  3A                 	db	58	;':'
   415  007F71  20                 	db	32
   416  007F72  72                 	db	114	;'r'
   417  007F73  65                 	db	101	;'e'
   418  007F74  61                 	db	97	;'a'
   419  007F75  63                 	db	99	;'c'
   420  007F76  68                 	db	104	;'h'
   421  007F77  69                 	db	105	;'i'
   422  007F78  6E                 	db	110	;'n'
   423  007F79  67                 	db	103	;'g'
   424  007F7A  20                 	db	32
   425  007F7B  74                 	db	116	;'t'
   426  007F7C  68                 	db	104	;'h'
   427  007F7D  65                 	db	101	;'e'
   428  007F7E  20                 	db	32
   429  007F7F  63                 	db	99	;'c'
   430  007F80  6F                 	db	111	;'o'
   431  007F81  72                 	db	114	;'r'
   432  007F82  72                 	db	114	;'r'
   433  007F83  65                 	db	101	;'e'
   434  007F84  63                 	db	99	;'c'
   435  007F85  74                 	db	116	;'t'
   436  007F86  20                 	db	32
   437  007F87  74                 	db	116	;'t'
   438  007F88  65                 	db	101	;'e'
   439  007F89  6D                 	db	109	;'m'
   440  007F8A  70                 	db	112	;'p'
   441  007F8B  65                 	db	101	;'e'
   442  007F8C  72                 	db	114	;'r'
   443  007F8D  61                 	db	97	;'a'
   444  007F8E  74                 	db	116	;'t'
   445  007F8F  75                 	db	117	;'u'
   446  007F90  72                 	db	114	;'r'
   447  007F91  65                 	db	101	;'e'
   448  007F92  00                 	db	0
   449  007F93                     STR_9:
   450  007F93  44                 	db	68	;'D'
   451  007F94  65                 	db	101	;'e'
   452  007F95  76                 	db	118	;'v'
   453  007F96  69                 	db	105	;'i'
   454  007F97  63                 	db	99	;'c'
   455  007F98  65                 	db	101	;'e'
   456  007F99  20                 	db	32
   457  007F9A  68                 	db	104	;'h'
   458  007F9B  61                 	db	97	;'a'
   459  007F9C  73                 	db	115	;'s'
   460  007F9D  20                 	db	32
   461  007F9E  62                 	db	98	;'b'
   462  007F9F  65                 	db	101	;'e'
   463  007FA0  65                 	db	101	;'e'
   464  007FA1  6E                 	db	110	;'n'
   465  007FA2  20                 	db	32
   466  007FA3  72                 	db	114	;'r'
   467  007FA4  65                 	db	101	;'e'
   468  007FA5  73                 	db	115	;'s'
   469  007FA6  65                 	db	101	;'e'
   470  007FA7  74                 	db	116	;'t'
   471  007FA8  00                 	db	0
   472  007FA9                     STR_5:
   473  007FA9  47                 	db	71	;'G'
   474  007FAA  52                 	db	82	;'R'
   475  007FAB  41                 	db	65	;'A'
   476  007FAC  53                 	db	83	;'S'
   477  007FAD  50                 	db	80	;'P'
   478  007FAE  49                 	db	73	;'I'
   479  007FAF  4E                 	db	78	;'N'
   480  007FB0  47                 	db	71	;'G'
   481  007FB1  00                 	db	0
   482  007FB2                     STR_7:
   483  007FB2  44                 	db	68	;'D'
   484  007FB3  49                 	db	73	;'I'
   485  007FB4  4C                 	db	76	;'L'
   486  007FB5  55                 	db	85	;'U'
   487  007FB6  54                 	db	84	;'T'
   488  007FB7  49                 	db	73	;'I'
   489  007FB8  4E                 	db	78	;'N'
   490  007FB9  47                 	db	71	;'G'
   491  007FBA  00                 	db	0
   492  007FBB                     STR_3:
   493  007FBB  4D                 	db	77	;'M'
   494  007FBC  4F                 	db	79	;'O'
   495  007FBD  56                 	db	86	;'V'
   496  007FBE  45                 	db	69	;'E'
   497  007FBF  4D                 	db	77	;'M'
   498  007FC0  45                 	db	69	;'E'
   499  007FC1  4E                 	db	78	;'N'
   500  007FC2  54                 	db	84	;'T'
   501  007FC3  00                 	db	0
   502  007FC4                     STR_6:
   503  007FC4  4D                 	db	77	;'M'
   504  007FC5  49                 	db	73	;'I'
   505  007FC6  58                 	db	88	;'X'
   506  007FC7  49                 	db	73	;'I'
   507  007FC8  4E                 	db	78	;'N'
   508  007FC9  47                 	db	71	;'G'
   509  007FCA  00                 	db	0
   510  007FCB                     STR_87:
   511  007FCB  68                 	db	104	;'h'
   512  007FCC  68                 	db	104	;'h'
   513  007FCD  58                 	db	88	;'X'
   514  007FCE  00                 	db	0
   515  007FCF                     STR_11:
   516  007FCF  68                 	db	104	;'h'
   517  007FD0  68                 	db	104	;'h'
   518  007FD1  64                 	db	100	;'d'
   519  007FD2  00                 	db	0
   520  007FD3                     STR_15:
   521  007FD3  68                 	db	104	;'h'
   522  007FD4  68                 	db	104	;'h'
   523  007FD5  69                 	db	105	;'i'
   524  007FD6  00                 	db	0
   525  007FD7                     STR_53:
   526  007FD7  68                 	db	104	;'h'
   527  007FD8  68                 	db	104	;'h'
   528  007FD9  6E                 	db	110	;'n'
   529  007FDA  00                 	db	0
   530  007FDB                     STR_38:
   531  007FDB  68                 	db	104	;'h'
   532  007FDC  68                 	db	104	;'h'
   533  007FDD  6F                 	db	111	;'o'
   534  007FDE  00                 	db	0
   535  007FDF                     STR_68:
   536  007FDF  68                 	db	104	;'h'
   537  007FE0  68                 	db	104	;'h'
   538  007FE1  75                 	db	117	;'u'
   539  007FE2  00                 	db	0
   540  007FE3                     STR_83:
   541  007FE3  68                 	db	104	;'h'
   542  007FE4  68                 	db	104	;'h'
   543  007FE5  78                 	db	120	;'x'
   544  007FE6  00                 	db	0
   545  007FE7                     STR_105:
   546  007FE7  7A                 	db	122	;'z'
   547  007FE8  58                 	db	88	;'X'
   548  007FE9  00                 	db	0
   549  007FEA                     STR_29:
   550  007FEA  7A                 	db	122	;'z'
   551  007FEB  64                 	db	100	;'d'
   552  007FEC  00                 	db	0
   553  007FED                     STR_33:
   554  007FED  7A                 	db	122	;'z'
   555  007FEE  69                 	db	105	;'i'
   556  007FEF  00                 	db	0
   557  007FF0                     STR_63:
   558  007FF0  7A                 	db	122	;'z'
   559  007FF1  6E                 	db	110	;'n'
   560  007FF2  00                 	db	0
   561  007FF3                     STR_48:
   562  007FF3  7A                 	db	122	;'z'
   563  007FF4  6F                 	db	111	;'o'
   564  007FF5  00                 	db	0
   565  007FF6                     STR_78:
   566  007FF6  7A                 	db	122	;'z'
   567  007FF7  75                 	db	117	;'u'
   568  007FF8  00                 	db	0
   569  007FF9                     STR_101:
   570  007FF9  7A                 	db	122	;'z'
   571  007FFA  78                 	db	120	;'x'
   572  007FFB  00                 	db	0
   573  007FFC                     STR_10:
   574  007FFC  25                 	db	37
   575  007FFD  73                 	db	115	;'s'
   576  007FFE  00                 	db	0
   577  007FFF  00                 	db	0	; dummy byte at the end
   578  0000                     
   579                           ; #config settings
   580                           
   581                           	psect	cinit
   582  006A6A                     __pcinit:
   583                           	callstack 0
   584  006A6A                     start_initialization:
   585                           	callstack 0
   586  006A6A                     __initialization:
   587                           	callstack 0
   588                           
   589                           ; Initialize objects allocated to BANK1 (32 bytes)
   590                           ; load TBLPTR registers with __pidataBANK1
   591  006A6A  0ECA               	movlw	low __pidataBANK1
   592  006A6C  6EF6               	movwf	tblptrl,c
   593  006A6E  0E64               	movlw	high __pidataBANK1
   594  006A70  6EF7               	movwf	tblptrh,c
   595  006A72  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   596  006A74  6EF8               	movwf	tblptru,c
   597  006A76  EE01  F0DD         	lfsr	0,__pdataBANK1
   598  006A7A  EE10 F020          	lfsr	1,32
   599  006A7E                     copy_data0:
   600  006A7E  0009               	tblrd		*+
   601  006A80  CFF5 FFEE          	movff	tablat,postinc0
   602  006A84  50E5               	movf	postdec1,w,c
   603  006A86  50E1               	movf	fsr1l,w,c
   604  006A88  E1FA               	bnz	copy_data0
   605                           
   606                           ; Initialize objects allocated to BANK0 (19 bytes)
   607                           ; load TBLPTR registers with __pidataBANK0
   608  006A8A  0E97               	movlw	low __pidataBANK0
   609  006A8C  6EF6               	movwf	tblptrl,c
   610  006A8E  0E64               	movlw	high __pidataBANK0
   611  006A90  6EF7               	movwf	tblptrh,c
   612  006A92  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   613  006A94  6EF8               	movwf	tblptru,c
   614  006A96  EE00  F0DE         	lfsr	0,__pdataBANK0
   615  006A9A  EE10 F013          	lfsr	1,19
   616  006A9E                     copy_data1:
   617  006A9E  0009               	tblrd		*+
   618  006AA0  CFF5 FFEE          	movff	tablat,postinc0
   619  006AA4  50E5               	movf	postdec1,w,c
   620  006AA6  50E1               	movf	fsr1l,w,c
   621  006AA8  E1FA               	bnz	copy_data1
   622                           
   623                           ; Clear objects allocated to BANK1 (58 bytes)
   624  006AAA  EE01  F0A3         	lfsr	0,__pbssBANK1
   625  006AAE  0E3A               	movlw	58
   626  006AB0                     clear_0:
   627  006AB0  6AEE               	clrf	postinc0,c
   628  006AB2  06E8               	decf	wreg,f,c
   629  006AB4  E1FD               	bnz	clear_0
   630                           
   631                           ; Clear objects allocated to BANK0 (56 bytes)
   632  006AB6  EE00  F080         	lfsr	0,__pbssBANK0
   633  006ABA  0E38               	movlw	56
   634  006ABC                     clear_1:
   635  006ABC  6AEE               	clrf	postinc0,c
   636  006ABE  06E8               	decf	wreg,f,c
   637  006AC0  E1FD               	bnz	clear_1
   638  006AC2                     end_of_initialization:
   639                           	callstack 0
   640  006AC2                     __end_of__initialization:
   641                           	callstack 0
   642  006AC2  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   643  006AC4  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   644  006AC6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   645  006AC8  6EF8               	movwf	tblptru,c
   646  006ACA  0100               	movlb	0
   647  006ACC  EF31  F00A         	goto	_main	;jump to C main() function
   648                           
   649                           	psect	bssBANK0
   650  000080                     __pbssBANK0:
   651                           	callstack 0
   652  000080                     roundf@F525:
   653                           	callstack 0
   654  000080                     	ds	4
   655  000084                     _nout:
   656                           	callstack 0
   657  000084                     	ds	2
   658  000086                     _width:
   659                           	callstack 0
   660  000086                     	ds	2
   661  000088                     _prec:
   662                           	callstack 0
   663  000088                     	ds	2
   664  00008A                     _flags:
   665                           	callstack 0
   666  00008A                     	ds	2
   667  00008C                     _errno:
   668                           	callstack 0
   669  00008C                     	ds	2
   670  00008E                     _temperature_scaled:
   671                           	callstack 0
   672  00008E                     	ds	2
   673  000090                     _temperature_int:
   674                           	callstack 0
   675  000090                     	ds	2
   676  000092                     _mix_step_counter:
   677                           	callstack 0
   678  000092                     	ds	2
   679  000094                     _mix_direction:
   680                           	callstack 0
   681  000094                     	ds	2
   682  000096                     _mix_current_step:
   683                           	callstack 0
   684  000096                     	ds	2
   685  000098                     _dbuf:
   686                           	callstack 0
   687  000098                     	ds	32
   688                           
   689                           	psect	dataBANK0
   690  0000DE                     __pdataBANK0:
   691                           	callstack 0
   692  0000DE                     stoa@F1152:
   693                           	callstack 0
   694  0000DE                     	ds	7
   695  0000E5                     	ds	4
   696  0000E9                     	ds	4
   697  0000ED                     _tmr2_prescaler:
   698                           	callstack 0
   699  0000ED                     	ds	4
   700                           
   701                           	psect	bssBANK1
   702  0001A3                     __pbssBANK1:
   703                           	callstack 0
   704  0001A3                     _move_to_trash:
   705                           	callstack 0
   706  0001A3                     	ds	2
   707  0001A5                     _trash_counter:
   708                           	callstack 0
   709  0001A5                     	ds	2
   710  0001A7                     _end_effector_homed:
   711                           	callstack 0
   712  0001A7                     	ds	2
   713  0001A9                     _joint_homed:
   714                           	callstack 0
   715  0001A9                     	ds	2
   716  0001AB                     _mix_counter:
   717                           	callstack 0
   718  0001AB                     	ds	2
   719  0001AD                     _timer_done:
   720                           	callstack 0
   721  0001AD                     	ds	1
   722  0001AE                     _read_new_char:
   723                           	callstack 0
   724  0001AE                     	ds	1
   725  0001AF                     _idle_msg_sent:
   726                           	callstack 0
   727  0001AF                     	ds	1
   728  0001B0                     _state_changed:
   729                           	callstack 0
   730  0001B0                     	ds	1
   731  0001B1                     _joint_dilutor_stepper:
   732                           	callstack 0
   733  0001B1                     	ds	14
   734  0001BF                     _end_effector_stepper:
   735                           	callstack 0
   736  0001BF                     	ds	14
   737  0001CD                     _joint_stepper:
   738                           	callstack 0
   739  0001CD                     	ds	14
   740  0001DB                     _state:
   741                           	callstack 0
   742  0001DB                     	ds	2
   743                           
   744                           	psect	dataBANK1
   745  0001DD                     __pdataBANK1:
   746                           	callstack 0
   747  0001DD                     _state_msgs:
   748                           	callstack 0
   749  0001DD                     	ds	16
   750  0001ED                     _hex_end_effector_values:
   751                           	callstack 0
   752  0001ED                     	ds	8
   753  0001F5                     _hex_joint_values:
   754                           	callstack 0
   755  0001F5                     	ds	8
   756                           
   757                           	psect	cstackBANK1
   758  000100                     __pcstackBANK1:
   759                           	callstack 0
   760  000100                     main@greet_str:
   761                           	callstack 0
   762                           
   763                           ; 160 bytes @ 0x0
   764  000100                     	ds	160
   765  0001A0                     main@current_temp:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0xA0
   769  0001A0                     	ds	2
   770  0001A2                     main@rx_char:
   771                           	callstack 0
   772                           
   773                           ; 1 bytes @ 0xA2
   774  0001A2                     	ds	1
   775                           
   776                           	psect	cstackBANK0
   777  0000B8                     __pcstackBANK0:
   778                           	callstack 0
   779  0000B8                     _vsnprintf$1555:
   780                           	callstack 0
   781  0000B8                     _roundf$2138:
   782                           	callstack 0
   783                           
   784                           ; 4 bytes @ 0x0
   785  0000B8                     	ds	2
   786  0000BA                     vsnprintf@cnt:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x2
   790  0000BA                     	ds	2
   791  0000BC                     roundf@e:
   792                           	callstack 0
   793  0000BC                     vsnprintf@f:
   794                           	callstack 0
   795                           
   796                           ; 6 bytes @ 0x4
   797  0000BC                     	ds	2
   798  0000BE                     _roundf$2137:
   799                           	callstack 0
   800                           
   801                           ; 4 bytes @ 0x6
   802  0000BE                     	ds	4
   803  0000C2                     ?_snprintf:
   804                           	callstack 0
   805  0000C2                     snprintf@s:
   806                           	callstack 0
   807  0000C2                     roundf@u:
   808                           	callstack 0
   809                           
   810                           ; 4 bytes @ 0xA
   811  0000C2                     	ds	2
   812  0000C4                     snprintf@n:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0xC
   816  0000C4                     	ds	2
   817  0000C6                     snprintf@fmt:
   818                           	callstack 0
   819  0000C6                     roundf@y:
   820                           	callstack 0
   821                           
   822                           ; 4 bytes @ 0xE
   823  0000C6                     	ds	4
   824  0000CA                     ?___fltol:
   825                           	callstack 0
   826  0000CA                     ___fltol@f1:
   827                           	callstack 0
   828                           
   829                           ; 4 bytes @ 0x12
   830  0000CA                     	ds	2
   831  0000CC                     snprintf@ap:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x14
   835  0000CC                     	ds	2
   836  0000CE                     ??___fltol:
   837                           
   838                           ; 1 bytes @ 0x16
   839  0000CE                     	ds	4
   840  0000D2                     ___fltol@sign1:
   841                           	callstack 0
   842                           
   843                           ; 1 bytes @ 0x1A
   844  0000D2                     	ds	1
   845  0000D3                     ___fltol@exp1:
   846                           	callstack 0
   847                           
   848                           ; 1 bytes @ 0x1B
   849  0000D3                     	ds	1
   850  0000D4                     ?_get_temperature:
   851                           	callstack 0
   852  0000D4                     update_pwm_duty_ccp1@time_up:
   853                           	callstack 0
   854  0000D4                     _init_timer_2$2136:
   855                           	callstack 0
   856                           
   857                           ; 4 bytes @ 0x1C
   858  0000D4                     	ds	2
   859  0000D6                     ?_check_temperature:
   860                           	callstack 0
   861  0000D6                     check_temperature@temp_to_be_checked:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x1E
   865  0000D6                     	ds	2
   866  0000D8                     ??_update_pwm_duty_ccp1:
   867  0000D8                     check_temperature@grad:
   868                           	callstack 0
   869                           
   870                           ; 4 bytes @ 0x20
   871  0000D8                     	ds	2
   872  0000DA                     update_pwm_duty_ccp1@new_duty:
   873                           	callstack 0
   874                           
   875                           ; 2 bytes @ 0x22
   876  0000DA                     	ds	2
   877  0000DC                     update_pwm_duty_ccp1@lsbs_duty:
   878                           	callstack 0
   879                           
   880                           ; 1 bytes @ 0x24
   881  0000DC                     	ds	1
   882  0000DD                     ??_main:
   883                           
   884                           ; 1 bytes @ 0x25
   885  0000DD                     	ds	1
   886                           
   887                           	psect	cstackCOMRAM
   888  000001                     __pcstackCOMRAM:
   889                           	callstack 0
   890  000001                     ?_strlen:
   891                           	callstack 0
   892  000001                     ?_isupper:
   893                           	callstack 0
   894  000001                     ?_isalpha:
   895                           	callstack 0
   896  000001                     ?_isdigit:
   897                           	callstack 0
   898  000001                     ?_strncmp:
   899                           	callstack 0
   900  000001                     ?_isspace:
   901                           	callstack 0
   902  000001                     ?_islower:
   903                           	callstack 0
   904  000001                     ?___wmul:
   905                           	callstack 0
   906  000001                     ?___flneg:
   907                           	callstack 0
   908  000001                     ?___aodiv:
   909                           	callstack 0
   910  000001                     ?___aomod:
   911                           	callstack 0
   912  000001                     ?___lodiv:
   913                           	callstack 0
   914  000001                     ?___lomod:
   915                           	callstack 0
   916  000001                     serial_tx_char@val:
   917                           	callstack 0
   918  000001                     get_reg_value@rx_char:
   919                           	callstack 0
   920  000001                     lcd_wr@val:
   921                           	callstack 0
   922  000001                     state_translator_micro_to_fpga@state:
   923                           	callstack 0
   924  000001                     init_stepper@stepper_motor:
   925                           	callstack 0
   926  000001                     turn_on_current_coil@stepper_motor:
   927                           	callstack 0
   928  000001                     update_current_coil@stepper_motor:
   929                           	callstack 0
   930  000001                     change_direction@stepper_motor:
   931                           	callstack 0
   932  000001                     ___wmul@multiplier:
   933                           	callstack 0
   934  000001                     isalpha@c:
   935                           	callstack 0
   936  000001                     isdigit@c:
   937                           	callstack 0
   938  000001                     isspace@c:
   939                           	callstack 0
   940  000001                     isupper@c:
   941                           	callstack 0
   942  000001                     fputc@c:
   943                           	callstack 0
   944  000001                     strlen@s:
   945                           	callstack 0
   946  000001                     strncmp@_l:
   947                           	callstack 0
   948  000001                     islower@c:
   949                           	callstack 0
   950  000001                     ___flge@ff1:
   951                           	callstack 0
   952  000001                     ___flneg@f1:
   953                           	callstack 0
   954  000001                     ___aodiv@dividend:
   955                           	callstack 0
   956  000001                     ___aomod@dividend:
   957                           	callstack 0
   958  000001                     ___lodiv@dividend:
   959                           	callstack 0
   960  000001                     ___lomod@dividend:
   961                           	callstack 0
   962                           
   963                           ; 8 bytes @ 0x0
   964  000001                     	ds	1
   965  000002                     lcd_cmd@val:
   966                           	callstack 0
   967  000002                     lcd_dat@val:
   968                           	callstack 0
   969                           
   970                           ; 1 bytes @ 0x1
   971  000002                     	ds	1
   972  000003                     ??_lcd_init:
   973  000003                     ??_change_direction:
   974  000003                     ??_isupper:
   975  000003                     ??_isalpha:
   976  000003                     ??_isdigit:
   977  000003                     ??_isspace:
   978  000003                     ??_islower:
   979  000003                     ??_turn_on_current_coil:
   980  000003                     ??_update_current_coil:
   981  000003                     lcd_str@str:
   982                           	callstack 0
   983  000003                     state_translator_fpga_to_micro@state:
   984                           	callstack 0
   985  000003                     init_stepper@current_coil:
   986                           	callstack 0
   987  000003                     ___wmul@multiplicand:
   988                           	callstack 0
   989  000003                     fputc@fp:
   990                           	callstack 0
   991  000003                     strlen@a:
   992                           	callstack 0
   993  000003                     strncmp@_r:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0x2
   997  000003                     	ds	2
   998  000005                     ??_lcd_str:
   999  000005                     ??_fputc:
  1000  000005                     state_translator_fpga_to_micro@state_machine_code:
  1001                           	callstack 0
  1002  000005                     state_translator_micro_to_fpga@state_machine_code:
  1003                           	callstack 0
  1004  000005                     init_stepper@step_counter:
  1005                           	callstack 0
  1006  000005                     ___wmul@product:
  1007                           	callstack 0
  1008  000005                     strncmp@n:
  1009                           	callstack 0
  1010  000005                     ___flge@ff2:
  1011                           	callstack 0
  1012                           
  1013                           ; 4 bytes @ 0x4
  1014  000005                     	ds	2
  1015  000007                     ??_strncmp:
  1016  000007                     ?_reach_goal:
  1017                           	callstack 0
  1018  000007                     ?_toupper:
  1019                           	callstack 0
  1020  000007                     lcd_str@i:
  1021                           	callstack 0
  1022  000007                     _isspace$1839:
  1023                           	callstack 0
  1024  000007                     init_stepper@direction:
  1025                           	callstack 0
  1026  000007                     reach_goal@stepper_motor:
  1027                           	callstack 0
  1028  000007                     toupper@c:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x6
  1032  000007                     	ds	1
  1033  000008                     ?_atoi:
  1034                           	callstack 0
  1035  000008                     atoi@s:
  1036                           	callstack 0
  1037  000008                     strncmp@l:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x7
  1041  000008                     	ds	1
  1042  000009                     ??_toupper:
  1043  000009                     ??___flge:
  1044  000009                     init_stepper@hex_coil_register_values:
  1045                           	callstack 0
  1046  000009                     reach_goal@goal_to_reach:
  1047                           	callstack 0
  1048  000009                     ___aodiv@divisor:
  1049                           	callstack 0
  1050  000009                     ___aomod@divisor:
  1051                           	callstack 0
  1052  000009                     ___lodiv@divisor:
  1053                           	callstack 0
  1054  000009                     ___lomod@divisor:
  1055                           	callstack 0
  1056                           
  1057                           ; 8 bytes @ 0x8
  1058  000009                     	ds	1
  1059  00000A                     ??_atoi:
  1060  00000A                     ?_stoa:
  1061                           	callstack 0
  1062  00000A                     stoa@fp:
  1063                           	callstack 0
  1064  00000A                     fputs@s:
  1065                           	callstack 0
  1066  00000A                     strncmp@r:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x9
  1070  00000A                     	ds	1
  1071  00000B                     ??_init_stepper:
  1072  00000B                     ??_reach_goal:
  1073                           
  1074                           ; 1 bytes @ 0xA
  1075  00000B                     	ds	1
  1076  00000C                     stoa@s:
  1077                           	callstack 0
  1078  00000C                     fputs@fp:
  1079                           	callstack 0
  1080                           
  1081                           ; 2 bytes @ 0xB
  1082  00000C                     	ds	1
  1083  00000D                     _toupper$1899:
  1084                           	callstack 0
  1085                           
  1086                           ; 2 bytes @ 0xC
  1087  00000D                     	ds	1
  1088  00000E                     ??_stoa:
  1089  00000E                     fputs@c:
  1090                           	callstack 0
  1091  00000E                     atoi@neg:
  1092                           	callstack 0
  1093                           
  1094                           ; 2 bytes @ 0xD
  1095  00000E                     	ds	1
  1096  00000F                     init_stepper@i:
  1097                           	callstack 0
  1098  00000F                     fputs@i:
  1099                           	callstack 0
  1100  00000F                     stoa@nuls:
  1101                           	callstack 0
  1102                           
  1103                           ; 7 bytes @ 0xE
  1104  00000F                     	ds	1
  1105  000010                     _atoi$1811:
  1106                           	callstack 0
  1107                           
  1108                           ; 2 bytes @ 0xF
  1109  000010                     	ds	1
  1110  000011                     ?_pad:
  1111                           	callstack 0
  1112  000011                     ___aodiv@counter:
  1113                           	callstack 0
  1114  000011                     ___aomod@counter:
  1115                           	callstack 0
  1116  000011                     ___lomod@counter:
  1117                           	callstack 0
  1118  000011                     pad@fp:
  1119                           	callstack 0
  1120  000011                     ___lodiv@quotient:
  1121                           	callstack 0
  1122                           
  1123                           ; 8 bytes @ 0x10
  1124  000011                     	ds	1
  1125  000012                     ___aodiv@sign:
  1126                           	callstack 0
  1127  000012                     ___aomod@sign:
  1128                           	callstack 0
  1129  000012                     _atoi$1813:
  1130                           	callstack 0
  1131                           
  1132                           ; 2 bytes @ 0x11
  1133  000012                     	ds	1
  1134  000013                     ?_abs:
  1135                           	callstack 0
  1136  000013                     abs@a:
  1137                           	callstack 0
  1138  000013                     pad@buf:
  1139                           	callstack 0
  1140  000013                     ___aodiv@quotient:
  1141                           	callstack 0
  1142                           
  1143                           ; 8 bytes @ 0x12
  1144  000013                     	ds	1
  1145  000014                     _atoi$1812:
  1146                           	callstack 0
  1147                           
  1148                           ; 1 bytes @ 0x13
  1149  000014                     	ds	1
  1150  000015                     ??_abs:
  1151  000015                     pad@p:
  1152                           	callstack 0
  1153  000015                     atoi@n:
  1154                           	callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x14
  1157  000015                     	ds	1
  1158  000016                     stoa@i:
  1159                           	callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x15
  1162  000016                     	ds	1
  1163  000017                     ??_pad:
  1164  000017                     ?___awdiv:
  1165                           	callstack 0
  1166  000017                     ___awdiv@dividend:
  1167                           	callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x16
  1170  000017                     	ds	1
  1171  000018                     pad@i:
  1172                           	callstack 0
  1173  000018                     stoa@w:
  1174                           	callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x17
  1177  000018                     	ds	1
  1178  000019                     ___lodiv@counter:
  1179                           	callstack 0
  1180  000019                     ___awdiv@divisor:
  1181                           	callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x18
  1184  000019                     	ds	1
  1185  00001A                     pad@w:
  1186                           	callstack 0
  1187  00001A                     stoa@cp:
  1188                           	callstack 0
  1189                           
  1190                           ; 2 bytes @ 0x19
  1191  00001A                     	ds	1
  1192  00001B                     ___awdiv@counter:
  1193                           	callstack 0
  1194                           
  1195                           ; 1 bytes @ 0x1A
  1196  00001B                     	ds	1
  1197  00001C                     ?_ctoa:
  1198                           	callstack 0
  1199  00001C                     ?_dtoa:
  1200                           	callstack 0
  1201  00001C                     ?_otoa:
  1202                           	callstack 0
  1203  00001C                     ?_utoa:
  1204                           	callstack 0
  1205  00001C                     ?_xtoa:
  1206                           	callstack 0
  1207  00001C                     ___awdiv@sign:
  1208                           	callstack 0
  1209  00001C                     ctoa@fp:
  1210                           	callstack 0
  1211  00001C                     dtoa@fp:
  1212                           	callstack 0
  1213  00001C                     otoa@fp:
  1214                           	callstack 0
  1215  00001C                     stoa@p:
  1216                           	callstack 0
  1217  00001C                     utoa@fp:
  1218                           	callstack 0
  1219  00001C                     xtoa@fp:
  1220                           	callstack 0
  1221                           
  1222                           ; 2 bytes @ 0x1B
  1223  00001C                     	ds	1
  1224  00001D                     ___awdiv@quotient:
  1225                           	callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x1C
  1228  00001D                     	ds	1
  1229  00001E                     ctoa@c:
  1230                           	callstack 0
  1231  00001E                     stoa@l:
  1232                           	callstack 0
  1233  00001E                     dtoa@d:
  1234                           	callstack 0
  1235  00001E                     otoa@d:
  1236                           	callstack 0
  1237  00001E                     utoa@d:
  1238                           	callstack 0
  1239  00001E                     xtoa@d:
  1240                           	callstack 0
  1241                           
  1242                           ; 8 bytes @ 0x1D
  1243  00001E                     	ds	1
  1244  00001F                     ?___xxtofl:
  1245                           	callstack 0
  1246  00001F                     ctoa@w:
  1247                           	callstack 0
  1248  00001F                     ___xxtofl@val:
  1249                           	callstack 0
  1250                           
  1251                           ; 4 bytes @ 0x1E
  1252  00001F                     	ds	4
  1253  000023                     ??___xxtofl:
  1254                           
  1255                           ; 1 bytes @ 0x22
  1256  000023                     	ds	3
  1257  000026                     ??_dtoa:
  1258  000026                     ??_otoa:
  1259  000026                     ??_utoa:
  1260  000026                     xtoa@x:
  1261                           	callstack 0
  1262                           
  1263                           ; 1 bytes @ 0x25
  1264  000026                     	ds	1
  1265  000027                     ??_xtoa:
  1266  000027                     ___xxtofl@sign:
  1267                           	callstack 0
  1268                           
  1269                           ; 1 bytes @ 0x26
  1270  000027                     	ds	1
  1271  000028                     ___xxtofl@exp:
  1272                           	callstack 0
  1273                           
  1274                           ; 1 bytes @ 0x27
  1275  000028                     	ds	1
  1276  000029                     ___xxtofl@arg:
  1277                           	callstack 0
  1278                           
  1279                           ; 4 bytes @ 0x28
  1280  000029                     	ds	4
  1281  00002D                     ?___flmul:
  1282                           	callstack 0
  1283  00002D                     ___flmul@b:
  1284                           	callstack 0
  1285                           
  1286                           ; 4 bytes @ 0x2C
  1287  00002D                     	ds	1
  1288  00002E                     _dtoa$1637:
  1289                           	callstack 0
  1290  00002E                     otoa@p:
  1291                           	callstack 0
  1292  00002E                     utoa@p:
  1293                           	callstack 0
  1294                           
  1295                           ; 2 bytes @ 0x2D
  1296  00002E                     	ds	1
  1297  00002F                     _xtoa$1673:
  1298                           	callstack 0
  1299                           
  1300                           ; 2 bytes @ 0x2E
  1301  00002F                     	ds	1
  1302  000030                     dtoa@p:
  1303                           	callstack 0
  1304  000030                     otoa@t:
  1305                           	callstack 0
  1306  000030                     utoa@w:
  1307                           	callstack 0
  1308                           
  1309                           ; 2 bytes @ 0x2F
  1310  000030                     	ds	1
  1311  000031                     _xtoa$1674:
  1312                           	callstack 0
  1313  000031                     ___flmul@a:
  1314                           	callstack 0
  1315                           
  1316                           ; 4 bytes @ 0x30
  1317  000031                     	ds	1
  1318  000032                     dtoa@w:
  1319                           	callstack 0
  1320  000032                     otoa@w:
  1321                           	callstack 0
  1322  000032                     utoa@n:
  1323                           	callstack 0
  1324                           
  1325                           ; 8 bytes @ 0x31
  1326  000032                     	ds	1
  1327  000033                     xtoa@p:
  1328                           	callstack 0
  1329                           
  1330                           ; 2 bytes @ 0x32
  1331  000033                     	ds	1
  1332  000034                     dtoa@s:
  1333                           	callstack 0
  1334  000034                     otoa@n:
  1335                           	callstack 0
  1336                           
  1337                           ; 8 bytes @ 0x33
  1338  000034                     	ds	1
  1339  000035                     ??___flmul:
  1340  000035                     xtoa@w:
  1341                           	callstack 0
  1342                           
  1343                           ; 2 bytes @ 0x34
  1344  000035                     	ds	1
  1345  000036                     dtoa@n:
  1346                           	callstack 0
  1347                           
  1348                           ; 8 bytes @ 0x35
  1349  000036                     	ds	1
  1350  000037                     xtoa@n:
  1351                           	callstack 0
  1352                           
  1353                           ; 8 bytes @ 0x36
  1354  000037                     	ds	2
  1355  000039                     ___flmul@sign:
  1356                           	callstack 0
  1357                           
  1358                           ; 1 bytes @ 0x38
  1359  000039                     	ds	1
  1360  00003A                     utoa@i:
  1361                           	callstack 0
  1362  00003A                     ___flmul@grs:
  1363                           	callstack 0
  1364                           
  1365                           ; 4 bytes @ 0x39
  1366  00003A                     	ds	2
  1367  00003C                     otoa@i:
  1368                           	callstack 0
  1369                           
  1370                           ; 2 bytes @ 0x3B
  1371  00003C                     	ds	2
  1372  00003E                     ___flmul@aexp:
  1373                           	callstack 0
  1374  00003E                     dtoa@i:
  1375                           	callstack 0
  1376                           
  1377                           ; 2 bytes @ 0x3D
  1378  00003E                     	ds	1
  1379  00003F                     ___flmul@bexp:
  1380                           	callstack 0
  1381  00003F                     xtoa@i:
  1382                           	callstack 0
  1383                           
  1384                           ; 2 bytes @ 0x3E
  1385  00003F                     	ds	1
  1386  000040                     ___flmul@prod:
  1387                           	callstack 0
  1388                           
  1389                           ; 4 bytes @ 0x3F
  1390  000040                     	ds	1
  1391  000041                     xtoa@c:
  1392                           	callstack 0
  1393                           
  1394                           ; 2 bytes @ 0x40
  1395  000041                     	ds	2
  1396  000043                     ?_vfpfcnvrt:
  1397                           	callstack 0
  1398  000043                     vfpfcnvrt@fp:
  1399                           	callstack 0
  1400                           
  1401                           ; 2 bytes @ 0x42
  1402  000043                     	ds	1
  1403  000044                     ___flmul@temp:
  1404                           	callstack 0
  1405                           
  1406                           ; 2 bytes @ 0x43
  1407  000044                     	ds	1
  1408  000045                     vfpfcnvrt@fmt:
  1409                           	callstack 0
  1410                           
  1411                           ; 2 bytes @ 0x44
  1412  000045                     	ds	1
  1413  000046                     ?___fldiv:
  1414                           	callstack 0
  1415  000046                     ___fldiv@b:
  1416                           	callstack 0
  1417                           
  1418                           ; 4 bytes @ 0x45
  1419  000046                     	ds	1
  1420  000047                     vfpfcnvrt@ap:
  1421                           	callstack 0
  1422                           
  1423                           ; 2 bytes @ 0x46
  1424  000047                     	ds	2
  1425  000049                     ??_vfpfcnvrt:
  1426                           
  1427                           ; 1 bytes @ 0x48
  1428  000049                     	ds	1
  1429  00004A                     ___fldiv@a:
  1430                           	callstack 0
  1431                           
  1432                           ; 4 bytes @ 0x49
  1433  00004A                     	ds	3
  1434  00004D                     vfpfcnvrt@cp:
  1435                           	callstack 0
  1436                           
  1437                           ; 2 bytes @ 0x4C
  1438  00004D                     	ds	1
  1439  00004E                     ??___fldiv:
  1440                           
  1441                           ; 1 bytes @ 0x4D
  1442  00004E                     	ds	1
  1443  00004F                     vfpfcnvrt@done:
  1444                           	callstack 0
  1445                           
  1446                           ; 2 bytes @ 0x4E
  1447  00004F                     	ds	2
  1448  000051                     _vfpfcnvrt$1688:
  1449                           	callstack 0
  1450                           
  1451                           ; 2 bytes @ 0x50
  1452  000051                     	ds	1
  1453  000052                     ___fldiv@rem:
  1454                           	callstack 0
  1455                           
  1456                           ; 4 bytes @ 0x51
  1457  000052                     	ds	1
  1458  000053                     _vfpfcnvrt$1689:
  1459                           	callstack 0
  1460                           
  1461                           ; 2 bytes @ 0x52
  1462  000053                     	ds	2
  1463  000055                     vfpfcnvrt@ll:
  1464                           	callstack 0
  1465                           
  1466                           ; 8 bytes @ 0x54
  1467  000055                     	ds	1
  1468  000056                     ___fldiv@sign:
  1469                           	callstack 0
  1470                           
  1471                           ; 1 bytes @ 0x55
  1472  000056                     	ds	1
  1473  000057                     ___fldiv@new_exp:
  1474                           	callstack 0
  1475                           
  1476                           ; 2 bytes @ 0x56
  1477  000057                     	ds	2
  1478  000059                     ___fldiv@grs:
  1479                           	callstack 0
  1480                           
  1481                           ; 4 bytes @ 0x58
  1482  000059                     	ds	4
  1483  00005D                     ___fldiv@bexp:
  1484                           	callstack 0
  1485  00005D                     vfpfcnvrt@vp:
  1486                           	callstack 0
  1487                           
  1488                           ; 2 bytes @ 0x5C
  1489  00005D                     	ds	1
  1490  00005E                     ___fldiv@aexp:
  1491                           	callstack 0
  1492                           
  1493                           ; 1 bytes @ 0x5D
  1494  00005E                     	ds	1
  1495  00005F                     ?___fladd:
  1496                           	callstack 0
  1497  00005F                     vfpfcnvrt@c:
  1498                           	callstack 0
  1499  00005F                     ___fladd@b:
  1500                           	callstack 0
  1501                           
  1502                           ; 4 bytes @ 0x5E
  1503  00005F                     	ds	1
  1504  000060                     vfpfcnvrt@llu:
  1505                           	callstack 0
  1506                           
  1507                           ; 8 bytes @ 0x5F
  1508  000060                     	ds	3
  1509  000063                     ___fladd@a:
  1510                           	callstack 0
  1511                           
  1512                           ; 4 bytes @ 0x62
  1513  000063                     	ds	4
  1514  000067                     ??___fladd:
  1515                           
  1516                           ; 1 bytes @ 0x66
  1517  000067                     	ds	1
  1518  000068                     ?_vfprintf:
  1519                           	callstack 0
  1520  000068                     vfprintf@fp:
  1521                           	callstack 0
  1522                           
  1523                           ; 2 bytes @ 0x67
  1524  000068                     	ds	2
  1525  00006A                     vfprintf@fmt:
  1526                           	callstack 0
  1527                           
  1528                           ; 2 bytes @ 0x69
  1529  00006A                     	ds	1
  1530  00006B                     ___fladd@signs:
  1531                           	callstack 0
  1532                           
  1533                           ; 1 bytes @ 0x6A
  1534  00006B                     	ds	1
  1535  00006C                     ___fladd@aexp:
  1536                           	callstack 0
  1537  00006C                     vfprintf@ap:
  1538                           	callstack 0
  1539                           
  1540                           ; 2 bytes @ 0x6B
  1541  00006C                     	ds	1
  1542  00006D                     ___fladd@bexp:
  1543                           	callstack 0
  1544                           
  1545                           ; 1 bytes @ 0x6C
  1546  00006D                     	ds	1
  1547  00006E                     ___fladd@grs:
  1548                           	callstack 0
  1549  00006E                     vfprintf@cfmt:
  1550                           	callstack 0
  1551                           
  1552                           ; 2 bytes @ 0x6D
  1553  00006E                     	ds	1
  1554  00006F                     ?___flsub:
  1555                           	callstack 0
  1556  00006F                     ___flsub@b:
  1557                           	callstack 0
  1558                           
  1559                           ; 4 bytes @ 0x6E
  1560  00006F                     	ds	1
  1561  000070                     ?_vsnprintf:
  1562                           	callstack 0
  1563  000070                     vsnprintf@s:
  1564                           	callstack 0
  1565                           
  1566                           ; 2 bytes @ 0x6F
  1567  000070                     	ds	2
  1568  000072                     vsnprintf@n:
  1569                           	callstack 0
  1570                           
  1571                           ; 2 bytes @ 0x71
  1572  000072                     	ds	1
  1573  000073                     ___flsub@a:
  1574                           	callstack 0
  1575                           
  1576                           ; 4 bytes @ 0x72
  1577  000073                     	ds	1
  1578  000074                     vsnprintf@fmt:
  1579                           	callstack 0
  1580                           
  1581                           ; 2 bytes @ 0x73
  1582  000074                     	ds	2
  1583  000076                     vsnprintf@ap:
  1584                           	callstack 0
  1585                           
  1586                           ; 2 bytes @ 0x75
  1587  000076                     	ds	1
  1588  000077                     ?_roundf:
  1589                           	callstack 0
  1590  000077                     roundf@x:
  1591                           	callstack 0
  1592                           
  1593                           ; 4 bytes @ 0x76
  1594  000077                     	ds	1
  1595  000078                     ??_vsnprintf:
  1596                           
  1597                           ; 1 bytes @ 0x77
  1598  000078                     	ds	3
  1599  00007B                     ??_roundf:
  1600                           
  1601                           ; 1 bytes @ 0x7A
  1602  00007B                     	ds	1
  1603  00007C                     
  1604                           ; 1 bytes @ 0x7B
  1605  00007C                     	ds	3
  1606  00007F                     
  1607                           ; 1 bytes @ 0x7E
  1608 ;;
  1609 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1610 ;;
  1611 ;; *************** function _main *****************
  1612 ;; Defined at:
  1613 ;;		line 56 in file "main.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;		None
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;  current_temp    2  160[BANK1 ] int 
  1618 ;;  greet_str     160    0[BANK1 ] PTR const unsigned char 
  1619 ;;		 -> ?_snprintf(2), STR_8(50), STR_7(9), STR_6(7), 
  1620 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  1621 ;;		 -> STR_1(49), 
  1622 ;;  rx_char         1  162[BANK1 ] unsigned char 
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  1    wreg      void 
  1625 ;; Registers used:
  1626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1632 ;;      Params:         0       0       0       0       0       0       0
  1633 ;;      Locals:         0       0     163       0       0       0       0
  1634 ;;      Temps:          0       1       0       0       0       0       0
  1635 ;;      Totals:         0       1     163       0       0       0       0
  1636 ;;Total ram usage:      164 bytes
  1637 ;; Hardware stack levels required when called:   10
  1638 ;; This function calls:
  1639 ;;		___wmul
  1640 ;;		_change_direction
  1641 ;;		_check_temperature
  1642 ;;		_configure_analog_digital_conversion
  1643 ;;		_get_reg_value
  1644 ;;		_get_temperature
  1645 ;;		_init_PORTS
  1646 ;;		_init_USART
  1647 ;;		_init_ccp1
  1648 ;;		_init_interrupts
  1649 ;;		_init_stepper
  1650 ;;		_init_timer_0
  1651 ;;		_init_timer_2
  1652 ;;		_lcd_cmd
  1653 ;;		_lcd_init
  1654 ;;		_lcd_str
  1655 ;;		_reach_goal
  1656 ;;		_serial_tx_char
  1657 ;;		_snprintf
  1658 ;;		_state_translator_fpga_to_micro
  1659 ;;		_state_translator_micro_to_fpga
  1660 ;;		_wait_for_zero
  1661 ;; This function is called by:
  1662 ;;		Startup code after reset
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           	psect	text0
  1667  001462                     __ptext0:
  1668                           	callstack 0
  1669  001462                     _main:
  1670                           	callstack 21
  1671  001462  FFFF               	dw	65535	; assembler added errata NOP
  1672                           
  1673                           ;main.c: 58:     init_PORTS();
  1674  001464  EC00  F033         	call	_init_PORTS	;wreg free
  1675  001468                     
  1676                           ;main.c: 59:     init_USART();
  1677  001468  EC8A  F033         	call	_init_USART	;wreg free
  1678  00146C                     
  1679                           ;main.c: 60:     init_timer_2();
  1680  00146C  ECCF  F037         	call	_init_timer_2	;wreg free
  1681  001470                     
  1682                           ;main.c: 61:     init_ccp1();
  1683  001470  EC86  F032         	call	_init_ccp1	;wreg free
  1684  001474                     
  1685                           ;main.c: 62:     init_interrupts();
  1686  001474  EC3D  F032         	call	_init_interrupts	;wreg free
  1687  001478                     
  1688                           ;main.c: 63:     configure_analog_digital_conversion();
  1689  001478  ECAC  F032         	call	_configure_analog_digital_conversion	;wreg free
  1690  00147C                     
  1691                           ;main.c: 64:     init_stepper(&joint_stepper, 0, 0, 1, hex_joint_values);
  1692  00147C  0ECD               	movlw	low _joint_stepper
  1693  00147E  6E01               	movwf	init_stepper@stepper_motor^0,c
  1694  001480  0E01               	movlw	high _joint_stepper
  1695  001482  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  1696  001484  0E00               	movlw	0
  1697  001486  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  1698  001488  0E00               	movlw	0
  1699  00148A  6E03               	movwf	init_stepper@current_coil^0,c
  1700  00148C  0E00               	movlw	0
  1701  00148E  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  1702  001490  0E00               	movlw	0
  1703  001492  6E05               	movwf	init_stepper@step_counter^0,c
  1704  001494  0E00               	movlw	0
  1705  001496  6E08               	movwf	(init_stepper@direction+1)^0,c
  1706  001498  0E01               	movlw	1
  1707  00149A  6E07               	movwf	init_stepper@direction^0,c
  1708  00149C  0EF5               	movlw	low _hex_joint_values
  1709  00149E  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  1710  0014A0  0E01               	movlw	high _hex_joint_values
  1711  0014A2  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  1712  0014A4  EC15  F037         	call	_init_stepper	;wreg free
  1713  0014A8                     
  1714                           ;main.c: 65:     init_stepper(&end_effector_stepper, 0, 0, 1, hex_end_effector_values);
  1715  0014A8  0EBF               	movlw	low _end_effector_stepper
  1716  0014AA  6E01               	movwf	init_stepper@stepper_motor^0,c
  1717  0014AC  0E01               	movlw	high _end_effector_stepper
  1718  0014AE  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  1719  0014B0  0E00               	movlw	0
  1720  0014B2  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  1721  0014B4  0E00               	movlw	0
  1722  0014B6  6E03               	movwf	init_stepper@current_coil^0,c
  1723  0014B8  0E00               	movlw	0
  1724  0014BA  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  1725  0014BC  0E00               	movlw	0
  1726  0014BE  6E05               	movwf	init_stepper@step_counter^0,c
  1727  0014C0  0E00               	movlw	0
  1728  0014C2  6E08               	movwf	(init_stepper@direction+1)^0,c
  1729  0014C4  0E01               	movlw	1
  1730  0014C6  6E07               	movwf	init_stepper@direction^0,c
  1731  0014C8  0EED               	movlw	low _hex_end_effector_values
  1732  0014CA  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  1733  0014CC  0E01               	movlw	high _hex_end_effector_values
  1734  0014CE  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  1735  0014D0  EC15  F037         	call	_init_stepper	;wreg free
  1736  0014D4                     
  1737                           ;main.c: 66:     init_stepper(&joint_dilutor_stepper, 0, 0, 1, hex_end_effector_values);
  1738  0014D4  0EB1               	movlw	low _joint_dilutor_stepper
  1739  0014D6  6E01               	movwf	init_stepper@stepper_motor^0,c
  1740  0014D8  0E01               	movlw	high _joint_dilutor_stepper
  1741  0014DA  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  1742  0014DC  0E00               	movlw	0
  1743  0014DE  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  1744  0014E0  0E00               	movlw	0
  1745  0014E2  6E03               	movwf	init_stepper@current_coil^0,c
  1746  0014E4  0E00               	movlw	0
  1747  0014E6  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  1748  0014E8  0E00               	movlw	0
  1749  0014EA  6E05               	movwf	init_stepper@step_counter^0,c
  1750  0014EC  0E00               	movlw	0
  1751  0014EE  6E08               	movwf	(init_stepper@direction+1)^0,c
  1752  0014F0  0E01               	movlw	1
  1753  0014F2  6E07               	movwf	init_stepper@direction^0,c
  1754  0014F4  0EED               	movlw	low _hex_end_effector_values
  1755  0014F6  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  1756  0014F8  0E01               	movlw	high _hex_end_effector_values
  1757  0014FA  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  1758  0014FC  EC15  F037         	call	_init_stepper	;wreg free
  1759  001500                     
  1760                           ;main.c: 67:     lcd_init();
  1761  001500  EC4D  F036         	call	_lcd_init	;wreg free
  1762  001504                     
  1763                           ;main.c: 68:     lcd_cmd(0x0C);
  1764  001504  0E0C               	movlw	12
  1765  001506  ECC1  F032         	call	_lcd_cmd
  1766  00150A                     
  1767                           ;main.c: 70:     lcd_cmd(0x01);
  1768  00150A  0E01               	movlw	1
  1769  00150C  ECC1  F032         	call	_lcd_cmd
  1770  001510                     
  1771                           ;main.c: 71:     lcd_cmd(0x80);
  1772  001510  0E80               	movlw	128
  1773  001512  ECC1  F032         	call	_lcd_cmd
  1774  001516                     
  1775                           ;main.c: 72:     lcd_str("Device has been reset");
  1776  001516  0E93               	movlw	low STR_9
  1777  001518  6E03               	movwf	lcd_str@str^0,c
  1778  00151A  0E7F               	movlw	high STR_9
  1779  00151C  6E04               	movwf	(lcd_str@str+1)^0,c
  1780  00151E  EC8C  F036         	call	_lcd_str	;wreg free
  1781  001522                     
  1782                           ;main.c: 74:     (INTCONbits.GIE = 1);
  1783  001522  8EF2               	bsf	242,7,c	;volatile
  1784  001524                     
  1785                           ;main.c: 76:     mix_counter = 0;
  1786  001524  0E00               	movlw	0
  1787  001526  0101               	movlb	1	; () banked
  1788  001528  6FAC               	movwf	(_mix_counter+1)& (0+255),b
  1789  00152A  0E00               	movlw	0
  1790  00152C  6FAB               	movwf	_mix_counter& (0+255),b
  1791  00152E                     l5560:
  1792  00152E  FFFF               	dw	65535	; assembler added errata NOP
  1793                           
  1794                           ;main.c: 79:         if (state_changed){
  1795  001530  0101               	movlb	1	; () banked
  1796  001532  51B0               	movf	_state_changed& (0+255),w,b
  1797  001534  B4D8               	btfsc	status,2,c
  1798  001536  EF9F  F00A         	goto	u6801
  1799  00153A  EFA2  F00A         	goto	u6800
  1800  00153E                     u6801:
  1801  00153E  FFFF               	dw	65535	; assembler added errata NOP
  1802  001540  EFF5  F00A         	goto	l5584
  1803  001544                     u6800:
  1804  001544  FFFF               	dw	65535	; assembler added errata NOP
  1805  001546                     
  1806                           ; BSR set to: 1
  1807                           ;main.c: 80:             const char* greet_str[80];;main.c: 81:             if (read_new
      +                          _char){
  1808  001546  51AE               	movf	_read_new_char& (0+255),w,b
  1809  001548  B4D8               	btfsc	status,2,c
  1810  00154A  EFA9  F00A         	goto	u6811
  1811  00154E  EFAC  F00A         	goto	u6810
  1812  001552                     u6811:
  1813  001552  FFFF               	dw	65535	; assembler added errata NOP
  1814  001554  EFE6  F00A         	goto	l5578
  1815  001558                     u6810:
  1816  001558  FFFF               	dw	65535	; assembler added errata NOP
  1817  00155A                     
  1818                           ; BSR set to: 1
  1819                           ;main.c: 82:                 rx_char = get_reg_value();
  1820  00155A  EC43  F032         	call	_get_reg_value	;wreg free
  1821  00155E  0101               	movlb	1	; () banked
  1822  001560  6FA2               	movwf	main@rx_char& (0+255),b
  1823  001562                     
  1824                           ; BSR set to: 1
  1825                           ;main.c: 85:                 state_translator_fpga_to_micro(rx_char, &state);
  1826  001562  0EDB               	movlw	low _state
  1827  001564  6E03               	movwf	state_translator_fpga_to_micro@state^0,c
  1828  001566  0E01               	movlw	high _state
  1829  001568  6E04               	movwf	(state_translator_fpga_to_micro@state+1)^0,c
  1830  00156A  51A2               	movf	main@rx_char& (0+255),w,b
  1831  00156C  EC4B  F01F         	call	_state_translator_fpga_to_micro
  1832  001570                     
  1833                           ;main.c: 86:                 read_new_char = 0;
  1834  001570  0E00               	movlw	0
  1835  001572  0101               	movlb	1	; () banked
  1836  001574  6FAE               	movwf	_read_new_char& (0+255),b
  1837  001576                     
  1838                           ; BSR set to: 1
  1839                           ;main.c: 87:                 snprintf(greet_str, sizeof(greet_str), "%s", state_msgs[sta
      +                          te]);
  1840  001576  0E00               	movlw	low main@greet_str
  1841  001578  0100               	movlb	0	; () banked
  1842  00157A  6FC2               	movwf	snprintf@s& (0+255),b
  1843  00157C  0E01               	movlw	high main@greet_str
  1844  00157E  6FC3               	movwf	(snprintf@s+1)& (0+255),b
  1845  001580  0E00               	movlw	0
  1846  001582  6FC5               	movwf	(snprintf@n+1)& (0+255),b
  1847  001584  0EA0               	movlw	160
  1848  001586  6FC4               	movwf	snprintf@n& (0+255),b
  1849  001588  0EFC               	movlw	low STR_10
  1850  00158A  6FC6               	movwf	snprintf@fmt& (0+255),b
  1851  00158C  0E7F               	movlw	high STR_10
  1852  00158E  6FC7               	movwf	(snprintf@fmt+1)& (0+255),b
  1853  001590  90D8               	bcf	status,0,c
  1854  001592  0101               	movlb	1	; () banked
  1855  001594  35DB               	rlcf	_state& (0+255),w,b
  1856  001596  6ED9               	movwf	fsr2l,c
  1857  001598  35DC               	rlcf	(_state+1)& (0+255),w,b
  1858  00159A  6EDA               	movwf	fsr2h,c
  1859  00159C  0EDD               	movlw	low _state_msgs
  1860  00159E  26D9               	addwf	fsr2l,f,c
  1861  0015A0  0E01               	movlw	high _state_msgs
  1862  0015A2  22DA               	addwfc	fsr2h,f,c
  1863  0015A4  CFDE F0C8          	movff	postinc2,?_snprintf+6
  1864  0015A8  CFDD F0C9          	movff	postdec2,?_snprintf+7
  1865  0015AC  EC16  F033         	call	_snprintf	;wreg free
  1866  0015B0                     
  1867                           ;main.c: 88:                 lcd_cmd(0x01);
  1868  0015B0  0E01               	movlw	1
  1869  0015B2  ECC1  F032         	call	_lcd_cmd
  1870  0015B6                     
  1871                           ;main.c: 89:                 lcd_cmd(0x80);
  1872  0015B6  0E80               	movlw	128
  1873  0015B8  ECC1  F032         	call	_lcd_cmd
  1874  0015BC                     
  1875                           ;main.c: 90:                 lcd_str(greet_str);
  1876  0015BC  0E00               	movlw	low main@greet_str
  1877  0015BE  6E03               	movwf	lcd_str@str^0,c
  1878  0015C0  0E01               	movlw	high main@greet_str
  1879  0015C2  6E04               	movwf	(lcd_str@str+1)^0,c
  1880  0015C4  EC8C  F036         	call	_lcd_str	;wreg free
  1881                           
  1882                           ;main.c: 91:             } else {
  1883  0015C8  EFEF  F00A         	goto	l5580
  1884  0015CC                     l5578:
  1885  0015CC  FFFF               	dw	65535	; assembler added errata NOP
  1886                           
  1887                           ; BSR set to: 1
  1888                           ;main.c: 92:                 serial_tx_char(state_translator_micro_to_fpga(&state));
  1889  0015CE  0EDB               	movlw	low _state
  1890  0015D0  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  1891  0015D2  0E01               	movlw	high _state
  1892  0015D4  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  1893  0015D6  ECD0  F036         	call	_state_translator_micro_to_fpga	;wreg free
  1894  0015DA  EC55  F032         	call	_serial_tx_char
  1895  0015DE                     l5580:
  1896  0015DE  FFFF               	dw	65535	; assembler added errata NOP
  1897                           
  1898                           ;main.c: 95:             state_changed = 0;
  1899  0015E0  0E00               	movlw	0
  1900  0015E2  0101               	movlb	1	; () banked
  1901  0015E4  6FB0               	movwf	_state_changed& (0+255),b
  1902  0015E6                     
  1903                           ; BSR set to: 1
  1904                           ;main.c: 96:             idle_msg_sent = 0;
  1905  0015E6  0E00               	movlw	0
  1906  0015E8  6FAF               	movwf	_idle_msg_sent& (0+255),b
  1907  0015EA                     l5584:
  1908  0015EA  FFFF               	dw	65535	; assembler added errata NOP
  1909                           
  1910                           ; BSR set to: 1
  1911                           ;main.c: 100:         if (state == 2){
  1912  0015EC  0E02               	movlw	2
  1913  0015EE  19DB               	xorwf	_state& (0+255),w,b
  1914  0015F0  11DC               	iorwf	(_state+1)& (0+255),w,b
  1915  0015F2  A4D8               	btfss	status,2,c
  1916  0015F4  EFFE  F00A         	goto	u6821
  1917  0015F8  EF01  F00B         	goto	u6820
  1918  0015FC                     u6821:
  1919  0015FC  FFFF               	dw	65535	; assembler added errata NOP
  1920  0015FE  EF4A  F00B         	goto	l139
  1921  001602                     u6820:
  1922  001602  FFFF               	dw	65535	; assembler added errata NOP
  1923  001604                     
  1924                           ; BSR set to: 1
  1925                           ;main.c: 101:             LATAbits.LATA1 = 1;
  1926  001604  8289               	bsf	137,1,c	;volatile
  1927  001606                     
  1928                           ; BSR set to: 1
  1929                           ;main.c: 102:             if (move_to_trash && trash_counter < 100){
  1930  001606  51A3               	movf	_move_to_trash& (0+255),w,b
  1931  001608  11A4               	iorwf	(_move_to_trash+1)& (0+255),w,b
  1932  00160A  B4D8               	btfsc	status,2,c
  1933  00160C  EF0A  F00B         	goto	u6831
  1934  001610  EF0D  F00B         	goto	u6830
  1935  001614                     u6831:
  1936  001614  FFFF               	dw	65535	; assembler added errata NOP
  1937  001616  EF22  F00B         	goto	l5594
  1938  00161A                     u6830:
  1939  00161A  FFFF               	dw	65535	; assembler added errata NOP
  1940  00161C                     
  1941                           ; BSR set to: 1
  1942  00161C  BFA6               	btfsc	(_trash_counter+1)& (0+255),7,b
  1943  00161E  EF1D  F00B         	goto	u6840
  1944  001622  51A6               	movf	(_trash_counter+1)& (0+255),w,b
  1945  001624  E107               	bnz	u6841
  1946  001626  0E64               	movlw	100
  1947  001628  5DA5               	subwf	_trash_counter& (0+255),w,b
  1948  00162A  B0D8               	btfsc	status,0,c
  1949  00162C  EF1A  F00B         	goto	u6841
  1950  001630  EF1D  F00B         	goto	u6840
  1951  001634                     u6841:
  1952  001634  FFFF               	dw	65535	; assembler added errata NOP
  1953  001636  EF22  F00B         	goto	l5594
  1954  00163A                     u6840:
  1955  00163A  FFFF               	dw	65535	; assembler added errata NOP
  1956  00163C                     
  1957                           ; BSR set to: 1
  1958                           ;main.c: 103:                 trash_counter++;
  1959  00163C  4BA5               	infsnz	_trash_counter& (0+255),f,b
  1960  00163E  2BA6               	incf	(_trash_counter+1)& (0+255),f,b
  1961                           
  1962                           ;main.c: 104:             } else if (move_to_trash && trash_counter >= 100){
  1963  001640  EF97  F00A         	goto	l5560
  1964  001644                     l5594:
  1965  001644  FFFF               	dw	65535	; assembler added errata NOP
  1966                           
  1967                           ; BSR set to: 1
  1968  001646  51A3               	movf	_move_to_trash& (0+255),w,b
  1969  001648  11A4               	iorwf	(_move_to_trash+1)& (0+255),w,b
  1970  00164A  B4D8               	btfsc	status,2,c
  1971  00164C  EF2A  F00B         	goto	u6851
  1972  001650  EF2D  F00B         	goto	u6850
  1973  001654                     u6851:
  1974  001654  FFFF               	dw	65535	; assembler added errata NOP
  1975  001656  EF59  F00B         	goto	l5602
  1976  00165A                     u6850:
  1977  00165A  FFFF               	dw	65535	; assembler added errata NOP
  1978  00165C                     
  1979                           ; BSR set to: 1
  1980  00165C  BFA6               	btfsc	(_trash_counter+1)& (0+255),7,b
  1981  00165E  EF3A  F00B         	goto	u6861
  1982  001662  51A6               	movf	(_trash_counter+1)& (0+255),w,b
  1983  001664  E10A               	bnz	u6860
  1984  001666  0E64               	movlw	100
  1985  001668  5DA5               	subwf	_trash_counter& (0+255),w,b
  1986  00166A  A0D8               	btfss	status,0,c
  1987  00166C  EF3A  F00B         	goto	u6861
  1988  001670  EF3D  F00B         	goto	u6860
  1989  001674                     u6861:
  1990  001674  FFFF               	dw	65535	; assembler added errata NOP
  1991  001676  EF59  F00B         	goto	l5602
  1992  00167A                     u6860:
  1993  00167A  FFFF               	dw	65535	; assembler added errata NOP
  1994  00167C                     
  1995                           ; BSR set to: 1
  1996                           ;main.c: 105:                 move_to_trash = 0;
  1997  00167C  0E00               	movlw	0
  1998  00167E  6FA4               	movwf	(_move_to_trash+1)& (0+255),b
  1999  001680  0E00               	movlw	0
  2000  001682  6FA3               	movwf	_move_to_trash& (0+255),b
  2001                           
  2002                           ;main.c: 106:                 state = 0;
  2003  001684  0E00               	movlw	0
  2004  001686  6FDC               	movwf	(_state+1)& (0+255),b
  2005  001688  0E00               	movlw	0
  2006  00168A  6FDB               	movwf	_state& (0+255),b
  2007                           
  2008                           ;main.c: 107:                 state_changed = 1;
  2009  00168C  0E01               	movlw	1
  2010  00168E  6FB0               	movwf	_state_changed& (0+255),b
  2011  001690  EF97  F00A         	goto	l5560
  2012  001694                     l139:
  2013  001694  FFFF               	dw	65535	; assembler added errata NOP
  2014                           
  2015                           ; BSR set to: 1
  2016                           ;main.c: 110:             LATAbits.LATA1 = 0;
  2017  001696  9289               	bcf	137,1,c	;volatile
  2018  001698                     
  2019                           ; BSR set to: 1
  2020                           ;main.c: 111:             if (state == 0) {
  2021  001698  51DB               	movf	_state& (0+255),w,b
  2022  00169A  11DC               	iorwf	(_state+1)& (0+255),w,b
  2023  00169C  A4D8               	btfss	status,2,c
  2024  00169E  EF53  F00B         	goto	u6871
  2025  0016A2  EF56  F00B         	goto	u6870
  2026  0016A6                     u6871:
  2027  0016A6  FFFF               	dw	65535	; assembler added errata NOP
  2028  0016A8  EF5C  F00B         	goto	l5604
  2029  0016AC                     u6870:
  2030  0016AC  FFFF               	dw	65535	; assembler added errata NOP
  2031  0016AE  EF97  F00A         	goto	l5560
  2032  0016B2                     l5602:
  2033  0016B2  FFFF               	dw	65535	; assembler added errata NOP
  2034                           
  2035                           ;main.c: 113:             } else if (state == 1){
  2036  0016B4  EF97  F00A         	goto	l5560
  2037  0016B8                     l5604:
  2038  0016B8  FFFF               	dw	65535	; assembler added errata NOP
  2039                           
  2040                           ; BSR set to: 1
  2041  0016BA  05DB               	decf	_state& (0+255),w,b
  2042  0016BC  11DC               	iorwf	(_state+1)& (0+255),w,b
  2043  0016BE  A4D8               	btfss	status,2,c
  2044  0016C0  EF64  F00B         	goto	u6881
  2045  0016C4  EF67  F00B         	goto	u6880
  2046  0016C8                     u6881:
  2047  0016C8  FFFF               	dw	65535	; assembler added errata NOP
  2048  0016CA  EF72  F00B         	goto	l5608
  2049  0016CE                     u6880:
  2050  0016CE  FFFF               	dw	65535	; assembler added errata NOP
  2051  0016D0                     l5606:
  2052  0016D0  FFFF               	dw	65535	; assembler added errata NOP
  2053                           
  2054                           ;main.c: 114:                 state = 2;
  2055  0016D2  0E00               	movlw	0
  2056  0016D4  0101               	movlb	1	; () banked
  2057  0016D6  6FDC               	movwf	(_state+1)& (0+255),b
  2058  0016D8  0E02               	movlw	2
  2059  0016DA  6FDB               	movwf	_state& (0+255),b
  2060                           
  2061                           ;main.c: 115:                 state_changed = 1;
  2062  0016DC  0E01               	movlw	1
  2063  0016DE  6FB0               	movwf	_state_changed& (0+255),b
  2064                           
  2065                           ;main.c: 116:             } else if (state == 3){
  2066  0016E0  EF97  F00A         	goto	l5560
  2067  0016E4                     l5608:
  2068  0016E4  FFFF               	dw	65535	; assembler added errata NOP
  2069                           
  2070                           ; BSR set to: 1
  2071  0016E6  0E03               	movlw	3
  2072  0016E8  19DB               	xorwf	_state& (0+255),w,b
  2073  0016EA  11DC               	iorwf	(_state+1)& (0+255),w,b
  2074  0016EC  A4D8               	btfss	status,2,c
  2075  0016EE  EF7B  F00B         	goto	u6891
  2076  0016F2  EF7E  F00B         	goto	u6890
  2077  0016F6                     u6891:
  2078  0016F6  FFFF               	dw	65535	; assembler added errata NOP
  2079  0016F8  EF87  F00B         	goto	l5612
  2080  0016FC                     u6890:
  2081  0016FC  FFFF               	dw	65535	; assembler added errata NOP
  2082  0016FE                     
  2083                           ; BSR set to: 1
  2084                           ;main.c: 117:                 state = 9;
  2085  0016FE  0E00               	movlw	0
  2086  001700  6FDC               	movwf	(_state+1)& (0+255),b
  2087  001702  0E09               	movlw	9
  2088  001704  6FDB               	movwf	_state& (0+255),b
  2089                           
  2090                           ;main.c: 118:                 state_changed = 1;
  2091  001706  0E01               	movlw	1
  2092  001708  6FB0               	movwf	_state_changed& (0+255),b
  2093                           
  2094                           ;main.c: 119:             } else if (state == 9){
  2095  00170A  EF97  F00A         	goto	l5560
  2096  00170E                     l5612:
  2097  00170E  FFFF               	dw	65535	; assembler added errata NOP
  2098                           
  2099                           ; BSR set to: 1
  2100  001710  0E09               	movlw	9
  2101  001712  19DB               	xorwf	_state& (0+255),w,b
  2102  001714  11DC               	iorwf	(_state+1)& (0+255),w,b
  2103  001716  A4D8               	btfss	status,2,c
  2104  001718  EF90  F00B         	goto	u6901
  2105  00171C  EF93  F00B         	goto	u6900
  2106  001720                     u6901:
  2107  001720  FFFF               	dw	65535	; assembler added errata NOP
  2108  001722  EFD4  F00B         	goto	l5626
  2109  001726                     u6900:
  2110  001726  FFFF               	dw	65535	; assembler added errata NOP
  2111  001728                     
  2112                           ; BSR set to: 1
  2113                           ;main.c: 120:                 if (timer_done){
  2114  001728  51AD               	movf	_timer_done& (0+255),w,b
  2115  00172A  B4D8               	btfsc	status,2,c
  2116  00172C  EF9A  F00B         	goto	u6911
  2117  001730  EF9D  F00B         	goto	u6910
  2118  001734                     u6911:
  2119  001734  FFFF               	dw	65535	; assembler added errata NOP
  2120  001736  EFBD  F00B         	goto	l151
  2121  00173A                     u6910:
  2122  00173A  FFFF               	dw	65535	; assembler added errata NOP
  2123  00173C                     
  2124                           ; BSR set to: 1
  2125                           ;main.c: 121:                     if(check_temperature(get_temperature())){
  2126  00173C  ECD8  F035         	call	_get_temperature	;wreg free
  2127  001740  C0D4  F0D6         	movff	?_get_temperature,check_temperature@temp_to_be_checked
  2128  001744  C0D5  F0D7         	movff	?_get_temperature+1,check_temperature@temp_to_be_checked+1
  2129  001748  ECA3  F038         	call	_check_temperature	;wreg free
  2130  00174C  0100               	movlb	0	; () banked
  2131  00174E  51D6               	movf	?_check_temperature& (0+255),w,b
  2132  001750  11D7               	iorwf	(?_check_temperature+1)& (0+255),w,b
  2133  001752  B4D8               	btfsc	status,2,c
  2134  001754  EFAE  F00B         	goto	u6921
  2135  001758  EFB1  F00B         	goto	u6920
  2136  00175C                     u6921:
  2137  00175C  FFFF               	dw	65535	; assembler added errata NOP
  2138  00175E  EF59  F00B         	goto	l5602
  2139  001762                     u6920:
  2140  001762  FFFF               	dw	65535	; assembler added errata NOP
  2141  001764                     
  2142                           ; BSR set to: 0
  2143                           ;main.c: 122:                         state = 2;
  2144  001764  0E00               	movlw	0
  2145  001766  0101               	movlb	1	; () banked
  2146  001768  6FDC               	movwf	(_state+1)& (0+255),b
  2147  00176A  0E02               	movlw	2
  2148  00176C  6FDB               	movwf	_state& (0+255),b
  2149                           
  2150                           ;main.c: 123:                         state_changed = 1;
  2151  00176E  0E01               	movlw	1
  2152  001770  6FB0               	movwf	_state_changed& (0+255),b
  2153                           
  2154                           ;main.c: 124:                         timer_done = 0;
  2155  001772  0E00               	movlw	0
  2156  001774  6FAD               	movwf	_timer_done& (0+255),b
  2157                           
  2158                           ;main.c: 125:                     } else{
  2159  001776  EF97  F00A         	goto	l5560
  2160  00177A                     l151:
  2161  00177A  FFFF               	dw	65535	; assembler added errata NOP
  2162                           
  2163                           ; BSR set to: 1
  2164                           ;main.c: 130:                     if (T0CONbits.TMR0ON == 0){
  2165  00177C  BED5               	btfsc	213,7,c	;volatile
  2166  00177E  EFC3  F00B         	goto	u6931
  2167  001782  EFC6  F00B         	goto	u6930
  2168  001786                     u6931:
  2169  001786  FFFF               	dw	65535	; assembler added errata NOP
  2170  001788  EFCB  F00B         	goto	l5624
  2171  00178C                     u6930:
  2172  00178C  FFFF               	dw	65535	; assembler added errata NOP
  2173  00178E                     
  2174                           ; BSR set to: 1
  2175                           ;main.c: 131:                         wait_for_zero();
  2176  00178E  EC98  F032         	call	_wait_for_zero	;wreg free
  2177  001792                     
  2178                           ;main.c: 132:                         init_timer_0();
  2179  001792  EC75  F032         	call	_init_timer_0	;wreg free
  2180  001796                     l5624:
  2181  001796  FFFF               	dw	65535	; assembler added errata NOP
  2182                           
  2183                           ;main.c: 134:                     int current_temp = get_temperature();
  2184  001798  ECD8  F035         	call	_get_temperature	;wreg free
  2185  00179C  C0D4  F1A0         	movff	?_get_temperature,main@current_temp
  2186  0017A0  C0D5  F1A1         	movff	?_get_temperature+1,main@current_temp+1
  2187  0017A4  EF97  F00A         	goto	l5560
  2188  0017A8                     l5626:
  2189  0017A8  FFFF               	dw	65535	; assembler added errata NOP
  2190                           
  2191                           ; BSR set to: 1
  2192  0017AA  0E04               	movlw	4
  2193  0017AC  19DB               	xorwf	_state& (0+255),w,b
  2194  0017AE  11DC               	iorwf	(_state+1)& (0+255),w,b
  2195  0017B0  A4D8               	btfss	status,2,c
  2196  0017B2  EFDD  F00B         	goto	u6941
  2197  0017B6  EFE0  F00B         	goto	u6940
  2198  0017BA                     u6941:
  2199  0017BA  FFFF               	dw	65535	; assembler added errata NOP
  2200  0017BC  EFE9  F00B         	goto	l5630
  2201  0017C0                     u6940:
  2202  0017C0  FFFF               	dw	65535	; assembler added errata NOP
  2203  0017C2                     
  2204                           ; BSR set to: 1
  2205                           ;main.c: 138:                 state = 10;
  2206  0017C2  0E00               	movlw	0
  2207  0017C4  6FDC               	movwf	(_state+1)& (0+255),b
  2208  0017C6  0E0A               	movlw	10
  2209  0017C8  6FDB               	movwf	_state& (0+255),b
  2210                           
  2211                           ;main.c: 139:                 state_changed = 1;
  2212  0017CA  0E01               	movlw	1
  2213  0017CC  6FB0               	movwf	_state_changed& (0+255),b
  2214                           
  2215                           ;main.c: 140:             }else if (state == 10){
  2216  0017CE  EF97  F00A         	goto	l5560
  2217  0017D2                     l5630:
  2218  0017D2  FFFF               	dw	65535	; assembler added errata NOP
  2219                           
  2220                           ; BSR set to: 1
  2221  0017D4  0E0A               	movlw	10
  2222  0017D6  19DB               	xorwf	_state& (0+255),w,b
  2223  0017D8  11DC               	iorwf	(_state+1)& (0+255),w,b
  2224  0017DA  A4D8               	btfss	status,2,c
  2225  0017DC  EFF2  F00B         	goto	u6951
  2226  0017E0  EFF5  F00B         	goto	u6950
  2227  0017E4                     u6951:
  2228  0017E4  FFFF               	dw	65535	; assembler added errata NOP
  2229  0017E6  EF91  F00C         	goto	l5652
  2230  0017EA                     u6950:
  2231  0017EA  FFFF               	dw	65535	; assembler added errata NOP
  2232  0017EC                     
  2233                           ; BSR set to: 1
  2234                           ;main.c: 141:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2235  0017EC  0E03               	movlw	3
  2236  0017EE  0100               	movlb	0	; () banked
  2237  0017F0  6FDD               	movwf	??_main& (0+255),b
  2238  0017F2  0EEB               	movlw	235
  2239  0017F4                     u7257:
  2240  0017F4  FFFF               	dw	65535	; errata NOP
  2241  0017F6  2EE8               	decfsz	wreg,f,c
  2242  0017F8  D7FD               	bra	u7257
  2243  0017FA  2FDD               	decfsz	??_main& (0+255),f,b
  2244  0017FC  D7FB               	bra	u7257
  2245  0017FE  D000               	nop2	
  2246  001800  F000               	nop	
  2247  001802                     
  2248                           ;main.c: 142:                 if (joint_homed && reach_goal(&joint_stepper, 50)){
  2249  001802  0101               	movlb	1	; () banked
  2250  001804  51A9               	movf	_joint_homed& (0+255),w,b
  2251  001806  11AA               	iorwf	(_joint_homed+1)& (0+255),w,b
  2252  001808  B4D8               	btfsc	status,2,c
  2253  00180A  EF09  F00C         	goto	u6961
  2254  00180E  EF0C  F00C         	goto	u6960
  2255  001812                     u6961:
  2256  001812  FFFF               	dw	65535	; assembler added errata NOP
  2257  001814  EF27  F00C         	goto	l5640
  2258  001818                     u6960:
  2259  001818  FFFF               	dw	65535	; assembler added errata NOP
  2260  00181A                     
  2261                           ; BSR set to: 1
  2262  00181A  0ECD               	movlw	low _joint_stepper
  2263  00181C  6E07               	movwf	reach_goal@stepper_motor^0,c
  2264  00181E  0E01               	movlw	high _joint_stepper
  2265  001820  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2266  001822  0E00               	movlw	0
  2267  001824  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2268  001826  0E32               	movlw	50
  2269  001828  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2270  00182A  EC11  F036         	call	_reach_goal	;wreg free
  2271  00182E  5007               	movf	?_reach_goal^0,w,c
  2272  001830  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2273  001832  B4D8               	btfsc	status,2,c
  2274  001834  EF1E  F00C         	goto	u6971
  2275  001838  EF21  F00C         	goto	u6970
  2276  00183C                     u6971:
  2277  00183C  FFFF               	dw	65535	; assembler added errata NOP
  2278  00183E  EF27  F00C         	goto	l5640
  2279  001842                     u6970:
  2280  001842  FFFF               	dw	65535	; assembler added errata NOP
  2281  001844                     
  2282                           ;main.c: 143:                     joint_homed = 0;
  2283  001844  0E00               	movlw	0
  2284  001846  0101               	movlb	1	; () banked
  2285  001848  6FAA               	movwf	(_joint_homed+1)& (0+255),b
  2286  00184A  0E00               	movlw	0
  2287  00184C  6FA9               	movwf	_joint_homed& (0+255),b
  2288  00184E                     l5640:
  2289  00184E  FFFF               	dw	65535	; assembler added errata NOP
  2290                           
  2291                           ;main.c: 145:                 if (!joint_homed && end_effector_homed && reach_goal(&end_
      +                          effector_stepper, 100)){
  2292  001850  0101               	movlb	1	; () banked
  2293  001852  51A9               	movf	_joint_homed& (0+255),w,b
  2294  001854  11AA               	iorwf	(_joint_homed+1)& (0+255),w,b
  2295  001856  A4D8               	btfss	status,2,c
  2296  001858  EF30  F00C         	goto	u6981
  2297  00185C  EF33  F00C         	goto	u6980
  2298  001860                     u6981:
  2299  001860  FFFF               	dw	65535	; assembler added errata NOP
  2300  001862  EF59  F00C         	goto	l5648
  2301  001866                     u6980:
  2302  001866  FFFF               	dw	65535	; assembler added errata NOP
  2303  001868                     
  2304                           ; BSR set to: 1
  2305  001868  51A7               	movf	_end_effector_homed& (0+255),w,b
  2306  00186A  11A8               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  2307  00186C  B4D8               	btfsc	status,2,c
  2308  00186E  EF3B  F00C         	goto	u6991
  2309  001872  EF3E  F00C         	goto	u6990
  2310  001876                     u6991:
  2311  001876  FFFF               	dw	65535	; assembler added errata NOP
  2312  001878  EF59  F00C         	goto	l5648
  2313  00187C                     u6990:
  2314  00187C  FFFF               	dw	65535	; assembler added errata NOP
  2315  00187E                     
  2316                           ; BSR set to: 1
  2317  00187E  0EBF               	movlw	low _end_effector_stepper
  2318  001880  6E07               	movwf	reach_goal@stepper_motor^0,c
  2319  001882  0E01               	movlw	high _end_effector_stepper
  2320  001884  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2321  001886  0E00               	movlw	0
  2322  001888  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2323  00188A  0E64               	movlw	100
  2324  00188C  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2325  00188E  EC11  F036         	call	_reach_goal	;wreg free
  2326  001892  5007               	movf	?_reach_goal^0,w,c
  2327  001894  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2328  001896  B4D8               	btfsc	status,2,c
  2329  001898  EF50  F00C         	goto	u7001
  2330  00189C  EF53  F00C         	goto	u7000
  2331  0018A0                     u7001:
  2332  0018A0  FFFF               	dw	65535	; assembler added errata NOP
  2333  0018A2  EF59  F00C         	goto	l5648
  2334  0018A6                     u7000:
  2335  0018A6  FFFF               	dw	65535	; assembler added errata NOP
  2336  0018A8                     
  2337                           ;main.c: 146:                     end_effector_homed = 0;
  2338  0018A8  0E00               	movlw	0
  2339  0018AA  0101               	movlb	1	; () banked
  2340  0018AC  6FA8               	movwf	(_end_effector_homed+1)& (0+255),b
  2341  0018AE  0E00               	movlw	0
  2342  0018B0  6FA7               	movwf	_end_effector_homed& (0+255),b
  2343  0018B2                     l5648:
  2344  0018B2  FFFF               	dw	65535	; assembler added errata NOP
  2345                           
  2346                           ;main.c: 148:                 if (!end_effector_homed * !joint_homed){
  2347  0018B4  0101               	movlb	1	; () banked
  2348  0018B6  51A7               	movf	_end_effector_homed& (0+255),w,b
  2349  0018B8  11A8               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  2350  0018BA  B4D8               	btfsc	status,2,c
  2351  0018BC  EF62  F00C         	goto	u7011
  2352  0018C0  EF66  F00C         	goto	u7010
  2353  0018C4                     u7011:
  2354  0018C4  FFFF               	dw	65535	; assembler added errata NOP
  2355  0018C6  0E01               	movlw	1
  2356  0018C8  EF68  F00C         	goto	u7020
  2357  0018CC                     u7010:
  2358  0018CC  FFFF               	dw	65535	; assembler added errata NOP
  2359  0018CE  0E00               	movlw	0
  2360  0018D0                     u7020:
  2361  0018D0  FFFF               	dw	65535	; assembler added errata NOP
  2362  0018D2  6E01               	movwf	___wmul@multiplier^0,c
  2363  0018D4  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2364  0018D6  51A9               	movf	_joint_homed& (0+255),w,b
  2365  0018D8  11AA               	iorwf	(_joint_homed+1)& (0+255),w,b
  2366  0018DA  B4D8               	btfsc	status,2,c
  2367  0018DC  EF72  F00C         	goto	u7031
  2368  0018E0  EF76  F00C         	goto	u7030
  2369  0018E4                     u7031:
  2370  0018E4  FFFF               	dw	65535	; assembler added errata NOP
  2371  0018E6  0E01               	movlw	1
  2372  0018E8  EF78  F00C         	goto	u7040
  2373  0018EC                     u7030:
  2374  0018EC  FFFF               	dw	65535	; assembler added errata NOP
  2375  0018EE  0E00               	movlw	0
  2376  0018F0                     u7040:
  2377  0018F0  FFFF               	dw	65535	; assembler added errata NOP
  2378  0018F2  6E03               	movwf	___wmul@multiplicand^0,c
  2379  0018F4  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  2380  0018F6  ECEB  F032         	call	___wmul	;wreg free
  2381  0018FA  5001               	movf	?___wmul^0,w,c
  2382  0018FC  1002               	iorwf	(?___wmul+1)^0,w,c
  2383  0018FE  B4D8               	btfsc	status,2,c
  2384  001900  EF84  F00C         	goto	u7051
  2385  001904  EF87  F00C         	goto	u7050
  2386  001908                     u7051:
  2387  001908  FFFF               	dw	65535	; assembler added errata NOP
  2388  00190A  EF97  F00A         	goto	l5560
  2389  00190E                     u7050:
  2390  00190E  FFFF               	dw	65535	; assembler added errata NOP
  2391  001910                     
  2392                           ;main.c: 149:                     state = 5;
  2393  001910  0E00               	movlw	0
  2394  001912  0101               	movlb	1	; () banked
  2395  001914  6FDC               	movwf	(_state+1)& (0+255),b
  2396  001916  0E05               	movlw	5
  2397  001918  6FDB               	movwf	_state& (0+255),b
  2398                           
  2399                           ;main.c: 150:                     state_changed = 1;
  2400  00191A  0E01               	movlw	1
  2401  00191C  6FB0               	movwf	_state_changed& (0+255),b
  2402  00191E  EF97  F00A         	goto	l5560
  2403  001922                     l5652:
  2404  001922  FFFF               	dw	65535	; assembler added errata NOP
  2405                           
  2406                           ; BSR set to: 1
  2407  001924  0E05               	movlw	5
  2408  001926  19DB               	xorwf	_state& (0+255),w,b
  2409  001928  11DC               	iorwf	(_state+1)& (0+255),w,b
  2410  00192A  A4D8               	btfss	status,2,c
  2411  00192C  EF9A  F00C         	goto	u7061
  2412  001930  EF9D  F00C         	goto	u7060
  2413  001934                     u7061:
  2414  001934  FFFF               	dw	65535	; assembler added errata NOP
  2415  001936  EF05  F00D         	goto	l5672
  2416  00193A                     u7060:
  2417  00193A  FFFF               	dw	65535	; assembler added errata NOP
  2418  00193C                     
  2419                           ; BSR set to: 1
  2420                           ;main.c: 153:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2421  00193C  0E03               	movlw	3
  2422  00193E  0100               	movlb	0	; () banked
  2423  001940  6FDD               	movwf	??_main& (0+255),b
  2424  001942  0EEB               	movlw	235
  2425  001944                     u7267:
  2426  001944  FFFF               	dw	65535	; errata NOP
  2427  001946  2EE8               	decfsz	wreg,f,c
  2428  001948  D7FD               	bra	u7267
  2429  00194A  2FDD               	decfsz	??_main& (0+255),f,b
  2430  00194C  D7FB               	bra	u7267
  2431  00194E  D000               	nop2	
  2432  001950  F000               	nop	
  2433  001952                     
  2434                           ;main.c: 154:                 if (reach_goal(&joint_stepper, 100)) {
  2435  001952  0ECD               	movlw	low _joint_stepper
  2436  001954  6E07               	movwf	reach_goal@stepper_motor^0,c
  2437  001956  0E01               	movlw	high _joint_stepper
  2438  001958  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2439  00195A  0E00               	movlw	0
  2440  00195C  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2441  00195E  0E64               	movlw	100
  2442  001960  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2443  001962  EC11  F036         	call	_reach_goal	;wreg free
  2444  001966  5007               	movf	?_reach_goal^0,w,c
  2445  001968  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2446  00196A  B4D8               	btfsc	status,2,c
  2447  00196C  EFBA  F00C         	goto	u7071
  2448  001970  EFBD  F00C         	goto	u7070
  2449  001974                     u7071:
  2450  001974  FFFF               	dw	65535	; assembler added errata NOP
  2451  001976  EFC7  F00C         	goto	l5662
  2452  00197A                     u7070:
  2453  00197A  FFFF               	dw	65535	; assembler added errata NOP
  2454  00197C                     
  2455                           ;main.c: 155:                     change_direction(&joint_stepper);
  2456  00197C  0ECD               	movlw	low _joint_stepper
  2457  00197E  6E01               	movwf	change_direction@stepper_motor^0,c
  2458  001980  0E01               	movlw	high _joint_stepper
  2459  001982  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2460  001984  EC30  F033         	call	_change_direction	;wreg free
  2461  001988                     
  2462                           ;main.c: 156:                     mix_counter++;
  2463  001988  0101               	movlb	1	; () banked
  2464  00198A  4BAB               	infsnz	_mix_counter& (0+255),f,b
  2465  00198C  2BAC               	incf	(_mix_counter+1)& (0+255),f,b
  2466  00198E                     l5662:
  2467  00198E  FFFF               	dw	65535	; assembler added errata NOP
  2468                           
  2469                           ;main.c: 159:                 if (mix_counter >= 20){
  2470  001990  0101               	movlb	1	; () banked
  2471  001992  BFAC               	btfsc	(_mix_counter+1)& (0+255),7,b
  2472  001994  EFD5  F00C         	goto	u7081
  2473  001998  51AC               	movf	(_mix_counter+1)& (0+255),w,b
  2474  00199A  E10A               	bnz	u7080
  2475  00199C  0E14               	movlw	20
  2476  00199E  5DAB               	subwf	_mix_counter& (0+255),w,b
  2477  0019A0  A0D8               	btfss	status,0,c
  2478  0019A2  EFD5  F00C         	goto	u7081
  2479  0019A6  EFD8  F00C         	goto	u7080
  2480  0019AA                     u7081:
  2481  0019AA  FFFF               	dw	65535	; assembler added errata NOP
  2482  0019AC  EF97  F00A         	goto	l5560
  2483  0019B0                     u7080:
  2484  0019B0  FFFF               	dw	65535	; assembler added errata NOP
  2485  0019B2                     
  2486                           ; BSR set to: 1
  2487                           ;main.c: 160:                     state = 6;
  2488  0019B2  0E00               	movlw	0
  2489  0019B4  6FDC               	movwf	(_state+1)& (0+255),b
  2490  0019B6  0E06               	movlw	6
  2491  0019B8  6FDB               	movwf	_state& (0+255),b
  2492                           
  2493                           ;main.c: 161:                     mix_counter = 0;
  2494  0019BA  0E00               	movlw	0
  2495  0019BC  6FAC               	movwf	(_mix_counter+1)& (0+255),b
  2496  0019BE  0E00               	movlw	0
  2497  0019C0  6FAB               	movwf	_mix_counter& (0+255),b
  2498  0019C2                     
  2499                           ; BSR set to: 1
  2500                           ;main.c: 162:                     init_stepper(&joint_stepper, 0, 0, 1, hex_joint_values
      +                          );
  2501  0019C2  0ECD               	movlw	low _joint_stepper
  2502  0019C4  6E01               	movwf	init_stepper@stepper_motor^0,c
  2503  0019C6  0E01               	movlw	high _joint_stepper
  2504  0019C8  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  2505  0019CA  0E00               	movlw	0
  2506  0019CC  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  2507  0019CE  0E00               	movlw	0
  2508  0019D0  6E03               	movwf	init_stepper@current_coil^0,c
  2509  0019D2  0E00               	movlw	0
  2510  0019D4  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  2511  0019D6  0E00               	movlw	0
  2512  0019D8  6E05               	movwf	init_stepper@step_counter^0,c
  2513  0019DA  0E00               	movlw	0
  2514  0019DC  6E08               	movwf	(init_stepper@direction+1)^0,c
  2515  0019DE  0E01               	movlw	1
  2516  0019E0  6E07               	movwf	init_stepper@direction^0,c
  2517  0019E2  0EF5               	movlw	low _hex_joint_values
  2518  0019E4  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  2519  0019E6  0E01               	movlw	high _hex_joint_values
  2520  0019E8  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  2521  0019EA  EC15  F037         	call	_init_stepper	;wreg free
  2522  0019EE                     
  2523                           ;main.c: 163:                     change_direction(&joint_stepper);
  2524  0019EE  0ECD               	movlw	low _joint_stepper
  2525  0019F0  6E01               	movwf	change_direction@stepper_motor^0,c
  2526  0019F2  0E01               	movlw	high _joint_stepper
  2527  0019F4  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2528  0019F6  EC30  F033         	call	_change_direction	;wreg free
  2529  0019FA                     
  2530                           ;main.c: 164:                     change_direction(&end_effector_stepper);
  2531  0019FA  0EBF               	movlw	low _end_effector_stepper
  2532  0019FC  6E01               	movwf	change_direction@stepper_motor^0,c
  2533  0019FE  0E01               	movlw	high _end_effector_stepper
  2534  001A00  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2535  001A02  EC30  F033         	call	_change_direction	;wreg free
  2536  001A06  EF97  F00A         	goto	l5560
  2537  001A0A                     l5672:
  2538  001A0A  FFFF               	dw	65535	; assembler added errata NOP
  2539                           
  2540                           ; BSR set to: 1
  2541  001A0C  0E06               	movlw	6
  2542  001A0E  19DB               	xorwf	_state& (0+255),w,b
  2543  001A10  11DC               	iorwf	(_state+1)& (0+255),w,b
  2544  001A12  A4D8               	btfss	status,2,c
  2545  001A14  EF0E  F00D         	goto	u7091
  2546  001A18  EF11  F00D         	goto	u7090
  2547  001A1C                     u7091:
  2548  001A1C  FFFF               	dw	65535	; assembler added errata NOP
  2549  001A1E  EF8D  F00D         	goto	l5694
  2550  001A22                     u7090:
  2551  001A22  FFFF               	dw	65535	; assembler added errata NOP
  2552  001A24                     
  2553                           ; BSR set to: 1
  2554                           ;main.c: 167:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2555  001A24  0E03               	movlw	3
  2556  001A26  0100               	movlb	0	; () banked
  2557  001A28  6FDD               	movwf	??_main& (0+255),b
  2558  001A2A  0EEB               	movlw	235
  2559  001A2C                     u7277:
  2560  001A2C  FFFF               	dw	65535	; errata NOP
  2561  001A2E  2EE8               	decfsz	wreg,f,c
  2562  001A30  D7FD               	bra	u7277
  2563  001A32  2FDD               	decfsz	??_main& (0+255),f,b
  2564  001A34  D7FB               	bra	u7277
  2565  001A36  D000               	nop2	
  2566  001A38  F000               	nop	
  2567  001A3A                     
  2568                           ;main.c: 169:                 if (!end_effector_homed && reach_goal(&end_effector_steppe
      +                          r, 100)){
  2569  001A3A  0101               	movlb	1	; () banked
  2570  001A3C  51A7               	movf	_end_effector_homed& (0+255),w,b
  2571  001A3E  11A8               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  2572  001A40  A4D8               	btfss	status,2,c
  2573  001A42  EF25  F00D         	goto	u7101
  2574  001A46  EF28  F00D         	goto	u7100
  2575  001A4A                     u7101:
  2576  001A4A  FFFF               	dw	65535	; assembler added errata NOP
  2577  001A4C  EF43  F00D         	goto	l5682
  2578  001A50                     u7100:
  2579  001A50  FFFF               	dw	65535	; assembler added errata NOP
  2580  001A52                     
  2581                           ; BSR set to: 1
  2582  001A52  0EBF               	movlw	low _end_effector_stepper
  2583  001A54  6E07               	movwf	reach_goal@stepper_motor^0,c
  2584  001A56  0E01               	movlw	high _end_effector_stepper
  2585  001A58  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2586  001A5A  0E00               	movlw	0
  2587  001A5C  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2588  001A5E  0E64               	movlw	100
  2589  001A60  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2590  001A62  EC11  F036         	call	_reach_goal	;wreg free
  2591  001A66  5007               	movf	?_reach_goal^0,w,c
  2592  001A68  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2593  001A6A  B4D8               	btfsc	status,2,c
  2594  001A6C  EF3A  F00D         	goto	u7111
  2595  001A70  EF3D  F00D         	goto	u7110
  2596  001A74                     u7111:
  2597  001A74  FFFF               	dw	65535	; assembler added errata NOP
  2598  001A76  EF43  F00D         	goto	l5682
  2599  001A7A                     u7110:
  2600  001A7A  FFFF               	dw	65535	; assembler added errata NOP
  2601  001A7C                     
  2602                           ;main.c: 170:                     end_effector_homed = 1;
  2603  001A7C  0E00               	movlw	0
  2604  001A7E  0101               	movlb	1	; () banked
  2605  001A80  6FA8               	movwf	(_end_effector_homed+1)& (0+255),b
  2606  001A82  0E01               	movlw	1
  2607  001A84  6FA7               	movwf	_end_effector_homed& (0+255),b
  2608  001A86                     l5682:
  2609  001A86  FFFF               	dw	65535	; assembler added errata NOP
  2610                           
  2611                           ;main.c: 173:                 if (end_effector_homed && !joint_homed && reach_goal(&join
      +                          t_stepper, 50)){
  2612  001A88  0101               	movlb	1	; () banked
  2613  001A8A  51A7               	movf	_end_effector_homed& (0+255),w,b
  2614  001A8C  11A8               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  2615  001A8E  B4D8               	btfsc	status,2,c
  2616  001A90  EF4C  F00D         	goto	u7121
  2617  001A94  EF4F  F00D         	goto	u7120
  2618  001A98                     u7121:
  2619  001A98  FFFF               	dw	65535	; assembler added errata NOP
  2620  001A9A  EF75  F00D         	goto	l5690
  2621  001A9E                     u7120:
  2622  001A9E  FFFF               	dw	65535	; assembler added errata NOP
  2623  001AA0                     
  2624                           ; BSR set to: 1
  2625  001AA0  51A9               	movf	_joint_homed& (0+255),w,b
  2626  001AA2  11AA               	iorwf	(_joint_homed+1)& (0+255),w,b
  2627  001AA4  A4D8               	btfss	status,2,c
  2628  001AA6  EF57  F00D         	goto	u7131
  2629  001AAA  EF5A  F00D         	goto	u7130
  2630  001AAE                     u7131:
  2631  001AAE  FFFF               	dw	65535	; assembler added errata NOP
  2632  001AB0  EF75  F00D         	goto	l5690
  2633  001AB4                     u7130:
  2634  001AB4  FFFF               	dw	65535	; assembler added errata NOP
  2635  001AB6                     
  2636                           ; BSR set to: 1
  2637  001AB6  0ECD               	movlw	low _joint_stepper
  2638  001AB8  6E07               	movwf	reach_goal@stepper_motor^0,c
  2639  001ABA  0E01               	movlw	high _joint_stepper
  2640  001ABC  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2641  001ABE  0E00               	movlw	0
  2642  001AC0  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2643  001AC2  0E32               	movlw	50
  2644  001AC4  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2645  001AC6  EC11  F036         	call	_reach_goal	;wreg free
  2646  001ACA  5007               	movf	?_reach_goal^0,w,c
  2647  001ACC  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2648  001ACE  B4D8               	btfsc	status,2,c
  2649  001AD0  EF6C  F00D         	goto	u7141
  2650  001AD4  EF6F  F00D         	goto	u7140
  2651  001AD8                     u7141:
  2652  001AD8  FFFF               	dw	65535	; assembler added errata NOP
  2653  001ADA  EF75  F00D         	goto	l5690
  2654  001ADE                     u7140:
  2655  001ADE  FFFF               	dw	65535	; assembler added errata NOP
  2656  001AE0                     
  2657                           ;main.c: 174:                     joint_homed = 1;
  2658  001AE0  0E00               	movlw	0
  2659  001AE2  0101               	movlb	1	; () banked
  2660  001AE4  6FAA               	movwf	(_joint_homed+1)& (0+255),b
  2661  001AE6  0E01               	movlw	1
  2662  001AE8  6FA9               	movwf	_joint_homed& (0+255),b
  2663  001AEA                     l5690:
  2664  001AEA  FFFF               	dw	65535	; assembler added errata NOP
  2665                           
  2666                           ;main.c: 177:                 if (end_effector_homed * joint_homed){
  2667  001AEC  C1A7  F001         	movff	_end_effector_homed,___wmul@multiplier
  2668  001AF0  C1A8  F002         	movff	_end_effector_homed+1,___wmul@multiplier+1
  2669  001AF4  C1A9  F003         	movff	_joint_homed,___wmul@multiplicand
  2670  001AF8  C1AA  F004         	movff	_joint_homed+1,___wmul@multiplicand+1
  2671  001AFC  ECEB  F032         	call	___wmul	;wreg free
  2672  001B00  5001               	movf	?___wmul^0,w,c
  2673  001B02  1002               	iorwf	(?___wmul+1)^0,w,c
  2674  001B04  B4D8               	btfsc	status,2,c
  2675  001B06  EF87  F00D         	goto	u7151
  2676  001B0A  EF8A  F00D         	goto	u7150
  2677  001B0E                     u7151:
  2678  001B0E  FFFF               	dw	65535	; assembler added errata NOP
  2679  001B10  EF97  F00A         	goto	l5560
  2680  001B14                     u7150:
  2681  001B14  FFFF               	dw	65535	; assembler added errata NOP
  2682  001B16  EF68  F00B         	goto	l5606
  2683  001B1A                     l5694:
  2684  001B1A  FFFF               	dw	65535	; assembler added errata NOP
  2685                           
  2686                           ; BSR set to: 1
  2687  001B1C  0E07               	movlw	7
  2688  001B1E  19DB               	xorwf	_state& (0+255),w,b
  2689  001B20  11DC               	iorwf	(_state+1)& (0+255),w,b
  2690  001B22  A4D8               	btfss	status,2,c
  2691  001B24  EF96  F00D         	goto	u7161
  2692  001B28  EF99  F00D         	goto	u7160
  2693  001B2C                     u7161:
  2694  001B2C  FFFF               	dw	65535	; assembler added errata NOP
  2695  001B2E  EFA2  F00D         	goto	l5698
  2696  001B32                     u7160:
  2697  001B32  FFFF               	dw	65535	; assembler added errata NOP
  2698  001B34                     
  2699                           ; BSR set to: 1
  2700                           ;main.c: 182:                 state = 11;
  2701  001B34  0E00               	movlw	0
  2702  001B36  6FDC               	movwf	(_state+1)& (0+255),b
  2703  001B38  0E0B               	movlw	11
  2704  001B3A  6FDB               	movwf	_state& (0+255),b
  2705                           
  2706                           ;main.c: 183:                 state_changed = 1;
  2707  001B3C  0E01               	movlw	1
  2708  001B3E  6FB0               	movwf	_state_changed& (0+255),b
  2709                           
  2710                           ;main.c: 184:             }else if (state == 11){
  2711  001B40  EF97  F00A         	goto	l5560
  2712  001B44                     l5698:
  2713  001B44  FFFF               	dw	65535	; assembler added errata NOP
  2714                           
  2715                           ; BSR set to: 1
  2716  001B46  0E0B               	movlw	11
  2717  001B48  19DB               	xorwf	_state& (0+255),w,b
  2718  001B4A  11DC               	iorwf	(_state+1)& (0+255),w,b
  2719  001B4C  A4D8               	btfss	status,2,c
  2720  001B4E  EFAB  F00D         	goto	u7171
  2721  001B52  EFAE  F00D         	goto	u7170
  2722  001B56                     u7171:
  2723  001B56  FFFF               	dw	65535	; assembler added errata NOP
  2724  001B58  EFD7  F00D         	goto	l5706
  2725  001B5C                     u7170:
  2726  001B5C  FFFF               	dw	65535	; assembler added errata NOP
  2727  001B5E                     
  2728                           ; BSR set to: 1
  2729                           ;main.c: 185:                 if (timer_done){
  2730  001B5E  51AD               	movf	_timer_done& (0+255),w,b
  2731  001B60  B4D8               	btfsc	status,2,c
  2732  001B62  EFB5  F00D         	goto	u7181
  2733  001B66  EFB8  F00D         	goto	u7180
  2734  001B6A                     u7181:
  2735  001B6A  FFFF               	dw	65535	; assembler added errata NOP
  2736  001B6C  EFC9  F00D         	goto	l176
  2737  001B70                     u7180:
  2738  001B70  FFFF               	dw	65535	; assembler added errata NOP
  2739  001B72                     
  2740                           ; BSR set to: 1
  2741                           ;main.c: 186:                     state_changed = 1;
  2742  001B72  0E01               	movlw	1
  2743  001B74  6FB0               	movwf	_state_changed& (0+255),b
  2744                           
  2745                           ;main.c: 187:                     state = 2;
  2746  001B76  0E00               	movlw	0
  2747  001B78  6FDC               	movwf	(_state+1)& (0+255),b
  2748  001B7A  0E02               	movlw	2
  2749  001B7C  6FDB               	movwf	_state& (0+255),b
  2750                           
  2751                           ;main.c: 188:                     move_to_trash = 1;
  2752  001B7E  0E00               	movlw	0
  2753  001B80  6FA4               	movwf	(_move_to_trash+1)& (0+255),b
  2754  001B82  0E01               	movlw	1
  2755  001B84  6FA3               	movwf	_move_to_trash& (0+255),b
  2756                           
  2757                           ;main.c: 189:                     trash_counter = 0;
  2758  001B86  0E00               	movlw	0
  2759  001B88  6FA6               	movwf	(_trash_counter+1)& (0+255),b
  2760  001B8A  0E00               	movlw	0
  2761  001B8C  6FA5               	movwf	_trash_counter& (0+255),b
  2762                           
  2763                           ;main.c: 190:                 } else {
  2764  001B8E  EF97  F00A         	goto	l5560
  2765  001B92                     l176:
  2766  001B92  FFFF               	dw	65535	; assembler added errata NOP
  2767                           
  2768                           ; BSR set to: 1
  2769                           ;main.c: 191:                     if (T0CONbits.TMR0ON == 0){
  2770  001B94  BED5               	btfsc	213,7,c	;volatile
  2771  001B96  EFCF  F00D         	goto	u7191
  2772  001B9A  EFD2  F00D         	goto	u7190
  2773  001B9E                     u7191:
  2774  001B9E  FFFF               	dw	65535	; assembler added errata NOP
  2775  001BA0  EF59  F00B         	goto	l5602
  2776  001BA4                     u7190:
  2777  001BA4  FFFF               	dw	65535	; assembler added errata NOP
  2778  001BA6                     
  2779                           ; BSR set to: 1
  2780                           ;main.c: 192:                         init_timer_0();
  2781  001BA6  EC75  F032         	call	_init_timer_0	;wreg free
  2782  001BAA  EF97  F00A         	goto	l5560
  2783  001BAE                     l5706:
  2784  001BAE  FFFF               	dw	65535	; assembler added errata NOP
  2785                           
  2786                           ; BSR set to: 1
  2787  001BB0  0E0C               	movlw	12
  2788  001BB2  19DB               	xorwf	_state& (0+255),w,b
  2789  001BB4  11DC               	iorwf	(_state+1)& (0+255),w,b
  2790  001BB6  A4D8               	btfss	status,2,c
  2791  001BB8  EFE0  F00D         	goto	u7201
  2792  001BBC  EFE3  F00D         	goto	u7200
  2793  001BC0                     u7201:
  2794  001BC0  FFFF               	dw	65535	; assembler added errata NOP
  2795  001BC2  EF59  F00B         	goto	l5602
  2796  001BC6                     u7200:
  2797  001BC6  FFFF               	dw	65535	; assembler added errata NOP
  2798  001BC8                     
  2799                           ; BSR set to: 1
  2800                           ;main.c: 197:                 state = 0;
  2801  001BC8  0E00               	movlw	0
  2802  001BCA  6FDC               	movwf	(_state+1)& (0+255),b
  2803  001BCC  0E00               	movlw	0
  2804  001BCE  6FDB               	movwf	_state& (0+255),b
  2805                           
  2806                           ;main.c: 198:                 state_changed = 1;
  2807  001BD0  0E01               	movlw	1
  2808  001BD2  6FB0               	movwf	_state_changed& (0+255),b
  2809  001BD4                     
  2810                           ; BSR set to: 1
  2811                           ;main.c: 199:                 T0CONbits.TMR0ON = 0;
  2812  001BD4  9ED5               	bcf	213,7,c	;volatile
  2813  001BD6  EF97  F00A         	goto	l5560
  2814  001BDA  EF3B  F000         	goto	start
  2815  001BDE                     __end_of_main:
  2816                           	callstack 0
  2817                           
  2818 ;; *************** function _wait_for_zero *****************
  2819 ;; Defined at:
  2820 ;;		line 28 in file "oven.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;		None
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;		None
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  1    wreg      void 
  2827 ;; Registers used:
  2828 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2834 ;;      Params:         0       0       0       0       0       0       0
  2835 ;;      Locals:         0       0       0       0       0       0       0
  2836 ;;      Temps:          0       0       0       0       0       0       0
  2837 ;;      Totals:         0       0       0       0       0       0       0
  2838 ;;Total ram usage:        0 bytes
  2839 ;; Hardware stack levels used:    1
  2840 ;; Hardware stack levels required when called:    3
  2841 ;; This function calls:
  2842 ;;		_get_temperature
  2843 ;; This function is called by:
  2844 ;;		_main
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           	psect	text1
  2849  006530                     __ptext1:
  2850                           	callstack 0
  2851  006530                     _wait_for_zero:
  2852                           	callstack 0
  2853  006530  FFFF               	dw	65535	; assembler added errata NOP
  2854  006532                     l382:
  2855  006532  FFFF               	dw	65535	; assembler added errata NOP
  2856  006534                     
  2857                           ;oven.c: 30:         if (get_temperature() == -55){
  2858  006534  ECD8  F035         	call	_get_temperature	;wreg free
  2859  006538  0EC9               	movlw	201
  2860  00653A  0100               	movlb	0	; () banked
  2861  00653C  19D4               	xorwf	?_get_temperature& (0+255),w,b
  2862  00653E  E106               	bnz	u6771
  2863  006540  29D5               	incf	(?_get_temperature+1)& (0+255),w,b
  2864  006542  A4D8               	btfss	status,2,c
  2865  006544  EFA6  F032         	goto	u6771
  2866  006548  EFA9  F032         	goto	u6770
  2867  00654C                     u6771:
  2868  00654C  FFFF               	dw	65535	; assembler added errata NOP
  2869  00654E  EF99  F032         	goto	l382
  2870  006552                     u6770:
  2871  006552  FFFF               	dw	65535	; assembler added errata NOP
  2872  006554                     
  2873                           ; BSR set to: 0
  2874  006554  0012               	return		;funcret
  2875  006556  FFFF               	dw	65535	; errata NOP
  2876  006558                     __end_of_wait_for_zero:
  2877                           	callstack 0
  2878                           
  2879 ;; *************** function _get_temperature *****************
  2880 ;; Defined at:
  2881 ;;		line 22 in file "oven.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;		None
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;		None
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  2   28[BANK0 ] int 
  2888 ;; Registers used:
  2889 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2895 ;;      Params:         0       2       0       0       0       0       0
  2896 ;;      Locals:         0       0       0       0       0       0       0
  2897 ;;      Temps:          0       0       0       0       0       0       0
  2898 ;;      Totals:         0       2       0       0       0       0       0
  2899 ;;Total ram usage:        2 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; Hardware stack levels required when called:    2
  2902 ;; This function calls:
  2903 ;;		___flmul
  2904 ;;		___fltol
  2905 ;;		___xxtofl
  2906 ;; This function is called by:
  2907 ;;		_main
  2908 ;;		_wait_for_zero
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           	psect	text2
  2913  006BB0                     __ptext2:
  2914                           	callstack 0
  2915  006BB0                     _get_temperature:
  2916                           	callstack 0
  2917  006BB0  FFFF               	dw	65535	; assembler added errata NOP
  2918  006BB2                     
  2919                           ;oven.c: 23:     ADCON0bits.GO = 1;
  2920  006BB2  84C2               	bsf	194,2,c	;volatile
  2921  006BB4                     l376:
  2922  006BB4  FFFF               	dw	65535	; assembler added errata NOP
  2923  006BB6  B4C2               	btfsc	194,2,c	;volatile
  2924  006BB8  EFE0  F035         	goto	u6431
  2925  006BBC  EFE3  F035         	goto	u6430
  2926  006BC0                     u6431:
  2927  006BC0  FFFF               	dw	65535	; assembler added errata NOP
  2928  006BC2  EFDA  F035         	goto	l376
  2929  006BC6                     u6430:
  2930  006BC6  FFFF               	dw	65535	; assembler added errata NOP
  2931  006BC8                     
  2932                           ;oven.c: 25:     return (int) (ADRESH * 0.25) + -55;
  2933  006BC8  0E00               	movlw	0
  2934  006BCA  6E31               	movwf	___flmul@a^0,c
  2935  006BCC  0E00               	movlw	0
  2936  006BCE  6E32               	movwf	(___flmul@a+1)^0,c
  2937  006BD0  0E80               	movlw	128
  2938  006BD2  6E33               	movwf	(___flmul@a+2)^0,c
  2939  006BD4  0E3E               	movlw	62
  2940  006BD6  6E34               	movwf	(___flmul@a+3)^0,c
  2941  006BD8  50C4               	movf	196,w,c	;volatile
  2942  006BDA  6E1F               	movwf	___xxtofl@val^0,c
  2943  006BDC  6A20               	clrf	(___xxtofl@val+1)^0,c
  2944  006BDE  6A21               	clrf	(___xxtofl@val+2)^0,c
  2945  006BE0  6A22               	clrf	(___xxtofl@val+3)^0,c
  2946  006BE2  0E01               	movlw	1
  2947  006BE4  EC7E  F01C         	call	___xxtofl
  2948  006BE8  C01F  F02D         	movff	?___xxtofl,___flmul@b
  2949  006BEC  C020  F02E         	movff	?___xxtofl+1,___flmul@b+1
  2950  006BF0  C021  F02F         	movff	?___xxtofl+2,___flmul@b+2
  2951  006BF4  C022  F030         	movff	?___xxtofl+3,___flmul@b+3
  2952  006BF8  ECC3  F010         	call	___flmul	;wreg free
  2953  006BFC  C02D  F0CA         	movff	?___flmul,___fltol@f1
  2954  006C00  C02E  F0CB         	movff	?___flmul+1,___fltol@f1+1
  2955  006C04  C02F  F0CC         	movff	?___flmul+2,___fltol@f1+2
  2956  006C08  C030  F0CD         	movff	?___flmul+3,___fltol@f1+3
  2957  006C0C  EC7F  F03C         	call	___fltol	;wreg free
  2958  006C10  0EC9               	movlw	201
  2959  006C12  0100               	movlb	0	; () banked
  2960  006C14  25CA               	addwf	?___fltol& (0+255),w,b
  2961  006C16  6FD4               	movwf	?_get_temperature& (0+255),b
  2962  006C18  0EFF               	movlw	255
  2963  006C1A  21CB               	addwfc	(?___fltol+1)& (0+255),w,b
  2964  006C1C  6FD5               	movwf	(?_get_temperature+1)& (0+255),b
  2965  006C1E                     
  2966                           ; BSR set to: 0
  2967  006C1E  0012               	return		;funcret
  2968  006C20  FFFF               	dw	65535	; errata NOP
  2969  006C22                     __end_of_get_temperature:
  2970                           	callstack 0
  2971                           
  2972 ;; *************** function _state_translator_micro_to_fpga *****************
  2973 ;; Defined at:
  2974 ;;		line 26 in file "utils.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;  state           2    0[COMRAM] PTR int 
  2977 ;;		 -> state(2), 
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;  state_machin    1    4[COMRAM] unsigned char 
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      unsigned char 
  2982 ;; Registers used:
  2983 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2989 ;;      Params:         2       0       0       0       0       0       0
  2990 ;;      Locals:         1       0       0       0       0       0       0
  2991 ;;      Temps:          2       0       0       0       0       0       0
  2992 ;;      Totals:         5       0       0       0       0       0       0
  2993 ;;Total ram usage:        5 bytes
  2994 ;; Hardware stack levels used:    1
  2995 ;; Hardware stack levels required when called:    1
  2996 ;; This function calls:
  2997 ;;		Nothing
  2998 ;; This function is called by:
  2999 ;;		_main
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text3
  3004  006DA0                     __ptext3:
  3005                           	callstack 0
  3006  006DA0                     _state_translator_micro_to_fpga:
  3007                           	callstack 0
  3008  006DA0  FFFF               	dw	65535	; assembler added errata NOP
  3009  006DA2                     
  3010                           ;utils.c: 27:     unsigned char state_machine_code;;utils.c: 28:     if (*state == 2){
  3011  006DA2  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  3012  006DA6  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  3013  006DAA  0E02               	movlw	2
  3014  006DAC  18DE               	xorwf	postinc2,w,c
  3015  006DAE  10DE               	iorwf	postinc2,w,c
  3016  006DB0  A4D8               	btfss	status,2,c
  3017  006DB2  EFDD  F036         	goto	u6721
  3018  006DB6  EFE0  F036         	goto	u6720
  3019  006DBA                     u6721:
  3020  006DBA  FFFF               	dw	65535	; assembler added errata NOP
  3021  006DBC  EFE5  F036         	goto	l5450
  3022  006DC0                     u6720:
  3023  006DC0  FFFF               	dw	65535	; assembler added errata NOP
  3024  006DC2                     
  3025                           ;utils.c: 29:         state_machine_code = 0x10;
  3026  006DC2  0E10               	movlw	16
  3027  006DC4  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3028                           
  3029                           ;utils.c: 30:     } else if (*state == 0) {
  3030  006DC6  EF11  F037         	goto	l269
  3031  006DCA                     l5450:
  3032  006DCA  FFFF               	dw	65535	; assembler added errata NOP
  3033  006DCC  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  3034  006DD0  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  3035  006DD4  50DE               	movf	postinc2,w,c
  3036  006DD6  10DE               	iorwf	postinc2,w,c
  3037  006DD8  A4D8               	btfss	status,2,c
  3038  006DDA  EFF1  F036         	goto	u6731
  3039  006DDE  EFF4  F036         	goto	u6730
  3040  006DE2                     u6731:
  3041  006DE2  FFFF               	dw	65535	; assembler added errata NOP
  3042  006DE4  EFF9  F036         	goto	l5454
  3043  006DE8                     u6730:
  3044  006DE8  FFFF               	dw	65535	; assembler added errata NOP
  3045  006DEA                     
  3046                           ;utils.c: 31:         state_machine_code = 0x09;
  3047  006DEA  0E09               	movlw	9
  3048  006DEC  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3049                           
  3050                           ;utils.c: 32:     } else if (*state == 8) {
  3051  006DEE  EF11  F037         	goto	l269
  3052  006DF2                     l5454:
  3053  006DF2  FFFF               	dw	65535	; assembler added errata NOP
  3054  006DF4  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  3055  006DF8  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  3056  006DFC  0E08               	movlw	8
  3057  006DFE  18DE               	xorwf	postinc2,w,c
  3058  006E00  10DE               	iorwf	postinc2,w,c
  3059  006E02  A4D8               	btfss	status,2,c
  3060  006E04  EF06  F037         	goto	u6741
  3061  006E08  EF09  F037         	goto	u6740
  3062  006E0C                     u6741:
  3063  006E0C  FFFF               	dw	65535	; assembler added errata NOP
  3064  006E0E  EF0E  F037         	goto	l5458
  3065  006E12                     u6740:
  3066  006E12  FFFF               	dw	65535	; assembler added errata NOP
  3067  006E14                     
  3068                           ;utils.c: 33:         state_machine_code = 0x40;
  3069  006E14  0E40               	movlw	64
  3070  006E16  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3071                           
  3072                           ;utils.c: 34:     } else {
  3073  006E18  EF11  F037         	goto	l269
  3074  006E1C                     l5458:
  3075  006E1C  FFFF               	dw	65535	; assembler added errata NOP
  3076                           
  3077                           ;utils.c: 35:         state_machine_code = 0x80;
  3078  006E1E  0E80               	movlw	128
  3079  006E20  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3080  006E22                     l269:
  3081  006E22  FFFF               	dw	65535	; assembler added errata NOP
  3082                           
  3083                           ;utils.c: 37:     return state_machine_code;
  3084  006E24  5005               	movf	state_translator_micro_to_fpga@state_machine_code^0,w,c
  3085  006E26  0012               	return		;funcret
  3086  006E28  FFFF               	dw	65535	; errata NOP
  3087  006E2A                     __end_of_state_translator_micro_to_fpga:
  3088                           	callstack 0
  3089                           
  3090 ;; *************** function _state_translator_fpga_to_micro *****************
  3091 ;; Defined at:
  3092 ;;		line 2 in file "utils.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;  state_machin    1    wreg     unsigned char 
  3095 ;;  state           2    2[COMRAM] PTR int 
  3096 ;;		 -> state(2), 
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;  state_machin    1    4[COMRAM] unsigned char 
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  1    wreg      void 
  3101 ;; Registers used:
  3102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3108 ;;      Params:         2       0       0       0       0       0       0
  3109 ;;      Locals:         1       0       0       0       0       0       0
  3110 ;;      Temps:          0       0       0       0       0       0       0
  3111 ;;      Totals:         3       0       0       0       0       0       0
  3112 ;;Total ram usage:        3 bytes
  3113 ;; Hardware stack levels used:    1
  3114 ;; Hardware stack levels required when called:    3
  3115 ;; This function calls:
  3116 ;;		_lcd_dat
  3117 ;; This function is called by:
  3118 ;;		_main
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           	psect	text4
  3123  003E96                     __ptext4:
  3124                           	callstack 0
  3125  003E96                     _state_translator_fpga_to_micro:
  3126                           	callstack 0
  3127  003E96  FFFF               	dw	65535	; assembler added errata NOP
  3128                           
  3129                           ;incstack = 0
  3130                           ;state_translator_fpga_to_micro@state_machine_code stored from wreg
  3131  003E98  6E05               	movwf	state_translator_fpga_to_micro@state_machine_code^0,c
  3132  003E9A                     
  3133                           ;utils.c: 3:     lcd_dat(state_machine_code);
  3134  003E9A  5005               	movf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3135  003E9C  ECD6  F032         	call	_lcd_dat
  3136  003EA0                     
  3137                           ;utils.c: 4:     if (state_machine_code == 0x01){
  3138  003EA0  0405               	decf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3139  003EA2  A4D8               	btfss	status,2,c
  3140  003EA4  EF56  F01F         	goto	u6641
  3141  003EA8  EF59  F01F         	goto	u6640
  3142  003EAC                     u6641:
  3143  003EAC  FFFF               	dw	65535	; assembler added errata NOP
  3144  003EAE  EF64  F01F         	goto	l5408
  3145  003EB2                     u6640:
  3146  003EB2  FFFF               	dw	65535	; assembler added errata NOP
  3147  003EB4                     
  3148                           ;utils.c: 5:         *state = 1;
  3149  003EB4  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3150  003EB8  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3151  003EBC  0E01               	movlw	1
  3152  003EBE  6EDE               	movwf	postinc2,c
  3153  003EC0  0E00               	movlw	0
  3154  003EC2  6EDD               	movwf	postdec2,c
  3155                           
  3156                           ;utils.c: 6:     } else if (state_machine_code == 0x02){
  3157  003EC4  EFF7  F01F         	goto	l265
  3158  003EC8                     l5408:
  3159  003EC8  FFFF               	dw	65535	; assembler added errata NOP
  3160  003ECA  0E02               	movlw	2
  3161  003ECC  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3162  003ECE  A4D8               	btfss	status,2,c
  3163  003ED0  EF6C  F01F         	goto	u6651
  3164  003ED4  EF6F  F01F         	goto	u6650
  3165  003ED8                     u6651:
  3166  003ED8  FFFF               	dw	65535	; assembler added errata NOP
  3167  003EDA  EF7A  F01F         	goto	l5412
  3168  003EDE                     u6650:
  3169  003EDE  FFFF               	dw	65535	; assembler added errata NOP
  3170  003EE0                     
  3171                           ;utils.c: 7:         *state = 3;
  3172  003EE0  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3173  003EE4  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3174  003EE8  0E03               	movlw	3
  3175  003EEA  6EDE               	movwf	postinc2,c
  3176  003EEC  0E00               	movlw	0
  3177  003EEE  6EDD               	movwf	postdec2,c
  3178                           
  3179                           ;utils.c: 8:     } else if (state_machine_code == 0x04){
  3180  003EF0  EFF7  F01F         	goto	l265
  3181  003EF4                     l5412:
  3182  003EF4  FFFF               	dw	65535	; assembler added errata NOP
  3183  003EF6  0E04               	movlw	4
  3184  003EF8  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3185  003EFA  A4D8               	btfss	status,2,c
  3186  003EFC  EF82  F01F         	goto	u6661
  3187  003F00  EF85  F01F         	goto	u6660
  3188  003F04                     u6661:
  3189  003F04  FFFF               	dw	65535	; assembler added errata NOP
  3190  003F06  EF90  F01F         	goto	l5416
  3191  003F0A                     u6660:
  3192  003F0A  FFFF               	dw	65535	; assembler added errata NOP
  3193  003F0C                     
  3194                           ;utils.c: 9:         *state = 4;
  3195  003F0C  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3196  003F10  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3197  003F14  0E04               	movlw	4
  3198  003F16  6EDE               	movwf	postinc2,c
  3199  003F18  0E00               	movlw	0
  3200  003F1A  6EDD               	movwf	postdec2,c
  3201                           
  3202                           ;utils.c: 10:     } else if (state_machine_code == 0x08){
  3203  003F1C  EFF7  F01F         	goto	l265
  3204  003F20                     l5416:
  3205  003F20  FFFF               	dw	65535	; assembler added errata NOP
  3206  003F22  0E08               	movlw	8
  3207  003F24  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3208  003F26  A4D8               	btfss	status,2,c
  3209  003F28  EF98  F01F         	goto	u6671
  3210  003F2C  EF9B  F01F         	goto	u6670
  3211  003F30                     u6671:
  3212  003F30  FFFF               	dw	65535	; assembler added errata NOP
  3213  003F32  EFA6  F01F         	goto	l5420
  3214  003F36                     u6670:
  3215  003F36  FFFF               	dw	65535	; assembler added errata NOP
  3216  003F38                     
  3217                           ;utils.c: 11:         *state = 7;
  3218  003F38  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3219  003F3C  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3220  003F40  0E07               	movlw	7
  3221  003F42  6EDE               	movwf	postinc2,c
  3222  003F44  0E00               	movlw	0
  3223  003F46  6EDD               	movwf	postdec2,c
  3224                           
  3225                           ;utils.c: 12:     } else if (state_machine_code == 0x10){
  3226  003F48  EFF7  F01F         	goto	l265
  3227  003F4C                     l5420:
  3228  003F4C  FFFF               	dw	65535	; assembler added errata NOP
  3229  003F4E  0E10               	movlw	16
  3230  003F50  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3231  003F52  A4D8               	btfss	status,2,c
  3232  003F54  EFAE  F01F         	goto	u6681
  3233  003F58  EFB1  F01F         	goto	u6680
  3234  003F5C                     u6681:
  3235  003F5C  FFFF               	dw	65535	; assembler added errata NOP
  3236  003F5E  EFBC  F01F         	goto	l5424
  3237  003F62                     u6680:
  3238  003F62  FFFF               	dw	65535	; assembler added errata NOP
  3239  003F64                     
  3240                           ;utils.c: 13:         *state = 2;
  3241  003F64  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3242  003F68  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3243  003F6C  0E02               	movlw	2
  3244  003F6E  6EDE               	movwf	postinc2,c
  3245  003F70  0E00               	movlw	0
  3246  003F72  6EDD               	movwf	postdec2,c
  3247                           
  3248                           ;utils.c: 14:     } else if (state_machine_code == 0x40){
  3249  003F74  EFF7  F01F         	goto	l265
  3250  003F78                     l5424:
  3251  003F78  FFFF               	dw	65535	; assembler added errata NOP
  3252  003F7A  0E40               	movlw	64
  3253  003F7C  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3254  003F7E  A4D8               	btfss	status,2,c
  3255  003F80  EFC4  F01F         	goto	u6691
  3256  003F84  EFC7  F01F         	goto	u6690
  3257  003F88                     u6691:
  3258  003F88  FFFF               	dw	65535	; assembler added errata NOP
  3259  003F8A  EFD2  F01F         	goto	l5428
  3260  003F8E                     u6690:
  3261  003F8E  FFFF               	dw	65535	; assembler added errata NOP
  3262  003F90                     
  3263                           ;utils.c: 15:         *state = 8;
  3264  003F90  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3265  003F94  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3266  003F98  0E08               	movlw	8
  3267  003F9A  6EDE               	movwf	postinc2,c
  3268  003F9C  0E00               	movlw	0
  3269  003F9E  6EDD               	movwf	postdec2,c
  3270                           
  3271                           ;utils.c: 16:     } else if (state_machine_code == 0x80){
  3272  003FA0  EFF7  F01F         	goto	l265
  3273  003FA4                     l5428:
  3274  003FA4  FFFF               	dw	65535	; assembler added errata NOP
  3275  003FA6  0E80               	movlw	128
  3276  003FA8  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3277  003FAA  A4D8               	btfss	status,2,c
  3278  003FAC  EFDA  F01F         	goto	u6701
  3279  003FB0  EFDD  F01F         	goto	u6700
  3280  003FB4                     u6701:
  3281  003FB4  FFFF               	dw	65535	; assembler added errata NOP
  3282  003FB6  EFE0  F01F         	goto	l5432
  3283  003FBA                     u6700:
  3284  003FBA  FFFF               	dw	65535	; assembler added errata NOP
  3285  003FBC  EFF7  F01F         	goto	l265
  3286  003FC0                     l5432:
  3287  003FC0  FFFF               	dw	65535	; assembler added errata NOP
  3288  003FC2  0E20               	movlw	32
  3289  003FC4  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3290  003FC6  A4D8               	btfss	status,2,c
  3291  003FC8  EFE8  F01F         	goto	u6711
  3292  003FCC  EFEB  F01F         	goto	u6710
  3293  003FD0                     u6711:
  3294  003FD0  FFFF               	dw	65535	; assembler added errata NOP
  3295  003FD2  EFEE  F01F         	goto	l5436
  3296  003FD6                     u6710:
  3297  003FD6  FFFF               	dw	65535	; assembler added errata NOP
  3298  003FD8  EFF7  F01F         	goto	l265
  3299  003FDC                     l5436:
  3300  003FDC  FFFF               	dw	65535	; assembler added errata NOP
  3301                           
  3302                           ;utils.c: 21:         *state = 0;
  3303  003FDE  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3304  003FE2  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3305  003FE6  0E00               	movlw	0
  3306  003FE8  6EDE               	movwf	postinc2,c
  3307  003FEA  0E00               	movlw	0
  3308  003FEC  6EDD               	movwf	postdec2,c
  3309  003FEE                     l265:
  3310  003FEE  FFFF               	dw	65535	; assembler added errata NOP
  3311  003FF0  0012               	return		;funcret
  3312  003FF2  FFFF               	dw	65535	; errata NOP
  3313  003FF4                     __end_of_state_translator_fpga_to_micro:
  3314                           	callstack 0
  3315                           
  3316 ;; *************** function _snprintf *****************
  3317 ;; Defined at:
  3318 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\snprintf.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;  s               2   10[BANK0 ] PTR unsigned char 
  3321 ;;		 -> main@greet_str(160), 
  3322 ;;  n               2   12[BANK0 ] unsigned int 
  3323 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  3324 ;;		 -> STR_10(3), 
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  ap              2   20[BANK0 ] PTR void [1]
  3327 ;;		 -> ?_snprintf(2), 
  3328 ;;  ret             2    0        int 
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  2   10[BANK0 ] int 
  3331 ;; Registers used:
  3332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3338 ;;      Params:         0       8       0       0       0       0       0
  3339 ;;      Locals:         0       4       0       0       0       0       0
  3340 ;;      Temps:          0       0       0       0       0       0       0
  3341 ;;      Totals:         0      12       0       0       0       0       0
  3342 ;;Total ram usage:       12 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; Hardware stack levels required when called:    9
  3345 ;; This function calls:
  3346 ;;		_vsnprintf
  3347 ;; This function is called by:
  3348 ;;		_main
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           	psect	text5
  3353  00662C                     __ptext5:
  3354                           	callstack 0
  3355  00662C                     _snprintf:
  3356                           	callstack 0
  3357  00662C  FFFF               	dw	65535	; assembler added errata NOP
  3358  00662E  0EC8               	movlw	low (?_snprintf+6)
  3359  006630  0100               	movlb	0	; () banked
  3360  006632  6FCC               	movwf	snprintf@ap& (0+255),b
  3361  006634  0E00               	movlw	high (?_snprintf+6)
  3362  006636  6FCD               	movwf	(snprintf@ap+1)& (0+255),b
  3363  006638                     
  3364                           ; BSR set to: 0
  3365  006638  C0C2  F070         	movff	snprintf@s,vsnprintf@s
  3366  00663C  C0C3  F071         	movff	snprintf@s+1,vsnprintf@s+1
  3367  006640  C0C4  F072         	movff	snprintf@n,vsnprintf@n
  3368  006644  C0C5  F073         	movff	snprintf@n+1,vsnprintf@n+1
  3369  006648  C0C6  F074         	movff	snprintf@fmt,vsnprintf@fmt
  3370  00664C  C0C7  F075         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  3371  006650  0ECC               	movlw	low snprintf@ap
  3372  006652  6E76               	movwf	vsnprintf@ap^0,c
  3373  006654  0E00               	movlw	high snprintf@ap
  3374  006656  6E77               	movwf	(vsnprintf@ap+1)^0,c
  3375  006658  EC1B  F03D         	call	_vsnprintf	;wreg free
  3376  00665C  0012               	return		;funcret
  3377  00665E  FFFF               	dw	65535	; errata NOP
  3378  006660                     __end_of_snprintf:
  3379                           	callstack 0
  3380                           
  3381 ;; *************** function _vsnprintf *****************
  3382 ;; Defined at:
  3383 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_vsnprintf.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;  s               2  111[COMRAM] PTR unsigned char 
  3386 ;;		 -> main@greet_str(160), 
  3387 ;;  n               2  113[COMRAM] unsigned int 
  3388 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  3389 ;;		 -> STR_10(3), 
  3390 ;;  ap              2  117[COMRAM] PTR PTR void 
  3391 ;;		 -> snprintf@ap(2), 
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;  f               6    4[BANK0 ] struct _IO_FILE
  3394 ;;  cnt             2    2[BANK0 ] int 
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  2  111[COMRAM] int 
  3397 ;; Registers used:
  3398 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3404 ;;      Params:         8       0       0       0       0       0       0
  3405 ;;      Locals:         0      10       0       0       0       0       0
  3406 ;;      Temps:          4       0       0       0       0       0       0
  3407 ;;      Totals:        12      10       0       0       0       0       0
  3408 ;;Total ram usage:       22 bytes
  3409 ;; Hardware stack levels used:    1
  3410 ;; Hardware stack levels required when called:    8
  3411 ;; This function calls:
  3412 ;;		_vfprintf
  3413 ;; This function is called by:
  3414 ;;		_snprintf
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           	psect	text6
  3419  007A36                     __ptext6:
  3420                           	callstack 0
  3421  007A36                     _vsnprintf:
  3422                           	callstack 0
  3423  007A36  FFFF               	dw	65535	; assembler added errata NOP
  3424  007A38  0E80               	movlw	128
  3425  007A3A  5C73               	subwf	(vsnprintf@n+1)^0,w,c
  3426  007A3C  A0D8               	btfss	status,0,c
  3427  007A3E  EF23  F03D         	goto	u6541
  3428  007A42  EF26  F03D         	goto	u6540
  3429  007A46                     u6541:
  3430  007A46  FFFF               	dw	65535	; assembler added errata NOP
  3431  007A48  EF30  F03D         	goto	l5256
  3432  007A4C                     u6540:
  3433  007A4C  FFFF               	dw	65535	; assembler added errata NOP
  3434  007A4E  0E00               	movlw	0
  3435  007A50  0100               	movlb	0	; () banked
  3436  007A52  6F8D               	movwf	(_errno+1)& (0+255),b
  3437  007A54  0E4B               	movlw	75
  3438  007A56  6F8C               	movwf	_errno& (0+255),b
  3439  007A58                     
  3440                           ; BSR set to: 0
  3441  007A58  6870               	setf	?_vsnprintf^0,c
  3442  007A5A  6871               	setf	(?_vsnprintf+1)^0,c
  3443  007A5C  EFB5  F03D         	goto	l1102
  3444  007A60                     l5256:
  3445  007A60  FFFF               	dw	65535	; assembler added errata NOP
  3446  007A62  C070  F0BC         	movff	vsnprintf@s,vsnprintf@f
  3447  007A66  C071  F0BD         	movff	vsnprintf@s+1,vsnprintf@f+1
  3448  007A6A  5073               	movf	(vsnprintf@n+1)^0,w,c
  3449  007A6C  E10A               	bnz	u6550
  3450  007A6E  0E02               	movlw	2
  3451  007A70  5C72               	subwf	vsnprintf@n^0,w,c
  3452  007A72  A0D8               	btfss	status,0,c
  3453  007A74  EF3E  F03D         	goto	u6551
  3454  007A78  EF41  F03D         	goto	u6550
  3455  007A7C                     u6551:
  3456  007A7C  FFFF               	dw	65535	; assembler added errata NOP
  3457  007A7E  EF4F  F03D         	goto	l5262
  3458  007A82                     u6550:
  3459  007A82  FFFF               	dw	65535	; assembler added errata NOP
  3460  007A84  0EFF               	movlw	255
  3461  007A86  2472               	addwf	vsnprintf@n^0,w,c
  3462  007A88  0100               	movlb	0	; () banked
  3463  007A8A  6FC0               	movwf	(vsnprintf@f+4)& (0+255),b
  3464  007A8C  0EFF               	movlw	255
  3465  007A8E  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  3466  007A90  6FC1               	movwf	(vsnprintf@f+5)& (0+255),b
  3467  007A92                     
  3468                           ; BSR set to: 0
  3469  007A92  0E00               	movlw	0
  3470  007A94  6FBF               	movwf	(vsnprintf@f+3)& (0+255),b
  3471  007A96  0E00               	movlw	0
  3472  007A98  6FBE               	movwf	(vsnprintf@f+2)& (0+255),b
  3473  007A9A  EF59  F03D         	goto	l5264
  3474  007A9E                     l5262:
  3475  007A9E  FFFF               	dw	65535	; assembler added errata NOP
  3476  007AA0  0E00               	movlw	0
  3477  007AA2  0100               	movlb	0	; () banked
  3478  007AA4  6FC1               	movwf	(vsnprintf@f+5)& (0+255),b
  3479  007AA6  0E01               	movlw	1
  3480  007AA8  6FC0               	movwf	(vsnprintf@f+4)& (0+255),b
  3481  007AAA  0E00               	movlw	0
  3482  007AAC  6FBF               	movwf	(vsnprintf@f+3)& (0+255),b
  3483  007AAE  0E01               	movlw	1
  3484  007AB0  6FBE               	movwf	(vsnprintf@f+2)& (0+255),b
  3485  007AB2                     l5264:
  3486  007AB2  FFFF               	dw	65535	; assembler added errata NOP
  3487                           
  3488                           ; BSR set to: 0
  3489  007AB4  0EBC               	movlw	low vsnprintf@f
  3490  007AB6  6E68               	movwf	vfprintf@fp^0,c
  3491  007AB8  0E00               	movlw	high vsnprintf@f
  3492  007ABA  6E69               	movwf	(vfprintf@fp+1)^0,c
  3493  007ABC  C074  F06A         	movff	vsnprintf@fmt,vfprintf@fmt
  3494  007AC0  C075  F06B         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  3495  007AC4  C076  F06C         	movff	vsnprintf@ap,vfprintf@ap
  3496  007AC8  C077  F06D         	movff	vsnprintf@ap+1,vfprintf@ap+1
  3497  007ACC  ECA0  F035         	call	_vfprintf	;wreg free
  3498  007AD0  C068  F0BA         	movff	?_vfprintf,vsnprintf@cnt
  3499  007AD4  C069  F0BB         	movff	?_vfprintf+1,vsnprintf@cnt+1
  3500  007AD8  5072               	movf	vsnprintf@n^0,w,c
  3501  007ADA  1073               	iorwf	(vsnprintf@n+1)^0,w,c
  3502  007ADC  B4D8               	btfsc	status,2,c
  3503  007ADE  EF73  F03D         	goto	u6561
  3504  007AE2  EF76  F03D         	goto	u6560
  3505  007AE6                     u6561:
  3506  007AE6  FFFF               	dw	65535	; assembler added errata NOP
  3507  007AE8  EFB0  F03D         	goto	l5276
  3508  007AEC                     u6560:
  3509  007AEC  FFFF               	dw	65535	; assembler added errata NOP
  3510  007AEE  0100               	movlb	0	; () banked
  3511  007AF0  BFBB               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  3512  007AF2  EF7D  F03D         	goto	u6571
  3513  007AF6  EF80  F03D         	goto	u6570
  3514  007AFA                     u6571:
  3515  007AFA  FFFF               	dw	65535	; assembler added errata NOP
  3516  007AFC  EFB0  F03D         	goto	l5276
  3517  007B00                     u6570:
  3518  007B00  FFFF               	dw	65535	; assembler added errata NOP
  3519  007B02                     
  3520                           ; BSR set to: 0
  3521  007B02  0EFF               	movlw	255
  3522  007B04  6E78               	movwf	??_vsnprintf^0,c
  3523  007B06  0EFF               	movlw	255
  3524  007B08  6E79               	movwf	(??_vsnprintf+1)^0,c
  3525  007B0A  C072  F07A         	movff	vsnprintf@n,??_vsnprintf+2
  3526  007B0E  C073  F07B         	movff	vsnprintf@n+1,??_vsnprintf+3
  3527  007B12  5078               	movf	??_vsnprintf^0,w,c
  3528  007B14  267A               	addwf	(??_vsnprintf+2)^0,f,c
  3529  007B16  5079               	movf	(??_vsnprintf+1)^0,w,c
  3530  007B18  227B               	addwfc	(??_vsnprintf+3)^0,f,c
  3531  007B1A  507A               	movf	(??_vsnprintf+2)^0,w,c
  3532  007B1C  5DBA               	subwf	vsnprintf@cnt& (0+255),w,b
  3533  007B1E  507B               	movf	(??_vsnprintf+3)^0,w,c
  3534  007B20  59BB               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  3535  007B22  A0D8               	btfss	status,0,c
  3536  007B24  EF96  F03D         	goto	u6581
  3537  007B28  EF99  F03D         	goto	u6580
  3538  007B2C                     u6581:
  3539  007B2C  FFFF               	dw	65535	; assembler added errata NOP
  3540  007B2E  EFA2  F03D         	goto	l1107
  3541  007B32                     u6580:
  3542  007B32  FFFF               	dw	65535	; assembler added errata NOP
  3543  007B34                     
  3544                           ; BSR set to: 0
  3545  007B34  0EFF               	movlw	255
  3546  007B36  2472               	addwf	vsnprintf@n^0,w,c
  3547  007B38  6FB8               	movwf	_vsnprintf$1555& (0+255),b
  3548  007B3A  0EFF               	movlw	255
  3549  007B3C  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  3550  007B3E  6FB9               	movwf	(_vsnprintf$1555+1)& (0+255),b
  3551  007B40  EFA7  F03D         	goto	l5274
  3552  007B44                     l1107:
  3553  007B44  FFFF               	dw	65535	; assembler added errata NOP
  3554                           
  3555                           ; BSR set to: 0
  3556  007B46  C0BA  F0B8         	movff	vsnprintf@cnt,_vsnprintf$1555
  3557  007B4A  C0BB  F0B9         	movff	vsnprintf@cnt+1,_vsnprintf$1555+1
  3558  007B4E                     l5274:
  3559  007B4E  FFFF               	dw	65535	; assembler added errata NOP
  3560                           
  3561                           ; BSR set to: 0
  3562  007B50  51B8               	movf	_vsnprintf$1555& (0+255),w,b
  3563  007B52  2470               	addwf	vsnprintf@s^0,w,c
  3564  007B54  6ED9               	movwf	fsr2l,c
  3565  007B56  51B9               	movf	(_vsnprintf$1555+1)& (0+255),w,b
  3566  007B58  2071               	addwfc	(vsnprintf@s+1)^0,w,c
  3567  007B5A  6EDA               	movwf	fsr2h,c
  3568  007B5C  0E00               	movlw	0
  3569  007B5E  6EDF               	movwf	indf2,c
  3570  007B60                     l5276:
  3571  007B60  FFFF               	dw	65535	; assembler added errata NOP
  3572  007B62  C0BA  F070         	movff	vsnprintf@cnt,?_vsnprintf
  3573  007B66  C0BB  F071         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  3574  007B6A                     l1102:
  3575  007B6A  FFFF               	dw	65535	; assembler added errata NOP
  3576  007B6C  0012               	return		;funcret
  3577  007B6E  FFFF               	dw	65535	; errata NOP
  3578  007B70                     __end_of_vsnprintf:
  3579                           	callstack 0
  3580                           
  3581 ;; *************** function _vfprintf *****************
  3582 ;; Defined at:
  3583 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;  fp              2  103[COMRAM] PTR struct _IO_FILE
  3586 ;;		 -> vsnprintf@f(6), 
  3587 ;;  fmt             2  105[COMRAM] PTR const unsigned char 
  3588 ;;		 -> STR_10(3), 
  3589 ;;  ap              2  107[COMRAM] PTR PTR void 
  3590 ;;		 -> snprintf@ap(2), 
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;  cfmt            2  109[COMRAM] PTR unsigned char 
  3593 ;;		 -> STR_10(3), 
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  2  103[COMRAM] int 
  3596 ;; Registers used:
  3597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3603 ;;      Params:         6       0       0       0       0       0       0
  3604 ;;      Locals:         2       0       0       0       0       0       0
  3605 ;;      Temps:          0       0       0       0       0       0       0
  3606 ;;      Totals:         8       0       0       0       0       0       0
  3607 ;;Total ram usage:        8 bytes
  3608 ;; Hardware stack levels used:    1
  3609 ;; Hardware stack levels required when called:    7
  3610 ;; This function calls:
  3611 ;;		_vfpfcnvrt
  3612 ;; This function is called by:
  3613 ;;		_vsnprintf
  3614 ;; This function uses a non-reentrant model
  3615 ;;
  3616                           
  3617                           	psect	text7
  3618  006B40                     __ptext7:
  3619                           	callstack 0
  3620  006B40                     _vfprintf:
  3621                           	callstack 0
  3622  006B40  FFFF               	dw	65535	; assembler added errata NOP
  3623  006B42                     
  3624                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3625  006B42  C06A  F06E         	movff	vfprintf@fmt,vfprintf@cfmt
  3626  006B46  C06B  F06F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3627  006B4A                     
  3628                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  3629  006B4A  0E00               	movlw	0
  3630  006B4C  0100               	movlb	0	; () banked
  3631  006B4E  6F85               	movwf	(_nout+1)& (0+255),b
  3632  006B50  0E00               	movlw	0
  3633  006B52  6F84               	movwf	_nout& (0+255),b
  3634                           
  3635                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  3636  006B54  EFC0  F035         	goto	l5102
  3637  006B58                     l5100:
  3638  006B58  FFFF               	dw	65535	; assembler added errata NOP
  3639                           
  3640                           ; BSR set to: 0
  3641                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3642  006B5A  C068  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  3643  006B5E  C069  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3644  006B62  0E6E               	movlw	low vfprintf@cfmt
  3645  006B64  6E45               	movwf	vfpfcnvrt@fmt^0,c
  3646  006B66  0E00               	movlw	high vfprintf@cfmt
  3647  006B68  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3648  006B6A  C06C  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  3649  006B6E  C06D  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3650  006B72  EC3D  F000         	call	_vfpfcnvrt	;wreg free
  3651  006B76  5043               	movf	?_vfpfcnvrt^0,w,c
  3652  006B78  0100               	movlb	0	; () banked
  3653  006B7A  2784               	addwf	_nout& (0+255),f,b
  3654  006B7C  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  3655  006B7E  2385               	addwfc	(_nout+1)& (0+255),f,b
  3656  006B80                     l5102:
  3657  006B80  FFFF               	dw	65535	; assembler added errata NOP
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  3661  006B82  C06E  FFF6         	movff	vfprintf@cfmt,tblptrl
  3662  006B86  C06F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3663  006B8A                     	if	0	;tblptru may be non-zero
  3664  006B8A                     	endif
  3665  006B8A                     	if	0	;tblptru may be non-zero
  3666  006B8A                     	endif
  3667  006B8A  0008               	tblrd		*
  3668  006B8C  FFFF               	dw	65535	; errata NOP
  3669  006B8E  50F5               	movf	tablat,w,c
  3670  006B90  0900               	iorlw	0
  3671  006B92  A4D8               	btfss	status,2,c
  3672  006B94  EFCE  F035         	goto	u6331
  3673  006B98  EFD1  F035         	goto	u6330
  3674  006B9C                     u6331:
  3675  006B9C  FFFF               	dw	65535	; assembler added errata NOP
  3676  006B9E  EFAC  F035         	goto	l5100
  3677  006BA2                     u6330:
  3678  006BA2  FFFF               	dw	65535	; assembler added errata NOP
  3679  006BA4                     
  3680                           ; BSR set to: 0
  3681                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  3682  006BA4  C084  F068         	movff	_nout,?_vfprintf
  3683  006BA8  C085  F069         	movff	_nout+1,?_vfprintf+1
  3684  006BAC                     
  3685                           ; BSR set to: 0
  3686  006BAC  0012               	return		;funcret
  3687  006BAE  FFFF               	dw	65535	; errata NOP
  3688  006BB0                     __end_of_vfprintf:
  3689                           	callstack 0
  3690                           
  3691 ;; *************** function _vfpfcnvrt *****************
  3692 ;; Defined at:
  3693 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  3696 ;;		 -> vsnprintf@f(6), 
  3697 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  3698 ;;		 -> vfprintf@cfmt(2), 
  3699 ;;  ap              2   70[COMRAM] PTR PTR void 
  3700 ;;		 -> snprintf@ap(2), 
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;  llu             8   95[COMRAM] unsigned long long 
  3703 ;;  ll              8   84[COMRAM] long long 
  3704 ;;  f               4    0        long long 
  3705 ;;  ct              3    0        unsigned char [3]
  3706 ;;  vp              2   92[COMRAM] PTR void 
  3707 ;;		 -> ?_snprintf(2), STR_8(50), STR_7(9), STR_6(7), 
  3708 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  3709 ;;		 -> STR_1(49), 
  3710 ;;  done            2   78[COMRAM] int 
  3711 ;;  cp              2   76[COMRAM] PTR unsigned char 
  3712 ;;		 -> ?_snprintf(2), STR_8(50), STR_7(9), STR_6(7), 
  3713 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  3714 ;;		 -> STR_1(49), 
  3715 ;;  i               2    0        int 
  3716 ;;  c               1   94[COMRAM] unsigned char 
  3717 ;; Return value:  Size  Location     Type
  3718 ;;                  2   66[COMRAM] int 
  3719 ;; Registers used:
  3720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3721 ;; Tracked objects:
  3722 ;;		On entry : 0/0
  3723 ;;		On exit  : 0/0
  3724 ;;		Unchanged: 0/0
  3725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3726 ;;      Params:         6       0       0       0       0       0       0
  3727 ;;      Locals:        27       0       0       0       0       0       0
  3728 ;;      Temps:          4       0       0       0       0       0       0
  3729 ;;      Totals:        37       0       0       0       0       0       0
  3730 ;;Total ram usage:       37 bytes
  3731 ;; Hardware stack levels used:    1
  3732 ;; Hardware stack levels required when called:    6
  3733 ;; This function calls:
  3734 ;;		_atoi
  3735 ;;		_ctoa
  3736 ;;		_dtoa
  3737 ;;		_fputc
  3738 ;;		_isdigit
  3739 ;;		_otoa
  3740 ;;		_stoa
  3741 ;;		_strncmp
  3742 ;;		_utoa
  3743 ;;		_xtoa
  3744 ;; This function is called by:
  3745 ;;		_vfprintf
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           	psect	text8
  3750  00007A                     __ptext8:
  3751                           	callstack 0
  3752  00007A                     _vfpfcnvrt:
  3753                           	callstack 0
  3754  00007A  FFFF               	dw	65535	; assembler added errata NOP
  3755  00007C                     
  3756                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  3757  00007C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3758  000080  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3759  000084  CFDE FFF6          	movff	postinc2,tblptrl
  3760  000088  CFDD FFF7          	movff	postdec2,tblptrh
  3761  00008C                     	if	0	;tblptru may be non-zero
  3762  00008C                     	endif
  3763  00008C                     	if	0	;tblptru may be non-zero
  3764  00008C                     	endif
  3765  00008C  0008               	tblrd		*
  3766  00008E  FFFF               	dw	65535	; errata NOP
  3767  000090  50F5               	movf	tablat,w,c
  3768  000092  0A25               	xorlw	37
  3769  000094  A4D8               	btfss	status,2,c
  3770  000096  EF4F  F000         	goto	u5191
  3771  00009A  EF52  F000         	goto	u5190
  3772  00009E                     u5191:
  3773  00009E  FFFF               	dw	65535	; assembler added errata NOP
  3774  0000A0  EF11  F00A         	goto	l4686
  3775  0000A4                     u5190:
  3776  0000A4  FFFF               	dw	65535	; assembler added errata NOP
  3777  0000A6                     
  3778                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  3779  0000A6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3780  0000AA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3781  0000AE  2ADE               	incf	postinc2,f,c
  3782  0000B0  0E00               	movlw	0
  3783  0000B2  22DD               	addwfc	postdec2,f,c
  3784  0000B4                     
  3785                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  3786  0000B4  0E00               	movlw	0
  3787  0000B6  0100               	movlb	0	; () banked
  3788  0000B8  6F87               	movwf	(_width+1)& (0+255),b
  3789  0000BA  0E00               	movlw	0
  3790  0000BC  6F86               	movwf	_width& (0+255),b
  3791  0000BE  C086  F08A         	movff	_width,_flags
  3792  0000C2  C087  F08B         	movff	_width+1,_flags+1
  3793  0000C6                     
  3794                           ; BSR set to: 0
  3795                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  3796  0000C6  6988               	setf	_prec& (0+255),b
  3797  0000C8  6989               	setf	(_prec+1)& (0+255),b
  3798  0000CA                     
  3799                           ; BSR set to: 0
  3800                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  3801  0000CA  0E00               	movlw	0
  3802  0000CC  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  3803  0000CE  0E00               	movlw	0
  3804  0000D0  6E4F               	movwf	vfpfcnvrt@done^0,c
  3805                           
  3806                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  3807  0000D2  EFC0  F000         	goto	l4404
  3808  0000D6                     l4378:
  3809  0000D6  FFFF               	dw	65535	; assembler added errata NOP
  3810                           
  3811                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  3812  0000D8  0100               	movlb	0	; () banked
  3813  0000DA  818A               	bsf	_flags& (0+255),0,b
  3814  0000DC                     l4380:
  3815  0000DC  FFFF               	dw	65535	; assembler added errata NOP
  3816                           
  3817                           ; BSR set to: 0
  3818                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  3819  0000DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3820  0000E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3821  0000E6  2ADE               	incf	postinc2,f,c
  3822  0000E8  0E00               	movlw	0
  3823  0000EA  22DD               	addwfc	postdec2,f,c
  3824                           
  3825                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  3826  0000EC  EFC0  F000         	goto	l4404
  3827  0000F0                     l4382:
  3828  0000F0  FFFF               	dw	65535	; assembler added errata NOP
  3829                           
  3830                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  3831  0000F2  0100               	movlb	0	; () banked
  3832  0000F4  838A               	bsf	_flags& (0+255),1,b
  3833  0000F6  EF6E  F000         	goto	l4380
  3834  0000FA                     l4386:
  3835  0000FA  FFFF               	dw	65535	; assembler added errata NOP
  3836                           
  3837                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  3838  0000FC  0100               	movlb	0	; () banked
  3839  0000FE  858A               	bsf	_flags& (0+255),2,b
  3840  000100  EF6E  F000         	goto	l4380
  3841  000104                     l4390:
  3842  000104  FFFF               	dw	65535	; assembler added errata NOP
  3843                           
  3844                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  3845  000106  0100               	movlb	0	; () banked
  3846  000108  878A               	bsf	_flags& (0+255),3,b
  3847  00010A  EF6E  F000         	goto	l4380
  3848  00010E                     l4394:
  3849  00010E  FFFF               	dw	65535	; assembler added errata NOP
  3850                           
  3851                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  3852  000110  0100               	movlb	0	; () banked
  3853  000112  898A               	bsf	_flags& (0+255),4,b
  3854  000114  EF6E  F000         	goto	l4380
  3855  000118                     l4398:
  3856  000118  FFFF               	dw	65535	; assembler added errata NOP
  3857                           
  3858                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  3859  00011A  0E00               	movlw	0
  3860  00011C  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  3861  00011E  0E01               	movlw	1
  3862  000120  6E4F               	movwf	vfpfcnvrt@done^0,c
  3863                           
  3864                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  3865  000122  EFC0  F000         	goto	l4404
  3866  000126                     l4402:
  3867  000126  FFFF               	dw	65535	; assembler added errata NOP
  3868  000128  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3869  00012C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3870  000130  CFDE FFF6          	movff	postinc2,tblptrl
  3871  000134  CFDD FFF7          	movff	postdec2,tblptrh
  3872  000138                     	if	0	;tblptru may be non-zero
  3873  000138                     	endif
  3874  000138                     	if	0	;tblptru may be non-zero
  3875  000138                     	endif
  3876  000138  0008               	tblrd		*
  3877  00013A  FFFF               	dw	65535	; errata NOP
  3878  00013C  50F5               	movf	tablat,w,c
  3879  00013E  6E49               	movwf	??_vfpfcnvrt^0,c
  3880  000140  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  3881                           
  3882                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3883                           ; Switch size 1, requested type "simple"
  3884                           ; Number of cases is 1, Range of values is 0 to 0
  3885                           ; switch strategies available:
  3886                           ; Name         Instructions Cycles
  3887                           ; simple_byte            4     3 (average)
  3888                           ;	Chosen strategy is simple_byte
  3889  000142  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3890  000144  0A00               	xorlw	0	; case 0
  3891  000146  B4D8               	btfsc	status,2,c
  3892  000148  EFA8  F000         	goto	l5778
  3893  00014C  EF8C  F000         	goto	l4398
  3894  000150                     l5778:
  3895  000150  FFFF               	dw	65535	; assembler added errata NOP
  3896                           
  3897                           ; Switch size 1, requested type "simple"
  3898                           ; Number of cases is 5, Range of values is 32 to 48
  3899                           ; switch strategies available:
  3900                           ; Name         Instructions Cycles
  3901                           ; simple_byte           16     9 (average)
  3902                           ;	Chosen strategy is simple_byte
  3903  000152  5049               	movf	??_vfpfcnvrt^0,w,c
  3904  000154  0A20               	xorlw	32	; case 32
  3905  000156  B4D8               	btfsc	status,2,c
  3906  000158  EF82  F000         	goto	l4390
  3907  00015C  0A03               	xorlw	3	; case 35
  3908  00015E  B4D8               	btfsc	status,2,c
  3909  000160  EF87  F000         	goto	l4394
  3910  000164  0A08               	xorlw	8	; case 43
  3911  000166  B4D8               	btfsc	status,2,c
  3912  000168  EF7D  F000         	goto	l4386
  3913  00016C  0A06               	xorlw	6	; case 45
  3914  00016E  B4D8               	btfsc	status,2,c
  3915  000170  EF6B  F000         	goto	l4378
  3916  000174  0A1D               	xorlw	29	; case 48
  3917  000176  B4D8               	btfsc	status,2,c
  3918  000178  EF78  F000         	goto	l4382
  3919  00017C  EF8C  F000         	goto	l4398
  3920  000180                     l4404:
  3921  000180  FFFF               	dw	65535	; assembler added errata NOP
  3922                           
  3923                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  3924  000182  504F               	movf	vfpfcnvrt@done^0,w,c
  3925  000184  1050               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  3926  000186  B4D8               	btfsc	status,2,c
  3927  000188  EFC8  F000         	goto	u5201
  3928  00018C  EFCB  F000         	goto	u5200
  3929  000190                     u5201:
  3930  000190  FFFF               	dw	65535	; assembler added errata NOP
  3931  000192  EF93  F000         	goto	l4402
  3932  000196                     u5200:
  3933  000196  FFFF               	dw	65535	; assembler added errata NOP
  3934  000198                     
  3935                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  3936  000198  0100               	movlb	0	; () banked
  3937  00019A  A18A               	btfss	_flags& (0+255),0,b
  3938  00019C  EFD2  F000         	goto	u5211
  3939  0001A0  EFD5  F000         	goto	u5210
  3940  0001A4                     u5211:
  3941  0001A4  FFFF               	dw	65535	; assembler added errata NOP
  3942  0001A6  EFD7  F000         	goto	l4408
  3943  0001AA                     u5210:
  3944  0001AA  FFFF               	dw	65535	; assembler added errata NOP
  3945  0001AC                     
  3946                           ; BSR set to: 0
  3947                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  3948  0001AC  938A               	bcf	_flags& (0+255),1,b
  3949  0001AE                     l4408:
  3950  0001AE  FFFF               	dw	65535	; assembler added errata NOP
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  3954  0001B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3955  0001B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3956  0001B8  CFDE FFF6          	movff	postinc2,tblptrl
  3957  0001BC  CFDD FFF7          	movff	postdec2,tblptrh
  3958  0001C0                     	if	0	;tblptru may be non-zero
  3959  0001C0                     	endif
  3960  0001C0                     	if	0	;tblptru may be non-zero
  3961  0001C0                     	endif
  3962  0001C0  0008               	tblrd		*
  3963  0001C2  FFFF               	dw	65535	; errata NOP
  3964  0001C4  50F5               	movf	tablat,w,c
  3965  0001C6  0A2A               	xorlw	42
  3966  0001C8  A4D8               	btfss	status,2,c
  3967  0001CA  EFE9  F000         	goto	u5221
  3968  0001CE  EFEC  F000         	goto	u5220
  3969  0001D2                     u5221:
  3970  0001D2  FFFF               	dw	65535	; assembler added errata NOP
  3971  0001D4  EF18  F001         	goto	l4416
  3972  0001D8                     u5220:
  3973  0001D8  FFFF               	dw	65535	; assembler added errata NOP
  3974  0001DA                     
  3975                           ; BSR set to: 0
  3976                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  3977  0001DA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3978  0001DE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3979  0001E2  2ADE               	incf	postinc2,f,c
  3980  0001E4  0E00               	movlw	0
  3981  0001E6  22DD               	addwfc	postdec2,f,c
  3982                           
  3983                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3984  0001E8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3985  0001EC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3986  0001F0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3987  0001F4  0E02               	movlw	2
  3988  0001F6  26DE               	addwf	postinc2,f,c
  3989  0001F8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3990  0001FC  0E00               	movlw	0
  3991  0001FE  22DD               	addwfc	postdec2,f,c
  3992  000200  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3993  000204  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3994  000208  CFDE F086          	movff	postinc2,_width
  3995  00020C  CFDD F087          	movff	postdec2,_width+1
  3996  000210                     
  3997                           ; BSR set to: 0
  3998                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  3999  000210  BF87               	btfsc	(_width+1)& (0+255),7,b
  4000  000212  EF10  F001         	goto	u5230
  4001  000216  EF0D  F001         	goto	u5231
  4002  00021A                     u5231:
  4003  00021A  FFFF               	dw	65535	; assembler added errata NOP
  4004  00021C  EF63  F001         	goto	l4426
  4005  000220                     u5230:
  4006  000220  FFFF               	dw	65535	; assembler added errata NOP
  4007  000222                     
  4008                           ; BSR set to: 0
  4009                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  4010  000222  818A               	bsf	_flags& (0+255),0,b
  4011                           
  4012                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  4013  000224  6D86               	negf	_width& (0+255),b
  4014  000226  1F87               	comf	(_width+1)& (0+255),f,b
  4015  000228  B0D8               	btfsc	status,0,c
  4016  00022A  2B87               	incf	(_width+1)& (0+255),f,b
  4017  00022C  EF63  F001         	goto	l4426
  4018  000230                     l4416:
  4019  000230  FFFF               	dw	65535	; assembler added errata NOP
  4020                           
  4021                           ; BSR set to: 0
  4022                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  4023  000232  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4024  000236  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4025  00023A  CFDE F008          	movff	postinc2,atoi@s
  4026  00023E  CFDD F009          	movff	postdec2,atoi@s+1
  4027  000242  EC64  F01E         	call	_atoi	;wreg free
  4028  000246  C008  F086         	movff	?_atoi,_width
  4029  00024A  C009  F087         	movff	?_atoi+1,_width+1
  4030                           
  4031                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4032  00024E  EF31  F001         	goto	l4420
  4033  000252                     l4418:
  4034  000252  FFFF               	dw	65535	; assembler added errata NOP
  4035                           
  4036                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  4037  000254  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4038  000258  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4039  00025C  2ADE               	incf	postinc2,f,c
  4040  00025E  0E00               	movlw	0
  4041  000260  22DD               	addwfc	postdec2,f,c
  4042  000262                     l4420:
  4043  000262  FFFF               	dw	65535	; assembler added errata NOP
  4044  000264  0ED0               	movlw	208
  4045  000266  6E49               	movwf	??_vfpfcnvrt^0,c
  4046  000268  0EFF               	movlw	255
  4047  00026A  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  4048  00026C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4049  000270  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4050  000274  CFDE FFF6          	movff	postinc2,tblptrl
  4051  000278  CFDD FFF7          	movff	postdec2,tblptrh
  4052  00027C                     	if	0	;tblptru may be non-zero
  4053  00027C                     	endif
  4054  00027C                     	if	0	;tblptru may be non-zero
  4055  00027C                     	endif
  4056  00027C  0008               	tblrd		*
  4057  00027E  FFFF               	dw	65535	; errata NOP
  4058  000280  50F5               	movf	tablat,w,c
  4059  000282  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4060  000284  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  4061  000286  5049               	movf	??_vfpfcnvrt^0,w,c
  4062  000288  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4063  00028A  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  4064  00028C  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4065  00028E  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  4066  000290  E10B               	bnz	u5240
  4067  000292  0E0A               	movlw	10
  4068  000294  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4069  000296  A0D8               	btfss	status,0,c
  4070  000298  EF50  F001         	goto	u5241
  4071  00029C  EF54  F001         	goto	u5240
  4072  0002A0                     u5241:
  4073  0002A0  FFFF               	dw	65535	; assembler added errata NOP
  4074  0002A2  0E01               	movlw	1
  4075  0002A4  EF56  F001         	goto	u5250
  4076  0002A8                     u5240:
  4077  0002A8  FFFF               	dw	65535	; assembler added errata NOP
  4078  0002AA  0E00               	movlw	0
  4079  0002AC                     u5250:
  4080  0002AC  FFFF               	dw	65535	; assembler added errata NOP
  4081  0002AE  6E51               	movwf	_vfpfcnvrt$1688^0,c
  4082  0002B0  6A52               	clrf	(_vfpfcnvrt$1688+1)^0,c
  4083  0002B2  5051               	movf	_vfpfcnvrt$1688^0,w,c
  4084  0002B4  1052               	iorwf	(_vfpfcnvrt$1688+1)^0,w,c
  4085  0002B6  A4D8               	btfss	status,2,c
  4086  0002B8  EF60  F001         	goto	u5261
  4087  0002BC  EF63  F001         	goto	u5260
  4088  0002C0                     u5261:
  4089  0002C0  FFFF               	dw	65535	; assembler added errata NOP
  4090  0002C2  EF29  F001         	goto	l4418
  4091  0002C6                     u5260:
  4092  0002C6                     l4426:
  4093  0002C6  FFFF               	dw	65535	; assembler added errata NOP
  4094                           
  4095                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  4096  0002C8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4097  0002CC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4098  0002D0  CFDE FFF6          	movff	postinc2,tblptrl
  4099  0002D4  CFDD FFF7          	movff	postdec2,tblptrh
  4100  0002D8                     	if	0	;tblptru may be non-zero
  4101  0002D8                     	endif
  4102  0002D8                     	if	0	;tblptru may be non-zero
  4103  0002D8                     	endif
  4104  0002D8  0008               	tblrd		*
  4105  0002DA  FFFF               	dw	65535	; errata NOP
  4106  0002DC  50F5               	movf	tablat,w,c
  4107  0002DE  0A2E               	xorlw	46
  4108  0002E0  A4D8               	btfss	status,2,c
  4109  0002E2  EF75  F001         	goto	u5271
  4110  0002E6  EF78  F001         	goto	u5270
  4111  0002EA                     u5271:
  4112  0002EA  FFFF               	dw	65535	; assembler added errata NOP
  4113  0002EC  EF02  F002         	goto	l4446
  4114  0002F0                     u5270:
  4115  0002F0  FFFF               	dw	65535	; assembler added errata NOP
  4116  0002F2                     
  4117                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  4118  0002F2  0E00               	movlw	0
  4119  0002F4  0100               	movlb	0	; () banked
  4120  0002F6  6F89               	movwf	(_prec+1)& (0+255),b
  4121  0002F8  0E00               	movlw	0
  4122  0002FA  6F88               	movwf	_prec& (0+255),b
  4123  0002FC                     
  4124                           ; BSR set to: 0
  4125                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  4126  0002FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4127  000300  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4128  000304  2ADE               	incf	postinc2,f,c
  4129  000306  0E00               	movlw	0
  4130  000308  22DD               	addwfc	postdec2,f,c
  4131  00030A                     
  4132                           ; BSR set to: 0
  4133                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  4134  00030A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4135  00030E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4136  000312  CFDE FFF6          	movff	postinc2,tblptrl
  4137  000316  CFDD FFF7          	movff	postdec2,tblptrh
  4138  00031A                     	if	0	;tblptru may be non-zero
  4139  00031A                     	endif
  4140  00031A                     	if	0	;tblptru may be non-zero
  4141  00031A                     	endif
  4142  00031A  0008               	tblrd		*
  4143  00031C  FFFF               	dw	65535	; errata NOP
  4144  00031E  50F5               	movf	tablat,w,c
  4145  000320  0A2A               	xorlw	42
  4146  000322  A4D8               	btfss	status,2,c
  4147  000324  EF96  F001         	goto	u5281
  4148  000328  EF99  F001         	goto	u5280
  4149  00032C                     u5281:
  4150  00032C  FFFF               	dw	65535	; assembler added errata NOP
  4151  00032E  EFB7  F001         	goto	l4436
  4152  000332                     u5280:
  4153  000332  FFFF               	dw	65535	; assembler added errata NOP
  4154  000334                     
  4155                           ; BSR set to: 0
  4156                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  4157  000334  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4158  000338  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4159  00033C  2ADE               	incf	postinc2,f,c
  4160  00033E  0E00               	movlw	0
  4161  000340  22DD               	addwfc	postdec2,f,c
  4162                           
  4163                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4164  000342  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4165  000346  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4166  00034A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4167  00034E  0E02               	movlw	2
  4168  000350  26DE               	addwf	postinc2,f,c
  4169  000352  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4170  000356  0E00               	movlw	0
  4171  000358  22DD               	addwfc	postdec2,f,c
  4172  00035A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4173  00035E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4174  000362  CFDE F088          	movff	postinc2,_prec
  4175  000366  CFDD F089          	movff	postdec2,_prec+1
  4176                           
  4177                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  4178  00036A  EF02  F002         	goto	l4446
  4179  00036E                     l4436:
  4180  00036E  FFFF               	dw	65535	; assembler added errata NOP
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  4184  000370  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4185  000374  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4186  000378  CFDE F008          	movff	postinc2,atoi@s
  4187  00037C  CFDD F009          	movff	postdec2,atoi@s+1
  4188  000380  EC64  F01E         	call	_atoi	;wreg free
  4189  000384  C008  F088         	movff	?_atoi,_prec
  4190  000388  C009  F089         	movff	?_atoi+1,_prec+1
  4191                           
  4192                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4193  00038C  EFD0  F001         	goto	l4440
  4194  000390                     l4438:
  4195  000390  FFFF               	dw	65535	; assembler added errata NOP
  4196                           
  4197                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  4198  000392  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4199  000396  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4200  00039A  2ADE               	incf	postinc2,f,c
  4201  00039C  0E00               	movlw	0
  4202  00039E  22DD               	addwfc	postdec2,f,c
  4203  0003A0                     l4440:
  4204  0003A0  FFFF               	dw	65535	; assembler added errata NOP
  4205  0003A2  0ED0               	movlw	208
  4206  0003A4  6E49               	movwf	??_vfpfcnvrt^0,c
  4207  0003A6  0EFF               	movlw	255
  4208  0003A8  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  4209  0003AA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4210  0003AE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4211  0003B2  CFDE FFF6          	movff	postinc2,tblptrl
  4212  0003B6  CFDD FFF7          	movff	postdec2,tblptrh
  4213  0003BA                     	if	0	;tblptru may be non-zero
  4214  0003BA                     	endif
  4215  0003BA                     	if	0	;tblptru may be non-zero
  4216  0003BA                     	endif
  4217  0003BA  0008               	tblrd		*
  4218  0003BC  FFFF               	dw	65535	; errata NOP
  4219  0003BE  50F5               	movf	tablat,w,c
  4220  0003C0  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4221  0003C2  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  4222  0003C4  5049               	movf	??_vfpfcnvrt^0,w,c
  4223  0003C6  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4224  0003C8  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  4225  0003CA  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4226  0003CC  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  4227  0003CE  E10B               	bnz	u5290
  4228  0003D0  0E0A               	movlw	10
  4229  0003D2  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4230  0003D4  A0D8               	btfss	status,0,c
  4231  0003D6  EFEF  F001         	goto	u5291
  4232  0003DA  EFF3  F001         	goto	u5290
  4233  0003DE                     u5291:
  4234  0003DE  FFFF               	dw	65535	; assembler added errata NOP
  4235  0003E0  0E01               	movlw	1
  4236  0003E2  EFF5  F001         	goto	u5300
  4237  0003E6                     u5290:
  4238  0003E6  FFFF               	dw	65535	; assembler added errata NOP
  4239  0003E8  0E00               	movlw	0
  4240  0003EA                     u5300:
  4241  0003EA  FFFF               	dw	65535	; assembler added errata NOP
  4242  0003EC  6E53               	movwf	_vfpfcnvrt$1689^0,c
  4243  0003EE  6A54               	clrf	(_vfpfcnvrt$1689+1)^0,c
  4244  0003F0  5053               	movf	_vfpfcnvrt$1689^0,w,c
  4245  0003F2  1054               	iorwf	(_vfpfcnvrt$1689+1)^0,w,c
  4246  0003F4  A4D8               	btfss	status,2,c
  4247  0003F6  EFFF  F001         	goto	u5311
  4248  0003FA  EF02  F002         	goto	u5310
  4249  0003FE                     u5311:
  4250  0003FE  FFFF               	dw	65535	; assembler added errata NOP
  4251  000400  EFC8  F001         	goto	l4438
  4252  000404                     u5310:
  4253  000404                     l4446:
  4254  000404  FFFF               	dw	65535	; assembler added errata NOP
  4255                           
  4256                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 792:         if (
      +                          *fmt[0] == 'c') {
  4257  000406  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4258  00040A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4259  00040E  CFDE FFF6          	movff	postinc2,tblptrl
  4260  000412  CFDD FFF7          	movff	postdec2,tblptrh
  4261  000416                     	if	0	;tblptru may be non-zero
  4262  000416                     	endif
  4263  000416                     	if	0	;tblptru may be non-zero
  4264  000416                     	endif
  4265  000416  0008               	tblrd		*
  4266  000418  FFFF               	dw	65535	; errata NOP
  4267  00041A  50F5               	movf	tablat,w,c
  4268  00041C  0A63               	xorlw	99
  4269  00041E  A4D8               	btfss	status,2,c
  4270  000420  EF14  F002         	goto	u5321
  4271  000424  EF17  F002         	goto	u5320
  4272  000428                     u5321:
  4273  000428  FFFF               	dw	65535	; assembler added errata NOP
  4274  00042A  EF3F  F002         	goto	l4454
  4275  00042E                     u5320:
  4276  00042E  FFFF               	dw	65535	; assembler added errata NOP
  4277  000430                     
  4278                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 793:             
      +                          ++*fmt;
  4279  000430  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4280  000434  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4281  000438  2ADE               	incf	postinc2,f,c
  4282  00043A  0E00               	movlw	0
  4283  00043C  22DD               	addwfc	postdec2,f,c
  4284                           
  4285                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 794:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4286  00043E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4287  000442  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4288  000446  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4289  00044A  0E02               	movlw	2
  4290  00044C  26DE               	addwf	postinc2,f,c
  4291  00044E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4292  000452  0E00               	movlw	0
  4293  000454  22DD               	addwfc	postdec2,f,c
  4294  000456  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4295  00045A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4296  00045E  50DF               	movf	indf2,w,c
  4297  000460  6E5F               	movwf	vfpfcnvrt@c^0,c
  4298  000462                     
  4299                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 795:             
      +                          return ctoa(fp, c);
  4300  000462  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  4301  000466  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4302  00046A  C05F  F01E         	movff	vfpfcnvrt@c,ctoa@c
  4303  00046E  EC02  F035         	call	_ctoa	;wreg free
  4304  000472  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  4305  000476  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  4306  00047A  EF2E  F00A         	goto	l1307
  4307  00047E                     l4454:
  4308  00047E  FFFF               	dw	65535	; assembler added errata NOP
  4309                           
  4310                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 802:         if (
      +                          !strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((s
      +                          izeof("hhi")/sizeof("hhi"[0]))-1))) {
  4311  000480  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4312  000484  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4313  000488  CFDE F001          	movff	postinc2,strncmp@_l
  4314  00048C  CFDD F002          	movff	postdec2,strncmp@_l+1
  4315  000490  0ECF               	movlw	low STR_11
  4316  000492  6E03               	movwf	strncmp@_r^0,c
  4317  000494  0E7F               	movlw	high STR_11
  4318  000496  6E04               	movwf	(strncmp@_r+1)^0,c
  4319  000498  0E00               	movlw	0
  4320  00049A  6E06               	movwf	(strncmp@n+1)^0,c
  4321  00049C  0E03               	movlw	3
  4322  00049E  6E05               	movwf	strncmp@n^0,c
  4323  0004A0  ECE2  F03A         	call	_strncmp	;wreg free
  4324  0004A4  5001               	movf	?_strncmp^0,w,c
  4325  0004A6  1002               	iorwf	(?_strncmp+1)^0,w,c
  4326  0004A8  B4D8               	btfsc	status,2,c
  4327  0004AA  EF59  F002         	goto	u5331
  4328  0004AE  EF5C  F002         	goto	u5330
  4329  0004B2                     u5331:
  4330  0004B2  FFFF               	dw	65535	; assembler added errata NOP
  4331  0004B4  EF79  F002         	goto	l4458
  4332  0004B8                     u5330:
  4333  0004B8  FFFF               	dw	65535	; assembler added errata NOP
  4334  0004BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4335  0004BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4336  0004C2  CFDE F001          	movff	postinc2,strncmp@_l
  4337  0004C6  CFDD F002          	movff	postdec2,strncmp@_l+1
  4338  0004CA  0ED3               	movlw	low STR_15
  4339  0004CC  6E03               	movwf	strncmp@_r^0,c
  4340  0004CE  0E7F               	movlw	high STR_15
  4341  0004D0  6E04               	movwf	(strncmp@_r+1)^0,c
  4342  0004D2  0E00               	movlw	0
  4343  0004D4  6E06               	movwf	(strncmp@n+1)^0,c
  4344  0004D6  0E03               	movlw	3
  4345  0004D8  6E05               	movwf	strncmp@n^0,c
  4346  0004DA  ECE2  F03A         	call	_strncmp	;wreg free
  4347  0004DE  5001               	movf	?_strncmp^0,w,c
  4348  0004E0  1002               	iorwf	(?_strncmp+1)^0,w,c
  4349  0004E2  A4D8               	btfss	status,2,c
  4350  0004E4  EF76  F002         	goto	u5341
  4351  0004E8  EF79  F002         	goto	u5340
  4352  0004EC                     u5341:
  4353  0004EC  FFFF               	dw	65535	; assembler added errata NOP
  4354  0004EE  EFBB  F002         	goto	l4464
  4355  0004F2                     u5340:
  4356  0004F2                     l4458:
  4357  0004F2  FFFF               	dw	65535	; assembler added errata NOP
  4358                           
  4359                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 803: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 805:             *fmt += ((si
      +                          zeof("hhd")/sizeof("hhd"[0]))-1);
  4360  0004F4  0E03               	movlw	3
  4361  0004F6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4362  0004FA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4363  0004FE  26DE               	addwf	postinc2,f,c
  4364  000500  0E00               	movlw	0
  4365  000502  22DD               	addwfc	postdec2,f,c
  4366                           
  4367                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 806:             
      +                          ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4368  000504  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4369  000508  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4370  00050C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4371  000510  0E02               	movlw	2
  4372  000512  26DE               	addwf	postinc2,f,c
  4373  000514  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4374  000518  0E00               	movlw	0
  4375  00051A  22DD               	addwfc	postdec2,f,c
  4376  00051C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4377  000520  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4378  000524  50DF               	movf	indf2,w,c
  4379  000526  6E55               	movwf	vfpfcnvrt@ll^0,c
  4380  000528  0E00               	movlw	0
  4381  00052A  BE55               	btfsc	vfpfcnvrt@ll^0,7,c
  4382  00052C  0EFF               	movlw	-1
  4383  00052E  6E56               	movwf	(vfpfcnvrt@ll+1)^0,c
  4384  000530  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  4385  000532  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  4386  000534  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  4387  000536  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  4388  000538  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  4389  00053A  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  4390  00053C                     l4460:
  4391  00053C  FFFF               	dw	65535	; assembler added errata NOP
  4392                           
  4393                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 808:             
      +                          return dtoa(fp, ll);
  4394  00053E  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  4395  000542  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4396  000546  C055  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  4397  00054A  C056  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4398  00054E  C057  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4399  000552  C058  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4400  000556  C059  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4401  00055A  C05A  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4402  00055E  C05B  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4403  000562  C05C  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4404  000566  EC23  F017         	call	_dtoa	;wreg free
  4405  00056A  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  4406  00056E  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4407  000572  EF2E  F00A         	goto	l1307
  4408  000576                     l4464:
  4409  000576  FFFF               	dw	65535	; assembler added errata NOP
  4410                           
  4411                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          !strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeo
      +                          f("hi")/sizeof("hi"[0]))-1))) {
  4412  000578  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4413  00057C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4414  000580  CFDE F001          	movff	postinc2,strncmp@_l
  4415  000584  CFDD F002          	movff	postdec2,strncmp@_l+1
  4416  000588  0ED0               	movlw	low (STR_11+1)
  4417  00058A  6E03               	movwf	strncmp@_r^0,c
  4418  00058C  0E7F               	movlw	high (STR_11+1)
  4419  00058E  6E04               	movwf	(strncmp@_r+1)^0,c
  4420  000590  0E00               	movlw	0
  4421  000592  6E06               	movwf	(strncmp@n+1)^0,c
  4422  000594  0E02               	movlw	2
  4423  000596  6E05               	movwf	strncmp@n^0,c
  4424  000598  ECE2  F03A         	call	_strncmp	;wreg free
  4425  00059C  5001               	movf	?_strncmp^0,w,c
  4426  00059E  1002               	iorwf	(?_strncmp+1)^0,w,c
  4427  0005A0  B4D8               	btfsc	status,2,c
  4428  0005A2  EFD5  F002         	goto	u5351
  4429  0005A6  EFD8  F002         	goto	u5350
  4430  0005AA                     u5351:
  4431  0005AA  FFFF               	dw	65535	; assembler added errata NOP
  4432  0005AC  EFF5  F002         	goto	l4468
  4433  0005B0                     u5350:
  4434  0005B0  FFFF               	dw	65535	; assembler added errata NOP
  4435  0005B2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4436  0005B6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4437  0005BA  CFDE F001          	movff	postinc2,strncmp@_l
  4438  0005BE  CFDD F002          	movff	postdec2,strncmp@_l+1
  4439  0005C2  0ED4               	movlw	low (STR_15+1)
  4440  0005C4  6E03               	movwf	strncmp@_r^0,c
  4441  0005C6  0E7F               	movlw	high (STR_15+1)
  4442  0005C8  6E04               	movwf	(strncmp@_r+1)^0,c
  4443  0005CA  0E00               	movlw	0
  4444  0005CC  6E06               	movwf	(strncmp@n+1)^0,c
  4445  0005CE  0E02               	movlw	2
  4446  0005D0  6E05               	movwf	strncmp@n^0,c
  4447  0005D2  ECE2  F03A         	call	_strncmp	;wreg free
  4448  0005D6  5001               	movf	?_strncmp^0,w,c
  4449  0005D8  1002               	iorwf	(?_strncmp+1)^0,w,c
  4450  0005DA  A4D8               	btfss	status,2,c
  4451  0005DC  EFF2  F002         	goto	u5361
  4452  0005E0  EFF5  F002         	goto	u5360
  4453  0005E4                     u5361:
  4454  0005E4  FFFF               	dw	65535	; assembler added errata NOP
  4455  0005E6  EF1D  F003         	goto	l4474
  4456  0005EA                     u5360:
  4457  0005EA                     l4468:
  4458  0005EA  FFFF               	dw	65535	; assembler added errata NOP
  4459                           
  4460                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 815: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 817:             *fmt += ((si
      +                          zeof("hd")/sizeof("hd"[0]))-1);
  4461  0005EC  0E02               	movlw	2
  4462  0005EE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4463  0005F2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4464  0005F6  26DE               	addwf	postinc2,f,c
  4465  0005F8  0E00               	movlw	0
  4466  0005FA  22DD               	addwfc	postdec2,f,c
  4467                           
  4468                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 818:             
      +                          ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4469  0005FC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4470  000600  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4471  000604  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4472  000608  0E02               	movlw	2
  4473  00060A  26DE               	addwf	postinc2,f,c
  4474  00060C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4475  000610  0E00               	movlw	0
  4476  000612  22DD               	addwfc	postdec2,f,c
  4477  000614  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4478  000618  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4479  00061C  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  4480  000620  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  4481  000624  0E00               	movlw	0
  4482  000626  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4483  000628  0EFF               	movlw	-1
  4484  00062A  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  4485  00062C  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  4486  00062E  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  4487  000630  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  4488  000632  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  4489  000634  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  4490  000636  EF9E  F002         	goto	l4460
  4491  00063A                     l4474:
  4492  00063A  FFFF               	dw	65535	; assembler added errata NOP
  4493                           
  4494                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4495  00063C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4496  000640  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4497  000644  CFDE FFF6          	movff	postinc2,tblptrl
  4498  000648  CFDD FFF7          	movff	postdec2,tblptrh
  4499  00064C                     	if	0	;tblptru may be non-zero
  4500  00064C                     	endif
  4501  00064C                     	if	0	;tblptru may be non-zero
  4502  00064C                     	endif
  4503  00064C  0008               	tblrd		*
  4504  00064E  FFFF               	dw	65535	; errata NOP
  4505  000650  50F5               	movf	tablat,w,c
  4506  000652  0A64               	xorlw	100
  4507  000654  B4D8               	btfsc	status,2,c
  4508  000656  EF2F  F003         	goto	u5371
  4509  00065A  EF32  F003         	goto	u5370
  4510  00065E                     u5371:
  4511  00065E  FFFF               	dw	65535	; assembler added errata NOP
  4512  000660  EF47  F003         	goto	l4478
  4513  000664                     u5370:
  4514  000664  FFFF               	dw	65535	; assembler added errata NOP
  4515  000666  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4516  00066A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4517  00066E  CFDE FFF6          	movff	postinc2,tblptrl
  4518  000672  CFDD FFF7          	movff	postdec2,tblptrh
  4519  000676                     	if	0	;tblptru may be non-zero
  4520  000676                     	endif
  4521  000676                     	if	0	;tblptru may be non-zero
  4522  000676                     	endif
  4523  000676  0008               	tblrd		*
  4524  000678  FFFF               	dw	65535	; errata NOP
  4525  00067A  50F5               	movf	tablat,w,c
  4526  00067C  0A69               	xorlw	105
  4527  00067E  A4D8               	btfss	status,2,c
  4528  000680  EF44  F003         	goto	u5381
  4529  000684  EF47  F003         	goto	u5380
  4530  000688                     u5381:
  4531  000688  FFFF               	dw	65535	; assembler added errata NOP
  4532  00068A  EF6E  F003         	goto	l4484
  4533  00068E                     u5380:
  4534  00068E                     l4478:
  4535  00068E  FFFF               	dw	65535	; assembler added errata NOP
  4536                           
  4537                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  4538  000690  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4539  000694  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4540  000698  2ADE               	incf	postinc2,f,c
  4541  00069A  0E00               	movlw	0
  4542  00069C  22DD               	addwfc	postdec2,f,c
  4543                           
  4544                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4545  00069E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4546  0006A2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4547  0006A6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4548  0006AA  0E02               	movlw	2
  4549  0006AC  26DE               	addwf	postinc2,f,c
  4550  0006AE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4551  0006B2  0E00               	movlw	0
  4552  0006B4  22DD               	addwfc	postdec2,f,c
  4553  0006B6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4554  0006BA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4555  0006BE  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  4556  0006C2  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  4557  0006C6  0E00               	movlw	0
  4558  0006C8  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4559  0006CA  0EFF               	movlw	-1
  4560  0006CC  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  4561  0006CE  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  4562  0006D0  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  4563  0006D2  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  4564  0006D4  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  4565  0006D6  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  4566  0006D8  EF9E  F002         	goto	l4460
  4567  0006DC                     l4484:
  4568  0006DC  FFFF               	dw	65535	; assembler added errata NOP
  4569                           
  4570                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 883:         if (
      +                          !strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeo
      +                          f("zi")/sizeof("zi"[0]))-1))) {
  4571  0006DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4572  0006E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4573  0006E6  CFDE F001          	movff	postinc2,strncmp@_l
  4574  0006EA  CFDD F002          	movff	postdec2,strncmp@_l+1
  4575  0006EE  0EEA               	movlw	low STR_29
  4576  0006F0  6E03               	movwf	strncmp@_r^0,c
  4577  0006F2  0E7F               	movlw	high STR_29
  4578  0006F4  6E04               	movwf	(strncmp@_r+1)^0,c
  4579  0006F6  0E00               	movlw	0
  4580  0006F8  6E06               	movwf	(strncmp@n+1)^0,c
  4581  0006FA  0E02               	movlw	2
  4582  0006FC  6E05               	movwf	strncmp@n^0,c
  4583  0006FE  ECE2  F03A         	call	_strncmp	;wreg free
  4584  000702  5001               	movf	?_strncmp^0,w,c
  4585  000704  1002               	iorwf	(?_strncmp+1)^0,w,c
  4586  000706  B4D8               	btfsc	status,2,c
  4587  000708  EF88  F003         	goto	u5391
  4588  00070C  EF8B  F003         	goto	u5390
  4589  000710                     u5391:
  4590  000710  FFFF               	dw	65535	; assembler added errata NOP
  4591  000712  EFA8  F003         	goto	l4488
  4592  000716                     u5390:
  4593  000716  FFFF               	dw	65535	; assembler added errata NOP
  4594  000718  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4595  00071C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4596  000720  CFDE F001          	movff	postinc2,strncmp@_l
  4597  000724  CFDD F002          	movff	postdec2,strncmp@_l+1
  4598  000728  0EED               	movlw	low STR_33
  4599  00072A  6E03               	movwf	strncmp@_r^0,c
  4600  00072C  0E7F               	movlw	high STR_33
  4601  00072E  6E04               	movwf	(strncmp@_r+1)^0,c
  4602  000730  0E00               	movlw	0
  4603  000732  6E06               	movwf	(strncmp@n+1)^0,c
  4604  000734  0E02               	movlw	2
  4605  000736  6E05               	movwf	strncmp@n^0,c
  4606  000738  ECE2  F03A         	call	_strncmp	;wreg free
  4607  00073C  5001               	movf	?_strncmp^0,w,c
  4608  00073E  1002               	iorwf	(?_strncmp+1)^0,w,c
  4609  000740  A4D8               	btfss	status,2,c
  4610  000742  EFA5  F003         	goto	u5401
  4611  000746  EFA8  F003         	goto	u5400
  4612  00074A                     u5401:
  4613  00074A  FFFF               	dw	65535	; assembler added errata NOP
  4614  00074C  EFD1  F003         	goto	l4494
  4615  000750                     u5400:
  4616  000750                     l4488:
  4617  000750  FFFF               	dw	65535	; assembler added errata NOP
  4618                           
  4619                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 884: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 886:             *fmt += ((si
      +                          zeof("zd")/sizeof("zd"[0]))-1);
  4620  000752  0E02               	movlw	2
  4621  000754  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4622  000758  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4623  00075C  26DE               	addwf	postinc2,f,c
  4624  00075E  0E00               	movlw	0
  4625  000760  22DD               	addwfc	postdec2,f,c
  4626                           
  4627                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 887:             
      +                          ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4628  000762  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4629  000766  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4630  00076A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4631  00076E  0E02               	movlw	2
  4632  000770  26DE               	addwf	postinc2,f,c
  4633  000772  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4634  000776  0E00               	movlw	0
  4635  000778  22DD               	addwfc	postdec2,f,c
  4636  00077A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4637  00077E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4638  000782  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4639  000786  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4640  00078A  C04B  F055         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  4641  00078E  C04C  F056         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  4642  000792  6A57               	clrf	(vfpfcnvrt@ll+2)^0,c
  4643  000794  6A58               	clrf	(vfpfcnvrt@ll+3)^0,c
  4644  000796  6A59               	clrf	(vfpfcnvrt@ll+4)^0,c
  4645  000798  6A5A               	clrf	(vfpfcnvrt@ll+5)^0,c
  4646  00079A  6A5B               	clrf	(vfpfcnvrt@ll+6)^0,c
  4647  00079C  6A5C               	clrf	(vfpfcnvrt@ll+7)^0,c
  4648  00079E  EF9E  F002         	goto	l4460
  4649  0007A2                     l4494:
  4650  0007A2  FFFF               	dw	65535	; assembler added errata NOP
  4651                           
  4652                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 969:         if (
      +                          !strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  4653  0007A4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4654  0007A8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4655  0007AC  CFDE F001          	movff	postinc2,strncmp@_l
  4656  0007B0  CFDD F002          	movff	postdec2,strncmp@_l+1
  4657  0007B4  0EDB               	movlw	low STR_38
  4658  0007B6  6E03               	movwf	strncmp@_r^0,c
  4659  0007B8  0E7F               	movlw	high STR_38
  4660  0007BA  6E04               	movwf	(strncmp@_r+1)^0,c
  4661  0007BC  0E00               	movlw	0
  4662  0007BE  6E06               	movwf	(strncmp@n+1)^0,c
  4663  0007C0  0E03               	movlw	3
  4664  0007C2  6E05               	movwf	strncmp@n^0,c
  4665  0007C4  ECE2  F03A         	call	_strncmp	;wreg free
  4666  0007C8  5001               	movf	?_strncmp^0,w,c
  4667  0007CA  1002               	iorwf	(?_strncmp+1)^0,w,c
  4668  0007CC  A4D8               	btfss	status,2,c
  4669  0007CE  EFEB  F003         	goto	u5411
  4670  0007D2  EFEE  F003         	goto	u5410
  4671  0007D6                     u5411:
  4672  0007D6  FFFF               	dw	65535	; assembler added errata NOP
  4673  0007D8  EF2F  F004         	goto	l4502
  4674  0007DC                     u5410:
  4675  0007DC  FFFF               	dw	65535	; assembler added errata NOP
  4676  0007DE                     
  4677                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 971:             
      +                          *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  4678  0007DE  0E03               	movlw	3
  4679  0007E0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4680  0007E4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4681  0007E8  26DE               	addwf	postinc2,f,c
  4682  0007EA  0E00               	movlw	0
  4683  0007EC  22DD               	addwfc	postdec2,f,c
  4684                           
  4685                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 972:             
      +                          llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4686  0007EE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4687  0007F2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4688  0007F6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4689  0007FA  0E02               	movlw	2
  4690  0007FC  26DE               	addwf	postinc2,f,c
  4691  0007FE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4692  000802  0E00               	movlw	0
  4693  000804  22DD               	addwfc	postdec2,f,c
  4694  000806  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4695  00080A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4696  00080E  50DF               	movf	indf2,w,c
  4697  000810  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4698  000812  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  4699  000814  6E60               	movwf	vfpfcnvrt@llu^0,c
  4700  000816  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  4701  000818  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4702  00081A  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4703  00081C  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4704  00081E  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4705  000820  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4706  000822  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4707  000824                     l4498:
  4708  000824  FFFF               	dw	65535	; assembler added errata NOP
  4709                           
  4710                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 974:             
      +                          return otoa(fp, llu);
  4711  000826  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  4712  00082A  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  4713  00082E  C060  F01E         	movff	vfpfcnvrt@llu,otoa@d
  4714  000832  C061  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  4715  000836  C062  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  4716  00083A  C063  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  4717  00083E  C064  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  4718  000842  C065  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  4719  000846  C066  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  4720  00084A  C067  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  4721  00084E  EC6B  F01B         	call	_otoa	;wreg free
  4722  000852  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  4723  000856  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  4724  00085A  EF2E  F00A         	goto	l1307
  4725  00085E                     l4502:
  4726  00085E  FFFF               	dw	65535	; assembler added errata NOP
  4727                           
  4728                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 980:         if (
      +                          !strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  4729  000860  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4730  000864  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4731  000868  CFDE F001          	movff	postinc2,strncmp@_l
  4732  00086C  CFDD F002          	movff	postdec2,strncmp@_l+1
  4733  000870  0EDC               	movlw	low (STR_38+1)
  4734  000872  6E03               	movwf	strncmp@_r^0,c
  4735  000874  0E7F               	movlw	high (STR_38+1)
  4736  000876  6E04               	movwf	(strncmp@_r+1)^0,c
  4737  000878  0E00               	movlw	0
  4738  00087A  6E06               	movwf	(strncmp@n+1)^0,c
  4739  00087C  0E02               	movlw	2
  4740  00087E  6E05               	movwf	strncmp@n^0,c
  4741  000880  ECE2  F03A         	call	_strncmp	;wreg free
  4742  000884  5001               	movf	?_strncmp^0,w,c
  4743  000886  1002               	iorwf	(?_strncmp+1)^0,w,c
  4744  000888  A4D8               	btfss	status,2,c
  4745  00088A  EF49  F004         	goto	u5421
  4746  00088E  EF4C  F004         	goto	u5420
  4747  000892                     u5421:
  4748  000892  FFFF               	dw	65535	; assembler added errata NOP
  4749  000894  EF75  F004         	goto	l4510
  4750  000898                     u5420:
  4751  000898  FFFF               	dw	65535	; assembler added errata NOP
  4752  00089A                     
  4753                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 982:             
      +                          *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  4754  00089A  0E02               	movlw	2
  4755  00089C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4756  0008A0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4757  0008A4  26DE               	addwf	postinc2,f,c
  4758  0008A6  0E00               	movlw	0
  4759  0008A8  22DD               	addwfc	postdec2,f,c
  4760                           
  4761                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 983:             
      +                          llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4762  0008AA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4763  0008AE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4764  0008B2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4765  0008B6  0E02               	movlw	2
  4766  0008B8  26DE               	addwf	postinc2,f,c
  4767  0008BA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4768  0008BE  0E00               	movlw	0
  4769  0008C0  22DD               	addwfc	postdec2,f,c
  4770  0008C2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4771  0008C6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4772  0008CA  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4773  0008CE  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4774  0008D2  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4775  0008D6  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4776  0008DA  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4777  0008DC  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4778  0008DE  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4779  0008E0  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4780  0008E2  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4781  0008E4  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4782  0008E6  EF12  F004         	goto	l4498
  4783  0008EA                     l4510:
  4784  0008EA  FFFF               	dw	65535	; assembler added errata NOP
  4785                           
  4786                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 990:         if (
      +                          *fmt[0] == 'o') {
  4787  0008EC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4788  0008F0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4789  0008F4  CFDE FFF6          	movff	postinc2,tblptrl
  4790  0008F8  CFDD FFF7          	movff	postdec2,tblptrh
  4791  0008FC                     	if	0	;tblptru may be non-zero
  4792  0008FC                     	endif
  4793  0008FC                     	if	0	;tblptru may be non-zero
  4794  0008FC                     	endif
  4795  0008FC  0008               	tblrd		*
  4796  0008FE  FFFF               	dw	65535	; errata NOP
  4797  000900  50F5               	movf	tablat,w,c
  4798  000902  0A6F               	xorlw	111
  4799  000904  A4D8               	btfss	status,2,c
  4800  000906  EF87  F004         	goto	u5431
  4801  00090A  EF8A  F004         	goto	u5430
  4802  00090E                     u5431:
  4803  00090E  FFFF               	dw	65535	; assembler added errata NOP
  4804  000910  EFB2  F004         	goto	l4518
  4805  000914                     u5430:
  4806  000914  FFFF               	dw	65535	; assembler added errata NOP
  4807  000916                     
  4808                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 992:             
      +                          ++*fmt;
  4809  000916  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4810  00091A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4811  00091E  2ADE               	incf	postinc2,f,c
  4812  000920  0E00               	movlw	0
  4813  000922  22DD               	addwfc	postdec2,f,c
  4814                           
  4815                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 993:             
      +                          llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int
      +                          )0));
  4816  000924  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4817  000928  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4818  00092C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4819  000930  0E02               	movlw	2
  4820  000932  26DE               	addwf	postinc2,f,c
  4821  000934  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4822  000938  0E00               	movlw	0
  4823  00093A  22DD               	addwfc	postdec2,f,c
  4824  00093C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4825  000940  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4826  000944  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4827  000948  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4828  00094C  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4829  000950  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4830  000954  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4831  000956  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4832  000958  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4833  00095A  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4834  00095C  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4835  00095E  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4836  000960  EF12  F004         	goto	l4498
  4837  000964                     l4518:
  4838  000964  FFFF               	dw	65535	; assembler added errata NOP
  4839                           
  4840                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1044:         if 
      +                          (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  4841  000966  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4842  00096A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4843  00096E  CFDE F001          	movff	postinc2,strncmp@_l
  4844  000972  CFDD F002          	movff	postdec2,strncmp@_l+1
  4845  000976  0EF3               	movlw	low STR_48
  4846  000978  6E03               	movwf	strncmp@_r^0,c
  4847  00097A  0E7F               	movlw	high STR_48
  4848  00097C  6E04               	movwf	(strncmp@_r+1)^0,c
  4849  00097E  0E00               	movlw	0
  4850  000980  6E06               	movwf	(strncmp@n+1)^0,c
  4851  000982  0E02               	movlw	2
  4852  000984  6E05               	movwf	strncmp@n^0,c
  4853  000986  ECE2  F03A         	call	_strncmp	;wreg free
  4854  00098A  5001               	movf	?_strncmp^0,w,c
  4855  00098C  1002               	iorwf	(?_strncmp+1)^0,w,c
  4856  00098E  A4D8               	btfss	status,2,c
  4857  000990  EFCC  F004         	goto	u5441
  4858  000994  EFCF  F004         	goto	u5440
  4859  000998                     u5441:
  4860  000998  FFFF               	dw	65535	; assembler added errata NOP
  4861  00099A  EFF8  F004         	goto	l4526
  4862  00099E                     u5440:
  4863  00099E  FFFF               	dw	65535	; assembler added errata NOP
  4864  0009A0                     
  4865                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1046:            
      +                           *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  4866  0009A0  0E02               	movlw	2
  4867  0009A2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4868  0009A6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4869  0009AA  26DE               	addwf	postinc2,f,c
  4870  0009AC  0E00               	movlw	0
  4871  0009AE  22DD               	addwfc	postdec2,f,c
  4872                           
  4873                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1047:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4874  0009B0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4875  0009B4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4876  0009B8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4877  0009BC  0E02               	movlw	2
  4878  0009BE  26DE               	addwf	postinc2,f,c
  4879  0009C0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4880  0009C4  0E00               	movlw	0
  4881  0009C6  22DD               	addwfc	postdec2,f,c
  4882  0009C8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4883  0009CC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4884  0009D0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4885  0009D4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4886  0009D8  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4887  0009DC  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4888  0009E0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4889  0009E2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4890  0009E4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4891  0009E6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4892  0009E8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4893  0009EA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4894  0009EC  EF12  F004         	goto	l4498
  4895  0009F0                     l4526:
  4896  0009F0  FFFF               	dw	65535	; assembler added errata NOP
  4897                           
  4898                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1058:         if 
      +                          (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  4899  0009F2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4900  0009F6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4901  0009FA  CFDE F001          	movff	postinc2,strncmp@_l
  4902  0009FE  CFDD F002          	movff	postdec2,strncmp@_l+1
  4903  000A02  0ED7               	movlw	low STR_53
  4904  000A04  6E03               	movwf	strncmp@_r^0,c
  4905  000A06  0E7F               	movlw	high STR_53
  4906  000A08  6E04               	movwf	(strncmp@_r+1)^0,c
  4907  000A0A  0E00               	movlw	0
  4908  000A0C  6E06               	movwf	(strncmp@n+1)^0,c
  4909  000A0E  0E03               	movlw	3
  4910  000A10  6E05               	movwf	strncmp@n^0,c
  4911  000A12  ECE2  F03A         	call	_strncmp	;wreg free
  4912  000A16  5001               	movf	?_strncmp^0,w,c
  4913  000A18  1002               	iorwf	(?_strncmp+1)^0,w,c
  4914  000A1A  A4D8               	btfss	status,2,c
  4915  000A1C  EF12  F005         	goto	u5451
  4916  000A20  EF15  F005         	goto	u5450
  4917  000A24                     u5451:
  4918  000A24  FFFF               	dw	65535	; assembler added errata NOP
  4919  000A26  EF4B  F005         	goto	l4536
  4920  000A2A                     u5450:
  4921  000A2A  FFFF               	dw	65535	; assembler added errata NOP
  4922  000A2C                     
  4923                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1060:            
      +                           *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  4924  000A2C  0E03               	movlw	3
  4925  000A2E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4926  000A32  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4927  000A36  26DE               	addwf	postinc2,f,c
  4928  000A38  0E00               	movlw	0
  4929  000A3A  22DD               	addwfc	postdec2,f,c
  4930                           
  4931                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1061:            
      +                           vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4932  000A3C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4933  000A40  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4934  000A44  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4935  000A48  0E02               	movlw	2
  4936  000A4A  26DE               	addwf	postinc2,f,c
  4937  000A4C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4938  000A50  0E00               	movlw	0
  4939  000A52  22DD               	addwfc	postdec2,f,c
  4940  000A54  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4941  000A58  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4942  000A5C  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4943  000A60  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4944  000A64                     
  4945                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1062:            
      +                           *(char *)vp = (char)nout;
  4946  000A64  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4947  000A68  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4948  000A6C  6AF8               	clrf	tblptru,c
  4949  000A6E  0E05               	movlw	(high __ramtop+-1)
  4950  000A70  64F7               	cpfsgt	tblptrh,c
  4951  000A72  D004               	bra	u5467
  4952  000A74  C084  FFF5         	movff	_nout,tablat
  4953  000A78  000C               	tblwt		*
  4954  000A7A  D006               	bra	u5460
  4955  000A7C                     u5467:
  4956  000A7C  CFF6 FFE1          	movff	tblptrl,fsr1l
  4957  000A80  CFF7 FFE2          	movff	tblptrh,fsr1h
  4958  000A84  C084  FFE7         	movff	_nout,indf1
  4959  000A88                     u5460:
  4960  000A88                     l4532:
  4961  000A88  FFFF               	dw	65535	; assembler added errata NOP
  4962                           
  4963                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1063:            
      +                           return 0;
  4964  000A8A  0E00               	movlw	0
  4965  000A8C  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  4966  000A8E  0E00               	movlw	0
  4967  000A90  6E43               	movwf	?_vfpfcnvrt^0,c
  4968  000A92  EF2E  F00A         	goto	l1307
  4969  000A96                     l4536:
  4970  000A96  FFFF               	dw	65535	; assembler added errata NOP
  4971                           
  4972                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1068:         if 
      +                          (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  4973  000A98  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4974  000A9C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4975  000AA0  CFDE F001          	movff	postinc2,strncmp@_l
  4976  000AA4  CFDD F002          	movff	postdec2,strncmp@_l+1
  4977  000AA8  0ED8               	movlw	low (STR_53+1)
  4978  000AAA  6E03               	movwf	strncmp@_r^0,c
  4979  000AAC  0E7F               	movlw	high (STR_53+1)
  4980  000AAE  6E04               	movwf	(strncmp@_r+1)^0,c
  4981  000AB0  0E00               	movlw	0
  4982  000AB2  6E06               	movwf	(strncmp@n+1)^0,c
  4983  000AB4  0E02               	movlw	2
  4984  000AB6  6E05               	movwf	strncmp@n^0,c
  4985  000AB8  ECE2  F03A         	call	_strncmp	;wreg free
  4986  000ABC  5001               	movf	?_strncmp^0,w,c
  4987  000ABE  1002               	iorwf	(?_strncmp+1)^0,w,c
  4988  000AC0  A4D8               	btfss	status,2,c
  4989  000AC2  EF65  F005         	goto	u5471
  4990  000AC6  EF68  F005         	goto	u5470
  4991  000ACA                     u5471:
  4992  000ACA  FFFF               	dw	65535	; assembler added errata NOP
  4993  000ACC  EF9E  F005         	goto	l4546
  4994  000AD0                     u5470:
  4995  000AD0  FFFF               	dw	65535	; assembler added errata NOP
  4996  000AD2                     
  4997                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1070:            
      +                           *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  4998  000AD2  0E02               	movlw	2
  4999  000AD4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5000  000AD8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5001  000ADC  26DE               	addwf	postinc2,f,c
  5002  000ADE  0E00               	movlw	0
  5003  000AE0  22DD               	addwfc	postdec2,f,c
  5004                           
  5005                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1071:            
      +                           vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  5006  000AE2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5007  000AE6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5008  000AEA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5009  000AEE  0E02               	movlw	2
  5010  000AF0  26DE               	addwf	postinc2,f,c
  5011  000AF2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5012  000AF6  0E00               	movlw	0
  5013  000AF8  22DD               	addwfc	postdec2,f,c
  5014  000AFA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5015  000AFE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5016  000B02  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  5017  000B06  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  5018  000B0A                     
  5019                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1072:            
      +                           *(short *)vp = (short)nout;
  5020  000B0A  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  5021  000B0E  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  5022  000B12  6AF8               	clrf	tblptru,c
  5023  000B14  0E05               	movlw	(high __ramtop+-1)
  5024  000B16  64F7               	cpfsgt	tblptrh,c
  5025  000B18  D007               	bra	u5487
  5026  000B1A  C084  FFF5         	movff	_nout,tablat
  5027  000B1E  000D               	tblwt		*+
  5028  000B20  C085  FFF5         	movff	_nout+1,tablat
  5029  000B24  000C               	tblwt		*
  5030  000B26  D008               	bra	u5480
  5031  000B28                     u5487:
  5032  000B28  CFF6 FFE1          	movff	tblptrl,fsr1l
  5033  000B2C  CFF7 FFE2          	movff	tblptrh,fsr1h
  5034  000B30  C084  FFE6         	movff	_nout,postinc1
  5035  000B34  C085  FFE7         	movff	_nout+1,indf1
  5036  000B38                     u5480:
  5037  000B38  EF44  F005         	goto	l4532
  5038  000B3C                     l4546:
  5039  000B3C  FFFF               	dw	65535	; assembler added errata NOP
  5040                           
  5041                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1077:         if 
      +                          (*fmt[0] == 'n') {
  5042  000B3E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5043  000B42  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5044  000B46  CFDE FFF6          	movff	postinc2,tblptrl
  5045  000B4A  CFDD FFF7          	movff	postdec2,tblptrh
  5046  000B4E                     	if	0	;tblptru may be non-zero
  5047  000B4E                     	endif
  5048  000B4E                     	if	0	;tblptru may be non-zero
  5049  000B4E                     	endif
  5050  000B4E  0008               	tblrd		*
  5051  000B50  FFFF               	dw	65535	; errata NOP
  5052  000B52  50F5               	movf	tablat,w,c
  5053  000B54  0A6E               	xorlw	110
  5054  000B56  A4D8               	btfss	status,2,c
  5055  000B58  EFB0  F005         	goto	u5491
  5056  000B5C  EFB3  F005         	goto	u5490
  5057  000B60                     u5491:
  5058  000B60  FFFF               	dw	65535	; assembler added errata NOP
  5059  000B62  EFE8  F005         	goto	l4556
  5060  000B66                     u5490:
  5061  000B66  FFFF               	dw	65535	; assembler added errata NOP
  5062  000B68                     
  5063                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1078:            
      +                           ++*fmt;
  5064  000B68  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5065  000B6C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5066  000B70  2ADE               	incf	postinc2,f,c
  5067  000B72  0E00               	movlw	0
  5068  000B74  22DD               	addwfc	postdec2,f,c
  5069                           
  5070                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1079:            
      +                           vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  5071  000B76  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5072  000B7A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5073  000B7E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5074  000B82  0E02               	movlw	2
  5075  000B84  26DE               	addwf	postinc2,f,c
  5076  000B86  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5077  000B8A  0E00               	movlw	0
  5078  000B8C  22DD               	addwfc	postdec2,f,c
  5079  000B8E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5080  000B92  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5081  000B96  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  5082  000B9A  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  5083  000B9E                     
  5084                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1080:            
      +                           *(int *)vp = nout;
  5085  000B9E  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  5086  000BA2  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  5087  000BA6  6AF8               	clrf	tblptru,c
  5088  000BA8  0E05               	movlw	(high __ramtop+-1)
  5089  000BAA  64F7               	cpfsgt	tblptrh,c
  5090  000BAC  D007               	bra	u5507
  5091  000BAE  C084  FFF5         	movff	_nout,tablat
  5092  000BB2  000D               	tblwt		*+
  5093  000BB4  C085  FFF5         	movff	_nout+1,tablat
  5094  000BB8  000C               	tblwt		*
  5095  000BBA  D008               	bra	u5500
  5096  000BBC                     u5507:
  5097  000BBC  CFF6 FFE1          	movff	tblptrl,fsr1l
  5098  000BC0  CFF7 FFE2          	movff	tblptrh,fsr1h
  5099  000BC4  C084  FFE6         	movff	_nout,postinc1
  5100  000BC8  C085  FFE7         	movff	_nout+1,indf1
  5101  000BCC                     u5500:
  5102  000BCC  EF44  F005         	goto	l4532
  5103  000BD0                     l4556:
  5104  000BD0  FFFF               	dw	65535	; assembler added errata NOP
  5105                           
  5106                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1125:         if 
      +                          (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  5107  000BD2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5108  000BD6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5109  000BDA  CFDE F001          	movff	postinc2,strncmp@_l
  5110  000BDE  CFDD F002          	movff	postdec2,strncmp@_l+1
  5111  000BE2  0EF0               	movlw	low STR_63
  5112  000BE4  6E03               	movwf	strncmp@_r^0,c
  5113  000BE6  0E7F               	movlw	high STR_63
  5114  000BE8  6E04               	movwf	(strncmp@_r+1)^0,c
  5115  000BEA  0E00               	movlw	0
  5116  000BEC  6E06               	movwf	(strncmp@n+1)^0,c
  5117  000BEE  0E02               	movlw	2
  5118  000BF0  6E05               	movwf	strncmp@n^0,c
  5119  000BF2  ECE2  F03A         	call	_strncmp	;wreg free
  5120  000BF6  5001               	movf	?_strncmp^0,w,c
  5121  000BF8  1002               	iorwf	(?_strncmp+1)^0,w,c
  5122  000BFA  A4D8               	btfss	status,2,c
  5123  000BFC  EF02  F006         	goto	u5511
  5124  000C00  EF05  F006         	goto	u5510
  5125  000C04                     u5511:
  5126  000C04  FFFF               	dw	65535	; assembler added errata NOP
  5127  000C06  EF3B  F006         	goto	l4566
  5128  000C0A                     u5510:
  5129  000C0A  FFFF               	dw	65535	; assembler added errata NOP
  5130  000C0C                     
  5131                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1127:            
      +                           *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  5132  000C0C  0E02               	movlw	2
  5133  000C0E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5134  000C12  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5135  000C16  26DE               	addwf	postinc2,f,c
  5136  000C18  0E00               	movlw	0
  5137  000C1A  22DD               	addwfc	postdec2,f,c
  5138                           
  5139                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1128:            
      +                           vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  5140  000C1C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5141  000C20  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5142  000C24  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5143  000C28  0E02               	movlw	2
  5144  000C2A  26DE               	addwf	postinc2,f,c
  5145  000C2C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5146  000C30  0E00               	movlw	0
  5147  000C32  22DD               	addwfc	postdec2,f,c
  5148  000C34  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5149  000C38  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5150  000C3C  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  5151  000C40  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  5152  000C44                     
  5153                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1129:            
      +                           *(size_t *)vp = (size_t)nout;
  5154  000C44  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  5155  000C48  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  5156  000C4C  6AF8               	clrf	tblptru,c
  5157  000C4E  0E05               	movlw	(high __ramtop+-1)
  5158  000C50  64F7               	cpfsgt	tblptrh,c
  5159  000C52  D007               	bra	u5527
  5160  000C54  C084  FFF5         	movff	_nout,tablat
  5161  000C58  000D               	tblwt		*+
  5162  000C5A  C085  FFF5         	movff	_nout+1,tablat
  5163  000C5E  000C               	tblwt		*
  5164  000C60  D008               	bra	u5520
  5165  000C62                     u5527:
  5166  000C62  CFF6 FFE1          	movff	tblptrl,fsr1l
  5167  000C66  CFF7 FFE2          	movff	tblptrh,fsr1h
  5168  000C6A  C084  FFE6         	movff	_nout,postinc1
  5169  000C6E  C085  FFE7         	movff	_nout+1,indf1
  5170  000C72                     u5520:
  5171  000C72  EF44  F005         	goto	l4532
  5172  000C76                     l4566:
  5173  000C76  FFFF               	dw	65535	; assembler added errata NOP
  5174                           
  5175                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1138:         if 
      +                          (*fmt[0] == 'p') {
  5176  000C78  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5177  000C7C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5178  000C80  CFDE FFF6          	movff	postinc2,tblptrl
  5179  000C84  CFDD FFF7          	movff	postdec2,tblptrh
  5180  000C88                     	if	0	;tblptru may be non-zero
  5181  000C88                     	endif
  5182  000C88                     	if	0	;tblptru may be non-zero
  5183  000C88                     	endif
  5184  000C88  0008               	tblrd		*
  5185  000C8A  FFFF               	dw	65535	; errata NOP
  5186  000C8C  50F5               	movf	tablat,w,c
  5187  000C8E  0A70               	xorlw	112
  5188  000C90  A4D8               	btfss	status,2,c
  5189  000C92  EF4D  F006         	goto	u5531
  5190  000C96  EF50  F006         	goto	u5530
  5191  000C9A                     u5531:
  5192  000C9A  FFFF               	dw	65535	; assembler added errata NOP
  5193  000C9C  EF94  F006         	goto	l4574
  5194  000CA0                     u5530:
  5195  000CA0  FFFF               	dw	65535	; assembler added errata NOP
  5196  000CA2                     
  5197                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1140:            
      +                           ++*fmt;
  5198  000CA2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5199  000CA6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5200  000CAA  2ADE               	incf	postinc2,f,c
  5201  000CAC  0E00               	movlw	0
  5202  000CAE  22DD               	addwfc	postdec2,f,c
  5203                           
  5204                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1141:            
      +                           llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  5205  000CB0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5206  000CB4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5207  000CB8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5208  000CBC  0E02               	movlw	2
  5209  000CBE  26DE               	addwf	postinc2,f,c
  5210  000CC0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5211  000CC4  0E00               	movlw	0
  5212  000CC6  22DD               	addwfc	postdec2,f,c
  5213  000CC8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5214  000CCC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5215  000CD0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5216  000CD4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5217  000CD8  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5218  000CDC  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5219  000CE0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5220  000CE2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5221  000CE4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5222  000CE6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5223  000CE8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5224  000CEA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5225  000CEC                     
  5226                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1143:            
      +                           return xtoa(fp, llu, 'x');
  5227  000CEC  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  5228  000CF0  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5229  000CF4  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  5230  000CF8  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5231  000CFC  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5232  000D00  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5233  000D04  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5234  000D08  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5235  000D0C  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5236  000D10  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5237  000D14  0E78               	movlw	120
  5238  000D16  6E26               	movwf	xtoa@x^0,c
  5239  000D18  ECBD  F018         	call	_xtoa	;wreg free
  5240  000D1C  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  5241  000D20  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5242  000D24  EF2E  F00A         	goto	l1307
  5243  000D28                     l4574:
  5244  000D28  FFFF               	dw	65535	; assembler added errata NOP
  5245                           
  5246                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1149:         if 
      +                          (*fmt[0] == 's') {
  5247  000D2A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5248  000D2E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5249  000D32  CFDE FFF6          	movff	postinc2,tblptrl
  5250  000D36  CFDD FFF7          	movff	postdec2,tblptrh
  5251  000D3A                     	if	0	;tblptru may be non-zero
  5252  000D3A                     	endif
  5253  000D3A                     	if	0	;tblptru may be non-zero
  5254  000D3A                     	endif
  5255  000D3A  0008               	tblrd		*
  5256  000D3C  FFFF               	dw	65535	; errata NOP
  5257  000D3E  50F5               	movf	tablat,w,c
  5258  000D40  0A73               	xorlw	115
  5259  000D42  A4D8               	btfss	status,2,c
  5260  000D44  EFA6  F006         	goto	u5541
  5261  000D48  EFA9  F006         	goto	u5540
  5262  000D4C                     u5541:
  5263  000D4C  FFFF               	dw	65535	; assembler added errata NOP
  5264  000D4E  EFD5  F006         	goto	l4582
  5265  000D52                     u5540:
  5266  000D52  FFFF               	dw	65535	; assembler added errata NOP
  5267  000D54                     
  5268                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1151:            
      +                           ++*fmt;
  5269  000D54  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5270  000D58  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5271  000D5C  2ADE               	incf	postinc2,f,c
  5272  000D5E  0E00               	movlw	0
  5273  000D60  22DD               	addwfc	postdec2,f,c
  5274                           
  5275                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1152:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5276  000D62  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5277  000D66  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5278  000D6A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5279  000D6E  0E02               	movlw	2
  5280  000D70  26DE               	addwf	postinc2,f,c
  5281  000D72  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5282  000D76  0E00               	movlw	0
  5283  000D78  22DD               	addwfc	postdec2,f,c
  5284  000D7A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5285  000D7E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5286  000D82  CFDE F04D          	movff	postinc2,vfpfcnvrt@cp
  5287  000D86  CFDD F04E          	movff	postdec2,vfpfcnvrt@cp+1
  5288  000D8A                     
  5289                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1154:            
      +                           return stoa(fp, cp);
  5290  000D8A  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  5291  000D8E  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5292  000D92  C04D  F00C         	movff	vfpfcnvrt@cp,stoa@s
  5293  000D96  C04E  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  5294  000D9A  EC7A  F01D         	call	_stoa	;wreg free
  5295  000D9E  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  5296  000DA2  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  5297  000DA6  EF2E  F00A         	goto	l1307
  5298  000DAA                     l4582:
  5299  000DAA  FFFF               	dw	65535	; assembler added errata NOP
  5300                           
  5301                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1161:         if 
      +                          (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  5302  000DAC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5303  000DB0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5304  000DB4  CFDE F001          	movff	postinc2,strncmp@_l
  5305  000DB8  CFDD F002          	movff	postdec2,strncmp@_l+1
  5306  000DBC  0EDF               	movlw	low STR_68
  5307  000DBE  6E03               	movwf	strncmp@_r^0,c
  5308  000DC0  0E7F               	movlw	high STR_68
  5309  000DC2  6E04               	movwf	(strncmp@_r+1)^0,c
  5310  000DC4  0E00               	movlw	0
  5311  000DC6  6E06               	movwf	(strncmp@n+1)^0,c
  5312  000DC8  0E03               	movlw	3
  5313  000DCA  6E05               	movwf	strncmp@n^0,c
  5314  000DCC  ECE2  F03A         	call	_strncmp	;wreg free
  5315  000DD0  5001               	movf	?_strncmp^0,w,c
  5316  000DD2  1002               	iorwf	(?_strncmp+1)^0,w,c
  5317  000DD4  A4D8               	btfss	status,2,c
  5318  000DD6  EFEF  F006         	goto	u5551
  5319  000DDA  EFF2  F006         	goto	u5550
  5320  000DDE                     u5551:
  5321  000DDE  FFFF               	dw	65535	; assembler added errata NOP
  5322  000DE0  EF33  F007         	goto	l4590
  5323  000DE4                     u5550:
  5324  000DE4  FFFF               	dw	65535	; assembler added errata NOP
  5325  000DE6                     
  5326                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1163:            
      +                           *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  5327  000DE6  0E03               	movlw	3
  5328  000DE8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5329  000DEC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5330  000DF0  26DE               	addwf	postinc2,f,c
  5331  000DF2  0E00               	movlw	0
  5332  000DF4  22DD               	addwfc	postdec2,f,c
  5333                           
  5334                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1164:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5335  000DF6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5336  000DFA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5337  000DFE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5338  000E02  0E02               	movlw	2
  5339  000E04  26DE               	addwf	postinc2,f,c
  5340  000E06  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5341  000E0A  0E00               	movlw	0
  5342  000E0C  22DD               	addwfc	postdec2,f,c
  5343  000E0E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5344  000E12  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5345  000E16  50DF               	movf	indf2,w,c
  5346  000E18  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  5347  000E1A  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  5348  000E1C  6E60               	movwf	vfpfcnvrt@llu^0,c
  5349  000E1E  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  5350  000E20  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5351  000E22  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5352  000E24  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5353  000E26  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5354  000E28  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5355  000E2A  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5356  000E2C                     l4586:
  5357  000E2C  FFFF               	dw	65535	; assembler added errata NOP
  5358                           
  5359                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1166:            
      +                           return utoa(fp, llu);
  5360  000E2E  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  5361  000E32  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  5362  000E36  C060  F01E         	movff	vfpfcnvrt@llu,utoa@d
  5363  000E3A  C061  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  5364  000E3E  C062  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  5365  000E42  C063  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  5366  000E46  C064  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  5367  000E4A  C065  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  5368  000E4E  C066  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  5369  000E52  C067  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  5370  000E56  EC55  F01A         	call	_utoa	;wreg free
  5371  000E5A  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  5372  000E5E  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  5373  000E62  EF2E  F00A         	goto	l1307
  5374  000E66                     l4590:
  5375  000E66  FFFF               	dw	65535	; assembler added errata NOP
  5376                           
  5377                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1172:         if 
      +                          (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  5378  000E68  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5379  000E6C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5380  000E70  CFDE F001          	movff	postinc2,strncmp@_l
  5381  000E74  CFDD F002          	movff	postdec2,strncmp@_l+1
  5382  000E78  0EE0               	movlw	low (STR_68+1)
  5383  000E7A  6E03               	movwf	strncmp@_r^0,c
  5384  000E7C  0E7F               	movlw	high (STR_68+1)
  5385  000E7E  6E04               	movwf	(strncmp@_r+1)^0,c
  5386  000E80  0E00               	movlw	0
  5387  000E82  6E06               	movwf	(strncmp@n+1)^0,c
  5388  000E84  0E02               	movlw	2
  5389  000E86  6E05               	movwf	strncmp@n^0,c
  5390  000E88  ECE2  F03A         	call	_strncmp	;wreg free
  5391  000E8C  5001               	movf	?_strncmp^0,w,c
  5392  000E8E  1002               	iorwf	(?_strncmp+1)^0,w,c
  5393  000E90  A4D8               	btfss	status,2,c
  5394  000E92  EF4D  F007         	goto	u5561
  5395  000E96  EF50  F007         	goto	u5560
  5396  000E9A                     u5561:
  5397  000E9A  FFFF               	dw	65535	; assembler added errata NOP
  5398  000E9C  EF79  F007         	goto	l4598
  5399  000EA0                     u5560:
  5400  000EA0  FFFF               	dw	65535	; assembler added errata NOP
  5401  000EA2                     
  5402                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1174:            
      +                           *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  5403  000EA2  0E02               	movlw	2
  5404  000EA4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5405  000EA8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5406  000EAC  26DE               	addwf	postinc2,f,c
  5407  000EAE  0E00               	movlw	0
  5408  000EB0  22DD               	addwfc	postdec2,f,c
  5409                           
  5410                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1175:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5411  000EB2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5412  000EB6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5413  000EBA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5414  000EBE  0E02               	movlw	2
  5415  000EC0  26DE               	addwf	postinc2,f,c
  5416  000EC2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5417  000EC6  0E00               	movlw	0
  5418  000EC8  22DD               	addwfc	postdec2,f,c
  5419  000ECA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5420  000ECE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5421  000ED2  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5422  000ED6  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5423  000EDA  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5424  000EDE  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5425  000EE2  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5426  000EE4  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5427  000EE6  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5428  000EE8  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5429  000EEA  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5430  000EEC  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5431  000EEE  EF16  F007         	goto	l4586
  5432  000EF2                     l4598:
  5433  000EF2  FFFF               	dw	65535	; assembler added errata NOP
  5434                           
  5435                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1182:         if 
      +                          (*fmt[0] == 'u') {
  5436  000EF4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5437  000EF8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5438  000EFC  CFDE FFF6          	movff	postinc2,tblptrl
  5439  000F00  CFDD FFF7          	movff	postdec2,tblptrh
  5440  000F04                     	if	0	;tblptru may be non-zero
  5441  000F04                     	endif
  5442  000F04                     	if	0	;tblptru may be non-zero
  5443  000F04                     	endif
  5444  000F04  0008               	tblrd		*
  5445  000F06  FFFF               	dw	65535	; errata NOP
  5446  000F08  50F5               	movf	tablat,w,c
  5447  000F0A  0A75               	xorlw	117
  5448  000F0C  A4D8               	btfss	status,2,c
  5449  000F0E  EF8B  F007         	goto	u5571
  5450  000F12  EF8E  F007         	goto	u5570
  5451  000F16                     u5571:
  5452  000F16  FFFF               	dw	65535	; assembler added errata NOP
  5453  000F18  EFB6  F007         	goto	l4606
  5454  000F1C                     u5570:
  5455  000F1C  FFFF               	dw	65535	; assembler added errata NOP
  5456  000F1E                     
  5457                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1184:            
      +                           ++*fmt;
  5458  000F1E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5459  000F22  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5460  000F26  2ADE               	incf	postinc2,f,c
  5461  000F28  0E00               	movlw	0
  5462  000F2A  22DD               	addwfc	postdec2,f,c
  5463                           
  5464                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1185:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5465  000F2C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5466  000F30  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5467  000F34  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5468  000F38  0E02               	movlw	2
  5469  000F3A  26DE               	addwf	postinc2,f,c
  5470  000F3C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5471  000F40  0E00               	movlw	0
  5472  000F42  22DD               	addwfc	postdec2,f,c
  5473  000F44  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5474  000F48  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5475  000F4C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5476  000F50  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5477  000F54  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5478  000F58  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5479  000F5C  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5480  000F5E  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5481  000F60  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5482  000F62  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5483  000F64  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5484  000F66  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5485  000F68  EF16  F007         	goto	l4586
  5486  000F6C                     l4606:
  5487  000F6C  FFFF               	dw	65535	; assembler added errata NOP
  5488                           
  5489                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1236:         if 
      +                          (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  5490  000F6E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5491  000F72  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5492  000F76  CFDE F001          	movff	postinc2,strncmp@_l
  5493  000F7A  CFDD F002          	movff	postdec2,strncmp@_l+1
  5494  000F7E  0EF6               	movlw	low STR_78
  5495  000F80  6E03               	movwf	strncmp@_r^0,c
  5496  000F82  0E7F               	movlw	high STR_78
  5497  000F84  6E04               	movwf	(strncmp@_r+1)^0,c
  5498  000F86  0E00               	movlw	0
  5499  000F88  6E06               	movwf	(strncmp@n+1)^0,c
  5500  000F8A  0E02               	movlw	2
  5501  000F8C  6E05               	movwf	strncmp@n^0,c
  5502  000F8E  ECE2  F03A         	call	_strncmp	;wreg free
  5503  000F92  5001               	movf	?_strncmp^0,w,c
  5504  000F94  1002               	iorwf	(?_strncmp+1)^0,w,c
  5505  000F96  A4D8               	btfss	status,2,c
  5506  000F98  EFD0  F007         	goto	u5581
  5507  000F9C  EFD3  F007         	goto	u5580
  5508  000FA0                     u5581:
  5509  000FA0  FFFF               	dw	65535	; assembler added errata NOP
  5510  000FA2  EFFC  F007         	goto	l4614
  5511  000FA6                     u5580:
  5512  000FA6  FFFF               	dw	65535	; assembler added errata NOP
  5513  000FA8                     
  5514                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1238:            
      +                           *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  5515  000FA8  0E02               	movlw	2
  5516  000FAA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5517  000FAE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5518  000FB2  26DE               	addwf	postinc2,f,c
  5519  000FB4  0E00               	movlw	0
  5520  000FB6  22DD               	addwfc	postdec2,f,c
  5521                           
  5522                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1239:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5523  000FB8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5524  000FBC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5525  000FC0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5526  000FC4  0E02               	movlw	2
  5527  000FC6  26DE               	addwf	postinc2,f,c
  5528  000FC8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5529  000FCC  0E00               	movlw	0
  5530  000FCE  22DD               	addwfc	postdec2,f,c
  5531  000FD0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5532  000FD4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5533  000FD8  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5534  000FDC  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5535  000FE0  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5536  000FE4  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5537  000FE8  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5538  000FEA  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5539  000FEC  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5540  000FEE  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5541  000FF0  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5542  000FF2  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5543  000FF4  EF16  F007         	goto	l4586
  5544  000FF8                     l4614:
  5545  000FF8  FFFF               	dw	65535	; assembler added errata NOP
  5546                           
  5547                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1249:         if 
      +                          (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((
      +                          sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  5548  000FFA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5549  000FFE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5550  001002  CFDE F001          	movff	postinc2,strncmp@_l
  5551  001006  CFDD F002          	movff	postdec2,strncmp@_l+1
  5552  00100A  0EE3               	movlw	low STR_83
  5553  00100C  6E03               	movwf	strncmp@_r^0,c
  5554  00100E  0E7F               	movlw	high STR_83
  5555  001010  6E04               	movwf	(strncmp@_r+1)^0,c
  5556  001012  0E00               	movlw	0
  5557  001014  6E06               	movwf	(strncmp@n+1)^0,c
  5558  001016  0E03               	movlw	3
  5559  001018  6E05               	movwf	strncmp@n^0,c
  5560  00101A  ECE2  F03A         	call	_strncmp	;wreg free
  5561  00101E  5001               	movf	?_strncmp^0,w,c
  5562  001020  1002               	iorwf	(?_strncmp+1)^0,w,c
  5563  001022  B4D8               	btfsc	status,2,c
  5564  001024  EF16  F008         	goto	u5591
  5565  001028  EF19  F008         	goto	u5590
  5566  00102C                     u5591:
  5567  00102C  FFFF               	dw	65535	; assembler added errata NOP
  5568  00102E  EF36  F008         	goto	l4618
  5569  001032                     u5590:
  5570  001032  FFFF               	dw	65535	; assembler added errata NOP
  5571  001034  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5572  001038  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5573  00103C  CFDE F001          	movff	postinc2,strncmp@_l
  5574  001040  CFDD F002          	movff	postdec2,strncmp@_l+1
  5575  001044  0ECB               	movlw	low STR_87
  5576  001046  6E03               	movwf	strncmp@_r^0,c
  5577  001048  0E7F               	movlw	high STR_87
  5578  00104A  6E04               	movwf	(strncmp@_r+1)^0,c
  5579  00104C  0E00               	movlw	0
  5580  00104E  6E06               	movwf	(strncmp@n+1)^0,c
  5581  001050  0E03               	movlw	3
  5582  001052  6E05               	movwf	strncmp@n^0,c
  5583  001054  ECE2  F03A         	call	_strncmp	;wreg free
  5584  001058  5001               	movf	?_strncmp^0,w,c
  5585  00105A  1002               	iorwf	(?_strncmp+1)^0,w,c
  5586  00105C  A4D8               	btfss	status,2,c
  5587  00105E  EF33  F008         	goto	u5601
  5588  001062  EF36  F008         	goto	u5600
  5589  001066                     u5601:
  5590  001066  FFFF               	dw	65535	; assembler added errata NOP
  5591  001068  EF8D  F008         	goto	l4628
  5592  00106C                     u5600:
  5593  00106C                     l4618:
  5594  00106C  FFFF               	dw	65535	; assembler added errata NOP
  5595                           
  5596                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1250: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1252:             c = (*fmt)
      +                          [2];
  5597  00106E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5598  001072  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5599  001076  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  5600  00107A  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  5601  00107E  0E02               	movlw	2
  5602  001080  2649               	addwf	??_vfpfcnvrt^0,f,c
  5603  001082  0E00               	movlw	0
  5604  001084  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5605  001086  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5606  00108A  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5607  00108E                     	if	0	;tblptru may be non-zero
  5608  00108E                     	endif
  5609  00108E                     	if	0	;tblptru may be non-zero
  5610  00108E                     	endif
  5611  00108E  0008               	tblrd		*
  5612  001090  FFFF               	dw	65535	; errata NOP
  5613  001092  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5614  001096                     
  5615                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1253:            
      +                           *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  5616  001096  0E03               	movlw	3
  5617  001098  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5618  00109C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5619  0010A0  26DE               	addwf	postinc2,f,c
  5620  0010A2  0E00               	movlw	0
  5621  0010A4  22DD               	addwfc	postdec2,f,c
  5622  0010A6                     
  5623                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1254:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5624  0010A6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5625  0010AA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5626  0010AE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5627  0010B2  0E02               	movlw	2
  5628  0010B4  26DE               	addwf	postinc2,f,c
  5629  0010B6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5630  0010BA  0E00               	movlw	0
  5631  0010BC  22DD               	addwfc	postdec2,f,c
  5632  0010BE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5633  0010C2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5634  0010C6  50DF               	movf	indf2,w,c
  5635  0010C8  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  5636  0010CA  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  5637  0010CC  6E60               	movwf	vfpfcnvrt@llu^0,c
  5638  0010CE  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  5639  0010D0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5640  0010D2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5641  0010D4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5642  0010D6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5643  0010D8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5644  0010DA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5645  0010DC                     l4624:
  5646  0010DC  FFFF               	dw	65535	; assembler added errata NOP
  5647                           
  5648                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1256:            
      +                           return xtoa(fp, llu, c);
  5649  0010DE  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  5650  0010E2  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5651  0010E6  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  5652  0010EA  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5653  0010EE  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5654  0010F2  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5655  0010F6  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5656  0010FA  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5657  0010FE  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5658  001102  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5659  001106  C05F  F026         	movff	vfpfcnvrt@c,xtoa@x
  5660  00110A  ECBD  F018         	call	_xtoa	;wreg free
  5661  00110E  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  5662  001112  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5663  001116  EF2E  F00A         	goto	l1307
  5664  00111A                     l4628:
  5665  00111A  FFFF               	dw	65535	; assembler added errata NOP
  5666                           
  5667                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1262:         if 
      +                          (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((size
      +                          of("hX")/sizeof("hX"[0]))-1))) {
  5668  00111C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5669  001120  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5670  001124  CFDE F001          	movff	postinc2,strncmp@_l
  5671  001128  CFDD F002          	movff	postdec2,strncmp@_l+1
  5672  00112C  0EE4               	movlw	low (STR_83+1)
  5673  00112E  6E03               	movwf	strncmp@_r^0,c
  5674  001130  0E7F               	movlw	high (STR_83+1)
  5675  001132  6E04               	movwf	(strncmp@_r+1)^0,c
  5676  001134  0E00               	movlw	0
  5677  001136  6E06               	movwf	(strncmp@n+1)^0,c
  5678  001138  0E02               	movlw	2
  5679  00113A  6E05               	movwf	strncmp@n^0,c
  5680  00113C  ECE2  F03A         	call	_strncmp	;wreg free
  5681  001140  5001               	movf	?_strncmp^0,w,c
  5682  001142  1002               	iorwf	(?_strncmp+1)^0,w,c
  5683  001144  B4D8               	btfsc	status,2,c
  5684  001146  EFA7  F008         	goto	u5611
  5685  00114A  EFAA  F008         	goto	u5610
  5686  00114E                     u5611:
  5687  00114E  FFFF               	dw	65535	; assembler added errata NOP
  5688  001150  EFC7  F008         	goto	l4632
  5689  001154                     u5610:
  5690  001154  FFFF               	dw	65535	; assembler added errata NOP
  5691  001156  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5692  00115A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5693  00115E  CFDE F001          	movff	postinc2,strncmp@_l
  5694  001162  CFDD F002          	movff	postdec2,strncmp@_l+1
  5695  001166  0ECC               	movlw	low (STR_87+1)
  5696  001168  6E03               	movwf	strncmp@_r^0,c
  5697  00116A  0E7F               	movlw	high (STR_87+1)
  5698  00116C  6E04               	movwf	(strncmp@_r+1)^0,c
  5699  00116E  0E00               	movlw	0
  5700  001170  6E06               	movwf	(strncmp@n+1)^0,c
  5701  001172  0E02               	movlw	2
  5702  001174  6E05               	movwf	strncmp@n^0,c
  5703  001176  ECE2  F03A         	call	_strncmp	;wreg free
  5704  00117A  5001               	movf	?_strncmp^0,w,c
  5705  00117C  1002               	iorwf	(?_strncmp+1)^0,w,c
  5706  00117E  A4D8               	btfss	status,2,c
  5707  001180  EFC4  F008         	goto	u5621
  5708  001184  EFC7  F008         	goto	u5620
  5709  001188                     u5621:
  5710  001188  FFFF               	dw	65535	; assembler added errata NOP
  5711  00118A  EF04  F009         	goto	l4642
  5712  00118E                     u5620:
  5713  00118E                     l4632:
  5714  00118E  FFFF               	dw	65535	; assembler added errata NOP
  5715                           
  5716                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1263: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1265:             c = (*fmt)
      +                          [1];
  5717  001190  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5718  001194  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5719  001198  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  5720  00119C  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  5721  0011A0  0E01               	movlw	1
  5722  0011A2  2649               	addwf	??_vfpfcnvrt^0,f,c
  5723  0011A4  0E00               	movlw	0
  5724  0011A6  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5725  0011A8  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5726  0011AC  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5727  0011B0                     	if	0	;tblptru may be non-zero
  5728  0011B0                     	endif
  5729  0011B0                     	if	0	;tblptru may be non-zero
  5730  0011B0                     	endif
  5731  0011B0  0008               	tblrd		*
  5732  0011B2  FFFF               	dw	65535	; errata NOP
  5733  0011B4  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5734  0011B8                     
  5735                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1266:            
      +                           *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  5736  0011B8  0E02               	movlw	2
  5737  0011BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5738  0011BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5739  0011C2  26DE               	addwf	postinc2,f,c
  5740  0011C4  0E00               	movlw	0
  5741  0011C6  22DD               	addwfc	postdec2,f,c
  5742  0011C8                     
  5743                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1267:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5744  0011C8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5745  0011CC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5746  0011D0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5747  0011D4  0E02               	movlw	2
  5748  0011D6  26DE               	addwf	postinc2,f,c
  5749  0011D8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5750  0011DC  0E00               	movlw	0
  5751  0011DE  22DD               	addwfc	postdec2,f,c
  5752  0011E0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5753  0011E4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5754  0011E8  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5755  0011EC  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5756  0011F0  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5757  0011F4  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5758  0011F8  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5759  0011FA  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5760  0011FC  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5761  0011FE  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5762  001200  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5763  001202  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5764  001204  EF6E  F008         	goto	l4624
  5765  001208                     l4642:
  5766  001208  FFFF               	dw	65535	; assembler added errata NOP
  5767                           
  5768                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1274:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  5769  00120A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5770  00120E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5771  001212  CFDE FFF6          	movff	postinc2,tblptrl
  5772  001216  CFDD FFF7          	movff	postdec2,tblptrh
  5773  00121A                     	if	0	;tblptru may be non-zero
  5774  00121A                     	endif
  5775  00121A                     	if	0	;tblptru may be non-zero
  5776  00121A                     	endif
  5777  00121A  0008               	tblrd		*
  5778  00121C  FFFF               	dw	65535	; errata NOP
  5779  00121E  50F5               	movf	tablat,w,c
  5780  001220  0A78               	xorlw	120
  5781  001222  B4D8               	btfsc	status,2,c
  5782  001224  EF16  F009         	goto	u5631
  5783  001228  EF19  F009         	goto	u5630
  5784  00122C                     u5631:
  5785  00122C  FFFF               	dw	65535	; assembler added errata NOP
  5786  00122E  EF2E  F009         	goto	l4646
  5787  001232                     u5630:
  5788  001232  FFFF               	dw	65535	; assembler added errata NOP
  5789  001234  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5790  001238  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5791  00123C  CFDE FFF6          	movff	postinc2,tblptrl
  5792  001240  CFDD FFF7          	movff	postdec2,tblptrh
  5793  001244                     	if	0	;tblptru may be non-zero
  5794  001244                     	endif
  5795  001244                     	if	0	;tblptru may be non-zero
  5796  001244                     	endif
  5797  001244  0008               	tblrd		*
  5798  001246  FFFF               	dw	65535	; errata NOP
  5799  001248  50F5               	movf	tablat,w,c
  5800  00124A  0A58               	xorlw	88
  5801  00124C  A4D8               	btfss	status,2,c
  5802  00124E  EF2B  F009         	goto	u5641
  5803  001252  EF2E  F009         	goto	u5640
  5804  001256                     u5641:
  5805  001256  FFFF               	dw	65535	; assembler added errata NOP
  5806  001258  EF62  F009         	goto	l4656
  5807  00125C                     u5640:
  5808  00125C                     l4646:
  5809  00125C  FFFF               	dw	65535	; assembler added errata NOP
  5810                           
  5811                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1276:            
      +                           c = (*fmt)[0];
  5812  00125E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5813  001262  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5814  001266  CFDE FFF6          	movff	postinc2,tblptrl
  5815  00126A  CFDD FFF7          	movff	postdec2,tblptrh
  5816  00126E                     	if	0	;tblptru may be non-zero
  5817  00126E                     	endif
  5818  00126E                     	if	0	;tblptru may be non-zero
  5819  00126E                     	endif
  5820  00126E  0008               	tblrd		*
  5821  001270  FFFF               	dw	65535	; errata NOP
  5822  001272  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5823  001276                     
  5824                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1277:            
      +                           ++*fmt;
  5825  001276  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5826  00127A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5827  00127E  2ADE               	incf	postinc2,f,c
  5828  001280  0E00               	movlw	0
  5829  001282  22DD               	addwfc	postdec2,f,c
  5830  001284                     
  5831                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1278:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5832  001284  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5833  001288  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5834  00128C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5835  001290  0E02               	movlw	2
  5836  001292  26DE               	addwf	postinc2,f,c
  5837  001294  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5838  001298  0E00               	movlw	0
  5839  00129A  22DD               	addwfc	postdec2,f,c
  5840  00129C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5841  0012A0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5842  0012A4  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5843  0012A8  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5844  0012AC  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5845  0012B0  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5846  0012B4  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5847  0012B6  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5848  0012B8  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5849  0012BA  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5850  0012BC  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5851  0012BE  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5852  0012C0  EF6E  F008         	goto	l4624
  5853  0012C4                     l4656:
  5854  0012C4  FFFF               	dw	65535	; assembler added errata NOP
  5855                           
  5856                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1337:         if 
      +                          (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((size
      +                          of("zX")/sizeof("zX"[0]))-1))) {
  5857  0012C6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5858  0012CA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5859  0012CE  CFDE F001          	movff	postinc2,strncmp@_l
  5860  0012D2  CFDD F002          	movff	postdec2,strncmp@_l+1
  5861  0012D6  0EF9               	movlw	low STR_101
  5862  0012D8  6E03               	movwf	strncmp@_r^0,c
  5863  0012DA  0E7F               	movlw	high STR_101
  5864  0012DC  6E04               	movwf	(strncmp@_r+1)^0,c
  5865  0012DE  0E00               	movlw	0
  5866  0012E0  6E06               	movwf	(strncmp@n+1)^0,c
  5867  0012E2  0E02               	movlw	2
  5868  0012E4  6E05               	movwf	strncmp@n^0,c
  5869  0012E6  ECE2  F03A         	call	_strncmp	;wreg free
  5870  0012EA  5001               	movf	?_strncmp^0,w,c
  5871  0012EC  1002               	iorwf	(?_strncmp+1)^0,w,c
  5872  0012EE  B4D8               	btfsc	status,2,c
  5873  0012F0  EF7C  F009         	goto	u5651
  5874  0012F4  EF7F  F009         	goto	u5650
  5875  0012F8                     u5651:
  5876  0012F8  FFFF               	dw	65535	; assembler added errata NOP
  5877  0012FA  EF9C  F009         	goto	l4660
  5878  0012FE                     u5650:
  5879  0012FE  FFFF               	dw	65535	; assembler added errata NOP
  5880  001300  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5881  001304  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5882  001308  CFDE F001          	movff	postinc2,strncmp@_l
  5883  00130C  CFDD F002          	movff	postdec2,strncmp@_l+1
  5884  001310  0EE7               	movlw	low STR_105
  5885  001312  6E03               	movwf	strncmp@_r^0,c
  5886  001314  0E7F               	movlw	high STR_105
  5887  001316  6E04               	movwf	(strncmp@_r+1)^0,c
  5888  001318  0E00               	movlw	0
  5889  00131A  6E06               	movwf	(strncmp@n+1)^0,c
  5890  00131C  0E02               	movlw	2
  5891  00131E  6E05               	movwf	strncmp@n^0,c
  5892  001320  ECE2  F03A         	call	_strncmp	;wreg free
  5893  001324  5001               	movf	?_strncmp^0,w,c
  5894  001326  1002               	iorwf	(?_strncmp+1)^0,w,c
  5895  001328  A4D8               	btfss	status,2,c
  5896  00132A  EF99  F009         	goto	u5661
  5897  00132E  EF9C  F009         	goto	u5660
  5898  001332                     u5661:
  5899  001332  FFFF               	dw	65535	; assembler added errata NOP
  5900  001334  EFD9  F009         	goto	l4670
  5901  001338                     u5660:
  5902  001338                     l4660:
  5903  001338  FFFF               	dw	65535	; assembler added errata NOP
  5904                           
  5905                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1338: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1340:             c = (*fmt)
      +                          [1];
  5906  00133A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5907  00133E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5908  001342  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  5909  001346  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  5910  00134A  0E01               	movlw	1
  5911  00134C  2649               	addwf	??_vfpfcnvrt^0,f,c
  5912  00134E  0E00               	movlw	0
  5913  001350  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5914  001352  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5915  001356  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5916  00135A                     	if	0	;tblptru may be non-zero
  5917  00135A                     	endif
  5918  00135A                     	if	0	;tblptru may be non-zero
  5919  00135A                     	endif
  5920  00135A  0008               	tblrd		*
  5921  00135C  FFFF               	dw	65535	; errata NOP
  5922  00135E  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5923  001362                     
  5924                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1341:            
      +                           *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  5925  001362  0E02               	movlw	2
  5926  001364  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5927  001368  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5928  00136C  26DE               	addwf	postinc2,f,c
  5929  00136E  0E00               	movlw	0
  5930  001370  22DD               	addwfc	postdec2,f,c
  5931  001372                     
  5932                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1342:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5933  001372  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5934  001376  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5935  00137A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5936  00137E  0E02               	movlw	2
  5937  001380  26DE               	addwf	postinc2,f,c
  5938  001382  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5939  001386  0E00               	movlw	0
  5940  001388  22DD               	addwfc	postdec2,f,c
  5941  00138A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5942  00138E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5943  001392  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5944  001396  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5945  00139A  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5946  00139E  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5947  0013A2  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5948  0013A4  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5949  0013A6  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5950  0013A8  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5951  0013AA  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5952  0013AC  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5953  0013AE  EF6E  F008         	goto	l4624
  5954  0013B2                     l4670:
  5955  0013B2  FFFF               	dw	65535	; assembler added errata NOP
  5956                           
  5957                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  5958  0013B4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5959  0013B8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5960  0013BC  CFDE FFF6          	movff	postinc2,tblptrl
  5961  0013C0  CFDD FFF7          	movff	postdec2,tblptrh
  5962  0013C4                     	if	0	;tblptru may be non-zero
  5963  0013C4                     	endif
  5964  0013C4                     	if	0	;tblptru may be non-zero
  5965  0013C4                     	endif
  5966  0013C4  0008               	tblrd		*
  5967  0013C6  FFFF               	dw	65535	; errata NOP
  5968  0013C8  50F5               	movf	tablat,w,c
  5969  0013CA  0A25               	xorlw	37
  5970  0013CC  A4D8               	btfss	status,2,c
  5971  0013CE  EFEB  F009         	goto	u5671
  5972  0013D2  EFEE  F009         	goto	u5670
  5973  0013D6                     u5671:
  5974  0013D6  FFFF               	dw	65535	; assembler added errata NOP
  5975  0013D8  EF07  F00A         	goto	l4680
  5976  0013DC                     u5670:
  5977  0013DC  FFFF               	dw	65535	; assembler added errata NOP
  5978  0013DE                     
  5979                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  5980  0013DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5981  0013E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5982  0013E6  2ADE               	incf	postinc2,f,c
  5983  0013E8  0E00               	movlw	0
  5984  0013EA  22DD               	addwfc	postdec2,f,c
  5985  0013EC                     
  5986                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  5987  0013EC  0E00               	movlw	0
  5988  0013EE  6E02               	movwf	(fputc@c+1)^0,c
  5989  0013F0  0E25               	movlw	37
  5990  0013F2  6E01               	movwf	fputc@c^0,c
  5991  0013F4  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5992  0013F8  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5993  0013FC  EC11  F039         	call	_fputc	;wreg free
  5994  001400                     l4676:
  5995  001400  FFFF               	dw	65535	; assembler added errata NOP
  5996                           
  5997                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  5998  001402  0E00               	movlw	0
  5999  001404  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  6000  001406  0E01               	movlw	1
  6001  001408  6E43               	movwf	?_vfpfcnvrt^0,c
  6002  00140A  EF2E  F00A         	goto	l1307
  6003  00140E                     l4680:
  6004  00140E  FFFF               	dw	65535	; assembler added errata NOP
  6005                           
  6006                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  6007  001410  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6008  001414  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6009  001418  2ADE               	incf	postinc2,f,c
  6010  00141A  0E00               	movlw	0
  6011  00141C  22DD               	addwfc	postdec2,f,c
  6012  00141E  EF44  F005         	goto	l4532
  6013  001422                     l4686:
  6014  001422  FFFF               	dw	65535	; assembler added errata NOP
  6015                           
  6016                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  6017  001424  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6018  001428  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6019  00142C  CFDE FFF6          	movff	postinc2,tblptrl
  6020  001430  CFDD FFF7          	movff	postdec2,tblptrh
  6021  001434                     	if	0	;tblptru may be non-zero
  6022  001434                     	endif
  6023  001434                     	if	0	;tblptru may be non-zero
  6024  001434                     	endif
  6025  001434  0008               	tblrd		*
  6026  001436  FFFF               	dw	65535	; errata NOP
  6027  001438  50F5               	movf	tablat,w,c
  6028  00143A  6E01               	movwf	fputc@c^0,c
  6029  00143C  6A02               	clrf	(fputc@c+1)^0,c
  6030  00143E  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6031  001442  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6032  001446  EC11  F039         	call	_fputc	;wreg free
  6033  00144A                     
  6034                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  6035  00144A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6036  00144E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6037  001452  2ADE               	incf	postinc2,f,c
  6038  001454  0E00               	movlw	0
  6039  001456  22DD               	addwfc	postdec2,f,c
  6040  001458  EF00  F00A         	goto	l4676
  6041  00145C                     l1307:
  6042  00145C  FFFF               	dw	65535	; assembler added errata NOP
  6043  00145E  0012               	return		;funcret
  6044  001460  FFFF               	dw	65535	; errata NOP
  6045  001462                     __end_of_vfpfcnvrt:
  6046                           	callstack 0
  6047                           
  6048 ;; *************** function _xtoa *****************
  6049 ;; Defined at:
  6050 ;;		line 623 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6051 ;; Parameters:    Size  Location     Type
  6052 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6053 ;;		 -> vsnprintf@f(6), 
  6054 ;;  d               8   29[COMRAM] unsigned long long 
  6055 ;;  x               1   37[COMRAM] unsigned char 
  6056 ;; Auto vars:     Size  Location     Type
  6057 ;;  n               8   54[COMRAM] unsigned long long 
  6058 ;;  c               2   64[COMRAM] int 
  6059 ;;  i               2   62[COMRAM] int 
  6060 ;;  w               2   52[COMRAM] int 
  6061 ;;  p               2   50[COMRAM] int 
  6062 ;; Return value:  Size  Location     Type
  6063 ;;                  2   27[COMRAM] int 
  6064 ;; Registers used:
  6065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6066 ;; Tracked objects:
  6067 ;;		On entry : 0/0
  6068 ;;		On exit  : 0/0
  6069 ;;		Unchanged: 0/0
  6070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6071 ;;      Params:        11       0       0       0       0       0       0
  6072 ;;      Locals:        20       0       0       0       0       0       0
  6073 ;;      Temps:          8       0       0       0       0       0       0
  6074 ;;      Totals:        39       0       0       0       0       0       0
  6075 ;;Total ram usage:       39 bytes
  6076 ;; Hardware stack levels used:    1
  6077 ;; Hardware stack levels required when called:    5
  6078 ;; This function calls:
  6079 ;;		_isalpha
  6080 ;;		_isupper
  6081 ;;		_pad
  6082 ;;		_toupper
  6083 ;; This function is called by:
  6084 ;;		_vfpfcnvrt
  6085 ;; This function uses a non-reentrant model
  6086 ;;
  6087                           
  6088                           	psect	text9
  6089  00317A                     __ptext9:
  6090                           	callstack 0
  6091  00317A                     _xtoa:
  6092                           	callstack 0
  6093  00317A  FFFF               	dw	65535	; assembler added errata NOP
  6094  00317C                     
  6095                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 623: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 624: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 625:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources
      +                          \c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0)) {
  6096  00317C  0100               	movlb	0	; () banked
  6097  00317E  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6098  003180  EFC4  F018         	goto	u4511
  6099  003184  EFC7  F018         	goto	u4510
  6100  003188                     u4511:
  6101  003188  FFFF               	dw	65535	; assembler added errata NOP
  6102  00318A  EFC9  F018         	goto	l4042
  6103  00318E                     u4510:
  6104  00318E  FFFF               	dw	65535	; assembler added errata NOP
  6105  003190                     
  6106                           ; BSR set to: 0
  6107                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 630:         flag
      +                          s &= ~(1 << 1);
  6108  003190  938A               	bcf	_flags& (0+255),1,b
  6109  003192                     l4042:
  6110  003192  FFFF               	dw	65535	; assembler added errata NOP
  6111                           
  6112                           ; BSR set to: 0
  6113                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 632:     p = (0 <
      +                           prec) ? prec : 1;
  6114  003194  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6115  003196  EFD8  F018         	goto	u4520
  6116  00319A  5189               	movf	(_prec+1)& (0+255),w,b
  6117  00319C  E106               	bnz	u4521
  6118  00319E  0588               	decf	_prec& (0+255),w,b
  6119  0031A0  B0D8               	btfsc	status,0,c
  6120  0031A2  EFD5  F018         	goto	u4521
  6121  0031A6  EFD8  F018         	goto	u4520
  6122  0031AA                     u4521:
  6123  0031AA  FFFF               	dw	65535	; assembler added errata NOP
  6124  0031AC  EFDF  F018         	goto	l1245
  6125  0031B0                     u4520:
  6126  0031B0  FFFF               	dw	65535	; assembler added errata NOP
  6127  0031B2                     
  6128                           ; BSR set to: 0
  6129  0031B2  0E00               	movlw	0
  6130  0031B4  6E34               	movwf	(xtoa@p+1)^0,c
  6131  0031B6  0E01               	movlw	1
  6132  0031B8  6E33               	movwf	xtoa@p^0,c
  6133  0031BA  EFE4  F018         	goto	l1247
  6134  0031BE                     l1245:
  6135  0031BE  FFFF               	dw	65535	; assembler added errata NOP
  6136                           
  6137                           ; BSR set to: 0
  6138  0031C0  C088  F033         	movff	_prec,xtoa@p
  6139  0031C4  C089  F034         	movff	_prec+1,xtoa@p+1
  6140  0031C8                     l1247:
  6141  0031C8  FFFF               	dw	65535	; assembler added errata NOP
  6142                           
  6143                           ; BSR set to: 0
  6144                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 633:     w = widt
      +                          h;
  6145  0031CA  C086  F035         	movff	_width,xtoa@w
  6146  0031CE  C087  F036         	movff	_width+1,xtoa@w+1
  6147                           
  6148                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 634:     if (flag
      +                          s & (1 << 4)) {
  6149  0031D2  A98A               	btfss	_flags& (0+255),4,b
  6150  0031D4  EFEE  F018         	goto	u4531
  6151  0031D8  EFF1  F018         	goto	u4530
  6152  0031DC                     u4531:
  6153  0031DC  FFFF               	dw	65535	; assembler added errata NOP
  6154  0031DE  EFF6  F018         	goto	l4048
  6155  0031E2                     u4530:
  6156  0031E2  FFFF               	dw	65535	; assembler added errata NOP
  6157  0031E4                     
  6158                           ; BSR set to: 0
  6159                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 635:         w -=
      +                           2;
  6160  0031E4  0EFE               	movlw	254
  6161  0031E6  2635               	addwf	xtoa@w^0,f,c
  6162  0031E8  0EFF               	movlw	255
  6163  0031EA  2236               	addwfc	(xtoa@w+1)^0,f,c
  6164  0031EC                     l4048:
  6165  0031EC  FFFF               	dw	65535	; assembler added errata NOP
  6166                           
  6167                           ; BSR set to: 0
  6168                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 639:     n = d;
  6169  0031EE  C01E  F037         	movff	xtoa@d,xtoa@n
  6170  0031F2  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  6171  0031F6  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  6172  0031FA  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  6173  0031FE  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  6174  003202  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  6175  003206  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  6176  00320A  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  6177  00320E                     
  6178                           ; BSR set to: 0
  6179                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 640:     i = size
      +                          of(dbuf) - 1;
  6180  00320E  0E00               	movlw	0
  6181  003210  6E40               	movwf	(xtoa@i+1)^0,c
  6182  003212  0E1F               	movlw	31
  6183  003214  6E3F               	movwf	xtoa@i^0,c
  6184  003216                     
  6185                           ; BSR set to: 0
  6186                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 641:     dbuf[i] 
      +                          = '\0';
  6187  003216  0E00               	movlw	0
  6188  003218  6FB7               	movwf	(_dbuf+31)& (0+255),b
  6189                           
  6190                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6191  00321A  EFD4  F019         	goto	l4084
  6192  00321E                     l4054:
  6193  00321E  FFFF               	dw	65535	; assembler added errata NOP
  6194                           
  6195                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 643:         --i;
  6196  003220  063F               	decf	xtoa@i^0,f,c
  6197  003222  A0D8               	btfss	status,0,c
  6198  003224  0640               	decf	(xtoa@i+1)^0,f,c
  6199  003226                     
  6200                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 644:         c = 
      +                          n & 0x0f;
  6201  003226  0E0F               	movlw	15
  6202  003228  1437               	andwf	xtoa@n^0,w,c
  6203  00322A  6E41               	movwf	xtoa@c^0,c
  6204  00322C  6A42               	clrf	(xtoa@c+1)^0,c
  6205  00322E                     
  6206                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 645:         c = 
      +                          (c < 10) ? '0' + c : 'a' + (c - 10);
  6207  00322E  BE42               	btfsc	(xtoa@c+1)^0,7,c
  6208  003230  EF23  F019         	goto	u4541
  6209  003234  5042               	movf	(xtoa@c+1)^0,w,c
  6210  003236  E10A               	bnz	u4540
  6211  003238  0E0A               	movlw	10
  6212  00323A  5C41               	subwf	xtoa@c^0,w,c
  6213  00323C  A0D8               	btfss	status,0,c
  6214  00323E  EF23  F019         	goto	u4541
  6215  003242  EF26  F019         	goto	u4540
  6216  003246                     u4541:
  6217  003246  FFFF               	dw	65535	; assembler added errata NOP
  6218  003248  EF2F  F019         	goto	l4062
  6219  00324C                     u4540:
  6220  00324C  FFFF               	dw	65535	; assembler added errata NOP
  6221  00324E  0E57               	movlw	87
  6222  003250  2441               	addwf	xtoa@c^0,w,c
  6223  003252  6E41               	movwf	xtoa@c^0,c
  6224  003254  0E00               	movlw	0
  6225  003256  2042               	addwfc	(xtoa@c+1)^0,w,c
  6226  003258  6E42               	movwf	(xtoa@c+1)^0,c
  6227  00325A  EF36  F019         	goto	l1254
  6228  00325E                     l4062:
  6229  00325E  FFFF               	dw	65535	; assembler added errata NOP
  6230  003260  0E30               	movlw	48
  6231  003262  2441               	addwf	xtoa@c^0,w,c
  6232  003264  6E41               	movwf	xtoa@c^0,c
  6233  003266  0E00               	movlw	0
  6234  003268  2042               	addwfc	(xtoa@c+1)^0,w,c
  6235  00326A  6E42               	movwf	(xtoa@c+1)^0,c
  6236  00326C                     l1254:
  6237  00326C  FFFF               	dw	65535	; assembler added errata NOP
  6238  00326E  0EBF               	movlw	191
  6239  003270  6E27               	movwf	??_xtoa^0,c
  6240  003272  0EFF               	movlw	255
  6241  003274  6E28               	movwf	(??_xtoa+1)^0,c
  6242  003276  5026               	movf	xtoa@x^0,w,c
  6243  003278  6E29               	movwf	(??_xtoa+2)^0,c
  6244  00327A  6A2A               	clrf	(??_xtoa+3)^0,c
  6245  00327C  5027               	movf	??_xtoa^0,w,c
  6246  00327E  2629               	addwf	(??_xtoa+2)^0,f,c
  6247  003280  5028               	movf	(??_xtoa+1)^0,w,c
  6248  003282  222A               	addwfc	(??_xtoa+3)^0,f,c
  6249  003284  502A               	movf	(??_xtoa+3)^0,w,c
  6250  003286  E10B               	bnz	u4550
  6251  003288  0E1A               	movlw	26
  6252  00328A  5C29               	subwf	(??_xtoa+2)^0,w,c
  6253  00328C  A0D8               	btfss	status,0,c
  6254  00328E  EF4B  F019         	goto	u4551
  6255  003292  EF4F  F019         	goto	u4550
  6256  003296                     u4551:
  6257  003296  FFFF               	dw	65535	; assembler added errata NOP
  6258  003298  0E01               	movlw	1
  6259  00329A  EF51  F019         	goto	u4560
  6260  00329E                     u4550:
  6261  00329E  FFFF               	dw	65535	; assembler added errata NOP
  6262  0032A0  0E00               	movlw	0
  6263  0032A2                     u4560:
  6264  0032A2  FFFF               	dw	65535	; assembler added errata NOP
  6265  0032A4  6E2F               	movwf	_xtoa$1673^0,c
  6266  0032A6  6A30               	clrf	(_xtoa$1673+1)^0,c
  6267  0032A8  502F               	movf	_xtoa$1673^0,w,c
  6268  0032AA  1030               	iorwf	(_xtoa$1673+1)^0,w,c
  6269  0032AC  B4D8               	btfsc	status,2,c
  6270  0032AE  EF5B  F019         	goto	u4571
  6271  0032B2  EF5E  F019         	goto	u4570
  6272  0032B6                     u4571:
  6273  0032B6  FFFF               	dw	65535	; assembler added errata NOP
  6274  0032B8  EF94  F019         	goto	l4076
  6275  0032BC                     u4570:
  6276  0032BC  FFFF               	dw	65535	; assembler added errata NOP
  6277  0032BE  0E9F               	movlw	159
  6278  0032C0  6E27               	movwf	??_xtoa^0,c
  6279  0032C2  0EFF               	movlw	255
  6280  0032C4  6E28               	movwf	(??_xtoa+1)^0,c
  6281  0032C6  0E20               	movlw	32
  6282  0032C8  1041               	iorwf	xtoa@c^0,w,c
  6283  0032CA  6E29               	movwf	(??_xtoa+2)^0,c
  6284  0032CC  0E00               	movlw	0
  6285  0032CE  1042               	iorwf	(xtoa@c+1)^0,w,c
  6286  0032D0  6E2A               	movwf	(??_xtoa+3)^0,c
  6287  0032D2  5027               	movf	??_xtoa^0,w,c
  6288  0032D4  2629               	addwf	(??_xtoa+2)^0,f,c
  6289  0032D6  5028               	movf	(??_xtoa+1)^0,w,c
  6290  0032D8  222A               	addwfc	(??_xtoa+3)^0,f,c
  6291  0032DA  502A               	movf	(??_xtoa+3)^0,w,c
  6292  0032DC  E10B               	bnz	u4580
  6293  0032DE  0E1A               	movlw	26
  6294  0032E0  5C29               	subwf	(??_xtoa+2)^0,w,c
  6295  0032E2  A0D8               	btfss	status,0,c
  6296  0032E4  EF76  F019         	goto	u4581
  6297  0032E8  EF7A  F019         	goto	u4580
  6298  0032EC                     u4581:
  6299  0032EC  FFFF               	dw	65535	; assembler added errata NOP
  6300  0032EE  0E01               	movlw	1
  6301  0032F0  EF7C  F019         	goto	u4590
  6302  0032F4                     u4580:
  6303  0032F4  FFFF               	dw	65535	; assembler added errata NOP
  6304  0032F6  0E00               	movlw	0
  6305  0032F8                     u4590:
  6306  0032F8  FFFF               	dw	65535	; assembler added errata NOP
  6307  0032FA  6E31               	movwf	_xtoa$1674^0,c
  6308  0032FC  6A32               	clrf	(_xtoa$1674+1)^0,c
  6309  0032FE  5031               	movf	_xtoa$1674^0,w,c
  6310  003300  1032               	iorwf	(_xtoa$1674+1)^0,w,c
  6311  003302  B4D8               	btfsc	status,2,c
  6312  003304  EF86  F019         	goto	u4601
  6313  003308  EF89  F019         	goto	u4600
  6314  00330C                     u4601:
  6315  00330C  FFFF               	dw	65535	; assembler added errata NOP
  6316  00330E  EF94  F019         	goto	l4076
  6317  003312                     u4600:
  6318  003312  FFFF               	dw	65535	; assembler added errata NOP
  6319  003314                     
  6320                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 647:             
      +                          c = toupper(c);
  6321  003314  C041  F007         	movff	xtoa@c,toupper@c
  6322  003318  C042  F008         	movff	xtoa@c+1,toupper@c+1
  6323  00331C  EC68  F035         	call	_toupper	;wreg free
  6324  003320  C007  F041         	movff	?_toupper,xtoa@c
  6325  003324  C008  F042         	movff	?_toupper+1,xtoa@c+1
  6326  003328                     l4076:
  6327  003328  FFFF               	dw	65535	; assembler added errata NOP
  6328                           
  6329                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 649:         dbuf
      +                          [i] = (char)c;
  6330  00332A  0E98               	movlw	low _dbuf
  6331  00332C  243F               	addwf	xtoa@i^0,w,c
  6332  00332E  6ED9               	movwf	fsr2l,c
  6333  003330  0E00               	movlw	high _dbuf
  6334  003332  2040               	addwfc	(xtoa@i+1)^0,w,c
  6335  003334  6EDA               	movwf	fsr2h,c
  6336  003336  C041  FFDF         	movff	xtoa@c,indf2
  6337  00333A                     
  6338                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 650:         --p;
  6339  00333A  0633               	decf	xtoa@p^0,f,c
  6340  00333C  A0D8               	btfss	status,0,c
  6341  00333E  0634               	decf	(xtoa@p+1)^0,f,c
  6342  003340                     
  6343                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 651:         --w;
  6344  003340  0635               	decf	xtoa@w^0,f,c
  6345  003342  A0D8               	btfss	status,0,c
  6346  003344  0636               	decf	(xtoa@w+1)^0,f,c
  6347  003346                     
  6348                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 652:         n = 
      +                          n >> 4;
  6349  003346  C037  F027         	movff	xtoa@n,??_xtoa
  6350  00334A  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  6351  00334E  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  6352  003352  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  6353  003356  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  6354  00335A  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  6355  00335E  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  6356  003362  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  6357  003366  0E05               	movlw	5
  6358  003368  EFC0  F019         	goto	u4610
  6359  00336C                     u4615:
  6360  00336C  FFFF               	dw	65535	; assembler added errata NOP
  6361  00336E  90D8               	bcf	status,0,c
  6362  003370  322E               	rrcf	(??_xtoa+7)^0,f,c
  6363  003372  322D               	rrcf	(??_xtoa+6)^0,f,c
  6364  003374  322C               	rrcf	(??_xtoa+5)^0,f,c
  6365  003376  322B               	rrcf	(??_xtoa+4)^0,f,c
  6366  003378  322A               	rrcf	(??_xtoa+3)^0,f,c
  6367  00337A  3229               	rrcf	(??_xtoa+2)^0,f,c
  6368  00337C  3228               	rrcf	(??_xtoa+1)^0,f,c
  6369  00337E  3227               	rrcf	??_xtoa^0,f,c
  6370  003380                     u4610:
  6371  003380  FFFF               	dw	65535	; assembler added errata NOP
  6372  003382  2EE8               	decfsz	wreg,f,c
  6373  003384  EFB6  F019         	goto	u4615
  6374  003388  C027  F037         	movff	??_xtoa,xtoa@n
  6375  00338C  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  6376  003390  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  6377  003394  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  6378  003398  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  6379  00339C  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  6380  0033A0  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  6381  0033A4  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  6382  0033A8                     l4084:
  6383  0033A8  FFFF               	dw	65535	; assembler added errata NOP
  6384                           
  6385                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6386  0033AA  BE40               	btfsc	(xtoa@i+1)^0,7,c
  6387  0033AC  EFE1  F019         	goto	u4621
  6388  0033B0  5040               	movf	(xtoa@i+1)^0,w,c
  6389  0033B2  E10A               	bnz	u4620
  6390  0033B4  0E02               	movlw	2
  6391  0033B6  5C3F               	subwf	xtoa@i^0,w,c
  6392  0033B8  A0D8               	btfss	status,0,c
  6393  0033BA  EFE1  F019         	goto	u4621
  6394  0033BE  EFE4  F019         	goto	u4620
  6395  0033C2                     u4621:
  6396  0033C2  FFFF               	dw	65535	; assembler added errata NOP
  6397  0033C4  EF1D  F01A         	goto	l1268
  6398  0033C8                     u4620:
  6399  0033C8  FFFF               	dw	65535	; assembler added errata NOP
  6400  0033CA  5037               	movf	xtoa@n^0,w,c
  6401  0033CC  1038               	iorwf	(xtoa@n+1)^0,w,c
  6402  0033CE  1039               	iorwf	(xtoa@n+2)^0,w,c
  6403  0033D0  103A               	iorwf	(xtoa@n+3)^0,w,c
  6404  0033D2  103B               	iorwf	(xtoa@n+4)^0,w,c
  6405  0033D4  103C               	iorwf	(xtoa@n+5)^0,w,c
  6406  0033D6  103D               	iorwf	(xtoa@n+6)^0,w,c
  6407  0033D8  103E               	iorwf	(xtoa@n+7)^0,w,c
  6408  0033DA  A4D8               	btfss	status,2,c
  6409  0033DC  EFF2  F019         	goto	u4631
  6410  0033E0  EFF5  F019         	goto	u4630
  6411  0033E4                     u4631:
  6412  0033E4  FFFF               	dw	65535	; assembler added errata NOP
  6413  0033E6  EF0F  F019         	goto	l4054
  6414  0033EA                     u4630:
  6415  0033EA  FFFF               	dw	65535	; assembler added errata NOP
  6416  0033EC  BE34               	btfsc	(xtoa@p+1)^0,7,c
  6417  0033EE  EF04  F01A         	goto	u4640
  6418  0033F2  5034               	movf	(xtoa@p+1)^0,w,c
  6419  0033F4  E106               	bnz	u4641
  6420  0033F6  0433               	decf	xtoa@p^0,w,c
  6421  0033F8  B0D8               	btfsc	status,0,c
  6422  0033FA  EF01  F01A         	goto	u4641
  6423  0033FE  EF04  F01A         	goto	u4640
  6424  003402                     u4641:
  6425  003402  FFFF               	dw	65535	; assembler added errata NOP
  6426  003404  EF0F  F019         	goto	l4054
  6427  003408                     u4640:
  6428  003408  FFFF               	dw	65535	; assembler added errata NOP
  6429  00340A  BE36               	btfsc	(xtoa@w+1)^0,7,c
  6430  00340C  EF10  F01A         	goto	u4651
  6431  003410  5036               	movf	(xtoa@w+1)^0,w,c
  6432  003412  E109               	bnz	u4650
  6433  003414  0435               	decf	xtoa@w^0,w,c
  6434  003416  A0D8               	btfss	status,0,c
  6435  003418  EF10  F01A         	goto	u4651
  6436  00341C  EF13  F01A         	goto	u4650
  6437  003420                     u4651:
  6438  003420  FFFF               	dw	65535	; assembler added errata NOP
  6439  003422  EF1D  F01A         	goto	l1268
  6440  003426                     u4650:
  6441  003426  FFFF               	dw	65535	; assembler added errata NOP
  6442  003428  0100               	movlb	0	; () banked
  6443  00342A  B38A               	btfsc	_flags& (0+255),1,b
  6444  00342C  EF1A  F01A         	goto	u4661
  6445  003430  EF1D  F01A         	goto	u4660
  6446  003434                     u4661:
  6447  003434  FFFF               	dw	65535	; assembler added errata NOP
  6448  003436  EF0F  F019         	goto	l4054
  6449  00343A                     u4660:
  6450  00343A                     l1268:
  6451  00343A  FFFF               	dw	65535	; assembler added errata NOP
  6452                           
  6453                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  6454  00343C  0100               	movlb	0	; () banked
  6455  00343E  A98A               	btfss	_flags& (0+255),4,b
  6456  003440  EF24  F01A         	goto	u4671
  6457  003444  EF27  F01A         	goto	u4670
  6458  003448                     u4671:
  6459  003448  FFFF               	dw	65535	; assembler added errata NOP
  6460  00344A  EF3E  F01A         	goto	l4100
  6461  00344E                     u4670:
  6462  00344E  FFFF               	dw	65535	; assembler added errata NOP
  6463  003450                     
  6464                           ; BSR set to: 0
  6465                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 657:         --i;
  6466  003450  063F               	decf	xtoa@i^0,f,c
  6467  003452  A0D8               	btfss	status,0,c
  6468  003454  0640               	decf	(xtoa@i+1)^0,f,c
  6469  003456                     
  6470                           ; BSR set to: 0
  6471                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 658:         dbuf
      +                          [i] = x;
  6472  003456  0E98               	movlw	low _dbuf
  6473  003458  243F               	addwf	xtoa@i^0,w,c
  6474  00345A  6ED9               	movwf	fsr2l,c
  6475  00345C  0E00               	movlw	high _dbuf
  6476  00345E  2040               	addwfc	(xtoa@i+1)^0,w,c
  6477  003460  6EDA               	movwf	fsr2h,c
  6478  003462  C026  FFDF         	movff	xtoa@x,indf2
  6479  003466                     
  6480                           ; BSR set to: 0
  6481                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 659:         --i;
  6482  003466  063F               	decf	xtoa@i^0,f,c
  6483  003468  A0D8               	btfss	status,0,c
  6484  00346A  0640               	decf	(xtoa@i+1)^0,f,c
  6485                           
  6486                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 660:         dbuf
      +                          [i] = '0';
  6487  00346C  0E98               	movlw	low _dbuf
  6488  00346E  243F               	addwf	xtoa@i^0,w,c
  6489  003470  6ED9               	movwf	fsr2l,c
  6490  003472  0E00               	movlw	high _dbuf
  6491  003474  2040               	addwfc	(xtoa@i+1)^0,w,c
  6492  003476  6EDA               	movwf	fsr2h,c
  6493  003478  0E30               	movlw	48
  6494  00347A  6EDF               	movwf	indf2,c
  6495  00347C                     l4100:
  6496  00347C  FFFF               	dw	65535	; assembler added errata NOP
  6497                           
  6498                           ; BSR set to: 0
  6499                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 664:     return p
      +                          ad(fp, &dbuf[i], w);
  6500  00347E  C01C  F011         	movff	xtoa@fp,pad@fp
  6501  003482  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  6502  003486  0E98               	movlw	low _dbuf
  6503  003488  243F               	addwf	xtoa@i^0,w,c
  6504  00348A  6E13               	movwf	pad@buf^0,c
  6505  00348C  0E00               	movlw	high _dbuf
  6506  00348E  2040               	addwfc	(xtoa@i+1)^0,w,c
  6507  003490  6E14               	movwf	(pad@buf+1)^0,c
  6508  003492  C035  F015         	movff	xtoa@w,pad@p
  6509  003496  C036  F016         	movff	xtoa@w+1,pad@p+1
  6510  00349A  EC82  F039         	call	_pad	;wreg free
  6511  00349E  C011  F01C         	movff	?_pad,?_xtoa
  6512  0034A2  C012  F01D         	movff	?_pad+1,?_xtoa+1
  6513  0034A6  0012               	return		;funcret
  6514  0034A8  FFFF               	dw	65535	; errata NOP
  6515  0034AA                     __end_of_xtoa:
  6516                           	callstack 0
  6517                           
  6518 ;; *************** function _toupper *****************
  6519 ;; Defined at:
  6520 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\toupper.c"
  6521 ;; Parameters:    Size  Location     Type
  6522 ;;  c               2    6[COMRAM] int 
  6523 ;; Auto vars:     Size  Location     Type
  6524 ;;		None
  6525 ;; Return value:  Size  Location     Type
  6526 ;;                  2    6[COMRAM] int 
  6527 ;; Registers used:
  6528 ;;		wreg, status,2, status,0
  6529 ;; Tracked objects:
  6530 ;;		On entry : 0/0
  6531 ;;		On exit  : 0/0
  6532 ;;		Unchanged: 0/0
  6533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6534 ;;      Params:         2       0       0       0       0       0       0
  6535 ;;      Locals:         2       0       0       0       0       0       0
  6536 ;;      Temps:          4       0       0       0       0       0       0
  6537 ;;      Totals:         8       0       0       0       0       0       0
  6538 ;;Total ram usage:        8 bytes
  6539 ;; Hardware stack levels used:    1
  6540 ;; Hardware stack levels required when called:    2
  6541 ;; This function calls:
  6542 ;;		_islower
  6543 ;; This function is called by:
  6544 ;;		_xtoa
  6545 ;; This function uses a non-reentrant model
  6546 ;;
  6547                           
  6548                           	psect	text10
  6549  006AD0                     __ptext10:
  6550                           	callstack 0
  6551  006AD0                     _toupper:
  6552                           	callstack 0
  6553  006AD0  FFFF               	dw	65535	; assembler added errata NOP
  6554  006AD2  0E9F               	movlw	159
  6555  006AD4  6E09               	movwf	??_toupper^0,c
  6556  006AD6  0EFF               	movlw	255
  6557  006AD8  6E0A               	movwf	(??_toupper+1)^0,c
  6558  006ADA  C007  F00B         	movff	toupper@c,??_toupper+2
  6559  006ADE  C008  F00C         	movff	toupper@c+1,??_toupper+3
  6560  006AE2  5009               	movf	??_toupper^0,w,c
  6561  006AE4  260B               	addwf	(??_toupper+2)^0,f,c
  6562  006AE6  500A               	movf	(??_toupper+1)^0,w,c
  6563  006AE8  220C               	addwfc	(??_toupper+3)^0,f,c
  6564  006AEA  500C               	movf	(??_toupper+3)^0,w,c
  6565  006AEC  E10B               	bnz	u4010
  6566  006AEE  0E1A               	movlw	26
  6567  006AF0  5C0B               	subwf	(??_toupper+2)^0,w,c
  6568  006AF2  A0D8               	btfss	status,0,c
  6569  006AF4  EF7E  F035         	goto	u4011
  6570  006AF8  EF82  F035         	goto	u4010
  6571  006AFC                     u4011:
  6572  006AFC  FFFF               	dw	65535	; assembler added errata NOP
  6573  006AFE  0E01               	movlw	1
  6574  006B00  EF84  F035         	goto	u4020
  6575  006B04                     u4010:
  6576  006B04  FFFF               	dw	65535	; assembler added errata NOP
  6577  006B06  0E00               	movlw	0
  6578  006B08                     u4020:
  6579  006B08  FFFF               	dw	65535	; assembler added errata NOP
  6580  006B0A  6E0D               	movwf	_toupper$1899^0,c
  6581  006B0C  6A0E               	clrf	(_toupper$1899+1)^0,c
  6582  006B0E  500D               	movf	_toupper$1899^0,w,c
  6583  006B10  100E               	iorwf	(_toupper$1899+1)^0,w,c
  6584  006B12  B4D8               	btfsc	status,2,c
  6585  006B14  EF8E  F035         	goto	u4031
  6586  006B18  EF91  F035         	goto	u4030
  6587  006B1C                     u4031:
  6588  006B1C  FFFF               	dw	65535	; assembler added errata NOP
  6589  006B1E  EF98  F035         	goto	l1454
  6590  006B22                     u4030:
  6591  006B22  FFFF               	dw	65535	; assembler added errata NOP
  6592  006B24  0E5F               	movlw	95
  6593  006B26  1407               	andwf	toupper@c^0,w,c
  6594  006B28  6E07               	movwf	?_toupper^0,c
  6595  006B2A  6A08               	clrf	(?_toupper+1)^0,c
  6596  006B2C  EF9D  F035         	goto	l1459
  6597  006B30                     l1454:
  6598  006B30  FFFF               	dw	65535	; assembler added errata NOP
  6599  006B32  C007  F007         	movff	toupper@c,?_toupper
  6600  006B36  C008  F008         	movff	toupper@c+1,?_toupper+1
  6601  006B3A                     l1459:
  6602  006B3A  FFFF               	dw	65535	; assembler added errata NOP
  6603  006B3C  0012               	return		;funcret
  6604  006B3E  FFFF               	dw	65535	; errata NOP
  6605  006B40                     __end_of_toupper:
  6606                           	callstack 0
  6607                           
  6608 ;; *************** function _islower *****************
  6609 ;; Defined at:
  6610 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\islower.c"
  6611 ;; Parameters:    Size  Location     Type
  6612 ;;  c               2    0[COMRAM] int 
  6613 ;; Auto vars:     Size  Location     Type
  6614 ;;		None
  6615 ;; Return value:  Size  Location     Type
  6616 ;;                  2    0[COMRAM] int 
  6617 ;; Registers used:
  6618 ;;		wreg, status,2, status,0
  6619 ;; Tracked objects:
  6620 ;;		On entry : 0/0
  6621 ;;		On exit  : 0/0
  6622 ;;		Unchanged: 0/0
  6623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6624 ;;      Params:         2       0       0       0       0       0       0
  6625 ;;      Locals:         0       0       0       0       0       0       0
  6626 ;;      Temps:          4       0       0       0       0       0       0
  6627 ;;      Totals:         6       0       0       0       0       0       0
  6628 ;;Total ram usage:        6 bytes
  6629 ;; Hardware stack levels used:    1
  6630 ;; Hardware stack levels required when called:    1
  6631 ;; This function calls:
  6632 ;;		Nothing
  6633 ;; This function is called by:
  6634 ;;		_toupper
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638                           	psect	text11
  6639  0067DA                     __ptext11:
  6640                           	callstack 0
  6641  0067DA                     _islower:
  6642                           	callstack 23
  6643  0067DA  FFFF               	dw	65535	; assembler added errata NOP
  6644  0067DC  0E9F               	movlw	159
  6645  0067DE  6E03               	movwf	??_islower^0,c
  6646  0067E0  0EFF               	movlw	255
  6647  0067E2  6E04               	movwf	(??_islower+1)^0,c
  6648  0067E4  C001  F005         	movff	islower@c,??_islower+2
  6649  0067E8  C002  F006         	movff	islower@c+1,??_islower+3
  6650  0067EC  5003               	movf	??_islower^0,w,c
  6651  0067EE  2605               	addwf	(??_islower+2)^0,f,c
  6652  0067F0  5004               	movf	(??_islower+1)^0,w,c
  6653  0067F2  2206               	addwfc	(??_islower+3)^0,f,c
  6654  0067F4  5006               	movf	(??_islower+3)^0,w,c
  6655  0067F6  E10B               	bnz	u3700
  6656  0067F8  0E1A               	movlw	26
  6657  0067FA  5C05               	subwf	(??_islower+2)^0,w,c
  6658  0067FC  A0D8               	btfss	status,0,c
  6659  0067FE  EF03  F034         	goto	u3701
  6660  006802  EF07  F034         	goto	u3700
  6661  006806                     u3701:
  6662  006806  FFFF               	dw	65535	; assembler added errata NOP
  6663  006808  0E01               	movlw	1
  6664  00680A  EF09  F034         	goto	u3710
  6665  00680E                     u3700:
  6666  00680E  FFFF               	dw	65535	; assembler added errata NOP
  6667  006810  0E00               	movlw	0
  6668  006812                     u3710:
  6669  006812  FFFF               	dw	65535	; assembler added errata NOP
  6670  006814  6E01               	movwf	?_islower^0,c
  6671  006816  6A02               	clrf	(?_islower+1)^0,c
  6672  006818  0012               	return		;funcret
  6673  00681A  FFFF               	dw	65535	; errata NOP
  6674  00681C                     __end_of_islower:
  6675                           	callstack 0
  6676                           
  6677 ;; *************** function _isupper *****************
  6678 ;; Defined at:
  6679 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  6680 ;; Parameters:    Size  Location     Type
  6681 ;;  c               2    0[COMRAM] int 
  6682 ;; Auto vars:     Size  Location     Type
  6683 ;;		None
  6684 ;; Return value:  Size  Location     Type
  6685 ;;                  2    0[COMRAM] int 
  6686 ;; Registers used:
  6687 ;;		wreg, status,2, status,0
  6688 ;; Tracked objects:
  6689 ;;		On entry : 0/0
  6690 ;;		On exit  : 0/0
  6691 ;;		Unchanged: 0/0
  6692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6693 ;;      Params:         2       0       0       0       0       0       0
  6694 ;;      Locals:         0       0       0       0       0       0       0
  6695 ;;      Temps:          4       0       0       0       0       0       0
  6696 ;;      Totals:         6       0       0       0       0       0       0
  6697 ;;Total ram usage:        6 bytes
  6698 ;; Hardware stack levels used:    1
  6699 ;; Hardware stack levels required when called:    1
  6700 ;; This function calls:
  6701 ;;		Nothing
  6702 ;; This function is called by:
  6703 ;;		_xtoa
  6704 ;; This function uses a non-reentrant model
  6705 ;;
  6706                           
  6707                           	psect	text12
  6708  006798                     __ptext12:
  6709                           	callstack 0
  6710  006798                     _isupper:
  6711                           	callstack 24
  6712  006798  FFFF               	dw	65535	; assembler added errata NOP
  6713  00679A  0EBF               	movlw	191
  6714  00679C  6E03               	movwf	??_isupper^0,c
  6715  00679E  0EFF               	movlw	255
  6716  0067A0  6E04               	movwf	(??_isupper+1)^0,c
  6717  0067A2  C001  F005         	movff	isupper@c,??_isupper+2
  6718  0067A6  C002  F006         	movff	isupper@c+1,??_isupper+3
  6719  0067AA  5003               	movf	??_isupper^0,w,c
  6720  0067AC  2605               	addwf	(??_isupper+2)^0,f,c
  6721  0067AE  5004               	movf	(??_isupper+1)^0,w,c
  6722  0067B0  2206               	addwfc	(??_isupper+3)^0,f,c
  6723  0067B2  5006               	movf	(??_isupper+3)^0,w,c
  6724  0067B4  E10B               	bnz	u3970
  6725  0067B6  0E1A               	movlw	26
  6726  0067B8  5C05               	subwf	(??_isupper+2)^0,w,c
  6727  0067BA  A0D8               	btfss	status,0,c
  6728  0067BC  EFE2  F033         	goto	u3971
  6729  0067C0  EFE6  F033         	goto	u3970
  6730  0067C4                     u3971:
  6731  0067C4  FFFF               	dw	65535	; assembler added errata NOP
  6732  0067C6  0E01               	movlw	1
  6733  0067C8  EFE8  F033         	goto	u3980
  6734  0067CC                     u3970:
  6735  0067CC  FFFF               	dw	65535	; assembler added errata NOP
  6736  0067CE  0E00               	movlw	0
  6737  0067D0                     u3980:
  6738  0067D0  FFFF               	dw	65535	; assembler added errata NOP
  6739  0067D2  6E01               	movwf	?_isupper^0,c
  6740  0067D4  6A02               	clrf	(?_isupper+1)^0,c
  6741  0067D6  0012               	return		;funcret
  6742  0067D8  FFFF               	dw	65535	; errata NOP
  6743  0067DA                     __end_of_isupper:
  6744                           	callstack 0
  6745                           
  6746 ;; *************** function _isalpha *****************
  6747 ;; Defined at:
  6748 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isalpha.c"
  6749 ;; Parameters:    Size  Location     Type
  6750 ;;  c               2    0[COMRAM] int 
  6751 ;; Auto vars:     Size  Location     Type
  6752 ;;		None
  6753 ;; Return value:  Size  Location     Type
  6754 ;;                  2    0[COMRAM] int 
  6755 ;; Registers used:
  6756 ;;		wreg, status,2, status,0
  6757 ;; Tracked objects:
  6758 ;;		On entry : 0/0
  6759 ;;		On exit  : 0/0
  6760 ;;		Unchanged: 0/0
  6761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6762 ;;      Params:         2       0       0       0       0       0       0
  6763 ;;      Locals:         0       0       0       0       0       0       0
  6764 ;;      Temps:          4       0       0       0       0       0       0
  6765 ;;      Totals:         6       0       0       0       0       0       0
  6766 ;;Total ram usage:        6 bytes
  6767 ;; Hardware stack levels used:    1
  6768 ;; Hardware stack levels required when called:    1
  6769 ;; This function calls:
  6770 ;;		Nothing
  6771 ;; This function is called by:
  6772 ;;		_xtoa
  6773 ;; This function uses a non-reentrant model
  6774 ;;
  6775                           
  6776                           	psect	text13
  6777  00681C                     __ptext13:
  6778                           	callstack 0
  6779  00681C                     _isalpha:
  6780                           	callstack 24
  6781  00681C  FFFF               	dw	65535	; assembler added errata NOP
  6782  00681E  0E9F               	movlw	159
  6783  006820  6E03               	movwf	??_isalpha^0,c
  6784  006822  0EFF               	movlw	255
  6785  006824  6E04               	movwf	(??_isalpha+1)^0,c
  6786  006826  0E20               	movlw	32
  6787  006828  1001               	iorwf	isalpha@c^0,w,c
  6788  00682A  6E05               	movwf	(??_isalpha+2)^0,c
  6789  00682C  0E00               	movlw	0
  6790  00682E  1002               	iorwf	(isalpha@c+1)^0,w,c
  6791  006830  6E06               	movwf	(??_isalpha+3)^0,c
  6792  006832  5003               	movf	??_isalpha^0,w,c
  6793  006834  2605               	addwf	(??_isalpha+2)^0,f,c
  6794  006836  5004               	movf	(??_isalpha+1)^0,w,c
  6795  006838  2206               	addwfc	(??_isalpha+3)^0,f,c
  6796  00683A  5006               	movf	(??_isalpha+3)^0,w,c
  6797  00683C  E10B               	bnz	u3990
  6798  00683E  0E1A               	movlw	26
  6799  006840  5C05               	subwf	(??_isalpha+2)^0,w,c
  6800  006842  A0D8               	btfss	status,0,c
  6801  006844  EF26  F034         	goto	u3991
  6802  006848  EF2A  F034         	goto	u3990
  6803  00684C                     u3991:
  6804  00684C  FFFF               	dw	65535	; assembler added errata NOP
  6805  00684E  0E01               	movlw	1
  6806  006850  EF2C  F034         	goto	u4000
  6807  006854                     u3990:
  6808  006854  FFFF               	dw	65535	; assembler added errata NOP
  6809  006856  0E00               	movlw	0
  6810  006858                     u4000:
  6811  006858  FFFF               	dw	65535	; assembler added errata NOP
  6812  00685A  6E01               	movwf	?_isalpha^0,c
  6813  00685C  6A02               	clrf	(?_isalpha+1)^0,c
  6814  00685E  0012               	return		;funcret
  6815  006860  FFFF               	dw	65535	; errata NOP
  6816  006862                     __end_of_isalpha:
  6817                           	callstack 0
  6818                           
  6819 ;; *************** function _utoa *****************
  6820 ;; Defined at:
  6821 ;;		line 593 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6822 ;; Parameters:    Size  Location     Type
  6823 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6824 ;;		 -> vsnprintf@f(6), 
  6825 ;;  d               8   29[COMRAM] unsigned long long 
  6826 ;; Auto vars:     Size  Location     Type
  6827 ;;  n               8   49[COMRAM] unsigned long long 
  6828 ;;  i               2   57[COMRAM] int 
  6829 ;;  w               2   47[COMRAM] int 
  6830 ;;  p               2   45[COMRAM] int 
  6831 ;; Return value:  Size  Location     Type
  6832 ;;                  2   27[COMRAM] int 
  6833 ;; Registers used:
  6834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6835 ;; Tracked objects:
  6836 ;;		On entry : 0/0
  6837 ;;		On exit  : 0/0
  6838 ;;		Unchanged: 0/0
  6839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6840 ;;      Params:        10       0       0       0       0       0       0
  6841 ;;      Locals:        14       0       0       0       0       0       0
  6842 ;;      Temps:          8       0       0       0       0       0       0
  6843 ;;      Totals:        32       0       0       0       0       0       0
  6844 ;;Total ram usage:       32 bytes
  6845 ;; Hardware stack levels used:    1
  6846 ;; Hardware stack levels required when called:    5
  6847 ;; This function calls:
  6848 ;;		___lodiv
  6849 ;;		___lomod
  6850 ;;		_pad
  6851 ;; This function is called by:
  6852 ;;		_vfpfcnvrt
  6853 ;; This function uses a non-reentrant model
  6854 ;;
  6855                           
  6856                           	psect	text14
  6857  0034AA                     __ptext14:
  6858                           	callstack 0
  6859  0034AA                     _utoa:
  6860                           	callstack 0
  6861  0034AA  FFFF               	dw	65535	; assembler added errata NOP
  6862  0034AC                     
  6863                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 593: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 594: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 595:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common
      +                          \doprnt.c: 596:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sourc
      +                          es\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  6864  0034AC  0100               	movlb	0	; () banked
  6865  0034AE  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6866  0034B0  EF5C  F01A         	goto	u4441
  6867  0034B4  EF5F  F01A         	goto	u4440
  6868  0034B8                     u4441:
  6869  0034B8  FFFF               	dw	65535	; assembler added errata NOP
  6870  0034BA  EF61  F01A         	goto	l4006
  6871  0034BE                     u4440:
  6872  0034BE  FFFF               	dw	65535	; assembler added errata NOP
  6873  0034C0                     
  6874                           ; BSR set to: 0
  6875                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 600:         flag
      +                          s &= ~(1 << 1);
  6876  0034C0  938A               	bcf	_flags& (0+255),1,b
  6877  0034C2                     l4006:
  6878  0034C2  FFFF               	dw	65535	; assembler added errata NOP
  6879                           
  6880                           ; BSR set to: 0
  6881                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 602:     p = (0 <
      +                           prec) ? prec : 1;
  6882  0034C4  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6883  0034C6  EF70  F01A         	goto	u4450
  6884  0034CA  5189               	movf	(_prec+1)& (0+255),w,b
  6885  0034CC  E106               	bnz	u4451
  6886  0034CE  0588               	decf	_prec& (0+255),w,b
  6887  0034D0  B0D8               	btfsc	status,0,c
  6888  0034D2  EF6D  F01A         	goto	u4451
  6889  0034D6  EF70  F01A         	goto	u4450
  6890  0034DA                     u4451:
  6891  0034DA  FFFF               	dw	65535	; assembler added errata NOP
  6892  0034DC  EF77  F01A         	goto	l1230
  6893  0034E0                     u4450:
  6894  0034E0  FFFF               	dw	65535	; assembler added errata NOP
  6895  0034E2                     
  6896                           ; BSR set to: 0
  6897  0034E2  0E00               	movlw	0
  6898  0034E4  6E2F               	movwf	(utoa@p+1)^0,c
  6899  0034E6  0E01               	movlw	1
  6900  0034E8  6E2E               	movwf	utoa@p^0,c
  6901  0034EA  EF7C  F01A         	goto	l1232
  6902  0034EE                     l1230:
  6903  0034EE  FFFF               	dw	65535	; assembler added errata NOP
  6904                           
  6905                           ; BSR set to: 0
  6906  0034F0  C088  F02E         	movff	_prec,utoa@p
  6907  0034F4  C089  F02F         	movff	_prec+1,utoa@p+1
  6908  0034F8                     l1232:
  6909  0034F8  FFFF               	dw	65535	; assembler added errata NOP
  6910                           
  6911                           ; BSR set to: 0
  6912                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 603:     w = widt
      +                          h;
  6913  0034FA  C086  F030         	movff	_width,utoa@w
  6914  0034FE  C087  F031         	movff	_width+1,utoa@w+1
  6915                           
  6916                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 606:     n = d;
  6917  003502  C01E  F032         	movff	utoa@d,utoa@n
  6918  003506  C01F  F033         	movff	utoa@d+1,utoa@n+1
  6919  00350A  C020  F034         	movff	utoa@d+2,utoa@n+2
  6920  00350E  C021  F035         	movff	utoa@d+3,utoa@n+3
  6921  003512  C022  F036         	movff	utoa@d+4,utoa@n+4
  6922  003516  C023  F037         	movff	utoa@d+5,utoa@n+5
  6923  00351A  C024  F038         	movff	utoa@d+6,utoa@n+6
  6924  00351E  C025  F039         	movff	utoa@d+7,utoa@n+7
  6925  003522                     
  6926                           ; BSR set to: 0
  6927                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 607:     i = size
      +                          of(dbuf) - 1;
  6928  003522  0E00               	movlw	0
  6929  003524  6E3B               	movwf	(utoa@i+1)^0,c
  6930  003526  0E1F               	movlw	31
  6931  003528  6E3A               	movwf	utoa@i^0,c
  6932  00352A                     
  6933                           ; BSR set to: 0
  6934                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 608:     dbuf[i] 
      +                          = '\0';
  6935  00352A  0E00               	movlw	0
  6936  00352C  6FB7               	movwf	(_dbuf+31)& (0+255),b
  6937                           
  6938                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6939  00352E  EF10  F01B         	goto	l4024
  6940  003532                     l4014:
  6941  003532  FFFF               	dw	65535	; assembler added errata NOP
  6942                           
  6943                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 610:         --i;
  6944  003534  063A               	decf	utoa@i^0,f,c
  6945  003536  A0D8               	btfss	status,0,c
  6946  003538  063B               	decf	(utoa@i+1)^0,f,c
  6947  00353A                     
  6948                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 611:         dbuf
      +                          [i] = '0' + (n % 10);
  6949  00353A  0E98               	movlw	low _dbuf
  6950  00353C  243A               	addwf	utoa@i^0,w,c
  6951  00353E  6ED9               	movwf	fsr2l,c
  6952  003540  0E00               	movlw	high _dbuf
  6953  003542  203B               	addwfc	(utoa@i+1)^0,w,c
  6954  003544  6EDA               	movwf	fsr2h,c
  6955  003546  C032  F001         	movff	utoa@n,___lomod@dividend
  6956  00354A  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  6957  00354E  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  6958  003552  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  6959  003556  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  6960  00355A  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  6961  00355E  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  6962  003562  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  6963  003566  0E0A               	movlw	10
  6964  003568  6E09               	movwf	___lomod@divisor^0,c
  6965  00356A  0E00               	movlw	0
  6966  00356C  6E0A               	movwf	(___lomod@divisor+1)^0,c
  6967  00356E  0E00               	movlw	0
  6968  003570  6E0B               	movwf	(___lomod@divisor+2)^0,c
  6969  003572  0E00               	movlw	0
  6970  003574  6E0C               	movwf	(___lomod@divisor+3)^0,c
  6971  003576  0E00               	movlw	0
  6972  003578  6E0D               	movwf	(___lomod@divisor+4)^0,c
  6973  00357A  0E00               	movlw	0
  6974  00357C  6E0E               	movwf	(___lomod@divisor+5)^0,c
  6975  00357E  0E00               	movlw	0
  6976  003580  6E0F               	movwf	(___lomod@divisor+6)^0,c
  6977  003582  0E00               	movlw	0
  6978  003584  6E10               	movwf	(___lomod@divisor+7)^0,c
  6979  003586  ECF5  F039         	call	___lomod	;wreg free
  6980  00358A  C001  F026         	movff	?___lomod,??_utoa
  6981  00358E  C002  F027         	movff	?___lomod+1,??_utoa+1
  6982  003592  C003  F028         	movff	?___lomod+2,??_utoa+2
  6983  003596  C004  F029         	movff	?___lomod+3,??_utoa+3
  6984  00359A  C005  F02A         	movff	?___lomod+4,??_utoa+4
  6985  00359E  C006  F02B         	movff	?___lomod+5,??_utoa+5
  6986  0035A2  C007  F02C         	movff	?___lomod+6,??_utoa+6
  6987  0035A6  C008  F02D         	movff	?___lomod+7,??_utoa+7
  6988  0035AA  5026               	movf	??_utoa^0,w,c
  6989  0035AC  0F30               	addlw	48
  6990  0035AE  6EDF               	movwf	indf2,c
  6991  0035B0                     
  6992                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 612:         --p;
  6993  0035B0  062E               	decf	utoa@p^0,f,c
  6994  0035B2  A0D8               	btfss	status,0,c
  6995  0035B4  062F               	decf	(utoa@p+1)^0,f,c
  6996  0035B6                     
  6997                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 613:         --w;
  6998  0035B6  0630               	decf	utoa@w^0,f,c
  6999  0035B8  A0D8               	btfss	status,0,c
  7000  0035BA  0631               	decf	(utoa@w+1)^0,f,c
  7001  0035BC                     
  7002                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 614:         n = 
      +                          n / 10;
  7003  0035BC  C032  F001         	movff	utoa@n,___lodiv@dividend
  7004  0035C0  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  7005  0035C4  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  7006  0035C8  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  7007  0035CC  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  7008  0035D0  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  7009  0035D4  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  7010  0035D8  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  7011  0035DC  0E0A               	movlw	10
  7012  0035DE  6E09               	movwf	___lodiv@divisor^0,c
  7013  0035E0  0E00               	movlw	0
  7014  0035E2  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  7015  0035E4  0E00               	movlw	0
  7016  0035E6  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  7017  0035E8  0E00               	movlw	0
  7018  0035EA  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  7019  0035EC  0E00               	movlw	0
  7020  0035EE  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  7021  0035F0  0E00               	movlw	0
  7022  0035F2  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  7023  0035F4  0E00               	movlw	0
  7024  0035F6  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  7025  0035F8  0E00               	movlw	0
  7026  0035FA  6E10               	movwf	(___lodiv@divisor+7)^0,c
  7027  0035FC  EC66  F03B         	call	___lodiv	;wreg free
  7028  003600  C001  F032         	movff	?___lodiv,utoa@n
  7029  003604  C002  F033         	movff	?___lodiv+1,utoa@n+1
  7030  003608  C003  F034         	movff	?___lodiv+2,utoa@n+2
  7031  00360C  C004  F035         	movff	?___lodiv+3,utoa@n+3
  7032  003610  C005  F036         	movff	?___lodiv+4,utoa@n+4
  7033  003614  C006  F037         	movff	?___lodiv+5,utoa@n+5
  7034  003618  C007  F038         	movff	?___lodiv+6,utoa@n+6
  7035  00361C  C008  F039         	movff	?___lodiv+7,utoa@n+7
  7036  003620                     l4024:
  7037  003620  FFFF               	dw	65535	; assembler added errata NOP
  7038                           
  7039                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7040  003622  503A               	movf	utoa@i^0,w,c
  7041  003624  103B               	iorwf	(utoa@i+1)^0,w,c
  7042  003626  B4D8               	btfsc	status,2,c
  7043  003628  EF18  F01B         	goto	u4461
  7044  00362C  EF1B  F01B         	goto	u4460
  7045  003630                     u4461:
  7046  003630  FFFF               	dw	65535	; assembler added errata NOP
  7047  003632  EF54  F01B         	goto	l4034
  7048  003636                     u4460:
  7049  003636  FFFF               	dw	65535	; assembler added errata NOP
  7050  003638  5032               	movf	utoa@n^0,w,c
  7051  00363A  1033               	iorwf	(utoa@n+1)^0,w,c
  7052  00363C  1034               	iorwf	(utoa@n+2)^0,w,c
  7053  00363E  1035               	iorwf	(utoa@n+3)^0,w,c
  7054  003640  1036               	iorwf	(utoa@n+4)^0,w,c
  7055  003642  1037               	iorwf	(utoa@n+5)^0,w,c
  7056  003644  1038               	iorwf	(utoa@n+6)^0,w,c
  7057  003646  1039               	iorwf	(utoa@n+7)^0,w,c
  7058  003648  A4D8               	btfss	status,2,c
  7059  00364A  EF29  F01B         	goto	u4471
  7060  00364E  EF2C  F01B         	goto	u4470
  7061  003652                     u4471:
  7062  003652  FFFF               	dw	65535	; assembler added errata NOP
  7063  003654  EF99  F01A         	goto	l4014
  7064  003658                     u4470:
  7065  003658  FFFF               	dw	65535	; assembler added errata NOP
  7066  00365A  BE2F               	btfsc	(utoa@p+1)^0,7,c
  7067  00365C  EF3B  F01B         	goto	u4480
  7068  003660  502F               	movf	(utoa@p+1)^0,w,c
  7069  003662  E106               	bnz	u4481
  7070  003664  042E               	decf	utoa@p^0,w,c
  7071  003666  B0D8               	btfsc	status,0,c
  7072  003668  EF38  F01B         	goto	u4481
  7073  00366C  EF3B  F01B         	goto	u4480
  7074  003670                     u4481:
  7075  003670  FFFF               	dw	65535	; assembler added errata NOP
  7076  003672  EF99  F01A         	goto	l4014
  7077  003676                     u4480:
  7078  003676  FFFF               	dw	65535	; assembler added errata NOP
  7079  003678  BE31               	btfsc	(utoa@w+1)^0,7,c
  7080  00367A  EF47  F01B         	goto	u4491
  7081  00367E  5031               	movf	(utoa@w+1)^0,w,c
  7082  003680  E109               	bnz	u4490
  7083  003682  0430               	decf	utoa@w^0,w,c
  7084  003684  A0D8               	btfss	status,0,c
  7085  003686  EF47  F01B         	goto	u4491
  7086  00368A  EF4A  F01B         	goto	u4490
  7087  00368E                     u4491:
  7088  00368E  FFFF               	dw	65535	; assembler added errata NOP
  7089  003690  EF54  F01B         	goto	l4034
  7090  003694                     u4490:
  7091  003694  FFFF               	dw	65535	; assembler added errata NOP
  7092  003696  0100               	movlb	0	; () banked
  7093  003698  B38A               	btfsc	_flags& (0+255),1,b
  7094  00369A  EF51  F01B         	goto	u4501
  7095  00369E  EF54  F01B         	goto	u4500
  7096  0036A2                     u4501:
  7097  0036A2  FFFF               	dw	65535	; assembler added errata NOP
  7098  0036A4  EF99  F01A         	goto	l4014
  7099  0036A8                     u4500:
  7100  0036A8                     l4034:
  7101  0036A8  FFFF               	dw	65535	; assembler added errata NOP
  7102                           
  7103                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 618:     return p
      +                          ad(fp, &dbuf[i], w);
  7104  0036AA  C01C  F011         	movff	utoa@fp,pad@fp
  7105  0036AE  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  7106  0036B2  0E98               	movlw	low _dbuf
  7107  0036B4  243A               	addwf	utoa@i^0,w,c
  7108  0036B6  6E13               	movwf	pad@buf^0,c
  7109  0036B8  0E00               	movlw	high _dbuf
  7110  0036BA  203B               	addwfc	(utoa@i+1)^0,w,c
  7111  0036BC  6E14               	movwf	(pad@buf+1)^0,c
  7112  0036BE  C030  F015         	movff	utoa@w,pad@p
  7113  0036C2  C031  F016         	movff	utoa@w+1,pad@p+1
  7114  0036C6  EC82  F039         	call	_pad	;wreg free
  7115  0036CA  C011  F01C         	movff	?_pad,?_utoa
  7116  0036CE  C012  F01D         	movff	?_pad+1,?_utoa+1
  7117  0036D2  0012               	return		;funcret
  7118  0036D4  FFFF               	dw	65535	; errata NOP
  7119  0036D6                     __end_of_utoa:
  7120                           	callstack 0
  7121                           
  7122 ;; *************** function ___lomod *****************
  7123 ;; Defined at:
  7124 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lomod.c"
  7125 ;; Parameters:    Size  Location     Type
  7126 ;;  dividend        8    0[COMRAM] unsigned long long 
  7127 ;;  divisor         8    8[COMRAM] unsigned long long 
  7128 ;; Auto vars:     Size  Location     Type
  7129 ;;  counter         1   16[COMRAM] unsigned char 
  7130 ;; Return value:  Size  Location     Type
  7131 ;;                  8    0[COMRAM] unsigned long long 
  7132 ;; Registers used:
  7133 ;;		wreg, status,2, status,0
  7134 ;; Tracked objects:
  7135 ;;		On entry : 0/0
  7136 ;;		On exit  : 0/0
  7137 ;;		Unchanged: 0/0
  7138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7139 ;;      Params:        16       0       0       0       0       0       0
  7140 ;;      Locals:         1       0       0       0       0       0       0
  7141 ;;      Temps:          0       0       0       0       0       0       0
  7142 ;;      Totals:        17       0       0       0       0       0       0
  7143 ;;Total ram usage:       17 bytes
  7144 ;; Hardware stack levels used:    1
  7145 ;; Hardware stack levels required when called:    1
  7146 ;; This function calls:
  7147 ;;		Nothing
  7148 ;; This function is called by:
  7149 ;;		_utoa
  7150 ;; This function uses a non-reentrant model
  7151 ;;
  7152                           
  7153                           	psect	text15
  7154  0073EA                     __ptext15:
  7155                           	callstack 0
  7156  0073EA                     ___lomod:
  7157                           	callstack 0
  7158  0073EA  FFFF               	dw	65535	; assembler added errata NOP
  7159  0073EC  5009               	movf	___lomod@divisor^0,w,c
  7160  0073EE  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  7161  0073F0  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  7162  0073F2  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  7163  0073F4  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  7164  0073F6  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  7165  0073F8  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  7166  0073FA  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  7167  0073FC  B4D8               	btfsc	status,2,c
  7168  0073FE  EF03  F03A         	goto	u3901
  7169  007402  EF06  F03A         	goto	u3900
  7170  007406                     u3901:
  7171  007406  FFFF               	dw	65535	; assembler added errata NOP
  7172  007408  EF57  F03A         	goto	l842
  7173  00740C                     u3900:
  7174  00740C  FFFF               	dw	65535	; assembler added errata NOP
  7175  00740E  0E01               	movlw	1
  7176  007410  6E11               	movwf	___lomod@counter^0,c
  7177  007412  EF16  F03A         	goto	l3770
  7178  007416                     l3768:
  7179  007416  FFFF               	dw	65535	; assembler added errata NOP
  7180  007418  90D8               	bcf	status,0,c
  7181  00741A  3609               	rlcf	___lomod@divisor^0,f,c
  7182  00741C  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  7183  00741E  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  7184  007420  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  7185  007422  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  7186  007424  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  7187  007426  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  7188  007428  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  7189  00742A  2A11               	incf	___lomod@counter^0,f,c
  7190  00742C                     l3770:
  7191  00742C  FFFF               	dw	65535	; assembler added errata NOP
  7192  00742E  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  7193  007430  EF1C  F03A         	goto	u3911
  7194  007434  EF1F  F03A         	goto	u3910
  7195  007438                     u3911:
  7196  007438  FFFF               	dw	65535	; assembler added errata NOP
  7197  00743A  EF0B  F03A         	goto	l3768
  7198  00743E                     u3910:
  7199  00743E  FFFF               	dw	65535	; assembler added errata NOP
  7200  007440                     l3772:
  7201  007440  FFFF               	dw	65535	; assembler added errata NOP
  7202  007442  5009               	movf	___lomod@divisor^0,w,c
  7203  007444  5C01               	subwf	___lomod@dividend^0,w,c
  7204  007446  500A               	movf	(___lomod@divisor+1)^0,w,c
  7205  007448  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  7206  00744A  500B               	movf	(___lomod@divisor+2)^0,w,c
  7207  00744C  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  7208  00744E  500C               	movf	(___lomod@divisor+3)^0,w,c
  7209  007450  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  7210  007452  500D               	movf	(___lomod@divisor+4)^0,w,c
  7211  007454  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  7212  007456  500E               	movf	(___lomod@divisor+5)^0,w,c
  7213  007458  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  7214  00745A  500F               	movf	(___lomod@divisor+6)^0,w,c
  7215  00745C  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  7216  00745E  5010               	movf	(___lomod@divisor+7)^0,w,c
  7217  007460  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  7218  007462  A0D8               	btfss	status,0,c
  7219  007464  EF36  F03A         	goto	u3921
  7220  007468  EF39  F03A         	goto	u3920
  7221  00746C                     u3921:
  7222  00746C  FFFF               	dw	65535	; assembler added errata NOP
  7223  00746E  EF4A  F03A         	goto	l3776
  7224  007472                     u3920:
  7225  007472  FFFF               	dw	65535	; assembler added errata NOP
  7226  007474  5009               	movf	___lomod@divisor^0,w,c
  7227  007476  5E01               	subwf	___lomod@dividend^0,f,c
  7228  007478  500A               	movf	(___lomod@divisor+1)^0,w,c
  7229  00747A  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  7230  00747C  500B               	movf	(___lomod@divisor+2)^0,w,c
  7231  00747E  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  7232  007480  500C               	movf	(___lomod@divisor+3)^0,w,c
  7233  007482  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  7234  007484  500D               	movf	(___lomod@divisor+4)^0,w,c
  7235  007486  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  7236  007488  500E               	movf	(___lomod@divisor+5)^0,w,c
  7237  00748A  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  7238  00748C  500F               	movf	(___lomod@divisor+6)^0,w,c
  7239  00748E  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  7240  007490  5010               	movf	(___lomod@divisor+7)^0,w,c
  7241  007492  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  7242  007494                     l3776:
  7243  007494  FFFF               	dw	65535	; assembler added errata NOP
  7244  007496  90D8               	bcf	status,0,c
  7245  007498  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  7246  00749A  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  7247  00749C  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  7248  00749E  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  7249  0074A0  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  7250  0074A2  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  7251  0074A4  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  7252  0074A6  3209               	rrcf	___lomod@divisor^0,f,c
  7253  0074A8  2E11               	decfsz	___lomod@counter^0,f,c
  7254  0074AA  EF20  F03A         	goto	l3772
  7255  0074AE                     l842:
  7256  0074AE  FFFF               	dw	65535	; assembler added errata NOP
  7257  0074B0  C001  F001         	movff	___lomod@dividend,?___lomod
  7258  0074B4  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  7259  0074B8  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  7260  0074BC  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  7261  0074C0  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  7262  0074C4  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  7263  0074C8  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  7264  0074CC  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  7265  0074D0  0012               	return		;funcret
  7266  0074D2  FFFF               	dw	65535	; errata NOP
  7267  0074D4                     __end_of___lomod:
  7268                           	callstack 0
  7269                           
  7270 ;; *************** function ___lodiv *****************
  7271 ;; Defined at:
  7272 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lodiv.c"
  7273 ;; Parameters:    Size  Location     Type
  7274 ;;  dividend        8    0[COMRAM] unsigned long long 
  7275 ;;  divisor         8    8[COMRAM] unsigned long long 
  7276 ;; Auto vars:     Size  Location     Type
  7277 ;;  quotient        8   16[COMRAM] unsigned long long 
  7278 ;;  counter         1   24[COMRAM] unsigned char 
  7279 ;; Return value:  Size  Location     Type
  7280 ;;                  8    0[COMRAM] unsigned long long 
  7281 ;; Registers used:
  7282 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7283 ;; Tracked objects:
  7284 ;;		On entry : 0/0
  7285 ;;		On exit  : 0/0
  7286 ;;		Unchanged: 0/0
  7287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7288 ;;      Params:        16       0       0       0       0       0       0
  7289 ;;      Locals:         9       0       0       0       0       0       0
  7290 ;;      Temps:          0       0       0       0       0       0       0
  7291 ;;      Totals:        25       0       0       0       0       0       0
  7292 ;;Total ram usage:       25 bytes
  7293 ;; Hardware stack levels used:    1
  7294 ;; Hardware stack levels required when called:    1
  7295 ;; This function calls:
  7296 ;;		Nothing
  7297 ;; This function is called by:
  7298 ;;		_utoa
  7299 ;; This function uses a non-reentrant model
  7300 ;;
  7301                           
  7302                           	psect	text16
  7303  0076CC                     __ptext16:
  7304                           	callstack 0
  7305  0076CC                     ___lodiv:
  7306                           	callstack 0
  7307  0076CC  FFFF               	dw	65535	; assembler added errata NOP
  7308  0076CE  EE20  F011         	lfsr	2,___lodiv@quotient
  7309  0076D2  0E07               	movlw	7
  7310  0076D4                     u3861:
  7311  0076D4  6ADE               	clrf	postinc2,c
  7312  0076D6  06E8               	decf	wreg,f,c
  7313  0076D8  E2FD               	bc	u3861
  7314  0076DA  5009               	movf	___lodiv@divisor^0,w,c
  7315  0076DC  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  7316  0076DE  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  7317  0076E0  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  7318  0076E2  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  7319  0076E4  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  7320  0076E6  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  7321  0076E8  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  7322  0076EA  B4D8               	btfsc	status,2,c
  7323  0076EC  EF7A  F03B         	goto	u3871
  7324  0076F0  EF7D  F03B         	goto	u3870
  7325  0076F4                     u3871:
  7326  0076F4  FFFF               	dw	65535	; assembler added errata NOP
  7327  0076F6  EFD8  F03B         	goto	l832
  7328  0076FA                     u3870:
  7329  0076FA  FFFF               	dw	65535	; assembler added errata NOP
  7330  0076FC  0E01               	movlw	1
  7331  0076FE  6E19               	movwf	___lodiv@counter^0,c
  7332  007700  EF8D  F03B         	goto	l3750
  7333  007704                     l3748:
  7334  007704  FFFF               	dw	65535	; assembler added errata NOP
  7335  007706  90D8               	bcf	status,0,c
  7336  007708  3609               	rlcf	___lodiv@divisor^0,f,c
  7337  00770A  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  7338  00770C  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  7339  00770E  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  7340  007710  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  7341  007712  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  7342  007714  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  7343  007716  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  7344  007718  2A19               	incf	___lodiv@counter^0,f,c
  7345  00771A                     l3750:
  7346  00771A  FFFF               	dw	65535	; assembler added errata NOP
  7347  00771C  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  7348  00771E  EF93  F03B         	goto	u3881
  7349  007722  EF96  F03B         	goto	u3880
  7350  007726                     u3881:
  7351  007726  FFFF               	dw	65535	; assembler added errata NOP
  7352  007728  EF82  F03B         	goto	l3748
  7353  00772C                     u3880:
  7354  00772C  FFFF               	dw	65535	; assembler added errata NOP
  7355  00772E                     l3752:
  7356  00772E  FFFF               	dw	65535	; assembler added errata NOP
  7357  007730  90D8               	bcf	status,0,c
  7358  007732  3611               	rlcf	___lodiv@quotient^0,f,c
  7359  007734  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  7360  007736  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  7361  007738  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  7362  00773A  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  7363  00773C  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  7364  00773E  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  7365  007740  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  7366  007742  5009               	movf	___lodiv@divisor^0,w,c
  7367  007744  5C01               	subwf	___lodiv@dividend^0,w,c
  7368  007746  500A               	movf	(___lodiv@divisor+1)^0,w,c
  7369  007748  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  7370  00774A  500B               	movf	(___lodiv@divisor+2)^0,w,c
  7371  00774C  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  7372  00774E  500C               	movf	(___lodiv@divisor+3)^0,w,c
  7373  007750  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  7374  007752  500D               	movf	(___lodiv@divisor+4)^0,w,c
  7375  007754  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  7376  007756  500E               	movf	(___lodiv@divisor+5)^0,w,c
  7377  007758  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  7378  00775A  500F               	movf	(___lodiv@divisor+6)^0,w,c
  7379  00775C  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  7380  00775E  5010               	movf	(___lodiv@divisor+7)^0,w,c
  7381  007760  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  7382  007762  A0D8               	btfss	status,0,c
  7383  007764  EFB6  F03B         	goto	u3891
  7384  007768  EFB9  F03B         	goto	u3890
  7385  00776C                     u3891:
  7386  00776C  FFFF               	dw	65535	; assembler added errata NOP
  7387  00776E  EFCB  F03B         	goto	l3760
  7388  007772                     u3890:
  7389  007772  FFFF               	dw	65535	; assembler added errata NOP
  7390  007774  5009               	movf	___lodiv@divisor^0,w,c
  7391  007776  5E01               	subwf	___lodiv@dividend^0,f,c
  7392  007778  500A               	movf	(___lodiv@divisor+1)^0,w,c
  7393  00777A  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  7394  00777C  500B               	movf	(___lodiv@divisor+2)^0,w,c
  7395  00777E  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  7396  007780  500C               	movf	(___lodiv@divisor+3)^0,w,c
  7397  007782  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  7398  007784  500D               	movf	(___lodiv@divisor+4)^0,w,c
  7399  007786  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  7400  007788  500E               	movf	(___lodiv@divisor+5)^0,w,c
  7401  00778A  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  7402  00778C  500F               	movf	(___lodiv@divisor+6)^0,w,c
  7403  00778E  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  7404  007790  5010               	movf	(___lodiv@divisor+7)^0,w,c
  7405  007792  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  7406  007794  8011               	bsf	___lodiv@quotient^0,0,c
  7407  007796                     l3760:
  7408  007796  FFFF               	dw	65535	; assembler added errata NOP
  7409  007798  90D8               	bcf	status,0,c
  7410  00779A  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  7411  00779C  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  7412  00779E  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  7413  0077A0  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  7414  0077A2  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  7415  0077A4  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  7416  0077A6  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  7417  0077A8  3209               	rrcf	___lodiv@divisor^0,f,c
  7418  0077AA  2E19               	decfsz	___lodiv@counter^0,f,c
  7419  0077AC  EF97  F03B         	goto	l3752
  7420  0077B0                     l832:
  7421  0077B0  FFFF               	dw	65535	; assembler added errata NOP
  7422  0077B2  C011  F001         	movff	___lodiv@quotient,?___lodiv
  7423  0077B6  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  7424  0077BA  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  7425  0077BE  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  7426  0077C2  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  7427  0077C6  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  7428  0077CA  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  7429  0077CE  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  7430  0077D2  0012               	return		;funcret
  7431  0077D4  FFFF               	dw	65535	; errata NOP
  7432  0077D6                     __end_of___lodiv:
  7433                           	callstack 0
  7434                           
  7435 ;; *************** function _strncmp *****************
  7436 ;; Defined at:
  7437 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  7438 ;; Parameters:    Size  Location     Type
  7439 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  7440 ;;		 -> STR_10(3), 
  7441 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  7442 ;;		 -> STR_107(3), STR_103(3), STR_98(3), STR_94(3), 
  7443 ;;		 -> STR_89(4), STR_85(4), STR_80(3), STR_75(3), 
  7444 ;;		 -> STR_70(4), STR_65(3), STR_60(3), STR_55(4), 
  7445 ;;		 -> STR_50(3), STR_45(3), STR_40(4), STR_35(3), 
  7446 ;;		 -> STR_31(3), STR_26(3), STR_22(3), STR_17(4), 
  7447 ;;		 -> STR_13(4), 
  7448 ;;  n               2    4[COMRAM] unsigned int 
  7449 ;; Auto vars:     Size  Location     Type
  7450 ;;  r               2    9[COMRAM] PTR const unsigned char 
  7451 ;;		 -> STR_107(3), STR_103(3), STR_98(3), STR_94(3), 
  7452 ;;		 -> STR_89(4), STR_85(4), STR_80(3), STR_75(3), 
  7453 ;;		 -> STR_70(4), STR_65(3), STR_60(3), STR_55(4), 
  7454 ;;		 -> STR_50(3), STR_45(3), STR_40(4), STR_35(3), 
  7455 ;;		 -> STR_31(3), STR_26(3), STR_22(3), STR_17(4), 
  7456 ;;		 -> STR_13(4), 
  7457 ;;  l               2    7[COMRAM] PTR const unsigned char 
  7458 ;;		 -> STR_10(3), 
  7459 ;; Return value:  Size  Location     Type
  7460 ;;                  2    0[COMRAM] int 
  7461 ;; Registers used:
  7462 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7463 ;; Tracked objects:
  7464 ;;		On entry : 0/0
  7465 ;;		On exit  : 0/0
  7466 ;;		Unchanged: 0/0
  7467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7468 ;;      Params:         6       0       0       0       0       0       0
  7469 ;;      Locals:         4       0       0       0       0       0       0
  7470 ;;      Temps:          1       0       0       0       0       0       0
  7471 ;;      Totals:        11       0       0       0       0       0       0
  7472 ;;Total ram usage:       11 bytes
  7473 ;; Hardware stack levels used:    1
  7474 ;; Hardware stack levels required when called:    1
  7475 ;; This function calls:
  7476 ;;		Nothing
  7477 ;; This function is called by:
  7478 ;;		_vfpfcnvrt
  7479 ;; This function uses a non-reentrant model
  7480 ;;
  7481                           
  7482                           	psect	text17
  7483  0075C4                     __ptext17:
  7484                           	callstack 0
  7485  0075C4                     _strncmp:
  7486                           	callstack 0
  7487  0075C4  FFFF               	dw	65535	; assembler added errata NOP
  7488  0075C6  C001  F008         	movff	strncmp@_l,strncmp@l
  7489  0075CA  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  7490  0075CE  C003  F00A         	movff	strncmp@_r,strncmp@r
  7491  0075D2  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  7492  0075D6  0605               	decf	strncmp@n^0,f,c
  7493  0075D8  A0D8               	btfss	status,0,c
  7494  0075DA  0606               	decf	(strncmp@n+1)^0,f,c
  7495  0075DC  2805               	incf	strncmp@n^0,w,c
  7496  0075DE  E106               	bnz	u4751
  7497  0075E0  2806               	incf	(strncmp@n+1)^0,w,c
  7498  0075E2  A4D8               	btfss	status,2,c
  7499  0075E4  EFF6  F03A         	goto	u4751
  7500  0075E8  EFF9  F03A         	goto	u4750
  7501  0075EC                     u4751:
  7502  0075EC  FFFF               	dw	65535	; assembler added errata NOP
  7503  0075EE  EF08  F03B         	goto	l4154
  7504  0075F2                     u4750:
  7505  0075F2  FFFF               	dw	65535	; assembler added errata NOP
  7506  0075F4  0E00               	movlw	0
  7507  0075F6  6E02               	movwf	(?_strncmp+1)^0,c
  7508  0075F8  0E00               	movlw	0
  7509  0075FA  6E01               	movwf	?_strncmp^0,c
  7510  0075FC  EF63  F03B         	goto	l1444
  7511  007600                     l4152:
  7512  007600  FFFF               	dw	65535	; assembler added errata NOP
  7513  007602  4A08               	infsnz	strncmp@l^0,f,c
  7514  007604  2A09               	incf	(strncmp@l+1)^0,f,c
  7515  007606  4A0A               	infsnz	strncmp@r^0,f,c
  7516  007608  2A0B               	incf	(strncmp@r+1)^0,f,c
  7517  00760A  0605               	decf	strncmp@n^0,f,c
  7518  00760C  A0D8               	btfss	status,0,c
  7519  00760E  0606               	decf	(strncmp@n+1)^0,f,c
  7520  007610                     l4154:
  7521  007610  FFFF               	dw	65535	; assembler added errata NOP
  7522  007612  C008  FFF6         	movff	strncmp@l,tblptrl
  7523  007616  C009  FFF7         	movff	strncmp@l+1,tblptrh
  7524  00761A                     	if	0	;tblptru may be non-zero
  7525  00761A                     	endif
  7526  00761A                     	if	0	;tblptru may be non-zero
  7527  00761A                     	endif
  7528  00761A  0008               	tblrd		*
  7529  00761C  FFFF               	dw	65535	; errata NOP
  7530  00761E  50F5               	movf	tablat,w,c
  7531  007620  0900               	iorlw	0
  7532  007622  B4D8               	btfsc	status,2,c
  7533  007624  EF16  F03B         	goto	u4761
  7534  007628  EF19  F03B         	goto	u4760
  7535  00762C                     u4761:
  7536  00762C  FFFF               	dw	65535	; assembler added errata NOP
  7537  00762E  EF4E  F03B         	goto	l4162
  7538  007632                     u4760:
  7539  007632  FFFF               	dw	65535	; assembler added errata NOP
  7540  007634  C00A  FFF6         	movff	strncmp@r,tblptrl
  7541  007638  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7542  00763C                     	if	0	;tblptru may be non-zero
  7543  00763C                     	endif
  7544  00763C                     	if	0	;tblptru may be non-zero
  7545  00763C                     	endif
  7546  00763C  0008               	tblrd		*
  7547  00763E  FFFF               	dw	65535	; errata NOP
  7548  007640  50F5               	movf	tablat,w,c
  7549  007642  0900               	iorlw	0
  7550  007644  B4D8               	btfsc	status,2,c
  7551  007646  EF27  F03B         	goto	u4771
  7552  00764A  EF2A  F03B         	goto	u4770
  7553  00764E                     u4771:
  7554  00764E  FFFF               	dw	65535	; assembler added errata NOP
  7555  007650  EF4E  F03B         	goto	l4162
  7556  007654                     u4770:
  7557  007654  FFFF               	dw	65535	; assembler added errata NOP
  7558  007656  5005               	movf	strncmp@n^0,w,c
  7559  007658  1006               	iorwf	(strncmp@n+1)^0,w,c
  7560  00765A  B4D8               	btfsc	status,2,c
  7561  00765C  EF32  F03B         	goto	u4781
  7562  007660  EF35  F03B         	goto	u4780
  7563  007664                     u4781:
  7564  007664  FFFF               	dw	65535	; assembler added errata NOP
  7565  007666  EF4E  F03B         	goto	l4162
  7566  00766A                     u4780:
  7567  00766A  FFFF               	dw	65535	; assembler added errata NOP
  7568  00766C  C008  FFF6         	movff	strncmp@l,tblptrl
  7569  007670  C009  FFF7         	movff	strncmp@l+1,tblptrh
  7570  007674                     	if	0	;tblptru may be non-zero
  7571  007674                     	endif
  7572  007674                     	if	0	;tblptru may be non-zero
  7573  007674                     	endif
  7574  007674  0008               	tblrd		*
  7575  007676  FFFF               	dw	65535	; errata NOP
  7576  007678  CFF5 F007          	movff	tablat,??_strncmp
  7577  00767C  C00A  FFF6         	movff	strncmp@r,tblptrl
  7578  007680  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7579  007684                     	if	0	;tblptru may be non-zero
  7580  007684                     	endif
  7581  007684                     	if	0	;tblptru may be non-zero
  7582  007684                     	endif
  7583  007684  0008               	tblrd		*
  7584  007686  FFFF               	dw	65535	; errata NOP
  7585  007688  50F5               	movf	tablat,w,c
  7586  00768A  1807               	xorwf	??_strncmp^0,w,c
  7587  00768C  B4D8               	btfsc	status,2,c
  7588  00768E  EF4B  F03B         	goto	u4791
  7589  007692  EF4E  F03B         	goto	u4790
  7590  007696                     u4791:
  7591  007696  FFFF               	dw	65535	; assembler added errata NOP
  7592  007698  EF00  F03B         	goto	l4152
  7593  00769C                     u4790:
  7594  00769C                     l4162:
  7595  00769C  FFFF               	dw	65535	; assembler added errata NOP
  7596  00769E  C008  FFF6         	movff	strncmp@l,tblptrl
  7597  0076A2  C009  FFF7         	movff	strncmp@l+1,tblptrh
  7598  0076A6                     	if	0	;tblptru may be non-zero
  7599  0076A6                     	endif
  7600  0076A6                     	if	0	;tblptru may be non-zero
  7601  0076A6                     	endif
  7602  0076A6  0008               	tblrd		*
  7603  0076A8  FFFF               	dw	65535	; errata NOP
  7604  0076AA  CFF5 F007          	movff	tablat,??_strncmp
  7605  0076AE  C00A  FFF6         	movff	strncmp@r,tblptrl
  7606  0076B2  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7607  0076B6                     	if	0	;tblptru may be non-zero
  7608  0076B6                     	endif
  7609  0076B6                     	if	0	;tblptru may be non-zero
  7610  0076B6                     	endif
  7611  0076B6  0008               	tblrd		*
  7612  0076B8  FFFF               	dw	65535	; errata NOP
  7613  0076BA  50F5               	movf	tablat,w,c
  7614  0076BC  5C07               	subwf	??_strncmp^0,w,c
  7615  0076BE  6E01               	movwf	?_strncmp^0,c
  7616  0076C0  6A02               	clrf	(?_strncmp+1)^0,c
  7617  0076C2  A0D8               	btfss	status,0,c
  7618  0076C4  0602               	decf	(?_strncmp+1)^0,f,c
  7619  0076C6                     l1444:
  7620  0076C6  FFFF               	dw	65535	; assembler added errata NOP
  7621  0076C8  0012               	return		;funcret
  7622  0076CA  FFFF               	dw	65535	; errata NOP
  7623  0076CC                     __end_of_strncmp:
  7624                           	callstack 0
  7625                           
  7626 ;; *************** function _stoa *****************
  7627 ;; Defined at:
  7628 ;;		line 546 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7629 ;; Parameters:    Size  Location     Type
  7630 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  7631 ;;		 -> vsnprintf@f(6), 
  7632 ;;  s               2   11[COMRAM] PTR unsigned char 
  7633 ;;		 -> ?_snprintf(2), STR_8(50), STR_7(9), STR_6(7), 
  7634 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  7635 ;;		 -> STR_1(49), 
  7636 ;; Auto vars:     Size  Location     Type
  7637 ;;  nuls            7   14[COMRAM] unsigned char [7]
  7638 ;;  l               2   29[COMRAM] int 
  7639 ;;  p               2   27[COMRAM] int 
  7640 ;;  cp              2   25[COMRAM] PTR unsigned char 
  7641 ;;		 -> stoa@nuls(7), ?_snprintf(2), STR_8(50), STR_7(9), 
  7642 ;;		 -> STR_6(7), STR_5(9), STR_4(39), STR_3(9), 
  7643 ;;		 -> STR_2(64), STR_1(49), 
  7644 ;;  w               2   23[COMRAM] int 
  7645 ;;  i               2   21[COMRAM] int 
  7646 ;; Return value:  Size  Location     Type
  7647 ;;                  2    9[COMRAM] int 
  7648 ;; Registers used:
  7649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7650 ;; Tracked objects:
  7651 ;;		On entry : 0/0
  7652 ;;		On exit  : 0/0
  7653 ;;		Unchanged: 0/0
  7654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7655 ;;      Params:         4       0       0       0       0       0       0
  7656 ;;      Locals:        17       0       0       0       0       0       0
  7657 ;;      Temps:          1       0       0       0       0       0       0
  7658 ;;      Totals:        22       0       0       0       0       0       0
  7659 ;;Total ram usage:       22 bytes
  7660 ;; Hardware stack levels used:    1
  7661 ;; Hardware stack levels required when called:    3
  7662 ;; This function calls:
  7663 ;;		_fputc
  7664 ;;		_strlen
  7665 ;; This function is called by:
  7666 ;;		_vfpfcnvrt
  7667 ;; This function uses a non-reentrant model
  7668 ;;
  7669                           
  7670                           	psect	text18
  7671  003AF4                     __ptext18:
  7672                           	callstack 0
  7673  003AF4                     _stoa:
  7674                           	callstack 0
  7675  003AF4  FFFF               	dw	65535	; assembler added errata NOP
  7676  003AF6                     
  7677                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 546: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 547: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 548:  
      +                             char *cp, nuls[] = "(null)";
  7678  003AF6  EE20  F0DE         	lfsr	2,stoa@F1152
  7679  003AFA  EE10  F00F         	lfsr	1,stoa@nuls
  7680  003AFE  0E06               	movlw	6
  7681  003B00                     u4341:
  7682  003B00  CFDB FFE3          	movff	plusw2,plusw1
  7683  003B04  06E8               	decf	wreg,f,c
  7684  003B06  E2FC               	bc	u4341
  7685  003B08                     
  7686                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 549:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 552:     c
      +                          p = s;
  7687  003B08  C00C  F01A         	movff	stoa@s,stoa@cp
  7688  003B0C  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  7689  003B10                     
  7690                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 553:     if (!cp)
      +                           {
  7691  003B10  501A               	movf	stoa@cp^0,w,c
  7692  003B12  101B               	iorwf	(stoa@cp+1)^0,w,c
  7693  003B14  A4D8               	btfss	status,2,c
  7694  003B16  EF8F  F01D         	goto	u4351
  7695  003B1A  EF92  F01D         	goto	u4350
  7696  003B1E                     u4351:
  7697  003B1E  FFFF               	dw	65535	; assembler added errata NOP
  7698  003B20  EF97  F01D         	goto	l3968
  7699  003B24                     u4350:
  7700  003B24  FFFF               	dw	65535	; assembler added errata NOP
  7701  003B26                     
  7702                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 554:         cp =
      +                           nuls;
  7703  003B26  0E0F               	movlw	low stoa@nuls
  7704  003B28  6E1A               	movwf	stoa@cp^0,c
  7705  003B2A  0E00               	movlw	high stoa@nuls
  7706  003B2C  6E1B               	movwf	(stoa@cp+1)^0,c
  7707  003B2E                     l3968:
  7708  003B2E  FFFF               	dw	65535	; assembler added errata NOP
  7709                           
  7710                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 558:     l = strl
      +                          en(cp);
  7711  003B30  C01A  F001         	movff	stoa@cp,strlen@s
  7712  003B34  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  7713  003B38  ECA4  F034         	call	_strlen	;wreg free
  7714  003B3C  C001  F01E         	movff	?_strlen,stoa@l
  7715  003B40  C002  F01F         	movff	?_strlen+1,stoa@l+1
  7716  003B44                     
  7717                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 559:     p = prec
      +                          ;
  7718  003B44  C088  F01C         	movff	_prec,stoa@p
  7719  003B48  C089  F01D         	movff	_prec+1,stoa@p+1
  7720  003B4C                     
  7721                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 560:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  7722  003B4C  BE1D               	btfsc	(stoa@p+1)^0,7,c
  7723  003B4E  EFAB  F01D         	goto	u4361
  7724  003B52  EFAE  F01D         	goto	u4360
  7725  003B56                     u4361:
  7726  003B56  FFFF               	dw	65535	; assembler added errata NOP
  7727  003B58  EFC7  F01D         	goto	l1211
  7728  003B5C                     u4360:
  7729  003B5C  FFFF               	dw	65535	; assembler added errata NOP
  7730  003B5E  501E               	movf	stoa@l^0,w,c
  7731  003B60  5C1C               	subwf	stoa@p^0,w,c
  7732  003B62  501D               	movf	(stoa@p+1)^0,w,c
  7733  003B64  0A80               	xorlw	128
  7734  003B66  6E0E               	movwf	??_stoa^0,c
  7735  003B68  501F               	movf	(stoa@l+1)^0,w,c
  7736  003B6A  0A80               	xorlw	128
  7737  003B6C  580E               	subwfb	??_stoa^0,w,c
  7738  003B6E  A0D8               	btfss	status,0,c
  7739  003B70  EFBC  F01D         	goto	u4371
  7740  003B74  EFBF  F01D         	goto	u4370
  7741  003B78                     u4371:
  7742  003B78  FFFF               	dw	65535	; assembler added errata NOP
  7743  003B7A  EFC2  F01D         	goto	l1209
  7744  003B7E                     u4370:
  7745  003B7E  FFFF               	dw	65535	; assembler added errata NOP
  7746  003B80  EFC7  F01D         	goto	l1211
  7747  003B84                     l1209:
  7748  003B84  FFFF               	dw	65535	; assembler added errata NOP
  7749  003B86  C01C  F01E         	movff	stoa@p,stoa@l
  7750  003B8A  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  7751  003B8E                     l1211:
  7752  003B8E  FFFF               	dw	65535	; assembler added errata NOP
  7753                           
  7754                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 561:     p = l;
  7755  003B90  C01E  F01C         	movff	stoa@l,stoa@p
  7756  003B94  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  7757                           
  7758                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 562:     w = widt
      +                          h;
  7759  003B98  C086  F018         	movff	_width,stoa@w
  7760  003B9C  C087  F019         	movff	_width+1,stoa@w+1
  7761                           
  7762                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 565:     if (!(fl
      +                          ags & (1 << 0))) {
  7763  003BA0  0100               	movlb	0	; () banked
  7764  003BA2  B18A               	btfsc	_flags& (0+255),0,b
  7765  003BA4  EFD6  F01D         	goto	u4381
  7766  003BA8  EFD9  F01D         	goto	u4380
  7767  003BAC                     u4381:
  7768  003BAC  FFFF               	dw	65535	; assembler added errata NOP
  7769  003BAE  EFFA  F01D         	goto	l3984
  7770  003BB2                     u4380:
  7771  003BB2  FFFF               	dw	65535	; assembler added errata NOP
  7772  003BB4  EFE9  F01D         	goto	l3982
  7773  003BB8                     l3978:
  7774  003BB8  FFFF               	dw	65535	; assembler added errata NOP
  7775                           
  7776                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 567:             
      +                          fputc(' ', fp);
  7777  003BBA  0E00               	movlw	0
  7778  003BBC  6E02               	movwf	(fputc@c+1)^0,c
  7779  003BBE  0E20               	movlw	32
  7780  003BC0  6E01               	movwf	fputc@c^0,c
  7781  003BC2  C00A  F003         	movff	stoa@fp,fputc@fp
  7782  003BC6  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7783  003BCA  EC11  F039         	call	_fputc	;wreg free
  7784  003BCE                     
  7785                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 568:             
      +                          ++l;
  7786  003BCE  4A1E               	infsnz	stoa@l^0,f,c
  7787  003BD0  2A1F               	incf	(stoa@l+1)^0,f,c
  7788  003BD2                     l3982:
  7789  003BD2  FFFF               	dw	65535	; assembler added errata NOP
  7790                           
  7791                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 566:         whil
      +                          e (l < w) {
  7792  003BD4  5018               	movf	stoa@w^0,w,c
  7793  003BD6  5C1E               	subwf	stoa@l^0,w,c
  7794  003BD8  501F               	movf	(stoa@l+1)^0,w,c
  7795  003BDA  0A80               	xorlw	128
  7796  003BDC  6E0E               	movwf	??_stoa^0,c
  7797  003BDE  5019               	movf	(stoa@w+1)^0,w,c
  7798  003BE0  0A80               	xorlw	128
  7799  003BE2  580E               	subwfb	??_stoa^0,w,c
  7800  003BE4  A0D8               	btfss	status,0,c
  7801  003BE6  EFF7  F01D         	goto	u4391
  7802  003BEA  EFFA  F01D         	goto	u4390
  7803  003BEE                     u4391:
  7804  003BEE  FFFF               	dw	65535	; assembler added errata NOP
  7805  003BF0  EFDC  F01D         	goto	l3978
  7806  003BF4                     u4390:
  7807  003BF4                     l3984:
  7808  003BF4  FFFF               	dw	65535	; assembler added errata NOP
  7809                           
  7810                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 573:     i = 0;
  7811  003BF6  0E00               	movlw	0
  7812  003BF8  6E17               	movwf	(stoa@i+1)^0,c
  7813  003BFA  0E00               	movlw	0
  7814  003BFC  6E16               	movwf	stoa@i^0,c
  7815                           
  7816                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  7817  003BFE  EF21  F01E         	goto	l3992
  7818  003C02                     l3986:
  7819  003C02  FFFF               	dw	65535	; assembler added errata NOP
  7820                           
  7821                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 575:         fput
      +                          c(*cp, fp);
  7822  003C04  C01A  FFF6         	movff	stoa@cp,tblptrl
  7823  003C08  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  7824  003C0C  6AF8               	clrf	tblptru,c
  7825  003C0E  0E05               	movlw	(high __ramtop+-1)
  7826  003C10  64F7               	cpfsgt	tblptrh,c
  7827  003C12  D004               	bra	u4407
  7828  003C14  0008               	tblrd		*
  7829  003C16  FFFF               	dw	65535	; errata NOP
  7830  003C18  50F5               	movf	tablat,w,c
  7831  003C1A  D005               	bra	u4400
  7832  003C1C                     u4407:
  7833  003C1C  CFF6 FFE1          	movff	tblptrl,fsr1l
  7834  003C20  CFF7 FFE2          	movff	tblptrh,fsr1h
  7835  003C24  50E7               	movf	indf1,w,c
  7836  003C26                     u4400:
  7837  003C26  6E0E               	movwf	??_stoa^0,c
  7838  003C28  500E               	movf	??_stoa^0,w,c
  7839  003C2A  6E01               	movwf	fputc@c^0,c
  7840  003C2C  6A02               	clrf	(fputc@c+1)^0,c
  7841  003C2E  C00A  F003         	movff	stoa@fp,fputc@fp
  7842  003C32  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7843  003C36  EC11  F039         	call	_fputc	;wreg free
  7844  003C3A                     
  7845                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 576:         ++cp
      +                          ;
  7846  003C3A  4A1A               	infsnz	stoa@cp^0,f,c
  7847  003C3C  2A1B               	incf	(stoa@cp+1)^0,f,c
  7848  003C3E                     
  7849                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 577:         ++i;
  7850  003C3E  4A16               	infsnz	stoa@i^0,f,c
  7851  003C40  2A17               	incf	(stoa@i+1)^0,f,c
  7852  003C42                     l3992:
  7853  003C42  FFFF               	dw	65535	; assembler added errata NOP
  7854                           
  7855                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  7856  003C44  501C               	movf	stoa@p^0,w,c
  7857  003C46  5C16               	subwf	stoa@i^0,w,c
  7858  003C48  5017               	movf	(stoa@i+1)^0,w,c
  7859  003C4A  0A80               	xorlw	128
  7860  003C4C  6E0E               	movwf	??_stoa^0,c
  7861  003C4E  501D               	movf	(stoa@p+1)^0,w,c
  7862  003C50  0A80               	xorlw	128
  7863  003C52  580E               	subwfb	??_stoa^0,w,c
  7864  003C54  A0D8               	btfss	status,0,c
  7865  003C56  EF2F  F01E         	goto	u4411
  7866  003C5A  EF32  F01E         	goto	u4410
  7867  003C5E                     u4411:
  7868  003C5E  FFFF               	dw	65535	; assembler added errata NOP
  7869  003C60  EF01  F01E         	goto	l3986
  7870  003C64                     u4410:
  7871  003C64  FFFF               	dw	65535	; assembler added errata NOP
  7872  003C66                     
  7873                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 581:     if (flag
      +                          s & (1 << 0)) {
  7874  003C66  0100               	movlb	0	; () banked
  7875  003C68  A18A               	btfss	_flags& (0+255),0,b
  7876  003C6A  EF39  F01E         	goto	u4421
  7877  003C6E  EF3C  F01E         	goto	u4420
  7878  003C72                     u4421:
  7879  003C72  FFFF               	dw	65535	; assembler added errata NOP
  7880  003C74  EF5D  F01E         	goto	l1221
  7881  003C78                     u4420:
  7882  003C78  FFFF               	dw	65535	; assembler added errata NOP
  7883  003C7A  EF4C  F01E         	goto	l4000
  7884  003C7E                     l3996:
  7885  003C7E  FFFF               	dw	65535	; assembler added errata NOP
  7886                           
  7887                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 583:             
      +                          fputc(' ', fp);
  7888  003C80  0E00               	movlw	0
  7889  003C82  6E02               	movwf	(fputc@c+1)^0,c
  7890  003C84  0E20               	movlw	32
  7891  003C86  6E01               	movwf	fputc@c^0,c
  7892  003C88  C00A  F003         	movff	stoa@fp,fputc@fp
  7893  003C8C  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7894  003C90  EC11  F039         	call	_fputc	;wreg free
  7895  003C94                     
  7896                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 584:             
      +                          ++l;
  7897  003C94  4A1E               	infsnz	stoa@l^0,f,c
  7898  003C96  2A1F               	incf	(stoa@l+1)^0,f,c
  7899  003C98                     l4000:
  7900  003C98  FFFF               	dw	65535	; assembler added errata NOP
  7901                           
  7902                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 582:         whil
      +                          e (l < w) {
  7903  003C9A  5018               	movf	stoa@w^0,w,c
  7904  003C9C  5C1E               	subwf	stoa@l^0,w,c
  7905  003C9E  501F               	movf	(stoa@l+1)^0,w,c
  7906  003CA0  0A80               	xorlw	128
  7907  003CA2  6E0E               	movwf	??_stoa^0,c
  7908  003CA4  5019               	movf	(stoa@w+1)^0,w,c
  7909  003CA6  0A80               	xorlw	128
  7910  003CA8  580E               	subwfb	??_stoa^0,w,c
  7911  003CAA  A0D8               	btfss	status,0,c
  7912  003CAC  EF5A  F01E         	goto	u4431
  7913  003CB0  EF5D  F01E         	goto	u4430
  7914  003CB4                     u4431:
  7915  003CB4  FFFF               	dw	65535	; assembler added errata NOP
  7916  003CB6  EF3F  F01E         	goto	l3996
  7917  003CBA                     u4430:
  7918  003CBA                     l1221:
  7919  003CBA  FFFF               	dw	65535	; assembler added errata NOP
  7920                           
  7921                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 588:     return l
      +                          ;
  7922  003CBC  C01E  F00A         	movff	stoa@l,?_stoa
  7923  003CC0  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  7924  003CC4  0012               	return		;funcret
  7925  003CC6  FFFF               	dw	65535	; errata NOP
  7926  003CC8                     __end_of_stoa:
  7927                           	callstack 0
  7928                           
  7929 ;; *************** function _otoa *****************
  7930 ;; Defined at:
  7931 ;;		line 507 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7932 ;; Parameters:    Size  Location     Type
  7933 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7934 ;;		 -> vsnprintf@f(6), 
  7935 ;;  d               8   29[COMRAM] unsigned long long 
  7936 ;; Auto vars:     Size  Location     Type
  7937 ;;  n               8   51[COMRAM] unsigned long long 
  7938 ;;  i               2   59[COMRAM] int 
  7939 ;;  w               2   49[COMRAM] int 
  7940 ;;  t               2   47[COMRAM] int 
  7941 ;;  p               2   45[COMRAM] int 
  7942 ;; Return value:  Size  Location     Type
  7943 ;;                  2   27[COMRAM] int 
  7944 ;; Registers used:
  7945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7946 ;; Tracked objects:
  7947 ;;		On entry : 0/0
  7948 ;;		On exit  : 0/0
  7949 ;;		Unchanged: 0/0
  7950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7951 ;;      Params:        10       0       0       0       0       0       0
  7952 ;;      Locals:        16       0       0       0       0       0       0
  7953 ;;      Temps:          8       0       0       0       0       0       0
  7954 ;;      Totals:        34       0       0       0       0       0       0
  7955 ;;Total ram usage:       34 bytes
  7956 ;; Hardware stack levels used:    1
  7957 ;; Hardware stack levels required when called:    5
  7958 ;; This function calls:
  7959 ;;		_pad
  7960 ;; This function is called by:
  7961 ;;		_vfpfcnvrt
  7962 ;; This function uses a non-reentrant model
  7963 ;;
  7964                           
  7965                           	psect	text19
  7966  0036D6                     __ptext19:
  7967                           	callstack 0
  7968  0036D6                     _otoa:
  7969                           	callstack 0
  7970  0036D6  FFFF               	dw	65535	; assembler added errata NOP
  7971  0036D8                     
  7972                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 507: static int o
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 508: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 509:     int i, p, t, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\com
      +                          mon\doprnt.c: 510:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\so
      +                          urces\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  7973  0036D8  0100               	movlb	0	; () banked
  7974  0036DA  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7975  0036DC  EF72  F01B         	goto	u4241
  7976  0036E0  EF75  F01B         	goto	u4240
  7977  0036E4                     u4241:
  7978  0036E4  FFFF               	dw	65535	; assembler added errata NOP
  7979  0036E6  EF77  F01B         	goto	l3916
  7980  0036EA                     u4240:
  7981  0036EA  FFFF               	dw	65535	; assembler added errata NOP
  7982  0036EC                     
  7983                           ; BSR set to: 0
  7984                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 514:         flag
      +                          s &= ~(1 << 1);
  7985  0036EC  938A               	bcf	_flags& (0+255),1,b
  7986  0036EE                     l3916:
  7987  0036EE  FFFF               	dw	65535	; assembler added errata NOP
  7988                           
  7989                           ; BSR set to: 0
  7990                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 516:     p = (0 <
      +                           prec) ? prec : 1;
  7991  0036F0  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7992  0036F2  EF86  F01B         	goto	u4250
  7993  0036F6  5189               	movf	(_prec+1)& (0+255),w,b
  7994  0036F8  E106               	bnz	u4251
  7995  0036FA  0588               	decf	_prec& (0+255),w,b
  7996  0036FC  B0D8               	btfsc	status,0,c
  7997  0036FE  EF83  F01B         	goto	u4251
  7998  003702  EF86  F01B         	goto	u4250
  7999  003706                     u4251:
  8000  003706  FFFF               	dw	65535	; assembler added errata NOP
  8001  003708  EF8D  F01B         	goto	l1191
  8002  00370C                     u4250:
  8003  00370C  FFFF               	dw	65535	; assembler added errata NOP
  8004  00370E                     
  8005                           ; BSR set to: 0
  8006  00370E  0E00               	movlw	0
  8007  003710  6E2F               	movwf	(otoa@p+1)^0,c
  8008  003712  0E01               	movlw	1
  8009  003714  6E2E               	movwf	otoa@p^0,c
  8010  003716  EF92  F01B         	goto	l1193
  8011  00371A                     l1191:
  8012  00371A  FFFF               	dw	65535	; assembler added errata NOP
  8013                           
  8014                           ; BSR set to: 0
  8015  00371C  C088  F02E         	movff	_prec,otoa@p
  8016  003720  C089  F02F         	movff	_prec+1,otoa@p+1
  8017  003724                     l1193:
  8018  003724  FFFF               	dw	65535	; assembler added errata NOP
  8019                           
  8020                           ; BSR set to: 0
  8021                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 517:     w = widt
      +                          h;
  8022  003726  C086  F032         	movff	_width,otoa@w
  8023  00372A  C087  F033         	movff	_width+1,otoa@w+1
  8024                           
  8025                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 520:     n = d;
  8026  00372E  C01E  F034         	movff	otoa@d,otoa@n
  8027  003732  C01F  F035         	movff	otoa@d+1,otoa@n+1
  8028  003736  C020  F036         	movff	otoa@d+2,otoa@n+2
  8029  00373A  C021  F037         	movff	otoa@d+3,otoa@n+3
  8030  00373E  C022  F038         	movff	otoa@d+4,otoa@n+4
  8031  003742  C023  F039         	movff	otoa@d+5,otoa@n+5
  8032  003746  C024  F03A         	movff	otoa@d+6,otoa@n+6
  8033  00374A  C025  F03B         	movff	otoa@d+7,otoa@n+7
  8034  00374E                     
  8035                           ; BSR set to: 0
  8036                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 521:     i = size
      +                          of(dbuf) - 1;
  8037  00374E  0E00               	movlw	0
  8038  003750  6E3D               	movwf	(otoa@i+1)^0,c
  8039  003752  0E1F               	movlw	31
  8040  003754  6E3C               	movwf	otoa@i^0,c
  8041  003756                     
  8042                           ; BSR set to: 0
  8043                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 522:     dbuf[i] 
      +                          = '\0';
  8044  003756  0E00               	movlw	0
  8045  003758  6FB7               	movwf	(_dbuf+31)& (0+255),b
  8046  00375A                     
  8047                           ; BSR set to: 0
  8048                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 523:     t = 0;
  8049  00375A  0E00               	movlw	0
  8050  00375C  6E31               	movwf	(otoa@t+1)^0,c
  8051  00375E  0E00               	movlw	0
  8052  003760  6E30               	movwf	otoa@t^0,c
  8053                           
  8054                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 524:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8055  003762  EFFB  F01B         	goto	l3938
  8056  003766                     l3926:
  8057  003766  FFFF               	dw	65535	; assembler added errata NOP
  8058                           
  8059                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 525:         --i;
  8060  003768  063C               	decf	otoa@i^0,f,c
  8061  00376A  A0D8               	btfss	status,0,c
  8062  00376C  063D               	decf	(otoa@i+1)^0,f,c
  8063  00376E                     
  8064                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 526:         t = 
      +                          n & 07;
  8065  00376E  0E07               	movlw	7
  8066  003770  1434               	andwf	otoa@n^0,w,c
  8067  003772  6E30               	movwf	otoa@t^0,c
  8068  003774  6A31               	clrf	(otoa@t+1)^0,c
  8069  003776                     
  8070                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 527:         dbuf
      +                          [i] = '0' + t;
  8071  003776  0E98               	movlw	low _dbuf
  8072  003778  243C               	addwf	otoa@i^0,w,c
  8073  00377A  6ED9               	movwf	fsr2l,c
  8074  00377C  0E00               	movlw	high _dbuf
  8075  00377E  203D               	addwfc	(otoa@i+1)^0,w,c
  8076  003780  6EDA               	movwf	fsr2h,c
  8077  003782  5030               	movf	otoa@t^0,w,c
  8078  003784  0F30               	addlw	48
  8079  003786  6EDF               	movwf	indf2,c
  8080  003788                     
  8081                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 528:         --p;
  8082  003788  062E               	decf	otoa@p^0,f,c
  8083  00378A  A0D8               	btfss	status,0,c
  8084  00378C  062F               	decf	(otoa@p+1)^0,f,c
  8085  00378E                     
  8086                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 529:         --w;
  8087  00378E  0632               	decf	otoa@w^0,f,c
  8088  003790  A0D8               	btfss	status,0,c
  8089  003792  0633               	decf	(otoa@w+1)^0,f,c
  8090  003794                     
  8091                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 530:         n = 
      +                          n >> 3;
  8092  003794  C034  F026         	movff	otoa@n,??_otoa
  8093  003798  C035  F027         	movff	otoa@n+1,??_otoa+1
  8094  00379C  C036  F028         	movff	otoa@n+2,??_otoa+2
  8095  0037A0  C037  F029         	movff	otoa@n+3,??_otoa+3
  8096  0037A4  C038  F02A         	movff	otoa@n+4,??_otoa+4
  8097  0037A8  C039  F02B         	movff	otoa@n+5,??_otoa+5
  8098  0037AC  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  8099  0037B0  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  8100  0037B4  0E04               	movlw	4
  8101  0037B6  EFE7  F01B         	goto	u4260
  8102  0037BA                     u4265:
  8103  0037BA  FFFF               	dw	65535	; assembler added errata NOP
  8104  0037BC  90D8               	bcf	status,0,c
  8105  0037BE  322D               	rrcf	(??_otoa+7)^0,f,c
  8106  0037C0  322C               	rrcf	(??_otoa+6)^0,f,c
  8107  0037C2  322B               	rrcf	(??_otoa+5)^0,f,c
  8108  0037C4  322A               	rrcf	(??_otoa+4)^0,f,c
  8109  0037C6  3229               	rrcf	(??_otoa+3)^0,f,c
  8110  0037C8  3228               	rrcf	(??_otoa+2)^0,f,c
  8111  0037CA  3227               	rrcf	(??_otoa+1)^0,f,c
  8112  0037CC  3226               	rrcf	??_otoa^0,f,c
  8113  0037CE                     u4260:
  8114  0037CE  FFFF               	dw	65535	; assembler added errata NOP
  8115  0037D0  2EE8               	decfsz	wreg,f,c
  8116  0037D2  EFDD  F01B         	goto	u4265
  8117  0037D6  C026  F034         	movff	??_otoa,otoa@n
  8118  0037DA  C027  F035         	movff	??_otoa+1,otoa@n+1
  8119  0037DE  C028  F036         	movff	??_otoa+2,otoa@n+2
  8120  0037E2  C029  F037         	movff	??_otoa+3,otoa@n+3
  8121  0037E6  C02A  F038         	movff	??_otoa+4,otoa@n+4
  8122  0037EA  C02B  F039         	movff	??_otoa+5,otoa@n+5
  8123  0037EE  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  8124  0037F2  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  8125  0037F6                     l3938:
  8126  0037F6  FFFF               	dw	65535	; assembler added errata NOP
  8127                           
  8128                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 524:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8129  0037F8  BE3D               	btfsc	(otoa@i+1)^0,7,c
  8130  0037FA  EF07  F01C         	goto	u4271
  8131  0037FE  503D               	movf	(otoa@i+1)^0,w,c
  8132  003800  E109               	bnz	u4270
  8133  003802  043C               	decf	otoa@i^0,w,c
  8134  003804  A0D8               	btfss	status,0,c
  8135  003806  EF07  F01C         	goto	u4271
  8136  00380A  EF0A  F01C         	goto	u4270
  8137  00380E                     u4271:
  8138  00380E  FFFF               	dw	65535	; assembler added errata NOP
  8139  003810  EF43  F01C         	goto	l1200
  8140  003814                     u4270:
  8141  003814  FFFF               	dw	65535	; assembler added errata NOP
  8142  003816  5034               	movf	otoa@n^0,w,c
  8143  003818  1035               	iorwf	(otoa@n+1)^0,w,c
  8144  00381A  1036               	iorwf	(otoa@n+2)^0,w,c
  8145  00381C  1037               	iorwf	(otoa@n+3)^0,w,c
  8146  00381E  1038               	iorwf	(otoa@n+4)^0,w,c
  8147  003820  1039               	iorwf	(otoa@n+5)^0,w,c
  8148  003822  103A               	iorwf	(otoa@n+6)^0,w,c
  8149  003824  103B               	iorwf	(otoa@n+7)^0,w,c
  8150  003826  A4D8               	btfss	status,2,c
  8151  003828  EF18  F01C         	goto	u4281
  8152  00382C  EF1B  F01C         	goto	u4280
  8153  003830                     u4281:
  8154  003830  FFFF               	dw	65535	; assembler added errata NOP
  8155  003832  EFB3  F01B         	goto	l3926
  8156  003836                     u4280:
  8157  003836  FFFF               	dw	65535	; assembler added errata NOP
  8158  003838  BE2F               	btfsc	(otoa@p+1)^0,7,c
  8159  00383A  EF2A  F01C         	goto	u4290
  8160  00383E  502F               	movf	(otoa@p+1)^0,w,c
  8161  003840  E106               	bnz	u4291
  8162  003842  042E               	decf	otoa@p^0,w,c
  8163  003844  B0D8               	btfsc	status,0,c
  8164  003846  EF27  F01C         	goto	u4291
  8165  00384A  EF2A  F01C         	goto	u4290
  8166  00384E                     u4291:
  8167  00384E  FFFF               	dw	65535	; assembler added errata NOP
  8168  003850  EFB3  F01B         	goto	l3926
  8169  003854                     u4290:
  8170  003854  FFFF               	dw	65535	; assembler added errata NOP
  8171  003856  BE33               	btfsc	(otoa@w+1)^0,7,c
  8172  003858  EF36  F01C         	goto	u4301
  8173  00385C  5033               	movf	(otoa@w+1)^0,w,c
  8174  00385E  E109               	bnz	u4300
  8175  003860  0432               	decf	otoa@w^0,w,c
  8176  003862  A0D8               	btfss	status,0,c
  8177  003864  EF36  F01C         	goto	u4301
  8178  003868  EF39  F01C         	goto	u4300
  8179  00386C                     u4301:
  8180  00386C  FFFF               	dw	65535	; assembler added errata NOP
  8181  00386E  EF43  F01C         	goto	l1200
  8182  003872                     u4300:
  8183  003872  FFFF               	dw	65535	; assembler added errata NOP
  8184  003874  0100               	movlb	0	; () banked
  8185  003876  B38A               	btfsc	_flags& (0+255),1,b
  8186  003878  EF40  F01C         	goto	u4311
  8187  00387C  EF43  F01C         	goto	u4310
  8188  003880                     u4311:
  8189  003880  FFFF               	dw	65535	; assembler added errata NOP
  8190  003882  EFB3  F01B         	goto	l3926
  8191  003886                     u4310:
  8192  003886                     l1200:
  8193  003886  FFFF               	dw	65535	; assembler added errata NOP
  8194                           
  8195                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 534:     if ((fla
      +                          gs & (1 << 4)) && t) {
  8196  003888  0100               	movlb	0	; () banked
  8197  00388A  A98A               	btfss	_flags& (0+255),4,b
  8198  00388C  EF4A  F01C         	goto	u4321
  8199  003890  EF4D  F01C         	goto	u4320
  8200  003894                     u4321:
  8201  003894  FFFF               	dw	65535	; assembler added errata NOP
  8202  003896  EF67  F01C         	goto	l3956
  8203  00389A                     u4320:
  8204  00389A  FFFF               	dw	65535	; assembler added errata NOP
  8205  00389C                     
  8206                           ; BSR set to: 0
  8207  00389C  5030               	movf	otoa@t^0,w,c
  8208  00389E  1031               	iorwf	(otoa@t+1)^0,w,c
  8209  0038A0  B4D8               	btfsc	status,2,c
  8210  0038A2  EF55  F01C         	goto	u4331
  8211  0038A6  EF58  F01C         	goto	u4330
  8212  0038AA                     u4331:
  8213  0038AA  FFFF               	dw	65535	; assembler added errata NOP
  8214  0038AC  EF67  F01C         	goto	l3956
  8215  0038B0                     u4330:
  8216  0038B0  FFFF               	dw	65535	; assembler added errata NOP
  8217  0038B2                     
  8218                           ; BSR set to: 0
  8219                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 535:         --i;
  8220  0038B2  063C               	decf	otoa@i^0,f,c
  8221  0038B4  A0D8               	btfss	status,0,c
  8222  0038B6  063D               	decf	(otoa@i+1)^0,f,c
  8223  0038B8                     
  8224                           ; BSR set to: 0
  8225                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 536:         dbuf
      +                          [i] = '0';
  8226  0038B8  0E98               	movlw	low _dbuf
  8227  0038BA  243C               	addwf	otoa@i^0,w,c
  8228  0038BC  6ED9               	movwf	fsr2l,c
  8229  0038BE  0E00               	movlw	high _dbuf
  8230  0038C0  203D               	addwfc	(otoa@i+1)^0,w,c
  8231  0038C2  6EDA               	movwf	fsr2h,c
  8232  0038C4  0E30               	movlw	48
  8233  0038C6  6EDF               	movwf	indf2,c
  8234  0038C8                     
  8235                           ; BSR set to: 0
  8236                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 537:         --w;
  8237  0038C8  0632               	decf	otoa@w^0,f,c
  8238  0038CA  A0D8               	btfss	status,0,c
  8239  0038CC  0633               	decf	(otoa@w+1)^0,f,c
  8240  0038CE                     l3956:
  8241  0038CE  FFFF               	dw	65535	; assembler added errata NOP
  8242                           
  8243                           ; BSR set to: 0
  8244                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 541:     return p
      +                          ad(fp, &dbuf[i], w);
  8245  0038D0  C01C  F011         	movff	otoa@fp,pad@fp
  8246  0038D4  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  8247  0038D8  0E98               	movlw	low _dbuf
  8248  0038DA  243C               	addwf	otoa@i^0,w,c
  8249  0038DC  6E13               	movwf	pad@buf^0,c
  8250  0038DE  0E00               	movlw	high _dbuf
  8251  0038E0  203D               	addwfc	(otoa@i+1)^0,w,c
  8252  0038E2  6E14               	movwf	(pad@buf+1)^0,c
  8253  0038E4  C032  F015         	movff	otoa@w,pad@p
  8254  0038E8  C033  F016         	movff	otoa@w+1,pad@p+1
  8255  0038EC  EC82  F039         	call	_pad	;wreg free
  8256  0038F0  C011  F01C         	movff	?_pad,?_otoa
  8257  0038F4  C012  F01D         	movff	?_pad+1,?_otoa+1
  8258  0038F8  0012               	return		;funcret
  8259  0038FA  FFFF               	dw	65535	; errata NOP
  8260  0038FC                     __end_of_otoa:
  8261                           	callstack 0
  8262                           
  8263 ;; *************** function _dtoa *****************
  8264 ;; Defined at:
  8265 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8268 ;;		 -> vsnprintf@f(6), 
  8269 ;;  d               8   29[COMRAM] long long 
  8270 ;; Auto vars:     Size  Location     Type
  8271 ;;  n               8   53[COMRAM] long long 
  8272 ;;  i               2   61[COMRAM] int 
  8273 ;;  s               2   51[COMRAM] int 
  8274 ;;  w               2   49[COMRAM] int 
  8275 ;;  p               2   47[COMRAM] int 
  8276 ;; Return value:  Size  Location     Type
  8277 ;;                  2   27[COMRAM] int 
  8278 ;; Registers used:
  8279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8280 ;; Tracked objects:
  8281 ;;		On entry : 0/0
  8282 ;;		On exit  : 0/0
  8283 ;;		Unchanged: 0/0
  8284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8285 ;;      Params:        10       0       0       0       0       0       0
  8286 ;;      Locals:        18       0       0       0       0       0       0
  8287 ;;      Temps:          8       0       0       0       0       0       0
  8288 ;;      Totals:        36       0       0       0       0       0       0
  8289 ;;Total ram usage:       36 bytes
  8290 ;; Hardware stack levels used:    1
  8291 ;; Hardware stack levels required when called:    5
  8292 ;; This function calls:
  8293 ;;		___aodiv
  8294 ;;		___aomod
  8295 ;;		_abs
  8296 ;;		_pad
  8297 ;; This function is called by:
  8298 ;;		_vfpfcnvrt
  8299 ;; This function uses a non-reentrant model
  8300 ;;
  8301                           
  8302                           	psect	text20
  8303  002E46                     __ptext20:
  8304                           	callstack 0
  8305  002E46                     _dtoa:
  8306                           	callstack 0
  8307  002E46  FFFF               	dw	65535	; assembler added errata NOP
  8308  002E48                     
  8309                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  8310  002E48  C01E  F036         	movff	dtoa@d,dtoa@n
  8311  002E4C  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  8312  002E50  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  8313  002E54  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  8314  002E58  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  8315  002E5C  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  8316  002E60  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  8317  002E64  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  8318  002E68                     
  8319                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  8320  002E68  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  8321  002E6A  EF39  F017         	goto	u4091
  8322  002E6E  EF3D  F017         	goto	u4090
  8323  002E72                     u4091:
  8324  002E72  FFFF               	dw	65535	; assembler added errata NOP
  8325  002E74  0E01               	movlw	1
  8326  002E76  EF3F  F017         	goto	u4100
  8327  002E7A                     u4090:
  8328  002E7A  FFFF               	dw	65535	; assembler added errata NOP
  8329  002E7C  0E00               	movlw	0
  8330  002E7E                     u4100:
  8331  002E7E  FFFF               	dw	65535	; assembler added errata NOP
  8332  002E80  6E34               	movwf	dtoa@s^0,c
  8333  002E82  6A35               	clrf	(dtoa@s+1)^0,c
  8334                           
  8335                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  8336  002E84  5034               	movf	dtoa@s^0,w,c
  8337  002E86  1035               	iorwf	(dtoa@s+1)^0,w,c
  8338  002E88  B4D8               	btfsc	status,2,c
  8339  002E8A  EF49  F017         	goto	u4111
  8340  002E8E  EF4C  F017         	goto	u4110
  8341  002E92                     u4111:
  8342  002E92  FFFF               	dw	65535	; assembler added errata NOP
  8343  002E94  EF5D  F017         	goto	l3856
  8344  002E98                     u4110:
  8345  002E98  FFFF               	dw	65535	; assembler added errata NOP
  8346  002E9A                     
  8347                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  8348  002E9A  1E3D               	comf	(dtoa@n+7)^0,f,c
  8349  002E9C  1E3C               	comf	(dtoa@n+6)^0,f,c
  8350  002E9E  1E3B               	comf	(dtoa@n+5)^0,f,c
  8351  002EA0  1E3A               	comf	(dtoa@n+4)^0,f,c
  8352  002EA2  1E39               	comf	(dtoa@n+3)^0,f,c
  8353  002EA4  1E38               	comf	(dtoa@n+2)^0,f,c
  8354  002EA6  1E37               	comf	(dtoa@n+1)^0,f,c
  8355  002EA8  6C36               	negf	dtoa@n^0,c
  8356  002EAA  0E00               	movlw	0
  8357  002EAC  2237               	addwfc	(dtoa@n+1)^0,f,c
  8358  002EAE  2238               	addwfc	(dtoa@n+2)^0,f,c
  8359  002EB0  2239               	addwfc	(dtoa@n+3)^0,f,c
  8360  002EB2  223A               	addwfc	(dtoa@n+4)^0,f,c
  8361  002EB4  223B               	addwfc	(dtoa@n+5)^0,f,c
  8362  002EB6  223C               	addwfc	(dtoa@n+6)^0,f,c
  8363  002EB8  223D               	addwfc	(dtoa@n+7)^0,f,c
  8364  002EBA                     l3856:
  8365  002EBA  FFFF               	dw	65535	; assembler added errata NOP
  8366                           
  8367                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  8368  002EBC  0100               	movlb	0	; () banked
  8369  002EBE  BF89               	btfsc	(_prec+1)& (0+255),7,b
  8370  002EC0  EF64  F017         	goto	u4121
  8371  002EC4  EF67  F017         	goto	u4120
  8372  002EC8                     u4121:
  8373  002EC8  FFFF               	dw	65535	; assembler added errata NOP
  8374  002ECA  EF69  F017         	goto	l3860
  8375  002ECE                     u4120:
  8376  002ECE  FFFF               	dw	65535	; assembler added errata NOP
  8377  002ED0                     
  8378                           ; BSR set to: 0
  8379                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  8380  002ED0  938A               	bcf	_flags& (0+255),1,b
  8381  002ED2                     l3860:
  8382  002ED2  FFFF               	dw	65535	; assembler added errata NOP
  8383                           
  8384                           ; BSR set to: 0
  8385                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  8386  002ED4  BF89               	btfsc	(_prec+1)& (0+255),7,b
  8387  002ED6  EF78  F017         	goto	u4130
  8388  002EDA  5189               	movf	(_prec+1)& (0+255),w,b
  8389  002EDC  E106               	bnz	u4131
  8390  002EDE  0588               	decf	_prec& (0+255),w,b
  8391  002EE0  B0D8               	btfsc	status,0,c
  8392  002EE2  EF75  F017         	goto	u4131
  8393  002EE6  EF78  F017         	goto	u4130
  8394  002EEA                     u4131:
  8395  002EEA  FFFF               	dw	65535	; assembler added errata NOP
  8396  002EEC  EF7F  F017         	goto	l1166
  8397  002EF0                     u4130:
  8398  002EF0  FFFF               	dw	65535	; assembler added errata NOP
  8399  002EF2                     
  8400                           ; BSR set to: 0
  8401  002EF2  0E00               	movlw	0
  8402  002EF4  6E31               	movwf	(dtoa@p+1)^0,c
  8403  002EF6  0E01               	movlw	1
  8404  002EF8  6E30               	movwf	dtoa@p^0,c
  8405  002EFA  EF84  F017         	goto	l1168
  8406  002EFE                     l1166:
  8407  002EFE  FFFF               	dw	65535	; assembler added errata NOP
  8408                           
  8409                           ; BSR set to: 0
  8410  002F00  C088  F030         	movff	_prec,dtoa@p
  8411  002F04  C089  F031         	movff	_prec+1,dtoa@p+1
  8412  002F08                     l1168:
  8413  002F08  FFFF               	dw	65535	; assembler added errata NOP
  8414                           
  8415                           ; BSR set to: 0
  8416                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  8417  002F0A  C086  F032         	movff	_width,dtoa@w
  8418  002F0E  C087  F033         	movff	_width+1,dtoa@w+1
  8419  002F12                     
  8420                           ; BSR set to: 0
  8421                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  8422  002F12  5034               	movf	dtoa@s^0,w,c
  8423  002F14  1035               	iorwf	(dtoa@s+1)^0,w,c
  8424  002F16  A4D8               	btfss	status,2,c
  8425  002F18  EF90  F017         	goto	u4141
  8426  002F1C  EF93  F017         	goto	u4140
  8427  002F20                     u4141:
  8428  002F20  FFFF               	dw	65535	; assembler added errata NOP
  8429  002F22  EF9C  F017         	goto	l3868
  8430  002F26                     u4140:
  8431  002F26  FFFF               	dw	65535	; assembler added errata NOP
  8432  002F28                     
  8433                           ; BSR set to: 0
  8434  002F28  A58A               	btfss	_flags& (0+255),2,b
  8435  002F2A  EF99  F017         	goto	u4151
  8436  002F2E  EF9C  F017         	goto	u4150
  8437  002F32                     u4151:
  8438  002F32  FFFF               	dw	65535	; assembler added errata NOP
  8439  002F34  EFA0  F017         	goto	l3870
  8440  002F38                     u4150:
  8441  002F38                     l3868:
  8442  002F38  FFFF               	dw	65535	; assembler added errata NOP
  8443                           
  8444                           ; BSR set to: 0
  8445                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  8446  002F3A  0632               	decf	dtoa@w^0,f,c
  8447  002F3C  A0D8               	btfss	status,0,c
  8448  002F3E  0633               	decf	(dtoa@w+1)^0,f,c
  8449  002F40                     l3870:
  8450  002F40  FFFF               	dw	65535	; assembler added errata NOP
  8451                           
  8452                           ; BSR set to: 0
  8453                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  8454  002F42  0E00               	movlw	0
  8455  002F44  6E3F               	movwf	(dtoa@i+1)^0,c
  8456  002F46  0E1F               	movlw	31
  8457  002F48  6E3E               	movwf	dtoa@i^0,c
  8458  002F4A                     
  8459                           ; BSR set to: 0
  8460                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  8461  002F4A  0E00               	movlw	0
  8462  002F4C  6FB7               	movwf	(_dbuf+31)& (0+255),b
  8463                           
  8464                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8465  002F4E  EF26  F018         	goto	l3884
  8466  002F52                     l3874:
  8467  002F52  FFFF               	dw	65535	; assembler added errata NOP
  8468                           
  8469                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  8470  002F54  063E               	decf	dtoa@i^0,f,c
  8471  002F56  A0D8               	btfss	status,0,c
  8472  002F58  063F               	decf	(dtoa@i+1)^0,f,c
  8473  002F5A                     
  8474                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  8475  002F5A  0E98               	movlw	low _dbuf
  8476  002F5C  243E               	addwf	dtoa@i^0,w,c
  8477  002F5E  6ED9               	movwf	fsr2l,c
  8478  002F60  0E00               	movlw	high _dbuf
  8479  002F62  203F               	addwfc	(dtoa@i+1)^0,w,c
  8480  002F64  6EDA               	movwf	fsr2h,c
  8481  002F66  C036  F001         	movff	dtoa@n,___aomod@dividend
  8482  002F6A  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  8483  002F6E  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  8484  002F72  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  8485  002F76  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  8486  002F7A  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  8487  002F7E  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  8488  002F82  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  8489  002F86  0E0A               	movlw	10
  8490  002F88  6E09               	movwf	___aomod@divisor^0,c
  8491  002F8A  0E00               	movlw	0
  8492  002F8C  6E0A               	movwf	(___aomod@divisor+1)^0,c
  8493  002F8E  0E00               	movlw	0
  8494  002F90  6E0B               	movwf	(___aomod@divisor+2)^0,c
  8495  002F92  0E00               	movlw	0
  8496  002F94  6E0C               	movwf	(___aomod@divisor+3)^0,c
  8497  002F96  0E00               	movlw	0
  8498  002F98  6E0D               	movwf	(___aomod@divisor+4)^0,c
  8499  002F9A  0E00               	movlw	0
  8500  002F9C  6E0E               	movwf	(___aomod@divisor+5)^0,c
  8501  002F9E  0E00               	movlw	0
  8502  002FA0  6E0F               	movwf	(___aomod@divisor+6)^0,c
  8503  002FA2  0E00               	movlw	0
  8504  002FA4  6E10               	movwf	(___aomod@divisor+7)^0,c
  8505  002FA6  ECB8  F03D         	call	___aomod	;wreg free
  8506  002FAA  C001  F026         	movff	?___aomod,??_dtoa
  8507  002FAE  C002  F027         	movff	?___aomod+1,??_dtoa+1
  8508  002FB2  C003  F028         	movff	?___aomod+2,??_dtoa+2
  8509  002FB6  C004  F029         	movff	?___aomod+3,??_dtoa+3
  8510  002FBA  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  8511  002FBE  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  8512  002FC2  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  8513  002FC6  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  8514  002FCA  C026  F013         	movff	??_dtoa,abs@a
  8515  002FCE  C028  F014         	movff	??_dtoa+2,abs@a+1
  8516  002FD2  EC56  F034         	call	_abs	;wreg free
  8517  002FD6  5013               	movf	?_abs^0,w,c
  8518  002FD8  0F30               	addlw	48
  8519  002FDA  6EDF               	movwf	indf2,c
  8520  002FDC                     
  8521                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  8522  002FDC  0630               	decf	dtoa@p^0,f,c
  8523  002FDE  A0D8               	btfss	status,0,c
  8524  002FE0  0631               	decf	(dtoa@p+1)^0,f,c
  8525  002FE2                     
  8526                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  8527  002FE2  0632               	decf	dtoa@w^0,f,c
  8528  002FE4  A0D8               	btfss	status,0,c
  8529  002FE6  0633               	decf	(dtoa@w+1)^0,f,c
  8530  002FE8                     
  8531                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  8532  002FE8  C036  F001         	movff	dtoa@n,___aodiv@dividend
  8533  002FEC  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  8534  002FF0  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  8535  002FF4  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  8536  002FF8  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  8537  002FFC  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  8538  003000  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  8539  003004  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  8540  003008  0E0A               	movlw	10
  8541  00300A  6E09               	movwf	___aodiv@divisor^0,c
  8542  00300C  0E00               	movlw	0
  8543  00300E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  8544  003010  0E00               	movlw	0
  8545  003012  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  8546  003014  0E00               	movlw	0
  8547  003016  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  8548  003018  0E00               	movlw	0
  8549  00301A  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  8550  00301C  0E00               	movlw	0
  8551  00301E  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  8552  003020  0E00               	movlw	0
  8553  003022  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  8554  003024  0E00               	movlw	0
  8555  003026  6E10               	movwf	(___aodiv@divisor+7)^0,c
  8556  003028  EC80  F03E         	call	___aodiv	;wreg free
  8557  00302C  C001  F036         	movff	?___aodiv,dtoa@n
  8558  003030  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  8559  003034  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  8560  003038  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  8561  00303C  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  8562  003040  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  8563  003044  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  8564  003048  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  8565  00304C                     l3884:
  8566  00304C  FFFF               	dw	65535	; assembler added errata NOP
  8567                           
  8568                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8569  00304E  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  8570  003050  EF32  F018         	goto	u4161
  8571  003054  503F               	movf	(dtoa@i+1)^0,w,c
  8572  003056  E109               	bnz	u4160
  8573  003058  043E               	decf	dtoa@i^0,w,c
  8574  00305A  A0D8               	btfss	status,0,c
  8575  00305C  EF32  F018         	goto	u4161
  8576  003060  EF35  F018         	goto	u4160
  8577  003064                     u4161:
  8578  003064  FFFF               	dw	65535	; assembler added errata NOP
  8579  003066  EF6E  F018         	goto	l3894
  8580  00306A                     u4160:
  8581  00306A  FFFF               	dw	65535	; assembler added errata NOP
  8582  00306C  5036               	movf	dtoa@n^0,w,c
  8583  00306E  1037               	iorwf	(dtoa@n+1)^0,w,c
  8584  003070  1038               	iorwf	(dtoa@n+2)^0,w,c
  8585  003072  1039               	iorwf	(dtoa@n+3)^0,w,c
  8586  003074  103A               	iorwf	(dtoa@n+4)^0,w,c
  8587  003076  103B               	iorwf	(dtoa@n+5)^0,w,c
  8588  003078  103C               	iorwf	(dtoa@n+6)^0,w,c
  8589  00307A  103D               	iorwf	(dtoa@n+7)^0,w,c
  8590  00307C  A4D8               	btfss	status,2,c
  8591  00307E  EF43  F018         	goto	u4171
  8592  003082  EF46  F018         	goto	u4170
  8593  003086                     u4171:
  8594  003086  FFFF               	dw	65535	; assembler added errata NOP
  8595  003088  EFA9  F017         	goto	l3874
  8596  00308C                     u4170:
  8597  00308C  FFFF               	dw	65535	; assembler added errata NOP
  8598  00308E  BE31               	btfsc	(dtoa@p+1)^0,7,c
  8599  003090  EF55  F018         	goto	u4180
  8600  003094  5031               	movf	(dtoa@p+1)^0,w,c
  8601  003096  E106               	bnz	u4181
  8602  003098  0430               	decf	dtoa@p^0,w,c
  8603  00309A  B0D8               	btfsc	status,0,c
  8604  00309C  EF52  F018         	goto	u4181
  8605  0030A0  EF55  F018         	goto	u4180
  8606  0030A4                     u4181:
  8607  0030A4  FFFF               	dw	65535	; assembler added errata NOP
  8608  0030A6  EFA9  F017         	goto	l3874
  8609  0030AA                     u4180:
  8610  0030AA  FFFF               	dw	65535	; assembler added errata NOP
  8611  0030AC  BE33               	btfsc	(dtoa@w+1)^0,7,c
  8612  0030AE  EF61  F018         	goto	u4191
  8613  0030B2  5033               	movf	(dtoa@w+1)^0,w,c
  8614  0030B4  E109               	bnz	u4190
  8615  0030B6  0432               	decf	dtoa@w^0,w,c
  8616  0030B8  A0D8               	btfss	status,0,c
  8617  0030BA  EF61  F018         	goto	u4191
  8618  0030BE  EF64  F018         	goto	u4190
  8619  0030C2                     u4191:
  8620  0030C2  FFFF               	dw	65535	; assembler added errata NOP
  8621  0030C4  EF6E  F018         	goto	l3894
  8622  0030C8                     u4190:
  8623  0030C8  FFFF               	dw	65535	; assembler added errata NOP
  8624  0030CA  0100               	movlb	0	; () banked
  8625  0030CC  B38A               	btfsc	_flags& (0+255),1,b
  8626  0030CE  EF6B  F018         	goto	u4201
  8627  0030D2  EF6E  F018         	goto	u4200
  8628  0030D6                     u4201:
  8629  0030D6  FFFF               	dw	65535	; assembler added errata NOP
  8630  0030D8  EFA9  F017         	goto	l3874
  8631  0030DC                     u4200:
  8632  0030DC                     l3894:
  8633  0030DC  FFFF               	dw	65535	; assembler added errata NOP
  8634                           
  8635                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  8636  0030DE  5034               	movf	dtoa@s^0,w,c
  8637  0030E0  1035               	iorwf	(dtoa@s+1)^0,w,c
  8638  0030E2  A4D8               	btfss	status,2,c
  8639  0030E4  EF76  F018         	goto	u4211
  8640  0030E8  EF79  F018         	goto	u4210
  8641  0030EC                     u4211:
  8642  0030EC  FFFF               	dw	65535	; assembler added errata NOP
  8643  0030EE  EF83  F018         	goto	l3898
  8644  0030F2                     u4210:
  8645  0030F2  FFFF               	dw	65535	; assembler added errata NOP
  8646  0030F4  0100               	movlb	0	; () banked
  8647  0030F6  A58A               	btfss	_flags& (0+255),2,b
  8648  0030F8  EF80  F018         	goto	u4221
  8649  0030FC  EF83  F018         	goto	u4220
  8650  003100                     u4221:
  8651  003100  FFFF               	dw	65535	; assembler added errata NOP
  8652  003102  EFA6  F018         	goto	l3908
  8653  003106                     u4220:
  8654  003106                     l3898:
  8655  003106  FFFF               	dw	65535	; assembler added errata NOP
  8656                           
  8657                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  8658  003108  063E               	decf	dtoa@i^0,f,c
  8659  00310A  A0D8               	btfss	status,0,c
  8660  00310C  063F               	decf	(dtoa@i+1)^0,f,c
  8661  00310E                     
  8662                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  8663  00310E  5034               	movf	dtoa@s^0,w,c
  8664  003110  1035               	iorwf	(dtoa@s+1)^0,w,c
  8665  003112  A4D8               	btfss	status,2,c
  8666  003114  EF8E  F018         	goto	u4231
  8667  003118  EF91  F018         	goto	u4230
  8668  00311C                     u4231:
  8669  00311C  FFFF               	dw	65535	; assembler added errata NOP
  8670  00311E  EF98  F018         	goto	l3904
  8671  003122                     u4230:
  8672  003122  FFFF               	dw	65535	; assembler added errata NOP
  8673  003124  0E00               	movlw	0
  8674  003126  6E2F               	movwf	(_dtoa$1637+1)^0,c
  8675  003128  0E2B               	movlw	43
  8676  00312A  6E2E               	movwf	_dtoa$1637^0,c
  8677  00312C  EF9D  F018         	goto	l3906
  8678  003130                     l3904:
  8679  003130  FFFF               	dw	65535	; assembler added errata NOP
  8680  003132  0E00               	movlw	0
  8681  003134  6E2F               	movwf	(_dtoa$1637+1)^0,c
  8682  003136  0E2D               	movlw	45
  8683  003138  6E2E               	movwf	_dtoa$1637^0,c
  8684  00313A                     l3906:
  8685  00313A  FFFF               	dw	65535	; assembler added errata NOP
  8686  00313C  0E98               	movlw	low _dbuf
  8687  00313E  243E               	addwf	dtoa@i^0,w,c
  8688  003140  6ED9               	movwf	fsr2l,c
  8689  003142  0E00               	movlw	high _dbuf
  8690  003144  203F               	addwfc	(dtoa@i+1)^0,w,c
  8691  003146  6EDA               	movwf	fsr2h,c
  8692  003148  C02E  FFDF         	movff	_dtoa$1637,indf2
  8693  00314C                     l3908:
  8694  00314C  FFFF               	dw	65535	; assembler added errata NOP
  8695                           
  8696                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  8697  00314E  C01C  F011         	movff	dtoa@fp,pad@fp
  8698  003152  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  8699  003156  0E98               	movlw	low _dbuf
  8700  003158  243E               	addwf	dtoa@i^0,w,c
  8701  00315A  6E13               	movwf	pad@buf^0,c
  8702  00315C  0E00               	movlw	high _dbuf
  8703  00315E  203F               	addwfc	(dtoa@i+1)^0,w,c
  8704  003160  6E14               	movwf	(pad@buf+1)^0,c
  8705  003162  C032  F015         	movff	dtoa@w,pad@p
  8706  003166  C033  F016         	movff	dtoa@w+1,pad@p+1
  8707  00316A  EC82  F039         	call	_pad	;wreg free
  8708  00316E  C011  F01C         	movff	?_pad,?_dtoa
  8709  003172  C012  F01D         	movff	?_pad+1,?_dtoa+1
  8710  003176  0012               	return		;funcret
  8711  003178  FFFF               	dw	65535	; errata NOP
  8712  00317A                     __end_of_dtoa:
  8713                           	callstack 0
  8714                           
  8715 ;; *************** function ___aomod *****************
  8716 ;; Defined at:
  8717 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  8718 ;; Parameters:    Size  Location     Type
  8719 ;;  dividend        8    0[COMRAM] long long 
  8720 ;;  divisor         8    8[COMRAM] long long 
  8721 ;; Auto vars:     Size  Location     Type
  8722 ;;  sign            1   17[COMRAM] unsigned char 
  8723 ;;  counter         1   16[COMRAM] unsigned char 
  8724 ;; Return value:  Size  Location     Type
  8725 ;;                  8    0[COMRAM] long long 
  8726 ;; Registers used:
  8727 ;;		wreg, status,2, status,0
  8728 ;; Tracked objects:
  8729 ;;		On entry : 0/0
  8730 ;;		On exit  : 0/0
  8731 ;;		Unchanged: 0/0
  8732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8733 ;;      Params:        16       0       0       0       0       0       0
  8734 ;;      Locals:         2       0       0       0       0       0       0
  8735 ;;      Temps:          0       0       0       0       0       0       0
  8736 ;;      Totals:        18       0       0       0       0       0       0
  8737 ;;Total ram usage:       18 bytes
  8738 ;; Hardware stack levels used:    1
  8739 ;; Hardware stack levels required when called:    1
  8740 ;; This function calls:
  8741 ;;		Nothing
  8742 ;; This function is called by:
  8743 ;;		_dtoa
  8744 ;; This function uses a non-reentrant model
  8745 ;;
  8746                           
  8747                           	psect	text21
  8748  007B70                     __ptext21:
  8749                           	callstack 0
  8750  007B70                     ___aomod:
  8751                           	callstack 0
  8752  007B70  FFFF               	dw	65535	; assembler added errata NOP
  8753  007B72  0E00               	movlw	0
  8754  007B74  6E12               	movwf	___aomod@sign^0,c
  8755  007B76  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8756  007B78  EFC3  F03D         	goto	u3800
  8757  007B7C  EFC0  F03D         	goto	u3801
  8758  007B80                     u3801:
  8759  007B80  FFFF               	dw	65535	; assembler added errata NOP
  8760  007B82  EFD6  F03D         	goto	l3714
  8761  007B86                     u3800:
  8762  007B86  FFFF               	dw	65535	; assembler added errata NOP
  8763  007B88  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8764  007B8A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8765  007B8C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8766  007B8E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8767  007B90  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8768  007B92  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8769  007B94  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8770  007B96  6C01               	negf	___aomod@dividend^0,c
  8771  007B98  0E00               	movlw	0
  8772  007B9A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8773  007B9C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8774  007B9E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8775  007BA0  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8776  007BA2  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8777  007BA4  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8778  007BA6  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8779  007BA8  0E01               	movlw	1
  8780  007BAA  6E12               	movwf	___aomod@sign^0,c
  8781  007BAC                     l3714:
  8782  007BAC  FFFF               	dw	65535	; assembler added errata NOP
  8783  007BAE  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8784  007BB0  EFDF  F03D         	goto	u3810
  8785  007BB4  EFDC  F03D         	goto	u3811
  8786  007BB8                     u3811:
  8787  007BB8  FFFF               	dw	65535	; assembler added errata NOP
  8788  007BBA  EFF0  F03D         	goto	l3718
  8789  007BBE                     u3810:
  8790  007BBE  FFFF               	dw	65535	; assembler added errata NOP
  8791  007BC0  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8792  007BC2  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8793  007BC4  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8794  007BC6  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8795  007BC8  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8796  007BCA  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8797  007BCC  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8798  007BCE  6C09               	negf	___aomod@divisor^0,c
  8799  007BD0  0E00               	movlw	0
  8800  007BD2  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8801  007BD4  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8802  007BD6  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8803  007BD8  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8804  007BDA  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8805  007BDC  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8806  007BDE  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8807  007BE0                     l3718:
  8808  007BE0  FFFF               	dw	65535	; assembler added errata NOP
  8809  007BE2  5009               	movf	___aomod@divisor^0,w,c
  8810  007BE4  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8811  007BE6  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8812  007BE8  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8813  007BEA  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8814  007BEC  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8815  007BEE  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8816  007BF0  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8817  007BF2  B4D8               	btfsc	status,2,c
  8818  007BF4  EFFE  F03D         	goto	u3821
  8819  007BF8  EF01  F03E         	goto	u3820
  8820  007BFC                     u3821:
  8821  007BFC  FFFF               	dw	65535	; assembler added errata NOP
  8822  007BFE  EF52  F03E         	goto	l3734
  8823  007C02                     u3820:
  8824  007C02  FFFF               	dw	65535	; assembler added errata NOP
  8825  007C04  0E01               	movlw	1
  8826  007C06  6E11               	movwf	___aomod@counter^0,c
  8827  007C08  EF11  F03E         	goto	l3724
  8828  007C0C                     l3722:
  8829  007C0C  FFFF               	dw	65535	; assembler added errata NOP
  8830  007C0E  90D8               	bcf	status,0,c
  8831  007C10  3609               	rlcf	___aomod@divisor^0,f,c
  8832  007C12  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8833  007C14  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8834  007C16  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8835  007C18  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8836  007C1A  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8837  007C1C  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8838  007C1E  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8839  007C20  2A11               	incf	___aomod@counter^0,f,c
  8840  007C22                     l3724:
  8841  007C22  FFFF               	dw	65535	; assembler added errata NOP
  8842  007C24  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8843  007C26  EF17  F03E         	goto	u3831
  8844  007C2A  EF1A  F03E         	goto	u3830
  8845  007C2E                     u3831:
  8846  007C2E  FFFF               	dw	65535	; assembler added errata NOP
  8847  007C30  EF06  F03E         	goto	l3722
  8848  007C34                     u3830:
  8849  007C34  FFFF               	dw	65535	; assembler added errata NOP
  8850  007C36                     l3726:
  8851  007C36  FFFF               	dw	65535	; assembler added errata NOP
  8852  007C38  5009               	movf	___aomod@divisor^0,w,c
  8853  007C3A  5C01               	subwf	___aomod@dividend^0,w,c
  8854  007C3C  500A               	movf	(___aomod@divisor+1)^0,w,c
  8855  007C3E  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8856  007C40  500B               	movf	(___aomod@divisor+2)^0,w,c
  8857  007C42  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8858  007C44  500C               	movf	(___aomod@divisor+3)^0,w,c
  8859  007C46  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8860  007C48  500D               	movf	(___aomod@divisor+4)^0,w,c
  8861  007C4A  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8862  007C4C  500E               	movf	(___aomod@divisor+5)^0,w,c
  8863  007C4E  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8864  007C50  500F               	movf	(___aomod@divisor+6)^0,w,c
  8865  007C52  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8866  007C54  5010               	movf	(___aomod@divisor+7)^0,w,c
  8867  007C56  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8868  007C58  A0D8               	btfss	status,0,c
  8869  007C5A  EF31  F03E         	goto	u3841
  8870  007C5E  EF34  F03E         	goto	u3840
  8871  007C62                     u3841:
  8872  007C62  FFFF               	dw	65535	; assembler added errata NOP
  8873  007C64  EF45  F03E         	goto	l3730
  8874  007C68                     u3840:
  8875  007C68  FFFF               	dw	65535	; assembler added errata NOP
  8876  007C6A  5009               	movf	___aomod@divisor^0,w,c
  8877  007C6C  5E01               	subwf	___aomod@dividend^0,f,c
  8878  007C6E  500A               	movf	(___aomod@divisor+1)^0,w,c
  8879  007C70  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8880  007C72  500B               	movf	(___aomod@divisor+2)^0,w,c
  8881  007C74  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8882  007C76  500C               	movf	(___aomod@divisor+3)^0,w,c
  8883  007C78  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8884  007C7A  500D               	movf	(___aomod@divisor+4)^0,w,c
  8885  007C7C  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8886  007C7E  500E               	movf	(___aomod@divisor+5)^0,w,c
  8887  007C80  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8888  007C82  500F               	movf	(___aomod@divisor+6)^0,w,c
  8889  007C84  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8890  007C86  5010               	movf	(___aomod@divisor+7)^0,w,c
  8891  007C88  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8892  007C8A                     l3730:
  8893  007C8A  FFFF               	dw	65535	; assembler added errata NOP
  8894  007C8C  90D8               	bcf	status,0,c
  8895  007C8E  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8896  007C90  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8897  007C92  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8898  007C94  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8899  007C96  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8900  007C98  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8901  007C9A  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8902  007C9C  3209               	rrcf	___aomod@divisor^0,f,c
  8903  007C9E  2E11               	decfsz	___aomod@counter^0,f,c
  8904  007CA0  EF1B  F03E         	goto	l3726
  8905  007CA4                     l3734:
  8906  007CA4  FFFF               	dw	65535	; assembler added errata NOP
  8907  007CA6  5012               	movf	___aomod@sign^0,w,c
  8908  007CA8  B4D8               	btfsc	status,2,c
  8909  007CAA  EF59  F03E         	goto	u3851
  8910  007CAE  EF5C  F03E         	goto	u3850
  8911  007CB2                     u3851:
  8912  007CB2  FFFF               	dw	65535	; assembler added errata NOP
  8913  007CB4  EF6D  F03E         	goto	l3738
  8914  007CB8                     u3850:
  8915  007CB8  FFFF               	dw	65535	; assembler added errata NOP
  8916  007CBA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8917  007CBC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8918  007CBE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8919  007CC0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8920  007CC2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8921  007CC4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8922  007CC6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8923  007CC8  6C01               	negf	___aomod@dividend^0,c
  8924  007CCA  0E00               	movlw	0
  8925  007CCC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8926  007CCE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8927  007CD0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8928  007CD2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8929  007CD4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8930  007CD6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8931  007CD8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8932  007CDA                     l3738:
  8933  007CDA  FFFF               	dw	65535	; assembler added errata NOP
  8934  007CDC  C001  F001         	movff	___aomod@dividend,?___aomod
  8935  007CE0  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8936  007CE4  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8937  007CE8  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8938  007CEC  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8939  007CF0  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8940  007CF4  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8941  007CF8  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8942  007CFC  0012               	return		;funcret
  8943  007CFE  FFFF               	dw	65535	; errata NOP
  8944  007D00                     __end_of___aomod:
  8945                           	callstack 0
  8946                           
  8947 ;; *************** function ___aodiv *****************
  8948 ;; Defined at:
  8949 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  8950 ;; Parameters:    Size  Location     Type
  8951 ;;  dividend        8    0[COMRAM] long long 
  8952 ;;  divisor         8    8[COMRAM] long long 
  8953 ;; Auto vars:     Size  Location     Type
  8954 ;;  quotient        8   18[COMRAM] long long 
  8955 ;;  sign            1   17[COMRAM] unsigned char 
  8956 ;;  counter         1   16[COMRAM] unsigned char 
  8957 ;; Return value:  Size  Location     Type
  8958 ;;                  8    0[COMRAM] long long 
  8959 ;; Registers used:
  8960 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8961 ;; Tracked objects:
  8962 ;;		On entry : 0/0
  8963 ;;		On exit  : 0/0
  8964 ;;		Unchanged: 0/0
  8965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8966 ;;      Params:        16       0       0       0       0       0       0
  8967 ;;      Locals:        10       0       0       0       0       0       0
  8968 ;;      Temps:          0       0       0       0       0       0       0
  8969 ;;      Totals:        26       0       0       0       0       0       0
  8970 ;;Total ram usage:       26 bytes
  8971 ;; Hardware stack levels used:    1
  8972 ;; Hardware stack levels required when called:    1
  8973 ;; This function calls:
  8974 ;;		Nothing
  8975 ;; This function is called by:
  8976 ;;		_dtoa
  8977 ;; This function uses a non-reentrant model
  8978 ;;
  8979                           
  8980                           	psect	text22
  8981  007D00                     __ptext22:
  8982                           	callstack 0
  8983  007D00                     ___aodiv:
  8984                           	callstack 0
  8985  007D00  FFFF               	dw	65535	; assembler added errata NOP
  8986  007D02  0E00               	movlw	0
  8987  007D04  6E12               	movwf	___aodiv@sign^0,c
  8988  007D06  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8989  007D08  EF8B  F03E         	goto	u3730
  8990  007D0C  EF88  F03E         	goto	u3731
  8991  007D10                     u3731:
  8992  007D10  FFFF               	dw	65535	; assembler added errata NOP
  8993  007D12  EF9E  F03E         	goto	l3670
  8994  007D16                     u3730:
  8995  007D16  FFFF               	dw	65535	; assembler added errata NOP
  8996  007D18  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8997  007D1A  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8998  007D1C  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8999  007D1E  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  9000  007D20  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  9001  007D22  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  9002  007D24  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  9003  007D26  6C09               	negf	___aodiv@divisor^0,c
  9004  007D28  0E00               	movlw	0
  9005  007D2A  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  9006  007D2C  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  9007  007D2E  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  9008  007D30  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  9009  007D32  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  9010  007D34  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  9011  007D36  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  9012  007D38  0E01               	movlw	1
  9013  007D3A  6E12               	movwf	___aodiv@sign^0,c
  9014  007D3C                     l3670:
  9015  007D3C  FFFF               	dw	65535	; assembler added errata NOP
  9016  007D3E  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  9017  007D40  EFA7  F03E         	goto	u3740
  9018  007D44  EFA4  F03E         	goto	u3741
  9019  007D48                     u3741:
  9020  007D48  FFFF               	dw	65535	; assembler added errata NOP
  9021  007D4A  EFBA  F03E         	goto	l3676
  9022  007D4E                     u3740:
  9023  007D4E  FFFF               	dw	65535	; assembler added errata NOP
  9024  007D50  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  9025  007D52  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  9026  007D54  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  9027  007D56  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  9028  007D58  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  9029  007D5A  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  9030  007D5C  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  9031  007D5E  6C01               	negf	___aodiv@dividend^0,c
  9032  007D60  0E00               	movlw	0
  9033  007D62  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  9034  007D64  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  9035  007D66  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  9036  007D68  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  9037  007D6A  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  9038  007D6C  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  9039  007D6E  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  9040  007D70  0E01               	movlw	1
  9041  007D72  1A12               	xorwf	___aodiv@sign^0,f,c
  9042  007D74                     l3676:
  9043  007D74  FFFF               	dw	65535	; assembler added errata NOP
  9044  007D76  EE20  F013         	lfsr	2,___aodiv@quotient
  9045  007D7A  0E07               	movlw	7
  9046  007D7C                     u3751:
  9047  007D7C  6ADE               	clrf	postinc2,c
  9048  007D7E  06E8               	decf	wreg,f,c
  9049  007D80  E2FD               	bc	u3751
  9050  007D82  5009               	movf	___aodiv@divisor^0,w,c
  9051  007D84  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  9052  007D86  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  9053  007D88  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  9054  007D8A  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  9055  007D8C  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  9056  007D8E  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  9057  007D90  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  9058  007D92  B4D8               	btfsc	status,2,c
  9059  007D94  EFCE  F03E         	goto	u3761
  9060  007D98  EFD1  F03E         	goto	u3760
  9061  007D9C                     u3761:
  9062  007D9C  FFFF               	dw	65535	; assembler added errata NOP
  9063  007D9E  EF2C  F03F         	goto	l3698
  9064  007DA2                     u3760:
  9065  007DA2  FFFF               	dw	65535	; assembler added errata NOP
  9066  007DA4  0E01               	movlw	1
  9067  007DA6  6E11               	movwf	___aodiv@counter^0,c
  9068  007DA8  EFE1  F03E         	goto	l3684
  9069  007DAC                     l3682:
  9070  007DAC  FFFF               	dw	65535	; assembler added errata NOP
  9071  007DAE  90D8               	bcf	status,0,c
  9072  007DB0  3609               	rlcf	___aodiv@divisor^0,f,c
  9073  007DB2  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  9074  007DB4  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  9075  007DB6  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  9076  007DB8  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  9077  007DBA  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  9078  007DBC  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  9079  007DBE  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  9080  007DC0  2A11               	incf	___aodiv@counter^0,f,c
  9081  007DC2                     l3684:
  9082  007DC2  FFFF               	dw	65535	; assembler added errata NOP
  9083  007DC4  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  9084  007DC6  EFE7  F03E         	goto	u3771
  9085  007DCA  EFEA  F03E         	goto	u3770
  9086  007DCE                     u3771:
  9087  007DCE  FFFF               	dw	65535	; assembler added errata NOP
  9088  007DD0  EFD6  F03E         	goto	l3682
  9089  007DD4                     u3770:
  9090  007DD4  FFFF               	dw	65535	; assembler added errata NOP
  9091  007DD6                     l3686:
  9092  007DD6  FFFF               	dw	65535	; assembler added errata NOP
  9093  007DD8  90D8               	bcf	status,0,c
  9094  007DDA  3613               	rlcf	___aodiv@quotient^0,f,c
  9095  007DDC  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  9096  007DDE  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  9097  007DE0  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  9098  007DE2  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  9099  007DE4  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  9100  007DE6  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  9101  007DE8  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  9102  007DEA  5009               	movf	___aodiv@divisor^0,w,c
  9103  007DEC  5C01               	subwf	___aodiv@dividend^0,w,c
  9104  007DEE  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9105  007DF0  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  9106  007DF2  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9107  007DF4  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  9108  007DF6  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9109  007DF8  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  9110  007DFA  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9111  007DFC  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  9112  007DFE  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9113  007E00  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  9114  007E02  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9115  007E04  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  9116  007E06  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9117  007E08  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  9118  007E0A  A0D8               	btfss	status,0,c
  9119  007E0C  EF0A  F03F         	goto	u3781
  9120  007E10  EF0D  F03F         	goto	u3780
  9121  007E14                     u3781:
  9122  007E14  FFFF               	dw	65535	; assembler added errata NOP
  9123  007E16  EF1F  F03F         	goto	l3694
  9124  007E1A                     u3780:
  9125  007E1A  FFFF               	dw	65535	; assembler added errata NOP
  9126  007E1C  5009               	movf	___aodiv@divisor^0,w,c
  9127  007E1E  5E01               	subwf	___aodiv@dividend^0,f,c
  9128  007E20  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9129  007E22  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  9130  007E24  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9131  007E26  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  9132  007E28  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9133  007E2A  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  9134  007E2C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9135  007E2E  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  9136  007E30  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9137  007E32  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  9138  007E34  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9139  007E36  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  9140  007E38  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9141  007E3A  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  9142  007E3C  8013               	bsf	___aodiv@quotient^0,0,c
  9143  007E3E                     l3694:
  9144  007E3E  FFFF               	dw	65535	; assembler added errata NOP
  9145  007E40  90D8               	bcf	status,0,c
  9146  007E42  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  9147  007E44  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  9148  007E46  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  9149  007E48  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  9150  007E4A  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  9151  007E4C  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  9152  007E4E  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  9153  007E50  3209               	rrcf	___aodiv@divisor^0,f,c
  9154  007E52  2E11               	decfsz	___aodiv@counter^0,f,c
  9155  007E54  EFEB  F03E         	goto	l3686
  9156  007E58                     l3698:
  9157  007E58  FFFF               	dw	65535	; assembler added errata NOP
  9158  007E5A  5012               	movf	___aodiv@sign^0,w,c
  9159  007E5C  B4D8               	btfsc	status,2,c
  9160  007E5E  EF33  F03F         	goto	u3791
  9161  007E62  EF36  F03F         	goto	u3790
  9162  007E66                     u3791:
  9163  007E66  FFFF               	dw	65535	; assembler added errata NOP
  9164  007E68  EF47  F03F         	goto	l3702
  9165  007E6C                     u3790:
  9166  007E6C  FFFF               	dw	65535	; assembler added errata NOP
  9167  007E6E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  9168  007E70  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  9169  007E72  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  9170  007E74  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  9171  007E76  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  9172  007E78  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  9173  007E7A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  9174  007E7C  6C13               	negf	___aodiv@quotient^0,c
  9175  007E7E  0E00               	movlw	0
  9176  007E80  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  9177  007E82  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  9178  007E84  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  9179  007E86  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  9180  007E88  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  9181  007E8A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  9182  007E8C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  9183  007E8E                     l3702:
  9184  007E8E  FFFF               	dw	65535	; assembler added errata NOP
  9185  007E90  C013  F001         	movff	___aodiv@quotient,?___aodiv
  9186  007E94  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  9187  007E98  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  9188  007E9C  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  9189  007EA0  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  9190  007EA4  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  9191  007EA8  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  9192  007EAC  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  9193  007EB0  0012               	return		;funcret
  9194  007EB2  FFFF               	dw	65535	; errata NOP
  9195  007EB4                     __end_of___aodiv:
  9196                           	callstack 0
  9197                           
  9198 ;; *************** function _ctoa *****************
  9199 ;; Defined at:
  9200 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  9201 ;; Parameters:    Size  Location     Type
  9202 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  9203 ;;		 -> vsnprintf@f(6), 
  9204 ;;  c               1   29[COMRAM] unsigned char 
  9205 ;; Auto vars:     Size  Location     Type
  9206 ;;  w               2   30[COMRAM] int 
  9207 ;;  l               2    0        int 
  9208 ;; Return value:  Size  Location     Type
  9209 ;;                  2   27[COMRAM] int 
  9210 ;; Registers used:
  9211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9212 ;; Tracked objects:
  9213 ;;		On entry : 0/0
  9214 ;;		On exit  : 0/0
  9215 ;;		Unchanged: 0/0
  9216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9217 ;;      Params:         3       0       0       0       0       0       0
  9218 ;;      Locals:         2       0       0       0       0       0       0
  9219 ;;      Temps:          0       0       0       0       0       0       0
  9220 ;;      Totals:         5       0       0       0       0       0       0
  9221 ;;Total ram usage:        5 bytes
  9222 ;; Hardware stack levels used:    1
  9223 ;; Hardware stack levels required when called:    5
  9224 ;; This function calls:
  9225 ;;		_pad
  9226 ;; This function is called by:
  9227 ;;		_vfpfcnvrt
  9228 ;; This function uses a non-reentrant model
  9229 ;;
  9230                           
  9231                           	psect	text23
  9232  006A04                     __ptext23:
  9233                           	callstack 0
  9234  006A04                     _ctoa:
  9235                           	callstack 0
  9236  006A04  FFFF               	dw	65535	; assembler added errata NOP
  9237  006A06                     
  9238                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  9239  006A06  0100               	movlb	0	; () banked
  9240  006A08  5186               	movf	_width& (0+255),w,b
  9241  006A0A  1187               	iorwf	(_width+1)& (0+255),w,b
  9242  006A0C  A4D8               	btfss	status,2,c
  9243  006A0E  EF0B  F035         	goto	u4081
  9244  006A12  EF0E  F035         	goto	u4080
  9245  006A16                     u4081:
  9246  006A16  FFFF               	dw	65535	; assembler added errata NOP
  9247  006A18  EF15  F035         	goto	l3840
  9248  006A1C                     u4080:
  9249  006A1C  FFFF               	dw	65535	; assembler added errata NOP
  9250  006A1E                     
  9251                           ; BSR set to: 0
  9252  006A1E  C086  F01F         	movff	_width,ctoa@w
  9253  006A22  C087  F020         	movff	_width+1,ctoa@w+1
  9254  006A26  EF1C  F035         	goto	l3842
  9255  006A2A                     l3840:
  9256  006A2A  FFFF               	dw	65535	; assembler added errata NOP
  9257                           
  9258                           ; BSR set to: 0
  9259  006A2C  0EFF               	movlw	255
  9260  006A2E  2586               	addwf	_width& (0+255),w,b
  9261  006A30  6E1F               	movwf	ctoa@w^0,c
  9262  006A32  0EFF               	movlw	255
  9263  006A34  2187               	addwfc	(_width+1)& (0+255),w,b
  9264  006A36  6E20               	movwf	(ctoa@w+1)^0,c
  9265  006A38                     l3842:
  9266  006A38  FFFF               	dw	65535	; assembler added errata NOP
  9267                           
  9268                           ; BSR set to: 0
  9269                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 267:     dbuf[0] 
      +                          = c;
  9270  006A3A  C01E  F098         	movff	ctoa@c,_dbuf
  9271  006A3E                     
  9272                           ; BSR set to: 0
  9273                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 268:     dbuf[1] 
      +                          = '\0';
  9274  006A3E  0E00               	movlw	0
  9275  006A40  6F99               	movwf	(_dbuf+1)& (0+255),b
  9276  006A42                     
  9277                           ; BSR set to: 0
  9278                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 269:     return p
      +                          ad(fp, &dbuf[0], w);
  9279  006A42  C01C  F011         	movff	ctoa@fp,pad@fp
  9280  006A46  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  9281  006A4A  0E98               	movlw	low _dbuf
  9282  006A4C  6E13               	movwf	pad@buf^0,c
  9283  006A4E  0E00               	movlw	high _dbuf
  9284  006A50  6E14               	movwf	(pad@buf+1)^0,c
  9285  006A52  C01F  F015         	movff	ctoa@w,pad@p
  9286  006A56  C020  F016         	movff	ctoa@w+1,pad@p+1
  9287  006A5A  EC82  F039         	call	_pad	;wreg free
  9288  006A5E  C011  F01C         	movff	?_pad,?_ctoa
  9289  006A62  C012  F01D         	movff	?_pad+1,?_ctoa+1
  9290  006A66  0012               	return		;funcret
  9291  006A68  FFFF               	dw	65535	; errata NOP
  9292  006A6A                     __end_of_ctoa:
  9293                           	callstack 0
  9294                           
  9295 ;; *************** function _pad *****************
  9296 ;; Defined at:
  9297 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  9298 ;; Parameters:    Size  Location     Type
  9299 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9300 ;;		 -> vsnprintf@f(6), 
  9301 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9302 ;;		 -> dbuf(32), 
  9303 ;;  p               2   20[COMRAM] int 
  9304 ;; Auto vars:     Size  Location     Type
  9305 ;;  w               2   25[COMRAM] int 
  9306 ;;  i               2   23[COMRAM] int 
  9307 ;; Return value:  Size  Location     Type
  9308 ;;                  2   16[COMRAM] int 
  9309 ;; Registers used:
  9310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9311 ;; Tracked objects:
  9312 ;;		On entry : 0/0
  9313 ;;		On exit  : 0/0
  9314 ;;		Unchanged: 0/0
  9315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9316 ;;      Params:         6       0       0       0       0       0       0
  9317 ;;      Locals:         4       0       0       0       0       0       0
  9318 ;;      Temps:          1       0       0       0       0       0       0
  9319 ;;      Totals:        11       0       0       0       0       0       0
  9320 ;;Total ram usage:       11 bytes
  9321 ;; Hardware stack levels used:    1
  9322 ;; Hardware stack levels required when called:    4
  9323 ;; This function calls:
  9324 ;;		_fputc
  9325 ;;		_fputs
  9326 ;;		_strlen
  9327 ;; This function is called by:
  9328 ;;		_ctoa
  9329 ;;		_dtoa
  9330 ;;		_otoa
  9331 ;;		_utoa
  9332 ;;		_xtoa
  9333 ;; This function uses a non-reentrant model
  9334 ;;
  9335                           
  9336                           	psect	text24
  9337  007304                     __ptext24:
  9338                           	callstack 0
  9339  007304                     _pad:
  9340                           	callstack 0
  9341  007304  FFFF               	dw	65535	; assembler added errata NOP
  9342  007306                     
  9343                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  9344  007306  0100               	movlb	0	; () banked
  9345  007308  A18A               	btfss	_flags& (0+255),0,b
  9346  00730A  EF89  F039         	goto	u3931
  9347  00730E  EF8C  F039         	goto	u3930
  9348  007312                     u3931:
  9349  007312  FFFF               	dw	65535	; assembler added errata NOP
  9350  007314  EF97  F039         	goto	l3784
  9351  007318                     u3930:
  9352  007318  FFFF               	dw	65535	; assembler added errata NOP
  9353  00731A                     
  9354                           ; BSR set to: 0
  9355                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  9356  00731A  C013  F00A         	movff	pad@buf,fputs@s
  9357  00731E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9358  007322  C011  F00C         	movff	pad@fp,fputs@fp
  9359  007326  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9360  00732A  EC7C  F034         	call	_fputs	;wreg free
  9361  00732E                     l3784:
  9362  00732E  FFFF               	dw	65535	; assembler added errata NOP
  9363                           
  9364                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  9365  007330  BE16               	btfsc	(pad@p+1)^0,7,c
  9366  007332  EF9D  F039         	goto	u3941
  9367  007336  EFA0  F039         	goto	u3940
  9368  00733A                     u3941:
  9369  00733A  FFFF               	dw	65535	; assembler added errata NOP
  9370  00733C  EFA7  F039         	goto	l3788
  9371  007340                     u3940:
  9372  007340  FFFF               	dw	65535	; assembler added errata NOP
  9373  007342  C015  F01A         	movff	pad@p,pad@w
  9374  007346  C016  F01B         	movff	pad@p+1,pad@w+1
  9375  00734A  EFAC  F039         	goto	l1148
  9376  00734E                     l3788:
  9377  00734E  FFFF               	dw	65535	; assembler added errata NOP
  9378  007350  0E00               	movlw	0
  9379  007352  6E1B               	movwf	(pad@w+1)^0,c
  9380  007354  0E00               	movlw	0
  9381  007356  6E1A               	movwf	pad@w^0,c
  9382  007358                     l1148:
  9383  007358  FFFF               	dw	65535	; assembler added errata NOP
  9384                           
  9385                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  9386  00735A  0E00               	movlw	0
  9387  00735C  6E19               	movwf	(pad@i+1)^0,c
  9388  00735E  0E00               	movlw	0
  9389  007360  6E18               	movwf	pad@i^0,c
  9390                           
  9391                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9392  007362  EFC0  F039         	goto	l3794
  9393  007366                     l3790:
  9394  007366  FFFF               	dw	65535	; assembler added errata NOP
  9395                           
  9396                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  9397  007368  0E00               	movlw	0
  9398  00736A  6E02               	movwf	(fputc@c+1)^0,c
  9399  00736C  0E20               	movlw	32
  9400  00736E  6E01               	movwf	fputc@c^0,c
  9401  007370  C011  F003         	movff	pad@fp,fputc@fp
  9402  007374  C012  F004         	movff	pad@fp+1,fputc@fp+1
  9403  007378  EC11  F039         	call	_fputc	;wreg free
  9404  00737C                     
  9405                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  9406  00737C  4A18               	infsnz	pad@i^0,f,c
  9407  00737E  2A19               	incf	(pad@i+1)^0,f,c
  9408  007380                     l3794:
  9409  007380  FFFF               	dw	65535	; assembler added errata NOP
  9410                           
  9411                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9412  007382  501A               	movf	pad@w^0,w,c
  9413  007384  5C18               	subwf	pad@i^0,w,c
  9414  007386  5019               	movf	(pad@i+1)^0,w,c
  9415  007388  0A80               	xorlw	128
  9416  00738A  6E17               	movwf	??_pad^0,c
  9417  00738C  501B               	movf	(pad@w+1)^0,w,c
  9418  00738E  0A80               	xorlw	128
  9419  007390  5817               	subwfb	??_pad^0,w,c
  9420  007392  A0D8               	btfss	status,0,c
  9421  007394  EFCE  F039         	goto	u3951
  9422  007398  EFD1  F039         	goto	u3950
  9423  00739C                     u3951:
  9424  00739C  FFFF               	dw	65535	; assembler added errata NOP
  9425  00739E  EFB3  F039         	goto	l3790
  9426  0073A2                     u3950:
  9427  0073A2  FFFF               	dw	65535	; assembler added errata NOP
  9428  0073A4                     
  9429                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  9430  0073A4  0100               	movlb	0	; () banked
  9431  0073A6  B18A               	btfsc	_flags& (0+255),0,b
  9432  0073A8  EFD8  F039         	goto	u3961
  9433  0073AC  EFDB  F039         	goto	u3960
  9434  0073B0                     u3961:
  9435  0073B0  FFFF               	dw	65535	; assembler added errata NOP
  9436  0073B2  EFE6  F039         	goto	l3798
  9437  0073B6                     u3960:
  9438  0073B6  FFFF               	dw	65535	; assembler added errata NOP
  9439  0073B8                     
  9440                           ; BSR set to: 0
  9441                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  9442  0073B8  C013  F00A         	movff	pad@buf,fputs@s
  9443  0073BC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9444  0073C0  C011  F00C         	movff	pad@fp,fputs@fp
  9445  0073C4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9446  0073C8  EC7C  F034         	call	_fputs	;wreg free
  9447  0073CC                     l3798:
  9448  0073CC  FFFF               	dw	65535	; assembler added errata NOP
  9449                           
  9450                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  9451  0073CE  C013  F001         	movff	pad@buf,strlen@s
  9452  0073D2  C014  F002         	movff	pad@buf+1,strlen@s+1
  9453  0073D6  ECA4  F034         	call	_strlen	;wreg free
  9454  0073DA  501A               	movf	pad@w^0,w,c
  9455  0073DC  2401               	addwf	?_strlen^0,w,c
  9456  0073DE  6E11               	movwf	?_pad^0,c
  9457  0073E0  501B               	movf	(pad@w+1)^0,w,c
  9458  0073E2  2002               	addwfc	(?_strlen+1)^0,w,c
  9459  0073E4  6E12               	movwf	(?_pad+1)^0,c
  9460  0073E6  0012               	return		;funcret
  9461  0073E8  FFFF               	dw	65535	; errata NOP
  9462  0073EA                     __end_of_pad:
  9463                           	callstack 0
  9464                           
  9465 ;; *************** function _strlen *****************
  9466 ;; Defined at:
  9467 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  9468 ;; Parameters:    Size  Location     Type
  9469 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9470 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), STR_8(50), 
  9471 ;;		 -> STR_7(9), STR_6(7), STR_5(9), STR_4(39), 
  9472 ;;		 -> STR_3(9), STR_2(64), STR_1(49), 
  9473 ;; Auto vars:     Size  Location     Type
  9474 ;;  a               2    2[COMRAM] PTR const unsigned char 
  9475 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), STR_8(50), 
  9476 ;;		 -> STR_7(9), STR_6(7), STR_5(9), STR_4(39), 
  9477 ;;		 -> STR_3(9), STR_2(64), STR_1(49), 
  9478 ;; Return value:  Size  Location     Type
  9479 ;;                  2    0[COMRAM] unsigned int 
  9480 ;; Registers used:
  9481 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  9482 ;; Tracked objects:
  9483 ;;		On entry : 0/0
  9484 ;;		On exit  : 0/0
  9485 ;;		Unchanged: 0/0
  9486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9487 ;;      Params:         2       0       0       0       0       0       0
  9488 ;;      Locals:         2       0       0       0       0       0       0
  9489 ;;      Temps:          0       0       0       0       0       0       0
  9490 ;;      Totals:         4       0       0       0       0       0       0
  9491 ;;Total ram usage:        4 bytes
  9492 ;; Hardware stack levels used:    1
  9493 ;; Hardware stack levels required when called:    1
  9494 ;; This function calls:
  9495 ;;		Nothing
  9496 ;; This function is called by:
  9497 ;;		_pad
  9498 ;;		_stoa
  9499 ;; This function uses a non-reentrant model
  9500 ;;
  9501                           
  9502                           	psect	text25
  9503  006948                     __ptext25:
  9504                           	callstack 0
  9505  006948                     _strlen:
  9506                           	callstack 0
  9507  006948  FFFF               	dw	65535	; assembler added errata NOP
  9508  00694A  C001  F003         	movff	strlen@s,strlen@a
  9509  00694E  C002  F004         	movff	strlen@s+1,strlen@a+1
  9510  006952  EFAE  F034         	goto	l3642
  9511  006956                     l3640:
  9512  006956  FFFF               	dw	65535	; assembler added errata NOP
  9513  006958  4A01               	infsnz	strlen@s^0,f,c
  9514  00695A  2A02               	incf	(strlen@s+1)^0,f,c
  9515  00695C                     l3642:
  9516  00695C  FFFF               	dw	65535	; assembler added errata NOP
  9517  00695E  C001  FFF6         	movff	strlen@s,tblptrl
  9518  006962  C002  FFF7         	movff	strlen@s+1,tblptrh
  9519  006966  6AF8               	clrf	tblptru,c
  9520  006968  0E05               	movlw	(high __ramtop+-1)
  9521  00696A  64F7               	cpfsgt	tblptrh,c
  9522  00696C  D004               	bra	u3687
  9523  00696E  0008               	tblrd		*
  9524  006970  FFFF               	dw	65535	; errata NOP
  9525  006972  50F5               	movf	tablat,w,c
  9526  006974  D005               	bra	u3680
  9527  006976                     u3687:
  9528  006976  CFF6 FFE1          	movff	tblptrl,fsr1l
  9529  00697A  CFF7 FFE2          	movff	tblptrh,fsr1h
  9530  00697E  50E7               	movf	indf1,w,c
  9531  006980                     u3680:
  9532  006980  0900               	iorlw	0
  9533  006982  A4D8               	btfss	status,2,c
  9534  006984  EFC6  F034         	goto	u3691
  9535  006988  EFC9  F034         	goto	u3690
  9536  00698C                     u3691:
  9537  00698C  FFFF               	dw	65535	; assembler added errata NOP
  9538  00698E  EFAB  F034         	goto	l3640
  9539  006992                     u3690:
  9540  006992  FFFF               	dw	65535	; assembler added errata NOP
  9541  006994  5003               	movf	strlen@a^0,w,c
  9542  006996  5C01               	subwf	strlen@s^0,w,c
  9543  006998  6E01               	movwf	?_strlen^0,c
  9544  00699A  5004               	movf	(strlen@a+1)^0,w,c
  9545  00699C  5802               	subwfb	(strlen@s+1)^0,w,c
  9546  00699E  6E02               	movwf	(?_strlen+1)^0,c
  9547  0069A0  0012               	return		;funcret
  9548  0069A2  FFFF               	dw	65535	; errata NOP
  9549  0069A4                     __end_of_strlen:
  9550                           	callstack 0
  9551                           
  9552 ;; *************** function _fputs *****************
  9553 ;; Defined at:
  9554 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  9555 ;; Parameters:    Size  Location     Type
  9556 ;;  s               2    9[COMRAM] PTR const unsigned char 
  9557 ;;		 -> dbuf(32), 
  9558 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  9559 ;;		 -> vsnprintf@f(6), 
  9560 ;; Auto vars:     Size  Location     Type
  9561 ;;  i               2   14[COMRAM] int 
  9562 ;;  c               1   13[COMRAM] unsigned char 
  9563 ;; Return value:  Size  Location     Type
  9564 ;;                  2    9[COMRAM] int 
  9565 ;; Registers used:
  9566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9567 ;; Tracked objects:
  9568 ;;		On entry : 0/0
  9569 ;;		On exit  : 0/0
  9570 ;;		Unchanged: 0/0
  9571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9572 ;;      Params:         4       0       0       0       0       0       0
  9573 ;;      Locals:         3       0       0       0       0       0       0
  9574 ;;      Temps:          0       0       0       0       0       0       0
  9575 ;;      Totals:         7       0       0       0       0       0       0
  9576 ;;Total ram usage:        7 bytes
  9577 ;; Hardware stack levels used:    1
  9578 ;; Hardware stack levels required when called:    3
  9579 ;; This function calls:
  9580 ;;		_fputc
  9581 ;; This function is called by:
  9582 ;;		_pad
  9583 ;; This function uses a non-reentrant model
  9584 ;;
  9585                           
  9586                           	psect	text26
  9587  0068F8                     __ptext26:
  9588                           	callstack 0
  9589  0068F8                     _fputs:
  9590                           	callstack 0
  9591  0068F8  FFFF               	dw	65535	; assembler added errata NOP
  9592  0068FA  0E00               	movlw	0
  9593  0068FC  6E10               	movwf	(fputs@i+1)^0,c
  9594  0068FE  0E00               	movlw	0
  9595  006900  6E0F               	movwf	fputs@i^0,c
  9596  006902  EF8F  F034         	goto	l3636
  9597  006906                     l3632:
  9598  006906  FFFF               	dw	65535	; assembler added errata NOP
  9599  006908  C00E  F001         	movff	fputs@c,fputc@c
  9600  00690C  6A02               	clrf	(fputc@c+1)^0,c
  9601  00690E  C00C  F003         	movff	fputs@fp,fputc@fp
  9602  006912  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  9603  006916  EC11  F039         	call	_fputc	;wreg free
  9604  00691A  4A0F               	infsnz	fputs@i^0,f,c
  9605  00691C  2A10               	incf	(fputs@i+1)^0,f,c
  9606  00691E                     l3636:
  9607  00691E  FFFF               	dw	65535	; assembler added errata NOP
  9608  006920  500F               	movf	fputs@i^0,w,c
  9609  006922  240A               	addwf	fputs@s^0,w,c
  9610  006924  6ED9               	movwf	fsr2l,c
  9611  006926  5010               	movf	(fputs@i+1)^0,w,c
  9612  006928  200B               	addwfc	(fputs@s+1)^0,w,c
  9613  00692A  6EDA               	movwf	fsr2h,c
  9614  00692C  50DF               	movf	indf2,w,c
  9615  00692E  6E0E               	movwf	fputs@c^0,c
  9616  006930  500E               	movf	fputs@c^0,w,c
  9617  006932  A4D8               	btfss	status,2,c
  9618  006934  EF9E  F034         	goto	u3671
  9619  006938  EFA1  F034         	goto	u3670
  9620  00693C                     u3671:
  9621  00693C  FFFF               	dw	65535	; assembler added errata NOP
  9622  00693E  EF83  F034         	goto	l3632
  9623  006942                     u3670:
  9624  006942  FFFF               	dw	65535	; assembler added errata NOP
  9625  006944  0012               	return		;funcret
  9626  006946  FFFF               	dw	65535	; errata NOP
  9627  006948                     __end_of_fputs:
  9628                           	callstack 0
  9629                           
  9630 ;; *************** function _fputc *****************
  9631 ;; Defined at:
  9632 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  9633 ;; Parameters:    Size  Location     Type
  9634 ;;  c               2    0[COMRAM] int 
  9635 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  9636 ;;		 -> vsnprintf@f(6), 
  9637 ;; Auto vars:     Size  Location     Type
  9638 ;;		None
  9639 ;; Return value:  Size  Location     Type
  9640 ;;                  2    0[COMRAM] int 
  9641 ;; Registers used:
  9642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9643 ;; Tracked objects:
  9644 ;;		On entry : 0/0
  9645 ;;		On exit  : 0/0
  9646 ;;		Unchanged: 0/0
  9647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9648 ;;      Params:         4       0       0       0       0       0       0
  9649 ;;      Locals:         0       0       0       0       0       0       0
  9650 ;;      Temps:          5       0       0       0       0       0       0
  9651 ;;      Totals:         9       0       0       0       0       0       0
  9652 ;;Total ram usage:        9 bytes
  9653 ;; Hardware stack levels used:    1
  9654 ;; Hardware stack levels required when called:    2
  9655 ;; This function calls:
  9656 ;;		_putch
  9657 ;; This function is called by:
  9658 ;;		_pad
  9659 ;;		_stoa
  9660 ;;		_vfpfcnvrt
  9661 ;;		_fputs
  9662 ;; This function uses a non-reentrant model
  9663 ;;
  9664                           
  9665                           	psect	text27
  9666  007222                     __ptext27:
  9667                           	callstack 0
  9668  007222                     _fputc:
  9669                           	callstack 0
  9670  007222  FFFF               	dw	65535	; assembler added errata NOP
  9671  007224  5003               	movf	fputc@fp^0,w,c
  9672  007226  1004               	iorwf	(fputc@fp+1)^0,w,c
  9673  007228  B4D8               	btfsc	status,2,c
  9674  00722A  EF19  F039         	goto	u3631
  9675  00722E  EF1C  F039         	goto	u3630
  9676  007232                     u3631:
  9677  007232  FFFF               	dw	65535	; assembler added errata NOP
  9678  007234  EF27  F039         	goto	l3620
  9679  007238                     u3630:
  9680  007238  FFFF               	dw	65535	; assembler added errata NOP
  9681  00723A  5003               	movf	fputc@fp^0,w,c
  9682  00723C  1004               	iorwf	(fputc@fp+1)^0,w,c
  9683  00723E  A4D8               	btfss	status,2,c
  9684  007240  EF24  F039         	goto	u3641
  9685  007244  EF27  F039         	goto	u3640
  9686  007248                     u3641:
  9687  007248  FFFF               	dw	65535	; assembler added errata NOP
  9688  00724A  EF2D  F039         	goto	l3622
  9689  00724E                     u3640:
  9690  00724E                     l3620:
  9691  00724E  FFFF               	dw	65535	; assembler added errata NOP
  9692  007250  5001               	movf	fputc@c^0,w,c
  9693  007252  EC3A  F032         	call	_putch
  9694  007256  EF7F  F039         	goto	l1423
  9695  00725A                     l3622:
  9696  00725A  FFFF               	dw	65535	; assembler added errata NOP
  9697  00725C  EE20 F004          	lfsr	2,4
  9698  007260  5003               	movf	fputc@fp^0,w,c
  9699  007262  26D9               	addwf	fsr2l,f,c
  9700  007264  5004               	movf	(fputc@fp+1)^0,w,c
  9701  007266  22DA               	addwfc	fsr2h,f,c
  9702  007268  50DE               	movf	postinc2,w,c
  9703  00726A  10DE               	iorwf	postinc2,w,c
  9704  00726C  B4D8               	btfsc	status,2,c
  9705  00726E  EF3B  F039         	goto	u3651
  9706  007272  EF3E  F039         	goto	u3650
  9707  007276                     u3651:
  9708  007276  FFFF               	dw	65535	; assembler added errata NOP
  9709  007278  EF5B  F039         	goto	l3626
  9710  00727C                     u3650:
  9711  00727C  FFFF               	dw	65535	; assembler added errata NOP
  9712  00727E  EE20 F004          	lfsr	2,4
  9713  007282  5003               	movf	fputc@fp^0,w,c
  9714  007284  26D9               	addwf	fsr2l,f,c
  9715  007286  5004               	movf	(fputc@fp+1)^0,w,c
  9716  007288  22DA               	addwfc	fsr2h,f,c
  9717  00728A  EE10 F002          	lfsr	1,2
  9718  00728E  5003               	movf	fputc@fp^0,w,c
  9719  007290  26E1               	addwf	fsr1l,f,c
  9720  007292  5004               	movf	(fputc@fp+1)^0,w,c
  9721  007294  22E2               	addwfc	fsr1h,f,c
  9722  007296  50DE               	movf	postinc2,w,c
  9723  007298  5CE6               	subwf	postinc1,w,c
  9724  00729A  50E6               	movf	postinc1,w,c
  9725  00729C  0A80               	xorlw	128
  9726  00729E  6E09               	movwf	(??_fputc+4)^0,c
  9727  0072A0  50DE               	movf	postinc2,w,c
  9728  0072A2  0A80               	xorlw	128
  9729  0072A4  5809               	subwfb	(??_fputc+4)^0,w,c
  9730  0072A6  B0D8               	btfsc	status,0,c
  9731  0072A8  EF58  F039         	goto	u3661
  9732  0072AC  EF5B  F039         	goto	u3660
  9733  0072B0                     u3661:
  9734  0072B0  FFFF               	dw	65535	; assembler added errata NOP
  9735  0072B2  EF7F  F039         	goto	l1423
  9736  0072B6                     u3660:
  9737  0072B6                     l3626:
  9738  0072B6  FFFF               	dw	65535	; assembler added errata NOP
  9739  0072B8  EE20 F002          	lfsr	2,2
  9740  0072BC  5003               	movf	fputc@fp^0,w,c
  9741  0072BE  26D9               	addwf	fsr2l,f,c
  9742  0072C0  5004               	movf	(fputc@fp+1)^0,w,c
  9743  0072C2  22DA               	addwfc	fsr2h,f,c
  9744  0072C4  CFDE F005          	movff	postinc2,??_fputc
  9745  0072C8  CFDD F006          	movff	postdec2,??_fputc+1
  9746  0072CC  C003  FFD9         	movff	fputc@fp,fsr2l
  9747  0072D0  C004  FFDA         	movff	fputc@fp+1,fsr2h
  9748  0072D4  CFDE F007          	movff	postinc2,??_fputc+2
  9749  0072D8  CFDD F008          	movff	postdec2,??_fputc+3
  9750  0072DC  5005               	movf	??_fputc^0,w,c
  9751  0072DE  2407               	addwf	(??_fputc+2)^0,w,c
  9752  0072E0  6ED9               	movwf	fsr2l,c
  9753  0072E2  5006               	movf	(??_fputc+1)^0,w,c
  9754  0072E4  2008               	addwfc	(??_fputc+3)^0,w,c
  9755  0072E6  6EDA               	movwf	fsr2h,c
  9756  0072E8  C001  FFDF         	movff	fputc@c,indf2
  9757  0072EC  EE20 F002          	lfsr	2,2
  9758  0072F0  5003               	movf	fputc@fp^0,w,c
  9759  0072F2  26D9               	addwf	fsr2l,f,c
  9760  0072F4  5004               	movf	(fputc@fp+1)^0,w,c
  9761  0072F6  22DA               	addwfc	fsr2h,f,c
  9762  0072F8  2ADE               	incf	postinc2,f,c
  9763  0072FA  0E00               	movlw	0
  9764  0072FC  22DD               	addwfc	postdec2,f,c
  9765  0072FE                     l1423:
  9766  0072FE  FFFF               	dw	65535	; assembler added errata NOP
  9767  007300  0012               	return		;funcret
  9768  007302  FFFF               	dw	65535	; errata NOP
  9769  007304                     __end_of_fputc:
  9770                           	callstack 0
  9771                           
  9772 ;; *************** function _putch *****************
  9773 ;; Defined at:
  9774 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  9775 ;; Parameters:    Size  Location     Type
  9776 ;;  c               1    wreg     unsigned char 
  9777 ;; Auto vars:     Size  Location     Type
  9778 ;;  c               1    0[COMRAM] unsigned char 
  9779 ;; Return value:  Size  Location     Type
  9780 ;;                  1    wreg      void 
  9781 ;; Registers used:
  9782 ;;		wreg
  9783 ;; Tracked objects:
  9784 ;;		On entry : 0/0
  9785 ;;		On exit  : 0/0
  9786 ;;		Unchanged: 0/0
  9787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9788 ;;      Params:         0       0       0       0       0       0       0
  9789 ;;      Locals:         0       0       0       0       0       0       0
  9790 ;;      Temps:          0       0       0       0       0       0       0
  9791 ;;      Totals:         0       0       0       0       0       0       0
  9792 ;;Total ram usage:        0 bytes
  9793 ;; Hardware stack levels used:    1
  9794 ;; Hardware stack levels required when called:    1
  9795 ;; This function calls:
  9796 ;;		Nothing
  9797 ;; This function is called by:
  9798 ;;		_fputc
  9799 ;; This function uses a non-reentrant model
  9800 ;;
  9801                           
  9802                           	psect	text28
  9803  006474                     __ptext28:
  9804                           	callstack 0
  9805  006474                     _putch:
  9806                           	callstack 0
  9807  006474  FFFF               	dw	65535	; assembler added errata NOP
  9808  006476  0012               	return		;funcret
  9809  006478  FFFF               	dw	65535	; errata NOP
  9810  00647A                     __end_of_putch:
  9811                           	callstack 0
  9812                           
  9813 ;; *************** function _atoi *****************
  9814 ;; Defined at:
  9815 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  9816 ;; Parameters:    Size  Location     Type
  9817 ;;  s               2    7[COMRAM] PTR const unsigned char 
  9818 ;;		 -> STR_10(3), 
  9819 ;; Auto vars:     Size  Location     Type
  9820 ;;  n               2   20[COMRAM] int 
  9821 ;;  neg             2   13[COMRAM] int 
  9822 ;; Return value:  Size  Location     Type
  9823 ;;                  2    7[COMRAM] int 
  9824 ;; Registers used:
  9825 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9826 ;; Tracked objects:
  9827 ;;		On entry : 0/0
  9828 ;;		On exit  : 0/0
  9829 ;;		Unchanged: 0/0
  9830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9831 ;;      Params:         2       0       0       0       0       0       0
  9832 ;;      Locals:         9       0       0       0       0       0       0
  9833 ;;      Temps:          4       0       0       0       0       0       0
  9834 ;;      Totals:        15       0       0       0       0       0       0
  9835 ;;Total ram usage:       15 bytes
  9836 ;; Hardware stack levels used:    1
  9837 ;; Hardware stack levels required when called:    2
  9838 ;; This function calls:
  9839 ;;		___wmul
  9840 ;;		_isdigit
  9841 ;;		_isspace
  9842 ;; This function is called by:
  9843 ;;		_vfpfcnvrt
  9844 ;; This function uses a non-reentrant model
  9845 ;;
  9846                           
  9847                           	psect	text29
  9848  003CC8                     __ptext29:
  9849                           	callstack 0
  9850  003CC8                     _atoi:
  9851                           	callstack 0
  9852  003CC8  FFFF               	dw	65535	; assembler added errata NOP
  9853  003CCA  0E00               	movlw	0
  9854  003CCC  6E16               	movwf	(atoi@n+1)^0,c
  9855  003CCE  0E00               	movlw	0
  9856  003CD0  6E15               	movwf	atoi@n^0,c
  9857  003CD2  0E00               	movlw	0
  9858  003CD4  6E0F               	movwf	(atoi@neg+1)^0,c
  9859  003CD6  0E00               	movlw	0
  9860  003CD8  6E0E               	movwf	atoi@neg^0,c
  9861  003CDA  EF72  F01E         	goto	l4108
  9862  003CDE                     l4106:
  9863  003CDE  FFFF               	dw	65535	; assembler added errata NOP
  9864  003CE0  4A08               	infsnz	atoi@s^0,f,c
  9865  003CE2  2A09               	incf	(atoi@s+1)^0,f,c
  9866  003CE4                     l4108:
  9867  003CE4  FFFF               	dw	65535	; assembler added errata NOP
  9868  003CE6  0E01               	movlw	1
  9869  003CE8  6E14               	movwf	_atoi$1812^0,c
  9870  003CEA  C008  FFF6         	movff	atoi@s,tblptrl
  9871  003CEE  C009  FFF7         	movff	atoi@s+1,tblptrh
  9872  003CF2                     	if	0	;tblptru may be non-zero
  9873  003CF2                     	endif
  9874  003CF2                     	if	0	;tblptru may be non-zero
  9875  003CF2                     	endif
  9876  003CF2  0008               	tblrd		*
  9877  003CF4  FFFF               	dw	65535	; errata NOP
  9878  003CF6  50F5               	movf	tablat,w,c
  9879  003CF8  0A20               	xorlw	32
  9880  003CFA  B4D8               	btfsc	status,2,c
  9881  003CFC  EF82  F01E         	goto	u4681
  9882  003D00  EF85  F01E         	goto	u4680
  9883  003D04                     u4681:
  9884  003D04  FFFF               	dw	65535	; assembler added errata NOP
  9885  003D06  EFA6  F01E         	goto	l4116
  9886  003D0A                     u4680:
  9887  003D0A  FFFF               	dw	65535	; assembler added errata NOP
  9888  003D0C  0EF7               	movlw	247
  9889  003D0E  6E0A               	movwf	??_atoi^0,c
  9890  003D10  0EFF               	movlw	255
  9891  003D12  6E0B               	movwf	(??_atoi+1)^0,c
  9892  003D14  C008  FFF6         	movff	atoi@s,tblptrl
  9893  003D18  C009  FFF7         	movff	atoi@s+1,tblptrh
  9894  003D1C                     	if	0	;tblptru may be non-zero
  9895  003D1C                     	endif
  9896  003D1C                     	if	0	;tblptru may be non-zero
  9897  003D1C                     	endif
  9898  003D1C  0008               	tblrd		*
  9899  003D1E  FFFF               	dw	65535	; errata NOP
  9900  003D20  50F5               	movf	tablat,w,c
  9901  003D22  6E0C               	movwf	(??_atoi+2)^0,c
  9902  003D24  6A0D               	clrf	(??_atoi+3)^0,c
  9903  003D26  500A               	movf	??_atoi^0,w,c
  9904  003D28  260C               	addwf	(??_atoi+2)^0,f,c
  9905  003D2A  500B               	movf	(??_atoi+1)^0,w,c
  9906  003D2C  220D               	addwfc	(??_atoi+3)^0,f,c
  9907  003D2E  500D               	movf	(??_atoi+3)^0,w,c
  9908  003D30  E10A               	bnz	u4690
  9909  003D32  0E05               	movlw	5
  9910  003D34  5C0C               	subwf	(??_atoi+2)^0,w,c
  9911  003D36  A0D8               	btfss	status,0,c
  9912  003D38  EFA0  F01E         	goto	u4691
  9913  003D3C  EFA3  F01E         	goto	u4690
  9914  003D40                     u4691:
  9915  003D40  FFFF               	dw	65535	; assembler added errata NOP
  9916  003D42  EFA6  F01E         	goto	l4116
  9917  003D46                     u4690:
  9918  003D46  FFFF               	dw	65535	; assembler added errata NOP
  9919  003D48  0E00               	movlw	0
  9920  003D4A  6E14               	movwf	_atoi$1812^0,c
  9921  003D4C                     l4116:
  9922  003D4C  FFFF               	dw	65535	; assembler added errata NOP
  9923  003D4E  C014  F010         	movff	_atoi$1812,_atoi$1811
  9924  003D52  6A11               	clrf	(_atoi$1811+1)^0,c
  9925  003D54  5010               	movf	_atoi$1811^0,w,c
  9926  003D56  1011               	iorwf	(_atoi$1811+1)^0,w,c
  9927  003D58  A4D8               	btfss	status,2,c
  9928  003D5A  EFB1  F01E         	goto	u4701
  9929  003D5E  EFB4  F01E         	goto	u4700
  9930  003D62                     u4701:
  9931  003D62  FFFF               	dw	65535	; assembler added errata NOP
  9932  003D64  EF6F  F01E         	goto	l4106
  9933  003D68                     u4700:
  9934  003D68  FFFF               	dw	65535	; assembler added errata NOP
  9935  003D6A  EFC1  F01E         	goto	l4126
  9936  003D6E                     l4122:
  9937  003D6E  FFFF               	dw	65535	; assembler added errata NOP
  9938  003D70  0E00               	movlw	0
  9939  003D72  6E0F               	movwf	(atoi@neg+1)^0,c
  9940  003D74  0E01               	movlw	1
  9941  003D76  6E0E               	movwf	atoi@neg^0,c
  9942  003D78                     l4124:
  9943  003D78  FFFF               	dw	65535	; assembler added errata NOP
  9944  003D7A  4A08               	infsnz	atoi@s^0,f,c
  9945  003D7C  2A09               	incf	(atoi@s+1)^0,f,c
  9946  003D7E  EFFB  F01E         	goto	l4132
  9947  003D82                     l4126:
  9948  003D82  FFFF               	dw	65535	; assembler added errata NOP
  9949  003D84  C008  FFF6         	movff	atoi@s,tblptrl
  9950  003D88  C009  FFF7         	movff	atoi@s+1,tblptrh
  9951  003D8C                     	if	0	;tblptru may be non-zero
  9952  003D8C                     	endif
  9953  003D8C                     	if	0	;tblptru may be non-zero
  9954  003D8C                     	endif
  9955  003D8C  0008               	tblrd		*
  9956  003D8E  FFFF               	dw	65535	; errata NOP
  9957  003D90  50F5               	movf	tablat,w,c
  9958  003D92  6E0A               	movwf	??_atoi^0,c
  9959  003D94  6A0B               	clrf	(??_atoi+1)^0,c
  9960                           
  9961                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9962                           ; Switch size 1, requested type "simple"
  9963                           ; Number of cases is 1, Range of values is 0 to 0
  9964                           ; switch strategies available:
  9965                           ; Name         Instructions Cycles
  9966                           ; simple_byte            4     3 (average)
  9967                           ;	Chosen strategy is simple_byte
  9968  003D96  500B               	movf	(??_atoi+1)^0,w,c
  9969  003D98  0A00               	xorlw	0	; case 0
  9970  003D9A  B4D8               	btfsc	status,2,c
  9971  003D9C  EFD2  F01E         	goto	l5780
  9972  003DA0  EFFB  F01E         	goto	l4132
  9973  003DA4                     l5780:
  9974  003DA4  FFFF               	dw	65535	; assembler added errata NOP
  9975                           
  9976                           ; Switch size 1, requested type "simple"
  9977                           ; Number of cases is 2, Range of values is 43 to 45
  9978                           ; switch strategies available:
  9979                           ; Name         Instructions Cycles
  9980                           ; simple_byte            7     4 (average)
  9981                           ;	Chosen strategy is simple_byte
  9982  003DA6  500A               	movf	??_atoi^0,w,c
  9983  003DA8  0A2B               	xorlw	43	; case 43
  9984  003DAA  B4D8               	btfsc	status,2,c
  9985  003DAC  EFBC  F01E         	goto	l4124
  9986  003DB0  0A06               	xorlw	6	; case 45
  9987  003DB2  B4D8               	btfsc	status,2,c
  9988  003DB4  EFB7  F01E         	goto	l4122
  9989  003DB8  EFFB  F01E         	goto	l4132
  9990  003DBC                     l4128:
  9991  003DBC  FFFF               	dw	65535	; assembler added errata NOP
  9992  003DBE  C015  F001         	movff	atoi@n,___wmul@multiplier
  9993  003DC2  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  9994  003DC6  0E00               	movlw	0
  9995  003DC8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9996  003DCA  0E0A               	movlw	10
  9997  003DCC  6E03               	movwf	___wmul@multiplicand^0,c
  9998  003DCE  ECEB  F032         	call	___wmul	;wreg free
  9999  003DD2  C008  FFF6         	movff	atoi@s,tblptrl
 10000  003DD6  C009  FFF7         	movff	atoi@s+1,tblptrh
 10001  003DDA                     	if	0	;tblptru may be non-zero
 10002  003DDA                     	endif
 10003  003DDA                     	if	0	;tblptru may be non-zero
 10004  003DDA                     	endif
 10005  003DDA  0008               	tblrd		*
 10006  003DDC  FFFF               	dw	65535	; errata NOP
 10007  003DDE  50F5               	movf	tablat,w,c
 10008  003DE0  5E01               	subwf	?___wmul^0,f,c
 10009  003DE2  0E00               	movlw	0
 10010  003DE4  5A02               	subwfb	(?___wmul+1)^0,f,c
 10011  003DE6  0E30               	movlw	48
 10012  003DE8  2401               	addwf	?___wmul^0,w,c
 10013  003DEA  6E15               	movwf	atoi@n^0,c
 10014  003DEC  0E00               	movlw	0
 10015  003DEE  2002               	addwfc	(?___wmul+1)^0,w,c
 10016  003DF0  6E16               	movwf	(atoi@n+1)^0,c
 10017  003DF2  EFBC  F01E         	goto	l4124
 10018  003DF6                     l4132:
 10019  003DF6  FFFF               	dw	65535	; assembler added errata NOP
 10020  003DF8  0ED0               	movlw	208
 10021  003DFA  6E0A               	movwf	??_atoi^0,c
 10022  003DFC  0EFF               	movlw	255
 10023  003DFE  6E0B               	movwf	(??_atoi+1)^0,c
 10024  003E00  C008  FFF6         	movff	atoi@s,tblptrl
 10025  003E04  C009  FFF7         	movff	atoi@s+1,tblptrh
 10026  003E08                     	if	0	;tblptru may be non-zero
 10027  003E08                     	endif
 10028  003E08                     	if	0	;tblptru may be non-zero
 10029  003E08                     	endif
 10030  003E08  0008               	tblrd		*
 10031  003E0A  FFFF               	dw	65535	; errata NOP
 10032  003E0C  50F5               	movf	tablat,w,c
 10033  003E0E  6E0C               	movwf	(??_atoi+2)^0,c
 10034  003E10  6A0D               	clrf	(??_atoi+3)^0,c
 10035  003E12  500A               	movf	??_atoi^0,w,c
 10036  003E14  260C               	addwf	(??_atoi+2)^0,f,c
 10037  003E16  500B               	movf	(??_atoi+1)^0,w,c
 10038  003E18  220D               	addwfc	(??_atoi+3)^0,f,c
 10039  003E1A  500D               	movf	(??_atoi+3)^0,w,c
 10040  003E1C  E10B               	bnz	u4710
 10041  003E1E  0E0A               	movlw	10
 10042  003E20  5C0C               	subwf	(??_atoi+2)^0,w,c
 10043  003E22  A0D8               	btfss	status,0,c
 10044  003E24  EF16  F01F         	goto	u4711
 10045  003E28  EF1A  F01F         	goto	u4710
 10046  003E2C                     u4711:
 10047  003E2C  FFFF               	dw	65535	; assembler added errata NOP
 10048  003E2E  0E01               	movlw	1
 10049  003E30  EF1C  F01F         	goto	u4720
 10050  003E34                     u4710:
 10051  003E34  FFFF               	dw	65535	; assembler added errata NOP
 10052  003E36  0E00               	movlw	0
 10053  003E38                     u4720:
 10054  003E38  FFFF               	dw	65535	; assembler added errata NOP
 10055  003E3A  6E12               	movwf	_atoi$1813^0,c
 10056  003E3C  6A13               	clrf	(_atoi$1813+1)^0,c
 10057  003E3E  5012               	movf	_atoi$1813^0,w,c
 10058  003E40  1013               	iorwf	(_atoi$1813+1)^0,w,c
 10059  003E42  A4D8               	btfss	status,2,c
 10060  003E44  EF26  F01F         	goto	u4731
 10061  003E48  EF29  F01F         	goto	u4730
 10062  003E4C                     u4731:
 10063  003E4C  FFFF               	dw	65535	; assembler added errata NOP
 10064  003E4E  EFDE  F01E         	goto	l4128
 10065  003E52                     u4730:
 10066  003E52  FFFF               	dw	65535	; assembler added errata NOP
 10067  003E54  500E               	movf	atoi@neg^0,w,c
 10068  003E56  100F               	iorwf	(atoi@neg+1)^0,w,c
 10069  003E58  A4D8               	btfss	status,2,c
 10070  003E5A  EF31  F01F         	goto	u4741
 10071  003E5E  EF34  F01F         	goto	u4740
 10072  003E62                     u4741:
 10073  003E62  FFFF               	dw	65535	; assembler added errata NOP
 10074  003E64  EF43  F01F         	goto	l1380
 10075  003E68                     u4740:
 10076  003E68  FFFF               	dw	65535	; assembler added errata NOP
 10077  003E6A  C015  F00A         	movff	atoi@n,??_atoi
 10078  003E6E  C016  F00B         	movff	atoi@n+1,??_atoi+1
 10079  003E72  1E0A               	comf	??_atoi^0,f,c
 10080  003E74  1E0B               	comf	(??_atoi+1)^0,f,c
 10081  003E76  4A0A               	infsnz	??_atoi^0,f,c
 10082  003E78  2A0B               	incf	(??_atoi+1)^0,f,c
 10083  003E7A  C00A  F008         	movff	??_atoi,?_atoi
 10084  003E7E  C00B  F009         	movff	??_atoi+1,?_atoi+1
 10085  003E82  EF48  F01F         	goto	l1383
 10086  003E86                     l1380:
 10087  003E86  FFFF               	dw	65535	; assembler added errata NOP
 10088  003E88  C015  F008         	movff	atoi@n,?_atoi
 10089  003E8C  C016  F009         	movff	atoi@n+1,?_atoi+1
 10090  003E90                     l1383:
 10091  003E90  FFFF               	dw	65535	; assembler added errata NOP
 10092  003E92  0012               	return		;funcret
 10093  003E94  FFFF               	dw	65535	; errata NOP
 10094  003E96                     __end_of_atoi:
 10095                           	callstack 0
 10096                           
 10097 ;; *************** function _isspace *****************
 10098 ;; Defined at:
 10099 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
 10100 ;; Parameters:    Size  Location     Type
 10101 ;;  c               2    0[COMRAM] int 
 10102 ;; Auto vars:     Size  Location     Type
 10103 ;;		None
 10104 ;; Return value:  Size  Location     Type
 10105 ;;                  2    0[COMRAM] int 
 10106 ;; Registers used:
 10107 ;;		wreg, status,2, status,0
 10108 ;; Tracked objects:
 10109 ;;		On entry : 0/0
 10110 ;;		On exit  : 0/0
 10111 ;;		Unchanged: 0/0
 10112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10113 ;;      Params:         2       0       0       0       0       0       0
 10114 ;;      Locals:         1       0       0       0       0       0       0
 10115 ;;      Temps:          4       0       0       0       0       0       0
 10116 ;;      Totals:         7       0       0       0       0       0       0
 10117 ;;Total ram usage:        7 bytes
 10118 ;; Hardware stack levels used:    1
 10119 ;; Hardware stack levels required when called:    1
 10120 ;; This function calls:
 10121 ;;		Nothing
 10122 ;; This function is called by:
 10123 ;;		_atoi
 10124 ;; This function uses a non-reentrant model
 10125 ;;
 10126                           
 10127                           	psect	text30
 10128  0069A4                     __ptext30:
 10129                           	callstack 0
 10130  0069A4                     _isspace:
 10131                           	callstack 24
 10132  0069A4  FFFF               	dw	65535	; assembler added errata NOP
 10133  0069A6  0E01               	movlw	1
 10134  0069A8  6E07               	movwf	_isspace$1839^0,c
 10135  0069AA  0E20               	movlw	32
 10136  0069AC  1801               	xorwf	isspace@c^0,w,c
 10137  0069AE  1002               	iorwf	(isspace@c+1)^0,w,c
 10138  0069B0  B4D8               	btfsc	status,2,c
 10139  0069B2  EFDD  F034         	goto	u4061
 10140  0069B6  EFE0  F034         	goto	u4060
 10141  0069BA                     u4061:
 10142  0069BA  FFFF               	dw	65535	; assembler added errata NOP
 10143  0069BC  EFFC  F034         	goto	l3832
 10144  0069C0                     u4060:
 10145  0069C0  FFFF               	dw	65535	; assembler added errata NOP
 10146  0069C2  0EF7               	movlw	247
 10147  0069C4  6E03               	movwf	??_isspace^0,c
 10148  0069C6  0EFF               	movlw	255
 10149  0069C8  6E04               	movwf	(??_isspace+1)^0,c
 10150  0069CA  C001  F005         	movff	isspace@c,??_isspace+2
 10151  0069CE  C002  F006         	movff	isspace@c+1,??_isspace+3
 10152  0069D2  5003               	movf	??_isspace^0,w,c
 10153  0069D4  2605               	addwf	(??_isspace+2)^0,f,c
 10154  0069D6  5004               	movf	(??_isspace+1)^0,w,c
 10155  0069D8  2206               	addwfc	(??_isspace+3)^0,f,c
 10156  0069DA  5006               	movf	(??_isspace+3)^0,w,c
 10157  0069DC  E10A               	bnz	u4070
 10158  0069DE  0E05               	movlw	5
 10159  0069E0  5C05               	subwf	(??_isspace+2)^0,w,c
 10160  0069E2  A0D8               	btfss	status,0,c
 10161  0069E4  EFF6  F034         	goto	u4071
 10162  0069E8  EFF9  F034         	goto	u4070
 10163  0069EC                     u4071:
 10164  0069EC  FFFF               	dw	65535	; assembler added errata NOP
 10165  0069EE  EFFC  F034         	goto	l3832
 10166  0069F2                     u4070:
 10167  0069F2  FFFF               	dw	65535	; assembler added errata NOP
 10168  0069F4  0E00               	movlw	0
 10169  0069F6  6E07               	movwf	_isspace$1839^0,c
 10170  0069F8                     l3832:
 10171  0069F8  FFFF               	dw	65535	; assembler added errata NOP
 10172  0069FA  C007  F001         	movff	_isspace$1839,?_isspace
 10173  0069FE  6A02               	clrf	(?_isspace+1)^0,c
 10174  006A00  0012               	return		;funcret
 10175  006A02  FFFF               	dw	65535	; errata NOP
 10176  006A04                     __end_of_isspace:
 10177                           	callstack 0
 10178                           
 10179 ;; *************** function _isdigit *****************
 10180 ;; Defined at:
 10181 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 10182 ;; Parameters:    Size  Location     Type
 10183 ;;  c               2    0[COMRAM] int 
 10184 ;; Auto vars:     Size  Location     Type
 10185 ;;		None
 10186 ;; Return value:  Size  Location     Type
 10187 ;;                  2    0[COMRAM] int 
 10188 ;; Registers used:
 10189 ;;		wreg, status,2, status,0
 10190 ;; Tracked objects:
 10191 ;;		On entry : 0/0
 10192 ;;		On exit  : 0/0
 10193 ;;		Unchanged: 0/0
 10194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10195 ;;      Params:         2       0       0       0       0       0       0
 10196 ;;      Locals:         0       0       0       0       0       0       0
 10197 ;;      Temps:          4       0       0       0       0       0       0
 10198 ;;      Totals:         6       0       0       0       0       0       0
 10199 ;;Total ram usage:        6 bytes
 10200 ;; Hardware stack levels used:    1
 10201 ;; Hardware stack levels required when called:    1
 10202 ;; This function calls:
 10203 ;;		Nothing
 10204 ;; This function is called by:
 10205 ;;		_vfpfcnvrt
 10206 ;;		_atoi
 10207 ;; This function uses a non-reentrant model
 10208 ;;
 10209                           
 10210                           	psect	text31
 10211  006756                     __ptext31:
 10212                           	callstack 0
 10213  006756                     _isdigit:
 10214                           	callstack 25
 10215  006756  FFFF               	dw	65535	; assembler added errata NOP
 10216  006758  0ED0               	movlw	208
 10217  00675A  6E03               	movwf	??_isdigit^0,c
 10218  00675C  0EFF               	movlw	255
 10219  00675E  6E04               	movwf	(??_isdigit+1)^0,c
 10220  006760  C001  F005         	movff	isdigit@c,??_isdigit+2
 10221  006764  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 10222  006768  5003               	movf	??_isdigit^0,w,c
 10223  00676A  2605               	addwf	(??_isdigit+2)^0,f,c
 10224  00676C  5004               	movf	(??_isdigit+1)^0,w,c
 10225  00676E  2206               	addwfc	(??_isdigit+3)^0,f,c
 10226  006770  5006               	movf	(??_isdigit+3)^0,w,c
 10227  006772  E10B               	bnz	u4040
 10228  006774  0E0A               	movlw	10
 10229  006776  5C05               	subwf	(??_isdigit+2)^0,w,c
 10230  006778  A0D8               	btfss	status,0,c
 10231  00677A  EFC1  F033         	goto	u4041
 10232  00677E  EFC5  F033         	goto	u4040
 10233  006782                     u4041:
 10234  006782  FFFF               	dw	65535	; assembler added errata NOP
 10235  006784  0E01               	movlw	1
 10236  006786  EFC7  F033         	goto	u4050
 10237  00678A                     u4040:
 10238  00678A  FFFF               	dw	65535	; assembler added errata NOP
 10239  00678C  0E00               	movlw	0
 10240  00678E                     u4050:
 10241  00678E  FFFF               	dw	65535	; assembler added errata NOP
 10242  006790  6E01               	movwf	?_isdigit^0,c
 10243  006792  6A02               	clrf	(?_isdigit+1)^0,c
 10244  006794  0012               	return		;funcret
 10245  006796  FFFF               	dw	65535	; errata NOP
 10246  006798                     __end_of_isdigit:
 10247                           	callstack 0
 10248                           
 10249 ;; *************** function ___wmul *****************
 10250 ;; Defined at:
 10251 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 10252 ;; Parameters:    Size  Location     Type
 10253 ;;  multiplier      2    0[COMRAM] unsigned int 
 10254 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10255 ;; Auto vars:     Size  Location     Type
 10256 ;;  product         2    4[COMRAM] unsigned int 
 10257 ;; Return value:  Size  Location     Type
 10258 ;;                  2    0[COMRAM] unsigned int 
 10259 ;; Registers used:
 10260 ;;		wreg, status,2, status,0, prodl, prodh
 10261 ;; Tracked objects:
 10262 ;;		On entry : 0/0
 10263 ;;		On exit  : 0/0
 10264 ;;		Unchanged: 0/0
 10265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10266 ;;      Params:         4       0       0       0       0       0       0
 10267 ;;      Locals:         2       0       0       0       0       0       0
 10268 ;;      Temps:          0       0       0       0       0       0       0
 10269 ;;      Totals:         6       0       0       0       0       0       0
 10270 ;;Total ram usage:        6 bytes
 10271 ;; Hardware stack levels used:    1
 10272 ;; Hardware stack levels required when called:    1
 10273 ;; This function calls:
 10274 ;;		Nothing
 10275 ;; This function is called by:
 10276 ;;		_main
 10277 ;;		_atoi
 10278 ;; This function uses a non-reentrant model
 10279 ;;
 10280                           
 10281                           	psect	text32
 10282  0065D6                     __ptext32:
 10283                           	callstack 0
 10284  0065D6                     ___wmul:
 10285                           	callstack 0
 10286  0065D6  FFFF               	dw	65535	; assembler added errata NOP
 10287  0065D8  5001               	movf	___wmul@multiplier^0,w,c
 10288  0065DA  0203               	mulwf	___wmul@multiplicand^0,c
 10289  0065DC  CFF3 F005          	movff	prodl,___wmul@product
 10290  0065E0  CFF4 F006          	movff	prodh,___wmul@product+1
 10291  0065E4  5001               	movf	___wmul@multiplier^0,w,c
 10292  0065E6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10293  0065E8  50F3               	movf	243,w,c
 10294  0065EA  2606               	addwf	(___wmul@product+1)^0,f,c
 10295  0065EC  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10296  0065EE  0203               	mulwf	___wmul@multiplicand^0,c
 10297  0065F0  50F3               	movf	243,w,c
 10298  0065F2  2606               	addwf	(___wmul@product+1)^0,f,c
 10299  0065F4  C005  F001         	movff	___wmul@product,?___wmul
 10300  0065F8  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10301  0065FC  0012               	return		;funcret
 10302  0065FE  FFFF               	dw	65535	; errata NOP
 10303  006600                     __end_of___wmul:
 10304                           	callstack 0
 10305                           
 10306 ;; *************** function _serial_tx_char *****************
 10307 ;; Defined at:
 10308 ;;		line 39 in file "serial_rs232.c"
 10309 ;; Parameters:    Size  Location     Type
 10310 ;;  val             1    wreg     unsigned char 
 10311 ;; Auto vars:     Size  Location     Type
 10312 ;;  val             1    0[COMRAM] unsigned char 
 10313 ;; Return value:  Size  Location     Type
 10314 ;;                  1    wreg      void 
 10315 ;; Registers used:
 10316 ;;		wreg
 10317 ;; Tracked objects:
 10318 ;;		On entry : 0/0
 10319 ;;		On exit  : 0/0
 10320 ;;		Unchanged: 0/0
 10321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10322 ;;      Params:         0       0       0       0       0       0       0
 10323 ;;      Locals:         1       0       0       0       0       0       0
 10324 ;;      Temps:          0       0       0       0       0       0       0
 10325 ;;      Totals:         1       0       0       0       0       0       0
 10326 ;;Total ram usage:        1 bytes
 10327 ;; Hardware stack levels used:    1
 10328 ;; Hardware stack levels required when called:    1
 10329 ;; This function calls:
 10330 ;;		Nothing
 10331 ;; This function is called by:
 10332 ;;		_main
 10333 ;;		_serial_tx_string
 10334 ;; This function uses a non-reentrant model
 10335 ;;
 10336                           
 10337                           	psect	text33
 10338  0064AA                     __ptext33:
 10339                           	callstack 0
 10340  0064AA                     _serial_tx_char:
 10341                           	callstack 0
 10342  0064AA  FFFF               	dw	65535	; assembler added errata NOP
 10343                           
 10344                           ;incstack = 0
 10345                           ;serial_tx_char@val stored from wreg
 10346  0064AC  6E01               	movwf	serial_tx_char@val^0,c
 10347  0064AE                     
 10348                           ;serial_rs232.c: 40:     TXREG = val;
 10349  0064AE  C001  FFAD         	movff	serial_tx_char@val,4013	;volatile
 10350  0064B2                     l24:
 10351  0064B2  FFFF               	dw	65535	; assembler added errata NOP
 10352  0064B4  A2AC               	btfss	172,1,c	;volatile
 10353  0064B6  EF5F  F032         	goto	u6591
 10354  0064BA  EF62  F032         	goto	u6590
 10355  0064BE                     u6591:
 10356  0064BE  FFFF               	dw	65535	; assembler added errata NOP
 10357  0064C0  EF59  F032         	goto	l24
 10358  0064C4                     u6590:
 10359  0064C4  FFFF               	dw	65535	; assembler added errata NOP
 10360  0064C6  0012               	return		;funcret
 10361  0064C8  FFFF               	dw	65535	; errata NOP
 10362  0064CA                     __end_of_serial_tx_char:
 10363                           	callstack 0
 10364                           
 10365 ;; *************** function _reach_goal *****************
 10366 ;; Defined at:
 10367 ;;		line 29 in file "stepper_motor.c"
 10368 ;; Parameters:    Size  Location     Type
 10369 ;;  stepper_moto    2    6[COMRAM] PTR struct .
 10370 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
 10371 ;;  goal_to_reac    2    8[COMRAM] int 
 10372 ;; Auto vars:     Size  Location     Type
 10373 ;;		None
 10374 ;; Return value:  Size  Location     Type
 10375 ;;                  2    6[COMRAM] int 
 10376 ;; Registers used:
 10377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10378 ;; Tracked objects:
 10379 ;;		On entry : 0/0
 10380 ;;		On exit  : 0/0
 10381 ;;		Unchanged: 0/0
 10382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10383 ;;      Params:         4       0       0       0       0       0       0
 10384 ;;      Locals:         0       0       0       0       0       0       0
 10385 ;;      Temps:          3       0       0       0       0       0       0
 10386 ;;      Totals:         7       0       0       0       0       0       0
 10387 ;;Total ram usage:        7 bytes
 10388 ;; Hardware stack levels used:    1
 10389 ;; Hardware stack levels required when called:    2
 10390 ;; This function calls:
 10391 ;;		_turn_on_current_coil
 10392 ;;		_update_current_coil
 10393 ;; This function is called by:
 10394 ;;		_main
 10395 ;; This function uses a non-reentrant model
 10396 ;;
 10397                           
 10398                           	psect	text34
 10399  006C22                     __ptext34:
 10400                           	callstack 0
 10401  006C22                     _reach_goal:
 10402                           	callstack 0
 10403  006C22  FFFF               	dw	65535	; assembler added errata NOP
 10404  006C24                     
 10405                           ;stepper_motor.c: 30:     if(stepper_motor -> step_counter >= goal_to_reach){
 10406  006C24  EE20 F002          	lfsr	2,2
 10407  006C28  5007               	movf	reach_goal@stepper_motor^0,w,c
 10408  006C2A  26D9               	addwf	fsr2l,f,c
 10409  006C2C  5008               	movf	(reach_goal@stepper_motor+1)^0,w,c
 10410  006C2E  22DA               	addwfc	fsr2h,f,c
 10411  006C30  5009               	movf	reach_goal@goal_to_reach^0,w,c
 10412  006C32  5CDE               	subwf	postinc2,w,c
 10413  006C34  50DE               	movf	postinc2,w,c
 10414  006C36  0A80               	xorlw	128
 10415  006C38  6E0D               	movwf	(??_reach_goal+2)^0,c
 10416  006C3A  500A               	movf	(reach_goal@goal_to_reach+1)^0,w,c
 10417  006C3C  0A80               	xorlw	128
 10418  006C3E  580D               	subwfb	(??_reach_goal+2)^0,w,c
 10419  006C40  A0D8               	btfss	status,0,c
 10420  006C42  EF25  F036         	goto	u6781
 10421  006C46  EF28  F036         	goto	u6780
 10422  006C4A                     u6781:
 10423  006C4A  FFFF               	dw	65535	; assembler added errata NOP
 10424  006C4C  EF39  F036         	goto	l5508
 10425  006C50                     u6780:
 10426  006C50  FFFF               	dw	65535	; assembler added errata NOP
 10427  006C52                     
 10428                           ;stepper_motor.c: 31:         stepper_motor -> step_counter = 0;
 10429  006C52  EE20 F002          	lfsr	2,2
 10430  006C56  5007               	movf	reach_goal@stepper_motor^0,w,c
 10431  006C58  26D9               	addwf	fsr2l,f,c
 10432  006C5A  5008               	movf	(reach_goal@stepper_motor+1)^0,w,c
 10433  006C5C  22DA               	addwfc	fsr2h,f,c
 10434  006C5E  0E00               	movlw	0
 10435  006C60  6EDE               	movwf	postinc2,c
 10436  006C62  0E00               	movlw	0
 10437  006C64  6EDD               	movwf	postdec2,c
 10438  006C66                     
 10439                           ;stepper_motor.c: 32:         return 1;
 10440  006C66  0E00               	movlw	0
 10441  006C68  6E08               	movwf	(?_reach_goal+1)^0,c
 10442  006C6A  0E01               	movlw	1
 10443  006C6C  6E07               	movwf	?_reach_goal^0,c
 10444  006C6E  EF4A  F036         	goto	l344
 10445  006C72                     l5508:
 10446  006C72  FFFF               	dw	65535	; assembler added errata NOP
 10447                           
 10448                           ;stepper_motor.c: 34:         turn_on_current_coil(stepper_motor);
 10449  006C74  C007  F001         	movff	reach_goal@stepper_motor,turn_on_current_coil@stepper_motor
 10450  006C78  C008  F002         	movff	reach_goal@stepper_motor+1,turn_on_current_coil@stepper_motor+1
 10451  006C7C  EC4B  F033         	call	_turn_on_current_coil	;wreg free
 10452                           
 10453                           ;stepper_motor.c: 35:         update_current_coil(stepper_motor);
 10454  006C80  C007  F001         	movff	reach_goal@stepper_motor,update_current_coil@stepper_motor
 10455  006C84  C008  F002         	movff	reach_goal@stepper_motor+1,update_current_coil@stepper_motor+1
 10456  006C88  EC36  F038         	call	_update_current_coil	;wreg free
 10457  006C8C                     
 10458                           ;stepper_motor.c: 36:         return 0;
 10459  006C8C  0E00               	movlw	0
 10460  006C8E  6E08               	movwf	(?_reach_goal+1)^0,c
 10461  006C90  0E00               	movlw	0
 10462  006C92  6E07               	movwf	?_reach_goal^0,c
 10463  006C94                     l344:
 10464  006C94  FFFF               	dw	65535	; assembler added errata NOP
 10465  006C96  0012               	return		;funcret
 10466  006C98  FFFF               	dw	65535	; errata NOP
 10467  006C9A                     __end_of_reach_goal:
 10468                           	callstack 0
 10469                           
 10470 ;; *************** function _update_current_coil *****************
 10471 ;; Defined at:
 10472 ;;		line 18 in file "stepper_motor.c"
 10473 ;; Parameters:    Size  Location     Type
 10474 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 10475 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
 10476 ;; Auto vars:     Size  Location     Type
 10477 ;;		None
 10478 ;; Return value:  Size  Location     Type
 10479 ;;                  1    wreg      void 
 10480 ;; Registers used:
 10481 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10482 ;; Tracked objects:
 10483 ;;		On entry : 0/0
 10484 ;;		On exit  : 0/0
 10485 ;;		Unchanged: 0/0
 10486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10487 ;;      Params:         2       0       0       0       0       0       0
 10488 ;;      Locals:         0       0       0       0       0       0       0
 10489 ;;      Temps:          4       0       0       0       0       0       0
 10490 ;;      Totals:         6       0       0       0       0       0       0
 10491 ;;Total ram usage:        6 bytes
 10492 ;; Hardware stack levels used:    1
 10493 ;; Hardware stack levels required when called:    1
 10494 ;; This function calls:
 10495 ;;		Nothing
 10496 ;; This function is called by:
 10497 ;;		_reach_goal
 10498 ;; This function uses a non-reentrant model
 10499 ;;
 10500                           
 10501                           	psect	text35
 10502  00706C                     __ptext35:
 10503                           	callstack 0
 10504  00706C                     _update_current_coil:
 10505                           	callstack 0
 10506  00706C  FFFF               	dw	65535	; assembler added errata NOP
 10507  00706E                     
 10508                           ;stepper_motor.c: 19:     stepper_motor -> current_coil = stepper_motor -> current_coil 
      +                          + stepper_motor -> direction;
 10509  00706E  EE20 F004          	lfsr	2,4
 10510  007072  5001               	movf	update_current_coil@stepper_motor^0,w,c
 10511  007074  26D9               	addwf	fsr2l,f,c
 10512  007076  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
 10513  007078  22DA               	addwfc	fsr2h,f,c
 10514  00707A  CFDE F003          	movff	postinc2,??_update_current_coil
 10515  00707E  CFDD F004          	movff	postdec2,??_update_current_coil+1
 10516  007082  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10517  007086  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10518  00708A  CFDE F005          	movff	postinc2,??_update_current_coil+2
 10519  00708E  CFDD F006          	movff	postdec2,??_update_current_coil+3
 10520  007092  5003               	movf	??_update_current_coil^0,w,c
 10521  007094  2605               	addwf	(??_update_current_coil+2)^0,f,c
 10522  007096  5004               	movf	(??_update_current_coil+1)^0,w,c
 10523  007098  2206               	addwfc	(??_update_current_coil+3)^0,f,c
 10524  00709A  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10525  00709E  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10526  0070A2  C005  FFDE         	movff	??_update_current_coil+2,postinc2
 10527  0070A6  C006  FFDD         	movff	??_update_current_coil+3,postdec2
 10528                           
 10529                           ;stepper_motor.c: 20:     stepper_motor -> step_counter = stepper_motor -> step_counter 
      +                          + 1;
 10530  0070AA  EE20 F002          	lfsr	2,2
 10531  0070AE  5001               	movf	update_current_coil@stepper_motor^0,w,c
 10532  0070B0  26D9               	addwf	fsr2l,f,c
 10533  0070B2  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
 10534  0070B4  22DA               	addwfc	fsr2h,f,c
 10535  0070B6  CFDE F003          	movff	postinc2,??_update_current_coil
 10536  0070BA  CFDD F004          	movff	postdec2,??_update_current_coil+1
 10537  0070BE  0E01               	movlw	1
 10538  0070C0  2603               	addwf	??_update_current_coil^0,f,c
 10539  0070C2  0E00               	movlw	0
 10540  0070C4  2204               	addwfc	(??_update_current_coil+1)^0,f,c
 10541  0070C6  EE20 F002          	lfsr	2,2
 10542  0070CA  5001               	movf	update_current_coil@stepper_motor^0,w,c
 10543  0070CC  26D9               	addwf	fsr2l,f,c
 10544  0070CE  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
 10545  0070D0  22DA               	addwfc	fsr2h,f,c
 10546  0070D2  C003  FFDE         	movff	??_update_current_coil,postinc2
 10547  0070D6  C004  FFDD         	movff	??_update_current_coil+1,postdec2
 10548                           
 10549                           ;stepper_motor.c: 21:     if (stepper_motor -> current_coil == -1) {
 10550  0070DA  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10551  0070DE  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10552  0070E2  28DE               	incf	postinc2,w,c
 10553  0070E4  E106               	bnz	u6461
 10554  0070E6  28DE               	incf	postinc2,w,c
 10555  0070E8  A4D8               	btfss	status,2,c
 10556  0070EA  EF79  F038         	goto	u6461
 10557  0070EE  EF7C  F038         	goto	u6460
 10558  0070F2                     u6461:
 10559  0070F2  FFFF               	dw	65535	; assembler added errata NOP
 10560  0070F4  EF87  F038         	goto	l5198
 10561  0070F8                     u6460:
 10562  0070F8  FFFF               	dw	65535	; assembler added errata NOP
 10563  0070FA                     
 10564                           ;stepper_motor.c: 22:         stepper_motor -> current_coil = 3;
 10565  0070FA  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10566  0070FE  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10567  007102  0E03               	movlw	3
 10568  007104  6EDE               	movwf	postinc2,c
 10569  007106  0E00               	movlw	0
 10570  007108  6EDD               	movwf	postdec2,c
 10571                           
 10572                           ;stepper_motor.c: 23:     } else if(stepper_motor -> current_coil == 4) {
 10573  00710A  EFA0  F038         	goto	l340
 10574  00710E                     l5198:
 10575  00710E  FFFF               	dw	65535	; assembler added errata NOP
 10576  007110  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10577  007114  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10578  007118  0E04               	movlw	4
 10579  00711A  18DE               	xorwf	postinc2,w,c
 10580  00711C  10DE               	iorwf	postinc2,w,c
 10581  00711E  A4D8               	btfss	status,2,c
 10582  007120  EF94  F038         	goto	u6471
 10583  007124  EF97  F038         	goto	u6470
 10584  007128                     u6471:
 10585  007128  FFFF               	dw	65535	; assembler added errata NOP
 10586  00712A  EFA0  F038         	goto	l340
 10587  00712E                     u6470:
 10588  00712E  FFFF               	dw	65535	; assembler added errata NOP
 10589  007130                     
 10590                           ;stepper_motor.c: 24:         stepper_motor -> current_coil = 0;
 10591  007130  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10592  007134  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10593  007138  0E00               	movlw	0
 10594  00713A  6EDE               	movwf	postinc2,c
 10595  00713C  0E00               	movlw	0
 10596  00713E  6EDD               	movwf	postdec2,c
 10597  007140                     l340:
 10598  007140  FFFF               	dw	65535	; assembler added errata NOP
 10599  007142  0012               	return		;funcret
 10600  007144  FFFF               	dw	65535	; errata NOP
 10601  007146                     __end_of_update_current_coil:
 10602                           	callstack 0
 10603                           
 10604 ;; *************** function _turn_on_current_coil *****************
 10605 ;; Defined at:
 10606 ;;		line 13 in file "stepper_motor.c"
 10607 ;; Parameters:    Size  Location     Type
 10608 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 10609 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
 10610 ;; Auto vars:     Size  Location     Type
 10611 ;;		None
 10612 ;; Return value:  Size  Location     Type
 10613 ;;                  1    wreg      void 
 10614 ;; Registers used:
 10615 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10616 ;; Tracked objects:
 10617 ;;		On entry : 0/0
 10618 ;;		On exit  : 0/0
 10619 ;;		Unchanged: 0/0
 10620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10621 ;;      Params:         2       0       0       0       0       0       0
 10622 ;;      Locals:         0       0       0       0       0       0       0
 10623 ;;      Temps:          4       0       0       0       0       0       0
 10624 ;;      Totals:         6       0       0       0       0       0       0
 10625 ;;Total ram usage:        6 bytes
 10626 ;; Hardware stack levels used:    1
 10627 ;; Hardware stack levels required when called:    1
 10628 ;; This function calls:
 10629 ;;		Nothing
 10630 ;; This function is called by:
 10631 ;;		_reach_goal
 10632 ;; This function uses a non-reentrant model
 10633 ;;
 10634                           
 10635                           	psect	text36
 10636  006696                     __ptext36:
 10637                           	callstack 0
 10638  006696                     _turn_on_current_coil:
 10639                           	callstack 0
 10640  006696  FFFF               	dw	65535	; assembler added errata NOP
 10641  006698                     
 10642                           ;stepper_motor.c: 14:     LATB = stepper_motor -> hex_coil_register_values[stepper_motor
      +                           -> current_coil];
 10643  006698  C001  FFD9         	movff	turn_on_current_coil@stepper_motor,fsr2l
 10644  00669C  C002  FFDA         	movff	turn_on_current_coil@stepper_motor+1,fsr2h
 10645  0066A0  CFDE F003          	movff	postinc2,??_turn_on_current_coil
 10646  0066A4  CFDD F004          	movff	postdec2,??_turn_on_current_coil+1
 10647  0066A8  90D8               	bcf	status,0,c
 10648  0066AA  3603               	rlcf	??_turn_on_current_coil^0,f,c
 10649  0066AC  3604               	rlcf	(??_turn_on_current_coil+1)^0,f,c
 10650  0066AE  C001  F005         	movff	turn_on_current_coil@stepper_motor,??_turn_on_current_coil+2
 10651  0066B2  C002  F006         	movff	turn_on_current_coil@stepper_motor+1,??_turn_on_current_coil+3
 10652  0066B6  5003               	movf	??_turn_on_current_coil^0,w,c
 10653  0066B8  2605               	addwf	(??_turn_on_current_coil+2)^0,f,c
 10654  0066BA  5004               	movf	(??_turn_on_current_coil+1)^0,w,c
 10655  0066BC  2206               	addwfc	(??_turn_on_current_coil+3)^0,f,c
 10656  0066BE  0E06               	movlw	6
 10657  0066C0  2405               	addwf	(??_turn_on_current_coil+2)^0,w,c
 10658  0066C2  6ED9               	movwf	fsr2l,c
 10659  0066C4  0E00               	movlw	0
 10660  0066C6  2006               	addwfc	(??_turn_on_current_coil+3)^0,w,c
 10661  0066C8  6EDA               	movwf	fsr2h,c
 10662  0066CA  50DF               	movf	indf2,w,c
 10663  0066CC  6E8A               	movwf	138,c	;volatile
 10664  0066CE  0012               	return		;funcret
 10665  0066D0  FFFF               	dw	65535	; errata NOP
 10666  0066D2                     __end_of_turn_on_current_coil:
 10667                           	callstack 0
 10668                           
 10669 ;; *************** function _lcd_str *****************
 10670 ;; Defined at:
 10671 ;;		line 62 in file "lcd.c"
 10672 ;; Parameters:    Size  Location     Type
 10673 ;;  str             2    2[COMRAM] PTR const unsigned char 
 10674 ;;		 -> main@greet_str(160), STR_9(22), 
 10675 ;; Auto vars:     Size  Location     Type
 10676 ;;  i               1    6[COMRAM] unsigned char 
 10677 ;; Return value:  Size  Location     Type
 10678 ;;                  1    wreg      void 
 10679 ;; Registers used:
 10680 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10681 ;; Tracked objects:
 10682 ;;		On entry : 0/0
 10683 ;;		On exit  : 0/0
 10684 ;;		Unchanged: 0/0
 10685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10686 ;;      Params:         2       0       0       0       0       0       0
 10687 ;;      Locals:         1       0       0       0       0       0       0
 10688 ;;      Temps:          2       0       0       0       0       0       0
 10689 ;;      Totals:         5       0       0       0       0       0       0
 10690 ;;Total ram usage:        5 bytes
 10691 ;; Hardware stack levels used:    1
 10692 ;; Hardware stack levels required when called:    3
 10693 ;; This function calls:
 10694 ;;		_lcd_dat
 10695 ;; This function is called by:
 10696 ;;		_main
 10697 ;; This function uses a non-reentrant model
 10698 ;;
 10699                           
 10700                           	psect	text37
 10701  006D18                     __ptext37:
 10702                           	callstack 0
 10703  006D18                     _lcd_str:
 10704                           	callstack 0
 10705  006D18  FFFF               	dw	65535	; assembler added errata NOP
 10706  006D1A                     
 10707                           ;lcd.c: 62: void lcd_str(const char* str);lcd.c: 63: {;lcd.c: 64:     unsigned char i=0;
 10708  006D1A  0E00               	movlw	0
 10709  006D1C  6E07               	movwf	lcd_str@i^0,c
 10710                           
 10711                           ;lcd.c: 66:     while(str[i] != 0 )
 10712  006D1E  EFAC  F036         	goto	l5400
 10713  006D22                     l5396:
 10714  006D22  FFFF               	dw	65535	; assembler added errata NOP
 10715                           
 10716                           ;lcd.c: 67:     {;lcd.c: 68:       lcd_dat(str[i]);
 10717  006D24  5007               	movf	lcd_str@i^0,w,c
 10718  006D26  2403               	addwf	lcd_str@str^0,w,c
 10719  006D28  6E05               	movwf	??_lcd_str^0,c
 10720  006D2A  0E00               	movlw	0
 10721  006D2C  2004               	addwfc	(lcd_str@str+1)^0,w,c
 10722  006D2E  6E06               	movwf	(??_lcd_str+1)^0,c
 10723  006D30  C005  FFF6         	movff	??_lcd_str,tblptrl
 10724  006D34  C006  FFF7         	movff	??_lcd_str+1,tblptrh
 10725  006D38  6AF8               	clrf	tblptru,c
 10726  006D3A  0E05               	movlw	(high __ramtop+-1)
 10727  006D3C  64F7               	cpfsgt	tblptrh,c
 10728  006D3E  D004               	bra	u6617
 10729  006D40  0008               	tblrd		*
 10730  006D42  FFFF               	dw	65535	; errata NOP
 10731  006D44  50F5               	movf	tablat,w,c
 10732  006D46  D005               	bra	u6610
 10733  006D48                     u6617:
 10734  006D48  CFF6 FFE1          	movff	tblptrl,fsr1l
 10735  006D4C  CFF7 FFE2          	movff	tblptrh,fsr1h
 10736  006D50  50E7               	movf	indf1,w,c
 10737  006D52                     u6610:
 10738  006D52  ECD6  F032         	call	_lcd_dat
 10739  006D56                     
 10740                           ;lcd.c: 69:       i++;
 10741  006D56  2A07               	incf	lcd_str@i^0,f,c
 10742  006D58                     l5400:
 10743  006D58  FFFF               	dw	65535	; assembler added errata NOP
 10744                           
 10745                           ;lcd.c: 66:     while(str[i] != 0 )
 10746  006D5A  5007               	movf	lcd_str@i^0,w,c
 10747  006D5C  2403               	addwf	lcd_str@str^0,w,c
 10748  006D5E  6E05               	movwf	??_lcd_str^0,c
 10749  006D60  0E00               	movlw	0
 10750  006D62  2004               	addwfc	(lcd_str@str+1)^0,w,c
 10751  006D64  6E06               	movwf	(??_lcd_str+1)^0,c
 10752  006D66  C005  FFF6         	movff	??_lcd_str,tblptrl
 10753  006D6A  C006  FFF7         	movff	??_lcd_str+1,tblptrh
 10754  006D6E  6AF8               	clrf	tblptru,c
 10755  006D70  0E05               	movlw	(high __ramtop+-1)
 10756  006D72  64F7               	cpfsgt	tblptrh,c
 10757  006D74  D004               	bra	u6627
 10758  006D76  0008               	tblrd		*
 10759  006D78  FFFF               	dw	65535	; errata NOP
 10760  006D7A  50F5               	movf	tablat,w,c
 10761  006D7C  D005               	bra	u6620
 10762  006D7E                     u6627:
 10763  006D7E  CFF6 FFE1          	movff	tblptrl,fsr1l
 10764  006D82  CFF7 FFE2          	movff	tblptrh,fsr1h
 10765  006D86  50E7               	movf	indf1,w,c
 10766  006D88                     u6620:
 10767  006D88  0900               	iorlw	0
 10768  006D8A  A4D8               	btfss	status,2,c
 10769  006D8C  EFCA  F036         	goto	u6631
 10770  006D90  EFCD  F036         	goto	u6630
 10771  006D94                     u6631:
 10772  006D94  FFFF               	dw	65535	; assembler added errata NOP
 10773  006D96  EF91  F036         	goto	l5396
 10774  006D9A                     u6630:
 10775  006D9A  FFFF               	dw	65535	; assembler added errata NOP
 10776  006D9C  0012               	return		;funcret
 10777  006D9E  FFFF               	dw	65535	; errata NOP
 10778  006DA0                     __end_of_lcd_str:
 10779                           	callstack 0
 10780                           
 10781 ;; *************** function _lcd_dat *****************
 10782 ;; Defined at:
 10783 ;;		line 21 in file "lcd.c"
 10784 ;; Parameters:    Size  Location     Type
 10785 ;;  val             1    wreg     unsigned char 
 10786 ;; Auto vars:     Size  Location     Type
 10787 ;;  val             1    1[COMRAM] unsigned char 
 10788 ;; Return value:  Size  Location     Type
 10789 ;;                  1    wreg      void 
 10790 ;; Registers used:
 10791 ;;		wreg, status,2, cstack
 10792 ;; Tracked objects:
 10793 ;;		On entry : 0/0
 10794 ;;		On exit  : 0/0
 10795 ;;		Unchanged: 0/0
 10796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10797 ;;      Params:         0       0       0       0       0       0       0
 10798 ;;      Locals:         1       0       0       0       0       0       0
 10799 ;;      Temps:          0       0       0       0       0       0       0
 10800 ;;      Totals:         1       0       0       0       0       0       0
 10801 ;;Total ram usage:        1 bytes
 10802 ;; Hardware stack levels used:    1
 10803 ;; Hardware stack levels required when called:    2
 10804 ;; This function calls:
 10805 ;;		_lcd_wr
 10806 ;; This function is called by:
 10807 ;;		_lcd_str
 10808 ;;		_state_translator_fpga_to_micro
 10809 ;; This function uses a non-reentrant model
 10810 ;;
 10811                           
 10812                           	psect	text38
 10813  0065AC                     __ptext38:
 10814                           	callstack 0
 10815  0065AC                     _lcd_dat:
 10816                           	callstack 0
 10817  0065AC  FFFF               	dw	65535	; assembler added errata NOP
 10818                           
 10819                           ;incstack = 0
 10820                           ;lcd_dat@val stored from wreg
 10821  0065AE  6E02               	movwf	lcd_dat@val^0,c
 10822  0065B0                     
 10823                           ;lcd.c: 21: void lcd_dat(unsigned char val);lcd.c: 22: {;lcd.c: 23:  PORTEbits.RE1=1;
 10824  0065B0  8284               	bsf	132,1,c	;volatile
 10825  0065B2                     
 10826                           ;lcd.c: 24:     lcd_wr(val);
 10827  0065B2  5002               	movf	lcd_dat@val^0,w,c
 10828  0065B4  ECFA  F01F         	call	_lcd_wr
 10829  0065B8                     
 10830                           ;lcd.c: 25:     PORTEbits.RE2=1;
 10831  0065B8  8484               	bsf	132,2,c	;volatile
 10832  0065BA                     
 10833                           ;lcd.c: 26:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10834  0065BA  0EC8               	movlw	200
 10835  0065BC                     u7287:
 10836  0065BC  FFFF               	dw	65535	; errata NOP
 10837  0065BE  F000               	nop	
 10838  0065C0  2EE8               	decfsz	wreg,f,c
 10839  0065C2  D7FC               	bra	u7287
 10840  0065C4                     
 10841                           ;lcd.c: 27:     PORTEbits.RE1=0;
 10842  0065C4  9284               	bcf	132,1,c	;volatile
 10843  0065C6                     
 10844                           ;lcd.c: 28:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10845  0065C6  0EC8               	movlw	200
 10846  0065C8                     u7297:
 10847  0065C8  FFFF               	dw	65535	; errata NOP
 10848  0065CA  F000               	nop	
 10849  0065CC  2EE8               	decfsz	wreg,f,c
 10850  0065CE  D7FC               	bra	u7297
 10851  0065D0                     
 10852                           ;lcd.c: 29:  PORTEbits.RE1=1;
 10853  0065D0  8284               	bsf	132,1,c	;volatile
 10854  0065D2  0012               	return		;funcret
 10855  0065D4  FFFF               	dw	65535	; errata NOP
 10856  0065D6                     __end_of_lcd_dat:
 10857                           	callstack 0
 10858                           
 10859 ;; *************** function _lcd_init *****************
 10860 ;; Defined at:
 10861 ;;		line 32 in file "lcd.c"
 10862 ;; Parameters:    Size  Location     Type
 10863 ;;		None
 10864 ;; Auto vars:     Size  Location     Type
 10865 ;;		None
 10866 ;; Return value:  Size  Location     Type
 10867 ;;                  1    wreg      void 
 10868 ;; Registers used:
 10869 ;;		wreg, status,2, cstack
 10870 ;; Tracked objects:
 10871 ;;		On entry : 0/0
 10872 ;;		On exit  : 0/0
 10873 ;;		Unchanged: 0/0
 10874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10875 ;;      Params:         0       0       0       0       0       0       0
 10876 ;;      Locals:         0       0       0       0       0       0       0
 10877 ;;      Temps:          1       0       0       0       0       0       0
 10878 ;;      Totals:         1       0       0       0       0       0       0
 10879 ;;Total ram usage:        1 bytes
 10880 ;; Hardware stack levels used:    1
 10881 ;; Hardware stack levels required when called:    3
 10882 ;; This function calls:
 10883 ;;		_lcd_cmd
 10884 ;; This function is called by:
 10885 ;;		_main
 10886 ;; This function uses a non-reentrant model
 10887 ;;
 10888                           
 10889                           	psect	text39
 10890  006C9A                     __ptext39:
 10891                           	callstack 0
 10892  006C9A                     _lcd_init:
 10893                           	callstack 0
 10894  006C9A  FFFF               	dw	65535	; assembler added errata NOP
 10895  006C9C  6A83               	clrf	3971,c	;# 
 10896  006C9E  0E00               	movlw	0	;# 
 10897  006CA0  6E95               	movwf	3989,c	;# 
 10898  006CA2  6A84               	clrf	3972,c	;# 
 10899  006CA4  0E00               	movlw	0	;# 
 10900  006CA6  6E96               	movwf	3990,c	;# 
 10901                           
 10902                           ;lcd.c: 45:  PORTEbits.RE1=0;
 10903  006CA8  9284               	bcf	132,1,c	;volatile
 10904                           
 10905                           ;lcd.c: 46:  PORTEbits.RE2=0;
 10906  006CAA  9484               	bcf	132,2,c	;volatile
 10907  006CAC                     
 10908                           ;lcd.c: 47:  _delay((unsigned long)((30)*(4000000/4000.0)));
 10909  006CAC  0E1E               	movlw	30
 10910  006CAE  6E03               	movwf	??_lcd_init^0,c
 10911  006CB0  0E3C               	movlw	60
 10912  006CB2                     u7307:
 10913  006CB2  FFFF               	dw	65535	; errata NOP
 10914  006CB4  2EE8               	decfsz	wreg,f,c
 10915  006CB6  D7FD               	bra	u7307
 10916  006CB8  2E03               	decfsz	??_lcd_init^0,f,c
 10917  006CBA  D7FB               	bra	u7307
 10918  006CBC  D000               	nop2	
 10919  006CBE                     
 10920                           ;lcd.c: 48:  PORTEbits.RE1=1;
 10921  006CBE  8284               	bsf	132,1,c	;volatile
 10922  006CC0                     
 10923                           ;lcd.c: 50:  lcd_cmd(0x38);
 10924  006CC0  0E38               	movlw	56
 10925  006CC2  ECC1  F032         	call	_lcd_cmd
 10926  006CC6                     
 10927                           ;lcd.c: 51:  _delay((unsigned long)((30)*(4000000/4000.0)));
 10928  006CC6  0E1E               	movlw	30
 10929  006CC8  6E03               	movwf	??_lcd_init^0,c
 10930  006CCA  0E3C               	movlw	60
 10931  006CCC                     u7317:
 10932  006CCC  FFFF               	dw	65535	; errata NOP
 10933  006CCE  2EE8               	decfsz	wreg,f,c
 10934  006CD0  D7FD               	bra	u7317
 10935  006CD2  2E03               	decfsz	??_lcd_init^0,f,c
 10936  006CD4  D7FB               	bra	u7317
 10937  006CD6  D000               	nop2	
 10938                           
 10939                           ;lcd.c: 52:  lcd_cmd(0x38);
 10940  006CD8  0E38               	movlw	56
 10941  006CDA  ECC1  F032         	call	_lcd_cmd
 10942  006CDE                     
 10943                           ;lcd.c: 53:     _delay((unsigned long)((30)*(4000000/4000.0)));
 10944  006CDE  0E1E               	movlw	30
 10945  006CE0  6E03               	movwf	??_lcd_init^0,c
 10946  006CE2  0E3C               	movlw	60
 10947  006CE4                     u7327:
 10948  006CE4  FFFF               	dw	65535	; errata NOP
 10949  006CE6  2EE8               	decfsz	wreg,f,c
 10950  006CE8  D7FD               	bra	u7327
 10951  006CEA  2E03               	decfsz	??_lcd_init^0,f,c
 10952  006CEC  D7FB               	bra	u7327
 10953  006CEE  D000               	nop2	
 10954  006CF0                     
 10955                           ;lcd.c: 54:  lcd_cmd(0x38);
 10956  006CF0  0E38               	movlw	56
 10957  006CF2  ECC1  F032         	call	_lcd_cmd
 10958  006CF6                     
 10959                           ;lcd.c: 55:  lcd_cmd(0x08);
 10960  006CF6  0E08               	movlw	8
 10961  006CF8  ECC1  F032         	call	_lcd_cmd
 10962  006CFC                     
 10963                           ;lcd.c: 56:  lcd_cmd(0x0F);
 10964  006CFC  0E0F               	movlw	15
 10965  006CFE  ECC1  F032         	call	_lcd_cmd
 10966  006D02                     
 10967                           ;lcd.c: 57:  lcd_cmd(0x01);
 10968  006D02  0E01               	movlw	1
 10969  006D04  ECC1  F032         	call	_lcd_cmd
 10970  006D08                     
 10971                           ;lcd.c: 58:  lcd_cmd(0x38);
 10972  006D08  0E38               	movlw	56
 10973  006D0A  ECC1  F032         	call	_lcd_cmd
 10974  006D0E                     
 10975                           ;lcd.c: 59:     lcd_cmd(0x80);
 10976  006D0E  0E80               	movlw	128
 10977  006D10  ECC1  F032         	call	_lcd_cmd
 10978  006D14  0012               	return		;funcret
 10979  006D16  FFFF               	dw	65535	; errata NOP
 10980  006D18                     __end_of_lcd_init:
 10981                           	callstack 0
 10982                           
 10983 ;; *************** function _lcd_cmd *****************
 10984 ;; Defined at:
 10985 ;;		line 10 in file "lcd.c"
 10986 ;; Parameters:    Size  Location     Type
 10987 ;;  val             1    wreg     unsigned char 
 10988 ;; Auto vars:     Size  Location     Type
 10989 ;;  val             1    1[COMRAM] unsigned char 
 10990 ;; Return value:  Size  Location     Type
 10991 ;;                  1    wreg      void 
 10992 ;; Registers used:
 10993 ;;		wreg, status,2, cstack
 10994 ;; Tracked objects:
 10995 ;;		On entry : 0/0
 10996 ;;		On exit  : 0/0
 10997 ;;		Unchanged: 0/0
 10998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10999 ;;      Params:         0       0       0       0       0       0       0
 11000 ;;      Locals:         1       0       0       0       0       0       0
 11001 ;;      Temps:          0       0       0       0       0       0       0
 11002 ;;      Totals:         1       0       0       0       0       0       0
 11003 ;;Total ram usage:        1 bytes
 11004 ;; Hardware stack levels used:    1
 11005 ;; Hardware stack levels required when called:    2
 11006 ;; This function calls:
 11007 ;;		_lcd_wr
 11008 ;; This function is called by:
 11009 ;;		_main
 11010 ;;		_lcd_init
 11011 ;; This function uses a non-reentrant model
 11012 ;;
 11013                           
 11014                           	psect	text40
 11015  006582                     __ptext40:
 11016                           	callstack 0
 11017  006582                     _lcd_cmd:
 11018                           	callstack 0
 11019  006582  FFFF               	dw	65535	; assembler added errata NOP
 11020                           
 11021                           ;incstack = 0
 11022                           ;lcd_cmd@val stored from wreg
 11023  006584  6E02               	movwf	lcd_cmd@val^0,c
 11024  006586                     
 11025                           ;lcd.c: 10: void lcd_cmd(unsigned char val);lcd.c: 11: {;lcd.c: 12:  PORTEbits.RE1=1;
 11026  006586  8284               	bsf	132,1,c	;volatile
 11027  006588                     
 11028                           ;lcd.c: 13:     lcd_wr(val);
 11029  006588  5002               	movf	lcd_cmd@val^0,w,c
 11030  00658A  ECFA  F01F         	call	_lcd_wr
 11031  00658E                     
 11032                           ;lcd.c: 14:     PORTEbits.RE2=0;
 11033  00658E  9484               	bcf	132,2,c	;volatile
 11034  006590                     
 11035                           ;lcd.c: 15:     _delay((unsigned long)((1)*(4000000/4000.0)));
 11036  006590  0EC8               	movlw	200
 11037  006592                     u7337:
 11038  006592  FFFF               	dw	65535	; errata NOP
 11039  006594  F000               	nop	
 11040  006596  2EE8               	decfsz	wreg,f,c
 11041  006598  D7FC               	bra	u7337
 11042  00659A                     
 11043                           ;lcd.c: 16:     PORTEbits.RE1=0;
 11044  00659A  9284               	bcf	132,1,c	;volatile
 11045  00659C                     
 11046                           ;lcd.c: 17:     _delay((unsigned long)((1)*(4000000/4000.0)));
 11047  00659C  0EC8               	movlw	200
 11048  00659E                     u7347:
 11049  00659E  FFFF               	dw	65535	; errata NOP
 11050  0065A0  F000               	nop	
 11051  0065A2  2EE8               	decfsz	wreg,f,c
 11052  0065A4  D7FC               	bra	u7347
 11053  0065A6                     
 11054                           ;lcd.c: 18:  PORTEbits.RE1=1;
 11055  0065A6  8284               	bsf	132,1,c	;volatile
 11056  0065A8  0012               	return		;funcret
 11057  0065AA  FFFF               	dw	65535	; errata NOP
 11058  0065AC                     __end_of_lcd_cmd:
 11059                           	callstack 0
 11060                           
 11061 ;; *************** function _lcd_wr *****************
 11062 ;; Defined at:
 11063 ;;		line 5 in file "lcd.c"
 11064 ;; Parameters:    Size  Location     Type
 11065 ;;  val             1    wreg     unsigned char 
 11066 ;; Auto vars:     Size  Location     Type
 11067 ;;  val             1    0[COMRAM] unsigned char 
 11068 ;; Return value:  Size  Location     Type
 11069 ;;                  1    wreg      void 
 11070 ;; Registers used:
 11071 ;;		wreg
 11072 ;; Tracked objects:
 11073 ;;		On entry : 0/0
 11074 ;;		On exit  : 0/0
 11075 ;;		Unchanged: 0/0
 11076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11077 ;;      Params:         0       0       0       0       0       0       0
 11078 ;;      Locals:         1       0       0       0       0       0       0
 11079 ;;      Temps:          0       0       0       0       0       0       0
 11080 ;;      Totals:         1       0       0       0       0       0       0
 11081 ;;Total ram usage:        1 bytes
 11082 ;; Hardware stack levels used:    1
 11083 ;; Hardware stack levels required when called:    1
 11084 ;; This function calls:
 11085 ;;		Nothing
 11086 ;; This function is called by:
 11087 ;;		_lcd_cmd
 11088 ;;		_lcd_dat
 11089 ;; This function uses a non-reentrant model
 11090 ;;
 11091                           
 11092                           	psect	text41
 11093  003FF4                     __ptext41:
 11094                           	callstack 0
 11095  003FF4                     _lcd_wr:
 11096                           	callstack 0
 11097  003FF4  FFFF               	dw	65535	; assembler added errata NOP
 11098                           
 11099                           ;incstack = 0
 11100                           ;lcd_wr@val stored from wreg
 11101  003FF6  6E01               	movwf	lcd_wr@val^0,c
 11102  003FF8                     
 11103                           ;lcd.c: 5: void lcd_wr(unsigned char val);lcd.c: 6: {;lcd.c: 7:     PORTD=val;
 11104  003FF8  C001  FF83         	movff	lcd_wr@val,3971	;volatile
 11105  003FFC  0012               	return		;funcret
 11106  003FFE  FFFF               	dw	65535	; errata NOP
 11107  004000                     __end_of_lcd_wr:
 11108                           	callstack 0
 11109                           
 11110 ;; *************** function _init_timer_2 *****************
 11111 ;; Defined at:
 11112 ;;		line 27 in file "timer.c"
 11113 ;; Parameters:    Size  Location     Type
 11114 ;;		None
 11115 ;; Auto vars:     Size  Location     Type
 11116 ;;		None
 11117 ;; Return value:  Size  Location     Type
 11118 ;;                  1    wreg      void 
 11119 ;; Registers used:
 11120 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11121 ;; Tracked objects:
 11122 ;;		On entry : 0/0
 11123 ;;		On exit  : 0/0
 11124 ;;		Unchanged: 0/0
 11125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11126 ;;      Params:         0       0       0       0       0       0       0
 11127 ;;      Locals:         0       4       0       0       0       0       0
 11128 ;;      Temps:          0       0       0       0       0       0       0
 11129 ;;      Totals:         0       4       0       0       0       0       0
 11130 ;;Total ram usage:        4 bytes
 11131 ;; Hardware stack levels used:    1
 11132 ;; Hardware stack levels required when called:    2
 11133 ;; This function calls:
 11134 ;;		___fladd
 11135 ;;		___fldiv
 11136 ;;		___flmul
 11137 ;;		___fltol
 11138 ;; This function is called by:
 11139 ;;		_main
 11140 ;; This function uses a non-reentrant model
 11141 ;;
 11142                           
 11143                           	psect	text42
 11144  006F9E                     __ptext42:
 11145                           	callstack 0
 11146  006F9E                     _init_timer_2:
 11147                           	callstack 0
 11148  006F9E  FFFF               	dw	65535	; assembler added errata NOP
 11149  006FA0                     
 11150                           ;timer.c: 29:     T2CON = 0;
 11151  006FA0  0E00               	movlw	0
 11152  006FA2  6ECA               	movwf	202,c	;volatile
 11153                           
 11154                           ;timer.c: 30:     TMR2 = 0;
 11155  006FA4  0E00               	movlw	0
 11156  006FA6  6ECC               	movwf	204,c	;volatile
 11157  006FA8                     
 11158                           ;timer.c: 32:     T2CONbits.TMR2ON = 1;
 11159  006FA8  84CA               	bsf	202,2,c	;volatile
 11160  006FAA                     
 11161                           ;timer.c: 33:     T2CONbits.T2CKPS0 = 1;
 11162  006FAA  80CA               	bsf	202,0,c	;volatile
 11163  006FAC                     
 11164                           ;timer.c: 34:     T2CONbits.T2CKPS1 = 1;
 11165  006FAC  82CA               	bsf	202,1,c	;volatile
 11166  006FAE                     
 11167                           ;timer.c: 36:     PR2 = (uint8_t) (((pwm_period / (4*t_osc*tmr2_prescaler)) - 1)*4);
 11168  006FAE  0E00               	movlw	0
 11169  006FB0  6E63               	movwf	___fladd@a^0,c
 11170  006FB2  0E00               	movlw	0
 11171  006FB4  6E64               	movwf	(___fladd@a+1)^0,c
 11172  006FB6  0E80               	movlw	128
 11173  006FB8  6E65               	movwf	(___fladd@a+2)^0,c
 11174  006FBA  0EBF               	movlw	191
 11175  006FBC  6E66               	movwf	(___fladd@a+3)^0,c
 11176  006FBE  0EBD               	movlw	189
 11177  006FC0  6E31               	movwf	___flmul@a^0,c
 11178  006FC2  0E37               	movlw	55
 11179  006FC4  6E32               	movwf	(___flmul@a+1)^0,c
 11180  006FC6  0E86               	movlw	134
 11181  006FC8  6E33               	movwf	(___flmul@a+2)^0,c
 11182  006FCA  0E36               	movlw	54
 11183  006FCC  6E34               	movwf	(___flmul@a+3)^0,c
 11184  006FCE  C0ED  F02D         	movff	_tmr2_prescaler,___flmul@b
 11185  006FD2  C0EE  F02E         	movff	_tmr2_prescaler+1,___flmul@b+1
 11186  006FD6  C0EF  F02F         	movff	_tmr2_prescaler+2,___flmul@b+2
 11187  006FDA  C0F0  F030         	movff	_tmr2_prescaler+3,___flmul@b+3
 11188  006FDE  ECC3  F010         	call	___flmul	;wreg free
 11189  006FE2  C02D  F04A         	movff	?___flmul,___fldiv@a
 11190  006FE6  C02E  F04B         	movff	?___flmul+1,___fldiv@a+1
 11191  006FEA  C02F  F04C         	movff	?___flmul+2,___fldiv@a+2
 11192  006FEE  C030  F04D         	movff	?___flmul+3,___fldiv@a+3
 11193  006FF2  0E0A               	movlw	10
 11194  006FF4  6E46               	movwf	___fldiv@b^0,c
 11195  006FF6  0ED7               	movlw	215
 11196  006FF8  6E47               	movwf	(___fldiv@b+1)^0,c
 11197  006FFA  0EA3               	movlw	163
 11198  006FFC  6E48               	movwf	(___fldiv@b+2)^0,c
 11199  006FFE  0E3C               	movlw	60
 11200  007000  6E49               	movwf	(___fldiv@b+3)^0,c
 11201  007002  EC15  F013         	call	___fldiv	;wreg free
 11202  007006  C046  F05F         	movff	?___fldiv,___fladd@b
 11203  00700A  C047  F060         	movff	?___fldiv+1,___fladd@b+1
 11204  00700E  C048  F061         	movff	?___fldiv+2,___fladd@b+2
 11205  007012  C049  F062         	movff	?___fldiv+3,___fladd@b+3
 11206  007016  ECEF  F00D         	call	___fladd	;wreg free
 11207  00701A  C05F  F0D4         	movff	?___fladd,_init_timer_2$2136
 11208  00701E  C060  F0D5         	movff	?___fladd+1,_init_timer_2$2136+1
 11209  007022  C061  F0D6         	movff	?___fladd+2,_init_timer_2$2136+2
 11210  007026  C062  F0D7         	movff	?___fladd+3,_init_timer_2$2136+3
 11211  00702A                     
 11212                           ;timer.c: 36:     PR2 = (uint8_t) (((pwm_period / (4*t_osc*tmr2_prescaler)) - 1)*4);
 11213  00702A  0E00               	movlw	0
 11214  00702C  6E31               	movwf	___flmul@a^0,c
 11215  00702E  0E00               	movlw	0
 11216  007030  6E32               	movwf	(___flmul@a+1)^0,c
 11217  007032  0E80               	movlw	128
 11218  007034  6E33               	movwf	(___flmul@a+2)^0,c
 11219  007036  0E40               	movlw	64
 11220  007038  6E34               	movwf	(___flmul@a+3)^0,c
 11221  00703A  C0D4  F02D         	movff	_init_timer_2$2136,___flmul@b
 11222  00703E  C0D5  F02E         	movff	_init_timer_2$2136+1,___flmul@b+1
 11223  007042  C0D6  F02F         	movff	_init_timer_2$2136+2,___flmul@b+2
 11224  007046  C0D7  F030         	movff	_init_timer_2$2136+3,___flmul@b+3
 11225  00704A  ECC3  F010         	call	___flmul	;wreg free
 11226  00704E  C02D  F0CA         	movff	?___flmul,___fltol@f1
 11227  007052  C02E  F0CB         	movff	?___flmul+1,___fltol@f1+1
 11228  007056  C02F  F0CC         	movff	?___flmul+2,___fltol@f1+2
 11229  00705A  C030  F0CD         	movff	?___flmul+3,___fltol@f1+3
 11230  00705E  EC7F  F03C         	call	___fltol	;wreg free
 11231  007062  0100               	movlb	0	; () banked
 11232  007064  51CA               	movf	?___fltol& (0+255),w,b
 11233  007066  6ECB               	movwf	203,c	;volatile
 11234  007068                     
 11235                           ; BSR set to: 0
 11236  007068  0012               	return		;funcret
 11237  00706A  FFFF               	dw	65535	; errata NOP
 11238  00706C                     __end_of_init_timer_2:
 11239                           	callstack 0
 11240                           
 11241 ;; *************** function _init_timer_0 *****************
 11242 ;; Defined at:
 11243 ;;		line 11 in file "timer.c"
 11244 ;; Parameters:    Size  Location     Type
 11245 ;;		None
 11246 ;; Auto vars:     Size  Location     Type
 11247 ;;		None
 11248 ;; Return value:  Size  Location     Type
 11249 ;;                  1    wreg      void 
 11250 ;; Registers used:
 11251 ;;		wreg, status,2
 11252 ;; Tracked objects:
 11253 ;;		On entry : 0/0
 11254 ;;		On exit  : 0/0
 11255 ;;		Unchanged: 0/0
 11256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11257 ;;      Params:         0       0       0       0       0       0       0
 11258 ;;      Locals:         0       0       0       0       0       0       0
 11259 ;;      Temps:          0       0       0       0       0       0       0
 11260 ;;      Totals:         0       0       0       0       0       0       0
 11261 ;;Total ram usage:        0 bytes
 11262 ;; Hardware stack levels used:    1
 11263 ;; Hardware stack levels required when called:    1
 11264 ;; This function calls:
 11265 ;;		Nothing
 11266 ;; This function is called by:
 11267 ;;		_main
 11268 ;; This function uses a non-reentrant model
 11269 ;;
 11270                           
 11271                           	psect	text43
 11272  0064EA                     __ptext43:
 11273                           	callstack 0
 11274  0064EA                     _init_timer_0:
 11275                           	callstack 0
 11276  0064EA  FFFF               	dw	65535	; assembler added errata NOP
 11277  0064EC                     
 11278                           ;timer.c: 13:     T0CON = 0;
 11279  0064EC  0E00               	movlw	0
 11280  0064EE  6ED5               	movwf	213,c	;volatile
 11281                           
 11282                           ;timer.c: 15:     TMR0L = 0x96;
 11283  0064F0  0E96               	movlw	150
 11284  0064F2  6ED6               	movwf	214,c	;volatile
 11285                           
 11286                           ;timer.c: 16:     TMR0H = 0x98;
 11287  0064F4  0E98               	movlw	152
 11288  0064F6  6ED7               	movwf	215,c	;volatile
 11289  0064F8                     
 11290                           ;timer.c: 17:     INTCONbits.TMR0IE = 1;
 11291  0064F8  8AF2               	bsf	242,5,c	;volatile
 11292  0064FA                     
 11293                           ;timer.c: 18:     T0CONbits.T08BIT = 0;
 11294  0064FA  9CD5               	bcf	213,6,c	;volatile
 11295  0064FC                     
 11296                           ;timer.c: 19:     T0CONbits.T0CS = 0;
 11297  0064FC  9AD5               	bcf	213,5,c	;volatile
 11298  0064FE                     
 11299                           ;timer.c: 20:     T0CONbits.PSA = 0;
 11300  0064FE  96D5               	bcf	213,3,c	;volatile
 11301  006500                     
 11302                           ;timer.c: 21:     T0CONbits.T0PS0 = 1;
 11303  006500  80D5               	bsf	213,0,c	;volatile
 11304  006502                     
 11305                           ;timer.c: 22:     T0CONbits.T0PS1 = 1;
 11306  006502  82D5               	bsf	213,1,c	;volatile
 11307  006504                     
 11308                           ;timer.c: 23:     T0CONbits.T0PS2 = 1;
 11309  006504  84D5               	bsf	213,2,c	;volatile
 11310  006506                     
 11311                           ;timer.c: 24:     T0CONbits.TMR0ON = 1;
 11312  006506  8ED5               	bsf	213,7,c	;volatile
 11313  006508  0012               	return		;funcret
 11314  00650A  FFFF               	dw	65535	; errata NOP
 11315  00650C                     __end_of_init_timer_0:
 11316                           	callstack 0
 11317                           
 11318 ;; *************** function _init_stepper *****************
 11319 ;; Defined at:
 11320 ;;		line 4 in file "stepper_motor.c"
 11321 ;; Parameters:    Size  Location     Type
 11322 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 11323 ;;		 -> joint_dilutor_stepper(14), end_effector_stepper(14), joint_stepper(14), 
 11324 ;;  current_coil    2    2[COMRAM] int 
 11325 ;;  step_counter    2    4[COMRAM] int 
 11326 ;;  direction       2    6[COMRAM] int 
 11327 ;;  hex_coil_reg    2    8[COMRAM] PTR int 
 11328 ;;		 -> hex_end_effector_values(8), hex_joint_values(8), 
 11329 ;; Auto vars:     Size  Location     Type
 11330 ;;  i               2   14[COMRAM] int 
 11331 ;; Return value:  Size  Location     Type
 11332 ;;                  1    wreg      void 
 11333 ;; Registers used:
 11334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11335 ;; Tracked objects:
 11336 ;;		On entry : 0/0
 11337 ;;		On exit  : 0/0
 11338 ;;		Unchanged: 0/0
 11339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11340 ;;      Params:        10       0       0       0       0       0       0
 11341 ;;      Locals:         2       0       0       0       0       0       0
 11342 ;;      Temps:          4       0       0       0       0       0       0
 11343 ;;      Totals:        16       0       0       0       0       0       0
 11344 ;;Total ram usage:       16 bytes
 11345 ;; Hardware stack levels used:    1
 11346 ;; Hardware stack levels required when called:    1
 11347 ;; This function calls:
 11348 ;;		Nothing
 11349 ;; This function is called by:
 11350 ;;		_main
 11351 ;; This function uses a non-reentrant model
 11352 ;;
 11353                           
 11354                           	psect	text44
 11355  006E2A                     __ptext44:
 11356                           	callstack 0
 11357  006E2A                     _init_stepper:
 11358                           	callstack 0
 11359  006E2A  FFFF               	dw	65535	; assembler added errata NOP
 11360  006E2C                     
 11361                           ;stepper_motor.c: 5:     for (int i = 0; i < 4; i++) {
 11362  006E2C  0E00               	movlw	0
 11363  006E2E  6E10               	movwf	(init_stepper@i+1)^0,c
 11364  006E30  0E00               	movlw	0
 11365  006E32  6E0F               	movwf	init_stepper@i^0,c
 11366  006E34                     l5358:
 11367  006E34  FFFF               	dw	65535	; assembler added errata NOP
 11368                           
 11369                           ;stepper_motor.c: 6:        stepper_motor -> hex_coil_register_values[i] = hex_coil_regi
      +                          ster_values[i];
 11370  006E36  90D8               	bcf	status,0,c
 11371  006E38  340F               	rlcf	init_stepper@i^0,w,c
 11372  006E3A  6ED9               	movwf	fsr2l,c
 11373  006E3C  3410               	rlcf	(init_stepper@i+1)^0,w,c
 11374  006E3E  6EDA               	movwf	fsr2h,c
 11375  006E40  5009               	movf	init_stepper@hex_coil_register_values^0,w,c
 11376  006E42  26D9               	addwf	fsr2l,f,c
 11377  006E44  500A               	movf	(init_stepper@hex_coil_register_values+1)^0,w,c
 11378  006E46  22DA               	addwfc	fsr2h,f,c
 11379  006E48  C00F  F00B         	movff	init_stepper@i,??_init_stepper
 11380  006E4C  C010  F00C         	movff	init_stepper@i+1,??_init_stepper+1
 11381  006E50  90D8               	bcf	status,0,c
 11382  006E52  360B               	rlcf	??_init_stepper^0,f,c
 11383  006E54  360C               	rlcf	(??_init_stepper+1)^0,f,c
 11384  006E56  C001  F00D         	movff	init_stepper@stepper_motor,??_init_stepper+2
 11385  006E5A  C002  F00E         	movff	init_stepper@stepper_motor+1,??_init_stepper+3
 11386  006E5E  500B               	movf	??_init_stepper^0,w,c
 11387  006E60  260D               	addwf	(??_init_stepper+2)^0,f,c
 11388  006E62  500C               	movf	(??_init_stepper+1)^0,w,c
 11389  006E64  220E               	addwfc	(??_init_stepper+3)^0,f,c
 11390  006E66  0E06               	movlw	6
 11391  006E68  240D               	addwf	(??_init_stepper+2)^0,w,c
 11392  006E6A  6EE1               	movwf	fsr1l,c
 11393  006E6C  0E00               	movlw	0
 11394  006E6E  200E               	addwfc	(??_init_stepper+3)^0,w,c
 11395  006E70  6EE2               	movwf	fsr1h,c
 11396  006E72  CFDE FFE6          	movff	postinc2,postinc1
 11397  006E76  CFDD FFE5          	movff	postdec2,postdec1
 11398  006E7A                     
 11399                           ;stepper_motor.c: 7:     }
 11400  006E7A  4A0F               	infsnz	init_stepper@i^0,f,c
 11401  006E7C  2A10               	incf	(init_stepper@i+1)^0,f,c
 11402  006E7E  BE10               	btfsc	(init_stepper@i+1)^0,7,c
 11403  006E80  EF4B  F037         	goto	u6601
 11404  006E84  5010               	movf	(init_stepper@i+1)^0,w,c
 11405  006E86  E10A               	bnz	u6600
 11406  006E88  0E04               	movlw	4
 11407  006E8A  5C0F               	subwf	init_stepper@i^0,w,c
 11408  006E8C  A0D8               	btfss	status,0,c
 11409  006E8E  EF4B  F037         	goto	u6601
 11410  006E92  EF4E  F037         	goto	u6600
 11411  006E96                     u6601:
 11412  006E96  FFFF               	dw	65535	; assembler added errata NOP
 11413  006E98  EF1A  F037         	goto	l5358
 11414  006E9C                     u6600:
 11415  006E9C  FFFF               	dw	65535	; assembler added errata NOP
 11416  006E9E                     
 11417                           ;stepper_motor.c: 8:     stepper_motor -> current_coil = current_coil;
 11418  006E9E  C001  FFD9         	movff	init_stepper@stepper_motor,fsr2l
 11419  006EA2  C002  FFDA         	movff	init_stepper@stepper_motor+1,fsr2h
 11420  006EA6  C003  FFDE         	movff	init_stepper@current_coil,postinc2
 11421  006EAA  C004  FFDD         	movff	init_stepper@current_coil+1,postdec2
 11422  006EAE                     
 11423                           ;stepper_motor.c: 9:     stepper_motor -> step_counter = step_counter;
 11424  006EAE  EE20 F002          	lfsr	2,2
 11425  006EB2  5001               	movf	init_stepper@stepper_motor^0,w,c
 11426  006EB4  26D9               	addwf	fsr2l,f,c
 11427  006EB6  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
 11428  006EB8  22DA               	addwfc	fsr2h,f,c
 11429  006EBA  C005  FFDE         	movff	init_stepper@step_counter,postinc2
 11430  006EBE  C006  FFDD         	movff	init_stepper@step_counter+1,postdec2
 11431  006EC2                     
 11432                           ;stepper_motor.c: 10:     stepper_motor -> direction = direction;
 11433  006EC2  EE20 F004          	lfsr	2,4
 11434  006EC6  5001               	movf	init_stepper@stepper_motor^0,w,c
 11435  006EC8  26D9               	addwf	fsr2l,f,c
 11436  006ECA  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
 11437  006ECC  22DA               	addwfc	fsr2h,f,c
 11438  006ECE  C007  FFDE         	movff	init_stepper@direction,postinc2
 11439  006ED2  C008  FFDD         	movff	init_stepper@direction+1,postdec2
 11440  006ED6  0012               	return		;funcret
 11441  006ED8  FFFF               	dw	65535	; errata NOP
 11442  006EDA                     __end_of_init_stepper:
 11443                           	callstack 0
 11444                           
 11445 ;; *************** function _init_interrupts *****************
 11446 ;; Defined at:
 11447 ;;		line 81 in file "init_PIC.c"
 11448 ;; Parameters:    Size  Location     Type
 11449 ;;		None
 11450 ;; Auto vars:     Size  Location     Type
 11451 ;;		None
 11452 ;; Return value:  Size  Location     Type
 11453 ;;                  1    wreg      void 
 11454 ;; Registers used:
 11455 ;;		None
 11456 ;; Tracked objects:
 11457 ;;		On entry : 0/0
 11458 ;;		On exit  : 0/0
 11459 ;;		Unchanged: 0/0
 11460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11461 ;;      Params:         0       0       0       0       0       0       0
 11462 ;;      Locals:         0       0       0       0       0       0       0
 11463 ;;      Temps:          0       0       0       0       0       0       0
 11464 ;;      Totals:         0       0       0       0       0       0       0
 11465 ;;Total ram usage:        0 bytes
 11466 ;; Hardware stack levels used:    1
 11467 ;; Hardware stack levels required when called:    1
 11468 ;; This function calls:
 11469 ;;		Nothing
 11470 ;; This function is called by:
 11471 ;;		_main
 11472 ;; This function uses a non-reentrant model
 11473 ;;
 11474                           
 11475                           	psect	text45
 11476  00647A                     __ptext45:
 11477                           	callstack 0
 11478  00647A                     _init_interrupts:
 11479                           	callstack 0
 11480  00647A  FFFF               	dw	65535	; assembler added errata NOP
 11481  00647C                     
 11482                           ;init_PIC.c: 83:     PIR1bits.RCIF = 0;
 11483  00647C  9A9E               	bcf	158,5,c	;volatile
 11484                           
 11485                           ;init_PIC.c: 84:     PIE1bits.RCIE = 1;
 11486  00647E  8A9D               	bsf	157,5,c	;volatile
 11487                           
 11488                           ;init_PIC.c: 85:     INTCONbits.PEIE = 1;
 11489  006480  8CF2               	bsf	242,6,c	;volatile
 11490  006482  0012               	return		;funcret
 11491  006484  FFFF               	dw	65535	; errata NOP
 11492  006486                     __end_of_init_interrupts:
 11493                           	callstack 0
 11494                           
 11495 ;; *************** function _init_ccp1 *****************
 11496 ;; Defined at:
 11497 ;;		line 41 in file "timer.c"
 11498 ;; Parameters:    Size  Location     Type
 11499 ;;		None
 11500 ;; Auto vars:     Size  Location     Type
 11501 ;;		None
 11502 ;; Return value:  Size  Location     Type
 11503 ;;                  1    wreg      void 
 11504 ;; Registers used:
 11505 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11506 ;; Tracked objects:
 11507 ;;		On entry : 0/0
 11508 ;;		On exit  : 0/0
 11509 ;;		Unchanged: 0/0
 11510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11511 ;;      Params:         0       0       0       0       0       0       0
 11512 ;;      Locals:         0       0       0       0       0       0       0
 11513 ;;      Temps:          0       0       0       0       0       0       0
 11514 ;;      Totals:         0       0       0       0       0       0       0
 11515 ;;Total ram usage:        0 bytes
 11516 ;; Hardware stack levels used:    1
 11517 ;; Hardware stack levels required when called:    3
 11518 ;; This function calls:
 11519 ;;		_update_pwm_duty_ccp1
 11520 ;; This function is called by:
 11521 ;;		_main
 11522 ;; This function uses a non-reentrant model
 11523 ;;
 11524                           
 11525                           	psect	text46
 11526  00650C                     __ptext46:
 11527                           	callstack 0
 11528  00650C                     _init_ccp1:
 11529                           	callstack 0
 11530  00650C  FFFF               	dw	65535	; assembler added errata NOP
 11531  00650E                     
 11532                           ;timer.c: 42:     CCP1CON = 0x00;
 11533  00650E  0E00               	movlw	0
 11534  006510  6EBD               	movwf	189,c	;volatile
 11535  006512                     
 11536                           ;timer.c: 45:     update_pwm_duty_ccp1(5e-3);
 11537  006512  0E0A               	movlw	10
 11538  006514  0100               	movlb	0	; () banked
 11539  006516  6FD4               	movwf	update_pwm_duty_ccp1@time_up& (0+255),b
 11540  006518  0ED7               	movlw	215
 11541  00651A  6FD5               	movwf	(update_pwm_duty_ccp1@time_up+1)& (0+255),b
 11542  00651C  0EA3               	movlw	163
 11543  00651E  6FD6               	movwf	(update_pwm_duty_ccp1@time_up+2)& (0+255),b
 11544  006520  0E3B               	movlw	59
 11545  006522  6FD7               	movwf	(update_pwm_duty_ccp1@time_up+3)& (0+255),b
 11546  006524  EC6D  F037         	call	_update_pwm_duty_ccp1	;wreg free
 11547  006528                     
 11548                           ;timer.c: 48:     CCP1CONbits.CCP1M3 = 1;
 11549  006528  86BD               	bsf	189,3,c	;volatile
 11550  00652A                     
 11551                           ;timer.c: 49:     CCP1CONbits.CCP1M2 = 1;
 11552  00652A  84BD               	bsf	189,2,c	;volatile
 11553  00652C  0012               	return		;funcret
 11554  00652E  FFFF               	dw	65535	; errata NOP
 11555  006530                     __end_of_init_ccp1:
 11556                           	callstack 0
 11557                           
 11558 ;; *************** function _update_pwm_duty_ccp1 *****************
 11559 ;; Defined at:
 11560 ;;		line 53 in file "timer.c"
 11561 ;; Parameters:    Size  Location     Type
 11562 ;;  time_up         4   28[BANK0 ] void 
 11563 ;; Auto vars:     Size  Location     Type
 11564 ;;  new_duty        2   34[BANK0 ] unsigned short 
 11565 ;;  lsbs_duty       1   36[BANK0 ] unsigned char 
 11566 ;; Return value:  Size  Location     Type
 11567 ;;                  1    wreg      void 
 11568 ;; Registers used:
 11569 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11570 ;; Tracked objects:
 11571 ;;		On entry : 0/0
 11572 ;;		On exit  : 0/0
 11573 ;;		Unchanged: 0/0
 11574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11575 ;;      Params:         0       4       0       0       0       0       0
 11576 ;;      Locals:         0       3       0       0       0       0       0
 11577 ;;      Temps:          0       2       0       0       0       0       0
 11578 ;;      Totals:         0       9       0       0       0       0       0
 11579 ;;Total ram usage:        9 bytes
 11580 ;; Hardware stack levels used:    1
 11581 ;; Hardware stack levels required when called:    2
 11582 ;; This function calls:
 11583 ;;		___fldiv
 11584 ;;		___flmul
 11585 ;;		___fltol
 11586 ;; This function is called by:
 11587 ;;		_init_ccp1
 11588 ;; This function uses a non-reentrant model
 11589 ;;
 11590                           
 11591                           	psect	text47
 11592  006EDA                     __ptext47:
 11593                           	callstack 0
 11594  006EDA                     _update_pwm_duty_ccp1:
 11595                           	callstack 0
 11596  006EDA  FFFF               	dw	65535	; assembler added errata NOP
 11597  006EDC                     
 11598                           ;timer.c: 56:     uint16_t new_duty;;timer.c: 57:     uint8_t lsbs_duty;;timer.c: 59:   
      +                            new_duty = (0.001) / (t_osc * tmr2_prescaler);
 11599  006EDC  0EBD               	movlw	189
 11600  006EDE  6E31               	movwf	___flmul@a^0,c
 11601  006EE0  0E37               	movlw	55
 11602  006EE2  6E32               	movwf	(___flmul@a+1)^0,c
 11603  006EE4  0E86               	movlw	134
 11604  006EE6  6E33               	movwf	(___flmul@a+2)^0,c
 11605  006EE8  0E35               	movlw	53
 11606  006EEA  6E34               	movwf	(___flmul@a+3)^0,c
 11607  006EEC  C0ED  F02D         	movff	_tmr2_prescaler,___flmul@b
 11608  006EF0  C0EE  F02E         	movff	_tmr2_prescaler+1,___flmul@b+1
 11609  006EF4  C0EF  F02F         	movff	_tmr2_prescaler+2,___flmul@b+2
 11610  006EF8  C0F0  F030         	movff	_tmr2_prescaler+3,___flmul@b+3
 11611  006EFC  ECC3  F010         	call	___flmul	;wreg free
 11612  006F00  C02D  F04A         	movff	?___flmul,___fldiv@a
 11613  006F04  C02E  F04B         	movff	?___flmul+1,___fldiv@a+1
 11614  006F08  C02F  F04C         	movff	?___flmul+2,___fldiv@a+2
 11615  006F0C  C030  F04D         	movff	?___flmul+3,___fldiv@a+3
 11616  006F10  0E6F               	movlw	111
 11617  006F12  6E46               	movwf	___fldiv@b^0,c
 11618  006F14  0E12               	movlw	18
 11619  006F16  6E47               	movwf	(___fldiv@b+1)^0,c
 11620  006F18  0E83               	movlw	131
 11621  006F1A  6E48               	movwf	(___fldiv@b+2)^0,c
 11622  006F1C  0E3A               	movlw	58
 11623  006F1E  6E49               	movwf	(___fldiv@b+3)^0,c
 11624  006F20  EC15  F013         	call	___fldiv	;wreg free
 11625  006F24  C046  F0CA         	movff	?___fldiv,___fltol@f1
 11626  006F28  C047  F0CB         	movff	?___fldiv+1,___fltol@f1+1
 11627  006F2C  C048  F0CC         	movff	?___fldiv+2,___fltol@f1+2
 11628  006F30  C049  F0CD         	movff	?___fldiv+3,___fltol@f1+3
 11629  006F34  EC7F  F03C         	call	___fltol	;wreg free
 11630  006F38  C0CA  F0DA         	movff	?___fltol,update_pwm_duty_ccp1@new_duty
 11631  006F3C  C0CB  F0DB         	movff	?___fltol+1,update_pwm_duty_ccp1@new_duty+1
 11632  006F40                     
 11633                           ;timer.c: 60:     lsbs_duty = (uint8_t) new_duty;
 11634  006F40  C0DA  F0DC         	movff	update_pwm_duty_ccp1@new_duty,update_pwm_duty_ccp1@lsbs_duty
 11635  006F44                     
 11636                           ;timer.c: 64:     if (lsbs_duty & 0x01) CCP1CON |= (1u << 4);
 11637  006F44  0100               	movlb	0	; () banked
 11638  006F46  A1DC               	btfss	update_pwm_duty_ccp1@lsbs_duty& (0+255),0,b
 11639  006F48  EFA8  F037         	goto	u6441
 11640  006F4C  EFAB  F037         	goto	u6440
 11641  006F50                     u6441:
 11642  006F50  FFFF               	dw	65535	; assembler added errata NOP
 11643  006F52  EFAF  F037         	goto	l5180
 11644  006F56                     u6440:
 11645  006F56  FFFF               	dw	65535	; assembler added errata NOP
 11646  006F58                     
 11647                           ; BSR set to: 0
 11648  006F58  88BD               	bsf	189,4,c	;volatile
 11649  006F5A  EFB1  F037         	goto	l5182
 11650  006F5E                     l5180:
 11651  006F5E  FFFF               	dw	65535	; assembler added errata NOP
 11652                           
 11653                           ; BSR set to: 0
 11654  006F60  98BD               	bcf	189,4,c	;volatile
 11655  006F62                     l5182:
 11656  006F62  FFFF               	dw	65535	; assembler added errata NOP
 11657                           
 11658                           ; BSR set to: 0
 11659                           ;timer.c: 67:     if (lsbs_duty & 0x02) CCP1CON |= (1u << 5);
 11660  006F64  A3DC               	btfss	update_pwm_duty_ccp1@lsbs_duty& (0+255),1,b
 11661  006F66  EFB7  F037         	goto	u6451
 11662  006F6A  EFBA  F037         	goto	u6450
 11663  006F6E                     u6451:
 11664  006F6E  FFFF               	dw	65535	; assembler added errata NOP
 11665  006F70  EFBE  F037         	goto	l5186
 11666  006F74                     u6450:
 11667  006F74  FFFF               	dw	65535	; assembler added errata NOP
 11668  006F76                     
 11669                           ; BSR set to: 0
 11670  006F76  8ABD               	bsf	189,5,c	;volatile
 11671  006F78  EFC0  F037         	goto	l5188
 11672  006F7C                     l5186:
 11673  006F7C  FFFF               	dw	65535	; assembler added errata NOP
 11674                           
 11675                           ; BSR set to: 0
 11676  006F7E  9ABD               	bcf	189,5,c	;volatile
 11677  006F80                     l5188:
 11678  006F80  FFFF               	dw	65535	; assembler added errata NOP
 11679                           
 11680                           ; BSR set to: 0
 11681                           ;timer.c: 71:     CCPR1L = (uint8_t) (new_duty >> 2);
 11682  006F82  C0DA  F0D8         	movff	update_pwm_duty_ccp1@new_duty,??_update_pwm_duty_ccp1
 11683  006F86  C0DB  F0D9         	movff	update_pwm_duty_ccp1@new_duty+1,??_update_pwm_duty_ccp1+1
 11684  006F8A  90D8               	bcf	status,0,c
 11685  006F8C  33D9               	rrcf	(??_update_pwm_duty_ccp1+1)& (0+255),f,b
 11686  006F8E  33D8               	rrcf	??_update_pwm_duty_ccp1& (0+255),f,b
 11687  006F90  90D8               	bcf	status,0,c
 11688  006F92  33D9               	rrcf	(??_update_pwm_duty_ccp1+1)& (0+255),f,b
 11689  006F94  33D8               	rrcf	??_update_pwm_duty_ccp1& (0+255),f,b
 11690  006F96  51D8               	movf	??_update_pwm_duty_ccp1& (0+255),w,b
 11691  006F98  6EBE               	movwf	190,c	;volatile
 11692  006F9A                     
 11693                           ; BSR set to: 0
 11694  006F9A  0012               	return		;funcret
 11695  006F9C  FFFF               	dw	65535	; errata NOP
 11696  006F9E                     __end_of_update_pwm_duty_ccp1:
 11697                           	callstack 0
 11698                           
 11699 ;; *************** function ___fldiv *****************
 11700 ;; Defined at:
 11701 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 11702 ;; Parameters:    Size  Location     Type
 11703 ;;  b               4   69[COMRAM] void 
 11704 ;;  a               4   73[COMRAM] void 
 11705 ;; Auto vars:     Size  Location     Type
 11706 ;;  grs             4   88[COMRAM] unsigned long 
 11707 ;;  rem             4   81[COMRAM] unsigned long 
 11708 ;;  new_exp         2   86[COMRAM] short 
 11709 ;;  aexp            1   93[COMRAM] unsigned char 
 11710 ;;  bexp            1   92[COMRAM] unsigned char 
 11711 ;;  sign            1   85[COMRAM] unsigned char 
 11712 ;; Return value:  Size  Location     Type
 11713 ;;                  4   69[COMRAM] unsigned char 
 11714 ;; Registers used:
 11715 ;;		wreg, status,2, status,0
 11716 ;; Tracked objects:
 11717 ;;		On entry : 0/0
 11718 ;;		On exit  : 0/0
 11719 ;;		Unchanged: 0/0
 11720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11721 ;;      Params:         8       0       0       0       0       0       0
 11722 ;;      Locals:        13       0       0       0       0       0       0
 11723 ;;      Temps:          4       0       0       0       0       0       0
 11724 ;;      Totals:        25       0       0       0       0       0       0
 11725 ;;Total ram usage:       25 bytes
 11726 ;; Hardware stack levels used:    1
 11727 ;; Hardware stack levels required when called:    1
 11728 ;; This function calls:
 11729 ;;		Nothing
 11730 ;; This function is called by:
 11731 ;;		_init_timer_2
 11732 ;;		_update_pwm_duty_ccp1
 11733 ;; This function uses a non-reentrant model
 11734 ;;
 11735                           
 11736                           	psect	text48
 11737  00262A                     __ptext48:
 11738                           	callstack 0
 11739  00262A                     ___fldiv:
 11740                           	callstack 0
 11741  00262A  FFFF               	dw	65535	; assembler added errata NOP
 11742  00262C  5049               	movf	(___fldiv@b+3)^0,w,c
 11743  00262E  0B80               	andlw	128
 11744  002630  6E56               	movwf	___fldiv@sign^0,c
 11745  002632  5049               	movf	(___fldiv@b+3)^0,w,c
 11746  002634  2449               	addwf	(___fldiv@b+3)^0,w,c
 11747  002636  6E5D               	movwf	___fldiv@bexp^0,c
 11748  002638  AE48               	btfss	(___fldiv@b+2)^0,7,c
 11749  00263A  EF21  F013         	goto	u5681
 11750  00263E  EF24  F013         	goto	u5680
 11751  002642                     u5681:
 11752  002642  FFFF               	dw	65535	; assembler added errata NOP
 11753  002644  EF26  F013         	goto	l4708
 11754  002648                     u5680:
 11755  002648  FFFF               	dw	65535	; assembler added errata NOP
 11756  00264A  805D               	bsf	___fldiv@bexp^0,0,c
 11757  00264C                     l4708:
 11758  00264C  FFFF               	dw	65535	; assembler added errata NOP
 11759  00264E  505D               	movf	___fldiv@bexp^0,w,c
 11760  002650  B4D8               	btfsc	status,2,c
 11761  002652  EF2D  F013         	goto	u5691
 11762  002656  EF30  F013         	goto	u5690
 11763  00265A                     u5691:
 11764  00265A  FFFF               	dw	65535	; assembler added errata NOP
 11765  00265C  EF49  F013         	goto	l4718
 11766  002660                     u5690:
 11767  002660  FFFF               	dw	65535	; assembler added errata NOP
 11768  002662  285D               	incf	___fldiv@bexp^0,w,c
 11769  002664  A4D8               	btfss	status,2,c
 11770  002666  EF37  F013         	goto	u5701
 11771  00266A  EF3A  F013         	goto	u5700
 11772  00266E                     u5701:
 11773  00266E  FFFF               	dw	65535	; assembler added errata NOP
 11774  002670  EF43  F013         	goto	l4714
 11775  002674                     u5700:
 11776  002674  FFFF               	dw	65535	; assembler added errata NOP
 11777  002676  0E00               	movlw	0
 11778  002678  6E46               	movwf	___fldiv@b^0,c
 11779  00267A  0E00               	movlw	0
 11780  00267C  6E47               	movwf	(___fldiv@b+1)^0,c
 11781  00267E  0E00               	movlw	0
 11782  002680  6E48               	movwf	(___fldiv@b+2)^0,c
 11783  002682  0E00               	movlw	0
 11784  002684  6E49               	movwf	(___fldiv@b+3)^0,c
 11785  002686                     l4714:
 11786  002686  FFFF               	dw	65535	; assembler added errata NOP
 11787  002688  8E48               	bsf	(___fldiv@b+2)^0,7,c
 11788  00268A  0E00               	movlw	0
 11789  00268C  6E49               	movwf	(___fldiv@b+3)^0,c
 11790  00268E  EF52  F013         	goto	l4720
 11791  002692                     l4718:
 11792  002692  FFFF               	dw	65535	; assembler added errata NOP
 11793  002694  0E00               	movlw	0
 11794  002696  6E46               	movwf	___fldiv@b^0,c
 11795  002698  0E00               	movlw	0
 11796  00269A  6E47               	movwf	(___fldiv@b+1)^0,c
 11797  00269C  0E00               	movlw	0
 11798  00269E  6E48               	movwf	(___fldiv@b+2)^0,c
 11799  0026A0  0E00               	movlw	0
 11800  0026A2  6E49               	movwf	(___fldiv@b+3)^0,c
 11801  0026A4                     l4720:
 11802  0026A4  FFFF               	dw	65535	; assembler added errata NOP
 11803  0026A6  504D               	movf	(___fldiv@a+3)^0,w,c
 11804  0026A8  0B80               	andlw	128
 11805  0026AA  1A56               	xorwf	___fldiv@sign^0,f,c
 11806  0026AC  504D               	movf	(___fldiv@a+3)^0,w,c
 11807  0026AE  244D               	addwf	(___fldiv@a+3)^0,w,c
 11808  0026B0  6E5E               	movwf	___fldiv@aexp^0,c
 11809  0026B2  AE4C               	btfss	(___fldiv@a+2)^0,7,c
 11810  0026B4  EF5E  F013         	goto	u5711
 11811  0026B8  EF61  F013         	goto	u5710
 11812  0026BC                     u5711:
 11813  0026BC  FFFF               	dw	65535	; assembler added errata NOP
 11814  0026BE  EF63  F013         	goto	l4728
 11815  0026C2                     u5710:
 11816  0026C2  FFFF               	dw	65535	; assembler added errata NOP
 11817  0026C4  805E               	bsf	___fldiv@aexp^0,0,c
 11818  0026C6                     l4728:
 11819  0026C6  FFFF               	dw	65535	; assembler added errata NOP
 11820  0026C8  505E               	movf	___fldiv@aexp^0,w,c
 11821  0026CA  B4D8               	btfsc	status,2,c
 11822  0026CC  EF6A  F013         	goto	u5721
 11823  0026D0  EF6D  F013         	goto	u5720
 11824  0026D4                     u5721:
 11825  0026D4  FFFF               	dw	65535	; assembler added errata NOP
 11826  0026D6  EF86  F013         	goto	l4738
 11827  0026DA                     u5720:
 11828  0026DA  FFFF               	dw	65535	; assembler added errata NOP
 11829  0026DC  285E               	incf	___fldiv@aexp^0,w,c
 11830  0026DE  A4D8               	btfss	status,2,c
 11831  0026E0  EF74  F013         	goto	u5731
 11832  0026E4  EF77  F013         	goto	u5730
 11833  0026E8                     u5731:
 11834  0026E8  FFFF               	dw	65535	; assembler added errata NOP
 11835  0026EA  EF80  F013         	goto	l4734
 11836  0026EE                     u5730:
 11837  0026EE  FFFF               	dw	65535	; assembler added errata NOP
 11838  0026F0  0E00               	movlw	0
 11839  0026F2  6E4A               	movwf	___fldiv@a^0,c
 11840  0026F4  0E00               	movlw	0
 11841  0026F6  6E4B               	movwf	(___fldiv@a+1)^0,c
 11842  0026F8  0E00               	movlw	0
 11843  0026FA  6E4C               	movwf	(___fldiv@a+2)^0,c
 11844  0026FC  0E00               	movlw	0
 11845  0026FE  6E4D               	movwf	(___fldiv@a+3)^0,c
 11846  002700                     l4734:
 11847  002700  FFFF               	dw	65535	; assembler added errata NOP
 11848  002702  8E4C               	bsf	(___fldiv@a+2)^0,7,c
 11849  002704  0E00               	movlw	0
 11850  002706  6E4D               	movwf	(___fldiv@a+3)^0,c
 11851  002708  EF8F  F013         	goto	l4740
 11852  00270C                     l4738:
 11853  00270C  FFFF               	dw	65535	; assembler added errata NOP
 11854  00270E  0E00               	movlw	0
 11855  002710  6E4A               	movwf	___fldiv@a^0,c
 11856  002712  0E00               	movlw	0
 11857  002714  6E4B               	movwf	(___fldiv@a+1)^0,c
 11858  002716  0E00               	movlw	0
 11859  002718  6E4C               	movwf	(___fldiv@a+2)^0,c
 11860  00271A  0E00               	movlw	0
 11861  00271C  6E4D               	movwf	(___fldiv@a+3)^0,c
 11862  00271E                     l4740:
 11863  00271E  FFFF               	dw	65535	; assembler added errata NOP
 11864  002720  504A               	movf	___fldiv@a^0,w,c
 11865  002722  104B               	iorwf	(___fldiv@a+1)^0,w,c
 11866  002724  104C               	iorwf	(___fldiv@a+2)^0,w,c
 11867  002726  104D               	iorwf	(___fldiv@a+3)^0,w,c
 11868  002728  A4D8               	btfss	status,2,c
 11869  00272A  EF99  F013         	goto	u5741
 11870  00272E  EF9C  F013         	goto	u5740
 11871  002732                     u5741:
 11872  002732  FFFF               	dw	65535	; assembler added errata NOP
 11873  002734  EFB6  F013         	goto	l4752
 11874  002738                     u5740:
 11875  002738  FFFF               	dw	65535	; assembler added errata NOP
 11876  00273A  0E00               	movlw	0
 11877  00273C  6E46               	movwf	___fldiv@b^0,c
 11878  00273E  0E00               	movlw	0
 11879  002740  6E47               	movwf	(___fldiv@b+1)^0,c
 11880  002742  0E00               	movlw	0
 11881  002744  6E48               	movwf	(___fldiv@b+2)^0,c
 11882  002746  0E00               	movlw	0
 11883  002748  6E49               	movwf	(___fldiv@b+3)^0,c
 11884  00274A  0E80               	movlw	128
 11885  00274C  1248               	iorwf	(___fldiv@b+2)^0,f,c
 11886  00274E  0E7F               	movlw	127
 11887  002750  1249               	iorwf	(___fldiv@b+3)^0,f,c
 11888  002752                     l4746:
 11889  002752  FFFF               	dw	65535	; assembler added errata NOP
 11890  002754  5056               	movf	___fldiv@sign^0,w,c
 11891  002756  1249               	iorwf	(___fldiv@b+3)^0,f,c
 11892  002758  C046  F046         	movff	___fldiv@b,?___fldiv
 11893  00275C  C047  F047         	movff	___fldiv@b+1,?___fldiv+1
 11894  002760  C048  F048         	movff	___fldiv@b+2,?___fldiv+2
 11895  002764  C049  F049         	movff	___fldiv@b+3,?___fldiv+3
 11896  002768  EF2B  F015         	goto	l976
 11897  00276C                     l4752:
 11898  00276C  FFFF               	dw	65535	; assembler added errata NOP
 11899  00276E  505D               	movf	___fldiv@bexp^0,w,c
 11900  002770  A4D8               	btfss	status,2,c
 11901  002772  EFBD  F013         	goto	u5751
 11902  002776  EFC0  F013         	goto	u5750
 11903  00277A                     u5751:
 11904  00277A  FFFF               	dw	65535	; assembler added errata NOP
 11905  00277C  EFCB  F013         	goto	l4760
 11906  002780                     u5750:
 11907  002780  FFFF               	dw	65535	; assembler added errata NOP
 11908  002782  0E00               	movlw	0
 11909  002784  6E46               	movwf	?___fldiv^0,c
 11910  002786  0E00               	movlw	0
 11911  002788  6E47               	movwf	(?___fldiv+1)^0,c
 11912  00278A  0E00               	movlw	0
 11913  00278C  6E48               	movwf	(?___fldiv+2)^0,c
 11914  00278E  0E00               	movlw	0
 11915  002790  6E49               	movwf	(?___fldiv+3)^0,c
 11916  002792  EF2B  F015         	goto	l976
 11917  002796                     l4760:
 11918  002796  FFFF               	dw	65535	; assembler added errata NOP
 11919  002798  505E               	movf	___fldiv@aexp^0,w,c
 11920  00279A  C05D  F04E         	movff	___fldiv@bexp,??___fldiv
 11921  00279E  6A4F               	clrf	(??___fldiv+1)^0,c
 11922  0027A0  5E4E               	subwf	??___fldiv^0,f,c
 11923  0027A2  0E00               	movlw	0
 11924  0027A4  5A4F               	subwfb	(??___fldiv+1)^0,f,c
 11925  0027A6  0E7F               	movlw	127
 11926  0027A8  244E               	addwf	??___fldiv^0,w,c
 11927  0027AA  6E57               	movwf	___fldiv@new_exp^0,c
 11928  0027AC  0E00               	movlw	0
 11929  0027AE  204F               	addwfc	(??___fldiv+1)^0,w,c
 11930  0027B0  6E58               	movwf	(___fldiv@new_exp+1)^0,c
 11931  0027B2  C046  F052         	movff	___fldiv@b,___fldiv@rem
 11932  0027B6  C047  F053         	movff	___fldiv@b+1,___fldiv@rem+1
 11933  0027BA  C048  F054         	movff	___fldiv@b+2,___fldiv@rem+2
 11934  0027BE  C049  F055         	movff	___fldiv@b+3,___fldiv@rem+3
 11935  0027C2  0E00               	movlw	0
 11936  0027C4  6E46               	movwf	___fldiv@b^0,c
 11937  0027C6  0E00               	movlw	0
 11938  0027C8  6E47               	movwf	(___fldiv@b+1)^0,c
 11939  0027CA  0E00               	movlw	0
 11940  0027CC  6E48               	movwf	(___fldiv@b+2)^0,c
 11941  0027CE  0E00               	movlw	0
 11942  0027D0  6E49               	movwf	(___fldiv@b+3)^0,c
 11943  0027D2  0E00               	movlw	0
 11944  0027D4  6E59               	movwf	___fldiv@grs^0,c
 11945  0027D6  0E00               	movlw	0
 11946  0027D8  6E5A               	movwf	(___fldiv@grs+1)^0,c
 11947  0027DA  0E00               	movlw	0
 11948  0027DC  6E5B               	movwf	(___fldiv@grs+2)^0,c
 11949  0027DE  0E00               	movlw	0
 11950  0027E0  6E5C               	movwf	(___fldiv@grs+3)^0,c
 11951  0027E2  0E00               	movlw	0
 11952  0027E4  6E5E               	movwf	___fldiv@aexp^0,c
 11953  0027E6  EF37  F014         	goto	l978
 11954  0027EA                     l4770:
 11955  0027EA  FFFF               	dw	65535	; assembler added errata NOP
 11956  0027EC  505E               	movf	___fldiv@aexp^0,w,c
 11957  0027EE  B4D8               	btfsc	status,2,c
 11958  0027F0  EFFC  F013         	goto	u5761
 11959  0027F4  EFFF  F013         	goto	u5760
 11960  0027F8                     u5761:
 11961  0027F8  FFFF               	dw	65535	; assembler added errata NOP
 11962  0027FA  EF1A  F014         	goto	l4778
 11963  0027FE                     u5760:
 11964  0027FE  FFFF               	dw	65535	; assembler added errata NOP
 11965  002800  90D8               	bcf	status,0,c
 11966  002802  3652               	rlcf	___fldiv@rem^0,f,c
 11967  002804  3653               	rlcf	(___fldiv@rem+1)^0,f,c
 11968  002806  3654               	rlcf	(___fldiv@rem+2)^0,f,c
 11969  002808  3655               	rlcf	(___fldiv@rem+3)^0,f,c
 11970  00280A  90D8               	bcf	status,0,c
 11971  00280C  3646               	rlcf	___fldiv@b^0,f,c
 11972  00280E  3647               	rlcf	(___fldiv@b+1)^0,f,c
 11973  002810  3648               	rlcf	(___fldiv@b+2)^0,f,c
 11974  002812  3649               	rlcf	(___fldiv@b+3)^0,f,c
 11975  002814  AE5C               	btfss	(___fldiv@grs+3)^0,7,c
 11976  002816  EF0F  F014         	goto	u5771
 11977  00281A  EF12  F014         	goto	u5770
 11978  00281E                     u5771:
 11979  00281E  FFFF               	dw	65535	; assembler added errata NOP
 11980  002820  EF14  F014         	goto	l981
 11981  002824                     u5770:
 11982  002824  FFFF               	dw	65535	; assembler added errata NOP
 11983  002826  8046               	bsf	___fldiv@b^0,0,c
 11984  002828                     l981:
 11985  002828  FFFF               	dw	65535	; assembler added errata NOP
 11986  00282A  90D8               	bcf	status,0,c
 11987  00282C  3659               	rlcf	___fldiv@grs^0,f,c
 11988  00282E  365A               	rlcf	(___fldiv@grs+1)^0,f,c
 11989  002830  365B               	rlcf	(___fldiv@grs+2)^0,f,c
 11990  002832  365C               	rlcf	(___fldiv@grs+3)^0,f,c
 11991  002834                     l4778:
 11992  002834  FFFF               	dw	65535	; assembler added errata NOP
 11993  002836  504A               	movf	___fldiv@a^0,w,c
 11994  002838  5C52               	subwf	___fldiv@rem^0,w,c
 11995  00283A  504B               	movf	(___fldiv@a+1)^0,w,c
 11996  00283C  5853               	subwfb	(___fldiv@rem+1)^0,w,c
 11997  00283E  504C               	movf	(___fldiv@a+2)^0,w,c
 11998  002840  5854               	subwfb	(___fldiv@rem+2)^0,w,c
 11999  002842  504D               	movf	(___fldiv@a+3)^0,w,c
 12000  002844  5855               	subwfb	(___fldiv@rem+3)^0,w,c
 12001  002846  A0D8               	btfss	status,0,c
 12002  002848  EF28  F014         	goto	u5781
 12003  00284C  EF2B  F014         	goto	u5780
 12004  002850                     u5781:
 12005  002850  FFFF               	dw	65535	; assembler added errata NOP
 12006  002852  EF35  F014         	goto	l4784
 12007  002856                     u5780:
 12008  002856  FFFF               	dw	65535	; assembler added errata NOP
 12009  002858  8C5C               	bsf	(___fldiv@grs+3)^0,6,c
 12010  00285A  504A               	movf	___fldiv@a^0,w,c
 12011  00285C  5E52               	subwf	___fldiv@rem^0,f,c
 12012  00285E  504B               	movf	(___fldiv@a+1)^0,w,c
 12013  002860  5A53               	subwfb	(___fldiv@rem+1)^0,f,c
 12014  002862  504C               	movf	(___fldiv@a+2)^0,w,c
 12015  002864  5A54               	subwfb	(___fldiv@rem+2)^0,f,c
 12016  002866  504D               	movf	(___fldiv@a+3)^0,w,c
 12017  002868  5A55               	subwfb	(___fldiv@rem+3)^0,f,c
 12018  00286A                     l4784:
 12019  00286A  FFFF               	dw	65535	; assembler added errata NOP
 12020  00286C  2A5E               	incf	___fldiv@aexp^0,f,c
 12021  00286E                     l978:
 12022  00286E  FFFF               	dw	65535	; assembler added errata NOP
 12023  002870  0E19               	movlw	25
 12024  002872  645E               	cpfsgt	___fldiv@aexp^0,c
 12025  002874  EF3E  F014         	goto	u5791
 12026  002878  EF41  F014         	goto	u5790
 12027  00287C                     u5791:
 12028  00287C  FFFF               	dw	65535	; assembler added errata NOP
 12029  00287E  EFF5  F013         	goto	l4770
 12030  002882                     u5790:
 12031  002882  FFFF               	dw	65535	; assembler added errata NOP
 12032  002884  5052               	movf	___fldiv@rem^0,w,c
 12033  002886  1053               	iorwf	(___fldiv@rem+1)^0,w,c
 12034  002888  1054               	iorwf	(___fldiv@rem+2)^0,w,c
 12035  00288A  1055               	iorwf	(___fldiv@rem+3)^0,w,c
 12036  00288C  B4D8               	btfsc	status,2,c
 12037  00288E  EF4B  F014         	goto	u5801
 12038  002892  EF4E  F014         	goto	u5800
 12039  002896                     u5801:
 12040  002896  FFFF               	dw	65535	; assembler added errata NOP
 12041  002898  EF6B  F014         	goto	l4796
 12042  00289C                     u5800:
 12043  00289C  FFFF               	dw	65535	; assembler added errata NOP
 12044  00289E  8059               	bsf	___fldiv@grs^0,0,c
 12045  0028A0  EF6B  F014         	goto	l4796
 12046  0028A4                     l4790:
 12047  0028A4  FFFF               	dw	65535	; assembler added errata NOP
 12048  0028A6  90D8               	bcf	status,0,c
 12049  0028A8  3646               	rlcf	___fldiv@b^0,f,c
 12050  0028AA  3647               	rlcf	(___fldiv@b+1)^0,f,c
 12051  0028AC  3648               	rlcf	(___fldiv@b+2)^0,f,c
 12052  0028AE  3649               	rlcf	(___fldiv@b+3)^0,f,c
 12053  0028B0  AE5C               	btfss	(___fldiv@grs+3)^0,7,c
 12054  0028B2  EF5D  F014         	goto	u5811
 12055  0028B6  EF60  F014         	goto	u5810
 12056  0028BA                     u5811:
 12057  0028BA  FFFF               	dw	65535	; assembler added errata NOP
 12058  0028BC  EF62  F014         	goto	l987
 12059  0028C0                     u5810:
 12060  0028C0  FFFF               	dw	65535	; assembler added errata NOP
 12061  0028C2  8046               	bsf	___fldiv@b^0,0,c
 12062  0028C4                     l987:
 12063  0028C4  FFFF               	dw	65535	; assembler added errata NOP
 12064  0028C6  90D8               	bcf	status,0,c
 12065  0028C8  3659               	rlcf	___fldiv@grs^0,f,c
 12066  0028CA  365A               	rlcf	(___fldiv@grs+1)^0,f,c
 12067  0028CC  365B               	rlcf	(___fldiv@grs+2)^0,f,c
 12068  0028CE  365C               	rlcf	(___fldiv@grs+3)^0,f,c
 12069  0028D0  0657               	decf	___fldiv@new_exp^0,f,c
 12070  0028D2  A0D8               	btfss	status,0,c
 12071  0028D4  0658               	decf	(___fldiv@new_exp+1)^0,f,c
 12072  0028D6                     l4796:
 12073  0028D6  FFFF               	dw	65535	; assembler added errata NOP
 12074  0028D8  AE48               	btfss	(___fldiv@b+2)^0,7,c
 12075  0028DA  EF71  F014         	goto	u5821
 12076  0028DE  EF74  F014         	goto	u5820
 12077  0028E2                     u5821:
 12078  0028E2  FFFF               	dw	65535	; assembler added errata NOP
 12079  0028E4  EF52  F014         	goto	l4790
 12080  0028E8                     u5820:
 12081  0028E8  FFFF               	dw	65535	; assembler added errata NOP
 12082  0028EA  0E00               	movlw	0
 12083  0028EC  6E5E               	movwf	___fldiv@aexp^0,c
 12084  0028EE  AE5C               	btfss	(___fldiv@grs+3)^0,7,c
 12085  0028F0  EF7C  F014         	goto	u5831
 12086  0028F4  EF7F  F014         	goto	u5830
 12087  0028F8                     u5831:
 12088  0028F8  FFFF               	dw	65535	; assembler added errata NOP
 12089  0028FA  EFAA  F014         	goto	l989
 12090  0028FE                     u5830:
 12091  0028FE  FFFF               	dw	65535	; assembler added errata NOP
 12092  002900  0EFF               	movlw	255
 12093  002902  1459               	andwf	___fldiv@grs^0,w,c
 12094  002904  6E4E               	movwf	??___fldiv^0,c
 12095  002906  0EFF               	movlw	255
 12096  002908  145A               	andwf	(___fldiv@grs+1)^0,w,c
 12097  00290A  6E4F               	movwf	(??___fldiv+1)^0,c
 12098  00290C  0EFF               	movlw	255
 12099  00290E  145B               	andwf	(___fldiv@grs+2)^0,w,c
 12100  002910  6E50               	movwf	(??___fldiv+2)^0,c
 12101  002912  0E7F               	movlw	127
 12102  002914  145C               	andwf	(___fldiv@grs+3)^0,w,c
 12103  002916  6E51               	movwf	(??___fldiv+3)^0,c
 12104  002918  504E               	movf	??___fldiv^0,w,c
 12105  00291A  104F               	iorwf	(??___fldiv+1)^0,w,c
 12106  00291C  1050               	iorwf	(??___fldiv+2)^0,w,c
 12107  00291E  1051               	iorwf	(??___fldiv+3)^0,w,c
 12108  002920  B4D8               	btfsc	status,2,c
 12109  002922  EF95  F014         	goto	u5841
 12110  002926  EF98  F014         	goto	u5840
 12111  00292A                     u5841:
 12112  00292A  FFFF               	dw	65535	; assembler added errata NOP
 12113  00292C  EF9E  F014         	goto	l990
 12114  002930                     u5840:
 12115  002930  FFFF               	dw	65535	; assembler added errata NOP
 12116  002932                     l4804:
 12117  002932  FFFF               	dw	65535	; assembler added errata NOP
 12118  002934  0E01               	movlw	1
 12119  002936  6E5E               	movwf	___fldiv@aexp^0,c
 12120  002938  EFAA  F014         	goto	l989
 12121  00293C                     l990:
 12122  00293C  FFFF               	dw	65535	; assembler added errata NOP
 12123  00293E  A046               	btfss	___fldiv@b^0,0,c
 12124  002940  EFA4  F014         	goto	u5851
 12125  002944  EFA7  F014         	goto	u5850
 12126  002948                     u5851:
 12127  002948  FFFF               	dw	65535	; assembler added errata NOP
 12128  00294A  EFAA  F014         	goto	l989
 12129  00294E                     u5850:
 12130  00294E  FFFF               	dw	65535	; assembler added errata NOP
 12131  002950  EF99  F014         	goto	l4804
 12132  002954                     l989:
 12133  002954  FFFF               	dw	65535	; assembler added errata NOP
 12134  002956  505E               	movf	___fldiv@aexp^0,w,c
 12135  002958  B4D8               	btfsc	status,2,c
 12136  00295A  EFB1  F014         	goto	u5861
 12137  00295E  EFB4  F014         	goto	u5860
 12138  002962                     u5861:
 12139  002962  FFFF               	dw	65535	; assembler added errata NOP
 12140  002964  EFDB  F014         	goto	l4816
 12141  002968                     u5860:
 12142  002968  FFFF               	dw	65535	; assembler added errata NOP
 12143  00296A  0E01               	movlw	1
 12144  00296C  2646               	addwf	___fldiv@b^0,f,c
 12145  00296E  0E00               	movlw	0
 12146  002970  2247               	addwfc	(___fldiv@b+1)^0,f,c
 12147  002972  2248               	addwfc	(___fldiv@b+2)^0,f,c
 12148  002974  2249               	addwfc	(___fldiv@b+3)^0,f,c
 12149  002976  A049               	btfss	(___fldiv@b+3)^0,0,c
 12150  002978  EFC0  F014         	goto	u5871
 12151  00297C  EFC3  F014         	goto	u5870
 12152  002980                     u5871:
 12153  002980  FFFF               	dw	65535	; assembler added errata NOP
 12154  002982  EFDB  F014         	goto	l4816
 12155  002986                     u5870:
 12156  002986  FFFF               	dw	65535	; assembler added errata NOP
 12157  002988  C046  F04E         	movff	___fldiv@b,??___fldiv
 12158  00298C  C047  F04F         	movff	___fldiv@b+1,??___fldiv+1
 12159  002990  C048  F050         	movff	___fldiv@b+2,??___fldiv+2
 12160  002994  C049  F051         	movff	___fldiv@b+3,??___fldiv+3
 12161  002998  3451               	rlcf	(??___fldiv+3)^0,w,c
 12162  00299A  3251               	rrcf	(??___fldiv+3)^0,f,c
 12163  00299C  3250               	rrcf	(??___fldiv+2)^0,f,c
 12164  00299E  324F               	rrcf	(??___fldiv+1)^0,f,c
 12165  0029A0  324E               	rrcf	??___fldiv^0,f,c
 12166  0029A2  C04E  F046         	movff	??___fldiv,___fldiv@b
 12167  0029A6  C04F  F047         	movff	??___fldiv+1,___fldiv@b+1
 12168  0029AA  C050  F048         	movff	??___fldiv+2,___fldiv@b+2
 12169  0029AE  C051  F049         	movff	??___fldiv+3,___fldiv@b+3
 12170  0029B2  4A57               	infsnz	___fldiv@new_exp^0,f,c
 12171  0029B4  2A58               	incf	(___fldiv@new_exp+1)^0,f,c
 12172  0029B6                     l4816:
 12173  0029B6  FFFF               	dw	65535	; assembler added errata NOP
 12174  0029B8  BE58               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12175  0029BA  EFE7  F014         	goto	u5881
 12176  0029BE  5058               	movf	(___fldiv@new_exp+1)^0,w,c
 12177  0029C0  E109               	bnz	u5880
 12178  0029C2  2857               	incf	___fldiv@new_exp^0,w,c
 12179  0029C4  A0D8               	btfss	status,0,c
 12180  0029C6  EFE7  F014         	goto	u5881
 12181  0029CA  EFEA  F014         	goto	u5880
 12182  0029CE                     u5881:
 12183  0029CE  FFFF               	dw	65535	; assembler added errata NOP
 12184  0029D0  EFF6  F014         	goto	l4820
 12185  0029D4                     u5880:
 12186  0029D4  FFFF               	dw	65535	; assembler added errata NOP
 12187  0029D6  0E00               	movlw	0
 12188  0029D8  6E58               	movwf	(___fldiv@new_exp+1)^0,c
 12189  0029DA  6857               	setf	___fldiv@new_exp^0,c
 12190  0029DC  0E00               	movlw	0
 12191  0029DE  6E46               	movwf	___fldiv@b^0,c
 12192  0029E0  0E00               	movlw	0
 12193  0029E2  6E47               	movwf	(___fldiv@b+1)^0,c
 12194  0029E4  0E00               	movlw	0
 12195  0029E6  6E48               	movwf	(___fldiv@b+2)^0,c
 12196  0029E8  0E00               	movlw	0
 12197  0029EA  6E49               	movwf	(___fldiv@b+3)^0,c
 12198  0029EC                     l4820:
 12199  0029EC  FFFF               	dw	65535	; assembler added errata NOP
 12200  0029EE  BE58               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12201  0029F0  EF05  F015         	goto	u5890
 12202  0029F4  5058               	movf	(___fldiv@new_exp+1)^0,w,c
 12203  0029F6  E106               	bnz	u5891
 12204  0029F8  0457               	decf	___fldiv@new_exp^0,w,c
 12205  0029FA  B0D8               	btfsc	status,0,c
 12206  0029FC  EF02  F015         	goto	u5891
 12207  002A00  EF05  F015         	goto	u5890
 12208  002A04                     u5891:
 12209  002A04  FFFF               	dw	65535	; assembler added errata NOP
 12210  002A06  EF14  F015         	goto	l4824
 12211  002A0A                     u5890:
 12212  002A0A  FFFF               	dw	65535	; assembler added errata NOP
 12213  002A0C  0E00               	movlw	0
 12214  002A0E  6E58               	movwf	(___fldiv@new_exp+1)^0,c
 12215  002A10  0E00               	movlw	0
 12216  002A12  6E57               	movwf	___fldiv@new_exp^0,c
 12217  002A14  0E00               	movlw	0
 12218  002A16  6E46               	movwf	___fldiv@b^0,c
 12219  002A18  0E00               	movlw	0
 12220  002A1A  6E47               	movwf	(___fldiv@b+1)^0,c
 12221  002A1C  0E00               	movlw	0
 12222  002A1E  6E48               	movwf	(___fldiv@b+2)^0,c
 12223  002A20  0E00               	movlw	0
 12224  002A22  6E49               	movwf	(___fldiv@b+3)^0,c
 12225  002A24  0E00               	movlw	0
 12226  002A26  6E56               	movwf	___fldiv@sign^0,c
 12227  002A28                     l4824:
 12228  002A28  FFFF               	dw	65535	; assembler added errata NOP
 12229  002A2A  C057  F05D         	movff	___fldiv@new_exp,___fldiv@bexp
 12230  002A2E  A05D               	btfss	___fldiv@bexp^0,0,c
 12231  002A30  EF1C  F015         	goto	u5901
 12232  002A34  EF1F  F015         	goto	u5900
 12233  002A38                     u5901:
 12234  002A38  FFFF               	dw	65535	; assembler added errata NOP
 12235  002A3A  EF23  F015         	goto	l4830
 12236  002A3E                     u5900:
 12237  002A3E  FFFF               	dw	65535	; assembler added errata NOP
 12238  002A40  8E48               	bsf	(___fldiv@b+2)^0,7,c
 12239  002A42  EF25  F015         	goto	l4832
 12240  002A46                     l4830:
 12241  002A46  FFFF               	dw	65535	; assembler added errata NOP
 12242  002A48  9E48               	bcf	(___fldiv@b+2)^0,7,c
 12243  002A4A                     l4832:
 12244  002A4A  FFFF               	dw	65535	; assembler added errata NOP
 12245  002A4C  90D8               	bcf	status,0,c
 12246  002A4E  305D               	rrcf	___fldiv@bexp^0,w,c
 12247  002A50  6E49               	movwf	(___fldiv@b+3)^0,c
 12248  002A52  EFA9  F013         	goto	l4746
 12249  002A56                     l976:
 12250  002A56  FFFF               	dw	65535	; assembler added errata NOP
 12251  002A58  0012               	return		;funcret
 12252  002A5A  FFFF               	dw	65535	; errata NOP
 12253  002A5C                     __end_of___fldiv:
 12254                           	callstack 0
 12255                           
 12256 ;; *************** function _init_USART *****************
 12257 ;; Defined at:
 12258 ;;		line 13 in file "serial_rs232.c"
 12259 ;; Parameters:    Size  Location     Type
 12260 ;;		None
 12261 ;; Auto vars:     Size  Location     Type
 12262 ;;		None
 12263 ;; Return value:  Size  Location     Type
 12264 ;;                  1    wreg      void 
 12265 ;; Registers used:
 12266 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12267 ;; Tracked objects:
 12268 ;;		On entry : 0/0
 12269 ;;		On exit  : 0/0
 12270 ;;		Unchanged: 0/0
 12271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12272 ;;      Params:         0       0       0       0       0       0       0
 12273 ;;      Locals:         0       0       0       0       0       0       0
 12274 ;;      Temps:          0       0       0       0       0       0       0
 12275 ;;      Totals:         0       0       0       0       0       0       0
 12276 ;;Total ram usage:        0 bytes
 12277 ;; Hardware stack levels used:    1
 12278 ;; Hardware stack levels required when called:    4
 12279 ;; This function calls:
 12280 ;;		___fltol
 12281 ;;		_roundf
 12282 ;; This function is called by:
 12283 ;;		_main
 12284 ;; This function uses a non-reentrant model
 12285 ;;
 12286                           
 12287                           	psect	text49
 12288  006714                     __ptext49:
 12289                           	callstack 0
 12290  006714                     _init_USART:
 12291                           	callstack 0
 12292  006714  FFFF               	dw	65535	; assembler added errata NOP
 12293  006716                     
 12294                           ;serial_rs232.c: 24:     SPBRG = roundf(((fosc / desired_baudrate) / 16) - 1);
 12295  006716  0E55               	movlw	85
 12296  006718  6E77               	movwf	roundf@x^0,c
 12297  00671A  0E55               	movlw	85
 12298  00671C  6E78               	movwf	(roundf@x+1)^0,c
 12299  00671E  0EC8               	movlw	200
 12300  006720  6E79               	movwf	(roundf@x+2)^0,c
 12301  006722  0E41               	movlw	65
 12302  006724  6E7A               	movwf	(roundf@x+3)^0,c
 12303  006726  EC2E  F015         	call	_roundf	;wreg free
 12304  00672A  C077  F0CA         	movff	?_roundf,___fltol@f1
 12305  00672E  C078  F0CB         	movff	?_roundf+1,___fltol@f1+1
 12306  006732  C079  F0CC         	movff	?_roundf+2,___fltol@f1+2
 12307  006736  C07A  F0CD         	movff	?_roundf+3,___fltol@f1+3
 12308  00673A  EC7F  F03C         	call	___fltol	;wreg free
 12309  00673E  0100               	movlb	0	; () banked
 12310  006740  51CA               	movf	?___fltol& (0+255),w,b
 12311  006742  6EAF               	movwf	175,c	;volatile
 12312  006744                     
 12313                           ; BSR set to: 0
 12314                           ;serial_rs232.c: 28:     TXSTAbits.TX9 = 0;
 12315  006744  9CAC               	bcf	172,6,c	;volatile
 12316  006746                     
 12317                           ; BSR set to: 0
 12318                           ;serial_rs232.c: 29:     TXSTAbits.TXEN = 1;
 12319  006746  8AAC               	bsf	172,5,c	;volatile
 12320  006748                     
 12321                           ; BSR set to: 0
 12322                           ;serial_rs232.c: 30:     TXSTAbits.SYNC =0;
 12323  006748  98AC               	bcf	172,4,c	;volatile
 12324  00674A                     
 12325                           ; BSR set to: 0
 12326                           ;serial_rs232.c: 31:     TXSTAbits.BRGH = 1;
 12327  00674A  84AC               	bsf	172,2,c	;volatile
 12328  00674C                     
 12329                           ; BSR set to: 0
 12330                           ;serial_rs232.c: 33:     RCSTAbits.SPEN = 1;
 12331  00674C  8EAB               	bsf	171,7,c	;volatile
 12332  00674E                     
 12333                           ; BSR set to: 0
 12334                           ;serial_rs232.c: 34:     RCSTAbits.RX9 = 0;
 12335  00674E  9CAB               	bcf	171,6,c	;volatile
 12336  006750                     
 12337                           ; BSR set to: 0
 12338                           ;serial_rs232.c: 35:     RCSTAbits.CREN = 1;
 12339  006750  88AB               	bsf	171,4,c	;volatile
 12340  006752                     
 12341                           ; BSR set to: 0
 12342  006752  0012               	return		;funcret
 12343  006754  FFFF               	dw	65535	; errata NOP
 12344  006756                     __end_of_init_USART:
 12345                           	callstack 0
 12346                           
 12347 ;; *************** function _roundf *****************
 12348 ;; Defined at:
 12349 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\roundf.c"
 12350 ;; Parameters:    Size  Location     Type
 12351 ;;  x               4  118[COMRAM] float 
 12352 ;; Auto vars:     Size  Location     Type
 12353 ;;  y               4   14[BANK0 ] float 
 12354 ;;  u               4   10[BANK0 ] struct .
 12355 ;;  e               2    4[BANK0 ] int 
 12356 ;; Return value:  Size  Location     Type
 12357 ;;                  4  118[COMRAM] float 
 12358 ;; Registers used:
 12359 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12360 ;; Tracked objects:
 12361 ;;		On entry : 0/0
 12362 ;;		On exit  : 0/0
 12363 ;;		Unchanged: 0/0
 12364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12365 ;;      Params:         4       0       0       0       0       0       0
 12366 ;;      Locals:         0      18       0       0       0       0       0
 12367 ;;      Temps:          4       0       0       0       0       0       0
 12368 ;;      Totals:         8      18       0       0       0       0       0
 12369 ;;Total ram usage:       26 bytes
 12370 ;; Hardware stack levels used:    1
 12371 ;; Hardware stack levels required when called:    3
 12372 ;; This function calls:
 12373 ;;		___fladd
 12374 ;;		___flge
 12375 ;;		___flmul
 12376 ;;		___flneg
 12377 ;;		___flsub
 12378 ;; This function is called by:
 12379 ;;		_init_USART
 12380 ;; This function uses a non-reentrant model
 12381 ;;
 12382                           
 12383                           	psect	text50
 12384  002A5C                     __ptext50:
 12385                           	callstack 0
 12386  002A5C                     _roundf:
 12387                           	callstack 0
 12388  002A5C  FFFF               	dw	65535	; assembler added errata NOP
 12389  002A5E  C080  F0C2         	movff	roundf@F525,roundf@u
 12390  002A62  C081  F0C3         	movff	roundf@F525+1,roundf@u+1
 12391  002A66  C082  F0C4         	movff	roundf@F525+2,roundf@u+2
 12392  002A6A  C083  F0C5         	movff	roundf@F525+3,roundf@u+3
 12393  002A6E  C077  F0C2         	movff	roundf@x,roundf@u
 12394  002A72  C078  F0C3         	movff	roundf@x+1,roundf@u+1
 12395  002A76  C079  F0C4         	movff	roundf@x+2,roundf@u+2
 12396  002A7A  C07A  F0C5         	movff	roundf@x+3,roundf@u+3
 12397  002A7E  C0C2  F07B         	movff	roundf@u,??_roundf
 12398  002A82  C0C3  F07C         	movff	roundf@u+1,??_roundf+1
 12399  002A86  C0C4  F07D         	movff	roundf@u+2,??_roundf+2
 12400  002A8A  C0C5  F07E         	movff	roundf@u+3,??_roundf+3
 12401  002A8E  0E18               	movlw	24
 12402  002A90  EF50  F015         	goto	u6340
 12403  002A94                     u6345:
 12404  002A94  FFFF               	dw	65535	; assembler added errata NOP
 12405  002A96  90D8               	bcf	status,0,c
 12406  002A98  327E               	rrcf	(??_roundf+3)^0,f,c
 12407  002A9A  327D               	rrcf	(??_roundf+2)^0,f,c
 12408  002A9C  327C               	rrcf	(??_roundf+1)^0,f,c
 12409  002A9E  327B               	rrcf	??_roundf^0,f,c
 12410  002AA0                     u6340:
 12411  002AA0  FFFF               	dw	65535	; assembler added errata NOP
 12412  002AA2  2EE8               	decfsz	wreg,f,c
 12413  002AA4  EF4A  F015         	goto	u6345
 12414  002AA8  507B               	movf	??_roundf^0,w,c
 12415  002AAA  0100               	movlb	0	; () banked
 12416  002AAC  6FBC               	movwf	roundf@e& (0+255),b
 12417  002AAE  6BBD               	clrf	(roundf@e+1)& (0+255),b
 12418  002AB0  BFBD               	btfsc	(roundf@e+1)& (0+255),7,b
 12419  002AB2  EF64  F015         	goto	u6351
 12420  002AB6  51BD               	movf	(roundf@e+1)& (0+255),w,b
 12421  002AB8  E10A               	bnz	u6350
 12422  002ABA  0E96               	movlw	150
 12423  002ABC  5DBC               	subwf	roundf@e& (0+255),w,b
 12424  002ABE  A0D8               	btfss	status,0,c
 12425  002AC0  EF64  F015         	goto	u6351
 12426  002AC4  EF67  F015         	goto	u6350
 12427  002AC8                     u6351:
 12428  002AC8  FFFF               	dw	65535	; assembler added errata NOP
 12429  002ACA  EF72  F015         	goto	l5110
 12430  002ACE                     u6350:
 12431  002ACE  FFFF               	dw	65535	; assembler added errata NOP
 12432  002AD0                     
 12433                           ; BSR set to: 0
 12434  002AD0  C077  F077         	movff	roundf@x,?_roundf
 12435  002AD4  C078  F078         	movff	roundf@x+1,?_roundf+1
 12436  002AD8  C079  F079         	movff	roundf@x+2,?_roundf+2
 12437  002ADC  C07A  F07A         	movff	roundf@x+3,?_roundf+3
 12438  002AE0  EF20  F017         	goto	l1080
 12439  002AE4                     l5110:
 12440  002AE4  FFFF               	dw	65535	; assembler added errata NOP
 12441                           
 12442                           ; BSR set to: 0
 12443  002AE6  C0C2  F07B         	movff	roundf@u,??_roundf
 12444  002AEA  C0C3  F07C         	movff	roundf@u+1,??_roundf+1
 12445  002AEE  C0C4  F07D         	movff	roundf@u+2,??_roundf+2
 12446  002AF2  C0C5  F07E         	movff	roundf@u+3,??_roundf+3
 12447  002AF6  0E20               	movlw	32
 12448  002AF8  EF84  F015         	goto	u6360
 12449  002AFC                     u6365:
 12450  002AFC  FFFF               	dw	65535	; assembler added errata NOP
 12451  002AFE  90D8               	bcf	status,0,c
 12452  002B00  327E               	rrcf	(??_roundf+3)^0,f,c
 12453  002B02  327D               	rrcf	(??_roundf+2)^0,f,c
 12454  002B04  327C               	rrcf	(??_roundf+1)^0,f,c
 12455  002B06  327B               	rrcf	??_roundf^0,f,c
 12456  002B08                     u6360:
 12457  002B08  FFFF               	dw	65535	; assembler added errata NOP
 12458  002B0A  2EE8               	decfsz	wreg,f,c
 12459  002B0C  EF7E  F015         	goto	u6365
 12460  002B10  507B               	movf	??_roundf^0,w,c
 12461  002B12  107C               	iorwf	(??_roundf+1)^0,w,c
 12462  002B14  107D               	iorwf	(??_roundf+2)^0,w,c
 12463  002B16  107E               	iorwf	(??_roundf+3)^0,w,c
 12464  002B18  B4D8               	btfsc	status,2,c
 12465  002B1A  EF91  F015         	goto	u6371
 12466  002B1E  EF94  F015         	goto	u6370
 12467  002B22                     u6371:
 12468  002B22  FFFF               	dw	65535	; assembler added errata NOP
 12469  002B24  EFA7  F015         	goto	l5114
 12470  002B28                     u6370:
 12471  002B28  FFFF               	dw	65535	; assembler added errata NOP
 12472  002B2A                     
 12473                           ; BSR set to: 0
 12474  002B2A  C077  F001         	movff	roundf@x,___flneg@f1
 12475  002B2E  C078  F002         	movff	roundf@x+1,___flneg@f1+1
 12476  002B32  C079  F003         	movff	roundf@x+2,___flneg@f1+2
 12477  002B36  C07A  F004         	movff	roundf@x+3,___flneg@f1+3
 12478  002B3A  EC69  F033         	call	___flneg	;wreg free
 12479  002B3E  C001  F077         	movff	?___flneg,roundf@x
 12480  002B42  C002  F078         	movff	?___flneg+1,roundf@x+1
 12481  002B46  C003  F079         	movff	?___flneg+2,roundf@x+2
 12482  002B4A  C004  F07A         	movff	?___flneg+3,roundf@x+3
 12483  002B4E                     l5114:
 12484  002B4E  FFFF               	dw	65535	; assembler added errata NOP
 12485  002B50  0100               	movlb	0	; () banked
 12486  002B52  BFBD               	btfsc	(roundf@e+1)& (0+255),7,b
 12487  002B54  EFB8  F015         	goto	u6380
 12488  002B58  51BD               	movf	(roundf@e+1)& (0+255),w,b
 12489  002B5A  E107               	bnz	u6381
 12490  002B5C  0E7E               	movlw	126
 12491  002B5E  5DBC               	subwf	roundf@e& (0+255),w,b
 12492  002B60  B0D8               	btfsc	status,0,c
 12493  002B62  EFB5  F015         	goto	u6381
 12494  002B66  EFB8  F015         	goto	u6380
 12495  002B6A                     u6381:
 12496  002B6A  FFFF               	dw	65535	; assembler added errata NOP
 12497  002B6C  EFD5  F015         	goto	l5120
 12498  002B70                     u6380:
 12499  002B70  FFFF               	dw	65535	; assembler added errata NOP
 12500  002B72                     
 12501                           ; BSR set to: 0
 12502  002B72  C0C2  F02D         	movff	roundf@u,___flmul@b
 12503  002B76  C0C3  F02E         	movff	roundf@u+1,___flmul@b+1
 12504  002B7A  C0C4  F02F         	movff	roundf@u+2,___flmul@b+2
 12505  002B7E  C0C5  F030         	movff	roundf@u+3,___flmul@b+3
 12506  002B82  0E00               	movlw	0
 12507  002B84  6E31               	movwf	___flmul@a^0,c
 12508  002B86  0E00               	movlw	0
 12509  002B88  6E32               	movwf	(___flmul@a+1)^0,c
 12510  002B8A  0E00               	movlw	0
 12511  002B8C  6E33               	movwf	(___flmul@a+2)^0,c
 12512  002B8E  0E00               	movlw	0
 12513  002B90  6E34               	movwf	(___flmul@a+3)^0,c
 12514  002B92  ECC3  F010         	call	___flmul	;wreg free
 12515  002B96  C02D  F077         	movff	?___flmul,?_roundf
 12516  002B9A  C02E  F078         	movff	?___flmul+1,?_roundf+1
 12517  002B9E  C02F  F079         	movff	?___flmul+2,?_roundf+2
 12518  002BA2  C030  F07A         	movff	?___flmul+3,?_roundf+3
 12519  002BA6  EF20  F017         	goto	l1080
 12520  002BAA                     l5120:
 12521  002BAA  FFFF               	dw	65535	; assembler added errata NOP
 12522                           
 12523                           ; BSR set to: 0
 12524  002BAC  0E00               	movlw	0
 12525  002BAE  6E63               	movwf	___fladd@a^0,c
 12526  002BB0  0E00               	movlw	0
 12527  002BB2  6E64               	movwf	(___fladd@a+1)^0,c
 12528  002BB4  0E00               	movlw	0
 12529  002BB6  6E65               	movwf	(___fladd@a+2)^0,c
 12530  002BB8  0E4B               	movlw	75
 12531  002BBA  6E66               	movwf	(___fladd@a+3)^0,c
 12532  002BBC  C077  F05F         	movff	roundf@x,___fladd@b
 12533  002BC0  C078  F060         	movff	roundf@x+1,___fladd@b+1
 12534  002BC4  C079  F061         	movff	roundf@x+2,___fladd@b+2
 12535  002BC8  C07A  F062         	movff	roundf@x+3,___fladd@b+3
 12536  002BCC  ECEF  F00D         	call	___fladd	;wreg free
 12537  002BD0  C05F  F0BE         	movff	?___fladd,_roundf$2137
 12538  002BD4  C060  F0BF         	movff	?___fladd+1,_roundf$2137+1
 12539  002BD8  C061  F0C0         	movff	?___fladd+2,_roundf$2137+2
 12540  002BDC  C062  F0C1         	movff	?___fladd+3,_roundf$2137+3
 12541  002BE0  0E00               	movlw	0
 12542  002BE2  6E63               	movwf	___fladd@a^0,c
 12543  002BE4  0E00               	movlw	0
 12544  002BE6  6E64               	movwf	(___fladd@a+1)^0,c
 12545  002BE8  0E00               	movlw	0
 12546  002BEA  6E65               	movwf	(___fladd@a+2)^0,c
 12547  002BEC  0ECB               	movlw	203
 12548  002BEE  6E66               	movwf	(___fladd@a+3)^0,c
 12549  002BF0  C0BE  F05F         	movff	_roundf$2137,___fladd@b
 12550  002BF4  C0BF  F060         	movff	_roundf$2137+1,___fladd@b+1
 12551  002BF8  C0C0  F061         	movff	_roundf$2137+2,___fladd@b+2
 12552  002BFC  C0C1  F062         	movff	_roundf$2137+3,___fladd@b+3
 12553  002C00  ECEF  F00D         	call	___fladd	;wreg free
 12554  002C04  C05F  F0B8         	movff	?___fladd,_roundf$2138
 12555  002C08  C060  F0B9         	movff	?___fladd+1,_roundf$2138+1
 12556  002C0C  C061  F0BA         	movff	?___fladd+2,_roundf$2138+2
 12557  002C10  C062  F0BB         	movff	?___fladd+3,_roundf$2138+3
 12558  002C14  C0B8  F06F         	movff	_roundf$2138,___flsub@b
 12559  002C18  C0B9  F070         	movff	_roundf$2138+1,___flsub@b+1
 12560  002C1C  C0BA  F071         	movff	_roundf$2138+2,___flsub@b+2
 12561  002C20  C0BB  F072         	movff	_roundf$2138+3,___flsub@b+3
 12562  002C24  C077  F073         	movff	roundf@x,___flsub@a
 12563  002C28  C078  F074         	movff	roundf@x+1,___flsub@a+1
 12564  002C2C  C079  F075         	movff	roundf@x+2,___flsub@a+2
 12565  002C30  C07A  F076         	movff	roundf@x+3,___flsub@a+3
 12566  002C34  EC31  F034         	call	___flsub	;wreg free
 12567  002C38  C06F  F0C6         	movff	?___flsub,roundf@y
 12568  002C3C  C070  F0C7         	movff	?___flsub+1,roundf@y+1
 12569  002C40  C071  F0C8         	movff	?___flsub+2,roundf@y+2
 12570  002C44  C072  F0C9         	movff	?___flsub+3,roundf@y+3
 12571  002C48  0E00               	movlw	0
 12572  002C4A  6E01               	movwf	___flge@ff1^0,c
 12573  002C4C  0E00               	movlw	0
 12574  002C4E  6E02               	movwf	(___flge@ff1+1)^0,c
 12575  002C50  0E00               	movlw	0
 12576  002C52  6E03               	movwf	(___flge@ff1+2)^0,c
 12577  002C54  0E3F               	movlw	63
 12578  002C56  6E04               	movwf	(___flge@ff1+3)^0,c
 12579  002C58  C0C6  F005         	movff	roundf@y,___flge@ff2
 12580  002C5C  C0C7  F006         	movff	roundf@y+1,___flge@ff2+1
 12581  002C60  C0C8  F007         	movff	roundf@y+2,___flge@ff2+2
 12582  002C64  C0C9  F008         	movff	roundf@y+3,___flge@ff2+3
 12583  002C68  ECEB  F03B         	call	___flge	;wreg free
 12584  002C6C  B0D8               	btfsc	status,0,c
 12585  002C6E  EF3B  F016         	goto	u6391
 12586  002C72  EF3E  F016         	goto	u6390
 12587  002C76                     u6391:
 12588  002C76  FFFF               	dw	65535	; assembler added errata NOP
 12589  002C78  EF75  F016         	goto	l5124
 12590  002C7C                     u6390:
 12591  002C7C  FFFF               	dw	65535	; assembler added errata NOP
 12592  002C7E  C077  F063         	movff	roundf@x,___fladd@a
 12593  002C82  C078  F064         	movff	roundf@x+1,___fladd@a+1
 12594  002C86  C079  F065         	movff	roundf@x+2,___fladd@a+2
 12595  002C8A  C07A  F066         	movff	roundf@x+3,___fladd@a+3
 12596  002C8E  C0C6  F05F         	movff	roundf@y,___fladd@b
 12597  002C92  C0C7  F060         	movff	roundf@y+1,___fladd@b+1
 12598  002C96  C0C8  F061         	movff	roundf@y+2,___fladd@b+2
 12599  002C9A  C0C9  F062         	movff	roundf@y+3,___fladd@b+3
 12600  002C9E  ECEF  F00D         	call	___fladd	;wreg free
 12601  002CA2  C05F  F0BE         	movff	?___fladd,_roundf$2137
 12602  002CA6  C060  F0BF         	movff	?___fladd+1,_roundf$2137+1
 12603  002CAA  C061  F0C0         	movff	?___fladd+2,_roundf$2137+2
 12604  002CAE  C062  F0C1         	movff	?___fladd+3,_roundf$2137+3
 12605  002CB2  C0BE  F05F         	movff	_roundf$2137,___fladd@b
 12606  002CB6  C0BF  F060         	movff	_roundf$2137+1,___fladd@b+1
 12607  002CBA  C0C0  F061         	movff	_roundf$2137+2,___fladd@b+2
 12608  002CBE  C0C1  F062         	movff	_roundf$2137+3,___fladd@b+3
 12609  002CC2  0E00               	movlw	0
 12610  002CC4  6E63               	movwf	___fladd@a^0,c
 12611  002CC6  0E00               	movlw	0
 12612  002CC8  6E64               	movwf	(___fladd@a+1)^0,c
 12613  002CCA  0E80               	movlw	128
 12614  002CCC  6E65               	movwf	(___fladd@a+2)^0,c
 12615  002CCE  0EBF               	movlw	191
 12616  002CD0  6E66               	movwf	(___fladd@a+3)^0,c
 12617  002CD2  ECEF  F00D         	call	___fladd	;wreg free
 12618  002CD6  C05F  F0C6         	movff	?___fladd,roundf@y
 12619  002CDA  C060  F0C7         	movff	?___fladd+1,roundf@y+1
 12620  002CDE  C061  F0C8         	movff	?___fladd+2,roundf@y+2
 12621  002CE2  C062  F0C9         	movff	?___fladd+3,roundf@y+3
 12622  002CE6  EFE2  F016         	goto	l5130
 12623  002CEA                     l5124:
 12624  002CEA  FFFF               	dw	65535	; assembler added errata NOP
 12625  002CEC  0E00               	movlw	0
 12626  002CEE  6E01               	movwf	___flge@ff1^0,c
 12627  002CF0  0E00               	movlw	0
 12628  002CF2  6E02               	movwf	(___flge@ff1+1)^0,c
 12629  002CF4  0E00               	movlw	0
 12630  002CF6  6E03               	movwf	(___flge@ff1+2)^0,c
 12631  002CF8  0EBF               	movlw	191
 12632  002CFA  6E04               	movwf	(___flge@ff1+3)^0,c
 12633  002CFC  C0C6  F005         	movff	roundf@y,___flge@ff2
 12634  002D00  C0C7  F006         	movff	roundf@y+1,___flge@ff2+1
 12635  002D04  C0C8  F007         	movff	roundf@y+2,___flge@ff2+2
 12636  002D08  C0C9  F008         	movff	roundf@y+3,___flge@ff2+3
 12637  002D0C  ECEB  F03B         	call	___flge	;wreg free
 12638  002D10  A0D8               	btfss	status,0,c
 12639  002D12  EF8D  F016         	goto	u6401
 12640  002D16  EF90  F016         	goto	u6400
 12641  002D1A                     u6401:
 12642  002D1A  FFFF               	dw	65535	; assembler added errata NOP
 12643  002D1C  EFC7  F016         	goto	l5128
 12644  002D20                     u6400:
 12645  002D20  FFFF               	dw	65535	; assembler added errata NOP
 12646  002D22  C077  F063         	movff	roundf@x,___fladd@a
 12647  002D26  C078  F064         	movff	roundf@x+1,___fladd@a+1
 12648  002D2A  C079  F065         	movff	roundf@x+2,___fladd@a+2
 12649  002D2E  C07A  F066         	movff	roundf@x+3,___fladd@a+3
 12650  002D32  C0C6  F05F         	movff	roundf@y,___fladd@b
 12651  002D36  C0C7  F060         	movff	roundf@y+1,___fladd@b+1
 12652  002D3A  C0C8  F061         	movff	roundf@y+2,___fladd@b+2
 12653  002D3E  C0C9  F062         	movff	roundf@y+3,___fladd@b+3
 12654  002D42  ECEF  F00D         	call	___fladd	;wreg free
 12655  002D46  C05F  F0BE         	movff	?___fladd,_roundf$2137
 12656  002D4A  C060  F0BF         	movff	?___fladd+1,_roundf$2137+1
 12657  002D4E  C061  F0C0         	movff	?___fladd+2,_roundf$2137+2
 12658  002D52  C062  F0C1         	movff	?___fladd+3,_roundf$2137+3
 12659  002D56  C0BE  F05F         	movff	_roundf$2137,___fladd@b
 12660  002D5A  C0BF  F060         	movff	_roundf$2137+1,___fladd@b+1
 12661  002D5E  C0C0  F061         	movff	_roundf$2137+2,___fladd@b+2
 12662  002D62  C0C1  F062         	movff	_roundf$2137+3,___fladd@b+3
 12663  002D66  0E00               	movlw	0
 12664  002D68  6E63               	movwf	___fladd@a^0,c
 12665  002D6A  0E00               	movlw	0
 12666  002D6C  6E64               	movwf	(___fladd@a+1)^0,c
 12667  002D6E  0E80               	movlw	128
 12668  002D70  6E65               	movwf	(___fladd@a+2)^0,c
 12669  002D72  0E3F               	movlw	63
 12670  002D74  6E66               	movwf	(___fladd@a+3)^0,c
 12671  002D76  ECEF  F00D         	call	___fladd	;wreg free
 12672  002D7A  C05F  F0C6         	movff	?___fladd,roundf@y
 12673  002D7E  C060  F0C7         	movff	?___fladd+1,roundf@y+1
 12674  002D82  C061  F0C8         	movff	?___fladd+2,roundf@y+2
 12675  002D86  C062  F0C9         	movff	?___fladd+3,roundf@y+3
 12676  002D8A  EFE2  F016         	goto	l5130
 12677  002D8E                     l5128:
 12678  002D8E  FFFF               	dw	65535	; assembler added errata NOP
 12679  002D90  C0C6  F05F         	movff	roundf@y,___fladd@b
 12680  002D94  C0C7  F060         	movff	roundf@y+1,___fladd@b+1
 12681  002D98  C0C8  F061         	movff	roundf@y+2,___fladd@b+2
 12682  002D9C  C0C9  F062         	movff	roundf@y+3,___fladd@b+3
 12683  002DA0  C077  F063         	movff	roundf@x,___fladd@a
 12684  002DA4  C078  F064         	movff	roundf@x+1,___fladd@a+1
 12685  002DA8  C079  F065         	movff	roundf@x+2,___fladd@a+2
 12686  002DAC  C07A  F066         	movff	roundf@x+3,___fladd@a+3
 12687  002DB0  ECEF  F00D         	call	___fladd	;wreg free
 12688  002DB4  C05F  F0C6         	movff	?___fladd,roundf@y
 12689  002DB8  C060  F0C7         	movff	?___fladd+1,roundf@y+1
 12690  002DBC  C061  F0C8         	movff	?___fladd+2,roundf@y+2
 12691  002DC0  C062  F0C9         	movff	?___fladd+3,roundf@y+3
 12692  002DC4                     l5130:
 12693  002DC4  FFFF               	dw	65535	; assembler added errata NOP
 12694  002DC6  C0C2  F07B         	movff	roundf@u,??_roundf
 12695  002DCA  C0C3  F07C         	movff	roundf@u+1,??_roundf+1
 12696  002DCE  C0C4  F07D         	movff	roundf@u+2,??_roundf+2
 12697  002DD2  C0C5  F07E         	movff	roundf@u+3,??_roundf+3
 12698  002DD6  0E20               	movlw	32
 12699  002DD8  EFF4  F016         	goto	u6410
 12700  002DDC                     u6415:
 12701  002DDC  FFFF               	dw	65535	; assembler added errata NOP
 12702  002DDE  90D8               	bcf	status,0,c
 12703  002DE0  327E               	rrcf	(??_roundf+3)^0,f,c
 12704  002DE2  327D               	rrcf	(??_roundf+2)^0,f,c
 12705  002DE4  327C               	rrcf	(??_roundf+1)^0,f,c
 12706  002DE6  327B               	rrcf	??_roundf^0,f,c
 12707  002DE8                     u6410:
 12708  002DE8  FFFF               	dw	65535	; assembler added errata NOP
 12709  002DEA  2EE8               	decfsz	wreg,f,c
 12710  002DEC  EFEE  F016         	goto	u6415
 12711  002DF0  507B               	movf	??_roundf^0,w,c
 12712  002DF2  107C               	iorwf	(??_roundf+1)^0,w,c
 12713  002DF4  107D               	iorwf	(??_roundf+2)^0,w,c
 12714  002DF6  107E               	iorwf	(??_roundf+3)^0,w,c
 12715  002DF8  B4D8               	btfsc	status,2,c
 12716  002DFA  EF01  F017         	goto	u6421
 12717  002DFE  EF04  F017         	goto	u6420
 12718  002E02                     u6421:
 12719  002E02  FFFF               	dw	65535	; assembler added errata NOP
 12720  002E04  EF17  F017         	goto	l5134
 12721  002E08                     u6420:
 12722  002E08  FFFF               	dw	65535	; assembler added errata NOP
 12723  002E0A  C0C6  F001         	movff	roundf@y,___flneg@f1
 12724  002E0E  C0C7  F002         	movff	roundf@y+1,___flneg@f1+1
 12725  002E12  C0C8  F003         	movff	roundf@y+2,___flneg@f1+2
 12726  002E16  C0C9  F004         	movff	roundf@y+3,___flneg@f1+3
 12727  002E1A  EC69  F033         	call	___flneg	;wreg free
 12728  002E1E  C001  F0C6         	movff	?___flneg,roundf@y
 12729  002E22  C002  F0C7         	movff	?___flneg+1,roundf@y+1
 12730  002E26  C003  F0C8         	movff	?___flneg+2,roundf@y+2
 12731  002E2A  C004  F0C9         	movff	?___flneg+3,roundf@y+3
 12732  002E2E                     l5134:
 12733  002E2E  FFFF               	dw	65535	; assembler added errata NOP
 12734  002E30  C0C6  F077         	movff	roundf@y,?_roundf
 12735  002E34  C0C7  F078         	movff	roundf@y+1,?_roundf+1
 12736  002E38  C0C8  F079         	movff	roundf@y+2,?_roundf+2
 12737  002E3C  C0C9  F07A         	movff	roundf@y+3,?_roundf+3
 12738  002E40                     l1080:
 12739  002E40  FFFF               	dw	65535	; assembler added errata NOP
 12740  002E42  0012               	return		;funcret
 12741  002E44  FFFF               	dw	65535	; errata NOP
 12742  002E46                     __end_of_roundf:
 12743                           	callstack 0
 12744                           
 12745 ;; *************** function ___flsub *****************
 12746 ;; Defined at:
 12747 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 12748 ;; Parameters:    Size  Location     Type
 12749 ;;  b               4  110[COMRAM] float 
 12750 ;;  a               4  114[COMRAM] float 
 12751 ;; Auto vars:     Size  Location     Type
 12752 ;;		None
 12753 ;; Return value:  Size  Location     Type
 12754 ;;                  4  110[COMRAM] float 
 12755 ;; Registers used:
 12756 ;;		wreg, status,2, status,0, cstack
 12757 ;; Tracked objects:
 12758 ;;		On entry : 0/0
 12759 ;;		On exit  : 0/0
 12760 ;;		Unchanged: 0/0
 12761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12762 ;;      Params:         8       0       0       0       0       0       0
 12763 ;;      Locals:         0       0       0       0       0       0       0
 12764 ;;      Temps:          0       0       0       0       0       0       0
 12765 ;;      Totals:         8       0       0       0       0       0       0
 12766 ;;Total ram usage:        8 bytes
 12767 ;; Hardware stack levels used:    1
 12768 ;; Hardware stack levels required when called:    2
 12769 ;; This function calls:
 12770 ;;		___fladd
 12771 ;; This function is called by:
 12772 ;;		_roundf
 12773 ;; This function uses a non-reentrant model
 12774 ;;
 12775                           
 12776                           	psect	text51
 12777  006862                     __ptext51:
 12778                           	callstack 0
 12779  006862                     ___flsub:
 12780                           	callstack 0
 12781  006862  FFFF               	dw	65535	; assembler added errata NOP
 12782  006864  0E00               	movlw	0
 12783  006866  1A73               	xorwf	___flsub@a^0,f,c
 12784  006868  0E00               	movlw	0
 12785  00686A  1A74               	xorwf	(___flsub@a+1)^0,f,c
 12786  00686C  0E00               	movlw	0
 12787  00686E  1A75               	xorwf	(___flsub@a+2)^0,f,c
 12788  006870  0E80               	movlw	128
 12789  006872  1A76               	xorwf	(___flsub@a+3)^0,f,c
 12790  006874  C06F  F05F         	movff	___flsub@b,___fladd@b
 12791  006878  C070  F060         	movff	___flsub@b+1,___fladd@b+1
 12792  00687C  C071  F061         	movff	___flsub@b+2,___fladd@b+2
 12793  006880  C072  F062         	movff	___flsub@b+3,___fladd@b+3
 12794  006884  C073  F063         	movff	___flsub@a,___fladd@a
 12795  006888  C074  F064         	movff	___flsub@a+1,___fladd@a+1
 12796  00688C  C075  F065         	movff	___flsub@a+2,___fladd@a+2
 12797  006890  C076  F066         	movff	___flsub@a+3,___fladd@a+3
 12798  006894  ECEF  F00D         	call	___fladd	;wreg free
 12799  006898  C05F  F06F         	movff	?___fladd,?___flsub
 12800  00689C  C060  F070         	movff	?___fladd+1,?___flsub+1
 12801  0068A0  C061  F071         	movff	?___fladd+2,?___flsub+2
 12802  0068A4  C062  F072         	movff	?___fladd+3,?___flsub+3
 12803  0068A8  0012               	return		;funcret
 12804  0068AA  FFFF               	dw	65535	; errata NOP
 12805  0068AC                     __end_of___flsub:
 12806                           	callstack 0
 12807                           
 12808 ;; *************** function ___fladd *****************
 12809 ;; Defined at:
 12810 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 12811 ;; Parameters:    Size  Location     Type
 12812 ;;  b               4   94[COMRAM] float 
 12813 ;;  a               4   98[COMRAM] float 
 12814 ;; Auto vars:     Size  Location     Type
 12815 ;;  grs             1  109[COMRAM] unsigned char 
 12816 ;;  bexp            1  108[COMRAM] unsigned char 
 12817 ;;  aexp            1  107[COMRAM] unsigned char 
 12818 ;;  signs           1  106[COMRAM] unsigned char 
 12819 ;; Return value:  Size  Location     Type
 12820 ;;                  4   94[COMRAM] unsigned char 
 12821 ;; Registers used:
 12822 ;;		wreg, status,2, status,0
 12823 ;; Tracked objects:
 12824 ;;		On entry : 0/0
 12825 ;;		On exit  : 0/0
 12826 ;;		Unchanged: 0/0
 12827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12828 ;;      Params:         8       0       0       0       0       0       0
 12829 ;;      Locals:         4       0       0       0       0       0       0
 12830 ;;      Temps:          4       0       0       0       0       0       0
 12831 ;;      Totals:        16       0       0       0       0       0       0
 12832 ;;Total ram usage:       16 bytes
 12833 ;; Hardware stack levels used:    1
 12834 ;; Hardware stack levels required when called:    1
 12835 ;; This function calls:
 12836 ;;		Nothing
 12837 ;; This function is called by:
 12838 ;;		_init_timer_2
 12839 ;;		___flsub
 12840 ;;		_roundf
 12841 ;; This function uses a non-reentrant model
 12842 ;;
 12843                           
 12844                           	psect	text52
 12845  001BDE                     __ptext52:
 12846                           	callstack 0
 12847  001BDE                     ___fladd:
 12848                           	callstack 0
 12849  001BDE  FFFF               	dw	65535	; assembler added errata NOP
 12850  001BE0  5062               	movf	(___fladd@b+3)^0,w,c
 12851  001BE2  0B80               	andlw	128
 12852  001BE4  6E6B               	movwf	___fladd@signs^0,c
 12853  001BE6  5062               	movf	(___fladd@b+3)^0,w,c
 12854  001BE8  2462               	addwf	(___fladd@b+3)^0,w,c
 12855  001BEA  6E6D               	movwf	___fladd@bexp^0,c
 12856  001BEC  AE61               	btfss	(___fladd@b+2)^0,7,c
 12857  001BEE  EFFB  F00D         	goto	u4801
 12858  001BF2  EFFE  F00D         	goto	u4800
 12859  001BF6                     u4801:
 12860  001BF6  FFFF               	dw	65535	; assembler added errata NOP
 12861  001BF8  EF00  F00E         	goto	l4172
 12862  001BFC                     u4800:
 12863  001BFC  FFFF               	dw	65535	; assembler added errata NOP
 12864  001BFE  806D               	bsf	___fladd@bexp^0,0,c
 12865  001C00                     l4172:
 12866  001C00  FFFF               	dw	65535	; assembler added errata NOP
 12867  001C02  506D               	movf	___fladd@bexp^0,w,c
 12868  001C04  B4D8               	btfsc	status,2,c
 12869  001C06  EF07  F00E         	goto	u4811
 12870  001C0A  EF0A  F00E         	goto	u4810
 12871  001C0E                     u4811:
 12872  001C0E  FFFF               	dw	65535	; assembler added errata NOP
 12873  001C10  EF23  F00E         	goto	l4182
 12874  001C14                     u4810:
 12875  001C14  FFFF               	dw	65535	; assembler added errata NOP
 12876  001C16  286D               	incf	___fladd@bexp^0,w,c
 12877  001C18  A4D8               	btfss	status,2,c
 12878  001C1A  EF11  F00E         	goto	u4821
 12879  001C1E  EF14  F00E         	goto	u4820
 12880  001C22                     u4821:
 12881  001C22  FFFF               	dw	65535	; assembler added errata NOP
 12882  001C24  EF1D  F00E         	goto	l4178
 12883  001C28                     u4820:
 12884  001C28  FFFF               	dw	65535	; assembler added errata NOP
 12885  001C2A  0E00               	movlw	0
 12886  001C2C  6E5F               	movwf	___fladd@b^0,c
 12887  001C2E  0E00               	movlw	0
 12888  001C30  6E60               	movwf	(___fladd@b+1)^0,c
 12889  001C32  0E00               	movlw	0
 12890  001C34  6E61               	movwf	(___fladd@b+2)^0,c
 12891  001C36  0E00               	movlw	0
 12892  001C38  6E62               	movwf	(___fladd@b+3)^0,c
 12893  001C3A                     l4178:
 12894  001C3A  FFFF               	dw	65535	; assembler added errata NOP
 12895  001C3C  8E61               	bsf	(___fladd@b+2)^0,7,c
 12896  001C3E  0E00               	movlw	0
 12897  001C40  6E62               	movwf	(___fladd@b+3)^0,c
 12898  001C42  EF2C  F00E         	goto	l4184
 12899  001C46                     l4182:
 12900  001C46  FFFF               	dw	65535	; assembler added errata NOP
 12901  001C48  0E00               	movlw	0
 12902  001C4A  6E5F               	movwf	___fladd@b^0,c
 12903  001C4C  0E00               	movlw	0
 12904  001C4E  6E60               	movwf	(___fladd@b+1)^0,c
 12905  001C50  0E00               	movlw	0
 12906  001C52  6E61               	movwf	(___fladd@b+2)^0,c
 12907  001C54  0E00               	movlw	0
 12908  001C56  6E62               	movwf	(___fladd@b+3)^0,c
 12909  001C58                     l4184:
 12910  001C58  FFFF               	dw	65535	; assembler added errata NOP
 12911  001C5A  5066               	movf	(___fladd@a+3)^0,w,c
 12912  001C5C  0B80               	andlw	128
 12913  001C5E  6E6C               	movwf	___fladd@aexp^0,c
 12914  001C60  506B               	movf	___fladd@signs^0,w,c
 12915  001C62  186C               	xorwf	___fladd@aexp^0,w,c
 12916  001C64  B4D8               	btfsc	status,2,c
 12917  001C66  EF37  F00E         	goto	u4831
 12918  001C6A  EF3A  F00E         	goto	u4830
 12919  001C6E                     u4831:
 12920  001C6E  FFFF               	dw	65535	; assembler added errata NOP
 12921  001C70  EF3C  F00E         	goto	l4190
 12922  001C74                     u4830:
 12923  001C74  FFFF               	dw	65535	; assembler added errata NOP
 12924  001C76  8C6B               	bsf	___fladd@signs^0,6,c
 12925  001C78                     l4190:
 12926  001C78  FFFF               	dw	65535	; assembler added errata NOP
 12927  001C7A  5066               	movf	(___fladd@a+3)^0,w,c
 12928  001C7C  2466               	addwf	(___fladd@a+3)^0,w,c
 12929  001C7E  6E6C               	movwf	___fladd@aexp^0,c
 12930  001C80  AE65               	btfss	(___fladd@a+2)^0,7,c
 12931  001C82  EF45  F00E         	goto	u4841
 12932  001C86  EF48  F00E         	goto	u4840
 12933  001C8A                     u4841:
 12934  001C8A  FFFF               	dw	65535	; assembler added errata NOP
 12935  001C8C  EF4A  F00E         	goto	l4196
 12936  001C90                     u4840:
 12937  001C90  FFFF               	dw	65535	; assembler added errata NOP
 12938  001C92  806C               	bsf	___fladd@aexp^0,0,c
 12939  001C94                     l4196:
 12940  001C94  FFFF               	dw	65535	; assembler added errata NOP
 12941  001C96  506C               	movf	___fladd@aexp^0,w,c
 12942  001C98  B4D8               	btfsc	status,2,c
 12943  001C9A  EF51  F00E         	goto	u4851
 12944  001C9E  EF54  F00E         	goto	u4850
 12945  001CA2                     u4851:
 12946  001CA2  FFFF               	dw	65535	; assembler added errata NOP
 12947  001CA4  EF6D  F00E         	goto	l4206
 12948  001CA8                     u4850:
 12949  001CA8  FFFF               	dw	65535	; assembler added errata NOP
 12950  001CAA  286C               	incf	___fladd@aexp^0,w,c
 12951  001CAC  A4D8               	btfss	status,2,c
 12952  001CAE  EF5B  F00E         	goto	u4861
 12953  001CB2  EF5E  F00E         	goto	u4860
 12954  001CB6                     u4861:
 12955  001CB6  FFFF               	dw	65535	; assembler added errata NOP
 12956  001CB8  EF67  F00E         	goto	l4202
 12957  001CBC                     u4860:
 12958  001CBC  FFFF               	dw	65535	; assembler added errata NOP
 12959  001CBE  0E00               	movlw	0
 12960  001CC0  6E63               	movwf	___fladd@a^0,c
 12961  001CC2  0E00               	movlw	0
 12962  001CC4  6E64               	movwf	(___fladd@a+1)^0,c
 12963  001CC6  0E00               	movlw	0
 12964  001CC8  6E65               	movwf	(___fladd@a+2)^0,c
 12965  001CCA  0E00               	movlw	0
 12966  001CCC  6E66               	movwf	(___fladd@a+3)^0,c
 12967  001CCE                     l4202:
 12968  001CCE  FFFF               	dw	65535	; assembler added errata NOP
 12969  001CD0  8E65               	bsf	(___fladd@a+2)^0,7,c
 12970  001CD2  0E00               	movlw	0
 12971  001CD4  6E66               	movwf	(___fladd@a+3)^0,c
 12972  001CD6  EF76  F00E         	goto	l4208
 12973  001CDA                     l4206:
 12974  001CDA  FFFF               	dw	65535	; assembler added errata NOP
 12975  001CDC  0E00               	movlw	0
 12976  001CDE  6E63               	movwf	___fladd@a^0,c
 12977  001CE0  0E00               	movlw	0
 12978  001CE2  6E64               	movwf	(___fladd@a+1)^0,c
 12979  001CE4  0E00               	movlw	0
 12980  001CE6  6E65               	movwf	(___fladd@a+2)^0,c
 12981  001CE8  0E00               	movlw	0
 12982  001CEA  6E66               	movwf	(___fladd@a+3)^0,c
 12983  001CEC                     l4208:
 12984  001CEC  FFFF               	dw	65535	; assembler added errata NOP
 12985  001CEE  506D               	movf	___fladd@bexp^0,w,c
 12986  001CF0  5C6C               	subwf	___fladd@aexp^0,w,c
 12987  001CF2  B0D8               	btfsc	status,0,c
 12988  001CF4  EF7E  F00E         	goto	u4871
 12989  001CF8  EF81  F00E         	goto	u4870
 12990  001CFC                     u4871:
 12991  001CFC  FFFF               	dw	65535	; assembler added errata NOP
 12992  001CFE  EFAC  F00E         	goto	l4244
 12993  001D02                     u4870:
 12994  001D02  FFFF               	dw	65535	; assembler added errata NOP
 12995  001D04  AC6B               	btfss	___fladd@signs^0,6,c
 12996  001D06  EF87  F00E         	goto	u4881
 12997  001D0A  EF8A  F00E         	goto	u4880
 12998  001D0E                     u4881:
 12999  001D0E  FFFF               	dw	65535	; assembler added errata NOP
 13000  001D10  EF8D  F00E         	goto	l4214
 13001  001D14                     u4880:
 13002  001D14  FFFF               	dw	65535	; assembler added errata NOP
 13003  001D16  0E80               	movlw	128
 13004  001D18  1A6B               	xorwf	___fladd@signs^0,f,c
 13005  001D1A                     l4214:
 13006  001D1A  FFFF               	dw	65535	; assembler added errata NOP
 13007  001D1C  C06D  F06E         	movff	___fladd@bexp,___fladd@grs
 13008  001D20  C06C  F06D         	movff	___fladd@aexp,___fladd@bexp
 13009  001D24  C06E  F06C         	movff	___fladd@grs,___fladd@aexp
 13010  001D28  C05F  F06E         	movff	___fladd@b,___fladd@grs
 13011  001D2C  C063  F05F         	movff	___fladd@a,___fladd@b
 13012  001D30  C06E  F063         	movff	___fladd@grs,___fladd@a
 13013  001D34  C060  F06E         	movff	___fladd@b+1,___fladd@grs
 13014  001D38  C064  F060         	movff	___fladd@a+1,___fladd@b+1
 13015  001D3C  C06E  F064         	movff	___fladd@grs,___fladd@a+1
 13016  001D40  C061  F06E         	movff	___fladd@b+2,___fladd@grs
 13017  001D44  C065  F061         	movff	___fladd@a+2,___fladd@b+2
 13018  001D48  C06E  F065         	movff	___fladd@grs,___fladd@a+2
 13019  001D4C  C062  F06E         	movff	___fladd@b+3,___fladd@grs
 13020  001D50  C066  F062         	movff	___fladd@a+3,___fladd@b+3
 13021  001D54  C06E  F066         	movff	___fladd@grs,___fladd@a+3
 13022  001D58                     l4244:
 13023  001D58  FFFF               	dw	65535	; assembler added errata NOP
 13024  001D5A  0E00               	movlw	0
 13025  001D5C  6E6E               	movwf	___fladd@grs^0,c
 13026  001D5E  506D               	movf	___fladd@bexp^0,w,c
 13027  001D60  C06C  F067         	movff	___fladd@aexp,??___fladd
 13028  001D64  6A68               	clrf	(??___fladd+1)^0,c
 13029  001D66  5E67               	subwf	??___fladd^0,f,c
 13030  001D68  0E00               	movlw	0
 13031  001D6A  5A68               	subwfb	(??___fladd+1)^0,f,c
 13032  001D6C  BE68               	btfsc	(??___fladd+1)^0,7,c
 13033  001D6E  EFC2  F00E         	goto	u4891
 13034  001D72  5068               	movf	(??___fladd+1)^0,w,c
 13035  001D74  E10A               	bnz	u4890
 13036  001D76  0E1A               	movlw	26
 13037  001D78  5C67               	subwf	??___fladd^0,w,c
 13038  001D7A  A0D8               	btfss	status,0,c
 13039  001D7C  EFC2  F00E         	goto	u4891
 13040  001D80  EFC5  F00E         	goto	u4890
 13041  001D84                     u4891:
 13042  001D84  FFFF               	dw	65535	; assembler added errata NOP
 13043  001D86  EF08  F00F         	goto	l923
 13044  001D8A                     u4890:
 13045  001D8A  FFFF               	dw	65535	; assembler added errata NOP
 13046  001D8C  505F               	movf	___fladd@b^0,w,c
 13047  001D8E  1060               	iorwf	(___fladd@b+1)^0,w,c
 13048  001D90  1061               	iorwf	(___fladd@b+2)^0,w,c
 13049  001D92  1062               	iorwf	(___fladd@b+3)^0,w,c
 13050  001D94  A4D8               	btfss	status,2,c
 13051  001D96  EFCF  F00E         	goto	u4901
 13052  001D9A  EFD3  F00E         	goto	u4900
 13053  001D9E                     u4901:
 13054  001D9E  FFFF               	dw	65535	; assembler added errata NOP
 13055  001DA0  0E01               	movlw	1
 13056  001DA2  EFD5  F00E         	goto	u4910
 13057  001DA6                     u4900:
 13058  001DA6  FFFF               	dw	65535	; assembler added errata NOP
 13059  001DA8  0E00               	movlw	0
 13060  001DAA                     u4910:
 13061  001DAA  FFFF               	dw	65535	; assembler added errata NOP
 13062  001DAC  6E6E               	movwf	___fladd@grs^0,c
 13063  001DAE  0E00               	movlw	0
 13064  001DB0  6E5F               	movwf	___fladd@b^0,c
 13065  001DB2  0E00               	movlw	0
 13066  001DB4  6E60               	movwf	(___fladd@b+1)^0,c
 13067  001DB6  0E00               	movlw	0
 13068  001DB8  6E61               	movwf	(___fladd@b+2)^0,c
 13069  001DBA  0E00               	movlw	0
 13070  001DBC  6E62               	movwf	(___fladd@b+3)^0,c
 13071  001DBE  C06C  F06D         	movff	___fladd@aexp,___fladd@bexp
 13072  001DC2  EF13  F00F         	goto	l922
 13073  001DC6                     l924:
 13074  001DC6  FFFF               	dw	65535	; assembler added errata NOP
 13075  001DC8  A06E               	btfss	___fladd@grs^0,0,c
 13076  001DCA  EFE9  F00E         	goto	u4921
 13077  001DCE  EFEC  F00E         	goto	u4920
 13078  001DD2                     u4921:
 13079  001DD2  FFFF               	dw	65535	; assembler added errata NOP
 13080  001DD4  EFF3  F00E         	goto	l4256
 13081  001DD8                     u4920:
 13082  001DD8  FFFF               	dw	65535	; assembler added errata NOP
 13083  001DDA  90D8               	bcf	status,0,c
 13084  001DDC  306E               	rrcf	___fladd@grs^0,w,c
 13085  001DDE  0901               	iorlw	1
 13086  001DE0  6E6E               	movwf	___fladd@grs^0,c
 13087  001DE2  EFF6  F00E         	goto	l4258
 13088  001DE6                     l4256:
 13089  001DE6  FFFF               	dw	65535	; assembler added errata NOP
 13090  001DE8  90D8               	bcf	status,0,c
 13091  001DEA  326E               	rrcf	___fladd@grs^0,f,c
 13092  001DEC                     l4258:
 13093  001DEC  FFFF               	dw	65535	; assembler added errata NOP
 13094  001DEE  A05F               	btfss	___fladd@b^0,0,c
 13095  001DF0  EFFC  F00E         	goto	u4931
 13096  001DF4  EFFF  F00E         	goto	u4930
 13097  001DF8                     u4931:
 13098  001DF8  FFFF               	dw	65535	; assembler added errata NOP
 13099  001DFA  EF01  F00F         	goto	l4262
 13100  001DFE                     u4930:
 13101  001DFE  FFFF               	dw	65535	; assembler added errata NOP
 13102  001E00  8E6E               	bsf	___fladd@grs^0,7,c
 13103  001E02                     l4262:
 13104  001E02  FFFF               	dw	65535	; assembler added errata NOP
 13105  001E04  3462               	rlcf	(___fladd@b+3)^0,w,c
 13106  001E06  3262               	rrcf	(___fladd@b+3)^0,f,c
 13107  001E08  3261               	rrcf	(___fladd@b+2)^0,f,c
 13108  001E0A  3260               	rrcf	(___fladd@b+1)^0,f,c
 13109  001E0C  325F               	rrcf	___fladd@b^0,f,c
 13110  001E0E  2A6D               	incf	___fladd@bexp^0,f,c
 13111  001E10                     l923:
 13112  001E10  FFFF               	dw	65535	; assembler added errata NOP
 13113  001E12  506C               	movf	___fladd@aexp^0,w,c
 13114  001E14  5C6D               	subwf	___fladd@bexp^0,w,c
 13115  001E16  A0D8               	btfss	status,0,c
 13116  001E18  EF10  F00F         	goto	u4941
 13117  001E1C  EF13  F00F         	goto	u4940
 13118  001E20                     u4941:
 13119  001E20  FFFF               	dw	65535	; assembler added errata NOP
 13120  001E22  EFE3  F00E         	goto	l924
 13121  001E26                     u4940:
 13122  001E26                     l922:
 13123  001E26  FFFF               	dw	65535	; assembler added errata NOP
 13124  001E28  BC6B               	btfsc	___fladd@signs^0,6,c
 13125  001E2A  EF19  F00F         	goto	u4951
 13126  001E2E  EF1C  F00F         	goto	u4950
 13127  001E32                     u4951:
 13128  001E32  FFFF               	dw	65535	; assembler added errata NOP
 13129  001E34  EF69  F00F         	goto	l4290
 13130  001E38                     u4950:
 13131  001E38  FFFF               	dw	65535	; assembler added errata NOP
 13132  001E3A  506D               	movf	___fladd@bexp^0,w,c
 13133  001E3C  A4D8               	btfss	status,2,c
 13134  001E3E  EF23  F00F         	goto	u4961
 13135  001E42  EF26  F00F         	goto	u4960
 13136  001E46                     u4961:
 13137  001E46  FFFF               	dw	65535	; assembler added errata NOP
 13138  001E48  EF31  F00F         	goto	l4272
 13139  001E4C                     u4960:
 13140  001E4C  FFFF               	dw	65535	; assembler added errata NOP
 13141  001E4E  0E00               	movlw	0
 13142  001E50  6E5F               	movwf	?___fladd^0,c
 13143  001E52  0E00               	movlw	0
 13144  001E54  6E60               	movwf	(?___fladd+1)^0,c
 13145  001E56  0E00               	movlw	0
 13146  001E58  6E61               	movwf	(?___fladd+2)^0,c
 13147  001E5A  0E00               	movlw	0
 13148  001E5C  6E62               	movwf	(?___fladd+3)^0,c
 13149  001E5E  EFC0  F010         	goto	l931
 13150  001E62                     l4272:
 13151  001E62  FFFF               	dw	65535	; assembler added errata NOP
 13152  001E64  5063               	movf	___fladd@a^0,w,c
 13153  001E66  265F               	addwf	___fladd@b^0,f,c
 13154  001E68  5064               	movf	(___fladd@a+1)^0,w,c
 13155  001E6A  2260               	addwfc	(___fladd@b+1)^0,f,c
 13156  001E6C  5065               	movf	(___fladd@a+2)^0,w,c
 13157  001E6E  2261               	addwfc	(___fladd@b+2)^0,f,c
 13158  001E70  5066               	movf	(___fladd@a+3)^0,w,c
 13159  001E72  2262               	addwfc	(___fladd@b+3)^0,f,c
 13160  001E74  A062               	btfss	(___fladd@b+3)^0,0,c
 13161  001E76  EF3F  F00F         	goto	u4971
 13162  001E7A  EF42  F00F         	goto	u4970
 13163  001E7E                     u4971:
 13164  001E7E  FFFF               	dw	65535	; assembler added errata NOP
 13165  001E80  EF0D  F010         	goto	l4326
 13166  001E84                     u4970:
 13167  001E84  FFFF               	dw	65535	; assembler added errata NOP
 13168  001E86  A06E               	btfss	___fladd@grs^0,0,c
 13169  001E88  EF48  F00F         	goto	u4981
 13170  001E8C  EF4B  F00F         	goto	u4980
 13171  001E90                     u4981:
 13172  001E90  FFFF               	dw	65535	; assembler added errata NOP
 13173  001E92  EF52  F00F         	goto	l4280
 13174  001E96                     u4980:
 13175  001E96  FFFF               	dw	65535	; assembler added errata NOP
 13176  001E98  90D8               	bcf	status,0,c
 13177  001E9A  306E               	rrcf	___fladd@grs^0,w,c
 13178  001E9C  0901               	iorlw	1
 13179  001E9E  6E6E               	movwf	___fladd@grs^0,c
 13180  001EA0  EF55  F00F         	goto	l4282
 13181  001EA4                     l4280:
 13182  001EA4  FFFF               	dw	65535	; assembler added errata NOP
 13183  001EA6  90D8               	bcf	status,0,c
 13184  001EA8  326E               	rrcf	___fladd@grs^0,f,c
 13185  001EAA                     l4282:
 13186  001EAA  FFFF               	dw	65535	; assembler added errata NOP
 13187  001EAC  A05F               	btfss	___fladd@b^0,0,c
 13188  001EAE  EF5B  F00F         	goto	u4991
 13189  001EB2  EF5E  F00F         	goto	u4990
 13190  001EB6                     u4991:
 13191  001EB6  FFFF               	dw	65535	; assembler added errata NOP
 13192  001EB8  EF60  F00F         	goto	l4286
 13193  001EBC                     u4990:
 13194  001EBC  FFFF               	dw	65535	; assembler added errata NOP
 13195  001EBE  8E6E               	bsf	___fladd@grs^0,7,c
 13196  001EC0                     l4286:
 13197  001EC0  FFFF               	dw	65535	; assembler added errata NOP
 13198  001EC2  3462               	rlcf	(___fladd@b+3)^0,w,c
 13199  001EC4  3262               	rrcf	(___fladd@b+3)^0,f,c
 13200  001EC6  3261               	rrcf	(___fladd@b+2)^0,f,c
 13201  001EC8  3260               	rrcf	(___fladd@b+1)^0,f,c
 13202  001ECA  325F               	rrcf	___fladd@b^0,f,c
 13203  001ECC  2A6D               	incf	___fladd@bexp^0,f,c
 13204  001ECE  EF0D  F010         	goto	l4326
 13205  001ED2                     l4290:
 13206  001ED2  FFFF               	dw	65535	; assembler added errata NOP
 13207  001ED4  5063               	movf	___fladd@a^0,w,c
 13208  001ED6  5C5F               	subwf	___fladd@b^0,w,c
 13209  001ED8  5064               	movf	(___fladd@a+1)^0,w,c
 13210  001EDA  5860               	subwfb	(___fladd@b+1)^0,w,c
 13211  001EDC  5065               	movf	(___fladd@a+2)^0,w,c
 13212  001EDE  5861               	subwfb	(___fladd@b+2)^0,w,c
 13213  001EE0  5062               	movf	(___fladd@b+3)^0,w,c
 13214  001EE2  0A80               	xorlw	128
 13215  001EE4  6E67               	movwf	??___fladd^0,c
 13216  001EE6  5066               	movf	(___fladd@a+3)^0,w,c
 13217  001EE8  0A80               	xorlw	128
 13218  001EEA  5867               	subwfb	??___fladd^0,w,c
 13219  001EEC  B0D8               	btfsc	status,0,c
 13220  001EEE  EF7B  F00F         	goto	u5001
 13221  001EF2  EF7E  F00F         	goto	u5000
 13222  001EF6                     u5001:
 13223  001EF6  FFFF               	dw	65535	; assembler added errata NOP
 13224  001EF8  EFAC  F00F         	goto	l4300
 13225  001EFC                     u5000:
 13226  001EFC  FFFF               	dw	65535	; assembler added errata NOP
 13227  001EFE  505F               	movf	___fladd@b^0,w,c
 13228  001F00  5C63               	subwf	___fladd@a^0,w,c
 13229  001F02  6E67               	movwf	??___fladd^0,c
 13230  001F04  5060               	movf	(___fladd@b+1)^0,w,c
 13231  001F06  5864               	subwfb	(___fladd@a+1)^0,w,c
 13232  001F08  6E68               	movwf	(??___fladd+1)^0,c
 13233  001F0A  5061               	movf	(___fladd@b+2)^0,w,c
 13234  001F0C  5865               	subwfb	(___fladd@a+2)^0,w,c
 13235  001F0E  6E69               	movwf	(??___fladd+2)^0,c
 13236  001F10  5062               	movf	(___fladd@b+3)^0,w,c
 13237  001F12  5866               	subwfb	(___fladd@a+3)^0,w,c
 13238  001F14  6E6A               	movwf	(??___fladd+3)^0,c
 13239  001F16  0EFF               	movlw	255
 13240  001F18  2467               	addwf	??___fladd^0,w,c
 13241  001F1A  6E5F               	movwf	___fladd@b^0,c
 13242  001F1C  0EFF               	movlw	255
 13243  001F1E  2068               	addwfc	(??___fladd+1)^0,w,c
 13244  001F20  6E60               	movwf	(___fladd@b+1)^0,c
 13245  001F22  0EFF               	movlw	255
 13246  001F24  2069               	addwfc	(??___fladd+2)^0,w,c
 13247  001F26  6E61               	movwf	(___fladd@b+2)^0,c
 13248  001F28  0EFF               	movlw	255
 13249  001F2A  206A               	addwfc	(??___fladd+3)^0,w,c
 13250  001F2C  6E62               	movwf	(___fladd@b+3)^0,c
 13251  001F2E  0E80               	movlw	128
 13252  001F30  1A6B               	xorwf	___fladd@signs^0,f,c
 13253  001F32  6C6E               	negf	___fladd@grs^0,c
 13254  001F34  506E               	movf	___fladd@grs^0,w,c
 13255  001F36  A4D8               	btfss	status,2,c
 13256  001F38  EFA0  F00F         	goto	u5011
 13257  001F3C  EFA3  F00F         	goto	u5010
 13258  001F40                     u5011:
 13259  001F40  FFFF               	dw	65535	; assembler added errata NOP
 13260  001F42  EFB5  F00F         	goto	l939
 13261  001F46                     u5010:
 13262  001F46  FFFF               	dw	65535	; assembler added errata NOP
 13263  001F48  0E01               	movlw	1
 13264  001F4A  265F               	addwf	___fladd@b^0,f,c
 13265  001F4C  0E00               	movlw	0
 13266  001F4E  2260               	addwfc	(___fladd@b+1)^0,f,c
 13267  001F50  2261               	addwfc	(___fladd@b+2)^0,f,c
 13268  001F52  2262               	addwfc	(___fladd@b+3)^0,f,c
 13269  001F54  EFB5  F00F         	goto	l939
 13270  001F58                     l4300:
 13271  001F58  FFFF               	dw	65535	; assembler added errata NOP
 13272  001F5A  5063               	movf	___fladd@a^0,w,c
 13273  001F5C  5E5F               	subwf	___fladd@b^0,f,c
 13274  001F5E  5064               	movf	(___fladd@a+1)^0,w,c
 13275  001F60  5A60               	subwfb	(___fladd@b+1)^0,f,c
 13276  001F62  5065               	movf	(___fladd@a+2)^0,w,c
 13277  001F64  5A61               	subwfb	(___fladd@b+2)^0,f,c
 13278  001F66  5066               	movf	(___fladd@a+3)^0,w,c
 13279  001F68  5A62               	subwfb	(___fladd@b+3)^0,f,c
 13280  001F6A                     l939:
 13281  001F6A  FFFF               	dw	65535	; assembler added errata NOP
 13282  001F6C  505F               	movf	___fladd@b^0,w,c
 13283  001F6E  1060               	iorwf	(___fladd@b+1)^0,w,c
 13284  001F70  1061               	iorwf	(___fladd@b+2)^0,w,c
 13285  001F72  1062               	iorwf	(___fladd@b+3)^0,w,c
 13286  001F74  A4D8               	btfss	status,2,c
 13287  001F76  EFBF  F00F         	goto	u5021
 13288  001F7A  EFC2  F00F         	goto	u5020
 13289  001F7E                     u5021:
 13290  001F7E  FFFF               	dw	65535	; assembler added errata NOP
 13291  001F80  EF04  F010         	goto	l4324
 13292  001F84                     u5020:
 13293  001F84  FFFF               	dw	65535	; assembler added errata NOP
 13294  001F86  506E               	movf	___fladd@grs^0,w,c
 13295  001F88  A4D8               	btfss	status,2,c
 13296  001F8A  EFC9  F00F         	goto	u5031
 13297  001F8E  EFCC  F00F         	goto	u5030
 13298  001F92                     u5031:
 13299  001F92  FFFF               	dw	65535	; assembler added errata NOP
 13300  001F94  EF04  F010         	goto	l4324
 13301  001F98                     u5030:
 13302  001F98  FFFF               	dw	65535	; assembler added errata NOP
 13303  001F9A  0E00               	movlw	0
 13304  001F9C  6E5F               	movwf	?___fladd^0,c
 13305  001F9E  0E00               	movlw	0
 13306  001FA0  6E60               	movwf	(?___fladd+1)^0,c
 13307  001FA2  0E00               	movlw	0
 13308  001FA4  6E61               	movwf	(?___fladd+2)^0,c
 13309  001FA6  0E00               	movlw	0
 13310  001FA8  6E62               	movwf	(?___fladd+3)^0,c
 13311  001FAA  EFC0  F010         	goto	l931
 13312  001FAE                     l4308:
 13313  001FAE  FFFF               	dw	65535	; assembler added errata NOP
 13314  001FB0  90D8               	bcf	status,0,c
 13315  001FB2  365F               	rlcf	___fladd@b^0,f,c
 13316  001FB4  3660               	rlcf	(___fladd@b+1)^0,f,c
 13317  001FB6  3661               	rlcf	(___fladd@b+2)^0,f,c
 13318  001FB8  3662               	rlcf	(___fladd@b+3)^0,f,c
 13319  001FBA  AE6E               	btfss	___fladd@grs^0,7,c
 13320  001FBC  EFE2  F00F         	goto	u5041
 13321  001FC0  EFE5  F00F         	goto	u5040
 13322  001FC4                     u5041:
 13323  001FC4  FFFF               	dw	65535	; assembler added errata NOP
 13324  001FC6  EFE7  F00F         	goto	l4314
 13325  001FCA                     u5040:
 13326  001FCA  FFFF               	dw	65535	; assembler added errata NOP
 13327  001FCC  805F               	bsf	___fladd@b^0,0,c
 13328  001FCE                     l4314:
 13329  001FCE  FFFF               	dw	65535	; assembler added errata NOP
 13330  001FD0  A06E               	btfss	___fladd@grs^0,0,c
 13331  001FD2  EFED  F00F         	goto	u5051
 13332  001FD6  EFF0  F00F         	goto	u5050
 13333  001FDA                     u5051:
 13334  001FDA  FFFF               	dw	65535	; assembler added errata NOP
 13335  001FDC  EFF5  F00F         	goto	l4318
 13336  001FE0                     u5050:
 13337  001FE0  FFFF               	dw	65535	; assembler added errata NOP
 13338  001FE2  80D8               	bsf	status,0,c
 13339  001FE4  366E               	rlcf	___fladd@grs^0,f,c
 13340  001FE6  EFF8  F00F         	goto	l4320
 13341  001FEA                     l4318:
 13342  001FEA  FFFF               	dw	65535	; assembler added errata NOP
 13343  001FEC  90D8               	bcf	status,0,c
 13344  001FEE  366E               	rlcf	___fladd@grs^0,f,c
 13345  001FF0                     l4320:
 13346  001FF0  FFFF               	dw	65535	; assembler added errata NOP
 13347  001FF2  506D               	movf	___fladd@bexp^0,w,c
 13348  001FF4  B4D8               	btfsc	status,2,c
 13349  001FF6  EFFF  F00F         	goto	u5061
 13350  001FFA  EF02  F010         	goto	u5060
 13351  001FFE                     u5061:
 13352  001FFE  FFFF               	dw	65535	; assembler added errata NOP
 13353  002000  EF04  F010         	goto	l4324
 13354  002004                     u5060:
 13355  002004  FFFF               	dw	65535	; assembler added errata NOP
 13356  002006  066D               	decf	___fladd@bexp^0,f,c
 13357  002008                     l4324:
 13358  002008  FFFF               	dw	65535	; assembler added errata NOP
 13359  00200A  AE61               	btfss	(___fladd@b+2)^0,7,c
 13360  00200C  EF0A  F010         	goto	u5071
 13361  002010  EF0D  F010         	goto	u5070
 13362  002014                     u5071:
 13363  002014  FFFF               	dw	65535	; assembler added errata NOP
 13364  002016  EFD7  F00F         	goto	l4308
 13365  00201A                     u5070:
 13366  00201A                     l4326:
 13367  00201A  FFFF               	dw	65535	; assembler added errata NOP
 13368  00201C  0E00               	movlw	0
 13369  00201E  6E6C               	movwf	___fladd@aexp^0,c
 13370  002020  AE6E               	btfss	___fladd@grs^0,7,c
 13371  002022  EF15  F010         	goto	u5081
 13372  002026  EF18  F010         	goto	u5080
 13373  00202A                     u5081:
 13374  00202A  FFFF               	dw	65535	; assembler added errata NOP
 13375  00202C  EF37  F010         	goto	l948
 13376  002030                     u5080:
 13377  002030  FFFF               	dw	65535	; assembler added errata NOP
 13378  002032  C06E  F067         	movff	___fladd@grs,??___fladd
 13379  002036  0E7F               	movlw	127
 13380  002038  1667               	andwf	??___fladd^0,f,c
 13381  00203A  B4D8               	btfsc	status,2,c
 13382  00203C  EF22  F010         	goto	u5091
 13383  002040  EF25  F010         	goto	u5090
 13384  002044                     u5091:
 13385  002044  FFFF               	dw	65535	; assembler added errata NOP
 13386  002046  EF2B  F010         	goto	l949
 13387  00204A                     u5090:
 13388  00204A  FFFF               	dw	65535	; assembler added errata NOP
 13389  00204C                     l4332:
 13390  00204C  FFFF               	dw	65535	; assembler added errata NOP
 13391  00204E  0E01               	movlw	1
 13392  002050  6E6C               	movwf	___fladd@aexp^0,c
 13393  002052  EF37  F010         	goto	l948
 13394  002056                     l949:
 13395  002056  FFFF               	dw	65535	; assembler added errata NOP
 13396  002058  A05F               	btfss	___fladd@b^0,0,c
 13397  00205A  EF31  F010         	goto	u5101
 13398  00205E  EF34  F010         	goto	u5100
 13399  002062                     u5101:
 13400  002062  FFFF               	dw	65535	; assembler added errata NOP
 13401  002064  EF37  F010         	goto	l948
 13402  002068                     u5100:
 13403  002068  FFFF               	dw	65535	; assembler added errata NOP
 13404  00206A  EF26  F010         	goto	l4332
 13405  00206E                     l948:
 13406  00206E  FFFF               	dw	65535	; assembler added errata NOP
 13407  002070  506C               	movf	___fladd@aexp^0,w,c
 13408  002072  B4D8               	btfsc	status,2,c
 13409  002074  EF3E  F010         	goto	u5111
 13410  002078  EF41  F010         	goto	u5110
 13411  00207C                     u5111:
 13412  00207C  FFFF               	dw	65535	; assembler added errata NOP
 13413  00207E  EF71  F010         	goto	l4344
 13414  002082                     u5110:
 13415  002082  FFFF               	dw	65535	; assembler added errata NOP
 13416  002084  0E01               	movlw	1
 13417  002086  265F               	addwf	___fladd@b^0,f,c
 13418  002088  0E00               	movlw	0
 13419  00208A  2260               	addwfc	(___fladd@b+1)^0,f,c
 13420  00208C  2261               	addwfc	(___fladd@b+2)^0,f,c
 13421  00208E  2262               	addwfc	(___fladd@b+3)^0,f,c
 13422  002090  A062               	btfss	(___fladd@b+3)^0,0,c
 13423  002092  EF4D  F010         	goto	u5121
 13424  002096  EF50  F010         	goto	u5120
 13425  00209A                     u5121:
 13426  00209A  FFFF               	dw	65535	; assembler added errata NOP
 13427  00209C  EF71  F010         	goto	l4344
 13428  0020A0                     u5120:
 13429  0020A0  FFFF               	dw	65535	; assembler added errata NOP
 13430  0020A2  C05F  F067         	movff	___fladd@b,??___fladd
 13431  0020A6  C060  F068         	movff	___fladd@b+1,??___fladd+1
 13432  0020AA  C061  F069         	movff	___fladd@b+2,??___fladd+2
 13433  0020AE  C062  F06A         	movff	___fladd@b+3,??___fladd+3
 13434  0020B2  346A               	rlcf	(??___fladd+3)^0,w,c
 13435  0020B4  326A               	rrcf	(??___fladd+3)^0,f,c
 13436  0020B6  3269               	rrcf	(??___fladd+2)^0,f,c
 13437  0020B8  3268               	rrcf	(??___fladd+1)^0,f,c
 13438  0020BA  3267               	rrcf	??___fladd^0,f,c
 13439  0020BC  C067  F05F         	movff	??___fladd,___fladd@b
 13440  0020C0  C068  F060         	movff	??___fladd+1,___fladd@b+1
 13441  0020C4  C069  F061         	movff	??___fladd+2,___fladd@b+2
 13442  0020C8  C06A  F062         	movff	??___fladd+3,___fladd@b+3
 13443  0020CC  286D               	incf	___fladd@bexp^0,w,c
 13444  0020CE  B4D8               	btfsc	status,2,c
 13445  0020D0  EF6C  F010         	goto	u5131
 13446  0020D4  EF6F  F010         	goto	u5130
 13447  0020D8                     u5131:
 13448  0020D8  FFFF               	dw	65535	; assembler added errata NOP
 13449  0020DA  EF71  F010         	goto	l4344
 13450  0020DE                     u5130:
 13451  0020DE  FFFF               	dw	65535	; assembler added errata NOP
 13452  0020E0  2A6D               	incf	___fladd@bexp^0,f,c
 13453  0020E2                     l4344:
 13454  0020E2  FFFF               	dw	65535	; assembler added errata NOP
 13455  0020E4  286D               	incf	___fladd@bexp^0,w,c
 13456  0020E6  B4D8               	btfsc	status,2,c
 13457  0020E8  EF78  F010         	goto	u5141
 13458  0020EC  EF7B  F010         	goto	u5140
 13459  0020F0                     u5141:
 13460  0020F0  FFFF               	dw	65535	; assembler added errata NOP
 13461  0020F2  EF85  F010         	goto	l4348
 13462  0020F6                     u5140:
 13463  0020F6  FFFF               	dw	65535	; assembler added errata NOP
 13464  0020F8  506D               	movf	___fladd@bexp^0,w,c
 13465  0020FA  A4D8               	btfss	status,2,c
 13466  0020FC  EF82  F010         	goto	u5151
 13467  002100  EF85  F010         	goto	u5150
 13468  002104                     u5151:
 13469  002104  FFFF               	dw	65535	; assembler added errata NOP
 13470  002106  EF9A  F010         	goto	l4352
 13471  00210A                     u5150:
 13472  00210A                     l4348:
 13473  00210A  FFFF               	dw	65535	; assembler added errata NOP
 13474  00210C  0E00               	movlw	0
 13475  00210E  6E5F               	movwf	___fladd@b^0,c
 13476  002110  0E00               	movlw	0
 13477  002112  6E60               	movwf	(___fladd@b+1)^0,c
 13478  002114  0E00               	movlw	0
 13479  002116  6E61               	movwf	(___fladd@b+2)^0,c
 13480  002118  0E00               	movlw	0
 13481  00211A  6E62               	movwf	(___fladd@b+3)^0,c
 13482  00211C  506D               	movf	___fladd@bexp^0,w,c
 13483  00211E  A4D8               	btfss	status,2,c
 13484  002120  EF94  F010         	goto	u5161
 13485  002124  EF97  F010         	goto	u5160
 13486  002128                     u5161:
 13487  002128  FFFF               	dw	65535	; assembler added errata NOP
 13488  00212A  EF9A  F010         	goto	l4352
 13489  00212E                     u5160:
 13490  00212E  FFFF               	dw	65535	; assembler added errata NOP
 13491  002130  0E00               	movlw	0
 13492  002132  6E6B               	movwf	___fladd@signs^0,c
 13493  002134                     l4352:
 13494  002134  FFFF               	dw	65535	; assembler added errata NOP
 13495  002136  A06D               	btfss	___fladd@bexp^0,0,c
 13496  002138  EFA0  F010         	goto	u5171
 13497  00213C  EFA3  F010         	goto	u5170
 13498  002140                     u5171:
 13499  002140  FFFF               	dw	65535	; assembler added errata NOP
 13500  002142  EFA7  F010         	goto	l4356
 13501  002146                     u5170:
 13502  002146  FFFF               	dw	65535	; assembler added errata NOP
 13503  002148  8E61               	bsf	(___fladd@b+2)^0,7,c
 13504  00214A  EFA9  F010         	goto	l4358
 13505  00214E                     l4356:
 13506  00214E  FFFF               	dw	65535	; assembler added errata NOP
 13507  002150  9E61               	bcf	(___fladd@b+2)^0,7,c
 13508  002152                     l4358:
 13509  002152  FFFF               	dw	65535	; assembler added errata NOP
 13510  002154  90D8               	bcf	status,0,c
 13511  002156  306D               	rrcf	___fladd@bexp^0,w,c
 13512  002158  6E62               	movwf	(___fladd@b+3)^0,c
 13513  00215A  AE6B               	btfss	___fladd@signs^0,7,c
 13514  00215C  EFB2  F010         	goto	u5181
 13515  002160  EFB5  F010         	goto	u5180
 13516  002164                     u5181:
 13517  002164  FFFF               	dw	65535	; assembler added errata NOP
 13518  002166  EFB7  F010         	goto	l4364
 13519  00216A                     u5180:
 13520  00216A  FFFF               	dw	65535	; assembler added errata NOP
 13521  00216C  8E62               	bsf	(___fladd@b+3)^0,7,c
 13522  00216E                     l4364:
 13523  00216E  FFFF               	dw	65535	; assembler added errata NOP
 13524  002170  C05F  F05F         	movff	___fladd@b,?___fladd
 13525  002174  C060  F060         	movff	___fladd@b+1,?___fladd+1
 13526  002178  C061  F061         	movff	___fladd@b+2,?___fladd+2
 13527  00217C  C062  F062         	movff	___fladd@b+3,?___fladd+3
 13528  002180                     l931:
 13529  002180  FFFF               	dw	65535	; assembler added errata NOP
 13530  002182  0012               	return		;funcret
 13531  002184  FFFF               	dw	65535	; errata NOP
 13532  002186                     __end_of___fladd:
 13533                           	callstack 0
 13534                           
 13535 ;; *************** function ___flneg *****************
 13536 ;; Defined at:
 13537 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
 13538 ;; Parameters:    Size  Location     Type
 13539 ;;  f1              4    0[COMRAM] unsigned char 
 13540 ;; Auto vars:     Size  Location     Type
 13541 ;;		None
 13542 ;; Return value:  Size  Location     Type
 13543 ;;                  4    0[COMRAM] unsigned char 
 13544 ;; Registers used:
 13545 ;;		wreg, status,2, status,0
 13546 ;; Tracked objects:
 13547 ;;		On entry : 0/0
 13548 ;;		On exit  : 0/0
 13549 ;;		Unchanged: 0/0
 13550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13551 ;;      Params:         4       0       0       0       0       0       0
 13552 ;;      Locals:         0       0       0       0       0       0       0
 13553 ;;      Temps:          0       0       0       0       0       0       0
 13554 ;;      Totals:         4       0       0       0       0       0       0
 13555 ;;Total ram usage:        4 bytes
 13556 ;; Hardware stack levels used:    1
 13557 ;; Hardware stack levels required when called:    1
 13558 ;; This function calls:
 13559 ;;		Nothing
 13560 ;; This function is called by:
 13561 ;;		_roundf
 13562 ;; This function uses a non-reentrant model
 13563 ;;
 13564                           
 13565                           	psect	text53
 13566  0066D2                     __ptext53:
 13567                           	callstack 0
 13568  0066D2                     ___flneg:
 13569                           	callstack 0
 13570  0066D2  FFFF               	dw	65535	; assembler added errata NOP
 13571  0066D4  5001               	movf	___flneg@f1^0,w,c
 13572  0066D6  1002               	iorwf	(___flneg@f1+1)^0,w,c
 13573  0066D8  1003               	iorwf	(___flneg@f1+2)^0,w,c
 13574  0066DA  1004               	iorwf	(___flneg@f1+3)^0,w,c
 13575  0066DC  B4D8               	btfsc	status,2,c
 13576  0066DE  EF73  F033         	goto	u6151
 13577  0066E2  EF76  F033         	goto	u6150
 13578  0066E6                     u6151:
 13579  0066E6  FFFF               	dw	65535	; assembler added errata NOP
 13580  0066E8  EF7F  F033         	goto	l5002
 13581  0066EC                     u6150:
 13582  0066EC  FFFF               	dw	65535	; assembler added errata NOP
 13583  0066EE  0E00               	movlw	0
 13584  0066F0  1A01               	xorwf	___flneg@f1^0,f,c
 13585  0066F2  0E00               	movlw	0
 13586  0066F4  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 13587  0066F6  0E00               	movlw	0
 13588  0066F8  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 13589  0066FA  0E80               	movlw	128
 13590  0066FC  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 13591  0066FE                     l5002:
 13592  0066FE  FFFF               	dw	65535	; assembler added errata NOP
 13593  006700  C001  F001         	movff	___flneg@f1,?___flneg
 13594  006704  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 13595  006708  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 13596  00670C  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 13597  006710  0012               	return		;funcret
 13598  006712  FFFF               	dw	65535	; errata NOP
 13599  006714                     __end_of___flneg:
 13600                           	callstack 0
 13601                           
 13602 ;; *************** function ___flmul *****************
 13603 ;; Defined at:
 13604 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 13605 ;; Parameters:    Size  Location     Type
 13606 ;;  b               4   44[COMRAM] unsigned char 
 13607 ;;  a               4   48[COMRAM] unsigned char 
 13608 ;; Auto vars:     Size  Location     Type
 13609 ;;  prod            4   63[COMRAM] struct .
 13610 ;;  grs             4   57[COMRAM] unsigned long 
 13611 ;;  temp            2   67[COMRAM] struct .
 13612 ;;  bexp            1   62[COMRAM] unsigned char 
 13613 ;;  aexp            1   61[COMRAM] unsigned char 
 13614 ;;  sign            1   56[COMRAM] unsigned char 
 13615 ;; Return value:  Size  Location     Type
 13616 ;;                  4   44[COMRAM] unsigned char 
 13617 ;; Registers used:
 13618 ;;		wreg, status,2, status,0, prodl, prodh
 13619 ;; Tracked objects:
 13620 ;;		On entry : 0/0
 13621 ;;		On exit  : 0/0
 13622 ;;		Unchanged: 0/0
 13623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13624 ;;      Params:         8       0       0       0       0       0       0
 13625 ;;      Locals:        13       0       0       0       0       0       0
 13626 ;;      Temps:          4       0       0       0       0       0       0
 13627 ;;      Totals:        25       0       0       0       0       0       0
 13628 ;;Total ram usage:       25 bytes
 13629 ;; Hardware stack levels used:    1
 13630 ;; Hardware stack levels required when called:    1
 13631 ;; This function calls:
 13632 ;;		Nothing
 13633 ;; This function is called by:
 13634 ;;		_init_timer_2
 13635 ;;		_update_pwm_duty_ccp1
 13636 ;;		_get_temperature
 13637 ;;		_roundf
 13638 ;; This function uses a non-reentrant model
 13639 ;;
 13640                           
 13641                           	psect	text54
 13642  002186                     __ptext54:
 13643                           	callstack 0
 13644  002186                     ___flmul:
 13645                           	callstack 0
 13646  002186  FFFF               	dw	65535	; assembler added errata NOP
 13647  002188  5030               	movf	(___flmul@b+3)^0,w,c
 13648  00218A  0B80               	andlw	128
 13649  00218C  6E39               	movwf	___flmul@sign^0,c
 13650  00218E  5030               	movf	(___flmul@b+3)^0,w,c
 13651  002190  2430               	addwf	(___flmul@b+3)^0,w,c
 13652  002192  6E3F               	movwf	___flmul@bexp^0,c
 13653  002194  AE2F               	btfss	(___flmul@b+2)^0,7,c
 13654  002196  EFCF  F010         	goto	u5911
 13655  00219A  EFD2  F010         	goto	u5910
 13656  00219E                     u5911:
 13657  00219E  FFFF               	dw	65535	; assembler added errata NOP
 13658  0021A0  EFD4  F010         	goto	l4846
 13659  0021A4                     u5910:
 13660  0021A4  FFFF               	dw	65535	; assembler added errata NOP
 13661  0021A6  803F               	bsf	___flmul@bexp^0,0,c
 13662  0021A8                     l4846:
 13663  0021A8  FFFF               	dw	65535	; assembler added errata NOP
 13664  0021AA  503F               	movf	___flmul@bexp^0,w,c
 13665  0021AC  B4D8               	btfsc	status,2,c
 13666  0021AE  EFDB  F010         	goto	u5921
 13667  0021B2  EFDE  F010         	goto	u5920
 13668  0021B6                     u5921:
 13669  0021B6  FFFF               	dw	65535	; assembler added errata NOP
 13670  0021B8  EFF5  F010         	goto	l4854
 13671  0021BC                     u5920:
 13672  0021BC  FFFF               	dw	65535	; assembler added errata NOP
 13673  0021BE  283F               	incf	___flmul@bexp^0,w,c
 13674  0021C0  A4D8               	btfss	status,2,c
 13675  0021C2  EFE5  F010         	goto	u5931
 13676  0021C6  EFE8  F010         	goto	u5930
 13677  0021CA                     u5931:
 13678  0021CA  FFFF               	dw	65535	; assembler added errata NOP
 13679  0021CC  EFF1  F010         	goto	l4852
 13680  0021D0                     u5930:
 13681  0021D0  FFFF               	dw	65535	; assembler added errata NOP
 13682  0021D2  0E00               	movlw	0
 13683  0021D4  6E2D               	movwf	___flmul@b^0,c
 13684  0021D6  0E00               	movlw	0
 13685  0021D8  6E2E               	movwf	(___flmul@b+1)^0,c
 13686  0021DA  0E00               	movlw	0
 13687  0021DC  6E2F               	movwf	(___flmul@b+2)^0,c
 13688  0021DE  0E00               	movlw	0
 13689  0021E0  6E30               	movwf	(___flmul@b+3)^0,c
 13690  0021E2                     l4852:
 13691  0021E2  FFFF               	dw	65535	; assembler added errata NOP
 13692  0021E4  8E2F               	bsf	(___flmul@b+2)^0,7,c
 13693  0021E6  EFFE  F010         	goto	l4856
 13694  0021EA                     l4854:
 13695  0021EA  FFFF               	dw	65535	; assembler added errata NOP
 13696  0021EC  0E00               	movlw	0
 13697  0021EE  6E2D               	movwf	___flmul@b^0,c
 13698  0021F0  0E00               	movlw	0
 13699  0021F2  6E2E               	movwf	(___flmul@b+1)^0,c
 13700  0021F4  0E00               	movlw	0
 13701  0021F6  6E2F               	movwf	(___flmul@b+2)^0,c
 13702  0021F8  0E00               	movlw	0
 13703  0021FA  6E30               	movwf	(___flmul@b+3)^0,c
 13704  0021FC                     l4856:
 13705  0021FC  FFFF               	dw	65535	; assembler added errata NOP
 13706  0021FE  5034               	movf	(___flmul@a+3)^0,w,c
 13707  002200  0B80               	andlw	128
 13708  002202  1A39               	xorwf	___flmul@sign^0,f,c
 13709  002204  5034               	movf	(___flmul@a+3)^0,w,c
 13710  002206  2434               	addwf	(___flmul@a+3)^0,w,c
 13711  002208  6E3E               	movwf	___flmul@aexp^0,c
 13712  00220A  AE33               	btfss	(___flmul@a+2)^0,7,c
 13713  00220C  EF0A  F011         	goto	u5941
 13714  002210  EF0D  F011         	goto	u5940
 13715  002214                     u5941:
 13716  002214  FFFF               	dw	65535	; assembler added errata NOP
 13717  002216  EF0F  F011         	goto	l4864
 13718  00221A                     u5940:
 13719  00221A  FFFF               	dw	65535	; assembler added errata NOP
 13720  00221C  803E               	bsf	___flmul@aexp^0,0,c
 13721  00221E                     l4864:
 13722  00221E  FFFF               	dw	65535	; assembler added errata NOP
 13723  002220  503E               	movf	___flmul@aexp^0,w,c
 13724  002222  B4D8               	btfsc	status,2,c
 13725  002224  EF16  F011         	goto	u5951
 13726  002228  EF19  F011         	goto	u5950
 13727  00222C                     u5951:
 13728  00222C  FFFF               	dw	65535	; assembler added errata NOP
 13729  00222E  EF30  F011         	goto	l4872
 13730  002232                     u5950:
 13731  002232  FFFF               	dw	65535	; assembler added errata NOP
 13732  002234  283E               	incf	___flmul@aexp^0,w,c
 13733  002236  A4D8               	btfss	status,2,c
 13734  002238  EF20  F011         	goto	u5961
 13735  00223C  EF23  F011         	goto	u5960
 13736  002240                     u5961:
 13737  002240  FFFF               	dw	65535	; assembler added errata NOP
 13738  002242  EF2C  F011         	goto	l4870
 13739  002246                     u5960:
 13740  002246  FFFF               	dw	65535	; assembler added errata NOP
 13741  002248  0E00               	movlw	0
 13742  00224A  6E31               	movwf	___flmul@a^0,c
 13743  00224C  0E00               	movlw	0
 13744  00224E  6E32               	movwf	(___flmul@a+1)^0,c
 13745  002250  0E00               	movlw	0
 13746  002252  6E33               	movwf	(___flmul@a+2)^0,c
 13747  002254  0E00               	movlw	0
 13748  002256  6E34               	movwf	(___flmul@a+3)^0,c
 13749  002258                     l4870:
 13750  002258  FFFF               	dw	65535	; assembler added errata NOP
 13751  00225A  8E33               	bsf	(___flmul@a+2)^0,7,c
 13752  00225C  EF39  F011         	goto	l1008
 13753  002260                     l4872:
 13754  002260  FFFF               	dw	65535	; assembler added errata NOP
 13755  002262  0E00               	movlw	0
 13756  002264  6E31               	movwf	___flmul@a^0,c
 13757  002266  0E00               	movlw	0
 13758  002268  6E32               	movwf	(___flmul@a+1)^0,c
 13759  00226A  0E00               	movlw	0
 13760  00226C  6E33               	movwf	(___flmul@a+2)^0,c
 13761  00226E  0E00               	movlw	0
 13762  002270  6E34               	movwf	(___flmul@a+3)^0,c
 13763  002272                     l1008:
 13764  002272  FFFF               	dw	65535	; assembler added errata NOP
 13765  002274  503E               	movf	___flmul@aexp^0,w,c
 13766  002276  B4D8               	btfsc	status,2,c
 13767  002278  EF40  F011         	goto	u5971
 13768  00227C  EF43  F011         	goto	u5970
 13769  002280                     u5971:
 13770  002280  FFFF               	dw	65535	; assembler added errata NOP
 13771  002282  EF4D  F011         	goto	l4876
 13772  002286                     u5970:
 13773  002286  FFFF               	dw	65535	; assembler added errata NOP
 13774  002288  503F               	movf	___flmul@bexp^0,w,c
 13775  00228A  A4D8               	btfss	status,2,c
 13776  00228C  EF4A  F011         	goto	u5981
 13777  002290  EF4D  F011         	goto	u5980
 13778  002294                     u5981:
 13779  002294  FFFF               	dw	65535	; assembler added errata NOP
 13780  002296  EF58  F011         	goto	l4880
 13781  00229A                     u5980:
 13782  00229A                     l4876:
 13783  00229A  FFFF               	dw	65535	; assembler added errata NOP
 13784  00229C  0E00               	movlw	0
 13785  00229E  6E2D               	movwf	?___flmul^0,c
 13786  0022A0  0E00               	movlw	0
 13787  0022A2  6E2E               	movwf	(?___flmul+1)^0,c
 13788  0022A4  0E00               	movlw	0
 13789  0022A6  6E2F               	movwf	(?___flmul+2)^0,c
 13790  0022A8  0E00               	movlw	0
 13791  0022AA  6E30               	movwf	(?___flmul+3)^0,c
 13792  0022AC  EF12  F013         	goto	l1012
 13793  0022B0                     l4880:
 13794  0022B0  FFFF               	dw	65535	; assembler added errata NOP
 13795  0022B2  5033               	movf	(___flmul@a+2)^0,w,c
 13796  0022B4  022D               	mulwf	___flmul@b^0,c
 13797  0022B6  CFF3 F044          	movff	prodl,___flmul@temp
 13798  0022BA  CFF4 F045          	movff	prodh,___flmul@temp+1
 13799  0022BE  5044               	movf	___flmul@temp^0,w,c
 13800  0022C0  6E3A               	movwf	___flmul@grs^0,c
 13801  0022C2  6A3B               	clrf	(___flmul@grs+1)^0,c
 13802  0022C4  6A3C               	clrf	(___flmul@grs+2)^0,c
 13803  0022C6  6A3D               	clrf	(___flmul@grs+3)^0,c
 13804  0022C8  5045               	movf	(___flmul@temp+1)^0,w,c
 13805  0022CA  6E40               	movwf	___flmul@prod^0,c
 13806  0022CC  6A41               	clrf	(___flmul@prod+1)^0,c
 13807  0022CE  6A42               	clrf	(___flmul@prod+2)^0,c
 13808  0022D0  6A43               	clrf	(___flmul@prod+3)^0,c
 13809  0022D2  5032               	movf	(___flmul@a+1)^0,w,c
 13810  0022D4  022E               	mulwf	(___flmul@b+1)^0,c
 13811  0022D6  CFF3 F044          	movff	prodl,___flmul@temp
 13812  0022DA  CFF4 F045          	movff	prodh,___flmul@temp+1
 13813  0022DE  5044               	movf	___flmul@temp^0,w,c
 13814  0022E0  263A               	addwf	___flmul@grs^0,f,c
 13815  0022E2  0E00               	movlw	0
 13816  0022E4  223B               	addwfc	(___flmul@grs+1)^0,f,c
 13817  0022E6  223C               	addwfc	(___flmul@grs+2)^0,f,c
 13818  0022E8  223D               	addwfc	(___flmul@grs+3)^0,f,c
 13819  0022EA  5045               	movf	(___flmul@temp+1)^0,w,c
 13820  0022EC  2640               	addwf	___flmul@prod^0,f,c
 13821  0022EE  0E00               	movlw	0
 13822  0022F0  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13823  0022F2  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13824  0022F4  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13825  0022F6  5031               	movf	___flmul@a^0,w,c
 13826  0022F8  022F               	mulwf	(___flmul@b+2)^0,c
 13827  0022FA  CFF3 F044          	movff	prodl,___flmul@temp
 13828  0022FE  CFF4 F045          	movff	prodh,___flmul@temp+1
 13829  002302  5044               	movf	___flmul@temp^0,w,c
 13830  002304  263A               	addwf	___flmul@grs^0,f,c
 13831  002306  0E00               	movlw	0
 13832  002308  223B               	addwfc	(___flmul@grs+1)^0,f,c
 13833  00230A  223C               	addwfc	(___flmul@grs+2)^0,f,c
 13834  00230C  223D               	addwfc	(___flmul@grs+3)^0,f,c
 13835  00230E  5045               	movf	(___flmul@temp+1)^0,w,c
 13836  002310  2640               	addwf	___flmul@prod^0,f,c
 13837  002312  0E00               	movlw	0
 13838  002314  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13839  002316  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13840  002318  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13841  00231A  C03C  F03D         	movff	___flmul@grs+2,___flmul@grs+3
 13842  00231E  C03B  F03C         	movff	___flmul@grs+1,___flmul@grs+2
 13843  002322  C03A  F03B         	movff	___flmul@grs,___flmul@grs+1
 13844  002326  6A3A               	clrf	___flmul@grs^0,c
 13845  002328  5031               	movf	___flmul@a^0,w,c
 13846  00232A  022E               	mulwf	(___flmul@b+1)^0,c
 13847  00232C  CFF3 F044          	movff	prodl,___flmul@temp
 13848  002330  CFF4 F045          	movff	prodh,___flmul@temp+1
 13849  002334  5044               	movf	___flmul@temp^0,w,c
 13850  002336  263A               	addwf	___flmul@grs^0,f,c
 13851  002338  5045               	movf	(___flmul@temp+1)^0,w,c
 13852  00233A  223B               	addwfc	(___flmul@grs+1)^0,f,c
 13853  00233C  0E00               	movlw	0
 13854  00233E  223C               	addwfc	(___flmul@grs+2)^0,f,c
 13855  002340  0E00               	movlw	0
 13856  002342  223D               	addwfc	(___flmul@grs+3)^0,f,c
 13857  002344  5032               	movf	(___flmul@a+1)^0,w,c
 13858  002346  022D               	mulwf	___flmul@b^0,c
 13859  002348  CFF3 F044          	movff	prodl,___flmul@temp
 13860  00234C  CFF4 F045          	movff	prodh,___flmul@temp+1
 13861  002350  5044               	movf	___flmul@temp^0,w,c
 13862  002352  263A               	addwf	___flmul@grs^0,f,c
 13863  002354  5045               	movf	(___flmul@temp+1)^0,w,c
 13864  002356  223B               	addwfc	(___flmul@grs+1)^0,f,c
 13865  002358  0E00               	movlw	0
 13866  00235A  223C               	addwfc	(___flmul@grs+2)^0,f,c
 13867  00235C  0E00               	movlw	0
 13868  00235E  223D               	addwfc	(___flmul@grs+3)^0,f,c
 13869  002360  C03C  F03D         	movff	___flmul@grs+2,___flmul@grs+3
 13870  002364  C03B  F03C         	movff	___flmul@grs+1,___flmul@grs+2
 13871  002368  C03A  F03B         	movff	___flmul@grs,___flmul@grs+1
 13872  00236C  6A3A               	clrf	___flmul@grs^0,c
 13873  00236E  5031               	movf	___flmul@a^0,w,c
 13874  002370  022D               	mulwf	___flmul@b^0,c
 13875  002372  CFF3 F044          	movff	prodl,___flmul@temp
 13876  002376  CFF4 F045          	movff	prodh,___flmul@temp+1
 13877  00237A  5044               	movf	___flmul@temp^0,w,c
 13878  00237C  263A               	addwf	___flmul@grs^0,f,c
 13879  00237E  5045               	movf	(___flmul@temp+1)^0,w,c
 13880  002380  223B               	addwfc	(___flmul@grs+1)^0,f,c
 13881  002382  0E00               	movlw	0
 13882  002384  223C               	addwfc	(___flmul@grs+2)^0,f,c
 13883  002386  0E00               	movlw	0
 13884  002388  223D               	addwfc	(___flmul@grs+3)^0,f,c
 13885  00238A  5033               	movf	(___flmul@a+2)^0,w,c
 13886  00238C  022E               	mulwf	(___flmul@b+1)^0,c
 13887  00238E  CFF3 F044          	movff	prodl,___flmul@temp
 13888  002392  CFF4 F045          	movff	prodh,___flmul@temp+1
 13889  002396  5044               	movf	___flmul@temp^0,w,c
 13890  002398  2640               	addwf	___flmul@prod^0,f,c
 13891  00239A  5045               	movf	(___flmul@temp+1)^0,w,c
 13892  00239C  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13893  00239E  0E00               	movlw	0
 13894  0023A0  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13895  0023A2  0E00               	movlw	0
 13896  0023A4  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13897  0023A6  5032               	movf	(___flmul@a+1)^0,w,c
 13898  0023A8  022F               	mulwf	(___flmul@b+2)^0,c
 13899  0023AA  CFF3 F044          	movff	prodl,___flmul@temp
 13900  0023AE  CFF4 F045          	movff	prodh,___flmul@temp+1
 13901  0023B2  5044               	movf	___flmul@temp^0,w,c
 13902  0023B4  2640               	addwf	___flmul@prod^0,f,c
 13903  0023B6  5045               	movf	(___flmul@temp+1)^0,w,c
 13904  0023B8  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13905  0023BA  0E00               	movlw	0
 13906  0023BC  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13907  0023BE  0E00               	movlw	0
 13908  0023C0  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13909  0023C2  5033               	movf	(___flmul@a+2)^0,w,c
 13910  0023C4  022F               	mulwf	(___flmul@b+2)^0,c
 13911  0023C6  CFF3 F044          	movff	prodl,___flmul@temp
 13912  0023CA  CFF4 F045          	movff	prodh,___flmul@temp+1
 13913  0023CE  5044               	movf	___flmul@temp^0,w,c
 13914  0023D0  6E35               	movwf	??___flmul^0,c
 13915  0023D2  5045               	movf	(___flmul@temp+1)^0,w,c
 13916  0023D4  6E36               	movwf	(??___flmul+1)^0,c
 13917  0023D6  6A37               	clrf	(??___flmul+2)^0,c
 13918  0023D8  6A38               	clrf	(??___flmul+3)^0,c
 13919  0023DA  C037  F038         	movff	??___flmul+2,??___flmul+3
 13920  0023DE  C036  F037         	movff	??___flmul+1,??___flmul+2
 13921  0023E2  C035  F036         	movff	??___flmul,??___flmul+1
 13922  0023E6  6A35               	clrf	??___flmul^0,c
 13923  0023E8  5035               	movf	??___flmul^0,w,c
 13924  0023EA  2640               	addwf	___flmul@prod^0,f,c
 13925  0023EC  5036               	movf	(??___flmul+1)^0,w,c
 13926  0023EE  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13927  0023F0  5037               	movf	(??___flmul+2)^0,w,c
 13928  0023F2  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13929  0023F4  5038               	movf	(??___flmul+3)^0,w,c
 13930  0023F6  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13931  0023F8  C03A  F035         	movff	___flmul@grs,??___flmul
 13932  0023FC  C03B  F036         	movff	___flmul@grs+1,??___flmul+1
 13933  002400  C03C  F037         	movff	___flmul@grs+2,??___flmul+2
 13934  002404  C03D  F038         	movff	___flmul@grs+3,??___flmul+3
 13935  002408  0E19               	movlw	25
 13936  00240A  EF0D  F012         	goto	u5990
 13937  00240E                     u5995:
 13938  00240E  FFFF               	dw	65535	; assembler added errata NOP
 13939  002410  90D8               	bcf	status,0,c
 13940  002412  3238               	rrcf	(??___flmul+3)^0,f,c
 13941  002414  3237               	rrcf	(??___flmul+2)^0,f,c
 13942  002416  3236               	rrcf	(??___flmul+1)^0,f,c
 13943  002418  3235               	rrcf	??___flmul^0,f,c
 13944  00241A                     u5990:
 13945  00241A  FFFF               	dw	65535	; assembler added errata NOP
 13946  00241C  2EE8               	decfsz	wreg,f,c
 13947  00241E  EF07  F012         	goto	u5995
 13948  002422  5035               	movf	??___flmul^0,w,c
 13949  002424  2640               	addwf	___flmul@prod^0,f,c
 13950  002426  5036               	movf	(??___flmul+1)^0,w,c
 13951  002428  2241               	addwfc	(___flmul@prod+1)^0,f,c
 13952  00242A  5037               	movf	(??___flmul+2)^0,w,c
 13953  00242C  2242               	addwfc	(___flmul@prod+2)^0,f,c
 13954  00242E  5038               	movf	(??___flmul+3)^0,w,c
 13955  002430  2243               	addwfc	(___flmul@prod+3)^0,f,c
 13956  002432  C03C  F03D         	movff	___flmul@grs+2,___flmul@grs+3
 13957  002436  C03B  F03C         	movff	___flmul@grs+1,___flmul@grs+2
 13958  00243A  C03A  F03B         	movff	___flmul@grs,___flmul@grs+1
 13959  00243E  6A3A               	clrf	___flmul@grs^0,c
 13960  002440  503E               	movf	___flmul@aexp^0,w,c
 13961  002442  C03F  F035         	movff	___flmul@bexp,??___flmul
 13962  002446  6A36               	clrf	(??___flmul+1)^0,c
 13963  002448  2635               	addwf	??___flmul^0,f,c
 13964  00244A  0E00               	movlw	0
 13965  00244C  2236               	addwfc	(??___flmul+1)^0,f,c
 13966  00244E  0E82               	movlw	130
 13967  002450  2435               	addwf	??___flmul^0,w,c
 13968  002452  6E44               	movwf	___flmul@temp^0,c
 13969  002454  0EFF               	movlw	255
 13970  002456  2036               	addwfc	(??___flmul+1)^0,w,c
 13971  002458  6E45               	movwf	(___flmul@temp+1)^0,c
 13972  00245A  EF48  F012         	goto	l4928
 13973  00245E                     l4922:
 13974  00245E  FFFF               	dw	65535	; assembler added errata NOP
 13975  002460  90D8               	bcf	status,0,c
 13976  002462  3640               	rlcf	___flmul@prod^0,f,c
 13977  002464  3641               	rlcf	(___flmul@prod+1)^0,f,c
 13978  002466  3642               	rlcf	(___flmul@prod+2)^0,f,c
 13979  002468  3643               	rlcf	(___flmul@prod+3)^0,f,c
 13980  00246A  AE3D               	btfss	(___flmul@grs+3)^0,7,c
 13981  00246C  EF3A  F012         	goto	u6001
 13982  002470  EF3D  F012         	goto	u6000
 13983  002474                     u6001:
 13984  002474  FFFF               	dw	65535	; assembler added errata NOP
 13985  002476  EF3F  F012         	goto	l1015
 13986  00247A                     u6000:
 13987  00247A  FFFF               	dw	65535	; assembler added errata NOP
 13988  00247C  8040               	bsf	___flmul@prod^0,0,c
 13989  00247E                     l1015:
 13990  00247E  FFFF               	dw	65535	; assembler added errata NOP
 13991  002480  90D8               	bcf	status,0,c
 13992  002482  363A               	rlcf	___flmul@grs^0,f,c
 13993  002484  363B               	rlcf	(___flmul@grs+1)^0,f,c
 13994  002486  363C               	rlcf	(___flmul@grs+2)^0,f,c
 13995  002488  363D               	rlcf	(___flmul@grs+3)^0,f,c
 13996  00248A  0644               	decf	___flmul@temp^0,f,c
 13997  00248C  A0D8               	btfss	status,0,c
 13998  00248E  0645               	decf	(___flmul@temp+1)^0,f,c
 13999  002490                     l4928:
 14000  002490  FFFF               	dw	65535	; assembler added errata NOP
 14001  002492  AE42               	btfss	(___flmul@prod+2)^0,7,c
 14002  002494  EF4E  F012         	goto	u6011
 14003  002498  EF51  F012         	goto	u6010
 14004  00249C                     u6011:
 14005  00249C  FFFF               	dw	65535	; assembler added errata NOP
 14006  00249E  EF2F  F012         	goto	l4922
 14007  0024A2                     u6010:
 14008  0024A2  FFFF               	dw	65535	; assembler added errata NOP
 14009  0024A4  0E00               	movlw	0
 14010  0024A6  6E3E               	movwf	___flmul@aexp^0,c
 14011  0024A8  AE3D               	btfss	(___flmul@grs+3)^0,7,c
 14012  0024AA  EF59  F012         	goto	u6021
 14013  0024AE  EF5C  F012         	goto	u6020
 14014  0024B2                     u6021:
 14015  0024B2  FFFF               	dw	65535	; assembler added errata NOP
 14016  0024B4  EF87  F012         	goto	l1017
 14017  0024B8                     u6020:
 14018  0024B8  FFFF               	dw	65535	; assembler added errata NOP
 14019  0024BA  0EFF               	movlw	255
 14020  0024BC  143A               	andwf	___flmul@grs^0,w,c
 14021  0024BE  6E35               	movwf	??___flmul^0,c
 14022  0024C0  0EFF               	movlw	255
 14023  0024C2  143B               	andwf	(___flmul@grs+1)^0,w,c
 14024  0024C4  6E36               	movwf	(??___flmul+1)^0,c
 14025  0024C6  0EFF               	movlw	255
 14026  0024C8  143C               	andwf	(___flmul@grs+2)^0,w,c
 14027  0024CA  6E37               	movwf	(??___flmul+2)^0,c
 14028  0024CC  0E7F               	movlw	127
 14029  0024CE  143D               	andwf	(___flmul@grs+3)^0,w,c
 14030  0024D0  6E38               	movwf	(??___flmul+3)^0,c
 14031  0024D2  5035               	movf	??___flmul^0,w,c
 14032  0024D4  1036               	iorwf	(??___flmul+1)^0,w,c
 14033  0024D6  1037               	iorwf	(??___flmul+2)^0,w,c
 14034  0024D8  1038               	iorwf	(??___flmul+3)^0,w,c
 14035  0024DA  B4D8               	btfsc	status,2,c
 14036  0024DC  EF72  F012         	goto	u6031
 14037  0024E0  EF75  F012         	goto	u6030
 14038  0024E4                     u6031:
 14039  0024E4  FFFF               	dw	65535	; assembler added errata NOP
 14040  0024E6  EF7B  F012         	goto	l1018
 14041  0024EA                     u6030:
 14042  0024EA  FFFF               	dw	65535	; assembler added errata NOP
 14043  0024EC                     l4936:
 14044  0024EC  FFFF               	dw	65535	; assembler added errata NOP
 14045  0024EE  0E01               	movlw	1
 14046  0024F0  6E3E               	movwf	___flmul@aexp^0,c
 14047  0024F2  EF87  F012         	goto	l1017
 14048  0024F6                     l1018:
 14049  0024F6  FFFF               	dw	65535	; assembler added errata NOP
 14050  0024F8  A040               	btfss	___flmul@prod^0,0,c
 14051  0024FA  EF81  F012         	goto	u6041
 14052  0024FE  EF84  F012         	goto	u6040
 14053  002502                     u6041:
 14054  002502  FFFF               	dw	65535	; assembler added errata NOP
 14055  002504  EF87  F012         	goto	l1017
 14056  002508                     u6040:
 14057  002508  FFFF               	dw	65535	; assembler added errata NOP
 14058  00250A  EF76  F012         	goto	l4936
 14059  00250E                     l1017:
 14060  00250E  FFFF               	dw	65535	; assembler added errata NOP
 14061  002510  503E               	movf	___flmul@aexp^0,w,c
 14062  002512  B4D8               	btfsc	status,2,c
 14063  002514  EF8E  F012         	goto	u6051
 14064  002518  EF91  F012         	goto	u6050
 14065  00251C                     u6051:
 14066  00251C  FFFF               	dw	65535	; assembler added errata NOP
 14067  00251E  EFB8  F012         	goto	l4948
 14068  002522                     u6050:
 14069  002522  FFFF               	dw	65535	; assembler added errata NOP
 14070  002524  0E01               	movlw	1
 14071  002526  2640               	addwf	___flmul@prod^0,f,c
 14072  002528  0E00               	movlw	0
 14073  00252A  2241               	addwfc	(___flmul@prod+1)^0,f,c
 14074  00252C  2242               	addwfc	(___flmul@prod+2)^0,f,c
 14075  00252E  2243               	addwfc	(___flmul@prod+3)^0,f,c
 14076  002530  A043               	btfss	(___flmul@prod+3)^0,0,c
 14077  002532  EF9D  F012         	goto	u6061
 14078  002536  EFA0  F012         	goto	u6060
 14079  00253A                     u6061:
 14080  00253A  FFFF               	dw	65535	; assembler added errata NOP
 14081  00253C  EFB8  F012         	goto	l4948
 14082  002540                     u6060:
 14083  002540  FFFF               	dw	65535	; assembler added errata NOP
 14084  002542  C040  F035         	movff	___flmul@prod,??___flmul
 14085  002546  C041  F036         	movff	___flmul@prod+1,??___flmul+1
 14086  00254A  C042  F037         	movff	___flmul@prod+2,??___flmul+2
 14087  00254E  C043  F038         	movff	___flmul@prod+3,??___flmul+3
 14088  002552  3438               	rlcf	(??___flmul+3)^0,w,c
 14089  002554  3238               	rrcf	(??___flmul+3)^0,f,c
 14090  002556  3237               	rrcf	(??___flmul+2)^0,f,c
 14091  002558  3236               	rrcf	(??___flmul+1)^0,f,c
 14092  00255A  3235               	rrcf	??___flmul^0,f,c
 14093  00255C  C035  F040         	movff	??___flmul,___flmul@prod
 14094  002560  C036  F041         	movff	??___flmul+1,___flmul@prod+1
 14095  002564  C037  F042         	movff	??___flmul+2,___flmul@prod+2
 14096  002568  C038  F043         	movff	??___flmul+3,___flmul@prod+3
 14097  00256C  4A44               	infsnz	___flmul@temp^0,f,c
 14098  00256E  2A45               	incf	(___flmul@temp+1)^0,f,c
 14099  002570                     l4948:
 14100  002570  FFFF               	dw	65535	; assembler added errata NOP
 14101  002572  BE45               	btfsc	(___flmul@temp+1)^0,7,c
 14102  002574  EFC4  F012         	goto	u6071
 14103  002578  5045               	movf	(___flmul@temp+1)^0,w,c
 14104  00257A  E109               	bnz	u6070
 14105  00257C  2844               	incf	___flmul@temp^0,w,c
 14106  00257E  A0D8               	btfss	status,0,c
 14107  002580  EFC4  F012         	goto	u6071
 14108  002584  EFC7  F012         	goto	u6070
 14109  002588                     u6071:
 14110  002588  FFFF               	dw	65535	; assembler added errata NOP
 14111  00258A  EFD2  F012         	goto	l4952
 14112  00258E                     u6070:
 14113  00258E  FFFF               	dw	65535	; assembler added errata NOP
 14114  002590  0E00               	movlw	0
 14115  002592  6E40               	movwf	___flmul@prod^0,c
 14116  002594  0E00               	movlw	0
 14117  002596  6E41               	movwf	(___flmul@prod+1)^0,c
 14118  002598  0E80               	movlw	128
 14119  00259A  6E42               	movwf	(___flmul@prod+2)^0,c
 14120  00259C  0E7F               	movlw	127
 14121  00259E  6E43               	movwf	(___flmul@prod+3)^0,c
 14122  0025A0  EF07  F013         	goto	l4964
 14123  0025A4                     l4952:
 14124  0025A4  FFFF               	dw	65535	; assembler added errata NOP
 14125  0025A6  BE45               	btfsc	(___flmul@temp+1)^0,7,c
 14126  0025A8  EFE1  F012         	goto	u6080
 14127  0025AC  5045               	movf	(___flmul@temp+1)^0,w,c
 14128  0025AE  E106               	bnz	u6081
 14129  0025B0  0444               	decf	___flmul@temp^0,w,c
 14130  0025B2  B0D8               	btfsc	status,0,c
 14131  0025B4  EFDE  F012         	goto	u6081
 14132  0025B8  EFE1  F012         	goto	u6080
 14133  0025BC                     u6081:
 14134  0025BC  FFFF               	dw	65535	; assembler added errata NOP
 14135  0025BE  EFEE  F012         	goto	l1025
 14136  0025C2                     u6080:
 14137  0025C2  FFFF               	dw	65535	; assembler added errata NOP
 14138  0025C4  0E00               	movlw	0
 14139  0025C6  6E40               	movwf	___flmul@prod^0,c
 14140  0025C8  0E00               	movlw	0
 14141  0025CA  6E41               	movwf	(___flmul@prod+1)^0,c
 14142  0025CC  0E00               	movlw	0
 14143  0025CE  6E42               	movwf	(___flmul@prod+2)^0,c
 14144  0025D0  0E00               	movlw	0
 14145  0025D2  6E43               	movwf	(___flmul@prod+3)^0,c
 14146  0025D4  0E00               	movlw	0
 14147  0025D6  6E39               	movwf	___flmul@sign^0,c
 14148  0025D8  EF07  F013         	goto	l4964
 14149  0025DC                     l1025:
 14150  0025DC  FFFF               	dw	65535	; assembler added errata NOP
 14151  0025DE  C044  F03F         	movff	___flmul@temp,___flmul@bexp
 14152  0025E2  0EFF               	movlw	255
 14153  0025E4  1640               	andwf	___flmul@prod^0,f,c
 14154  0025E6  0EFF               	movlw	255
 14155  0025E8  1641               	andwf	(___flmul@prod+1)^0,f,c
 14156  0025EA  0E7F               	movlw	127
 14157  0025EC  1642               	andwf	(___flmul@prod+2)^0,f,c
 14158  0025EE  0E00               	movlw	0
 14159  0025F0  1643               	andwf	(___flmul@prod+3)^0,f,c
 14160  0025F2  A03F               	btfss	___flmul@bexp^0,0,c
 14161  0025F4  EFFE  F012         	goto	u6091
 14162  0025F8  EF01  F013         	goto	u6090
 14163  0025FC                     u6091:
 14164  0025FC  FFFF               	dw	65535	; assembler added errata NOP
 14165  0025FE  EF03  F013         	goto	l4962
 14166  002602                     u6090:
 14167  002602  FFFF               	dw	65535	; assembler added errata NOP
 14168  002604  8E42               	bsf	(___flmul@prod+2)^0,7,c
 14169  002606                     l4962:
 14170  002606  FFFF               	dw	65535	; assembler added errata NOP
 14171  002608  90D8               	bcf	status,0,c
 14172  00260A  303F               	rrcf	___flmul@bexp^0,w,c
 14173  00260C  6E43               	movwf	(___flmul@prod+3)^0,c
 14174  00260E                     l4964:
 14175  00260E  FFFF               	dw	65535	; assembler added errata NOP
 14176  002610  5039               	movf	___flmul@sign^0,w,c
 14177  002612  1243               	iorwf	(___flmul@prod+3)^0,f,c
 14178  002614  C040  F02D         	movff	___flmul@prod,?___flmul
 14179  002618  C041  F02E         	movff	___flmul@prod+1,?___flmul+1
 14180  00261C  C042  F02F         	movff	___flmul@prod+2,?___flmul+2
 14181  002620  C043  F030         	movff	___flmul@prod+3,?___flmul+3
 14182  002624                     l1012:
 14183  002624  FFFF               	dw	65535	; assembler added errata NOP
 14184  002626  0012               	return		;funcret
 14185  002628  FFFF               	dw	65535	; errata NOP
 14186  00262A                     __end_of___flmul:
 14187                           	callstack 0
 14188                           
 14189 ;; *************** function ___fltol *****************
 14190 ;; Defined at:
 14191 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
 14192 ;; Parameters:    Size  Location     Type
 14193 ;;  f1              4   18[BANK0 ] unsigned char 
 14194 ;; Auto vars:     Size  Location     Type
 14195 ;;  exp1            1   27[BANK0 ] unsigned char 
 14196 ;;  sign1           1   26[BANK0 ] unsigned char 
 14197 ;; Return value:  Size  Location     Type
 14198 ;;                  4   18[BANK0 ] long 
 14199 ;; Registers used:
 14200 ;;		wreg, status,2, status,0
 14201 ;; Tracked objects:
 14202 ;;		On entry : 0/0
 14203 ;;		On exit  : 0/0
 14204 ;;		Unchanged: 0/0
 14205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14206 ;;      Params:         0       4       0       0       0       0       0
 14207 ;;      Locals:         0       2       0       0       0       0       0
 14208 ;;      Temps:          0       4       0       0       0       0       0
 14209 ;;      Totals:         0      10       0       0       0       0       0
 14210 ;;Total ram usage:       10 bytes
 14211 ;; Hardware stack levels used:    1
 14212 ;; Hardware stack levels required when called:    1
 14213 ;; This function calls:
 14214 ;;		Nothing
 14215 ;; This function is called by:
 14216 ;;		_init_USART
 14217 ;;		_init_timer_2
 14218 ;;		_update_pwm_duty_ccp1
 14219 ;;		_get_temperature
 14220 ;; This function uses a non-reentrant model
 14221 ;;
 14222                           
 14223                           	psect	text55
 14224  0078FE                     __ptext55:
 14225                           	callstack 0
 14226  0078FE                     ___fltol:
 14227                           	callstack 0
 14228  0078FE  FFFF               	dw	65535	; assembler added errata NOP
 14229  007900  0100               	movlb	0	; () banked
 14230  007902  35CC               	rlcf	(___fltol@f1+2)& (0+255),w,b
 14231  007904  35CD               	rlcf	(___fltol@f1+3)& (0+255),w,b
 14232  007906  6FD3               	movwf	___fltol@exp1& (0+255),b
 14233  007908  51D3               	movf	___fltol@exp1& (0+255),w,b
 14234  00790A  A4D8               	btfss	status,2,c
 14235  00790C  EF8A  F03C         	goto	u6161
 14236  007910  EF8D  F03C         	goto	u6160
 14237  007914                     u6161:
 14238  007914  FFFF               	dw	65535	; assembler added errata NOP
 14239  007916  EF99  F03C         	goto	l5012
 14240  00791A                     u6160:
 14241  00791A  FFFF               	dw	65535	; assembler added errata NOP
 14242  00791C                     l5008:
 14243  00791C  FFFF               	dw	65535	; assembler added errata NOP
 14244                           
 14245                           ; BSR set to: 0
 14246  00791E  0E00               	movlw	0
 14247  007920  6FCA               	movwf	?___fltol& (0+255),b
 14248  007922  0E00               	movlw	0
 14249  007924  6FCB               	movwf	(?___fltol+1)& (0+255),b
 14250  007926  0E00               	movlw	0
 14251  007928  6FCC               	movwf	(?___fltol+2)& (0+255),b
 14252  00792A  0E00               	movlw	0
 14253  00792C  6FCD               	movwf	(?___fltol+3)& (0+255),b
 14254  00792E  EF18  F03D         	goto	l691
 14255  007932                     l5012:
 14256  007932  FFFF               	dw	65535	; assembler added errata NOP
 14257                           
 14258                           ; BSR set to: 0
 14259  007934  C0CA  F0CE         	movff	___fltol@f1,??___fltol
 14260  007938  C0CB  F0CF         	movff	___fltol@f1+1,??___fltol+1
 14261  00793C  C0CC  F0D0         	movff	___fltol@f1+2,??___fltol+2
 14262  007940  C0CD  F0D1         	movff	___fltol@f1+3,??___fltol+3
 14263  007944  0E20               	movlw	32
 14264  007946  EFAB  F03C         	goto	u6170
 14265  00794A                     u6175:
 14266  00794A  FFFF               	dw	65535	; assembler added errata NOP
 14267  00794C  90D8               	bcf	status,0,c
 14268  00794E  33D1               	rrcf	(??___fltol+3)& (0+255),f,b
 14269  007950  33D0               	rrcf	(??___fltol+2)& (0+255),f,b
 14270  007952  33CF               	rrcf	(??___fltol+1)& (0+255),f,b
 14271  007954  33CE               	rrcf	??___fltol& (0+255),f,b
 14272  007956                     u6170:
 14273  007956  FFFF               	dw	65535	; assembler added errata NOP
 14274  007958  2EE8               	decfsz	wreg,f,c
 14275  00795A  EFA5  F03C         	goto	u6175
 14276  00795E  51CE               	movf	??___fltol& (0+255),w,b
 14277  007960  6FD2               	movwf	___fltol@sign1& (0+255),b
 14278  007962                     
 14279                           ; BSR set to: 0
 14280  007962  8FCC               	bsf	(___fltol@f1+2)& (0+255),7,b
 14281  007964                     
 14282                           ; BSR set to: 0
 14283  007964  0EFF               	movlw	255
 14284  007966  17CA               	andwf	___fltol@f1& (0+255),f,b
 14285  007968  0EFF               	movlw	255
 14286  00796A  17CB               	andwf	(___fltol@f1+1)& (0+255),f,b
 14287  00796C  0EFF               	movlw	255
 14288  00796E  17CC               	andwf	(___fltol@f1+2)& (0+255),f,b
 14289  007970  0E00               	movlw	0
 14290  007972  17CD               	andwf	(___fltol@f1+3)& (0+255),f,b
 14291  007974                     
 14292                           ; BSR set to: 0
 14293  007974  0E96               	movlw	150
 14294  007976  5FD3               	subwf	___fltol@exp1& (0+255),f,b
 14295  007978                     
 14296                           ; BSR set to: 0
 14297  007978  BFD3               	btfsc	___fltol@exp1& (0+255),7,b
 14298  00797A  EFC4  F03C         	goto	u6180
 14299  00797E  EFC1  F03C         	goto	u6181
 14300  007982                     u6181:
 14301  007982  FFFF               	dw	65535	; assembler added errata NOP
 14302  007984  EFDE  F03C         	goto	l5032
 14303  007988                     u6180:
 14304  007988  FFFF               	dw	65535	; assembler added errata NOP
 14305  00798A                     
 14306                           ; BSR set to: 0
 14307  00798A  51D3               	movf	___fltol@exp1& (0+255),w,b
 14308  00798C  0A80               	xorlw	128
 14309  00798E  0F97               	addlw	151
 14310  007990  B0D8               	btfsc	status,0,c
 14311  007992  EFCD  F03C         	goto	u6191
 14312  007996  EFD0  F03C         	goto	u6190
 14313  00799A                     u6191:
 14314  00799A  FFFF               	dw	65535	; assembler added errata NOP
 14315  00799C  EFD3  F03C         	goto	l5028
 14316  0079A0                     u6190:
 14317  0079A0  FFFF               	dw	65535	; assembler added errata NOP
 14318  0079A2  EF8E  F03C         	goto	l5008
 14319  0079A6                     l5028:
 14320  0079A6  FFFF               	dw	65535	; assembler added errata NOP
 14321                           
 14322                           ; BSR set to: 0
 14323  0079A8  90D8               	bcf	status,0,c
 14324  0079AA  33CD               	rrcf	(___fltol@f1+3)& (0+255),f,b
 14325  0079AC  33CC               	rrcf	(___fltol@f1+2)& (0+255),f,b
 14326  0079AE  33CB               	rrcf	(___fltol@f1+1)& (0+255),f,b
 14327  0079B0  33CA               	rrcf	___fltol@f1& (0+255),f,b
 14328  0079B2                     
 14329                           ; BSR set to: 0
 14330  0079B2  3FD3               	incfsz	___fltol@exp1& (0+255),f,b
 14331  0079B4  EFD3  F03C         	goto	l5028
 14332  0079B8  EFFC  F03C         	goto	l5042
 14333  0079BC                     l5032:
 14334  0079BC  FFFF               	dw	65535	; assembler added errata NOP
 14335                           
 14336                           ; BSR set to: 0
 14337  0079BE  0E1F               	movlw	31
 14338  0079C0  65D3               	cpfsgt	___fltol@exp1& (0+255),b
 14339  0079C2  EFE5  F03C         	goto	u6201
 14340  0079C6  EFE8  F03C         	goto	u6200
 14341  0079CA                     u6201:
 14342  0079CA  FFFF               	dw	65535	; assembler added errata NOP
 14343  0079CC  EFF2  F03C         	goto	l5040
 14344  0079D0                     u6200:
 14345  0079D0  FFFF               	dw	65535	; assembler added errata NOP
 14346  0079D2  EF8E  F03C         	goto	l5008
 14347  0079D6                     l5038:
 14348  0079D6  FFFF               	dw	65535	; assembler added errata NOP
 14349                           
 14350                           ; BSR set to: 0
 14351  0079D8  90D8               	bcf	status,0,c
 14352  0079DA  37CA               	rlcf	___fltol@f1& (0+255),f,b
 14353  0079DC  37CB               	rlcf	(___fltol@f1+1)& (0+255),f,b
 14354  0079DE  37CC               	rlcf	(___fltol@f1+2)& (0+255),f,b
 14355  0079E0  37CD               	rlcf	(___fltol@f1+3)& (0+255),f,b
 14356  0079E2  07D3               	decf	___fltol@exp1& (0+255),f,b
 14357  0079E4                     l5040:
 14358  0079E4  FFFF               	dw	65535	; assembler added errata NOP
 14359                           
 14360                           ; BSR set to: 0
 14361  0079E6  51D3               	movf	___fltol@exp1& (0+255),w,b
 14362  0079E8  A4D8               	btfss	status,2,c
 14363  0079EA  EFF9  F03C         	goto	u6211
 14364  0079EE  EFFC  F03C         	goto	u6210
 14365  0079F2                     u6211:
 14366  0079F2  FFFF               	dw	65535	; assembler added errata NOP
 14367  0079F4  EFEB  F03C         	goto	l5038
 14368  0079F8                     u6210:
 14369  0079F8                     l5042:
 14370  0079F8  FFFF               	dw	65535	; assembler added errata NOP
 14371                           
 14372                           ; BSR set to: 0
 14373  0079FA  51D2               	movf	___fltol@sign1& (0+255),w,b
 14374  0079FC  B4D8               	btfsc	status,2,c
 14375  0079FE  EF03  F03D         	goto	u6221
 14376  007A02  EF06  F03D         	goto	u6220
 14377  007A06                     u6221:
 14378  007A06  FFFF               	dw	65535	; assembler added errata NOP
 14379  007A08  EF0F  F03D         	goto	l5046
 14380  007A0C                     u6220:
 14381  007A0C  FFFF               	dw	65535	; assembler added errata NOP
 14382  007A0E                     
 14383                           ; BSR set to: 0
 14384  007A0E  1FCD               	comf	(___fltol@f1+3)& (0+255),f,b
 14385  007A10  1FCC               	comf	(___fltol@f1+2)& (0+255),f,b
 14386  007A12  1FCB               	comf	(___fltol@f1+1)& (0+255),f,b
 14387  007A14  6DCA               	negf	___fltol@f1& (0+255),b
 14388  007A16  0E00               	movlw	0
 14389  007A18  23CB               	addwfc	(___fltol@f1+1)& (0+255),f,b
 14390  007A1A  23CC               	addwfc	(___fltol@f1+2)& (0+255),f,b
 14391  007A1C  23CD               	addwfc	(___fltol@f1+3)& (0+255),f,b
 14392  007A1E                     l5046:
 14393  007A1E  FFFF               	dw	65535	; assembler added errata NOP
 14394                           
 14395                           ; BSR set to: 0
 14396  007A20  C0CA  F0CA         	movff	___fltol@f1,?___fltol
 14397  007A24  C0CB  F0CB         	movff	___fltol@f1+1,?___fltol+1
 14398  007A28  C0CC  F0CC         	movff	___fltol@f1+2,?___fltol+2
 14399  007A2C  C0CD  F0CD         	movff	___fltol@f1+3,?___fltol+3
 14400  007A30                     l691:
 14401  007A30  FFFF               	dw	65535	; assembler added errata NOP
 14402                           
 14403                           ; BSR set to: 0
 14404  007A32  0012               	return		;funcret
 14405  007A34  FFFF               	dw	65535	; errata NOP
 14406  007A36                     __end_of___fltol:
 14407                           	callstack 0
 14408                           
 14409 ;; *************** function _init_PORTS *****************
 14410 ;; Defined at:
 14411 ;;		line 61 in file "init_PIC.c"
 14412 ;; Parameters:    Size  Location     Type
 14413 ;;		None
 14414 ;; Auto vars:     Size  Location     Type
 14415 ;;		None
 14416 ;; Return value:  Size  Location     Type
 14417 ;;                  1    wreg      void 
 14418 ;; Registers used:
 14419 ;;		wreg, status,2
 14420 ;; Tracked objects:
 14421 ;;		On entry : 0/0
 14422 ;;		On exit  : 0/0
 14423 ;;		Unchanged: 0/0
 14424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14425 ;;      Params:         0       0       0       0       0       0       0
 14426 ;;      Locals:         0       0       0       0       0       0       0
 14427 ;;      Temps:          0       0       0       0       0       0       0
 14428 ;;      Totals:         0       0       0       0       0       0       0
 14429 ;;Total ram usage:        0 bytes
 14430 ;; Hardware stack levels used:    1
 14431 ;; Hardware stack levels required when called:    1
 14432 ;; This function calls:
 14433 ;;		Nothing
 14434 ;; This function is called by:
 14435 ;;		_main
 14436 ;; This function uses a non-reentrant model
 14437 ;;
 14438                           
 14439                           	psect	text56
 14440  006600                     __ptext56:
 14441                           	callstack 0
 14442  006600                     _init_PORTS:
 14443                           	callstack 0
 14444  006600  FFFF               	dw	65535	; assembler added errata NOP
 14445  006602                     
 14446                           ;init_PIC.c: 63:     LATA = 0;
 14447  006602  0E00               	movlw	0
 14448  006604  6E89               	movwf	137,c	;volatile
 14449                           
 14450                           ;init_PIC.c: 64:     PORTA = 0;
 14451  006606  0E00               	movlw	0
 14452  006608  6E80               	movwf	128,c	;volatile
 14453                           
 14454                           ;init_PIC.c: 65:     TRISA = 0xF0;
 14455  00660A  0EF0               	movlw	240
 14456  00660C  6E92               	movwf	146,c	;volatile
 14457                           
 14458                           ;init_PIC.c: 67:     LATB = 0;
 14459  00660E  0E00               	movlw	0
 14460  006610  6E8A               	movwf	138,c	;volatile
 14461                           
 14462                           ;init_PIC.c: 68:     PORTB = 0;
 14463  006612  0E00               	movlw	0
 14464  006614  6E81               	movwf	129,c	;volatile
 14465                           
 14466                           ;init_PIC.c: 69:     TRISB = 0x00;
 14467  006616  0E00               	movlw	0
 14468  006618  6E93               	movwf	147,c	;volatile
 14469                           
 14470                           ;init_PIC.c: 72:     LATC = 0;
 14471  00661A  0E00               	movlw	0
 14472  00661C  6E8B               	movwf	139,c	;volatile
 14473                           
 14474                           ;init_PIC.c: 73:     PORTC = 0;
 14475  00661E  0E00               	movlw	0
 14476  006620  6E82               	movwf	130,c	;volatile
 14477  006622                     
 14478                           ;init_PIC.c: 74:     TRISCbits.RC2 = 0;
 14479  006622  9494               	bcf	148,2,c	;volatile
 14480  006624                     
 14481                           ;init_PIC.c: 75:     TRISCbits.RC7 = 1;
 14482  006624  8E94               	bsf	148,7,c	;volatile
 14483  006626                     
 14484                           ;init_PIC.c: 76:     TRISCbits.RC6 = 0;
 14485  006626  9C94               	bcf	148,6,c	;volatile
 14486  006628  0012               	return		;funcret
 14487  00662A  FFFF               	dw	65535	; errata NOP
 14488  00662C                     __end_of_init_PORTS:
 14489                           	callstack 0
 14490                           
 14491 ;; *************** function _get_reg_value *****************
 14492 ;; Defined at:
 14493 ;;		line 51 in file "serial_rs232.c"
 14494 ;; Parameters:    Size  Location     Type
 14495 ;;		None
 14496 ;; Auto vars:     Size  Location     Type
 14497 ;;  rx_char         1    0[COMRAM] unsigned char 
 14498 ;; Return value:  Size  Location     Type
 14499 ;;                  1    wreg      unsigned char 
 14500 ;; Registers used:
 14501 ;;		wreg, status,2
 14502 ;; Tracked objects:
 14503 ;;		On entry : 0/0
 14504 ;;		On exit  : 0/0
 14505 ;;		Unchanged: 0/0
 14506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14507 ;;      Params:         0       0       0       0       0       0       0
 14508 ;;      Locals:         1       0       0       0       0       0       0
 14509 ;;      Temps:          0       0       0       0       0       0       0
 14510 ;;      Totals:         1       0       0       0       0       0       0
 14511 ;;Total ram usage:        1 bytes
 14512 ;; Hardware stack levels used:    1
 14513 ;; Hardware stack levels required when called:    1
 14514 ;; This function calls:
 14515 ;;		Nothing
 14516 ;; This function is called by:
 14517 ;;		_main
 14518 ;; This function uses a non-reentrant model
 14519 ;;
 14520                           
 14521                           	psect	text57
 14522  006486                     __ptext57:
 14523                           	callstack 0
 14524  006486                     _get_reg_value:
 14525                           	callstack 0
 14526  006486  FFFF               	dw	65535	; assembler added errata NOP
 14527  006488                     
 14528                           ;serial_rs232.c: 52:     unsigned char rx_char = RCREG;
 14529  006488  CFAE F001          	movff	4014,get_reg_value@rx_char	;volatile
 14530  00648C                     
 14531                           ;serial_rs232.c: 53:     RCREG = 0;
 14532  00648C  0E00               	movlw	0
 14533  00648E  6EAE               	movwf	174,c	;volatile
 14534                           
 14535                           ;serial_rs232.c: 54:     return rx_char;
 14536  006490  5001               	movf	get_reg_value@rx_char^0,w,c
 14537  006492  0012               	return		;funcret
 14538  006494  FFFF               	dw	65535	; errata NOP
 14539  006496                     __end_of_get_reg_value:
 14540                           	callstack 0
 14541                           
 14542 ;; *************** function _configure_analog_digital_conversion *****************
 14543 ;; Defined at:
 14544 ;;		line 8 in file "oven.c"
 14545 ;; Parameters:    Size  Location     Type
 14546 ;;		None
 14547 ;; Auto vars:     Size  Location     Type
 14548 ;;		None
 14549 ;; Return value:  Size  Location     Type
 14550 ;;                  1    wreg      void 
 14551 ;; Registers used:
 14552 ;;		wreg, status,2
 14553 ;; Tracked objects:
 14554 ;;		On entry : 0/0
 14555 ;;		On exit  : 0/0
 14556 ;;		Unchanged: 0/0
 14557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14558 ;;      Params:         0       0       0       0       0       0       0
 14559 ;;      Locals:         0       0       0       0       0       0       0
 14560 ;;      Temps:          0       0       0       0       0       0       0
 14561 ;;      Totals:         0       0       0       0       0       0       0
 14562 ;;Total ram usage:        0 bytes
 14563 ;; Hardware stack levels used:    1
 14564 ;; Hardware stack levels required when called:    1
 14565 ;; This function calls:
 14566 ;;		Nothing
 14567 ;; This function is called by:
 14568 ;;		_main
 14569 ;; This function uses a non-reentrant model
 14570 ;;
 14571                           
 14572                           	psect	text58
 14573  006558                     __ptext58:
 14574                           	callstack 0
 14575  006558                     _configure_analog_digital_conversion:
 14576                           	callstack 0
 14577  006558  FFFF               	dw	65535	; assembler added errata NOP
 14578  00655A                     
 14579                           ;oven.c: 9:     LATA = 0;
 14580  00655A  0E00               	movlw	0
 14581  00655C  6E89               	movwf	137,c	;volatile
 14582                           
 14583                           ;oven.c: 10:     PORTA = 0;
 14584  00655E  0E00               	movlw	0
 14585  006560  6E80               	movwf	128,c	;volatile
 14586                           
 14587                           ;oven.c: 11:     TRISA = 0xF0;
 14588  006562  0EF0               	movlw	240
 14589  006564  6E92               	movwf	146,c	;volatile
 14590                           
 14591                           ;oven.c: 12:     ADCON0 = 0;
 14592  006566  0E00               	movlw	0
 14593  006568  6EC2               	movwf	194,c	;volatile
 14594  00656A                     
 14595                           ;oven.c: 13:     ADCON0bits.CHS0 = 0;
 14596  00656A  96C2               	bcf	194,3,c	;volatile
 14597  00656C                     
 14598                           ;oven.c: 14:     ADCON0bits.CHS1 = 0;
 14599  00656C  98C2               	bcf	194,4,c	;volatile
 14600  00656E                     
 14601                           ;oven.c: 15:     ADCON0bits.CHS2 = 1;
 14602  00656E  8AC2               	bsf	194,5,c	;volatile
 14603  006570                     
 14604                           ;oven.c: 16:     ADCON0bits.ADON = 1;
 14605  006570  80C2               	bsf	194,0,c	;volatile
 14606                           
 14607                           ;oven.c: 17:     ADRESH = 0;
 14608  006572  0E00               	movlw	0
 14609  006574  6EC4               	movwf	196,c	;volatile
 14610                           
 14611                           ;oven.c: 18:     ADRESL = 0;
 14612  006576  0E00               	movlw	0
 14613  006578  6EC3               	movwf	195,c	;volatile
 14614                           
 14615                           ;oven.c: 19:     ADCON1 = 0;
 14616  00657A  0E00               	movlw	0
 14617  00657C  6EC1               	movwf	193,c	;volatile
 14618  00657E  0012               	return		;funcret
 14619  006580  FFFF               	dw	65535	; errata NOP
 14620  006582                     __end_of_configure_analog_digital_conversion:
 14621                           	callstack 0
 14622                           
 14623 ;; *************** function _check_temperature *****************
 14624 ;; Defined at:
 14625 ;;		line 36 in file "oven.c"
 14626 ;; Parameters:    Size  Location     Type
 14627 ;;  temp_to_be_c    2   30[BANK0 ] int 
 14628 ;; Auto vars:     Size  Location     Type
 14629 ;;  grad            4   32[BANK0 ] float 
 14630 ;; Return value:  Size  Location     Type
 14631 ;;                  2   30[BANK0 ] int 
 14632 ;; Registers used:
 14633 ;;		wreg, status,2, status,0, cstack
 14634 ;; Tracked objects:
 14635 ;;		On entry : 0/0
 14636 ;;		On exit  : 0/0
 14637 ;;		Unchanged: 0/0
 14638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14639 ;;      Params:         0       2       0       0       0       0       0
 14640 ;;      Locals:         0       4       0       0       0       0       0
 14641 ;;      Temps:          0       0       0       0       0       0       0
 14642 ;;      Totals:         0       6       0       0       0       0       0
 14643 ;;Total ram usage:        6 bytes
 14644 ;; Hardware stack levels used:    1
 14645 ;; Hardware stack levels required when called:    2
 14646 ;; This function calls:
 14647 ;;		___awdiv
 14648 ;;		___flge
 14649 ;;		___xxtofl
 14650 ;;		_abs
 14651 ;; This function is called by:
 14652 ;;		_main
 14653 ;; This function uses a non-reentrant model
 14654 ;;
 14655                           
 14656                           	psect	text59
 14657  007146                     __ptext59:
 14658                           	callstack 0
 14659  007146                     _check_temperature:
 14660                           	callstack 0
 14661  007146  FFFF               	dw	65535	; assembler added errata NOP
 14662  007148                     
 14663                           ;oven.c: 37:     float grad = abs(temp_to_be_checked - (-63))/5;
 14664  007148  0E00               	movlw	0
 14665  00714A  6E1A               	movwf	(___awdiv@divisor+1)^0,c
 14666  00714C  0E05               	movlw	5
 14667  00714E  6E19               	movwf	___awdiv@divisor^0,c
 14668  007150  0E3F               	movlw	63
 14669  007152  0100               	movlb	0	; () banked
 14670  007154  25D6               	addwf	check_temperature@temp_to_be_checked& (0+255),w,b
 14671  007156  6E13               	movwf	abs@a^0,c
 14672  007158  0E00               	movlw	0
 14673  00715A  21D7               	addwfc	(check_temperature@temp_to_be_checked+1)& (0+255),w,b
 14674  00715C  6E14               	movwf	(abs@a+1)^0,c
 14675  00715E  EC56  F034         	call	_abs	;wreg free
 14676  007162  C013  F017         	movff	?_abs,___awdiv@dividend
 14677  007166  C014  F018         	movff	?_abs+1,___awdiv@dividend+1
 14678  00716A  EC6A  F03A         	call	___awdiv	;wreg free
 14679  00716E  C017  F01F         	movff	?___awdiv,___xxtofl@val
 14680  007172  C018  F020         	movff	?___awdiv+1,___xxtofl@val+1
 14681  007176  0E00               	movlw	0
 14682  007178  BE20               	btfsc	(___xxtofl@val+1)^0,7,c
 14683  00717A  0EFF               	movlw	-1
 14684  00717C  6E21               	movwf	(___xxtofl@val+2)^0,c
 14685  00717E  6E22               	movwf	(___xxtofl@val+3)^0,c
 14686  007180  0E01               	movlw	1
 14687  007182  EC7E  F01C         	call	___xxtofl
 14688  007186  C01F  F0D8         	movff	?___xxtofl,check_temperature@grad
 14689  00718A  C020  F0D9         	movff	?___xxtofl+1,check_temperature@grad+1
 14690  00718E  C021  F0DA         	movff	?___xxtofl+2,check_temperature@grad+2
 14691  007192  C022  F0DB         	movff	?___xxtofl+3,check_temperature@grad+3
 14692                           
 14693                           ;oven.c: 38:     if (grad >= 12 && grad <= 13){
 14694  007196  C0D8  F001         	movff	check_temperature@grad,___flge@ff1
 14695  00719A  C0D9  F002         	movff	check_temperature@grad+1,___flge@ff1+1
 14696  00719E  C0DA  F003         	movff	check_temperature@grad+2,___flge@ff1+2
 14697  0071A2  C0DB  F004         	movff	check_temperature@grad+3,___flge@ff1+3
 14698  0071A6  0E00               	movlw	0
 14699  0071A8  6E05               	movwf	___flge@ff2^0,c
 14700  0071AA  0E00               	movlw	0
 14701  0071AC  6E06               	movwf	(___flge@ff2+1)^0,c
 14702  0071AE  0E40               	movlw	64
 14703  0071B0  6E07               	movwf	(___flge@ff2+2)^0,c
 14704  0071B2  0E41               	movlw	65
 14705  0071B4  6E08               	movwf	(___flge@ff2+3)^0,c
 14706  0071B6  ECEB  F03B         	call	___flge	;wreg free
 14707  0071BA  A0D8               	btfss	status,0,c
 14708  0071BC  EFE2  F038         	goto	u6751
 14709  0071C0  EFE5  F038         	goto	u6750
 14710  0071C4                     u6751:
 14711  0071C4  FFFF               	dw	65535	; assembler added errata NOP
 14712  0071C6  EF08  F039         	goto	l5472
 14713  0071CA                     u6750:
 14714  0071CA  FFFF               	dw	65535	; assembler added errata NOP
 14715  0071CC  0E00               	movlw	0
 14716  0071CE  6E01               	movwf	___flge@ff1^0,c
 14717  0071D0  0E00               	movlw	0
 14718  0071D2  6E02               	movwf	(___flge@ff1+1)^0,c
 14719  0071D4  0E50               	movlw	80
 14720  0071D6  6E03               	movwf	(___flge@ff1+2)^0,c
 14721  0071D8  0E41               	movlw	65
 14722  0071DA  6E04               	movwf	(___flge@ff1+3)^0,c
 14723  0071DC  C0D8  F005         	movff	check_temperature@grad,___flge@ff2
 14724  0071E0  C0D9  F006         	movff	check_temperature@grad+1,___flge@ff2+1
 14725  0071E4  C0DA  F007         	movff	check_temperature@grad+2,___flge@ff2+2
 14726  0071E8  C0DB  F008         	movff	check_temperature@grad+3,___flge@ff2+3
 14727  0071EC  ECEB  F03B         	call	___flge	;wreg free
 14728  0071F0  A0D8               	btfss	status,0,c
 14729  0071F2  EFFD  F038         	goto	u6761
 14730  0071F6  EF00  F039         	goto	u6760
 14731  0071FA                     u6761:
 14732  0071FA  FFFF               	dw	65535	; assembler added errata NOP
 14733  0071FC  EF08  F039         	goto	l5472
 14734  007200                     u6760:
 14735  007200  FFFF               	dw	65535	; assembler added errata NOP
 14736  007202                     
 14737                           ;oven.c: 39:         return 1;
 14738  007202  0E00               	movlw	0
 14739  007204  0100               	movlb	0	; () banked
 14740  007206  6FD7               	movwf	(?_check_temperature+1)& (0+255),b
 14741  007208  0E01               	movlw	1
 14742  00720A  6FD6               	movwf	?_check_temperature& (0+255),b
 14743  00720C  EF0E  F039         	goto	l390
 14744  007210                     l5472:
 14745  007210  FFFF               	dw	65535	; assembler added errata NOP
 14746                           
 14747                           ;oven.c: 41:         return 0;
 14748  007212  0E00               	movlw	0
 14749  007214  0100               	movlb	0	; () banked
 14750  007216  6FD7               	movwf	(?_check_temperature+1)& (0+255),b
 14751  007218  0E00               	movlw	0
 14752  00721A  6FD6               	movwf	?_check_temperature& (0+255),b
 14753  00721C                     l390:
 14754  00721C  FFFF               	dw	65535	; assembler added errata NOP
 14755                           
 14756                           ; BSR set to: 0
 14757  00721E  0012               	return		;funcret
 14758  007220  FFFF               	dw	65535	; errata NOP
 14759  007222                     __end_of_check_temperature:
 14760                           	callstack 0
 14761                           
 14762 ;; *************** function _abs *****************
 14763 ;; Defined at:
 14764 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
 14765 ;; Parameters:    Size  Location     Type
 14766 ;;  a               2   18[COMRAM] int 
 14767 ;; Auto vars:     Size  Location     Type
 14768 ;;		None
 14769 ;; Return value:  Size  Location     Type
 14770 ;;                  2   18[COMRAM] int 
 14771 ;; Registers used:
 14772 ;;		wreg, status,2, status,0
 14773 ;; Tracked objects:
 14774 ;;		On entry : 0/0
 14775 ;;		On exit  : 0/0
 14776 ;;		Unchanged: 0/0
 14777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14778 ;;      Params:         2       0       0       0       0       0       0
 14779 ;;      Locals:         0       0       0       0       0       0       0
 14780 ;;      Temps:          2       0       0       0       0       0       0
 14781 ;;      Totals:         4       0       0       0       0       0       0
 14782 ;;Total ram usage:        4 bytes
 14783 ;; Hardware stack levels used:    1
 14784 ;; Hardware stack levels required when called:    1
 14785 ;; This function calls:
 14786 ;;		Nothing
 14787 ;; This function is called by:
 14788 ;;		_check_temperature
 14789 ;;		_dtoa
 14790 ;; This function uses a non-reentrant model
 14791 ;;
 14792                           
 14793                           	psect	text60
 14794  0068AC                     __ptext60:
 14795                           	callstack 0
 14796  0068AC                     _abs:
 14797                           	callstack 0
 14798  0068AC  FFFF               	dw	65535	; assembler added errata NOP
 14799  0068AE  BE14               	btfsc	(abs@a+1)^0,7,c
 14800  0068B0  EF65  F034         	goto	u3720
 14801  0068B4  5014               	movf	(abs@a+1)^0,w,c
 14802  0068B6  E106               	bnz	u3721
 14803  0068B8  0413               	decf	abs@a^0,w,c
 14804  0068BA  B0D8               	btfsc	status,0,c
 14805  0068BC  EF62  F034         	goto	u3721
 14806  0068C0  EF65  F034         	goto	u3720
 14807  0068C4                     u3721:
 14808  0068C4  FFFF               	dw	65535	; assembler added errata NOP
 14809  0068C6  EF74  F034         	goto	l1069
 14810  0068CA                     u3720:
 14811  0068CA  FFFF               	dw	65535	; assembler added errata NOP
 14812  0068CC  C013  F015         	movff	abs@a,??_abs
 14813  0068D0  C014  F016         	movff	abs@a+1,??_abs+1
 14814  0068D4  1E15               	comf	??_abs^0,f,c
 14815  0068D6  1E16               	comf	(??_abs+1)^0,f,c
 14816  0068D8  4A15               	infsnz	??_abs^0,f,c
 14817  0068DA  2A16               	incf	(??_abs+1)^0,f,c
 14818  0068DC  C015  F013         	movff	??_abs,?_abs
 14819  0068E0  C016  F014         	movff	??_abs+1,?_abs+1
 14820  0068E4  EF79  F034         	goto	l1072
 14821  0068E8                     l1069:
 14822  0068E8  FFFF               	dw	65535	; assembler added errata NOP
 14823  0068EA  C013  F013         	movff	abs@a,?_abs
 14824  0068EE  C014  F014         	movff	abs@a+1,?_abs+1
 14825  0068F2                     l1072:
 14826  0068F2  FFFF               	dw	65535	; assembler added errata NOP
 14827  0068F4  0012               	return		;funcret
 14828  0068F6  FFFF               	dw	65535	; errata NOP
 14829  0068F8                     __end_of_abs:
 14830                           	callstack 0
 14831                           
 14832 ;; *************** function ___xxtofl *****************
 14833 ;; Defined at:
 14834 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
 14835 ;; Parameters:    Size  Location     Type
 14836 ;;  sign            1    wreg     unsigned char 
 14837 ;;  val             4   30[COMRAM] long 
 14838 ;; Auto vars:     Size  Location     Type
 14839 ;;  sign            1   38[COMRAM] unsigned char 
 14840 ;;  arg             4   40[COMRAM] unsigned long 
 14841 ;;  exp             1   39[COMRAM] unsigned char 
 14842 ;; Return value:  Size  Location     Type
 14843 ;;                  4   30[COMRAM] unsigned char 
 14844 ;; Registers used:
 14845 ;;		wreg, status,2, status,0
 14846 ;; Tracked objects:
 14847 ;;		On entry : 0/0
 14848 ;;		On exit  : 0/0
 14849 ;;		Unchanged: 0/0
 14850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14851 ;;      Params:         4       0       0       0       0       0       0
 14852 ;;      Locals:         6       0       0       0       0       0       0
 14853 ;;      Temps:          4       0       0       0       0       0       0
 14854 ;;      Totals:        14       0       0       0       0       0       0
 14855 ;;Total ram usage:       14 bytes
 14856 ;; Hardware stack levels used:    1
 14857 ;; Hardware stack levels required when called:    1
 14858 ;; This function calls:
 14859 ;;		Nothing
 14860 ;; This function is called by:
 14861 ;;		_get_temperature
 14862 ;;		_check_temperature
 14863 ;; This function uses a non-reentrant model
 14864 ;;
 14865                           
 14866                           	psect	text61
 14867  0038FC                     __ptext61:
 14868                           	callstack 0
 14869  0038FC                     ___xxtofl:
 14870                           	callstack 0
 14871  0038FC  FFFF               	dw	65535	; assembler added errata NOP
 14872                           
 14873                           ;incstack = 0
 14874                           ;___xxtofl@sign stored from wreg
 14875  0038FE  6E27               	movwf	___xxtofl@sign^0,c
 14876  003900  5027               	movf	___xxtofl@sign^0,w,c
 14877  003902  B4D8               	btfsc	status,2,c
 14878  003904  EF86  F01C         	goto	u6231
 14879  003908  EF89  F01C         	goto	u6230
 14880  00390C                     u6231:
 14881  00390C  FFFF               	dw	65535	; assembler added errata NOP
 14882  00390E  EFAE  F01C         	goto	l1049
 14883  003912                     u6230:
 14884  003912  FFFF               	dw	65535	; assembler added errata NOP
 14885  003914  BE22               	btfsc	(___xxtofl@val+3)^0,7,c
 14886  003916  EF92  F01C         	goto	u6240
 14887  00391A  EF8F  F01C         	goto	u6241
 14888  00391E                     u6241:
 14889  00391E  FFFF               	dw	65535	; assembler added errata NOP
 14890  003920  EFAE  F01C         	goto	l1049
 14891  003924                     u6240:
 14892  003924  FFFF               	dw	65535	; assembler added errata NOP
 14893  003926  C01F  F023         	movff	___xxtofl@val,??___xxtofl
 14894  00392A  C020  F024         	movff	___xxtofl@val+1,??___xxtofl+1
 14895  00392E  C021  F025         	movff	___xxtofl@val+2,??___xxtofl+2
 14896  003932  C022  F026         	movff	___xxtofl@val+3,??___xxtofl+3
 14897  003936  1E23               	comf	??___xxtofl^0,f,c
 14898  003938  1E24               	comf	(??___xxtofl+1)^0,f,c
 14899  00393A  1E25               	comf	(??___xxtofl+2)^0,f,c
 14900  00393C  1E26               	comf	(??___xxtofl+3)^0,f,c
 14901  00393E  2A23               	incf	??___xxtofl^0,f,c
 14902  003940  0E00               	movlw	0
 14903  003942  2224               	addwfc	(??___xxtofl+1)^0,f,c
 14904  003944  2225               	addwfc	(??___xxtofl+2)^0,f,c
 14905  003946  2226               	addwfc	(??___xxtofl+3)^0,f,c
 14906  003948  C023  F029         	movff	??___xxtofl,___xxtofl@arg
 14907  00394C  C024  F02A         	movff	??___xxtofl+1,___xxtofl@arg+1
 14908  003950  C025  F02B         	movff	??___xxtofl+2,___xxtofl@arg+2
 14909  003954  C026  F02C         	movff	??___xxtofl+3,___xxtofl@arg+3
 14910  003958  EFB7  F01C         	goto	l5056
 14911  00395C                     l1049:
 14912  00395C  FFFF               	dw	65535	; assembler added errata NOP
 14913  00395E  C01F  F029         	movff	___xxtofl@val,___xxtofl@arg
 14914  003962  C020  F02A         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14915  003966  C021  F02B         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14916  00396A  C022  F02C         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14917  00396E                     l5056:
 14918  00396E  FFFF               	dw	65535	; assembler added errata NOP
 14919  003970  501F               	movf	___xxtofl@val^0,w,c
 14920  003972  1020               	iorwf	(___xxtofl@val+1)^0,w,c
 14921  003974  1021               	iorwf	(___xxtofl@val+2)^0,w,c
 14922  003976  1022               	iorwf	(___xxtofl@val+3)^0,w,c
 14923  003978  A4D8               	btfss	status,2,c
 14924  00397A  EFC1  F01C         	goto	u6251
 14925  00397E  EFC4  F01C         	goto	u6250
 14926  003982                     u6251:
 14927  003982  FFFF               	dw	65535	; assembler added errata NOP
 14928  003984  EFCF  F01C         	goto	l5062
 14929  003988                     u6250:
 14930  003988  FFFF               	dw	65535	; assembler added errata NOP
 14931  00398A  0E00               	movlw	0
 14932  00398C  6E1F               	movwf	?___xxtofl^0,c
 14933  00398E  0E00               	movlw	0
 14934  003990  6E20               	movwf	(?___xxtofl+1)^0,c
 14935  003992  0E00               	movlw	0
 14936  003994  6E21               	movwf	(?___xxtofl+2)^0,c
 14937  003996  0E00               	movlw	0
 14938  003998  6E22               	movwf	(?___xxtofl+3)^0,c
 14939  00399A  EF77  F01D         	goto	l1052
 14940  00399E                     l5062:
 14941  00399E  FFFF               	dw	65535	; assembler added errata NOP
 14942  0039A0  0E96               	movlw	150
 14943  0039A2  6E28               	movwf	___xxtofl@exp^0,c
 14944  0039A4  EFDB  F01C         	goto	l5066
 14945  0039A8                     l5064:
 14946  0039A8  FFFF               	dw	65535	; assembler added errata NOP
 14947  0039AA  2A28               	incf	___xxtofl@exp^0,f,c
 14948  0039AC  90D8               	bcf	status,0,c
 14949  0039AE  322C               	rrcf	(___xxtofl@arg+3)^0,f,c
 14950  0039B0  322B               	rrcf	(___xxtofl@arg+2)^0,f,c
 14951  0039B2  322A               	rrcf	(___xxtofl@arg+1)^0,f,c
 14952  0039B4  3229               	rrcf	___xxtofl@arg^0,f,c
 14953  0039B6                     l5066:
 14954  0039B6  FFFF               	dw	65535	; assembler added errata NOP
 14955  0039B8  0E00               	movlw	0
 14956  0039BA  1429               	andwf	___xxtofl@arg^0,w,c
 14957  0039BC  6E23               	movwf	??___xxtofl^0,c
 14958  0039BE  0E00               	movlw	0
 14959  0039C0  142A               	andwf	(___xxtofl@arg+1)^0,w,c
 14960  0039C2  6E24               	movwf	(??___xxtofl+1)^0,c
 14961  0039C4  0E00               	movlw	0
 14962  0039C6  142B               	andwf	(___xxtofl@arg+2)^0,w,c
 14963  0039C8  6E25               	movwf	(??___xxtofl+2)^0,c
 14964  0039CA  0EFE               	movlw	254
 14965  0039CC  142C               	andwf	(___xxtofl@arg+3)^0,w,c
 14966  0039CE  6E26               	movwf	(??___xxtofl+3)^0,c
 14967  0039D0  5023               	movf	??___xxtofl^0,w,c
 14968  0039D2  1024               	iorwf	(??___xxtofl+1)^0,w,c
 14969  0039D4  1025               	iorwf	(??___xxtofl+2)^0,w,c
 14970  0039D6  1026               	iorwf	(??___xxtofl+3)^0,w,c
 14971  0039D8  A4D8               	btfss	status,2,c
 14972  0039DA  EFF1  F01C         	goto	u6261
 14973  0039DE  EFF4  F01C         	goto	u6260
 14974  0039E2                     u6261:
 14975  0039E2  FFFF               	dw	65535	; assembler added errata NOP
 14976  0039E4  EFD4  F01C         	goto	l5064
 14977  0039E8                     u6260:
 14978  0039E8  FFFF               	dw	65535	; assembler added errata NOP
 14979  0039EA  EF04  F01D         	goto	l1056
 14980  0039EE                     l5068:
 14981  0039EE  FFFF               	dw	65535	; assembler added errata NOP
 14982  0039F0  2A28               	incf	___xxtofl@exp^0,f,c
 14983  0039F2  0E01               	movlw	1
 14984  0039F4  2629               	addwf	___xxtofl@arg^0,f,c
 14985  0039F6  0E00               	movlw	0
 14986  0039F8  222A               	addwfc	(___xxtofl@arg+1)^0,f,c
 14987  0039FA  222B               	addwfc	(___xxtofl@arg+2)^0,f,c
 14988  0039FC  222C               	addwfc	(___xxtofl@arg+3)^0,f,c
 14989  0039FE  90D8               	bcf	status,0,c
 14990  003A00  322C               	rrcf	(___xxtofl@arg+3)^0,f,c
 14991  003A02  322B               	rrcf	(___xxtofl@arg+2)^0,f,c
 14992  003A04  322A               	rrcf	(___xxtofl@arg+1)^0,f,c
 14993  003A06  3229               	rrcf	___xxtofl@arg^0,f,c
 14994  003A08                     l1056:
 14995  003A08  FFFF               	dw	65535	; assembler added errata NOP
 14996  003A0A  0E00               	movlw	0
 14997  003A0C  1429               	andwf	___xxtofl@arg^0,w,c
 14998  003A0E  6E23               	movwf	??___xxtofl^0,c
 14999  003A10  0E00               	movlw	0
 15000  003A12  142A               	andwf	(___xxtofl@arg+1)^0,w,c
 15001  003A14  6E24               	movwf	(??___xxtofl+1)^0,c
 15002  003A16  0E00               	movlw	0
 15003  003A18  142B               	andwf	(___xxtofl@arg+2)^0,w,c
 15004  003A1A  6E25               	movwf	(??___xxtofl+2)^0,c
 15005  003A1C  0EFF               	movlw	255
 15006  003A1E  142C               	andwf	(___xxtofl@arg+3)^0,w,c
 15007  003A20  6E26               	movwf	(??___xxtofl+3)^0,c
 15008  003A22  5023               	movf	??___xxtofl^0,w,c
 15009  003A24  1024               	iorwf	(??___xxtofl+1)^0,w,c
 15010  003A26  1025               	iorwf	(??___xxtofl+2)^0,w,c
 15011  003A28  1026               	iorwf	(??___xxtofl+3)^0,w,c
 15012  003A2A  A4D8               	btfss	status,2,c
 15013  003A2C  EF1A  F01D         	goto	u6271
 15014  003A30  EF1D  F01D         	goto	u6270
 15015  003A34                     u6271:
 15016  003A34  FFFF               	dw	65535	; assembler added errata NOP
 15017  003A36  EFF7  F01C         	goto	l5068
 15018  003A3A                     u6270:
 15019  003A3A  FFFF               	dw	65535	; assembler added errata NOP
 15020  003A3C  EF27  F01D         	goto	l5076
 15021  003A40                     l5074:
 15022  003A40  FFFF               	dw	65535	; assembler added errata NOP
 15023  003A42  0628               	decf	___xxtofl@exp^0,f,c
 15024  003A44  90D8               	bcf	status,0,c
 15025  003A46  3629               	rlcf	___xxtofl@arg^0,f,c
 15026  003A48  362A               	rlcf	(___xxtofl@arg+1)^0,f,c
 15027  003A4A  362B               	rlcf	(___xxtofl@arg+2)^0,f,c
 15028  003A4C  362C               	rlcf	(___xxtofl@arg+3)^0,f,c
 15029  003A4E                     l5076:
 15030  003A4E  FFFF               	dw	65535	; assembler added errata NOP
 15031  003A50  BE2B               	btfsc	(___xxtofl@arg+2)^0,7,c
 15032  003A52  EF2D  F01D         	goto	u6281
 15033  003A56  EF30  F01D         	goto	u6280
 15034  003A5A                     u6281:
 15035  003A5A  FFFF               	dw	65535	; assembler added errata NOP
 15036  003A5C  EF3A  F01D         	goto	l1063
 15037  003A60                     u6280:
 15038  003A60  FFFF               	dw	65535	; assembler added errata NOP
 15039  003A62  0E02               	movlw	2
 15040  003A64  6028               	cpfslt	___xxtofl@exp^0,c
 15041  003A66  EF37  F01D         	goto	u6291
 15042  003A6A  EF3A  F01D         	goto	u6290
 15043  003A6E                     u6291:
 15044  003A6E  FFFF               	dw	65535	; assembler added errata NOP
 15045  003A70  EF20  F01D         	goto	l5074
 15046  003A74                     u6290:
 15047  003A74                     l1063:
 15048  003A74  FFFF               	dw	65535	; assembler added errata NOP
 15049  003A76  B028               	btfsc	___xxtofl@exp^0,0,c
 15050  003A78  EF40  F01D         	goto	u6301
 15051  003A7C  EF43  F01D         	goto	u6300
 15052  003A80                     u6301:
 15053  003A80  FFFF               	dw	65535	; assembler added errata NOP
 15054  003A82  EF45  F01D         	goto	l5082
 15055  003A86                     u6300:
 15056  003A86  FFFF               	dw	65535	; assembler added errata NOP
 15057  003A88  9E2B               	bcf	(___xxtofl@arg+2)^0,7,c
 15058  003A8A                     l5082:
 15059  003A8A  FFFF               	dw	65535	; assembler added errata NOP
 15060  003A8C  90D8               	bcf	status,0,c
 15061  003A8E  3228               	rrcf	___xxtofl@exp^0,f,c
 15062  003A90  C028  F023         	movff	___xxtofl@exp,??___xxtofl
 15063  003A94  6A24               	clrf	(??___xxtofl+1)^0,c
 15064  003A96  6A25               	clrf	(??___xxtofl+2)^0,c
 15065  003A98  6A26               	clrf	(??___xxtofl+3)^0,c
 15066  003A9A  C023  F026         	movff	??___xxtofl,??___xxtofl+3
 15067  003A9E  6A25               	clrf	(??___xxtofl+2)^0,c
 15068  003AA0  6A24               	clrf	(??___xxtofl+1)^0,c
 15069  003AA2  6A23               	clrf	??___xxtofl^0,c
 15070  003AA4  5023               	movf	??___xxtofl^0,w,c
 15071  003AA6  1229               	iorwf	___xxtofl@arg^0,f,c
 15072  003AA8  5024               	movf	(??___xxtofl+1)^0,w,c
 15073  003AAA  122A               	iorwf	(___xxtofl@arg+1)^0,f,c
 15074  003AAC  5025               	movf	(??___xxtofl+2)^0,w,c
 15075  003AAE  122B               	iorwf	(___xxtofl@arg+2)^0,f,c
 15076  003AB0  5026               	movf	(??___xxtofl+3)^0,w,c
 15077  003AB2  122C               	iorwf	(___xxtofl@arg+3)^0,f,c
 15078  003AB4  5027               	movf	___xxtofl@sign^0,w,c
 15079  003AB6  B4D8               	btfsc	status,2,c
 15080  003AB8  EF60  F01D         	goto	u6311
 15081  003ABC  EF63  F01D         	goto	u6310
 15082  003AC0                     u6311:
 15083  003AC0  FFFF               	dw	65535	; assembler added errata NOP
 15084  003AC2  EF6E  F01D         	goto	l5092
 15085  003AC6                     u6310:
 15086  003AC6  FFFF               	dw	65535	; assembler added errata NOP
 15087  003AC8  BE22               	btfsc	(___xxtofl@val+3)^0,7,c
 15088  003ACA  EF6C  F01D         	goto	u6320
 15089  003ACE  EF69  F01D         	goto	u6321
 15090  003AD2                     u6321:
 15091  003AD2  FFFF               	dw	65535	; assembler added errata NOP
 15092  003AD4  EF6E  F01D         	goto	l5092
 15093  003AD8                     u6320:
 15094  003AD8  FFFF               	dw	65535	; assembler added errata NOP
 15095  003ADA  8E2C               	bsf	(___xxtofl@arg+3)^0,7,c
 15096  003ADC                     l5092:
 15097  003ADC  FFFF               	dw	65535	; assembler added errata NOP
 15098  003ADE  C029  F01F         	movff	___xxtofl@arg,?___xxtofl
 15099  003AE2  C02A  F020         	movff	___xxtofl@arg+1,?___xxtofl+1
 15100  003AE6  C02B  F021         	movff	___xxtofl@arg+2,?___xxtofl+2
 15101  003AEA  C02C  F022         	movff	___xxtofl@arg+3,?___xxtofl+3
 15102  003AEE                     l1052:
 15103  003AEE  FFFF               	dw	65535	; assembler added errata NOP
 15104  003AF0  0012               	return		;funcret
 15105  003AF2  FFFF               	dw	65535	; errata NOP
 15106  003AF4                     __end_of___xxtofl:
 15107                           	callstack 0
 15108                           
 15109 ;; *************** function ___flge *****************
 15110 ;; Defined at:
 15111 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 15112 ;; Parameters:    Size  Location     Type
 15113 ;;  ff1             4    0[COMRAM] unsigned char 
 15114 ;;  ff2             4    4[COMRAM] unsigned char 
 15115 ;; Auto vars:     Size  Location     Type
 15116 ;;		None
 15117 ;; Return value:  Size  Location     Type
 15118 ;;		None               void
 15119 ;; Registers used:
 15120 ;;		wreg, status,2, status,0
 15121 ;; Tracked objects:
 15122 ;;		On entry : 0/0
 15123 ;;		On exit  : 0/0
 15124 ;;		Unchanged: 0/0
 15125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15126 ;;      Params:         8       0       0       0       0       0       0
 15127 ;;      Locals:         0       0       0       0       0       0       0
 15128 ;;      Temps:          4       0       0       0       0       0       0
 15129 ;;      Totals:        12       0       0       0       0       0       0
 15130 ;;Total ram usage:       12 bytes
 15131 ;; Hardware stack levels used:    1
 15132 ;; Hardware stack levels required when called:    1
 15133 ;; This function calls:
 15134 ;;		Nothing
 15135 ;; This function is called by:
 15136 ;;		_check_temperature
 15137 ;;		_roundf
 15138 ;; This function uses a non-reentrant model
 15139 ;;
 15140                           
 15141                           	psect	text62
 15142  0077D6                     __ptext62:
 15143                           	callstack 0
 15144  0077D6                     ___flge:
 15145                           	callstack 0
 15146  0077D6  FFFF               	dw	65535	; assembler added errata NOP
 15147  0077D8  0E00               	movlw	0
 15148  0077DA  1401               	andwf	___flge@ff1^0,w,c
 15149  0077DC  6E09               	movwf	??___flge^0,c
 15150  0077DE  0E00               	movlw	0
 15151  0077E0  1402               	andwf	(___flge@ff1+1)^0,w,c
 15152  0077E2  6E0A               	movwf	(??___flge+1)^0,c
 15153  0077E4  0E80               	movlw	128
 15154  0077E6  1403               	andwf	(___flge@ff1+2)^0,w,c
 15155  0077E8  6E0B               	movwf	(??___flge+2)^0,c
 15156  0077EA  0E7F               	movlw	127
 15157  0077EC  1404               	andwf	(___flge@ff1+3)^0,w,c
 15158  0077EE  6E0C               	movwf	(??___flge+3)^0,c
 15159  0077F0  5009               	movf	??___flge^0,w,c
 15160  0077F2  100A               	iorwf	(??___flge+1)^0,w,c
 15161  0077F4  100B               	iorwf	(??___flge+2)^0,w,c
 15162  0077F6  100C               	iorwf	(??___flge+3)^0,w,c
 15163  0077F8  A4D8               	btfss	status,2,c
 15164  0077FA  EF01  F03C         	goto	u6101
 15165  0077FE  EF04  F03C         	goto	u6100
 15166  007802                     u6101:
 15167  007802  FFFF               	dw	65535	; assembler added errata NOP
 15168  007804  EF0D  F03C         	goto	l4980
 15169  007808                     u6100:
 15170  007808  FFFF               	dw	65535	; assembler added errata NOP
 15171  00780A  0E00               	movlw	0
 15172  00780C  6E01               	movwf	___flge@ff1^0,c
 15173  00780E  0E00               	movlw	0
 15174  007810  6E02               	movwf	(___flge@ff1+1)^0,c
 15175  007812  0E00               	movlw	0
 15176  007814  6E03               	movwf	(___flge@ff1+2)^0,c
 15177  007816  0E00               	movlw	0
 15178  007818  6E04               	movwf	(___flge@ff1+3)^0,c
 15179  00781A                     l4980:
 15180  00781A  FFFF               	dw	65535	; assembler added errata NOP
 15181  00781C  0E00               	movlw	0
 15182  00781E  1405               	andwf	___flge@ff2^0,w,c
 15183  007820  6E09               	movwf	??___flge^0,c
 15184  007822  0E00               	movlw	0
 15185  007824  1406               	andwf	(___flge@ff2+1)^0,w,c
 15186  007826  6E0A               	movwf	(??___flge+1)^0,c
 15187  007828  0E80               	movlw	128
 15188  00782A  1407               	andwf	(___flge@ff2+2)^0,w,c
 15189  00782C  6E0B               	movwf	(??___flge+2)^0,c
 15190  00782E  0E7F               	movlw	127
 15191  007830  1408               	andwf	(___flge@ff2+3)^0,w,c
 15192  007832  6E0C               	movwf	(??___flge+3)^0,c
 15193  007834  5009               	movf	??___flge^0,w,c
 15194  007836  100A               	iorwf	(??___flge+1)^0,w,c
 15195  007838  100B               	iorwf	(??___flge+2)^0,w,c
 15196  00783A  100C               	iorwf	(??___flge+3)^0,w,c
 15197  00783C  A4D8               	btfss	status,2,c
 15198  00783E  EF23  F03C         	goto	u6111
 15199  007842  EF26  F03C         	goto	u6110
 15200  007846                     u6111:
 15201  007846  FFFF               	dw	65535	; assembler added errata NOP
 15202  007848  EF2F  F03C         	goto	l4984
 15203  00784C                     u6110:
 15204  00784C  FFFF               	dw	65535	; assembler added errata NOP
 15205  00784E  0E00               	movlw	0
 15206  007850  6E05               	movwf	___flge@ff2^0,c
 15207  007852  0E00               	movlw	0
 15208  007854  6E06               	movwf	(___flge@ff2+1)^0,c
 15209  007856  0E00               	movlw	0
 15210  007858  6E07               	movwf	(___flge@ff2+2)^0,c
 15211  00785A  0E00               	movlw	0
 15212  00785C  6E08               	movwf	(___flge@ff2+3)^0,c
 15213  00785E                     l4984:
 15214  00785E  FFFF               	dw	65535	; assembler added errata NOP
 15215  007860  AE04               	btfss	(___flge@ff1+3)^0,7,c
 15216  007862  EF35  F03C         	goto	u6121
 15217  007866  EF38  F03C         	goto	u6120
 15218  00786A                     u6121:
 15219  00786A  FFFF               	dw	65535	; assembler added errata NOP
 15220  00786C  EF42  F03C         	goto	l4988
 15221  007870                     u6120:
 15222  007870  FFFF               	dw	65535	; assembler added errata NOP
 15223  007872  6C01               	negf	___flge@ff1^0,c
 15224  007874  1E02               	comf	(___flge@ff1+1)^0,f,c
 15225  007876  B0D8               	btfsc	status,0,c
 15226  007878  2A02               	incf	(___flge@ff1+1)^0,f,c
 15227  00787A  1E03               	comf	(___flge@ff1+2)^0,f,c
 15228  00787C  B0D8               	btfsc	status,0,c
 15229  00787E  2A03               	incf	(___flge@ff1+2)^0,f,c
 15230  007880  0E80               	movlw	128
 15231  007882  5604               	subfwb	(___flge@ff1+3)^0,f,c
 15232  007884                     l4988:
 15233  007884  FFFF               	dw	65535	; assembler added errata NOP
 15234  007886  AE08               	btfss	(___flge@ff2+3)^0,7,c
 15235  007888  EF48  F03C         	goto	u6131
 15236  00788C  EF4B  F03C         	goto	u6130
 15237  007890                     u6131:
 15238  007890  FFFF               	dw	65535	; assembler added errata NOP
 15239  007892  EF55  F03C         	goto	l659
 15240  007896                     u6130:
 15241  007896  FFFF               	dw	65535	; assembler added errata NOP
 15242  007898  6C05               	negf	___flge@ff2^0,c
 15243  00789A  1E06               	comf	(___flge@ff2+1)^0,f,c
 15244  00789C  B0D8               	btfsc	status,0,c
 15245  00789E  2A06               	incf	(___flge@ff2+1)^0,f,c
 15246  0078A0  1E07               	comf	(___flge@ff2+2)^0,f,c
 15247  0078A2  B0D8               	btfsc	status,0,c
 15248  0078A4  2A07               	incf	(___flge@ff2+2)^0,f,c
 15249  0078A6  0E80               	movlw	128
 15250  0078A8  5608               	subfwb	(___flge@ff2+3)^0,f,c
 15251  0078AA                     l659:
 15252  0078AA  FFFF               	dw	65535	; assembler added errata NOP
 15253  0078AC  0E00               	movlw	0
 15254  0078AE  1A01               	xorwf	___flge@ff1^0,f,c
 15255  0078B0  0E00               	movlw	0
 15256  0078B2  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 15257  0078B4  0E00               	movlw	0
 15258  0078B6  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 15259  0078B8  0E80               	movlw	128
 15260  0078BA  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 15261  0078BC  0E00               	movlw	0
 15262  0078BE  1A05               	xorwf	___flge@ff2^0,f,c
 15263  0078C0  0E00               	movlw	0
 15264  0078C2  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 15265  0078C4  0E00               	movlw	0
 15266  0078C6  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 15267  0078C8  0E80               	movlw	128
 15268  0078CA  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 15269  0078CC  5005               	movf	___flge@ff2^0,w,c
 15270  0078CE  5C01               	subwf	___flge@ff1^0,w,c
 15271  0078D0  5006               	movf	(___flge@ff2+1)^0,w,c
 15272  0078D2  5802               	subwfb	(___flge@ff1+1)^0,w,c
 15273  0078D4  5007               	movf	(___flge@ff2+2)^0,w,c
 15274  0078D6  5803               	subwfb	(___flge@ff1+2)^0,w,c
 15275  0078D8  5008               	movf	(___flge@ff2+3)^0,w,c
 15276  0078DA  5804               	subwfb	(___flge@ff1+3)^0,w,c
 15277  0078DC  B0D8               	btfsc	status,0,c
 15278  0078DE  EF73  F03C         	goto	u6141
 15279  0078E2  EF76  F03C         	goto	u6140
 15280  0078E6                     u6141:
 15281  0078E6  FFFF               	dw	65535	; assembler added errata NOP
 15282  0078E8  EF7A  F03C         	goto	l4994
 15283  0078EC                     u6140:
 15284  0078EC  FFFF               	dw	65535	; assembler added errata NOP
 15285  0078EE  90D8               	bcf	status,0,c
 15286  0078F0  EF7C  F03C         	goto	l664
 15287  0078F4                     l4994:
 15288  0078F4  FFFF               	dw	65535	; assembler added errata NOP
 15289  0078F6  80D8               	bsf	status,0,c
 15290  0078F8                     l664:
 15291  0078F8  FFFF               	dw	65535	; assembler added errata NOP
 15292  0078FA  0012               	return		;funcret
 15293  0078FC  FFFF               	dw	65535	; errata NOP
 15294  0078FE                     __end_of___flge:
 15295                           	callstack 0
 15296                           
 15297 ;; *************** function ___awdiv *****************
 15298 ;; Defined at:
 15299 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
 15300 ;; Parameters:    Size  Location     Type
 15301 ;;  dividend        2   22[COMRAM] int 
 15302 ;;  divisor         2   24[COMRAM] int 
 15303 ;; Auto vars:     Size  Location     Type
 15304 ;;  quotient        2   28[COMRAM] int 
 15305 ;;  sign            1   27[COMRAM] unsigned char 
 15306 ;;  counter         1   26[COMRAM] unsigned char 
 15307 ;; Return value:  Size  Location     Type
 15308 ;;                  2   22[COMRAM] int 
 15309 ;; Registers used:
 15310 ;;		wreg, status,2, status,0
 15311 ;; Tracked objects:
 15312 ;;		On entry : 0/0
 15313 ;;		On exit  : 0/0
 15314 ;;		Unchanged: 0/0
 15315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15316 ;;      Params:         4       0       0       0       0       0       0
 15317 ;;      Locals:         4       0       0       0       0       0       0
 15318 ;;      Temps:          0       0       0       0       0       0       0
 15319 ;;      Totals:         8       0       0       0       0       0       0
 15320 ;;Total ram usage:        8 bytes
 15321 ;; Hardware stack levels used:    1
 15322 ;; Hardware stack levels required when called:    1
 15323 ;; This function calls:
 15324 ;;		Nothing
 15325 ;; This function is called by:
 15326 ;;		_check_temperature
 15327 ;; This function uses a non-reentrant model
 15328 ;;
 15329                           
 15330                           	psect	text63
 15331  0074D4                     __ptext63:
 15332                           	callstack 0
 15333  0074D4                     ___awdiv:
 15334                           	callstack 0
 15335  0074D4  FFFF               	dw	65535	; assembler added errata NOP
 15336  0074D6  0E00               	movlw	0
 15337  0074D8  6E1C               	movwf	___awdiv@sign^0,c
 15338  0074DA  BE1A               	btfsc	(___awdiv@divisor+1)^0,7,c
 15339  0074DC  EF75  F03A         	goto	u6480
 15340  0074E0  EF72  F03A         	goto	u6481
 15341  0074E4                     u6481:
 15342  0074E4  FFFF               	dw	65535	; assembler added errata NOP
 15343  0074E6  EF7C  F03A         	goto	l5212
 15344  0074EA                     u6480:
 15345  0074EA  FFFF               	dw	65535	; assembler added errata NOP
 15346  0074EC  6C19               	negf	___awdiv@divisor^0,c
 15347  0074EE  1E1A               	comf	(___awdiv@divisor+1)^0,f,c
 15348  0074F0  B0D8               	btfsc	status,0,c
 15349  0074F2  2A1A               	incf	(___awdiv@divisor+1)^0,f,c
 15350  0074F4  0E01               	movlw	1
 15351  0074F6  6E1C               	movwf	___awdiv@sign^0,c
 15352  0074F8                     l5212:
 15353  0074F8  FFFF               	dw	65535	; assembler added errata NOP
 15354  0074FA  BE18               	btfsc	(___awdiv@dividend+1)^0,7,c
 15355  0074FC  EF85  F03A         	goto	u6490
 15356  007500  EF82  F03A         	goto	u6491
 15357  007504                     u6491:
 15358  007504  FFFF               	dw	65535	; assembler added errata NOP
 15359  007506  EF8C  F03A         	goto	l5218
 15360  00750A                     u6490:
 15361  00750A  FFFF               	dw	65535	; assembler added errata NOP
 15362  00750C  6C17               	negf	___awdiv@dividend^0,c
 15363  00750E  1E18               	comf	(___awdiv@dividend+1)^0,f,c
 15364  007510  B0D8               	btfsc	status,0,c
 15365  007512  2A18               	incf	(___awdiv@dividend+1)^0,f,c
 15366  007514  0E01               	movlw	1
 15367  007516  1A1C               	xorwf	___awdiv@sign^0,f,c
 15368  007518                     l5218:
 15369  007518  FFFF               	dw	65535	; assembler added errata NOP
 15370  00751A  0E00               	movlw	0
 15371  00751C  6E1E               	movwf	(___awdiv@quotient+1)^0,c
 15372  00751E  0E00               	movlw	0
 15373  007520  6E1D               	movwf	___awdiv@quotient^0,c
 15374  007522  5019               	movf	___awdiv@divisor^0,w,c
 15375  007524  101A               	iorwf	(___awdiv@divisor+1)^0,w,c
 15376  007526  B4D8               	btfsc	status,2,c
 15377  007528  EF98  F03A         	goto	u6501
 15378  00752C  EF9B  F03A         	goto	u6500
 15379  007530                     u6501:
 15380  007530  FFFF               	dw	65535	; assembler added errata NOP
 15381  007532  EFCC  F03A         	goto	l5240
 15382  007536                     u6500:
 15383  007536  FFFF               	dw	65535	; assembler added errata NOP
 15384  007538  0E01               	movlw	1
 15385  00753A  6E1B               	movwf	___awdiv@counter^0,c
 15386  00753C  EFA5  F03A         	goto	l5226
 15387  007540                     l5224:
 15388  007540  FFFF               	dw	65535	; assembler added errata NOP
 15389  007542  90D8               	bcf	status,0,c
 15390  007544  3619               	rlcf	___awdiv@divisor^0,f,c
 15391  007546  361A               	rlcf	(___awdiv@divisor+1)^0,f,c
 15392  007548  2A1B               	incf	___awdiv@counter^0,f,c
 15393  00754A                     l5226:
 15394  00754A  FFFF               	dw	65535	; assembler added errata NOP
 15395  00754C  AE1A               	btfss	(___awdiv@divisor+1)^0,7,c
 15396  00754E  EFAB  F03A         	goto	u6511
 15397  007552  EFAE  F03A         	goto	u6510
 15398  007556                     u6511:
 15399  007556  FFFF               	dw	65535	; assembler added errata NOP
 15400  007558  EFA0  F03A         	goto	l5224
 15401  00755C                     u6510:
 15402  00755C  FFFF               	dw	65535	; assembler added errata NOP
 15403  00755E                     l5228:
 15404  00755E  FFFF               	dw	65535	; assembler added errata NOP
 15405  007560  90D8               	bcf	status,0,c
 15406  007562  361D               	rlcf	___awdiv@quotient^0,f,c
 15407  007564  361E               	rlcf	(___awdiv@quotient+1)^0,f,c
 15408  007566  5019               	movf	___awdiv@divisor^0,w,c
 15409  007568  5C17               	subwf	___awdiv@dividend^0,w,c
 15410  00756A  501A               	movf	(___awdiv@divisor+1)^0,w,c
 15411  00756C  5818               	subwfb	(___awdiv@dividend+1)^0,w,c
 15412  00756E  A0D8               	btfss	status,0,c
 15413  007570  EFBC  F03A         	goto	u6521
 15414  007574  EFBF  F03A         	goto	u6520
 15415  007578                     u6521:
 15416  007578  FFFF               	dw	65535	; assembler added errata NOP
 15417  00757A  EFC5  F03A         	goto	l5236
 15418  00757E                     u6520:
 15419  00757E  FFFF               	dw	65535	; assembler added errata NOP
 15420  007580  5019               	movf	___awdiv@divisor^0,w,c
 15421  007582  5E17               	subwf	___awdiv@dividend^0,f,c
 15422  007584  501A               	movf	(___awdiv@divisor+1)^0,w,c
 15423  007586  5A18               	subwfb	(___awdiv@dividend+1)^0,f,c
 15424  007588  801D               	bsf	___awdiv@quotient^0,0,c
 15425  00758A                     l5236:
 15426  00758A  FFFF               	dw	65535	; assembler added errata NOP
 15427  00758C  90D8               	bcf	status,0,c
 15428  00758E  321A               	rrcf	(___awdiv@divisor+1)^0,f,c
 15429  007590  3219               	rrcf	___awdiv@divisor^0,f,c
 15430  007592  2E1B               	decfsz	___awdiv@counter^0,f,c
 15431  007594  EFAF  F03A         	goto	l5228
 15432  007598                     l5240:
 15433  007598  FFFF               	dw	65535	; assembler added errata NOP
 15434  00759A  501C               	movf	___awdiv@sign^0,w,c
 15435  00759C  B4D8               	btfsc	status,2,c
 15436  00759E  EFD3  F03A         	goto	u6531
 15437  0075A2  EFD6  F03A         	goto	u6530
 15438  0075A6                     u6531:
 15439  0075A6  FFFF               	dw	65535	; assembler added errata NOP
 15440  0075A8  EFDB  F03A         	goto	l5244
 15441  0075AC                     u6530:
 15442  0075AC  FFFF               	dw	65535	; assembler added errata NOP
 15443  0075AE  6C1D               	negf	___awdiv@quotient^0,c
 15444  0075B0  1E1E               	comf	(___awdiv@quotient+1)^0,f,c
 15445  0075B2  B0D8               	btfsc	status,0,c
 15446  0075B4  2A1E               	incf	(___awdiv@quotient+1)^0,f,c
 15447  0075B6                     l5244:
 15448  0075B6  FFFF               	dw	65535	; assembler added errata NOP
 15449  0075B8  C01D  F017         	movff	___awdiv@quotient,?___awdiv
 15450  0075BC  C01E  F018         	movff	___awdiv@quotient+1,?___awdiv+1
 15451  0075C0  0012               	return		;funcret
 15452  0075C2  FFFF               	dw	65535	; errata NOP
 15453  0075C4                     __end_of___awdiv:
 15454                           	callstack 0
 15455                           
 15456 ;; *************** function _change_direction *****************
 15457 ;; Defined at:
 15458 ;;		line 40 in file "stepper_motor.c"
 15459 ;; Parameters:    Size  Location     Type
 15460 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 15461 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
 15462 ;; Auto vars:     Size  Location     Type
 15463 ;;		None
 15464 ;; Return value:  Size  Location     Type
 15465 ;;                  1    wreg      void 
 15466 ;; Registers used:
 15467 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15468 ;; Tracked objects:
 15469 ;;		On entry : 0/0
 15470 ;;		On exit  : 0/0
 15471 ;;		Unchanged: 0/0
 15472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15473 ;;      Params:         2       0       0       0       0       0       0
 15474 ;;      Locals:         0       0       0       0       0       0       0
 15475 ;;      Temps:          2       0       0       0       0       0       0
 15476 ;;      Totals:         4       0       0       0       0       0       0
 15477 ;;Total ram usage:        4 bytes
 15478 ;; Hardware stack levels used:    1
 15479 ;; Hardware stack levels required when called:    1
 15480 ;; This function calls:
 15481 ;;		Nothing
 15482 ;; This function is called by:
 15483 ;;		_main
 15484 ;; This function uses a non-reentrant model
 15485 ;;
 15486                           
 15487                           	psect	text64
 15488  006660                     __ptext64:
 15489                           	callstack 0
 15490  006660                     _change_direction:
 15491                           	callstack 0
 15492  006660  FFFF               	dw	65535	; assembler added errata NOP
 15493  006662                     
 15494                           ;stepper_motor.c: 41:     stepper_motor -> direction = stepper_motor -> direction*(-1);
 15495  006662  EE20 F004          	lfsr	2,4
 15496  006666  5001               	movf	change_direction@stepper_motor^0,w,c
 15497  006668  26D9               	addwf	fsr2l,f,c
 15498  00666A  5002               	movf	(change_direction@stepper_motor+1)^0,w,c
 15499  00666C  22DA               	addwfc	fsr2h,f,c
 15500  00666E  CFDE F003          	movff	postinc2,??_change_direction
 15501  006672  CFDD F004          	movff	postdec2,??_change_direction+1
 15502  006676  1E03               	comf	??_change_direction^0,f,c
 15503  006678  1E04               	comf	(??_change_direction+1)^0,f,c
 15504  00667A  4A03               	infsnz	??_change_direction^0,f,c
 15505  00667C  2A04               	incf	(??_change_direction+1)^0,f,c
 15506  00667E  EE20 F004          	lfsr	2,4
 15507  006682  5001               	movf	change_direction@stepper_motor^0,w,c
 15508  006684  26D9               	addwf	fsr2l,f,c
 15509  006686  5002               	movf	(change_direction@stepper_motor+1)^0,w,c
 15510  006688  22DA               	addwfc	fsr2h,f,c
 15511  00668A  C003  FFDE         	movff	??_change_direction,postinc2
 15512  00668E  C004  FFDD         	movff	??_change_direction+1,postdec2
 15513  006692  0012               	return		;funcret
 15514  006694  FFFF               	dw	65535	; errata NOP
 15515  006696                     __end_of_change_direction:
 15516                           	callstack 0
 15517                           
 15518 ;; *************** function _rx_char_usart *****************
 15519 ;; Defined at:
 15520 ;;		line 206 in file "main.c"
 15521 ;; Parameters:    Size  Location     Type
 15522 ;;		None
 15523 ;; Auto vars:     Size  Location     Type
 15524 ;;		None
 15525 ;; Return value:  Size  Location     Type
 15526 ;;                  1    wreg      void 
 15527 ;; Registers used:
 15528 ;;		wreg, status,2
 15529 ;; Tracked objects:
 15530 ;;		On entry : 0/0
 15531 ;;		On exit  : 0/0
 15532 ;;		Unchanged: 0/0
 15533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15534 ;;      Params:         0       0       0       0       0       0       0
 15535 ;;      Locals:         0       0       0       0       0       0       0
 15536 ;;      Temps:          0       0       0       0       0       0       0
 15537 ;;      Totals:         0       0       0       0       0       0       0
 15538 ;;Total ram usage:        0 bytes
 15539 ;; Hardware stack levels used:    1
 15540 ;; This function calls:
 15541 ;;		Nothing
 15542 ;; This function is called by:
 15543 ;;		Interrupt level 2
 15544 ;; This function uses a non-reentrant model
 15545 ;;
 15546                           
 15547                           	psect	intcode
 15548  000008                     __pintcode:
 15549                           	callstack 0
 15550  000008                     _rx_char_usart:
 15551                           	callstack 0
 15552  000008  FFFF               	dw	65535	; assembler added errata NOP
 15553                           
 15554                           ;incstack = 0
 15555  00000A  827F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15556  00000C                     
 15557                           ;main.c: 207:     if(PIE1bits.RCIE && PIR1bits.RCIF){
 15558  00000C  AA9D               	btfss	157,5,c	;volatile
 15559  00000E  EF0B  F000         	goto	i2u721_41
 15560  000012  EF0E  F000         	goto	i2u721_40
 15561  000016                     i2u721_41:
 15562  000016  FFFF               	dw	65535	; assembler added errata NOP
 15563  000018  EF1E  F000         	goto	i2l5720
 15564  00001C                     i2u721_40:
 15565  00001C  FFFF               	dw	65535	; assembler added errata NOP
 15566  00001E  AA9E               	btfss	158,5,c	;volatile
 15567  000020  EF14  F000         	goto	i2u722_41
 15568  000024  EF17  F000         	goto	i2u722_40
 15569  000028                     i2u722_41:
 15570  000028  FFFF               	dw	65535	; assembler added errata NOP
 15571  00002A  EF1E  F000         	goto	i2l5720
 15572  00002E                     i2u722_40:
 15573  00002E  FFFF               	dw	65535	; assembler added errata NOP
 15574  000030                     
 15575                           ;main.c: 208:         PIR1bits.RCIF = 0;
 15576  000030  9A9E               	bcf	158,5,c	;volatile
 15577  000032                     
 15578                           ;main.c: 209:         state_changed = 1;
 15579  000032  0E01               	movlw	1
 15580  000034  0101               	movlb	1	; () banked
 15581  000036  6FB0               	movwf	_state_changed& (0+255),b
 15582                           
 15583                           ;main.c: 210:         read_new_char = 1;
 15584  000038  0E01               	movlw	1
 15585  00003A  6FAE               	movwf	_read_new_char& (0+255),b
 15586  00003C                     i2l5720:
 15587  00003C  FFFF               	dw	65535	; assembler added errata NOP
 15588                           
 15589                           ;main.c: 212:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF){
 15590  00003E  AAF2               	btfss	242,5,c	;volatile
 15591  000040  EF24  F000         	goto	i2u723_41
 15592  000044  EF27  F000         	goto	i2u723_40
 15593  000048                     i2u723_41:
 15594  000048  FFFF               	dw	65535	; assembler added errata NOP
 15595  00004A  EF37  F000         	goto	i2l190
 15596  00004E                     i2u723_40:
 15597  00004E  FFFF               	dw	65535	; assembler added errata NOP
 15598  000050  A4F2               	btfss	242,2,c	;volatile
 15599  000052  EF2D  F000         	goto	i2u724_41
 15600  000056  EF30  F000         	goto	i2u724_40
 15601  00005A                     i2u724_41:
 15602  00005A  FFFF               	dw	65535	; assembler added errata NOP
 15603  00005C  EF37  F000         	goto	i2l190
 15604  000060                     i2u724_40:
 15605  000060  FFFF               	dw	65535	; assembler added errata NOP
 15606  000062                     
 15607                           ;main.c: 213:         T0CON = 0;
 15608  000062  0E00               	movlw	0
 15609  000064  6ED5               	movwf	213,c	;volatile
 15610  000066                     
 15611                           ;main.c: 214:         INTCONbits.TMR0IF = 0;
 15612  000066  94F2               	bcf	242,2,c	;volatile
 15613                           
 15614                           ;main.c: 215:         timer_done = 1;
 15615  000068  0E01               	movlw	1
 15616  00006A  0101               	movlb	1	; () banked
 15617  00006C  6FAD               	movwf	_timer_done& (0+255),b
 15618  00006E                     i2l190:
 15619  00006E  FFFF               	dw	65535	; assembler added errata NOP
 15620  000070  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15621  000072  0011               	retfie		f
 15622  000074  FFFF               	dw	65535	; errata NOP
 15623  000076                     __end_of_rx_char_usart:
 15624                           	callstack 0
 15625                           
 15626                           	psect	rparam
 15627  0000                     
 15628                           	psect	temp
 15629  00007F                     btemp:
 15630                           	callstack 0
 15631  00007F                     	ds	1
 15632  0000                     int$flags	set	btemp
 15633  0000                     wtemp8	set	btemp+1
 15634  0000                     ttemp5	set	btemp+1
 15635  0000                     ttemp6	set	btemp+4
 15636  0000                     ttemp7	set	btemp+8
 15637                           
 15638                           	psect	idloc
 15639                           
 15640                           ;Config register IDLOC0 @ 0x200000
 15641                           ;	unspecified, using default values
 15642  200000                     	org	2097152
 15643  200000  FF                 	db	255
 15644                           
 15645                           ;Config register IDLOC1 @ 0x200001
 15646                           ;	unspecified, using default values
 15647  200001                     	org	2097153
 15648  200001  FF                 	db	255
 15649                           
 15650                           ;Config register IDLOC2 @ 0x200002
 15651                           ;	unspecified, using default values
 15652  200002                     	org	2097154
 15653  200002  FF                 	db	255
 15654                           
 15655                           ;Config register IDLOC3 @ 0x200003
 15656                           ;	unspecified, using default values
 15657  200003                     	org	2097155
 15658  200003  FF                 	db	255
 15659                           
 15660                           ;Config register IDLOC4 @ 0x200004
 15661                           ;	unspecified, using default values
 15662  200004                     	org	2097156
 15663  200004  FF                 	db	255
 15664                           
 15665                           ;Config register IDLOC5 @ 0x200005
 15666                           ;	unspecified, using default values
 15667  200005                     	org	2097157
 15668  200005  FF                 	db	255
 15669                           
 15670                           ;Config register IDLOC6 @ 0x200006
 15671                           ;	unspecified, using default values
 15672  200006                     	org	2097158
 15673  200006  FF                 	db	255
 15674                           
 15675                           ;Config register IDLOC7 @ 0x200007
 15676                           ;	unspecified, using default values
 15677  200007                     	org	2097159
 15678  200007  FF                 	db	255
 15679                           
 15680                           	psect	config
 15681                           
 15682                           ; Padding undefined space
 15683  300000                     	org	3145728
 15684  300000  FF                 	db	255
 15685                           
 15686                           ;Config register CONFIG1H @ 0x300001
 15687                           ;	Oscillator Selection bits
 15688                           ;	OSC = RCIO, RC oscillator w/ OSC2 configured as RA6
 15689                           ;	Oscillator System Clock Switch Enable bit
 15690                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
 15691  300001                     	org	3145729
 15692  300001  27                 	db	39
 15693                           
 15694                           ;Config register CONFIG2L @ 0x300002
 15695                           ;	Power-up Timer Enable bit
 15696                           ;	PWRT = OFF, PWRT disabled
 15697                           ;	Brown-out Reset Enable bit
 15698                           ;	BOR = ON, Brown-out Reset enabled
 15699                           ;	Brown-out Reset Voltage bits
 15700                           ;	BORV = 20, VBOR set to 2.0V
 15701  300002                     	org	3145730
 15702  300002  0F                 	db	15
 15703                           
 15704                           ;Config register CONFIG2H @ 0x300003
 15705                           ;	Watchdog Timer Enable bit
 15706                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 15707                           ;	Watchdog Timer Postscale Select bits
 15708                           ;	WDTPS = 128, 1:128
 15709  300003                     	org	3145731
 15710  300003  0E                 	db	14
 15711                           
 15712                           ; Padding undefined space
 15713  300004                     	org	3145732
 15714  300004  FF                 	db	255
 15715                           
 15716                           ;Config register CONFIG3H @ 0x300005
 15717                           ;	CCP2 Mux bit
 15718                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
 15719  300005                     	org	3145733
 15720  300005  01                 	db	1
 15721                           
 15722                           ;Config register CONFIG4L @ 0x300006
 15723                           ;	Stack Full/Underflow Reset Enable bit
 15724                           ;	STVR = ON, Stack Full/Underflow will cause RESET
 15725                           ;	Low Voltage ICSP Enable bit
 15726                           ;	LVP = ON, Low Voltage ICSP enabled
 15727                           ;	Background Debugger Enable bit
 15728                           ;	DEBUG = 0x1, unprogrammed default
 15729  300006                     	org	3145734
 15730  300006  85                 	db	133
 15731                           
 15732                           ; Padding undefined space
 15733  300007                     	org	3145735
 15734  300007  FF                 	db	255
 15735                           
 15736                           ;Config register CONFIG5L @ 0x300008
 15737                           ;	Code Protection bit
 15738                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
 15739                           ;	Code Protection bit
 15740                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
 15741                           ;	Code Protection bit
 15742                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
 15743                           ;	Code Protection bit
 15744                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
 15745  300008                     	org	3145736
 15746  300008  0F                 	db	15
 15747                           
 15748                           ;Config register CONFIG5H @ 0x300009
 15749                           ;	Boot Block Code Protection bit
 15750                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
 15751                           ;	Data EEPROM Code Protection bit
 15752                           ;	CPD = OFF, Data EEPROM not code protected
 15753  300009                     	org	3145737
 15754  300009  C0                 	db	192
 15755                           
 15756                           ;Config register CONFIG6L @ 0x30000A
 15757                           ;	Write Protection bit
 15758                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
 15759                           ;	Write Protection bit
 15760                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
 15761                           ;	Write Protection bit
 15762                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
 15763                           ;	Write Protection bit
 15764                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
 15765  30000A                     	org	3145738
 15766  30000A  0F                 	db	15
 15767                           
 15768                           ;Config register CONFIG6H @ 0x30000B
 15769                           ;	Configuration Register Write Protection bit
 15770                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
 15771                           ;	Boot Block Write Protection bit
 15772                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
 15773                           ;	Data EEPROM Write Protection bit
 15774                           ;	WRTD = OFF, Data EEPROM not write protected
 15775  30000B                     	org	3145739
 15776  30000B  E0                 	db	224
 15777                           
 15778                           ;Config register CONFIG7L @ 0x30000C
 15779                           ;	Table Read Protection bit
 15780                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
 15781                           ;	Table Read Protection bit
 15782                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
 15783                           ;	Table Read Protection bit
 15784                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
 15785                           ;	Table Read Protection bit
 15786                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
 15787  30000C                     	org	3145740
 15788  30000C  0F                 	db	15
 15789                           
 15790                           ;Config register CONFIG7H @ 0x30000D
 15791                           ;	Boot Block Table Read Protection bit
 15792                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
 15793  30000D                     	org	3145741
 15794  30000D  40                 	db	64
 15795                           tosu	equ	0xFFF
 15796                           tosh	equ	0xFFE
 15797                           tosl	equ	0xFFD
 15798                           stkptr	equ	0xFFC
 15799                           pclatu	equ	0xFFB
 15800                           pclath	equ	0xFFA
 15801                           pcl	equ	0xFF9
 15802                           tblptru	equ	0xFF8
 15803                           tblptrh	equ	0xFF7
 15804                           tblptrl	equ	0xFF6
 15805                           tablat	equ	0xFF5
 15806                           prodh	equ	0xFF4
 15807                           prodl	equ	0xFF3
 15808                           indf0	equ	0xFEF
 15809                           postinc0	equ	0xFEE
 15810                           postdec0	equ	0xFED
 15811                           preinc0	equ	0xFEC
 15812                           plusw0	equ	0xFEB
 15813                           fsr0h	equ	0xFEA
 15814                           fsr0l	equ	0xFE9
 15815                           wreg	equ	0xFE8
 15816                           indf1	equ	0xFE7
 15817                           postinc1	equ	0xFE6
 15818                           postdec1	equ	0xFE5
 15819                           preinc1	equ	0xFE4
 15820                           plusw1	equ	0xFE3
 15821                           fsr1h	equ	0xFE2
 15822                           fsr1l	equ	0xFE1
 15823                           bsr	equ	0xFE0
 15824                           indf2	equ	0xFDF
 15825                           postinc2	equ	0xFDE
 15826                           postdec2	equ	0xFDD
 15827                           preinc2	equ	0xFDC
 15828                           plusw2	equ	0xFDB
 15829                           fsr2h	equ	0xFDA
 15830                           fsr2l	equ	0xFD9
 15831                           status	equ	0xFD8

Data Sizes:
    Strings     310
    Constant    20
    Data        51
    BSS         114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    126     126
    BANK0           128     38     113
    BANK1           256    163     253
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    main$2135	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[9]), 
		 -> STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_107(CODE[3]), STR_103(CODE[3]), STR_98(CODE[3]), STR_94(CODE[3]), 
		 -> STR_89(CODE[4]), STR_85(CODE[4]), STR_80(CODE[3]), STR_75(CODE[3]), 
		 -> STR_70(CODE[4]), STR_65(CODE[3]), STR_60(CODE[3]), STR_55(CODE[4]), 
		 -> STR_50(CODE[3]), STR_45(CODE[3]), STR_40(CODE[4]), STR_35(CODE[3]), 
		 -> STR_31(CODE[3]), STR_26(CODE[3]), STR_22(CODE[3]), STR_17(CODE[4]), 
		 -> STR_13(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_107(CODE[3]), STR_103(CODE[3]), STR_98(CODE[3]), STR_94(CODE[3]), 
		 -> STR_89(CODE[4]), STR_85(CODE[4]), STR_80(CODE[3]), STR_75(CODE[3]), 
		 -> STR_70(CODE[4]), STR_65(CODE[3]), STR_60(CODE[3]), STR_55(CODE[4]), 
		 -> STR_50(CODE[3]), STR_45(CODE[3]), STR_40(CODE[4]), STR_35(CODE[3]), 
		 -> STR_31(CODE[3]), STR_26(CODE[3]), STR_22(CODE[3]), STR_17(CODE[4]), 
		 -> STR_13(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), STR_8(CODE[50]), 
		 -> STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), STR_8(CODE[50]), 
		 -> STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), 
		 -> STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), 
		 -> STR_2(CODE[64]), STR_1(CODE[49]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    S1531_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    change_direction@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    reach_goal@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    update_current_coil@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    turn_on_current_coil@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    init_stepper@hex_coil_register_values	PTR int  size(2) Largest target is 8
		 -> hex_end_effector_values(BANK1[8]), hex_joint_values(BANK1[8]), 

    init_stepper@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> joint_dilutor_stepper(BANK1[14]), end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    state_translator_micro_to_fpga@state	PTR int  size(2) Largest target is 2
		 -> state(BANK1[2]), 

    state_translator_fpga_to_micro@state	PTR int  size(2) Largest target is 2
		 -> state(BANK1[2]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), STR_9(CODE[22]), 

    main@greet_str	PTR const unsigned char [80] size(2) Largest target is 64
		 -> ?_snprintf(BANK0[2]), STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    state_msgs	PTR const unsigned char [8] size(2) Largest target is 64
		 -> STR_8(CODE[50]), STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[9]), 
		 -> STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 


Critical Paths under _main in COMRAM

    _state_translator_fpga_to_micro->_lcd_dat
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _reach_goal->_turn_on_current_coil
    _reach_goal->_update_current_coil
    _lcd_str->_lcd_dat
    _lcd_dat->_lcd_wr
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_wr
    ___fldiv->___flmul
    _init_USART->_roundf
    _roundf->___flsub
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___fltol->_roundf
    _abs->___aomod
    ___xxtofl->___awdiv
    ___awdiv->_abs

Critical Paths under _rx_char_usart in COMRAM

    None.

Critical Paths under _main in BANK0

    _wait_for_zero->_get_temperature
    _get_temperature->___fltol
    _snprintf->_vsnprintf
    _init_timer_2->___fltol
    _init_ccp1->_update_pwm_duty_ccp1
    _update_pwm_duty_ccp1->___fltol
    _init_USART->___fltol
    ___fltol->_roundf
    _check_temperature->_get_temperature

Critical Paths under _rx_char_usart in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rx_char_usart in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rx_char_usart in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rx_char_usart in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rx_char_usart in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rx_char_usart in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               164   164      0   85448
                                             37 BANK0      1     1      0
                                              0 BANK1    163   163      0
                             ___wmul
                   _change_direction
                  _check_temperature
_configure_analog_digital_conversion
                      _get_reg_value
                    _get_temperature
                         _init_PORTS
                         _init_USART
                          _init_ccp1
                    _init_interrupts
                       _init_stepper
                       _init_timer_0
                       _init_timer_2
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                         _reach_goal
                     _serial_tx_char
                           _snprintf
     _state_translator_fpga_to_micro
     _state_translator_micro_to_fpga
                      _wait_for_zero
 ---------------------------------------------------------------------------------
 (1) _wait_for_zero                                        0     0      0    3359
                    _get_temperature
 ---------------------------------------------------------------------------------
 (2) _get_temperature                                      2     0      2    3359
                                             28 BANK0      2     0      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _state_translator_micro_to_fpga                       5     3      2     168
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _state_translator_fpga_to_micro                       3     1      2     472
                                              2 COMRAM     3     1      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            12     4      8   46693
                                             10 BANK0     12     4      8
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   46319
                                            111 COMRAM    12     4      8
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   45556
                                            103 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   45095
                                             66 COMRAM    37    31      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7075
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6115
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    5013
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    5560
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6790
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2168
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1175
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _serial_tx_char                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _reach_goal                                           7     3      4    1264
                                              6 COMRAM     7     3      4
               _turn_on_current_coil
                _update_current_coil
 ---------------------------------------------------------------------------------
 (2) _update_current_coil                                  6     4      2     274
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _turn_on_current_coil                                 6     4      2     120
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              5     3      2     286
                                              2 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      44
                                              2 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_timer_2                                         4     4      0    7937
                                             28 BANK0      4     4      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _init_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_stepper                                        16     6     10    1786
                                              0 COMRAM    16     6     10
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ccp1                                            0     0      0    4602
               _update_pwm_duty_ccp1
 ---------------------------------------------------------------------------------
 (2) _update_pwm_duty_ccp1                                 9     5      4    4602
                                             28 BANK0      9     5      4
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1551
                                             69 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   11790
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   11257
                                            118 COMRAM     8     4      4
                                              0 BANK0     18    18      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3801
                                            110 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    3478
                                             94 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2352
                                             44 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     533
                                             18 BANK0     10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_reg_value                                        1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configure_analog_digital_conversion                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_temperature                                    6     4      2    2077
                                             30 BANK0      6     4      2
                            ___awdiv
                             ___flge
                           ___xxtofl
                                _abs
                    _get_temperature (ARG)
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     218
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     474
                                             30 COMRAM    14    10      4
                            ___awdiv (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                             22 COMRAM     8     4      4
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (1) _change_direction                                     4     2      2     272
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _rx_char_usart                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _change_direction
   _check_temperature
     ___awdiv
       _abs (ARG)
         ___aomod (ARG)
     ___flge
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _abs (ARG)
         ___aomod (ARG)
     _abs
       ___aomod (ARG)
     _get_temperature (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _roundf (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                         ___aomod (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
   _configure_analog_digital_conversion
   _get_reg_value
   _get_temperature
     ___flmul
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flge
         ___flmul
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _abs (ARG)
         ___aomod (ARG)
   _init_PORTS
   _init_USART
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flge
         ___flmul
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
     _roundf
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flge
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
   _init_ccp1
     _update_pwm_duty_ccp1
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _roundf (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                         ___aomod (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
   _init_interrupts
   _init_stepper
   _init_timer_0
   _init_timer_2
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
     ___flmul
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flge
         ___flmul
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
   _lcd_cmd
     _lcd_wr
   _lcd_init
     _lcd_cmd
       _lcd_wr
   _lcd_str
     _lcd_dat
       _lcd_wr
   _reach_goal
     _turn_on_current_coil
     _update_current_coil
   _serial_tx_char
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _state_translator_fpga_to_micro
     _lcd_dat
       _lcd_wr
   _state_translator_micro_to_fpga
   _wait_for_zero
     _get_temperature
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
                 ___aomod (ARG)
             _abs (ARG)
               ___aomod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
               ___aomod (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _roundf (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
           ___flge
           ___flmul
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
                   ___aomod (ARG)
               _abs (ARG)
                 ___aomod (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                         ___aomod (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___aomod (ARG)
                   _abs (ARG)
                     ___aomod (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
             ___aomod (ARG)
         _abs (ARG)
           ___aomod (ARG)

 _rx_char_usart (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A3      FD       7       98.8%
BITBANK0            80      0       0       4        0.0%
BANK0               80     26      71       5       88.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7E      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1EC      15        0.0%
DATA                 0      0     1EC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Jun 17 00:34:54 2023

                                  ?_get_reg_value 0001                                   ??_wait_for_zero 007F  
                                    ___fldiv@aexp 005E                                      ___fldiv@bexp 005D  
                                    ___fldiv@sign 0056                                                l21 6752  
                                              l24 64B2                                                l27 64C6  
                                              l36 6492                                      ___awdiv@sign 001C  
                             ___wmul@multiplicand 0003                                               l220 6482  
                                             l311 6508                                               l151 177A  
                                             l232 65A8                                               l217 6628  
                                             l314 7068                                               l331 6ED6  
                                             l235 65D2                                               l139 1694  
                                             l324 6F9A                                               l244 6D9C  
                                             l340 7140                                               l317 652C  
                                             l229 3FFC                                               l238 6D14  
                                             l334 66CE                                               l344 6C94  
                                             l176 1B92                                               l521 7CFC  
                                             l265 3FEE                                               l274 6E26  
                                             l348 6692                                               l508 7EB0  
                                             l373 657E                                               l269 6E22  
                                             l390 721C                                               l382 6532  
                                             l376 6BB4                                               l625 75C0  
                                             l394 65FC                                               l386 6554  
                                             l379 6C1E                                               l664 78F8  
                                             l832 77B0                                               l922 1E26  
                                             l842 74AE                                               l659 78AA  
                                             l691 7A30                                               l931 2180  
                                             l923 1E10                                               l668 6710  
                                             l924 1DC6                                               l839 77D2  
                                             l849 74D0                                               l939 1F6A  
                                             l948 206E                                               l964 68A8  
                                             l949 2056                                               l981 2828  
                                             l990 293C                                               l976 2A56  
                                             l978 286E                                               l987 28C4  
                                             l989 2954                                 ??_init_interrupts 0001  
                                             _PR2 000FCB                                               _abs 68AC  
                                             _pad 7304                                               wreg 000FE8  
                                  ?_rx_char_usart 0001                                      ___flmul@aexp 003E  
                                    ___flmul@bexp 003F                                      ___flmul@sign 0039  
                                    ___flmul@temp 0044                                      ___flmul@prod 0040  
                                    ___fltol@exp1 00D3                                              l1012 2624  
                                            l1102 7B6A                                              l1015 247E  
                                            l1008 2272                                              l1200 3886  
                                            l1025 25DC                                              l1017 250E  
                                            l1018 24F6                                              l1202 38F8  
                                            l1211 3B8E                                              l1107 7B44  
                                            ?_abs 0013                                              l1052 3AEE  
                                            l1220 3C66                                              l1221 3CBA  
                                            l1230 34EE                                              l1063 3A74  
                                            l1151 73A4                                              l1056 3A08  
                                            l1072 68F2                                              l1080 2E40  
                                            l1160 6A66                                              l1240 36D2  
                                            l1232 34F8                                              l1049 395C  
                                            l1153 73E6                                              l1225 3CC4  
                                            l1209 3B84                                              l1402 6A00  
                                            l1307 145C                                              l1148 7358  
                                            PORTD 000F83                                              l1069 68E8  
                                            l1245 31BE                                              PORTE 000F84  
                                            l1166 2EFE                                              l1270 34A6  
                                            l1254 326C                                              l1094 665C  
                                            l1423 72FE                                              l1431 6944  
                                            l1191 371A                                              l1247 31C8  
                                            l1351 6BA4                                              l1440 69A0  
                                            l1168 2F08                                              l4000 3C98  
                                            l1408 67D6                                              l1352 6BAC  
                                            l1193 3724                                              l1434 6476  
                                            l1186 3176                                              l4010 3522  
                                            l4002 34AC                                              l1380 3E86  
                                            l1444 76C6                                              l4020 35B6  
                                            l4012 352A                                              l4004 34C0  
                                            l4100 347C                                              l1268 343A  
                                            l1284 0198                                              l4110 3CEA  
                                            l4030 3678                                              l4022 35BC  
                                            l4014 3532                                              l4006 34C2  
                                            l1454 6B30                                              l1383 3E90  
                                            l5000 66EE                                              l4200 1CBE  
                                            l4120 3D54                                              l4112 3D0C  
                                            l4104 3CCA                                              l4032 3696  
                                            l4016 353A                                              l4024 3620  
                                            l4008 34E2                                              l4040 3190  
                                            l1465 6818                                              l5002 66FE  
                                            l4210 1D04                                              l4202 1CCE  
                                            l1394 6794                                              l4122 3D6E  
                                            l4114 3D48                                              l4106 3CDE  
                                            l4026 3638                                              l4034 36A8  
                                            l4018 35B0                                              l4050 320E  
                                            l4042 3192                                              l1459 6B3A  
                                            l5020 7978                                              l5012 7932  
                                            l4300 1F58                                              l4220 1D28  
                                            l4212 1D16                                              l4204 1CD2  
                                            l4140 3E6A                                              l4132 3DF6  
                                            l4124 3D78                                              l4116 3D4C  
                                            l4108 3CE4                                              l4028 365A  
                                            l1388 685E                                              l4060 324E  
                                            l4052 3216                                              l4044 31B2  
                                            l5100 6B58                                              l5030 79B2  
                                            l5022 798A                                              l5014 7962  
                                            l5006 7900                                              l4310 1FBA  
                                            l4302 1F86                                              l4230 1D3C  
                                            l4222 1D2C                                              l4214 1D1A  
                                            l4206 1CDA                                              l5110 2AE4  
                                            l4126 3D82                                              l4062 325E  
                                            l4054 321E                                              l4046 31E4  
                                            l4038 317C                                              l5102 6B80  
                                            l5040 79E4                                              l5032 79BC  
                                            l5016 7964                                              l5008 791C  
                                            l4320 1FF0                                              l4312 1FCC  
                                            l4304 1F9A                                              l4240 1D50  
                                            l4232 1D40                                              l4224 1D30  
                                            l4216 1D20                                              l4208 1CEC  
                                            l5120 2BAA                                              l5112 2B2A  
                                            l5104 2A5E                                              l5200 7130  
                                            l4136 3E3E                                              l4128 3DBC  
                                            l4160 766C                                              l4152 7600  
                                            l4080 3340                                              l4072 32FE  
                                            l4056 3226                                              l4048 31EC  
                                            l5210 74F4                                              l5050 3900  
                                            l5042 79F8                                              l5018 7974  
                                            l4330 2032                                              l4322 2006  
                                            l4314 1FCE                                              l4250 1DAE  
                                            l4242 1D54                                              l4234 1D44  
                                            l4226 1D34                                              l4218 1D24  
                                            l4170 1BFE                                              l5130 2DC4  
                                            l5122 2C7E                                              l5114 2B4E  
                                            l5106 2A7E                                              l4138 3E54  
                                            l4162 769C                                              l4154 7610  
                                            l4146 75C6                                              l4090 340A  
                                            l4082 3346                                              l4074 3314  
                                            l4066 32A8                                              l4058 322E  
                                            l4410 01DA                                              l4402 0126  
                                            l5220 7522                                              l5212 74F8  
                                            l5204 74D6                                              l5052 3914  
                                            l5300 6488                                              l5044 7A0E  
                                            l5028 79A6                                              l4340 20A2  
                                            l4332 204C                                              l4316 1FE2  
                                            l4308 1FAE                                              l4324 2008  
                                            l4260 1E00                                              l4252 1DBE  
                                            l4236 1D48                                              l4228 1D38  
                                            l4244 1D58                                              l4180 1C3E  
                                            l4172 1C00                                              l5132 2E0A  
                                            l5124 2CEA                                              l5116 2B72  
                                            l5108 2AD0                                              l5140 6588  
                                            l3620 724E                                              l3700 7E6E  
                                            l4156 7634                                              l4148 75F4  
                                            l4092 3428                                              l4068 32BE  
                                            l4076 3328                                              l4084 33A8  
                                            l4420 0262                                              l4412 0210  
                                            l4404 0180                                              l5230 7566  
                                            l5222 7538                                              l5214 750C  
                                            l5206 74DA                                              l5070 39F2  
                                            l5062 399E                                              l5054 3926  
                                            l5302 648C                                              l5310 6624  
                                            l5046 7A1E                                              l5038 79D6  
                                            l4350 2130                                              l4342 20E0  
                                            l4318 1FEA                                              l4326 201A  
                                            l4262 1E02                                              l4254 1DDA  
                                            l4246 1D5E                                              l4238 1D4C  
                                            l4190 1C78                                              l4174 1C16  
                                            l4182 1C46                                              l4166 1BE0  
                                            l5134 2E2E                                              l5126 2D22  
                                            l5150 65A6                                              l5142 658E  
                                            l3622 725A                                              l3630 68FA  
                                            l3702 7E8E                                              l3710 7B88  
                                            l4158 7656                                              l4094 3450  
                                            l4086 33CA                                              l4078 333A  
                                            l4510 08EA                                              l4502 085E  
                                            l4430 02FC                                              l4414 0222  
                                            l4406 01AC                                              l5232 7580  
                                            l5224 7540                                              l5240 7598  
                                            l5216 7514                                              l5208 74EC  
                                            l5080 3A88                                              l5072 39FE  
                                            l5064 39A8                                              l5056 396E  
                                            l5312 6626                                              l4360 215A  
                                            l4352 2134                                              l4336 2084  
                                            l4344 20E2                                              l4328 2020  
                                            l4280 1EA4                                              l4272 1E62  
                                            l4264 1E0E                                              l4256 1DE6  
                                            l4248 1D8C                                              l4192 1C80  
                                            l4184 1C58                                              l4176 1C2A  
                                            l4168 1BEC                                              l5128 2D8E  
                                            l5320 6FAA                                              l5144 6590  
                                            l5160 65B2                                              l5400 6D58  
                                            l3624 727E                                              l3616 7224  
                                            l3632 6906                                              l3640 6956  
                                            l3720 7C04                                              l3712 7BA8  
                                            l4096 3456                                              l4088 33EC  
                                            l4600 0F1E                                              l4520 09A0  
                                            l4512 0916                                              l4504 089A  
                                            l4440 03A0                                              l4432 030A  
                                            l4424 02B2                                              l4416 0230  
                                            l4408 01AE                                              l5152 6BB2  
                                            l5242 75AE                                              l5234 7588  
                                            l5226 754A                                              l5218 7518  
                                            l5090 3ADA                                              l5082 3A8A  
                                            l5074 3A40                                              l5066 39B6  
                                            l5058 398A                                              l5306 6602  
                                            l4362 216C                                              l4354 2148  
                                            l4346 20F8                                              l4338 2090  
                                            l4282 1EAA                                              l4274 1E74  
                                            l4266 1E3A                                              l4290 1ED2  
                                            l4258 1DEC                                              l4194 1C92  
                                            l4186 1C60                                              l4178 1C3A  
                                            l5330 650E                                              l5322 6FAC  
                                            l5146 659A                                              l5138 6586  
                                            l5170 65D0                                              l5162 65B8  
                                            l3626 72B6                                              l3618 723A  
                                            l3634 691A                                              l3642 695C  
                                            l3730 7C8A                                              l3722 7C0C  
                                            l3714 7BAC                                              l3706 7B72  
                                            l3802 6798                                              l3810 6AD2  
                                            l4098 3466                                              l4530 0A64  
                                            l4450 0462                                              l4434 0334  
                                            l4418 0252                                              l4426 02C6  
                                            l4370 00A6                                              l5250 7A4E  
                                            l5410 3EE0                                              l5402 3E9A  
                                            l5154 6BC8                                              l5244 75B6  
                                            l5236 758A                                              l5228 755E  
                                            l5092 3ADC                                              l5084 3A90  
                                            l5076 3A4E                                              l5068 39EE  
                                            l3652 68AE                                              l5308 6622  
                                            l4364 216E                                              l4356 214E  
                                            l4348 210A                                              l4292 1EFE  
                                            l4284 1EBE                                              l4276 1E86  
                                            l4268 1E4E                                              l4196 1C94  
                                            l4188 1C76                                              l5180 6F5E  
                                            l5172 6EDC                                              l5332 6512  
                                            l5340 647C                                              l5324 6FAE  
                                            l5316 6FA0                                              l4700 3FF8  
                                            l5148 659C                                              l5164 65BA  
                                            l5500 6C52                                              l3820 6756  
                                            l3636 691E                                              l3644 6994  
                                            l3732 7C9E                                              l3724 7C22  
                                            l3716 7BC0                                              l3708 7B76  
                                            l3900 310E                                              l4620 1096  
                                            l4540 0B0A                                              l4532 0A88  
                                            l4460 053C                                              l4444 03F0  
                                            l4436 036E                                              l4428 02F2  
                                            l4380 00DC                                              l4372 00B4  
                                            l5260 7A92                                              l5252 7A58  
                                            l5420 3F4C                                              l5412 3EF4  
                                            l5404 3EA0                                              l5238 7592  
                                            l5086 3AB4                                              l5078 3A62  
                                            l3654 68CC                                              l5350 6570  
                                            l5342 655A                                              l4358 2152  
                                            l4294 1F32                                              l4286 1EC0  
                                            l4278 1E98                                              l4198 1CAA  
                                            l4710 2662                                              l4702 262C  
                                            l5182 6F62                                              l5174 6F40  
                                            l5334 6528                                              l5326 702A  
                                            l5318 6FA8                                              l5166 65C4  
                                            l5158 65B0                                              l5190 6698  
                                            l5510 6C8C                                              l5502 6C66  
                                            l3830 69F4                                              l3638 694A  
                                            l3670 7D3C                                              l3662 7D02  
                                            l3726 7C36                                              l3734 7CA4  
                                            l3718 7BE0                                              l3902 3124  
                                            l3750 771A                                              l3742 76CE  
                                            l3806 681C                                              l3814 6B0E  
                                            l4630 1156                                              l4622 10A6  
                                            l4614 0FF8                                              l4606 0F6C  
                                            l4550 0B9E                                              l4526 09F0  
                                            l4518 0964                                              l4454 047E  
                                            l4438 0390                                              l4446 0404  
                                            l4390 0104                                              l4382 00F0  
                                            l4374 00C6                                              l5270 7B02  
                                            l5262 7A9E                                              l5422 3F64  
                                            l5414 3F0C                                              l5406 3EB4  
                                            ?_pad 0011                                              l5088 3AC8  
                                            l5344 656A                                              l4296 1F34  
                                            l4288 1ECC                                              l5280 6716  
                                            l4800 28EE                                              l4720 26A4  
                                            l4712 2676                                              l4704 2638  
                                            l5184 6F76                                              l5176 6F44  
                                            l5336 652A                                              l5360 6E7A  
                                            l5352 6E2C                                              l5168 65C6  
                                            l3656 65D8                                              l3832 69F8  
                                            l3824 69A4                                              l3840 6A2A  
                                            l3680 7DA4                                              l3672 7D50  
                                            l3664 7D06                                              l3736 7CBA  
                                            l3728 7C6A                                              l3904 3130  
                                            l3920 374E                                              l3912 36D8  
                                            l3760 7796                                              l3752 772E  
                                            l3744 76DA                                              l3648 67DA  
                                            l3816 6B24                                              l4632 118E  
                                            l4624 10DC                                              l4616 1034  
                                            l4608 0FA8                                              l4560 0C44  
                                            l4528 0A2C                                              l4536 0A96  
                                            l4464 0576                                              l4456 04BA  
                                            l4448 0430                                              l4376 00CA  
                                            l4368 007C                                              l5096 6B42  
                                            l5272 7B34                                              l5264 7AB2  
                                            l5256 7A60                                              l5248 7A38  
                                            l5440 662E                                              l5432 3FC0  
                                            l5424 3F78                                              l5416 3F20  
                                            l5408 3EC8                                              l5600 1698  
                                            l5514 6662                                              l5346 656C  
                                            l4298 1F48                                              l5290 674C  
                                            l5282 6744                                              l4810 2976  
                                            l4802 2900                                              l4730 26DC  
                                            l4722 26AC                                              l4714 2686  
                                            l4706 264A                                              l5186 6F7C  
                                            l5178 6F58                                              l5362 6E7E  
                                            l5370 6C9C                                              l5194 706E  
                                            l3658 65F4                                              l3826 69AA  
                                            l3842 6A38                                              l3690 7E1C  
                                            l3682 7DAC                                              l3674 7D70  
                                            l3666 7D18                                              l3738 7CDA  
                                            l3906 313A                                              l3850 2E48  
                                            l3930 3776                                              l3922 3756  
                                            l3914 36EC                                              l3762 77AA  
                                            l3754 7742                                              l3746 76FC  
                                            l3770 742C                                              l4650 1284  
                                            l4634 11B8                                              l4642 1208  
                                            l4618 106C                                              l4570 0CEC  
                                            l4538 0AD2                                              l4546 0B3C  
                                            l4474 063A                                              l4466 05B2  
                                            l4458 04F2                                              l4394 010E  
                                            l4386 00FA                                              l4378 00D6  
                                            l5098 6B4A                                              l5274 7B4E  
                                            l5266 7AD8                                              l5258 7A84  
                                            l5442 6638                                              l5426 3F90  
                                            l5418 3F38                                              l5450 6DCA  
                                            l5610 16FE                                              l5602 16B2  
                                            l5530 1468                                              l5348 656E  
                                            l4900 2344                                              l5292 674E  
                                            l5284 6746                                              l4820 29EC  
                                            l4812 2988                                              l4804 2932  
                                            l4740 271E                                              l4732 26F0  
                                            l4724 26B2                                              l4716 268A  
                                            l4708 264C                                              l5188 6F80  
                                            l5364 6E9E                                              l5380 6CDE  
                                            l5372 6CAC                                              l5196 70FA  
                                            l5508 6C72                                              l3828 69C2  
                                            l3780 7306                                              l3844 6A3E  
                                            l3836 6A06                                              l3692 7E3C  
                                            l3684 7DC2                                              l3676 7D74  
                                            l3668 7D38                                              l3908 314C  
                                            l3860 2ED2                                              l3852 2E68  
                                            l3940 3816                                              l3932 3788  
                                            l3924 375A                                              l3916 36EE  
                                            l3756 7774                                              l3748 7704  
                                            l3772 7440                                              l3764 73EC  
                                            l4660 1338                                              l4644 1234  
                                            l4636 11C8                                              l4628 111A  
                                            l4548 0B68                                              l4556 0BD0  
                                            l4484 06DC                                              l4476 0666  
                                            l4468 05EA                                              l5268 7AEE  
                                            l5276 7B60                                              l5436 3FDC  
                                            l5428 3FA4                                              l5452 6DEA  
                                            l5700 1B5E                                              l5620 178E  
                                            l5612 170E                                              l5604 16B8  
                                            l5540 147C                                              l5532 146C  
                                            l5462 7148                                              l4910 23A6  
                                            l4902 2350                                              l5294 6750  
                                            l5286 6748                                              l4830 2A46  
                                            l4822 2A0C                                              l4814 29B2  
                                            l4742 273A                                              l4734 2700  
                                            l4726 26C4                                              l4718 2692  
                                            l5366 6EAE                                              l5358 6E34  
                                            l5390 6D08                                              l5382 6CF0  
                                            l5374 6CBE                                              l5198 710E  
                                            l3790 7366                                              l3782 731A  
                                            l3846 6A42                                              l3838 6A1E  
                                            l3694 7E3E                                              l3686 7DD6  
                                            l3678 7D82                                              l3870 2F40  
                                            l3862 2EF2                                              l3854 2E9A  
                                            l3950 38B2                                              l3942 3838  
                                            l3934 378E                                              l3926 3766  
                                            l3918 370E                                              l3758 7794  
                                            l3774 7474                                              l3766 740E  
                                            l4662 1362                                              l4670 13B2  
                                            l4646 125C                                              l4590 0E66  
                                            l4582 0DAA                                              l4574 0D28  
                                            l4558 0C0C                                              l4566 0C76  
                                            l4494 07A2                                              l4486 0718  
                                            l4478 068E                                              l4398 0118  
                                            l5454 6DF2                                              l5446 6DA2  
                                            l5710 1BD4                                              l5702 1B72  
                                            l5630 17D2                                              l5622 1792  
                                            l5614 1728                                              l5606 16D0  
                                            l5550 150A                                              l5542 14A8  
                                            l5534 1470                                              l5526 1462  
                                            l5464 71CC                                              l5472 7210  
                                            l4920 2440                                              l4912 23B2  
                                            l4904 2360                                              l4840 2188  
                                            l5288 674A                                              l4832 2A4A  
                                            l4824 2A28                                              l4808 296A  
                                            l4816 29B6                                              l4760 2796  
                                            l4744 274A                                              l4752 276C  
                                            l4736 2704                                              l4728 26C6  
                                            l5368 6EC2                                              l5480 64EC  
                                            l5392 6D0E                                              l5384 6CF6  
                                            l5376 6CC0                                              l3792 737C  
                                            l3784 732E                                              l3696 7E52  
                                            l3688 7DEA                                              l3880 2FE2  
                                            l3872 2F4A                                              l3864 2F12  
                                            l3856 2EBA                                              l3952 38B8  
                                            l3944 3856                                              l3936 3794  
                                            l3928 376E                                              l3960 3AF6  
                                            l3776 7494                                              l3768 7416  
                                            l4672 13DE                                              l4680 140E  
                                            l4664 1372                                              l4648 1276  
                                            l4656 12C4                                              l4592 0EA2  
                                            l4584 0DE6                                              l4576 0D54  
                                            l4568 0CA2                                              l4496 07DE  
                                            l4488 0750                                              l5456 6E14  
                                            l5448 6DC2                                              l5704 1BA6  
                                            l5640 184E                                              l5632 17EC  
                                            l5624 1796                                              l5616 173C  
                                            l5608 16E4                                              l5560 152E  
                                            l5552 1510                                              l5544 14D4  
                                            l5536 1474                                              l5528 1462  
                                            l5466 7202                                              l4930 24A4  
                                            l4922 245E                                              l4914 23CE  
                                            l4906 237A                                              l4850 21D2  
                                            l4842 2194                                              l4826 2A2E  
                                            l4818 29D6                                              l4770 27EA  
                                            l4762 27B2                                              l4754 2782  
                                            l4746 2752                                              l4738 270C  
                                            l5490 6500                                              l5482 64F8  
                                            l5386 6CFC                                              l5378 6CC6  
                                            l5394 6D1A                                              l5298 64AE  
                                            l3794 7380                                              l3786 7342  
                                            l3698 7E58                                              l3890 30AC  
                                            l3882 2FE8                                              l3874 2F52  
                                            l3866 2F28                                              l3858 2ED0  
                                            l3954 38C8                                              l3946 3874  
                                            l3938 37F6                                              l3970 3B44  
                                            l3962 3B08                                              l3778 74A8  
                                            l4674 13EC                                              l4658 1300  
                                            l4586 0E2C                                              l4578 0D8A  
                                            l4498 0824                                              l5458 6E1C  
                                            l5706 1BAE                                              l5650 1910  
                                            l5642 1868                                              l5634 1802  
                                            l5618 1764                                              l5626 17A8  
                                            l5570 1576                                              l5562 1546  
                                            l5554 1516                                              l5546 1500  
                                            l5538 1478                                              l4940 2524  
                                            l4932 24A8                                              l4924 246A  
                                            l4916 23F8                                              l4908 238A  
                                            l4860 220A                                              l4852 21E2  
                                            l4844 21A6                                              l4828 2A40  
                                            l4780 2858                                              l4772 2800  
                                            l4764 27C2                                              l4756 2782  
                                            l4748 2758                                              l5492 6502  
                                            l5484 64FA                                              l5388 6D02  
                                            l5396 6D22                                              l3796 73B8  
                                            l3788 734E                                              l3892 30CA  
                                            l3876 2F5A                                              l3884 304C  
                                            l3868 2F38                                              l3948 389C  
                                            l3956 38CE                                              l3980 3BCE  
                                            l3972 3B4C                                              l3964 3B10  
                                            l4676 1400                                              l5476 6534  
                                            l5708 1BC8                                              l5660 1988  
                                            l5644 187E                                              l5636 181A  
                                            l5652 1922                                              l5628 17C2  
                                            l5580 15DE                                              l5572 15B0  
                                            l5564 155A                                              l5556 1522  
                                            l5548 1504                                              l4950 2590  
                                            l4942 2530                                              l4934 24BA  
                                            l4926 247C                                              l4918 2432  
                                            l4870 2258                                              l4862 221C  
                                            l4854 21EA                                              l4846 21A8  
                                            l4790 28A4                                              l4782 285A  
                                            l4774 2814                                              l4766 27D2  
                                            l5494 6504                                              l5486 64FC  
                                            l5398 6D56                                              l3798 73CC  
                                            l3886 306C                                              l3894 30DC  
                                            l3878 2FDC                                              l3990 3C3E  
                                            l3982 3BD2                                              l3974 3B5E  
                                            l3966 3B26                                              l4598 0EF2  
                                            l4686 1422                                              l5670 19FA  
                                            l5662 198E                                              l5654 193C  
                                            l5646 18A8                                              l5638 1844  
                                            l5590 161C                                              l5582 15E6  
                                            l5574 15B6                                              l5566 1562  
                                            l5558 1524                                              TRISD 000F95  
                                            TRISE 000F96                                              l4960 2604  
                                            l4952 25A4                                              l4944 2542  
                                            l4936 24EC                                              l4928 2490  
                                            l4880 22B0                                              l4872 2260  
                                            l4864 221E                                              l4856 21FC  
                                            l4848 21BE                                              l4792 28B0  
                                            l4784 286A                                              l4776 2826  
                                            l4768 27E2                                              l5496 6506  
                                            l5488 64FE                                              l3896 30F4  
                                            l3888 308E                                              l3992 3C42  
                                            l3984 3BF4                                              l3968 3B2E  
                                            l4688 144A                                              l5680 1A7C  
                                            l5664 19B2                                              l5656 1952  
                                            l5672 1A0A                                              l5648 18B2  
                                            l5592 163C                                              l5576 15BC  
                                            l5568 1570                                              l5584 15EA  
                                            l4962 2606                                              l4954 25C4  
                                            l4946 256C                                              l4890 2302  
                                            l4882 22BE                                              l4874 2288  
                                            l4866 2234                                              l4858 2204  
                                            l4970 6864                                              l4794 28C2  
                                            l4786 2884                                              l4778 2834  
                                            l5498 6C24                                              l3898 3106  
                                            l3986 3C02                                              l3978 3BB8  
                                            l5690 1AEA                                              l5682 1A86  
                                            l5674 1A24                                              l5666 19C2  
                                            l5658 197C                                              l5594 1644  
                                            l5586 1604                                              l5578 15CC  
                                            l4980 781A                                              l4956 25E2  
                                            l4964 260E                                              l4948 2570  
                                            l4892 230E                                              l4884 22C8  
                                            l4876 229A                                              l4868 2248  
                                            l4972 6874                                              l4788 289E  
                                            l4796 28D6                                              l5780 3DA4  
                                            l3996 3C7E                                              l3988 3C3A  
                                            l5684 1AA0                                              l5676 1A3A  
                                            l5668 19EE                                              l5596 165C  
                                            l5588 1606                                              l4990 7898  
                                            l4982 784E                                              l4966 2614  
                                            l4958 25F2                                              l4894 231A  
                                            l4886 22DE                                              l4798 28EA  
                                            l3998 3C94                                              l5686 1AB6  
                                            l5678 1A52                                              l5694 1B1A  
                                            l5598 167C                                              l4992 78EE  
                                            l4984 785E                                              l4976 77D8  
                                            l4896 2328                                              l4888 22EA  
                                            l5696 1B34                                              l5688 1AE0  
                                            l4994 78F4                                              l4986 7872  
                                            l4978 780A                                              l4898 2334  
                                            l5778 0150                                              l5698 1B44  
                                            l4988 7884                                              l4998 66D4  
                                            STR_1 7F3B                                              STR_2 7EC9  
                                            STR_3 7FBB                                              STR_4 7F6C  
                                            STR_5 7FA9                                              STR_6 7FC4  
                                            STR_7 7FB2                                              STR_8 7F09  
                                            STR_9 7F93                                     _state_changed 01B0  
                                            _LATA 000F89                                              _LATB 000F8A  
                                            _LATC 000F8B                                              u4000 6858  
                                            u4010 6B04                                              u4011 6AFC  
                                            u4100 2E7E                                              u4020 6B08  
                                            u4110 2E98                                              u4030 6B22  
                                            u4111 2E92                                              u4031 6B1C  
                                            u5000 1EFC                                              u4040 678A  
                                            u4200 30DC                                              u4120 2ECE  
                                            u5001 1EF6                                              u4041 6782  
                                            u4201 30D6                                              u4121 2EC8  
                                            u5010 1F46                                              u4050 678E  
                                            u4210 30F2                                              u4130 2EF0  
                                            u5011 1F40                                              u4211 30EC  
                                            u4131 2EEA                                              u5100 2068  
                                            u5020 1F84                                              u4060 69C0  
                                            u4220 3106                                              u4140 2F26  
                                            u4300 3872                                              u5101 2062  
                                            u5021 1F7E                                              u4061 69BA  
                                            u4221 3100                                              u4141 2F20  
                                            u4301 386C                                              u5110 2082  
                                            u5030 1F98                                              u4070 69F2  
                                            u4230 3122                                              u4150 2F38  
                                            u4310 3886                                              u5111 207C  
                                            u5031 1F92                                              u4071 69EC  
                                            u4231 311C                                              u4151 2F32  
                                            u4311 3880                                              u6000 247A  
                                            u5120 20A0                                              u5040 1FCA  
                                            u4080 6A1C                                              u4160 306A  
                                            u4320 389A                                              u4240 36EA  
                                            u4400 3C26                                              u5200 0196  
                                            u6001 2474                                              u5121 209A  
                                            u5041 1FC4                                              u4081 6A16  
                                            u4161 3064                                              u4321 3894  
                                            u4241 36E4                                              u5201 0190  
                                            u6010 24A2                                              u5130 20DE  
                                            u5050 1FE0                                              u4170 308C  
                                            u4090 2E7A                                              u4330 38B0  
                                            u4250 370C                                              u4410 3C64  
                                            u5210 01AA                                              u6011 249C  
                                            u5131 20D8                                              u5051 1FDA  
                                            u4171 3086                                              u4091 2E72  
                                            u4331 38AA                                              u4251 3706  
                                            u4411 3C5E                                              u5211 01A4  
                                            u6100 7808                                              u6020 24B8  
                                            u5140 20F6                                              u5060 2004  
                                            u4180 30AA                                              u4260 37CE  
                                            u4420 3C78                                              u4500 36A8  
                                            u3700 680E                                              u5300 03EA  
                                            u5220 01D8                                              u6101 7802  
                                            u6021 24B2                                              u5141 20F0  
                                            u5061 1FFE                                              u4181 30A4  
                                            u4421 3C72                                              u4341 3B00  
                                            u4501 36A2                                              u3701 6806  
                                            u5221 01D2                                              u6110 784C  
                                            u6030 24EA                                              u5150 210A  
                                            u5070 201A                                              u3630 7238  
                                            u4190 30C8                                              u4270 3814  
                                            u4430 3CBA                                              u4350 3B24  
                                            u3710 6812                                              u4510 318E  
                                            u5310 0404                                              u5230 0220  
                                            u6111 7846                                              u6031 24E4  
                                            u5151 2104                                              u5071 2014  
                                            u3631 7232                                              u4191 30C2  
                                            u4271 380E                                              u4431 3CB4  
                                            u4407 3C1C                                              u4351 3B1E  
                                            u4511 3188                                              u5311 03FE  
                                            u5231 021A                                              u6120 7870  
                                            u3720 68CA                                              u6200 79D0  
                                            u6040 2508                                              u5160 212E  
                                            u5080 2030                                              u3640 724E  
                                            u3800 7B86                                              u4280 3836  
                                            u4360 3B5C                                              u4440 34BE  
                                            u4600 3312                                              u4520 31B0  
                                            u5400 0750                                              u5320 042E  
                                            u5240 02A8                                              u7000 18A6  
                                            u6121 786A                                              u3721 68C4  
                                            u6201 79CA                                              u6041 2502  
                                            u5161 2128                                              u5081 202A  
                                            u3641 7248                                              u3801 7B80  
                                            u4281 3830                                              u4265 37BA  
                                            u4361 3B56                                              u4441 34B8  
                                            u4601 330C                                              u4521 31AA  
                                            u5401 074A                                              u5321 0428  
                                            u5241 02A0                                              u7001 18A0  
                                            u6130 7896                                              u6210 79F8  
                                            u6050 2522                                              u5170 2146  
                                            u5090 204A                                              u3650 727C  
                                            u3730 7D16                                              u3810 7BBE  
                                            u4290 3854                                              u4370 3B7E  
                                            u4450 34E0                                              u4610 3380  
                                            u4530 31E2                                              u5410 07DC  
                                            u5330 04B8                                              u5250 02AC  
                                            u7010 18CC                                              u6131 7890  
                                            u6211 79F2                                              u6051 251C  
                                            u5171 2140                                              u5091 2044  
                                            u3651 7276                                              u3731 7D10  
                                            u3811 7BB8                                              u4291 384E  
                                            u4371 3B78                                              u4451 34DA  
                                            u4531 31DC                                              u5411 07D6  
                                            u5331 04B2                                              u7011 18C4  
                                            u6140 78EC                                              u6300 3A86  
                                            u6220 7A0C                                              u6060 2540  
                                            u5180 216A                                              u4700 3D68  
                                            u3660 72B6                                              u3740 7D4E  
                                            u3820 7C02                                              u4380 3BB2  
                                            u3900 740C                                              u4460 3636  
                                            u4620 33C8                                              u4540 324C  
                                            u5500 0BCC                                              u5420 0898  
                                            u5340 04F2                                              u5260 02C6  
                                            u7100 1A50                                              u7020 18D0  
                                            u6141 78E6                                              u6301 3A80  
                                            u6221 7A06                                              u6061 253A  
                                            u5181 2164                                              u4701 3D62  
                                            u3661 72B0                                              u3741 7D48  
                                            u3821 7BFC                                              u4381 3BAC  
                                            u3901 7406                                              u4461 3630  
                                            u4621 33C2                                              u4541 3246  
                                            u5421 0892                                              u5341 04EC  
                                            u5261 02C0                                              u7101 1A4A  
                                            u6310 3AC6                                              u6230 3912  
                                            u6070 258E                                              u6150 66EC  
                                            u4710 3E34                                              u3670 6942  
                                            u3830 7C34                                              u4390 3BF4  
                                            u3910 743E                                              u4470 3658  
                                            u4630 33EA                                              u4550 329E  
                                            u5510 0C0A                                              u5430 0914  
                                            u5350 05B0                                              u5270 02F0  
                                            u5190 00A4                                              u7110 1A7A  
                                            u7030 18EC                                              u6311 3AC0  
                                            u6231 390C                                              u6071 2588  
                                            u6151 66E6                                              u4711 3E2C  
                                            u3671 693C                                              u3751 7D7C  
                                            u3831 7C2E                                              u4391 3BEE  
                                            u3911 7438                                              u4471 3652  
                                            u4631 33E4                                              u4615 336C  
                                            u4551 3296                                              u5511 0C04  
                                            u5431 090E                                              u5351 05AA  
                                            u5271 02EA                                              u5191 009E  
                                            u7111 1A74                                              u7031 18E4  
                                            u6320 3AD8                                              u6240 3924  
                                            u6160 791A                                              u6080 25C2  
                                            u4800 1BFC                                              u6400 2D20  
                                            u4720 3E38                                              u3680 6980  
                                            u3760 7DA2                                              u3840 7C68  
                                            u3920 7472                                              u4480 3676  
                                            u4640 3408                                              u4560 32A2  
                                            u5600 106C                                              u5520 0C72  
                                            u5440 099E                                              u5360 05EA  
                                            u5280 0332                                              u7200 1BC6  
                                            u7120 1A9E                                              u7040 18F0  
                                            u6321 3AD2                                              u6241 391E  
                                            u6161 7914                                              u6081 25BC  
                                            u4801 1BF6                                              u6401 2D1A  
                                            u3761 7D9C                                              u3841 7C62  
                                            u3921 746C                                              u4481 3670  
                                            u4641 3402                                              u5601 1066  
                                            u5441 0998                                              u5361 05E4  
                                            u5281 032C                                              u7201 1BC0  
                                            u7121 1A98                                              u6250 3988  
                                            u6170 7956                                              u6090 2602  
                                            u4810 1C14                                              u6410 2DE8  
                                            u4730 3E52                                              u3690 6992  
                                            u3930 7318                                              u3770 7DD4  
                                            u3850 7CB8                                              u4490 3694  
                                            u4650 3426                                              u4570 32BC  
                                            u5610 1154                                              u5530 0CA0  
                                            u5450 0A2A                                              u5370 0664  
                                            u5290 03E6                                              u6330 6BA2  
                                            u7130 1AB4                                              u7050 190E  
                                            u6251 3982                                              u6091 25FC  
                                            u4811 1C0E                                              u4731 3E4C  
                                            u3691 698C                                              u3931 7312  
                                            u3771 7DCE                                              u3851 7CB2  
                                            u4491 368E                                              u4651 3420  
                                            u4571 32B6                                              u5611 114E  
                                            u5531 0C9A                                              u5507 0BBC  
                                            u5451 0A24                                              u5371 065E  
                                            u5291 03DE                                              u6331 6B9C  
                                            u7131 1AAE                                              u7051 1908  
                                            u6500 7536                                              u6260 39E8  
                                            u6180 7988                                              u4900 1DA6  
                                            u4820 1C28                                              u6420 2E08  
                                            u6340 2AA0                                              u5700 2674  
                                            u4740 3E68                                              u3940 7340  
                                            u3780 7E1A                                              u4660 343A  
                                            u4580 32F4                                              u5620 118E  
                                            u5540 0D52                                              u5460 0A88  
                                            u5380 068E                                              u7140 1ADE  
                                            u7060 193A                                              u6501 7530  
                                            u6261 39E2                                              u6181 7982  
                                            u4901 1D9E                                              u4821 1C22  
                                            u6421 2E02                                              u5701 266E  
                                            u4741 3E62                                              u3941 733A  
                                            u3781 7E14                                              u3861 76D4  
                                            u4661 3434                                              u4581 32EC  
                                            u5621 1188                                              u5541 0D4C  
                                            u5381 0688                                              u7141 1AD8  
                                            u7061 1934                                              u6510 755C  
                                            u6270 3A3A                                              u6190 79A0  
                                            u4910 1DAA                                              u4830 1C74  
                                            u6350 2ACE                                              u5710 26C2  
                                            u3950 73A2                                              u3790 7E6C  
                                            u4750 75F2                                              u3870 76FA  
                                            u4670 344E                                              u4590 32F8  
                                            u5630 1232                                              u5550 0DE4  
                                            u5470 0AD0                                              u5390 0716  
                                            u6430 6BC6                                              u7150 1B14  
                                            u7070 197A                                              u6511 7556  
                                            u6271 3A34                                              u6191 799A  
                                            u6175 794A                                              u4831 1C6E  
                                            u6415 2DDC                                              u6351 2AC8  
                                            u5711 26BC                                              u3687 6976  
                                            u3951 739C                                              u3791 7E66  
                                            u4751 75EC                                              u3871 76F4  
                                            u4671 3448                                              u5631 122C  
                                            u5551 0DDE                                              u5527 0C62  
                                            u5471 0ACA                                              u5391 0710  
                                            u6431 6BC0                                              u7151 1B0E  
                                            u7071 1974                                              u6520 757E  
                                            u6280 3A60                                              u4920 1DD8  
                                            u4840 1C90                                              u6360 2B08  
                                            u5800 289C                                              u5720 26DA  
                                            u6440 6F56                                              u6600 6E9C  
                                            u4680 3D0A                                              u3960 73B6  
                                            u4760 7632                                              u3880 772C  
                                            u5640 125C                                              u5560 0EA0  
                                            u5480 0B38                                              u7160 1B32  
                                            u7080 19B0                                              u6521 7578  
                                            u6281 3A5A                                              u4921 1DD2  
                                            u4841 1C8A                                              u6345 2A94  
                                            u5801 2896                                              u5721 26D4  
                                            u6441 6F50                                              u6601 6E96  
                                            u4681 3D04                                              u3961 73B0  
                                            u4761 762C                                              u3881 7726  
                                            u5641 1256                                              u5561 0E9A  
                                            u7161 1B2C                                              u7081 19AA  
                                            u6530 75AC                                              u6290 3A74  
                                            u4930 1DFE                                              u4850 1CA8  
                                            u6370 2B28                                              u5810 28C0  
                                            u5730 26EE                                              u6450 6F74  
                                            u6610 6D52                                              u4690 3D46  
                                            u4770 7654                                              u3890 7772  
                                            u3970 67CC                                              u5650 12FE  
                                            u5570 0F1C                                              u5490 0B66  
                                            u7170 1B5C                                              u7090 1A22  
                                            u6531 75A6                                              u6291 3A6E  
                                            u4931 1DF8                                              u4851 1CA2  
                                            u6371 2B22                                              u5811 28BA  
                                            u5731 26E8                                              u6451 6F6E  
                                            u7307 6CB2                                              u4691 3D40  
                                            u4771 764E                                              u3891 776C  
                                            u3971 67C4                                              u5651 12F8  
                                            u5571 0F16                                              u5491 0B60  
                                            u5467 0A7C                                              u7171 1B56  
                                            u7091 1A1C                                              u4940 1E26  
                                            u4860 1CBC                                              u6380 2B70  
                                            u5900 2A3E                                              u5820 28E8  
                                            u5740 2738                                              u6620 6D88  
                                            u6460 70F8                                              u4780 766A  
                                            u3980 67D0                                              u5660 1338  
                                            u5580 0FA6                                              u6540 7A4C  
                                            u6700 3FBA                                              u7180 1B70  
                                            u4941 1E20                                              u4861 1CB6  
                                            u6381 2B6A                                              u6365 2AFC  
                                            u5901 2A38                                              u5821 28E2  
                                            u5741 2732                                              u7317 6CCC  
                                            u6461 70F2                                              u4781 7664  
                                            u5661 1332                                              u5581 0FA0  
                                            u6541 7A46                                              u6701 3FB4  
                                            u7181 1B6A                                              u5910 21A4  
                                            u4950 1E38                                              u4870 1D02  
                                            u6390 2C7C                                              u5830 28FE  
                                            u5750 2780                                              u6630 6D9A  
                                            u6470 712E                                              u4790 769C  
                                            u3990 6854                                              u5670 13DC  
                                            u5590 1032                                              u6550 7A82  
                                            u6710 3FD6                                              u7190 1BA4  
                                            u5911 219E                                              u4951 1E32  
                                            u4871 1CFC                                              u6391 2C76  
                                            u5831 28F8                                              u5751 277A  
                                            u7327 6CE4                                              u6631 6D94  
                                            u6471 7128                                              u4791 7696  
                                            u3991 684C                                              u5671 13D6  
                                            u5591 102C                                              u5487 0B28  
                                            u6551 7A7C                                              u6711 3FD0  
                                            u7191 1B9E                                              u6480 74EA  
                                            u5920 21BC                                              u4960 1E4C  
                                            u4880 1D14                                              u5840 2930  
                                            u5760 27FE                                              u5680 2648  
                                            u6560 7AEC                                              u6640 3EB2  
                                            u6720 6DC0                                              u6800 1544  
                                            u6481 74E4                                              u5921 21B6  
                                            u4961 1E46                                              u4881 1D0E  
                                            u5841 292A                                              u5761 27F8  
                                            u5681 2642                                              u7337 6592  
                                            u6617 6D48                                              u6561 7AE6  
                                            u6641 3EAC                                              u6721 6DBA  
                                            u7257 17F4                                              u6801 153E  
                                            u6490 750A                                              u5930 21D0  
                                            u4970 1E84                                              u4890 1D8A  
                                            u5850 294E                                              u5770 2824  
                                            u5690 2660                                              u6570 7B00  
                                            u6650 3EDE                                              u6730 6DE8  
                                            u6810 1558                                              u6491 7504  
                                            u5931 21CA                                              u4971 1E7E  
                                            u4891 1D84                                              u5851 2948  
                                            u5771 281E                                              u5691 265A  
                                            u7347 659E                                              u6627 6D7E  
                                            u6571 7AFA                                              u6651 3ED8  
                                            u6731 6DE2                                              u7267 1944  
                                            u6811 1552                                              u5940 221A  
                                            u4980 1E96                                              u5860 2968  
                                            u5780 2856                                              u6580 7B32  
                                            u6660 3F0A                                              u6740 6E12  
                                            u6900 1726                                              u6820 1602  
                                            u5941 2214                                              u4981 1E90  
                                            u5861 2962                                              u5781 2850  
                                            u6581 7B2C                                              u6661 3F04  
                                            u6741 6E0C                                              u7277 1A2C  
                                            u6901 1720                                              u6821 15FC  
                                            u6750 71CA                                              u5950 2232  
                                            u4990 1EBC                                              u5870 2986  
                                            u5790 2882                                              u6590 64C4  
                                            u6670 3F36                                              u6910 173A  
                                            u6830 161A                                              u6751 71C4  
                                            u5951 222C                                              u4991 1EB6  
                                            u5871 2980                                              u5791 287C  
                                            u7287 65BC                                              u6591 64BE  
                                            u6671 3F30                                              u6911 1734  
                                            u6831 1614                                              u6760 7200  
                                            u5960 2246                                              u5880 29D4  
                                            u6680 3F62                                              u6920 1762  
                                            u6840 163A                                              u6761 71FA  
                                            u5961 2240                                              u5881 29CE  
                                            u7297 65C8                                              u6681 3F5C  
                                            u6921 175C                                              u6841 1634  
                                            u5970 2286                                              u5890 2A0A  
                                            u6690 3F8E                                              u6770 6552  
                                            u6930 178C                                              u6850 165A  
                                            u5971 2280                                              u5891 2A04  
                                            u6691 3F88                                              u6771 654C  
                                            u6931 1786                                              u6851 1654  
                                            u5980 229A                                              u6780 6C50  
                                            u6940 17C0                                              u6860 167A  
                                            u5981 2294                                              u6781 6C4A  
                                            u6941 17BA                                              u6861 1674  
                                            u5990 241A                                              u6950 17EA  
                                            u6870 16AC                                              u6951 17E4  
                                            u6871 16A6                                              u6960 1818  
                                            u6880 16CE                                              u6961 1812  
                                            u6881 16C8                                              u6970 1842  
                                            u6890 16FC                                              u5995 240E  
                                            u6971 183C                                              u6891 16F6  
                                            u6980 1866                                              u6981 1860  
                                            u6990 187C                                              u6991 1876  
                                            _TMR2 000FCC                                              abs@a 0013  
                                            _dbuf 0098                                              _atoi 3CC8  
                                            _ctoa 6A04                                              _main 1462  
                                            _dtoa 2E46                                              _fosc 7EC5  
                                            _prec 0088                                              _otoa 36D6  
                                            _nout 0084                                              pad@i 0018  
                                            pad@p 0015                                              fsr1h 000FE2  
                                            fsr2h 000FDA                                              indf1 000FE7  
                                            indf2 000FDF                                              fsr1l 000FE1  
                                            pad@w 001A                                              fsr2l 000FD9  
                                            _tosc 00E9                                              _stoa 3AF4  
                                            btemp 007F                                              _utoa 34AA  
                                            _xtoa 317A                       update_pwm_duty_ccp1@time_up 00D4  
                                     main@rx_char 01A2                                              prodh 000FF4  
                                   _trash_counter 01A5                                              prodl 000FF3  
                                            start 0076                                   ___fldiv@new_exp 0057  
state_translator_fpga_to_micro@state_machine_code 0005                                      ___param_bank 000000  
                                           ??_abs 0015                              _update_pwm_duty_ccp1 6EDA  
                                           ??_pad 0017                                     ___fltol@sign1 00D2  
                                 __end_of___aodiv 7EB4                                             ?_atoi 0008  
                                           ?_ctoa 001C                                   __end_of___fladd 2186  
                                           ?_main 0001                                             ?_dtoa 001C  
                                 __end_of___aomod 7D00                                   __end_of___fldiv 2A5C  
                                 __end_of___awdiv 75C4                                   __end_of___flneg 6714  
                                           STR_10 7FFC                                             STR_11 7FCF  
                                           STR_13 7FCF                                             STR_22 7FD0  
                                           STR_31 7FEA                                             STR_15 7FD3  
                                           STR_40 7FDB                                             STR_17 7FD3  
                                           STR_33 7FED                                             STR_26 7FD4  
                                           STR_50 7FF3                                             STR_35 7FED  
                                           STR_60 7FD8                                             STR_45 7FDC  
                                           STR_29 7FEA                                             STR_53 7FD7  
                                           STR_70 7FDF                                             STR_38 7FDB  
                                           STR_55 7FD7                                             STR_63 7FF0  
                                           STR_80 7FF6                                             STR_48 7FF3  
                                           STR_65 7FF0                                             STR_75 7FE0  
                                           STR_83 7FE3                                             STR_68 7FDF  
                                           STR_85 7FE3                                             STR_94 7FE4  
                                           STR_78 7FF6                                             STR_87 7FCB  
                                 __end_of___flmul 262A                                             STR_89 7FCB  
                                           STR_98 7FCC                                             ?_otoa 001C  
                                 __end_of___flsub 68AC                                   __end_of___fltol 7A36  
                                           ?_stoa 000A                                             ?_utoa 001C  
                                           _T0CON 000FD5                                   __end_of___lodiv 77D6  
                                 ___awdiv@divisor 0019                                             ?_xtoa 001C  
                                           _T2CON 000FCA                                   __end_of___lomod 74D4  
                                           i2l190 006E                       __end_of_update_current_coil 7146  
                                 ___awdiv@counter 001B                                             _RCREG 000FAE  
                                    vfpfcnvrt@fmt 0045                                             _TMR0H 000FD7  
                                    vfpfcnvrt@llu 0060                                             _TMR0L 000FD6  
                                           _SPBRG 000FAF                                             _PORTA 000F80  
                                           _PORTB 000F81                                             _PORTC 000F82  
                                           _PORTD 000F83                                             _TRISA 000F92  
                                           _TRISB 000F93                                             _TXREG 000FAD  
                                ?_get_temperature 00D4                                   __end_of_lcd_dat 65D6  
                                 __end_of_lcd_cmd 65AC                                   __end_of_lcd_str 6DA0  
                                           _f_osc 7EC1                                             _flags 008A  
                                           _errno 008C                                             _fputc 7222  
                                 __end_of_isalpha 6862                                             _fputs 68F8  
                                 __end_of_isdigit 6798                                             _t_osc 7EBD  
                                           atoi@n 0015                                             pad@fp 0011  
                                           atoi@s 0008                                             _width 0086  
                                           ctoa@c 001E                                             _state 01DB  
                                           _putch 6474                                             _toint 7EB5  
                                           ctoa@w 001F                                             dtoa@d 001E  
                                           dtoa@i 003E                                             dtoa@n 0036  
                                           dtoa@p 0030                                             dtoa@s 0034  
                                           dtoa@w 0032                                   __end_of_islower 681C  
                                 __end_of_isspace 6A04                                   __end_of_isupper 67DA  
                                           tablat 000FF5                                             otoa@d 001E  
                                           otoa@i 003C                                             otoa@n 0034  
                                           otoa@p 002E                                             otoa@t 0030  
                                           otoa@w 0032                                             plusw1 000FE3  
                                           plusw2 000FDB                                             stoa@i 0016  
                                           stoa@l 001E                                             stoa@p 001C  
                                           stoa@s 000C                                             stoa@w 0018  
                                           ttemp5 0080                                             ttemp6 0083  
                                           ttemp7 0087                                             utoa@d 001E  
                                           utoa@i 003A                                             utoa@n 0032  
                                           utoa@p 002E                                             utoa@w 0030  
                                           status 000FD8                                             wtemp8 0080  
                                           xtoa@c 0041                                             xtoa@d 001E  
                                           xtoa@i 003F                                             xtoa@n 0037  
                                           xtoa@p 0033                                             xtoa@w 0035  
                                           xtoa@x 0026                                   __end_of_strncmp 76CC  
                                 __end_of_toupper 6B40                                  ___lodiv@dividend 0001  
                              _end_effector_homed 01A7                                   ??_get_reg_value 0001  
                                    _toupper$1899 000D                              get_reg_value@rx_char 0001  
                                 __initialization 6A6A                                      __end_of_atoi 3E96  
                                    __end_of_ctoa 6A6A                                      __end_of_main 1BDE  
                                    __end_of_dtoa 317A                                      __end_of_fosc 7EC9  
                                    __end_of_otoa 38FC                                      __end_of_stoa 3CC8  
                                    __end_of_utoa 36D6                             ?_update_pwm_duty_ccp1 00D4  
                                    __end_of_xtoa 34AA                                            ??_atoi 000A  
                                          ??_ctoa 001F                                            ??_main 00DD  
                                          ??_dtoa 0026                                            ??_otoa 0026  
                                          ??_stoa 000E                                            ??_utoa 0026  
                                          ??_xtoa 0027                                     __activetblptr 000002  
                                 ??_rx_char_usart 0001                                  ___lodiv@quotient 0011  
                                          _ADCON0 000FC2                                            _ADCON1 000FC1  
                                _change_direction 6660                                            ?_fputc 0001  
                                          STR_101 7FF9                                            ?_fputs 000A  
                                          STR_103 7FF9                                            STR_105 7FE7  
                                          _ADRESH 000FC4                                            STR_107 7FE7  
                                          _ADRESL 000FC3                      __end_of_turn_on_current_coil 66D2  
                                          _CCPR1L 000FBE                                  ___awdiv@dividend 0017  
                                          ?_putch 0001                                            i2l5720 003C  
                                          i2l5712 000C                                            i2l5722 0050  
                                          i2l5714 001E                                            i2l5724 0062  
                                          i2l5716 0030                                            i2l5726 0066  
                                          i2l5718 0032                                     main@greet_str 0100  
                                   vfpfcnvrt@done 004F                                  __end_of___xxtofl 3AF4  
                                   ?_init_timer_0 0001                                     ?_init_timer_2 0001  
          __end_of_state_translator_fpga_to_micro 3FF4           __size_of_state_translator_fpga_to_micro 015E  
                  _state_translator_fpga_to_micro 3E96                                     ?_init_stepper 0001  
                                    vfprintf@cfmt 006E                                  __end_of_lcd_init 6D18  
                                          ___flge 77D6                                 _init_timer_2$2136 00D4  
                                       ??___aodiv 0011                                         ??___fladd 0067  
                                       ??___aomod 0011                                            ___wmul 65D6  
                                       ??___fldiv 004E                                         ??___awdiv 001B  
                                       ??___flneg 0005                                         ??___flmul 0035  
                                       ??___flsub 0077                                         ??___fltol 00CE  
                                       ??___lodiv 0011                                         ??___lomod 0011  
                                          _lcd_wr 3FF4                                            clear_0 6AB0  
                                          clear_1 6ABC                                  ___awdiv@quotient 001D  
                                          pad@buf 0013                                            ctoa@fp 001C  
                                          _roundf 2A5C                                         ??_lcd_dat 0002  
                                       ??_lcd_cmd 0002                                            dtoa@fp 001C  
                                          _strlen 6948                                         ??_lcd_str 0005  
                                          fputc@c 0001                                            fputs@c 000E  
                                          fputs@i 000F                                            fputs@s 000A  
                                       ??_isalpha 0003                                         ??_isdigit 0003  
                                       ??_islower 0003                                      __mediumconst 7EB4  
                                       ??_isspace 0003                                            otoa@fp 001C  
                                          tblptrh 000FF7                                         ??_isupper 0003  
                                          tblptrl 000FF6                                            tblptru 000FF8  
                         reach_goal@goal_to_reach 0009                                            stoa@cp 001A  
                                          stoa@fp 000A                                            putch@c 0001  
                                __end_of_vfprintf 6BB0                                            utoa@fp 001C  
                                __end_of_snprintf 6660                                            xtoa@fp 001C  
                                       ??_strncmp 0007                                         ??_toupper 0009  
                                      ___flge@ff1 0001                                        ___flge@ff2 0005  
                update_current_coil@stepper_motor 0001                                      ___xxtofl@arg 0029  
                                    ___xxtofl@exp 0028                                      ___xxtofl@val 001F  
                                      __accesstop 0080                           __end_of__initialization 6AC2  
                                      ___flneg@f1 0001                                 serial_tx_char@val 0001  
                                  ??_init_timer_0 0001                                    ??_init_timer_2 007F  
                                   ___rparam_used 000001                                        ___fltol@f1 00CA  
                                  ??_init_stepper 000B                                    _tmr2_prescaler 00ED  
                                 _init_interrupts 647A                            ??_update_pwm_duty_ccp1 00D8  
                                  __pcstackCOMRAM 0001                                      __pidataBANK0 6497  
                                    __pidataBANK1 64CA                                     __end_of_f_osc 7EC5  
                                   __end_of_fputc 7304                                     __end_of_fputs 6948  
                                   __end_of_t_osc 7EC1                                     __end_of_putch 647A  
                                   __end_of_toint 7EB9                                   _temperature_int 0090  
                         __size_of_serial_tx_char 0020               state_translator_fpga_to_micro@state 0003  
                                         ??_fputc 0005                                           ??_fputs 000E  
                                         ??_putch 0001                                  _mix_current_step 0096  
                                      __pbssBANK0 0080                                        __pbssBANK1 01A3  
                              __size_of_init_ccp1 0024                                           ?___flge 0001  
                                         ?___wmul 0001               check_temperature@temp_to_be_checked 00D6  
                                         ?_lcd_wr 0001                                           _CCP1CON 000FBD  
                            _turn_on_current_coil 6696                             __end_of_wait_for_zero 6558  
                         _hex_end_effector_values 01ED                                     _read_new_char 01AE  
                                         ?_roundf 0077                                           ?_strlen 0001  
                              _temperature_scaled 008E                                         ?___xxtofl 001F  
                         reach_goal@stepper_motor 0007                                __size_of_vfpfcnvrt 13E8  
               turn_on_current_coil@stepper_motor 0001                                  _desired_baudrate 7EB9  
                                       ?_lcd_init 0001                                  ___lomod@dividend 0001  
                         __end_of_init_interrupts 6486                                 _check_temperature 7146  
                   change_direction@stepper_motor 0001                                           __Hparam 0000  
                              ?_check_temperature 00D6                                           __Lparam 0000  
                              __size_of_vsnprintf 013A                                        _init_PORTS 6600  
                                      _init_USART 6714                                   __size_of___flge 0128  
                                         ___aodiv 7D00                                           ___fladd 1BDE  
                                         ___aomod 7B70                                           ___fldiv 262A  
                                         ___awdiv 74D4                                           ___flneg 66D2  
                                         ___flmul 2186                          __end_of_change_direction 6696  
                                         ___flsub 6862                                           ___fltol 78FE  
                                 __size_of___wmul 002A                                           ___lodiv 76CC  
                           ?_turn_on_current_coil 0001                                           ___lomod 73EA  
                                       ?_vfprintf 0068                                         ?_snprintf 00C2  
                                 __size_of_lcd_wr 000C                               ??_check_temperature 007F  
                                         __pcinit 6A6A              init_stepper@hex_coil_register_values 0009  
                                         __ramtop 0600                                        _reach_goal 6C22  
                                         __ptext0 1462                                           __ptext1 6530  
                                         __ptext2 6BB0                                           __ptext3 6DA0  
                                         __ptext4 3E96                                           __ptext5 662C  
                                         __ptext6 7A36                                           __ptext7 6B40  
                                         __ptext8 007A                                           __ptext9 317A  
                                         _lcd_dat 65AC                                           _lcd_cmd 6582  
                                         _lcd_str 6D18                                         _T0CONbits 000FD5  
                                 __size_of_roundf 03EA                                   __size_of_strlen 005C  
                               __end_of_init_ccp1 6530                                         _T2CONbits 000FCA  
                                    __size_of_abs 004C                                      __size_of_pad 00E6  
                                         _isalpha 681C                                           _isdigit 6756  
                                      ??___xxtofl 0023                              __end_of_init_timer_0 650C  
                            __end_of_init_timer_2 706C                                           _islower 67DA  
                                         _isspace 69A4                                           _isupper 6798  
                            __end_of_init_stepper 6EDA                                           atoi@neg 000E  
                                   _joint_stepper 01CD                                        ??_lcd_init 0003  
                                         _strncmp 75C4                                           _toupper 6AD0  
                    __size_of_update_current_coil 00DA                              end_of_initialization 6AC2  
                       __end_of_check_temperature 7222                          __size_of_get_temperature 0072  
                                         fputc@fp 0003                                     __Lmediumconst 7EB4  
                                         fputs@fp 000C               state_translator_micro_to_fpga@state 0001  
                               __end_of_vfpfcnvrt 1462                             __end_of_get_reg_value 6496  
                                       _RCSTAbits 000FAB                                           postdec1 000FE5  
                                         postdec2 000FDD                                           postinc0 000FEE  
                                         postinc1 000FE6                                           postinc2 000FDE  
                                         roundf@e 00BC                                           roundf@u 00C2  
                                         roundf@x 0077                                           roundf@y 00C6  
                                      ??_vfprintf 006E                                        ??_snprintf 007C  
                                         strlen@a 0003                                           strlen@s 0001  
                                      _timer_done 01AD                                         _PORTEbits 000F84  
                ??_state_translator_fpga_to_micro 0005                   ?_state_translator_fpga_to_micro 0003  
                                     ___fladd@grs 006E                                    _serial_tx_char 64AA  
                                   ___xxtofl@sign 0027                             __end_of_rx_char_usart 0076  
                                       _TRISCbits 000F94                                        lcd_dat@val 0002  
                               __end_of_vsnprintf 7B70                                        lcd_cmd@val 0002  
                                     ___fldiv@grs 0059                                       ___fldiv@rem 0052  
                                      _pwm_period 00E5                                        _state_msgs 01DD  
                                   _mix_direction 0094                              _end_effector_stepper 01BF  
                                     ___flmul@grs 003A                                  ?_init_interrupts 0001  
                                     _CCP1CONbits 000FBD                                         _TXSTAbits 000FAC  
                                main@current_temp 01A0                                        lcd_str@str 0003  
     __end_of_configure_analog_digital_conversion 6582      __size_of_configure_analog_digital_conversion 002A  
           ??_configure_analog_digital_conversion 0001              ?_configure_analog_digital_conversion 0001  
             _configure_analog_digital_conversion 6558                                       ?_init_PORTS 0001  
                                     ?_init_USART 0001                            ??_turn_on_current_coil 0003  
                                  __end_of___flge 78FE            __end_of_state_translator_micro_to_fpga 6E2A  
         __size_of_state_translator_micro_to_fpga 008A                    _state_translator_micro_to_fpga 6DA0  
                                     vfpfcnvrt@ap 0047                                       vfpfcnvrt@cp 004D  
                                     vfpfcnvrt@fp 0043                                       vfpfcnvrt@ll 0055  
                                  __end_of___wmul 6600                                       vfpfcnvrt@vp 005D  
                                  __end_of_lcd_wr 4000                                       ?_reach_goal 0007  
state_translator_micro_to_fpga@state_machine_code 0005                            __end_of_serial_tx_char 64CA  
                                  __end_of_roundf 2E46                                    __end_of_strlen 69A4  
                             start_initialization 6A6A                                   ___lodiv@divisor 0009  
                                 ___lodiv@counter 0019                                       __end_of_abs 68F8  
                                     __end_of_pad 73EA                                  _hex_joint_values 01F5  
                      __size_of_check_temperature 00DC                          init_stepper@current_coil 0003  
                       init_stepper@stepper_motor 0001                                 ??_get_temperature 007F  
                                     vfprintf@fmt 006A                                          ??___flge 0009  
                        __end_of_desired_baudrate 7EBD                                          ??___wmul 0005  
                   __size_of_update_pwm_duty_ccp1 00C4                                          ??_lcd_wr 0001  
                                     __pdataBANK0 00DE                                       __pdataBANK1 01DD  
                           check_temperature@grad 00D8                             __size_of_init_timer_0 0022  
                           __size_of_init_timer_2 00CE                             __size_of_init_stepper 00B0  
                                        ??_roundf 007B                                          ??_strlen 0003  
                                 ?_serial_tx_char 0001                                         ___fladd@a 0063  
                                       ___fladd@b 005F                                      vsnprintf@cnt 00BA  
                                    vsnprintf@fmt 0074                                         ___fldiv@a 004A  
                                       ___fldiv@b 0046                                         ___flmul@a 0031  
                                       ___flmul@b 002D                                         ___flsub@a 0073  
                                       ___flsub@b 006F                                     __pcstackBANK0 00B8  
                                   __pcstackBANK1 0100                                  ___aodiv@dividend 0001  
                                     snprintf@fmt 00C6                                 __size_of___xxtofl 01F8  
                             __size_of_init_PORTS 002C                               __size_of_init_USART 0042  
                               __size_of_lcd_init 007E                               __size_of_reach_goal 0078  
                                       _atoi$1811 0010                                         _atoi$1812 0014  
                                       _atoi$1813 0012                                      _init_timer_0 64EA  
                                    _init_timer_2 6F9E                                         _dtoa$1637 002E  
                                    _init_stepper 6E2A                             init_stepper@direction 0007  
                                       __pintcode 0008                                     __pmediumconst 7EB4  
                                        ?___aodiv 0001                                          ?___fladd 005F  
                                        ?___aomod 0001                                          ?___fldiv 0046  
                                        ?___awdiv 0017                                  ___aodiv@quotient 0013  
                                        ?___flneg 0001                                          ?___flmul 002D  
                                        ?___flsub 006F                                          ?___fltol 00CA  
                                        ?___lodiv 0001                                          ?___lomod 0001  
                             _update_current_coil 706C                                 ?_change_direction 0001  
                              ??_change_direction 0003                                          ?_lcd_dat 0001  
                                        ?_lcd_cmd 0001                                 __size_of_vfprintf 0070  
                                        ?_lcd_str 0003                                 __size_of_snprintf 0034  
                                 ___lomod@divisor 0009                      update_pwm_duty_ccp1@new_duty 00DA  
                                 ___lomod@counter 0011                                          ?_isalpha 0001  
                                        ?_isdigit 0001                                  _mix_step_counter 0092  
                                        ?_islower 0001                                          ?_isspace 0001  
                                        ?_isupper 0001                                         _init_ccp1 650C  
                                  __size_of_fputc 00E2                                    __size_of_fputs 0050  
                            ?_update_current_coil 0001                                          ?_strncmp 0001  
                                        ?_toupper 0007                                    __size_of_putch 0006  
                          __size_of_wait_for_zero 0028                                    ___wmul@product 0005  
                                        _LATAbits 000F89                                          _PIE1bits 000F9D  
                                   _move_to_trash 01A3                             _joint_dilutor_stepper 01B1  
                                        _PIR1bits 000F9E                                          i2u721_40 001C  
                                        i2u721_41 0016                                          i2u722_40 002E  
                                        i2u722_41 0028                                          i2u723_40 004E  
                                        i2u723_41 0048                                          i2u724_40 0060  
                                        i2u724_41 005A                                         _vfpfcnvrt 007A  
                                       _xtoa$1673 002F                                         _xtoa$1674 0031  
                                      _ADCON0bits 000FC2                                 ___wmul@multiplier 0001  
                                       lcd_wr@val 0001                                      _isspace$1839 0007  
                                      ?_init_ccp1 0001                             ??_update_current_coil 0003  
                                      vfpfcnvrt@c 005F                                         copy_data0 6A7E  
                                       copy_data1 6A9E                                         _vsnprintf 7A36  
                                      roundf@F525 0080                                          __Hrparam 0000  
                                    ??_init_PORTS 0001                                      ??_init_USART 007F  
                                      vfprintf@ap 006C                                          __Lrparam 0000  
                                      vfprintf@fp 0068                                  __size_of___aodiv 01B4  
                                __size_of___fladd 05A8                                  __size_of___aomod 0190  
                                __size_of___fldiv 0432                                  __size_of___awdiv 00F0  
                                __size_of___flneg 0042                                       vsnprintf@ap 0076  
                                __size_of___flmul 04A4                                  __size_of___flsub 004A  
                                __size_of___fltol 0138                                  __size_of___lodiv 010A  
                                __size_of___lomod 00EA                                        ?_vfpfcnvrt 0043  
                                   _wait_for_zero 6530                                      ??_reach_goal 000B  
                                      snprintf@ap 00CC                                   ___aodiv@divisor 0009  
                                 ___aodiv@counter 0011                                  __size_of_lcd_dat 002A  
                                __size_of_lcd_cmd 002A                                  __size_of_lcd_str 0088  
                                        ___xxtofl 38FC                                  __size_of_isalpha 0046  
                                __size_of_isdigit 0042                                  __size_of_islower 0042  
                                __size_of_isspace 0060                                          __ptext10 6AD0  
                                        __ptext11 67DA                                          __ptext20 2E46  
                                        __ptext12 6798                                          __ptext21 7B70  
                                        __ptext13 681C                                          __ptext30 69A4  
                                        __ptext22 7D00                                          __ptext14 34AA  
                                        __ptext31 6756                                          __ptext23 6A04  
                                        __ptext15 73EA                                          __ptext40 6582  
                                        __ptext32 65D6                                          __ptext24 7304  
                                        __ptext16 76CC                                          __ptext41 3FF4  
                                        __ptext33 64AA                                          __ptext25 6948  
                                        __ptext17 75C4                                          __ptext50 2A5C  
                                        __ptext42 6F9E                                          __ptext34 6C22  
                                        __ptext26 68F8                                          __ptext18 3AF4  
                                        __ptext51 6862                                          __ptext43 64EA  
                                        __ptext35 706C                                          __ptext27 7222  
                                        __ptext19 36D6                                          __ptext60 68AC  
                                        __ptext52 1BDE                                          __ptext44 6E2A  
                                        __ptext36 6696                                          __ptext28 6474  
                                        __ptext61 38FC                                          __ptext53 66D2  
                                        __ptext45 647A                                          __ptext37 6D18  
                                        __ptext29 3CC8                                          __ptext62 77D6  
                                        __ptext54 2186                                          __ptext46 650C  
                                        __ptext38 65AC                                          __ptext63 74D4  
                                        __ptext55 78FE                                          __ptext47 6EDA  
                                        __ptext39 6C9A                                          __ptext64 6660  
                                        __ptext56 6600                                          __ptext48 262A  
                                        __ptext57 6486                                          __ptext49 6714  
                                        __ptext58 6558                                          __ptext59 7146  
                                __size_of_isupper 0042                  ??_state_translator_micro_to_fpga 0003  
                 ?_state_translator_micro_to_fpga 0001                            __size_of_get_reg_value 0010  
                              __end_of_init_PORTS 662C                                          _lcd_init 6C9A  
                              __end_of_init_USART 6756                                   _get_temperature 6BB0  
                                __size_of_strncmp 0108                                  __size_of_toupper 0070  
                                      ?_vsnprintf 0070                                     __size_of_atoi 01CE  
                                   __size_of_ctoa 0066                                     __size_of_main 077C  
                                   __size_of_dtoa 0334                                     __size_of_otoa 0226  
                                   __size_of_stoa 01D4                                     __size_of_utoa 022C  
                                     _joint_homed 01A9                                     __size_of_xtoa 0330  
                              __end_of_reach_goal 6C9A                                         stoa@F1152 00DE  
                          __size_of_rx_char_usart 006E                          __size_of_init_interrupts 000C  
                                        int$flags 007F                                  ??_serial_tx_char 0001  
                                        _vfprintf 6B40                     __size_of_turn_on_current_coil 003C  
                                  ?_wait_for_zero 0001                                          _snprintf 662C  
                                        lcd_str@i 0007                                       _mix_counter 01AB  
                                ___aomod@dividend 0001                                    _vfpfcnvrt$1688 0051  
                                  _vfpfcnvrt$1689 0053                                        _INTCONbits 000FF2  
                                        isalpha@c 0001                                          isdigit@c 0001  
                                     ??_init_ccp1 007F                      __end_of_update_pwm_duty_ccp1 6F9E  
                                      vsnprintf@f 00BC                                     _idle_msg_sent 01AF  
                                      vsnprintf@n 0072                                        vsnprintf@s 0070  
                                       snprintf@n 00C4                                         snprintf@s 00C2  
                                        intlevel2 0006                                          islower@c 0001  
                                        isspace@c 0001                                          isupper@c 0001  
                                       strncmp@_l 0001                                         strncmp@_r 0003  
                                   _get_reg_value 6486                                     init_stepper@i 000F  
                                 ___aomod@divisor 0009                                       ??_vfpfcnvrt 0049  
                                        stoa@nuls 000F                                   ___aomod@counter 0011  
                                  _vsnprintf$1555 00B8                           __end_of_get_temperature 6C22  
                                        strncmp@l 0008                                          strncmp@n 0005  
                                        strncmp@r 000A                                          toupper@c 0007  
                        init_stepper@step_counter 0005                                     _rx_char_usart 0008  
                       __size_of_change_direction 0036                                     ___fladd@signs 006B  
                   update_pwm_duty_ccp1@lsbs_duty 00DC                                      ___aodiv@sign 0012  
                                     ??_vsnprintf 0078                                      ___fladd@aexp 006C  
                                    ___fladd@bexp 006D                                      ___aomod@sign 0012  
                                     _roundf$2137 00BE                                       _roundf$2138 00B8  
