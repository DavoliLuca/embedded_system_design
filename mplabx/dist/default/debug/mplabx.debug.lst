

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Jun 08 19:04:11 2023

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    81                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    82  0000                     
    83                           ; Version 2.20
    84                           ; Generated 12/02/2020 GMT
    85                           ; 
    86                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F452 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     
   118                           	psect	idataBANK0
   119  006AD7                     __pidataBANK0:
   120                           	callstack 0
   121                           
   122                           ;initializer for stoa@F1152
   123  006AD7  28                 	db	40
   124  006AD8  6E                 	db	110
   125  006AD9  75                 	db	117
   126  006ADA  6C                 	db	108
   127  006ADB  6C                 	db	108
   128  006ADC  29                 	db	41
   129  006ADD  00                 	db	0
   130                           
   131                           ;initializer for _pwm_period
   132                           ;timer.c: 5: static double const f_osc = 1000000;;timer.c: 6: static double const t_osc 
      +                          = 1/f_osc;;timer.c: 7: static double pwm_period = 20e-3;
   133  006ADE  D70A               	dw	55050
   134  006AE0  3CA3               	dw	15523
   135                           
   136                           ;initializer for _tosc
   137  006AE2  37BD               	dw	14269
   138  006AE4  3486               	dw	13446
   139                           
   140                           ;initializer for _tmr2_prescaler
   141  006AE6  0000               	dw	0
   142  006AE8  4180               	dw	16768
   143                           
   144                           	psect	idataBANK1
   145  006AEA                     __pidataBANK1:
   146                           	callstack 0
   147                           
   148                           ;initializer for _state_msgs
   149  006AEA  43                 	db	low STR_1
   150  006AEB  7F                 	db	high STR_1
   151  006AEC  03                 	db	low STR_2
   152  006AED  7F                 	db	high STR_2
   153  006AEE  BA                 	db	low STR_3
   154  006AEF  7F                 	db	high STR_3
   155  006AF0  74                 	db	low STR_4
   156  006AF1  7F                 	db	high STR_4
   157  006AF2  B1                 	db	low STR_5
   158  006AF3  7F                 	db	high STR_5
   159  006AF4  C3                 	db	low STR_6
   160  006AF5  7F                 	db	high STR_6
   161                           
   162                           ;initializer for _hex_end_effector_values
   163  006AF6  0010               	dw	16
   164  006AF8  0020               	dw	32
   165  006AFA  0040               	dw	64
   166  006AFC  0080               	dw	128
   167                           
   168                           ;initializer for _hex_joint_values
   169  006AFE  0001               	dw	1
   170  006B00  0002               	dw	2
   171  006B02  0004               	dw	4
   172  006B04  0008               	dw	8
   173                           
   174                           	psect	mediumconst
   175  007EEE                     __pmediumconst:
   176                           	callstack 0
   177  007EEE  00                 	db	0
   178  007EEF  0000               	dw	0
   179  007EF1  4B00               	dw	19200
   180  007EF3                     __end_of_toint:
   181                           	callstack 0
   182  007EF3  0000               	dw	0
   183  007EF5  4616               	dw	17942
   184  007EF7                     __end_of_desired_baudrate:
   185                           	callstack 0
   186  007EF7  37BD               	dw	14269
   187  007EF9  3586               	dw	13702
   188  007EFB                     __end_of_t_osc:
   189                           	callstack 0
   190  007EFB  2400               	dw	9216
   191  007EFD  4974               	dw	18804
   192  007EFF                     __end_of_f_osc:
   193                           	callstack 0
   194  007EFF  2400               	dw	9216
   195  007F01  4A74               	dw	19060
   196  007F03                     __end_of_fosc:
   197                           	callstack 0
   198  0000                     _CCPR1L	set	4030
   199  0000                     _CCP1CONbits	set	4029
   200  0000                     _CCP1CON	set	4029
   201  0000                     _PR2	set	4043
   202  0000                     _T2CONbits	set	4042
   203  0000                     _TMR2	set	4044
   204  0000                     _T2CON	set	4042
   205  0000                     _TMR0H	set	4055
   206  0000                     _TMR0L	set	4054
   207  0000                     _PORTEbits	set	3972
   208  0000                     _PORTD	set	3971
   209  0000                     _TRISCbits	set	3988
   210  0000                     _PORTC	set	3970
   211  0000                     _LATC	set	3979
   212  0000                     _TRISB	set	3987
   213  0000                     _PORTB	set	3969
   214  0000                     _LATB	set	3978
   215  0000                     _TRISA	set	3986
   216  0000                     _PORTA	set	3968
   217  0000                     _LATA	set	3977
   218  0000                     _T0CON	set	4053
   219  0000                     _PIR1bits	set	3998
   220  0000                     _PIE1bits	set	3997
   221  0000                     _T0CONbits	set	4053
   222  0000                     _LATAbits	set	3977
   223  0000                     _INTCONbits	set	4082
   224  0000                     _RCREG	set	4014
   225  0000                     _TXREG	set	4013
   226  0000                     _RCSTAbits	set	4011
   227  0000                     _TXSTAbits	set	4012
   228  0000                     _SPBRG	set	4015
   229  007F03                     STR_2:
   230  007F03  49                 	db	73	;'I'
   231  007F04  4E                 	db	78	;'N'
   232  007F05  49                 	db	73	;'I'
   233  007F06  54                 	db	84	;'T'
   234  007F07  5F                 	db	95	;'_'
   235  007F08  50                 	db	80	;'P'
   236  007F09  4F                 	db	79	;'O'
   237  007F0A  53                 	db	83	;'S'
   238  007F0B  3A                 	db	58	;':'
   239  007F0C  20                 	db	32
   240  007F0D  74                 	db	116	;'t'
   241  007F0E  68                 	db	104	;'h'
   242  007F0F  65                 	db	101	;'e'
   243  007F10  20                 	db	32
   244  007F11  76                 	db	118	;'v'
   245  007F12  69                 	db	105	;'i'
   246  007F13  61                 	db	97	;'a'
   247  007F14  6C                 	db	108	;'l'
   248  007F15  20                 	db	32
   249  007F16  69                 	db	105	;'i'
   250  007F17  73                 	db	115	;'s'
   251  007F18  20                 	db	32
   252  007F19  61                 	db	97	;'a'
   253  007F1A  74                 	db	116	;'t'
   254  007F1B  20                 	db	32
   255  007F1C  74                 	db	116	;'t'
   256  007F1D  68                 	db	104	;'h'
   257  007F1E  65                 	db	101	;'e'
   258  007F1F  20                 	db	32
   259  007F20  69                 	db	105	;'i'
   260  007F21  6E                 	db	110	;'n'
   261  007F22  69                 	db	105	;'i'
   262  007F23  74                 	db	116	;'t'
   263  007F24  20                 	db	32
   264  007F25  70                 	db	112	;'p'
   265  007F26  6F                 	db	111	;'o'
   266  007F27  73                 	db	115	;'s'
   267  007F28  69                 	db	105	;'i'
   268  007F29  74                 	db	116	;'t'
   269  007F2A  69                 	db	105	;'i'
   270  007F2B  6F                 	db	111	;'o'
   271  007F2C  6E                 	db	110	;'n'
   272  007F2D  2C                 	db	44
   273  007F2E  20                 	db	32
   274  007F2F  70                 	db	112	;'p'
   275  007F30  72                 	db	114	;'r'
   276  007F31  6F                 	db	111	;'o'
   277  007F32  63                 	db	99	;'c'
   278  007F33  65                 	db	101	;'e'
   279  007F34  73                 	db	115	;'s'
   280  007F35  73                 	db	115	;'s'
   281  007F36  20                 	db	32
   282  007F37  69                 	db	105	;'i'
   283  007F38  73                 	db	115	;'s'
   284  007F39  20                 	db	32
   285  007F3A  73                 	db	115	;'s'
   286  007F3B  74                 	db	116	;'t'
   287  007F3C  61                 	db	97	;'a'
   288  007F3D  72                 	db	114	;'r'
   289  007F3E  74                 	db	116	;'t'
   290  007F3F  69                 	db	105	;'i'
   291  007F40  6E                 	db	110	;'n'
   292  007F41  67                 	db	103	;'g'
   293  007F42  00                 	db	0
   294  007F43                     STR_1:
   295  007F43  49                 	db	73	;'I'
   296  007F44  44                 	db	68	;'D'
   297  007F45  4C                 	db	76	;'L'
   298  007F46  45                 	db	69	;'E'
   299  007F47  3A                 	db	58	;':'
   300  007F48  20                 	db	32
   301  007F49  77                 	db	119	;'w'
   302  007F4A  61                 	db	97	;'a'
   303  007F4B  69                 	db	105	;'i'
   304  007F4C  74                 	db	116	;'t'
   305  007F4D  69                 	db	105	;'i'
   306  007F4E  6E                 	db	110	;'n'
   307  007F4F  67                 	db	103	;'g'
   308  007F50  20                 	db	32
   309  007F51  66                 	db	102	;'f'
   310  007F52  6F                 	db	111	;'o'
   311  007F53  72                 	db	114	;'r'
   312  007F54  20                 	db	32
   313  007F55  20                 	db	32
   314  007F56  76                 	db	118	;'v'
   315  007F57  69                 	db	105	;'i'
   316  007F58  61                 	db	97	;'a'
   317  007F59  6C                 	db	108	;'l'
   318  007F5A  20                 	db	32
   319  007F5B  74                 	db	116	;'t'
   320  007F5C  6F                 	db	111	;'o'
   321  007F5D  20                 	db	32
   322  007F5E  62                 	db	98	;'b'
   323  007F5F  65                 	db	101	;'e'
   324  007F60  20                 	db	32
   325  007F61  70                 	db	112	;'p'
   326  007F62  6C                 	db	108	;'l'
   327  007F63  61                 	db	97	;'a'
   328  007F64  63                 	db	99	;'c'
   329  007F65  65                 	db	101	;'e'
   330  007F66  64                 	db	100	;'d'
   331  007F67  20                 	db	32
   332  007F68  69                 	db	105	;'i'
   333  007F69  6E                 	db	110	;'n'
   334  007F6A  20                 	db	32
   335  007F6B  69                 	db	105	;'i'
   336  007F6C  6E                 	db	110	;'n'
   337  007F6D  69                 	db	105	;'i'
   338  007F6E  74                 	db	116	;'t'
   339  007F6F  20                 	db	32
   340  007F70  70                 	db	112	;'p'
   341  007F71  6F                 	db	111	;'o'
   342  007F72  73                 	db	115	;'s'
   343  007F73  00                 	db	0
   344  007F74                     STR_4:
   345  007F74  4F                 	db	79	;'O'
   346  007F75  56                 	db	86	;'V'
   347  007F76  45                 	db	69	;'E'
   348  007F77  4E                 	db	78	;'N'
   349  007F78  3A                 	db	58	;':'
   350  007F79  20                 	db	32
   351  007F7A  72                 	db	114	;'r'
   352  007F7B  65                 	db	101	;'e'
   353  007F7C  61                 	db	97	;'a'
   354  007F7D  63                 	db	99	;'c'
   355  007F7E  68                 	db	104	;'h'
   356  007F7F  69                 	db	105	;'i'
   357  007F80  6E                 	db	110	;'n'
   358  007F81  67                 	db	103	;'g'
   359  007F82  20                 	db	32
   360  007F83  74                 	db	116	;'t'
   361  007F84  68                 	db	104	;'h'
   362  007F85  65                 	db	101	;'e'
   363  007F86  20                 	db	32
   364  007F87  63                 	db	99	;'c'
   365  007F88  6F                 	db	111	;'o'
   366  007F89  72                 	db	114	;'r'
   367  007F8A  72                 	db	114	;'r'
   368  007F8B  65                 	db	101	;'e'
   369  007F8C  63                 	db	99	;'c'
   370  007F8D  74                 	db	116	;'t'
   371  007F8E  20                 	db	32
   372  007F8F  74                 	db	116	;'t'
   373  007F90  65                 	db	101	;'e'
   374  007F91  6D                 	db	109	;'m'
   375  007F92  70                 	db	112	;'p'
   376  007F93  65                 	db	101	;'e'
   377  007F94  72                 	db	114	;'r'
   378  007F95  61                 	db	97	;'a'
   379  007F96  74                 	db	116	;'t'
   380  007F97  75                 	db	117	;'u'
   381  007F98  72                 	db	114	;'r'
   382  007F99  65                 	db	101	;'e'
   383  007F9A  00                 	db	0
   384  007F9B                     STR_7:
   385  007F9B  44                 	db	68	;'D'
   386  007F9C  65                 	db	101	;'e'
   387  007F9D  76                 	db	118	;'v'
   388  007F9E  69                 	db	105	;'i'
   389  007F9F  63                 	db	99	;'c'
   390  007FA0  65                 	db	101	;'e'
   391  007FA1  20                 	db	32
   392  007FA2  68                 	db	104	;'h'
   393  007FA3  61                 	db	97	;'a'
   394  007FA4  73                 	db	115	;'s'
   395  007FA5  20                 	db	32
   396  007FA6  62                 	db	98	;'b'
   397  007FA7  65                 	db	101	;'e'
   398  007FA8  65                 	db	101	;'e'
   399  007FA9  6E                 	db	110	;'n'
   400  007FAA  20                 	db	32
   401  007FAB  72                 	db	114	;'r'
   402  007FAC  65                 	db	101	;'e'
   403  007FAD  73                 	db	115	;'s'
   404  007FAE  65                 	db	101	;'e'
   405  007FAF  74                 	db	116	;'t'
   406  007FB0  00                 	db	0
   407  007FB1                     STR_5:
   408  007FB1  47                 	db	71	;'G'
   409  007FB2  52                 	db	82	;'R'
   410  007FB3  41                 	db	65	;'A'
   411  007FB4  53                 	db	83	;'S'
   412  007FB5  50                 	db	80	;'P'
   413  007FB6  49                 	db	73	;'I'
   414  007FB7  4E                 	db	78	;'N'
   415  007FB8  47                 	db	71	;'G'
   416  007FB9  00                 	db	0
   417  007FBA                     STR_3:
   418  007FBA  4D                 	db	77	;'M'
   419  007FBB  4F                 	db	79	;'O'
   420  007FBC  56                 	db	86	;'V'
   421  007FBD  45                 	db	69	;'E'
   422  007FBE  4D                 	db	77	;'M'
   423  007FBF  45                 	db	69	;'E'
   424  007FC0  4E                 	db	78	;'N'
   425  007FC1  54                 	db	84	;'T'
   426  007FC2  00                 	db	0
   427  007FC3                     STR_6:
   428  007FC3  4D                 	db	77	;'M'
   429  007FC4  49                 	db	73	;'I'
   430  007FC5  58                 	db	88	;'X'
   431  007FC6  49                 	db	73	;'I'
   432  007FC7  4E                 	db	78	;'N'
   433  007FC8  47                 	db	71	;'G'
   434  007FC9  00                 	db	0
   435  007FCA                     STR_85:
   436  007FCA  68                 	db	104	;'h'
   437  007FCB  68                 	db	104	;'h'
   438  007FCC  58                 	db	88	;'X'
   439  007FCD  00                 	db	0
   440  007FCE                     STR_9:
   441  007FCE  68                 	db	104	;'h'
   442  007FCF  68                 	db	104	;'h'
   443  007FD0  64                 	db	100	;'d'
   444  007FD1  00                 	db	0
   445  007FD2                     STR_13:
   446  007FD2  68                 	db	104	;'h'
   447  007FD3  68                 	db	104	;'h'
   448  007FD4  69                 	db	105	;'i'
   449  007FD5  00                 	db	0
   450  007FD6                     STR_51:
   451  007FD6  68                 	db	104	;'h'
   452  007FD7  68                 	db	104	;'h'
   453  007FD8  6E                 	db	110	;'n'
   454  007FD9  00                 	db	0
   455  007FDA                     STR_36:
   456  007FDA  68                 	db	104	;'h'
   457  007FDB  68                 	db	104	;'h'
   458  007FDC  6F                 	db	111	;'o'
   459  007FDD  00                 	db	0
   460  007FDE                     STR_66:
   461  007FDE  68                 	db	104	;'h'
   462  007FDF  68                 	db	104	;'h'
   463  007FE0  75                 	db	117	;'u'
   464  007FE1  00                 	db	0
   465  007FE2                     STR_81:
   466  007FE2  68                 	db	104	;'h'
   467  007FE3  68                 	db	104	;'h'
   468  007FE4  78                 	db	120	;'x'
   469  007FE5  00                 	db	0
   470  007FE6                     STR_103:
   471  007FE6  7A                 	db	122	;'z'
   472  007FE7  58                 	db	88	;'X'
   473  007FE8  00                 	db	0
   474  007FE9                     STR_27:
   475  007FE9  7A                 	db	122	;'z'
   476  007FEA  64                 	db	100	;'d'
   477  007FEB  00                 	db	0
   478  007FEC                     STR_31:
   479  007FEC  7A                 	db	122	;'z'
   480  007FED  69                 	db	105	;'i'
   481  007FEE  00                 	db	0
   482  007FEF                     STR_61:
   483  007FEF  7A                 	db	122	;'z'
   484  007FF0  6E                 	db	110	;'n'
   485  007FF1  00                 	db	0
   486  007FF2                     STR_46:
   487  007FF2  7A                 	db	122	;'z'
   488  007FF3  6F                 	db	111	;'o'
   489  007FF4  00                 	db	0
   490  007FF5                     STR_76:
   491  007FF5  7A                 	db	122	;'z'
   492  007FF6  75                 	db	117	;'u'
   493  007FF7  00                 	db	0
   494  007FF8                     STR_99:
   495  007FF8  7A                 	db	122	;'z'
   496  007FF9  78                 	db	120	;'x'
   497  007FFA  00                 	db	0
   498  007FFB                     STR_8:
   499  007FFB  25                 	db	37
   500  007FFC  73                 	db	115	;'s'
   501  007FFD  00                 	db	0
   502  007FFE  00                 	db	0	; dummy byte at the end
   503  0000                     
   504                           ; #config settings
   505                           
   506                           	psect	cinit
   507  006FF4                     __pcinit:
   508                           	callstack 0
   509  006FF4                     start_initialization:
   510                           	callstack 0
   511  006FF4                     __initialization:
   512                           	callstack 0
   513                           
   514                           ; Initialize objects allocated to BANK1 (28 bytes)
   515                           ; load TBLPTR registers with __pidataBANK1
   516  006FF4  0EEA               	movlw	low __pidataBANK1
   517  006FF6  6EF6               	movwf	tblptrl,c
   518  006FF8  0E6A               	movlw	high __pidataBANK1
   519  006FFA  6EF7               	movwf	tblptrh,c
   520  006FFC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   521  006FFE  6EF8               	movwf	tblptru,c
   522  007000  EE01  F0C9         	lfsr	0,__pdataBANK1
   523  007004  EE10 F01C          	lfsr	1,28
   524  007008                     copy_data0:
   525  007008  0009               	tblrd		*+
   526  00700A  CFF5 FFEE          	movff	tablat,postinc0
   527  00700E  50E5               	movf	postdec1,w,c
   528  007010  50E1               	movf	fsr1l,w,c
   529  007012  E1FA               	bnz	copy_data0
   530                           
   531                           ; Initialize objects allocated to BANK0 (19 bytes)
   532                           ; load TBLPTR registers with __pidataBANK0
   533  007014  0ED7               	movlw	low __pidataBANK0
   534  007016  6EF6               	movwf	tblptrl,c
   535  007018  0E6A               	movlw	high __pidataBANK0
   536  00701A  6EF7               	movwf	tblptrh,c
   537  00701C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   538  00701E  6EF8               	movwf	tblptru,c
   539  007020  EE00  F0C8         	lfsr	0,__pdataBANK0
   540  007024  EE10 F013          	lfsr	1,19
   541  007028                     copy_data1:
   542  007028  0009               	tblrd		*+
   543  00702A  CFF5 FFEE          	movff	tablat,postinc0
   544  00702E  50E5               	movf	postdec1,w,c
   545  007030  50E1               	movf	fsr1l,w,c
   546  007032  E1FA               	bnz	copy_data1
   547                           
   548                           ; Clear objects allocated to BANK1 (40 bytes)
   549  007034  EE01  F0A1         	lfsr	0,__pbssBANK1
   550  007038  0E28               	movlw	40
   551  00703A                     clear_0:
   552  00703A  6AEE               	clrf	postinc0,c
   553  00703C  06E8               	decf	wreg,f,c
   554  00703E  E1FD               	bnz	clear_0
   555                           
   556                           ; Clear objects allocated to BANK0 (50 bytes)
   557  007040  EE00  F080         	lfsr	0,__pbssBANK0
   558  007044  0E32               	movlw	50
   559  007046                     clear_1:
   560  007046  6AEE               	clrf	postinc0,c
   561  007048  06E8               	decf	wreg,f,c
   562  00704A  E1FD               	bnz	clear_1
   563                           
   564                           ; Clear objects allocated to COMRAM (2 bytes)
   565  00704C  6A7E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   566  00704E  6A7D               	clrf	__pbssCOMRAM& (0+255),c
   567  007050                     end_of_initialization:
   568                           	callstack 0
   569  007050                     __end_of__initialization:
   570                           	callstack 0
   571  007050  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   572  007052  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   573  007054  0E00               	movlw	low (__Lmediumconst shr (0+16))
   574  007056  6EF8               	movwf	tblptru,c
   575  007058  0100               	movlb	0
   576  00705A  EF2C  F00A         	goto	_main	;jump to C main() function
   577                           
   578                           	psect	bssCOMRAM
   579  00007D                     __pbssCOMRAM:
   580                           	callstack 0
   581  00007D                     _flags:
   582                           	callstack 0
   583  00007D                     	ds	2
   584                           
   585                           	psect	bssBANK0
   586  000080                     __pbssBANK0:
   587                           	callstack 0
   588  000080                     roundf@F525:
   589                           	callstack 0
   590  000080                     	ds	4
   591  000084                     _nout:
   592                           	callstack 0
   593  000084                     	ds	2
   594  000086                     _width:
   595                           	callstack 0
   596  000086                     	ds	2
   597  000088                     _prec:
   598                           	callstack 0
   599  000088                     	ds	2
   600  00008A                     _errno:
   601                           	callstack 0
   602  00008A                     	ds	2
   603  00008C                     _mix_step_counter:
   604                           	callstack 0
   605  00008C                     	ds	2
   606  00008E                     _mix_direction:
   607                           	callstack 0
   608  00008E                     	ds	2
   609  000090                     _mix_current_step:
   610                           	callstack 0
   611  000090                     	ds	2
   612  000092                     _dbuf:
   613                           	callstack 0
   614  000092                     	ds	32
   615                           
   616                           	psect	dataBANK0
   617  0000C8                     __pdataBANK0:
   618                           	callstack 0
   619  0000C8                     stoa@F1152:
   620                           	callstack 0
   621  0000C8                     	ds	7
   622  0000CF                     	ds	4
   623  0000D3                     	ds	4
   624  0000D7                     _tmr2_prescaler:
   625                           	callstack 0
   626  0000D7                     	ds	4
   627                           
   628                           	psect	bssBANK1
   629  0001A1                     __pbssBANK1:
   630                           	callstack 0
   631  0001A1                     _end_effector_homed:
   632                           	callstack 0
   633  0001A1                     	ds	2
   634  0001A3                     _joint_homed:
   635                           	callstack 0
   636  0001A3                     	ds	2
   637  0001A5                     _mix_counter:
   638                           	callstack 0
   639  0001A5                     	ds	2
   640  0001A7                     _timer_done:
   641                           	callstack 0
   642  0001A7                     	ds	1
   643  0001A8                     _read_new_char:
   644                           	callstack 0
   645  0001A8                     	ds	1
   646  0001A9                     _msg_sent:
   647                           	callstack 0
   648  0001A9                     	ds	1
   649  0001AA                     _state_changed:
   650                           	callstack 0
   651  0001AA                     	ds	1
   652  0001AB                     _end_effector_stepper:
   653                           	callstack 0
   654  0001AB                     	ds	14
   655  0001B9                     _joint_stepper:
   656                           	callstack 0
   657  0001B9                     	ds	14
   658  0001C7                     _state:
   659                           	callstack 0
   660  0001C7                     	ds	2
   661                           
   662                           	psect	dataBANK1
   663  0001C9                     __pdataBANK1:
   664                           	callstack 0
   665  0001C9                     _state_msgs:
   666                           	callstack 0
   667  0001C9                     	ds	12
   668  0001D5                     _hex_end_effector_values:
   669                           	callstack 0
   670  0001D5                     	ds	8
   671  0001DD                     _hex_joint_values:
   672                           	callstack 0
   673  0001DD                     	ds	8
   674                           
   675                           	psect	cstackBANK1
   676  000100                     __pcstackBANK1:
   677                           	callstack 0
   678  000100                     main@greet_str:
   679                           	callstack 0
   680                           
   681                           ; 160 bytes @ 0x0
   682  000100                     	ds	160
   683  0001A0                     main@rx_char:
   684                           	callstack 0
   685                           
   686                           ; 1 bytes @ 0xA0
   687  0001A0                     	ds	1
   688                           
   689                           	psect	cstackBANK0
   690  0000B2                     __pcstackBANK0:
   691                           	callstack 0
   692  0000B2                     _vsnprintf$1416:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x0
   696  0000B2                     	ds	2
   697  0000B4                     vsnprintf@cnt:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x2
   701  0000B4                     	ds	2
   702  0000B6                     vsnprintf@f:
   703                           	callstack 0
   704                           
   705                           ; 6 bytes @ 0x4
   706  0000B6                     	ds	6
   707  0000BC                     ?_snprintf:
   708                           	callstack 0
   709  0000BC                     snprintf@s:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0xA
   713  0000BC                     	ds	2
   714  0000BE                     snprintf@n:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0xC
   718  0000BE                     	ds	2
   719  0000C0                     snprintf@fmt:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0xE
   723  0000C0                     	ds	6
   724  0000C6                     snprintf@ap:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x14
   728  0000C6                     	ds	2
   729                           
   730                           	psect	cstackCOMRAM
   731  000001                     __pcstackCOMRAM:
   732                           	callstack 0
   733  000001                     ?_strlen:
   734                           	callstack 0
   735  000001                     ?_isupper:
   736                           	callstack 0
   737  000001                     ?_isalpha:
   738                           	callstack 0
   739  000001                     ?_isdigit:
   740                           	callstack 0
   741  000001                     ?_strncmp:
   742                           	callstack 0
   743  000001                     ?_isspace:
   744                           	callstack 0
   745  000001                     ?_islower:
   746                           	callstack 0
   747  000001                     ?___wmul:
   748                           	callstack 0
   749  000001                     ?___flmul:
   750                           	callstack 0
   751  000001                     ?___flneg:
   752                           	callstack 0
   753  000001                     ?___aodiv:
   754                           	callstack 0
   755  000001                     ?___aomod:
   756                           	callstack 0
   757  000001                     ?___lodiv:
   758                           	callstack 0
   759  000001                     ?___lomod:
   760                           	callstack 0
   761  000001                     serial_tx_char@val:
   762                           	callstack 0
   763  000001                     get_reg_value@rx_char:
   764                           	callstack 0
   765  000001                     lcd_wr@val:
   766                           	callstack 0
   767  000001                     state_translator_micro_to_fpga@state:
   768                           	callstack 0
   769  000001                     init_stepper@stepper_motor:
   770                           	callstack 0
   771  000001                     turn_on_current_coil@stepper_motor:
   772                           	callstack 0
   773  000001                     update_current_coil@stepper_motor:
   774                           	callstack 0
   775  000001                     change_direction@stepper_motor:
   776                           	callstack 0
   777  000001                     ___wmul@multiplier:
   778                           	callstack 0
   779  000001                     isalpha@c:
   780                           	callstack 0
   781  000001                     isdigit@c:
   782                           	callstack 0
   783  000001                     isspace@c:
   784                           	callstack 0
   785  000001                     isupper@c:
   786                           	callstack 0
   787  000001                     fputc@c:
   788                           	callstack 0
   789  000001                     strlen@s:
   790                           	callstack 0
   791  000001                     strncmp@_l:
   792                           	callstack 0
   793  000001                     islower@c:
   794                           	callstack 0
   795  000001                     ___flge@ff1:
   796                           	callstack 0
   797  000001                     ___flneg@f1:
   798                           	callstack 0
   799  000001                     ___flmul@b:
   800                           	callstack 0
   801  000001                     ___aodiv@dividend:
   802                           	callstack 0
   803  000001                     ___aomod@dividend:
   804                           	callstack 0
   805  000001                     ___lodiv@dividend:
   806                           	callstack 0
   807  000001                     ___lomod@dividend:
   808                           	callstack 0
   809                           
   810                           ; 8 bytes @ 0x0
   811  000001                     	ds	1
   812  000002                     lcd_cmd@val:
   813                           	callstack 0
   814  000002                     lcd_dat@val:
   815                           	callstack 0
   816                           
   817                           ; 1 bytes @ 0x1
   818  000002                     	ds	1
   819  000003                     ??_lcd_init:
   820  000003                     ??_change_direction:
   821  000003                     ??_isupper:
   822  000003                     ??_isalpha:
   823  000003                     ??_isdigit:
   824  000003                     ??_isspace:
   825  000003                     ??_islower:
   826  000003                     ??_turn_on_current_coil:
   827  000003                     ??_update_current_coil:
   828  000003                     lcd_str@str:
   829                           	callstack 0
   830  000003                     state_translator_fpga_to_micro@state:
   831                           	callstack 0
   832  000003                     init_stepper@current_coil:
   833                           	callstack 0
   834  000003                     ___wmul@multiplicand:
   835                           	callstack 0
   836  000003                     fputc@fp:
   837                           	callstack 0
   838  000003                     strlen@a:
   839                           	callstack 0
   840  000003                     strncmp@_r:
   841                           	callstack 0
   842                           
   843                           ; 2 bytes @ 0x2
   844  000003                     	ds	2
   845  000005                     ??_lcd_str:
   846  000005                     ??_fputc:
   847  000005                     state_translator_fpga_to_micro@state_machine_code:
   848                           	callstack 0
   849  000005                     state_translator_micro_to_fpga@state_machine_code:
   850                           	callstack 0
   851  000005                     init_stepper@step_counter:
   852                           	callstack 0
   853  000005                     ___wmul@product:
   854                           	callstack 0
   855  000005                     strncmp@n:
   856                           	callstack 0
   857  000005                     ___flge@ff2:
   858                           	callstack 0
   859  000005                     ___flmul@a:
   860                           	callstack 0
   861                           
   862                           ; 4 bytes @ 0x4
   863  000005                     	ds	2
   864  000007                     ??_strncmp:
   865  000007                     ?_reach_goal:
   866                           	callstack 0
   867  000007                     ?_toupper:
   868                           	callstack 0
   869  000007                     lcd_str@i:
   870                           	callstack 0
   871  000007                     _isspace$1706:
   872                           	callstack 0
   873  000007                     init_stepper@direction:
   874                           	callstack 0
   875  000007                     reach_goal@stepper_motor:
   876                           	callstack 0
   877  000007                     toupper@c:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x6
   881  000007                     	ds	1
   882  000008                     ?_atoi:
   883                           	callstack 0
   884  000008                     atoi@s:
   885                           	callstack 0
   886  000008                     strncmp@l:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x7
   890  000008                     	ds	1
   891  000009                     ??___flmul:
   892  000009                     ??_toupper:
   893  000009                     ??___flge:
   894  000009                     init_stepper@hex_coil_register_values:
   895                           	callstack 0
   896  000009                     reach_goal@goal_to_reach:
   897                           	callstack 0
   898  000009                     ___aodiv@divisor:
   899                           	callstack 0
   900  000009                     ___aomod@divisor:
   901                           	callstack 0
   902  000009                     ___lodiv@divisor:
   903                           	callstack 0
   904  000009                     ___lomod@divisor:
   905                           	callstack 0
   906                           
   907                           ; 8 bytes @ 0x8
   908  000009                     	ds	1
   909  00000A                     ??_atoi:
   910  00000A                     ?_stoa:
   911                           	callstack 0
   912  00000A                     stoa@fp:
   913                           	callstack 0
   914  00000A                     fputs@s:
   915                           	callstack 0
   916  00000A                     strncmp@r:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x9
   920  00000A                     	ds	1
   921  00000B                     ??_init_stepper:
   922  00000B                     ??_reach_goal:
   923                           
   924                           ; 1 bytes @ 0xA
   925  00000B                     	ds	1
   926  00000C                     stoa@s:
   927                           	callstack 0
   928  00000C                     fputs@fp:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0xB
   932  00000C                     	ds	1
   933  00000D                     ___flmul@sign:
   934                           	callstack 0
   935  00000D                     _toupper$1766:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0xC
   939  00000D                     	ds	1
   940  00000E                     ??_stoa:
   941  00000E                     fputs@c:
   942                           	callstack 0
   943  00000E                     atoi@neg:
   944                           	callstack 0
   945  00000E                     ___flmul@grs:
   946                           	callstack 0
   947                           
   948                           ; 4 bytes @ 0xD
   949  00000E                     	ds	1
   950  00000F                     init_stepper@i:
   951                           	callstack 0
   952  00000F                     fputs@i:
   953                           	callstack 0
   954  00000F                     stoa@nuls:
   955                           	callstack 0
   956                           
   957                           ; 7 bytes @ 0xE
   958  00000F                     	ds	1
   959  000010                     _atoi$1678:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0xF
   963  000010                     	ds	1
   964  000011                     ?_pad:
   965                           	callstack 0
   966  000011                     ___aodiv@counter:
   967                           	callstack 0
   968  000011                     ___aomod@counter:
   969                           	callstack 0
   970  000011                     ___lomod@counter:
   971                           	callstack 0
   972  000011                     pad@fp:
   973                           	callstack 0
   974  000011                     ___lodiv@quotient:
   975                           	callstack 0
   976                           
   977                           ; 8 bytes @ 0x10
   978  000011                     	ds	1
   979  000012                     ___aodiv@sign:
   980                           	callstack 0
   981  000012                     ___aomod@sign:
   982                           	callstack 0
   983  000012                     ___flmul@aexp:
   984                           	callstack 0
   985  000012                     _atoi$1680:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x11
   989  000012                     	ds	1
   990  000013                     ?_abs:
   991                           	callstack 0
   992  000013                     ___flmul@bexp:
   993                           	callstack 0
   994  000013                     pad@buf:
   995                           	callstack 0
   996  000013                     abs@a:
   997                           	callstack 0
   998  000013                     ___aodiv@quotient:
   999                           	callstack 0
  1000                           
  1001                           ; 8 bytes @ 0x12
  1002  000013                     	ds	1
  1003  000014                     _atoi$1679:
  1004                           	callstack 0
  1005  000014                     ___flmul@prod:
  1006                           	callstack 0
  1007                           
  1008                           ; 4 bytes @ 0x13
  1009  000014                     	ds	1
  1010  000015                     ??_abs:
  1011  000015                     pad@p:
  1012                           	callstack 0
  1013  000015                     atoi@n:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x14
  1017  000015                     	ds	1
  1018  000016                     stoa@i:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x15
  1022  000016                     	ds	1
  1023  000017                     ??_pad:
  1024                           
  1025                           ; 1 bytes @ 0x16
  1026  000017                     	ds	1
  1027  000018                     ___flmul@temp:
  1028                           	callstack 0
  1029  000018                     pad@i:
  1030                           	callstack 0
  1031  000018                     stoa@w:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x17
  1035  000018                     	ds	1
  1036  000019                     ___lodiv@counter:
  1037                           	callstack 0
  1038                           
  1039                           ; 1 bytes @ 0x18
  1040  000019                     	ds	1
  1041  00001A                     ?___fldiv:
  1042                           	callstack 0
  1043  00001A                     pad@w:
  1044                           	callstack 0
  1045  00001A                     stoa@cp:
  1046                           	callstack 0
  1047  00001A                     ___fldiv@b:
  1048                           	callstack 0
  1049                           
  1050                           ; 4 bytes @ 0x19
  1051  00001A                     	ds	2
  1052  00001C                     ?_ctoa:
  1053                           	callstack 0
  1054  00001C                     ?_dtoa:
  1055                           	callstack 0
  1056  00001C                     ?_otoa:
  1057                           	callstack 0
  1058  00001C                     ?_utoa:
  1059                           	callstack 0
  1060  00001C                     ?_xtoa:
  1061                           	callstack 0
  1062  00001C                     ctoa@fp:
  1063                           	callstack 0
  1064  00001C                     dtoa@fp:
  1065                           	callstack 0
  1066  00001C                     otoa@fp:
  1067                           	callstack 0
  1068  00001C                     stoa@p:
  1069                           	callstack 0
  1070  00001C                     utoa@fp:
  1071                           	callstack 0
  1072  00001C                     xtoa@fp:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x1B
  1076  00001C                     	ds	2
  1077  00001E                     ctoa@c:
  1078                           	callstack 0
  1079  00001E                     stoa@l:
  1080                           	callstack 0
  1081  00001E                     ___fldiv@a:
  1082                           	callstack 0
  1083  00001E                     dtoa@d:
  1084                           	callstack 0
  1085  00001E                     otoa@d:
  1086                           	callstack 0
  1087  00001E                     utoa@d:
  1088                           	callstack 0
  1089  00001E                     xtoa@d:
  1090                           	callstack 0
  1091                           
  1092                           ; 8 bytes @ 0x1D
  1093  00001E                     	ds	1
  1094  00001F                     ctoa@w:
  1095                           	callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x1E
  1098  00001F                     	ds	3
  1099  000022                     ??___fldiv:
  1100                           
  1101                           ; 1 bytes @ 0x21
  1102  000022                     	ds	4
  1103  000026                     ??_dtoa:
  1104  000026                     ??_otoa:
  1105  000026                     ??_utoa:
  1106  000026                     xtoa@x:
  1107                           	callstack 0
  1108  000026                     ___fldiv@rem:
  1109                           	callstack 0
  1110                           
  1111                           ; 4 bytes @ 0x25
  1112  000026                     	ds	1
  1113  000027                     ??_xtoa:
  1114                           
  1115                           ; 1 bytes @ 0x26
  1116  000027                     	ds	3
  1117  00002A                     ___fldiv@sign:
  1118                           	callstack 0
  1119                           
  1120                           ; 1 bytes @ 0x29
  1121  00002A                     	ds	1
  1122  00002B                     ___fldiv@new_exp:
  1123                           	callstack 0
  1124                           
  1125                           ; 2 bytes @ 0x2A
  1126  00002B                     	ds	2
  1127  00002D                     ___fldiv@grs:
  1128                           	callstack 0
  1129                           
  1130                           ; 4 bytes @ 0x2C
  1131  00002D                     	ds	1
  1132  00002E                     _dtoa$1502:
  1133                           	callstack 0
  1134  00002E                     otoa@p:
  1135                           	callstack 0
  1136  00002E                     utoa@p:
  1137                           	callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x2D
  1140  00002E                     	ds	1
  1141  00002F                     _xtoa$1538:
  1142                           	callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x2E
  1145  00002F                     	ds	1
  1146  000030                     dtoa@p:
  1147                           	callstack 0
  1148  000030                     otoa@t:
  1149                           	callstack 0
  1150  000030                     utoa@w:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x2F
  1154  000030                     	ds	1
  1155  000031                     ___fldiv@bexp:
  1156                           	callstack 0
  1157  000031                     _xtoa$1539:
  1158                           	callstack 0
  1159                           
  1160                           ; 2 bytes @ 0x30
  1161  000031                     	ds	1
  1162  000032                     ___fldiv@aexp:
  1163                           	callstack 0
  1164  000032                     dtoa@w:
  1165                           	callstack 0
  1166  000032                     otoa@w:
  1167                           	callstack 0
  1168  000032                     utoa@n:
  1169                           	callstack 0
  1170                           
  1171                           ; 8 bytes @ 0x31
  1172  000032                     	ds	1
  1173  000033                     ?___fladd:
  1174                           	callstack 0
  1175  000033                     xtoa@p:
  1176                           	callstack 0
  1177  000033                     ___fladd@b:
  1178                           	callstack 0
  1179                           
  1180                           ; 4 bytes @ 0x32
  1181  000033                     	ds	1
  1182  000034                     dtoa@s:
  1183                           	callstack 0
  1184  000034                     otoa@n:
  1185                           	callstack 0
  1186                           
  1187                           ; 8 bytes @ 0x33
  1188  000034                     	ds	1
  1189  000035                     xtoa@w:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x34
  1193  000035                     	ds	1
  1194  000036                     dtoa@n:
  1195                           	callstack 0
  1196                           
  1197                           ; 8 bytes @ 0x35
  1198  000036                     	ds	1
  1199  000037                     ___fladd@a:
  1200                           	callstack 0
  1201  000037                     xtoa@n:
  1202                           	callstack 0
  1203                           
  1204                           ; 8 bytes @ 0x36
  1205  000037                     	ds	3
  1206  00003A                     utoa@i:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x39
  1210  00003A                     	ds	1
  1211  00003B                     ??___fladd:
  1212                           
  1213                           ; 1 bytes @ 0x3A
  1214  00003B                     	ds	1
  1215  00003C                     otoa@i:
  1216                           	callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x3B
  1219  00003C                     	ds	2
  1220  00003E                     dtoa@i:
  1221                           	callstack 0
  1222                           
  1223                           ; 2 bytes @ 0x3D
  1224  00003E                     	ds	1
  1225  00003F                     ___fladd@signs:
  1226                           	callstack 0
  1227  00003F                     xtoa@i:
  1228                           	callstack 0
  1229                           
  1230                           ; 2 bytes @ 0x3E
  1231  00003F                     	ds	1
  1232  000040                     ___fladd@aexp:
  1233                           	callstack 0
  1234                           
  1235                           ; 1 bytes @ 0x3F
  1236  000040                     	ds	1
  1237  000041                     ___fladd@bexp:
  1238                           	callstack 0
  1239  000041                     xtoa@c:
  1240                           	callstack 0
  1241                           
  1242                           ; 2 bytes @ 0x40
  1243  000041                     	ds	1
  1244  000042                     ___fladd@grs:
  1245                           	callstack 0
  1246                           
  1247                           ; 1 bytes @ 0x41
  1248  000042                     	ds	1
  1249  000043                     ?_vfpfcnvrt:
  1250                           	callstack 0
  1251  000043                     ?___flsub:
  1252                           	callstack 0
  1253  000043                     vfpfcnvrt@fp:
  1254                           	callstack 0
  1255  000043                     ___flsub@b:
  1256                           	callstack 0
  1257                           
  1258                           ; 4 bytes @ 0x42
  1259  000043                     	ds	2
  1260  000045                     vfpfcnvrt@fmt:
  1261                           	callstack 0
  1262                           
  1263                           ; 2 bytes @ 0x44
  1264  000045                     	ds	2
  1265  000047                     vfpfcnvrt@ap:
  1266                           	callstack 0
  1267  000047                     ___flsub@a:
  1268                           	callstack 0
  1269                           
  1270                           ; 4 bytes @ 0x46
  1271  000047                     	ds	2
  1272  000049                     ??_vfpfcnvrt:
  1273                           
  1274                           ; 1 bytes @ 0x48
  1275  000049                     	ds	2
  1276  00004B                     ?_roundf:
  1277                           	callstack 0
  1278  00004B                     roundf@x:
  1279                           	callstack 0
  1280                           
  1281                           ; 4 bytes @ 0x4A
  1282  00004B                     	ds	2
  1283  00004D                     vfpfcnvrt@cp:
  1284                           	callstack 0
  1285                           
  1286                           ; 2 bytes @ 0x4C
  1287  00004D                     	ds	2
  1288  00004F                     ??_roundf:
  1289  00004F                     vfpfcnvrt@done:
  1290                           	callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x4E
  1293  00004F                     	ds	2
  1294  000051                     _vfpfcnvrt$1553:
  1295                           	callstack 0
  1296                           
  1297                           ; 2 bytes @ 0x50
  1298  000051                     	ds	2
  1299  000053                     _vfpfcnvrt$1554:
  1300                           	callstack 0
  1301  000053                     _roundf$2008:
  1302                           	callstack 0
  1303                           
  1304                           ; 4 bytes @ 0x52
  1305  000053                     	ds	2
  1306  000055                     vfpfcnvrt@ll:
  1307                           	callstack 0
  1308                           
  1309                           ; 8 bytes @ 0x54
  1310  000055                     	ds	2
  1311  000057                     roundf@e:
  1312                           	callstack 0
  1313                           
  1314                           ; 2 bytes @ 0x56
  1315  000057                     	ds	2
  1316  000059                     _roundf$2007:
  1317                           	callstack 0
  1318                           
  1319                           ; 4 bytes @ 0x58
  1320  000059                     	ds	4
  1321  00005D                     vfpfcnvrt@vp:
  1322                           	callstack 0
  1323  00005D                     roundf@u:
  1324                           	callstack 0
  1325                           
  1326                           ; 4 bytes @ 0x5C
  1327  00005D                     	ds	2
  1328  00005F                     vfpfcnvrt@c:
  1329                           	callstack 0
  1330                           
  1331                           ; 1 bytes @ 0x5E
  1332  00005F                     	ds	1
  1333  000060                     vfpfcnvrt@llu:
  1334                           	callstack 0
  1335                           
  1336                           ; 8 bytes @ 0x5F
  1337  000060                     	ds	1
  1338  000061                     roundf@y:
  1339                           	callstack 0
  1340                           
  1341                           ; 4 bytes @ 0x60
  1342  000061                     	ds	4
  1343  000065                     ?___fltol:
  1344                           	callstack 0
  1345  000065                     ___fltol@f1:
  1346                           	callstack 0
  1347                           
  1348                           ; 4 bytes @ 0x64
  1349  000065                     	ds	3
  1350  000068                     ?_vfprintf:
  1351                           	callstack 0
  1352  000068                     vfprintf@fp:
  1353                           	callstack 0
  1354                           
  1355                           ; 2 bytes @ 0x67
  1356  000068                     	ds	1
  1357  000069                     ??___fltol:
  1358                           
  1359                           ; 1 bytes @ 0x68
  1360  000069                     	ds	1
  1361  00006A                     vfprintf@fmt:
  1362                           	callstack 0
  1363                           
  1364                           ; 2 bytes @ 0x69
  1365  00006A                     	ds	2
  1366  00006C                     vfprintf@ap:
  1367                           	callstack 0
  1368                           
  1369                           ; 2 bytes @ 0x6B
  1370  00006C                     	ds	1
  1371  00006D                     ___fltol@sign1:
  1372                           	callstack 0
  1373                           
  1374                           ; 1 bytes @ 0x6C
  1375  00006D                     	ds	1
  1376  00006E                     ___fltol@exp1:
  1377                           	callstack 0
  1378  00006E                     vfprintf@cfmt:
  1379                           	callstack 0
  1380                           
  1381                           ; 2 bytes @ 0x6D
  1382  00006E                     	ds	1
  1383  00006F                     update_pwm_duty_ccp1@time_up:
  1384                           	callstack 0
  1385  00006F                     _init_timer_2$2006:
  1386                           	callstack 0
  1387                           
  1388                           ; 4 bytes @ 0x6E
  1389  00006F                     	ds	1
  1390  000070                     ?_vsnprintf:
  1391                           	callstack 0
  1392  000070                     vsnprintf@s:
  1393                           	callstack 0
  1394                           
  1395                           ; 2 bytes @ 0x6F
  1396  000070                     	ds	2
  1397  000072                     vsnprintf@n:
  1398                           	callstack 0
  1399                           
  1400                           ; 2 bytes @ 0x71
  1401  000072                     	ds	1
  1402  000073                     ??_update_pwm_duty_ccp1:
  1403                           
  1404                           ; 1 bytes @ 0x72
  1405  000073                     	ds	1
  1406  000074                     vsnprintf@fmt:
  1407                           	callstack 0
  1408                           
  1409                           ; 2 bytes @ 0x73
  1410  000074                     	ds	1
  1411  000075                     update_pwm_duty_ccp1@new_duty:
  1412                           	callstack 0
  1413                           
  1414                           ; 2 bytes @ 0x74
  1415  000075                     	ds	1
  1416  000076                     vsnprintf@ap:
  1417                           	callstack 0
  1418                           
  1419                           ; 2 bytes @ 0x75
  1420  000076                     	ds	1
  1421  000077                     update_pwm_duty_ccp1@lsbs_duty:
  1422                           	callstack 0
  1423                           
  1424                           ; 1 bytes @ 0x76
  1425  000077                     	ds	1
  1426  000078                     ??_vsnprintf:
  1427                           
  1428                           ; 1 bytes @ 0x77
  1429  000078                     	ds	4
  1430  00007C                     ??_main:
  1431                           
  1432                           ; 1 bytes @ 0x7B
  1433  00007C                     	ds	1
  1434                           
  1435 ;;
  1436 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1437 ;;
  1438 ;; *************** function _main *****************
  1439 ;; Defined at:
  1440 ;;		line 54 in file "main.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;		None
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;  greet_str     160    0[BANK1 ] PTR const unsigned char 
  1445 ;;		 -> ?_snprintf(2), STR_6(7), STR_5(9), STR_4(39), 
  1446 ;;		 -> STR_3(9), STR_2(64), STR_1(49), 
  1447 ;;  rx_char         1  160[BANK1 ] unsigned char 
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      void 
  1450 ;; Registers used:
  1451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1457 ;;      Params:         0       0       0       0       0       0       0
  1458 ;;      Locals:         0       0     161       0       0       0       0
  1459 ;;      Temps:          1       0       0       0       0       0       0
  1460 ;;      Totals:         1       0     161       0       0       0       0
  1461 ;;Total ram usage:      162 bytes
  1462 ;; Hardware stack levels required when called:   10
  1463 ;; This function calls:
  1464 ;;		___wmul
  1465 ;;		_change_direction
  1466 ;;		_get_reg_value
  1467 ;;		_init_PORTS
  1468 ;;		_init_USART
  1469 ;;		_init_ccp1
  1470 ;;		_init_interrupts
  1471 ;;		_init_stepper
  1472 ;;		_init_timer_0
  1473 ;;		_init_timer_2
  1474 ;;		_lcd_cmd
  1475 ;;		_lcd_init
  1476 ;;		_lcd_str
  1477 ;;		_reach_goal
  1478 ;;		_serial_tx_char
  1479 ;;		_snprintf
  1480 ;;		_state_translator_fpga_to_micro
  1481 ;;		_state_translator_micro_to_fpga
  1482 ;; This function is called by:
  1483 ;;		Startup code after reset
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           	psect	text0
  1488  001458                     __ptext0:
  1489                           	callstack 0
  1490  001458                     _main:
  1491                           	callstack 21
  1492  001458  FFFF               	dw	65535	; assembler added errata NOP
  1493                           
  1494                           ;main.c: 56:     init_PORTS();
  1495  00145A  ECF4  F035         	call	_init_PORTS	;wreg free
  1496  00145E                     
  1497                           ;main.c: 57:     init_USART();
  1498  00145E  EC5D  F036         	call	_init_USART	;wreg free
  1499  001462                     
  1500                           ;main.c: 58:     init_timer_2();
  1501  001462  EC17  F03A         	call	_init_timer_2	;wreg free
  1502  001466                     
  1503                           ;main.c: 59:     init_ccp1();
  1504  001466  EC93  F035         	call	_init_ccp1	;wreg free
  1505  00146A                     
  1506                           ;main.c: 60:     init_interrupts();
  1507  00146A  EC57  F035         	call	_init_interrupts	;wreg free
  1508  00146E                     
  1509                           ;main.c: 61:     init_stepper(&joint_stepper, 0, 0, 1, hex_joint_values);
  1510  00146E  0EB9               	movlw	low _joint_stepper
  1511  001470  6E01               	movwf	init_stepper@stepper_motor^0,c
  1512  001472  0E01               	movlw	high _joint_stepper
  1513  001474  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  1514  001476  0E00               	movlw	0
  1515  001478  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  1516  00147A  0E00               	movlw	0
  1517  00147C  6E03               	movwf	init_stepper@current_coil^0,c
  1518  00147E  0E00               	movlw	0
  1519  001480  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  1520  001482  0E00               	movlw	0
  1521  001484  6E05               	movwf	init_stepper@step_counter^0,c
  1522  001486  0E00               	movlw	0
  1523  001488  6E08               	movwf	(init_stepper@direction+1)^0,c
  1524  00148A  0E01               	movlw	1
  1525  00148C  6E07               	movwf	init_stepper@direction^0,c
  1526  00148E  0EDD               	movlw	low _hex_joint_values
  1527  001490  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  1528  001492  0E01               	movlw	high _hex_joint_values
  1529  001494  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  1530  001496  EC5E  F039         	call	_init_stepper	;wreg free
  1531  00149A                     
  1532                           ;main.c: 62:     init_stepper(&end_effector_stepper, 0, 0, 1, hex_end_effector_values);
  1533  00149A  0EAB               	movlw	low _end_effector_stepper
  1534  00149C  6E01               	movwf	init_stepper@stepper_motor^0,c
  1535  00149E  0E01               	movlw	high _end_effector_stepper
  1536  0014A0  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  1537  0014A2  0E00               	movlw	0
  1538  0014A4  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  1539  0014A6  0E00               	movlw	0
  1540  0014A8  6E03               	movwf	init_stepper@current_coil^0,c
  1541  0014AA  0E00               	movlw	0
  1542  0014AC  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  1543  0014AE  0E00               	movlw	0
  1544  0014B0  6E05               	movwf	init_stepper@step_counter^0,c
  1545  0014B2  0E00               	movlw	0
  1546  0014B4  6E08               	movwf	(init_stepper@direction+1)^0,c
  1547  0014B6  0E01               	movlw	1
  1548  0014B8  6E07               	movwf	init_stepper@direction^0,c
  1549  0014BA  0ED5               	movlw	low _hex_end_effector_values
  1550  0014BC  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  1551  0014BE  0E01               	movlw	high _hex_end_effector_values
  1552  0014C0  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  1553  0014C2  EC5E  F039         	call	_init_stepper	;wreg free
  1554  0014C6                     
  1555                           ;main.c: 63:     lcd_init();
  1556  0014C6  ECDB  F038         	call	_lcd_init	;wreg free
  1557  0014CA                     
  1558                           ;main.c: 64:     lcd_cmd(0x0C);
  1559  0014CA  0E0C               	movlw	12
  1560  0014CC  ECB5  F035         	call	_lcd_cmd
  1561  0014D0                     
  1562                           ;main.c: 66:     lcd_cmd(0x01);
  1563  0014D0  0E01               	movlw	1
  1564  0014D2  ECB5  F035         	call	_lcd_cmd
  1565  0014D6                     
  1566                           ;main.c: 67:     lcd_cmd(0x80);
  1567  0014D6  0E80               	movlw	128
  1568  0014D8  ECB5  F035         	call	_lcd_cmd
  1569  0014DC                     
  1570                           ;main.c: 68:     lcd_str("Device has been reset");
  1571  0014DC  0E9B               	movlw	low STR_7
  1572  0014DE  6E03               	movwf	lcd_str@str^0,c
  1573  0014E0  0E7F               	movlw	high STR_7
  1574  0014E2  6E04               	movwf	(lcd_str@str+1)^0,c
  1575  0014E4  EC1A  F039         	call	_lcd_str	;wreg free
  1576  0014E8                     
  1577                           ;main.c: 70:     (INTCONbits.GIE = 1);
  1578  0014E8  8EF2               	bsf	242,7,c	;volatile
  1579  0014EA                     
  1580                           ;main.c: 72:     mix_counter = 0;
  1581  0014EA  0E00               	movlw	0
  1582  0014EC  0101               	movlb	1	; () banked
  1583  0014EE  6FA6               	movwf	(_mix_counter+1)& (0+255),b
  1584  0014F0  0E00               	movlw	0
  1585  0014F2  6FA5               	movwf	_mix_counter& (0+255),b
  1586  0014F4                     l5204:
  1587  0014F4  FFFF               	dw	65535	; assembler added errata NOP
  1588                           
  1589                           ;main.c: 75:         if (state_changed){
  1590  0014F6  0101               	movlb	1	; () banked
  1591  0014F8  51AA               	movf	_state_changed& (0+255),w,b
  1592  0014FA  B4D8               	btfsc	status,2,c
  1593  0014FC  EF82  F00A         	goto	u6331
  1594  001500  EF85  F00A         	goto	u6330
  1595  001504                     u6331:
  1596  001504  FFFF               	dw	65535	; assembler added errata NOP
  1597  001506  EFDF  F00A         	goto	l5228
  1598  00150A                     u6330:
  1599  00150A  FFFF               	dw	65535	; assembler added errata NOP
  1600  00150C                     
  1601                           ; BSR set to: 1
  1602                           ;main.c: 76:             const char* greet_str[80];;main.c: 77:             if (read_new
      +                          _char){
  1603  00150C  51A8               	movf	_read_new_char& (0+255),w,b
  1604  00150E  B4D8               	btfsc	status,2,c
  1605  001510  EF8C  F00A         	goto	u6341
  1606  001514  EF8F  F00A         	goto	u6340
  1607  001518                     u6341:
  1608  001518  FFFF               	dw	65535	; assembler added errata NOP
  1609  00151A  EFB2  F00A         	goto	l5218
  1610  00151E                     u6340:
  1611  00151E  FFFF               	dw	65535	; assembler added errata NOP
  1612  001520                     
  1613                           ; BSR set to: 1
  1614                           ;main.c: 78:                 rx_char = get_reg_value();
  1615  001520  EC63  F035         	call	_get_reg_value	;wreg free
  1616  001524  0101               	movlb	1	; () banked
  1617  001526  6FA0               	movwf	main@rx_char& (0+255),b
  1618  001528                     
  1619                           ; BSR set to: 1
  1620                           ;main.c: 79:                 if (rx_char == 'u'){
  1621  001528  0E75               	movlw	117
  1622  00152A  19A0               	xorwf	main@rx_char& (0+255),w,b
  1623  00152C  A4D8               	btfss	status,2,c
  1624  00152E  EF9B  F00A         	goto	u6351
  1625  001532  EF9E  F00A         	goto	u6350
  1626  001536                     u6351:
  1627  001536  FFFF               	dw	65535	; assembler added errata NOP
  1628  001538  EFA2  F00A         	goto	l124
  1629  00153C                     u6350:
  1630  00153C  FFFF               	dw	65535	; assembler added errata NOP
  1631  00153E                     
  1632                           ; BSR set to: 1
  1633                           ;main.c: 80:                     serial_tx_char(rx_char);
  1634  00153E  51A0               	movf	main@rx_char& (0+255),w,b
  1635  001540  EC83  F035         	call	_serial_tx_char
  1636  001544                     l124:
  1637  001544  FFFF               	dw	65535	; assembler added errata NOP
  1638                           
  1639                           ;main.c: 82:                 serial_tx_char(rx_char);
  1640  001546  0101               	movlb	1	; () banked
  1641  001548  51A0               	movf	main@rx_char& (0+255),w,b
  1642  00154A  EC83  F035         	call	_serial_tx_char
  1643  00154E                     
  1644                           ;main.c: 83:                 state_translator_fpga_to_micro(rx_char, &state);
  1645  00154E  0EC7               	movlw	low _state
  1646  001550  6E03               	movwf	state_translator_fpga_to_micro@state^0,c
  1647  001552  0E01               	movlw	high _state
  1648  001554  6E04               	movwf	(state_translator_fpga_to_micro@state+1)^0,c
  1649  001556  0101               	movlb	1	; () banked
  1650  001558  51A0               	movf	main@rx_char& (0+255),w,b
  1651  00155A  EC41  F03C         	call	_state_translator_fpga_to_micro
  1652  00155E                     
  1653                           ;main.c: 84:                 read_new_char = 0;
  1654  00155E  0E00               	movlw	0
  1655  001560  0101               	movlb	1	; () banked
  1656  001562  6FA8               	movwf	_read_new_char& (0+255),b
  1657  001564                     l5218:
  1658  001564  FFFF               	dw	65535	; assembler added errata NOP
  1659                           
  1660                           ; BSR set to: 1
  1661                           ;main.c: 86:             snprintf(greet_str, sizeof(greet_str), "%s", state_msgs[state])
      +                          ;
  1662  001566  0E00               	movlw	low main@greet_str
  1663  001568  0100               	movlb	0	; () banked
  1664  00156A  6FBC               	movwf	snprintf@s& (0+255),b
  1665  00156C  0E01               	movlw	high main@greet_str
  1666  00156E  6FBD               	movwf	(snprintf@s+1)& (0+255),b
  1667  001570  0E00               	movlw	0
  1668  001572  6FBF               	movwf	(snprintf@n+1)& (0+255),b
  1669  001574  0EA0               	movlw	160
  1670  001576  6FBE               	movwf	snprintf@n& (0+255),b
  1671  001578  0EFB               	movlw	low STR_8
  1672  00157A  6FC0               	movwf	snprintf@fmt& (0+255),b
  1673  00157C  0E7F               	movlw	high STR_8
  1674  00157E  6FC1               	movwf	(snprintf@fmt+1)& (0+255),b
  1675  001580  90D8               	bcf	status,0,c
  1676  001582  0101               	movlb	1	; () banked
  1677  001584  35C7               	rlcf	_state& (0+255),w,b
  1678  001586  6ED9               	movwf	fsr2l,c
  1679  001588  35C8               	rlcf	(_state+1)& (0+255),w,b
  1680  00158A  6EDA               	movwf	fsr2h,c
  1681  00158C  0EC9               	movlw	low _state_msgs
  1682  00158E  26D9               	addwf	fsr2l,f,c
  1683  001590  0E01               	movlw	high _state_msgs
  1684  001592  22DA               	addwfc	fsr2h,f,c
  1685  001594  CFDE F0C2          	movff	postinc2,?_snprintf+6
  1686  001598  CFDD F0C3          	movff	postdec2,?_snprintf+7
  1687  00159C  EC0A  F036         	call	_snprintf	;wreg free
  1688  0015A0                     
  1689                           ;main.c: 87:             lcd_cmd(0x01);
  1690  0015A0  0E01               	movlw	1
  1691  0015A2  ECB5  F035         	call	_lcd_cmd
  1692  0015A6                     
  1693                           ;main.c: 88:             lcd_cmd(0x80);
  1694  0015A6  0E80               	movlw	128
  1695  0015A8  ECB5  F035         	call	_lcd_cmd
  1696  0015AC                     
  1697                           ;main.c: 89:             lcd_str(greet_str);
  1698  0015AC  0E00               	movlw	low main@greet_str
  1699  0015AE  6E03               	movwf	lcd_str@str^0,c
  1700  0015B0  0E01               	movlw	high main@greet_str
  1701  0015B2  6E04               	movwf	(lcd_str@str+1)^0,c
  1702  0015B4  EC1A  F039         	call	_lcd_str	;wreg free
  1703  0015B8                     
  1704                           ;main.c: 91:             state_changed = 0;
  1705  0015B8  0E00               	movlw	0
  1706  0015BA  0101               	movlb	1	; () banked
  1707  0015BC  6FAA               	movwf	_state_changed& (0+255),b
  1708  0015BE                     l5228:
  1709  0015BE  FFFF               	dw	65535	; assembler added errata NOP
  1710                           
  1711                           ; BSR set to: 1
  1712                           ;main.c: 95:         if (state == 2){
  1713  0015C0  0E02               	movlw	2
  1714  0015C2  19C7               	xorwf	_state& (0+255),w,b
  1715  0015C4  11C8               	iorwf	(_state+1)& (0+255),w,b
  1716  0015C6  A4D8               	btfss	status,2,c
  1717  0015C8  EFE8  F00A         	goto	u6361
  1718  0015CC  EFEB  F00A         	goto	u6360
  1719  0015D0                     u6361:
  1720  0015D0  FFFF               	dw	65535	; assembler added errata NOP
  1721  0015D2  EFEF  F00A         	goto	l125
  1722  0015D6                     u6360:
  1723  0015D6  FFFF               	dw	65535	; assembler added errata NOP
  1724  0015D8                     
  1725                           ; BSR set to: 1
  1726                           ;main.c: 96:             LATAbits.LATA1 = 1;
  1727  0015D8  8289               	bsf	137,1,c	;volatile
  1728                           
  1729                           ;main.c: 97:         } else {
  1730  0015DA  EF7A  F00A         	goto	l5204
  1731  0015DE                     l125:
  1732  0015DE  FFFF               	dw	65535	; assembler added errata NOP
  1733                           
  1734                           ; BSR set to: 1
  1735                           ;main.c: 98:             LATAbits.LATA1 = 0;
  1736  0015E0  9289               	bcf	137,1,c	;volatile
  1737  0015E2                     
  1738                           ; BSR set to: 1
  1739                           ;main.c: 99:             if (state == 0) {
  1740  0015E2  51C7               	movf	_state& (0+255),w,b
  1741  0015E4  11C8               	iorwf	(_state+1)& (0+255),w,b
  1742  0015E6  A4D8               	btfss	status,2,c
  1743  0015E8  EFF8  F00A         	goto	u6371
  1744  0015EC  EFFB  F00A         	goto	u6370
  1745  0015F0                     u6371:
  1746  0015F0  FFFF               	dw	65535	; assembler added errata NOP
  1747  0015F2  EF16  F00B         	goto	l5240
  1748  0015F6                     u6370:
  1749  0015F6  FFFF               	dw	65535	; assembler added errata NOP
  1750  0015F8                     
  1751                           ; BSR set to: 1
  1752                           ;main.c: 100:                 if (!msg_sent){
  1753  0015F8  51A9               	movf	_msg_sent& (0+255),w,b
  1754  0015FA  A4D8               	btfss	status,2,c
  1755  0015FC  EF02  F00B         	goto	u6381
  1756  001600  EF05  F00B         	goto	u6380
  1757  001604                     u6381:
  1758  001604  FFFF               	dw	65535	; assembler added errata NOP
  1759  001606  EF7A  F00A         	goto	l5204
  1760  00160A                     u6380:
  1761  00160A  FFFF               	dw	65535	; assembler added errata NOP
  1762  00160C                     
  1763                           ; BSR set to: 1
  1764                           ;main.c: 101:                     serial_tx_char(state_translator_micro_to_fpga(&state))
      +                          ;
  1765  00160C  0EC7               	movlw	low _state
  1766  00160E  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  1767  001610  0E01               	movlw	high _state
  1768  001612  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  1769  001614  ECBF  F03C         	call	_state_translator_micro_to_fpga	;wreg free
  1770  001618  EC83  F035         	call	_serial_tx_char
  1771  00161C                     
  1772                           ;main.c: 102:                     msg_sent = 1;
  1773  00161C  0E01               	movlw	1
  1774  00161E  0101               	movlb	1	; () banked
  1775  001620  6FA9               	movwf	_msg_sent& (0+255),b
  1776  001622  EF7A  F00A         	goto	l5204
  1777  001626                     l128:
  1778  001626  FFFF               	dw	65535	; assembler added errata NOP
  1779                           
  1780                           ; BSR set to: 1
  1781                           ;main.c: 104:             } else if (state == 1){
  1782  001628  EF7A  F00A         	goto	l5204
  1783  00162C                     l5240:
  1784  00162C  FFFF               	dw	65535	; assembler added errata NOP
  1785                           
  1786                           ; BSR set to: 1
  1787  00162E  05C7               	decf	_state& (0+255),w,b
  1788  001630  11C8               	iorwf	(_state+1)& (0+255),w,b
  1789  001632  A4D8               	btfss	status,2,c
  1790  001634  EF1E  F00B         	goto	u6391
  1791  001638  EF21  F00B         	goto	u6390
  1792  00163C                     u6391:
  1793  00163C  FFFF               	dw	65535	; assembler added errata NOP
  1794  00163E  EF32  F00B         	goto	l5246
  1795  001642                     u6390:
  1796  001642  FFFF               	dw	65535	; assembler added errata NOP
  1797  001644                     
  1798                           ; BSR set to: 1
  1799                           ;main.c: 105:                 state = 2;
  1800  001644  0E00               	movlw	0
  1801  001646  6FC8               	movwf	(_state+1)& (0+255),b
  1802  001648  0E02               	movlw	2
  1803  00164A  6FC7               	movwf	_state& (0+255),b
  1804                           
  1805                           ;main.c: 106:                 state_changed = 1;
  1806  00164C  0E01               	movlw	1
  1807  00164E  6FAA               	movwf	_state_changed& (0+255),b
  1808  001650                     
  1809                           ; BSR set to: 1
  1810                           ;main.c: 107:                 serial_tx_char(state_translator_micro_to_fpga(&state));
  1811  001650  0EC7               	movlw	low _state
  1812  001652  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  1813  001654  0E01               	movlw	high _state
  1814  001656  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  1815  001658  ECBF  F03C         	call	_state_translator_micro_to_fpga	;wreg free
  1816  00165C  EC83  F035         	call	_serial_tx_char
  1817                           
  1818                           ;main.c: 108:             } else if (state == 3){
  1819  001660  EF7A  F00A         	goto	l5204
  1820  001664                     l5246:
  1821  001664  FFFF               	dw	65535	; assembler added errata NOP
  1822                           
  1823                           ; BSR set to: 1
  1824  001666  0E03               	movlw	3
  1825  001668  19C7               	xorwf	_state& (0+255),w,b
  1826  00166A  11C8               	iorwf	(_state+1)& (0+255),w,b
  1827  00166C  A4D8               	btfss	status,2,c
  1828  00166E  EF3B  F00B         	goto	u6401
  1829  001672  EF3E  F00B         	goto	u6400
  1830  001676                     u6401:
  1831  001676  FFFF               	dw	65535	; assembler added errata NOP
  1832  001678  EF68  F00B         	goto	l5256
  1833  00167C                     u6400:
  1834  00167C  FFFF               	dw	65535	; assembler added errata NOP
  1835  00167E                     
  1836                           ; BSR set to: 1
  1837                           ;main.c: 109:                 if (timer_done){
  1838  00167E  51A7               	movf	_timer_done& (0+255),w,b
  1839  001680  B4D8               	btfsc	status,2,c
  1840  001682  EF45  F00B         	goto	u6411
  1841  001686  EF48  F00B         	goto	u6410
  1842  00168A                     u6411:
  1843  00168A  FFFF               	dw	65535	; assembler added errata NOP
  1844  00168C  EF59  F00B         	goto	l133
  1845  001690                     u6410:
  1846  001690  FFFF               	dw	65535	; assembler added errata NOP
  1847  001692                     
  1848                           ; BSR set to: 1
  1849                           ;main.c: 110:                     state = 2;
  1850  001692  0E00               	movlw	0
  1851  001694  6FC8               	movwf	(_state+1)& (0+255),b
  1852  001696  0E02               	movlw	2
  1853  001698  6FC7               	movwf	_state& (0+255),b
  1854                           
  1855                           ;main.c: 111:                     state_changed = 1;
  1856  00169A  0E01               	movlw	1
  1857  00169C  6FAA               	movwf	_state_changed& (0+255),b
  1858  00169E                     
  1859                           ; BSR set to: 1
  1860                           ;main.c: 112:                     serial_tx_char(state_translator_micro_to_fpga(&state))
      +                          ;
  1861  00169E  0EC7               	movlw	low _state
  1862  0016A0  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  1863  0016A2  0E01               	movlw	high _state
  1864  0016A4  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  1865  0016A6  ECBF  F03C         	call	_state_translator_micro_to_fpga	;wreg free
  1866  0016AA  EC83  F035         	call	_serial_tx_char
  1867                           
  1868                           ;main.c: 114:                 } else {
  1869  0016AE  EF7A  F00A         	goto	l5204
  1870  0016B2                     l133:
  1871  0016B2  FFFF               	dw	65535	; assembler added errata NOP
  1872                           
  1873                           ; BSR set to: 1
  1874                           ;main.c: 115:                     if (T0CONbits.TMR0ON == 0){
  1875  0016B4  BED5               	btfsc	213,7,c	;volatile
  1876  0016B6  EF5F  F00B         	goto	u6421
  1877  0016BA  EF62  F00B         	goto	u6420
  1878  0016BE                     u6421:
  1879  0016BE  FFFF               	dw	65535	; assembler added errata NOP
  1880  0016C0  EF13  F00B         	goto	l128
  1881  0016C4                     u6420:
  1882  0016C4  FFFF               	dw	65535	; assembler added errata NOP
  1883  0016C6                     l5254:
  1884  0016C6  FFFF               	dw	65535	; assembler added errata NOP
  1885                           
  1886                           ; BSR set to: 1
  1887                           ;main.c: 116:                         init_timer_0();
  1888  0016C8  ECA4  F035         	call	_init_timer_0	;wreg free
  1889  0016CC  EF7A  F00A         	goto	l5204
  1890  0016D0                     l5256:
  1891  0016D0  FFFF               	dw	65535	; assembler added errata NOP
  1892                           
  1893                           ; BSR set to: 1
  1894  0016D2  0E04               	movlw	4
  1895  0016D4  19C7               	xorwf	_state& (0+255),w,b
  1896  0016D6  11C8               	iorwf	(_state+1)& (0+255),w,b
  1897  0016D8  A4D8               	btfss	status,2,c
  1898  0016DA  EF71  F00B         	goto	u6431
  1899  0016DE  EF74  F00B         	goto	u6430
  1900  0016E2                     u6431:
  1901  0016E2  FFFF               	dw	65535	; assembler added errata NOP
  1902  0016E4  EF0D  F00C         	goto	l5278
  1903  0016E8                     u6430:
  1904  0016E8  FFFF               	dw	65535	; assembler added errata NOP
  1905  0016EA                     
  1906                           ; BSR set to: 1
  1907                           ;main.c: 120:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  1908  0016EA  0E03               	movlw	3
  1909  0016EC  6E7C               	movwf	??_main^0,c
  1910  0016EE  0EEC               	movlw	236
  1911  0016F0                     u6717:
  1912  0016F0  FFFF               	dw	65535	; errata NOP
  1913  0016F2  2EE8               	decfsz	wreg,f,c
  1914  0016F4  D7FD               	bra	u6717
  1915  0016F6  2E7C               	decfsz	??_main^0,f,c
  1916  0016F8  D7FB               	bra	u6717
  1917  0016FA                     
  1918                           ;main.c: 121:                 if (joint_homed && reach_goal(&joint_stepper, 50)){
  1919  0016FA  0101               	movlb	1	; () banked
  1920  0016FC  51A3               	movf	_joint_homed& (0+255),w,b
  1921  0016FE  11A4               	iorwf	(_joint_homed+1)& (0+255),w,b
  1922  001700  B4D8               	btfsc	status,2,c
  1923  001702  EF85  F00B         	goto	u6441
  1924  001706  EF88  F00B         	goto	u6440
  1925  00170A                     u6441:
  1926  00170A  FFFF               	dw	65535	; assembler added errata NOP
  1927  00170C  EFA3  F00B         	goto	l5266
  1928  001710                     u6440:
  1929  001710  FFFF               	dw	65535	; assembler added errata NOP
  1930  001712                     
  1931                           ; BSR set to: 1
  1932  001712  0EB9               	movlw	low _joint_stepper
  1933  001714  6E07               	movwf	reach_goal@stepper_motor^0,c
  1934  001716  0E01               	movlw	high _joint_stepper
  1935  001718  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  1936  00171A  0E00               	movlw	0
  1937  00171C  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  1938  00171E  0E32               	movlw	50
  1939  001720  6E09               	movwf	reach_goal@goal_to_reach^0,c
  1940  001722  EC9F  F038         	call	_reach_goal	;wreg free
  1941  001726  5007               	movf	?_reach_goal^0,w,c
  1942  001728  1008               	iorwf	(?_reach_goal+1)^0,w,c
  1943  00172A  B4D8               	btfsc	status,2,c
  1944  00172C  EF9A  F00B         	goto	u6451
  1945  001730  EF9D  F00B         	goto	u6450
  1946  001734                     u6451:
  1947  001734  FFFF               	dw	65535	; assembler added errata NOP
  1948  001736  EFA3  F00B         	goto	l5266
  1949  00173A                     u6450:
  1950  00173A  FFFF               	dw	65535	; assembler added errata NOP
  1951  00173C                     
  1952                           ;main.c: 122:                     joint_homed = 0;
  1953  00173C  0E00               	movlw	0
  1954  00173E  0101               	movlb	1	; () banked
  1955  001740  6FA4               	movwf	(_joint_homed+1)& (0+255),b
  1956  001742  0E00               	movlw	0
  1957  001744  6FA3               	movwf	_joint_homed& (0+255),b
  1958  001746                     l5266:
  1959  001746  FFFF               	dw	65535	; assembler added errata NOP
  1960                           
  1961                           ;main.c: 124:                 if (!joint_homed && end_effector_homed && reach_goal(&end_
      +                          effector_stepper, 100)){
  1962  001748  0101               	movlb	1	; () banked
  1963  00174A  51A3               	movf	_joint_homed& (0+255),w,b
  1964  00174C  11A4               	iorwf	(_joint_homed+1)& (0+255),w,b
  1965  00174E  A4D8               	btfss	status,2,c
  1966  001750  EFAC  F00B         	goto	u6461
  1967  001754  EFAF  F00B         	goto	u6460
  1968  001758                     u6461:
  1969  001758  FFFF               	dw	65535	; assembler added errata NOP
  1970  00175A  EFD5  F00B         	goto	l5274
  1971  00175E                     u6460:
  1972  00175E  FFFF               	dw	65535	; assembler added errata NOP
  1973  001760                     
  1974                           ; BSR set to: 1
  1975  001760  51A1               	movf	_end_effector_homed& (0+255),w,b
  1976  001762  11A2               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  1977  001764  B4D8               	btfsc	status,2,c
  1978  001766  EFB7  F00B         	goto	u6471
  1979  00176A  EFBA  F00B         	goto	u6470
  1980  00176E                     u6471:
  1981  00176E  FFFF               	dw	65535	; assembler added errata NOP
  1982  001770  EFD5  F00B         	goto	l5274
  1983  001774                     u6470:
  1984  001774  FFFF               	dw	65535	; assembler added errata NOP
  1985  001776                     
  1986                           ; BSR set to: 1
  1987  001776  0EAB               	movlw	low _end_effector_stepper
  1988  001778  6E07               	movwf	reach_goal@stepper_motor^0,c
  1989  00177A  0E01               	movlw	high _end_effector_stepper
  1990  00177C  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  1991  00177E  0E00               	movlw	0
  1992  001780  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  1993  001782  0E64               	movlw	100
  1994  001784  6E09               	movwf	reach_goal@goal_to_reach^0,c
  1995  001786  EC9F  F038         	call	_reach_goal	;wreg free
  1996  00178A  5007               	movf	?_reach_goal^0,w,c
  1997  00178C  1008               	iorwf	(?_reach_goal+1)^0,w,c
  1998  00178E  B4D8               	btfsc	status,2,c
  1999  001790  EFCC  F00B         	goto	u6481
  2000  001794  EFCF  F00B         	goto	u6480
  2001  001798                     u6481:
  2002  001798  FFFF               	dw	65535	; assembler added errata NOP
  2003  00179A  EFD5  F00B         	goto	l5274
  2004  00179E                     u6480:
  2005  00179E  FFFF               	dw	65535	; assembler added errata NOP
  2006  0017A0                     
  2007                           ;main.c: 125:                     end_effector_homed = 0;
  2008  0017A0  0E00               	movlw	0
  2009  0017A2  0101               	movlb	1	; () banked
  2010  0017A4  6FA2               	movwf	(_end_effector_homed+1)& (0+255),b
  2011  0017A6  0E00               	movlw	0
  2012  0017A8  6FA1               	movwf	_end_effector_homed& (0+255),b
  2013  0017AA                     l5274:
  2014  0017AA  FFFF               	dw	65535	; assembler added errata NOP
  2015                           
  2016                           ;main.c: 127:                 if (!end_effector_homed * !joint_homed){
  2017  0017AC  0101               	movlb	1	; () banked
  2018  0017AE  51A1               	movf	_end_effector_homed& (0+255),w,b
  2019  0017B0  11A2               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  2020  0017B2  B4D8               	btfsc	status,2,c
  2021  0017B4  EFDE  F00B         	goto	u6491
  2022  0017B8  EFE2  F00B         	goto	u6490
  2023  0017BC                     u6491:
  2024  0017BC  FFFF               	dw	65535	; assembler added errata NOP
  2025  0017BE  0E01               	movlw	1
  2026  0017C0  EFE4  F00B         	goto	u6500
  2027  0017C4                     u6490:
  2028  0017C4  FFFF               	dw	65535	; assembler added errata NOP
  2029  0017C6  0E00               	movlw	0
  2030  0017C8                     u6500:
  2031  0017C8  FFFF               	dw	65535	; assembler added errata NOP
  2032  0017CA  6E01               	movwf	___wmul@multiplier^0,c
  2033  0017CC  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2034  0017CE  51A3               	movf	_joint_homed& (0+255),w,b
  2035  0017D0  11A4               	iorwf	(_joint_homed+1)& (0+255),w,b
  2036  0017D2  B4D8               	btfsc	status,2,c
  2037  0017D4  EFEE  F00B         	goto	u6511
  2038  0017D8  EFF2  F00B         	goto	u6510
  2039  0017DC                     u6511:
  2040  0017DC  FFFF               	dw	65535	; assembler added errata NOP
  2041  0017DE  0E01               	movlw	1
  2042  0017E0  EFF4  F00B         	goto	u6520
  2043  0017E4                     u6510:
  2044  0017E4  FFFF               	dw	65535	; assembler added errata NOP
  2045  0017E6  0E00               	movlw	0
  2046  0017E8                     u6520:
  2047  0017E8  FFFF               	dw	65535	; assembler added errata NOP
  2048  0017EA  6E03               	movwf	___wmul@multiplicand^0,c
  2049  0017EC  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  2050  0017EE  ECDF  F035         	call	___wmul	;wreg free
  2051  0017F2  5001               	movf	?___wmul^0,w,c
  2052  0017F4  1002               	iorwf	(?___wmul+1)^0,w,c
  2053  0017F6  B4D8               	btfsc	status,2,c
  2054  0017F8  EF00  F00C         	goto	u6531
  2055  0017FC  EF03  F00C         	goto	u6530
  2056  001800                     u6531:
  2057  001800  FFFF               	dw	65535	; assembler added errata NOP
  2058  001802  EF7A  F00A         	goto	l5204
  2059  001806                     u6530:
  2060  001806  FFFF               	dw	65535	; assembler added errata NOP
  2061  001808                     
  2062                           ;main.c: 128:                     state = 5;
  2063  001808  0E00               	movlw	0
  2064  00180A  0101               	movlb	1	; () banked
  2065  00180C  6FC8               	movwf	(_state+1)& (0+255),b
  2066  00180E  0E05               	movlw	5
  2067  001810  6FC7               	movwf	_state& (0+255),b
  2068                           
  2069                           ;main.c: 129:                     state_changed = 1;
  2070  001812  0E01               	movlw	1
  2071  001814  6FAA               	movwf	_state_changed& (0+255),b
  2072  001816  EF7A  F00A         	goto	l5204
  2073  00181A                     l5278:
  2074  00181A  FFFF               	dw	65535	; assembler added errata NOP
  2075                           
  2076                           ; BSR set to: 1
  2077  00181C  0E05               	movlw	5
  2078  00181E  19C7               	xorwf	_state& (0+255),w,b
  2079  001820  11C8               	iorwf	(_state+1)& (0+255),w,b
  2080  001822  A4D8               	btfss	status,2,c
  2081  001824  EF16  F00C         	goto	u6541
  2082  001828  EF19  F00C         	goto	u6540
  2083  00182C                     u6541:
  2084  00182C  FFFF               	dw	65535	; assembler added errata NOP
  2085  00182E  EF7E  F00C         	goto	l5298
  2086  001832                     u6540:
  2087  001832  FFFF               	dw	65535	; assembler added errata NOP
  2088  001834                     
  2089                           ; BSR set to: 1
  2090                           ;main.c: 132:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2091  001834  0E03               	movlw	3
  2092  001836  6E7C               	movwf	??_main^0,c
  2093  001838  0EEC               	movlw	236
  2094  00183A                     u6727:
  2095  00183A  FFFF               	dw	65535	; errata NOP
  2096  00183C  2EE8               	decfsz	wreg,f,c
  2097  00183E  D7FD               	bra	u6727
  2098  001840  2E7C               	decfsz	??_main^0,f,c
  2099  001842  D7FB               	bra	u6727
  2100  001844                     
  2101                           ;main.c: 133:                 if (reach_goal(&joint_stepper, 100)) {
  2102  001844  0EB9               	movlw	low _joint_stepper
  2103  001846  6E07               	movwf	reach_goal@stepper_motor^0,c
  2104  001848  0E01               	movlw	high _joint_stepper
  2105  00184A  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2106  00184C  0E00               	movlw	0
  2107  00184E  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2108  001850  0E64               	movlw	100
  2109  001852  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2110  001854  EC9F  F038         	call	_reach_goal	;wreg free
  2111  001858  5007               	movf	?_reach_goal^0,w,c
  2112  00185A  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2113  00185C  B4D8               	btfsc	status,2,c
  2114  00185E  EF33  F00C         	goto	u6551
  2115  001862  EF36  F00C         	goto	u6550
  2116  001866                     u6551:
  2117  001866  FFFF               	dw	65535	; assembler added errata NOP
  2118  001868  EF40  F00C         	goto	l5288
  2119  00186C                     u6550:
  2120  00186C  FFFF               	dw	65535	; assembler added errata NOP
  2121  00186E                     
  2122                           ;main.c: 134:                     change_direction(&joint_stepper);
  2123  00186E  0EB9               	movlw	low _joint_stepper
  2124  001870  6E01               	movwf	change_direction@stepper_motor^0,c
  2125  001872  0E01               	movlw	high _joint_stepper
  2126  001874  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2127  001876  EC24  F036         	call	_change_direction	;wreg free
  2128  00187A                     
  2129                           ;main.c: 135:                     mix_counter++;
  2130  00187A  0101               	movlb	1	; () banked
  2131  00187C  4BA5               	infsnz	_mix_counter& (0+255),f,b
  2132  00187E  2BA6               	incf	(_mix_counter+1)& (0+255),f,b
  2133  001880                     l5288:
  2134  001880  FFFF               	dw	65535	; assembler added errata NOP
  2135                           
  2136                           ;main.c: 138:                 if (mix_counter >= 20){
  2137  001882  0101               	movlb	1	; () banked
  2138  001884  BFA6               	btfsc	(_mix_counter+1)& (0+255),7,b
  2139  001886  EF4E  F00C         	goto	u6561
  2140  00188A  51A6               	movf	(_mix_counter+1)& (0+255),w,b
  2141  00188C  E10A               	bnz	u6560
  2142  00188E  0E14               	movlw	20
  2143  001890  5DA5               	subwf	_mix_counter& (0+255),w,b
  2144  001892  A0D8               	btfss	status,0,c
  2145  001894  EF4E  F00C         	goto	u6561
  2146  001898  EF51  F00C         	goto	u6560
  2147  00189C                     u6561:
  2148  00189C  FFFF               	dw	65535	; assembler added errata NOP
  2149  00189E  EF7A  F00A         	goto	l5204
  2150  0018A2                     u6560:
  2151  0018A2  FFFF               	dw	65535	; assembler added errata NOP
  2152  0018A4                     
  2153                           ; BSR set to: 1
  2154                           ;main.c: 139:                     state = 6;
  2155  0018A4  0E00               	movlw	0
  2156  0018A6  6FC8               	movwf	(_state+1)& (0+255),b
  2157  0018A8  0E06               	movlw	6
  2158  0018AA  6FC7               	movwf	_state& (0+255),b
  2159                           
  2160                           ;main.c: 140:                     mix_counter = 0;
  2161  0018AC  0E00               	movlw	0
  2162  0018AE  6FA6               	movwf	(_mix_counter+1)& (0+255),b
  2163  0018B0  0E00               	movlw	0
  2164  0018B2  6FA5               	movwf	_mix_counter& (0+255),b
  2165  0018B4                     
  2166                           ; BSR set to: 1
  2167                           ;main.c: 141:                     init_stepper(&joint_stepper, 0, 0, 1, hex_joint_values
      +                          );
  2168  0018B4  0EB9               	movlw	low _joint_stepper
  2169  0018B6  6E01               	movwf	init_stepper@stepper_motor^0,c
  2170  0018B8  0E01               	movlw	high _joint_stepper
  2171  0018BA  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  2172  0018BC  0E00               	movlw	0
  2173  0018BE  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  2174  0018C0  0E00               	movlw	0
  2175  0018C2  6E03               	movwf	init_stepper@current_coil^0,c
  2176  0018C4  0E00               	movlw	0
  2177  0018C6  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  2178  0018C8  0E00               	movlw	0
  2179  0018CA  6E05               	movwf	init_stepper@step_counter^0,c
  2180  0018CC  0E00               	movlw	0
  2181  0018CE  6E08               	movwf	(init_stepper@direction+1)^0,c
  2182  0018D0  0E01               	movlw	1
  2183  0018D2  6E07               	movwf	init_stepper@direction^0,c
  2184  0018D4  0EDD               	movlw	low _hex_joint_values
  2185  0018D6  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  2186  0018D8  0E01               	movlw	high _hex_joint_values
  2187  0018DA  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  2188  0018DC  EC5E  F039         	call	_init_stepper	;wreg free
  2189  0018E0                     
  2190                           ;main.c: 142:                     change_direction(&joint_stepper);
  2191  0018E0  0EB9               	movlw	low _joint_stepper
  2192  0018E2  6E01               	movwf	change_direction@stepper_motor^0,c
  2193  0018E4  0E01               	movlw	high _joint_stepper
  2194  0018E6  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2195  0018E8  EC24  F036         	call	_change_direction	;wreg free
  2196  0018EC                     
  2197                           ;main.c: 143:                     change_direction(&end_effector_stepper);
  2198  0018EC  0EAB               	movlw	low _end_effector_stepper
  2199  0018EE  6E01               	movwf	change_direction@stepper_motor^0,c
  2200  0018F0  0E01               	movlw	high _end_effector_stepper
  2201  0018F2  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2202  0018F4  EC24  F036         	call	_change_direction	;wreg free
  2203  0018F8  EF7A  F00A         	goto	l5204
  2204  0018FC                     l5298:
  2205  0018FC  FFFF               	dw	65535	; assembler added errata NOP
  2206                           
  2207                           ; BSR set to: 1
  2208  0018FE  0E06               	movlw	6
  2209  001900  19C7               	xorwf	_state& (0+255),w,b
  2210  001902  11C8               	iorwf	(_state+1)& (0+255),w,b
  2211  001904  A4D8               	btfss	status,2,c
  2212  001906  EF87  F00C         	goto	u6571
  2213  00190A  EF8A  F00C         	goto	u6570
  2214  00190E                     u6571:
  2215  00190E  FFFF               	dw	65535	; assembler added errata NOP
  2216  001910  EF08  F00D         	goto	l5320
  2217  001914                     u6570:
  2218  001914  FFFF               	dw	65535	; assembler added errata NOP
  2219  001916                     
  2220                           ; BSR set to: 1
  2221                           ;main.c: 146:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2222  001916  0E03               	movlw	3
  2223  001918  6E7C               	movwf	??_main^0,c
  2224  00191A  0EEC               	movlw	236
  2225  00191C                     u6737:
  2226  00191C  FFFF               	dw	65535	; errata NOP
  2227  00191E  2EE8               	decfsz	wreg,f,c
  2228  001920  D7FD               	bra	u6737
  2229  001922  2E7C               	decfsz	??_main^0,f,c
  2230  001924  D7FB               	bra	u6737
  2231  001926                     
  2232                           ;main.c: 148:                 if (!end_effector_homed && reach_goal(&end_effector_steppe
      +                          r, 100)){
  2233  001926  0101               	movlb	1	; () banked
  2234  001928  51A1               	movf	_end_effector_homed& (0+255),w,b
  2235  00192A  11A2               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  2236  00192C  A4D8               	btfss	status,2,c
  2237  00192E  EF9B  F00C         	goto	u6581
  2238  001932  EF9E  F00C         	goto	u6580
  2239  001936                     u6581:
  2240  001936  FFFF               	dw	65535	; assembler added errata NOP
  2241  001938  EFB9  F00C         	goto	l5308
  2242  00193C                     u6580:
  2243  00193C  FFFF               	dw	65535	; assembler added errata NOP
  2244  00193E                     
  2245                           ; BSR set to: 1
  2246  00193E  0EAB               	movlw	low _end_effector_stepper
  2247  001940  6E07               	movwf	reach_goal@stepper_motor^0,c
  2248  001942  0E01               	movlw	high _end_effector_stepper
  2249  001944  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2250  001946  0E00               	movlw	0
  2251  001948  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2252  00194A  0E64               	movlw	100
  2253  00194C  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2254  00194E  EC9F  F038         	call	_reach_goal	;wreg free
  2255  001952  5007               	movf	?_reach_goal^0,w,c
  2256  001954  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2257  001956  B4D8               	btfsc	status,2,c
  2258  001958  EFB0  F00C         	goto	u6591
  2259  00195C  EFB3  F00C         	goto	u6590
  2260  001960                     u6591:
  2261  001960  FFFF               	dw	65535	; assembler added errata NOP
  2262  001962  EFB9  F00C         	goto	l5308
  2263  001966                     u6590:
  2264  001966  FFFF               	dw	65535	; assembler added errata NOP
  2265  001968                     
  2266                           ;main.c: 149:                     end_effector_homed = 1;
  2267  001968  0E00               	movlw	0
  2268  00196A  0101               	movlb	1	; () banked
  2269  00196C  6FA2               	movwf	(_end_effector_homed+1)& (0+255),b
  2270  00196E  0E01               	movlw	1
  2271  001970  6FA1               	movwf	_end_effector_homed& (0+255),b
  2272  001972                     l5308:
  2273  001972  FFFF               	dw	65535	; assembler added errata NOP
  2274                           
  2275                           ;main.c: 152:                 if (end_effector_homed && !joint_homed && reach_goal(&join
      +                          t_stepper, 50)){
  2276  001974  0101               	movlb	1	; () banked
  2277  001976  51A1               	movf	_end_effector_homed& (0+255),w,b
  2278  001978  11A2               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  2279  00197A  B4D8               	btfsc	status,2,c
  2280  00197C  EFC2  F00C         	goto	u6601
  2281  001980  EFC5  F00C         	goto	u6600
  2282  001984                     u6601:
  2283  001984  FFFF               	dw	65535	; assembler added errata NOP
  2284  001986  EFEB  F00C         	goto	l5316
  2285  00198A                     u6600:
  2286  00198A  FFFF               	dw	65535	; assembler added errata NOP
  2287  00198C                     
  2288                           ; BSR set to: 1
  2289  00198C  51A3               	movf	_joint_homed& (0+255),w,b
  2290  00198E  11A4               	iorwf	(_joint_homed+1)& (0+255),w,b
  2291  001990  A4D8               	btfss	status,2,c
  2292  001992  EFCD  F00C         	goto	u6611
  2293  001996  EFD0  F00C         	goto	u6610
  2294  00199A                     u6611:
  2295  00199A  FFFF               	dw	65535	; assembler added errata NOP
  2296  00199C  EFEB  F00C         	goto	l5316
  2297  0019A0                     u6610:
  2298  0019A0  FFFF               	dw	65535	; assembler added errata NOP
  2299  0019A2                     
  2300                           ; BSR set to: 1
  2301  0019A2  0EB9               	movlw	low _joint_stepper
  2302  0019A4  6E07               	movwf	reach_goal@stepper_motor^0,c
  2303  0019A6  0E01               	movlw	high _joint_stepper
  2304  0019A8  6E08               	movwf	(reach_goal@stepper_motor+1)^0,c
  2305  0019AA  0E00               	movlw	0
  2306  0019AC  6E0A               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2307  0019AE  0E32               	movlw	50
  2308  0019B0  6E09               	movwf	reach_goal@goal_to_reach^0,c
  2309  0019B2  EC9F  F038         	call	_reach_goal	;wreg free
  2310  0019B6  5007               	movf	?_reach_goal^0,w,c
  2311  0019B8  1008               	iorwf	(?_reach_goal+1)^0,w,c
  2312  0019BA  B4D8               	btfsc	status,2,c
  2313  0019BC  EFE2  F00C         	goto	u6621
  2314  0019C0  EFE5  F00C         	goto	u6620
  2315  0019C4                     u6621:
  2316  0019C4  FFFF               	dw	65535	; assembler added errata NOP
  2317  0019C6  EFEB  F00C         	goto	l5316
  2318  0019CA                     u6620:
  2319  0019CA  FFFF               	dw	65535	; assembler added errata NOP
  2320  0019CC                     
  2321                           ;main.c: 153:                     joint_homed = 1;
  2322  0019CC  0E00               	movlw	0
  2323  0019CE  0101               	movlb	1	; () banked
  2324  0019D0  6FA4               	movwf	(_joint_homed+1)& (0+255),b
  2325  0019D2  0E01               	movlw	1
  2326  0019D4  6FA3               	movwf	_joint_homed& (0+255),b
  2327  0019D6                     l5316:
  2328  0019D6  FFFF               	dw	65535	; assembler added errata NOP
  2329                           
  2330                           ;main.c: 156:                 if (end_effector_homed * joint_homed){
  2331  0019D8  C1A1  F001         	movff	_end_effector_homed,___wmul@multiplier
  2332  0019DC  C1A2  F002         	movff	_end_effector_homed+1,___wmul@multiplier+1
  2333  0019E0  C1A3  F003         	movff	_joint_homed,___wmul@multiplicand
  2334  0019E4  C1A4  F004         	movff	_joint_homed+1,___wmul@multiplicand+1
  2335  0019E8  ECDF  F035         	call	___wmul	;wreg free
  2336  0019EC  5001               	movf	?___wmul^0,w,c
  2337  0019EE  1002               	iorwf	(?___wmul+1)^0,w,c
  2338  0019F0  B4D8               	btfsc	status,2,c
  2339  0019F2  EFFD  F00C         	goto	u6631
  2340  0019F6  EF00  F00D         	goto	u6630
  2341  0019FA                     u6631:
  2342  0019FA  FFFF               	dw	65535	; assembler added errata NOP
  2343  0019FC  EF7A  F00A         	goto	l5204
  2344  001A00                     u6630:
  2345  001A00  FFFF               	dw	65535	; assembler added errata NOP
  2346  001A02                     
  2347                           ;main.c: 157:                     state = 7;
  2348  001A02  0E00               	movlw	0
  2349  001A04  0101               	movlb	1	; () banked
  2350  001A06  6FC8               	movwf	(_state+1)& (0+255),b
  2351  001A08  0E07               	movlw	7
  2352  001A0A  6FC7               	movwf	_state& (0+255),b
  2353  001A0C  EF7A  F00A         	goto	l5204
  2354  001A10                     l5320:
  2355  001A10  FFFF               	dw	65535	; assembler added errata NOP
  2356                           
  2357                           ; BSR set to: 1
  2358  001A12  0E07               	movlw	7
  2359  001A14  19C7               	xorwf	_state& (0+255),w,b
  2360  001A16  11C8               	iorwf	(_state+1)& (0+255),w,b
  2361  001A18  A4D8               	btfss	status,2,c
  2362  001A1A  EF11  F00D         	goto	u6641
  2363  001A1E  EF14  F00D         	goto	u6640
  2364  001A22                     u6641:
  2365  001A22  FFFF               	dw	65535	; assembler added errata NOP
  2366  001A24  EF13  F00B         	goto	l128
  2367  001A28                     u6640:
  2368  001A28  FFFF               	dw	65535	; assembler added errata NOP
  2369  001A2A                     
  2370                           ; BSR set to: 1
  2371                           ;main.c: 160:                 if (timer_done){
  2372  001A2A  51A7               	movf	_timer_done& (0+255),w,b
  2373  001A2C  B4D8               	btfsc	status,2,c
  2374  001A2E  EF1B  F00D         	goto	u6651
  2375  001A32  EF1E  F00D         	goto	u6650
  2376  001A36                     u6651:
  2377  001A36  FFFF               	dw	65535	; assembler added errata NOP
  2378  001A38  EF2F  F00D         	goto	l152
  2379  001A3C                     u6650:
  2380  001A3C  FFFF               	dw	65535	; assembler added errata NOP
  2381  001A3E                     
  2382                           ; BSR set to: 1
  2383                           ;main.c: 161:                     state = 2;
  2384  001A3E  0E00               	movlw	0
  2385  001A40  6FC8               	movwf	(_state+1)& (0+255),b
  2386  001A42  0E02               	movlw	2
  2387  001A44  6FC7               	movwf	_state& (0+255),b
  2388                           
  2389                           ;main.c: 162:                     state_changed = 1;
  2390  001A46  0E01               	movlw	1
  2391  001A48  6FAA               	movwf	_state_changed& (0+255),b
  2392  001A4A                     
  2393                           ; BSR set to: 1
  2394                           ;main.c: 163:                     serial_tx_char(state_translator_micro_to_fpga(&state))
      +                          ;
  2395  001A4A  0EC7               	movlw	low _state
  2396  001A4C  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  2397  001A4E  0E01               	movlw	high _state
  2398  001A50  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  2399  001A52  ECBF  F03C         	call	_state_translator_micro_to_fpga	;wreg free
  2400  001A56  EC83  F035         	call	_serial_tx_char
  2401                           
  2402                           ;main.c: 164:                 } else {
  2403  001A5A  EF7A  F00A         	goto	l5204
  2404  001A5E                     l152:
  2405  001A5E  FFFF               	dw	65535	; assembler added errata NOP
  2406                           
  2407                           ; BSR set to: 1
  2408                           ;main.c: 165:                     if (T0CONbits.TMR0ON == 0){
  2409  001A60  BED5               	btfsc	213,7,c	;volatile
  2410  001A62  EF35  F00D         	goto	u6661
  2411  001A66  EF38  F00D         	goto	u6660
  2412  001A6A                     u6661:
  2413  001A6A  FFFF               	dw	65535	; assembler added errata NOP
  2414  001A6C  EF13  F00B         	goto	l128
  2415  001A70                     u6660:
  2416  001A70  FFFF               	dw	65535	; assembler added errata NOP
  2417  001A72  EF63  F00B         	goto	l5254
  2418  001A76  EF3B  F000         	goto	start
  2419  001A7A                     __end_of_main:
  2420                           	callstack 0
  2421                           
  2422 ;; *************** function _state_translator_micro_to_fpga *****************
  2423 ;; Defined at:
  2424 ;;		line 19 in file "utils.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  state           2    0[COMRAM] PTR int 
  2427 ;;		 -> state(2), 
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;  state_machin    1    4[COMRAM] unsigned char 
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  1    wreg      unsigned char 
  2432 ;; Registers used:
  2433 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2439 ;;      Params:         2       0       0       0       0       0       0
  2440 ;;      Locals:         1       0       0       0       0       0       0
  2441 ;;      Temps:          2       0       0       0       0       0       0
  2442 ;;      Totals:         5       0       0       0       0       0       0
  2443 ;;Total ram usage:        5 bytes
  2444 ;; Hardware stack levels used:    1
  2445 ;; Hardware stack levels required when called:    1
  2446 ;; This function calls:
  2447 ;;		Nothing
  2448 ;; This function is called by:
  2449 ;;		_main
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           	psect	text1
  2454  00797E                     __ptext1:
  2455                           	callstack 0
  2456  00797E                     _state_translator_micro_to_fpga:
  2457                           	callstack 0
  2458  00797E  FFFF               	dw	65535	; assembler added errata NOP
  2459  007980                     
  2460                           ;utils.c: 20:     unsigned char state_machine_code;;utils.c: 21:     if (*state == 0){
  2461  007980  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2462  007984  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2463  007988  50DE               	movf	postinc2,w,c
  2464  00798A  10DE               	iorwf	postinc2,w,c
  2465  00798C  A4D8               	btfss	status,2,c
  2466  00798E  EFCB  F03C         	goto	u6251
  2467  007992  EFCE  F03C         	goto	u6250
  2468  007996                     u6251:
  2469  007996  FFFF               	dw	65535	; assembler added errata NOP
  2470  007998  EFD3  F03C         	goto	l5106
  2471  00799C                     u6250:
  2472  00799C  FFFF               	dw	65535	; assembler added errata NOP
  2473  00799E                     
  2474                           ;utils.c: 22:         state_machine_code = 0;
  2475  00799E  0E00               	movlw	0
  2476  0079A0  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2477                           
  2478                           ;utils.c: 23:     } else if (*state == 1){
  2479  0079A2  EF3B  F03D         	goto	l241
  2480  0079A6                     l5106:
  2481  0079A6  FFFF               	dw	65535	; assembler added errata NOP
  2482  0079A8  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2483  0079AC  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2484  0079B0  04DE               	decf	postinc2,w,c
  2485  0079B2  10DE               	iorwf	postinc2,w,c
  2486  0079B4  A4D8               	btfss	status,2,c
  2487  0079B6  EFDF  F03C         	goto	u6261
  2488  0079BA  EFE2  F03C         	goto	u6260
  2489  0079BE                     u6261:
  2490  0079BE  FFFF               	dw	65535	; assembler added errata NOP
  2491  0079C0  EFE7  F03C         	goto	l5110
  2492  0079C4                     u6260:
  2493  0079C4  FFFF               	dw	65535	; assembler added errata NOP
  2494  0079C6                     
  2495                           ;utils.c: 24:         state_machine_code = 'A';
  2496  0079C6  0E41               	movlw	65
  2497  0079C8  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2498                           
  2499                           ;utils.c: 25:     } else if (*state == 3){
  2500  0079CA  EF3B  F03D         	goto	l241
  2501  0079CE                     l5110:
  2502  0079CE  FFFF               	dw	65535	; assembler added errata NOP
  2503  0079D0  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2504  0079D4  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2505  0079D8  0E03               	movlw	3
  2506  0079DA  18DE               	xorwf	postinc2,w,c
  2507  0079DC  10DE               	iorwf	postinc2,w,c
  2508  0079DE  A4D8               	btfss	status,2,c
  2509  0079E0  EFF4  F03C         	goto	u6271
  2510  0079E4  EFF7  F03C         	goto	u6270
  2511  0079E8                     u6271:
  2512  0079E8  FFFF               	dw	65535	; assembler added errata NOP
  2513  0079EA  EFFC  F03C         	goto	l5114
  2514  0079EE                     u6270:
  2515  0079EE  FFFF               	dw	65535	; assembler added errata NOP
  2516  0079F0                     
  2517                           ;utils.c: 26:         state_machine_code = 'B';
  2518  0079F0  0E42               	movlw	66
  2519  0079F2  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2520                           
  2521                           ;utils.c: 27:     } else if (*state == 4){
  2522  0079F4  EF3B  F03D         	goto	l241
  2523  0079F8                     l5114:
  2524  0079F8  FFFF               	dw	65535	; assembler added errata NOP
  2525  0079FA  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2526  0079FE  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2527  007A02  0E04               	movlw	4
  2528  007A04  18DE               	xorwf	postinc2,w,c
  2529  007A06  10DE               	iorwf	postinc2,w,c
  2530  007A08  A4D8               	btfss	status,2,c
  2531  007A0A  EF09  F03D         	goto	u6281
  2532  007A0E  EF0C  F03D         	goto	u6280
  2533  007A12                     u6281:
  2534  007A12  FFFF               	dw	65535	; assembler added errata NOP
  2535  007A14  EF11  F03D         	goto	l5118
  2536  007A18                     u6280:
  2537  007A18  FFFF               	dw	65535	; assembler added errata NOP
  2538  007A1A                     
  2539                           ;utils.c: 28:         state_machine_code = 'D';
  2540  007A1A  0E44               	movlw	68
  2541  007A1C  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2542                           
  2543                           ;utils.c: 29:     } else if (*state == 5){
  2544  007A1E  EF3B  F03D         	goto	l241
  2545  007A22                     l5118:
  2546  007A22  FFFF               	dw	65535	; assembler added errata NOP
  2547  007A24  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2548  007A28  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2549  007A2C  0E05               	movlw	5
  2550  007A2E  18DE               	xorwf	postinc2,w,c
  2551  007A30  10DE               	iorwf	postinc2,w,c
  2552  007A32  A4D8               	btfss	status,2,c
  2553  007A34  EF1E  F03D         	goto	u6291
  2554  007A38  EF21  F03D         	goto	u6290
  2555  007A3C                     u6291:
  2556  007A3C  FFFF               	dw	65535	; assembler added errata NOP
  2557  007A3E  EF26  F03D         	goto	l5122
  2558  007A42                     u6290:
  2559  007A42  FFFF               	dw	65535	; assembler added errata NOP
  2560  007A44                     
  2561                           ;utils.c: 30:         state_machine_code = '@';
  2562  007A44  0E40               	movlw	64
  2563  007A46  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2564                           
  2565                           ;utils.c: 31:     } else if (*state == 2){
  2566  007A48  EF3B  F03D         	goto	l241
  2567  007A4C                     l5122:
  2568  007A4C  FFFF               	dw	65535	; assembler added errata NOP
  2569  007A4E  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  2570  007A52  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  2571  007A56  0E02               	movlw	2
  2572  007A58  18DE               	xorwf	postinc2,w,c
  2573  007A5A  10DE               	iorwf	postinc2,w,c
  2574  007A5C  A4D8               	btfss	status,2,c
  2575  007A5E  EF33  F03D         	goto	u6301
  2576  007A62  EF36  F03D         	goto	u6300
  2577  007A66                     u6301:
  2578  007A66  FFFF               	dw	65535	; assembler added errata NOP
  2579  007A68  EF3B  F03D         	goto	l245
  2580  007A6C                     u6300:
  2581  007A6C  FFFF               	dw	65535	; assembler added errata NOP
  2582  007A6E                     
  2583                           ;utils.c: 32:         state_machine_code = 'H';
  2584  007A6E  0E48               	movlw	72
  2585  007A70  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  2586  007A72  EF3B  F03D         	goto	l241
  2587  007A76                     l245:
  2588  007A76                     l241:
  2589  007A76  FFFF               	dw	65535	; assembler added errata NOP
  2590                           
  2591                           ;utils.c: 34:     return state_machine_code;
  2592  007A78  5005               	movf	state_translator_micro_to_fpga@state_machine_code^0,w,c
  2593  007A7A  0012               	return		;funcret
  2594  007A7C  FFFF               	dw	65535	; errata NOP
  2595  007A7E                     __end_of_state_translator_micro_to_fpga:
  2596                           	callstack 0
  2597                           
  2598 ;; *************** function _state_translator_fpga_to_micro *****************
  2599 ;; Defined at:
  2600 ;;		line 2 in file "utils.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  state_machin    1    wreg     unsigned char 
  2603 ;;  state           2    2[COMRAM] PTR int 
  2604 ;;		 -> state(2), 
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;  state_machin    1    4[COMRAM] unsigned char 
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  1    wreg      void 
  2609 ;; Registers used:
  2610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2616 ;;      Params:         2       0       0       0       0       0       0
  2617 ;;      Locals:         1       0       0       0       0       0       0
  2618 ;;      Temps:          0       0       0       0       0       0       0
  2619 ;;      Totals:         3       0       0       0       0       0       0
  2620 ;;Total ram usage:        3 bytes
  2621 ;; Hardware stack levels used:    1
  2622 ;; Hardware stack levels required when called:    3
  2623 ;; This function calls:
  2624 ;;		_lcd_dat
  2625 ;; This function is called by:
  2626 ;;		_main
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           	psect	text2
  2631  007882                     __ptext2:
  2632                           	callstack 0
  2633  007882                     _state_translator_fpga_to_micro:
  2634                           	callstack 0
  2635  007882  FFFF               	dw	65535	; assembler added errata NOP
  2636                           
  2637                           ;incstack = 0
  2638                           ;state_translator_fpga_to_micro@state_machine_code stored from wreg
  2639  007884  6E05               	movwf	state_translator_fpga_to_micro@state_machine_code^0,c
  2640  007886                     
  2641                           ;utils.c: 3:     lcd_dat(state_machine_code);
  2642  007886  5005               	movf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  2643  007888  ECCA  F035         	call	_lcd_dat
  2644  00788C                     
  2645                           ;utils.c: 4:     if (state_machine_code == 'A'){
  2646  00788C  0E41               	movlw	65
  2647  00788E  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  2648  007890  A4D8               	btfss	status,2,c
  2649  007892  EF4D  F03C         	goto	u6201
  2650  007896  EF50  F03C         	goto	u6200
  2651  00789A                     u6201:
  2652  00789A  FFFF               	dw	65535	; assembler added errata NOP
  2653  00789C  EF5B  F03C         	goto	l5078
  2654  0078A0                     u6200:
  2655  0078A0  FFFF               	dw	65535	; assembler added errata NOP
  2656  0078A2                     
  2657                           ;utils.c: 5:         *state = 1;
  2658  0078A2  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  2659  0078A6  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  2660  0078AA  0E01               	movlw	1
  2661  0078AC  6EDE               	movwf	postinc2,c
  2662  0078AE  0E00               	movlw	0
  2663  0078B0  6EDD               	movwf	postdec2,c
  2664                           
  2665                           ;utils.c: 6:     } else if (state_machine_code == 'B'){
  2666  0078B2  EFBC  F03C         	goto	l237
  2667  0078B6                     l5078:
  2668  0078B6  FFFF               	dw	65535	; assembler added errata NOP
  2669  0078B8  0E42               	movlw	66
  2670  0078BA  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  2671  0078BC  A4D8               	btfss	status,2,c
  2672  0078BE  EF63  F03C         	goto	u6211
  2673  0078C2  EF66  F03C         	goto	u6210
  2674  0078C6                     u6211:
  2675  0078C6  FFFF               	dw	65535	; assembler added errata NOP
  2676  0078C8  EF71  F03C         	goto	l5082
  2677  0078CC                     u6210:
  2678  0078CC  FFFF               	dw	65535	; assembler added errata NOP
  2679  0078CE                     
  2680                           ;utils.c: 7:         *state = 3;
  2681  0078CE  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  2682  0078D2  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  2683  0078D6  0E03               	movlw	3
  2684  0078D8  6EDE               	movwf	postinc2,c
  2685  0078DA  0E00               	movlw	0
  2686  0078DC  6EDD               	movwf	postdec2,c
  2687                           
  2688                           ;utils.c: 8:     } else if (state_machine_code == 'D'){
  2689  0078DE  EFBC  F03C         	goto	l237
  2690  0078E2                     l5082:
  2691  0078E2  FFFF               	dw	65535	; assembler added errata NOP
  2692  0078E4  0E44               	movlw	68
  2693  0078E6  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  2694  0078E8  A4D8               	btfss	status,2,c
  2695  0078EA  EF79  F03C         	goto	u6221
  2696  0078EE  EF7C  F03C         	goto	u6220
  2697  0078F2                     u6221:
  2698  0078F2  FFFF               	dw	65535	; assembler added errata NOP
  2699  0078F4  EF87  F03C         	goto	l5086
  2700  0078F8                     u6220:
  2701  0078F8  FFFF               	dw	65535	; assembler added errata NOP
  2702  0078FA                     
  2703                           ;utils.c: 9:         *state = 4;
  2704  0078FA  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  2705  0078FE  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  2706  007902  0E04               	movlw	4
  2707  007904  6EDE               	movwf	postinc2,c
  2708  007906  0E00               	movlw	0
  2709  007908  6EDD               	movwf	postdec2,c
  2710                           
  2711                           ;utils.c: 10:     } else if (state_machine_code == '@'){
  2712  00790A  EFBC  F03C         	goto	l237
  2713  00790E                     l5086:
  2714  00790E  FFFF               	dw	65535	; assembler added errata NOP
  2715  007910  0E40               	movlw	64
  2716  007912  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  2717  007914  A4D8               	btfss	status,2,c
  2718  007916  EF8F  F03C         	goto	u6231
  2719  00791A  EF92  F03C         	goto	u6230
  2720  00791E                     u6231:
  2721  00791E  FFFF               	dw	65535	; assembler added errata NOP
  2722  007920  EF9D  F03C         	goto	l5090
  2723  007924                     u6230:
  2724  007924  FFFF               	dw	65535	; assembler added errata NOP
  2725  007926                     
  2726                           ;utils.c: 11:         *state = 5;
  2727  007926  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  2728  00792A  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  2729  00792E  0E05               	movlw	5
  2730  007930  6EDE               	movwf	postinc2,c
  2731  007932  0E00               	movlw	0
  2732  007934  6EDD               	movwf	postdec2,c
  2733                           
  2734                           ;utils.c: 12:     } else if (state_machine_code == 'H'){
  2735  007936  EFBC  F03C         	goto	l237
  2736  00793A                     l5090:
  2737  00793A  FFFF               	dw	65535	; assembler added errata NOP
  2738  00793C  0E48               	movlw	72
  2739  00793E  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  2740  007940  A4D8               	btfss	status,2,c
  2741  007942  EFA5  F03C         	goto	u6241
  2742  007946  EFA8  F03C         	goto	u6240
  2743  00794A                     u6241:
  2744  00794A  FFFF               	dw	65535	; assembler added errata NOP
  2745  00794C  EFB3  F03C         	goto	l5094
  2746  007950                     u6240:
  2747  007950  FFFF               	dw	65535	; assembler added errata NOP
  2748  007952                     
  2749                           ;utils.c: 13:         *state = 2;
  2750  007952  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  2751  007956  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  2752  00795A  0E02               	movlw	2
  2753  00795C  6EDE               	movwf	postinc2,c
  2754  00795E  0E00               	movlw	0
  2755  007960  6EDD               	movwf	postdec2,c
  2756                           
  2757                           ;utils.c: 14:     } else {
  2758  007962  EFBC  F03C         	goto	l237
  2759  007966                     l5094:
  2760  007966  FFFF               	dw	65535	; assembler added errata NOP
  2761                           
  2762                           ;utils.c: 15:         *state = 0;
  2763  007968  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  2764  00796C  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  2765  007970  0E00               	movlw	0
  2766  007972  6EDE               	movwf	postinc2,c
  2767  007974  0E00               	movlw	0
  2768  007976  6EDD               	movwf	postdec2,c
  2769  007978                     l237:
  2770  007978  FFFF               	dw	65535	; assembler added errata NOP
  2771  00797A  0012               	return		;funcret
  2772  00797C  FFFF               	dw	65535	; errata NOP
  2773  00797E                     __end_of_state_translator_fpga_to_micro:
  2774                           	callstack 0
  2775                           
  2776 ;; *************** function _snprintf *****************
  2777 ;; Defined at:
  2778 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\snprintf.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;  s               2   10[BANK0 ] PTR unsigned char 
  2781 ;;		 -> main@greet_str(160), 
  2782 ;;  n               2   12[BANK0 ] unsigned int 
  2783 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  2784 ;;		 -> STR_8(3), 
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  ap              2   20[BANK0 ] PTR void [1]
  2787 ;;		 -> ?_snprintf(2), 
  2788 ;;  ret             2    0        int 
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  2   10[BANK0 ] int 
  2791 ;; Registers used:
  2792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2798 ;;      Params:         0       8       0       0       0       0       0
  2799 ;;      Locals:         0       4       0       0       0       0       0
  2800 ;;      Temps:          0       0       0       0       0       0       0
  2801 ;;      Totals:         0      12       0       0       0       0       0
  2802 ;;Total ram usage:       12 bytes
  2803 ;; Hardware stack levels used:    1
  2804 ;; Hardware stack levels required when called:    9
  2805 ;; This function calls:
  2806 ;;		_vsnprintf
  2807 ;; This function is called by:
  2808 ;;		_main
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812                           	psect	text3
  2813  006C14                     __ptext3:
  2814                           	callstack 0
  2815  006C14                     _snprintf:
  2816                           	callstack 0
  2817  006C14  FFFF               	dw	65535	; assembler added errata NOP
  2818  006C16  0EC2               	movlw	low (?_snprintf+6)
  2819  006C18  0100               	movlb	0	; () banked
  2820  006C1A  6FC6               	movwf	snprintf@ap& (0+255),b
  2821  006C1C  0E00               	movlw	high (?_snprintf+6)
  2822  006C1E  6FC7               	movwf	(snprintf@ap+1)& (0+255),b
  2823  006C20                     
  2824                           ; BSR set to: 0
  2825  006C20  C0BC  F070         	movff	snprintf@s,vsnprintf@s
  2826  006C24  C0BD  F071         	movff	snprintf@s+1,vsnprintf@s+1
  2827  006C28  C0BE  F072         	movff	snprintf@n,vsnprintf@n
  2828  006C2C  C0BF  F073         	movff	snprintf@n+1,vsnprintf@n+1
  2829  006C30  C0C0  F074         	movff	snprintf@fmt,vsnprintf@fmt
  2830  006C34  C0C1  F075         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  2831  006C38  0EC6               	movlw	low snprintf@ap
  2832  006C3A  6E76               	movwf	vsnprintf@ap^0,c
  2833  006C3C  0E00               	movlw	high snprintf@ap
  2834  006C3E  6E77               	movwf	(vsnprintf@ap+1)^0,c
  2835  006C40  EC34  F01F         	call	_vsnprintf	;wreg free
  2836  006C44  0012               	return		;funcret
  2837  006C46  FFFF               	dw	65535	; errata NOP
  2838  006C48                     __end_of_snprintf:
  2839                           	callstack 0
  2840                           
  2841 ;; *************** function _vsnprintf *****************
  2842 ;; Defined at:
  2843 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_vsnprintf.c"
  2844 ;; Parameters:    Size  Location     Type
  2845 ;;  s               2  111[COMRAM] PTR unsigned char 
  2846 ;;		 -> main@greet_str(160), 
  2847 ;;  n               2  113[COMRAM] unsigned int 
  2848 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  2849 ;;		 -> STR_8(3), 
  2850 ;;  ap              2  117[COMRAM] PTR PTR void 
  2851 ;;		 -> snprintf@ap(2), 
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;  f               6    4[BANK0 ] struct _IO_FILE
  2854 ;;  cnt             2    2[BANK0 ] int 
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  2  111[COMRAM] int 
  2857 ;; Registers used:
  2858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2864 ;;      Params:         8       0       0       0       0       0       0
  2865 ;;      Locals:         0      10       0       0       0       0       0
  2866 ;;      Temps:          4       0       0       0       0       0       0
  2867 ;;      Totals:        12      10       0       0       0       0       0
  2868 ;;Total ram usage:       22 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:    8
  2871 ;; This function calls:
  2872 ;;		_vfprintf
  2873 ;; This function is called by:
  2874 ;;		_snprintf
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           	psect	text4
  2879  003E68                     __ptext4:
  2880                           	callstack 0
  2881  003E68                     _vsnprintf:
  2882                           	callstack 0
  2883  003E68  FFFF               	dw	65535	; assembler added errata NOP
  2884  003E6A  0E80               	movlw	128
  2885  003E6C  5C73               	subwf	(vsnprintf@n+1)^0,w,c
  2886  003E6E  A0D8               	btfss	status,0,c
  2887  003E70  EF3C  F01F         	goto	u6101
  2888  003E74  EF3F  F01F         	goto	u6100
  2889  003E78                     u6101:
  2890  003E78  FFFF               	dw	65535	; assembler added errata NOP
  2891  003E7A  EF49  F01F         	goto	l4936
  2892  003E7E                     u6100:
  2893  003E7E  FFFF               	dw	65535	; assembler added errata NOP
  2894  003E80  0E00               	movlw	0
  2895  003E82  0100               	movlb	0	; () banked
  2896  003E84  6F8B               	movwf	(_errno+1)& (0+255),b
  2897  003E86  0E4B               	movlw	75
  2898  003E88  6F8A               	movwf	_errno& (0+255),b
  2899  003E8A                     
  2900                           ; BSR set to: 0
  2901  003E8A  6870               	setf	?_vsnprintf^0,c
  2902  003E8C  6871               	setf	(?_vsnprintf+1)^0,c
  2903  003E8E  EFCE  F01F         	goto	l1029
  2904  003E92                     l4936:
  2905  003E92  FFFF               	dw	65535	; assembler added errata NOP
  2906  003E94  C070  F0B6         	movff	vsnprintf@s,vsnprintf@f
  2907  003E98  C071  F0B7         	movff	vsnprintf@s+1,vsnprintf@f+1
  2908  003E9C  5073               	movf	(vsnprintf@n+1)^0,w,c
  2909  003E9E  E10A               	bnz	u6110
  2910  003EA0  0E02               	movlw	2
  2911  003EA2  5C72               	subwf	vsnprintf@n^0,w,c
  2912  003EA4  A0D8               	btfss	status,0,c
  2913  003EA6  EF57  F01F         	goto	u6111
  2914  003EAA  EF5A  F01F         	goto	u6110
  2915  003EAE                     u6111:
  2916  003EAE  FFFF               	dw	65535	; assembler added errata NOP
  2917  003EB0  EF68  F01F         	goto	l4942
  2918  003EB4                     u6110:
  2919  003EB4  FFFF               	dw	65535	; assembler added errata NOP
  2920  003EB6  0EFF               	movlw	255
  2921  003EB8  2472               	addwf	vsnprintf@n^0,w,c
  2922  003EBA  0100               	movlb	0	; () banked
  2923  003EBC  6FBA               	movwf	(vsnprintf@f+4)& (0+255),b
  2924  003EBE  0EFF               	movlw	255
  2925  003EC0  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  2926  003EC2  6FBB               	movwf	(vsnprintf@f+5)& (0+255),b
  2927  003EC4                     
  2928                           ; BSR set to: 0
  2929  003EC4  0E00               	movlw	0
  2930  003EC6  6FB9               	movwf	(vsnprintf@f+3)& (0+255),b
  2931  003EC8  0E00               	movlw	0
  2932  003ECA  6FB8               	movwf	(vsnprintf@f+2)& (0+255),b
  2933  003ECC  EF72  F01F         	goto	l4944
  2934  003ED0                     l4942:
  2935  003ED0  FFFF               	dw	65535	; assembler added errata NOP
  2936  003ED2  0E00               	movlw	0
  2937  003ED4  0100               	movlb	0	; () banked
  2938  003ED6  6FBB               	movwf	(vsnprintf@f+5)& (0+255),b
  2939  003ED8  0E01               	movlw	1
  2940  003EDA  6FBA               	movwf	(vsnprintf@f+4)& (0+255),b
  2941  003EDC  0E00               	movlw	0
  2942  003EDE  6FB9               	movwf	(vsnprintf@f+3)& (0+255),b
  2943  003EE0  0E01               	movlw	1
  2944  003EE2  6FB8               	movwf	(vsnprintf@f+2)& (0+255),b
  2945  003EE4                     l4944:
  2946  003EE4  FFFF               	dw	65535	; assembler added errata NOP
  2947                           
  2948                           ; BSR set to: 0
  2949  003EE6  0EB6               	movlw	low vsnprintf@f
  2950  003EE8  6E68               	movwf	vfprintf@fp^0,c
  2951  003EEA  0E00               	movlw	high vsnprintf@f
  2952  003EEC  6E69               	movwf	(vfprintf@fp+1)^0,c
  2953  003EEE  C074  F06A         	movff	vsnprintf@fmt,vfprintf@fmt
  2954  003EF2  C075  F06B         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  2955  003EF6  C076  F06C         	movff	vsnprintf@ap,vfprintf@ap
  2956  003EFA  C077  F06D         	movff	vsnprintf@ap+1,vfprintf@ap+1
  2957  003EFE  EC67  F038         	call	_vfprintf	;wreg free
  2958  003F02  C068  F0B4         	movff	?_vfprintf,vsnprintf@cnt
  2959  003F06  C069  F0B5         	movff	?_vfprintf+1,vsnprintf@cnt+1
  2960  003F0A  5072               	movf	vsnprintf@n^0,w,c
  2961  003F0C  1073               	iorwf	(vsnprintf@n+1)^0,w,c
  2962  003F0E  B4D8               	btfsc	status,2,c
  2963  003F10  EF8C  F01F         	goto	u6121
  2964  003F14  EF8F  F01F         	goto	u6120
  2965  003F18                     u6121:
  2966  003F18  FFFF               	dw	65535	; assembler added errata NOP
  2967  003F1A  EFC9  F01F         	goto	l4956
  2968  003F1E                     u6120:
  2969  003F1E  FFFF               	dw	65535	; assembler added errata NOP
  2970  003F20  0100               	movlb	0	; () banked
  2971  003F22  BFB5               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  2972  003F24  EF96  F01F         	goto	u6131
  2973  003F28  EF99  F01F         	goto	u6130
  2974  003F2C                     u6131:
  2975  003F2C  FFFF               	dw	65535	; assembler added errata NOP
  2976  003F2E  EFC9  F01F         	goto	l4956
  2977  003F32                     u6130:
  2978  003F32  FFFF               	dw	65535	; assembler added errata NOP
  2979  003F34                     
  2980                           ; BSR set to: 0
  2981  003F34  0EFF               	movlw	255
  2982  003F36  6E78               	movwf	??_vsnprintf^0,c
  2983  003F38  0EFF               	movlw	255
  2984  003F3A  6E79               	movwf	(??_vsnprintf+1)^0,c
  2985  003F3C  C072  F07A         	movff	vsnprintf@n,??_vsnprintf+2
  2986  003F40  C073  F07B         	movff	vsnprintf@n+1,??_vsnprintf+3
  2987  003F44  5078               	movf	??_vsnprintf^0,w,c
  2988  003F46  267A               	addwf	(??_vsnprintf+2)^0,f,c
  2989  003F48  5079               	movf	(??_vsnprintf+1)^0,w,c
  2990  003F4A  227B               	addwfc	(??_vsnprintf+3)^0,f,c
  2991  003F4C  507A               	movf	(??_vsnprintf+2)^0,w,c
  2992  003F4E  5DB4               	subwf	vsnprintf@cnt& (0+255),w,b
  2993  003F50  507B               	movf	(??_vsnprintf+3)^0,w,c
  2994  003F52  59B5               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  2995  003F54  A0D8               	btfss	status,0,c
  2996  003F56  EFAF  F01F         	goto	u6141
  2997  003F5A  EFB2  F01F         	goto	u6140
  2998  003F5E                     u6141:
  2999  003F5E  FFFF               	dw	65535	; assembler added errata NOP
  3000  003F60  EFBB  F01F         	goto	l1034
  3001  003F64                     u6140:
  3002  003F64  FFFF               	dw	65535	; assembler added errata NOP
  3003  003F66                     
  3004                           ; BSR set to: 0
  3005  003F66  0EFF               	movlw	255
  3006  003F68  2472               	addwf	vsnprintf@n^0,w,c
  3007  003F6A  6FB2               	movwf	_vsnprintf$1416& (0+255),b
  3008  003F6C  0EFF               	movlw	255
  3009  003F6E  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  3010  003F70  6FB3               	movwf	(_vsnprintf$1416+1)& (0+255),b
  3011  003F72  EFC0  F01F         	goto	l4954
  3012  003F76                     l1034:
  3013  003F76  FFFF               	dw	65535	; assembler added errata NOP
  3014                           
  3015                           ; BSR set to: 0
  3016  003F78  C0B4  F0B2         	movff	vsnprintf@cnt,_vsnprintf$1416
  3017  003F7C  C0B5  F0B3         	movff	vsnprintf@cnt+1,_vsnprintf$1416+1
  3018  003F80                     l4954:
  3019  003F80  FFFF               	dw	65535	; assembler added errata NOP
  3020                           
  3021                           ; BSR set to: 0
  3022  003F82  51B2               	movf	_vsnprintf$1416& (0+255),w,b
  3023  003F84  2470               	addwf	vsnprintf@s^0,w,c
  3024  003F86  6ED9               	movwf	fsr2l,c
  3025  003F88  51B3               	movf	(_vsnprintf$1416+1)& (0+255),w,b
  3026  003F8A  2071               	addwfc	(vsnprintf@s+1)^0,w,c
  3027  003F8C  6EDA               	movwf	fsr2h,c
  3028  003F8E  0E00               	movlw	0
  3029  003F90  6EDF               	movwf	indf2,c
  3030  003F92                     l4956:
  3031  003F92  FFFF               	dw	65535	; assembler added errata NOP
  3032  003F94  C0B4  F070         	movff	vsnprintf@cnt,?_vsnprintf
  3033  003F98  C0B5  F071         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  3034  003F9C                     l1029:
  3035  003F9C  FFFF               	dw	65535	; assembler added errata NOP
  3036  003F9E  0012               	return		;funcret
  3037  003FA0  FFFF               	dw	65535	; errata NOP
  3038  003FA2                     __end_of_vsnprintf:
  3039                           	callstack 0
  3040                           
  3041 ;; *************** function _vfprintf *****************
  3042 ;; Defined at:
  3043 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;  fp              2  103[COMRAM] PTR struct _IO_FILE
  3046 ;;		 -> vsnprintf@f(6), 
  3047 ;;  fmt             2  105[COMRAM] PTR const unsigned char 
  3048 ;;		 -> STR_8(3), 
  3049 ;;  ap              2  107[COMRAM] PTR PTR void 
  3050 ;;		 -> snprintf@ap(2), 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;  cfmt            2  109[COMRAM] PTR unsigned char 
  3053 ;;		 -> STR_8(3), 
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  2  103[COMRAM] int 
  3056 ;; Registers used:
  3057 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3063 ;;      Params:         6       0       0       0       0       0       0
  3064 ;;      Locals:         2       0       0       0       0       0       0
  3065 ;;      Temps:          0       0       0       0       0       0       0
  3066 ;;      Totals:         8       0       0       0       0       0       0
  3067 ;;Total ram usage:        8 bytes
  3068 ;; Hardware stack levels used:    1
  3069 ;; Hardware stack levels required when called:    7
  3070 ;; This function calls:
  3071 ;;		_vfpfcnvrt
  3072 ;; This function is called by:
  3073 ;;		_vsnprintf
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077                           	psect	text5
  3078  0070CE                     __ptext5:
  3079                           	callstack 0
  3080  0070CE                     _vfprintf:
  3081                           	callstack 0
  3082  0070CE  FFFF               	dw	65535	; assembler added errata NOP
  3083  0070D0                     
  3084                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3085  0070D0  C06A  F06E         	movff	vfprintf@fmt,vfprintf@cfmt
  3086  0070D4  C06B  F06F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3087  0070D8                     
  3088                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  3089  0070D8  0E00               	movlw	0
  3090  0070DA  0100               	movlb	0	; () banked
  3091  0070DC  6F85               	movwf	(_nout+1)& (0+255),b
  3092  0070DE  0E00               	movlw	0
  3093  0070E0  6F84               	movwf	_nout& (0+255),b
  3094                           
  3095                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  3096  0070E2  EF87  F038         	goto	l4832
  3097  0070E6                     l4830:
  3098  0070E6  FFFF               	dw	65535	; assembler added errata NOP
  3099                           
  3100                           ; BSR set to: 0
  3101                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3102  0070E8  C068  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  3103  0070EC  C069  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3104  0070F0  0E6E               	movlw	low vfprintf@cfmt
  3105  0070F2  6E45               	movwf	vfpfcnvrt@fmt^0,c
  3106  0070F4  0E00               	movlw	high vfprintf@cfmt
  3107  0070F6  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3108  0070F8  C06C  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  3109  0070FC  C06D  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3110  007100  EC3D  F000         	call	_vfpfcnvrt	;wreg free
  3111  007104  5043               	movf	?_vfpfcnvrt^0,w,c
  3112  007106  0100               	movlb	0	; () banked
  3113  007108  2784               	addwf	_nout& (0+255),f,b
  3114  00710A  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  3115  00710C  2385               	addwfc	(_nout+1)& (0+255),f,b
  3116  00710E                     l4832:
  3117  00710E  FFFF               	dw	65535	; assembler added errata NOP
  3118                           
  3119                           ; BSR set to: 0
  3120                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  3121  007110  C06E  FFF6         	movff	vfprintf@cfmt,tblptrl
  3122  007114  C06F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3123  007118                     	if	0	;tblptru may be non-zero
  3124  007118                     	endif
  3125  007118                     	if	0	;tblptru may be non-zero
  3126  007118                     	endif
  3127  007118  0008               	tblrd		*
  3128  00711A  FFFF               	dw	65535	; errata NOP
  3129  00711C  50F5               	movf	tablat,w,c
  3130  00711E  0900               	iorlw	0
  3131  007120  A4D8               	btfss	status,2,c
  3132  007122  EF95  F038         	goto	u5961
  3133  007126  EF98  F038         	goto	u5960
  3134  00712A                     u5961:
  3135  00712A  FFFF               	dw	65535	; assembler added errata NOP
  3136  00712C  EF73  F038         	goto	l4830
  3137  007130                     u5960:
  3138  007130  FFFF               	dw	65535	; assembler added errata NOP
  3139  007132                     
  3140                           ; BSR set to: 0
  3141                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  3142  007132  C084  F068         	movff	_nout,?_vfprintf
  3143  007136  C085  F069         	movff	_nout+1,?_vfprintf+1
  3144  00713A                     
  3145                           ; BSR set to: 0
  3146  00713A  0012               	return		;funcret
  3147  00713C  FFFF               	dw	65535	; errata NOP
  3148  00713E                     __end_of_vfprintf:
  3149                           	callstack 0
  3150                           
  3151 ;; *************** function _vfpfcnvrt *****************
  3152 ;; Defined at:
  3153 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  3156 ;;		 -> vsnprintf@f(6), 
  3157 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  3158 ;;		 -> vfprintf@cfmt(2), 
  3159 ;;  ap              2   70[COMRAM] PTR PTR void 
  3160 ;;		 -> snprintf@ap(2), 
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;  llu             8   95[COMRAM] unsigned long long 
  3163 ;;  ll              8   84[COMRAM] long long 
  3164 ;;  f               4    0        long long 
  3165 ;;  ct              3    0        unsigned char [3]
  3166 ;;  vp              2   92[COMRAM] PTR void 
  3167 ;;		 -> ?_snprintf(2), STR_6(7), STR_5(9), STR_4(39), 
  3168 ;;		 -> STR_3(9), STR_2(64), STR_1(49), 
  3169 ;;  done            2   78[COMRAM] int 
  3170 ;;  cp              2   76[COMRAM] PTR unsigned char 
  3171 ;;		 -> ?_snprintf(2), STR_6(7), STR_5(9), STR_4(39), 
  3172 ;;		 -> STR_3(9), STR_2(64), STR_1(49), 
  3173 ;;  i               2    0        int 
  3174 ;;  c               1   94[COMRAM] unsigned char 
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  2   66[COMRAM] int 
  3177 ;; Registers used:
  3178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3184 ;;      Params:         6       0       0       0       0       0       0
  3185 ;;      Locals:        27       0       0       0       0       0       0
  3186 ;;      Temps:          4       0       0       0       0       0       0
  3187 ;;      Totals:        37       0       0       0       0       0       0
  3188 ;;Total ram usage:       37 bytes
  3189 ;; Hardware stack levels used:    1
  3190 ;; Hardware stack levels required when called:    6
  3191 ;; This function calls:
  3192 ;;		_atoi
  3193 ;;		_ctoa
  3194 ;;		_dtoa
  3195 ;;		_fputc
  3196 ;;		_isdigit
  3197 ;;		_otoa
  3198 ;;		_stoa
  3199 ;;		_strncmp
  3200 ;;		_utoa
  3201 ;;		_xtoa
  3202 ;; This function is called by:
  3203 ;;		_vfprintf
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           	psect	text6
  3208  00007A                     __ptext6:
  3209                           	callstack 0
  3210  00007A                     _vfpfcnvrt:
  3211                           	callstack 0
  3212  00007A  FFFF               	dw	65535	; assembler added errata NOP
  3213  00007C                     
  3214                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  3215  00007C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3216  000080  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3217  000084  CFDE FFF6          	movff	postinc2,tblptrl
  3218  000088  CFDD FFF7          	movff	postdec2,tblptrh
  3219  00008C                     	if	0	;tblptru may be non-zero
  3220  00008C                     	endif
  3221  00008C                     	if	0	;tblptru may be non-zero
  3222  00008C                     	endif
  3223  00008C  0008               	tblrd		*
  3224  00008E  FFFF               	dw	65535	; errata NOP
  3225  000090  50F5               	movf	tablat,w,c
  3226  000092  0A25               	xorlw	37
  3227  000094  A4D8               	btfss	status,2,c
  3228  000096  EF4F  F000         	goto	u4921
  3229  00009A  EF52  F000         	goto	u4920
  3230  00009E                     u4921:
  3231  00009E  FFFF               	dw	65535	; assembler added errata NOP
  3232  0000A0  EF0C  F00A         	goto	l4464
  3233  0000A4                     u4920:
  3234  0000A4  FFFF               	dw	65535	; assembler added errata NOP
  3235  0000A6                     
  3236                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  3237  0000A6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3238  0000AA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3239  0000AE  2ADE               	incf	postinc2,f,c
  3240  0000B0  0E00               	movlw	0
  3241  0000B2  22DD               	addwfc	postdec2,f,c
  3242  0000B4                     
  3243                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  3244  0000B4  0E00               	movlw	0
  3245  0000B6  0100               	movlb	0	; () banked
  3246  0000B8  6F87               	movwf	(_width+1)& (0+255),b
  3247  0000BA  0E00               	movlw	0
  3248  0000BC  6F86               	movwf	_width& (0+255),b
  3249  0000BE  C086  F07D         	movff	_width,_flags
  3250  0000C2  C087  F07E         	movff	_width+1,_flags+1
  3251  0000C6                     
  3252                           ; BSR set to: 0
  3253                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  3254  0000C6  6988               	setf	_prec& (0+255),b
  3255  0000C8  6989               	setf	(_prec+1)& (0+255),b
  3256  0000CA                     
  3257                           ; BSR set to: 0
  3258                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  3259  0000CA  0E00               	movlw	0
  3260  0000CC  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  3261  0000CE  0E00               	movlw	0
  3262  0000D0  6E4F               	movwf	vfpfcnvrt@done^0,c
  3263                           
  3264                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  3265  0000D2  EFBB  F000         	goto	l4182
  3266  0000D6                     l4156:
  3267  0000D6  FFFF               	dw	65535	; assembler added errata NOP
  3268                           
  3269                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  3270  0000D8  807D               	bsf	_flags^0,0,c
  3271  0000DA                     l4158:
  3272  0000DA  FFFF               	dw	65535	; assembler added errata NOP
  3273                           
  3274                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  3275  0000DC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3276  0000E0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3277  0000E4  2ADE               	incf	postinc2,f,c
  3278  0000E6  0E00               	movlw	0
  3279  0000E8  22DD               	addwfc	postdec2,f,c
  3280                           
  3281                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  3282  0000EA  EFBB  F000         	goto	l4182
  3283  0000EE                     l4160:
  3284  0000EE  FFFF               	dw	65535	; assembler added errata NOP
  3285                           
  3286                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  3287  0000F0  827D               	bsf	_flags^0,1,c
  3288  0000F2  EF6D  F000         	goto	l4158
  3289  0000F6                     l4164:
  3290  0000F6  FFFF               	dw	65535	; assembler added errata NOP
  3291                           
  3292                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  3293  0000F8  847D               	bsf	_flags^0,2,c
  3294  0000FA  EF6D  F000         	goto	l4158
  3295  0000FE                     l4168:
  3296  0000FE  FFFF               	dw	65535	; assembler added errata NOP
  3297                           
  3298                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  3299  000100  867D               	bsf	_flags^0,3,c
  3300  000102  EF6D  F000         	goto	l4158
  3301  000106                     l4172:
  3302  000106  FFFF               	dw	65535	; assembler added errata NOP
  3303                           
  3304                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  3305  000108  887D               	bsf	_flags^0,4,c
  3306  00010A  EF6D  F000         	goto	l4158
  3307  00010E                     l4176:
  3308  00010E  FFFF               	dw	65535	; assembler added errata NOP
  3309                           
  3310                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  3311  000110  0E00               	movlw	0
  3312  000112  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  3313  000114  0E01               	movlw	1
  3314  000116  6E4F               	movwf	vfpfcnvrt@done^0,c
  3315                           
  3316                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  3317  000118  EFBB  F000         	goto	l4182
  3318  00011C                     l4180:
  3319  00011C  FFFF               	dw	65535	; assembler added errata NOP
  3320  00011E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3321  000122  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3322  000126  CFDE FFF6          	movff	postinc2,tblptrl
  3323  00012A  CFDD FFF7          	movff	postdec2,tblptrh
  3324  00012E                     	if	0	;tblptru may be non-zero
  3325  00012E                     	endif
  3326  00012E                     	if	0	;tblptru may be non-zero
  3327  00012E                     	endif
  3328  00012E  0008               	tblrd		*
  3329  000130  FFFF               	dw	65535	; errata NOP
  3330  000132  50F5               	movf	tablat,w,c
  3331  000134  6E49               	movwf	??_vfpfcnvrt^0,c
  3332  000136  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  3333                           
  3334                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3335                           ; Switch size 1, requested type "simple"
  3336                           ; Number of cases is 1, Range of values is 0 to 0
  3337                           ; switch strategies available:
  3338                           ; Name         Instructions Cycles
  3339                           ; simple_byte            4     3 (average)
  3340                           ;	Chosen strategy is simple_byte
  3341  000138  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3342  00013A  0A00               	xorlw	0	; case 0
  3343  00013C  B4D8               	btfsc	status,2,c
  3344  00013E  EFA3  F000         	goto	l5386
  3345  000142  EF87  F000         	goto	l4176
  3346  000146                     l5386:
  3347  000146  FFFF               	dw	65535	; assembler added errata NOP
  3348                           
  3349                           ; Switch size 1, requested type "simple"
  3350                           ; Number of cases is 5, Range of values is 32 to 48
  3351                           ; switch strategies available:
  3352                           ; Name         Instructions Cycles
  3353                           ; simple_byte           16     9 (average)
  3354                           ;	Chosen strategy is simple_byte
  3355  000148  5049               	movf	??_vfpfcnvrt^0,w,c
  3356  00014A  0A20               	xorlw	32	; case 32
  3357  00014C  B4D8               	btfsc	status,2,c
  3358  00014E  EF7F  F000         	goto	l4168
  3359  000152  0A03               	xorlw	3	; case 35
  3360  000154  B4D8               	btfsc	status,2,c
  3361  000156  EF83  F000         	goto	l4172
  3362  00015A  0A08               	xorlw	8	; case 43
  3363  00015C  B4D8               	btfsc	status,2,c
  3364  00015E  EF7B  F000         	goto	l4164
  3365  000162  0A06               	xorlw	6	; case 45
  3366  000164  B4D8               	btfsc	status,2,c
  3367  000166  EF6B  F000         	goto	l4156
  3368  00016A  0A1D               	xorlw	29	; case 48
  3369  00016C  B4D8               	btfsc	status,2,c
  3370  00016E  EF77  F000         	goto	l4160
  3371  000172  EF87  F000         	goto	l4176
  3372  000176                     l4182:
  3373  000176  FFFF               	dw	65535	; assembler added errata NOP
  3374                           
  3375                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  3376  000178  504F               	movf	vfpfcnvrt@done^0,w,c
  3377  00017A  1050               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  3378  00017C  B4D8               	btfsc	status,2,c
  3379  00017E  EFC3  F000         	goto	u4931
  3380  000182  EFC6  F000         	goto	u4930
  3381  000186                     u4931:
  3382  000186  FFFF               	dw	65535	; assembler added errata NOP
  3383  000188  EF8E  F000         	goto	l4180
  3384  00018C                     u4930:
  3385  00018C  FFFF               	dw	65535	; assembler added errata NOP
  3386  00018E                     
  3387                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  3388  00018E  A07D               	btfss	_flags^0,0,c
  3389  000190  EFCC  F000         	goto	u4941
  3390  000194  EFCF  F000         	goto	u4940
  3391  000198                     u4941:
  3392  000198  FFFF               	dw	65535	; assembler added errata NOP
  3393  00019A  EFD1  F000         	goto	l4186
  3394  00019E                     u4940:
  3395  00019E  FFFF               	dw	65535	; assembler added errata NOP
  3396  0001A0                     
  3397                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  3398  0001A0  927D               	bcf	_flags^0,1,c
  3399  0001A2                     l4186:
  3400  0001A2  FFFF               	dw	65535	; assembler added errata NOP
  3401                           
  3402                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  3403  0001A4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3404  0001A8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3405  0001AC  CFDE FFF6          	movff	postinc2,tblptrl
  3406  0001B0  CFDD FFF7          	movff	postdec2,tblptrh
  3407  0001B4                     	if	0	;tblptru may be non-zero
  3408  0001B4                     	endif
  3409  0001B4                     	if	0	;tblptru may be non-zero
  3410  0001B4                     	endif
  3411  0001B4  0008               	tblrd		*
  3412  0001B6  FFFF               	dw	65535	; errata NOP
  3413  0001B8  50F5               	movf	tablat,w,c
  3414  0001BA  0A2A               	xorlw	42
  3415  0001BC  A4D8               	btfss	status,2,c
  3416  0001BE  EFE3  F000         	goto	u4951
  3417  0001C2  EFE6  F000         	goto	u4950
  3418  0001C6                     u4951:
  3419  0001C6  FFFF               	dw	65535	; assembler added errata NOP
  3420  0001C8  EF13  F001         	goto	l4194
  3421  0001CC                     u4950:
  3422  0001CC  FFFF               	dw	65535	; assembler added errata NOP
  3423  0001CE                     
  3424                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  3425  0001CE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3426  0001D2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3427  0001D6  2ADE               	incf	postinc2,f,c
  3428  0001D8  0E00               	movlw	0
  3429  0001DA  22DD               	addwfc	postdec2,f,c
  3430                           
  3431                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3432  0001DC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3433  0001E0  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3434  0001E4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3435  0001E8  0E02               	movlw	2
  3436  0001EA  26DE               	addwf	postinc2,f,c
  3437  0001EC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3438  0001F0  0E00               	movlw	0
  3439  0001F2  22DD               	addwfc	postdec2,f,c
  3440  0001F4  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3441  0001F8  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3442  0001FC  CFDE F086          	movff	postinc2,_width
  3443  000200  CFDD F087          	movff	postdec2,_width+1
  3444  000204                     
  3445                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  3446  000204  0100               	movlb	0	; () banked
  3447  000206  BF87               	btfsc	(_width+1)& (0+255),7,b
  3448  000208  EF0B  F001         	goto	u4960
  3449  00020C  EF08  F001         	goto	u4961
  3450  000210                     u4961:
  3451  000210  FFFF               	dw	65535	; assembler added errata NOP
  3452  000212  EF5E  F001         	goto	l4204
  3453  000216                     u4960:
  3454  000216  FFFF               	dw	65535	; assembler added errata NOP
  3455  000218                     
  3456                           ; BSR set to: 0
  3457                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  3458  000218  807D               	bsf	_flags^0,0,c
  3459                           
  3460                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  3461  00021A  6D86               	negf	_width& (0+255),b
  3462  00021C  1F87               	comf	(_width+1)& (0+255),f,b
  3463  00021E  B0D8               	btfsc	status,0,c
  3464  000220  2B87               	incf	(_width+1)& (0+255),f,b
  3465  000222  EF5E  F001         	goto	l4204
  3466  000226                     l4194:
  3467  000226  FFFF               	dw	65535	; assembler added errata NOP
  3468                           
  3469                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  3470  000228  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3471  00022C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3472  000230  CFDE F008          	movff	postinc2,atoi@s
  3473  000234  CFDD F009          	movff	postdec2,atoi@s+1
  3474  000238  ECAB  F01C         	call	_atoi	;wreg free
  3475  00023C  C008  F086         	movff	?_atoi,_width
  3476  000240  C009  F087         	movff	?_atoi+1,_width+1
  3477                           
  3478                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3479  000244  EF2C  F001         	goto	l4198
  3480  000248                     l4196:
  3481  000248  FFFF               	dw	65535	; assembler added errata NOP
  3482                           
  3483                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  3484  00024A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3485  00024E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3486  000252  2ADE               	incf	postinc2,f,c
  3487  000254  0E00               	movlw	0
  3488  000256  22DD               	addwfc	postdec2,f,c
  3489  000258                     l4198:
  3490  000258  FFFF               	dw	65535	; assembler added errata NOP
  3491  00025A  0ED0               	movlw	208
  3492  00025C  6E49               	movwf	??_vfpfcnvrt^0,c
  3493  00025E  0EFF               	movlw	255
  3494  000260  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  3495  000262  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3496  000266  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3497  00026A  CFDE FFF6          	movff	postinc2,tblptrl
  3498  00026E  CFDD FFF7          	movff	postdec2,tblptrh
  3499  000272                     	if	0	;tblptru may be non-zero
  3500  000272                     	endif
  3501  000272                     	if	0	;tblptru may be non-zero
  3502  000272                     	endif
  3503  000272  0008               	tblrd		*
  3504  000274  FFFF               	dw	65535	; errata NOP
  3505  000276  50F5               	movf	tablat,w,c
  3506  000278  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3507  00027A  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  3508  00027C  5049               	movf	??_vfpfcnvrt^0,w,c
  3509  00027E  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3510  000280  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3511  000282  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3512  000284  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  3513  000286  E10B               	bnz	u4970
  3514  000288  0E0A               	movlw	10
  3515  00028A  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3516  00028C  A0D8               	btfss	status,0,c
  3517  00028E  EF4B  F001         	goto	u4971
  3518  000292  EF4F  F001         	goto	u4970
  3519  000296                     u4971:
  3520  000296  FFFF               	dw	65535	; assembler added errata NOP
  3521  000298  0E01               	movlw	1
  3522  00029A  EF51  F001         	goto	u4980
  3523  00029E                     u4970:
  3524  00029E  FFFF               	dw	65535	; assembler added errata NOP
  3525  0002A0  0E00               	movlw	0
  3526  0002A2                     u4980:
  3527  0002A2  FFFF               	dw	65535	; assembler added errata NOP
  3528  0002A4  6E51               	movwf	_vfpfcnvrt$1553^0,c
  3529  0002A6  6A52               	clrf	(_vfpfcnvrt$1553+1)^0,c
  3530  0002A8  5051               	movf	_vfpfcnvrt$1553^0,w,c
  3531  0002AA  1052               	iorwf	(_vfpfcnvrt$1553+1)^0,w,c
  3532  0002AC  A4D8               	btfss	status,2,c
  3533  0002AE  EF5B  F001         	goto	u4991
  3534  0002B2  EF5E  F001         	goto	u4990
  3535  0002B6                     u4991:
  3536  0002B6  FFFF               	dw	65535	; assembler added errata NOP
  3537  0002B8  EF24  F001         	goto	l4196
  3538  0002BC                     u4990:
  3539  0002BC                     l4204:
  3540  0002BC  FFFF               	dw	65535	; assembler added errata NOP
  3541                           
  3542                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  3543  0002BE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3544  0002C2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3545  0002C6  CFDE FFF6          	movff	postinc2,tblptrl
  3546  0002CA  CFDD FFF7          	movff	postdec2,tblptrh
  3547  0002CE                     	if	0	;tblptru may be non-zero
  3548  0002CE                     	endif
  3549  0002CE                     	if	0	;tblptru may be non-zero
  3550  0002CE                     	endif
  3551  0002CE  0008               	tblrd		*
  3552  0002D0  FFFF               	dw	65535	; errata NOP
  3553  0002D2  50F5               	movf	tablat,w,c
  3554  0002D4  0A2E               	xorlw	46
  3555  0002D6  A4D8               	btfss	status,2,c
  3556  0002D8  EF70  F001         	goto	u5001
  3557  0002DC  EF73  F001         	goto	u5000
  3558  0002E0                     u5001:
  3559  0002E0  FFFF               	dw	65535	; assembler added errata NOP
  3560  0002E2  EFFD  F001         	goto	l4224
  3561  0002E6                     u5000:
  3562  0002E6  FFFF               	dw	65535	; assembler added errata NOP
  3563  0002E8                     
  3564                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  3565  0002E8  0E00               	movlw	0
  3566  0002EA  0100               	movlb	0	; () banked
  3567  0002EC  6F89               	movwf	(_prec+1)& (0+255),b
  3568  0002EE  0E00               	movlw	0
  3569  0002F0  6F88               	movwf	_prec& (0+255),b
  3570  0002F2                     
  3571                           ; BSR set to: 0
  3572                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  3573  0002F2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3574  0002F6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3575  0002FA  2ADE               	incf	postinc2,f,c
  3576  0002FC  0E00               	movlw	0
  3577  0002FE  22DD               	addwfc	postdec2,f,c
  3578  000300                     
  3579                           ; BSR set to: 0
  3580                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  3581  000300  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3582  000304  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3583  000308  CFDE FFF6          	movff	postinc2,tblptrl
  3584  00030C  CFDD FFF7          	movff	postdec2,tblptrh
  3585  000310                     	if	0	;tblptru may be non-zero
  3586  000310                     	endif
  3587  000310                     	if	0	;tblptru may be non-zero
  3588  000310                     	endif
  3589  000310  0008               	tblrd		*
  3590  000312  FFFF               	dw	65535	; errata NOP
  3591  000314  50F5               	movf	tablat,w,c
  3592  000316  0A2A               	xorlw	42
  3593  000318  A4D8               	btfss	status,2,c
  3594  00031A  EF91  F001         	goto	u5011
  3595  00031E  EF94  F001         	goto	u5010
  3596  000322                     u5011:
  3597  000322  FFFF               	dw	65535	; assembler added errata NOP
  3598  000324  EFB2  F001         	goto	l4214
  3599  000328                     u5010:
  3600  000328  FFFF               	dw	65535	; assembler added errata NOP
  3601  00032A                     
  3602                           ; BSR set to: 0
  3603                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  3604  00032A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3605  00032E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3606  000332  2ADE               	incf	postinc2,f,c
  3607  000334  0E00               	movlw	0
  3608  000336  22DD               	addwfc	postdec2,f,c
  3609                           
  3610                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3611  000338  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3612  00033C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3613  000340  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3614  000344  0E02               	movlw	2
  3615  000346  26DE               	addwf	postinc2,f,c
  3616  000348  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3617  00034C  0E00               	movlw	0
  3618  00034E  22DD               	addwfc	postdec2,f,c
  3619  000350  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3620  000354  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3621  000358  CFDE F088          	movff	postinc2,_prec
  3622  00035C  CFDD F089          	movff	postdec2,_prec+1
  3623                           
  3624                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  3625  000360  EFFD  F001         	goto	l4224
  3626  000364                     l4214:
  3627  000364  FFFF               	dw	65535	; assembler added errata NOP
  3628                           
  3629                           ; BSR set to: 0
  3630                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  3631  000366  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3632  00036A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3633  00036E  CFDE F008          	movff	postinc2,atoi@s
  3634  000372  CFDD F009          	movff	postdec2,atoi@s+1
  3635  000376  ECAB  F01C         	call	_atoi	;wreg free
  3636  00037A  C008  F088         	movff	?_atoi,_prec
  3637  00037E  C009  F089         	movff	?_atoi+1,_prec+1
  3638                           
  3639                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3640  000382  EFCB  F001         	goto	l4218
  3641  000386                     l4216:
  3642  000386  FFFF               	dw	65535	; assembler added errata NOP
  3643                           
  3644                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  3645  000388  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3646  00038C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3647  000390  2ADE               	incf	postinc2,f,c
  3648  000392  0E00               	movlw	0
  3649  000394  22DD               	addwfc	postdec2,f,c
  3650  000396                     l4218:
  3651  000396  FFFF               	dw	65535	; assembler added errata NOP
  3652  000398  0ED0               	movlw	208
  3653  00039A  6E49               	movwf	??_vfpfcnvrt^0,c
  3654  00039C  0EFF               	movlw	255
  3655  00039E  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  3656  0003A0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3657  0003A4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3658  0003A8  CFDE FFF6          	movff	postinc2,tblptrl
  3659  0003AC  CFDD FFF7          	movff	postdec2,tblptrh
  3660  0003B0                     	if	0	;tblptru may be non-zero
  3661  0003B0                     	endif
  3662  0003B0                     	if	0	;tblptru may be non-zero
  3663  0003B0                     	endif
  3664  0003B0  0008               	tblrd		*
  3665  0003B2  FFFF               	dw	65535	; errata NOP
  3666  0003B4  50F5               	movf	tablat,w,c
  3667  0003B6  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3668  0003B8  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  3669  0003BA  5049               	movf	??_vfpfcnvrt^0,w,c
  3670  0003BC  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3671  0003BE  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  3672  0003C0  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3673  0003C2  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  3674  0003C4  E10B               	bnz	u5020
  3675  0003C6  0E0A               	movlw	10
  3676  0003C8  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3677  0003CA  A0D8               	btfss	status,0,c
  3678  0003CC  EFEA  F001         	goto	u5021
  3679  0003D0  EFEE  F001         	goto	u5020
  3680  0003D4                     u5021:
  3681  0003D4  FFFF               	dw	65535	; assembler added errata NOP
  3682  0003D6  0E01               	movlw	1
  3683  0003D8  EFF0  F001         	goto	u5030
  3684  0003DC                     u5020:
  3685  0003DC  FFFF               	dw	65535	; assembler added errata NOP
  3686  0003DE  0E00               	movlw	0
  3687  0003E0                     u5030:
  3688  0003E0  FFFF               	dw	65535	; assembler added errata NOP
  3689  0003E2  6E53               	movwf	_vfpfcnvrt$1554^0,c
  3690  0003E4  6A54               	clrf	(_vfpfcnvrt$1554+1)^0,c
  3691  0003E6  5053               	movf	_vfpfcnvrt$1554^0,w,c
  3692  0003E8  1054               	iorwf	(_vfpfcnvrt$1554+1)^0,w,c
  3693  0003EA  A4D8               	btfss	status,2,c
  3694  0003EC  EFFA  F001         	goto	u5041
  3695  0003F0  EFFD  F001         	goto	u5040
  3696  0003F4                     u5041:
  3697  0003F4  FFFF               	dw	65535	; assembler added errata NOP
  3698  0003F6  EFC3  F001         	goto	l4216
  3699  0003FA                     u5040:
  3700  0003FA                     l4224:
  3701  0003FA  FFFF               	dw	65535	; assembler added errata NOP
  3702                           
  3703                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 792:         if (
      +                          *fmt[0] == 'c') {
  3704  0003FC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3705  000400  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3706  000404  CFDE FFF6          	movff	postinc2,tblptrl
  3707  000408  CFDD FFF7          	movff	postdec2,tblptrh
  3708  00040C                     	if	0	;tblptru may be non-zero
  3709  00040C                     	endif
  3710  00040C                     	if	0	;tblptru may be non-zero
  3711  00040C                     	endif
  3712  00040C  0008               	tblrd		*
  3713  00040E  FFFF               	dw	65535	; errata NOP
  3714  000410  50F5               	movf	tablat,w,c
  3715  000412  0A63               	xorlw	99
  3716  000414  A4D8               	btfss	status,2,c
  3717  000416  EF0F  F002         	goto	u5051
  3718  00041A  EF12  F002         	goto	u5050
  3719  00041E                     u5051:
  3720  00041E  FFFF               	dw	65535	; assembler added errata NOP
  3721  000420  EF3A  F002         	goto	l4232
  3722  000424                     u5050:
  3723  000424  FFFF               	dw	65535	; assembler added errata NOP
  3724  000426                     
  3725                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 793:             
      +                          ++*fmt;
  3726  000426  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3727  00042A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3728  00042E  2ADE               	incf	postinc2,f,c
  3729  000430  0E00               	movlw	0
  3730  000432  22DD               	addwfc	postdec2,f,c
  3731                           
  3732                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 794:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3733  000434  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3734  000438  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3735  00043C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3736  000440  0E02               	movlw	2
  3737  000442  26DE               	addwf	postinc2,f,c
  3738  000444  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3739  000448  0E00               	movlw	0
  3740  00044A  22DD               	addwfc	postdec2,f,c
  3741  00044C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3742  000450  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3743  000454  50DF               	movf	indf2,w,c
  3744  000456  6E5F               	movwf	vfpfcnvrt@c^0,c
  3745  000458                     
  3746                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 795:             
      +                          return ctoa(fp, c);
  3747  000458  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  3748  00045C  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  3749  000460  C05F  F01E         	movff	vfpfcnvrt@c,ctoa@c
  3750  000464  ECC7  F037         	call	_ctoa	;wreg free
  3751  000468  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  3752  00046C  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  3753  000470  EF29  F00A         	goto	l1234
  3754  000474                     l4232:
  3755  000474  FFFF               	dw	65535	; assembler added errata NOP
  3756                           
  3757                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 802:         if (
      +                          !strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((s
      +                          izeof("hhi")/sizeof("hhi"[0]))-1))) {
  3758  000476  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3759  00047A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3760  00047E  CFDE F001          	movff	postinc2,strncmp@_l
  3761  000482  CFDD F002          	movff	postdec2,strncmp@_l+1
  3762  000486  0ECE               	movlw	low STR_9
  3763  000488  6E03               	movwf	strncmp@_r^0,c
  3764  00048A  0E7F               	movlw	high STR_9
  3765  00048C  6E04               	movwf	(strncmp@_r+1)^0,c
  3766  00048E  0E00               	movlw	0
  3767  000490  6E06               	movwf	(strncmp@n+1)^0,c
  3768  000492  0E03               	movlw	3
  3769  000494  6E05               	movwf	strncmp@n^0,c
  3770  000496  EC3F  F03D         	call	_strncmp	;wreg free
  3771  00049A  5001               	movf	?_strncmp^0,w,c
  3772  00049C  1002               	iorwf	(?_strncmp+1)^0,w,c
  3773  00049E  B4D8               	btfsc	status,2,c
  3774  0004A0  EF54  F002         	goto	u5061
  3775  0004A4  EF57  F002         	goto	u5060
  3776  0004A8                     u5061:
  3777  0004A8  FFFF               	dw	65535	; assembler added errata NOP
  3778  0004AA  EF74  F002         	goto	l4236
  3779  0004AE                     u5060:
  3780  0004AE  FFFF               	dw	65535	; assembler added errata NOP
  3781  0004B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3782  0004B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3783  0004B8  CFDE F001          	movff	postinc2,strncmp@_l
  3784  0004BC  CFDD F002          	movff	postdec2,strncmp@_l+1
  3785  0004C0  0ED2               	movlw	low STR_13
  3786  0004C2  6E03               	movwf	strncmp@_r^0,c
  3787  0004C4  0E7F               	movlw	high STR_13
  3788  0004C6  6E04               	movwf	(strncmp@_r+1)^0,c
  3789  0004C8  0E00               	movlw	0
  3790  0004CA  6E06               	movwf	(strncmp@n+1)^0,c
  3791  0004CC  0E03               	movlw	3
  3792  0004CE  6E05               	movwf	strncmp@n^0,c
  3793  0004D0  EC3F  F03D         	call	_strncmp	;wreg free
  3794  0004D4  5001               	movf	?_strncmp^0,w,c
  3795  0004D6  1002               	iorwf	(?_strncmp+1)^0,w,c
  3796  0004D8  A4D8               	btfss	status,2,c
  3797  0004DA  EF71  F002         	goto	u5071
  3798  0004DE  EF74  F002         	goto	u5070
  3799  0004E2                     u5071:
  3800  0004E2  FFFF               	dw	65535	; assembler added errata NOP
  3801  0004E4  EFB6  F002         	goto	l4242
  3802  0004E8                     u5070:
  3803  0004E8                     l4236:
  3804  0004E8  FFFF               	dw	65535	; assembler added errata NOP
  3805                           
  3806                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 803: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 805:             *fmt += ((si
      +                          zeof("hhd")/sizeof("hhd"[0]))-1);
  3807  0004EA  0E03               	movlw	3
  3808  0004EC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3809  0004F0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3810  0004F4  26DE               	addwf	postinc2,f,c
  3811  0004F6  0E00               	movlw	0
  3812  0004F8  22DD               	addwfc	postdec2,f,c
  3813                           
  3814                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 806:             
      +                          ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3815  0004FA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3816  0004FE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3817  000502  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3818  000506  0E02               	movlw	2
  3819  000508  26DE               	addwf	postinc2,f,c
  3820  00050A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3821  00050E  0E00               	movlw	0
  3822  000510  22DD               	addwfc	postdec2,f,c
  3823  000512  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3824  000516  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3825  00051A  50DF               	movf	indf2,w,c
  3826  00051C  6E55               	movwf	vfpfcnvrt@ll^0,c
  3827  00051E  0E00               	movlw	0
  3828  000520  BE55               	btfsc	vfpfcnvrt@ll^0,7,c
  3829  000522  0EFF               	movlw	-1
  3830  000524  6E56               	movwf	(vfpfcnvrt@ll+1)^0,c
  3831  000526  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  3832  000528  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  3833  00052A  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  3834  00052C  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  3835  00052E  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  3836  000530  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  3837  000532                     l4238:
  3838  000532  FFFF               	dw	65535	; assembler added errata NOP
  3839                           
  3840                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 808:             
      +                          return dtoa(fp, ll);
  3841  000534  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3842  000538  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3843  00053C  C055  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  3844  000540  C056  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3845  000544  C057  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3846  000548  C058  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3847  00054C  C059  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3848  000550  C05A  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3849  000554  C05B  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3850  000558  C05C  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3851  00055C  EC6F  F016         	call	_dtoa	;wreg free
  3852  000560  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  3853  000564  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3854  000568  EF29  F00A         	goto	l1234
  3855  00056C                     l4242:
  3856  00056C  FFFF               	dw	65535	; assembler added errata NOP
  3857                           
  3858                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          !strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeo
      +                          f("hi")/sizeof("hi"[0]))-1))) {
  3859  00056E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3860  000572  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3861  000576  CFDE F001          	movff	postinc2,strncmp@_l
  3862  00057A  CFDD F002          	movff	postdec2,strncmp@_l+1
  3863  00057E  0ECF               	movlw	low (STR_9+1)
  3864  000580  6E03               	movwf	strncmp@_r^0,c
  3865  000582  0E7F               	movlw	high (STR_9+1)
  3866  000584  6E04               	movwf	(strncmp@_r+1)^0,c
  3867  000586  0E00               	movlw	0
  3868  000588  6E06               	movwf	(strncmp@n+1)^0,c
  3869  00058A  0E02               	movlw	2
  3870  00058C  6E05               	movwf	strncmp@n^0,c
  3871  00058E  EC3F  F03D         	call	_strncmp	;wreg free
  3872  000592  5001               	movf	?_strncmp^0,w,c
  3873  000594  1002               	iorwf	(?_strncmp+1)^0,w,c
  3874  000596  B4D8               	btfsc	status,2,c
  3875  000598  EFD0  F002         	goto	u5081
  3876  00059C  EFD3  F002         	goto	u5080
  3877  0005A0                     u5081:
  3878  0005A0  FFFF               	dw	65535	; assembler added errata NOP
  3879  0005A2  EFF0  F002         	goto	l4246
  3880  0005A6                     u5080:
  3881  0005A6  FFFF               	dw	65535	; assembler added errata NOP
  3882  0005A8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3883  0005AC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3884  0005B0  CFDE F001          	movff	postinc2,strncmp@_l
  3885  0005B4  CFDD F002          	movff	postdec2,strncmp@_l+1
  3886  0005B8  0ED3               	movlw	low (STR_13+1)
  3887  0005BA  6E03               	movwf	strncmp@_r^0,c
  3888  0005BC  0E7F               	movlw	high (STR_13+1)
  3889  0005BE  6E04               	movwf	(strncmp@_r+1)^0,c
  3890  0005C0  0E00               	movlw	0
  3891  0005C2  6E06               	movwf	(strncmp@n+1)^0,c
  3892  0005C4  0E02               	movlw	2
  3893  0005C6  6E05               	movwf	strncmp@n^0,c
  3894  0005C8  EC3F  F03D         	call	_strncmp	;wreg free
  3895  0005CC  5001               	movf	?_strncmp^0,w,c
  3896  0005CE  1002               	iorwf	(?_strncmp+1)^0,w,c
  3897  0005D0  A4D8               	btfss	status,2,c
  3898  0005D2  EFED  F002         	goto	u5091
  3899  0005D6  EFF0  F002         	goto	u5090
  3900  0005DA                     u5091:
  3901  0005DA  FFFF               	dw	65535	; assembler added errata NOP
  3902  0005DC  EF18  F003         	goto	l4252
  3903  0005E0                     u5090:
  3904  0005E0                     l4246:
  3905  0005E0  FFFF               	dw	65535	; assembler added errata NOP
  3906                           
  3907                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 815: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 817:             *fmt += ((si
      +                          zeof("hd")/sizeof("hd"[0]))-1);
  3908  0005E2  0E02               	movlw	2
  3909  0005E4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3910  0005E8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3911  0005EC  26DE               	addwf	postinc2,f,c
  3912  0005EE  0E00               	movlw	0
  3913  0005F0  22DD               	addwfc	postdec2,f,c
  3914                           
  3915                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 818:             
      +                          ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  3916  0005F2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3917  0005F6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3918  0005FA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3919  0005FE  0E02               	movlw	2
  3920  000600  26DE               	addwf	postinc2,f,c
  3921  000602  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3922  000606  0E00               	movlw	0
  3923  000608  22DD               	addwfc	postdec2,f,c
  3924  00060A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3925  00060E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3926  000612  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  3927  000616  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  3928  00061A  0E00               	movlw	0
  3929  00061C  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  3930  00061E  0EFF               	movlw	-1
  3931  000620  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  3932  000622  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  3933  000624  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  3934  000626  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  3935  000628  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  3936  00062A  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  3937  00062C  EF99  F002         	goto	l4238
  3938  000630                     l4252:
  3939  000630  FFFF               	dw	65535	; assembler added errata NOP
  3940                           
  3941                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3942  000632  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3943  000636  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3944  00063A  CFDE FFF6          	movff	postinc2,tblptrl
  3945  00063E  CFDD FFF7          	movff	postdec2,tblptrh
  3946  000642                     	if	0	;tblptru may be non-zero
  3947  000642                     	endif
  3948  000642                     	if	0	;tblptru may be non-zero
  3949  000642                     	endif
  3950  000642  0008               	tblrd		*
  3951  000644  FFFF               	dw	65535	; errata NOP
  3952  000646  50F5               	movf	tablat,w,c
  3953  000648  0A64               	xorlw	100
  3954  00064A  B4D8               	btfsc	status,2,c
  3955  00064C  EF2A  F003         	goto	u5101
  3956  000650  EF2D  F003         	goto	u5100
  3957  000654                     u5101:
  3958  000654  FFFF               	dw	65535	; assembler added errata NOP
  3959  000656  EF42  F003         	goto	l4256
  3960  00065A                     u5100:
  3961  00065A  FFFF               	dw	65535	; assembler added errata NOP
  3962  00065C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3963  000660  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3964  000664  CFDE FFF6          	movff	postinc2,tblptrl
  3965  000668  CFDD FFF7          	movff	postdec2,tblptrh
  3966  00066C                     	if	0	;tblptru may be non-zero
  3967  00066C                     	endif
  3968  00066C                     	if	0	;tblptru may be non-zero
  3969  00066C                     	endif
  3970  00066C  0008               	tblrd		*
  3971  00066E  FFFF               	dw	65535	; errata NOP
  3972  000670  50F5               	movf	tablat,w,c
  3973  000672  0A69               	xorlw	105
  3974  000674  A4D8               	btfss	status,2,c
  3975  000676  EF3F  F003         	goto	u5111
  3976  00067A  EF42  F003         	goto	u5110
  3977  00067E                     u5111:
  3978  00067E  FFFF               	dw	65535	; assembler added errata NOP
  3979  000680  EF69  F003         	goto	l4262
  3980  000684                     u5110:
  3981  000684                     l4256:
  3982  000684  FFFF               	dw	65535	; assembler added errata NOP
  3983                           
  3984                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  3985  000686  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3986  00068A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3987  00068E  2ADE               	incf	postinc2,f,c
  3988  000690  0E00               	movlw	0
  3989  000692  22DD               	addwfc	postdec2,f,c
  3990                           
  3991                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3992  000694  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3993  000698  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3994  00069C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3995  0006A0  0E02               	movlw	2
  3996  0006A2  26DE               	addwf	postinc2,f,c
  3997  0006A4  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3998  0006A8  0E00               	movlw	0
  3999  0006AA  22DD               	addwfc	postdec2,f,c
  4000  0006AC  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4001  0006B0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4002  0006B4  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  4003  0006B8  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  4004  0006BC  0E00               	movlw	0
  4005  0006BE  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4006  0006C0  0EFF               	movlw	-1
  4007  0006C2  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  4008  0006C4  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  4009  0006C6  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  4010  0006C8  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  4011  0006CA  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  4012  0006CC  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  4013  0006CE  EF99  F002         	goto	l4238
  4014  0006D2                     l4262:
  4015  0006D2  FFFF               	dw	65535	; assembler added errata NOP
  4016                           
  4017                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 883:         if (
      +                          !strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeo
      +                          f("zi")/sizeof("zi"[0]))-1))) {
  4018  0006D4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4019  0006D8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4020  0006DC  CFDE F001          	movff	postinc2,strncmp@_l
  4021  0006E0  CFDD F002          	movff	postdec2,strncmp@_l+1
  4022  0006E4  0EE9               	movlw	low STR_27
  4023  0006E6  6E03               	movwf	strncmp@_r^0,c
  4024  0006E8  0E7F               	movlw	high STR_27
  4025  0006EA  6E04               	movwf	(strncmp@_r+1)^0,c
  4026  0006EC  0E00               	movlw	0
  4027  0006EE  6E06               	movwf	(strncmp@n+1)^0,c
  4028  0006F0  0E02               	movlw	2
  4029  0006F2  6E05               	movwf	strncmp@n^0,c
  4030  0006F4  EC3F  F03D         	call	_strncmp	;wreg free
  4031  0006F8  5001               	movf	?_strncmp^0,w,c
  4032  0006FA  1002               	iorwf	(?_strncmp+1)^0,w,c
  4033  0006FC  B4D8               	btfsc	status,2,c
  4034  0006FE  EF83  F003         	goto	u5121
  4035  000702  EF86  F003         	goto	u5120
  4036  000706                     u5121:
  4037  000706  FFFF               	dw	65535	; assembler added errata NOP
  4038  000708  EFA3  F003         	goto	l4266
  4039  00070C                     u5120:
  4040  00070C  FFFF               	dw	65535	; assembler added errata NOP
  4041  00070E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4042  000712  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4043  000716  CFDE F001          	movff	postinc2,strncmp@_l
  4044  00071A  CFDD F002          	movff	postdec2,strncmp@_l+1
  4045  00071E  0EEC               	movlw	low STR_31
  4046  000720  6E03               	movwf	strncmp@_r^0,c
  4047  000722  0E7F               	movlw	high STR_31
  4048  000724  6E04               	movwf	(strncmp@_r+1)^0,c
  4049  000726  0E00               	movlw	0
  4050  000728  6E06               	movwf	(strncmp@n+1)^0,c
  4051  00072A  0E02               	movlw	2
  4052  00072C  6E05               	movwf	strncmp@n^0,c
  4053  00072E  EC3F  F03D         	call	_strncmp	;wreg free
  4054  000732  5001               	movf	?_strncmp^0,w,c
  4055  000734  1002               	iorwf	(?_strncmp+1)^0,w,c
  4056  000736  A4D8               	btfss	status,2,c
  4057  000738  EFA0  F003         	goto	u5131
  4058  00073C  EFA3  F003         	goto	u5130
  4059  000740                     u5131:
  4060  000740  FFFF               	dw	65535	; assembler added errata NOP
  4061  000742  EFCC  F003         	goto	l4272
  4062  000746                     u5130:
  4063  000746                     l4266:
  4064  000746  FFFF               	dw	65535	; assembler added errata NOP
  4065                           
  4066                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 884: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 886:             *fmt += ((si
      +                          zeof("zd")/sizeof("zd"[0]))-1);
  4067  000748  0E02               	movlw	2
  4068  00074A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4069  00074E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4070  000752  26DE               	addwf	postinc2,f,c
  4071  000754  0E00               	movlw	0
  4072  000756  22DD               	addwfc	postdec2,f,c
  4073                           
  4074                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 887:             
      +                          ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4075  000758  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4076  00075C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4077  000760  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4078  000764  0E02               	movlw	2
  4079  000766  26DE               	addwf	postinc2,f,c
  4080  000768  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4081  00076C  0E00               	movlw	0
  4082  00076E  22DD               	addwfc	postdec2,f,c
  4083  000770  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4084  000774  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4085  000778  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4086  00077C  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4087  000780  C04B  F055         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  4088  000784  C04C  F056         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  4089  000788  6A57               	clrf	(vfpfcnvrt@ll+2)^0,c
  4090  00078A  6A58               	clrf	(vfpfcnvrt@ll+3)^0,c
  4091  00078C  6A59               	clrf	(vfpfcnvrt@ll+4)^0,c
  4092  00078E  6A5A               	clrf	(vfpfcnvrt@ll+5)^0,c
  4093  000790  6A5B               	clrf	(vfpfcnvrt@ll+6)^0,c
  4094  000792  6A5C               	clrf	(vfpfcnvrt@ll+7)^0,c
  4095  000794  EF99  F002         	goto	l4238
  4096  000798                     l4272:
  4097  000798  FFFF               	dw	65535	; assembler added errata NOP
  4098                           
  4099                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 969:         if (
      +                          !strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  4100  00079A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4101  00079E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4102  0007A2  CFDE F001          	movff	postinc2,strncmp@_l
  4103  0007A6  CFDD F002          	movff	postdec2,strncmp@_l+1
  4104  0007AA  0EDA               	movlw	low STR_36
  4105  0007AC  6E03               	movwf	strncmp@_r^0,c
  4106  0007AE  0E7F               	movlw	high STR_36
  4107  0007B0  6E04               	movwf	(strncmp@_r+1)^0,c
  4108  0007B2  0E00               	movlw	0
  4109  0007B4  6E06               	movwf	(strncmp@n+1)^0,c
  4110  0007B6  0E03               	movlw	3
  4111  0007B8  6E05               	movwf	strncmp@n^0,c
  4112  0007BA  EC3F  F03D         	call	_strncmp	;wreg free
  4113  0007BE  5001               	movf	?_strncmp^0,w,c
  4114  0007C0  1002               	iorwf	(?_strncmp+1)^0,w,c
  4115  0007C2  A4D8               	btfss	status,2,c
  4116  0007C4  EFE6  F003         	goto	u5141
  4117  0007C8  EFE9  F003         	goto	u5140
  4118  0007CC                     u5141:
  4119  0007CC  FFFF               	dw	65535	; assembler added errata NOP
  4120  0007CE  EF2A  F004         	goto	l4280
  4121  0007D2                     u5140:
  4122  0007D2  FFFF               	dw	65535	; assembler added errata NOP
  4123  0007D4                     
  4124                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 971:             
      +                          *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  4125  0007D4  0E03               	movlw	3
  4126  0007D6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4127  0007DA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4128  0007DE  26DE               	addwf	postinc2,f,c
  4129  0007E0  0E00               	movlw	0
  4130  0007E2  22DD               	addwfc	postdec2,f,c
  4131                           
  4132                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 972:             
      +                          llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4133  0007E4  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4134  0007E8  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4135  0007EC  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4136  0007F0  0E02               	movlw	2
  4137  0007F2  26DE               	addwf	postinc2,f,c
  4138  0007F4  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4139  0007F8  0E00               	movlw	0
  4140  0007FA  22DD               	addwfc	postdec2,f,c
  4141  0007FC  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4142  000800  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4143  000804  50DF               	movf	indf2,w,c
  4144  000806  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4145  000808  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  4146  00080A  6E60               	movwf	vfpfcnvrt@llu^0,c
  4147  00080C  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  4148  00080E  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4149  000810  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4150  000812  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4151  000814  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4152  000816  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4153  000818  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4154  00081A                     l4276:
  4155  00081A  FFFF               	dw	65535	; assembler added errata NOP
  4156                           
  4157                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 974:             
      +                          return otoa(fp, llu);
  4158  00081C  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  4159  000820  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  4160  000824  C060  F01E         	movff	vfpfcnvrt@llu,otoa@d
  4161  000828  C061  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  4162  00082C  C062  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  4163  000830  C063  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  4164  000834  C064  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  4165  000838  C065  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  4166  00083C  C066  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  4167  000840  C067  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  4168  000844  ECB2  F01A         	call	_otoa	;wreg free
  4169  000848  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  4170  00084C  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  4171  000850  EF29  F00A         	goto	l1234
  4172  000854                     l4280:
  4173  000854  FFFF               	dw	65535	; assembler added errata NOP
  4174                           
  4175                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 980:         if (
      +                          !strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  4176  000856  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4177  00085A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4178  00085E  CFDE F001          	movff	postinc2,strncmp@_l
  4179  000862  CFDD F002          	movff	postdec2,strncmp@_l+1
  4180  000866  0EDB               	movlw	low (STR_36+1)
  4181  000868  6E03               	movwf	strncmp@_r^0,c
  4182  00086A  0E7F               	movlw	high (STR_36+1)
  4183  00086C  6E04               	movwf	(strncmp@_r+1)^0,c
  4184  00086E  0E00               	movlw	0
  4185  000870  6E06               	movwf	(strncmp@n+1)^0,c
  4186  000872  0E02               	movlw	2
  4187  000874  6E05               	movwf	strncmp@n^0,c
  4188  000876  EC3F  F03D         	call	_strncmp	;wreg free
  4189  00087A  5001               	movf	?_strncmp^0,w,c
  4190  00087C  1002               	iorwf	(?_strncmp+1)^0,w,c
  4191  00087E  A4D8               	btfss	status,2,c
  4192  000880  EF44  F004         	goto	u5151
  4193  000884  EF47  F004         	goto	u5150
  4194  000888                     u5151:
  4195  000888  FFFF               	dw	65535	; assembler added errata NOP
  4196  00088A  EF70  F004         	goto	l4288
  4197  00088E                     u5150:
  4198  00088E  FFFF               	dw	65535	; assembler added errata NOP
  4199  000890                     
  4200                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 982:             
      +                          *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  4201  000890  0E02               	movlw	2
  4202  000892  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4203  000896  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4204  00089A  26DE               	addwf	postinc2,f,c
  4205  00089C  0E00               	movlw	0
  4206  00089E  22DD               	addwfc	postdec2,f,c
  4207                           
  4208                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 983:             
      +                          llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4209  0008A0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4210  0008A4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4211  0008A8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4212  0008AC  0E02               	movlw	2
  4213  0008AE  26DE               	addwf	postinc2,f,c
  4214  0008B0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4215  0008B4  0E00               	movlw	0
  4216  0008B6  22DD               	addwfc	postdec2,f,c
  4217  0008B8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4218  0008BC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4219  0008C0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4220  0008C4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4221  0008C8  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4222  0008CC  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4223  0008D0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4224  0008D2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4225  0008D4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4226  0008D6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4227  0008D8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4228  0008DA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4229  0008DC  EF0D  F004         	goto	l4276
  4230  0008E0                     l4288:
  4231  0008E0  FFFF               	dw	65535	; assembler added errata NOP
  4232                           
  4233                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 990:         if (
      +                          *fmt[0] == 'o') {
  4234  0008E2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4235  0008E6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4236  0008EA  CFDE FFF6          	movff	postinc2,tblptrl
  4237  0008EE  CFDD FFF7          	movff	postdec2,tblptrh
  4238  0008F2                     	if	0	;tblptru may be non-zero
  4239  0008F2                     	endif
  4240  0008F2                     	if	0	;tblptru may be non-zero
  4241  0008F2                     	endif
  4242  0008F2  0008               	tblrd		*
  4243  0008F4  FFFF               	dw	65535	; errata NOP
  4244  0008F6  50F5               	movf	tablat,w,c
  4245  0008F8  0A6F               	xorlw	111
  4246  0008FA  A4D8               	btfss	status,2,c
  4247  0008FC  EF82  F004         	goto	u5161
  4248  000900  EF85  F004         	goto	u5160
  4249  000904                     u5161:
  4250  000904  FFFF               	dw	65535	; assembler added errata NOP
  4251  000906  EFAD  F004         	goto	l4296
  4252  00090A                     u5160:
  4253  00090A  FFFF               	dw	65535	; assembler added errata NOP
  4254  00090C                     
  4255                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 992:             
      +                          ++*fmt;
  4256  00090C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4257  000910  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4258  000914  2ADE               	incf	postinc2,f,c
  4259  000916  0E00               	movlw	0
  4260  000918  22DD               	addwfc	postdec2,f,c
  4261                           
  4262                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 993:             
      +                          llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int
      +                          )0));
  4263  00091A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4264  00091E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4265  000922  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4266  000926  0E02               	movlw	2
  4267  000928  26DE               	addwf	postinc2,f,c
  4268  00092A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4269  00092E  0E00               	movlw	0
  4270  000930  22DD               	addwfc	postdec2,f,c
  4271  000932  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4272  000936  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4273  00093A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4274  00093E  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4275  000942  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4276  000946  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4277  00094A  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4278  00094C  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4279  00094E  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4280  000950  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4281  000952  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4282  000954  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4283  000956  EF0D  F004         	goto	l4276
  4284  00095A                     l4296:
  4285  00095A  FFFF               	dw	65535	; assembler added errata NOP
  4286                           
  4287                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1044:         if 
      +                          (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  4288  00095C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4289  000960  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4290  000964  CFDE F001          	movff	postinc2,strncmp@_l
  4291  000968  CFDD F002          	movff	postdec2,strncmp@_l+1
  4292  00096C  0EF2               	movlw	low STR_46
  4293  00096E  6E03               	movwf	strncmp@_r^0,c
  4294  000970  0E7F               	movlw	high STR_46
  4295  000972  6E04               	movwf	(strncmp@_r+1)^0,c
  4296  000974  0E00               	movlw	0
  4297  000976  6E06               	movwf	(strncmp@n+1)^0,c
  4298  000978  0E02               	movlw	2
  4299  00097A  6E05               	movwf	strncmp@n^0,c
  4300  00097C  EC3F  F03D         	call	_strncmp	;wreg free
  4301  000980  5001               	movf	?_strncmp^0,w,c
  4302  000982  1002               	iorwf	(?_strncmp+1)^0,w,c
  4303  000984  A4D8               	btfss	status,2,c
  4304  000986  EFC7  F004         	goto	u5171
  4305  00098A  EFCA  F004         	goto	u5170
  4306  00098E                     u5171:
  4307  00098E  FFFF               	dw	65535	; assembler added errata NOP
  4308  000990  EFF3  F004         	goto	l4304
  4309  000994                     u5170:
  4310  000994  FFFF               	dw	65535	; assembler added errata NOP
  4311  000996                     
  4312                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1046:            
      +                           *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  4313  000996  0E02               	movlw	2
  4314  000998  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4315  00099C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4316  0009A0  26DE               	addwf	postinc2,f,c
  4317  0009A2  0E00               	movlw	0
  4318  0009A4  22DD               	addwfc	postdec2,f,c
  4319                           
  4320                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1047:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4321  0009A6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4322  0009AA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4323  0009AE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4324  0009B2  0E02               	movlw	2
  4325  0009B4  26DE               	addwf	postinc2,f,c
  4326  0009B6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4327  0009BA  0E00               	movlw	0
  4328  0009BC  22DD               	addwfc	postdec2,f,c
  4329  0009BE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4330  0009C2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4331  0009C6  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4332  0009CA  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4333  0009CE  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4334  0009D2  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4335  0009D6  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4336  0009D8  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4337  0009DA  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4338  0009DC  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4339  0009DE  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4340  0009E0  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4341  0009E2  EF0D  F004         	goto	l4276
  4342  0009E6                     l4304:
  4343  0009E6  FFFF               	dw	65535	; assembler added errata NOP
  4344                           
  4345                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1058:         if 
      +                          (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  4346  0009E8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4347  0009EC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4348  0009F0  CFDE F001          	movff	postinc2,strncmp@_l
  4349  0009F4  CFDD F002          	movff	postdec2,strncmp@_l+1
  4350  0009F8  0ED6               	movlw	low STR_51
  4351  0009FA  6E03               	movwf	strncmp@_r^0,c
  4352  0009FC  0E7F               	movlw	high STR_51
  4353  0009FE  6E04               	movwf	(strncmp@_r+1)^0,c
  4354  000A00  0E00               	movlw	0
  4355  000A02  6E06               	movwf	(strncmp@n+1)^0,c
  4356  000A04  0E03               	movlw	3
  4357  000A06  6E05               	movwf	strncmp@n^0,c
  4358  000A08  EC3F  F03D         	call	_strncmp	;wreg free
  4359  000A0C  5001               	movf	?_strncmp^0,w,c
  4360  000A0E  1002               	iorwf	(?_strncmp+1)^0,w,c
  4361  000A10  A4D8               	btfss	status,2,c
  4362  000A12  EF0D  F005         	goto	u5181
  4363  000A16  EF10  F005         	goto	u5180
  4364  000A1A                     u5181:
  4365  000A1A  FFFF               	dw	65535	; assembler added errata NOP
  4366  000A1C  EF46  F005         	goto	l4314
  4367  000A20                     u5180:
  4368  000A20  FFFF               	dw	65535	; assembler added errata NOP
  4369  000A22                     
  4370                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1060:            
      +                           *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  4371  000A22  0E03               	movlw	3
  4372  000A24  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4373  000A28  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4374  000A2C  26DE               	addwf	postinc2,f,c
  4375  000A2E  0E00               	movlw	0
  4376  000A30  22DD               	addwfc	postdec2,f,c
  4377                           
  4378                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1061:            
      +                           vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4379  000A32  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4380  000A36  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4381  000A3A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4382  000A3E  0E02               	movlw	2
  4383  000A40  26DE               	addwf	postinc2,f,c
  4384  000A42  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4385  000A46  0E00               	movlw	0
  4386  000A48  22DD               	addwfc	postdec2,f,c
  4387  000A4A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4388  000A4E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4389  000A52  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4390  000A56  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4391  000A5A                     
  4392                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1062:            
      +                           *(char *)vp = (char)nout;
  4393  000A5A  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4394  000A5E  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4395  000A62  6AF8               	clrf	tblptru,c
  4396  000A64  0E05               	movlw	(high __ramtop+-1)
  4397  000A66  64F7               	cpfsgt	tblptrh,c
  4398  000A68  D004               	bra	u5197
  4399  000A6A  C084  FFF5         	movff	_nout,tablat
  4400  000A6E  000C               	tblwt		*
  4401  000A70  D006               	bra	u5190
  4402  000A72                     u5197:
  4403  000A72  CFF6 FFE1          	movff	tblptrl,fsr1l
  4404  000A76  CFF7 FFE2          	movff	tblptrh,fsr1h
  4405  000A7A  C084  FFE7         	movff	_nout,indf1
  4406  000A7E                     u5190:
  4407  000A7E                     l4310:
  4408  000A7E  FFFF               	dw	65535	; assembler added errata NOP
  4409                           
  4410                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1063:            
      +                           return 0;
  4411  000A80  0E00               	movlw	0
  4412  000A82  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  4413  000A84  0E00               	movlw	0
  4414  000A86  6E43               	movwf	?_vfpfcnvrt^0,c
  4415  000A88  EF29  F00A         	goto	l1234
  4416  000A8C                     l4314:
  4417  000A8C  FFFF               	dw	65535	; assembler added errata NOP
  4418                           
  4419                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1068:         if 
      +                          (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  4420  000A8E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4421  000A92  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4422  000A96  CFDE F001          	movff	postinc2,strncmp@_l
  4423  000A9A  CFDD F002          	movff	postdec2,strncmp@_l+1
  4424  000A9E  0ED7               	movlw	low (STR_51+1)
  4425  000AA0  6E03               	movwf	strncmp@_r^0,c
  4426  000AA2  0E7F               	movlw	high (STR_51+1)
  4427  000AA4  6E04               	movwf	(strncmp@_r+1)^0,c
  4428  000AA6  0E00               	movlw	0
  4429  000AA8  6E06               	movwf	(strncmp@n+1)^0,c
  4430  000AAA  0E02               	movlw	2
  4431  000AAC  6E05               	movwf	strncmp@n^0,c
  4432  000AAE  EC3F  F03D         	call	_strncmp	;wreg free
  4433  000AB2  5001               	movf	?_strncmp^0,w,c
  4434  000AB4  1002               	iorwf	(?_strncmp+1)^0,w,c
  4435  000AB6  A4D8               	btfss	status,2,c
  4436  000AB8  EF60  F005         	goto	u5201
  4437  000ABC  EF63  F005         	goto	u5200
  4438  000AC0                     u5201:
  4439  000AC0  FFFF               	dw	65535	; assembler added errata NOP
  4440  000AC2  EF99  F005         	goto	l4324
  4441  000AC6                     u5200:
  4442  000AC6  FFFF               	dw	65535	; assembler added errata NOP
  4443  000AC8                     
  4444                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1070:            
      +                           *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  4445  000AC8  0E02               	movlw	2
  4446  000ACA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4447  000ACE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4448  000AD2  26DE               	addwf	postinc2,f,c
  4449  000AD4  0E00               	movlw	0
  4450  000AD6  22DD               	addwfc	postdec2,f,c
  4451                           
  4452                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1071:            
      +                           vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  4453  000AD8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4454  000ADC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4455  000AE0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4456  000AE4  0E02               	movlw	2
  4457  000AE6  26DE               	addwf	postinc2,f,c
  4458  000AE8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4459  000AEC  0E00               	movlw	0
  4460  000AEE  22DD               	addwfc	postdec2,f,c
  4461  000AF0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4462  000AF4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4463  000AF8  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4464  000AFC  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4465  000B00                     
  4466                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1072:            
      +                           *(short *)vp = (short)nout;
  4467  000B00  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4468  000B04  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4469  000B08  6AF8               	clrf	tblptru,c
  4470  000B0A  0E05               	movlw	(high __ramtop+-1)
  4471  000B0C  64F7               	cpfsgt	tblptrh,c
  4472  000B0E  D007               	bra	u5217
  4473  000B10  C084  FFF5         	movff	_nout,tablat
  4474  000B14  000D               	tblwt		*+
  4475  000B16  C085  FFF5         	movff	_nout+1,tablat
  4476  000B1A  000C               	tblwt		*
  4477  000B1C  D008               	bra	u5210
  4478  000B1E                     u5217:
  4479  000B1E  CFF6 FFE1          	movff	tblptrl,fsr1l
  4480  000B22  CFF7 FFE2          	movff	tblptrh,fsr1h
  4481  000B26  C084  FFE6         	movff	_nout,postinc1
  4482  000B2A  C085  FFE7         	movff	_nout+1,indf1
  4483  000B2E                     u5210:
  4484  000B2E  EF3F  F005         	goto	l4310
  4485  000B32                     l4324:
  4486  000B32  FFFF               	dw	65535	; assembler added errata NOP
  4487                           
  4488                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1077:         if 
      +                          (*fmt[0] == 'n') {
  4489  000B34  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4490  000B38  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4491  000B3C  CFDE FFF6          	movff	postinc2,tblptrl
  4492  000B40  CFDD FFF7          	movff	postdec2,tblptrh
  4493  000B44                     	if	0	;tblptru may be non-zero
  4494  000B44                     	endif
  4495  000B44                     	if	0	;tblptru may be non-zero
  4496  000B44                     	endif
  4497  000B44  0008               	tblrd		*
  4498  000B46  FFFF               	dw	65535	; errata NOP
  4499  000B48  50F5               	movf	tablat,w,c
  4500  000B4A  0A6E               	xorlw	110
  4501  000B4C  A4D8               	btfss	status,2,c
  4502  000B4E  EFAB  F005         	goto	u5221
  4503  000B52  EFAE  F005         	goto	u5220
  4504  000B56                     u5221:
  4505  000B56  FFFF               	dw	65535	; assembler added errata NOP
  4506  000B58  EFE3  F005         	goto	l4334
  4507  000B5C                     u5220:
  4508  000B5C  FFFF               	dw	65535	; assembler added errata NOP
  4509  000B5E                     
  4510                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1078:            
      +                           ++*fmt;
  4511  000B5E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4512  000B62  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4513  000B66  2ADE               	incf	postinc2,f,c
  4514  000B68  0E00               	movlw	0
  4515  000B6A  22DD               	addwfc	postdec2,f,c
  4516                           
  4517                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1079:            
      +                           vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  4518  000B6C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4519  000B70  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4520  000B74  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4521  000B78  0E02               	movlw	2
  4522  000B7A  26DE               	addwf	postinc2,f,c
  4523  000B7C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4524  000B80  0E00               	movlw	0
  4525  000B82  22DD               	addwfc	postdec2,f,c
  4526  000B84  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4527  000B88  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4528  000B8C  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4529  000B90  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4530  000B94                     
  4531                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1080:            
      +                           *(int *)vp = nout;
  4532  000B94  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4533  000B98  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4534  000B9C  6AF8               	clrf	tblptru,c
  4535  000B9E  0E05               	movlw	(high __ramtop+-1)
  4536  000BA0  64F7               	cpfsgt	tblptrh,c
  4537  000BA2  D007               	bra	u5237
  4538  000BA4  C084  FFF5         	movff	_nout,tablat
  4539  000BA8  000D               	tblwt		*+
  4540  000BAA  C085  FFF5         	movff	_nout+1,tablat
  4541  000BAE  000C               	tblwt		*
  4542  000BB0  D008               	bra	u5230
  4543  000BB2                     u5237:
  4544  000BB2  CFF6 FFE1          	movff	tblptrl,fsr1l
  4545  000BB6  CFF7 FFE2          	movff	tblptrh,fsr1h
  4546  000BBA  C084  FFE6         	movff	_nout,postinc1
  4547  000BBE  C085  FFE7         	movff	_nout+1,indf1
  4548  000BC2                     u5230:
  4549  000BC2  EF3F  F005         	goto	l4310
  4550  000BC6                     l4334:
  4551  000BC6  FFFF               	dw	65535	; assembler added errata NOP
  4552                           
  4553                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1125:         if 
      +                          (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  4554  000BC8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4555  000BCC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4556  000BD0  CFDE F001          	movff	postinc2,strncmp@_l
  4557  000BD4  CFDD F002          	movff	postdec2,strncmp@_l+1
  4558  000BD8  0EEF               	movlw	low STR_61
  4559  000BDA  6E03               	movwf	strncmp@_r^0,c
  4560  000BDC  0E7F               	movlw	high STR_61
  4561  000BDE  6E04               	movwf	(strncmp@_r+1)^0,c
  4562  000BE0  0E00               	movlw	0
  4563  000BE2  6E06               	movwf	(strncmp@n+1)^0,c
  4564  000BE4  0E02               	movlw	2
  4565  000BE6  6E05               	movwf	strncmp@n^0,c
  4566  000BE8  EC3F  F03D         	call	_strncmp	;wreg free
  4567  000BEC  5001               	movf	?_strncmp^0,w,c
  4568  000BEE  1002               	iorwf	(?_strncmp+1)^0,w,c
  4569  000BF0  A4D8               	btfss	status,2,c
  4570  000BF2  EFFD  F005         	goto	u5241
  4571  000BF6  EF00  F006         	goto	u5240
  4572  000BFA                     u5241:
  4573  000BFA  FFFF               	dw	65535	; assembler added errata NOP
  4574  000BFC  EF36  F006         	goto	l4344
  4575  000C00                     u5240:
  4576  000C00  FFFF               	dw	65535	; assembler added errata NOP
  4577  000C02                     
  4578                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1127:            
      +                           *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  4579  000C02  0E02               	movlw	2
  4580  000C04  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4581  000C08  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4582  000C0C  26DE               	addwf	postinc2,f,c
  4583  000C0E  0E00               	movlw	0
  4584  000C10  22DD               	addwfc	postdec2,f,c
  4585                           
  4586                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1128:            
      +                           vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  4587  000C12  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4588  000C16  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4589  000C1A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4590  000C1E  0E02               	movlw	2
  4591  000C20  26DE               	addwf	postinc2,f,c
  4592  000C22  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4593  000C26  0E00               	movlw	0
  4594  000C28  22DD               	addwfc	postdec2,f,c
  4595  000C2A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4596  000C2E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4597  000C32  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  4598  000C36  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  4599  000C3A                     
  4600                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1129:            
      +                           *(size_t *)vp = (size_t)nout;
  4601  000C3A  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  4602  000C3E  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  4603  000C42  6AF8               	clrf	tblptru,c
  4604  000C44  0E05               	movlw	(high __ramtop+-1)
  4605  000C46  64F7               	cpfsgt	tblptrh,c
  4606  000C48  D007               	bra	u5257
  4607  000C4A  C084  FFF5         	movff	_nout,tablat
  4608  000C4E  000D               	tblwt		*+
  4609  000C50  C085  FFF5         	movff	_nout+1,tablat
  4610  000C54  000C               	tblwt		*
  4611  000C56  D008               	bra	u5250
  4612  000C58                     u5257:
  4613  000C58  CFF6 FFE1          	movff	tblptrl,fsr1l
  4614  000C5C  CFF7 FFE2          	movff	tblptrh,fsr1h
  4615  000C60  C084  FFE6         	movff	_nout,postinc1
  4616  000C64  C085  FFE7         	movff	_nout+1,indf1
  4617  000C68                     u5250:
  4618  000C68  EF3F  F005         	goto	l4310
  4619  000C6C                     l4344:
  4620  000C6C  FFFF               	dw	65535	; assembler added errata NOP
  4621                           
  4622                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1138:         if 
      +                          (*fmt[0] == 'p') {
  4623  000C6E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4624  000C72  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4625  000C76  CFDE FFF6          	movff	postinc2,tblptrl
  4626  000C7A  CFDD FFF7          	movff	postdec2,tblptrh
  4627  000C7E                     	if	0	;tblptru may be non-zero
  4628  000C7E                     	endif
  4629  000C7E                     	if	0	;tblptru may be non-zero
  4630  000C7E                     	endif
  4631  000C7E  0008               	tblrd		*
  4632  000C80  FFFF               	dw	65535	; errata NOP
  4633  000C82  50F5               	movf	tablat,w,c
  4634  000C84  0A70               	xorlw	112
  4635  000C86  A4D8               	btfss	status,2,c
  4636  000C88  EF48  F006         	goto	u5261
  4637  000C8C  EF4B  F006         	goto	u5260
  4638  000C90                     u5261:
  4639  000C90  FFFF               	dw	65535	; assembler added errata NOP
  4640  000C92  EF8F  F006         	goto	l4352
  4641  000C96                     u5260:
  4642  000C96  FFFF               	dw	65535	; assembler added errata NOP
  4643  000C98                     
  4644                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1140:            
      +                           ++*fmt;
  4645  000C98  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4646  000C9C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4647  000CA0  2ADE               	incf	postinc2,f,c
  4648  000CA2  0E00               	movlw	0
  4649  000CA4  22DD               	addwfc	postdec2,f,c
  4650                           
  4651                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1141:            
      +                           llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  4652  000CA6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4653  000CAA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4654  000CAE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4655  000CB2  0E02               	movlw	2
  4656  000CB4  26DE               	addwf	postinc2,f,c
  4657  000CB6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4658  000CBA  0E00               	movlw	0
  4659  000CBC  22DD               	addwfc	postdec2,f,c
  4660  000CBE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4661  000CC2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4662  000CC6  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4663  000CCA  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4664  000CCE  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4665  000CD2  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4666  000CD6  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4667  000CD8  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4668  000CDA  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4669  000CDC  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4670  000CDE  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4671  000CE0  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4672  000CE2                     
  4673                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1143:            
      +                           return xtoa(fp, llu, 'x');
  4674  000CE2  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  4675  000CE6  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  4676  000CEA  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  4677  000CEE  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  4678  000CF2  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  4679  000CF6  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  4680  000CFA  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  4681  000CFE  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  4682  000D02  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  4683  000D06  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  4684  000D0A  0E78               	movlw	120
  4685  000D0C  6E26               	movwf	xtoa@x^0,c
  4686  000D0E  EC07  F018         	call	_xtoa	;wreg free
  4687  000D12  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  4688  000D16  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  4689  000D1A  EF29  F00A         	goto	l1234
  4690  000D1E                     l4352:
  4691  000D1E  FFFF               	dw	65535	; assembler added errata NOP
  4692                           
  4693                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1149:         if 
      +                          (*fmt[0] == 's') {
  4694  000D20  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4695  000D24  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4696  000D28  CFDE FFF6          	movff	postinc2,tblptrl
  4697  000D2C  CFDD FFF7          	movff	postdec2,tblptrh
  4698  000D30                     	if	0	;tblptru may be non-zero
  4699  000D30                     	endif
  4700  000D30                     	if	0	;tblptru may be non-zero
  4701  000D30                     	endif
  4702  000D30  0008               	tblrd		*
  4703  000D32  FFFF               	dw	65535	; errata NOP
  4704  000D34  50F5               	movf	tablat,w,c
  4705  000D36  0A73               	xorlw	115
  4706  000D38  A4D8               	btfss	status,2,c
  4707  000D3A  EFA1  F006         	goto	u5271
  4708  000D3E  EFA4  F006         	goto	u5270
  4709  000D42                     u5271:
  4710  000D42  FFFF               	dw	65535	; assembler added errata NOP
  4711  000D44  EFD0  F006         	goto	l4360
  4712  000D48                     u5270:
  4713  000D48  FFFF               	dw	65535	; assembler added errata NOP
  4714  000D4A                     
  4715                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1151:            
      +                           ++*fmt;
  4716  000D4A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4717  000D4E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4718  000D52  2ADE               	incf	postinc2,f,c
  4719  000D54  0E00               	movlw	0
  4720  000D56  22DD               	addwfc	postdec2,f,c
  4721                           
  4722                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1152:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  4723  000D58  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4724  000D5C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4725  000D60  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4726  000D64  0E02               	movlw	2
  4727  000D66  26DE               	addwf	postinc2,f,c
  4728  000D68  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4729  000D6C  0E00               	movlw	0
  4730  000D6E  22DD               	addwfc	postdec2,f,c
  4731  000D70  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4732  000D74  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4733  000D78  CFDE F04D          	movff	postinc2,vfpfcnvrt@cp
  4734  000D7C  CFDD F04E          	movff	postdec2,vfpfcnvrt@cp+1
  4735  000D80                     
  4736                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1154:            
      +                           return stoa(fp, cp);
  4737  000D80  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  4738  000D84  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  4739  000D88  C04D  F00C         	movff	vfpfcnvrt@cp,stoa@s
  4740  000D8C  C04E  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  4741  000D90  ECC3  F01B         	call	_stoa	;wreg free
  4742  000D94  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  4743  000D98  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  4744  000D9C  EF29  F00A         	goto	l1234
  4745  000DA0                     l4360:
  4746  000DA0  FFFF               	dw	65535	; assembler added errata NOP
  4747                           
  4748                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1161:         if 
      +                          (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  4749  000DA2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4750  000DA6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4751  000DAA  CFDE F001          	movff	postinc2,strncmp@_l
  4752  000DAE  CFDD F002          	movff	postdec2,strncmp@_l+1
  4753  000DB2  0EDE               	movlw	low STR_66
  4754  000DB4  6E03               	movwf	strncmp@_r^0,c
  4755  000DB6  0E7F               	movlw	high STR_66
  4756  000DB8  6E04               	movwf	(strncmp@_r+1)^0,c
  4757  000DBA  0E00               	movlw	0
  4758  000DBC  6E06               	movwf	(strncmp@n+1)^0,c
  4759  000DBE  0E03               	movlw	3
  4760  000DC0  6E05               	movwf	strncmp@n^0,c
  4761  000DC2  EC3F  F03D         	call	_strncmp	;wreg free
  4762  000DC6  5001               	movf	?_strncmp^0,w,c
  4763  000DC8  1002               	iorwf	(?_strncmp+1)^0,w,c
  4764  000DCA  A4D8               	btfss	status,2,c
  4765  000DCC  EFEA  F006         	goto	u5281
  4766  000DD0  EFED  F006         	goto	u5280
  4767  000DD4                     u5281:
  4768  000DD4  FFFF               	dw	65535	; assembler added errata NOP
  4769  000DD6  EF2E  F007         	goto	l4368
  4770  000DDA                     u5280:
  4771  000DDA  FFFF               	dw	65535	; assembler added errata NOP
  4772  000DDC                     
  4773                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1163:            
      +                           *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  4774  000DDC  0E03               	movlw	3
  4775  000DDE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4776  000DE2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4777  000DE6  26DE               	addwf	postinc2,f,c
  4778  000DE8  0E00               	movlw	0
  4779  000DEA  22DD               	addwfc	postdec2,f,c
  4780                           
  4781                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1164:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4782  000DEC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4783  000DF0  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4784  000DF4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4785  000DF8  0E02               	movlw	2
  4786  000DFA  26DE               	addwf	postinc2,f,c
  4787  000DFC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4788  000E00  0E00               	movlw	0
  4789  000E02  22DD               	addwfc	postdec2,f,c
  4790  000E04  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4791  000E08  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4792  000E0C  50DF               	movf	indf2,w,c
  4793  000E0E  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  4794  000E10  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  4795  000E12  6E60               	movwf	vfpfcnvrt@llu^0,c
  4796  000E14  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  4797  000E16  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4798  000E18  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4799  000E1A  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4800  000E1C  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4801  000E1E  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4802  000E20  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4803  000E22                     l4364:
  4804  000E22  FFFF               	dw	65535	; assembler added errata NOP
  4805                           
  4806                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1166:            
      +                           return utoa(fp, llu);
  4807  000E24  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  4808  000E28  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  4809  000E2C  C060  F01E         	movff	vfpfcnvrt@llu,utoa@d
  4810  000E30  C061  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  4811  000E34  C062  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  4812  000E38  C063  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  4813  000E3C  C064  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  4814  000E40  C065  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  4815  000E44  C066  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  4816  000E48  C067  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  4817  000E4C  EC9D  F019         	call	_utoa	;wreg free
  4818  000E50  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  4819  000E54  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  4820  000E58  EF29  F00A         	goto	l1234
  4821  000E5C                     l4368:
  4822  000E5C  FFFF               	dw	65535	; assembler added errata NOP
  4823                           
  4824                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1172:         if 
      +                          (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  4825  000E5E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4826  000E62  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4827  000E66  CFDE F001          	movff	postinc2,strncmp@_l
  4828  000E6A  CFDD F002          	movff	postdec2,strncmp@_l+1
  4829  000E6E  0EDF               	movlw	low (STR_66+1)
  4830  000E70  6E03               	movwf	strncmp@_r^0,c
  4831  000E72  0E7F               	movlw	high (STR_66+1)
  4832  000E74  6E04               	movwf	(strncmp@_r+1)^0,c
  4833  000E76  0E00               	movlw	0
  4834  000E78  6E06               	movwf	(strncmp@n+1)^0,c
  4835  000E7A  0E02               	movlw	2
  4836  000E7C  6E05               	movwf	strncmp@n^0,c
  4837  000E7E  EC3F  F03D         	call	_strncmp	;wreg free
  4838  000E82  5001               	movf	?_strncmp^0,w,c
  4839  000E84  1002               	iorwf	(?_strncmp+1)^0,w,c
  4840  000E86  A4D8               	btfss	status,2,c
  4841  000E88  EF48  F007         	goto	u5291
  4842  000E8C  EF4B  F007         	goto	u5290
  4843  000E90                     u5291:
  4844  000E90  FFFF               	dw	65535	; assembler added errata NOP
  4845  000E92  EF74  F007         	goto	l4376
  4846  000E96                     u5290:
  4847  000E96  FFFF               	dw	65535	; assembler added errata NOP
  4848  000E98                     
  4849                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1174:            
      +                           *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  4850  000E98  0E02               	movlw	2
  4851  000E9A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4852  000E9E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4853  000EA2  26DE               	addwf	postinc2,f,c
  4854  000EA4  0E00               	movlw	0
  4855  000EA6  22DD               	addwfc	postdec2,f,c
  4856                           
  4857                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1175:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4858  000EA8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4859  000EAC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4860  000EB0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4861  000EB4  0E02               	movlw	2
  4862  000EB6  26DE               	addwf	postinc2,f,c
  4863  000EB8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4864  000EBC  0E00               	movlw	0
  4865  000EBE  22DD               	addwfc	postdec2,f,c
  4866  000EC0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4867  000EC4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4868  000EC8  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4869  000ECC  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4870  000ED0  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4871  000ED4  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4872  000ED8  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4873  000EDA  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4874  000EDC  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4875  000EDE  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4876  000EE0  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4877  000EE2  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4878  000EE4  EF11  F007         	goto	l4364
  4879  000EE8                     l4376:
  4880  000EE8  FFFF               	dw	65535	; assembler added errata NOP
  4881                           
  4882                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1182:         if 
      +                          (*fmt[0] == 'u') {
  4883  000EEA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4884  000EEE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4885  000EF2  CFDE FFF6          	movff	postinc2,tblptrl
  4886  000EF6  CFDD FFF7          	movff	postdec2,tblptrh
  4887  000EFA                     	if	0	;tblptru may be non-zero
  4888  000EFA                     	endif
  4889  000EFA                     	if	0	;tblptru may be non-zero
  4890  000EFA                     	endif
  4891  000EFA  0008               	tblrd		*
  4892  000EFC  FFFF               	dw	65535	; errata NOP
  4893  000EFE  50F5               	movf	tablat,w,c
  4894  000F00  0A75               	xorlw	117
  4895  000F02  A4D8               	btfss	status,2,c
  4896  000F04  EF86  F007         	goto	u5301
  4897  000F08  EF89  F007         	goto	u5300
  4898  000F0C                     u5301:
  4899  000F0C  FFFF               	dw	65535	; assembler added errata NOP
  4900  000F0E  EFB1  F007         	goto	l4384
  4901  000F12                     u5300:
  4902  000F12  FFFF               	dw	65535	; assembler added errata NOP
  4903  000F14                     
  4904                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1184:            
      +                           ++*fmt;
  4905  000F14  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4906  000F18  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4907  000F1C  2ADE               	incf	postinc2,f,c
  4908  000F1E  0E00               	movlw	0
  4909  000F20  22DD               	addwfc	postdec2,f,c
  4910                           
  4911                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1185:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  4912  000F22  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4913  000F26  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4914  000F2A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4915  000F2E  0E02               	movlw	2
  4916  000F30  26DE               	addwf	postinc2,f,c
  4917  000F32  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4918  000F36  0E00               	movlw	0
  4919  000F38  22DD               	addwfc	postdec2,f,c
  4920  000F3A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4921  000F3E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4922  000F42  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4923  000F46  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4924  000F4A  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4925  000F4E  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4926  000F52  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4927  000F54  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4928  000F56  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4929  000F58  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4930  000F5A  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4931  000F5C  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4932  000F5E  EF11  F007         	goto	l4364
  4933  000F62                     l4384:
  4934  000F62  FFFF               	dw	65535	; assembler added errata NOP
  4935                           
  4936                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1236:         if 
      +                          (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  4937  000F64  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4938  000F68  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4939  000F6C  CFDE F001          	movff	postinc2,strncmp@_l
  4940  000F70  CFDD F002          	movff	postdec2,strncmp@_l+1
  4941  000F74  0EF5               	movlw	low STR_76
  4942  000F76  6E03               	movwf	strncmp@_r^0,c
  4943  000F78  0E7F               	movlw	high STR_76
  4944  000F7A  6E04               	movwf	(strncmp@_r+1)^0,c
  4945  000F7C  0E00               	movlw	0
  4946  000F7E  6E06               	movwf	(strncmp@n+1)^0,c
  4947  000F80  0E02               	movlw	2
  4948  000F82  6E05               	movwf	strncmp@n^0,c
  4949  000F84  EC3F  F03D         	call	_strncmp	;wreg free
  4950  000F88  5001               	movf	?_strncmp^0,w,c
  4951  000F8A  1002               	iorwf	(?_strncmp+1)^0,w,c
  4952  000F8C  A4D8               	btfss	status,2,c
  4953  000F8E  EFCB  F007         	goto	u5311
  4954  000F92  EFCE  F007         	goto	u5310
  4955  000F96                     u5311:
  4956  000F96  FFFF               	dw	65535	; assembler added errata NOP
  4957  000F98  EFF7  F007         	goto	l4392
  4958  000F9C                     u5310:
  4959  000F9C  FFFF               	dw	65535	; assembler added errata NOP
  4960  000F9E                     
  4961                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1238:            
      +                           *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  4962  000F9E  0E02               	movlw	2
  4963  000FA0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4964  000FA4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4965  000FA8  26DE               	addwf	postinc2,f,c
  4966  000FAA  0E00               	movlw	0
  4967  000FAC  22DD               	addwfc	postdec2,f,c
  4968                           
  4969                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1239:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4970  000FAE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4971  000FB2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4972  000FB6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4973  000FBA  0E02               	movlw	2
  4974  000FBC  26DE               	addwf	postinc2,f,c
  4975  000FBE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4976  000FC2  0E00               	movlw	0
  4977  000FC4  22DD               	addwfc	postdec2,f,c
  4978  000FC6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4979  000FCA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4980  000FCE  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4981  000FD2  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4982  000FD6  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4983  000FDA  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4984  000FDE  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4985  000FE0  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4986  000FE2  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4987  000FE4  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4988  000FE6  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4989  000FE8  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4990  000FEA  EF11  F007         	goto	l4364
  4991  000FEE                     l4392:
  4992  000FEE  FFFF               	dw	65535	; assembler added errata NOP
  4993                           
  4994                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1249:         if 
      +                          (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((
      +                          sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  4995  000FF0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4996  000FF4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4997  000FF8  CFDE F001          	movff	postinc2,strncmp@_l
  4998  000FFC  CFDD F002          	movff	postdec2,strncmp@_l+1
  4999  001000  0EE2               	movlw	low STR_81
  5000  001002  6E03               	movwf	strncmp@_r^0,c
  5001  001004  0E7F               	movlw	high STR_81
  5002  001006  6E04               	movwf	(strncmp@_r+1)^0,c
  5003  001008  0E00               	movlw	0
  5004  00100A  6E06               	movwf	(strncmp@n+1)^0,c
  5005  00100C  0E03               	movlw	3
  5006  00100E  6E05               	movwf	strncmp@n^0,c
  5007  001010  EC3F  F03D         	call	_strncmp	;wreg free
  5008  001014  5001               	movf	?_strncmp^0,w,c
  5009  001016  1002               	iorwf	(?_strncmp+1)^0,w,c
  5010  001018  B4D8               	btfsc	status,2,c
  5011  00101A  EF11  F008         	goto	u5321
  5012  00101E  EF14  F008         	goto	u5320
  5013  001022                     u5321:
  5014  001022  FFFF               	dw	65535	; assembler added errata NOP
  5015  001024  EF31  F008         	goto	l4396
  5016  001028                     u5320:
  5017  001028  FFFF               	dw	65535	; assembler added errata NOP
  5018  00102A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5019  00102E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5020  001032  CFDE F001          	movff	postinc2,strncmp@_l
  5021  001036  CFDD F002          	movff	postdec2,strncmp@_l+1
  5022  00103A  0ECA               	movlw	low STR_85
  5023  00103C  6E03               	movwf	strncmp@_r^0,c
  5024  00103E  0E7F               	movlw	high STR_85
  5025  001040  6E04               	movwf	(strncmp@_r+1)^0,c
  5026  001042  0E00               	movlw	0
  5027  001044  6E06               	movwf	(strncmp@n+1)^0,c
  5028  001046  0E03               	movlw	3
  5029  001048  6E05               	movwf	strncmp@n^0,c
  5030  00104A  EC3F  F03D         	call	_strncmp	;wreg free
  5031  00104E  5001               	movf	?_strncmp^0,w,c
  5032  001050  1002               	iorwf	(?_strncmp+1)^0,w,c
  5033  001052  A4D8               	btfss	status,2,c
  5034  001054  EF2E  F008         	goto	u5331
  5035  001058  EF31  F008         	goto	u5330
  5036  00105C                     u5331:
  5037  00105C  FFFF               	dw	65535	; assembler added errata NOP
  5038  00105E  EF88  F008         	goto	l4406
  5039  001062                     u5330:
  5040  001062                     l4396:
  5041  001062  FFFF               	dw	65535	; assembler added errata NOP
  5042                           
  5043                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1250: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1252:             c = (*fmt)
      +                          [2];
  5044  001064  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5045  001068  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5046  00106C  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  5047  001070  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  5048  001074  0E02               	movlw	2
  5049  001076  2649               	addwf	??_vfpfcnvrt^0,f,c
  5050  001078  0E00               	movlw	0
  5051  00107A  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5052  00107C  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5053  001080  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5054  001084                     	if	0	;tblptru may be non-zero
  5055  001084                     	endif
  5056  001084                     	if	0	;tblptru may be non-zero
  5057  001084                     	endif
  5058  001084  0008               	tblrd		*
  5059  001086  FFFF               	dw	65535	; errata NOP
  5060  001088  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5061  00108C                     
  5062                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1253:            
      +                           *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  5063  00108C  0E03               	movlw	3
  5064  00108E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5065  001092  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5066  001096  26DE               	addwf	postinc2,f,c
  5067  001098  0E00               	movlw	0
  5068  00109A  22DD               	addwfc	postdec2,f,c
  5069  00109C                     
  5070                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1254:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5071  00109C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5072  0010A0  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5073  0010A4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5074  0010A8  0E02               	movlw	2
  5075  0010AA  26DE               	addwf	postinc2,f,c
  5076  0010AC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5077  0010B0  0E00               	movlw	0
  5078  0010B2  22DD               	addwfc	postdec2,f,c
  5079  0010B4  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5080  0010B8  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5081  0010BC  50DF               	movf	indf2,w,c
  5082  0010BE  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  5083  0010C0  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  5084  0010C2  6E60               	movwf	vfpfcnvrt@llu^0,c
  5085  0010C4  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  5086  0010C6  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5087  0010C8  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5088  0010CA  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5089  0010CC  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5090  0010CE  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5091  0010D0  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5092  0010D2                     l4402:
  5093  0010D2  FFFF               	dw	65535	; assembler added errata NOP
  5094                           
  5095                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1256:            
      +                           return xtoa(fp, llu, c);
  5096  0010D4  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  5097  0010D8  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5098  0010DC  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  5099  0010E0  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  5100  0010E4  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  5101  0010E8  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  5102  0010EC  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  5103  0010F0  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  5104  0010F4  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  5105  0010F8  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  5106  0010FC  C05F  F026         	movff	vfpfcnvrt@c,xtoa@x
  5107  001100  EC07  F018         	call	_xtoa	;wreg free
  5108  001104  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  5109  001108  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  5110  00110C  EF29  F00A         	goto	l1234
  5111  001110                     l4406:
  5112  001110  FFFF               	dw	65535	; assembler added errata NOP
  5113                           
  5114                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1262:         if 
      +                          (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((size
      +                          of("hX")/sizeof("hX"[0]))-1))) {
  5115  001112  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5116  001116  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5117  00111A  CFDE F001          	movff	postinc2,strncmp@_l
  5118  00111E  CFDD F002          	movff	postdec2,strncmp@_l+1
  5119  001122  0EE3               	movlw	low (STR_81+1)
  5120  001124  6E03               	movwf	strncmp@_r^0,c
  5121  001126  0E7F               	movlw	high (STR_81+1)
  5122  001128  6E04               	movwf	(strncmp@_r+1)^0,c
  5123  00112A  0E00               	movlw	0
  5124  00112C  6E06               	movwf	(strncmp@n+1)^0,c
  5125  00112E  0E02               	movlw	2
  5126  001130  6E05               	movwf	strncmp@n^0,c
  5127  001132  EC3F  F03D         	call	_strncmp	;wreg free
  5128  001136  5001               	movf	?_strncmp^0,w,c
  5129  001138  1002               	iorwf	(?_strncmp+1)^0,w,c
  5130  00113A  B4D8               	btfsc	status,2,c
  5131  00113C  EFA2  F008         	goto	u5341
  5132  001140  EFA5  F008         	goto	u5340
  5133  001144                     u5341:
  5134  001144  FFFF               	dw	65535	; assembler added errata NOP
  5135  001146  EFC2  F008         	goto	l4410
  5136  00114A                     u5340:
  5137  00114A  FFFF               	dw	65535	; assembler added errata NOP
  5138  00114C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5139  001150  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5140  001154  CFDE F001          	movff	postinc2,strncmp@_l
  5141  001158  CFDD F002          	movff	postdec2,strncmp@_l+1
  5142  00115C  0ECB               	movlw	low (STR_85+1)
  5143  00115E  6E03               	movwf	strncmp@_r^0,c
  5144  001160  0E7F               	movlw	high (STR_85+1)
  5145  001162  6E04               	movwf	(strncmp@_r+1)^0,c
  5146  001164  0E00               	movlw	0
  5147  001166  6E06               	movwf	(strncmp@n+1)^0,c
  5148  001168  0E02               	movlw	2
  5149  00116A  6E05               	movwf	strncmp@n^0,c
  5150  00116C  EC3F  F03D         	call	_strncmp	;wreg free
  5151  001170  5001               	movf	?_strncmp^0,w,c
  5152  001172  1002               	iorwf	(?_strncmp+1)^0,w,c
  5153  001174  A4D8               	btfss	status,2,c
  5154  001176  EFBF  F008         	goto	u5351
  5155  00117A  EFC2  F008         	goto	u5350
  5156  00117E                     u5351:
  5157  00117E  FFFF               	dw	65535	; assembler added errata NOP
  5158  001180  EFFF  F008         	goto	l4420
  5159  001184                     u5350:
  5160  001184                     l4410:
  5161  001184  FFFF               	dw	65535	; assembler added errata NOP
  5162                           
  5163                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1263: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1265:             c = (*fmt)
      +                          [1];
  5164  001186  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5165  00118A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5166  00118E  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  5167  001192  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  5168  001196  0E01               	movlw	1
  5169  001198  2649               	addwf	??_vfpfcnvrt^0,f,c
  5170  00119A  0E00               	movlw	0
  5171  00119C  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5172  00119E  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5173  0011A2  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5174  0011A6                     	if	0	;tblptru may be non-zero
  5175  0011A6                     	endif
  5176  0011A6                     	if	0	;tblptru may be non-zero
  5177  0011A6                     	endif
  5178  0011A6  0008               	tblrd		*
  5179  0011A8  FFFF               	dw	65535	; errata NOP
  5180  0011AA  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5181  0011AE                     
  5182                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1266:            
      +                           *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  5183  0011AE  0E02               	movlw	2
  5184  0011B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5185  0011B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5186  0011B8  26DE               	addwf	postinc2,f,c
  5187  0011BA  0E00               	movlw	0
  5188  0011BC  22DD               	addwfc	postdec2,f,c
  5189  0011BE                     
  5190                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1267:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  5191  0011BE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5192  0011C2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5193  0011C6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5194  0011CA  0E02               	movlw	2
  5195  0011CC  26DE               	addwf	postinc2,f,c
  5196  0011CE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5197  0011D2  0E00               	movlw	0
  5198  0011D4  22DD               	addwfc	postdec2,f,c
  5199  0011D6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5200  0011DA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5201  0011DE  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5202  0011E2  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5203  0011E6  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5204  0011EA  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5205  0011EE  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5206  0011F0  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5207  0011F2  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5208  0011F4  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5209  0011F6  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5210  0011F8  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5211  0011FA  EF69  F008         	goto	l4402
  5212  0011FE                     l4420:
  5213  0011FE  FFFF               	dw	65535	; assembler added errata NOP
  5214                           
  5215                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1274:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  5216  001200  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5217  001204  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5218  001208  CFDE FFF6          	movff	postinc2,tblptrl
  5219  00120C  CFDD FFF7          	movff	postdec2,tblptrh
  5220  001210                     	if	0	;tblptru may be non-zero
  5221  001210                     	endif
  5222  001210                     	if	0	;tblptru may be non-zero
  5223  001210                     	endif
  5224  001210  0008               	tblrd		*
  5225  001212  FFFF               	dw	65535	; errata NOP
  5226  001214  50F5               	movf	tablat,w,c
  5227  001216  0A78               	xorlw	120
  5228  001218  B4D8               	btfsc	status,2,c
  5229  00121A  EF11  F009         	goto	u5361
  5230  00121E  EF14  F009         	goto	u5360
  5231  001222                     u5361:
  5232  001222  FFFF               	dw	65535	; assembler added errata NOP
  5233  001224  EF29  F009         	goto	l4424
  5234  001228                     u5360:
  5235  001228  FFFF               	dw	65535	; assembler added errata NOP
  5236  00122A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5237  00122E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5238  001232  CFDE FFF6          	movff	postinc2,tblptrl
  5239  001236  CFDD FFF7          	movff	postdec2,tblptrh
  5240  00123A                     	if	0	;tblptru may be non-zero
  5241  00123A                     	endif
  5242  00123A                     	if	0	;tblptru may be non-zero
  5243  00123A                     	endif
  5244  00123A  0008               	tblrd		*
  5245  00123C  FFFF               	dw	65535	; errata NOP
  5246  00123E  50F5               	movf	tablat,w,c
  5247  001240  0A58               	xorlw	88
  5248  001242  A4D8               	btfss	status,2,c
  5249  001244  EF26  F009         	goto	u5371
  5250  001248  EF29  F009         	goto	u5370
  5251  00124C                     u5371:
  5252  00124C  FFFF               	dw	65535	; assembler added errata NOP
  5253  00124E  EF5D  F009         	goto	l4434
  5254  001252                     u5370:
  5255  001252                     l4424:
  5256  001252  FFFF               	dw	65535	; assembler added errata NOP
  5257                           
  5258                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1276:            
      +                           c = (*fmt)[0];
  5259  001254  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5260  001258  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5261  00125C  CFDE FFF6          	movff	postinc2,tblptrl
  5262  001260  CFDD FFF7          	movff	postdec2,tblptrh
  5263  001264                     	if	0	;tblptru may be non-zero
  5264  001264                     	endif
  5265  001264                     	if	0	;tblptru may be non-zero
  5266  001264                     	endif
  5267  001264  0008               	tblrd		*
  5268  001266  FFFF               	dw	65535	; errata NOP
  5269  001268  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5270  00126C                     
  5271                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1277:            
      +                           ++*fmt;
  5272  00126C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5273  001270  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5274  001274  2ADE               	incf	postinc2,f,c
  5275  001276  0E00               	movlw	0
  5276  001278  22DD               	addwfc	postdec2,f,c
  5277  00127A                     
  5278                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1278:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  5279  00127A  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5280  00127E  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5281  001282  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5282  001286  0E02               	movlw	2
  5283  001288  26DE               	addwf	postinc2,f,c
  5284  00128A  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5285  00128E  0E00               	movlw	0
  5286  001290  22DD               	addwfc	postdec2,f,c
  5287  001292  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5288  001296  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5289  00129A  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5290  00129E  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5291  0012A2  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5292  0012A6  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5293  0012AA  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5294  0012AC  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5295  0012AE  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5296  0012B0  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5297  0012B2  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5298  0012B4  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5299  0012B6  EF69  F008         	goto	l4402
  5300  0012BA                     l4434:
  5301  0012BA  FFFF               	dw	65535	; assembler added errata NOP
  5302                           
  5303                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1337:         if 
      +                          (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((size
      +                          of("zX")/sizeof("zX"[0]))-1))) {
  5304  0012BC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5305  0012C0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5306  0012C4  CFDE F001          	movff	postinc2,strncmp@_l
  5307  0012C8  CFDD F002          	movff	postdec2,strncmp@_l+1
  5308  0012CC  0EF8               	movlw	low STR_99
  5309  0012CE  6E03               	movwf	strncmp@_r^0,c
  5310  0012D0  0E7F               	movlw	high STR_99
  5311  0012D2  6E04               	movwf	(strncmp@_r+1)^0,c
  5312  0012D4  0E00               	movlw	0
  5313  0012D6  6E06               	movwf	(strncmp@n+1)^0,c
  5314  0012D8  0E02               	movlw	2
  5315  0012DA  6E05               	movwf	strncmp@n^0,c
  5316  0012DC  EC3F  F03D         	call	_strncmp	;wreg free
  5317  0012E0  5001               	movf	?_strncmp^0,w,c
  5318  0012E2  1002               	iorwf	(?_strncmp+1)^0,w,c
  5319  0012E4  B4D8               	btfsc	status,2,c
  5320  0012E6  EF77  F009         	goto	u5381
  5321  0012EA  EF7A  F009         	goto	u5380
  5322  0012EE                     u5381:
  5323  0012EE  FFFF               	dw	65535	; assembler added errata NOP
  5324  0012F0  EF97  F009         	goto	l4438
  5325  0012F4                     u5380:
  5326  0012F4  FFFF               	dw	65535	; assembler added errata NOP
  5327  0012F6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5328  0012FA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5329  0012FE  CFDE F001          	movff	postinc2,strncmp@_l
  5330  001302  CFDD F002          	movff	postdec2,strncmp@_l+1
  5331  001306  0EE6               	movlw	low STR_103
  5332  001308  6E03               	movwf	strncmp@_r^0,c
  5333  00130A  0E7F               	movlw	high STR_103
  5334  00130C  6E04               	movwf	(strncmp@_r+1)^0,c
  5335  00130E  0E00               	movlw	0
  5336  001310  6E06               	movwf	(strncmp@n+1)^0,c
  5337  001312  0E02               	movlw	2
  5338  001314  6E05               	movwf	strncmp@n^0,c
  5339  001316  EC3F  F03D         	call	_strncmp	;wreg free
  5340  00131A  5001               	movf	?_strncmp^0,w,c
  5341  00131C  1002               	iorwf	(?_strncmp+1)^0,w,c
  5342  00131E  A4D8               	btfss	status,2,c
  5343  001320  EF94  F009         	goto	u5391
  5344  001324  EF97  F009         	goto	u5390
  5345  001328                     u5391:
  5346  001328  FFFF               	dw	65535	; assembler added errata NOP
  5347  00132A  EFD4  F009         	goto	l4448
  5348  00132E                     u5390:
  5349  00132E                     l4438:
  5350  00132E  FFFF               	dw	65535	; assembler added errata NOP
  5351                           
  5352                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1338: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1340:             c = (*fmt)
      +                          [1];
  5353  001330  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5354  001334  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5355  001338  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  5356  00133C  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  5357  001340  0E01               	movlw	1
  5358  001342  2649               	addwf	??_vfpfcnvrt^0,f,c
  5359  001344  0E00               	movlw	0
  5360  001346  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  5361  001348  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5362  00134C  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  5363  001350                     	if	0	;tblptru may be non-zero
  5364  001350                     	endif
  5365  001350                     	if	0	;tblptru may be non-zero
  5366  001350                     	endif
  5367  001350  0008               	tblrd		*
  5368  001352  FFFF               	dw	65535	; errata NOP
  5369  001354  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  5370  001358                     
  5371                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1341:            
      +                           *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  5372  001358  0E02               	movlw	2
  5373  00135A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5374  00135E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5375  001362  26DE               	addwf	postinc2,f,c
  5376  001364  0E00               	movlw	0
  5377  001366  22DD               	addwfc	postdec2,f,c
  5378  001368                     
  5379                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1342:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  5380  001368  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5381  00136C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5382  001370  CFDF F049          	movff	indf2,??_vfpfcnvrt
  5383  001374  0E02               	movlw	2
  5384  001376  26DE               	addwf	postinc2,f,c
  5385  001378  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  5386  00137C  0E00               	movlw	0
  5387  00137E  22DD               	addwfc	postdec2,f,c
  5388  001380  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5389  001384  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5390  001388  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  5391  00138C  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  5392  001390  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  5393  001394  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  5394  001398  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  5395  00139A  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  5396  00139C  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  5397  00139E  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  5398  0013A0  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  5399  0013A2  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  5400  0013A4  EF69  F008         	goto	l4402
  5401  0013A8                     l4448:
  5402  0013A8  FFFF               	dw	65535	; assembler added errata NOP
  5403                           
  5404                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  5405  0013AA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5406  0013AE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5407  0013B2  CFDE FFF6          	movff	postinc2,tblptrl
  5408  0013B6  CFDD FFF7          	movff	postdec2,tblptrh
  5409  0013BA                     	if	0	;tblptru may be non-zero
  5410  0013BA                     	endif
  5411  0013BA                     	if	0	;tblptru may be non-zero
  5412  0013BA                     	endif
  5413  0013BA  0008               	tblrd		*
  5414  0013BC  FFFF               	dw	65535	; errata NOP
  5415  0013BE  50F5               	movf	tablat,w,c
  5416  0013C0  0A25               	xorlw	37
  5417  0013C2  A4D8               	btfss	status,2,c
  5418  0013C4  EFE6  F009         	goto	u5401
  5419  0013C8  EFE9  F009         	goto	u5400
  5420  0013CC                     u5401:
  5421  0013CC  FFFF               	dw	65535	; assembler added errata NOP
  5422  0013CE  EF02  F00A         	goto	l4458
  5423  0013D2                     u5400:
  5424  0013D2  FFFF               	dw	65535	; assembler added errata NOP
  5425  0013D4                     
  5426                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  5427  0013D4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5428  0013D8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5429  0013DC  2ADE               	incf	postinc2,f,c
  5430  0013DE  0E00               	movlw	0
  5431  0013E0  22DD               	addwfc	postdec2,f,c
  5432  0013E2                     
  5433                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  5434  0013E2  0E00               	movlw	0
  5435  0013E4  6E02               	movwf	(fputc@c+1)^0,c
  5436  0013E6  0E25               	movlw	37
  5437  0013E8  6E01               	movwf	fputc@c^0,c
  5438  0013EA  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5439  0013EE  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5440  0013F2  ECEA  F03A         	call	_fputc	;wreg free
  5441  0013F6                     l4454:
  5442  0013F6  FFFF               	dw	65535	; assembler added errata NOP
  5443                           
  5444                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  5445  0013F8  0E00               	movlw	0
  5446  0013FA  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  5447  0013FC  0E01               	movlw	1
  5448  0013FE  6E43               	movwf	?_vfpfcnvrt^0,c
  5449  001400  EF29  F00A         	goto	l1234
  5450  001404                     l4458:
  5451  001404  FFFF               	dw	65535	; assembler added errata NOP
  5452                           
  5453                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  5454  001406  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5455  00140A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5456  00140E  2ADE               	incf	postinc2,f,c
  5457  001410  0E00               	movlw	0
  5458  001412  22DD               	addwfc	postdec2,f,c
  5459  001414  EF3F  F005         	goto	l4310
  5460  001418                     l4464:
  5461  001418  FFFF               	dw	65535	; assembler added errata NOP
  5462                           
  5463                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  5464  00141A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5465  00141E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5466  001422  CFDE FFF6          	movff	postinc2,tblptrl
  5467  001426  CFDD FFF7          	movff	postdec2,tblptrh
  5468  00142A                     	if	0	;tblptru may be non-zero
  5469  00142A                     	endif
  5470  00142A                     	if	0	;tblptru may be non-zero
  5471  00142A                     	endif
  5472  00142A  0008               	tblrd		*
  5473  00142C  FFFF               	dw	65535	; errata NOP
  5474  00142E  50F5               	movf	tablat,w,c
  5475  001430  6E01               	movwf	fputc@c^0,c
  5476  001432  6A02               	clrf	(fputc@c+1)^0,c
  5477  001434  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5478  001438  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5479  00143C  ECEA  F03A         	call	_fputc	;wreg free
  5480  001440                     
  5481                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  5482  001440  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5483  001444  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5484  001448  2ADE               	incf	postinc2,f,c
  5485  00144A  0E00               	movlw	0
  5486  00144C  22DD               	addwfc	postdec2,f,c
  5487  00144E  EFFB  F009         	goto	l4454
  5488  001452                     l1234:
  5489  001452  FFFF               	dw	65535	; assembler added errata NOP
  5490  001454  0012               	return		;funcret
  5491  001456  FFFF               	dw	65535	; errata NOP
  5492  001458                     __end_of_vfpfcnvrt:
  5493                           	callstack 0
  5494                           
  5495 ;; *************** function _xtoa *****************
  5496 ;; Defined at:
  5497 ;;		line 623 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5498 ;; Parameters:    Size  Location     Type
  5499 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5500 ;;		 -> vsnprintf@f(6), 
  5501 ;;  d               8   29[COMRAM] unsigned long long 
  5502 ;;  x               1   37[COMRAM] unsigned char 
  5503 ;; Auto vars:     Size  Location     Type
  5504 ;;  n               8   54[COMRAM] unsigned long long 
  5505 ;;  c               2   64[COMRAM] int 
  5506 ;;  i               2   62[COMRAM] int 
  5507 ;;  w               2   52[COMRAM] int 
  5508 ;;  p               2   50[COMRAM] int 
  5509 ;; Return value:  Size  Location     Type
  5510 ;;                  2   27[COMRAM] int 
  5511 ;; Registers used:
  5512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5513 ;; Tracked objects:
  5514 ;;		On entry : 0/0
  5515 ;;		On exit  : 0/0
  5516 ;;		Unchanged: 0/0
  5517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5518 ;;      Params:        11       0       0       0       0       0       0
  5519 ;;      Locals:        20       0       0       0       0       0       0
  5520 ;;      Temps:          8       0       0       0       0       0       0
  5521 ;;      Totals:        39       0       0       0       0       0       0
  5522 ;;Total ram usage:       39 bytes
  5523 ;; Hardware stack levels used:    1
  5524 ;; Hardware stack levels required when called:    5
  5525 ;; This function calls:
  5526 ;;		_isalpha
  5527 ;;		_isupper
  5528 ;;		_pad
  5529 ;;		_toupper
  5530 ;; This function is called by:
  5531 ;;		_vfpfcnvrt
  5532 ;; This function uses a non-reentrant model
  5533 ;;
  5534                           
  5535                           	psect	text7
  5536  00300E                     __ptext7:
  5537                           	callstack 0
  5538  00300E                     _xtoa:
  5539                           	callstack 0
  5540  00300E  FFFF               	dw	65535	; assembler added errata NOP
  5541  003010                     
  5542                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 623: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 624: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 625:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources
      +                          \c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0)) {
  5543  003010  0100               	movlb	0	; () banked
  5544  003012  BF89               	btfsc	(_prec+1)& (0+255),7,b
  5545  003014  EF0E  F018         	goto	u4241
  5546  003018  EF11  F018         	goto	u4240
  5547  00301C                     u4241:
  5548  00301C  FFFF               	dw	65535	; assembler added errata NOP
  5549  00301E  EF13  F018         	goto	l3820
  5550  003022                     u4240:
  5551  003022  FFFF               	dw	65535	; assembler added errata NOP
  5552  003024                     
  5553                           ; BSR set to: 0
  5554                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 630:         flag
      +                          s &= ~(1 << 1);
  5555  003024  927D               	bcf	_flags^0,1,c
  5556  003026                     l3820:
  5557  003026  FFFF               	dw	65535	; assembler added errata NOP
  5558                           
  5559                           ; BSR set to: 0
  5560                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 632:     p = (0 <
      +                           prec) ? prec : 1;
  5561  003028  BF89               	btfsc	(_prec+1)& (0+255),7,b
  5562  00302A  EF22  F018         	goto	u4250
  5563  00302E  5189               	movf	(_prec+1)& (0+255),w,b
  5564  003030  E106               	bnz	u4251
  5565  003032  0588               	decf	_prec& (0+255),w,b
  5566  003034  B0D8               	btfsc	status,0,c
  5567  003036  EF1F  F018         	goto	u4251
  5568  00303A  EF22  F018         	goto	u4250
  5569  00303E                     u4251:
  5570  00303E  FFFF               	dw	65535	; assembler added errata NOP
  5571  003040  EF29  F018         	goto	l1172
  5572  003044                     u4250:
  5573  003044  FFFF               	dw	65535	; assembler added errata NOP
  5574  003046                     
  5575                           ; BSR set to: 0
  5576  003046  0E00               	movlw	0
  5577  003048  6E34               	movwf	(xtoa@p+1)^0,c
  5578  00304A  0E01               	movlw	1
  5579  00304C  6E33               	movwf	xtoa@p^0,c
  5580  00304E  EF2E  F018         	goto	l1174
  5581  003052                     l1172:
  5582  003052  FFFF               	dw	65535	; assembler added errata NOP
  5583                           
  5584                           ; BSR set to: 0
  5585  003054  C088  F033         	movff	_prec,xtoa@p
  5586  003058  C089  F034         	movff	_prec+1,xtoa@p+1
  5587  00305C                     l1174:
  5588  00305C  FFFF               	dw	65535	; assembler added errata NOP
  5589                           
  5590                           ; BSR set to: 0
  5591                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 633:     w = widt
      +                          h;
  5592  00305E  C086  F035         	movff	_width,xtoa@w
  5593  003062  C087  F036         	movff	_width+1,xtoa@w+1
  5594                           
  5595                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 634:     if (flag
      +                          s & (1 << 4)) {
  5596  003066  A87D               	btfss	_flags^0,4,c
  5597  003068  EF38  F018         	goto	u4261
  5598  00306C  EF3B  F018         	goto	u4260
  5599  003070                     u4261:
  5600  003070  FFFF               	dw	65535	; assembler added errata NOP
  5601  003072  EF40  F018         	goto	l3826
  5602  003076                     u4260:
  5603  003076  FFFF               	dw	65535	; assembler added errata NOP
  5604  003078                     
  5605                           ; BSR set to: 0
  5606                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 635:         w -=
      +                           2;
  5607  003078  0EFE               	movlw	254
  5608  00307A  2635               	addwf	xtoa@w^0,f,c
  5609  00307C  0EFF               	movlw	255
  5610  00307E  2236               	addwfc	(xtoa@w+1)^0,f,c
  5611  003080                     l3826:
  5612  003080  FFFF               	dw	65535	; assembler added errata NOP
  5613                           
  5614                           ; BSR set to: 0
  5615                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 639:     n = d;
  5616  003082  C01E  F037         	movff	xtoa@d,xtoa@n
  5617  003086  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  5618  00308A  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  5619  00308E  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  5620  003092  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  5621  003096  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  5622  00309A  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  5623  00309E  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  5624  0030A2                     
  5625                           ; BSR set to: 0
  5626                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 640:     i = size
      +                          of(dbuf) - 1;
  5627  0030A2  0E00               	movlw	0
  5628  0030A4  6E40               	movwf	(xtoa@i+1)^0,c
  5629  0030A6  0E1F               	movlw	31
  5630  0030A8  6E3F               	movwf	xtoa@i^0,c
  5631  0030AA                     
  5632                           ; BSR set to: 0
  5633                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 641:     dbuf[i] 
      +                          = '\0';
  5634  0030AA  0E00               	movlw	0
  5635  0030AC  6FB1               	movwf	(_dbuf+31)& (0+255),b
  5636                           
  5637                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5638  0030AE  EF1E  F019         	goto	l3862
  5639  0030B2                     l3832:
  5640  0030B2  FFFF               	dw	65535	; assembler added errata NOP
  5641                           
  5642                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 643:         --i;
  5643  0030B4  063F               	decf	xtoa@i^0,f,c
  5644  0030B6  A0D8               	btfss	status,0,c
  5645  0030B8  0640               	decf	(xtoa@i+1)^0,f,c
  5646  0030BA                     
  5647                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 644:         c = 
      +                          n & 0x0f;
  5648  0030BA  0E0F               	movlw	15
  5649  0030BC  1437               	andwf	xtoa@n^0,w,c
  5650  0030BE  6E41               	movwf	xtoa@c^0,c
  5651  0030C0  6A42               	clrf	(xtoa@c+1)^0,c
  5652  0030C2                     
  5653                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 645:         c = 
      +                          (c < 10) ? '0' + c : 'a' + (c - 10);
  5654  0030C2  BE42               	btfsc	(xtoa@c+1)^0,7,c
  5655  0030C4  EF6D  F018         	goto	u4271
  5656  0030C8  5042               	movf	(xtoa@c+1)^0,w,c
  5657  0030CA  E10A               	bnz	u4270
  5658  0030CC  0E0A               	movlw	10
  5659  0030CE  5C41               	subwf	xtoa@c^0,w,c
  5660  0030D0  A0D8               	btfss	status,0,c
  5661  0030D2  EF6D  F018         	goto	u4271
  5662  0030D6  EF70  F018         	goto	u4270
  5663  0030DA                     u4271:
  5664  0030DA  FFFF               	dw	65535	; assembler added errata NOP
  5665  0030DC  EF79  F018         	goto	l3840
  5666  0030E0                     u4270:
  5667  0030E0  FFFF               	dw	65535	; assembler added errata NOP
  5668  0030E2  0E57               	movlw	87
  5669  0030E4  2441               	addwf	xtoa@c^0,w,c
  5670  0030E6  6E41               	movwf	xtoa@c^0,c
  5671  0030E8  0E00               	movlw	0
  5672  0030EA  2042               	addwfc	(xtoa@c+1)^0,w,c
  5673  0030EC  6E42               	movwf	(xtoa@c+1)^0,c
  5674  0030EE  EF80  F018         	goto	l1181
  5675  0030F2                     l3840:
  5676  0030F2  FFFF               	dw	65535	; assembler added errata NOP
  5677  0030F4  0E30               	movlw	48
  5678  0030F6  2441               	addwf	xtoa@c^0,w,c
  5679  0030F8  6E41               	movwf	xtoa@c^0,c
  5680  0030FA  0E00               	movlw	0
  5681  0030FC  2042               	addwfc	(xtoa@c+1)^0,w,c
  5682  0030FE  6E42               	movwf	(xtoa@c+1)^0,c
  5683  003100                     l1181:
  5684  003100  FFFF               	dw	65535	; assembler added errata NOP
  5685  003102  0EBF               	movlw	191
  5686  003104  6E27               	movwf	??_xtoa^0,c
  5687  003106  0EFF               	movlw	255
  5688  003108  6E28               	movwf	(??_xtoa+1)^0,c
  5689  00310A  5026               	movf	xtoa@x^0,w,c
  5690  00310C  6E29               	movwf	(??_xtoa+2)^0,c
  5691  00310E  6A2A               	clrf	(??_xtoa+3)^0,c
  5692  003110  5027               	movf	??_xtoa^0,w,c
  5693  003112  2629               	addwf	(??_xtoa+2)^0,f,c
  5694  003114  5028               	movf	(??_xtoa+1)^0,w,c
  5695  003116  222A               	addwfc	(??_xtoa+3)^0,f,c
  5696  003118  502A               	movf	(??_xtoa+3)^0,w,c
  5697  00311A  E10B               	bnz	u4280
  5698  00311C  0E1A               	movlw	26
  5699  00311E  5C29               	subwf	(??_xtoa+2)^0,w,c
  5700  003120  A0D8               	btfss	status,0,c
  5701  003122  EF95  F018         	goto	u4281
  5702  003126  EF99  F018         	goto	u4280
  5703  00312A                     u4281:
  5704  00312A  FFFF               	dw	65535	; assembler added errata NOP
  5705  00312C  0E01               	movlw	1
  5706  00312E  EF9B  F018         	goto	u4290
  5707  003132                     u4280:
  5708  003132  FFFF               	dw	65535	; assembler added errata NOP
  5709  003134  0E00               	movlw	0
  5710  003136                     u4290:
  5711  003136  FFFF               	dw	65535	; assembler added errata NOP
  5712  003138  6E2F               	movwf	_xtoa$1538^0,c
  5713  00313A  6A30               	clrf	(_xtoa$1538+1)^0,c
  5714  00313C  502F               	movf	_xtoa$1538^0,w,c
  5715  00313E  1030               	iorwf	(_xtoa$1538+1)^0,w,c
  5716  003140  B4D8               	btfsc	status,2,c
  5717  003142  EFA5  F018         	goto	u4301
  5718  003146  EFA8  F018         	goto	u4300
  5719  00314A                     u4301:
  5720  00314A  FFFF               	dw	65535	; assembler added errata NOP
  5721  00314C  EFDE  F018         	goto	l3854
  5722  003150                     u4300:
  5723  003150  FFFF               	dw	65535	; assembler added errata NOP
  5724  003152  0E9F               	movlw	159
  5725  003154  6E27               	movwf	??_xtoa^0,c
  5726  003156  0EFF               	movlw	255
  5727  003158  6E28               	movwf	(??_xtoa+1)^0,c
  5728  00315A  0E20               	movlw	32
  5729  00315C  1041               	iorwf	xtoa@c^0,w,c
  5730  00315E  6E29               	movwf	(??_xtoa+2)^0,c
  5731  003160  0E00               	movlw	0
  5732  003162  1042               	iorwf	(xtoa@c+1)^0,w,c
  5733  003164  6E2A               	movwf	(??_xtoa+3)^0,c
  5734  003166  5027               	movf	??_xtoa^0,w,c
  5735  003168  2629               	addwf	(??_xtoa+2)^0,f,c
  5736  00316A  5028               	movf	(??_xtoa+1)^0,w,c
  5737  00316C  222A               	addwfc	(??_xtoa+3)^0,f,c
  5738  00316E  502A               	movf	(??_xtoa+3)^0,w,c
  5739  003170  E10B               	bnz	u4310
  5740  003172  0E1A               	movlw	26
  5741  003174  5C29               	subwf	(??_xtoa+2)^0,w,c
  5742  003176  A0D8               	btfss	status,0,c
  5743  003178  EFC0  F018         	goto	u4311
  5744  00317C  EFC4  F018         	goto	u4310
  5745  003180                     u4311:
  5746  003180  FFFF               	dw	65535	; assembler added errata NOP
  5747  003182  0E01               	movlw	1
  5748  003184  EFC6  F018         	goto	u4320
  5749  003188                     u4310:
  5750  003188  FFFF               	dw	65535	; assembler added errata NOP
  5751  00318A  0E00               	movlw	0
  5752  00318C                     u4320:
  5753  00318C  FFFF               	dw	65535	; assembler added errata NOP
  5754  00318E  6E31               	movwf	_xtoa$1539^0,c
  5755  003190  6A32               	clrf	(_xtoa$1539+1)^0,c
  5756  003192  5031               	movf	_xtoa$1539^0,w,c
  5757  003194  1032               	iorwf	(_xtoa$1539+1)^0,w,c
  5758  003196  B4D8               	btfsc	status,2,c
  5759  003198  EFD0  F018         	goto	u4331
  5760  00319C  EFD3  F018         	goto	u4330
  5761  0031A0                     u4331:
  5762  0031A0  FFFF               	dw	65535	; assembler added errata NOP
  5763  0031A2  EFDE  F018         	goto	l3854
  5764  0031A6                     u4330:
  5765  0031A6  FFFF               	dw	65535	; assembler added errata NOP
  5766  0031A8                     
  5767                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 647:             
      +                          c = toupper(c);
  5768  0031A8  C041  F007         	movff	xtoa@c,toupper@c
  5769  0031AC  C042  F008         	movff	xtoa@c+1,toupper@c+1
  5770  0031B0  EC2F  F038         	call	_toupper	;wreg free
  5771  0031B4  C007  F041         	movff	?_toupper,xtoa@c
  5772  0031B8  C008  F042         	movff	?_toupper+1,xtoa@c+1
  5773  0031BC                     l3854:
  5774  0031BC  FFFF               	dw	65535	; assembler added errata NOP
  5775                           
  5776                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 649:         dbuf
      +                          [i] = (char)c;
  5777  0031BE  0E92               	movlw	low _dbuf
  5778  0031C0  243F               	addwf	xtoa@i^0,w,c
  5779  0031C2  6ED9               	movwf	fsr2l,c
  5780  0031C4  0E00               	movlw	high _dbuf
  5781  0031C6  2040               	addwfc	(xtoa@i+1)^0,w,c
  5782  0031C8  6EDA               	movwf	fsr2h,c
  5783  0031CA  C041  FFDF         	movff	xtoa@c,indf2
  5784  0031CE                     
  5785                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 650:         --p;
  5786  0031CE  0633               	decf	xtoa@p^0,f,c
  5787  0031D0  A0D8               	btfss	status,0,c
  5788  0031D2  0634               	decf	(xtoa@p+1)^0,f,c
  5789  0031D4                     
  5790                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 651:         --w;
  5791  0031D4  0635               	decf	xtoa@w^0,f,c
  5792  0031D6  A0D8               	btfss	status,0,c
  5793  0031D8  0636               	decf	(xtoa@w+1)^0,f,c
  5794  0031DA                     
  5795                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 652:         n = 
      +                          n >> 4;
  5796  0031DA  C037  F027         	movff	xtoa@n,??_xtoa
  5797  0031DE  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  5798  0031E2  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  5799  0031E6  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  5800  0031EA  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  5801  0031EE  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  5802  0031F2  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  5803  0031F6  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  5804  0031FA  0E05               	movlw	5
  5805  0031FC  EF0A  F019         	goto	u4340
  5806  003200                     u4345:
  5807  003200  FFFF               	dw	65535	; assembler added errata NOP
  5808  003202  90D8               	bcf	status,0,c
  5809  003204  322E               	rrcf	(??_xtoa+7)^0,f,c
  5810  003206  322D               	rrcf	(??_xtoa+6)^0,f,c
  5811  003208  322C               	rrcf	(??_xtoa+5)^0,f,c
  5812  00320A  322B               	rrcf	(??_xtoa+4)^0,f,c
  5813  00320C  322A               	rrcf	(??_xtoa+3)^0,f,c
  5814  00320E  3229               	rrcf	(??_xtoa+2)^0,f,c
  5815  003210  3228               	rrcf	(??_xtoa+1)^0,f,c
  5816  003212  3227               	rrcf	??_xtoa^0,f,c
  5817  003214                     u4340:
  5818  003214  FFFF               	dw	65535	; assembler added errata NOP
  5819  003216  2EE8               	decfsz	wreg,f,c
  5820  003218  EF00  F019         	goto	u4345
  5821  00321C  C027  F037         	movff	??_xtoa,xtoa@n
  5822  003220  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  5823  003224  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  5824  003228  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  5825  00322C  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  5826  003230  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  5827  003234  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  5828  003238  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  5829  00323C                     l3862:
  5830  00323C  FFFF               	dw	65535	; assembler added errata NOP
  5831                           
  5832                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5833  00323E  BE40               	btfsc	(xtoa@i+1)^0,7,c
  5834  003240  EF2B  F019         	goto	u4351
  5835  003244  5040               	movf	(xtoa@i+1)^0,w,c
  5836  003246  E10A               	bnz	u4350
  5837  003248  0E02               	movlw	2
  5838  00324A  5C3F               	subwf	xtoa@i^0,w,c
  5839  00324C  A0D8               	btfss	status,0,c
  5840  00324E  EF2B  F019         	goto	u4351
  5841  003252  EF2E  F019         	goto	u4350
  5842  003256                     u4351:
  5843  003256  FFFF               	dw	65535	; assembler added errata NOP
  5844  003258  EF66  F019         	goto	l1195
  5845  00325C                     u4350:
  5846  00325C  FFFF               	dw	65535	; assembler added errata NOP
  5847  00325E  5037               	movf	xtoa@n^0,w,c
  5848  003260  1038               	iorwf	(xtoa@n+1)^0,w,c
  5849  003262  1039               	iorwf	(xtoa@n+2)^0,w,c
  5850  003264  103A               	iorwf	(xtoa@n+3)^0,w,c
  5851  003266  103B               	iorwf	(xtoa@n+4)^0,w,c
  5852  003268  103C               	iorwf	(xtoa@n+5)^0,w,c
  5853  00326A  103D               	iorwf	(xtoa@n+6)^0,w,c
  5854  00326C  103E               	iorwf	(xtoa@n+7)^0,w,c
  5855  00326E  A4D8               	btfss	status,2,c
  5856  003270  EF3C  F019         	goto	u4361
  5857  003274  EF3F  F019         	goto	u4360
  5858  003278                     u4361:
  5859  003278  FFFF               	dw	65535	; assembler added errata NOP
  5860  00327A  EF59  F018         	goto	l3832
  5861  00327E                     u4360:
  5862  00327E  FFFF               	dw	65535	; assembler added errata NOP
  5863  003280  BE34               	btfsc	(xtoa@p+1)^0,7,c
  5864  003282  EF4E  F019         	goto	u4370
  5865  003286  5034               	movf	(xtoa@p+1)^0,w,c
  5866  003288  E106               	bnz	u4371
  5867  00328A  0433               	decf	xtoa@p^0,w,c
  5868  00328C  B0D8               	btfsc	status,0,c
  5869  00328E  EF4B  F019         	goto	u4371
  5870  003292  EF4E  F019         	goto	u4370
  5871  003296                     u4371:
  5872  003296  FFFF               	dw	65535	; assembler added errata NOP
  5873  003298  EF59  F018         	goto	l3832
  5874  00329C                     u4370:
  5875  00329C  FFFF               	dw	65535	; assembler added errata NOP
  5876  00329E  BE36               	btfsc	(xtoa@w+1)^0,7,c
  5877  0032A0  EF5A  F019         	goto	u4381
  5878  0032A4  5036               	movf	(xtoa@w+1)^0,w,c
  5879  0032A6  E109               	bnz	u4380
  5880  0032A8  0435               	decf	xtoa@w^0,w,c
  5881  0032AA  A0D8               	btfss	status,0,c
  5882  0032AC  EF5A  F019         	goto	u4381
  5883  0032B0  EF5D  F019         	goto	u4380
  5884  0032B4                     u4381:
  5885  0032B4  FFFF               	dw	65535	; assembler added errata NOP
  5886  0032B6  EF66  F019         	goto	l1195
  5887  0032BA                     u4380:
  5888  0032BA  FFFF               	dw	65535	; assembler added errata NOP
  5889  0032BC  B27D               	btfsc	_flags^0,1,c
  5890  0032BE  EF63  F019         	goto	u4391
  5891  0032C2  EF66  F019         	goto	u4390
  5892  0032C6                     u4391:
  5893  0032C6  FFFF               	dw	65535	; assembler added errata NOP
  5894  0032C8  EF59  F018         	goto	l3832
  5895  0032CC                     u4390:
  5896  0032CC                     l1195:
  5897  0032CC  FFFF               	dw	65535	; assembler added errata NOP
  5898                           
  5899                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  5900  0032CE  A87D               	btfss	_flags^0,4,c
  5901  0032D0  EF6C  F019         	goto	u4401
  5902  0032D4  EF6F  F019         	goto	u4400
  5903  0032D8                     u4401:
  5904  0032D8  FFFF               	dw	65535	; assembler added errata NOP
  5905  0032DA  EF86  F019         	goto	l3878
  5906  0032DE                     u4400:
  5907  0032DE  FFFF               	dw	65535	; assembler added errata NOP
  5908  0032E0                     
  5909                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 657:         --i;
  5910  0032E0  063F               	decf	xtoa@i^0,f,c
  5911  0032E2  A0D8               	btfss	status,0,c
  5912  0032E4  0640               	decf	(xtoa@i+1)^0,f,c
  5913  0032E6                     
  5914                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 658:         dbuf
      +                          [i] = x;
  5915  0032E6  0E92               	movlw	low _dbuf
  5916  0032E8  243F               	addwf	xtoa@i^0,w,c
  5917  0032EA  6ED9               	movwf	fsr2l,c
  5918  0032EC  0E00               	movlw	high _dbuf
  5919  0032EE  2040               	addwfc	(xtoa@i+1)^0,w,c
  5920  0032F0  6EDA               	movwf	fsr2h,c
  5921  0032F2  C026  FFDF         	movff	xtoa@x,indf2
  5922  0032F6                     
  5923                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 659:         --i;
  5924  0032F6  063F               	decf	xtoa@i^0,f,c
  5925  0032F8  A0D8               	btfss	status,0,c
  5926  0032FA  0640               	decf	(xtoa@i+1)^0,f,c
  5927                           
  5928                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 660:         dbuf
      +                          [i] = '0';
  5929  0032FC  0E92               	movlw	low _dbuf
  5930  0032FE  243F               	addwf	xtoa@i^0,w,c
  5931  003300  6ED9               	movwf	fsr2l,c
  5932  003302  0E00               	movlw	high _dbuf
  5933  003304  2040               	addwfc	(xtoa@i+1)^0,w,c
  5934  003306  6EDA               	movwf	fsr2h,c
  5935  003308  0E30               	movlw	48
  5936  00330A  6EDF               	movwf	indf2,c
  5937  00330C                     l3878:
  5938  00330C  FFFF               	dw	65535	; assembler added errata NOP
  5939                           
  5940                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 664:     return p
      +                          ad(fp, &dbuf[i], w);
  5941  00330E  C01C  F011         	movff	xtoa@fp,pad@fp
  5942  003312  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  5943  003316  0E92               	movlw	low _dbuf
  5944  003318  243F               	addwf	xtoa@i^0,w,c
  5945  00331A  6E13               	movwf	pad@buf^0,c
  5946  00331C  0E00               	movlw	high _dbuf
  5947  00331E  2040               	addwfc	(xtoa@i+1)^0,w,c
  5948  003320  6E14               	movwf	(pad@buf+1)^0,c
  5949  003322  C035  F015         	movff	xtoa@w,pad@p
  5950  003326  C036  F016         	movff	xtoa@w+1,pad@p+1
  5951  00332A  EC5B  F03B         	call	_pad	;wreg free
  5952  00332E  C011  F01C         	movff	?_pad,?_xtoa
  5953  003332  C012  F01D         	movff	?_pad+1,?_xtoa+1
  5954  003336  0012               	return		;funcret
  5955  003338  FFFF               	dw	65535	; errata NOP
  5956  00333A                     __end_of_xtoa:
  5957                           	callstack 0
  5958                           
  5959 ;; *************** function _toupper *****************
  5960 ;; Defined at:
  5961 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\toupper.c"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;  c               2    6[COMRAM] int 
  5964 ;; Auto vars:     Size  Location     Type
  5965 ;;		None
  5966 ;; Return value:  Size  Location     Type
  5967 ;;                  2    6[COMRAM] int 
  5968 ;; Registers used:
  5969 ;;		wreg, status,2, status,0
  5970 ;; Tracked objects:
  5971 ;;		On entry : 0/0
  5972 ;;		On exit  : 0/0
  5973 ;;		Unchanged: 0/0
  5974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5975 ;;      Params:         2       0       0       0       0       0       0
  5976 ;;      Locals:         2       0       0       0       0       0       0
  5977 ;;      Temps:          4       0       0       0       0       0       0
  5978 ;;      Totals:         8       0       0       0       0       0       0
  5979 ;;Total ram usage:        8 bytes
  5980 ;; Hardware stack levels used:    1
  5981 ;; Hardware stack levels required when called:    2
  5982 ;; This function calls:
  5983 ;;		_islower
  5984 ;; This function is called by:
  5985 ;;		_xtoa
  5986 ;; This function uses a non-reentrant model
  5987 ;;
  5988                           
  5989                           	psect	text8
  5990  00705E                     __ptext8:
  5991                           	callstack 0
  5992  00705E                     _toupper:
  5993                           	callstack 0
  5994  00705E  FFFF               	dw	65535	; assembler added errata NOP
  5995  007060  0E9F               	movlw	159
  5996  007062  6E09               	movwf	??_toupper^0,c
  5997  007064  0EFF               	movlw	255
  5998  007066  6E0A               	movwf	(??_toupper+1)^0,c
  5999  007068  C007  F00B         	movff	toupper@c,??_toupper+2
  6000  00706C  C008  F00C         	movff	toupper@c+1,??_toupper+3
  6001  007070  5009               	movf	??_toupper^0,w,c
  6002  007072  260B               	addwf	(??_toupper+2)^0,f,c
  6003  007074  500A               	movf	(??_toupper+1)^0,w,c
  6004  007076  220C               	addwfc	(??_toupper+3)^0,f,c
  6005  007078  500C               	movf	(??_toupper+3)^0,w,c
  6006  00707A  E10B               	bnz	u3740
  6007  00707C  0E1A               	movlw	26
  6008  00707E  5C0B               	subwf	(??_toupper+2)^0,w,c
  6009  007080  A0D8               	btfss	status,0,c
  6010  007082  EF45  F038         	goto	u3741
  6011  007086  EF49  F038         	goto	u3740
  6012  00708A                     u3741:
  6013  00708A  FFFF               	dw	65535	; assembler added errata NOP
  6014  00708C  0E01               	movlw	1
  6015  00708E  EF4B  F038         	goto	u3750
  6016  007092                     u3740:
  6017  007092  FFFF               	dw	65535	; assembler added errata NOP
  6018  007094  0E00               	movlw	0
  6019  007096                     u3750:
  6020  007096  FFFF               	dw	65535	; assembler added errata NOP
  6021  007098  6E0D               	movwf	_toupper$1766^0,c
  6022  00709A  6A0E               	clrf	(_toupper$1766+1)^0,c
  6023  00709C  500D               	movf	_toupper$1766^0,w,c
  6024  00709E  100E               	iorwf	(_toupper$1766+1)^0,w,c
  6025  0070A0  B4D8               	btfsc	status,2,c
  6026  0070A2  EF55  F038         	goto	u3761
  6027  0070A6  EF58  F038         	goto	u3760
  6028  0070AA                     u3761:
  6029  0070AA  FFFF               	dw	65535	; assembler added errata NOP
  6030  0070AC  EF5F  F038         	goto	l1388
  6031  0070B0                     u3760:
  6032  0070B0  FFFF               	dw	65535	; assembler added errata NOP
  6033  0070B2  0E5F               	movlw	95
  6034  0070B4  1407               	andwf	toupper@c^0,w,c
  6035  0070B6  6E07               	movwf	?_toupper^0,c
  6036  0070B8  6A08               	clrf	(?_toupper+1)^0,c
  6037  0070BA  EF64  F038         	goto	l1393
  6038  0070BE                     l1388:
  6039  0070BE  FFFF               	dw	65535	; assembler added errata NOP
  6040  0070C0  C007  F007         	movff	toupper@c,?_toupper
  6041  0070C4  C008  F008         	movff	toupper@c+1,?_toupper+1
  6042  0070C8                     l1393:
  6043  0070C8  FFFF               	dw	65535	; assembler added errata NOP
  6044  0070CA  0012               	return		;funcret
  6045  0070CC  FFFF               	dw	65535	; errata NOP
  6046  0070CE                     __end_of_toupper:
  6047                           	callstack 0
  6048                           
  6049 ;; *************** function _islower *****************
  6050 ;; Defined at:
  6051 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\islower.c"
  6052 ;; Parameters:    Size  Location     Type
  6053 ;;  c               2    0[COMRAM] int 
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;		None
  6056 ;; Return value:  Size  Location     Type
  6057 ;;                  2    0[COMRAM] int 
  6058 ;; Registers used:
  6059 ;;		wreg, status,2, status,0
  6060 ;; Tracked objects:
  6061 ;;		On entry : 0/0
  6062 ;;		On exit  : 0/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6065 ;;      Params:         2       0       0       0       0       0       0
  6066 ;;      Locals:         0       0       0       0       0       0       0
  6067 ;;      Temps:          4       0       0       0       0       0       0
  6068 ;;      Totals:         6       0       0       0       0       0       0
  6069 ;;Total ram usage:        6 bytes
  6070 ;; Hardware stack levels used:    1
  6071 ;; Hardware stack levels required when called:    1
  6072 ;; This function calls:
  6073 ;;		Nothing
  6074 ;; This function is called by:
  6075 ;;		_toupper
  6076 ;; This function uses a non-reentrant model
  6077 ;;
  6078                           
  6079                           	psect	text9
  6080  006DC0                     __ptext9:
  6081                           	callstack 0
  6082  006DC0                     _islower:
  6083                           	callstack 23
  6084  006DC0  FFFF               	dw	65535	; assembler added errata NOP
  6085  006DC2  0E9F               	movlw	159
  6086  006DC4  6E03               	movwf	??_islower^0,c
  6087  006DC6  0EFF               	movlw	255
  6088  006DC8  6E04               	movwf	(??_islower+1)^0,c
  6089  006DCA  C001  F005         	movff	islower@c,??_islower+2
  6090  006DCE  C002  F006         	movff	islower@c+1,??_islower+3
  6091  006DD2  5003               	movf	??_islower^0,w,c
  6092  006DD4  2605               	addwf	(??_islower+2)^0,f,c
  6093  006DD6  5004               	movf	(??_islower+1)^0,w,c
  6094  006DD8  2206               	addwfc	(??_islower+3)^0,f,c
  6095  006DDA  5006               	movf	(??_islower+3)^0,w,c
  6096  006DDC  E10B               	bnz	u3430
  6097  006DDE  0E1A               	movlw	26
  6098  006DE0  5C05               	subwf	(??_islower+2)^0,w,c
  6099  006DE2  A0D8               	btfss	status,0,c
  6100  006DE4  EFF6  F036         	goto	u3431
  6101  006DE8  EFFA  F036         	goto	u3430
  6102  006DEC                     u3431:
  6103  006DEC  FFFF               	dw	65535	; assembler added errata NOP
  6104  006DEE  0E01               	movlw	1
  6105  006DF0  EFFC  F036         	goto	u3440
  6106  006DF4                     u3430:
  6107  006DF4  FFFF               	dw	65535	; assembler added errata NOP
  6108  006DF6  0E00               	movlw	0
  6109  006DF8                     u3440:
  6110  006DF8  FFFF               	dw	65535	; assembler added errata NOP
  6111  006DFA  6E01               	movwf	?_islower^0,c
  6112  006DFC  6A02               	clrf	(?_islower+1)^0,c
  6113  006DFE  0012               	return		;funcret
  6114  006E00  FFFF               	dw	65535	; errata NOP
  6115  006E02                     __end_of_islower:
  6116                           	callstack 0
  6117                           
  6118 ;; *************** function _isupper *****************
  6119 ;; Defined at:
  6120 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  6121 ;; Parameters:    Size  Location     Type
  6122 ;;  c               2    0[COMRAM] int 
  6123 ;; Auto vars:     Size  Location     Type
  6124 ;;		None
  6125 ;; Return value:  Size  Location     Type
  6126 ;;                  2    0[COMRAM] int 
  6127 ;; Registers used:
  6128 ;;		wreg, status,2, status,0
  6129 ;; Tracked objects:
  6130 ;;		On entry : 0/0
  6131 ;;		On exit  : 0/0
  6132 ;;		Unchanged: 0/0
  6133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6134 ;;      Params:         2       0       0       0       0       0       0
  6135 ;;      Locals:         0       0       0       0       0       0       0
  6136 ;;      Temps:          4       0       0       0       0       0       0
  6137 ;;      Totals:         6       0       0       0       0       0       0
  6138 ;;Total ram usage:        6 bytes
  6139 ;; Hardware stack levels used:    1
  6140 ;; Hardware stack levels required when called:    1
  6141 ;; This function calls:
  6142 ;;		Nothing
  6143 ;; This function is called by:
  6144 ;;		_xtoa
  6145 ;; This function uses a non-reentrant model
  6146 ;;
  6147                           
  6148                           	psect	text10
  6149  006D7E                     __ptext10:
  6150                           	callstack 0
  6151  006D7E                     _isupper:
  6152                           	callstack 24
  6153  006D7E  FFFF               	dw	65535	; assembler added errata NOP
  6154  006D80  0EBF               	movlw	191
  6155  006D82  6E03               	movwf	??_isupper^0,c
  6156  006D84  0EFF               	movlw	255
  6157  006D86  6E04               	movwf	(??_isupper+1)^0,c
  6158  006D88  C001  F005         	movff	isupper@c,??_isupper+2
  6159  006D8C  C002  F006         	movff	isupper@c+1,??_isupper+3
  6160  006D90  5003               	movf	??_isupper^0,w,c
  6161  006D92  2605               	addwf	(??_isupper+2)^0,f,c
  6162  006D94  5004               	movf	(??_isupper+1)^0,w,c
  6163  006D96  2206               	addwfc	(??_isupper+3)^0,f,c
  6164  006D98  5006               	movf	(??_isupper+3)^0,w,c
  6165  006D9A  E10B               	bnz	u3700
  6166  006D9C  0E1A               	movlw	26
  6167  006D9E  5C05               	subwf	(??_isupper+2)^0,w,c
  6168  006DA0  A0D8               	btfss	status,0,c
  6169  006DA2  EFD5  F036         	goto	u3701
  6170  006DA6  EFD9  F036         	goto	u3700
  6171  006DAA                     u3701:
  6172  006DAA  FFFF               	dw	65535	; assembler added errata NOP
  6173  006DAC  0E01               	movlw	1
  6174  006DAE  EFDB  F036         	goto	u3710
  6175  006DB2                     u3700:
  6176  006DB2  FFFF               	dw	65535	; assembler added errata NOP
  6177  006DB4  0E00               	movlw	0
  6178  006DB6                     u3710:
  6179  006DB6  FFFF               	dw	65535	; assembler added errata NOP
  6180  006DB8  6E01               	movwf	?_isupper^0,c
  6181  006DBA  6A02               	clrf	(?_isupper+1)^0,c
  6182  006DBC  0012               	return		;funcret
  6183  006DBE  FFFF               	dw	65535	; errata NOP
  6184  006DC0                     __end_of_isupper:
  6185                           	callstack 0
  6186                           
  6187 ;; *************** function _isalpha *****************
  6188 ;; Defined at:
  6189 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isalpha.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;  c               2    0[COMRAM] int 
  6192 ;; Auto vars:     Size  Location     Type
  6193 ;;		None
  6194 ;; Return value:  Size  Location     Type
  6195 ;;                  2    0[COMRAM] int 
  6196 ;; Registers used:
  6197 ;;		wreg, status,2, status,0
  6198 ;; Tracked objects:
  6199 ;;		On entry : 0/0
  6200 ;;		On exit  : 0/0
  6201 ;;		Unchanged: 0/0
  6202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6203 ;;      Params:         2       0       0       0       0       0       0
  6204 ;;      Locals:         0       0       0       0       0       0       0
  6205 ;;      Temps:          4       0       0       0       0       0       0
  6206 ;;      Totals:         6       0       0       0       0       0       0
  6207 ;;Total ram usage:        6 bytes
  6208 ;; Hardware stack levels used:    1
  6209 ;; Hardware stack levels required when called:    1
  6210 ;; This function calls:
  6211 ;;		Nothing
  6212 ;; This function is called by:
  6213 ;;		_xtoa
  6214 ;; This function uses a non-reentrant model
  6215 ;;
  6216                           
  6217                           	psect	text11
  6218  006E02                     __ptext11:
  6219                           	callstack 0
  6220  006E02                     _isalpha:
  6221                           	callstack 24
  6222  006E02  FFFF               	dw	65535	; assembler added errata NOP
  6223  006E04  0E9F               	movlw	159
  6224  006E06  6E03               	movwf	??_isalpha^0,c
  6225  006E08  0EFF               	movlw	255
  6226  006E0A  6E04               	movwf	(??_isalpha+1)^0,c
  6227  006E0C  0E20               	movlw	32
  6228  006E0E  1001               	iorwf	isalpha@c^0,w,c
  6229  006E10  6E05               	movwf	(??_isalpha+2)^0,c
  6230  006E12  0E00               	movlw	0
  6231  006E14  1002               	iorwf	(isalpha@c+1)^0,w,c
  6232  006E16  6E06               	movwf	(??_isalpha+3)^0,c
  6233  006E18  5003               	movf	??_isalpha^0,w,c
  6234  006E1A  2605               	addwf	(??_isalpha+2)^0,f,c
  6235  006E1C  5004               	movf	(??_isalpha+1)^0,w,c
  6236  006E1E  2206               	addwfc	(??_isalpha+3)^0,f,c
  6237  006E20  5006               	movf	(??_isalpha+3)^0,w,c
  6238  006E22  E10B               	bnz	u3720
  6239  006E24  0E1A               	movlw	26
  6240  006E26  5C05               	subwf	(??_isalpha+2)^0,w,c
  6241  006E28  A0D8               	btfss	status,0,c
  6242  006E2A  EF19  F037         	goto	u3721
  6243  006E2E  EF1D  F037         	goto	u3720
  6244  006E32                     u3721:
  6245  006E32  FFFF               	dw	65535	; assembler added errata NOP
  6246  006E34  0E01               	movlw	1
  6247  006E36  EF1F  F037         	goto	u3730
  6248  006E3A                     u3720:
  6249  006E3A  FFFF               	dw	65535	; assembler added errata NOP
  6250  006E3C  0E00               	movlw	0
  6251  006E3E                     u3730:
  6252  006E3E  FFFF               	dw	65535	; assembler added errata NOP
  6253  006E40  6E01               	movwf	?_isalpha^0,c
  6254  006E42  6A02               	clrf	(?_isalpha+1)^0,c
  6255  006E44  0012               	return		;funcret
  6256  006E46  FFFF               	dw	65535	; errata NOP
  6257  006E48                     __end_of_isalpha:
  6258                           	callstack 0
  6259                           
  6260 ;; *************** function _utoa *****************
  6261 ;; Defined at:
  6262 ;;		line 593 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6263 ;; Parameters:    Size  Location     Type
  6264 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6265 ;;		 -> vsnprintf@f(6), 
  6266 ;;  d               8   29[COMRAM] unsigned long long 
  6267 ;; Auto vars:     Size  Location     Type
  6268 ;;  n               8   49[COMRAM] unsigned long long 
  6269 ;;  i               2   57[COMRAM] int 
  6270 ;;  w               2   47[COMRAM] int 
  6271 ;;  p               2   45[COMRAM] int 
  6272 ;; Return value:  Size  Location     Type
  6273 ;;                  2   27[COMRAM] int 
  6274 ;; Registers used:
  6275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6276 ;; Tracked objects:
  6277 ;;		On entry : 0/0
  6278 ;;		On exit  : 0/0
  6279 ;;		Unchanged: 0/0
  6280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6281 ;;      Params:        10       0       0       0       0       0       0
  6282 ;;      Locals:        14       0       0       0       0       0       0
  6283 ;;      Temps:          8       0       0       0       0       0       0
  6284 ;;      Totals:        32       0       0       0       0       0       0
  6285 ;;Total ram usage:       32 bytes
  6286 ;; Hardware stack levels used:    1
  6287 ;; Hardware stack levels required when called:    5
  6288 ;; This function calls:
  6289 ;;		___lodiv
  6290 ;;		___lomod
  6291 ;;		_pad
  6292 ;; This function is called by:
  6293 ;;		_vfpfcnvrt
  6294 ;; This function uses a non-reentrant model
  6295 ;;
  6296                           
  6297                           	psect	text12
  6298  00333A                     __ptext12:
  6299                           	callstack 0
  6300  00333A                     _utoa:
  6301                           	callstack 0
  6302  00333A  FFFF               	dw	65535	; assembler added errata NOP
  6303  00333C                     
  6304                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 593: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 594: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 595:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common
      +                          \doprnt.c: 596:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sourc
      +                          es\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  6305  00333C  0100               	movlb	0	; () banked
  6306  00333E  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6307  003340  EFA4  F019         	goto	u4171
  6308  003344  EFA7  F019         	goto	u4170
  6309  003348                     u4171:
  6310  003348  FFFF               	dw	65535	; assembler added errata NOP
  6311  00334A  EFA9  F019         	goto	l3784
  6312  00334E                     u4170:
  6313  00334E  FFFF               	dw	65535	; assembler added errata NOP
  6314  003350                     
  6315                           ; BSR set to: 0
  6316                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 600:         flag
      +                          s &= ~(1 << 1);
  6317  003350  927D               	bcf	_flags^0,1,c
  6318  003352                     l3784:
  6319  003352  FFFF               	dw	65535	; assembler added errata NOP
  6320                           
  6321                           ; BSR set to: 0
  6322                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 602:     p = (0 <
      +                           prec) ? prec : 1;
  6323  003354  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6324  003356  EFB8  F019         	goto	u4180
  6325  00335A  5189               	movf	(_prec+1)& (0+255),w,b
  6326  00335C  E106               	bnz	u4181
  6327  00335E  0588               	decf	_prec& (0+255),w,b
  6328  003360  B0D8               	btfsc	status,0,c
  6329  003362  EFB5  F019         	goto	u4181
  6330  003366  EFB8  F019         	goto	u4180
  6331  00336A                     u4181:
  6332  00336A  FFFF               	dw	65535	; assembler added errata NOP
  6333  00336C  EFBF  F019         	goto	l1157
  6334  003370                     u4180:
  6335  003370  FFFF               	dw	65535	; assembler added errata NOP
  6336  003372                     
  6337                           ; BSR set to: 0
  6338  003372  0E00               	movlw	0
  6339  003374  6E2F               	movwf	(utoa@p+1)^0,c
  6340  003376  0E01               	movlw	1
  6341  003378  6E2E               	movwf	utoa@p^0,c
  6342  00337A  EFC4  F019         	goto	l1159
  6343  00337E                     l1157:
  6344  00337E  FFFF               	dw	65535	; assembler added errata NOP
  6345                           
  6346                           ; BSR set to: 0
  6347  003380  C088  F02E         	movff	_prec,utoa@p
  6348  003384  C089  F02F         	movff	_prec+1,utoa@p+1
  6349  003388                     l1159:
  6350  003388  FFFF               	dw	65535	; assembler added errata NOP
  6351                           
  6352                           ; BSR set to: 0
  6353                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 603:     w = widt
      +                          h;
  6354  00338A  C086  F030         	movff	_width,utoa@w
  6355  00338E  C087  F031         	movff	_width+1,utoa@w+1
  6356                           
  6357                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 606:     n = d;
  6358  003392  C01E  F032         	movff	utoa@d,utoa@n
  6359  003396  C01F  F033         	movff	utoa@d+1,utoa@n+1
  6360  00339A  C020  F034         	movff	utoa@d+2,utoa@n+2
  6361  00339E  C021  F035         	movff	utoa@d+3,utoa@n+3
  6362  0033A2  C022  F036         	movff	utoa@d+4,utoa@n+4
  6363  0033A6  C023  F037         	movff	utoa@d+5,utoa@n+5
  6364  0033AA  C024  F038         	movff	utoa@d+6,utoa@n+6
  6365  0033AE  C025  F039         	movff	utoa@d+7,utoa@n+7
  6366  0033B2                     
  6367                           ; BSR set to: 0
  6368                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 607:     i = size
      +                          of(dbuf) - 1;
  6369  0033B2  0E00               	movlw	0
  6370  0033B4  6E3B               	movwf	(utoa@i+1)^0,c
  6371  0033B6  0E1F               	movlw	31
  6372  0033B8  6E3A               	movwf	utoa@i^0,c
  6373  0033BA                     
  6374                           ; BSR set to: 0
  6375                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 608:     dbuf[i] 
      +                          = '\0';
  6376  0033BA  0E00               	movlw	0
  6377  0033BC  6FB1               	movwf	(_dbuf+31)& (0+255),b
  6378                           
  6379                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6380  0033BE  EF58  F01A         	goto	l3802
  6381  0033C2                     l3792:
  6382  0033C2  FFFF               	dw	65535	; assembler added errata NOP
  6383                           
  6384                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 610:         --i;
  6385  0033C4  063A               	decf	utoa@i^0,f,c
  6386  0033C6  A0D8               	btfss	status,0,c
  6387  0033C8  063B               	decf	(utoa@i+1)^0,f,c
  6388  0033CA                     
  6389                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 611:         dbuf
      +                          [i] = '0' + (n % 10);
  6390  0033CA  0E92               	movlw	low _dbuf
  6391  0033CC  243A               	addwf	utoa@i^0,w,c
  6392  0033CE  6ED9               	movwf	fsr2l,c
  6393  0033D0  0E00               	movlw	high _dbuf
  6394  0033D2  203B               	addwfc	(utoa@i+1)^0,w,c
  6395  0033D4  6EDA               	movwf	fsr2h,c
  6396  0033D6  C032  F001         	movff	utoa@n,___lomod@dividend
  6397  0033DA  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  6398  0033DE  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  6399  0033E2  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  6400  0033E6  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  6401  0033EA  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  6402  0033EE  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  6403  0033F2  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  6404  0033F6  0E0A               	movlw	10
  6405  0033F8  6E09               	movwf	___lomod@divisor^0,c
  6406  0033FA  0E00               	movlw	0
  6407  0033FC  6E0A               	movwf	(___lomod@divisor+1)^0,c
  6408  0033FE  0E00               	movlw	0
  6409  003400  6E0B               	movwf	(___lomod@divisor+2)^0,c
  6410  003402  0E00               	movlw	0
  6411  003404  6E0C               	movwf	(___lomod@divisor+3)^0,c
  6412  003406  0E00               	movlw	0
  6413  003408  6E0D               	movwf	(___lomod@divisor+4)^0,c
  6414  00340A  0E00               	movlw	0
  6415  00340C  6E0E               	movwf	(___lomod@divisor+5)^0,c
  6416  00340E  0E00               	movlw	0
  6417  003410  6E0F               	movwf	(___lomod@divisor+6)^0,c
  6418  003412  0E00               	movlw	0
  6419  003414  6E10               	movwf	(___lomod@divisor+7)^0,c
  6420  003416  ECCC  F03B         	call	___lomod	;wreg free
  6421  00341A  C001  F026         	movff	?___lomod,??_utoa
  6422  00341E  C002  F027         	movff	?___lomod+1,??_utoa+1
  6423  003422  C003  F028         	movff	?___lomod+2,??_utoa+2
  6424  003426  C004  F029         	movff	?___lomod+3,??_utoa+3
  6425  00342A  C005  F02A         	movff	?___lomod+4,??_utoa+4
  6426  00342E  C006  F02B         	movff	?___lomod+5,??_utoa+5
  6427  003432  C007  F02C         	movff	?___lomod+6,??_utoa+6
  6428  003436  C008  F02D         	movff	?___lomod+7,??_utoa+7
  6429  00343A  5026               	movf	??_utoa^0,w,c
  6430  00343C  0F30               	addlw	48
  6431  00343E  6EDF               	movwf	indf2,c
  6432  003440                     
  6433                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 612:         --p;
  6434  003440  062E               	decf	utoa@p^0,f,c
  6435  003442  A0D8               	btfss	status,0,c
  6436  003444  062F               	decf	(utoa@p+1)^0,f,c
  6437  003446                     
  6438                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 613:         --w;
  6439  003446  0630               	decf	utoa@w^0,f,c
  6440  003448  A0D8               	btfss	status,0,c
  6441  00344A  0631               	decf	(utoa@w+1)^0,f,c
  6442  00344C                     
  6443                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 614:         n = 
      +                          n / 10;
  6444  00344C  C032  F001         	movff	utoa@n,___lodiv@dividend
  6445  003450  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  6446  003454  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  6447  003458  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  6448  00345C  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  6449  003460  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  6450  003464  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  6451  003468  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  6452  00346C  0E0A               	movlw	10
  6453  00346E  6E09               	movwf	___lodiv@divisor^0,c
  6454  003470  0E00               	movlw	0
  6455  003472  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  6456  003474  0E00               	movlw	0
  6457  003476  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  6458  003478  0E00               	movlw	0
  6459  00347A  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  6460  00347C  0E00               	movlw	0
  6461  00347E  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  6462  003480  0E00               	movlw	0
  6463  003482  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  6464  003484  0E00               	movlw	0
  6465  003486  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  6466  003488  0E00               	movlw	0
  6467  00348A  6E10               	movwf	(___lodiv@divisor+7)^0,c
  6468  00348C  ECC3  F03D         	call	___lodiv	;wreg free
  6469  003490  C001  F032         	movff	?___lodiv,utoa@n
  6470  003494  C002  F033         	movff	?___lodiv+1,utoa@n+1
  6471  003498  C003  F034         	movff	?___lodiv+2,utoa@n+2
  6472  00349C  C004  F035         	movff	?___lodiv+3,utoa@n+3
  6473  0034A0  C005  F036         	movff	?___lodiv+4,utoa@n+4
  6474  0034A4  C006  F037         	movff	?___lodiv+5,utoa@n+5
  6475  0034A8  C007  F038         	movff	?___lodiv+6,utoa@n+6
  6476  0034AC  C008  F039         	movff	?___lodiv+7,utoa@n+7
  6477  0034B0                     l3802:
  6478  0034B0  FFFF               	dw	65535	; assembler added errata NOP
  6479                           
  6480                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6481  0034B2  503A               	movf	utoa@i^0,w,c
  6482  0034B4  103B               	iorwf	(utoa@i+1)^0,w,c
  6483  0034B6  B4D8               	btfsc	status,2,c
  6484  0034B8  EF60  F01A         	goto	u4191
  6485  0034BC  EF63  F01A         	goto	u4190
  6486  0034C0                     u4191:
  6487  0034C0  FFFF               	dw	65535	; assembler added errata NOP
  6488  0034C2  EF9B  F01A         	goto	l3812
  6489  0034C6                     u4190:
  6490  0034C6  FFFF               	dw	65535	; assembler added errata NOP
  6491  0034C8  5032               	movf	utoa@n^0,w,c
  6492  0034CA  1033               	iorwf	(utoa@n+1)^0,w,c
  6493  0034CC  1034               	iorwf	(utoa@n+2)^0,w,c
  6494  0034CE  1035               	iorwf	(utoa@n+3)^0,w,c
  6495  0034D0  1036               	iorwf	(utoa@n+4)^0,w,c
  6496  0034D2  1037               	iorwf	(utoa@n+5)^0,w,c
  6497  0034D4  1038               	iorwf	(utoa@n+6)^0,w,c
  6498  0034D6  1039               	iorwf	(utoa@n+7)^0,w,c
  6499  0034D8  A4D8               	btfss	status,2,c
  6500  0034DA  EF71  F01A         	goto	u4201
  6501  0034DE  EF74  F01A         	goto	u4200
  6502  0034E2                     u4201:
  6503  0034E2  FFFF               	dw	65535	; assembler added errata NOP
  6504  0034E4  EFE1  F019         	goto	l3792
  6505  0034E8                     u4200:
  6506  0034E8  FFFF               	dw	65535	; assembler added errata NOP
  6507  0034EA  BE2F               	btfsc	(utoa@p+1)^0,7,c
  6508  0034EC  EF83  F01A         	goto	u4210
  6509  0034F0  502F               	movf	(utoa@p+1)^0,w,c
  6510  0034F2  E106               	bnz	u4211
  6511  0034F4  042E               	decf	utoa@p^0,w,c
  6512  0034F6  B0D8               	btfsc	status,0,c
  6513  0034F8  EF80  F01A         	goto	u4211
  6514  0034FC  EF83  F01A         	goto	u4210
  6515  003500                     u4211:
  6516  003500  FFFF               	dw	65535	; assembler added errata NOP
  6517  003502  EFE1  F019         	goto	l3792
  6518  003506                     u4210:
  6519  003506  FFFF               	dw	65535	; assembler added errata NOP
  6520  003508  BE31               	btfsc	(utoa@w+1)^0,7,c
  6521  00350A  EF8F  F01A         	goto	u4221
  6522  00350E  5031               	movf	(utoa@w+1)^0,w,c
  6523  003510  E109               	bnz	u4220
  6524  003512  0430               	decf	utoa@w^0,w,c
  6525  003514  A0D8               	btfss	status,0,c
  6526  003516  EF8F  F01A         	goto	u4221
  6527  00351A  EF92  F01A         	goto	u4220
  6528  00351E                     u4221:
  6529  00351E  FFFF               	dw	65535	; assembler added errata NOP
  6530  003520  EF9B  F01A         	goto	l3812
  6531  003524                     u4220:
  6532  003524  FFFF               	dw	65535	; assembler added errata NOP
  6533  003526  B27D               	btfsc	_flags^0,1,c
  6534  003528  EF98  F01A         	goto	u4231
  6535  00352C  EF9B  F01A         	goto	u4230
  6536  003530                     u4231:
  6537  003530  FFFF               	dw	65535	; assembler added errata NOP
  6538  003532  EFE1  F019         	goto	l3792
  6539  003536                     u4230:
  6540  003536                     l3812:
  6541  003536  FFFF               	dw	65535	; assembler added errata NOP
  6542                           
  6543                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 618:     return p
      +                          ad(fp, &dbuf[i], w);
  6544  003538  C01C  F011         	movff	utoa@fp,pad@fp
  6545  00353C  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  6546  003540  0E92               	movlw	low _dbuf
  6547  003542  243A               	addwf	utoa@i^0,w,c
  6548  003544  6E13               	movwf	pad@buf^0,c
  6549  003546  0E00               	movlw	high _dbuf
  6550  003548  203B               	addwfc	(utoa@i+1)^0,w,c
  6551  00354A  6E14               	movwf	(pad@buf+1)^0,c
  6552  00354C  C030  F015         	movff	utoa@w,pad@p
  6553  003550  C031  F016         	movff	utoa@w+1,pad@p+1
  6554  003554  EC5B  F03B         	call	_pad	;wreg free
  6555  003558  C011  F01C         	movff	?_pad,?_utoa
  6556  00355C  C012  F01D         	movff	?_pad+1,?_utoa+1
  6557  003560  0012               	return		;funcret
  6558  003562  FFFF               	dw	65535	; errata NOP
  6559  003564                     __end_of_utoa:
  6560                           	callstack 0
  6561                           
  6562 ;; *************** function ___lomod *****************
  6563 ;; Defined at:
  6564 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lomod.c"
  6565 ;; Parameters:    Size  Location     Type
  6566 ;;  dividend        8    0[COMRAM] unsigned long long 
  6567 ;;  divisor         8    8[COMRAM] unsigned long long 
  6568 ;; Auto vars:     Size  Location     Type
  6569 ;;  counter         1   16[COMRAM] unsigned char 
  6570 ;; Return value:  Size  Location     Type
  6571 ;;                  8    0[COMRAM] unsigned long long 
  6572 ;; Registers used:
  6573 ;;		wreg, status,2, status,0
  6574 ;; Tracked objects:
  6575 ;;		On entry : 0/0
  6576 ;;		On exit  : 0/0
  6577 ;;		Unchanged: 0/0
  6578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6579 ;;      Params:        16       0       0       0       0       0       0
  6580 ;;      Locals:         1       0       0       0       0       0       0
  6581 ;;      Temps:          0       0       0       0       0       0       0
  6582 ;;      Totals:        17       0       0       0       0       0       0
  6583 ;;Total ram usage:       17 bytes
  6584 ;; Hardware stack levels used:    1
  6585 ;; Hardware stack levels required when called:    1
  6586 ;; This function calls:
  6587 ;;		Nothing
  6588 ;; This function is called by:
  6589 ;;		_utoa
  6590 ;; This function uses a non-reentrant model
  6591 ;;
  6592                           
  6593                           	psect	text13
  6594  007798                     __ptext13:
  6595                           	callstack 0
  6596  007798                     ___lomod:
  6597                           	callstack 0
  6598  007798  FFFF               	dw	65535	; assembler added errata NOP
  6599  00779A  5009               	movf	___lomod@divisor^0,w,c
  6600  00779C  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  6601  00779E  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  6602  0077A0  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  6603  0077A2  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  6604  0077A4  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  6605  0077A6  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  6606  0077A8  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  6607  0077AA  B4D8               	btfsc	status,2,c
  6608  0077AC  EFDA  F03B         	goto	u3621
  6609  0077B0  EFDD  F03B         	goto	u3620
  6610  0077B4                     u3621:
  6611  0077B4  FFFF               	dw	65535	; assembler added errata NOP
  6612  0077B6  EF2E  F03C         	goto	l776
  6613  0077BA                     u3620:
  6614  0077BA  FFFF               	dw	65535	; assembler added errata NOP
  6615  0077BC  0E01               	movlw	1
  6616  0077BE  6E11               	movwf	___lomod@counter^0,c
  6617  0077C0  EFED  F03B         	goto	l3544
  6618  0077C4                     l3542:
  6619  0077C4  FFFF               	dw	65535	; assembler added errata NOP
  6620  0077C6  90D8               	bcf	status,0,c
  6621  0077C8  3609               	rlcf	___lomod@divisor^0,f,c
  6622  0077CA  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  6623  0077CC  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  6624  0077CE  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  6625  0077D0  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  6626  0077D2  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  6627  0077D4  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  6628  0077D6  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  6629  0077D8  2A11               	incf	___lomod@counter^0,f,c
  6630  0077DA                     l3544:
  6631  0077DA  FFFF               	dw	65535	; assembler added errata NOP
  6632  0077DC  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  6633  0077DE  EFF3  F03B         	goto	u3631
  6634  0077E2  EFF6  F03B         	goto	u3630
  6635  0077E6                     u3631:
  6636  0077E6  FFFF               	dw	65535	; assembler added errata NOP
  6637  0077E8  EFE2  F03B         	goto	l3542
  6638  0077EC                     u3630:
  6639  0077EC  FFFF               	dw	65535	; assembler added errata NOP
  6640  0077EE                     l3546:
  6641  0077EE  FFFF               	dw	65535	; assembler added errata NOP
  6642  0077F0  5009               	movf	___lomod@divisor^0,w,c
  6643  0077F2  5C01               	subwf	___lomod@dividend^0,w,c
  6644  0077F4  500A               	movf	(___lomod@divisor+1)^0,w,c
  6645  0077F6  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  6646  0077F8  500B               	movf	(___lomod@divisor+2)^0,w,c
  6647  0077FA  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  6648  0077FC  500C               	movf	(___lomod@divisor+3)^0,w,c
  6649  0077FE  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  6650  007800  500D               	movf	(___lomod@divisor+4)^0,w,c
  6651  007802  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  6652  007804  500E               	movf	(___lomod@divisor+5)^0,w,c
  6653  007806  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  6654  007808  500F               	movf	(___lomod@divisor+6)^0,w,c
  6655  00780A  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  6656  00780C  5010               	movf	(___lomod@divisor+7)^0,w,c
  6657  00780E  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  6658  007810  A0D8               	btfss	status,0,c
  6659  007812  EF0D  F03C         	goto	u3641
  6660  007816  EF10  F03C         	goto	u3640
  6661  00781A                     u3641:
  6662  00781A  FFFF               	dw	65535	; assembler added errata NOP
  6663  00781C  EF21  F03C         	goto	l3550
  6664  007820                     u3640:
  6665  007820  FFFF               	dw	65535	; assembler added errata NOP
  6666  007822  5009               	movf	___lomod@divisor^0,w,c
  6667  007824  5E01               	subwf	___lomod@dividend^0,f,c
  6668  007826  500A               	movf	(___lomod@divisor+1)^0,w,c
  6669  007828  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  6670  00782A  500B               	movf	(___lomod@divisor+2)^0,w,c
  6671  00782C  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  6672  00782E  500C               	movf	(___lomod@divisor+3)^0,w,c
  6673  007830  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  6674  007832  500D               	movf	(___lomod@divisor+4)^0,w,c
  6675  007834  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  6676  007836  500E               	movf	(___lomod@divisor+5)^0,w,c
  6677  007838  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  6678  00783A  500F               	movf	(___lomod@divisor+6)^0,w,c
  6679  00783C  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  6680  00783E  5010               	movf	(___lomod@divisor+7)^0,w,c
  6681  007840  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  6682  007842                     l3550:
  6683  007842  FFFF               	dw	65535	; assembler added errata NOP
  6684  007844  90D8               	bcf	status,0,c
  6685  007846  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  6686  007848  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  6687  00784A  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  6688  00784C  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  6689  00784E  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  6690  007850  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  6691  007852  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  6692  007854  3209               	rrcf	___lomod@divisor^0,f,c
  6693  007856  2E11               	decfsz	___lomod@counter^0,f,c
  6694  007858  EFF7  F03B         	goto	l3546
  6695  00785C                     l776:
  6696  00785C  FFFF               	dw	65535	; assembler added errata NOP
  6697  00785E  C001  F001         	movff	___lomod@dividend,?___lomod
  6698  007862  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  6699  007866  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  6700  00786A  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  6701  00786E  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  6702  007872  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  6703  007876  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  6704  00787A  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  6705  00787E  0012               	return		;funcret
  6706  007880  FFFF               	dw	65535	; errata NOP
  6707  007882                     __end_of___lomod:
  6708                           	callstack 0
  6709                           
  6710 ;; *************** function ___lodiv *****************
  6711 ;; Defined at:
  6712 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lodiv.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;  dividend        8    0[COMRAM] unsigned long long 
  6715 ;;  divisor         8    8[COMRAM] unsigned long long 
  6716 ;; Auto vars:     Size  Location     Type
  6717 ;;  quotient        8   16[COMRAM] unsigned long long 
  6718 ;;  counter         1   24[COMRAM] unsigned char 
  6719 ;; Return value:  Size  Location     Type
  6720 ;;                  8    0[COMRAM] unsigned long long 
  6721 ;; Registers used:
  6722 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6723 ;; Tracked objects:
  6724 ;;		On entry : 0/0
  6725 ;;		On exit  : 0/0
  6726 ;;		Unchanged: 0/0
  6727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6728 ;;      Params:        16       0       0       0       0       0       0
  6729 ;;      Locals:         9       0       0       0       0       0       0
  6730 ;;      Temps:          0       0       0       0       0       0       0
  6731 ;;      Totals:        25       0       0       0       0       0       0
  6732 ;;Total ram usage:       25 bytes
  6733 ;; Hardware stack levels used:    1
  6734 ;; Hardware stack levels required when called:    1
  6735 ;; This function calls:
  6736 ;;		Nothing
  6737 ;; This function is called by:
  6738 ;;		_utoa
  6739 ;; This function uses a non-reentrant model
  6740 ;;
  6741                           
  6742                           	psect	text14
  6743  007B86                     __ptext14:
  6744                           	callstack 0
  6745  007B86                     ___lodiv:
  6746                           	callstack 0
  6747  007B86  FFFF               	dw	65535	; assembler added errata NOP
  6748  007B88  EE20  F011         	lfsr	2,___lodiv@quotient
  6749  007B8C  0E07               	movlw	7
  6750  007B8E                     u3581:
  6751  007B8E  6ADE               	clrf	postinc2,c
  6752  007B90  06E8               	decf	wreg,f,c
  6753  007B92  E2FD               	bc	u3581
  6754  007B94  5009               	movf	___lodiv@divisor^0,w,c
  6755  007B96  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  6756  007B98  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  6757  007B9A  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  6758  007B9C  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  6759  007B9E  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  6760  007BA0  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  6761  007BA2  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  6762  007BA4  B4D8               	btfsc	status,2,c
  6763  007BA6  EFD7  F03D         	goto	u3591
  6764  007BAA  EFDA  F03D         	goto	u3590
  6765  007BAE                     u3591:
  6766  007BAE  FFFF               	dw	65535	; assembler added errata NOP
  6767  007BB0  EF35  F03E         	goto	l766
  6768  007BB4                     u3590:
  6769  007BB4  FFFF               	dw	65535	; assembler added errata NOP
  6770  007BB6  0E01               	movlw	1
  6771  007BB8  6E19               	movwf	___lodiv@counter^0,c
  6772  007BBA  EFEA  F03D         	goto	l3524
  6773  007BBE                     l3522:
  6774  007BBE  FFFF               	dw	65535	; assembler added errata NOP
  6775  007BC0  90D8               	bcf	status,0,c
  6776  007BC2  3609               	rlcf	___lodiv@divisor^0,f,c
  6777  007BC4  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  6778  007BC6  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  6779  007BC8  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  6780  007BCA  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  6781  007BCC  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  6782  007BCE  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  6783  007BD0  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  6784  007BD2  2A19               	incf	___lodiv@counter^0,f,c
  6785  007BD4                     l3524:
  6786  007BD4  FFFF               	dw	65535	; assembler added errata NOP
  6787  007BD6  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  6788  007BD8  EFF0  F03D         	goto	u3601
  6789  007BDC  EFF3  F03D         	goto	u3600
  6790  007BE0                     u3601:
  6791  007BE0  FFFF               	dw	65535	; assembler added errata NOP
  6792  007BE2  EFDF  F03D         	goto	l3522
  6793  007BE6                     u3600:
  6794  007BE6  FFFF               	dw	65535	; assembler added errata NOP
  6795  007BE8                     l3526:
  6796  007BE8  FFFF               	dw	65535	; assembler added errata NOP
  6797  007BEA  90D8               	bcf	status,0,c
  6798  007BEC  3611               	rlcf	___lodiv@quotient^0,f,c
  6799  007BEE  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  6800  007BF0  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  6801  007BF2  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  6802  007BF4  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  6803  007BF6  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  6804  007BF8  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  6805  007BFA  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  6806  007BFC  5009               	movf	___lodiv@divisor^0,w,c
  6807  007BFE  5C01               	subwf	___lodiv@dividend^0,w,c
  6808  007C00  500A               	movf	(___lodiv@divisor+1)^0,w,c
  6809  007C02  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  6810  007C04  500B               	movf	(___lodiv@divisor+2)^0,w,c
  6811  007C06  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  6812  007C08  500C               	movf	(___lodiv@divisor+3)^0,w,c
  6813  007C0A  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  6814  007C0C  500D               	movf	(___lodiv@divisor+4)^0,w,c
  6815  007C0E  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  6816  007C10  500E               	movf	(___lodiv@divisor+5)^0,w,c
  6817  007C12  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  6818  007C14  500F               	movf	(___lodiv@divisor+6)^0,w,c
  6819  007C16  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  6820  007C18  5010               	movf	(___lodiv@divisor+7)^0,w,c
  6821  007C1A  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  6822  007C1C  A0D8               	btfss	status,0,c
  6823  007C1E  EF13  F03E         	goto	u3611
  6824  007C22  EF16  F03E         	goto	u3610
  6825  007C26                     u3611:
  6826  007C26  FFFF               	dw	65535	; assembler added errata NOP
  6827  007C28  EF28  F03E         	goto	l3534
  6828  007C2C                     u3610:
  6829  007C2C  FFFF               	dw	65535	; assembler added errata NOP
  6830  007C2E  5009               	movf	___lodiv@divisor^0,w,c
  6831  007C30  5E01               	subwf	___lodiv@dividend^0,f,c
  6832  007C32  500A               	movf	(___lodiv@divisor+1)^0,w,c
  6833  007C34  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  6834  007C36  500B               	movf	(___lodiv@divisor+2)^0,w,c
  6835  007C38  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  6836  007C3A  500C               	movf	(___lodiv@divisor+3)^0,w,c
  6837  007C3C  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  6838  007C3E  500D               	movf	(___lodiv@divisor+4)^0,w,c
  6839  007C40  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  6840  007C42  500E               	movf	(___lodiv@divisor+5)^0,w,c
  6841  007C44  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  6842  007C46  500F               	movf	(___lodiv@divisor+6)^0,w,c
  6843  007C48  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  6844  007C4A  5010               	movf	(___lodiv@divisor+7)^0,w,c
  6845  007C4C  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  6846  007C4E  8011               	bsf	___lodiv@quotient^0,0,c
  6847  007C50                     l3534:
  6848  007C50  FFFF               	dw	65535	; assembler added errata NOP
  6849  007C52  90D8               	bcf	status,0,c
  6850  007C54  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  6851  007C56  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  6852  007C58  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  6853  007C5A  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  6854  007C5C  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  6855  007C5E  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  6856  007C60  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  6857  007C62  3209               	rrcf	___lodiv@divisor^0,f,c
  6858  007C64  2E19               	decfsz	___lodiv@counter^0,f,c
  6859  007C66  EFF4  F03D         	goto	l3526
  6860  007C6A                     l766:
  6861  007C6A  FFFF               	dw	65535	; assembler added errata NOP
  6862  007C6C  C011  F001         	movff	___lodiv@quotient,?___lodiv
  6863  007C70  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  6864  007C74  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  6865  007C78  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  6866  007C7C  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  6867  007C80  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  6868  007C84  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  6869  007C88  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  6870  007C8C  0012               	return		;funcret
  6871  007C8E  FFFF               	dw	65535	; errata NOP
  6872  007C90                     __end_of___lodiv:
  6873                           	callstack 0
  6874                           
  6875 ;; *************** function _strncmp *****************
  6876 ;; Defined at:
  6877 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  6878 ;; Parameters:    Size  Location     Type
  6879 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  6880 ;;		 -> STR_8(3), 
  6881 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  6882 ;;		 -> STR_105(3), STR_101(3), STR_96(3), STR_92(3), 
  6883 ;;		 -> STR_87(4), STR_83(4), STR_78(3), STR_73(3), 
  6884 ;;		 -> STR_68(4), STR_63(3), STR_58(3), STR_53(4), 
  6885 ;;		 -> STR_48(3), STR_43(3), STR_38(4), STR_33(3), 
  6886 ;;		 -> STR_29(3), STR_24(3), STR_20(3), STR_15(4), 
  6887 ;;		 -> STR_11(4), 
  6888 ;;  n               2    4[COMRAM] unsigned int 
  6889 ;; Auto vars:     Size  Location     Type
  6890 ;;  r               2    9[COMRAM] PTR const unsigned char 
  6891 ;;		 -> STR_105(3), STR_101(3), STR_96(3), STR_92(3), 
  6892 ;;		 -> STR_87(4), STR_83(4), STR_78(3), STR_73(3), 
  6893 ;;		 -> STR_68(4), STR_63(3), STR_58(3), STR_53(4), 
  6894 ;;		 -> STR_48(3), STR_43(3), STR_38(4), STR_33(3), 
  6895 ;;		 -> STR_29(3), STR_24(3), STR_20(3), STR_15(4), 
  6896 ;;		 -> STR_11(4), 
  6897 ;;  l               2    7[COMRAM] PTR const unsigned char 
  6898 ;;		 -> STR_8(3), 
  6899 ;; Return value:  Size  Location     Type
  6900 ;;                  2    0[COMRAM] int 
  6901 ;; Registers used:
  6902 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6903 ;; Tracked objects:
  6904 ;;		On entry : 0/0
  6905 ;;		On exit  : 0/0
  6906 ;;		Unchanged: 0/0
  6907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6908 ;;      Params:         6       0       0       0       0       0       0
  6909 ;;      Locals:         4       0       0       0       0       0       0
  6910 ;;      Temps:          1       0       0       0       0       0       0
  6911 ;;      Totals:        11       0       0       0       0       0       0
  6912 ;;Total ram usage:       11 bytes
  6913 ;; Hardware stack levels used:    1
  6914 ;; Hardware stack levels required when called:    1
  6915 ;; This function calls:
  6916 ;;		Nothing
  6917 ;; This function is called by:
  6918 ;;		_vfpfcnvrt
  6919 ;; This function uses a non-reentrant model
  6920 ;;
  6921                           
  6922                           	psect	text15
  6923  007A7E                     __ptext15:
  6924                           	callstack 0
  6925  007A7E                     _strncmp:
  6926                           	callstack 0
  6927  007A7E  FFFF               	dw	65535	; assembler added errata NOP
  6928  007A80  C001  F008         	movff	strncmp@_l,strncmp@l
  6929  007A84  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  6930  007A88  C003  F00A         	movff	strncmp@_r,strncmp@r
  6931  007A8C  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  6932  007A90  0605               	decf	strncmp@n^0,f,c
  6933  007A92  A0D8               	btfss	status,0,c
  6934  007A94  0606               	decf	(strncmp@n+1)^0,f,c
  6935  007A96  2805               	incf	strncmp@n^0,w,c
  6936  007A98  E106               	bnz	u4481
  6937  007A9A  2806               	incf	(strncmp@n+1)^0,w,c
  6938  007A9C  A4D8               	btfss	status,2,c
  6939  007A9E  EF53  F03D         	goto	u4481
  6940  007AA2  EF56  F03D         	goto	u4480
  6941  007AA6                     u4481:
  6942  007AA6  FFFF               	dw	65535	; assembler added errata NOP
  6943  007AA8  EF65  F03D         	goto	l3932
  6944  007AAC                     u4480:
  6945  007AAC  FFFF               	dw	65535	; assembler added errata NOP
  6946  007AAE  0E00               	movlw	0
  6947  007AB0  6E02               	movwf	(?_strncmp+1)^0,c
  6948  007AB2  0E00               	movlw	0
  6949  007AB4  6E01               	movwf	?_strncmp^0,c
  6950  007AB6  EFC0  F03D         	goto	l1378
  6951  007ABA                     l3930:
  6952  007ABA  FFFF               	dw	65535	; assembler added errata NOP
  6953  007ABC  4A08               	infsnz	strncmp@l^0,f,c
  6954  007ABE  2A09               	incf	(strncmp@l+1)^0,f,c
  6955  007AC0  4A0A               	infsnz	strncmp@r^0,f,c
  6956  007AC2  2A0B               	incf	(strncmp@r+1)^0,f,c
  6957  007AC4  0605               	decf	strncmp@n^0,f,c
  6958  007AC6  A0D8               	btfss	status,0,c
  6959  007AC8  0606               	decf	(strncmp@n+1)^0,f,c
  6960  007ACA                     l3932:
  6961  007ACA  FFFF               	dw	65535	; assembler added errata NOP
  6962  007ACC  C008  FFF6         	movff	strncmp@l,tblptrl
  6963  007AD0  C009  FFF7         	movff	strncmp@l+1,tblptrh
  6964  007AD4                     	if	0	;tblptru may be non-zero
  6965  007AD4                     	endif
  6966  007AD4                     	if	0	;tblptru may be non-zero
  6967  007AD4                     	endif
  6968  007AD4  0008               	tblrd		*
  6969  007AD6  FFFF               	dw	65535	; errata NOP
  6970  007AD8  50F5               	movf	tablat,w,c
  6971  007ADA  0900               	iorlw	0
  6972  007ADC  B4D8               	btfsc	status,2,c
  6973  007ADE  EF73  F03D         	goto	u4491
  6974  007AE2  EF76  F03D         	goto	u4490
  6975  007AE6                     u4491:
  6976  007AE6  FFFF               	dw	65535	; assembler added errata NOP
  6977  007AE8  EFAB  F03D         	goto	l3940
  6978  007AEC                     u4490:
  6979  007AEC  FFFF               	dw	65535	; assembler added errata NOP
  6980  007AEE  C00A  FFF6         	movff	strncmp@r,tblptrl
  6981  007AF2  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  6982  007AF6                     	if	0	;tblptru may be non-zero
  6983  007AF6                     	endif
  6984  007AF6                     	if	0	;tblptru may be non-zero
  6985  007AF6                     	endif
  6986  007AF6  0008               	tblrd		*
  6987  007AF8  FFFF               	dw	65535	; errata NOP
  6988  007AFA  50F5               	movf	tablat,w,c
  6989  007AFC  0900               	iorlw	0
  6990  007AFE  B4D8               	btfsc	status,2,c
  6991  007B00  EF84  F03D         	goto	u4501
  6992  007B04  EF87  F03D         	goto	u4500
  6993  007B08                     u4501:
  6994  007B08  FFFF               	dw	65535	; assembler added errata NOP
  6995  007B0A  EFAB  F03D         	goto	l3940
  6996  007B0E                     u4500:
  6997  007B0E  FFFF               	dw	65535	; assembler added errata NOP
  6998  007B10  5005               	movf	strncmp@n^0,w,c
  6999  007B12  1006               	iorwf	(strncmp@n+1)^0,w,c
  7000  007B14  B4D8               	btfsc	status,2,c
  7001  007B16  EF8F  F03D         	goto	u4511
  7002  007B1A  EF92  F03D         	goto	u4510
  7003  007B1E                     u4511:
  7004  007B1E  FFFF               	dw	65535	; assembler added errata NOP
  7005  007B20  EFAB  F03D         	goto	l3940
  7006  007B24                     u4510:
  7007  007B24  FFFF               	dw	65535	; assembler added errata NOP
  7008  007B26  C008  FFF6         	movff	strncmp@l,tblptrl
  7009  007B2A  C009  FFF7         	movff	strncmp@l+1,tblptrh
  7010  007B2E                     	if	0	;tblptru may be non-zero
  7011  007B2E                     	endif
  7012  007B2E                     	if	0	;tblptru may be non-zero
  7013  007B2E                     	endif
  7014  007B2E  0008               	tblrd		*
  7015  007B30  FFFF               	dw	65535	; errata NOP
  7016  007B32  CFF5 F007          	movff	tablat,??_strncmp
  7017  007B36  C00A  FFF6         	movff	strncmp@r,tblptrl
  7018  007B3A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7019  007B3E                     	if	0	;tblptru may be non-zero
  7020  007B3E                     	endif
  7021  007B3E                     	if	0	;tblptru may be non-zero
  7022  007B3E                     	endif
  7023  007B3E  0008               	tblrd		*
  7024  007B40  FFFF               	dw	65535	; errata NOP
  7025  007B42  50F5               	movf	tablat,w,c
  7026  007B44  1807               	xorwf	??_strncmp^0,w,c
  7027  007B46  B4D8               	btfsc	status,2,c
  7028  007B48  EFA8  F03D         	goto	u4521
  7029  007B4C  EFAB  F03D         	goto	u4520
  7030  007B50                     u4521:
  7031  007B50  FFFF               	dw	65535	; assembler added errata NOP
  7032  007B52  EF5D  F03D         	goto	l3930
  7033  007B56                     u4520:
  7034  007B56                     l3940:
  7035  007B56  FFFF               	dw	65535	; assembler added errata NOP
  7036  007B58  C008  FFF6         	movff	strncmp@l,tblptrl
  7037  007B5C  C009  FFF7         	movff	strncmp@l+1,tblptrh
  7038  007B60                     	if	0	;tblptru may be non-zero
  7039  007B60                     	endif
  7040  007B60                     	if	0	;tblptru may be non-zero
  7041  007B60                     	endif
  7042  007B60  0008               	tblrd		*
  7043  007B62  FFFF               	dw	65535	; errata NOP
  7044  007B64  CFF5 F007          	movff	tablat,??_strncmp
  7045  007B68  C00A  FFF6         	movff	strncmp@r,tblptrl
  7046  007B6C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7047  007B70                     	if	0	;tblptru may be non-zero
  7048  007B70                     	endif
  7049  007B70                     	if	0	;tblptru may be non-zero
  7050  007B70                     	endif
  7051  007B70  0008               	tblrd		*
  7052  007B72  FFFF               	dw	65535	; errata NOP
  7053  007B74  50F5               	movf	tablat,w,c
  7054  007B76  5C07               	subwf	??_strncmp^0,w,c
  7055  007B78  6E01               	movwf	?_strncmp^0,c
  7056  007B7A  6A02               	clrf	(?_strncmp+1)^0,c
  7057  007B7C  A0D8               	btfss	status,0,c
  7058  007B7E  0602               	decf	(?_strncmp+1)^0,f,c
  7059  007B80                     l1378:
  7060  007B80  FFFF               	dw	65535	; assembler added errata NOP
  7061  007B82  0012               	return		;funcret
  7062  007B84  FFFF               	dw	65535	; errata NOP
  7063  007B86                     __end_of_strncmp:
  7064                           	callstack 0
  7065                           
  7066 ;; *************** function _stoa *****************
  7067 ;; Defined at:
  7068 ;;		line 546 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7069 ;; Parameters:    Size  Location     Type
  7070 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  7071 ;;		 -> vsnprintf@f(6), 
  7072 ;;  s               2   11[COMRAM] PTR unsigned char 
  7073 ;;		 -> ?_snprintf(2), STR_6(7), STR_5(9), STR_4(39), 
  7074 ;;		 -> STR_3(9), STR_2(64), STR_1(49), 
  7075 ;; Auto vars:     Size  Location     Type
  7076 ;;  nuls            7   14[COMRAM] unsigned char [7]
  7077 ;;  l               2   29[COMRAM] int 
  7078 ;;  p               2   27[COMRAM] int 
  7079 ;;  cp              2   25[COMRAM] PTR unsigned char 
  7080 ;;		 -> stoa@nuls(7), ?_snprintf(2), STR_6(7), STR_5(9), 
  7081 ;;		 -> STR_4(39), STR_3(9), STR_2(64), STR_1(49), 
  7082 ;;  w               2   23[COMRAM] int 
  7083 ;;  i               2   21[COMRAM] int 
  7084 ;; Return value:  Size  Location     Type
  7085 ;;                  2    9[COMRAM] int 
  7086 ;; Registers used:
  7087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7088 ;; Tracked objects:
  7089 ;;		On entry : 0/0
  7090 ;;		On exit  : 0/0
  7091 ;;		Unchanged: 0/0
  7092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7093 ;;      Params:         4       0       0       0       0       0       0
  7094 ;;      Locals:        17       0       0       0       0       0       0
  7095 ;;      Temps:          1       0       0       0       0       0       0
  7096 ;;      Totals:        22       0       0       0       0       0       0
  7097 ;;Total ram usage:       22 bytes
  7098 ;; Hardware stack levels used:    1
  7099 ;; Hardware stack levels required when called:    3
  7100 ;; This function calls:
  7101 ;;		_fputc
  7102 ;;		_strlen
  7103 ;; This function is called by:
  7104 ;;		_vfpfcnvrt
  7105 ;; This function uses a non-reentrant model
  7106 ;;
  7107                           
  7108                           	psect	text16
  7109  003786                     __ptext16:
  7110                           	callstack 0
  7111  003786                     _stoa:
  7112                           	callstack 0
  7113  003786  FFFF               	dw	65535	; assembler added errata NOP
  7114  003788                     
  7115                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 546: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 547: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 548:  
      +                             char *cp, nuls[] = "(null)";
  7116  003788  EE20  F0C8         	lfsr	2,stoa@F1152
  7117  00378C  EE10  F00F         	lfsr	1,stoa@nuls
  7118  003790  0E06               	movlw	6
  7119  003792                     u4071:
  7120  003792  CFDB FFE3          	movff	plusw2,plusw1
  7121  003796  06E8               	decf	wreg,f,c
  7122  003798  E2FC               	bc	u4071
  7123  00379A                     
  7124                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 549:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 552:     c
      +                          p = s;
  7125  00379A  C00C  F01A         	movff	stoa@s,stoa@cp
  7126  00379E  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  7127  0037A2                     
  7128                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 553:     if (!cp)
      +                           {
  7129  0037A2  501A               	movf	stoa@cp^0,w,c
  7130  0037A4  101B               	iorwf	(stoa@cp+1)^0,w,c
  7131  0037A6  A4D8               	btfss	status,2,c
  7132  0037A8  EFD8  F01B         	goto	u4081
  7133  0037AC  EFDB  F01B         	goto	u4080
  7134  0037B0                     u4081:
  7135  0037B0  FFFF               	dw	65535	; assembler added errata NOP
  7136  0037B2  EFE0  F01B         	goto	l3746
  7137  0037B6                     u4080:
  7138  0037B6  FFFF               	dw	65535	; assembler added errata NOP
  7139  0037B8                     
  7140                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 554:         cp =
      +                           nuls;
  7141  0037B8  0E0F               	movlw	low stoa@nuls
  7142  0037BA  6E1A               	movwf	stoa@cp^0,c
  7143  0037BC  0E00               	movlw	high stoa@nuls
  7144  0037BE  6E1B               	movwf	(stoa@cp+1)^0,c
  7145  0037C0                     l3746:
  7146  0037C0  FFFF               	dw	65535	; assembler added errata NOP
  7147                           
  7148                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 558:     l = strl
      +                          en(cp);
  7149  0037C2  C01A  F001         	movff	stoa@cp,strlen@s
  7150  0037C6  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  7151  0037CA  ECD1  F01F         	call	_strlen	;wreg free
  7152  0037CE  C001  F01E         	movff	?_strlen,stoa@l
  7153  0037D2  C002  F01F         	movff	?_strlen+1,stoa@l+1
  7154  0037D6                     
  7155                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 559:     p = prec
      +                          ;
  7156  0037D6  C088  F01C         	movff	_prec,stoa@p
  7157  0037DA  C089  F01D         	movff	_prec+1,stoa@p+1
  7158  0037DE                     
  7159                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 560:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  7160  0037DE  BE1D               	btfsc	(stoa@p+1)^0,7,c
  7161  0037E0  EFF4  F01B         	goto	u4091
  7162  0037E4  EFF7  F01B         	goto	u4090
  7163  0037E8                     u4091:
  7164  0037E8  FFFF               	dw	65535	; assembler added errata NOP
  7165  0037EA  EF10  F01C         	goto	l1138
  7166  0037EE                     u4090:
  7167  0037EE  FFFF               	dw	65535	; assembler added errata NOP
  7168  0037F0  501E               	movf	stoa@l^0,w,c
  7169  0037F2  5C1C               	subwf	stoa@p^0,w,c
  7170  0037F4  501D               	movf	(stoa@p+1)^0,w,c
  7171  0037F6  0A80               	xorlw	128
  7172  0037F8  6E0E               	movwf	??_stoa^0,c
  7173  0037FA  501F               	movf	(stoa@l+1)^0,w,c
  7174  0037FC  0A80               	xorlw	128
  7175  0037FE  580E               	subwfb	??_stoa^0,w,c
  7176  003800  A0D8               	btfss	status,0,c
  7177  003802  EF05  F01C         	goto	u4101
  7178  003806  EF08  F01C         	goto	u4100
  7179  00380A                     u4101:
  7180  00380A  FFFF               	dw	65535	; assembler added errata NOP
  7181  00380C  EF0B  F01C         	goto	l1136
  7182  003810                     u4100:
  7183  003810  FFFF               	dw	65535	; assembler added errata NOP
  7184  003812  EF10  F01C         	goto	l1138
  7185  003816                     l1136:
  7186  003816  FFFF               	dw	65535	; assembler added errata NOP
  7187  003818  C01C  F01E         	movff	stoa@p,stoa@l
  7188  00381C  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  7189  003820                     l1138:
  7190  003820  FFFF               	dw	65535	; assembler added errata NOP
  7191                           
  7192                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 561:     p = l;
  7193  003822  C01E  F01C         	movff	stoa@l,stoa@p
  7194  003826  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  7195                           
  7196                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 562:     w = widt
      +                          h;
  7197  00382A  C086  F018         	movff	_width,stoa@w
  7198  00382E  C087  F019         	movff	_width+1,stoa@w+1
  7199                           
  7200                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 565:     if (!(fl
      +                          ags & (1 << 0))) {
  7201  003832  B07D               	btfsc	_flags^0,0,c
  7202  003834  EF1E  F01C         	goto	u4111
  7203  003838  EF21  F01C         	goto	u4110
  7204  00383C                     u4111:
  7205  00383C  FFFF               	dw	65535	; assembler added errata NOP
  7206  00383E  EF42  F01C         	goto	l3762
  7207  003842                     u4110:
  7208  003842  FFFF               	dw	65535	; assembler added errata NOP
  7209  003844  EF31  F01C         	goto	l3760
  7210  003848                     l3756:
  7211  003848  FFFF               	dw	65535	; assembler added errata NOP
  7212                           
  7213                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 567:             
      +                          fputc(' ', fp);
  7214  00384A  0E00               	movlw	0
  7215  00384C  6E02               	movwf	(fputc@c+1)^0,c
  7216  00384E  0E20               	movlw	32
  7217  003850  6E01               	movwf	fputc@c^0,c
  7218  003852  C00A  F003         	movff	stoa@fp,fputc@fp
  7219  003856  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7220  00385A  ECEA  F03A         	call	_fputc	;wreg free
  7221  00385E                     
  7222                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 568:             
      +                          ++l;
  7223  00385E  4A1E               	infsnz	stoa@l^0,f,c
  7224  003860  2A1F               	incf	(stoa@l+1)^0,f,c
  7225  003862                     l3760:
  7226  003862  FFFF               	dw	65535	; assembler added errata NOP
  7227                           
  7228                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 566:         whil
      +                          e (l < w) {
  7229  003864  5018               	movf	stoa@w^0,w,c
  7230  003866  5C1E               	subwf	stoa@l^0,w,c
  7231  003868  501F               	movf	(stoa@l+1)^0,w,c
  7232  00386A  0A80               	xorlw	128
  7233  00386C  6E0E               	movwf	??_stoa^0,c
  7234  00386E  5019               	movf	(stoa@w+1)^0,w,c
  7235  003870  0A80               	xorlw	128
  7236  003872  580E               	subwfb	??_stoa^0,w,c
  7237  003874  A0D8               	btfss	status,0,c
  7238  003876  EF3F  F01C         	goto	u4121
  7239  00387A  EF42  F01C         	goto	u4120
  7240  00387E                     u4121:
  7241  00387E  FFFF               	dw	65535	; assembler added errata NOP
  7242  003880  EF24  F01C         	goto	l3756
  7243  003884                     u4120:
  7244  003884                     l3762:
  7245  003884  FFFF               	dw	65535	; assembler added errata NOP
  7246                           
  7247                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 573:     i = 0;
  7248  003886  0E00               	movlw	0
  7249  003888  6E17               	movwf	(stoa@i+1)^0,c
  7250  00388A  0E00               	movlw	0
  7251  00388C  6E16               	movwf	stoa@i^0,c
  7252                           
  7253                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  7254  00388E  EF69  F01C         	goto	l3770
  7255  003892                     l3764:
  7256  003892  FFFF               	dw	65535	; assembler added errata NOP
  7257                           
  7258                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 575:         fput
      +                          c(*cp, fp);
  7259  003894  C01A  FFF6         	movff	stoa@cp,tblptrl
  7260  003898  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  7261  00389C  6AF8               	clrf	tblptru,c
  7262  00389E  0E05               	movlw	(high __ramtop+-1)
  7263  0038A0  64F7               	cpfsgt	tblptrh,c
  7264  0038A2  D004               	bra	u4137
  7265  0038A4  0008               	tblrd		*
  7266  0038A6  FFFF               	dw	65535	; errata NOP
  7267  0038A8  50F5               	movf	tablat,w,c
  7268  0038AA  D005               	bra	u4130
  7269  0038AC                     u4137:
  7270  0038AC  CFF6 FFE1          	movff	tblptrl,fsr1l
  7271  0038B0  CFF7 FFE2          	movff	tblptrh,fsr1h
  7272  0038B4  50E7               	movf	indf1,w,c
  7273  0038B6                     u4130:
  7274  0038B6  6E0E               	movwf	??_stoa^0,c
  7275  0038B8  500E               	movf	??_stoa^0,w,c
  7276  0038BA  6E01               	movwf	fputc@c^0,c
  7277  0038BC  6A02               	clrf	(fputc@c+1)^0,c
  7278  0038BE  C00A  F003         	movff	stoa@fp,fputc@fp
  7279  0038C2  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7280  0038C6  ECEA  F03A         	call	_fputc	;wreg free
  7281  0038CA                     
  7282                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 576:         ++cp
      +                          ;
  7283  0038CA  4A1A               	infsnz	stoa@cp^0,f,c
  7284  0038CC  2A1B               	incf	(stoa@cp+1)^0,f,c
  7285  0038CE                     
  7286                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 577:         ++i;
  7287  0038CE  4A16               	infsnz	stoa@i^0,f,c
  7288  0038D0  2A17               	incf	(stoa@i+1)^0,f,c
  7289  0038D2                     l3770:
  7290  0038D2  FFFF               	dw	65535	; assembler added errata NOP
  7291                           
  7292                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  7293  0038D4  501C               	movf	stoa@p^0,w,c
  7294  0038D6  5C16               	subwf	stoa@i^0,w,c
  7295  0038D8  5017               	movf	(stoa@i+1)^0,w,c
  7296  0038DA  0A80               	xorlw	128
  7297  0038DC  6E0E               	movwf	??_stoa^0,c
  7298  0038DE  501D               	movf	(stoa@p+1)^0,w,c
  7299  0038E0  0A80               	xorlw	128
  7300  0038E2  580E               	subwfb	??_stoa^0,w,c
  7301  0038E4  A0D8               	btfss	status,0,c
  7302  0038E6  EF77  F01C         	goto	u4141
  7303  0038EA  EF7A  F01C         	goto	u4140
  7304  0038EE                     u4141:
  7305  0038EE  FFFF               	dw	65535	; assembler added errata NOP
  7306  0038F0  EF49  F01C         	goto	l3764
  7307  0038F4                     u4140:
  7308  0038F4  FFFF               	dw	65535	; assembler added errata NOP
  7309  0038F6                     
  7310                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 581:     if (flag
      +                          s & (1 << 0)) {
  7311  0038F6  A07D               	btfss	_flags^0,0,c
  7312  0038F8  EF80  F01C         	goto	u4151
  7313  0038FC  EF83  F01C         	goto	u4150
  7314  003900                     u4151:
  7315  003900  FFFF               	dw	65535	; assembler added errata NOP
  7316  003902  EFA4  F01C         	goto	l1148
  7317  003906                     u4150:
  7318  003906  FFFF               	dw	65535	; assembler added errata NOP
  7319  003908  EF93  F01C         	goto	l3778
  7320  00390C                     l3774:
  7321  00390C  FFFF               	dw	65535	; assembler added errata NOP
  7322                           
  7323                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 583:             
      +                          fputc(' ', fp);
  7324  00390E  0E00               	movlw	0
  7325  003910  6E02               	movwf	(fputc@c+1)^0,c
  7326  003912  0E20               	movlw	32
  7327  003914  6E01               	movwf	fputc@c^0,c
  7328  003916  C00A  F003         	movff	stoa@fp,fputc@fp
  7329  00391A  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  7330  00391E  ECEA  F03A         	call	_fputc	;wreg free
  7331  003922                     
  7332                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 584:             
      +                          ++l;
  7333  003922  4A1E               	infsnz	stoa@l^0,f,c
  7334  003924  2A1F               	incf	(stoa@l+1)^0,f,c
  7335  003926                     l3778:
  7336  003926  FFFF               	dw	65535	; assembler added errata NOP
  7337                           
  7338                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 582:         whil
      +                          e (l < w) {
  7339  003928  5018               	movf	stoa@w^0,w,c
  7340  00392A  5C1E               	subwf	stoa@l^0,w,c
  7341  00392C  501F               	movf	(stoa@l+1)^0,w,c
  7342  00392E  0A80               	xorlw	128
  7343  003930  6E0E               	movwf	??_stoa^0,c
  7344  003932  5019               	movf	(stoa@w+1)^0,w,c
  7345  003934  0A80               	xorlw	128
  7346  003936  580E               	subwfb	??_stoa^0,w,c
  7347  003938  A0D8               	btfss	status,0,c
  7348  00393A  EFA1  F01C         	goto	u4161
  7349  00393E  EFA4  F01C         	goto	u4160
  7350  003942                     u4161:
  7351  003942  FFFF               	dw	65535	; assembler added errata NOP
  7352  003944  EF86  F01C         	goto	l3774
  7353  003948                     u4160:
  7354  003948                     l1148:
  7355  003948  FFFF               	dw	65535	; assembler added errata NOP
  7356                           
  7357                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 588:     return l
      +                          ;
  7358  00394A  C01E  F00A         	movff	stoa@l,?_stoa
  7359  00394E  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  7360  003952  0012               	return		;funcret
  7361  003954  FFFF               	dw	65535	; errata NOP
  7362  003956                     __end_of_stoa:
  7363                           	callstack 0
  7364                           
  7365 ;; *************** function _otoa *****************
  7366 ;; Defined at:
  7367 ;;		line 507 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7368 ;; Parameters:    Size  Location     Type
  7369 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7370 ;;		 -> vsnprintf@f(6), 
  7371 ;;  d               8   29[COMRAM] unsigned long long 
  7372 ;; Auto vars:     Size  Location     Type
  7373 ;;  n               8   51[COMRAM] unsigned long long 
  7374 ;;  i               2   59[COMRAM] int 
  7375 ;;  w               2   49[COMRAM] int 
  7376 ;;  t               2   47[COMRAM] int 
  7377 ;;  p               2   45[COMRAM] int 
  7378 ;; Return value:  Size  Location     Type
  7379 ;;                  2   27[COMRAM] int 
  7380 ;; Registers used:
  7381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7382 ;; Tracked objects:
  7383 ;;		On entry : 0/0
  7384 ;;		On exit  : 0/0
  7385 ;;		Unchanged: 0/0
  7386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7387 ;;      Params:        10       0       0       0       0       0       0
  7388 ;;      Locals:        16       0       0       0       0       0       0
  7389 ;;      Temps:          8       0       0       0       0       0       0
  7390 ;;      Totals:        34       0       0       0       0       0       0
  7391 ;;Total ram usage:       34 bytes
  7392 ;; Hardware stack levels used:    1
  7393 ;; Hardware stack levels required when called:    5
  7394 ;; This function calls:
  7395 ;;		_pad
  7396 ;; This function is called by:
  7397 ;;		_vfpfcnvrt
  7398 ;; This function uses a non-reentrant model
  7399 ;;
  7400                           
  7401                           	psect	text17
  7402  003564                     __ptext17:
  7403                           	callstack 0
  7404  003564                     _otoa:
  7405                           	callstack 0
  7406  003564  FFFF               	dw	65535	; assembler added errata NOP
  7407  003566                     
  7408                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 507: static int o
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 508: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 509:     int i, p, t, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\com
      +                          mon\doprnt.c: 510:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\so
      +                          urces\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  7409  003566  0100               	movlb	0	; () banked
  7410  003568  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7411  00356A  EFB9  F01A         	goto	u3971
  7412  00356E  EFBC  F01A         	goto	u3970
  7413  003572                     u3971:
  7414  003572  FFFF               	dw	65535	; assembler added errata NOP
  7415  003574  EFBE  F01A         	goto	l3694
  7416  003578                     u3970:
  7417  003578  FFFF               	dw	65535	; assembler added errata NOP
  7418  00357A                     
  7419                           ; BSR set to: 0
  7420                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 514:         flag
      +                          s &= ~(1 << 1);
  7421  00357A  927D               	bcf	_flags^0,1,c
  7422  00357C                     l3694:
  7423  00357C  FFFF               	dw	65535	; assembler added errata NOP
  7424                           
  7425                           ; BSR set to: 0
  7426                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 516:     p = (0 <
      +                           prec) ? prec : 1;
  7427  00357E  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7428  003580  EFCD  F01A         	goto	u3980
  7429  003584  5189               	movf	(_prec+1)& (0+255),w,b
  7430  003586  E106               	bnz	u3981
  7431  003588  0588               	decf	_prec& (0+255),w,b
  7432  00358A  B0D8               	btfsc	status,0,c
  7433  00358C  EFCA  F01A         	goto	u3981
  7434  003590  EFCD  F01A         	goto	u3980
  7435  003594                     u3981:
  7436  003594  FFFF               	dw	65535	; assembler added errata NOP
  7437  003596  EFD4  F01A         	goto	l1118
  7438  00359A                     u3980:
  7439  00359A  FFFF               	dw	65535	; assembler added errata NOP
  7440  00359C                     
  7441                           ; BSR set to: 0
  7442  00359C  0E00               	movlw	0
  7443  00359E  6E2F               	movwf	(otoa@p+1)^0,c
  7444  0035A0  0E01               	movlw	1
  7445  0035A2  6E2E               	movwf	otoa@p^0,c
  7446  0035A4  EFD9  F01A         	goto	l1120
  7447  0035A8                     l1118:
  7448  0035A8  FFFF               	dw	65535	; assembler added errata NOP
  7449                           
  7450                           ; BSR set to: 0
  7451  0035AA  C088  F02E         	movff	_prec,otoa@p
  7452  0035AE  C089  F02F         	movff	_prec+1,otoa@p+1
  7453  0035B2                     l1120:
  7454  0035B2  FFFF               	dw	65535	; assembler added errata NOP
  7455                           
  7456                           ; BSR set to: 0
  7457                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 517:     w = widt
      +                          h;
  7458  0035B4  C086  F032         	movff	_width,otoa@w
  7459  0035B8  C087  F033         	movff	_width+1,otoa@w+1
  7460                           
  7461                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 520:     n = d;
  7462  0035BC  C01E  F034         	movff	otoa@d,otoa@n
  7463  0035C0  C01F  F035         	movff	otoa@d+1,otoa@n+1
  7464  0035C4  C020  F036         	movff	otoa@d+2,otoa@n+2
  7465  0035C8  C021  F037         	movff	otoa@d+3,otoa@n+3
  7466  0035CC  C022  F038         	movff	otoa@d+4,otoa@n+4
  7467  0035D0  C023  F039         	movff	otoa@d+5,otoa@n+5
  7468  0035D4  C024  F03A         	movff	otoa@d+6,otoa@n+6
  7469  0035D8  C025  F03B         	movff	otoa@d+7,otoa@n+7
  7470  0035DC                     
  7471                           ; BSR set to: 0
  7472                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 521:     i = size
      +                          of(dbuf) - 1;
  7473  0035DC  0E00               	movlw	0
  7474  0035DE  6E3D               	movwf	(otoa@i+1)^0,c
  7475  0035E0  0E1F               	movlw	31
  7476  0035E2  6E3C               	movwf	otoa@i^0,c
  7477  0035E4                     
  7478                           ; BSR set to: 0
  7479                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 522:     dbuf[i] 
      +                          = '\0';
  7480  0035E4  0E00               	movlw	0
  7481  0035E6  6FB1               	movwf	(_dbuf+31)& (0+255),b
  7482  0035E8                     
  7483                           ; BSR set to: 0
  7484                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 523:     t = 0;
  7485  0035E8  0E00               	movlw	0
  7486  0035EA  6E31               	movwf	(otoa@t+1)^0,c
  7487  0035EC  0E00               	movlw	0
  7488  0035EE  6E30               	movwf	otoa@t^0,c
  7489                           
  7490                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 524:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7491  0035F0  EF42  F01B         	goto	l3716
  7492  0035F4                     l3704:
  7493  0035F4  FFFF               	dw	65535	; assembler added errata NOP
  7494                           
  7495                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 525:         --i;
  7496  0035F6  063C               	decf	otoa@i^0,f,c
  7497  0035F8  A0D8               	btfss	status,0,c
  7498  0035FA  063D               	decf	(otoa@i+1)^0,f,c
  7499  0035FC                     
  7500                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 526:         t = 
      +                          n & 07;
  7501  0035FC  0E07               	movlw	7
  7502  0035FE  1434               	andwf	otoa@n^0,w,c
  7503  003600  6E30               	movwf	otoa@t^0,c
  7504  003602  6A31               	clrf	(otoa@t+1)^0,c
  7505  003604                     
  7506                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 527:         dbuf
      +                          [i] = '0' + t;
  7507  003604  0E92               	movlw	low _dbuf
  7508  003606  243C               	addwf	otoa@i^0,w,c
  7509  003608  6ED9               	movwf	fsr2l,c
  7510  00360A  0E00               	movlw	high _dbuf
  7511  00360C  203D               	addwfc	(otoa@i+1)^0,w,c
  7512  00360E  6EDA               	movwf	fsr2h,c
  7513  003610  5030               	movf	otoa@t^0,w,c
  7514  003612  0F30               	addlw	48
  7515  003614  6EDF               	movwf	indf2,c
  7516  003616                     
  7517                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 528:         --p;
  7518  003616  062E               	decf	otoa@p^0,f,c
  7519  003618  A0D8               	btfss	status,0,c
  7520  00361A  062F               	decf	(otoa@p+1)^0,f,c
  7521  00361C                     
  7522                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 529:         --w;
  7523  00361C  0632               	decf	otoa@w^0,f,c
  7524  00361E  A0D8               	btfss	status,0,c
  7525  003620  0633               	decf	(otoa@w+1)^0,f,c
  7526  003622                     
  7527                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 530:         n = 
      +                          n >> 3;
  7528  003622  C034  F026         	movff	otoa@n,??_otoa
  7529  003626  C035  F027         	movff	otoa@n+1,??_otoa+1
  7530  00362A  C036  F028         	movff	otoa@n+2,??_otoa+2
  7531  00362E  C037  F029         	movff	otoa@n+3,??_otoa+3
  7532  003632  C038  F02A         	movff	otoa@n+4,??_otoa+4
  7533  003636  C039  F02B         	movff	otoa@n+5,??_otoa+5
  7534  00363A  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  7535  00363E  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  7536  003642  0E04               	movlw	4
  7537  003644  EF2E  F01B         	goto	u3990
  7538  003648                     u3995:
  7539  003648  FFFF               	dw	65535	; assembler added errata NOP
  7540  00364A  90D8               	bcf	status,0,c
  7541  00364C  322D               	rrcf	(??_otoa+7)^0,f,c
  7542  00364E  322C               	rrcf	(??_otoa+6)^0,f,c
  7543  003650  322B               	rrcf	(??_otoa+5)^0,f,c
  7544  003652  322A               	rrcf	(??_otoa+4)^0,f,c
  7545  003654  3229               	rrcf	(??_otoa+3)^0,f,c
  7546  003656  3228               	rrcf	(??_otoa+2)^0,f,c
  7547  003658  3227               	rrcf	(??_otoa+1)^0,f,c
  7548  00365A  3226               	rrcf	??_otoa^0,f,c
  7549  00365C                     u3990:
  7550  00365C  FFFF               	dw	65535	; assembler added errata NOP
  7551  00365E  2EE8               	decfsz	wreg,f,c
  7552  003660  EF24  F01B         	goto	u3995
  7553  003664  C026  F034         	movff	??_otoa,otoa@n
  7554  003668  C027  F035         	movff	??_otoa+1,otoa@n+1
  7555  00366C  C028  F036         	movff	??_otoa+2,otoa@n+2
  7556  003670  C029  F037         	movff	??_otoa+3,otoa@n+3
  7557  003674  C02A  F038         	movff	??_otoa+4,otoa@n+4
  7558  003678  C02B  F039         	movff	??_otoa+5,otoa@n+5
  7559  00367C  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  7560  003680  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  7561  003684                     l3716:
  7562  003684  FFFF               	dw	65535	; assembler added errata NOP
  7563                           
  7564                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 524:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7565  003686  BE3D               	btfsc	(otoa@i+1)^0,7,c
  7566  003688  EF4E  F01B         	goto	u4001
  7567  00368C  503D               	movf	(otoa@i+1)^0,w,c
  7568  00368E  E109               	bnz	u4000
  7569  003690  043C               	decf	otoa@i^0,w,c
  7570  003692  A0D8               	btfss	status,0,c
  7571  003694  EF4E  F01B         	goto	u4001
  7572  003698  EF51  F01B         	goto	u4000
  7573  00369C                     u4001:
  7574  00369C  FFFF               	dw	65535	; assembler added errata NOP
  7575  00369E  EF89  F01B         	goto	l1127
  7576  0036A2                     u4000:
  7577  0036A2  FFFF               	dw	65535	; assembler added errata NOP
  7578  0036A4  5034               	movf	otoa@n^0,w,c
  7579  0036A6  1035               	iorwf	(otoa@n+1)^0,w,c
  7580  0036A8  1036               	iorwf	(otoa@n+2)^0,w,c
  7581  0036AA  1037               	iorwf	(otoa@n+3)^0,w,c
  7582  0036AC  1038               	iorwf	(otoa@n+4)^0,w,c
  7583  0036AE  1039               	iorwf	(otoa@n+5)^0,w,c
  7584  0036B0  103A               	iorwf	(otoa@n+6)^0,w,c
  7585  0036B2  103B               	iorwf	(otoa@n+7)^0,w,c
  7586  0036B4  A4D8               	btfss	status,2,c
  7587  0036B6  EF5F  F01B         	goto	u4011
  7588  0036BA  EF62  F01B         	goto	u4010
  7589  0036BE                     u4011:
  7590  0036BE  FFFF               	dw	65535	; assembler added errata NOP
  7591  0036C0  EFFA  F01A         	goto	l3704
  7592  0036C4                     u4010:
  7593  0036C4  FFFF               	dw	65535	; assembler added errata NOP
  7594  0036C6  BE2F               	btfsc	(otoa@p+1)^0,7,c
  7595  0036C8  EF71  F01B         	goto	u4020
  7596  0036CC  502F               	movf	(otoa@p+1)^0,w,c
  7597  0036CE  E106               	bnz	u4021
  7598  0036D0  042E               	decf	otoa@p^0,w,c
  7599  0036D2  B0D8               	btfsc	status,0,c
  7600  0036D4  EF6E  F01B         	goto	u4021
  7601  0036D8  EF71  F01B         	goto	u4020
  7602  0036DC                     u4021:
  7603  0036DC  FFFF               	dw	65535	; assembler added errata NOP
  7604  0036DE  EFFA  F01A         	goto	l3704
  7605  0036E2                     u4020:
  7606  0036E2  FFFF               	dw	65535	; assembler added errata NOP
  7607  0036E4  BE33               	btfsc	(otoa@w+1)^0,7,c
  7608  0036E6  EF7D  F01B         	goto	u4031
  7609  0036EA  5033               	movf	(otoa@w+1)^0,w,c
  7610  0036EC  E109               	bnz	u4030
  7611  0036EE  0432               	decf	otoa@w^0,w,c
  7612  0036F0  A0D8               	btfss	status,0,c
  7613  0036F2  EF7D  F01B         	goto	u4031
  7614  0036F6  EF80  F01B         	goto	u4030
  7615  0036FA                     u4031:
  7616  0036FA  FFFF               	dw	65535	; assembler added errata NOP
  7617  0036FC  EF89  F01B         	goto	l1127
  7618  003700                     u4030:
  7619  003700  FFFF               	dw	65535	; assembler added errata NOP
  7620  003702  B27D               	btfsc	_flags^0,1,c
  7621  003704  EF86  F01B         	goto	u4041
  7622  003708  EF89  F01B         	goto	u4040
  7623  00370C                     u4041:
  7624  00370C  FFFF               	dw	65535	; assembler added errata NOP
  7625  00370E  EFFA  F01A         	goto	l3704
  7626  003712                     u4040:
  7627  003712                     l1127:
  7628  003712  FFFF               	dw	65535	; assembler added errata NOP
  7629                           
  7630                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 534:     if ((fla
      +                          gs & (1 << 4)) && t) {
  7631  003714  A87D               	btfss	_flags^0,4,c
  7632  003716  EF8F  F01B         	goto	u4051
  7633  00371A  EF92  F01B         	goto	u4050
  7634  00371E                     u4051:
  7635  00371E  FFFF               	dw	65535	; assembler added errata NOP
  7636  003720  EFAC  F01B         	goto	l3734
  7637  003724                     u4050:
  7638  003724  FFFF               	dw	65535	; assembler added errata NOP
  7639  003726  5030               	movf	otoa@t^0,w,c
  7640  003728  1031               	iorwf	(otoa@t+1)^0,w,c
  7641  00372A  B4D8               	btfsc	status,2,c
  7642  00372C  EF9A  F01B         	goto	u4061
  7643  003730  EF9D  F01B         	goto	u4060
  7644  003734                     u4061:
  7645  003734  FFFF               	dw	65535	; assembler added errata NOP
  7646  003736  EFAC  F01B         	goto	l3734
  7647  00373A                     u4060:
  7648  00373A  FFFF               	dw	65535	; assembler added errata NOP
  7649  00373C                     
  7650                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 535:         --i;
  7651  00373C  063C               	decf	otoa@i^0,f,c
  7652  00373E  A0D8               	btfss	status,0,c
  7653  003740  063D               	decf	(otoa@i+1)^0,f,c
  7654  003742                     
  7655                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 536:         dbuf
      +                          [i] = '0';
  7656  003742  0E92               	movlw	low _dbuf
  7657  003744  243C               	addwf	otoa@i^0,w,c
  7658  003746  6ED9               	movwf	fsr2l,c
  7659  003748  0E00               	movlw	high _dbuf
  7660  00374A  203D               	addwfc	(otoa@i+1)^0,w,c
  7661  00374C  6EDA               	movwf	fsr2h,c
  7662  00374E  0E30               	movlw	48
  7663  003750  6EDF               	movwf	indf2,c
  7664  003752                     
  7665                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 537:         --w;
  7666  003752  0632               	decf	otoa@w^0,f,c
  7667  003754  A0D8               	btfss	status,0,c
  7668  003756  0633               	decf	(otoa@w+1)^0,f,c
  7669  003758                     l3734:
  7670  003758  FFFF               	dw	65535	; assembler added errata NOP
  7671                           
  7672                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 541:     return p
      +                          ad(fp, &dbuf[i], w);
  7673  00375A  C01C  F011         	movff	otoa@fp,pad@fp
  7674  00375E  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  7675  003762  0E92               	movlw	low _dbuf
  7676  003764  243C               	addwf	otoa@i^0,w,c
  7677  003766  6E13               	movwf	pad@buf^0,c
  7678  003768  0E00               	movlw	high _dbuf
  7679  00376A  203D               	addwfc	(otoa@i+1)^0,w,c
  7680  00376C  6E14               	movwf	(pad@buf+1)^0,c
  7681  00376E  C032  F015         	movff	otoa@w,pad@p
  7682  003772  C033  F016         	movff	otoa@w+1,pad@p+1
  7683  003776  EC5B  F03B         	call	_pad	;wreg free
  7684  00377A  C011  F01C         	movff	?_pad,?_otoa
  7685  00377E  C012  F01D         	movff	?_pad+1,?_otoa+1
  7686  003782  0012               	return		;funcret
  7687  003784  FFFF               	dw	65535	; errata NOP
  7688  003786                     __end_of_otoa:
  7689                           	callstack 0
  7690                           
  7691 ;; *************** function _dtoa *****************
  7692 ;; Defined at:
  7693 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7694 ;; Parameters:    Size  Location     Type
  7695 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7696 ;;		 -> vsnprintf@f(6), 
  7697 ;;  d               8   29[COMRAM] long long 
  7698 ;; Auto vars:     Size  Location     Type
  7699 ;;  n               8   53[COMRAM] long long 
  7700 ;;  i               2   61[COMRAM] int 
  7701 ;;  s               2   51[COMRAM] int 
  7702 ;;  w               2   49[COMRAM] int 
  7703 ;;  p               2   47[COMRAM] int 
  7704 ;; Return value:  Size  Location     Type
  7705 ;;                  2   27[COMRAM] int 
  7706 ;; Registers used:
  7707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7708 ;; Tracked objects:
  7709 ;;		On entry : 0/0
  7710 ;;		On exit  : 0/0
  7711 ;;		Unchanged: 0/0
  7712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7713 ;;      Params:        10       0       0       0       0       0       0
  7714 ;;      Locals:        18       0       0       0       0       0       0
  7715 ;;      Temps:          8       0       0       0       0       0       0
  7716 ;;      Totals:        36       0       0       0       0       0       0
  7717 ;;Total ram usage:       36 bytes
  7718 ;; Hardware stack levels used:    1
  7719 ;; Hardware stack levels required when called:    5
  7720 ;; This function calls:
  7721 ;;		___aodiv
  7722 ;;		___aomod
  7723 ;;		_abs
  7724 ;;		_pad
  7725 ;; This function is called by:
  7726 ;;		_vfpfcnvrt
  7727 ;; This function uses a non-reentrant model
  7728 ;;
  7729                           
  7730                           	psect	text18
  7731  002CDE                     __ptext18:
  7732                           	callstack 0
  7733  002CDE                     _dtoa:
  7734                           	callstack 0
  7735  002CDE  FFFF               	dw	65535	; assembler added errata NOP
  7736  002CE0                     
  7737                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  7738  002CE0  C01E  F036         	movff	dtoa@d,dtoa@n
  7739  002CE4  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  7740  002CE8  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  7741  002CEC  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  7742  002CF0  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  7743  002CF4  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  7744  002CF8  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  7745  002CFC  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  7746  002D00                     
  7747                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  7748  002D00  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  7749  002D02  EF85  F016         	goto	u3821
  7750  002D06  EF89  F016         	goto	u3820
  7751  002D0A                     u3821:
  7752  002D0A  FFFF               	dw	65535	; assembler added errata NOP
  7753  002D0C  0E01               	movlw	1
  7754  002D0E  EF8B  F016         	goto	u3830
  7755  002D12                     u3820:
  7756  002D12  FFFF               	dw	65535	; assembler added errata NOP
  7757  002D14  0E00               	movlw	0
  7758  002D16                     u3830:
  7759  002D16  FFFF               	dw	65535	; assembler added errata NOP
  7760  002D18  6E34               	movwf	dtoa@s^0,c
  7761  002D1A  6A35               	clrf	(dtoa@s+1)^0,c
  7762                           
  7763                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  7764  002D1C  5034               	movf	dtoa@s^0,w,c
  7765  002D1E  1035               	iorwf	(dtoa@s+1)^0,w,c
  7766  002D20  B4D8               	btfsc	status,2,c
  7767  002D22  EF95  F016         	goto	u3841
  7768  002D26  EF98  F016         	goto	u3840
  7769  002D2A                     u3841:
  7770  002D2A  FFFF               	dw	65535	; assembler added errata NOP
  7771  002D2C  EFA9  F016         	goto	l3634
  7772  002D30                     u3840:
  7773  002D30  FFFF               	dw	65535	; assembler added errata NOP
  7774  002D32                     
  7775                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  7776  002D32  1E3D               	comf	(dtoa@n+7)^0,f,c
  7777  002D34  1E3C               	comf	(dtoa@n+6)^0,f,c
  7778  002D36  1E3B               	comf	(dtoa@n+5)^0,f,c
  7779  002D38  1E3A               	comf	(dtoa@n+4)^0,f,c
  7780  002D3A  1E39               	comf	(dtoa@n+3)^0,f,c
  7781  002D3C  1E38               	comf	(dtoa@n+2)^0,f,c
  7782  002D3E  1E37               	comf	(dtoa@n+1)^0,f,c
  7783  002D40  6C36               	negf	dtoa@n^0,c
  7784  002D42  0E00               	movlw	0
  7785  002D44  2237               	addwfc	(dtoa@n+1)^0,f,c
  7786  002D46  2238               	addwfc	(dtoa@n+2)^0,f,c
  7787  002D48  2239               	addwfc	(dtoa@n+3)^0,f,c
  7788  002D4A  223A               	addwfc	(dtoa@n+4)^0,f,c
  7789  002D4C  223B               	addwfc	(dtoa@n+5)^0,f,c
  7790  002D4E  223C               	addwfc	(dtoa@n+6)^0,f,c
  7791  002D50  223D               	addwfc	(dtoa@n+7)^0,f,c
  7792  002D52                     l3634:
  7793  002D52  FFFF               	dw	65535	; assembler added errata NOP
  7794                           
  7795                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  7796  002D54  0100               	movlb	0	; () banked
  7797  002D56  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7798  002D58  EFB0  F016         	goto	u3851
  7799  002D5C  EFB3  F016         	goto	u3850
  7800  002D60                     u3851:
  7801  002D60  FFFF               	dw	65535	; assembler added errata NOP
  7802  002D62  EFB5  F016         	goto	l3638
  7803  002D66                     u3850:
  7804  002D66  FFFF               	dw	65535	; assembler added errata NOP
  7805  002D68                     
  7806                           ; BSR set to: 0
  7807                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  7808  002D68  927D               	bcf	_flags^0,1,c
  7809  002D6A                     l3638:
  7810  002D6A  FFFF               	dw	65535	; assembler added errata NOP
  7811                           
  7812                           ; BSR set to: 0
  7813                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  7814  002D6C  BF89               	btfsc	(_prec+1)& (0+255),7,b
  7815  002D6E  EFC4  F016         	goto	u3860
  7816  002D72  5189               	movf	(_prec+1)& (0+255),w,b
  7817  002D74  E106               	bnz	u3861
  7818  002D76  0588               	decf	_prec& (0+255),w,b
  7819  002D78  B0D8               	btfsc	status,0,c
  7820  002D7A  EFC1  F016         	goto	u3861
  7821  002D7E  EFC4  F016         	goto	u3860
  7822  002D82                     u3861:
  7823  002D82  FFFF               	dw	65535	; assembler added errata NOP
  7824  002D84  EFCB  F016         	goto	l1093
  7825  002D88                     u3860:
  7826  002D88  FFFF               	dw	65535	; assembler added errata NOP
  7827  002D8A                     
  7828                           ; BSR set to: 0
  7829  002D8A  0E00               	movlw	0
  7830  002D8C  6E31               	movwf	(dtoa@p+1)^0,c
  7831  002D8E  0E01               	movlw	1
  7832  002D90  6E30               	movwf	dtoa@p^0,c
  7833  002D92  EFD0  F016         	goto	l1095
  7834  002D96                     l1093:
  7835  002D96  FFFF               	dw	65535	; assembler added errata NOP
  7836                           
  7837                           ; BSR set to: 0
  7838  002D98  C088  F030         	movff	_prec,dtoa@p
  7839  002D9C  C089  F031         	movff	_prec+1,dtoa@p+1
  7840  002DA0                     l1095:
  7841  002DA0  FFFF               	dw	65535	; assembler added errata NOP
  7842                           
  7843                           ; BSR set to: 0
  7844                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  7845  002DA2  C086  F032         	movff	_width,dtoa@w
  7846  002DA6  C087  F033         	movff	_width+1,dtoa@w+1
  7847  002DAA                     
  7848                           ; BSR set to: 0
  7849                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  7850  002DAA  5034               	movf	dtoa@s^0,w,c
  7851  002DAC  1035               	iorwf	(dtoa@s+1)^0,w,c
  7852  002DAE  A4D8               	btfss	status,2,c
  7853  002DB0  EFDC  F016         	goto	u3871
  7854  002DB4  EFDF  F016         	goto	u3870
  7855  002DB8                     u3871:
  7856  002DB8  FFFF               	dw	65535	; assembler added errata NOP
  7857  002DBA  EFE8  F016         	goto	l3646
  7858  002DBE                     u3870:
  7859  002DBE  FFFF               	dw	65535	; assembler added errata NOP
  7860  002DC0                     
  7861                           ; BSR set to: 0
  7862  002DC0  A47D               	btfss	_flags^0,2,c
  7863  002DC2  EFE5  F016         	goto	u3881
  7864  002DC6  EFE8  F016         	goto	u3880
  7865  002DCA                     u3881:
  7866  002DCA  FFFF               	dw	65535	; assembler added errata NOP
  7867  002DCC  EFEC  F016         	goto	l3648
  7868  002DD0                     u3880:
  7869  002DD0                     l3646:
  7870  002DD0  FFFF               	dw	65535	; assembler added errata NOP
  7871                           
  7872                           ; BSR set to: 0
  7873                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  7874  002DD2  0632               	decf	dtoa@w^0,f,c
  7875  002DD4  A0D8               	btfss	status,0,c
  7876  002DD6  0633               	decf	(dtoa@w+1)^0,f,c
  7877  002DD8                     l3648:
  7878  002DD8  FFFF               	dw	65535	; assembler added errata NOP
  7879                           
  7880                           ; BSR set to: 0
  7881                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  7882  002DDA  0E00               	movlw	0
  7883  002DDC  6E3F               	movwf	(dtoa@i+1)^0,c
  7884  002DDE  0E1F               	movlw	31
  7885  002DE0  6E3E               	movwf	dtoa@i^0,c
  7886  002DE2                     
  7887                           ; BSR set to: 0
  7888                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  7889  002DE2  0E00               	movlw	0
  7890  002DE4  6FB1               	movwf	(_dbuf+31)& (0+255),b
  7891                           
  7892                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7893  002DE6  EF72  F017         	goto	l3662
  7894  002DEA                     l3652:
  7895  002DEA  FFFF               	dw	65535	; assembler added errata NOP
  7896                           
  7897                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  7898  002DEC  063E               	decf	dtoa@i^0,f,c
  7899  002DEE  A0D8               	btfss	status,0,c
  7900  002DF0  063F               	decf	(dtoa@i+1)^0,f,c
  7901  002DF2                     
  7902                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  7903  002DF2  0E92               	movlw	low _dbuf
  7904  002DF4  243E               	addwf	dtoa@i^0,w,c
  7905  002DF6  6ED9               	movwf	fsr2l,c
  7906  002DF8  0E00               	movlw	high _dbuf
  7907  002DFA  203F               	addwfc	(dtoa@i+1)^0,w,c
  7908  002DFC  6EDA               	movwf	fsr2h,c
  7909  002DFE  C036  F001         	movff	dtoa@n,___aomod@dividend
  7910  002E02  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  7911  002E06  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  7912  002E0A  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  7913  002E0E  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  7914  002E12  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  7915  002E16  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7916  002E1A  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7917  002E1E  0E0A               	movlw	10
  7918  002E20  6E09               	movwf	___aomod@divisor^0,c
  7919  002E22  0E00               	movlw	0
  7920  002E24  6E0A               	movwf	(___aomod@divisor+1)^0,c
  7921  002E26  0E00               	movlw	0
  7922  002E28  6E0B               	movwf	(___aomod@divisor+2)^0,c
  7923  002E2A  0E00               	movlw	0
  7924  002E2C  6E0C               	movwf	(___aomod@divisor+3)^0,c
  7925  002E2E  0E00               	movlw	0
  7926  002E30  6E0D               	movwf	(___aomod@divisor+4)^0,c
  7927  002E32  0E00               	movlw	0
  7928  002E34  6E0E               	movwf	(___aomod@divisor+5)^0,c
  7929  002E36  0E00               	movlw	0
  7930  002E38  6E0F               	movwf	(___aomod@divisor+6)^0,c
  7931  002E3A  0E00               	movlw	0
  7932  002E3C  6E10               	movwf	(___aomod@divisor+7)^0,c
  7933  002E3E  EC6C  F01E         	call	___aomod	;wreg free
  7934  002E42  C001  F026         	movff	?___aomod,??_dtoa
  7935  002E46  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7936  002E4A  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7937  002E4E  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7938  002E52  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7939  002E56  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7940  002E5A  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7941  002E5E  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7942  002E62  C026  F013         	movff	??_dtoa,abs@a
  7943  002E66  C028  F014         	movff	??_dtoa+2,abs@a+1
  7944  002E6A  EC49  F037         	call	_abs	;wreg free
  7945  002E6E  5013               	movf	?_abs^0,w,c
  7946  002E70  0F30               	addlw	48
  7947  002E72  6EDF               	movwf	indf2,c
  7948  002E74                     
  7949                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  7950  002E74  0630               	decf	dtoa@p^0,f,c
  7951  002E76  A0D8               	btfss	status,0,c
  7952  002E78  0631               	decf	(dtoa@p+1)^0,f,c
  7953  002E7A                     
  7954                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  7955  002E7A  0632               	decf	dtoa@w^0,f,c
  7956  002E7C  A0D8               	btfss	status,0,c
  7957  002E7E  0633               	decf	(dtoa@w+1)^0,f,c
  7958  002E80                     
  7959                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  7960  002E80  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7961  002E84  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7962  002E88  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7963  002E8C  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7964  002E90  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7965  002E94  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7966  002E98  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7967  002E9C  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7968  002EA0  0E0A               	movlw	10
  7969  002EA2  6E09               	movwf	___aodiv@divisor^0,c
  7970  002EA4  0E00               	movlw	0
  7971  002EA6  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  7972  002EA8  0E00               	movlw	0
  7973  002EAA  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  7974  002EAC  0E00               	movlw	0
  7975  002EAE  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  7976  002EB0  0E00               	movlw	0
  7977  002EB2  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  7978  002EB4  0E00               	movlw	0
  7979  002EB6  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  7980  002EB8  0E00               	movlw	0
  7981  002EBA  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  7982  002EBC  0E00               	movlw	0
  7983  002EBE  6E10               	movwf	(___aodiv@divisor+7)^0,c
  7984  002EC0  EC92  F01D         	call	___aodiv	;wreg free
  7985  002EC4  C001  F036         	movff	?___aodiv,dtoa@n
  7986  002EC8  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7987  002ECC  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7988  002ED0  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7989  002ED4  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7990  002ED8  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7991  002EDC  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7992  002EE0  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7993  002EE4                     l3662:
  7994  002EE4  FFFF               	dw	65535	; assembler added errata NOP
  7995                           
  7996                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7997  002EE6  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  7998  002EE8  EF7E  F017         	goto	u3891
  7999  002EEC  503F               	movf	(dtoa@i+1)^0,w,c
  8000  002EEE  E109               	bnz	u3890
  8001  002EF0  043E               	decf	dtoa@i^0,w,c
  8002  002EF2  A0D8               	btfss	status,0,c
  8003  002EF4  EF7E  F017         	goto	u3891
  8004  002EF8  EF81  F017         	goto	u3890
  8005  002EFC                     u3891:
  8006  002EFC  FFFF               	dw	65535	; assembler added errata NOP
  8007  002EFE  EFB9  F017         	goto	l3672
  8008  002F02                     u3890:
  8009  002F02  FFFF               	dw	65535	; assembler added errata NOP
  8010  002F04  5036               	movf	dtoa@n^0,w,c
  8011  002F06  1037               	iorwf	(dtoa@n+1)^0,w,c
  8012  002F08  1038               	iorwf	(dtoa@n+2)^0,w,c
  8013  002F0A  1039               	iorwf	(dtoa@n+3)^0,w,c
  8014  002F0C  103A               	iorwf	(dtoa@n+4)^0,w,c
  8015  002F0E  103B               	iorwf	(dtoa@n+5)^0,w,c
  8016  002F10  103C               	iorwf	(dtoa@n+6)^0,w,c
  8017  002F12  103D               	iorwf	(dtoa@n+7)^0,w,c
  8018  002F14  A4D8               	btfss	status,2,c
  8019  002F16  EF8F  F017         	goto	u3901
  8020  002F1A  EF92  F017         	goto	u3900
  8021  002F1E                     u3901:
  8022  002F1E  FFFF               	dw	65535	; assembler added errata NOP
  8023  002F20  EFF5  F016         	goto	l3652
  8024  002F24                     u3900:
  8025  002F24  FFFF               	dw	65535	; assembler added errata NOP
  8026  002F26  BE31               	btfsc	(dtoa@p+1)^0,7,c
  8027  002F28  EFA1  F017         	goto	u3910
  8028  002F2C  5031               	movf	(dtoa@p+1)^0,w,c
  8029  002F2E  E106               	bnz	u3911
  8030  002F30  0430               	decf	dtoa@p^0,w,c
  8031  002F32  B0D8               	btfsc	status,0,c
  8032  002F34  EF9E  F017         	goto	u3911
  8033  002F38  EFA1  F017         	goto	u3910
  8034  002F3C                     u3911:
  8035  002F3C  FFFF               	dw	65535	; assembler added errata NOP
  8036  002F3E  EFF5  F016         	goto	l3652
  8037  002F42                     u3910:
  8038  002F42  FFFF               	dw	65535	; assembler added errata NOP
  8039  002F44  BE33               	btfsc	(dtoa@w+1)^0,7,c
  8040  002F46  EFAD  F017         	goto	u3921
  8041  002F4A  5033               	movf	(dtoa@w+1)^0,w,c
  8042  002F4C  E109               	bnz	u3920
  8043  002F4E  0432               	decf	dtoa@w^0,w,c
  8044  002F50  A0D8               	btfss	status,0,c
  8045  002F52  EFAD  F017         	goto	u3921
  8046  002F56  EFB0  F017         	goto	u3920
  8047  002F5A                     u3921:
  8048  002F5A  FFFF               	dw	65535	; assembler added errata NOP
  8049  002F5C  EFB9  F017         	goto	l3672
  8050  002F60                     u3920:
  8051  002F60  FFFF               	dw	65535	; assembler added errata NOP
  8052  002F62  B27D               	btfsc	_flags^0,1,c
  8053  002F64  EFB6  F017         	goto	u3931
  8054  002F68  EFB9  F017         	goto	u3930
  8055  002F6C                     u3931:
  8056  002F6C  FFFF               	dw	65535	; assembler added errata NOP
  8057  002F6E  EFF5  F016         	goto	l3652
  8058  002F72                     u3930:
  8059  002F72                     l3672:
  8060  002F72  FFFF               	dw	65535	; assembler added errata NOP
  8061                           
  8062                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  8063  002F74  5034               	movf	dtoa@s^0,w,c
  8064  002F76  1035               	iorwf	(dtoa@s+1)^0,w,c
  8065  002F78  A4D8               	btfss	status,2,c
  8066  002F7A  EFC1  F017         	goto	u3941
  8067  002F7E  EFC4  F017         	goto	u3940
  8068  002F82                     u3941:
  8069  002F82  FFFF               	dw	65535	; assembler added errata NOP
  8070  002F84  EFCD  F017         	goto	l3676
  8071  002F88                     u3940:
  8072  002F88  FFFF               	dw	65535	; assembler added errata NOP
  8073  002F8A  A47D               	btfss	_flags^0,2,c
  8074  002F8C  EFCA  F017         	goto	u3951
  8075  002F90  EFCD  F017         	goto	u3950
  8076  002F94                     u3951:
  8077  002F94  FFFF               	dw	65535	; assembler added errata NOP
  8078  002F96  EFF0  F017         	goto	l3686
  8079  002F9A                     u3950:
  8080  002F9A                     l3676:
  8081  002F9A  FFFF               	dw	65535	; assembler added errata NOP
  8082                           
  8083                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  8084  002F9C  063E               	decf	dtoa@i^0,f,c
  8085  002F9E  A0D8               	btfss	status,0,c
  8086  002FA0  063F               	decf	(dtoa@i+1)^0,f,c
  8087  002FA2                     
  8088                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  8089  002FA2  5034               	movf	dtoa@s^0,w,c
  8090  002FA4  1035               	iorwf	(dtoa@s+1)^0,w,c
  8091  002FA6  A4D8               	btfss	status,2,c
  8092  002FA8  EFD8  F017         	goto	u3961
  8093  002FAC  EFDB  F017         	goto	u3960
  8094  002FB0                     u3961:
  8095  002FB0  FFFF               	dw	65535	; assembler added errata NOP
  8096  002FB2  EFE2  F017         	goto	l3682
  8097  002FB6                     u3960:
  8098  002FB6  FFFF               	dw	65535	; assembler added errata NOP
  8099  002FB8  0E00               	movlw	0
  8100  002FBA  6E2F               	movwf	(_dtoa$1502+1)^0,c
  8101  002FBC  0E2B               	movlw	43
  8102  002FBE  6E2E               	movwf	_dtoa$1502^0,c
  8103  002FC0  EFE7  F017         	goto	l3684
  8104  002FC4                     l3682:
  8105  002FC4  FFFF               	dw	65535	; assembler added errata NOP
  8106  002FC6  0E00               	movlw	0
  8107  002FC8  6E2F               	movwf	(_dtoa$1502+1)^0,c
  8108  002FCA  0E2D               	movlw	45
  8109  002FCC  6E2E               	movwf	_dtoa$1502^0,c
  8110  002FCE                     l3684:
  8111  002FCE  FFFF               	dw	65535	; assembler added errata NOP
  8112  002FD0  0E92               	movlw	low _dbuf
  8113  002FD2  243E               	addwf	dtoa@i^0,w,c
  8114  002FD4  6ED9               	movwf	fsr2l,c
  8115  002FD6  0E00               	movlw	high _dbuf
  8116  002FD8  203F               	addwfc	(dtoa@i+1)^0,w,c
  8117  002FDA  6EDA               	movwf	fsr2h,c
  8118  002FDC  C02E  FFDF         	movff	_dtoa$1502,indf2
  8119  002FE0                     l3686:
  8120  002FE0  FFFF               	dw	65535	; assembler added errata NOP
  8121                           
  8122                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  8123  002FE2  C01C  F011         	movff	dtoa@fp,pad@fp
  8124  002FE6  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  8125  002FEA  0E92               	movlw	low _dbuf
  8126  002FEC  243E               	addwf	dtoa@i^0,w,c
  8127  002FEE  6E13               	movwf	pad@buf^0,c
  8128  002FF0  0E00               	movlw	high _dbuf
  8129  002FF2  203F               	addwfc	(dtoa@i+1)^0,w,c
  8130  002FF4  6E14               	movwf	(pad@buf+1)^0,c
  8131  002FF6  C032  F015         	movff	dtoa@w,pad@p
  8132  002FFA  C033  F016         	movff	dtoa@w+1,pad@p+1
  8133  002FFE  EC5B  F03B         	call	_pad	;wreg free
  8134  003002  C011  F01C         	movff	?_pad,?_dtoa
  8135  003006  C012  F01D         	movff	?_pad+1,?_dtoa+1
  8136  00300A  0012               	return		;funcret
  8137  00300C  FFFF               	dw	65535	; errata NOP
  8138  00300E                     __end_of_dtoa:
  8139                           	callstack 0
  8140                           
  8141 ;; *************** function _abs *****************
  8142 ;; Defined at:
  8143 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  8144 ;; Parameters:    Size  Location     Type
  8145 ;;  a               2   18[COMRAM] int 
  8146 ;; Auto vars:     Size  Location     Type
  8147 ;;		None
  8148 ;; Return value:  Size  Location     Type
  8149 ;;                  2   18[COMRAM] int 
  8150 ;; Registers used:
  8151 ;;		wreg, status,2, status,0
  8152 ;; Tracked objects:
  8153 ;;		On entry : 0/0
  8154 ;;		On exit  : 0/0
  8155 ;;		Unchanged: 0/0
  8156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8157 ;;      Params:         2       0       0       0       0       0       0
  8158 ;;      Locals:         0       0       0       0       0       0       0
  8159 ;;      Temps:          2       0       0       0       0       0       0
  8160 ;;      Totals:         4       0       0       0       0       0       0
  8161 ;;Total ram usage:        4 bytes
  8162 ;; Hardware stack levels used:    1
  8163 ;; Hardware stack levels required when called:    1
  8164 ;; This function calls:
  8165 ;;		Nothing
  8166 ;; This function is called by:
  8167 ;;		_dtoa
  8168 ;; This function uses a non-reentrant model
  8169 ;;
  8170                           
  8171                           	psect	text19
  8172  006E92                     __ptext19:
  8173                           	callstack 0
  8174  006E92                     _abs:
  8175                           	callstack 0
  8176  006E92  FFFF               	dw	65535	; assembler added errata NOP
  8177  006E94  BE14               	btfsc	(abs@a+1)^0,7,c
  8178  006E96  EF58  F037         	goto	u3690
  8179  006E9A  5014               	movf	(abs@a+1)^0,w,c
  8180  006E9C  E106               	bnz	u3691
  8181  006E9E  0413               	decf	abs@a^0,w,c
  8182  006EA0  B0D8               	btfsc	status,0,c
  8183  006EA2  EF55  F037         	goto	u3691
  8184  006EA6  EF58  F037         	goto	u3690
  8185  006EAA                     u3691:
  8186  006EAA  FFFF               	dw	65535	; assembler added errata NOP
  8187  006EAC  EF67  F037         	goto	l1283
  8188  006EB0                     u3690:
  8189  006EB0  FFFF               	dw	65535	; assembler added errata NOP
  8190  006EB2  C013  F015         	movff	abs@a,??_abs
  8191  006EB6  C014  F016         	movff	abs@a+1,??_abs+1
  8192  006EBA  1E15               	comf	??_abs^0,f,c
  8193  006EBC  1E16               	comf	(??_abs+1)^0,f,c
  8194  006EBE  4A15               	infsnz	??_abs^0,f,c
  8195  006EC0  2A16               	incf	(??_abs+1)^0,f,c
  8196  006EC2  C015  F013         	movff	??_abs,?_abs
  8197  006EC6  C016  F014         	movff	??_abs+1,?_abs+1
  8198  006ECA  EF6C  F037         	goto	l1286
  8199  006ECE                     l1283:
  8200  006ECE  FFFF               	dw	65535	; assembler added errata NOP
  8201  006ED0  C013  F013         	movff	abs@a,?_abs
  8202  006ED4  C014  F014         	movff	abs@a+1,?_abs+1
  8203  006ED8                     l1286:
  8204  006ED8  FFFF               	dw	65535	; assembler added errata NOP
  8205  006EDA  0012               	return		;funcret
  8206  006EDC  FFFF               	dw	65535	; errata NOP
  8207  006EDE                     __end_of_abs:
  8208                           	callstack 0
  8209                           
  8210 ;; *************** function ___aomod *****************
  8211 ;; Defined at:
  8212 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  8213 ;; Parameters:    Size  Location     Type
  8214 ;;  dividend        8    0[COMRAM] long long 
  8215 ;;  divisor         8    8[COMRAM] long long 
  8216 ;; Auto vars:     Size  Location     Type
  8217 ;;  sign            1   17[COMRAM] unsigned char 
  8218 ;;  counter         1   16[COMRAM] unsigned char 
  8219 ;; Return value:  Size  Location     Type
  8220 ;;                  8    0[COMRAM] long long 
  8221 ;; Registers used:
  8222 ;;		wreg, status,2, status,0
  8223 ;; Tracked objects:
  8224 ;;		On entry : 0/0
  8225 ;;		On exit  : 0/0
  8226 ;;		Unchanged: 0/0
  8227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8228 ;;      Params:        16       0       0       0       0       0       0
  8229 ;;      Locals:         2       0       0       0       0       0       0
  8230 ;;      Temps:          0       0       0       0       0       0       0
  8231 ;;      Totals:        18       0       0       0       0       0       0
  8232 ;;Total ram usage:       18 bytes
  8233 ;; Hardware stack levels used:    1
  8234 ;; Hardware stack levels required when called:    1
  8235 ;; This function calls:
  8236 ;;		Nothing
  8237 ;; This function is called by:
  8238 ;;		_dtoa
  8239 ;; This function uses a non-reentrant model
  8240 ;;
  8241                           
  8242                           	psect	text20
  8243  003CD8                     __ptext20:
  8244                           	callstack 0
  8245  003CD8                     ___aomod:
  8246                           	callstack 0
  8247  003CD8  FFFF               	dw	65535	; assembler added errata NOP
  8248  003CDA  0E00               	movlw	0
  8249  003CDC  6E12               	movwf	___aomod@sign^0,c
  8250  003CDE  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8251  003CE0  EF77  F01E         	goto	u3520
  8252  003CE4  EF74  F01E         	goto	u3521
  8253  003CE8                     u3521:
  8254  003CE8  FFFF               	dw	65535	; assembler added errata NOP
  8255  003CEA  EF8A  F01E         	goto	l3488
  8256  003CEE                     u3520:
  8257  003CEE  FFFF               	dw	65535	; assembler added errata NOP
  8258  003CF0  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8259  003CF2  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8260  003CF4  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8261  003CF6  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8262  003CF8  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8263  003CFA  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8264  003CFC  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8265  003CFE  6C01               	negf	___aomod@dividend^0,c
  8266  003D00  0E00               	movlw	0
  8267  003D02  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8268  003D04  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8269  003D06  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8270  003D08  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8271  003D0A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8272  003D0C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8273  003D0E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8274  003D10  0E01               	movlw	1
  8275  003D12  6E12               	movwf	___aomod@sign^0,c
  8276  003D14                     l3488:
  8277  003D14  FFFF               	dw	65535	; assembler added errata NOP
  8278  003D16  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8279  003D18  EF93  F01E         	goto	u3530
  8280  003D1C  EF90  F01E         	goto	u3531
  8281  003D20                     u3531:
  8282  003D20  FFFF               	dw	65535	; assembler added errata NOP
  8283  003D22  EFA4  F01E         	goto	l3492
  8284  003D26                     u3530:
  8285  003D26  FFFF               	dw	65535	; assembler added errata NOP
  8286  003D28  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8287  003D2A  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8288  003D2C  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8289  003D2E  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8290  003D30  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8291  003D32  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8292  003D34  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8293  003D36  6C09               	negf	___aomod@divisor^0,c
  8294  003D38  0E00               	movlw	0
  8295  003D3A  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8296  003D3C  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8297  003D3E  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8298  003D40  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8299  003D42  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8300  003D44  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8301  003D46  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8302  003D48                     l3492:
  8303  003D48  FFFF               	dw	65535	; assembler added errata NOP
  8304  003D4A  5009               	movf	___aomod@divisor^0,w,c
  8305  003D4C  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8306  003D4E  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8307  003D50  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8308  003D52  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8309  003D54  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8310  003D56  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8311  003D58  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8312  003D5A  B4D8               	btfsc	status,2,c
  8313  003D5C  EFB2  F01E         	goto	u3541
  8314  003D60  EFB5  F01E         	goto	u3540
  8315  003D64                     u3541:
  8316  003D64  FFFF               	dw	65535	; assembler added errata NOP
  8317  003D66  EF06  F01F         	goto	l3508
  8318  003D6A                     u3540:
  8319  003D6A  FFFF               	dw	65535	; assembler added errata NOP
  8320  003D6C  0E01               	movlw	1
  8321  003D6E  6E11               	movwf	___aomod@counter^0,c
  8322  003D70  EFC5  F01E         	goto	l3498
  8323  003D74                     l3496:
  8324  003D74  FFFF               	dw	65535	; assembler added errata NOP
  8325  003D76  90D8               	bcf	status,0,c
  8326  003D78  3609               	rlcf	___aomod@divisor^0,f,c
  8327  003D7A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8328  003D7C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8329  003D7E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8330  003D80  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8331  003D82  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8332  003D84  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8333  003D86  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8334  003D88  2A11               	incf	___aomod@counter^0,f,c
  8335  003D8A                     l3498:
  8336  003D8A  FFFF               	dw	65535	; assembler added errata NOP
  8337  003D8C  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8338  003D8E  EFCB  F01E         	goto	u3551
  8339  003D92  EFCE  F01E         	goto	u3550
  8340  003D96                     u3551:
  8341  003D96  FFFF               	dw	65535	; assembler added errata NOP
  8342  003D98  EFBA  F01E         	goto	l3496
  8343  003D9C                     u3550:
  8344  003D9C  FFFF               	dw	65535	; assembler added errata NOP
  8345  003D9E                     l3500:
  8346  003D9E  FFFF               	dw	65535	; assembler added errata NOP
  8347  003DA0  5009               	movf	___aomod@divisor^0,w,c
  8348  003DA2  5C01               	subwf	___aomod@dividend^0,w,c
  8349  003DA4  500A               	movf	(___aomod@divisor+1)^0,w,c
  8350  003DA6  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8351  003DA8  500B               	movf	(___aomod@divisor+2)^0,w,c
  8352  003DAA  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8353  003DAC  500C               	movf	(___aomod@divisor+3)^0,w,c
  8354  003DAE  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8355  003DB0  500D               	movf	(___aomod@divisor+4)^0,w,c
  8356  003DB2  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8357  003DB4  500E               	movf	(___aomod@divisor+5)^0,w,c
  8358  003DB6  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8359  003DB8  500F               	movf	(___aomod@divisor+6)^0,w,c
  8360  003DBA  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8361  003DBC  5010               	movf	(___aomod@divisor+7)^0,w,c
  8362  003DBE  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8363  003DC0  A0D8               	btfss	status,0,c
  8364  003DC2  EFE5  F01E         	goto	u3561
  8365  003DC6  EFE8  F01E         	goto	u3560
  8366  003DCA                     u3561:
  8367  003DCA  FFFF               	dw	65535	; assembler added errata NOP
  8368  003DCC  EFF9  F01E         	goto	l3504
  8369  003DD0                     u3560:
  8370  003DD0  FFFF               	dw	65535	; assembler added errata NOP
  8371  003DD2  5009               	movf	___aomod@divisor^0,w,c
  8372  003DD4  5E01               	subwf	___aomod@dividend^0,f,c
  8373  003DD6  500A               	movf	(___aomod@divisor+1)^0,w,c
  8374  003DD8  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8375  003DDA  500B               	movf	(___aomod@divisor+2)^0,w,c
  8376  003DDC  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8377  003DDE  500C               	movf	(___aomod@divisor+3)^0,w,c
  8378  003DE0  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8379  003DE2  500D               	movf	(___aomod@divisor+4)^0,w,c
  8380  003DE4  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8381  003DE6  500E               	movf	(___aomod@divisor+5)^0,w,c
  8382  003DE8  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8383  003DEA  500F               	movf	(___aomod@divisor+6)^0,w,c
  8384  003DEC  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8385  003DEE  5010               	movf	(___aomod@divisor+7)^0,w,c
  8386  003DF0  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8387  003DF2                     l3504:
  8388  003DF2  FFFF               	dw	65535	; assembler added errata NOP
  8389  003DF4  90D8               	bcf	status,0,c
  8390  003DF6  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8391  003DF8  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8392  003DFA  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8393  003DFC  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8394  003DFE  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8395  003E00  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8396  003E02  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8397  003E04  3209               	rrcf	___aomod@divisor^0,f,c
  8398  003E06  2E11               	decfsz	___aomod@counter^0,f,c
  8399  003E08  EFCF  F01E         	goto	l3500
  8400  003E0C                     l3508:
  8401  003E0C  FFFF               	dw	65535	; assembler added errata NOP
  8402  003E0E  5012               	movf	___aomod@sign^0,w,c
  8403  003E10  B4D8               	btfsc	status,2,c
  8404  003E12  EF0D  F01F         	goto	u3571
  8405  003E16  EF10  F01F         	goto	u3570
  8406  003E1A                     u3571:
  8407  003E1A  FFFF               	dw	65535	; assembler added errata NOP
  8408  003E1C  EF21  F01F         	goto	l3512
  8409  003E20                     u3570:
  8410  003E20  FFFF               	dw	65535	; assembler added errata NOP
  8411  003E22  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8412  003E24  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8413  003E26  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8414  003E28  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8415  003E2A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8416  003E2C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8417  003E2E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8418  003E30  6C01               	negf	___aomod@dividend^0,c
  8419  003E32  0E00               	movlw	0
  8420  003E34  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8421  003E36  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8422  003E38  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8423  003E3A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8424  003E3C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8425  003E3E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8426  003E40  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8427  003E42                     l3512:
  8428  003E42  FFFF               	dw	65535	; assembler added errata NOP
  8429  003E44  C001  F001         	movff	___aomod@dividend,?___aomod
  8430  003E48  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8431  003E4C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8432  003E50  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8433  003E54  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8434  003E58  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8435  003E5C  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8436  003E60  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8437  003E64  0012               	return		;funcret
  8438  003E66  FFFF               	dw	65535	; errata NOP
  8439  003E68                     __end_of___aomod:
  8440                           	callstack 0
  8441                           
  8442 ;; *************** function ___aodiv *****************
  8443 ;; Defined at:
  8444 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  8445 ;; Parameters:    Size  Location     Type
  8446 ;;  dividend        8    0[COMRAM] long long 
  8447 ;;  divisor         8    8[COMRAM] long long 
  8448 ;; Auto vars:     Size  Location     Type
  8449 ;;  quotient        8   18[COMRAM] long long 
  8450 ;;  sign            1   17[COMRAM] unsigned char 
  8451 ;;  counter         1   16[COMRAM] unsigned char 
  8452 ;; Return value:  Size  Location     Type
  8453 ;;                  8    0[COMRAM] long long 
  8454 ;; Registers used:
  8455 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8456 ;; Tracked objects:
  8457 ;;		On entry : 0/0
  8458 ;;		On exit  : 0/0
  8459 ;;		Unchanged: 0/0
  8460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8461 ;;      Params:        16       0       0       0       0       0       0
  8462 ;;      Locals:        10       0       0       0       0       0       0
  8463 ;;      Temps:          0       0       0       0       0       0       0
  8464 ;;      Totals:        26       0       0       0       0       0       0
  8465 ;;Total ram usage:       26 bytes
  8466 ;; Hardware stack levels used:    1
  8467 ;; Hardware stack levels required when called:    1
  8468 ;; This function calls:
  8469 ;;		Nothing
  8470 ;; This function is called by:
  8471 ;;		_dtoa
  8472 ;; This function uses a non-reentrant model
  8473 ;;
  8474                           
  8475                           	psect	text21
  8476  003B24                     __ptext21:
  8477                           	callstack 0
  8478  003B24                     ___aodiv:
  8479                           	callstack 0
  8480  003B24  FFFF               	dw	65535	; assembler added errata NOP
  8481  003B26  0E00               	movlw	0
  8482  003B28  6E12               	movwf	___aodiv@sign^0,c
  8483  003B2A  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8484  003B2C  EF9D  F01D         	goto	u3450
  8485  003B30  EF9A  F01D         	goto	u3451
  8486  003B34                     u3451:
  8487  003B34  FFFF               	dw	65535	; assembler added errata NOP
  8488  003B36  EFB0  F01D         	goto	l3444
  8489  003B3A                     u3450:
  8490  003B3A  FFFF               	dw	65535	; assembler added errata NOP
  8491  003B3C  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8492  003B3E  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8493  003B40  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8494  003B42  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8495  003B44  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8496  003B46  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8497  003B48  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8498  003B4A  6C09               	negf	___aodiv@divisor^0,c
  8499  003B4C  0E00               	movlw	0
  8500  003B4E  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8501  003B50  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8502  003B52  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8503  003B54  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8504  003B56  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8505  003B58  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8506  003B5A  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8507  003B5C  0E01               	movlw	1
  8508  003B5E  6E12               	movwf	___aodiv@sign^0,c
  8509  003B60                     l3444:
  8510  003B60  FFFF               	dw	65535	; assembler added errata NOP
  8511  003B62  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8512  003B64  EFB9  F01D         	goto	u3460
  8513  003B68  EFB6  F01D         	goto	u3461
  8514  003B6C                     u3461:
  8515  003B6C  FFFF               	dw	65535	; assembler added errata NOP
  8516  003B6E  EFCC  F01D         	goto	l3450
  8517  003B72                     u3460:
  8518  003B72  FFFF               	dw	65535	; assembler added errata NOP
  8519  003B74  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8520  003B76  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8521  003B78  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8522  003B7A  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8523  003B7C  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8524  003B7E  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8525  003B80  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8526  003B82  6C01               	negf	___aodiv@dividend^0,c
  8527  003B84  0E00               	movlw	0
  8528  003B86  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8529  003B88  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8530  003B8A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8531  003B8C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8532  003B8E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8533  003B90  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8534  003B92  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8535  003B94  0E01               	movlw	1
  8536  003B96  1A12               	xorwf	___aodiv@sign^0,f,c
  8537  003B98                     l3450:
  8538  003B98  FFFF               	dw	65535	; assembler added errata NOP
  8539  003B9A  EE20  F013         	lfsr	2,___aodiv@quotient
  8540  003B9E  0E07               	movlw	7
  8541  003BA0                     u3471:
  8542  003BA0  6ADE               	clrf	postinc2,c
  8543  003BA2  06E8               	decf	wreg,f,c
  8544  003BA4  E2FD               	bc	u3471
  8545  003BA6  5009               	movf	___aodiv@divisor^0,w,c
  8546  003BA8  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8547  003BAA  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8548  003BAC  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8549  003BAE  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8550  003BB0  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8551  003BB2  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8552  003BB4  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8553  003BB6  B4D8               	btfsc	status,2,c
  8554  003BB8  EFE0  F01D         	goto	u3481
  8555  003BBC  EFE3  F01D         	goto	u3480
  8556  003BC0                     u3481:
  8557  003BC0  FFFF               	dw	65535	; assembler added errata NOP
  8558  003BC2  EF3E  F01E         	goto	l3472
  8559  003BC6                     u3480:
  8560  003BC6  FFFF               	dw	65535	; assembler added errata NOP
  8561  003BC8  0E01               	movlw	1
  8562  003BCA  6E11               	movwf	___aodiv@counter^0,c
  8563  003BCC  EFF3  F01D         	goto	l3458
  8564  003BD0                     l3456:
  8565  003BD0  FFFF               	dw	65535	; assembler added errata NOP
  8566  003BD2  90D8               	bcf	status,0,c
  8567  003BD4  3609               	rlcf	___aodiv@divisor^0,f,c
  8568  003BD6  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8569  003BD8  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8570  003BDA  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8571  003BDC  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8572  003BDE  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8573  003BE0  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8574  003BE2  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  8575  003BE4  2A11               	incf	___aodiv@counter^0,f,c
  8576  003BE6                     l3458:
  8577  003BE6  FFFF               	dw	65535	; assembler added errata NOP
  8578  003BE8  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8579  003BEA  EFF9  F01D         	goto	u3491
  8580  003BEE  EFFC  F01D         	goto	u3490
  8581  003BF2                     u3491:
  8582  003BF2  FFFF               	dw	65535	; assembler added errata NOP
  8583  003BF4  EFE8  F01D         	goto	l3456
  8584  003BF8                     u3490:
  8585  003BF8  FFFF               	dw	65535	; assembler added errata NOP
  8586  003BFA                     l3460:
  8587  003BFA  FFFF               	dw	65535	; assembler added errata NOP
  8588  003BFC  90D8               	bcf	status,0,c
  8589  003BFE  3613               	rlcf	___aodiv@quotient^0,f,c
  8590  003C00  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  8591  003C02  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  8592  003C04  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  8593  003C06  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  8594  003C08  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  8595  003C0A  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  8596  003C0C  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8597  003C0E  5009               	movf	___aodiv@divisor^0,w,c
  8598  003C10  5C01               	subwf	___aodiv@dividend^0,w,c
  8599  003C12  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8600  003C14  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  8601  003C16  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8602  003C18  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  8603  003C1A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8604  003C1C  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  8605  003C1E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8606  003C20  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  8607  003C22  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8608  003C24  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  8609  003C26  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8610  003C28  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  8611  003C2A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8612  003C2C  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  8613  003C2E  A0D8               	btfss	status,0,c
  8614  003C30  EF1C  F01E         	goto	u3501
  8615  003C34  EF1F  F01E         	goto	u3500
  8616  003C38                     u3501:
  8617  003C38  FFFF               	dw	65535	; assembler added errata NOP
  8618  003C3A  EF31  F01E         	goto	l3468
  8619  003C3E                     u3500:
  8620  003C3E  FFFF               	dw	65535	; assembler added errata NOP
  8621  003C40  5009               	movf	___aodiv@divisor^0,w,c
  8622  003C42  5E01               	subwf	___aodiv@dividend^0,f,c
  8623  003C44  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8624  003C46  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  8625  003C48  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8626  003C4A  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8627  003C4C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8628  003C4E  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8629  003C50  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8630  003C52  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8631  003C54  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8632  003C56  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8633  003C58  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8634  003C5A  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8635  003C5C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8636  003C5E  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8637  003C60  8013               	bsf	___aodiv@quotient^0,0,c
  8638  003C62                     l3468:
  8639  003C62  FFFF               	dw	65535	; assembler added errata NOP
  8640  003C64  90D8               	bcf	status,0,c
  8641  003C66  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8642  003C68  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8643  003C6A  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8644  003C6C  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8645  003C6E  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8646  003C70  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8647  003C72  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8648  003C74  3209               	rrcf	___aodiv@divisor^0,f,c
  8649  003C76  2E11               	decfsz	___aodiv@counter^0,f,c
  8650  003C78  EFFD  F01D         	goto	l3460
  8651  003C7C                     l3472:
  8652  003C7C  FFFF               	dw	65535	; assembler added errata NOP
  8653  003C7E  5012               	movf	___aodiv@sign^0,w,c
  8654  003C80  B4D8               	btfsc	status,2,c
  8655  003C82  EF45  F01E         	goto	u3511
  8656  003C86  EF48  F01E         	goto	u3510
  8657  003C8A                     u3511:
  8658  003C8A  FFFF               	dw	65535	; assembler added errata NOP
  8659  003C8C  EF59  F01E         	goto	l3476
  8660  003C90                     u3510:
  8661  003C90  FFFF               	dw	65535	; assembler added errata NOP
  8662  003C92  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8663  003C94  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8664  003C96  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8665  003C98  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  8666  003C9A  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  8667  003C9C  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  8668  003C9E  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  8669  003CA0  6C13               	negf	___aodiv@quotient^0,c
  8670  003CA2  0E00               	movlw	0
  8671  003CA4  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  8672  003CA6  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  8673  003CA8  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  8674  003CAA  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  8675  003CAC  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  8676  003CAE  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  8677  003CB0  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8678  003CB2                     l3476:
  8679  003CB2  FFFF               	dw	65535	; assembler added errata NOP
  8680  003CB4  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8681  003CB8  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8682  003CBC  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8683  003CC0  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8684  003CC4  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8685  003CC8  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8686  003CCC  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8687  003CD0  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8688  003CD4  0012               	return		;funcret
  8689  003CD6  FFFF               	dw	65535	; errata NOP
  8690  003CD8                     __end_of___aodiv:
  8691                           	callstack 0
  8692                           
  8693 ;; *************** function _ctoa *****************
  8694 ;; Defined at:
  8695 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  8696 ;; Parameters:    Size  Location     Type
  8697 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8698 ;;		 -> vsnprintf@f(6), 
  8699 ;;  c               1   29[COMRAM] unsigned char 
  8700 ;; Auto vars:     Size  Location     Type
  8701 ;;  w               2   30[COMRAM] int 
  8702 ;;  l               2    0        int 
  8703 ;; Return value:  Size  Location     Type
  8704 ;;                  2   27[COMRAM] int 
  8705 ;; Registers used:
  8706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8707 ;; Tracked objects:
  8708 ;;		On entry : 0/0
  8709 ;;		On exit  : 0/0
  8710 ;;		Unchanged: 0/0
  8711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8712 ;;      Params:         3       0       0       0       0       0       0
  8713 ;;      Locals:         2       0       0       0       0       0       0
  8714 ;;      Temps:          0       0       0       0       0       0       0
  8715 ;;      Totals:         5       0       0       0       0       0       0
  8716 ;;Total ram usage:        5 bytes
  8717 ;; Hardware stack levels used:    1
  8718 ;; Hardware stack levels required when called:    5
  8719 ;; This function calls:
  8720 ;;		_pad
  8721 ;; This function is called by:
  8722 ;;		_vfpfcnvrt
  8723 ;; This function uses a non-reentrant model
  8724 ;;
  8725                           
  8726                           	psect	text22
  8727  006F8E                     __ptext22:
  8728                           	callstack 0
  8729  006F8E                     _ctoa:
  8730                           	callstack 0
  8731  006F8E  FFFF               	dw	65535	; assembler added errata NOP
  8732  006F90                     
  8733                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  8734  006F90  0100               	movlb	0	; () banked
  8735  006F92  5186               	movf	_width& (0+255),w,b
  8736  006F94  1187               	iorwf	(_width+1)& (0+255),w,b
  8737  006F96  A4D8               	btfss	status,2,c
  8738  006F98  EFD0  F037         	goto	u3811
  8739  006F9C  EFD3  F037         	goto	u3810
  8740  006FA0                     u3811:
  8741  006FA0  FFFF               	dw	65535	; assembler added errata NOP
  8742  006FA2  EFDA  F037         	goto	l3618
  8743  006FA6                     u3810:
  8744  006FA6  FFFF               	dw	65535	; assembler added errata NOP
  8745  006FA8                     
  8746                           ; BSR set to: 0
  8747  006FA8  C086  F01F         	movff	_width,ctoa@w
  8748  006FAC  C087  F020         	movff	_width+1,ctoa@w+1
  8749  006FB0  EFE1  F037         	goto	l3620
  8750  006FB4                     l3618:
  8751  006FB4  FFFF               	dw	65535	; assembler added errata NOP
  8752                           
  8753                           ; BSR set to: 0
  8754  006FB6  0EFF               	movlw	255
  8755  006FB8  2586               	addwf	_width& (0+255),w,b
  8756  006FBA  6E1F               	movwf	ctoa@w^0,c
  8757  006FBC  0EFF               	movlw	255
  8758  006FBE  2187               	addwfc	(_width+1)& (0+255),w,b
  8759  006FC0  6E20               	movwf	(ctoa@w+1)^0,c
  8760  006FC2                     l3620:
  8761  006FC2  FFFF               	dw	65535	; assembler added errata NOP
  8762                           
  8763                           ; BSR set to: 0
  8764                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 267:     dbuf[0] 
      +                          = c;
  8765  006FC4  C01E  F092         	movff	ctoa@c,_dbuf
  8766  006FC8                     
  8767                           ; BSR set to: 0
  8768                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 268:     dbuf[1] 
      +                          = '\0';
  8769  006FC8  0E00               	movlw	0
  8770  006FCA  6F93               	movwf	(_dbuf+1)& (0+255),b
  8771  006FCC                     
  8772                           ; BSR set to: 0
  8773                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 269:     return p
      +                          ad(fp, &dbuf[0], w);
  8774  006FCC  C01C  F011         	movff	ctoa@fp,pad@fp
  8775  006FD0  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  8776  006FD4  0E92               	movlw	low _dbuf
  8777  006FD6  6E13               	movwf	pad@buf^0,c
  8778  006FD8  0E00               	movlw	high _dbuf
  8779  006FDA  6E14               	movwf	(pad@buf+1)^0,c
  8780  006FDC  C01F  F015         	movff	ctoa@w,pad@p
  8781  006FE0  C020  F016         	movff	ctoa@w+1,pad@p+1
  8782  006FE4  EC5B  F03B         	call	_pad	;wreg free
  8783  006FE8  C011  F01C         	movff	?_pad,?_ctoa
  8784  006FEC  C012  F01D         	movff	?_pad+1,?_ctoa+1
  8785  006FF0  0012               	return		;funcret
  8786  006FF2  FFFF               	dw	65535	; errata NOP
  8787  006FF4                     __end_of_ctoa:
  8788                           	callstack 0
  8789                           
  8790 ;; *************** function _pad *****************
  8791 ;; Defined at:
  8792 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  8793 ;; Parameters:    Size  Location     Type
  8794 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  8795 ;;		 -> vsnprintf@f(6), 
  8796 ;;  buf             2   18[COMRAM] PTR unsigned char 
  8797 ;;		 -> dbuf(32), 
  8798 ;;  p               2   20[COMRAM] int 
  8799 ;; Auto vars:     Size  Location     Type
  8800 ;;  w               2   25[COMRAM] int 
  8801 ;;  i               2   23[COMRAM] int 
  8802 ;; Return value:  Size  Location     Type
  8803 ;;                  2   16[COMRAM] int 
  8804 ;; Registers used:
  8805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8806 ;; Tracked objects:
  8807 ;;		On entry : 0/0
  8808 ;;		On exit  : 0/0
  8809 ;;		Unchanged: 0/0
  8810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8811 ;;      Params:         6       0       0       0       0       0       0
  8812 ;;      Locals:         4       0       0       0       0       0       0
  8813 ;;      Temps:          1       0       0       0       0       0       0
  8814 ;;      Totals:        11       0       0       0       0       0       0
  8815 ;;Total ram usage:       11 bytes
  8816 ;; Hardware stack levels used:    1
  8817 ;; Hardware stack levels required when called:    4
  8818 ;; This function calls:
  8819 ;;		_fputc
  8820 ;;		_fputs
  8821 ;;		_strlen
  8822 ;; This function is called by:
  8823 ;;		_ctoa
  8824 ;;		_dtoa
  8825 ;;		_otoa
  8826 ;;		_utoa
  8827 ;;		_xtoa
  8828 ;; This function uses a non-reentrant model
  8829 ;;
  8830                           
  8831                           	psect	text23
  8832  0076B6                     __ptext23:
  8833                           	callstack 0
  8834  0076B6                     _pad:
  8835                           	callstack 0
  8836  0076B6  FFFF               	dw	65535	; assembler added errata NOP
  8837  0076B8                     
  8838                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8839  0076B8  A07D               	btfss	_flags^0,0,c
  8840  0076BA  EF61  F03B         	goto	u3651
  8841  0076BE  EF64  F03B         	goto	u3650
  8842  0076C2                     u3651:
  8843  0076C2  FFFF               	dw	65535	; assembler added errata NOP
  8844  0076C4  EF6F  F03B         	goto	l3558
  8845  0076C8                     u3650:
  8846  0076C8  FFFF               	dw	65535	; assembler added errata NOP
  8847  0076CA                     
  8848                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8849  0076CA  C013  F00A         	movff	pad@buf,fputs@s
  8850  0076CE  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8851  0076D2  C011  F00C         	movff	pad@fp,fputs@fp
  8852  0076D6  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8853  0076DA  EC6F  F037         	call	_fputs	;wreg free
  8854  0076DE                     l3558:
  8855  0076DE  FFFF               	dw	65535	; assembler added errata NOP
  8856                           
  8857                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8858  0076E0  BE16               	btfsc	(pad@p+1)^0,7,c
  8859  0076E2  EF75  F03B         	goto	u3661
  8860  0076E6  EF78  F03B         	goto	u3660
  8861  0076EA                     u3661:
  8862  0076EA  FFFF               	dw	65535	; assembler added errata NOP
  8863  0076EC  EF7F  F03B         	goto	l3562
  8864  0076F0                     u3660:
  8865  0076F0  FFFF               	dw	65535	; assembler added errata NOP
  8866  0076F2  C015  F01A         	movff	pad@p,pad@w
  8867  0076F6  C016  F01B         	movff	pad@p+1,pad@w+1
  8868  0076FA  EF84  F03B         	goto	l1075
  8869  0076FE                     l3562:
  8870  0076FE  FFFF               	dw	65535	; assembler added errata NOP
  8871  007700  0E00               	movlw	0
  8872  007702  6E1B               	movwf	(pad@w+1)^0,c
  8873  007704  0E00               	movlw	0
  8874  007706  6E1A               	movwf	pad@w^0,c
  8875  007708                     l1075:
  8876  007708  FFFF               	dw	65535	; assembler added errata NOP
  8877                           
  8878                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8879  00770A  0E00               	movlw	0
  8880  00770C  6E19               	movwf	(pad@i+1)^0,c
  8881  00770E  0E00               	movlw	0
  8882  007710  6E18               	movwf	pad@i^0,c
  8883                           
  8884                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8885  007712  EF98  F03B         	goto	l3568
  8886  007716                     l3564:
  8887  007716  FFFF               	dw	65535	; assembler added errata NOP
  8888                           
  8889                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8890  007718  0E00               	movlw	0
  8891  00771A  6E02               	movwf	(fputc@c+1)^0,c
  8892  00771C  0E20               	movlw	32
  8893  00771E  6E01               	movwf	fputc@c^0,c
  8894  007720  C011  F003         	movff	pad@fp,fputc@fp
  8895  007724  C012  F004         	movff	pad@fp+1,fputc@fp+1
  8896  007728  ECEA  F03A         	call	_fputc	;wreg free
  8897  00772C                     
  8898                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8899  00772C  4A18               	infsnz	pad@i^0,f,c
  8900  00772E  2A19               	incf	(pad@i+1)^0,f,c
  8901  007730                     l3568:
  8902  007730  FFFF               	dw	65535	; assembler added errata NOP
  8903                           
  8904                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8905  007732  501A               	movf	pad@w^0,w,c
  8906  007734  5C18               	subwf	pad@i^0,w,c
  8907  007736  5019               	movf	(pad@i+1)^0,w,c
  8908  007738  0A80               	xorlw	128
  8909  00773A  6E17               	movwf	??_pad^0,c
  8910  00773C  501B               	movf	(pad@w+1)^0,w,c
  8911  00773E  0A80               	xorlw	128
  8912  007740  5817               	subwfb	??_pad^0,w,c
  8913  007742  A0D8               	btfss	status,0,c
  8914  007744  EFA6  F03B         	goto	u3671
  8915  007748  EFA9  F03B         	goto	u3670
  8916  00774C                     u3671:
  8917  00774C  FFFF               	dw	65535	; assembler added errata NOP
  8918  00774E  EF8B  F03B         	goto	l3564
  8919  007752                     u3670:
  8920  007752  FFFF               	dw	65535	; assembler added errata NOP
  8921  007754                     
  8922                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8923  007754  B07D               	btfsc	_flags^0,0,c
  8924  007756  EFAF  F03B         	goto	u3681
  8925  00775A  EFB2  F03B         	goto	u3680
  8926  00775E                     u3681:
  8927  00775E  FFFF               	dw	65535	; assembler added errata NOP
  8928  007760  EFBD  F03B         	goto	l3572
  8929  007764                     u3680:
  8930  007764  FFFF               	dw	65535	; assembler added errata NOP
  8931  007766                     
  8932                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8933  007766  C013  F00A         	movff	pad@buf,fputs@s
  8934  00776A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8935  00776E  C011  F00C         	movff	pad@fp,fputs@fp
  8936  007772  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8937  007776  EC6F  F037         	call	_fputs	;wreg free
  8938  00777A                     l3572:
  8939  00777A  FFFF               	dw	65535	; assembler added errata NOP
  8940                           
  8941                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  8942  00777C  C013  F001         	movff	pad@buf,strlen@s
  8943  007780  C014  F002         	movff	pad@buf+1,strlen@s+1
  8944  007784  ECD1  F01F         	call	_strlen	;wreg free
  8945  007788  501A               	movf	pad@w^0,w,c
  8946  00778A  2401               	addwf	?_strlen^0,w,c
  8947  00778C  6E11               	movwf	?_pad^0,c
  8948  00778E  501B               	movf	(pad@w+1)^0,w,c
  8949  007790  2002               	addwfc	(?_strlen+1)^0,w,c
  8950  007792  6E12               	movwf	(?_pad+1)^0,c
  8951  007794  0012               	return		;funcret
  8952  007796  FFFF               	dw	65535	; errata NOP
  8953  007798                     __end_of_pad:
  8954                           	callstack 0
  8955                           
  8956 ;; *************** function _strlen *****************
  8957 ;; Defined at:
  8958 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  8959 ;; Parameters:    Size  Location     Type
  8960 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8961 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), STR_6(7), 
  8962 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  8963 ;;		 -> STR_1(49), 
  8964 ;; Auto vars:     Size  Location     Type
  8965 ;;  a               2    2[COMRAM] PTR const unsigned char 
  8966 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), STR_6(7), 
  8967 ;;		 -> STR_5(9), STR_4(39), STR_3(9), STR_2(64), 
  8968 ;;		 -> STR_1(49), 
  8969 ;; Return value:  Size  Location     Type
  8970 ;;                  2    0[COMRAM] unsigned int 
  8971 ;; Registers used:
  8972 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8973 ;; Tracked objects:
  8974 ;;		On entry : 0/0
  8975 ;;		On exit  : 0/0
  8976 ;;		Unchanged: 0/0
  8977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8978 ;;      Params:         2       0       0       0       0       0       0
  8979 ;;      Locals:         2       0       0       0       0       0       0
  8980 ;;      Temps:          0       0       0       0       0       0       0
  8981 ;;      Totals:         4       0       0       0       0       0       0
  8982 ;;Total ram usage:        4 bytes
  8983 ;; Hardware stack levels used:    1
  8984 ;; Hardware stack levels required when called:    1
  8985 ;; This function calls:
  8986 ;;		Nothing
  8987 ;; This function is called by:
  8988 ;;		_pad
  8989 ;;		_stoa
  8990 ;; This function uses a non-reentrant model
  8991 ;;
  8992                           
  8993                           	psect	text24
  8994  003FA2                     __ptext24:
  8995                           	callstack 0
  8996  003FA2                     _strlen:
  8997                           	callstack 0
  8998  003FA2  FFFF               	dw	65535	; assembler added errata NOP
  8999  003FA4  C001  F003         	movff	strlen@s,strlen@a
  9000  003FA8  C002  F004         	movff	strlen@s+1,strlen@a+1
  9001  003FAC  EFDB  F01F         	goto	l3420
  9002  003FB0                     l3418:
  9003  003FB0  FFFF               	dw	65535	; assembler added errata NOP
  9004  003FB2  4A01               	infsnz	strlen@s^0,f,c
  9005  003FB4  2A02               	incf	(strlen@s+1)^0,f,c
  9006  003FB6                     l3420:
  9007  003FB6  FFFF               	dw	65535	; assembler added errata NOP
  9008  003FB8  C001  FFF6         	movff	strlen@s,tblptrl
  9009  003FBC  C002  FFF7         	movff	strlen@s+1,tblptrh
  9010  003FC0  6AF8               	clrf	tblptru,c
  9011  003FC2  0E05               	movlw	(high __ramtop+-1)
  9012  003FC4  64F7               	cpfsgt	tblptrh,c
  9013  003FC6  D004               	bra	u3417
  9014  003FC8  0008               	tblrd		*
  9015  003FCA  FFFF               	dw	65535	; errata NOP
  9016  003FCC  50F5               	movf	tablat,w,c
  9017  003FCE  D005               	bra	u3410
  9018  003FD0                     u3417:
  9019  003FD0  CFF6 FFE1          	movff	tblptrl,fsr1l
  9020  003FD4  CFF7 FFE2          	movff	tblptrh,fsr1h
  9021  003FD8  50E7               	movf	indf1,w,c
  9022  003FDA                     u3410:
  9023  003FDA  0900               	iorlw	0
  9024  003FDC  A4D8               	btfss	status,2,c
  9025  003FDE  EFF3  F01F         	goto	u3421
  9026  003FE2  EFF6  F01F         	goto	u3420
  9027  003FE6                     u3421:
  9028  003FE6  FFFF               	dw	65535	; assembler added errata NOP
  9029  003FE8  EFD8  F01F         	goto	l3418
  9030  003FEC                     u3420:
  9031  003FEC  FFFF               	dw	65535	; assembler added errata NOP
  9032  003FEE  5003               	movf	strlen@a^0,w,c
  9033  003FF0  5C01               	subwf	strlen@s^0,w,c
  9034  003FF2  6E01               	movwf	?_strlen^0,c
  9035  003FF4  5004               	movf	(strlen@a+1)^0,w,c
  9036  003FF6  5802               	subwfb	(strlen@s+1)^0,w,c
  9037  003FF8  6E02               	movwf	(?_strlen+1)^0,c
  9038  003FFA  0012               	return		;funcret
  9039  003FFC  FFFF               	dw	65535	; errata NOP
  9040  003FFE                     __end_of_strlen:
  9041                           	callstack 0
  9042                           
  9043 ;; *************** function _fputs *****************
  9044 ;; Defined at:
  9045 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  9046 ;; Parameters:    Size  Location     Type
  9047 ;;  s               2    9[COMRAM] PTR const unsigned char 
  9048 ;;		 -> dbuf(32), 
  9049 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  9050 ;;		 -> vsnprintf@f(6), 
  9051 ;; Auto vars:     Size  Location     Type
  9052 ;;  i               2   14[COMRAM] int 
  9053 ;;  c               1   13[COMRAM] unsigned char 
  9054 ;; Return value:  Size  Location     Type
  9055 ;;                  2    9[COMRAM] int 
  9056 ;; Registers used:
  9057 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9058 ;; Tracked objects:
  9059 ;;		On entry : 0/0
  9060 ;;		On exit  : 0/0
  9061 ;;		Unchanged: 0/0
  9062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9063 ;;      Params:         4       0       0       0       0       0       0
  9064 ;;      Locals:         3       0       0       0       0       0       0
  9065 ;;      Temps:          0       0       0       0       0       0       0
  9066 ;;      Totals:         7       0       0       0       0       0       0
  9067 ;;Total ram usage:        7 bytes
  9068 ;; Hardware stack levels used:    1
  9069 ;; Hardware stack levels required when called:    3
  9070 ;; This function calls:
  9071 ;;		_fputc
  9072 ;; This function is called by:
  9073 ;;		_pad
  9074 ;; This function uses a non-reentrant model
  9075 ;;
  9076                           
  9077                           	psect	text25
  9078  006EDE                     __ptext25:
  9079                           	callstack 0
  9080  006EDE                     _fputs:
  9081                           	callstack 0
  9082  006EDE  FFFF               	dw	65535	; assembler added errata NOP
  9083  006EE0  0E00               	movlw	0
  9084  006EE2  6E10               	movwf	(fputs@i+1)^0,c
  9085  006EE4  0E00               	movlw	0
  9086  006EE6  6E0F               	movwf	fputs@i^0,c
  9087  006EE8  EF82  F037         	goto	l3414
  9088  006EEC                     l3410:
  9089  006EEC  FFFF               	dw	65535	; assembler added errata NOP
  9090  006EEE  C00E  F001         	movff	fputs@c,fputc@c
  9091  006EF2  6A02               	clrf	(fputc@c+1)^0,c
  9092  006EF4  C00C  F003         	movff	fputs@fp,fputc@fp
  9093  006EF8  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  9094  006EFC  ECEA  F03A         	call	_fputc	;wreg free
  9095  006F00  4A0F               	infsnz	fputs@i^0,f,c
  9096  006F02  2A10               	incf	(fputs@i+1)^0,f,c
  9097  006F04                     l3414:
  9098  006F04  FFFF               	dw	65535	; assembler added errata NOP
  9099  006F06  500F               	movf	fputs@i^0,w,c
  9100  006F08  240A               	addwf	fputs@s^0,w,c
  9101  006F0A  6ED9               	movwf	fsr2l,c
  9102  006F0C  5010               	movf	(fputs@i+1)^0,w,c
  9103  006F0E  200B               	addwfc	(fputs@s+1)^0,w,c
  9104  006F10  6EDA               	movwf	fsr2h,c
  9105  006F12  50DF               	movf	indf2,w,c
  9106  006F14  6E0E               	movwf	fputs@c^0,c
  9107  006F16  500E               	movf	fputs@c^0,w,c
  9108  006F18  A4D8               	btfss	status,2,c
  9109  006F1A  EF91  F037         	goto	u3401
  9110  006F1E  EF94  F037         	goto	u3400
  9111  006F22                     u3401:
  9112  006F22  FFFF               	dw	65535	; assembler added errata NOP
  9113  006F24  EF76  F037         	goto	l3410
  9114  006F28                     u3400:
  9115  006F28  FFFF               	dw	65535	; assembler added errata NOP
  9116  006F2A  0012               	return		;funcret
  9117  006F2C  FFFF               	dw	65535	; errata NOP
  9118  006F2E                     __end_of_fputs:
  9119                           	callstack 0
  9120                           
  9121 ;; *************** function _fputc *****************
  9122 ;; Defined at:
  9123 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  9124 ;; Parameters:    Size  Location     Type
  9125 ;;  c               2    0[COMRAM] int 
  9126 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  9127 ;;		 -> vsnprintf@f(6), 
  9128 ;; Auto vars:     Size  Location     Type
  9129 ;;		None
  9130 ;; Return value:  Size  Location     Type
  9131 ;;                  2    0[COMRAM] int 
  9132 ;; Registers used:
  9133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9134 ;; Tracked objects:
  9135 ;;		On entry : 0/0
  9136 ;;		On exit  : 0/0
  9137 ;;		Unchanged: 0/0
  9138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9139 ;;      Params:         4       0       0       0       0       0       0
  9140 ;;      Locals:         0       0       0       0       0       0       0
  9141 ;;      Temps:          5       0       0       0       0       0       0
  9142 ;;      Totals:         9       0       0       0       0       0       0
  9143 ;;Total ram usage:        9 bytes
  9144 ;; Hardware stack levels used:    1
  9145 ;; Hardware stack levels required when called:    2
  9146 ;; This function calls:
  9147 ;;		_putch
  9148 ;; This function is called by:
  9149 ;;		_pad
  9150 ;;		_stoa
  9151 ;;		_vfpfcnvrt
  9152 ;;		_fputs
  9153 ;; This function uses a non-reentrant model
  9154 ;;
  9155                           
  9156                           	psect	text26
  9157  0075D4                     __ptext26:
  9158                           	callstack 0
  9159  0075D4                     _fputc:
  9160                           	callstack 0
  9161  0075D4  FFFF               	dw	65535	; assembler added errata NOP
  9162  0075D6  5003               	movf	fputc@fp^0,w,c
  9163  0075D8  1004               	iorwf	(fputc@fp+1)^0,w,c
  9164  0075DA  B4D8               	btfsc	status,2,c
  9165  0075DC  EFF2  F03A         	goto	u3361
  9166  0075E0  EFF5  F03A         	goto	u3360
  9167  0075E4                     u3361:
  9168  0075E4  FFFF               	dw	65535	; assembler added errata NOP
  9169  0075E6  EF00  F03B         	goto	l3398
  9170  0075EA                     u3360:
  9171  0075EA  FFFF               	dw	65535	; assembler added errata NOP
  9172  0075EC  5003               	movf	fputc@fp^0,w,c
  9173  0075EE  1004               	iorwf	(fputc@fp+1)^0,w,c
  9174  0075F0  A4D8               	btfss	status,2,c
  9175  0075F2  EFFD  F03A         	goto	u3371
  9176  0075F6  EF00  F03B         	goto	u3370
  9177  0075FA                     u3371:
  9178  0075FA  FFFF               	dw	65535	; assembler added errata NOP
  9179  0075FC  EF06  F03B         	goto	l3400
  9180  007600                     u3370:
  9181  007600                     l3398:
  9182  007600  FFFF               	dw	65535	; assembler added errata NOP
  9183  007602  5001               	movf	fputc@c^0,w,c
  9184  007604  EC54  F035         	call	_putch
  9185  007608  EF58  F03B         	goto	l1357
  9186  00760C                     l3400:
  9187  00760C  FFFF               	dw	65535	; assembler added errata NOP
  9188  00760E  EE20 F004          	lfsr	2,4
  9189  007612  5003               	movf	fputc@fp^0,w,c
  9190  007614  26D9               	addwf	fsr2l,f,c
  9191  007616  5004               	movf	(fputc@fp+1)^0,w,c
  9192  007618  22DA               	addwfc	fsr2h,f,c
  9193  00761A  50DE               	movf	postinc2,w,c
  9194  00761C  10DE               	iorwf	postinc2,w,c
  9195  00761E  B4D8               	btfsc	status,2,c
  9196  007620  EF14  F03B         	goto	u3381
  9197  007624  EF17  F03B         	goto	u3380
  9198  007628                     u3381:
  9199  007628  FFFF               	dw	65535	; assembler added errata NOP
  9200  00762A  EF34  F03B         	goto	l3404
  9201  00762E                     u3380:
  9202  00762E  FFFF               	dw	65535	; assembler added errata NOP
  9203  007630  EE20 F004          	lfsr	2,4
  9204  007634  5003               	movf	fputc@fp^0,w,c
  9205  007636  26D9               	addwf	fsr2l,f,c
  9206  007638  5004               	movf	(fputc@fp+1)^0,w,c
  9207  00763A  22DA               	addwfc	fsr2h,f,c
  9208  00763C  EE10 F002          	lfsr	1,2
  9209  007640  5003               	movf	fputc@fp^0,w,c
  9210  007642  26E1               	addwf	fsr1l,f,c
  9211  007644  5004               	movf	(fputc@fp+1)^0,w,c
  9212  007646  22E2               	addwfc	fsr1h,f,c
  9213  007648  50DE               	movf	postinc2,w,c
  9214  00764A  5CE6               	subwf	postinc1,w,c
  9215  00764C  50E6               	movf	postinc1,w,c
  9216  00764E  0A80               	xorlw	128
  9217  007650  6E09               	movwf	(??_fputc+4)^0,c
  9218  007652  50DE               	movf	postinc2,w,c
  9219  007654  0A80               	xorlw	128
  9220  007656  5809               	subwfb	(??_fputc+4)^0,w,c
  9221  007658  B0D8               	btfsc	status,0,c
  9222  00765A  EF31  F03B         	goto	u3391
  9223  00765E  EF34  F03B         	goto	u3390
  9224  007662                     u3391:
  9225  007662  FFFF               	dw	65535	; assembler added errata NOP
  9226  007664  EF58  F03B         	goto	l1357
  9227  007668                     u3390:
  9228  007668                     l3404:
  9229  007668  FFFF               	dw	65535	; assembler added errata NOP
  9230  00766A  EE20 F002          	lfsr	2,2
  9231  00766E  5003               	movf	fputc@fp^0,w,c
  9232  007670  26D9               	addwf	fsr2l,f,c
  9233  007672  5004               	movf	(fputc@fp+1)^0,w,c
  9234  007674  22DA               	addwfc	fsr2h,f,c
  9235  007676  CFDE F005          	movff	postinc2,??_fputc
  9236  00767A  CFDD F006          	movff	postdec2,??_fputc+1
  9237  00767E  C003  FFD9         	movff	fputc@fp,fsr2l
  9238  007682  C004  FFDA         	movff	fputc@fp+1,fsr2h
  9239  007686  CFDE F007          	movff	postinc2,??_fputc+2
  9240  00768A  CFDD F008          	movff	postdec2,??_fputc+3
  9241  00768E  5005               	movf	??_fputc^0,w,c
  9242  007690  2407               	addwf	(??_fputc+2)^0,w,c
  9243  007692  6ED9               	movwf	fsr2l,c
  9244  007694  5006               	movf	(??_fputc+1)^0,w,c
  9245  007696  2008               	addwfc	(??_fputc+3)^0,w,c
  9246  007698  6EDA               	movwf	fsr2h,c
  9247  00769A  C001  FFDF         	movff	fputc@c,indf2
  9248  00769E  EE20 F002          	lfsr	2,2
  9249  0076A2  5003               	movf	fputc@fp^0,w,c
  9250  0076A4  26D9               	addwf	fsr2l,f,c
  9251  0076A6  5004               	movf	(fputc@fp+1)^0,w,c
  9252  0076A8  22DA               	addwfc	fsr2h,f,c
  9253  0076AA  2ADE               	incf	postinc2,f,c
  9254  0076AC  0E00               	movlw	0
  9255  0076AE  22DD               	addwfc	postdec2,f,c
  9256  0076B0                     l1357:
  9257  0076B0  FFFF               	dw	65535	; assembler added errata NOP
  9258  0076B2  0012               	return		;funcret
  9259  0076B4  FFFF               	dw	65535	; errata NOP
  9260  0076B6                     __end_of_fputc:
  9261                           	callstack 0
  9262                           
  9263 ;; *************** function _putch *****************
  9264 ;; Defined at:
  9265 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  9266 ;; Parameters:    Size  Location     Type
  9267 ;;  c               1    wreg     unsigned char 
  9268 ;; Auto vars:     Size  Location     Type
  9269 ;;  c               1    0[COMRAM] unsigned char 
  9270 ;; Return value:  Size  Location     Type
  9271 ;;                  1    wreg      void 
  9272 ;; Registers used:
  9273 ;;		wreg
  9274 ;; Tracked objects:
  9275 ;;		On entry : 0/0
  9276 ;;		On exit  : 0/0
  9277 ;;		Unchanged: 0/0
  9278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9279 ;;      Params:         0       0       0       0       0       0       0
  9280 ;;      Locals:         0       0       0       0       0       0       0
  9281 ;;      Temps:          0       0       0       0       0       0       0
  9282 ;;      Totals:         0       0       0       0       0       0       0
  9283 ;;Total ram usage:        0 bytes
  9284 ;; Hardware stack levels used:    1
  9285 ;; Hardware stack levels required when called:    1
  9286 ;; This function calls:
  9287 ;;		Nothing
  9288 ;; This function is called by:
  9289 ;;		_fputc
  9290 ;; This function uses a non-reentrant model
  9291 ;;
  9292                           
  9293                           	psect	text27
  9294  006AA8                     __ptext27:
  9295                           	callstack 0
  9296  006AA8                     _putch:
  9297                           	callstack 0
  9298  006AA8  FFFF               	dw	65535	; assembler added errata NOP
  9299  006AAA  0012               	return		;funcret
  9300  006AAC  FFFF               	dw	65535	; errata NOP
  9301  006AAE                     __end_of_putch:
  9302                           	callstack 0
  9303                           
  9304 ;; *************** function _atoi *****************
  9305 ;; Defined at:
  9306 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  9307 ;; Parameters:    Size  Location     Type
  9308 ;;  s               2    7[COMRAM] PTR const unsigned char 
  9309 ;;		 -> STR_8(3), 
  9310 ;; Auto vars:     Size  Location     Type
  9311 ;;  n               2   20[COMRAM] int 
  9312 ;;  neg             2   13[COMRAM] int 
  9313 ;; Return value:  Size  Location     Type
  9314 ;;                  2    7[COMRAM] int 
  9315 ;; Registers used:
  9316 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9317 ;; Tracked objects:
  9318 ;;		On entry : 0/0
  9319 ;;		On exit  : 0/0
  9320 ;;		Unchanged: 0/0
  9321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9322 ;;      Params:         2       0       0       0       0       0       0
  9323 ;;      Locals:         9       0       0       0       0       0       0
  9324 ;;      Temps:          4       0       0       0       0       0       0
  9325 ;;      Totals:        15       0       0       0       0       0       0
  9326 ;;Total ram usage:       15 bytes
  9327 ;; Hardware stack levels used:    1
  9328 ;; Hardware stack levels required when called:    2
  9329 ;; This function calls:
  9330 ;;		___wmul
  9331 ;;		_isdigit
  9332 ;;		_isspace
  9333 ;; This function is called by:
  9334 ;;		_vfpfcnvrt
  9335 ;; This function uses a non-reentrant model
  9336 ;;
  9337                           
  9338                           	psect	text28
  9339  003956                     __ptext28:
  9340                           	callstack 0
  9341  003956                     _atoi:
  9342                           	callstack 0
  9343  003956  FFFF               	dw	65535	; assembler added errata NOP
  9344  003958  0E00               	movlw	0
  9345  00395A  6E16               	movwf	(atoi@n+1)^0,c
  9346  00395C  0E00               	movlw	0
  9347  00395E  6E15               	movwf	atoi@n^0,c
  9348  003960  0E00               	movlw	0
  9349  003962  6E0F               	movwf	(atoi@neg+1)^0,c
  9350  003964  0E00               	movlw	0
  9351  003966  6E0E               	movwf	atoi@neg^0,c
  9352  003968  EFB9  F01C         	goto	l3886
  9353  00396C                     l3884:
  9354  00396C  FFFF               	dw	65535	; assembler added errata NOP
  9355  00396E  4A08               	infsnz	atoi@s^0,f,c
  9356  003970  2A09               	incf	(atoi@s+1)^0,f,c
  9357  003972                     l3886:
  9358  003972  FFFF               	dw	65535	; assembler added errata NOP
  9359  003974  0E01               	movlw	1
  9360  003976  6E14               	movwf	_atoi$1679^0,c
  9361  003978  C008  FFF6         	movff	atoi@s,tblptrl
  9362  00397C  C009  FFF7         	movff	atoi@s+1,tblptrh
  9363  003980                     	if	0	;tblptru may be non-zero
  9364  003980                     	endif
  9365  003980                     	if	0	;tblptru may be non-zero
  9366  003980                     	endif
  9367  003980  0008               	tblrd		*
  9368  003982  FFFF               	dw	65535	; errata NOP
  9369  003984  50F5               	movf	tablat,w,c
  9370  003986  0A20               	xorlw	32
  9371  003988  B4D8               	btfsc	status,2,c
  9372  00398A  EFC9  F01C         	goto	u4411
  9373  00398E  EFCC  F01C         	goto	u4410
  9374  003992                     u4411:
  9375  003992  FFFF               	dw	65535	; assembler added errata NOP
  9376  003994  EFED  F01C         	goto	l3894
  9377  003998                     u4410:
  9378  003998  FFFF               	dw	65535	; assembler added errata NOP
  9379  00399A  0EF7               	movlw	247
  9380  00399C  6E0A               	movwf	??_atoi^0,c
  9381  00399E  0EFF               	movlw	255
  9382  0039A0  6E0B               	movwf	(??_atoi+1)^0,c
  9383  0039A2  C008  FFF6         	movff	atoi@s,tblptrl
  9384  0039A6  C009  FFF7         	movff	atoi@s+1,tblptrh
  9385  0039AA                     	if	0	;tblptru may be non-zero
  9386  0039AA                     	endif
  9387  0039AA                     	if	0	;tblptru may be non-zero
  9388  0039AA                     	endif
  9389  0039AA  0008               	tblrd		*
  9390  0039AC  FFFF               	dw	65535	; errata NOP
  9391  0039AE  50F5               	movf	tablat,w,c
  9392  0039B0  6E0C               	movwf	(??_atoi+2)^0,c
  9393  0039B2  6A0D               	clrf	(??_atoi+3)^0,c
  9394  0039B4  500A               	movf	??_atoi^0,w,c
  9395  0039B6  260C               	addwf	(??_atoi+2)^0,f,c
  9396  0039B8  500B               	movf	(??_atoi+1)^0,w,c
  9397  0039BA  220D               	addwfc	(??_atoi+3)^0,f,c
  9398  0039BC  500D               	movf	(??_atoi+3)^0,w,c
  9399  0039BE  E10A               	bnz	u4420
  9400  0039C0  0E05               	movlw	5
  9401  0039C2  5C0C               	subwf	(??_atoi+2)^0,w,c
  9402  0039C4  A0D8               	btfss	status,0,c
  9403  0039C6  EFE7  F01C         	goto	u4421
  9404  0039CA  EFEA  F01C         	goto	u4420
  9405  0039CE                     u4421:
  9406  0039CE  FFFF               	dw	65535	; assembler added errata NOP
  9407  0039D0  EFED  F01C         	goto	l3894
  9408  0039D4                     u4420:
  9409  0039D4  FFFF               	dw	65535	; assembler added errata NOP
  9410  0039D6  0E00               	movlw	0
  9411  0039D8  6E14               	movwf	_atoi$1679^0,c
  9412  0039DA                     l3894:
  9413  0039DA  FFFF               	dw	65535	; assembler added errata NOP
  9414  0039DC  C014  F010         	movff	_atoi$1679,_atoi$1678
  9415  0039E0  6A11               	clrf	(_atoi$1678+1)^0,c
  9416  0039E2  5010               	movf	_atoi$1678^0,w,c
  9417  0039E4  1011               	iorwf	(_atoi$1678+1)^0,w,c
  9418  0039E6  A4D8               	btfss	status,2,c
  9419  0039E8  EFF8  F01C         	goto	u4431
  9420  0039EC  EFFB  F01C         	goto	u4430
  9421  0039F0                     u4431:
  9422  0039F0  FFFF               	dw	65535	; assembler added errata NOP
  9423  0039F2  EFB6  F01C         	goto	l3884
  9424  0039F6                     u4430:
  9425  0039F6  FFFF               	dw	65535	; assembler added errata NOP
  9426  0039F8  EF08  F01D         	goto	l3904
  9427  0039FC                     l3900:
  9428  0039FC  FFFF               	dw	65535	; assembler added errata NOP
  9429  0039FE  0E00               	movlw	0
  9430  003A00  6E0F               	movwf	(atoi@neg+1)^0,c
  9431  003A02  0E01               	movlw	1
  9432  003A04  6E0E               	movwf	atoi@neg^0,c
  9433  003A06                     l3902:
  9434  003A06  FFFF               	dw	65535	; assembler added errata NOP
  9435  003A08  4A08               	infsnz	atoi@s^0,f,c
  9436  003A0A  2A09               	incf	(atoi@s+1)^0,f,c
  9437  003A0C  EF42  F01D         	goto	l3910
  9438  003A10                     l3904:
  9439  003A10  FFFF               	dw	65535	; assembler added errata NOP
  9440  003A12  C008  FFF6         	movff	atoi@s,tblptrl
  9441  003A16  C009  FFF7         	movff	atoi@s+1,tblptrh
  9442  003A1A                     	if	0	;tblptru may be non-zero
  9443  003A1A                     	endif
  9444  003A1A                     	if	0	;tblptru may be non-zero
  9445  003A1A                     	endif
  9446  003A1A  0008               	tblrd		*
  9447  003A1C  FFFF               	dw	65535	; errata NOP
  9448  003A1E  50F5               	movf	tablat,w,c
  9449  003A20  6E0A               	movwf	??_atoi^0,c
  9450  003A22  6A0B               	clrf	(??_atoi+1)^0,c
  9451                           
  9452                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9453                           ; Switch size 1, requested type "simple"
  9454                           ; Number of cases is 1, Range of values is 0 to 0
  9455                           ; switch strategies available:
  9456                           ; Name         Instructions Cycles
  9457                           ; simple_byte            4     3 (average)
  9458                           ;	Chosen strategy is simple_byte
  9459  003A24  500B               	movf	(??_atoi+1)^0,w,c
  9460  003A26  0A00               	xorlw	0	; case 0
  9461  003A28  B4D8               	btfsc	status,2,c
  9462  003A2A  EF19  F01D         	goto	l5388
  9463  003A2E  EF42  F01D         	goto	l3910
  9464  003A32                     l5388:
  9465  003A32  FFFF               	dw	65535	; assembler added errata NOP
  9466                           
  9467                           ; Switch size 1, requested type "simple"
  9468                           ; Number of cases is 2, Range of values is 43 to 45
  9469                           ; switch strategies available:
  9470                           ; Name         Instructions Cycles
  9471                           ; simple_byte            7     4 (average)
  9472                           ;	Chosen strategy is simple_byte
  9473  003A34  500A               	movf	??_atoi^0,w,c
  9474  003A36  0A2B               	xorlw	43	; case 43
  9475  003A38  B4D8               	btfsc	status,2,c
  9476  003A3A  EF03  F01D         	goto	l3902
  9477  003A3E  0A06               	xorlw	6	; case 45
  9478  003A40  B4D8               	btfsc	status,2,c
  9479  003A42  EFFE  F01C         	goto	l3900
  9480  003A46  EF42  F01D         	goto	l3910
  9481  003A4A                     l3906:
  9482  003A4A  FFFF               	dw	65535	; assembler added errata NOP
  9483  003A4C  C015  F001         	movff	atoi@n,___wmul@multiplier
  9484  003A50  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  9485  003A54  0E00               	movlw	0
  9486  003A56  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9487  003A58  0E0A               	movlw	10
  9488  003A5A  6E03               	movwf	___wmul@multiplicand^0,c
  9489  003A5C  ECDF  F035         	call	___wmul	;wreg free
  9490  003A60  C008  FFF6         	movff	atoi@s,tblptrl
  9491  003A64  C009  FFF7         	movff	atoi@s+1,tblptrh
  9492  003A68                     	if	0	;tblptru may be non-zero
  9493  003A68                     	endif
  9494  003A68                     	if	0	;tblptru may be non-zero
  9495  003A68                     	endif
  9496  003A68  0008               	tblrd		*
  9497  003A6A  FFFF               	dw	65535	; errata NOP
  9498  003A6C  50F5               	movf	tablat,w,c
  9499  003A6E  5E01               	subwf	?___wmul^0,f,c
  9500  003A70  0E00               	movlw	0
  9501  003A72  5A02               	subwfb	(?___wmul+1)^0,f,c
  9502  003A74  0E30               	movlw	48
  9503  003A76  2401               	addwf	?___wmul^0,w,c
  9504  003A78  6E15               	movwf	atoi@n^0,c
  9505  003A7A  0E00               	movlw	0
  9506  003A7C  2002               	addwfc	(?___wmul+1)^0,w,c
  9507  003A7E  6E16               	movwf	(atoi@n+1)^0,c
  9508  003A80  EF03  F01D         	goto	l3902
  9509  003A84                     l3910:
  9510  003A84  FFFF               	dw	65535	; assembler added errata NOP
  9511  003A86  0ED0               	movlw	208
  9512  003A88  6E0A               	movwf	??_atoi^0,c
  9513  003A8A  0EFF               	movlw	255
  9514  003A8C  6E0B               	movwf	(??_atoi+1)^0,c
  9515  003A8E  C008  FFF6         	movff	atoi@s,tblptrl
  9516  003A92  C009  FFF7         	movff	atoi@s+1,tblptrh
  9517  003A96                     	if	0	;tblptru may be non-zero
  9518  003A96                     	endif
  9519  003A96                     	if	0	;tblptru may be non-zero
  9520  003A96                     	endif
  9521  003A96  0008               	tblrd		*
  9522  003A98  FFFF               	dw	65535	; errata NOP
  9523  003A9A  50F5               	movf	tablat,w,c
  9524  003A9C  6E0C               	movwf	(??_atoi+2)^0,c
  9525  003A9E  6A0D               	clrf	(??_atoi+3)^0,c
  9526  003AA0  500A               	movf	??_atoi^0,w,c
  9527  003AA2  260C               	addwf	(??_atoi+2)^0,f,c
  9528  003AA4  500B               	movf	(??_atoi+1)^0,w,c
  9529  003AA6  220D               	addwfc	(??_atoi+3)^0,f,c
  9530  003AA8  500D               	movf	(??_atoi+3)^0,w,c
  9531  003AAA  E10B               	bnz	u4440
  9532  003AAC  0E0A               	movlw	10
  9533  003AAE  5C0C               	subwf	(??_atoi+2)^0,w,c
  9534  003AB0  A0D8               	btfss	status,0,c
  9535  003AB2  EF5D  F01D         	goto	u4441
  9536  003AB6  EF61  F01D         	goto	u4440
  9537  003ABA                     u4441:
  9538  003ABA  FFFF               	dw	65535	; assembler added errata NOP
  9539  003ABC  0E01               	movlw	1
  9540  003ABE  EF63  F01D         	goto	u4450
  9541  003AC2                     u4440:
  9542  003AC2  FFFF               	dw	65535	; assembler added errata NOP
  9543  003AC4  0E00               	movlw	0
  9544  003AC6                     u4450:
  9545  003AC6  FFFF               	dw	65535	; assembler added errata NOP
  9546  003AC8  6E12               	movwf	_atoi$1680^0,c
  9547  003ACA  6A13               	clrf	(_atoi$1680+1)^0,c
  9548  003ACC  5012               	movf	_atoi$1680^0,w,c
  9549  003ACE  1013               	iorwf	(_atoi$1680+1)^0,w,c
  9550  003AD0  A4D8               	btfss	status,2,c
  9551  003AD2  EF6D  F01D         	goto	u4461
  9552  003AD6  EF70  F01D         	goto	u4460
  9553  003ADA                     u4461:
  9554  003ADA  FFFF               	dw	65535	; assembler added errata NOP
  9555  003ADC  EF25  F01D         	goto	l3906
  9556  003AE0                     u4460:
  9557  003AE0  FFFF               	dw	65535	; assembler added errata NOP
  9558  003AE2  500E               	movf	atoi@neg^0,w,c
  9559  003AE4  100F               	iorwf	(atoi@neg+1)^0,w,c
  9560  003AE6  A4D8               	btfss	status,2,c
  9561  003AE8  EF78  F01D         	goto	u4471
  9562  003AEC  EF7B  F01D         	goto	u4470
  9563  003AF0                     u4471:
  9564  003AF0  FFFF               	dw	65535	; assembler added errata NOP
  9565  003AF2  EF8A  F01D         	goto	l1314
  9566  003AF6                     u4470:
  9567  003AF6  FFFF               	dw	65535	; assembler added errata NOP
  9568  003AF8  C015  F00A         	movff	atoi@n,??_atoi
  9569  003AFC  C016  F00B         	movff	atoi@n+1,??_atoi+1
  9570  003B00  1E0A               	comf	??_atoi^0,f,c
  9571  003B02  1E0B               	comf	(??_atoi+1)^0,f,c
  9572  003B04  4A0A               	infsnz	??_atoi^0,f,c
  9573  003B06  2A0B               	incf	(??_atoi+1)^0,f,c
  9574  003B08  C00A  F008         	movff	??_atoi,?_atoi
  9575  003B0C  C00B  F009         	movff	??_atoi+1,?_atoi+1
  9576  003B10  EF8F  F01D         	goto	l1317
  9577  003B14                     l1314:
  9578  003B14  FFFF               	dw	65535	; assembler added errata NOP
  9579  003B16  C015  F008         	movff	atoi@n,?_atoi
  9580  003B1A  C016  F009         	movff	atoi@n+1,?_atoi+1
  9581  003B1E                     l1317:
  9582  003B1E  FFFF               	dw	65535	; assembler added errata NOP
  9583  003B20  0012               	return		;funcret
  9584  003B22  FFFF               	dw	65535	; errata NOP
  9585  003B24                     __end_of_atoi:
  9586                           	callstack 0
  9587                           
  9588 ;; *************** function _isspace *****************
  9589 ;; Defined at:
  9590 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
  9591 ;; Parameters:    Size  Location     Type
  9592 ;;  c               2    0[COMRAM] int 
  9593 ;; Auto vars:     Size  Location     Type
  9594 ;;		None
  9595 ;; Return value:  Size  Location     Type
  9596 ;;                  2    0[COMRAM] int 
  9597 ;; Registers used:
  9598 ;;		wreg, status,2, status,0
  9599 ;; Tracked objects:
  9600 ;;		On entry : 0/0
  9601 ;;		On exit  : 0/0
  9602 ;;		Unchanged: 0/0
  9603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9604 ;;      Params:         2       0       0       0       0       0       0
  9605 ;;      Locals:         1       0       0       0       0       0       0
  9606 ;;      Temps:          4       0       0       0       0       0       0
  9607 ;;      Totals:         7       0       0       0       0       0       0
  9608 ;;Total ram usage:        7 bytes
  9609 ;; Hardware stack levels used:    1
  9610 ;; Hardware stack levels required when called:    1
  9611 ;; This function calls:
  9612 ;;		Nothing
  9613 ;; This function is called by:
  9614 ;;		_atoi
  9615 ;; This function uses a non-reentrant model
  9616 ;;
  9617                           
  9618                           	psect	text29
  9619  006F2E                     __ptext29:
  9620                           	callstack 0
  9621  006F2E                     _isspace:
  9622                           	callstack 24
  9623  006F2E  FFFF               	dw	65535	; assembler added errata NOP
  9624  006F30  0E01               	movlw	1
  9625  006F32  6E07               	movwf	_isspace$1706^0,c
  9626  006F34  0E20               	movlw	32
  9627  006F36  1801               	xorwf	isspace@c^0,w,c
  9628  006F38  1002               	iorwf	(isspace@c+1)^0,w,c
  9629  006F3A  B4D8               	btfsc	status,2,c
  9630  006F3C  EFA2  F037         	goto	u3791
  9631  006F40  EFA5  F037         	goto	u3790
  9632  006F44                     u3791:
  9633  006F44  FFFF               	dw	65535	; assembler added errata NOP
  9634  006F46  EFC1  F037         	goto	l3610
  9635  006F4A                     u3790:
  9636  006F4A  FFFF               	dw	65535	; assembler added errata NOP
  9637  006F4C  0EF7               	movlw	247
  9638  006F4E  6E03               	movwf	??_isspace^0,c
  9639  006F50  0EFF               	movlw	255
  9640  006F52  6E04               	movwf	(??_isspace+1)^0,c
  9641  006F54  C001  F005         	movff	isspace@c,??_isspace+2
  9642  006F58  C002  F006         	movff	isspace@c+1,??_isspace+3
  9643  006F5C  5003               	movf	??_isspace^0,w,c
  9644  006F5E  2605               	addwf	(??_isspace+2)^0,f,c
  9645  006F60  5004               	movf	(??_isspace+1)^0,w,c
  9646  006F62  2206               	addwfc	(??_isspace+3)^0,f,c
  9647  006F64  5006               	movf	(??_isspace+3)^0,w,c
  9648  006F66  E10A               	bnz	u3800
  9649  006F68  0E05               	movlw	5
  9650  006F6A  5C05               	subwf	(??_isspace+2)^0,w,c
  9651  006F6C  A0D8               	btfss	status,0,c
  9652  006F6E  EFBB  F037         	goto	u3801
  9653  006F72  EFBE  F037         	goto	u3800
  9654  006F76                     u3801:
  9655  006F76  FFFF               	dw	65535	; assembler added errata NOP
  9656  006F78  EFC1  F037         	goto	l3610
  9657  006F7C                     u3800:
  9658  006F7C  FFFF               	dw	65535	; assembler added errata NOP
  9659  006F7E  0E00               	movlw	0
  9660  006F80  6E07               	movwf	_isspace$1706^0,c
  9661  006F82                     l3610:
  9662  006F82  FFFF               	dw	65535	; assembler added errata NOP
  9663  006F84  C007  F001         	movff	_isspace$1706,?_isspace
  9664  006F88  6A02               	clrf	(?_isspace+1)^0,c
  9665  006F8A  0012               	return		;funcret
  9666  006F8C  FFFF               	dw	65535	; errata NOP
  9667  006F8E                     __end_of_isspace:
  9668                           	callstack 0
  9669                           
  9670 ;; *************** function _isdigit *****************
  9671 ;; Defined at:
  9672 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  9673 ;; Parameters:    Size  Location     Type
  9674 ;;  c               2    0[COMRAM] int 
  9675 ;; Auto vars:     Size  Location     Type
  9676 ;;		None
  9677 ;; Return value:  Size  Location     Type
  9678 ;;                  2    0[COMRAM] int 
  9679 ;; Registers used:
  9680 ;;		wreg, status,2, status,0
  9681 ;; Tracked objects:
  9682 ;;		On entry : 0/0
  9683 ;;		On exit  : 0/0
  9684 ;;		Unchanged: 0/0
  9685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9686 ;;      Params:         2       0       0       0       0       0       0
  9687 ;;      Locals:         0       0       0       0       0       0       0
  9688 ;;      Temps:          4       0       0       0       0       0       0
  9689 ;;      Totals:         6       0       0       0       0       0       0
  9690 ;;Total ram usage:        6 bytes
  9691 ;; Hardware stack levels used:    1
  9692 ;; Hardware stack levels required when called:    1
  9693 ;; This function calls:
  9694 ;;		Nothing
  9695 ;; This function is called by:
  9696 ;;		_vfpfcnvrt
  9697 ;;		_atoi
  9698 ;; This function uses a non-reentrant model
  9699 ;;
  9700                           
  9701                           	psect	text30
  9702  006D3C                     __ptext30:
  9703                           	callstack 0
  9704  006D3C                     _isdigit:
  9705                           	callstack 25
  9706  006D3C  FFFF               	dw	65535	; assembler added errata NOP
  9707  006D3E  0ED0               	movlw	208
  9708  006D40  6E03               	movwf	??_isdigit^0,c
  9709  006D42  0EFF               	movlw	255
  9710  006D44  6E04               	movwf	(??_isdigit+1)^0,c
  9711  006D46  C001  F005         	movff	isdigit@c,??_isdigit+2
  9712  006D4A  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  9713  006D4E  5003               	movf	??_isdigit^0,w,c
  9714  006D50  2605               	addwf	(??_isdigit+2)^0,f,c
  9715  006D52  5004               	movf	(??_isdigit+1)^0,w,c
  9716  006D54  2206               	addwfc	(??_isdigit+3)^0,f,c
  9717  006D56  5006               	movf	(??_isdigit+3)^0,w,c
  9718  006D58  E10B               	bnz	u3770
  9719  006D5A  0E0A               	movlw	10
  9720  006D5C  5C05               	subwf	(??_isdigit+2)^0,w,c
  9721  006D5E  A0D8               	btfss	status,0,c
  9722  006D60  EFB4  F036         	goto	u3771
  9723  006D64  EFB8  F036         	goto	u3770
  9724  006D68                     u3771:
  9725  006D68  FFFF               	dw	65535	; assembler added errata NOP
  9726  006D6A  0E01               	movlw	1
  9727  006D6C  EFBA  F036         	goto	u3780
  9728  006D70                     u3770:
  9729  006D70  FFFF               	dw	65535	; assembler added errata NOP
  9730  006D72  0E00               	movlw	0
  9731  006D74                     u3780:
  9732  006D74  FFFF               	dw	65535	; assembler added errata NOP
  9733  006D76  6E01               	movwf	?_isdigit^0,c
  9734  006D78  6A02               	clrf	(?_isdigit+1)^0,c
  9735  006D7A  0012               	return		;funcret
  9736  006D7C  FFFF               	dw	65535	; errata NOP
  9737  006D7E                     __end_of_isdigit:
  9738                           	callstack 0
  9739                           
  9740 ;; *************** function ___wmul *****************
  9741 ;; Defined at:
  9742 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  9743 ;; Parameters:    Size  Location     Type
  9744 ;;  multiplier      2    0[COMRAM] unsigned int 
  9745 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9746 ;; Auto vars:     Size  Location     Type
  9747 ;;  product         2    4[COMRAM] unsigned int 
  9748 ;; Return value:  Size  Location     Type
  9749 ;;                  2    0[COMRAM] unsigned int 
  9750 ;; Registers used:
  9751 ;;		wreg, status,2, status,0, prodl, prodh
  9752 ;; Tracked objects:
  9753 ;;		On entry : 0/0
  9754 ;;		On exit  : 0/0
  9755 ;;		Unchanged: 0/0
  9756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9757 ;;      Params:         4       0       0       0       0       0       0
  9758 ;;      Locals:         2       0       0       0       0       0       0
  9759 ;;      Temps:          0       0       0       0       0       0       0
  9760 ;;      Totals:         6       0       0       0       0       0       0
  9761 ;;Total ram usage:        6 bytes
  9762 ;; Hardware stack levels used:    1
  9763 ;; Hardware stack levels required when called:    1
  9764 ;; This function calls:
  9765 ;;		Nothing
  9766 ;; This function is called by:
  9767 ;;		_main
  9768 ;;		_atoi
  9769 ;; This function uses a non-reentrant model
  9770 ;;
  9771                           
  9772                           	psect	text31
  9773  006BBE                     __ptext31:
  9774                           	callstack 0
  9775  006BBE                     ___wmul:
  9776                           	callstack 0
  9777  006BBE  FFFF               	dw	65535	; assembler added errata NOP
  9778  006BC0  5001               	movf	___wmul@multiplier^0,w,c
  9779  006BC2  0203               	mulwf	___wmul@multiplicand^0,c
  9780  006BC4  CFF3 F005          	movff	prodl,___wmul@product
  9781  006BC8  CFF4 F006          	movff	prodh,___wmul@product+1
  9782  006BCC  5001               	movf	___wmul@multiplier^0,w,c
  9783  006BCE  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9784  006BD0  50F3               	movf	243,w,c
  9785  006BD2  2606               	addwf	(___wmul@product+1)^0,f,c
  9786  006BD4  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9787  006BD6  0203               	mulwf	___wmul@multiplicand^0,c
  9788  006BD8  50F3               	movf	243,w,c
  9789  006BDA  2606               	addwf	(___wmul@product+1)^0,f,c
  9790  006BDC  C005  F001         	movff	___wmul@product,?___wmul
  9791  006BE0  C006  F002         	movff	___wmul@product+1,?___wmul+1
  9792  006BE4  0012               	return		;funcret
  9793  006BE6  FFFF               	dw	65535	; errata NOP
  9794  006BE8                     __end_of___wmul:
  9795                           	callstack 0
  9796                           
  9797 ;; *************** function _serial_tx_char *****************
  9798 ;; Defined at:
  9799 ;;		line 39 in file "serial_rs232.c"
  9800 ;; Parameters:    Size  Location     Type
  9801 ;;  val             1    wreg     unsigned char 
  9802 ;; Auto vars:     Size  Location     Type
  9803 ;;  val             1    0[COMRAM] unsigned char 
  9804 ;; Return value:  Size  Location     Type
  9805 ;;                  1    wreg      void 
  9806 ;; Registers used:
  9807 ;;		wreg
  9808 ;; Tracked objects:
  9809 ;;		On entry : 0/0
  9810 ;;		On exit  : 0/0
  9811 ;;		Unchanged: 0/0
  9812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9813 ;;      Params:         0       0       0       0       0       0       0
  9814 ;;      Locals:         1       0       0       0       0       0       0
  9815 ;;      Temps:          0       0       0       0       0       0       0
  9816 ;;      Totals:         1       0       0       0       0       0       0
  9817 ;;Total ram usage:        1 bytes
  9818 ;; Hardware stack levels used:    1
  9819 ;; Hardware stack levels required when called:    1
  9820 ;; This function calls:
  9821 ;;		Nothing
  9822 ;; This function is called by:
  9823 ;;		_main
  9824 ;;		_serial_tx_string
  9825 ;; This function uses a non-reentrant model
  9826 ;;
  9827                           
  9828                           	psect	text32
  9829  006B06                     __ptext32:
  9830                           	callstack 0
  9831  006B06                     _serial_tx_char:
  9832                           	callstack 0
  9833  006B06  FFFF               	dw	65535	; assembler added errata NOP
  9834                           
  9835                           ;incstack = 0
  9836                           ;serial_tx_char@val stored from wreg
  9837  006B08  6E01               	movwf	serial_tx_char@val^0,c
  9838  006B0A                     
  9839                           ;serial_rs232.c: 40:     TXREG = val;
  9840  006B0A  C001  FFAD         	movff	serial_tx_char@val,4013	;volatile
  9841  006B0E                     l24:
  9842  006B0E  FFFF               	dw	65535	; assembler added errata NOP
  9843  006B10  A2AC               	btfss	172,1,c	;volatile
  9844  006B12  EF8D  F035         	goto	u6151
  9845  006B16  EF90  F035         	goto	u6150
  9846  006B1A                     u6151:
  9847  006B1A  FFFF               	dw	65535	; assembler added errata NOP
  9848  006B1C  EF87  F035         	goto	l24
  9849  006B20                     u6150:
  9850  006B20  FFFF               	dw	65535	; assembler added errata NOP
  9851  006B22  0012               	return		;funcret
  9852  006B24  FFFF               	dw	65535	; errata NOP
  9853  006B26                     __end_of_serial_tx_char:
  9854                           	callstack 0
  9855                           
  9856 ;; *************** function _reach_goal *****************
  9857 ;; Defined at:
  9858 ;;		line 29 in file "stepper_motor.c"
  9859 ;; Parameters:    Size  Location     Type
  9860 ;;  stepper_moto    2    6[COMRAM] PTR struct .
  9861 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
  9862 ;;  goal_to_reac    2    8[COMRAM] int 
  9863 ;; Auto vars:     Size  Location     Type
  9864 ;;		None
  9865 ;; Return value:  Size  Location     Type
  9866 ;;                  2    6[COMRAM] int 
  9867 ;; Registers used:
  9868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9869 ;; Tracked objects:
  9870 ;;		On entry : 0/0
  9871 ;;		On exit  : 0/0
  9872 ;;		Unchanged: 0/0
  9873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9874 ;;      Params:         4       0       0       0       0       0       0
  9875 ;;      Locals:         0       0       0       0       0       0       0
  9876 ;;      Temps:          3       0       0       0       0       0       0
  9877 ;;      Totals:         7       0       0       0       0       0       0
  9878 ;;Total ram usage:        7 bytes
  9879 ;; Hardware stack levels used:    1
  9880 ;; Hardware stack levels required when called:    2
  9881 ;; This function calls:
  9882 ;;		_turn_on_current_coil
  9883 ;;		_update_current_coil
  9884 ;; This function is called by:
  9885 ;;		_main
  9886 ;; This function uses a non-reentrant model
  9887 ;;
  9888                           
  9889                           	psect	text33
  9890  00713E                     __ptext33:
  9891                           	callstack 0
  9892  00713E                     _reach_goal:
  9893                           	callstack 0
  9894  00713E  FFFF               	dw	65535	; assembler added errata NOP
  9895  007140                     
  9896                           ;stepper_motor.c: 30:     if(stepper_motor -> step_counter >= goal_to_reach){
  9897  007140  EE20 F002          	lfsr	2,2
  9898  007144  5007               	movf	reach_goal@stepper_motor^0,w,c
  9899  007146  26D9               	addwf	fsr2l,f,c
  9900  007148  5008               	movf	(reach_goal@stepper_motor+1)^0,w,c
  9901  00714A  22DA               	addwfc	fsr2h,f,c
  9902  00714C  5009               	movf	reach_goal@goal_to_reach^0,w,c
  9903  00714E  5CDE               	subwf	postinc2,w,c
  9904  007150  50DE               	movf	postinc2,w,c
  9905  007152  0A80               	xorlw	128
  9906  007154  6E0D               	movwf	(??_reach_goal+2)^0,c
  9907  007156  500A               	movf	(reach_goal@goal_to_reach+1)^0,w,c
  9908  007158  0A80               	xorlw	128
  9909  00715A  580D               	subwfb	(??_reach_goal+2)^0,w,c
  9910  00715C  A0D8               	btfss	status,0,c
  9911  00715E  EFB3  F038         	goto	u6311
  9912  007162  EFB6  F038         	goto	u6310
  9913  007166                     u6311:
  9914  007166  FFFF               	dw	65535	; assembler added errata NOP
  9915  007168  EFC7  F038         	goto	l5156
  9916  00716C                     u6310:
  9917  00716C  FFFF               	dw	65535	; assembler added errata NOP
  9918  00716E                     
  9919                           ;stepper_motor.c: 31:         stepper_motor -> step_counter = 0;
  9920  00716E  EE20 F002          	lfsr	2,2
  9921  007172  5007               	movf	reach_goal@stepper_motor^0,w,c
  9922  007174  26D9               	addwf	fsr2l,f,c
  9923  007176  5008               	movf	(reach_goal@stepper_motor+1)^0,w,c
  9924  007178  22DA               	addwfc	fsr2h,f,c
  9925  00717A  0E00               	movlw	0
  9926  00717C  6EDE               	movwf	postinc2,c
  9927  00717E  0E00               	movlw	0
  9928  007180  6EDD               	movwf	postdec2,c
  9929  007182                     
  9930                           ;stepper_motor.c: 32:         return 1;
  9931  007182  0E00               	movlw	0
  9932  007184  6E08               	movwf	(?_reach_goal+1)^0,c
  9933  007186  0E01               	movlw	1
  9934  007188  6E07               	movwf	?_reach_goal^0,c
  9935  00718A  EFD8  F038         	goto	l321
  9936  00718E                     l5156:
  9937  00718E  FFFF               	dw	65535	; assembler added errata NOP
  9938                           
  9939                           ;stepper_motor.c: 34:         turn_on_current_coil(stepper_motor);
  9940  007190  C007  F001         	movff	reach_goal@stepper_motor,turn_on_current_coil@stepper_motor
  9941  007194  C008  F002         	movff	reach_goal@stepper_motor+1,turn_on_current_coil@stepper_motor+1
  9942  007198  EC3F  F036         	call	_turn_on_current_coil	;wreg free
  9943                           
  9944                           ;stepper_motor.c: 35:         update_current_coil(stepper_motor);
  9945  00719C  C007  F001         	movff	reach_goal@stepper_motor,update_current_coil@stepper_motor
  9946  0071A0  C008  F002         	movff	reach_goal@stepper_motor+1,update_current_coil@stepper_motor+1
  9947  0071A4  EC7D  F03A         	call	_update_current_coil	;wreg free
  9948  0071A8                     
  9949                           ;stepper_motor.c: 36:         return 0;
  9950  0071A8  0E00               	movlw	0
  9951  0071AA  6E08               	movwf	(?_reach_goal+1)^0,c
  9952  0071AC  0E00               	movlw	0
  9953  0071AE  6E07               	movwf	?_reach_goal^0,c
  9954  0071B0                     l321:
  9955  0071B0  FFFF               	dw	65535	; assembler added errata NOP
  9956  0071B2  0012               	return		;funcret
  9957  0071B4  FFFF               	dw	65535	; errata NOP
  9958  0071B6                     __end_of_reach_goal:
  9959                           	callstack 0
  9960                           
  9961 ;; *************** function _update_current_coil *****************
  9962 ;; Defined at:
  9963 ;;		line 18 in file "stepper_motor.c"
  9964 ;; Parameters:    Size  Location     Type
  9965 ;;  stepper_moto    2    0[COMRAM] PTR struct .
  9966 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
  9967 ;; Auto vars:     Size  Location     Type
  9968 ;;		None
  9969 ;; Return value:  Size  Location     Type
  9970 ;;                  1    wreg      void 
  9971 ;; Registers used:
  9972 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9973 ;; Tracked objects:
  9974 ;;		On entry : 0/0
  9975 ;;		On exit  : 0/0
  9976 ;;		Unchanged: 0/0
  9977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9978 ;;      Params:         2       0       0       0       0       0       0
  9979 ;;      Locals:         0       0       0       0       0       0       0
  9980 ;;      Temps:          4       0       0       0       0       0       0
  9981 ;;      Totals:         6       0       0       0       0       0       0
  9982 ;;Total ram usage:        6 bytes
  9983 ;; Hardware stack levels used:    1
  9984 ;; Hardware stack levels required when called:    1
  9985 ;; This function calls:
  9986 ;;		Nothing
  9987 ;; This function is called by:
  9988 ;;		_reach_goal
  9989 ;; This function uses a non-reentrant model
  9990 ;;
  9991                           
  9992                           	psect	text34
  9993  0074FA                     __ptext34:
  9994                           	callstack 0
  9995  0074FA                     _update_current_coil:
  9996                           	callstack 0
  9997  0074FA  FFFF               	dw	65535	; assembler added errata NOP
  9998  0074FC                     
  9999                           ;stepper_motor.c: 19:     stepper_motor -> current_coil = stepper_motor -> current_coil 
      +                          + stepper_motor -> direction;
 10000  0074FC  EE20 F004          	lfsr	2,4
 10001  007500  5001               	movf	update_current_coil@stepper_motor^0,w,c
 10002  007502  26D9               	addwf	fsr2l,f,c
 10003  007504  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
 10004  007506  22DA               	addwfc	fsr2h,f,c
 10005  007508  CFDE F003          	movff	postinc2,??_update_current_coil
 10006  00750C  CFDD F004          	movff	postdec2,??_update_current_coil+1
 10007  007510  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10008  007514  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10009  007518  CFDE F005          	movff	postinc2,??_update_current_coil+2
 10010  00751C  CFDD F006          	movff	postdec2,??_update_current_coil+3
 10011  007520  5003               	movf	??_update_current_coil^0,w,c
 10012  007522  2605               	addwf	(??_update_current_coil+2)^0,f,c
 10013  007524  5004               	movf	(??_update_current_coil+1)^0,w,c
 10014  007526  2206               	addwfc	(??_update_current_coil+3)^0,f,c
 10015  007528  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10016  00752C  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10017  007530  C005  FFDE         	movff	??_update_current_coil+2,postinc2
 10018  007534  C006  FFDD         	movff	??_update_current_coil+3,postdec2
 10019                           
 10020                           ;stepper_motor.c: 20:     stepper_motor -> step_counter = stepper_motor -> step_counter 
      +                          + 1;
 10021  007538  EE20 F002          	lfsr	2,2
 10022  00753C  5001               	movf	update_current_coil@stepper_motor^0,w,c
 10023  00753E  26D9               	addwf	fsr2l,f,c
 10024  007540  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
 10025  007542  22DA               	addwfc	fsr2h,f,c
 10026  007544  CFDE F003          	movff	postinc2,??_update_current_coil
 10027  007548  CFDD F004          	movff	postdec2,??_update_current_coil+1
 10028  00754C  0E01               	movlw	1
 10029  00754E  2603               	addwf	??_update_current_coil^0,f,c
 10030  007550  0E00               	movlw	0
 10031  007552  2204               	addwfc	(??_update_current_coil+1)^0,f,c
 10032  007554  EE20 F002          	lfsr	2,2
 10033  007558  5001               	movf	update_current_coil@stepper_motor^0,w,c
 10034  00755A  26D9               	addwf	fsr2l,f,c
 10035  00755C  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
 10036  00755E  22DA               	addwfc	fsr2h,f,c
 10037  007560  C003  FFDE         	movff	??_update_current_coil,postinc2
 10038  007564  C004  FFDD         	movff	??_update_current_coil+1,postdec2
 10039                           
 10040                           ;stepper_motor.c: 21:     if (stepper_motor -> current_coil == -1) {
 10041  007568  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10042  00756C  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10043  007570  28DE               	incf	postinc2,w,c
 10044  007572  E106               	bnz	u6081
 10045  007574  28DE               	incf	postinc2,w,c
 10046  007576  A4D8               	btfss	status,2,c
 10047  007578  EFC0  F03A         	goto	u6081
 10048  00757C  EFC3  F03A         	goto	u6080
 10049  007580                     u6081:
 10050  007580  FFFF               	dw	65535	; assembler added errata NOP
 10051  007582  EFCE  F03A         	goto	l4922
 10052  007586                     u6080:
 10053  007586  FFFF               	dw	65535	; assembler added errata NOP
 10054  007588                     
 10055                           ;stepper_motor.c: 22:         stepper_motor -> current_coil = 3;
 10056  007588  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10057  00758C  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10058  007590  0E03               	movlw	3
 10059  007592  6EDE               	movwf	postinc2,c
 10060  007594  0E00               	movlw	0
 10061  007596  6EDD               	movwf	postdec2,c
 10062                           
 10063                           ;stepper_motor.c: 23:     } else if(stepper_motor -> current_coil == 4) {
 10064  007598  EFE7  F03A         	goto	l317
 10065  00759C                     l4922:
 10066  00759C  FFFF               	dw	65535	; assembler added errata NOP
 10067  00759E  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10068  0075A2  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10069  0075A6  0E04               	movlw	4
 10070  0075A8  18DE               	xorwf	postinc2,w,c
 10071  0075AA  10DE               	iorwf	postinc2,w,c
 10072  0075AC  A4D8               	btfss	status,2,c
 10073  0075AE  EFDB  F03A         	goto	u6091
 10074  0075B2  EFDE  F03A         	goto	u6090
 10075  0075B6                     u6091:
 10076  0075B6  FFFF               	dw	65535	; assembler added errata NOP
 10077  0075B8  EFE7  F03A         	goto	l317
 10078  0075BC                     u6090:
 10079  0075BC  FFFF               	dw	65535	; assembler added errata NOP
 10080  0075BE                     
 10081                           ;stepper_motor.c: 24:         stepper_motor -> current_coil = 0;
 10082  0075BE  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
 10083  0075C2  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
 10084  0075C6  0E00               	movlw	0
 10085  0075C8  6EDE               	movwf	postinc2,c
 10086  0075CA  0E00               	movlw	0
 10087  0075CC  6EDD               	movwf	postdec2,c
 10088  0075CE                     l317:
 10089  0075CE  FFFF               	dw	65535	; assembler added errata NOP
 10090  0075D0  0012               	return		;funcret
 10091  0075D2  FFFF               	dw	65535	; errata NOP
 10092  0075D4                     __end_of_update_current_coil:
 10093                           	callstack 0
 10094                           
 10095 ;; *************** function _turn_on_current_coil *****************
 10096 ;; Defined at:
 10097 ;;		line 13 in file "stepper_motor.c"
 10098 ;; Parameters:    Size  Location     Type
 10099 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 10100 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
 10101 ;; Auto vars:     Size  Location     Type
 10102 ;;		None
 10103 ;; Return value:  Size  Location     Type
 10104 ;;                  1    wreg      void 
 10105 ;; Registers used:
 10106 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10107 ;; Tracked objects:
 10108 ;;		On entry : 0/0
 10109 ;;		On exit  : 0/0
 10110 ;;		Unchanged: 0/0
 10111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10112 ;;      Params:         2       0       0       0       0       0       0
 10113 ;;      Locals:         0       0       0       0       0       0       0
 10114 ;;      Temps:          4       0       0       0       0       0       0
 10115 ;;      Totals:         6       0       0       0       0       0       0
 10116 ;;Total ram usage:        6 bytes
 10117 ;; Hardware stack levels used:    1
 10118 ;; Hardware stack levels required when called:    1
 10119 ;; This function calls:
 10120 ;;		Nothing
 10121 ;; This function is called by:
 10122 ;;		_reach_goal
 10123 ;; This function uses a non-reentrant model
 10124 ;;
 10125                           
 10126                           	psect	text35
 10127  006C7E                     __ptext35:
 10128                           	callstack 0
 10129  006C7E                     _turn_on_current_coil:
 10130                           	callstack 0
 10131  006C7E  FFFF               	dw	65535	; assembler added errata NOP
 10132  006C80                     
 10133                           ;stepper_motor.c: 14:     LATB = stepper_motor -> hex_coil_register_values[stepper_motor
      +                           -> current_coil];
 10134  006C80  C001  FFD9         	movff	turn_on_current_coil@stepper_motor,fsr2l
 10135  006C84  C002  FFDA         	movff	turn_on_current_coil@stepper_motor+1,fsr2h
 10136  006C88  CFDE F003          	movff	postinc2,??_turn_on_current_coil
 10137  006C8C  CFDD F004          	movff	postdec2,??_turn_on_current_coil+1
 10138  006C90  90D8               	bcf	status,0,c
 10139  006C92  3603               	rlcf	??_turn_on_current_coil^0,f,c
 10140  006C94  3604               	rlcf	(??_turn_on_current_coil+1)^0,f,c
 10141  006C96  C001  F005         	movff	turn_on_current_coil@stepper_motor,??_turn_on_current_coil+2
 10142  006C9A  C002  F006         	movff	turn_on_current_coil@stepper_motor+1,??_turn_on_current_coil+3
 10143  006C9E  5003               	movf	??_turn_on_current_coil^0,w,c
 10144  006CA0  2605               	addwf	(??_turn_on_current_coil+2)^0,f,c
 10145  006CA2  5004               	movf	(??_turn_on_current_coil+1)^0,w,c
 10146  006CA4  2206               	addwfc	(??_turn_on_current_coil+3)^0,f,c
 10147  006CA6  0E06               	movlw	6
 10148  006CA8  2405               	addwf	(??_turn_on_current_coil+2)^0,w,c
 10149  006CAA  6ED9               	movwf	fsr2l,c
 10150  006CAC  0E00               	movlw	0
 10151  006CAE  2006               	addwfc	(??_turn_on_current_coil+3)^0,w,c
 10152  006CB0  6EDA               	movwf	fsr2h,c
 10153  006CB2  50DF               	movf	indf2,w,c
 10154  006CB4  6E8A               	movwf	138,c	;volatile
 10155  006CB6  0012               	return		;funcret
 10156  006CB8  FFFF               	dw	65535	; errata NOP
 10157  006CBA                     __end_of_turn_on_current_coil:
 10158                           	callstack 0
 10159                           
 10160 ;; *************** function _lcd_str *****************
 10161 ;; Defined at:
 10162 ;;		line 62 in file "lcd.c"
 10163 ;; Parameters:    Size  Location     Type
 10164 ;;  str             2    2[COMRAM] PTR const unsigned char 
 10165 ;;		 -> main@greet_str(160), STR_7(22), 
 10166 ;; Auto vars:     Size  Location     Type
 10167 ;;  i               1    6[COMRAM] unsigned char 
 10168 ;; Return value:  Size  Location     Type
 10169 ;;                  1    wreg      void 
 10170 ;; Registers used:
 10171 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10172 ;; Tracked objects:
 10173 ;;		On entry : 0/0
 10174 ;;		On exit  : 0/0
 10175 ;;		Unchanged: 0/0
 10176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10177 ;;      Params:         2       0       0       0       0       0       0
 10178 ;;      Locals:         1       0       0       0       0       0       0
 10179 ;;      Temps:          2       0       0       0       0       0       0
 10180 ;;      Totals:         5       0       0       0       0       0       0
 10181 ;;Total ram usage:        5 bytes
 10182 ;; Hardware stack levels used:    1
 10183 ;; Hardware stack levels required when called:    3
 10184 ;; This function calls:
 10185 ;;		_lcd_dat
 10186 ;; This function is called by:
 10187 ;;		_main
 10188 ;; This function uses a non-reentrant model
 10189 ;;
 10190                           
 10191                           	psect	text36
 10192  007234                     __ptext36:
 10193                           	callstack 0
 10194  007234                     _lcd_str:
 10195                           	callstack 0
 10196  007234  FFFF               	dw	65535	; assembler added errata NOP
 10197  007236                     
 10198                           ;lcd.c: 62: void lcd_str(const char* str);lcd.c: 63: {;lcd.c: 64:     unsigned char i=0;
 10199  007236  0E00               	movlw	0
 10200  007238  6E07               	movwf	lcd_str@i^0,c
 10201                           
 10202                           ;lcd.c: 66:     while(str[i] != 0 )
 10203  00723A  EF3A  F039         	goto	l5070
 10204  00723E                     l5066:
 10205  00723E  FFFF               	dw	65535	; assembler added errata NOP
 10206                           
 10207                           ;lcd.c: 67:     {;lcd.c: 68:       lcd_dat(str[i]);
 10208  007240  5007               	movf	lcd_str@i^0,w,c
 10209  007242  2403               	addwf	lcd_str@str^0,w,c
 10210  007244  6E05               	movwf	??_lcd_str^0,c
 10211  007246  0E00               	movlw	0
 10212  007248  2004               	addwfc	(lcd_str@str+1)^0,w,c
 10213  00724A  6E06               	movwf	(??_lcd_str+1)^0,c
 10214  00724C  C005  FFF6         	movff	??_lcd_str,tblptrl
 10215  007250  C006  FFF7         	movff	??_lcd_str+1,tblptrh
 10216  007254  6AF8               	clrf	tblptru,c
 10217  007256  0E05               	movlw	(high __ramtop+-1)
 10218  007258  64F7               	cpfsgt	tblptrh,c
 10219  00725A  D004               	bra	u6177
 10220  00725C  0008               	tblrd		*
 10221  00725E  FFFF               	dw	65535	; errata NOP
 10222  007260  50F5               	movf	tablat,w,c
 10223  007262  D005               	bra	u6170
 10224  007264                     u6177:
 10225  007264  CFF6 FFE1          	movff	tblptrl,fsr1l
 10226  007268  CFF7 FFE2          	movff	tblptrh,fsr1h
 10227  00726C  50E7               	movf	indf1,w,c
 10228  00726E                     u6170:
 10229  00726E  ECCA  F035         	call	_lcd_dat
 10230  007272                     
 10231                           ;lcd.c: 69:       i++;
 10232  007272  2A07               	incf	lcd_str@i^0,f,c
 10233  007274                     l5070:
 10234  007274  FFFF               	dw	65535	; assembler added errata NOP
 10235                           
 10236                           ;lcd.c: 66:     while(str[i] != 0 )
 10237  007276  5007               	movf	lcd_str@i^0,w,c
 10238  007278  2403               	addwf	lcd_str@str^0,w,c
 10239  00727A  6E05               	movwf	??_lcd_str^0,c
 10240  00727C  0E00               	movlw	0
 10241  00727E  2004               	addwfc	(lcd_str@str+1)^0,w,c
 10242  007280  6E06               	movwf	(??_lcd_str+1)^0,c
 10243  007282  C005  FFF6         	movff	??_lcd_str,tblptrl
 10244  007286  C006  FFF7         	movff	??_lcd_str+1,tblptrh
 10245  00728A  6AF8               	clrf	tblptru,c
 10246  00728C  0E05               	movlw	(high __ramtop+-1)
 10247  00728E  64F7               	cpfsgt	tblptrh,c
 10248  007290  D004               	bra	u6187
 10249  007292  0008               	tblrd		*
 10250  007294  FFFF               	dw	65535	; errata NOP
 10251  007296  50F5               	movf	tablat,w,c
 10252  007298  D005               	bra	u6180
 10253  00729A                     u6187:
 10254  00729A  CFF6 FFE1          	movff	tblptrl,fsr1l
 10255  00729E  CFF7 FFE2          	movff	tblptrh,fsr1h
 10256  0072A2  50E7               	movf	indf1,w,c
 10257  0072A4                     u6180:
 10258  0072A4  0900               	iorlw	0
 10259  0072A6  A4D8               	btfss	status,2,c
 10260  0072A8  EF58  F039         	goto	u6191
 10261  0072AC  EF5B  F039         	goto	u6190
 10262  0072B0                     u6191:
 10263  0072B0  FFFF               	dw	65535	; assembler added errata NOP
 10264  0072B2  EF1F  F039         	goto	l5066
 10265  0072B6                     u6190:
 10266  0072B6  FFFF               	dw	65535	; assembler added errata NOP
 10267  0072B8  0012               	return		;funcret
 10268  0072BA  FFFF               	dw	65535	; errata NOP
 10269  0072BC                     __end_of_lcd_str:
 10270                           	callstack 0
 10271                           
 10272 ;; *************** function _lcd_dat *****************
 10273 ;; Defined at:
 10274 ;;		line 21 in file "lcd.c"
 10275 ;; Parameters:    Size  Location     Type
 10276 ;;  val             1    wreg     unsigned char 
 10277 ;; Auto vars:     Size  Location     Type
 10278 ;;  val             1    1[COMRAM] unsigned char 
 10279 ;; Return value:  Size  Location     Type
 10280 ;;                  1    wreg      void 
 10281 ;; Registers used:
 10282 ;;		wreg, status,2, cstack
 10283 ;; Tracked objects:
 10284 ;;		On entry : 0/0
 10285 ;;		On exit  : 0/0
 10286 ;;		Unchanged: 0/0
 10287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10288 ;;      Params:         0       0       0       0       0       0       0
 10289 ;;      Locals:         1       0       0       0       0       0       0
 10290 ;;      Temps:          0       0       0       0       0       0       0
 10291 ;;      Totals:         1       0       0       0       0       0       0
 10292 ;;Total ram usage:        1 bytes
 10293 ;; Hardware stack levels used:    1
 10294 ;; Hardware stack levels required when called:    2
 10295 ;; This function calls:
 10296 ;;		_lcd_wr
 10297 ;; This function is called by:
 10298 ;;		_lcd_str
 10299 ;;		_state_translator_fpga_to_micro
 10300 ;; This function uses a non-reentrant model
 10301 ;;
 10302                           
 10303                           	psect	text37
 10304  006B94                     __ptext37:
 10305                           	callstack 0
 10306  006B94                     _lcd_dat:
 10307                           	callstack 0
 10308  006B94  FFFF               	dw	65535	; assembler added errata NOP
 10309                           
 10310                           ;incstack = 0
 10311                           ;lcd_dat@val stored from wreg
 10312  006B96  6E02               	movwf	lcd_dat@val^0,c
 10313  006B98                     
 10314                           ;lcd.c: 21: void lcd_dat(unsigned char val);lcd.c: 22: {;lcd.c: 23:  PORTEbits.RE1=1;
 10315  006B98  8284               	bsf	132,1,c	;volatile
 10316  006B9A                     
 10317                           ;lcd.c: 24:     lcd_wr(val);
 10318  006B9A  5002               	movf	lcd_dat@val^0,w,c
 10319  006B9C  EC5D  F035         	call	_lcd_wr
 10320  006BA0                     
 10321                           ;lcd.c: 25:     PORTEbits.RE2=1;
 10322  006BA0  8484               	bsf	132,2,c	;volatile
 10323  006BA2                     
 10324                           ;lcd.c: 26:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10325  006BA2  0EC8               	movlw	200
 10326  006BA4                     u6747:
 10327  006BA4  FFFF               	dw	65535	; errata NOP
 10328  006BA6  F000               	nop	
 10329  006BA8  2EE8               	decfsz	wreg,f,c
 10330  006BAA  D7FC               	bra	u6747
 10331  006BAC                     
 10332                           ;lcd.c: 27:     PORTEbits.RE1=0;
 10333  006BAC  9284               	bcf	132,1,c	;volatile
 10334  006BAE                     
 10335                           ;lcd.c: 28:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10336  006BAE  0EC8               	movlw	200
 10337  006BB0                     u6757:
 10338  006BB0  FFFF               	dw	65535	; errata NOP
 10339  006BB2  F000               	nop	
 10340  006BB4  2EE8               	decfsz	wreg,f,c
 10341  006BB6  D7FC               	bra	u6757
 10342  006BB8                     
 10343                           ;lcd.c: 29:  PORTEbits.RE1=1;
 10344  006BB8  8284               	bsf	132,1,c	;volatile
 10345  006BBA  0012               	return		;funcret
 10346  006BBC  FFFF               	dw	65535	; errata NOP
 10347  006BBE                     __end_of_lcd_dat:
 10348                           	callstack 0
 10349                           
 10350 ;; *************** function _lcd_init *****************
 10351 ;; Defined at:
 10352 ;;		line 32 in file "lcd.c"
 10353 ;; Parameters:    Size  Location     Type
 10354 ;;		None
 10355 ;; Auto vars:     Size  Location     Type
 10356 ;;		None
 10357 ;; Return value:  Size  Location     Type
 10358 ;;                  1    wreg      void 
 10359 ;; Registers used:
 10360 ;;		wreg, status,2, cstack
 10361 ;; Tracked objects:
 10362 ;;		On entry : 0/0
 10363 ;;		On exit  : 0/0
 10364 ;;		Unchanged: 0/0
 10365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10366 ;;      Params:         0       0       0       0       0       0       0
 10367 ;;      Locals:         0       0       0       0       0       0       0
 10368 ;;      Temps:          1       0       0       0       0       0       0
 10369 ;;      Totals:         1       0       0       0       0       0       0
 10370 ;;Total ram usage:        1 bytes
 10371 ;; Hardware stack levels used:    1
 10372 ;; Hardware stack levels required when called:    3
 10373 ;; This function calls:
 10374 ;;		_lcd_cmd
 10375 ;; This function is called by:
 10376 ;;		_main
 10377 ;; This function uses a non-reentrant model
 10378 ;;
 10379                           
 10380                           	psect	text38
 10381  0071B6                     __ptext38:
 10382                           	callstack 0
 10383  0071B6                     _lcd_init:
 10384                           	callstack 0
 10385  0071B6  FFFF               	dw	65535	; assembler added errata NOP
 10386  0071B8  6A83               	clrf	3971,c	;# 
 10387  0071BA  0E00               	movlw	0	;# 
 10388  0071BC  6E95               	movwf	3989,c	;# 
 10389  0071BE  6A84               	clrf	3972,c	;# 
 10390  0071C0  0E00               	movlw	0	;# 
 10391  0071C2  6E96               	movwf	3990,c	;# 
 10392                           
 10393                           ;lcd.c: 45:  PORTEbits.RE1=0;
 10394  0071C4  9284               	bcf	132,1,c	;volatile
 10395                           
 10396                           ;lcd.c: 46:  PORTEbits.RE2=0;
 10397  0071C6  9484               	bcf	132,2,c	;volatile
 10398  0071C8                     
 10399                           ;lcd.c: 47:  _delay((unsigned long)((30)*(4000000/4000.0)));
 10400  0071C8  0E1E               	movlw	30
 10401  0071CA  6E03               	movwf	??_lcd_init^0,c
 10402  0071CC  0E3C               	movlw	60
 10403  0071CE                     u6767:
 10404  0071CE  FFFF               	dw	65535	; errata NOP
 10405  0071D0  2EE8               	decfsz	wreg,f,c
 10406  0071D2  D7FD               	bra	u6767
 10407  0071D4  2E03               	decfsz	??_lcd_init^0,f,c
 10408  0071D6  D7FB               	bra	u6767
 10409  0071D8  D000               	nop2	
 10410  0071DA                     
 10411                           ;lcd.c: 48:  PORTEbits.RE1=1;
 10412  0071DA  8284               	bsf	132,1,c	;volatile
 10413  0071DC                     
 10414                           ;lcd.c: 50:  lcd_cmd(0x38);
 10415  0071DC  0E38               	movlw	56
 10416  0071DE  ECB5  F035         	call	_lcd_cmd
 10417  0071E2                     
 10418                           ;lcd.c: 51:  _delay((unsigned long)((30)*(4000000/4000.0)));
 10419  0071E2  0E1E               	movlw	30
 10420  0071E4  6E03               	movwf	??_lcd_init^0,c
 10421  0071E6  0E3C               	movlw	60
 10422  0071E8                     u6777:
 10423  0071E8  FFFF               	dw	65535	; errata NOP
 10424  0071EA  2EE8               	decfsz	wreg,f,c
 10425  0071EC  D7FD               	bra	u6777
 10426  0071EE  2E03               	decfsz	??_lcd_init^0,f,c
 10427  0071F0  D7FB               	bra	u6777
 10428  0071F2  D000               	nop2	
 10429                           
 10430                           ;lcd.c: 52:  lcd_cmd(0x38);
 10431  0071F4  0E38               	movlw	56
 10432  0071F6  ECB5  F035         	call	_lcd_cmd
 10433  0071FA                     
 10434                           ;lcd.c: 53:     _delay((unsigned long)((30)*(4000000/4000.0)));
 10435  0071FA  0E1E               	movlw	30
 10436  0071FC  6E03               	movwf	??_lcd_init^0,c
 10437  0071FE  0E3C               	movlw	60
 10438  007200                     u6787:
 10439  007200  FFFF               	dw	65535	; errata NOP
 10440  007202  2EE8               	decfsz	wreg,f,c
 10441  007204  D7FD               	bra	u6787
 10442  007206  2E03               	decfsz	??_lcd_init^0,f,c
 10443  007208  D7FB               	bra	u6787
 10444  00720A  D000               	nop2	
 10445  00720C                     
 10446                           ;lcd.c: 54:  lcd_cmd(0x38);
 10447  00720C  0E38               	movlw	56
 10448  00720E  ECB5  F035         	call	_lcd_cmd
 10449  007212                     
 10450                           ;lcd.c: 55:  lcd_cmd(0x08);
 10451  007212  0E08               	movlw	8
 10452  007214  ECB5  F035         	call	_lcd_cmd
 10453  007218                     
 10454                           ;lcd.c: 56:  lcd_cmd(0x0F);
 10455  007218  0E0F               	movlw	15
 10456  00721A  ECB5  F035         	call	_lcd_cmd
 10457  00721E                     
 10458                           ;lcd.c: 57:  lcd_cmd(0x01);
 10459  00721E  0E01               	movlw	1
 10460  007220  ECB5  F035         	call	_lcd_cmd
 10461  007224                     
 10462                           ;lcd.c: 58:  lcd_cmd(0x38);
 10463  007224  0E38               	movlw	56
 10464  007226  ECB5  F035         	call	_lcd_cmd
 10465  00722A                     
 10466                           ;lcd.c: 59:     lcd_cmd(0x80);
 10467  00722A  0E80               	movlw	128
 10468  00722C  ECB5  F035         	call	_lcd_cmd
 10469  007230  0012               	return		;funcret
 10470  007232  FFFF               	dw	65535	; errata NOP
 10471  007234                     __end_of_lcd_init:
 10472                           	callstack 0
 10473                           
 10474 ;; *************** function _lcd_cmd *****************
 10475 ;; Defined at:
 10476 ;;		line 10 in file "lcd.c"
 10477 ;; Parameters:    Size  Location     Type
 10478 ;;  val             1    wreg     unsigned char 
 10479 ;; Auto vars:     Size  Location     Type
 10480 ;;  val             1    1[COMRAM] unsigned char 
 10481 ;; Return value:  Size  Location     Type
 10482 ;;                  1    wreg      void 
 10483 ;; Registers used:
 10484 ;;		wreg, status,2, cstack
 10485 ;; Tracked objects:
 10486 ;;		On entry : 0/0
 10487 ;;		On exit  : 0/0
 10488 ;;		Unchanged: 0/0
 10489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10490 ;;      Params:         0       0       0       0       0       0       0
 10491 ;;      Locals:         1       0       0       0       0       0       0
 10492 ;;      Temps:          0       0       0       0       0       0       0
 10493 ;;      Totals:         1       0       0       0       0       0       0
 10494 ;;Total ram usage:        1 bytes
 10495 ;; Hardware stack levels used:    1
 10496 ;; Hardware stack levels required when called:    2
 10497 ;; This function calls:
 10498 ;;		_lcd_wr
 10499 ;; This function is called by:
 10500 ;;		_main
 10501 ;;		_lcd_init
 10502 ;; This function uses a non-reentrant model
 10503 ;;
 10504                           
 10505                           	psect	text39
 10506  006B6A                     __ptext39:
 10507                           	callstack 0
 10508  006B6A                     _lcd_cmd:
 10509                           	callstack 0
 10510  006B6A  FFFF               	dw	65535	; assembler added errata NOP
 10511                           
 10512                           ;incstack = 0
 10513                           ;lcd_cmd@val stored from wreg
 10514  006B6C  6E02               	movwf	lcd_cmd@val^0,c
 10515  006B6E                     
 10516                           ;lcd.c: 10: void lcd_cmd(unsigned char val);lcd.c: 11: {;lcd.c: 12:  PORTEbits.RE1=1;
 10517  006B6E  8284               	bsf	132,1,c	;volatile
 10518  006B70                     
 10519                           ;lcd.c: 13:     lcd_wr(val);
 10520  006B70  5002               	movf	lcd_cmd@val^0,w,c
 10521  006B72  EC5D  F035         	call	_lcd_wr
 10522  006B76                     
 10523                           ;lcd.c: 14:     PORTEbits.RE2=0;
 10524  006B76  9484               	bcf	132,2,c	;volatile
 10525  006B78                     
 10526                           ;lcd.c: 15:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10527  006B78  0EC8               	movlw	200
 10528  006B7A                     u6797:
 10529  006B7A  FFFF               	dw	65535	; errata NOP
 10530  006B7C  F000               	nop	
 10531  006B7E  2EE8               	decfsz	wreg,f,c
 10532  006B80  D7FC               	bra	u6797
 10533  006B82                     
 10534                           ;lcd.c: 16:     PORTEbits.RE1=0;
 10535  006B82  9284               	bcf	132,1,c	;volatile
 10536  006B84                     
 10537                           ;lcd.c: 17:     _delay((unsigned long)((1)*(4000000/4000.0)));
 10538  006B84  0EC8               	movlw	200
 10539  006B86                     u6807:
 10540  006B86  FFFF               	dw	65535	; errata NOP
 10541  006B88  F000               	nop	
 10542  006B8A  2EE8               	decfsz	wreg,f,c
 10543  006B8C  D7FC               	bra	u6807
 10544  006B8E                     
 10545                           ;lcd.c: 18:  PORTEbits.RE1=1;
 10546  006B8E  8284               	bsf	132,1,c	;volatile
 10547  006B90  0012               	return		;funcret
 10548  006B92  FFFF               	dw	65535	; errata NOP
 10549  006B94                     __end_of_lcd_cmd:
 10550                           	callstack 0
 10551                           
 10552 ;; *************** function _lcd_wr *****************
 10553 ;; Defined at:
 10554 ;;		line 5 in file "lcd.c"
 10555 ;; Parameters:    Size  Location     Type
 10556 ;;  val             1    wreg     unsigned char 
 10557 ;; Auto vars:     Size  Location     Type
 10558 ;;  val             1    0[COMRAM] unsigned char 
 10559 ;; Return value:  Size  Location     Type
 10560 ;;                  1    wreg      void 
 10561 ;; Registers used:
 10562 ;;		wreg
 10563 ;; Tracked objects:
 10564 ;;		On entry : 0/0
 10565 ;;		On exit  : 0/0
 10566 ;;		Unchanged: 0/0
 10567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10568 ;;      Params:         0       0       0       0       0       0       0
 10569 ;;      Locals:         1       0       0       0       0       0       0
 10570 ;;      Temps:          0       0       0       0       0       0       0
 10571 ;;      Totals:         1       0       0       0       0       0       0
 10572 ;;Total ram usage:        1 bytes
 10573 ;; Hardware stack levels used:    1
 10574 ;; Hardware stack levels required when called:    1
 10575 ;; This function calls:
 10576 ;;		Nothing
 10577 ;; This function is called by:
 10578 ;;		_lcd_cmd
 10579 ;;		_lcd_dat
 10580 ;; This function uses a non-reentrant model
 10581 ;;
 10582                           
 10583                           	psect	text40
 10584  006ABA                     __ptext40:
 10585                           	callstack 0
 10586  006ABA                     _lcd_wr:
 10587                           	callstack 0
 10588  006ABA  FFFF               	dw	65535	; assembler added errata NOP
 10589                           
 10590                           ;incstack = 0
 10591                           ;lcd_wr@val stored from wreg
 10592  006ABC  6E01               	movwf	lcd_wr@val^0,c
 10593  006ABE                     
 10594                           ;lcd.c: 5: void lcd_wr(unsigned char val);lcd.c: 6: {;lcd.c: 7:     PORTD=val;
 10595  006ABE  C001  FF83         	movff	lcd_wr@val,3971	;volatile
 10596  006AC2  0012               	return		;funcret
 10597  006AC4  FFFF               	dw	65535	; errata NOP
 10598  006AC6                     __end_of_lcd_wr:
 10599                           	callstack 0
 10600                           
 10601 ;; *************** function _init_timer_2 *****************
 10602 ;; Defined at:
 10603 ;;		line 27 in file "timer.c"
 10604 ;; Parameters:    Size  Location     Type
 10605 ;;		None
 10606 ;; Auto vars:     Size  Location     Type
 10607 ;;		None
 10608 ;; Return value:  Size  Location     Type
 10609 ;;                  1    wreg      void 
 10610 ;; Registers used:
 10611 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10612 ;; Tracked objects:
 10613 ;;		On entry : 0/0
 10614 ;;		On exit  : 0/0
 10615 ;;		Unchanged: 0/0
 10616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10617 ;;      Params:         0       0       0       0       0       0       0
 10618 ;;      Locals:         4       0       0       0       0       0       0
 10619 ;;      Temps:          0       0       0       0       0       0       0
 10620 ;;      Totals:         4       0       0       0       0       0       0
 10621 ;;Total ram usage:        4 bytes
 10622 ;; Hardware stack levels used:    1
 10623 ;; Hardware stack levels required when called:    2
 10624 ;; This function calls:
 10625 ;;		___fladd
 10626 ;;		___fldiv
 10627 ;;		___flmul
 10628 ;;		___fltol
 10629 ;; This function is called by:
 10630 ;;		_main
 10631 ;; This function uses a non-reentrant model
 10632 ;;
 10633                           
 10634                           	psect	text41
 10635  00742E                     __ptext41:
 10636                           	callstack 0
 10637  00742E                     _init_timer_2:
 10638                           	callstack 0
 10639  00742E  FFFF               	dw	65535	; assembler added errata NOP
 10640  007430                     
 10641                           ;timer.c: 29:     T2CON = 0;
 10642  007430  0E00               	movlw	0
 10643  007432  6ECA               	movwf	202,c	;volatile
 10644                           
 10645                           ;timer.c: 30:     TMR2 = 0;
 10646  007434  0E00               	movlw	0
 10647  007436  6ECC               	movwf	204,c	;volatile
 10648  007438                     
 10649                           ;timer.c: 32:     T2CONbits.TMR2ON = 1;
 10650  007438  84CA               	bsf	202,2,c	;volatile
 10651  00743A                     
 10652                           ;timer.c: 33:     T2CONbits.T2CKPS0 = 1;
 10653  00743A  80CA               	bsf	202,0,c	;volatile
 10654  00743C                     
 10655                           ;timer.c: 34:     T2CONbits.T2CKPS1 = 1;
 10656  00743C  82CA               	bsf	202,1,c	;volatile
 10657  00743E                     
 10658                           ;timer.c: 36:     PR2 = (uint8_t) (((pwm_period / (4*t_osc*tmr2_prescaler)) - 1)*4);
 10659  00743E  0E00               	movlw	0
 10660  007440  6E37               	movwf	___fladd@a^0,c
 10661  007442  0E00               	movlw	0
 10662  007444  6E38               	movwf	(___fladd@a+1)^0,c
 10663  007446  0E80               	movlw	128
 10664  007448  6E39               	movwf	(___fladd@a+2)^0,c
 10665  00744A  0EBF               	movlw	191
 10666  00744C  6E3A               	movwf	(___fladd@a+3)^0,c
 10667  00744E  0EBD               	movlw	189
 10668  007450  6E05               	movwf	___flmul@a^0,c
 10669  007452  0E37               	movlw	55
 10670  007454  6E06               	movwf	(___flmul@a+1)^0,c
 10671  007456  0E86               	movlw	134
 10672  007458  6E07               	movwf	(___flmul@a+2)^0,c
 10673  00745A  0E36               	movlw	54
 10674  00745C  6E08               	movwf	(___flmul@a+3)^0,c
 10675  00745E  C0D7  F001         	movff	_tmr2_prescaler,___flmul@b
 10676  007462  C0D8  F002         	movff	_tmr2_prescaler+1,___flmul@b+1
 10677  007466  C0D9  F003         	movff	_tmr2_prescaler+2,___flmul@b+2
 10678  00746A  C0DA  F004         	movff	_tmr2_prescaler+3,___flmul@b+3
 10679  00746E  EC11  F010         	call	___flmul	;wreg free
 10680  007472  C001  F01E         	movff	?___flmul,___fldiv@a
 10681  007476  C002  F01F         	movff	?___flmul+1,___fldiv@a+1
 10682  00747A  C003  F020         	movff	?___flmul+2,___fldiv@a+2
 10683  00747E  C004  F021         	movff	?___flmul+3,___fldiv@a+3
 10684  007482  0E0A               	movlw	10
 10685  007484  6E1A               	movwf	___fldiv@b^0,c
 10686  007486  0ED7               	movlw	215
 10687  007488  6E1B               	movwf	(___fldiv@b+1)^0,c
 10688  00748A  0EA3               	movlw	163
 10689  00748C  6E1C               	movwf	(___fldiv@b+2)^0,c
 10690  00748E  0E3C               	movlw	60
 10691  007490  6E1D               	movwf	(___fldiv@b+3)^0,c
 10692  007492  EC63  F012         	call	___fldiv	;wreg free
 10693  007496  C01A  F033         	movff	?___fldiv,___fladd@b
 10694  00749A  C01B  F034         	movff	?___fldiv+1,___fladd@b+1
 10695  00749E  C01C  F035         	movff	?___fldiv+2,___fladd@b+2
 10696  0074A2  C01D  F036         	movff	?___fldiv+3,___fladd@b+3
 10697  0074A6  EC3D  F00D         	call	___fladd	;wreg free
 10698  0074AA  C033  F06F         	movff	?___fladd,_init_timer_2$2006
 10699  0074AE  C034  F070         	movff	?___fladd+1,_init_timer_2$2006+1
 10700  0074B2  C035  F071         	movff	?___fladd+2,_init_timer_2$2006+2
 10701  0074B6  C036  F072         	movff	?___fladd+3,_init_timer_2$2006+3
 10702  0074BA                     
 10703                           ;timer.c: 36:     PR2 = (uint8_t) (((pwm_period / (4*t_osc*tmr2_prescaler)) - 1)*4);
 10704  0074BA  0E00               	movlw	0
 10705  0074BC  6E05               	movwf	___flmul@a^0,c
 10706  0074BE  0E00               	movlw	0
 10707  0074C0  6E06               	movwf	(___flmul@a+1)^0,c
 10708  0074C2  0E80               	movlw	128
 10709  0074C4  6E07               	movwf	(___flmul@a+2)^0,c
 10710  0074C6  0E40               	movlw	64
 10711  0074C8  6E08               	movwf	(___flmul@a+3)^0,c
 10712  0074CA  C06F  F001         	movff	_init_timer_2$2006,___flmul@b
 10713  0074CE  C070  F002         	movff	_init_timer_2$2006+1,___flmul@b+1
 10714  0074D2  C071  F003         	movff	_init_timer_2$2006+2,___flmul@b+2
 10715  0074D6  C072  F004         	movff	_init_timer_2$2006+3,___flmul@b+3
 10716  0074DA  EC11  F010         	call	___flmul	;wreg free
 10717  0074DE  C001  F065         	movff	?___flmul,___fltol@f1
 10718  0074E2  C002  F066         	movff	?___flmul+1,___fltol@f1+1
 10719  0074E6  C003  F067         	movff	?___flmul+2,___fltol@f1+2
 10720  0074EA  C004  F068         	movff	?___flmul+3,___fltol@f1+3
 10721  0074EE  ECDC  F03E         	call	___fltol	;wreg free
 10722  0074F2  5065               	movf	?___fltol^0,w,c
 10723  0074F4  6ECB               	movwf	203,c	;volatile
 10724  0074F6  0012               	return		;funcret
 10725  0074F8  FFFF               	dw	65535	; errata NOP
 10726  0074FA                     __end_of_init_timer_2:
 10727                           	callstack 0
 10728                           
 10729 ;; *************** function _init_timer_0 *****************
 10730 ;; Defined at:
 10731 ;;		line 11 in file "timer.c"
 10732 ;; Parameters:    Size  Location     Type
 10733 ;;		None
 10734 ;; Auto vars:     Size  Location     Type
 10735 ;;		None
 10736 ;; Return value:  Size  Location     Type
 10737 ;;                  1    wreg      void 
 10738 ;; Registers used:
 10739 ;;		wreg, status,2
 10740 ;; Tracked objects:
 10741 ;;		On entry : 0/0
 10742 ;;		On exit  : 0/0
 10743 ;;		Unchanged: 0/0
 10744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10745 ;;      Params:         0       0       0       0       0       0       0
 10746 ;;      Locals:         0       0       0       0       0       0       0
 10747 ;;      Temps:          0       0       0       0       0       0       0
 10748 ;;      Totals:         0       0       0       0       0       0       0
 10749 ;;Total ram usage:        0 bytes
 10750 ;; Hardware stack levels used:    1
 10751 ;; Hardware stack levels required when called:    1
 10752 ;; This function calls:
 10753 ;;		Nothing
 10754 ;; This function is called by:
 10755 ;;		_main
 10756 ;; This function uses a non-reentrant model
 10757 ;;
 10758                           
 10759                           	psect	text42
 10760  006B48                     __ptext42:
 10761                           	callstack 0
 10762  006B48                     _init_timer_0:
 10763                           	callstack 0
 10764  006B48  FFFF               	dw	65535	; assembler added errata NOP
 10765  006B4A                     
 10766                           ;timer.c: 13:     T0CON = 0;
 10767  006B4A  0E00               	movlw	0
 10768  006B4C  6ED5               	movwf	213,c	;volatile
 10769                           
 10770                           ;timer.c: 15:     TMR0L = 0x96;
 10771  006B4E  0E96               	movlw	150
 10772  006B50  6ED6               	movwf	214,c	;volatile
 10773                           
 10774                           ;timer.c: 16:     TMR0H = 0x98;
 10775  006B52  0E98               	movlw	152
 10776  006B54  6ED7               	movwf	215,c	;volatile
 10777  006B56                     
 10778                           ;timer.c: 17:     INTCONbits.TMR0IE = 1;
 10779  006B56  8AF2               	bsf	242,5,c	;volatile
 10780  006B58                     
 10781                           ;timer.c: 18:     T0CONbits.T08BIT = 0;
 10782  006B58  9CD5               	bcf	213,6,c	;volatile
 10783  006B5A                     
 10784                           ;timer.c: 19:     T0CONbits.T0CS = 0;
 10785  006B5A  9AD5               	bcf	213,5,c	;volatile
 10786  006B5C                     
 10787                           ;timer.c: 20:     T0CONbits.PSA = 0;
 10788  006B5C  96D5               	bcf	213,3,c	;volatile
 10789  006B5E                     
 10790                           ;timer.c: 21:     T0CONbits.T0PS0 = 1;
 10791  006B5E  80D5               	bsf	213,0,c	;volatile
 10792  006B60                     
 10793                           ;timer.c: 22:     T0CONbits.T0PS1 = 1;
 10794  006B60  82D5               	bsf	213,1,c	;volatile
 10795  006B62                     
 10796                           ;timer.c: 23:     T0CONbits.T0PS2 = 1;
 10797  006B62  84D5               	bsf	213,2,c	;volatile
 10798  006B64                     
 10799                           ;timer.c: 24:     T0CONbits.TMR0ON = 1;
 10800  006B64  8ED5               	bsf	213,7,c	;volatile
 10801  006B66  0012               	return		;funcret
 10802  006B68  FFFF               	dw	65535	; errata NOP
 10803  006B6A                     __end_of_init_timer_0:
 10804                           	callstack 0
 10805                           
 10806 ;; *************** function _init_stepper *****************
 10807 ;; Defined at:
 10808 ;;		line 4 in file "stepper_motor.c"
 10809 ;; Parameters:    Size  Location     Type
 10810 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 10811 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
 10812 ;;  current_coil    2    2[COMRAM] int 
 10813 ;;  step_counter    2    4[COMRAM] int 
 10814 ;;  direction       2    6[COMRAM] int 
 10815 ;;  hex_coil_reg    2    8[COMRAM] PTR int 
 10816 ;;		 -> hex_end_effector_values(8), hex_joint_values(8), 
 10817 ;; Auto vars:     Size  Location     Type
 10818 ;;  i               2   14[COMRAM] int 
 10819 ;; Return value:  Size  Location     Type
 10820 ;;                  1    wreg      void 
 10821 ;; Registers used:
 10822 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10823 ;; Tracked objects:
 10824 ;;		On entry : 0/0
 10825 ;;		On exit  : 0/0
 10826 ;;		Unchanged: 0/0
 10827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10828 ;;      Params:        10       0       0       0       0       0       0
 10829 ;;      Locals:         2       0       0       0       0       0       0
 10830 ;;      Temps:          4       0       0       0       0       0       0
 10831 ;;      Totals:        16       0       0       0       0       0       0
 10832 ;;Total ram usage:       16 bytes
 10833 ;; Hardware stack levels used:    1
 10834 ;; Hardware stack levels required when called:    1
 10835 ;; This function calls:
 10836 ;;		Nothing
 10837 ;; This function is called by:
 10838 ;;		_main
 10839 ;; This function uses a non-reentrant model
 10840 ;;
 10841                           
 10842                           	psect	text43
 10843  0072BC                     __ptext43:
 10844                           	callstack 0
 10845  0072BC                     _init_stepper:
 10846                           	callstack 0
 10847  0072BC  FFFF               	dw	65535	; assembler added errata NOP
 10848  0072BE                     
 10849                           ;stepper_motor.c: 5:     for (int i = 0; i < 4; i++) {
 10850  0072BE  0E00               	movlw	0
 10851  0072C0  6E10               	movwf	(init_stepper@i+1)^0,c
 10852  0072C2  0E00               	movlw	0
 10853  0072C4  6E0F               	movwf	init_stepper@i^0,c
 10854  0072C6                     l5028:
 10855  0072C6  FFFF               	dw	65535	; assembler added errata NOP
 10856                           
 10857                           ;stepper_motor.c: 6:        stepper_motor -> hex_coil_register_values[i] = hex_coil_regi
      +                          ster_values[i];
 10858  0072C8  90D8               	bcf	status,0,c
 10859  0072CA  340F               	rlcf	init_stepper@i^0,w,c
 10860  0072CC  6ED9               	movwf	fsr2l,c
 10861  0072CE  3410               	rlcf	(init_stepper@i+1)^0,w,c
 10862  0072D0  6EDA               	movwf	fsr2h,c
 10863  0072D2  5009               	movf	init_stepper@hex_coil_register_values^0,w,c
 10864  0072D4  26D9               	addwf	fsr2l,f,c
 10865  0072D6  500A               	movf	(init_stepper@hex_coil_register_values+1)^0,w,c
 10866  0072D8  22DA               	addwfc	fsr2h,f,c
 10867  0072DA  C00F  F00B         	movff	init_stepper@i,??_init_stepper
 10868  0072DE  C010  F00C         	movff	init_stepper@i+1,??_init_stepper+1
 10869  0072E2  90D8               	bcf	status,0,c
 10870  0072E4  360B               	rlcf	??_init_stepper^0,f,c
 10871  0072E6  360C               	rlcf	(??_init_stepper+1)^0,f,c
 10872  0072E8  C001  F00D         	movff	init_stepper@stepper_motor,??_init_stepper+2
 10873  0072EC  C002  F00E         	movff	init_stepper@stepper_motor+1,??_init_stepper+3
 10874  0072F0  500B               	movf	??_init_stepper^0,w,c
 10875  0072F2  260D               	addwf	(??_init_stepper+2)^0,f,c
 10876  0072F4  500C               	movf	(??_init_stepper+1)^0,w,c
 10877  0072F6  220E               	addwfc	(??_init_stepper+3)^0,f,c
 10878  0072F8  0E06               	movlw	6
 10879  0072FA  240D               	addwf	(??_init_stepper+2)^0,w,c
 10880  0072FC  6EE1               	movwf	fsr1l,c
 10881  0072FE  0E00               	movlw	0
 10882  007300  200E               	addwfc	(??_init_stepper+3)^0,w,c
 10883  007302  6EE2               	movwf	fsr1h,c
 10884  007304  CFDE FFE6          	movff	postinc2,postinc1
 10885  007308  CFDD FFE5          	movff	postdec2,postdec1
 10886  00730C                     
 10887                           ;stepper_motor.c: 7:     }
 10888  00730C  4A0F               	infsnz	init_stepper@i^0,f,c
 10889  00730E  2A10               	incf	(init_stepper@i+1)^0,f,c
 10890  007310  BE10               	btfsc	(init_stepper@i+1)^0,7,c
 10891  007312  EF94  F039         	goto	u6161
 10892  007316  5010               	movf	(init_stepper@i+1)^0,w,c
 10893  007318  E10A               	bnz	u6160
 10894  00731A  0E04               	movlw	4
 10895  00731C  5C0F               	subwf	init_stepper@i^0,w,c
 10896  00731E  A0D8               	btfss	status,0,c
 10897  007320  EF94  F039         	goto	u6161
 10898  007324  EF97  F039         	goto	u6160
 10899  007328                     u6161:
 10900  007328  FFFF               	dw	65535	; assembler added errata NOP
 10901  00732A  EF63  F039         	goto	l5028
 10902  00732E                     u6160:
 10903  00732E  FFFF               	dw	65535	; assembler added errata NOP
 10904  007330                     
 10905                           ;stepper_motor.c: 8:     stepper_motor -> current_coil = current_coil;
 10906  007330  C001  FFD9         	movff	init_stepper@stepper_motor,fsr2l
 10907  007334  C002  FFDA         	movff	init_stepper@stepper_motor+1,fsr2h
 10908  007338  C003  FFDE         	movff	init_stepper@current_coil,postinc2
 10909  00733C  C004  FFDD         	movff	init_stepper@current_coil+1,postdec2
 10910  007340                     
 10911                           ;stepper_motor.c: 9:     stepper_motor -> step_counter = step_counter;
 10912  007340  EE20 F002          	lfsr	2,2
 10913  007344  5001               	movf	init_stepper@stepper_motor^0,w,c
 10914  007346  26D9               	addwf	fsr2l,f,c
 10915  007348  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
 10916  00734A  22DA               	addwfc	fsr2h,f,c
 10917  00734C  C005  FFDE         	movff	init_stepper@step_counter,postinc2
 10918  007350  C006  FFDD         	movff	init_stepper@step_counter+1,postdec2
 10919  007354                     
 10920                           ;stepper_motor.c: 10:     stepper_motor -> direction = direction;
 10921  007354  EE20 F004          	lfsr	2,4
 10922  007358  5001               	movf	init_stepper@stepper_motor^0,w,c
 10923  00735A  26D9               	addwf	fsr2l,f,c
 10924  00735C  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
 10925  00735E  22DA               	addwfc	fsr2h,f,c
 10926  007360  C007  FFDE         	movff	init_stepper@direction,postinc2
 10927  007364  C008  FFDD         	movff	init_stepper@direction+1,postdec2
 10928  007368  0012               	return		;funcret
 10929  00736A  FFFF               	dw	65535	; errata NOP
 10930  00736C                     __end_of_init_stepper:
 10931                           	callstack 0
 10932                           
 10933 ;; *************** function _init_interrupts *****************
 10934 ;; Defined at:
 10935 ;;		line 81 in file "init_PIC.c"
 10936 ;; Parameters:    Size  Location     Type
 10937 ;;		None
 10938 ;; Auto vars:     Size  Location     Type
 10939 ;;		None
 10940 ;; Return value:  Size  Location     Type
 10941 ;;                  1    wreg      void 
 10942 ;; Registers used:
 10943 ;;		None
 10944 ;; Tracked objects:
 10945 ;;		On entry : 0/0
 10946 ;;		On exit  : 0/0
 10947 ;;		Unchanged: 0/0
 10948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10949 ;;      Params:         0       0       0       0       0       0       0
 10950 ;;      Locals:         0       0       0       0       0       0       0
 10951 ;;      Temps:          0       0       0       0       0       0       0
 10952 ;;      Totals:         0       0       0       0       0       0       0
 10953 ;;Total ram usage:        0 bytes
 10954 ;; Hardware stack levels used:    1
 10955 ;; Hardware stack levels required when called:    1
 10956 ;; This function calls:
 10957 ;;		Nothing
 10958 ;; This function is called by:
 10959 ;;		_main
 10960 ;; This function uses a non-reentrant model
 10961 ;;
 10962                           
 10963                           	psect	text44
 10964  006AAE                     __ptext44:
 10965                           	callstack 0
 10966  006AAE                     _init_interrupts:
 10967                           	callstack 0
 10968  006AAE  FFFF               	dw	65535	; assembler added errata NOP
 10969  006AB0                     
 10970                           ;init_PIC.c: 83:     PIR1bits.RCIF = 0;
 10971  006AB0  9A9E               	bcf	158,5,c	;volatile
 10972                           
 10973                           ;init_PIC.c: 84:     PIE1bits.RCIE = 1;
 10974  006AB2  8A9D               	bsf	157,5,c	;volatile
 10975                           
 10976                           ;init_PIC.c: 85:     INTCONbits.PEIE = 1;
 10977  006AB4  8CF2               	bsf	242,6,c	;volatile
 10978  006AB6  0012               	return		;funcret
 10979  006AB8  FFFF               	dw	65535	; errata NOP
 10980  006ABA                     __end_of_init_interrupts:
 10981                           	callstack 0
 10982                           
 10983 ;; *************** function _init_ccp1 *****************
 10984 ;; Defined at:
 10985 ;;		line 41 in file "timer.c"
 10986 ;; Parameters:    Size  Location     Type
 10987 ;;		None
 10988 ;; Auto vars:     Size  Location     Type
 10989 ;;		None
 10990 ;; Return value:  Size  Location     Type
 10991 ;;                  1    wreg      void 
 10992 ;; Registers used:
 10993 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10994 ;; Tracked objects:
 10995 ;;		On entry : 0/0
 10996 ;;		On exit  : 0/0
 10997 ;;		Unchanged: 0/0
 10998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10999 ;;      Params:         0       0       0       0       0       0       0
 11000 ;;      Locals:         0       0       0       0       0       0       0
 11001 ;;      Temps:          0       0       0       0       0       0       0
 11002 ;;      Totals:         0       0       0       0       0       0       0
 11003 ;;Total ram usage:        0 bytes
 11004 ;; Hardware stack levels used:    1
 11005 ;; Hardware stack levels required when called:    3
 11006 ;; This function calls:
 11007 ;;		_update_pwm_duty_ccp1
 11008 ;; This function is called by:
 11009 ;;		_main
 11010 ;; This function uses a non-reentrant model
 11011 ;;
 11012                           
 11013                           	psect	text45
 11014  006B26                     __ptext45:
 11015                           	callstack 0
 11016  006B26                     _init_ccp1:
 11017                           	callstack 0
 11018  006B26  FFFF               	dw	65535	; assembler added errata NOP
 11019  006B28                     
 11020                           ;timer.c: 42:     CCP1CON = 0x00;
 11021  006B28  0E00               	movlw	0
 11022  006B2A  6EBD               	movwf	189,c	;volatile
 11023  006B2C                     
 11024                           ;timer.c: 45:     update_pwm_duty_ccp1(5e-3);
 11025  006B2C  0E0A               	movlw	10
 11026  006B2E  6E6F               	movwf	update_pwm_duty_ccp1@time_up^0,c
 11027  006B30  0ED7               	movlw	215
 11028  006B32  6E70               	movwf	(update_pwm_duty_ccp1@time_up+1)^0,c
 11029  006B34  0EA3               	movlw	163
 11030  006B36  6E71               	movwf	(update_pwm_duty_ccp1@time_up+2)^0,c
 11031  006B38  0E3B               	movlw	59
 11032  006B3A  6E72               	movwf	(update_pwm_duty_ccp1@time_up+3)^0,c
 11033  006B3C  ECB6  F039         	call	_update_pwm_duty_ccp1	;wreg free
 11034  006B40                     
 11035                           ;timer.c: 48:     CCP1CONbits.CCP1M3 = 1;
 11036  006B40  86BD               	bsf	189,3,c	;volatile
 11037  006B42                     
 11038                           ;timer.c: 49:     CCP1CONbits.CCP1M2 = 1;
 11039  006B42  84BD               	bsf	189,2,c	;volatile
 11040  006B44  0012               	return		;funcret
 11041  006B46  FFFF               	dw	65535	; errata NOP
 11042  006B48                     __end_of_init_ccp1:
 11043                           	callstack 0
 11044                           
 11045 ;; *************** function _update_pwm_duty_ccp1 *****************
 11046 ;; Defined at:
 11047 ;;		line 53 in file "timer.c"
 11048 ;; Parameters:    Size  Location     Type
 11049 ;;  time_up         4  110[COMRAM] void 
 11050 ;; Auto vars:     Size  Location     Type
 11051 ;;  new_duty        2  116[COMRAM] unsigned short 
 11052 ;;  lsbs_duty       1  118[COMRAM] unsigned char 
 11053 ;; Return value:  Size  Location     Type
 11054 ;;                  1    wreg      void 
 11055 ;; Registers used:
 11056 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11057 ;; Tracked objects:
 11058 ;;		On entry : 0/0
 11059 ;;		On exit  : 0/0
 11060 ;;		Unchanged: 0/0
 11061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11062 ;;      Params:         4       0       0       0       0       0       0
 11063 ;;      Locals:         3       0       0       0       0       0       0
 11064 ;;      Temps:          2       0       0       0       0       0       0
 11065 ;;      Totals:         9       0       0       0       0       0       0
 11066 ;;Total ram usage:        9 bytes
 11067 ;; Hardware stack levels used:    1
 11068 ;; Hardware stack levels required when called:    2
 11069 ;; This function calls:
 11070 ;;		___fldiv
 11071 ;;		___flmul
 11072 ;;		___fltol
 11073 ;; This function is called by:
 11074 ;;		_init_ccp1
 11075 ;; This function uses a non-reentrant model
 11076 ;;
 11077                           
 11078                           	psect	text46
 11079  00736C                     __ptext46:
 11080                           	callstack 0
 11081  00736C                     _update_pwm_duty_ccp1:
 11082                           	callstack 0
 11083  00736C  FFFF               	dw	65535	; assembler added errata NOP
 11084  00736E                     
 11085                           ;timer.c: 56:     uint16_t new_duty;;timer.c: 57:     uint8_t lsbs_duty;;timer.c: 59:   
      +                            new_duty = (0.001) / (t_osc * tmr2_prescaler);
 11086  00736E  0EBD               	movlw	189
 11087  007370  6E05               	movwf	___flmul@a^0,c
 11088  007372  0E37               	movlw	55
 11089  007374  6E06               	movwf	(___flmul@a+1)^0,c
 11090  007376  0E86               	movlw	134
 11091  007378  6E07               	movwf	(___flmul@a+2)^0,c
 11092  00737A  0E35               	movlw	53
 11093  00737C  6E08               	movwf	(___flmul@a+3)^0,c
 11094  00737E  C0D7  F001         	movff	_tmr2_prescaler,___flmul@b
 11095  007382  C0D8  F002         	movff	_tmr2_prescaler+1,___flmul@b+1
 11096  007386  C0D9  F003         	movff	_tmr2_prescaler+2,___flmul@b+2
 11097  00738A  C0DA  F004         	movff	_tmr2_prescaler+3,___flmul@b+3
 11098  00738E  EC11  F010         	call	___flmul	;wreg free
 11099  007392  C001  F01E         	movff	?___flmul,___fldiv@a
 11100  007396  C002  F01F         	movff	?___flmul+1,___fldiv@a+1
 11101  00739A  C003  F020         	movff	?___flmul+2,___fldiv@a+2
 11102  00739E  C004  F021         	movff	?___flmul+3,___fldiv@a+3
 11103  0073A2  0E6F               	movlw	111
 11104  0073A4  6E1A               	movwf	___fldiv@b^0,c
 11105  0073A6  0E12               	movlw	18
 11106  0073A8  6E1B               	movwf	(___fldiv@b+1)^0,c
 11107  0073AA  0E83               	movlw	131
 11108  0073AC  6E1C               	movwf	(___fldiv@b+2)^0,c
 11109  0073AE  0E3A               	movlw	58
 11110  0073B0  6E1D               	movwf	(___fldiv@b+3)^0,c
 11111  0073B2  EC63  F012         	call	___fldiv	;wreg free
 11112  0073B6  C01A  F065         	movff	?___fldiv,___fltol@f1
 11113  0073BA  C01B  F066         	movff	?___fldiv+1,___fltol@f1+1
 11114  0073BE  C01C  F067         	movff	?___fldiv+2,___fltol@f1+2
 11115  0073C2  C01D  F068         	movff	?___fldiv+3,___fltol@f1+3
 11116  0073C6  ECDC  F03E         	call	___fltol	;wreg free
 11117  0073CA  C065  F075         	movff	?___fltol,update_pwm_duty_ccp1@new_duty
 11118  0073CE  C066  F076         	movff	?___fltol+1,update_pwm_duty_ccp1@new_duty+1
 11119  0073D2                     
 11120                           ;timer.c: 60:     lsbs_duty = (uint8_t) new_duty;
 11121  0073D2  C075  F077         	movff	update_pwm_duty_ccp1@new_duty,update_pwm_duty_ccp1@lsbs_duty
 11122  0073D6                     
 11123                           ;timer.c: 64:     if (lsbs_duty & 0x01) CCP1CON |= (1u << 4);
 11124  0073D6  A077               	btfss	update_pwm_duty_ccp1@lsbs_duty^0,0,c
 11125  0073D8  EFF0  F039         	goto	u6061
 11126  0073DC  EFF3  F039         	goto	u6060
 11127  0073E0                     u6061:
 11128  0073E0  FFFF               	dw	65535	; assembler added errata NOP
 11129  0073E2  EFF7  F039         	goto	l4904
 11130  0073E6                     u6060:
 11131  0073E6  FFFF               	dw	65535	; assembler added errata NOP
 11132  0073E8  88BD               	bsf	189,4,c	;volatile
 11133  0073EA  EFF9  F039         	goto	l4906
 11134  0073EE                     l4904:
 11135  0073EE  FFFF               	dw	65535	; assembler added errata NOP
 11136  0073F0  98BD               	bcf	189,4,c	;volatile
 11137  0073F2                     l4906:
 11138  0073F2  FFFF               	dw	65535	; assembler added errata NOP
 11139                           
 11140                           ;timer.c: 67:     if (lsbs_duty & 0x02) CCP1CON |= (1u << 5);
 11141  0073F4  A277               	btfss	update_pwm_duty_ccp1@lsbs_duty^0,1,c
 11142  0073F6  EFFF  F039         	goto	u6071
 11143  0073FA  EF02  F03A         	goto	u6070
 11144  0073FE                     u6071:
 11145  0073FE  FFFF               	dw	65535	; assembler added errata NOP
 11146  007400  EF06  F03A         	goto	l4910
 11147  007404                     u6070:
 11148  007404  FFFF               	dw	65535	; assembler added errata NOP
 11149  007406  8ABD               	bsf	189,5,c	;volatile
 11150  007408  EF08  F03A         	goto	l4912
 11151  00740C                     l4910:
 11152  00740C  FFFF               	dw	65535	; assembler added errata NOP
 11153  00740E  9ABD               	bcf	189,5,c	;volatile
 11154  007410                     l4912:
 11155  007410  FFFF               	dw	65535	; assembler added errata NOP
 11156                           
 11157                           ;timer.c: 71:     CCPR1L = (uint8_t) (new_duty >> 2);
 11158  007412  C075  F073         	movff	update_pwm_duty_ccp1@new_duty,??_update_pwm_duty_ccp1
 11159  007416  C076  F074         	movff	update_pwm_duty_ccp1@new_duty+1,??_update_pwm_duty_ccp1+1
 11160  00741A  90D8               	bcf	status,0,c
 11161  00741C  3274               	rrcf	(??_update_pwm_duty_ccp1+1)^0,f,c
 11162  00741E  3273               	rrcf	??_update_pwm_duty_ccp1^0,f,c
 11163  007420  90D8               	bcf	status,0,c
 11164  007422  3274               	rrcf	(??_update_pwm_duty_ccp1+1)^0,f,c
 11165  007424  3273               	rrcf	??_update_pwm_duty_ccp1^0,f,c
 11166  007426  5073               	movf	??_update_pwm_duty_ccp1^0,w,c
 11167  007428  6EBE               	movwf	190,c	;volatile
 11168  00742A  0012               	return		;funcret
 11169  00742C  FFFF               	dw	65535	; errata NOP
 11170  00742E                     __end_of_update_pwm_duty_ccp1:
 11171                           	callstack 0
 11172                           
 11173 ;; *************** function ___fldiv *****************
 11174 ;; Defined at:
 11175 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 11176 ;; Parameters:    Size  Location     Type
 11177 ;;  b               4   25[COMRAM] void 
 11178 ;;  a               4   29[COMRAM] void 
 11179 ;; Auto vars:     Size  Location     Type
 11180 ;;  grs             4   44[COMRAM] unsigned long 
 11181 ;;  rem             4   37[COMRAM] unsigned long 
 11182 ;;  new_exp         2   42[COMRAM] short 
 11183 ;;  aexp            1   49[COMRAM] unsigned char 
 11184 ;;  bexp            1   48[COMRAM] unsigned char 
 11185 ;;  sign            1   41[COMRAM] unsigned char 
 11186 ;; Return value:  Size  Location     Type
 11187 ;;                  4   25[COMRAM] unsigned char 
 11188 ;; Registers used:
 11189 ;;		wreg, status,2, status,0
 11190 ;; Tracked objects:
 11191 ;;		On entry : 0/0
 11192 ;;		On exit  : 0/0
 11193 ;;		Unchanged: 0/0
 11194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11195 ;;      Params:         8       0       0       0       0       0       0
 11196 ;;      Locals:        13       0       0       0       0       0       0
 11197 ;;      Temps:          4       0       0       0       0       0       0
 11198 ;;      Totals:        25       0       0       0       0       0       0
 11199 ;;Total ram usage:       25 bytes
 11200 ;; Hardware stack levels used:    1
 11201 ;; Hardware stack levels required when called:    1
 11202 ;; This function calls:
 11203 ;;		Nothing
 11204 ;; This function is called by:
 11205 ;;		_init_timer_2
 11206 ;;		_update_pwm_duty_ccp1
 11207 ;; This function uses a non-reentrant model
 11208 ;;
 11209                           
 11210                           	psect	text47
 11211  0024C6                     __ptext47:
 11212                           	callstack 0
 11213  0024C6                     ___fldiv:
 11214                           	callstack 0
 11215  0024C6  FFFF               	dw	65535	; assembler added errata NOP
 11216  0024C8  501D               	movf	(___fldiv@b+3)^0,w,c
 11217  0024CA  0B80               	andlw	128
 11218  0024CC  6E2A               	movwf	___fldiv@sign^0,c
 11219  0024CE  501D               	movf	(___fldiv@b+3)^0,w,c
 11220  0024D0  241D               	addwf	(___fldiv@b+3)^0,w,c
 11221  0024D2  6E31               	movwf	___fldiv@bexp^0,c
 11222  0024D4  AE1C               	btfss	(___fldiv@b+2)^0,7,c
 11223  0024D6  EF6F  F012         	goto	u5411
 11224  0024DA  EF72  F012         	goto	u5410
 11225  0024DE                     u5411:
 11226  0024DE  FFFF               	dw	65535	; assembler added errata NOP
 11227  0024E0  EF74  F012         	goto	l4484
 11228  0024E4                     u5410:
 11229  0024E4  FFFF               	dw	65535	; assembler added errata NOP
 11230  0024E6  8031               	bsf	___fldiv@bexp^0,0,c
 11231  0024E8                     l4484:
 11232  0024E8  FFFF               	dw	65535	; assembler added errata NOP
 11233  0024EA  5031               	movf	___fldiv@bexp^0,w,c
 11234  0024EC  B4D8               	btfsc	status,2,c
 11235  0024EE  EF7B  F012         	goto	u5421
 11236  0024F2  EF7E  F012         	goto	u5420
 11237  0024F6                     u5421:
 11238  0024F6  FFFF               	dw	65535	; assembler added errata NOP
 11239  0024F8  EF97  F012         	goto	l4494
 11240  0024FC                     u5420:
 11241  0024FC  FFFF               	dw	65535	; assembler added errata NOP
 11242  0024FE  2831               	incf	___fldiv@bexp^0,w,c
 11243  002500  A4D8               	btfss	status,2,c
 11244  002502  EF85  F012         	goto	u5431
 11245  002506  EF88  F012         	goto	u5430
 11246  00250A                     u5431:
 11247  00250A  FFFF               	dw	65535	; assembler added errata NOP
 11248  00250C  EF91  F012         	goto	l4490
 11249  002510                     u5430:
 11250  002510  FFFF               	dw	65535	; assembler added errata NOP
 11251  002512  0E00               	movlw	0
 11252  002514  6E1A               	movwf	___fldiv@b^0,c
 11253  002516  0E00               	movlw	0
 11254  002518  6E1B               	movwf	(___fldiv@b+1)^0,c
 11255  00251A  0E00               	movlw	0
 11256  00251C  6E1C               	movwf	(___fldiv@b+2)^0,c
 11257  00251E  0E00               	movlw	0
 11258  002520  6E1D               	movwf	(___fldiv@b+3)^0,c
 11259  002522                     l4490:
 11260  002522  FFFF               	dw	65535	; assembler added errata NOP
 11261  002524  8E1C               	bsf	(___fldiv@b+2)^0,7,c
 11262  002526  0E00               	movlw	0
 11263  002528  6E1D               	movwf	(___fldiv@b+3)^0,c
 11264  00252A  EFA0  F012         	goto	l4496
 11265  00252E                     l4494:
 11266  00252E  FFFF               	dw	65535	; assembler added errata NOP
 11267  002530  0E00               	movlw	0
 11268  002532  6E1A               	movwf	___fldiv@b^0,c
 11269  002534  0E00               	movlw	0
 11270  002536  6E1B               	movwf	(___fldiv@b+1)^0,c
 11271  002538  0E00               	movlw	0
 11272  00253A  6E1C               	movwf	(___fldiv@b+2)^0,c
 11273  00253C  0E00               	movlw	0
 11274  00253E  6E1D               	movwf	(___fldiv@b+3)^0,c
 11275  002540                     l4496:
 11276  002540  FFFF               	dw	65535	; assembler added errata NOP
 11277  002542  5021               	movf	(___fldiv@a+3)^0,w,c
 11278  002544  0B80               	andlw	128
 11279  002546  1A2A               	xorwf	___fldiv@sign^0,f,c
 11280  002548  5021               	movf	(___fldiv@a+3)^0,w,c
 11281  00254A  2421               	addwf	(___fldiv@a+3)^0,w,c
 11282  00254C  6E32               	movwf	___fldiv@aexp^0,c
 11283  00254E  AE20               	btfss	(___fldiv@a+2)^0,7,c
 11284  002550  EFAC  F012         	goto	u5441
 11285  002554  EFAF  F012         	goto	u5440
 11286  002558                     u5441:
 11287  002558  FFFF               	dw	65535	; assembler added errata NOP
 11288  00255A  EFB1  F012         	goto	l4504
 11289  00255E                     u5440:
 11290  00255E  FFFF               	dw	65535	; assembler added errata NOP
 11291  002560  8032               	bsf	___fldiv@aexp^0,0,c
 11292  002562                     l4504:
 11293  002562  FFFF               	dw	65535	; assembler added errata NOP
 11294  002564  5032               	movf	___fldiv@aexp^0,w,c
 11295  002566  B4D8               	btfsc	status,2,c
 11296  002568  EFB8  F012         	goto	u5451
 11297  00256C  EFBB  F012         	goto	u5450
 11298  002570                     u5451:
 11299  002570  FFFF               	dw	65535	; assembler added errata NOP
 11300  002572  EFD4  F012         	goto	l4514
 11301  002576                     u5450:
 11302  002576  FFFF               	dw	65535	; assembler added errata NOP
 11303  002578  2832               	incf	___fldiv@aexp^0,w,c
 11304  00257A  A4D8               	btfss	status,2,c
 11305  00257C  EFC2  F012         	goto	u5461
 11306  002580  EFC5  F012         	goto	u5460
 11307  002584                     u5461:
 11308  002584  FFFF               	dw	65535	; assembler added errata NOP
 11309  002586  EFCE  F012         	goto	l4510
 11310  00258A                     u5460:
 11311  00258A  FFFF               	dw	65535	; assembler added errata NOP
 11312  00258C  0E00               	movlw	0
 11313  00258E  6E1E               	movwf	___fldiv@a^0,c
 11314  002590  0E00               	movlw	0
 11315  002592  6E1F               	movwf	(___fldiv@a+1)^0,c
 11316  002594  0E00               	movlw	0
 11317  002596  6E20               	movwf	(___fldiv@a+2)^0,c
 11318  002598  0E00               	movlw	0
 11319  00259A  6E21               	movwf	(___fldiv@a+3)^0,c
 11320  00259C                     l4510:
 11321  00259C  FFFF               	dw	65535	; assembler added errata NOP
 11322  00259E  8E20               	bsf	(___fldiv@a+2)^0,7,c
 11323  0025A0  0E00               	movlw	0
 11324  0025A2  6E21               	movwf	(___fldiv@a+3)^0,c
 11325  0025A4  EFDD  F012         	goto	l4516
 11326  0025A8                     l4514:
 11327  0025A8  FFFF               	dw	65535	; assembler added errata NOP
 11328  0025AA  0E00               	movlw	0
 11329  0025AC  6E1E               	movwf	___fldiv@a^0,c
 11330  0025AE  0E00               	movlw	0
 11331  0025B0  6E1F               	movwf	(___fldiv@a+1)^0,c
 11332  0025B2  0E00               	movlw	0
 11333  0025B4  6E20               	movwf	(___fldiv@a+2)^0,c
 11334  0025B6  0E00               	movlw	0
 11335  0025B8  6E21               	movwf	(___fldiv@a+3)^0,c
 11336  0025BA                     l4516:
 11337  0025BA  FFFF               	dw	65535	; assembler added errata NOP
 11338  0025BC  501E               	movf	___fldiv@a^0,w,c
 11339  0025BE  101F               	iorwf	(___fldiv@a+1)^0,w,c
 11340  0025C0  1020               	iorwf	(___fldiv@a+2)^0,w,c
 11341  0025C2  1021               	iorwf	(___fldiv@a+3)^0,w,c
 11342  0025C4  A4D8               	btfss	status,2,c
 11343  0025C6  EFE7  F012         	goto	u5471
 11344  0025CA  EFEA  F012         	goto	u5470
 11345  0025CE                     u5471:
 11346  0025CE  FFFF               	dw	65535	; assembler added errata NOP
 11347  0025D0  EF04  F013         	goto	l4528
 11348  0025D4                     u5470:
 11349  0025D4  FFFF               	dw	65535	; assembler added errata NOP
 11350  0025D6  0E00               	movlw	0
 11351  0025D8  6E1A               	movwf	___fldiv@b^0,c
 11352  0025DA  0E00               	movlw	0
 11353  0025DC  6E1B               	movwf	(___fldiv@b+1)^0,c
 11354  0025DE  0E00               	movlw	0
 11355  0025E0  6E1C               	movwf	(___fldiv@b+2)^0,c
 11356  0025E2  0E00               	movlw	0
 11357  0025E4  6E1D               	movwf	(___fldiv@b+3)^0,c
 11358  0025E6  0E80               	movlw	128
 11359  0025E8  121C               	iorwf	(___fldiv@b+2)^0,f,c
 11360  0025EA  0E7F               	movlw	127
 11361  0025EC  121D               	iorwf	(___fldiv@b+3)^0,f,c
 11362  0025EE                     l4522:
 11363  0025EE  FFFF               	dw	65535	; assembler added errata NOP
 11364  0025F0  502A               	movf	___fldiv@sign^0,w,c
 11365  0025F2  121D               	iorwf	(___fldiv@b+3)^0,f,c
 11366  0025F4  C01A  F01A         	movff	___fldiv@b,?___fldiv
 11367  0025F8  C01B  F01B         	movff	___fldiv@b+1,?___fldiv+1
 11368  0025FC  C01C  F01C         	movff	___fldiv@b+2,?___fldiv+2
 11369  002600  C01D  F01D         	movff	___fldiv@b+3,?___fldiv+3
 11370  002604  EF79  F014         	goto	l910
 11371  002608                     l4528:
 11372  002608  FFFF               	dw	65535	; assembler added errata NOP
 11373  00260A  5031               	movf	___fldiv@bexp^0,w,c
 11374  00260C  A4D8               	btfss	status,2,c
 11375  00260E  EF0B  F013         	goto	u5481
 11376  002612  EF0E  F013         	goto	u5480
 11377  002616                     u5481:
 11378  002616  FFFF               	dw	65535	; assembler added errata NOP
 11379  002618  EF19  F013         	goto	l4536
 11380  00261C                     u5480:
 11381  00261C  FFFF               	dw	65535	; assembler added errata NOP
 11382  00261E  0E00               	movlw	0
 11383  002620  6E1A               	movwf	?___fldiv^0,c
 11384  002622  0E00               	movlw	0
 11385  002624  6E1B               	movwf	(?___fldiv+1)^0,c
 11386  002626  0E00               	movlw	0
 11387  002628  6E1C               	movwf	(?___fldiv+2)^0,c
 11388  00262A  0E00               	movlw	0
 11389  00262C  6E1D               	movwf	(?___fldiv+3)^0,c
 11390  00262E  EF79  F014         	goto	l910
 11391  002632                     l4536:
 11392  002632  FFFF               	dw	65535	; assembler added errata NOP
 11393  002634  5032               	movf	___fldiv@aexp^0,w,c
 11394  002636  C031  F022         	movff	___fldiv@bexp,??___fldiv
 11395  00263A  6A23               	clrf	(??___fldiv+1)^0,c
 11396  00263C  5E22               	subwf	??___fldiv^0,f,c
 11397  00263E  0E00               	movlw	0
 11398  002640  5A23               	subwfb	(??___fldiv+1)^0,f,c
 11399  002642  0E7F               	movlw	127
 11400  002644  2422               	addwf	??___fldiv^0,w,c
 11401  002646  6E2B               	movwf	___fldiv@new_exp^0,c
 11402  002648  0E00               	movlw	0
 11403  00264A  2023               	addwfc	(??___fldiv+1)^0,w,c
 11404  00264C  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
 11405  00264E  C01A  F026         	movff	___fldiv@b,___fldiv@rem
 11406  002652  C01B  F027         	movff	___fldiv@b+1,___fldiv@rem+1
 11407  002656  C01C  F028         	movff	___fldiv@b+2,___fldiv@rem+2
 11408  00265A  C01D  F029         	movff	___fldiv@b+3,___fldiv@rem+3
 11409  00265E  0E00               	movlw	0
 11410  002660  6E1A               	movwf	___fldiv@b^0,c
 11411  002662  0E00               	movlw	0
 11412  002664  6E1B               	movwf	(___fldiv@b+1)^0,c
 11413  002666  0E00               	movlw	0
 11414  002668  6E1C               	movwf	(___fldiv@b+2)^0,c
 11415  00266A  0E00               	movlw	0
 11416  00266C  6E1D               	movwf	(___fldiv@b+3)^0,c
 11417  00266E  0E00               	movlw	0
 11418  002670  6E2D               	movwf	___fldiv@grs^0,c
 11419  002672  0E00               	movlw	0
 11420  002674  6E2E               	movwf	(___fldiv@grs+1)^0,c
 11421  002676  0E00               	movlw	0
 11422  002678  6E2F               	movwf	(___fldiv@grs+2)^0,c
 11423  00267A  0E00               	movlw	0
 11424  00267C  6E30               	movwf	(___fldiv@grs+3)^0,c
 11425  00267E  0E00               	movlw	0
 11426  002680  6E32               	movwf	___fldiv@aexp^0,c
 11427  002682  EF85  F013         	goto	l912
 11428  002686                     l4546:
 11429  002686  FFFF               	dw	65535	; assembler added errata NOP
 11430  002688  5032               	movf	___fldiv@aexp^0,w,c
 11431  00268A  B4D8               	btfsc	status,2,c
 11432  00268C  EF4A  F013         	goto	u5491
 11433  002690  EF4D  F013         	goto	u5490
 11434  002694                     u5491:
 11435  002694  FFFF               	dw	65535	; assembler added errata NOP
 11436  002696  EF68  F013         	goto	l4554
 11437  00269A                     u5490:
 11438  00269A  FFFF               	dw	65535	; assembler added errata NOP
 11439  00269C  90D8               	bcf	status,0,c
 11440  00269E  3626               	rlcf	___fldiv@rem^0,f,c
 11441  0026A0  3627               	rlcf	(___fldiv@rem+1)^0,f,c
 11442  0026A2  3628               	rlcf	(___fldiv@rem+2)^0,f,c
 11443  0026A4  3629               	rlcf	(___fldiv@rem+3)^0,f,c
 11444  0026A6  90D8               	bcf	status,0,c
 11445  0026A8  361A               	rlcf	___fldiv@b^0,f,c
 11446  0026AA  361B               	rlcf	(___fldiv@b+1)^0,f,c
 11447  0026AC  361C               	rlcf	(___fldiv@b+2)^0,f,c
 11448  0026AE  361D               	rlcf	(___fldiv@b+3)^0,f,c
 11449  0026B0  AE30               	btfss	(___fldiv@grs+3)^0,7,c
 11450  0026B2  EF5D  F013         	goto	u5501
 11451  0026B6  EF60  F013         	goto	u5500
 11452  0026BA                     u5501:
 11453  0026BA  FFFF               	dw	65535	; assembler added errata NOP
 11454  0026BC  EF62  F013         	goto	l915
 11455  0026C0                     u5500:
 11456  0026C0  FFFF               	dw	65535	; assembler added errata NOP
 11457  0026C2  801A               	bsf	___fldiv@b^0,0,c
 11458  0026C4                     l915:
 11459  0026C4  FFFF               	dw	65535	; assembler added errata NOP
 11460  0026C6  90D8               	bcf	status,0,c
 11461  0026C8  362D               	rlcf	___fldiv@grs^0,f,c
 11462  0026CA  362E               	rlcf	(___fldiv@grs+1)^0,f,c
 11463  0026CC  362F               	rlcf	(___fldiv@grs+2)^0,f,c
 11464  0026CE  3630               	rlcf	(___fldiv@grs+3)^0,f,c
 11465  0026D0                     l4554:
 11466  0026D0  FFFF               	dw	65535	; assembler added errata NOP
 11467  0026D2  501E               	movf	___fldiv@a^0,w,c
 11468  0026D4  5C26               	subwf	___fldiv@rem^0,w,c
 11469  0026D6  501F               	movf	(___fldiv@a+1)^0,w,c
 11470  0026D8  5827               	subwfb	(___fldiv@rem+1)^0,w,c
 11471  0026DA  5020               	movf	(___fldiv@a+2)^0,w,c
 11472  0026DC  5828               	subwfb	(___fldiv@rem+2)^0,w,c
 11473  0026DE  5021               	movf	(___fldiv@a+3)^0,w,c
 11474  0026E0  5829               	subwfb	(___fldiv@rem+3)^0,w,c
 11475  0026E2  A0D8               	btfss	status,0,c
 11476  0026E4  EF76  F013         	goto	u5511
 11477  0026E8  EF79  F013         	goto	u5510
 11478  0026EC                     u5511:
 11479  0026EC  FFFF               	dw	65535	; assembler added errata NOP
 11480  0026EE  EF83  F013         	goto	l4560
 11481  0026F2                     u5510:
 11482  0026F2  FFFF               	dw	65535	; assembler added errata NOP
 11483  0026F4  8C30               	bsf	(___fldiv@grs+3)^0,6,c
 11484  0026F6  501E               	movf	___fldiv@a^0,w,c
 11485  0026F8  5E26               	subwf	___fldiv@rem^0,f,c
 11486  0026FA  501F               	movf	(___fldiv@a+1)^0,w,c
 11487  0026FC  5A27               	subwfb	(___fldiv@rem+1)^0,f,c
 11488  0026FE  5020               	movf	(___fldiv@a+2)^0,w,c
 11489  002700  5A28               	subwfb	(___fldiv@rem+2)^0,f,c
 11490  002702  5021               	movf	(___fldiv@a+3)^0,w,c
 11491  002704  5A29               	subwfb	(___fldiv@rem+3)^0,f,c
 11492  002706                     l4560:
 11493  002706  FFFF               	dw	65535	; assembler added errata NOP
 11494  002708  2A32               	incf	___fldiv@aexp^0,f,c
 11495  00270A                     l912:
 11496  00270A  FFFF               	dw	65535	; assembler added errata NOP
 11497  00270C  0E19               	movlw	25
 11498  00270E  6432               	cpfsgt	___fldiv@aexp^0,c
 11499  002710  EF8C  F013         	goto	u5521
 11500  002714  EF8F  F013         	goto	u5520
 11501  002718                     u5521:
 11502  002718  FFFF               	dw	65535	; assembler added errata NOP
 11503  00271A  EF43  F013         	goto	l4546
 11504  00271E                     u5520:
 11505  00271E  FFFF               	dw	65535	; assembler added errata NOP
 11506  002720  5026               	movf	___fldiv@rem^0,w,c
 11507  002722  1027               	iorwf	(___fldiv@rem+1)^0,w,c
 11508  002724  1028               	iorwf	(___fldiv@rem+2)^0,w,c
 11509  002726  1029               	iorwf	(___fldiv@rem+3)^0,w,c
 11510  002728  B4D8               	btfsc	status,2,c
 11511  00272A  EF99  F013         	goto	u5531
 11512  00272E  EF9C  F013         	goto	u5530
 11513  002732                     u5531:
 11514  002732  FFFF               	dw	65535	; assembler added errata NOP
 11515  002734  EFB9  F013         	goto	l4572
 11516  002738                     u5530:
 11517  002738  FFFF               	dw	65535	; assembler added errata NOP
 11518  00273A  802D               	bsf	___fldiv@grs^0,0,c
 11519  00273C  EFB9  F013         	goto	l4572
 11520  002740                     l4566:
 11521  002740  FFFF               	dw	65535	; assembler added errata NOP
 11522  002742  90D8               	bcf	status,0,c
 11523  002744  361A               	rlcf	___fldiv@b^0,f,c
 11524  002746  361B               	rlcf	(___fldiv@b+1)^0,f,c
 11525  002748  361C               	rlcf	(___fldiv@b+2)^0,f,c
 11526  00274A  361D               	rlcf	(___fldiv@b+3)^0,f,c
 11527  00274C  AE30               	btfss	(___fldiv@grs+3)^0,7,c
 11528  00274E  EFAB  F013         	goto	u5541
 11529  002752  EFAE  F013         	goto	u5540
 11530  002756                     u5541:
 11531  002756  FFFF               	dw	65535	; assembler added errata NOP
 11532  002758  EFB0  F013         	goto	l921
 11533  00275C                     u5540:
 11534  00275C  FFFF               	dw	65535	; assembler added errata NOP
 11535  00275E  801A               	bsf	___fldiv@b^0,0,c
 11536  002760                     l921:
 11537  002760  FFFF               	dw	65535	; assembler added errata NOP
 11538  002762  90D8               	bcf	status,0,c
 11539  002764  362D               	rlcf	___fldiv@grs^0,f,c
 11540  002766  362E               	rlcf	(___fldiv@grs+1)^0,f,c
 11541  002768  362F               	rlcf	(___fldiv@grs+2)^0,f,c
 11542  00276A  3630               	rlcf	(___fldiv@grs+3)^0,f,c
 11543  00276C  062B               	decf	___fldiv@new_exp^0,f,c
 11544  00276E  A0D8               	btfss	status,0,c
 11545  002770  062C               	decf	(___fldiv@new_exp+1)^0,f,c
 11546  002772                     l4572:
 11547  002772  FFFF               	dw	65535	; assembler added errata NOP
 11548  002774  AE1C               	btfss	(___fldiv@b+2)^0,7,c
 11549  002776  EFBF  F013         	goto	u5551
 11550  00277A  EFC2  F013         	goto	u5550
 11551  00277E                     u5551:
 11552  00277E  FFFF               	dw	65535	; assembler added errata NOP
 11553  002780  EFA0  F013         	goto	l4566
 11554  002784                     u5550:
 11555  002784  FFFF               	dw	65535	; assembler added errata NOP
 11556  002786  0E00               	movlw	0
 11557  002788  6E32               	movwf	___fldiv@aexp^0,c
 11558  00278A  AE30               	btfss	(___fldiv@grs+3)^0,7,c
 11559  00278C  EFCA  F013         	goto	u5561
 11560  002790  EFCD  F013         	goto	u5560
 11561  002794                     u5561:
 11562  002794  FFFF               	dw	65535	; assembler added errata NOP
 11563  002796  EFF8  F013         	goto	l923
 11564  00279A                     u5560:
 11565  00279A  FFFF               	dw	65535	; assembler added errata NOP
 11566  00279C  0EFF               	movlw	255
 11567  00279E  142D               	andwf	___fldiv@grs^0,w,c
 11568  0027A0  6E22               	movwf	??___fldiv^0,c
 11569  0027A2  0EFF               	movlw	255
 11570  0027A4  142E               	andwf	(___fldiv@grs+1)^0,w,c
 11571  0027A6  6E23               	movwf	(??___fldiv+1)^0,c
 11572  0027A8  0EFF               	movlw	255
 11573  0027AA  142F               	andwf	(___fldiv@grs+2)^0,w,c
 11574  0027AC  6E24               	movwf	(??___fldiv+2)^0,c
 11575  0027AE  0E7F               	movlw	127
 11576  0027B0  1430               	andwf	(___fldiv@grs+3)^0,w,c
 11577  0027B2  6E25               	movwf	(??___fldiv+3)^0,c
 11578  0027B4  5022               	movf	??___fldiv^0,w,c
 11579  0027B6  1023               	iorwf	(??___fldiv+1)^0,w,c
 11580  0027B8  1024               	iorwf	(??___fldiv+2)^0,w,c
 11581  0027BA  1025               	iorwf	(??___fldiv+3)^0,w,c
 11582  0027BC  B4D8               	btfsc	status,2,c
 11583  0027BE  EFE3  F013         	goto	u5571
 11584  0027C2  EFE6  F013         	goto	u5570
 11585  0027C6                     u5571:
 11586  0027C6  FFFF               	dw	65535	; assembler added errata NOP
 11587  0027C8  EFEC  F013         	goto	l924
 11588  0027CC                     u5570:
 11589  0027CC  FFFF               	dw	65535	; assembler added errata NOP
 11590  0027CE                     l4580:
 11591  0027CE  FFFF               	dw	65535	; assembler added errata NOP
 11592  0027D0  0E01               	movlw	1
 11593  0027D2  6E32               	movwf	___fldiv@aexp^0,c
 11594  0027D4  EFF8  F013         	goto	l923
 11595  0027D8                     l924:
 11596  0027D8  FFFF               	dw	65535	; assembler added errata NOP
 11597  0027DA  A01A               	btfss	___fldiv@b^0,0,c
 11598  0027DC  EFF2  F013         	goto	u5581
 11599  0027E0  EFF5  F013         	goto	u5580
 11600  0027E4                     u5581:
 11601  0027E4  FFFF               	dw	65535	; assembler added errata NOP
 11602  0027E6  EFF8  F013         	goto	l923
 11603  0027EA                     u5580:
 11604  0027EA  FFFF               	dw	65535	; assembler added errata NOP
 11605  0027EC  EFE7  F013         	goto	l4580
 11606  0027F0                     l923:
 11607  0027F0  FFFF               	dw	65535	; assembler added errata NOP
 11608  0027F2  5032               	movf	___fldiv@aexp^0,w,c
 11609  0027F4  B4D8               	btfsc	status,2,c
 11610  0027F6  EFFF  F013         	goto	u5591
 11611  0027FA  EF02  F014         	goto	u5590
 11612  0027FE                     u5591:
 11613  0027FE  FFFF               	dw	65535	; assembler added errata NOP
 11614  002800  EF29  F014         	goto	l4592
 11615  002804                     u5590:
 11616  002804  FFFF               	dw	65535	; assembler added errata NOP
 11617  002806  0E01               	movlw	1
 11618  002808  261A               	addwf	___fldiv@b^0,f,c
 11619  00280A  0E00               	movlw	0
 11620  00280C  221B               	addwfc	(___fldiv@b+1)^0,f,c
 11621  00280E  221C               	addwfc	(___fldiv@b+2)^0,f,c
 11622  002810  221D               	addwfc	(___fldiv@b+3)^0,f,c
 11623  002812  A01D               	btfss	(___fldiv@b+3)^0,0,c
 11624  002814  EF0E  F014         	goto	u5601
 11625  002818  EF11  F014         	goto	u5600
 11626  00281C                     u5601:
 11627  00281C  FFFF               	dw	65535	; assembler added errata NOP
 11628  00281E  EF29  F014         	goto	l4592
 11629  002822                     u5600:
 11630  002822  FFFF               	dw	65535	; assembler added errata NOP
 11631  002824  C01A  F022         	movff	___fldiv@b,??___fldiv
 11632  002828  C01B  F023         	movff	___fldiv@b+1,??___fldiv+1
 11633  00282C  C01C  F024         	movff	___fldiv@b+2,??___fldiv+2
 11634  002830  C01D  F025         	movff	___fldiv@b+3,??___fldiv+3
 11635  002834  3425               	rlcf	(??___fldiv+3)^0,w,c
 11636  002836  3225               	rrcf	(??___fldiv+3)^0,f,c
 11637  002838  3224               	rrcf	(??___fldiv+2)^0,f,c
 11638  00283A  3223               	rrcf	(??___fldiv+1)^0,f,c
 11639  00283C  3222               	rrcf	??___fldiv^0,f,c
 11640  00283E  C022  F01A         	movff	??___fldiv,___fldiv@b
 11641  002842  C023  F01B         	movff	??___fldiv+1,___fldiv@b+1
 11642  002846  C024  F01C         	movff	??___fldiv+2,___fldiv@b+2
 11643  00284A  C025  F01D         	movff	??___fldiv+3,___fldiv@b+3
 11644  00284E  4A2B               	infsnz	___fldiv@new_exp^0,f,c
 11645  002850  2A2C               	incf	(___fldiv@new_exp+1)^0,f,c
 11646  002852                     l4592:
 11647  002852  FFFF               	dw	65535	; assembler added errata NOP
 11648  002854  BE2C               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11649  002856  EF35  F014         	goto	u5611
 11650  00285A  502C               	movf	(___fldiv@new_exp+1)^0,w,c
 11651  00285C  E109               	bnz	u5610
 11652  00285E  282B               	incf	___fldiv@new_exp^0,w,c
 11653  002860  A0D8               	btfss	status,0,c
 11654  002862  EF35  F014         	goto	u5611
 11655  002866  EF38  F014         	goto	u5610
 11656  00286A                     u5611:
 11657  00286A  FFFF               	dw	65535	; assembler added errata NOP
 11658  00286C  EF44  F014         	goto	l4596
 11659  002870                     u5610:
 11660  002870  FFFF               	dw	65535	; assembler added errata NOP
 11661  002872  0E00               	movlw	0
 11662  002874  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
 11663  002876  682B               	setf	___fldiv@new_exp^0,c
 11664  002878  0E00               	movlw	0
 11665  00287A  6E1A               	movwf	___fldiv@b^0,c
 11666  00287C  0E00               	movlw	0
 11667  00287E  6E1B               	movwf	(___fldiv@b+1)^0,c
 11668  002880  0E00               	movlw	0
 11669  002882  6E1C               	movwf	(___fldiv@b+2)^0,c
 11670  002884  0E00               	movlw	0
 11671  002886  6E1D               	movwf	(___fldiv@b+3)^0,c
 11672  002888                     l4596:
 11673  002888  FFFF               	dw	65535	; assembler added errata NOP
 11674  00288A  BE2C               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11675  00288C  EF53  F014         	goto	u5620
 11676  002890  502C               	movf	(___fldiv@new_exp+1)^0,w,c
 11677  002892  E106               	bnz	u5621
 11678  002894  042B               	decf	___fldiv@new_exp^0,w,c
 11679  002896  B0D8               	btfsc	status,0,c
 11680  002898  EF50  F014         	goto	u5621
 11681  00289C  EF53  F014         	goto	u5620
 11682  0028A0                     u5621:
 11683  0028A0  FFFF               	dw	65535	; assembler added errata NOP
 11684  0028A2  EF62  F014         	goto	l4600
 11685  0028A6                     u5620:
 11686  0028A6  FFFF               	dw	65535	; assembler added errata NOP
 11687  0028A8  0E00               	movlw	0
 11688  0028AA  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
 11689  0028AC  0E00               	movlw	0
 11690  0028AE  6E2B               	movwf	___fldiv@new_exp^0,c
 11691  0028B0  0E00               	movlw	0
 11692  0028B2  6E1A               	movwf	___fldiv@b^0,c
 11693  0028B4  0E00               	movlw	0
 11694  0028B6  6E1B               	movwf	(___fldiv@b+1)^0,c
 11695  0028B8  0E00               	movlw	0
 11696  0028BA  6E1C               	movwf	(___fldiv@b+2)^0,c
 11697  0028BC  0E00               	movlw	0
 11698  0028BE  6E1D               	movwf	(___fldiv@b+3)^0,c
 11699  0028C0  0E00               	movlw	0
 11700  0028C2  6E2A               	movwf	___fldiv@sign^0,c
 11701  0028C4                     l4600:
 11702  0028C4  FFFF               	dw	65535	; assembler added errata NOP
 11703  0028C6  C02B  F031         	movff	___fldiv@new_exp,___fldiv@bexp
 11704  0028CA  A031               	btfss	___fldiv@bexp^0,0,c
 11705  0028CC  EF6A  F014         	goto	u5631
 11706  0028D0  EF6D  F014         	goto	u5630
 11707  0028D4                     u5631:
 11708  0028D4  FFFF               	dw	65535	; assembler added errata NOP
 11709  0028D6  EF71  F014         	goto	l4606
 11710  0028DA                     u5630:
 11711  0028DA  FFFF               	dw	65535	; assembler added errata NOP
 11712  0028DC  8E1C               	bsf	(___fldiv@b+2)^0,7,c
 11713  0028DE  EF73  F014         	goto	l4608
 11714  0028E2                     l4606:
 11715  0028E2  FFFF               	dw	65535	; assembler added errata NOP
 11716  0028E4  9E1C               	bcf	(___fldiv@b+2)^0,7,c
 11717  0028E6                     l4608:
 11718  0028E6  FFFF               	dw	65535	; assembler added errata NOP
 11719  0028E8  90D8               	bcf	status,0,c
 11720  0028EA  3031               	rrcf	___fldiv@bexp^0,w,c
 11721  0028EC  6E1D               	movwf	(___fldiv@b+3)^0,c
 11722  0028EE  EFF7  F012         	goto	l4522
 11723  0028F2                     l910:
 11724  0028F2  FFFF               	dw	65535	; assembler added errata NOP
 11725  0028F4  0012               	return		;funcret
 11726  0028F6  FFFF               	dw	65535	; errata NOP
 11727  0028F8                     __end_of___fldiv:
 11728                           	callstack 0
 11729                           
 11730 ;; *************** function _init_USART *****************
 11731 ;; Defined at:
 11732 ;;		line 13 in file "serial_rs232.c"
 11733 ;; Parameters:    Size  Location     Type
 11734 ;;		None
 11735 ;; Auto vars:     Size  Location     Type
 11736 ;;		None
 11737 ;; Return value:  Size  Location     Type
 11738 ;;                  1    wreg      void 
 11739 ;; Registers used:
 11740 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11741 ;; Tracked objects:
 11742 ;;		On entry : 0/0
 11743 ;;		On exit  : 0/0
 11744 ;;		Unchanged: 0/0
 11745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11746 ;;      Params:         0       0       0       0       0       0       0
 11747 ;;      Locals:         0       0       0       0       0       0       0
 11748 ;;      Temps:          0       0       0       0       0       0       0
 11749 ;;      Totals:         0       0       0       0       0       0       0
 11750 ;;Total ram usage:        0 bytes
 11751 ;; Hardware stack levels used:    1
 11752 ;; Hardware stack levels required when called:    4
 11753 ;; This function calls:
 11754 ;;		___fltol
 11755 ;;		_roundf
 11756 ;; This function is called by:
 11757 ;;		_main
 11758 ;; This function uses a non-reentrant model
 11759 ;;
 11760                           
 11761                           	psect	text48
 11762  006CBA                     __ptext48:
 11763                           	callstack 0
 11764  006CBA                     _init_USART:
 11765                           	callstack 0
 11766  006CBA  FFFF               	dw	65535	; assembler added errata NOP
 11767  006CBC                     
 11768                           ;serial_rs232.c: 24:     SPBRG = roundf(((fosc / desired_baudrate) / 16) - 1);
 11769  006CBC  0E55               	movlw	85
 11770  006CBE  6E4B               	movwf	roundf@x^0,c
 11771  006CC0  0E55               	movlw	85
 11772  006CC2  6E4C               	movwf	(roundf@x+1)^0,c
 11773  006CC4  0EC8               	movlw	200
 11774  006CC6  6E4D               	movwf	(roundf@x+2)^0,c
 11775  006CC8  0E41               	movlw	65
 11776  006CCA  6E4E               	movwf	(roundf@x+3)^0,c
 11777  006CCC  EC7C  F014         	call	_roundf	;wreg free
 11778  006CD0  C04B  F065         	movff	?_roundf,___fltol@f1
 11779  006CD4  C04C  F066         	movff	?_roundf+1,___fltol@f1+1
 11780  006CD8  C04D  F067         	movff	?_roundf+2,___fltol@f1+2
 11781  006CDC  C04E  F068         	movff	?_roundf+3,___fltol@f1+3
 11782  006CE0  ECDC  F03E         	call	___fltol	;wreg free
 11783  006CE4  5065               	movf	?___fltol^0,w,c
 11784  006CE6  6EAF               	movwf	175,c	;volatile
 11785  006CE8                     
 11786                           ;serial_rs232.c: 28:     TXSTAbits.TX9 = 0;
 11787  006CE8  9CAC               	bcf	172,6,c	;volatile
 11788  006CEA                     
 11789                           ;serial_rs232.c: 29:     TXSTAbits.TXEN = 1;
 11790  006CEA  8AAC               	bsf	172,5,c	;volatile
 11791  006CEC                     
 11792                           ;serial_rs232.c: 30:     TXSTAbits.SYNC =0;
 11793  006CEC  98AC               	bcf	172,4,c	;volatile
 11794  006CEE                     
 11795                           ;serial_rs232.c: 31:     TXSTAbits.BRGH = 1;
 11796  006CEE  84AC               	bsf	172,2,c	;volatile
 11797  006CF0                     
 11798                           ;serial_rs232.c: 33:     RCSTAbits.SPEN = 1;
 11799  006CF0  8EAB               	bsf	171,7,c	;volatile
 11800  006CF2                     
 11801                           ;serial_rs232.c: 34:     RCSTAbits.RX9 = 0;
 11802  006CF2  9CAB               	bcf	171,6,c	;volatile
 11803  006CF4                     
 11804                           ;serial_rs232.c: 35:     RCSTAbits.CREN = 1;
 11805  006CF4  88AB               	bsf	171,4,c	;volatile
 11806  006CF6  0012               	return		;funcret
 11807  006CF8  FFFF               	dw	65535	; errata NOP
 11808  006CFA                     __end_of_init_USART:
 11809                           	callstack 0
 11810                           
 11811 ;; *************** function _roundf *****************
 11812 ;; Defined at:
 11813 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\roundf.c"
 11814 ;; Parameters:    Size  Location     Type
 11815 ;;  x               4   74[COMRAM] float 
 11816 ;; Auto vars:     Size  Location     Type
 11817 ;;  y               4   96[COMRAM] float 
 11818 ;;  u               4   92[COMRAM] struct .
 11819 ;;  e               2   86[COMRAM] int 
 11820 ;; Return value:  Size  Location     Type
 11821 ;;                  4   74[COMRAM] float 
 11822 ;; Registers used:
 11823 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11824 ;; Tracked objects:
 11825 ;;		On entry : 0/0
 11826 ;;		On exit  : 0/0
 11827 ;;		Unchanged: 0/0
 11828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11829 ;;      Params:         4       0       0       0       0       0       0
 11830 ;;      Locals:        18       0       0       0       0       0       0
 11831 ;;      Temps:          4       0       0       0       0       0       0
 11832 ;;      Totals:        26       0       0       0       0       0       0
 11833 ;;Total ram usage:       26 bytes
 11834 ;; Hardware stack levels used:    1
 11835 ;; Hardware stack levels required when called:    3
 11836 ;; This function calls:
 11837 ;;		___fladd
 11838 ;;		___flge
 11839 ;;		___flmul
 11840 ;;		___flneg
 11841 ;;		___flsub
 11842 ;; This function is called by:
 11843 ;;		_init_USART
 11844 ;; This function uses a non-reentrant model
 11845 ;;
 11846                           
 11847                           	psect	text49
 11848  0028F8                     __ptext49:
 11849                           	callstack 0
 11850  0028F8                     _roundf:
 11851                           	callstack 0
 11852  0028F8  FFFF               	dw	65535	; assembler added errata NOP
 11853  0028FA  C080  F05D         	movff	roundf@F525,roundf@u
 11854  0028FE  C081  F05E         	movff	roundf@F525+1,roundf@u+1
 11855  002902  C082  F05F         	movff	roundf@F525+2,roundf@u+2
 11856  002906  C083  F060         	movff	roundf@F525+3,roundf@u+3
 11857  00290A  C04B  F05D         	movff	roundf@x,roundf@u
 11858  00290E  C04C  F05E         	movff	roundf@x+1,roundf@u+1
 11859  002912  C04D  F05F         	movff	roundf@x+2,roundf@u+2
 11860  002916  C04E  F060         	movff	roundf@x+3,roundf@u+3
 11861  00291A  C05D  F04F         	movff	roundf@u,??_roundf
 11862  00291E  C05E  F050         	movff	roundf@u+1,??_roundf+1
 11863  002922  C05F  F051         	movff	roundf@u+2,??_roundf+2
 11864  002926  C060  F052         	movff	roundf@u+3,??_roundf+3
 11865  00292A  0E18               	movlw	24
 11866  00292C  EF9E  F014         	goto	u5970
 11867  002930                     u5975:
 11868  002930  FFFF               	dw	65535	; assembler added errata NOP
 11869  002932  90D8               	bcf	status,0,c
 11870  002934  3252               	rrcf	(??_roundf+3)^0,f,c
 11871  002936  3251               	rrcf	(??_roundf+2)^0,f,c
 11872  002938  3250               	rrcf	(??_roundf+1)^0,f,c
 11873  00293A  324F               	rrcf	??_roundf^0,f,c
 11874  00293C                     u5970:
 11875  00293C  FFFF               	dw	65535	; assembler added errata NOP
 11876  00293E  2EE8               	decfsz	wreg,f,c
 11877  002940  EF98  F014         	goto	u5975
 11878  002944  504F               	movf	??_roundf^0,w,c
 11879  002946  6E57               	movwf	roundf@e^0,c
 11880  002948  6A58               	clrf	(roundf@e+1)^0,c
 11881  00294A  BE58               	btfsc	(roundf@e+1)^0,7,c
 11882  00294C  EFB1  F014         	goto	u5981
 11883  002950  5058               	movf	(roundf@e+1)^0,w,c
 11884  002952  E10A               	bnz	u5980
 11885  002954  0E96               	movlw	150
 11886  002956  5C57               	subwf	roundf@e^0,w,c
 11887  002958  A0D8               	btfss	status,0,c
 11888  00295A  EFB1  F014         	goto	u5981
 11889  00295E  EFB4  F014         	goto	u5980
 11890  002962                     u5981:
 11891  002962  FFFF               	dw	65535	; assembler added errata NOP
 11892  002964  EFBF  F014         	goto	l4840
 11893  002968                     u5980:
 11894  002968  FFFF               	dw	65535	; assembler added errata NOP
 11895  00296A  C04B  F04B         	movff	roundf@x,?_roundf
 11896  00296E  C04C  F04C         	movff	roundf@x+1,?_roundf+1
 11897  002972  C04D  F04D         	movff	roundf@x+2,?_roundf+2
 11898  002976  C04E  F04E         	movff	roundf@x+3,?_roundf+3
 11899  00297A  EF6C  F016         	goto	l1007
 11900  00297E                     l4840:
 11901  00297E  FFFF               	dw	65535	; assembler added errata NOP
 11902  002980  C05D  F04F         	movff	roundf@u,??_roundf
 11903  002984  C05E  F050         	movff	roundf@u+1,??_roundf+1
 11904  002988  C05F  F051         	movff	roundf@u+2,??_roundf+2
 11905  00298C  C060  F052         	movff	roundf@u+3,??_roundf+3
 11906  002990  0E20               	movlw	32
 11907  002992  EFD1  F014         	goto	u5990
 11908  002996                     u5995:
 11909  002996  FFFF               	dw	65535	; assembler added errata NOP
 11910  002998  90D8               	bcf	status,0,c
 11911  00299A  3252               	rrcf	(??_roundf+3)^0,f,c
 11912  00299C  3251               	rrcf	(??_roundf+2)^0,f,c
 11913  00299E  3250               	rrcf	(??_roundf+1)^0,f,c
 11914  0029A0  324F               	rrcf	??_roundf^0,f,c
 11915  0029A2                     u5990:
 11916  0029A2  FFFF               	dw	65535	; assembler added errata NOP
 11917  0029A4  2EE8               	decfsz	wreg,f,c
 11918  0029A6  EFCB  F014         	goto	u5995
 11919  0029AA  504F               	movf	??_roundf^0,w,c
 11920  0029AC  1050               	iorwf	(??_roundf+1)^0,w,c
 11921  0029AE  1051               	iorwf	(??_roundf+2)^0,w,c
 11922  0029B0  1052               	iorwf	(??_roundf+3)^0,w,c
 11923  0029B2  B4D8               	btfsc	status,2,c
 11924  0029B4  EFDE  F014         	goto	u6001
 11925  0029B8  EFE1  F014         	goto	u6000
 11926  0029BC                     u6001:
 11927  0029BC  FFFF               	dw	65535	; assembler added errata NOP
 11928  0029BE  EFF4  F014         	goto	l4844
 11929  0029C2                     u6000:
 11930  0029C2  FFFF               	dw	65535	; assembler added errata NOP
 11931  0029C4  C04B  F001         	movff	roundf@x,___flneg@f1
 11932  0029C8  C04C  F002         	movff	roundf@x+1,___flneg@f1+1
 11933  0029CC  C04D  F003         	movff	roundf@x+2,___flneg@f1+2
 11934  0029D0  C04E  F004         	movff	roundf@x+3,___flneg@f1+3
 11935  0029D4  EC7D  F036         	call	___flneg	;wreg free
 11936  0029D8  C001  F04B         	movff	?___flneg,roundf@x
 11937  0029DC  C002  F04C         	movff	?___flneg+1,roundf@x+1
 11938  0029E0  C003  F04D         	movff	?___flneg+2,roundf@x+2
 11939  0029E4  C004  F04E         	movff	?___flneg+3,roundf@x+3
 11940  0029E8                     l4844:
 11941  0029E8  FFFF               	dw	65535	; assembler added errata NOP
 11942  0029EA  BE58               	btfsc	(roundf@e+1)^0,7,c
 11943  0029EC  EF04  F015         	goto	u6010
 11944  0029F0  5058               	movf	(roundf@e+1)^0,w,c
 11945  0029F2  E107               	bnz	u6011
 11946  0029F4  0E7E               	movlw	126
 11947  0029F6  5C57               	subwf	roundf@e^0,w,c
 11948  0029F8  B0D8               	btfsc	status,0,c
 11949  0029FA  EF01  F015         	goto	u6011
 11950  0029FE  EF04  F015         	goto	u6010
 11951  002A02                     u6011:
 11952  002A02  FFFF               	dw	65535	; assembler added errata NOP
 11953  002A04  EF21  F015         	goto	l4850
 11954  002A08                     u6010:
 11955  002A08  FFFF               	dw	65535	; assembler added errata NOP
 11956  002A0A  C05D  F001         	movff	roundf@u,___flmul@b
 11957  002A0E  C05E  F002         	movff	roundf@u+1,___flmul@b+1
 11958  002A12  C05F  F003         	movff	roundf@u+2,___flmul@b+2
 11959  002A16  C060  F004         	movff	roundf@u+3,___flmul@b+3
 11960  002A1A  0E00               	movlw	0
 11961  002A1C  6E05               	movwf	___flmul@a^0,c
 11962  002A1E  0E00               	movlw	0
 11963  002A20  6E06               	movwf	(___flmul@a+1)^0,c
 11964  002A22  0E00               	movlw	0
 11965  002A24  6E07               	movwf	(___flmul@a+2)^0,c
 11966  002A26  0E00               	movlw	0
 11967  002A28  6E08               	movwf	(___flmul@a+3)^0,c
 11968  002A2A  EC11  F010         	call	___flmul	;wreg free
 11969  002A2E  C001  F04B         	movff	?___flmul,?_roundf
 11970  002A32  C002  F04C         	movff	?___flmul+1,?_roundf+1
 11971  002A36  C003  F04D         	movff	?___flmul+2,?_roundf+2
 11972  002A3A  C004  F04E         	movff	?___flmul+3,?_roundf+3
 11973  002A3E  EF6C  F016         	goto	l1007
 11974  002A42                     l4850:
 11975  002A42  FFFF               	dw	65535	; assembler added errata NOP
 11976  002A44  0E00               	movlw	0
 11977  002A46  6E37               	movwf	___fladd@a^0,c
 11978  002A48  0E00               	movlw	0
 11979  002A4A  6E38               	movwf	(___fladd@a+1)^0,c
 11980  002A4C  0E00               	movlw	0
 11981  002A4E  6E39               	movwf	(___fladd@a+2)^0,c
 11982  002A50  0E4B               	movlw	75
 11983  002A52  6E3A               	movwf	(___fladd@a+3)^0,c
 11984  002A54  C04B  F033         	movff	roundf@x,___fladd@b
 11985  002A58  C04C  F034         	movff	roundf@x+1,___fladd@b+1
 11986  002A5C  C04D  F035         	movff	roundf@x+2,___fladd@b+2
 11987  002A60  C04E  F036         	movff	roundf@x+3,___fladd@b+3
 11988  002A64  EC3D  F00D         	call	___fladd	;wreg free
 11989  002A68  C033  F059         	movff	?___fladd,_roundf$2007
 11990  002A6C  C034  F05A         	movff	?___fladd+1,_roundf$2007+1
 11991  002A70  C035  F05B         	movff	?___fladd+2,_roundf$2007+2
 11992  002A74  C036  F05C         	movff	?___fladd+3,_roundf$2007+3
 11993  002A78  0E00               	movlw	0
 11994  002A7A  6E37               	movwf	___fladd@a^0,c
 11995  002A7C  0E00               	movlw	0
 11996  002A7E  6E38               	movwf	(___fladd@a+1)^0,c
 11997  002A80  0E00               	movlw	0
 11998  002A82  6E39               	movwf	(___fladd@a+2)^0,c
 11999  002A84  0ECB               	movlw	203
 12000  002A86  6E3A               	movwf	(___fladd@a+3)^0,c
 12001  002A88  C059  F033         	movff	_roundf$2007,___fladd@b
 12002  002A8C  C05A  F034         	movff	_roundf$2007+1,___fladd@b+1
 12003  002A90  C05B  F035         	movff	_roundf$2007+2,___fladd@b+2
 12004  002A94  C05C  F036         	movff	_roundf$2007+3,___fladd@b+3
 12005  002A98  EC3D  F00D         	call	___fladd	;wreg free
 12006  002A9C  C033  F053         	movff	?___fladd,_roundf$2008
 12007  002AA0  C034  F054         	movff	?___fladd+1,_roundf$2008+1
 12008  002AA4  C035  F055         	movff	?___fladd+2,_roundf$2008+2
 12009  002AA8  C036  F056         	movff	?___fladd+3,_roundf$2008+3
 12010  002AAC  C053  F043         	movff	_roundf$2008,___flsub@b
 12011  002AB0  C054  F044         	movff	_roundf$2008+1,___flsub@b+1
 12012  002AB4  C055  F045         	movff	_roundf$2008+2,___flsub@b+2
 12013  002AB8  C056  F046         	movff	_roundf$2008+3,___flsub@b+3
 12014  002ABC  C04B  F047         	movff	roundf@x,___flsub@a
 12015  002AC0  C04C  F048         	movff	roundf@x+1,___flsub@a+1
 12016  002AC4  C04D  F049         	movff	roundf@x+2,___flsub@a+2
 12017  002AC8  C04E  F04A         	movff	roundf@x+3,___flsub@a+3
 12018  002ACC  EC24  F037         	call	___flsub	;wreg free
 12019  002AD0  C043  F061         	movff	?___flsub,roundf@y
 12020  002AD4  C044  F062         	movff	?___flsub+1,roundf@y+1
 12021  002AD8  C045  F063         	movff	?___flsub+2,roundf@y+2
 12022  002ADC  C046  F064         	movff	?___flsub+3,roundf@y+3
 12023  002AE0  0E00               	movlw	0
 12024  002AE2  6E01               	movwf	___flge@ff1^0,c
 12025  002AE4  0E00               	movlw	0
 12026  002AE6  6E02               	movwf	(___flge@ff1+1)^0,c
 12027  002AE8  0E00               	movlw	0
 12028  002AEA  6E03               	movwf	(___flge@ff1+2)^0,c
 12029  002AEC  0E3F               	movlw	63
 12030  002AEE  6E04               	movwf	(___flge@ff1+3)^0,c
 12031  002AF0  C061  F005         	movff	roundf@y,___flge@ff2
 12032  002AF4  C062  F006         	movff	roundf@y+1,___flge@ff2+1
 12033  002AF8  C063  F007         	movff	roundf@y+2,___flge@ff2+2
 12034  002AFC  C064  F008         	movff	roundf@y+3,___flge@ff2+3
 12035  002B00  EC48  F03E         	call	___flge	;wreg free
 12036  002B04  B0D8               	btfsc	status,0,c
 12037  002B06  EF87  F015         	goto	u6021
 12038  002B0A  EF8A  F015         	goto	u6020
 12039  002B0E                     u6021:
 12040  002B0E  FFFF               	dw	65535	; assembler added errata NOP
 12041  002B10  EFC1  F015         	goto	l4854
 12042  002B14                     u6020:
 12043  002B14  FFFF               	dw	65535	; assembler added errata NOP
 12044  002B16  C04B  F037         	movff	roundf@x,___fladd@a
 12045  002B1A  C04C  F038         	movff	roundf@x+1,___fladd@a+1
 12046  002B1E  C04D  F039         	movff	roundf@x+2,___fladd@a+2
 12047  002B22  C04E  F03A         	movff	roundf@x+3,___fladd@a+3
 12048  002B26  C061  F033         	movff	roundf@y,___fladd@b
 12049  002B2A  C062  F034         	movff	roundf@y+1,___fladd@b+1
 12050  002B2E  C063  F035         	movff	roundf@y+2,___fladd@b+2
 12051  002B32  C064  F036         	movff	roundf@y+3,___fladd@b+3
 12052  002B36  EC3D  F00D         	call	___fladd	;wreg free
 12053  002B3A  C033  F059         	movff	?___fladd,_roundf$2007
 12054  002B3E  C034  F05A         	movff	?___fladd+1,_roundf$2007+1
 12055  002B42  C035  F05B         	movff	?___fladd+2,_roundf$2007+2
 12056  002B46  C036  F05C         	movff	?___fladd+3,_roundf$2007+3
 12057  002B4A  C059  F033         	movff	_roundf$2007,___fladd@b
 12058  002B4E  C05A  F034         	movff	_roundf$2007+1,___fladd@b+1
 12059  002B52  C05B  F035         	movff	_roundf$2007+2,___fladd@b+2
 12060  002B56  C05C  F036         	movff	_roundf$2007+3,___fladd@b+3
 12061  002B5A  0E00               	movlw	0
 12062  002B5C  6E37               	movwf	___fladd@a^0,c
 12063  002B5E  0E00               	movlw	0
 12064  002B60  6E38               	movwf	(___fladd@a+1)^0,c
 12065  002B62  0E80               	movlw	128
 12066  002B64  6E39               	movwf	(___fladd@a+2)^0,c
 12067  002B66  0EBF               	movlw	191
 12068  002B68  6E3A               	movwf	(___fladd@a+3)^0,c
 12069  002B6A  EC3D  F00D         	call	___fladd	;wreg free
 12070  002B6E  C033  F061         	movff	?___fladd,roundf@y
 12071  002B72  C034  F062         	movff	?___fladd+1,roundf@y+1
 12072  002B76  C035  F063         	movff	?___fladd+2,roundf@y+2
 12073  002B7A  C036  F064         	movff	?___fladd+3,roundf@y+3
 12074  002B7E  EF2E  F016         	goto	l4860
 12075  002B82                     l4854:
 12076  002B82  FFFF               	dw	65535	; assembler added errata NOP
 12077  002B84  0E00               	movlw	0
 12078  002B86  6E01               	movwf	___flge@ff1^0,c
 12079  002B88  0E00               	movlw	0
 12080  002B8A  6E02               	movwf	(___flge@ff1+1)^0,c
 12081  002B8C  0E00               	movlw	0
 12082  002B8E  6E03               	movwf	(___flge@ff1+2)^0,c
 12083  002B90  0EBF               	movlw	191
 12084  002B92  6E04               	movwf	(___flge@ff1+3)^0,c
 12085  002B94  C061  F005         	movff	roundf@y,___flge@ff2
 12086  002B98  C062  F006         	movff	roundf@y+1,___flge@ff2+1
 12087  002B9C  C063  F007         	movff	roundf@y+2,___flge@ff2+2
 12088  002BA0  C064  F008         	movff	roundf@y+3,___flge@ff2+3
 12089  002BA4  EC48  F03E         	call	___flge	;wreg free
 12090  002BA8  A0D8               	btfss	status,0,c
 12091  002BAA  EFD9  F015         	goto	u6031
 12092  002BAE  EFDC  F015         	goto	u6030
 12093  002BB2                     u6031:
 12094  002BB2  FFFF               	dw	65535	; assembler added errata NOP
 12095  002BB4  EF13  F016         	goto	l4858
 12096  002BB8                     u6030:
 12097  002BB8  FFFF               	dw	65535	; assembler added errata NOP
 12098  002BBA  C04B  F037         	movff	roundf@x,___fladd@a
 12099  002BBE  C04C  F038         	movff	roundf@x+1,___fladd@a+1
 12100  002BC2  C04D  F039         	movff	roundf@x+2,___fladd@a+2
 12101  002BC6  C04E  F03A         	movff	roundf@x+3,___fladd@a+3
 12102  002BCA  C061  F033         	movff	roundf@y,___fladd@b
 12103  002BCE  C062  F034         	movff	roundf@y+1,___fladd@b+1
 12104  002BD2  C063  F035         	movff	roundf@y+2,___fladd@b+2
 12105  002BD6  C064  F036         	movff	roundf@y+3,___fladd@b+3
 12106  002BDA  EC3D  F00D         	call	___fladd	;wreg free
 12107  002BDE  C033  F059         	movff	?___fladd,_roundf$2007
 12108  002BE2  C034  F05A         	movff	?___fladd+1,_roundf$2007+1
 12109  002BE6  C035  F05B         	movff	?___fladd+2,_roundf$2007+2
 12110  002BEA  C036  F05C         	movff	?___fladd+3,_roundf$2007+3
 12111  002BEE  C059  F033         	movff	_roundf$2007,___fladd@b
 12112  002BF2  C05A  F034         	movff	_roundf$2007+1,___fladd@b+1
 12113  002BF6  C05B  F035         	movff	_roundf$2007+2,___fladd@b+2
 12114  002BFA  C05C  F036         	movff	_roundf$2007+3,___fladd@b+3
 12115  002BFE  0E00               	movlw	0
 12116  002C00  6E37               	movwf	___fladd@a^0,c
 12117  002C02  0E00               	movlw	0
 12118  002C04  6E38               	movwf	(___fladd@a+1)^0,c
 12119  002C06  0E80               	movlw	128
 12120  002C08  6E39               	movwf	(___fladd@a+2)^0,c
 12121  002C0A  0E3F               	movlw	63
 12122  002C0C  6E3A               	movwf	(___fladd@a+3)^0,c
 12123  002C0E  EC3D  F00D         	call	___fladd	;wreg free
 12124  002C12  C033  F061         	movff	?___fladd,roundf@y
 12125  002C16  C034  F062         	movff	?___fladd+1,roundf@y+1
 12126  002C1A  C035  F063         	movff	?___fladd+2,roundf@y+2
 12127  002C1E  C036  F064         	movff	?___fladd+3,roundf@y+3
 12128  002C22  EF2E  F016         	goto	l4860
 12129  002C26                     l4858:
 12130  002C26  FFFF               	dw	65535	; assembler added errata NOP
 12131  002C28  C061  F033         	movff	roundf@y,___fladd@b
 12132  002C2C  C062  F034         	movff	roundf@y+1,___fladd@b+1
 12133  002C30  C063  F035         	movff	roundf@y+2,___fladd@b+2
 12134  002C34  C064  F036         	movff	roundf@y+3,___fladd@b+3
 12135  002C38  C04B  F037         	movff	roundf@x,___fladd@a
 12136  002C3C  C04C  F038         	movff	roundf@x+1,___fladd@a+1
 12137  002C40  C04D  F039         	movff	roundf@x+2,___fladd@a+2
 12138  002C44  C04E  F03A         	movff	roundf@x+3,___fladd@a+3
 12139  002C48  EC3D  F00D         	call	___fladd	;wreg free
 12140  002C4C  C033  F061         	movff	?___fladd,roundf@y
 12141  002C50  C034  F062         	movff	?___fladd+1,roundf@y+1
 12142  002C54  C035  F063         	movff	?___fladd+2,roundf@y+2
 12143  002C58  C036  F064         	movff	?___fladd+3,roundf@y+3
 12144  002C5C                     l4860:
 12145  002C5C  FFFF               	dw	65535	; assembler added errata NOP
 12146  002C5E  C05D  F04F         	movff	roundf@u,??_roundf
 12147  002C62  C05E  F050         	movff	roundf@u+1,??_roundf+1
 12148  002C66  C05F  F051         	movff	roundf@u+2,??_roundf+2
 12149  002C6A  C060  F052         	movff	roundf@u+3,??_roundf+3
 12150  002C6E  0E20               	movlw	32
 12151  002C70  EF40  F016         	goto	u6040
 12152  002C74                     u6045:
 12153  002C74  FFFF               	dw	65535	; assembler added errata NOP
 12154  002C76  90D8               	bcf	status,0,c
 12155  002C78  3252               	rrcf	(??_roundf+3)^0,f,c
 12156  002C7A  3251               	rrcf	(??_roundf+2)^0,f,c
 12157  002C7C  3250               	rrcf	(??_roundf+1)^0,f,c
 12158  002C7E  324F               	rrcf	??_roundf^0,f,c
 12159  002C80                     u6040:
 12160  002C80  FFFF               	dw	65535	; assembler added errata NOP
 12161  002C82  2EE8               	decfsz	wreg,f,c
 12162  002C84  EF3A  F016         	goto	u6045
 12163  002C88  504F               	movf	??_roundf^0,w,c
 12164  002C8A  1050               	iorwf	(??_roundf+1)^0,w,c
 12165  002C8C  1051               	iorwf	(??_roundf+2)^0,w,c
 12166  002C8E  1052               	iorwf	(??_roundf+3)^0,w,c
 12167  002C90  B4D8               	btfsc	status,2,c
 12168  002C92  EF4D  F016         	goto	u6051
 12169  002C96  EF50  F016         	goto	u6050
 12170  002C9A                     u6051:
 12171  002C9A  FFFF               	dw	65535	; assembler added errata NOP
 12172  002C9C  EF63  F016         	goto	l4864
 12173  002CA0                     u6050:
 12174  002CA0  FFFF               	dw	65535	; assembler added errata NOP
 12175  002CA2  C061  F001         	movff	roundf@y,___flneg@f1
 12176  002CA6  C062  F002         	movff	roundf@y+1,___flneg@f1+1
 12177  002CAA  C063  F003         	movff	roundf@y+2,___flneg@f1+2
 12178  002CAE  C064  F004         	movff	roundf@y+3,___flneg@f1+3
 12179  002CB2  EC7D  F036         	call	___flneg	;wreg free
 12180  002CB6  C001  F061         	movff	?___flneg,roundf@y
 12181  002CBA  C002  F062         	movff	?___flneg+1,roundf@y+1
 12182  002CBE  C003  F063         	movff	?___flneg+2,roundf@y+2
 12183  002CC2  C004  F064         	movff	?___flneg+3,roundf@y+3
 12184  002CC6                     l4864:
 12185  002CC6  FFFF               	dw	65535	; assembler added errata NOP
 12186  002CC8  C061  F04B         	movff	roundf@y,?_roundf
 12187  002CCC  C062  F04C         	movff	roundf@y+1,?_roundf+1
 12188  002CD0  C063  F04D         	movff	roundf@y+2,?_roundf+2
 12189  002CD4  C064  F04E         	movff	roundf@y+3,?_roundf+3
 12190  002CD8                     l1007:
 12191  002CD8  FFFF               	dw	65535	; assembler added errata NOP
 12192  002CDA  0012               	return		;funcret
 12193  002CDC  FFFF               	dw	65535	; errata NOP
 12194  002CDE                     __end_of_roundf:
 12195                           	callstack 0
 12196                           
 12197 ;; *************** function ___flsub *****************
 12198 ;; Defined at:
 12199 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 12200 ;; Parameters:    Size  Location     Type
 12201 ;;  b               4   66[COMRAM] float 
 12202 ;;  a               4   70[COMRAM] float 
 12203 ;; Auto vars:     Size  Location     Type
 12204 ;;		None
 12205 ;; Return value:  Size  Location     Type
 12206 ;;                  4   66[COMRAM] float 
 12207 ;; Registers used:
 12208 ;;		wreg, status,2, status,0, cstack
 12209 ;; Tracked objects:
 12210 ;;		On entry : 0/0
 12211 ;;		On exit  : 0/0
 12212 ;;		Unchanged: 0/0
 12213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12214 ;;      Params:         8       0       0       0       0       0       0
 12215 ;;      Locals:         0       0       0       0       0       0       0
 12216 ;;      Temps:          0       0       0       0       0       0       0
 12217 ;;      Totals:         8       0       0       0       0       0       0
 12218 ;;Total ram usage:        8 bytes
 12219 ;; Hardware stack levels used:    1
 12220 ;; Hardware stack levels required when called:    2
 12221 ;; This function calls:
 12222 ;;		___fladd
 12223 ;; This function is called by:
 12224 ;;		_roundf
 12225 ;; This function uses a non-reentrant model
 12226 ;;
 12227                           
 12228                           	psect	text50
 12229  006E48                     __ptext50:
 12230                           	callstack 0
 12231  006E48                     ___flsub:
 12232                           	callstack 0
 12233  006E48  FFFF               	dw	65535	; assembler added errata NOP
 12234  006E4A  0E00               	movlw	0
 12235  006E4C  1A47               	xorwf	___flsub@a^0,f,c
 12236  006E4E  0E00               	movlw	0
 12237  006E50  1A48               	xorwf	(___flsub@a+1)^0,f,c
 12238  006E52  0E00               	movlw	0
 12239  006E54  1A49               	xorwf	(___flsub@a+2)^0,f,c
 12240  006E56  0E80               	movlw	128
 12241  006E58  1A4A               	xorwf	(___flsub@a+3)^0,f,c
 12242  006E5A  C043  F033         	movff	___flsub@b,___fladd@b
 12243  006E5E  C044  F034         	movff	___flsub@b+1,___fladd@b+1
 12244  006E62  C045  F035         	movff	___flsub@b+2,___fladd@b+2
 12245  006E66  C046  F036         	movff	___flsub@b+3,___fladd@b+3
 12246  006E6A  C047  F037         	movff	___flsub@a,___fladd@a
 12247  006E6E  C048  F038         	movff	___flsub@a+1,___fladd@a+1
 12248  006E72  C049  F039         	movff	___flsub@a+2,___fladd@a+2
 12249  006E76  C04A  F03A         	movff	___flsub@a+3,___fladd@a+3
 12250  006E7A  EC3D  F00D         	call	___fladd	;wreg free
 12251  006E7E  C033  F043         	movff	?___fladd,?___flsub
 12252  006E82  C034  F044         	movff	?___fladd+1,?___flsub+1
 12253  006E86  C035  F045         	movff	?___fladd+2,?___flsub+2
 12254  006E8A  C036  F046         	movff	?___fladd+3,?___flsub+3
 12255  006E8E  0012               	return		;funcret
 12256  006E90  FFFF               	dw	65535	; errata NOP
 12257  006E92                     __end_of___flsub:
 12258                           	callstack 0
 12259                           
 12260 ;; *************** function ___fladd *****************
 12261 ;; Defined at:
 12262 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 12263 ;; Parameters:    Size  Location     Type
 12264 ;;  b               4   50[COMRAM] float 
 12265 ;;  a               4   54[COMRAM] float 
 12266 ;; Auto vars:     Size  Location     Type
 12267 ;;  grs             1   65[COMRAM] unsigned char 
 12268 ;;  bexp            1   64[COMRAM] unsigned char 
 12269 ;;  aexp            1   63[COMRAM] unsigned char 
 12270 ;;  signs           1   62[COMRAM] unsigned char 
 12271 ;; Return value:  Size  Location     Type
 12272 ;;                  4   50[COMRAM] unsigned char 
 12273 ;; Registers used:
 12274 ;;		wreg, status,2, status,0
 12275 ;; Tracked objects:
 12276 ;;		On entry : 0/0
 12277 ;;		On exit  : 0/0
 12278 ;;		Unchanged: 0/0
 12279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12280 ;;      Params:         8       0       0       0       0       0       0
 12281 ;;      Locals:         4       0       0       0       0       0       0
 12282 ;;      Temps:          4       0       0       0       0       0       0
 12283 ;;      Totals:        16       0       0       0       0       0       0
 12284 ;;Total ram usage:       16 bytes
 12285 ;; Hardware stack levels used:    1
 12286 ;; Hardware stack levels required when called:    1
 12287 ;; This function calls:
 12288 ;;		Nothing
 12289 ;; This function is called by:
 12290 ;;		_init_timer_2
 12291 ;;		___flsub
 12292 ;;		_roundf
 12293 ;; This function uses a non-reentrant model
 12294 ;;
 12295                           
 12296                           	psect	text51
 12297  001A7A                     __ptext51:
 12298                           	callstack 0
 12299  001A7A                     ___fladd:
 12300                           	callstack 0
 12301  001A7A  FFFF               	dw	65535	; assembler added errata NOP
 12302  001A7C  5036               	movf	(___fladd@b+3)^0,w,c
 12303  001A7E  0B80               	andlw	128
 12304  001A80  6E3F               	movwf	___fladd@signs^0,c
 12305  001A82  5036               	movf	(___fladd@b+3)^0,w,c
 12306  001A84  2436               	addwf	(___fladd@b+3)^0,w,c
 12307  001A86  6E41               	movwf	___fladd@bexp^0,c
 12308  001A88  AE35               	btfss	(___fladd@b+2)^0,7,c
 12309  001A8A  EF49  F00D         	goto	u4531
 12310  001A8E  EF4C  F00D         	goto	u4530
 12311  001A92                     u4531:
 12312  001A92  FFFF               	dw	65535	; assembler added errata NOP
 12313  001A94  EF4E  F00D         	goto	l3950
 12314  001A98                     u4530:
 12315  001A98  FFFF               	dw	65535	; assembler added errata NOP
 12316  001A9A  8041               	bsf	___fladd@bexp^0,0,c
 12317  001A9C                     l3950:
 12318  001A9C  FFFF               	dw	65535	; assembler added errata NOP
 12319  001A9E  5041               	movf	___fladd@bexp^0,w,c
 12320  001AA0  B4D8               	btfsc	status,2,c
 12321  001AA2  EF55  F00D         	goto	u4541
 12322  001AA6  EF58  F00D         	goto	u4540
 12323  001AAA                     u4541:
 12324  001AAA  FFFF               	dw	65535	; assembler added errata NOP
 12325  001AAC  EF71  F00D         	goto	l3960
 12326  001AB0                     u4540:
 12327  001AB0  FFFF               	dw	65535	; assembler added errata NOP
 12328  001AB2  2841               	incf	___fladd@bexp^0,w,c
 12329  001AB4  A4D8               	btfss	status,2,c
 12330  001AB6  EF5F  F00D         	goto	u4551
 12331  001ABA  EF62  F00D         	goto	u4550
 12332  001ABE                     u4551:
 12333  001ABE  FFFF               	dw	65535	; assembler added errata NOP
 12334  001AC0  EF6B  F00D         	goto	l3956
 12335  001AC4                     u4550:
 12336  001AC4  FFFF               	dw	65535	; assembler added errata NOP
 12337  001AC6  0E00               	movlw	0
 12338  001AC8  6E33               	movwf	___fladd@b^0,c
 12339  001ACA  0E00               	movlw	0
 12340  001ACC  6E34               	movwf	(___fladd@b+1)^0,c
 12341  001ACE  0E00               	movlw	0
 12342  001AD0  6E35               	movwf	(___fladd@b+2)^0,c
 12343  001AD2  0E00               	movlw	0
 12344  001AD4  6E36               	movwf	(___fladd@b+3)^0,c
 12345  001AD6                     l3956:
 12346  001AD6  FFFF               	dw	65535	; assembler added errata NOP
 12347  001AD8  8E35               	bsf	(___fladd@b+2)^0,7,c
 12348  001ADA  0E00               	movlw	0
 12349  001ADC  6E36               	movwf	(___fladd@b+3)^0,c
 12350  001ADE  EF7A  F00D         	goto	l3962
 12351  001AE2                     l3960:
 12352  001AE2  FFFF               	dw	65535	; assembler added errata NOP
 12353  001AE4  0E00               	movlw	0
 12354  001AE6  6E33               	movwf	___fladd@b^0,c
 12355  001AE8  0E00               	movlw	0
 12356  001AEA  6E34               	movwf	(___fladd@b+1)^0,c
 12357  001AEC  0E00               	movlw	0
 12358  001AEE  6E35               	movwf	(___fladd@b+2)^0,c
 12359  001AF0  0E00               	movlw	0
 12360  001AF2  6E36               	movwf	(___fladd@b+3)^0,c
 12361  001AF4                     l3962:
 12362  001AF4  FFFF               	dw	65535	; assembler added errata NOP
 12363  001AF6  503A               	movf	(___fladd@a+3)^0,w,c
 12364  001AF8  0B80               	andlw	128
 12365  001AFA  6E40               	movwf	___fladd@aexp^0,c
 12366  001AFC  503F               	movf	___fladd@signs^0,w,c
 12367  001AFE  1840               	xorwf	___fladd@aexp^0,w,c
 12368  001B00  B4D8               	btfsc	status,2,c
 12369  001B02  EF85  F00D         	goto	u4561
 12370  001B06  EF88  F00D         	goto	u4560
 12371  001B0A                     u4561:
 12372  001B0A  FFFF               	dw	65535	; assembler added errata NOP
 12373  001B0C  EF8A  F00D         	goto	l3968
 12374  001B10                     u4560:
 12375  001B10  FFFF               	dw	65535	; assembler added errata NOP
 12376  001B12  8C3F               	bsf	___fladd@signs^0,6,c
 12377  001B14                     l3968:
 12378  001B14  FFFF               	dw	65535	; assembler added errata NOP
 12379  001B16  503A               	movf	(___fladd@a+3)^0,w,c
 12380  001B18  243A               	addwf	(___fladd@a+3)^0,w,c
 12381  001B1A  6E40               	movwf	___fladd@aexp^0,c
 12382  001B1C  AE39               	btfss	(___fladd@a+2)^0,7,c
 12383  001B1E  EF93  F00D         	goto	u4571
 12384  001B22  EF96  F00D         	goto	u4570
 12385  001B26                     u4571:
 12386  001B26  FFFF               	dw	65535	; assembler added errata NOP
 12387  001B28  EF98  F00D         	goto	l3974
 12388  001B2C                     u4570:
 12389  001B2C  FFFF               	dw	65535	; assembler added errata NOP
 12390  001B2E  8040               	bsf	___fladd@aexp^0,0,c
 12391  001B30                     l3974:
 12392  001B30  FFFF               	dw	65535	; assembler added errata NOP
 12393  001B32  5040               	movf	___fladd@aexp^0,w,c
 12394  001B34  B4D8               	btfsc	status,2,c
 12395  001B36  EF9F  F00D         	goto	u4581
 12396  001B3A  EFA2  F00D         	goto	u4580
 12397  001B3E                     u4581:
 12398  001B3E  FFFF               	dw	65535	; assembler added errata NOP
 12399  001B40  EFBB  F00D         	goto	l3984
 12400  001B44                     u4580:
 12401  001B44  FFFF               	dw	65535	; assembler added errata NOP
 12402  001B46  2840               	incf	___fladd@aexp^0,w,c
 12403  001B48  A4D8               	btfss	status,2,c
 12404  001B4A  EFA9  F00D         	goto	u4591
 12405  001B4E  EFAC  F00D         	goto	u4590
 12406  001B52                     u4591:
 12407  001B52  FFFF               	dw	65535	; assembler added errata NOP
 12408  001B54  EFB5  F00D         	goto	l3980
 12409  001B58                     u4590:
 12410  001B58  FFFF               	dw	65535	; assembler added errata NOP
 12411  001B5A  0E00               	movlw	0
 12412  001B5C  6E37               	movwf	___fladd@a^0,c
 12413  001B5E  0E00               	movlw	0
 12414  001B60  6E38               	movwf	(___fladd@a+1)^0,c
 12415  001B62  0E00               	movlw	0
 12416  001B64  6E39               	movwf	(___fladd@a+2)^0,c
 12417  001B66  0E00               	movlw	0
 12418  001B68  6E3A               	movwf	(___fladd@a+3)^0,c
 12419  001B6A                     l3980:
 12420  001B6A  FFFF               	dw	65535	; assembler added errata NOP
 12421  001B6C  8E39               	bsf	(___fladd@a+2)^0,7,c
 12422  001B6E  0E00               	movlw	0
 12423  001B70  6E3A               	movwf	(___fladd@a+3)^0,c
 12424  001B72  EFC4  F00D         	goto	l3986
 12425  001B76                     l3984:
 12426  001B76  FFFF               	dw	65535	; assembler added errata NOP
 12427  001B78  0E00               	movlw	0
 12428  001B7A  6E37               	movwf	___fladd@a^0,c
 12429  001B7C  0E00               	movlw	0
 12430  001B7E  6E38               	movwf	(___fladd@a+1)^0,c
 12431  001B80  0E00               	movlw	0
 12432  001B82  6E39               	movwf	(___fladd@a+2)^0,c
 12433  001B84  0E00               	movlw	0
 12434  001B86  6E3A               	movwf	(___fladd@a+3)^0,c
 12435  001B88                     l3986:
 12436  001B88  FFFF               	dw	65535	; assembler added errata NOP
 12437  001B8A  5041               	movf	___fladd@bexp^0,w,c
 12438  001B8C  5C40               	subwf	___fladd@aexp^0,w,c
 12439  001B8E  B0D8               	btfsc	status,0,c
 12440  001B90  EFCC  F00D         	goto	u4601
 12441  001B94  EFCF  F00D         	goto	u4600
 12442  001B98                     u4601:
 12443  001B98  FFFF               	dw	65535	; assembler added errata NOP
 12444  001B9A  EFFA  F00D         	goto	l4022
 12445  001B9E                     u4600:
 12446  001B9E  FFFF               	dw	65535	; assembler added errata NOP
 12447  001BA0  AC3F               	btfss	___fladd@signs^0,6,c
 12448  001BA2  EFD5  F00D         	goto	u4611
 12449  001BA6  EFD8  F00D         	goto	u4610
 12450  001BAA                     u4611:
 12451  001BAA  FFFF               	dw	65535	; assembler added errata NOP
 12452  001BAC  EFDB  F00D         	goto	l3992
 12453  001BB0                     u4610:
 12454  001BB0  FFFF               	dw	65535	; assembler added errata NOP
 12455  001BB2  0E80               	movlw	128
 12456  001BB4  1A3F               	xorwf	___fladd@signs^0,f,c
 12457  001BB6                     l3992:
 12458  001BB6  FFFF               	dw	65535	; assembler added errata NOP
 12459  001BB8  C041  F042         	movff	___fladd@bexp,___fladd@grs
 12460  001BBC  C040  F041         	movff	___fladd@aexp,___fladd@bexp
 12461  001BC0  C042  F040         	movff	___fladd@grs,___fladd@aexp
 12462  001BC4  C033  F042         	movff	___fladd@b,___fladd@grs
 12463  001BC8  C037  F033         	movff	___fladd@a,___fladd@b
 12464  001BCC  C042  F037         	movff	___fladd@grs,___fladd@a
 12465  001BD0  C034  F042         	movff	___fladd@b+1,___fladd@grs
 12466  001BD4  C038  F034         	movff	___fladd@a+1,___fladd@b+1
 12467  001BD8  C042  F038         	movff	___fladd@grs,___fladd@a+1
 12468  001BDC  C035  F042         	movff	___fladd@b+2,___fladd@grs
 12469  001BE0  C039  F035         	movff	___fladd@a+2,___fladd@b+2
 12470  001BE4  C042  F039         	movff	___fladd@grs,___fladd@a+2
 12471  001BE8  C036  F042         	movff	___fladd@b+3,___fladd@grs
 12472  001BEC  C03A  F036         	movff	___fladd@a+3,___fladd@b+3
 12473  001BF0  C042  F03A         	movff	___fladd@grs,___fladd@a+3
 12474  001BF4                     l4022:
 12475  001BF4  FFFF               	dw	65535	; assembler added errata NOP
 12476  001BF6  0E00               	movlw	0
 12477  001BF8  6E42               	movwf	___fladd@grs^0,c
 12478  001BFA  5041               	movf	___fladd@bexp^0,w,c
 12479  001BFC  C040  F03B         	movff	___fladd@aexp,??___fladd
 12480  001C00  6A3C               	clrf	(??___fladd+1)^0,c
 12481  001C02  5E3B               	subwf	??___fladd^0,f,c
 12482  001C04  0E00               	movlw	0
 12483  001C06  5A3C               	subwfb	(??___fladd+1)^0,f,c
 12484  001C08  BE3C               	btfsc	(??___fladd+1)^0,7,c
 12485  001C0A  EF10  F00E         	goto	u4621
 12486  001C0E  503C               	movf	(??___fladd+1)^0,w,c
 12487  001C10  E10A               	bnz	u4620
 12488  001C12  0E1A               	movlw	26
 12489  001C14  5C3B               	subwf	??___fladd^0,w,c
 12490  001C16  A0D8               	btfss	status,0,c
 12491  001C18  EF10  F00E         	goto	u4621
 12492  001C1C  EF13  F00E         	goto	u4620
 12493  001C20                     u4621:
 12494  001C20  FFFF               	dw	65535	; assembler added errata NOP
 12495  001C22  EF56  F00E         	goto	l857
 12496  001C26                     u4620:
 12497  001C26  FFFF               	dw	65535	; assembler added errata NOP
 12498  001C28  5033               	movf	___fladd@b^0,w,c
 12499  001C2A  1034               	iorwf	(___fladd@b+1)^0,w,c
 12500  001C2C  1035               	iorwf	(___fladd@b+2)^0,w,c
 12501  001C2E  1036               	iorwf	(___fladd@b+3)^0,w,c
 12502  001C30  A4D8               	btfss	status,2,c
 12503  001C32  EF1D  F00E         	goto	u4631
 12504  001C36  EF21  F00E         	goto	u4630
 12505  001C3A                     u4631:
 12506  001C3A  FFFF               	dw	65535	; assembler added errata NOP
 12507  001C3C  0E01               	movlw	1
 12508  001C3E  EF23  F00E         	goto	u4640
 12509  001C42                     u4630:
 12510  001C42  FFFF               	dw	65535	; assembler added errata NOP
 12511  001C44  0E00               	movlw	0
 12512  001C46                     u4640:
 12513  001C46  FFFF               	dw	65535	; assembler added errata NOP
 12514  001C48  6E42               	movwf	___fladd@grs^0,c
 12515  001C4A  0E00               	movlw	0
 12516  001C4C  6E33               	movwf	___fladd@b^0,c
 12517  001C4E  0E00               	movlw	0
 12518  001C50  6E34               	movwf	(___fladd@b+1)^0,c
 12519  001C52  0E00               	movlw	0
 12520  001C54  6E35               	movwf	(___fladd@b+2)^0,c
 12521  001C56  0E00               	movlw	0
 12522  001C58  6E36               	movwf	(___fladd@b+3)^0,c
 12523  001C5A  C040  F041         	movff	___fladd@aexp,___fladd@bexp
 12524  001C5E  EF61  F00E         	goto	l856
 12525  001C62                     l858:
 12526  001C62  FFFF               	dw	65535	; assembler added errata NOP
 12527  001C64  A042               	btfss	___fladd@grs^0,0,c
 12528  001C66  EF37  F00E         	goto	u4651
 12529  001C6A  EF3A  F00E         	goto	u4650
 12530  001C6E                     u4651:
 12531  001C6E  FFFF               	dw	65535	; assembler added errata NOP
 12532  001C70  EF41  F00E         	goto	l4034
 12533  001C74                     u4650:
 12534  001C74  FFFF               	dw	65535	; assembler added errata NOP
 12535  001C76  90D8               	bcf	status,0,c
 12536  001C78  3042               	rrcf	___fladd@grs^0,w,c
 12537  001C7A  0901               	iorlw	1
 12538  001C7C  6E42               	movwf	___fladd@grs^0,c
 12539  001C7E  EF44  F00E         	goto	l4036
 12540  001C82                     l4034:
 12541  001C82  FFFF               	dw	65535	; assembler added errata NOP
 12542  001C84  90D8               	bcf	status,0,c
 12543  001C86  3242               	rrcf	___fladd@grs^0,f,c
 12544  001C88                     l4036:
 12545  001C88  FFFF               	dw	65535	; assembler added errata NOP
 12546  001C8A  A033               	btfss	___fladd@b^0,0,c
 12547  001C8C  EF4A  F00E         	goto	u4661
 12548  001C90  EF4D  F00E         	goto	u4660
 12549  001C94                     u4661:
 12550  001C94  FFFF               	dw	65535	; assembler added errata NOP
 12551  001C96  EF4F  F00E         	goto	l4040
 12552  001C9A                     u4660:
 12553  001C9A  FFFF               	dw	65535	; assembler added errata NOP
 12554  001C9C  8E42               	bsf	___fladd@grs^0,7,c
 12555  001C9E                     l4040:
 12556  001C9E  FFFF               	dw	65535	; assembler added errata NOP
 12557  001CA0  3436               	rlcf	(___fladd@b+3)^0,w,c
 12558  001CA2  3236               	rrcf	(___fladd@b+3)^0,f,c
 12559  001CA4  3235               	rrcf	(___fladd@b+2)^0,f,c
 12560  001CA6  3234               	rrcf	(___fladd@b+1)^0,f,c
 12561  001CA8  3233               	rrcf	___fladd@b^0,f,c
 12562  001CAA  2A41               	incf	___fladd@bexp^0,f,c
 12563  001CAC                     l857:
 12564  001CAC  FFFF               	dw	65535	; assembler added errata NOP
 12565  001CAE  5040               	movf	___fladd@aexp^0,w,c
 12566  001CB0  5C41               	subwf	___fladd@bexp^0,w,c
 12567  001CB2  A0D8               	btfss	status,0,c
 12568  001CB4  EF5E  F00E         	goto	u4671
 12569  001CB8  EF61  F00E         	goto	u4670
 12570  001CBC                     u4671:
 12571  001CBC  FFFF               	dw	65535	; assembler added errata NOP
 12572  001CBE  EF31  F00E         	goto	l858
 12573  001CC2                     u4670:
 12574  001CC2                     l856:
 12575  001CC2  FFFF               	dw	65535	; assembler added errata NOP
 12576  001CC4  BC3F               	btfsc	___fladd@signs^0,6,c
 12577  001CC6  EF67  F00E         	goto	u4681
 12578  001CCA  EF6A  F00E         	goto	u4680
 12579  001CCE                     u4681:
 12580  001CCE  FFFF               	dw	65535	; assembler added errata NOP
 12581  001CD0  EFB7  F00E         	goto	l4068
 12582  001CD4                     u4680:
 12583  001CD4  FFFF               	dw	65535	; assembler added errata NOP
 12584  001CD6  5041               	movf	___fladd@bexp^0,w,c
 12585  001CD8  A4D8               	btfss	status,2,c
 12586  001CDA  EF71  F00E         	goto	u4691
 12587  001CDE  EF74  F00E         	goto	u4690
 12588  001CE2                     u4691:
 12589  001CE2  FFFF               	dw	65535	; assembler added errata NOP
 12590  001CE4  EF7F  F00E         	goto	l4050
 12591  001CE8                     u4690:
 12592  001CE8  FFFF               	dw	65535	; assembler added errata NOP
 12593  001CEA  0E00               	movlw	0
 12594  001CEC  6E33               	movwf	?___fladd^0,c
 12595  001CEE  0E00               	movlw	0
 12596  001CF0  6E34               	movwf	(?___fladd+1)^0,c
 12597  001CF2  0E00               	movlw	0
 12598  001CF4  6E35               	movwf	(?___fladd+2)^0,c
 12599  001CF6  0E00               	movlw	0
 12600  001CF8  6E36               	movwf	(?___fladd+3)^0,c
 12601  001CFA  EF0E  F010         	goto	l865
 12602  001CFE                     l4050:
 12603  001CFE  FFFF               	dw	65535	; assembler added errata NOP
 12604  001D00  5037               	movf	___fladd@a^0,w,c
 12605  001D02  2633               	addwf	___fladd@b^0,f,c
 12606  001D04  5038               	movf	(___fladd@a+1)^0,w,c
 12607  001D06  2234               	addwfc	(___fladd@b+1)^0,f,c
 12608  001D08  5039               	movf	(___fladd@a+2)^0,w,c
 12609  001D0A  2235               	addwfc	(___fladd@b+2)^0,f,c
 12610  001D0C  503A               	movf	(___fladd@a+3)^0,w,c
 12611  001D0E  2236               	addwfc	(___fladd@b+3)^0,f,c
 12612  001D10  A036               	btfss	(___fladd@b+3)^0,0,c
 12613  001D12  EF8D  F00E         	goto	u4701
 12614  001D16  EF90  F00E         	goto	u4700
 12615  001D1A                     u4701:
 12616  001D1A  FFFF               	dw	65535	; assembler added errata NOP
 12617  001D1C  EF5B  F00F         	goto	l4104
 12618  001D20                     u4700:
 12619  001D20  FFFF               	dw	65535	; assembler added errata NOP
 12620  001D22  A042               	btfss	___fladd@grs^0,0,c
 12621  001D24  EF96  F00E         	goto	u4711
 12622  001D28  EF99  F00E         	goto	u4710
 12623  001D2C                     u4711:
 12624  001D2C  FFFF               	dw	65535	; assembler added errata NOP
 12625  001D2E  EFA0  F00E         	goto	l4058
 12626  001D32                     u4710:
 12627  001D32  FFFF               	dw	65535	; assembler added errata NOP
 12628  001D34  90D8               	bcf	status,0,c
 12629  001D36  3042               	rrcf	___fladd@grs^0,w,c
 12630  001D38  0901               	iorlw	1
 12631  001D3A  6E42               	movwf	___fladd@grs^0,c
 12632  001D3C  EFA3  F00E         	goto	l4060
 12633  001D40                     l4058:
 12634  001D40  FFFF               	dw	65535	; assembler added errata NOP
 12635  001D42  90D8               	bcf	status,0,c
 12636  001D44  3242               	rrcf	___fladd@grs^0,f,c
 12637  001D46                     l4060:
 12638  001D46  FFFF               	dw	65535	; assembler added errata NOP
 12639  001D48  A033               	btfss	___fladd@b^0,0,c
 12640  001D4A  EFA9  F00E         	goto	u4721
 12641  001D4E  EFAC  F00E         	goto	u4720
 12642  001D52                     u4721:
 12643  001D52  FFFF               	dw	65535	; assembler added errata NOP
 12644  001D54  EFAE  F00E         	goto	l4064
 12645  001D58                     u4720:
 12646  001D58  FFFF               	dw	65535	; assembler added errata NOP
 12647  001D5A  8E42               	bsf	___fladd@grs^0,7,c
 12648  001D5C                     l4064:
 12649  001D5C  FFFF               	dw	65535	; assembler added errata NOP
 12650  001D5E  3436               	rlcf	(___fladd@b+3)^0,w,c
 12651  001D60  3236               	rrcf	(___fladd@b+3)^0,f,c
 12652  001D62  3235               	rrcf	(___fladd@b+2)^0,f,c
 12653  001D64  3234               	rrcf	(___fladd@b+1)^0,f,c
 12654  001D66  3233               	rrcf	___fladd@b^0,f,c
 12655  001D68  2A41               	incf	___fladd@bexp^0,f,c
 12656  001D6A  EF5B  F00F         	goto	l4104
 12657  001D6E                     l4068:
 12658  001D6E  FFFF               	dw	65535	; assembler added errata NOP
 12659  001D70  5037               	movf	___fladd@a^0,w,c
 12660  001D72  5C33               	subwf	___fladd@b^0,w,c
 12661  001D74  5038               	movf	(___fladd@a+1)^0,w,c
 12662  001D76  5834               	subwfb	(___fladd@b+1)^0,w,c
 12663  001D78  5039               	movf	(___fladd@a+2)^0,w,c
 12664  001D7A  5835               	subwfb	(___fladd@b+2)^0,w,c
 12665  001D7C  5036               	movf	(___fladd@b+3)^0,w,c
 12666  001D7E  0A80               	xorlw	128
 12667  001D80  6E3B               	movwf	??___fladd^0,c
 12668  001D82  503A               	movf	(___fladd@a+3)^0,w,c
 12669  001D84  0A80               	xorlw	128
 12670  001D86  583B               	subwfb	??___fladd^0,w,c
 12671  001D88  B0D8               	btfsc	status,0,c
 12672  001D8A  EFC9  F00E         	goto	u4731
 12673  001D8E  EFCC  F00E         	goto	u4730
 12674  001D92                     u4731:
 12675  001D92  FFFF               	dw	65535	; assembler added errata NOP
 12676  001D94  EFFA  F00E         	goto	l4078
 12677  001D98                     u4730:
 12678  001D98  FFFF               	dw	65535	; assembler added errata NOP
 12679  001D9A  5033               	movf	___fladd@b^0,w,c
 12680  001D9C  5C37               	subwf	___fladd@a^0,w,c
 12681  001D9E  6E3B               	movwf	??___fladd^0,c
 12682  001DA0  5034               	movf	(___fladd@b+1)^0,w,c
 12683  001DA2  5838               	subwfb	(___fladd@a+1)^0,w,c
 12684  001DA4  6E3C               	movwf	(??___fladd+1)^0,c
 12685  001DA6  5035               	movf	(___fladd@b+2)^0,w,c
 12686  001DA8  5839               	subwfb	(___fladd@a+2)^0,w,c
 12687  001DAA  6E3D               	movwf	(??___fladd+2)^0,c
 12688  001DAC  5036               	movf	(___fladd@b+3)^0,w,c
 12689  001DAE  583A               	subwfb	(___fladd@a+3)^0,w,c
 12690  001DB0  6E3E               	movwf	(??___fladd+3)^0,c
 12691  001DB2  0EFF               	movlw	255
 12692  001DB4  243B               	addwf	??___fladd^0,w,c
 12693  001DB6  6E33               	movwf	___fladd@b^0,c
 12694  001DB8  0EFF               	movlw	255
 12695  001DBA  203C               	addwfc	(??___fladd+1)^0,w,c
 12696  001DBC  6E34               	movwf	(___fladd@b+1)^0,c
 12697  001DBE  0EFF               	movlw	255
 12698  001DC0  203D               	addwfc	(??___fladd+2)^0,w,c
 12699  001DC2  6E35               	movwf	(___fladd@b+2)^0,c
 12700  001DC4  0EFF               	movlw	255
 12701  001DC6  203E               	addwfc	(??___fladd+3)^0,w,c
 12702  001DC8  6E36               	movwf	(___fladd@b+3)^0,c
 12703  001DCA  0E80               	movlw	128
 12704  001DCC  1A3F               	xorwf	___fladd@signs^0,f,c
 12705  001DCE  6C42               	negf	___fladd@grs^0,c
 12706  001DD0  5042               	movf	___fladd@grs^0,w,c
 12707  001DD2  A4D8               	btfss	status,2,c
 12708  001DD4  EFEE  F00E         	goto	u4741
 12709  001DD8  EFF1  F00E         	goto	u4740
 12710  001DDC                     u4741:
 12711  001DDC  FFFF               	dw	65535	; assembler added errata NOP
 12712  001DDE  EF03  F00F         	goto	l873
 12713  001DE2                     u4740:
 12714  001DE2  FFFF               	dw	65535	; assembler added errata NOP
 12715  001DE4  0E01               	movlw	1
 12716  001DE6  2633               	addwf	___fladd@b^0,f,c
 12717  001DE8  0E00               	movlw	0
 12718  001DEA  2234               	addwfc	(___fladd@b+1)^0,f,c
 12719  001DEC  2235               	addwfc	(___fladd@b+2)^0,f,c
 12720  001DEE  2236               	addwfc	(___fladd@b+3)^0,f,c
 12721  001DF0  EF03  F00F         	goto	l873
 12722  001DF4                     l4078:
 12723  001DF4  FFFF               	dw	65535	; assembler added errata NOP
 12724  001DF6  5037               	movf	___fladd@a^0,w,c
 12725  001DF8  5E33               	subwf	___fladd@b^0,f,c
 12726  001DFA  5038               	movf	(___fladd@a+1)^0,w,c
 12727  001DFC  5A34               	subwfb	(___fladd@b+1)^0,f,c
 12728  001DFE  5039               	movf	(___fladd@a+2)^0,w,c
 12729  001E00  5A35               	subwfb	(___fladd@b+2)^0,f,c
 12730  001E02  503A               	movf	(___fladd@a+3)^0,w,c
 12731  001E04  5A36               	subwfb	(___fladd@b+3)^0,f,c
 12732  001E06                     l873:
 12733  001E06  FFFF               	dw	65535	; assembler added errata NOP
 12734  001E08  5033               	movf	___fladd@b^0,w,c
 12735  001E0A  1034               	iorwf	(___fladd@b+1)^0,w,c
 12736  001E0C  1035               	iorwf	(___fladd@b+2)^0,w,c
 12737  001E0E  1036               	iorwf	(___fladd@b+3)^0,w,c
 12738  001E10  A4D8               	btfss	status,2,c
 12739  001E12  EF0D  F00F         	goto	u4751
 12740  001E16  EF10  F00F         	goto	u4750
 12741  001E1A                     u4751:
 12742  001E1A  FFFF               	dw	65535	; assembler added errata NOP
 12743  001E1C  EF52  F00F         	goto	l4102
 12744  001E20                     u4750:
 12745  001E20  FFFF               	dw	65535	; assembler added errata NOP
 12746  001E22  5042               	movf	___fladd@grs^0,w,c
 12747  001E24  A4D8               	btfss	status,2,c
 12748  001E26  EF17  F00F         	goto	u4761
 12749  001E2A  EF1A  F00F         	goto	u4760
 12750  001E2E                     u4761:
 12751  001E2E  FFFF               	dw	65535	; assembler added errata NOP
 12752  001E30  EF52  F00F         	goto	l4102
 12753  001E34                     u4760:
 12754  001E34  FFFF               	dw	65535	; assembler added errata NOP
 12755  001E36  0E00               	movlw	0
 12756  001E38  6E33               	movwf	?___fladd^0,c
 12757  001E3A  0E00               	movlw	0
 12758  001E3C  6E34               	movwf	(?___fladd+1)^0,c
 12759  001E3E  0E00               	movlw	0
 12760  001E40  6E35               	movwf	(?___fladd+2)^0,c
 12761  001E42  0E00               	movlw	0
 12762  001E44  6E36               	movwf	(?___fladd+3)^0,c
 12763  001E46  EF0E  F010         	goto	l865
 12764  001E4A                     l4086:
 12765  001E4A  FFFF               	dw	65535	; assembler added errata NOP
 12766  001E4C  90D8               	bcf	status,0,c
 12767  001E4E  3633               	rlcf	___fladd@b^0,f,c
 12768  001E50  3634               	rlcf	(___fladd@b+1)^0,f,c
 12769  001E52  3635               	rlcf	(___fladd@b+2)^0,f,c
 12770  001E54  3636               	rlcf	(___fladd@b+3)^0,f,c
 12771  001E56  AE42               	btfss	___fladd@grs^0,7,c
 12772  001E58  EF30  F00F         	goto	u4771
 12773  001E5C  EF33  F00F         	goto	u4770
 12774  001E60                     u4771:
 12775  001E60  FFFF               	dw	65535	; assembler added errata NOP
 12776  001E62  EF35  F00F         	goto	l4092
 12777  001E66                     u4770:
 12778  001E66  FFFF               	dw	65535	; assembler added errata NOP
 12779  001E68  8033               	bsf	___fladd@b^0,0,c
 12780  001E6A                     l4092:
 12781  001E6A  FFFF               	dw	65535	; assembler added errata NOP
 12782  001E6C  A042               	btfss	___fladd@grs^0,0,c
 12783  001E6E  EF3B  F00F         	goto	u4781
 12784  001E72  EF3E  F00F         	goto	u4780
 12785  001E76                     u4781:
 12786  001E76  FFFF               	dw	65535	; assembler added errata NOP
 12787  001E78  EF43  F00F         	goto	l4096
 12788  001E7C                     u4780:
 12789  001E7C  FFFF               	dw	65535	; assembler added errata NOP
 12790  001E7E  80D8               	bsf	status,0,c
 12791  001E80  3642               	rlcf	___fladd@grs^0,f,c
 12792  001E82  EF46  F00F         	goto	l4098
 12793  001E86                     l4096:
 12794  001E86  FFFF               	dw	65535	; assembler added errata NOP
 12795  001E88  90D8               	bcf	status,0,c
 12796  001E8A  3642               	rlcf	___fladd@grs^0,f,c
 12797  001E8C                     l4098:
 12798  001E8C  FFFF               	dw	65535	; assembler added errata NOP
 12799  001E8E  5041               	movf	___fladd@bexp^0,w,c
 12800  001E90  B4D8               	btfsc	status,2,c
 12801  001E92  EF4D  F00F         	goto	u4791
 12802  001E96  EF50  F00F         	goto	u4790
 12803  001E9A                     u4791:
 12804  001E9A  FFFF               	dw	65535	; assembler added errata NOP
 12805  001E9C  EF52  F00F         	goto	l4102
 12806  001EA0                     u4790:
 12807  001EA0  FFFF               	dw	65535	; assembler added errata NOP
 12808  001EA2  0641               	decf	___fladd@bexp^0,f,c
 12809  001EA4                     l4102:
 12810  001EA4  FFFF               	dw	65535	; assembler added errata NOP
 12811  001EA6  AE35               	btfss	(___fladd@b+2)^0,7,c
 12812  001EA8  EF58  F00F         	goto	u4801
 12813  001EAC  EF5B  F00F         	goto	u4800
 12814  001EB0                     u4801:
 12815  001EB0  FFFF               	dw	65535	; assembler added errata NOP
 12816  001EB2  EF25  F00F         	goto	l4086
 12817  001EB6                     u4800:
 12818  001EB6                     l4104:
 12819  001EB6  FFFF               	dw	65535	; assembler added errata NOP
 12820  001EB8  0E00               	movlw	0
 12821  001EBA  6E40               	movwf	___fladd@aexp^0,c
 12822  001EBC  AE42               	btfss	___fladd@grs^0,7,c
 12823  001EBE  EF63  F00F         	goto	u4811
 12824  001EC2  EF66  F00F         	goto	u4810
 12825  001EC6                     u4811:
 12826  001EC6  FFFF               	dw	65535	; assembler added errata NOP
 12827  001EC8  EF85  F00F         	goto	l882
 12828  001ECC                     u4810:
 12829  001ECC  FFFF               	dw	65535	; assembler added errata NOP
 12830  001ECE  C042  F03B         	movff	___fladd@grs,??___fladd
 12831  001ED2  0E7F               	movlw	127
 12832  001ED4  163B               	andwf	??___fladd^0,f,c
 12833  001ED6  B4D8               	btfsc	status,2,c
 12834  001ED8  EF70  F00F         	goto	u4821
 12835  001EDC  EF73  F00F         	goto	u4820
 12836  001EE0                     u4821:
 12837  001EE0  FFFF               	dw	65535	; assembler added errata NOP
 12838  001EE2  EF79  F00F         	goto	l883
 12839  001EE6                     u4820:
 12840  001EE6  FFFF               	dw	65535	; assembler added errata NOP
 12841  001EE8                     l4110:
 12842  001EE8  FFFF               	dw	65535	; assembler added errata NOP
 12843  001EEA  0E01               	movlw	1
 12844  001EEC  6E40               	movwf	___fladd@aexp^0,c
 12845  001EEE  EF85  F00F         	goto	l882
 12846  001EF2                     l883:
 12847  001EF2  FFFF               	dw	65535	; assembler added errata NOP
 12848  001EF4  A033               	btfss	___fladd@b^0,0,c
 12849  001EF6  EF7F  F00F         	goto	u4831
 12850  001EFA  EF82  F00F         	goto	u4830
 12851  001EFE                     u4831:
 12852  001EFE  FFFF               	dw	65535	; assembler added errata NOP
 12853  001F00  EF85  F00F         	goto	l882
 12854  001F04                     u4830:
 12855  001F04  FFFF               	dw	65535	; assembler added errata NOP
 12856  001F06  EF74  F00F         	goto	l4110
 12857  001F0A                     l882:
 12858  001F0A  FFFF               	dw	65535	; assembler added errata NOP
 12859  001F0C  5040               	movf	___fladd@aexp^0,w,c
 12860  001F0E  B4D8               	btfsc	status,2,c
 12861  001F10  EF8C  F00F         	goto	u4841
 12862  001F14  EF8F  F00F         	goto	u4840
 12863  001F18                     u4841:
 12864  001F18  FFFF               	dw	65535	; assembler added errata NOP
 12865  001F1A  EFBF  F00F         	goto	l4122
 12866  001F1E                     u4840:
 12867  001F1E  FFFF               	dw	65535	; assembler added errata NOP
 12868  001F20  0E01               	movlw	1
 12869  001F22  2633               	addwf	___fladd@b^0,f,c
 12870  001F24  0E00               	movlw	0
 12871  001F26  2234               	addwfc	(___fladd@b+1)^0,f,c
 12872  001F28  2235               	addwfc	(___fladd@b+2)^0,f,c
 12873  001F2A  2236               	addwfc	(___fladd@b+3)^0,f,c
 12874  001F2C  A036               	btfss	(___fladd@b+3)^0,0,c
 12875  001F2E  EF9B  F00F         	goto	u4851
 12876  001F32  EF9E  F00F         	goto	u4850
 12877  001F36                     u4851:
 12878  001F36  FFFF               	dw	65535	; assembler added errata NOP
 12879  001F38  EFBF  F00F         	goto	l4122
 12880  001F3C                     u4850:
 12881  001F3C  FFFF               	dw	65535	; assembler added errata NOP
 12882  001F3E  C033  F03B         	movff	___fladd@b,??___fladd
 12883  001F42  C034  F03C         	movff	___fladd@b+1,??___fladd+1
 12884  001F46  C035  F03D         	movff	___fladd@b+2,??___fladd+2
 12885  001F4A  C036  F03E         	movff	___fladd@b+3,??___fladd+3
 12886  001F4E  343E               	rlcf	(??___fladd+3)^0,w,c
 12887  001F50  323E               	rrcf	(??___fladd+3)^0,f,c
 12888  001F52  323D               	rrcf	(??___fladd+2)^0,f,c
 12889  001F54  323C               	rrcf	(??___fladd+1)^0,f,c
 12890  001F56  323B               	rrcf	??___fladd^0,f,c
 12891  001F58  C03B  F033         	movff	??___fladd,___fladd@b
 12892  001F5C  C03C  F034         	movff	??___fladd+1,___fladd@b+1
 12893  001F60  C03D  F035         	movff	??___fladd+2,___fladd@b+2
 12894  001F64  C03E  F036         	movff	??___fladd+3,___fladd@b+3
 12895  001F68  2841               	incf	___fladd@bexp^0,w,c
 12896  001F6A  B4D8               	btfsc	status,2,c
 12897  001F6C  EFBA  F00F         	goto	u4861
 12898  001F70  EFBD  F00F         	goto	u4860
 12899  001F74                     u4861:
 12900  001F74  FFFF               	dw	65535	; assembler added errata NOP
 12901  001F76  EFBF  F00F         	goto	l4122
 12902  001F7A                     u4860:
 12903  001F7A  FFFF               	dw	65535	; assembler added errata NOP
 12904  001F7C  2A41               	incf	___fladd@bexp^0,f,c
 12905  001F7E                     l4122:
 12906  001F7E  FFFF               	dw	65535	; assembler added errata NOP
 12907  001F80  2841               	incf	___fladd@bexp^0,w,c
 12908  001F82  B4D8               	btfsc	status,2,c
 12909  001F84  EFC6  F00F         	goto	u4871
 12910  001F88  EFC9  F00F         	goto	u4870
 12911  001F8C                     u4871:
 12912  001F8C  FFFF               	dw	65535	; assembler added errata NOP
 12913  001F8E  EFD3  F00F         	goto	l4126
 12914  001F92                     u4870:
 12915  001F92  FFFF               	dw	65535	; assembler added errata NOP
 12916  001F94  5041               	movf	___fladd@bexp^0,w,c
 12917  001F96  A4D8               	btfss	status,2,c
 12918  001F98  EFD0  F00F         	goto	u4881
 12919  001F9C  EFD3  F00F         	goto	u4880
 12920  001FA0                     u4881:
 12921  001FA0  FFFF               	dw	65535	; assembler added errata NOP
 12922  001FA2  EFE8  F00F         	goto	l4130
 12923  001FA6                     u4880:
 12924  001FA6                     l4126:
 12925  001FA6  FFFF               	dw	65535	; assembler added errata NOP
 12926  001FA8  0E00               	movlw	0
 12927  001FAA  6E33               	movwf	___fladd@b^0,c
 12928  001FAC  0E00               	movlw	0
 12929  001FAE  6E34               	movwf	(___fladd@b+1)^0,c
 12930  001FB0  0E00               	movlw	0
 12931  001FB2  6E35               	movwf	(___fladd@b+2)^0,c
 12932  001FB4  0E00               	movlw	0
 12933  001FB6  6E36               	movwf	(___fladd@b+3)^0,c
 12934  001FB8  5041               	movf	___fladd@bexp^0,w,c
 12935  001FBA  A4D8               	btfss	status,2,c
 12936  001FBC  EFE2  F00F         	goto	u4891
 12937  001FC0  EFE5  F00F         	goto	u4890
 12938  001FC4                     u4891:
 12939  001FC4  FFFF               	dw	65535	; assembler added errata NOP
 12940  001FC6  EFE8  F00F         	goto	l4130
 12941  001FCA                     u4890:
 12942  001FCA  FFFF               	dw	65535	; assembler added errata NOP
 12943  001FCC  0E00               	movlw	0
 12944  001FCE  6E3F               	movwf	___fladd@signs^0,c
 12945  001FD0                     l4130:
 12946  001FD0  FFFF               	dw	65535	; assembler added errata NOP
 12947  001FD2  A041               	btfss	___fladd@bexp^0,0,c
 12948  001FD4  EFEE  F00F         	goto	u4901
 12949  001FD8  EFF1  F00F         	goto	u4900
 12950  001FDC                     u4901:
 12951  001FDC  FFFF               	dw	65535	; assembler added errata NOP
 12952  001FDE  EFF5  F00F         	goto	l4134
 12953  001FE2                     u4900:
 12954  001FE2  FFFF               	dw	65535	; assembler added errata NOP
 12955  001FE4  8E35               	bsf	(___fladd@b+2)^0,7,c
 12956  001FE6  EFF7  F00F         	goto	l4136
 12957  001FEA                     l4134:
 12958  001FEA  FFFF               	dw	65535	; assembler added errata NOP
 12959  001FEC  9E35               	bcf	(___fladd@b+2)^0,7,c
 12960  001FEE                     l4136:
 12961  001FEE  FFFF               	dw	65535	; assembler added errata NOP
 12962  001FF0  90D8               	bcf	status,0,c
 12963  001FF2  3041               	rrcf	___fladd@bexp^0,w,c
 12964  001FF4  6E36               	movwf	(___fladd@b+3)^0,c
 12965  001FF6  AE3F               	btfss	___fladd@signs^0,7,c
 12966  001FF8  EF00  F010         	goto	u4911
 12967  001FFC  EF03  F010         	goto	u4910
 12968  002000                     u4911:
 12969  002000  FFFF               	dw	65535	; assembler added errata NOP
 12970  002002  EF05  F010         	goto	l4142
 12971  002006                     u4910:
 12972  002006  FFFF               	dw	65535	; assembler added errata NOP
 12973  002008  8E36               	bsf	(___fladd@b+3)^0,7,c
 12974  00200A                     l4142:
 12975  00200A  FFFF               	dw	65535	; assembler added errata NOP
 12976  00200C  C033  F033         	movff	___fladd@b,?___fladd
 12977  002010  C034  F034         	movff	___fladd@b+1,?___fladd+1
 12978  002014  C035  F035         	movff	___fladd@b+2,?___fladd+2
 12979  002018  C036  F036         	movff	___fladd@b+3,?___fladd+3
 12980  00201C                     l865:
 12981  00201C  FFFF               	dw	65535	; assembler added errata NOP
 12982  00201E  0012               	return		;funcret
 12983  002020  FFFF               	dw	65535	; errata NOP
 12984  002022                     __end_of___fladd:
 12985                           	callstack 0
 12986                           
 12987 ;; *************** function ___flneg *****************
 12988 ;; Defined at:
 12989 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
 12990 ;; Parameters:    Size  Location     Type
 12991 ;;  f1              4    0[COMRAM] unsigned char 
 12992 ;; Auto vars:     Size  Location     Type
 12993 ;;		None
 12994 ;; Return value:  Size  Location     Type
 12995 ;;                  4    0[COMRAM] unsigned char 
 12996 ;; Registers used:
 12997 ;;		wreg, status,2, status,0
 12998 ;; Tracked objects:
 12999 ;;		On entry : 0/0
 13000 ;;		On exit  : 0/0
 13001 ;;		Unchanged: 0/0
 13002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13003 ;;      Params:         4       0       0       0       0       0       0
 13004 ;;      Locals:         0       0       0       0       0       0       0
 13005 ;;      Temps:          0       0       0       0       0       0       0
 13006 ;;      Totals:         4       0       0       0       0       0       0
 13007 ;;Total ram usage:        4 bytes
 13008 ;; Hardware stack levels used:    1
 13009 ;; Hardware stack levels required when called:    1
 13010 ;; This function calls:
 13011 ;;		Nothing
 13012 ;; This function is called by:
 13013 ;;		_roundf
 13014 ;; This function uses a non-reentrant model
 13015 ;;
 13016                           
 13017                           	psect	text52
 13018  006CFA                     __ptext52:
 13019                           	callstack 0
 13020  006CFA                     ___flneg:
 13021                           	callstack 0
 13022  006CFA  FFFF               	dw	65535	; assembler added errata NOP
 13023  006CFC  5001               	movf	___flneg@f1^0,w,c
 13024  006CFE  1002               	iorwf	(___flneg@f1+1)^0,w,c
 13025  006D00  1003               	iorwf	(___flneg@f1+2)^0,w,c
 13026  006D02  1004               	iorwf	(___flneg@f1+3)^0,w,c
 13027  006D04  B4D8               	btfsc	status,2,c
 13028  006D06  EF87  F036         	goto	u5881
 13029  006D0A  EF8A  F036         	goto	u5880
 13030  006D0E                     u5881:
 13031  006D0E  FFFF               	dw	65535	; assembler added errata NOP
 13032  006D10  EF93  F036         	goto	l4778
 13033  006D14                     u5880:
 13034  006D14  FFFF               	dw	65535	; assembler added errata NOP
 13035  006D16  0E00               	movlw	0
 13036  006D18  1A01               	xorwf	___flneg@f1^0,f,c
 13037  006D1A  0E00               	movlw	0
 13038  006D1C  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 13039  006D1E  0E00               	movlw	0
 13040  006D20  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 13041  006D22  0E80               	movlw	128
 13042  006D24  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 13043  006D26                     l4778:
 13044  006D26  FFFF               	dw	65535	; assembler added errata NOP
 13045  006D28  C001  F001         	movff	___flneg@f1,?___flneg
 13046  006D2C  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 13047  006D30  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 13048  006D34  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 13049  006D38  0012               	return		;funcret
 13050  006D3A  FFFF               	dw	65535	; errata NOP
 13051  006D3C                     __end_of___flneg:
 13052                           	callstack 0
 13053                           
 13054 ;; *************** function ___flmul *****************
 13055 ;; Defined at:
 13056 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 13057 ;; Parameters:    Size  Location     Type
 13058 ;;  b               4    0[COMRAM] unsigned char 
 13059 ;;  a               4    4[COMRAM] unsigned char 
 13060 ;; Auto vars:     Size  Location     Type
 13061 ;;  prod            4   19[COMRAM] struct .
 13062 ;;  grs             4   13[COMRAM] unsigned long 
 13063 ;;  temp            2   23[COMRAM] struct .
 13064 ;;  bexp            1   18[COMRAM] unsigned char 
 13065 ;;  aexp            1   17[COMRAM] unsigned char 
 13066 ;;  sign            1   12[COMRAM] unsigned char 
 13067 ;; Return value:  Size  Location     Type
 13068 ;;                  4    0[COMRAM] unsigned char 
 13069 ;; Registers used:
 13070 ;;		wreg, status,2, status,0, prodl, prodh
 13071 ;; Tracked objects:
 13072 ;;		On entry : 0/0
 13073 ;;		On exit  : 0/0
 13074 ;;		Unchanged: 0/0
 13075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13076 ;;      Params:         8       0       0       0       0       0       0
 13077 ;;      Locals:        13       0       0       0       0       0       0
 13078 ;;      Temps:          4       0       0       0       0       0       0
 13079 ;;      Totals:        25       0       0       0       0       0       0
 13080 ;;Total ram usage:       25 bytes
 13081 ;; Hardware stack levels used:    1
 13082 ;; Hardware stack levels required when called:    1
 13083 ;; This function calls:
 13084 ;;		Nothing
 13085 ;; This function is called by:
 13086 ;;		_init_timer_2
 13087 ;;		_update_pwm_duty_ccp1
 13088 ;;		_roundf
 13089 ;; This function uses a non-reentrant model
 13090 ;;
 13091                           
 13092                           	psect	text53
 13093  002022                     __ptext53:
 13094                           	callstack 0
 13095  002022                     ___flmul:
 13096                           	callstack 0
 13097  002022  FFFF               	dw	65535	; assembler added errata NOP
 13098  002024  5004               	movf	(___flmul@b+3)^0,w,c
 13099  002026  0B80               	andlw	128
 13100  002028  6E0D               	movwf	___flmul@sign^0,c
 13101  00202A  5004               	movf	(___flmul@b+3)^0,w,c
 13102  00202C  2404               	addwf	(___flmul@b+3)^0,w,c
 13103  00202E  6E13               	movwf	___flmul@bexp^0,c
 13104  002030  AE03               	btfss	(___flmul@b+2)^0,7,c
 13105  002032  EF1D  F010         	goto	u5641
 13106  002036  EF20  F010         	goto	u5640
 13107  00203A                     u5641:
 13108  00203A  FFFF               	dw	65535	; assembler added errata NOP
 13109  00203C  EF22  F010         	goto	l4622
 13110  002040                     u5640:
 13111  002040  FFFF               	dw	65535	; assembler added errata NOP
 13112  002042  8013               	bsf	___flmul@bexp^0,0,c
 13113  002044                     l4622:
 13114  002044  FFFF               	dw	65535	; assembler added errata NOP
 13115  002046  5013               	movf	___flmul@bexp^0,w,c
 13116  002048  B4D8               	btfsc	status,2,c
 13117  00204A  EF29  F010         	goto	u5651
 13118  00204E  EF2C  F010         	goto	u5650
 13119  002052                     u5651:
 13120  002052  FFFF               	dw	65535	; assembler added errata NOP
 13121  002054  EF43  F010         	goto	l4630
 13122  002058                     u5650:
 13123  002058  FFFF               	dw	65535	; assembler added errata NOP
 13124  00205A  2813               	incf	___flmul@bexp^0,w,c
 13125  00205C  A4D8               	btfss	status,2,c
 13126  00205E  EF33  F010         	goto	u5661
 13127  002062  EF36  F010         	goto	u5660
 13128  002066                     u5661:
 13129  002066  FFFF               	dw	65535	; assembler added errata NOP
 13130  002068  EF3F  F010         	goto	l4628
 13131  00206C                     u5660:
 13132  00206C  FFFF               	dw	65535	; assembler added errata NOP
 13133  00206E  0E00               	movlw	0
 13134  002070  6E01               	movwf	___flmul@b^0,c
 13135  002072  0E00               	movlw	0
 13136  002074  6E02               	movwf	(___flmul@b+1)^0,c
 13137  002076  0E00               	movlw	0
 13138  002078  6E03               	movwf	(___flmul@b+2)^0,c
 13139  00207A  0E00               	movlw	0
 13140  00207C  6E04               	movwf	(___flmul@b+3)^0,c
 13141  00207E                     l4628:
 13142  00207E  FFFF               	dw	65535	; assembler added errata NOP
 13143  002080  8E03               	bsf	(___flmul@b+2)^0,7,c
 13144  002082  EF4C  F010         	goto	l4632
 13145  002086                     l4630:
 13146  002086  FFFF               	dw	65535	; assembler added errata NOP
 13147  002088  0E00               	movlw	0
 13148  00208A  6E01               	movwf	___flmul@b^0,c
 13149  00208C  0E00               	movlw	0
 13150  00208E  6E02               	movwf	(___flmul@b+1)^0,c
 13151  002090  0E00               	movlw	0
 13152  002092  6E03               	movwf	(___flmul@b+2)^0,c
 13153  002094  0E00               	movlw	0
 13154  002096  6E04               	movwf	(___flmul@b+3)^0,c
 13155  002098                     l4632:
 13156  002098  FFFF               	dw	65535	; assembler added errata NOP
 13157  00209A  5008               	movf	(___flmul@a+3)^0,w,c
 13158  00209C  0B80               	andlw	128
 13159  00209E  1A0D               	xorwf	___flmul@sign^0,f,c
 13160  0020A0  5008               	movf	(___flmul@a+3)^0,w,c
 13161  0020A2  2408               	addwf	(___flmul@a+3)^0,w,c
 13162  0020A4  6E12               	movwf	___flmul@aexp^0,c
 13163  0020A6  AE07               	btfss	(___flmul@a+2)^0,7,c
 13164  0020A8  EF58  F010         	goto	u5671
 13165  0020AC  EF5B  F010         	goto	u5670
 13166  0020B0                     u5671:
 13167  0020B0  FFFF               	dw	65535	; assembler added errata NOP
 13168  0020B2  EF5D  F010         	goto	l4640
 13169  0020B6                     u5670:
 13170  0020B6  FFFF               	dw	65535	; assembler added errata NOP
 13171  0020B8  8012               	bsf	___flmul@aexp^0,0,c
 13172  0020BA                     l4640:
 13173  0020BA  FFFF               	dw	65535	; assembler added errata NOP
 13174  0020BC  5012               	movf	___flmul@aexp^0,w,c
 13175  0020BE  B4D8               	btfsc	status,2,c
 13176  0020C0  EF64  F010         	goto	u5681
 13177  0020C4  EF67  F010         	goto	u5680
 13178  0020C8                     u5681:
 13179  0020C8  FFFF               	dw	65535	; assembler added errata NOP
 13180  0020CA  EF7E  F010         	goto	l4648
 13181  0020CE                     u5680:
 13182  0020CE  FFFF               	dw	65535	; assembler added errata NOP
 13183  0020D0  2812               	incf	___flmul@aexp^0,w,c
 13184  0020D2  A4D8               	btfss	status,2,c
 13185  0020D4  EF6E  F010         	goto	u5691
 13186  0020D8  EF71  F010         	goto	u5690
 13187  0020DC                     u5691:
 13188  0020DC  FFFF               	dw	65535	; assembler added errata NOP
 13189  0020DE  EF7A  F010         	goto	l4646
 13190  0020E2                     u5690:
 13191  0020E2  FFFF               	dw	65535	; assembler added errata NOP
 13192  0020E4  0E00               	movlw	0
 13193  0020E6  6E05               	movwf	___flmul@a^0,c
 13194  0020E8  0E00               	movlw	0
 13195  0020EA  6E06               	movwf	(___flmul@a+1)^0,c
 13196  0020EC  0E00               	movlw	0
 13197  0020EE  6E07               	movwf	(___flmul@a+2)^0,c
 13198  0020F0  0E00               	movlw	0
 13199  0020F2  6E08               	movwf	(___flmul@a+3)^0,c
 13200  0020F4                     l4646:
 13201  0020F4  FFFF               	dw	65535	; assembler added errata NOP
 13202  0020F6  8E07               	bsf	(___flmul@a+2)^0,7,c
 13203  0020F8  EF87  F010         	goto	l942
 13204  0020FC                     l4648:
 13205  0020FC  FFFF               	dw	65535	; assembler added errata NOP
 13206  0020FE  0E00               	movlw	0
 13207  002100  6E05               	movwf	___flmul@a^0,c
 13208  002102  0E00               	movlw	0
 13209  002104  6E06               	movwf	(___flmul@a+1)^0,c
 13210  002106  0E00               	movlw	0
 13211  002108  6E07               	movwf	(___flmul@a+2)^0,c
 13212  00210A  0E00               	movlw	0
 13213  00210C  6E08               	movwf	(___flmul@a+3)^0,c
 13214  00210E                     l942:
 13215  00210E  FFFF               	dw	65535	; assembler added errata NOP
 13216  002110  5012               	movf	___flmul@aexp^0,w,c
 13217  002112  B4D8               	btfsc	status,2,c
 13218  002114  EF8E  F010         	goto	u5701
 13219  002118  EF91  F010         	goto	u5700
 13220  00211C                     u5701:
 13221  00211C  FFFF               	dw	65535	; assembler added errata NOP
 13222  00211E  EF9B  F010         	goto	l4652
 13223  002122                     u5700:
 13224  002122  FFFF               	dw	65535	; assembler added errata NOP
 13225  002124  5013               	movf	___flmul@bexp^0,w,c
 13226  002126  A4D8               	btfss	status,2,c
 13227  002128  EF98  F010         	goto	u5711
 13228  00212C  EF9B  F010         	goto	u5710
 13229  002130                     u5711:
 13230  002130  FFFF               	dw	65535	; assembler added errata NOP
 13231  002132  EFA6  F010         	goto	l4656
 13232  002136                     u5710:
 13233  002136                     l4652:
 13234  002136  FFFF               	dw	65535	; assembler added errata NOP
 13235  002138  0E00               	movlw	0
 13236  00213A  6E01               	movwf	?___flmul^0,c
 13237  00213C  0E00               	movlw	0
 13238  00213E  6E02               	movwf	(?___flmul+1)^0,c
 13239  002140  0E00               	movlw	0
 13240  002142  6E03               	movwf	(?___flmul+2)^0,c
 13241  002144  0E00               	movlw	0
 13242  002146  6E04               	movwf	(?___flmul+3)^0,c
 13243  002148  EF60  F012         	goto	l946
 13244  00214C                     l4656:
 13245  00214C  FFFF               	dw	65535	; assembler added errata NOP
 13246  00214E  5007               	movf	(___flmul@a+2)^0,w,c
 13247  002150  0201               	mulwf	___flmul@b^0,c
 13248  002152  CFF3 F018          	movff	prodl,___flmul@temp
 13249  002156  CFF4 F019          	movff	prodh,___flmul@temp+1
 13250  00215A  5018               	movf	___flmul@temp^0,w,c
 13251  00215C  6E0E               	movwf	___flmul@grs^0,c
 13252  00215E  6A0F               	clrf	(___flmul@grs+1)^0,c
 13253  002160  6A10               	clrf	(___flmul@grs+2)^0,c
 13254  002162  6A11               	clrf	(___flmul@grs+3)^0,c
 13255  002164  5019               	movf	(___flmul@temp+1)^0,w,c
 13256  002166  6E14               	movwf	___flmul@prod^0,c
 13257  002168  6A15               	clrf	(___flmul@prod+1)^0,c
 13258  00216A  6A16               	clrf	(___flmul@prod+2)^0,c
 13259  00216C  6A17               	clrf	(___flmul@prod+3)^0,c
 13260  00216E  5006               	movf	(___flmul@a+1)^0,w,c
 13261  002170  0202               	mulwf	(___flmul@b+1)^0,c
 13262  002172  CFF3 F018          	movff	prodl,___flmul@temp
 13263  002176  CFF4 F019          	movff	prodh,___flmul@temp+1
 13264  00217A  5018               	movf	___flmul@temp^0,w,c
 13265  00217C  260E               	addwf	___flmul@grs^0,f,c
 13266  00217E  0E00               	movlw	0
 13267  002180  220F               	addwfc	(___flmul@grs+1)^0,f,c
 13268  002182  2210               	addwfc	(___flmul@grs+2)^0,f,c
 13269  002184  2211               	addwfc	(___flmul@grs+3)^0,f,c
 13270  002186  5019               	movf	(___flmul@temp+1)^0,w,c
 13271  002188  2614               	addwf	___flmul@prod^0,f,c
 13272  00218A  0E00               	movlw	0
 13273  00218C  2215               	addwfc	(___flmul@prod+1)^0,f,c
 13274  00218E  2216               	addwfc	(___flmul@prod+2)^0,f,c
 13275  002190  2217               	addwfc	(___flmul@prod+3)^0,f,c
 13276  002192  5005               	movf	___flmul@a^0,w,c
 13277  002194  0203               	mulwf	(___flmul@b+2)^0,c
 13278  002196  CFF3 F018          	movff	prodl,___flmul@temp
 13279  00219A  CFF4 F019          	movff	prodh,___flmul@temp+1
 13280  00219E  5018               	movf	___flmul@temp^0,w,c
 13281  0021A0  260E               	addwf	___flmul@grs^0,f,c
 13282  0021A2  0E00               	movlw	0
 13283  0021A4  220F               	addwfc	(___flmul@grs+1)^0,f,c
 13284  0021A6  2210               	addwfc	(___flmul@grs+2)^0,f,c
 13285  0021A8  2211               	addwfc	(___flmul@grs+3)^0,f,c
 13286  0021AA  5019               	movf	(___flmul@temp+1)^0,w,c
 13287  0021AC  2614               	addwf	___flmul@prod^0,f,c
 13288  0021AE  0E00               	movlw	0
 13289  0021B0  2215               	addwfc	(___flmul@prod+1)^0,f,c
 13290  0021B2  2216               	addwfc	(___flmul@prod+2)^0,f,c
 13291  0021B4  2217               	addwfc	(___flmul@prod+3)^0,f,c
 13292  0021B6  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
 13293  0021BA  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
 13294  0021BE  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
 13295  0021C2  6A0E               	clrf	___flmul@grs^0,c
 13296  0021C4  5005               	movf	___flmul@a^0,w,c
 13297  0021C6  0202               	mulwf	(___flmul@b+1)^0,c
 13298  0021C8  CFF3 F018          	movff	prodl,___flmul@temp
 13299  0021CC  CFF4 F019          	movff	prodh,___flmul@temp+1
 13300  0021D0  5018               	movf	___flmul@temp^0,w,c
 13301  0021D2  260E               	addwf	___flmul@grs^0,f,c
 13302  0021D4  5019               	movf	(___flmul@temp+1)^0,w,c
 13303  0021D6  220F               	addwfc	(___flmul@grs+1)^0,f,c
 13304  0021D8  0E00               	movlw	0
 13305  0021DA  2210               	addwfc	(___flmul@grs+2)^0,f,c
 13306  0021DC  0E00               	movlw	0
 13307  0021DE  2211               	addwfc	(___flmul@grs+3)^0,f,c
 13308  0021E0  5006               	movf	(___flmul@a+1)^0,w,c
 13309  0021E2  0201               	mulwf	___flmul@b^0,c
 13310  0021E4  CFF3 F018          	movff	prodl,___flmul@temp
 13311  0021E8  CFF4 F019          	movff	prodh,___flmul@temp+1
 13312  0021EC  5018               	movf	___flmul@temp^0,w,c
 13313  0021EE  260E               	addwf	___flmul@grs^0,f,c
 13314  0021F0  5019               	movf	(___flmul@temp+1)^0,w,c
 13315  0021F2  220F               	addwfc	(___flmul@grs+1)^0,f,c
 13316  0021F4  0E00               	movlw	0
 13317  0021F6  2210               	addwfc	(___flmul@grs+2)^0,f,c
 13318  0021F8  0E00               	movlw	0
 13319  0021FA  2211               	addwfc	(___flmul@grs+3)^0,f,c
 13320  0021FC  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
 13321  002200  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
 13322  002204  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
 13323  002208  6A0E               	clrf	___flmul@grs^0,c
 13324  00220A  5005               	movf	___flmul@a^0,w,c
 13325  00220C  0201               	mulwf	___flmul@b^0,c
 13326  00220E  CFF3 F018          	movff	prodl,___flmul@temp
 13327  002212  CFF4 F019          	movff	prodh,___flmul@temp+1
 13328  002216  5018               	movf	___flmul@temp^0,w,c
 13329  002218  260E               	addwf	___flmul@grs^0,f,c
 13330  00221A  5019               	movf	(___flmul@temp+1)^0,w,c
 13331  00221C  220F               	addwfc	(___flmul@grs+1)^0,f,c
 13332  00221E  0E00               	movlw	0
 13333  002220  2210               	addwfc	(___flmul@grs+2)^0,f,c
 13334  002222  0E00               	movlw	0
 13335  002224  2211               	addwfc	(___flmul@grs+3)^0,f,c
 13336  002226  5007               	movf	(___flmul@a+2)^0,w,c
 13337  002228  0202               	mulwf	(___flmul@b+1)^0,c
 13338  00222A  CFF3 F018          	movff	prodl,___flmul@temp
 13339  00222E  CFF4 F019          	movff	prodh,___flmul@temp+1
 13340  002232  5018               	movf	___flmul@temp^0,w,c
 13341  002234  2614               	addwf	___flmul@prod^0,f,c
 13342  002236  5019               	movf	(___flmul@temp+1)^0,w,c
 13343  002238  2215               	addwfc	(___flmul@prod+1)^0,f,c
 13344  00223A  0E00               	movlw	0
 13345  00223C  2216               	addwfc	(___flmul@prod+2)^0,f,c
 13346  00223E  0E00               	movlw	0
 13347  002240  2217               	addwfc	(___flmul@prod+3)^0,f,c
 13348  002242  5006               	movf	(___flmul@a+1)^0,w,c
 13349  002244  0203               	mulwf	(___flmul@b+2)^0,c
 13350  002246  CFF3 F018          	movff	prodl,___flmul@temp
 13351  00224A  CFF4 F019          	movff	prodh,___flmul@temp+1
 13352  00224E  5018               	movf	___flmul@temp^0,w,c
 13353  002250  2614               	addwf	___flmul@prod^0,f,c
 13354  002252  5019               	movf	(___flmul@temp+1)^0,w,c
 13355  002254  2215               	addwfc	(___flmul@prod+1)^0,f,c
 13356  002256  0E00               	movlw	0
 13357  002258  2216               	addwfc	(___flmul@prod+2)^0,f,c
 13358  00225A  0E00               	movlw	0
 13359  00225C  2217               	addwfc	(___flmul@prod+3)^0,f,c
 13360  00225E  5007               	movf	(___flmul@a+2)^0,w,c
 13361  002260  0203               	mulwf	(___flmul@b+2)^0,c
 13362  002262  CFF3 F018          	movff	prodl,___flmul@temp
 13363  002266  CFF4 F019          	movff	prodh,___flmul@temp+1
 13364  00226A  5018               	movf	___flmul@temp^0,w,c
 13365  00226C  6E09               	movwf	??___flmul^0,c
 13366  00226E  5019               	movf	(___flmul@temp+1)^0,w,c
 13367  002270  6E0A               	movwf	(??___flmul+1)^0,c
 13368  002272  6A0B               	clrf	(??___flmul+2)^0,c
 13369  002274  6A0C               	clrf	(??___flmul+3)^0,c
 13370  002276  C00B  F00C         	movff	??___flmul+2,??___flmul+3
 13371  00227A  C00A  F00B         	movff	??___flmul+1,??___flmul+2
 13372  00227E  C009  F00A         	movff	??___flmul,??___flmul+1
 13373  002282  6A09               	clrf	??___flmul^0,c
 13374  002284  5009               	movf	??___flmul^0,w,c
 13375  002286  2614               	addwf	___flmul@prod^0,f,c
 13376  002288  500A               	movf	(??___flmul+1)^0,w,c
 13377  00228A  2215               	addwfc	(___flmul@prod+1)^0,f,c
 13378  00228C  500B               	movf	(??___flmul+2)^0,w,c
 13379  00228E  2216               	addwfc	(___flmul@prod+2)^0,f,c
 13380  002290  500C               	movf	(??___flmul+3)^0,w,c
 13381  002292  2217               	addwfc	(___flmul@prod+3)^0,f,c
 13382  002294  C00E  F009         	movff	___flmul@grs,??___flmul
 13383  002298  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
 13384  00229C  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
 13385  0022A0  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
 13386  0022A4  0E19               	movlw	25
 13387  0022A6  EF5B  F011         	goto	u5720
 13388  0022AA                     u5725:
 13389  0022AA  FFFF               	dw	65535	; assembler added errata NOP
 13390  0022AC  90D8               	bcf	status,0,c
 13391  0022AE  320C               	rrcf	(??___flmul+3)^0,f,c
 13392  0022B0  320B               	rrcf	(??___flmul+2)^0,f,c
 13393  0022B2  320A               	rrcf	(??___flmul+1)^0,f,c
 13394  0022B4  3209               	rrcf	??___flmul^0,f,c
 13395  0022B6                     u5720:
 13396  0022B6  FFFF               	dw	65535	; assembler added errata NOP
 13397  0022B8  2EE8               	decfsz	wreg,f,c
 13398  0022BA  EF55  F011         	goto	u5725
 13399  0022BE  5009               	movf	??___flmul^0,w,c
 13400  0022C0  2614               	addwf	___flmul@prod^0,f,c
 13401  0022C2  500A               	movf	(??___flmul+1)^0,w,c
 13402  0022C4  2215               	addwfc	(___flmul@prod+1)^0,f,c
 13403  0022C6  500B               	movf	(??___flmul+2)^0,w,c
 13404  0022C8  2216               	addwfc	(___flmul@prod+2)^0,f,c
 13405  0022CA  500C               	movf	(??___flmul+3)^0,w,c
 13406  0022CC  2217               	addwfc	(___flmul@prod+3)^0,f,c
 13407  0022CE  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
 13408  0022D2  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
 13409  0022D6  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
 13410  0022DA  6A0E               	clrf	___flmul@grs^0,c
 13411  0022DC  5012               	movf	___flmul@aexp^0,w,c
 13412  0022DE  C013  F009         	movff	___flmul@bexp,??___flmul
 13413  0022E2  6A0A               	clrf	(??___flmul+1)^0,c
 13414  0022E4  2609               	addwf	??___flmul^0,f,c
 13415  0022E6  0E00               	movlw	0
 13416  0022E8  220A               	addwfc	(??___flmul+1)^0,f,c
 13417  0022EA  0E82               	movlw	130
 13418  0022EC  2409               	addwf	??___flmul^0,w,c
 13419  0022EE  6E18               	movwf	___flmul@temp^0,c
 13420  0022F0  0EFF               	movlw	255
 13421  0022F2  200A               	addwfc	(??___flmul+1)^0,w,c
 13422  0022F4  6E19               	movwf	(___flmul@temp+1)^0,c
 13423  0022F6  EF96  F011         	goto	l4704
 13424  0022FA                     l4698:
 13425  0022FA  FFFF               	dw	65535	; assembler added errata NOP
 13426  0022FC  90D8               	bcf	status,0,c
 13427  0022FE  3614               	rlcf	___flmul@prod^0,f,c
 13428  002300  3615               	rlcf	(___flmul@prod+1)^0,f,c
 13429  002302  3616               	rlcf	(___flmul@prod+2)^0,f,c
 13430  002304  3617               	rlcf	(___flmul@prod+3)^0,f,c
 13431  002306  AE11               	btfss	(___flmul@grs+3)^0,7,c
 13432  002308  EF88  F011         	goto	u5731
 13433  00230C  EF8B  F011         	goto	u5730
 13434  002310                     u5731:
 13435  002310  FFFF               	dw	65535	; assembler added errata NOP
 13436  002312  EF8D  F011         	goto	l949
 13437  002316                     u5730:
 13438  002316  FFFF               	dw	65535	; assembler added errata NOP
 13439  002318  8014               	bsf	___flmul@prod^0,0,c
 13440  00231A                     l949:
 13441  00231A  FFFF               	dw	65535	; assembler added errata NOP
 13442  00231C  90D8               	bcf	status,0,c
 13443  00231E  360E               	rlcf	___flmul@grs^0,f,c
 13444  002320  360F               	rlcf	(___flmul@grs+1)^0,f,c
 13445  002322  3610               	rlcf	(___flmul@grs+2)^0,f,c
 13446  002324  3611               	rlcf	(___flmul@grs+3)^0,f,c
 13447  002326  0618               	decf	___flmul@temp^0,f,c
 13448  002328  A0D8               	btfss	status,0,c
 13449  00232A  0619               	decf	(___flmul@temp+1)^0,f,c
 13450  00232C                     l4704:
 13451  00232C  FFFF               	dw	65535	; assembler added errata NOP
 13452  00232E  AE16               	btfss	(___flmul@prod+2)^0,7,c
 13453  002330  EF9C  F011         	goto	u5741
 13454  002334  EF9F  F011         	goto	u5740
 13455  002338                     u5741:
 13456  002338  FFFF               	dw	65535	; assembler added errata NOP
 13457  00233A  EF7D  F011         	goto	l4698
 13458  00233E                     u5740:
 13459  00233E  FFFF               	dw	65535	; assembler added errata NOP
 13460  002340  0E00               	movlw	0
 13461  002342  6E12               	movwf	___flmul@aexp^0,c
 13462  002344  AE11               	btfss	(___flmul@grs+3)^0,7,c
 13463  002346  EFA7  F011         	goto	u5751
 13464  00234A  EFAA  F011         	goto	u5750
 13465  00234E                     u5751:
 13466  00234E  FFFF               	dw	65535	; assembler added errata NOP
 13467  002350  EFD5  F011         	goto	l951
 13468  002354                     u5750:
 13469  002354  FFFF               	dw	65535	; assembler added errata NOP
 13470  002356  0EFF               	movlw	255
 13471  002358  140E               	andwf	___flmul@grs^0,w,c
 13472  00235A  6E09               	movwf	??___flmul^0,c
 13473  00235C  0EFF               	movlw	255
 13474  00235E  140F               	andwf	(___flmul@grs+1)^0,w,c
 13475  002360  6E0A               	movwf	(??___flmul+1)^0,c
 13476  002362  0EFF               	movlw	255
 13477  002364  1410               	andwf	(___flmul@grs+2)^0,w,c
 13478  002366  6E0B               	movwf	(??___flmul+2)^0,c
 13479  002368  0E7F               	movlw	127
 13480  00236A  1411               	andwf	(___flmul@grs+3)^0,w,c
 13481  00236C  6E0C               	movwf	(??___flmul+3)^0,c
 13482  00236E  5009               	movf	??___flmul^0,w,c
 13483  002370  100A               	iorwf	(??___flmul+1)^0,w,c
 13484  002372  100B               	iorwf	(??___flmul+2)^0,w,c
 13485  002374  100C               	iorwf	(??___flmul+3)^0,w,c
 13486  002376  B4D8               	btfsc	status,2,c
 13487  002378  EFC0  F011         	goto	u5761
 13488  00237C  EFC3  F011         	goto	u5760
 13489  002380                     u5761:
 13490  002380  FFFF               	dw	65535	; assembler added errata NOP
 13491  002382  EFC9  F011         	goto	l952
 13492  002386                     u5760:
 13493  002386  FFFF               	dw	65535	; assembler added errata NOP
 13494  002388                     l4712:
 13495  002388  FFFF               	dw	65535	; assembler added errata NOP
 13496  00238A  0E01               	movlw	1
 13497  00238C  6E12               	movwf	___flmul@aexp^0,c
 13498  00238E  EFD5  F011         	goto	l951
 13499  002392                     l952:
 13500  002392  FFFF               	dw	65535	; assembler added errata NOP
 13501  002394  A014               	btfss	___flmul@prod^0,0,c
 13502  002396  EFCF  F011         	goto	u5771
 13503  00239A  EFD2  F011         	goto	u5770
 13504  00239E                     u5771:
 13505  00239E  FFFF               	dw	65535	; assembler added errata NOP
 13506  0023A0  EFD5  F011         	goto	l951
 13507  0023A4                     u5770:
 13508  0023A4  FFFF               	dw	65535	; assembler added errata NOP
 13509  0023A6  EFC4  F011         	goto	l4712
 13510  0023AA                     l951:
 13511  0023AA  FFFF               	dw	65535	; assembler added errata NOP
 13512  0023AC  5012               	movf	___flmul@aexp^0,w,c
 13513  0023AE  B4D8               	btfsc	status,2,c
 13514  0023B0  EFDC  F011         	goto	u5781
 13515  0023B4  EFDF  F011         	goto	u5780
 13516  0023B8                     u5781:
 13517  0023B8  FFFF               	dw	65535	; assembler added errata NOP
 13518  0023BA  EF06  F012         	goto	l4724
 13519  0023BE                     u5780:
 13520  0023BE  FFFF               	dw	65535	; assembler added errata NOP
 13521  0023C0  0E01               	movlw	1
 13522  0023C2  2614               	addwf	___flmul@prod^0,f,c
 13523  0023C4  0E00               	movlw	0
 13524  0023C6  2215               	addwfc	(___flmul@prod+1)^0,f,c
 13525  0023C8  2216               	addwfc	(___flmul@prod+2)^0,f,c
 13526  0023CA  2217               	addwfc	(___flmul@prod+3)^0,f,c
 13527  0023CC  A017               	btfss	(___flmul@prod+3)^0,0,c
 13528  0023CE  EFEB  F011         	goto	u5791
 13529  0023D2  EFEE  F011         	goto	u5790
 13530  0023D6                     u5791:
 13531  0023D6  FFFF               	dw	65535	; assembler added errata NOP
 13532  0023D8  EF06  F012         	goto	l4724
 13533  0023DC                     u5790:
 13534  0023DC  FFFF               	dw	65535	; assembler added errata NOP
 13535  0023DE  C014  F009         	movff	___flmul@prod,??___flmul
 13536  0023E2  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
 13537  0023E6  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
 13538  0023EA  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
 13539  0023EE  340C               	rlcf	(??___flmul+3)^0,w,c
 13540  0023F0  320C               	rrcf	(??___flmul+3)^0,f,c
 13541  0023F2  320B               	rrcf	(??___flmul+2)^0,f,c
 13542  0023F4  320A               	rrcf	(??___flmul+1)^0,f,c
 13543  0023F6  3209               	rrcf	??___flmul^0,f,c
 13544  0023F8  C009  F014         	movff	??___flmul,___flmul@prod
 13545  0023FC  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
 13546  002400  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
 13547  002404  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
 13548  002408  4A18               	infsnz	___flmul@temp^0,f,c
 13549  00240A  2A19               	incf	(___flmul@temp+1)^0,f,c
 13550  00240C                     l4724:
 13551  00240C  FFFF               	dw	65535	; assembler added errata NOP
 13552  00240E  BE19               	btfsc	(___flmul@temp+1)^0,7,c
 13553  002410  EF12  F012         	goto	u5801
 13554  002414  5019               	movf	(___flmul@temp+1)^0,w,c
 13555  002416  E109               	bnz	u5800
 13556  002418  2818               	incf	___flmul@temp^0,w,c
 13557  00241A  A0D8               	btfss	status,0,c
 13558  00241C  EF12  F012         	goto	u5801
 13559  002420  EF15  F012         	goto	u5800
 13560  002424                     u5801:
 13561  002424  FFFF               	dw	65535	; assembler added errata NOP
 13562  002426  EF20  F012         	goto	l4728
 13563  00242A                     u5800:
 13564  00242A  FFFF               	dw	65535	; assembler added errata NOP
 13565  00242C  0E00               	movlw	0
 13566  00242E  6E14               	movwf	___flmul@prod^0,c
 13567  002430  0E00               	movlw	0
 13568  002432  6E15               	movwf	(___flmul@prod+1)^0,c
 13569  002434  0E80               	movlw	128
 13570  002436  6E16               	movwf	(___flmul@prod+2)^0,c
 13571  002438  0E7F               	movlw	127
 13572  00243A  6E17               	movwf	(___flmul@prod+3)^0,c
 13573  00243C  EF55  F012         	goto	l4740
 13574  002440                     l4728:
 13575  002440  FFFF               	dw	65535	; assembler added errata NOP
 13576  002442  BE19               	btfsc	(___flmul@temp+1)^0,7,c
 13577  002444  EF2F  F012         	goto	u5810
 13578  002448  5019               	movf	(___flmul@temp+1)^0,w,c
 13579  00244A  E106               	bnz	u5811
 13580  00244C  0418               	decf	___flmul@temp^0,w,c
 13581  00244E  B0D8               	btfsc	status,0,c
 13582  002450  EF2C  F012         	goto	u5811
 13583  002454  EF2F  F012         	goto	u5810
 13584  002458                     u5811:
 13585  002458  FFFF               	dw	65535	; assembler added errata NOP
 13586  00245A  EF3C  F012         	goto	l959
 13587  00245E                     u5810:
 13588  00245E  FFFF               	dw	65535	; assembler added errata NOP
 13589  002460  0E00               	movlw	0
 13590  002462  6E14               	movwf	___flmul@prod^0,c
 13591  002464  0E00               	movlw	0
 13592  002466  6E15               	movwf	(___flmul@prod+1)^0,c
 13593  002468  0E00               	movlw	0
 13594  00246A  6E16               	movwf	(___flmul@prod+2)^0,c
 13595  00246C  0E00               	movlw	0
 13596  00246E  6E17               	movwf	(___flmul@prod+3)^0,c
 13597  002470  0E00               	movlw	0
 13598  002472  6E0D               	movwf	___flmul@sign^0,c
 13599  002474  EF55  F012         	goto	l4740
 13600  002478                     l959:
 13601  002478  FFFF               	dw	65535	; assembler added errata NOP
 13602  00247A  C018  F013         	movff	___flmul@temp,___flmul@bexp
 13603  00247E  0EFF               	movlw	255
 13604  002480  1614               	andwf	___flmul@prod^0,f,c
 13605  002482  0EFF               	movlw	255
 13606  002484  1615               	andwf	(___flmul@prod+1)^0,f,c
 13607  002486  0E7F               	movlw	127
 13608  002488  1616               	andwf	(___flmul@prod+2)^0,f,c
 13609  00248A  0E00               	movlw	0
 13610  00248C  1617               	andwf	(___flmul@prod+3)^0,f,c
 13611  00248E  A013               	btfss	___flmul@bexp^0,0,c
 13612  002490  EF4C  F012         	goto	u5821
 13613  002494  EF4F  F012         	goto	u5820
 13614  002498                     u5821:
 13615  002498  FFFF               	dw	65535	; assembler added errata NOP
 13616  00249A  EF51  F012         	goto	l4738
 13617  00249E                     u5820:
 13618  00249E  FFFF               	dw	65535	; assembler added errata NOP
 13619  0024A0  8E16               	bsf	(___flmul@prod+2)^0,7,c
 13620  0024A2                     l4738:
 13621  0024A2  FFFF               	dw	65535	; assembler added errata NOP
 13622  0024A4  90D8               	bcf	status,0,c
 13623  0024A6  3013               	rrcf	___flmul@bexp^0,w,c
 13624  0024A8  6E17               	movwf	(___flmul@prod+3)^0,c
 13625  0024AA                     l4740:
 13626  0024AA  FFFF               	dw	65535	; assembler added errata NOP
 13627  0024AC  500D               	movf	___flmul@sign^0,w,c
 13628  0024AE  1217               	iorwf	(___flmul@prod+3)^0,f,c
 13629  0024B0  C014  F001         	movff	___flmul@prod,?___flmul
 13630  0024B4  C015  F002         	movff	___flmul@prod+1,?___flmul+1
 13631  0024B8  C016  F003         	movff	___flmul@prod+2,?___flmul+2
 13632  0024BC  C017  F004         	movff	___flmul@prod+3,?___flmul+3
 13633  0024C0                     l946:
 13634  0024C0  FFFF               	dw	65535	; assembler added errata NOP
 13635  0024C2  0012               	return		;funcret
 13636  0024C4  FFFF               	dw	65535	; errata NOP
 13637  0024C6                     __end_of___flmul:
 13638                           	callstack 0
 13639                           
 13640 ;; *************** function ___flge *****************
 13641 ;; Defined at:
 13642 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 13643 ;; Parameters:    Size  Location     Type
 13644 ;;  ff1             4    0[COMRAM] unsigned char 
 13645 ;;  ff2             4    4[COMRAM] unsigned char 
 13646 ;; Auto vars:     Size  Location     Type
 13647 ;;		None
 13648 ;; Return value:  Size  Location     Type
 13649 ;;		None               void
 13650 ;; Registers used:
 13651 ;;		wreg, status,2, status,0
 13652 ;; Tracked objects:
 13653 ;;		On entry : 0/0
 13654 ;;		On exit  : 0/0
 13655 ;;		Unchanged: 0/0
 13656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13657 ;;      Params:         8       0       0       0       0       0       0
 13658 ;;      Locals:         0       0       0       0       0       0       0
 13659 ;;      Temps:          4       0       0       0       0       0       0
 13660 ;;      Totals:        12       0       0       0       0       0       0
 13661 ;;Total ram usage:       12 bytes
 13662 ;; Hardware stack levels used:    1
 13663 ;; Hardware stack levels required when called:    1
 13664 ;; This function calls:
 13665 ;;		Nothing
 13666 ;; This function is called by:
 13667 ;;		_roundf
 13668 ;; This function uses a non-reentrant model
 13669 ;;
 13670                           
 13671                           	psect	text54
 13672  007C90                     __ptext54:
 13673                           	callstack 0
 13674  007C90                     ___flge:
 13675                           	callstack 0
 13676  007C90  FFFF               	dw	65535	; assembler added errata NOP
 13677  007C92  0E00               	movlw	0
 13678  007C94  1401               	andwf	___flge@ff1^0,w,c
 13679  007C96  6E09               	movwf	??___flge^0,c
 13680  007C98  0E00               	movlw	0
 13681  007C9A  1402               	andwf	(___flge@ff1+1)^0,w,c
 13682  007C9C  6E0A               	movwf	(??___flge+1)^0,c
 13683  007C9E  0E80               	movlw	128
 13684  007CA0  1403               	andwf	(___flge@ff1+2)^0,w,c
 13685  007CA2  6E0B               	movwf	(??___flge+2)^0,c
 13686  007CA4  0E7F               	movlw	127
 13687  007CA6  1404               	andwf	(___flge@ff1+3)^0,w,c
 13688  007CA8  6E0C               	movwf	(??___flge+3)^0,c
 13689  007CAA  5009               	movf	??___flge^0,w,c
 13690  007CAC  100A               	iorwf	(??___flge+1)^0,w,c
 13691  007CAE  100B               	iorwf	(??___flge+2)^0,w,c
 13692  007CB0  100C               	iorwf	(??___flge+3)^0,w,c
 13693  007CB2  A4D8               	btfss	status,2,c
 13694  007CB4  EF5E  F03E         	goto	u5831
 13695  007CB8  EF61  F03E         	goto	u5830
 13696  007CBC                     u5831:
 13697  007CBC  FFFF               	dw	65535	; assembler added errata NOP
 13698  007CBE  EF6A  F03E         	goto	l4756
 13699  007CC2                     u5830:
 13700  007CC2  FFFF               	dw	65535	; assembler added errata NOP
 13701  007CC4  0E00               	movlw	0
 13702  007CC6  6E01               	movwf	___flge@ff1^0,c
 13703  007CC8  0E00               	movlw	0
 13704  007CCA  6E02               	movwf	(___flge@ff1+1)^0,c
 13705  007CCC  0E00               	movlw	0
 13706  007CCE  6E03               	movwf	(___flge@ff1+2)^0,c
 13707  007CD0  0E00               	movlw	0
 13708  007CD2  6E04               	movwf	(___flge@ff1+3)^0,c
 13709  007CD4                     l4756:
 13710  007CD4  FFFF               	dw	65535	; assembler added errata NOP
 13711  007CD6  0E00               	movlw	0
 13712  007CD8  1405               	andwf	___flge@ff2^0,w,c
 13713  007CDA  6E09               	movwf	??___flge^0,c
 13714  007CDC  0E00               	movlw	0
 13715  007CDE  1406               	andwf	(___flge@ff2+1)^0,w,c
 13716  007CE0  6E0A               	movwf	(??___flge+1)^0,c
 13717  007CE2  0E80               	movlw	128
 13718  007CE4  1407               	andwf	(___flge@ff2+2)^0,w,c
 13719  007CE6  6E0B               	movwf	(??___flge+2)^0,c
 13720  007CE8  0E7F               	movlw	127
 13721  007CEA  1408               	andwf	(___flge@ff2+3)^0,w,c
 13722  007CEC  6E0C               	movwf	(??___flge+3)^0,c
 13723  007CEE  5009               	movf	??___flge^0,w,c
 13724  007CF0  100A               	iorwf	(??___flge+1)^0,w,c
 13725  007CF2  100B               	iorwf	(??___flge+2)^0,w,c
 13726  007CF4  100C               	iorwf	(??___flge+3)^0,w,c
 13727  007CF6  A4D8               	btfss	status,2,c
 13728  007CF8  EF80  F03E         	goto	u5841
 13729  007CFC  EF83  F03E         	goto	u5840
 13730  007D00                     u5841:
 13731  007D00  FFFF               	dw	65535	; assembler added errata NOP
 13732  007D02  EF8C  F03E         	goto	l4760
 13733  007D06                     u5840:
 13734  007D06  FFFF               	dw	65535	; assembler added errata NOP
 13735  007D08  0E00               	movlw	0
 13736  007D0A  6E05               	movwf	___flge@ff2^0,c
 13737  007D0C  0E00               	movlw	0
 13738  007D0E  6E06               	movwf	(___flge@ff2+1)^0,c
 13739  007D10  0E00               	movlw	0
 13740  007D12  6E07               	movwf	(___flge@ff2+2)^0,c
 13741  007D14  0E00               	movlw	0
 13742  007D16  6E08               	movwf	(___flge@ff2+3)^0,c
 13743  007D18                     l4760:
 13744  007D18  FFFF               	dw	65535	; assembler added errata NOP
 13745  007D1A  AE04               	btfss	(___flge@ff1+3)^0,7,c
 13746  007D1C  EF92  F03E         	goto	u5851
 13747  007D20  EF95  F03E         	goto	u5850
 13748  007D24                     u5851:
 13749  007D24  FFFF               	dw	65535	; assembler added errata NOP
 13750  007D26  EF9F  F03E         	goto	l4764
 13751  007D2A                     u5850:
 13752  007D2A  FFFF               	dw	65535	; assembler added errata NOP
 13753  007D2C  6C01               	negf	___flge@ff1^0,c
 13754  007D2E  1E02               	comf	(___flge@ff1+1)^0,f,c
 13755  007D30  B0D8               	btfsc	status,0,c
 13756  007D32  2A02               	incf	(___flge@ff1+1)^0,f,c
 13757  007D34  1E03               	comf	(___flge@ff1+2)^0,f,c
 13758  007D36  B0D8               	btfsc	status,0,c
 13759  007D38  2A03               	incf	(___flge@ff1+2)^0,f,c
 13760  007D3A  0E80               	movlw	128
 13761  007D3C  5604               	subfwb	(___flge@ff1+3)^0,f,c
 13762  007D3E                     l4764:
 13763  007D3E  FFFF               	dw	65535	; assembler added errata NOP
 13764  007D40  AE08               	btfss	(___flge@ff2+3)^0,7,c
 13765  007D42  EFA5  F03E         	goto	u5861
 13766  007D46  EFA8  F03E         	goto	u5860
 13767  007D4A                     u5861:
 13768  007D4A  FFFF               	dw	65535	; assembler added errata NOP
 13769  007D4C  EFB2  F03E         	goto	l593
 13770  007D50                     u5860:
 13771  007D50  FFFF               	dw	65535	; assembler added errata NOP
 13772  007D52  6C05               	negf	___flge@ff2^0,c
 13773  007D54  1E06               	comf	(___flge@ff2+1)^0,f,c
 13774  007D56  B0D8               	btfsc	status,0,c
 13775  007D58  2A06               	incf	(___flge@ff2+1)^0,f,c
 13776  007D5A  1E07               	comf	(___flge@ff2+2)^0,f,c
 13777  007D5C  B0D8               	btfsc	status,0,c
 13778  007D5E  2A07               	incf	(___flge@ff2+2)^0,f,c
 13779  007D60  0E80               	movlw	128
 13780  007D62  5608               	subfwb	(___flge@ff2+3)^0,f,c
 13781  007D64                     l593:
 13782  007D64  FFFF               	dw	65535	; assembler added errata NOP
 13783  007D66  0E00               	movlw	0
 13784  007D68  1A01               	xorwf	___flge@ff1^0,f,c
 13785  007D6A  0E00               	movlw	0
 13786  007D6C  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 13787  007D6E  0E00               	movlw	0
 13788  007D70  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 13789  007D72  0E80               	movlw	128
 13790  007D74  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 13791  007D76  0E00               	movlw	0
 13792  007D78  1A05               	xorwf	___flge@ff2^0,f,c
 13793  007D7A  0E00               	movlw	0
 13794  007D7C  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 13795  007D7E  0E00               	movlw	0
 13796  007D80  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 13797  007D82  0E80               	movlw	128
 13798  007D84  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 13799  007D86  5005               	movf	___flge@ff2^0,w,c
 13800  007D88  5C01               	subwf	___flge@ff1^0,w,c
 13801  007D8A  5006               	movf	(___flge@ff2+1)^0,w,c
 13802  007D8C  5802               	subwfb	(___flge@ff1+1)^0,w,c
 13803  007D8E  5007               	movf	(___flge@ff2+2)^0,w,c
 13804  007D90  5803               	subwfb	(___flge@ff1+2)^0,w,c
 13805  007D92  5008               	movf	(___flge@ff2+3)^0,w,c
 13806  007D94  5804               	subwfb	(___flge@ff1+3)^0,w,c
 13807  007D96  B0D8               	btfsc	status,0,c
 13808  007D98  EFD0  F03E         	goto	u5871
 13809  007D9C  EFD3  F03E         	goto	u5870
 13810  007DA0                     u5871:
 13811  007DA0  FFFF               	dw	65535	; assembler added errata NOP
 13812  007DA2  EFD7  F03E         	goto	l4770
 13813  007DA6                     u5870:
 13814  007DA6  FFFF               	dw	65535	; assembler added errata NOP
 13815  007DA8  90D8               	bcf	status,0,c
 13816  007DAA  EFD9  F03E         	goto	l598
 13817  007DAE                     l4770:
 13818  007DAE  FFFF               	dw	65535	; assembler added errata NOP
 13819  007DB0  80D8               	bsf	status,0,c
 13820  007DB2                     l598:
 13821  007DB2  FFFF               	dw	65535	; assembler added errata NOP
 13822  007DB4  0012               	return		;funcret
 13823  007DB6  FFFF               	dw	65535	; errata NOP
 13824  007DB8                     __end_of___flge:
 13825                           	callstack 0
 13826                           
 13827 ;; *************** function ___fltol *****************
 13828 ;; Defined at:
 13829 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
 13830 ;; Parameters:    Size  Location     Type
 13831 ;;  f1              4  100[COMRAM] unsigned char 
 13832 ;; Auto vars:     Size  Location     Type
 13833 ;;  exp1            1  109[COMRAM] unsigned char 
 13834 ;;  sign1           1  108[COMRAM] unsigned char 
 13835 ;; Return value:  Size  Location     Type
 13836 ;;                  4  100[COMRAM] long 
 13837 ;; Registers used:
 13838 ;;		wreg, status,2, status,0
 13839 ;; Tracked objects:
 13840 ;;		On entry : 0/0
 13841 ;;		On exit  : 0/0
 13842 ;;		Unchanged: 0/0
 13843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13844 ;;      Params:         4       0       0       0       0       0       0
 13845 ;;      Locals:         2       0       0       0       0       0       0
 13846 ;;      Temps:          4       0       0       0       0       0       0
 13847 ;;      Totals:        10       0       0       0       0       0       0
 13848 ;;Total ram usage:       10 bytes
 13849 ;; Hardware stack levels used:    1
 13850 ;; Hardware stack levels required when called:    1
 13851 ;; This function calls:
 13852 ;;		Nothing
 13853 ;; This function is called by:
 13854 ;;		_init_USART
 13855 ;;		_init_timer_2
 13856 ;;		_update_pwm_duty_ccp1
 13857 ;; This function uses a non-reentrant model
 13858 ;;
 13859                           
 13860                           	psect	text55
 13861  007DB8                     __ptext55:
 13862                           	callstack 0
 13863  007DB8                     ___fltol:
 13864                           	callstack 0
 13865  007DB8  FFFF               	dw	65535	; assembler added errata NOP
 13866  007DBA  3467               	rlcf	(___fltol@f1+2)^0,w,c
 13867  007DBC  3468               	rlcf	(___fltol@f1+3)^0,w,c
 13868  007DBE  6E6E               	movwf	___fltol@exp1^0,c
 13869  007DC0  506E               	movf	___fltol@exp1^0,w,c
 13870  007DC2  A4D8               	btfss	status,2,c
 13871  007DC4  EFE6  F03E         	goto	u5891
 13872  007DC8  EFE9  F03E         	goto	u5890
 13873  007DCC                     u5891:
 13874  007DCC  FFFF               	dw	65535	; assembler added errata NOP
 13875  007DCE  EFF5  F03E         	goto	l4788
 13876  007DD2                     u5890:
 13877  007DD2  FFFF               	dw	65535	; assembler added errata NOP
 13878  007DD4                     l4784:
 13879  007DD4  FFFF               	dw	65535	; assembler added errata NOP
 13880  007DD6  0E00               	movlw	0
 13881  007DD8  6E65               	movwf	?___fltol^0,c
 13882  007DDA  0E00               	movlw	0
 13883  007DDC  6E66               	movwf	(?___fltol+1)^0,c
 13884  007DDE  0E00               	movlw	0
 13885  007DE0  6E67               	movwf	(?___fltol+2)^0,c
 13886  007DE2  0E00               	movlw	0
 13887  007DE4  6E68               	movwf	(?___fltol+3)^0,c
 13888  007DE6  EF74  F03F         	goto	l625
 13889  007DEA                     l4788:
 13890  007DEA  FFFF               	dw	65535	; assembler added errata NOP
 13891  007DEC  C065  F069         	movff	___fltol@f1,??___fltol
 13892  007DF0  C066  F06A         	movff	___fltol@f1+1,??___fltol+1
 13893  007DF4  C067  F06B         	movff	___fltol@f1+2,??___fltol+2
 13894  007DF8  C068  F06C         	movff	___fltol@f1+3,??___fltol+3
 13895  007DFC  0E20               	movlw	32
 13896  007DFE  EF07  F03F         	goto	u5900
 13897  007E02                     u5905:
 13898  007E02  FFFF               	dw	65535	; assembler added errata NOP
 13899  007E04  90D8               	bcf	status,0,c
 13900  007E06  326C               	rrcf	(??___fltol+3)^0,f,c
 13901  007E08  326B               	rrcf	(??___fltol+2)^0,f,c
 13902  007E0A  326A               	rrcf	(??___fltol+1)^0,f,c
 13903  007E0C  3269               	rrcf	??___fltol^0,f,c
 13904  007E0E                     u5900:
 13905  007E0E  FFFF               	dw	65535	; assembler added errata NOP
 13906  007E10  2EE8               	decfsz	wreg,f,c
 13907  007E12  EF01  F03F         	goto	u5905
 13908  007E16  5069               	movf	??___fltol^0,w,c
 13909  007E18  6E6D               	movwf	___fltol@sign1^0,c
 13910  007E1A  8E67               	bsf	(___fltol@f1+2)^0,7,c
 13911  007E1C  0EFF               	movlw	255
 13912  007E1E  1665               	andwf	___fltol@f1^0,f,c
 13913  007E20  0EFF               	movlw	255
 13914  007E22  1666               	andwf	(___fltol@f1+1)^0,f,c
 13915  007E24  0EFF               	movlw	255
 13916  007E26  1667               	andwf	(___fltol@f1+2)^0,f,c
 13917  007E28  0E00               	movlw	0
 13918  007E2A  1668               	andwf	(___fltol@f1+3)^0,f,c
 13919  007E2C  0E96               	movlw	150
 13920  007E2E  5E6E               	subwf	___fltol@exp1^0,f,c
 13921  007E30  BE6E               	btfsc	___fltol@exp1^0,7,c
 13922  007E32  EF20  F03F         	goto	u5910
 13923  007E36  EF1D  F03F         	goto	u5911
 13924  007E3A                     u5911:
 13925  007E3A  FFFF               	dw	65535	; assembler added errata NOP
 13926  007E3C  EF3A  F03F         	goto	l4808
 13927  007E40                     u5910:
 13928  007E40  FFFF               	dw	65535	; assembler added errata NOP
 13929  007E42  506E               	movf	___fltol@exp1^0,w,c
 13930  007E44  0A80               	xorlw	128
 13931  007E46  0F97               	addlw	151
 13932  007E48  B0D8               	btfsc	status,0,c
 13933  007E4A  EF29  F03F         	goto	u5921
 13934  007E4E  EF2C  F03F         	goto	u5920
 13935  007E52                     u5921:
 13936  007E52  FFFF               	dw	65535	; assembler added errata NOP
 13937  007E54  EF2F  F03F         	goto	l4804
 13938  007E58                     u5920:
 13939  007E58  FFFF               	dw	65535	; assembler added errata NOP
 13940  007E5A  EFEA  F03E         	goto	l4784
 13941  007E5E                     l4804:
 13942  007E5E  FFFF               	dw	65535	; assembler added errata NOP
 13943  007E60  90D8               	bcf	status,0,c
 13944  007E62  3268               	rrcf	(___fltol@f1+3)^0,f,c
 13945  007E64  3267               	rrcf	(___fltol@f1+2)^0,f,c
 13946  007E66  3266               	rrcf	(___fltol@f1+1)^0,f,c
 13947  007E68  3265               	rrcf	___fltol@f1^0,f,c
 13948  007E6A  3E6E               	incfsz	___fltol@exp1^0,f,c
 13949  007E6C  EF2F  F03F         	goto	l4804
 13950  007E70  EF58  F03F         	goto	l4818
 13951  007E74                     l4808:
 13952  007E74  FFFF               	dw	65535	; assembler added errata NOP
 13953  007E76  0E1F               	movlw	31
 13954  007E78  646E               	cpfsgt	___fltol@exp1^0,c
 13955  007E7A  EF41  F03F         	goto	u5931
 13956  007E7E  EF44  F03F         	goto	u5930
 13957  007E82                     u5931:
 13958  007E82  FFFF               	dw	65535	; assembler added errata NOP
 13959  007E84  EF4E  F03F         	goto	l4816
 13960  007E88                     u5930:
 13961  007E88  FFFF               	dw	65535	; assembler added errata NOP
 13962  007E8A  EFEA  F03E         	goto	l4784
 13963  007E8E                     l4814:
 13964  007E8E  FFFF               	dw	65535	; assembler added errata NOP
 13965  007E90  90D8               	bcf	status,0,c
 13966  007E92  3665               	rlcf	___fltol@f1^0,f,c
 13967  007E94  3666               	rlcf	(___fltol@f1+1)^0,f,c
 13968  007E96  3667               	rlcf	(___fltol@f1+2)^0,f,c
 13969  007E98  3668               	rlcf	(___fltol@f1+3)^0,f,c
 13970  007E9A  066E               	decf	___fltol@exp1^0,f,c
 13971  007E9C                     l4816:
 13972  007E9C  FFFF               	dw	65535	; assembler added errata NOP
 13973  007E9E  506E               	movf	___fltol@exp1^0,w,c
 13974  007EA0  A4D8               	btfss	status,2,c
 13975  007EA2  EF55  F03F         	goto	u5941
 13976  007EA6  EF58  F03F         	goto	u5940
 13977  007EAA                     u5941:
 13978  007EAA  FFFF               	dw	65535	; assembler added errata NOP
 13979  007EAC  EF47  F03F         	goto	l4814
 13980  007EB0                     u5940:
 13981  007EB0                     l4818:
 13982  007EB0  FFFF               	dw	65535	; assembler added errata NOP
 13983  007EB2  506D               	movf	___fltol@sign1^0,w,c
 13984  007EB4  B4D8               	btfsc	status,2,c
 13985  007EB6  EF5F  F03F         	goto	u5951
 13986  007EBA  EF62  F03F         	goto	u5950
 13987  007EBE                     u5951:
 13988  007EBE  FFFF               	dw	65535	; assembler added errata NOP
 13989  007EC0  EF6B  F03F         	goto	l4822
 13990  007EC4                     u5950:
 13991  007EC4  FFFF               	dw	65535	; assembler added errata NOP
 13992  007EC6  1E68               	comf	(___fltol@f1+3)^0,f,c
 13993  007EC8  1E67               	comf	(___fltol@f1+2)^0,f,c
 13994  007ECA  1E66               	comf	(___fltol@f1+1)^0,f,c
 13995  007ECC  6C65               	negf	___fltol@f1^0,c
 13996  007ECE  0E00               	movlw	0
 13997  007ED0  2266               	addwfc	(___fltol@f1+1)^0,f,c
 13998  007ED2  2267               	addwfc	(___fltol@f1+2)^0,f,c
 13999  007ED4  2268               	addwfc	(___fltol@f1+3)^0,f,c
 14000  007ED6                     l4822:
 14001  007ED6  FFFF               	dw	65535	; assembler added errata NOP
 14002  007ED8  C065  F065         	movff	___fltol@f1,?___fltol
 14003  007EDC  C066  F066         	movff	___fltol@f1+1,?___fltol+1
 14004  007EE0  C067  F067         	movff	___fltol@f1+2,?___fltol+2
 14005  007EE4  C068  F068         	movff	___fltol@f1+3,?___fltol+3
 14006  007EE8                     l625:
 14007  007EE8  FFFF               	dw	65535	; assembler added errata NOP
 14008  007EEA  0012               	return		;funcret
 14009  007EEC  FFFF               	dw	65535	; errata NOP
 14010  007EEE                     __end_of___fltol:
 14011                           	callstack 0
 14012                           
 14013 ;; *************** function _init_PORTS *****************
 14014 ;; Defined at:
 14015 ;;		line 61 in file "init_PIC.c"
 14016 ;; Parameters:    Size  Location     Type
 14017 ;;		None
 14018 ;; Auto vars:     Size  Location     Type
 14019 ;;		None
 14020 ;; Return value:  Size  Location     Type
 14021 ;;                  1    wreg      void 
 14022 ;; Registers used:
 14023 ;;		wreg, status,2
 14024 ;; Tracked objects:
 14025 ;;		On entry : 0/0
 14026 ;;		On exit  : 0/0
 14027 ;;		Unchanged: 0/0
 14028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14029 ;;      Params:         0       0       0       0       0       0       0
 14030 ;;      Locals:         0       0       0       0       0       0       0
 14031 ;;      Temps:          0       0       0       0       0       0       0
 14032 ;;      Totals:         0       0       0       0       0       0       0
 14033 ;;Total ram usage:        0 bytes
 14034 ;; Hardware stack levels used:    1
 14035 ;; Hardware stack levels required when called:    1
 14036 ;; This function calls:
 14037 ;;		Nothing
 14038 ;; This function is called by:
 14039 ;;		_main
 14040 ;; This function uses a non-reentrant model
 14041 ;;
 14042                           
 14043                           	psect	text56
 14044  006BE8                     __ptext56:
 14045                           	callstack 0
 14046  006BE8                     _init_PORTS:
 14047                           	callstack 0
 14048  006BE8  FFFF               	dw	65535	; assembler added errata NOP
 14049  006BEA                     
 14050                           ;init_PIC.c: 63:     LATA = 0;
 14051  006BEA  0E00               	movlw	0
 14052  006BEC  6E89               	movwf	137,c	;volatile
 14053                           
 14054                           ;init_PIC.c: 64:     PORTA = 0;
 14055  006BEE  0E00               	movlw	0
 14056  006BF0  6E80               	movwf	128,c	;volatile
 14057                           
 14058                           ;init_PIC.c: 65:     TRISA = 0xF0;
 14059  006BF2  0EF0               	movlw	240
 14060  006BF4  6E92               	movwf	146,c	;volatile
 14061                           
 14062                           ;init_PIC.c: 67:     LATB = 0;
 14063  006BF6  0E00               	movlw	0
 14064  006BF8  6E8A               	movwf	138,c	;volatile
 14065                           
 14066                           ;init_PIC.c: 68:     PORTB = 0;
 14067  006BFA  0E00               	movlw	0
 14068  006BFC  6E81               	movwf	129,c	;volatile
 14069                           
 14070                           ;init_PIC.c: 69:     TRISB = 0x00;
 14071  006BFE  0E00               	movlw	0
 14072  006C00  6E93               	movwf	147,c	;volatile
 14073                           
 14074                           ;init_PIC.c: 72:     LATC = 0;
 14075  006C02  0E00               	movlw	0
 14076  006C04  6E8B               	movwf	139,c	;volatile
 14077                           
 14078                           ;init_PIC.c: 73:     PORTC = 0;
 14079  006C06  0E00               	movlw	0
 14080  006C08  6E82               	movwf	130,c	;volatile
 14081  006C0A                     
 14082                           ;init_PIC.c: 74:     TRISCbits.RC2 = 0;
 14083  006C0A  9494               	bcf	148,2,c	;volatile
 14084  006C0C                     
 14085                           ;init_PIC.c: 75:     TRISCbits.RC7 = 1;
 14086  006C0C  8E94               	bsf	148,7,c	;volatile
 14087  006C0E                     
 14088                           ;init_PIC.c: 76:     TRISCbits.RC6 = 0;
 14089  006C0E  9C94               	bcf	148,6,c	;volatile
 14090  006C10  0012               	return		;funcret
 14091  006C12  FFFF               	dw	65535	; errata NOP
 14092  006C14                     __end_of_init_PORTS:
 14093                           	callstack 0
 14094                           
 14095 ;; *************** function _get_reg_value *****************
 14096 ;; Defined at:
 14097 ;;		line 51 in file "serial_rs232.c"
 14098 ;; Parameters:    Size  Location     Type
 14099 ;;		None
 14100 ;; Auto vars:     Size  Location     Type
 14101 ;;  rx_char         1    0[COMRAM] unsigned char 
 14102 ;; Return value:  Size  Location     Type
 14103 ;;                  1    wreg      unsigned char 
 14104 ;; Registers used:
 14105 ;;		wreg, status,2
 14106 ;; Tracked objects:
 14107 ;;		On entry : 0/0
 14108 ;;		On exit  : 0/0
 14109 ;;		Unchanged: 0/0
 14110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14111 ;;      Params:         0       0       0       0       0       0       0
 14112 ;;      Locals:         1       0       0       0       0       0       0
 14113 ;;      Temps:          0       0       0       0       0       0       0
 14114 ;;      Totals:         1       0       0       0       0       0       0
 14115 ;;Total ram usage:        1 bytes
 14116 ;; Hardware stack levels used:    1
 14117 ;; Hardware stack levels required when called:    1
 14118 ;; This function calls:
 14119 ;;		Nothing
 14120 ;; This function is called by:
 14121 ;;		_main
 14122 ;; This function uses a non-reentrant model
 14123 ;;
 14124                           
 14125                           	psect	text57
 14126  006AC6                     __ptext57:
 14127                           	callstack 0
 14128  006AC6                     _get_reg_value:
 14129                           	callstack 0
 14130  006AC6  FFFF               	dw	65535	; assembler added errata NOP
 14131  006AC8                     
 14132                           ;serial_rs232.c: 52:     unsigned char rx_char = RCREG;
 14133  006AC8  CFAE F001          	movff	4014,get_reg_value@rx_char	;volatile
 14134  006ACC                     
 14135                           ;serial_rs232.c: 53:     RCREG = 0;
 14136  006ACC  0E00               	movlw	0
 14137  006ACE  6EAE               	movwf	174,c	;volatile
 14138                           
 14139                           ;serial_rs232.c: 54:     return rx_char;
 14140  006AD0  5001               	movf	get_reg_value@rx_char^0,w,c
 14141  006AD2  0012               	return		;funcret
 14142  006AD4  FFFF               	dw	65535	; errata NOP
 14143  006AD6                     __end_of_get_reg_value:
 14144                           	callstack 0
 14145                           
 14146 ;; *************** function _change_direction *****************
 14147 ;; Defined at:
 14148 ;;		line 40 in file "stepper_motor.c"
 14149 ;; Parameters:    Size  Location     Type
 14150 ;;  stepper_moto    2    0[COMRAM] PTR struct .
 14151 ;;		 -> end_effector_stepper(14), joint_stepper(14), 
 14152 ;; Auto vars:     Size  Location     Type
 14153 ;;		None
 14154 ;; Return value:  Size  Location     Type
 14155 ;;                  1    wreg      void 
 14156 ;; Registers used:
 14157 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14158 ;; Tracked objects:
 14159 ;;		On entry : 0/0
 14160 ;;		On exit  : 0/0
 14161 ;;		Unchanged: 0/0
 14162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14163 ;;      Params:         2       0       0       0       0       0       0
 14164 ;;      Locals:         0       0       0       0       0       0       0
 14165 ;;      Temps:          2       0       0       0       0       0       0
 14166 ;;      Totals:         4       0       0       0       0       0       0
 14167 ;;Total ram usage:        4 bytes
 14168 ;; Hardware stack levels used:    1
 14169 ;; Hardware stack levels required when called:    1
 14170 ;; This function calls:
 14171 ;;		Nothing
 14172 ;; This function is called by:
 14173 ;;		_main
 14174 ;; This function uses a non-reentrant model
 14175 ;;
 14176                           
 14177                           	psect	text58
 14178  006C48                     __ptext58:
 14179                           	callstack 0
 14180  006C48                     _change_direction:
 14181                           	callstack 0
 14182  006C48  FFFF               	dw	65535	; assembler added errata NOP
 14183  006C4A                     
 14184                           ;stepper_motor.c: 41:     stepper_motor -> direction = stepper_motor -> direction*(-1);
 14185  006C4A  EE20 F004          	lfsr	2,4
 14186  006C4E  5001               	movf	change_direction@stepper_motor^0,w,c
 14187  006C50  26D9               	addwf	fsr2l,f,c
 14188  006C52  5002               	movf	(change_direction@stepper_motor+1)^0,w,c
 14189  006C54  22DA               	addwfc	fsr2h,f,c
 14190  006C56  CFDE F003          	movff	postinc2,??_change_direction
 14191  006C5A  CFDD F004          	movff	postdec2,??_change_direction+1
 14192  006C5E  1E03               	comf	??_change_direction^0,f,c
 14193  006C60  1E04               	comf	(??_change_direction+1)^0,f,c
 14194  006C62  4A03               	infsnz	??_change_direction^0,f,c
 14195  006C64  2A04               	incf	(??_change_direction+1)^0,f,c
 14196  006C66  EE20 F004          	lfsr	2,4
 14197  006C6A  5001               	movf	change_direction@stepper_motor^0,w,c
 14198  006C6C  26D9               	addwf	fsr2l,f,c
 14199  006C6E  5002               	movf	(change_direction@stepper_motor+1)^0,w,c
 14200  006C70  22DA               	addwfc	fsr2h,f,c
 14201  006C72  C003  FFDE         	movff	??_change_direction,postinc2
 14202  006C76  C004  FFDD         	movff	??_change_direction+1,postdec2
 14203  006C7A  0012               	return		;funcret
 14204  006C7C  FFFF               	dw	65535	; errata NOP
 14205  006C7E                     __end_of_change_direction:
 14206                           	callstack 0
 14207                           
 14208 ;; *************** function _rx_char_usart *****************
 14209 ;; Defined at:
 14210 ;;		line 180 in file "main.c"
 14211 ;; Parameters:    Size  Location     Type
 14212 ;;		None
 14213 ;; Auto vars:     Size  Location     Type
 14214 ;;		None
 14215 ;; Return value:  Size  Location     Type
 14216 ;;                  1    wreg      void 
 14217 ;; Registers used:
 14218 ;;		wreg, status,2
 14219 ;; Tracked objects:
 14220 ;;		On entry : 0/0
 14221 ;;		On exit  : 0/0
 14222 ;;		Unchanged: 0/0
 14223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14224 ;;      Params:         0       0       0       0       0       0       0
 14225 ;;      Locals:         0       0       0       0       0       0       0
 14226 ;;      Temps:          0       0       0       0       0       0       0
 14227 ;;      Totals:         0       0       0       0       0       0       0
 14228 ;;Total ram usage:        0 bytes
 14229 ;; Hardware stack levels used:    1
 14230 ;; This function calls:
 14231 ;;		Nothing
 14232 ;; This function is called by:
 14233 ;;		Interrupt level 2
 14234 ;; This function uses a non-reentrant model
 14235 ;;
 14236                           
 14237                           	psect	intcode
 14238  000008                     __pintcode:
 14239                           	callstack 0
 14240  000008                     _rx_char_usart:
 14241                           	callstack 0
 14242  000008  FFFF               	dw	65535	; assembler added errata NOP
 14243                           
 14244                           ;incstack = 0
 14245  00000A  827F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14246  00000C                     
 14247                           ;main.c: 181:     if(PIE1bits.RCIE && PIR1bits.RCIF){
 14248  00000C  AA9D               	btfss	157,5,c	;volatile
 14249  00000E  EF0B  F000         	goto	i2u667_41
 14250  000012  EF0E  F000         	goto	i2u667_40
 14251  000016                     i2u667_41:
 14252  000016  FFFF               	dw	65535	; assembler added errata NOP
 14253  000018  EF1E  F000         	goto	i2l5338
 14254  00001C                     i2u667_40:
 14255  00001C  FFFF               	dw	65535	; assembler added errata NOP
 14256  00001E  AA9E               	btfss	158,5,c	;volatile
 14257  000020  EF14  F000         	goto	i2u668_41
 14258  000024  EF17  F000         	goto	i2u668_40
 14259  000028                     i2u668_41:
 14260  000028  FFFF               	dw	65535	; assembler added errata NOP
 14261  00002A  EF1E  F000         	goto	i2l5338
 14262  00002E                     i2u668_40:
 14263  00002E  FFFF               	dw	65535	; assembler added errata NOP
 14264  000030                     
 14265                           ;main.c: 182:         PIR1bits.RCIF = 0;
 14266  000030  9A9E               	bcf	158,5,c	;volatile
 14267  000032                     
 14268                           ;main.c: 183:         state_changed = 1;
 14269  000032  0E01               	movlw	1
 14270  000034  0101               	movlb	1	; () banked
 14271  000036  6FAA               	movwf	_state_changed& (0+255),b
 14272                           
 14273                           ;main.c: 184:         read_new_char = 1;
 14274  000038  0E01               	movlw	1
 14275  00003A  6FA8               	movwf	_read_new_char& (0+255),b
 14276  00003C                     i2l5338:
 14277  00003C  FFFF               	dw	65535	; assembler added errata NOP
 14278                           
 14279                           ;main.c: 186:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF){
 14280  00003E  AAF2               	btfss	242,5,c	;volatile
 14281  000040  EF24  F000         	goto	i2u669_41
 14282  000044  EF27  F000         	goto	i2u669_40
 14283  000048                     i2u669_41:
 14284  000048  FFFF               	dw	65535	; assembler added errata NOP
 14285  00004A  EF37  F000         	goto	i2l168
 14286  00004E                     i2u669_40:
 14287  00004E  FFFF               	dw	65535	; assembler added errata NOP
 14288  000050  A4F2               	btfss	242,2,c	;volatile
 14289  000052  EF2D  F000         	goto	i2u670_41
 14290  000056  EF30  F000         	goto	i2u670_40
 14291  00005A                     i2u670_41:
 14292  00005A  FFFF               	dw	65535	; assembler added errata NOP
 14293  00005C  EF37  F000         	goto	i2l168
 14294  000060                     i2u670_40:
 14295  000060  FFFF               	dw	65535	; assembler added errata NOP
 14296  000062                     
 14297                           ;main.c: 187:         T0CON = 0;
 14298  000062  0E00               	movlw	0
 14299  000064  6ED5               	movwf	213,c	;volatile
 14300  000066                     
 14301                           ;main.c: 188:         INTCONbits.TMR0IF = 0;
 14302  000066  94F2               	bcf	242,2,c	;volatile
 14303                           
 14304                           ;main.c: 189:         timer_done = 1;
 14305  000068  0E01               	movlw	1
 14306  00006A  0101               	movlb	1	; () banked
 14307  00006C  6FA7               	movwf	_timer_done& (0+255),b
 14308  00006E                     i2l168:
 14309  00006E  FFFF               	dw	65535	; assembler added errata NOP
 14310  000070  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14311  000072  0011               	retfie		f
 14312  000074  FFFF               	dw	65535	; errata NOP
 14313  000076                     __end_of_rx_char_usart:
 14314                           	callstack 0
 14315                           
 14316                           	psect	rparam
 14317  0000                     
 14318                           	psect	temp
 14319  00007F                     btemp:
 14320                           	callstack 0
 14321  00007F                     	ds	1
 14322  0000                     int$flags	set	btemp
 14323  0000                     wtemp8	set	btemp+1
 14324  0000                     ttemp5	set	btemp+1
 14325  0000                     ttemp6	set	btemp+4
 14326  0000                     ttemp7	set	btemp+8
 14327                           
 14328                           	psect	idloc
 14329                           
 14330                           ;Config register IDLOC0 @ 0x200000
 14331                           ;	unspecified, using default values
 14332  200000                     	org	2097152
 14333  200000  FF                 	db	255
 14334                           
 14335                           ;Config register IDLOC1 @ 0x200001
 14336                           ;	unspecified, using default values
 14337  200001                     	org	2097153
 14338  200001  FF                 	db	255
 14339                           
 14340                           ;Config register IDLOC2 @ 0x200002
 14341                           ;	unspecified, using default values
 14342  200002                     	org	2097154
 14343  200002  FF                 	db	255
 14344                           
 14345                           ;Config register IDLOC3 @ 0x200003
 14346                           ;	unspecified, using default values
 14347  200003                     	org	2097155
 14348  200003  FF                 	db	255
 14349                           
 14350                           ;Config register IDLOC4 @ 0x200004
 14351                           ;	unspecified, using default values
 14352  200004                     	org	2097156
 14353  200004  FF                 	db	255
 14354                           
 14355                           ;Config register IDLOC5 @ 0x200005
 14356                           ;	unspecified, using default values
 14357  200005                     	org	2097157
 14358  200005  FF                 	db	255
 14359                           
 14360                           ;Config register IDLOC6 @ 0x200006
 14361                           ;	unspecified, using default values
 14362  200006                     	org	2097158
 14363  200006  FF                 	db	255
 14364                           
 14365                           ;Config register IDLOC7 @ 0x200007
 14366                           ;	unspecified, using default values
 14367  200007                     	org	2097159
 14368  200007  FF                 	db	255
 14369                           
 14370                           	psect	config
 14371                           
 14372                           ; Padding undefined space
 14373  300000                     	org	3145728
 14374  300000  FF                 	db	255
 14375                           
 14376                           ;Config register CONFIG1H @ 0x300001
 14377                           ;	Oscillator Selection bits
 14378                           ;	OSC = RCIO, RC oscillator w/ OSC2 configured as RA6
 14379                           ;	Oscillator System Clock Switch Enable bit
 14380                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
 14381  300001                     	org	3145729
 14382  300001  27                 	db	39
 14383                           
 14384                           ;Config register CONFIG2L @ 0x300002
 14385                           ;	Power-up Timer Enable bit
 14386                           ;	PWRT = OFF, PWRT disabled
 14387                           ;	Brown-out Reset Enable bit
 14388                           ;	BOR = ON, Brown-out Reset enabled
 14389                           ;	Brown-out Reset Voltage bits
 14390                           ;	BORV = 20, VBOR set to 2.0V
 14391  300002                     	org	3145730
 14392  300002  0F                 	db	15
 14393                           
 14394                           ;Config register CONFIG2H @ 0x300003
 14395                           ;	Watchdog Timer Enable bit
 14396                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 14397                           ;	Watchdog Timer Postscale Select bits
 14398                           ;	WDTPS = 128, 1:128
 14399  300003                     	org	3145731
 14400  300003  0E                 	db	14
 14401                           
 14402                           ; Padding undefined space
 14403  300004                     	org	3145732
 14404  300004  FF                 	db	255
 14405                           
 14406                           ;Config register CONFIG3H @ 0x300005
 14407                           ;	CCP2 Mux bit
 14408                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
 14409  300005                     	org	3145733
 14410  300005  01                 	db	1
 14411                           
 14412                           ;Config register CONFIG4L @ 0x300006
 14413                           ;	Stack Full/Underflow Reset Enable bit
 14414                           ;	STVR = ON, Stack Full/Underflow will cause RESET
 14415                           ;	Low Voltage ICSP Enable bit
 14416                           ;	LVP = ON, Low Voltage ICSP enabled
 14417                           ;	Background Debugger Enable bit
 14418                           ;	DEBUG = 0x1, unprogrammed default
 14419  300006                     	org	3145734
 14420  300006  85                 	db	133
 14421                           
 14422                           ; Padding undefined space
 14423  300007                     	org	3145735
 14424  300007  FF                 	db	255
 14425                           
 14426                           ;Config register CONFIG5L @ 0x300008
 14427                           ;	Code Protection bit
 14428                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
 14429                           ;	Code Protection bit
 14430                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
 14431                           ;	Code Protection bit
 14432                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
 14433                           ;	Code Protection bit
 14434                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
 14435  300008                     	org	3145736
 14436  300008  0F                 	db	15
 14437                           
 14438                           ;Config register CONFIG5H @ 0x300009
 14439                           ;	Boot Block Code Protection bit
 14440                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
 14441                           ;	Data EEPROM Code Protection bit
 14442                           ;	CPD = OFF, Data EEPROM not code protected
 14443  300009                     	org	3145737
 14444  300009  C0                 	db	192
 14445                           
 14446                           ;Config register CONFIG6L @ 0x30000A
 14447                           ;	Write Protection bit
 14448                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
 14449                           ;	Write Protection bit
 14450                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
 14451                           ;	Write Protection bit
 14452                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
 14453                           ;	Write Protection bit
 14454                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
 14455  30000A                     	org	3145738
 14456  30000A  0F                 	db	15
 14457                           
 14458                           ;Config register CONFIG6H @ 0x30000B
 14459                           ;	Configuration Register Write Protection bit
 14460                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
 14461                           ;	Boot Block Write Protection bit
 14462                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
 14463                           ;	Data EEPROM Write Protection bit
 14464                           ;	WRTD = OFF, Data EEPROM not write protected
 14465  30000B                     	org	3145739
 14466  30000B  E0                 	db	224
 14467                           
 14468                           ;Config register CONFIG7L @ 0x30000C
 14469                           ;	Table Read Protection bit
 14470                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
 14471                           ;	Table Read Protection bit
 14472                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
 14473                           ;	Table Read Protection bit
 14474                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
 14475                           ;	Table Read Protection bit
 14476                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
 14477  30000C                     	org	3145740
 14478  30000C  0F                 	db	15
 14479                           
 14480                           ;Config register CONFIG7H @ 0x30000D
 14481                           ;	Boot Block Table Read Protection bit
 14482                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
 14483  30000D                     	org	3145741
 14484  30000D  40                 	db	64
 14485                           tosu	equ	0xFFF
 14486                           tosh	equ	0xFFE
 14487                           tosl	equ	0xFFD
 14488                           stkptr	equ	0xFFC
 14489                           pclatu	equ	0xFFB
 14490                           pclath	equ	0xFFA
 14491                           pcl	equ	0xFF9
 14492                           tblptru	equ	0xFF8
 14493                           tblptrh	equ	0xFF7
 14494                           tblptrl	equ	0xFF6
 14495                           tablat	equ	0xFF5
 14496                           prodh	equ	0xFF4
 14497                           prodl	equ	0xFF3
 14498                           indf0	equ	0xFEF
 14499                           postinc0	equ	0xFEE
 14500                           postdec0	equ	0xFED
 14501                           preinc0	equ	0xFEC
 14502                           plusw0	equ	0xFEB
 14503                           fsr0h	equ	0xFEA
 14504                           fsr0l	equ	0xFE9
 14505                           wreg	equ	0xFE8
 14506                           indf1	equ	0xFE7
 14507                           postinc1	equ	0xFE6
 14508                           postdec1	equ	0xFE5
 14509                           preinc1	equ	0xFE4
 14510                           plusw1	equ	0xFE3
 14511                           fsr1h	equ	0xFE2
 14512                           fsr1l	equ	0xFE1
 14513                           bsr	equ	0xFE0
 14514                           indf2	equ	0xFDF
 14515                           postinc2	equ	0xFDE
 14516                           postdec2	equ	0xFDD
 14517                           preinc2	equ	0xFDC
 14518                           plusw2	equ	0xFDB
 14519                           fsr2h	equ	0xFDA
 14520                           fsr2l	equ	0xFD9
 14521                           status	equ	0xFD8

Data Sizes:
    Strings     251
    Constant    20
    Data        47
    BSS         92
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    124     126
    BANK0           128     22      91
    BANK1           256    161     229
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    main$2005	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), 
		 -> STR_2(CODE[64]), STR_1(CODE[49]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_105(CODE[3]), STR_101(CODE[3]), STR_96(CODE[3]), STR_92(CODE[3]), 
		 -> STR_87(CODE[4]), STR_83(CODE[4]), STR_78(CODE[3]), STR_73(CODE[3]), 
		 -> STR_68(CODE[4]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[4]), 
		 -> STR_48(CODE[3]), STR_43(CODE[3]), STR_38(CODE[4]), STR_33(CODE[3]), 
		 -> STR_29(CODE[3]), STR_24(CODE[3]), STR_20(CODE[3]), STR_15(CODE[4]), 
		 -> STR_11(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_105(CODE[3]), STR_101(CODE[3]), STR_96(CODE[3]), STR_92(CODE[3]), 
		 -> STR_87(CODE[4]), STR_83(CODE[4]), STR_78(CODE[3]), STR_73(CODE[3]), 
		 -> STR_68(CODE[4]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[4]), 
		 -> STR_48(CODE[3]), STR_43(CODE[3]), STR_38(CODE[4]), STR_33(CODE[3]), 
		 -> STR_29(CODE[3]), STR_24(CODE[3]), STR_20(CODE[3]), STR_15(CODE[4]), 
		 -> STR_11(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), STR_6(CODE[7]), 
		 -> STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), 
		 -> STR_1(CODE[49]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_snprintf(BANK0[2]), STR_6(CODE[7]), STR_5(CODE[9]), 
		 -> STR_4(CODE[39]), STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    S1392_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_8(CODE[3]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    change_direction@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    reach_goal@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    update_current_coil@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    turn_on_current_coil@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    init_stepper@hex_coil_register_values	PTR int  size(2) Largest target is 8
		 -> hex_end_effector_values(BANK1[8]), hex_joint_values(BANK1[8]), 

    init_stepper@stepper_motor	PTR struct . size(2) Largest target is 14
		 -> end_effector_stepper(BANK1[14]), joint_stepper(BANK1[14]), 

    state_translator_micro_to_fpga@state	PTR int  size(2) Largest target is 2
		 -> state(BANK1[2]), 

    state_translator_fpga_to_micro@state	PTR int  size(2) Largest target is 2
		 -> state(BANK1[2]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), STR_7(CODE[22]), 

    main@greet_str	PTR const unsigned char [80] size(2) Largest target is 64
		 -> ?_snprintf(BANK0[2]), STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), 
		 -> STR_3(CODE[9]), STR_2(CODE[64]), STR_1(CODE[49]), 

    state_msgs	PTR const unsigned char [6] size(2) Largest target is 64
		 -> STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[39]), STR_3(CODE[9]), 
		 -> STR_2(CODE[64]), STR_1(CODE[49]), 


Critical Paths under _main in COMRAM

    _state_translator_fpga_to_micro->_lcd_dat
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _reach_goal->_turn_on_current_coil
    _reach_goal->_update_current_coil
    _lcd_str->_lcd_dat
    _lcd_dat->_lcd_wr
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_wr
    _init_timer_2->___fltol
    _init_ccp1->_update_pwm_duty_ccp1
    _update_pwm_duty_ccp1->___fltol
    ___fldiv->___flmul
    _init_USART->___fltol
    _roundf->___flsub
    ___flsub->___fladd
    ___fladd->___fldiv
    ___fltol->_roundf

Critical Paths under _rx_char_usart in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_snprintf
    _snprintf->_vsnprintf

Critical Paths under _rx_char_usart in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rx_char_usart in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rx_char_usart in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rx_char_usart in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rx_char_usart in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rx_char_usart in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               162   162      0   75482
                                            123 COMRAM     1     1      0
                                              0 BANK1    161   161      0
                             ___wmul
                   _change_direction
                      _get_reg_value
                         _init_PORTS
                         _init_USART
                          _init_ccp1
                    _init_interrupts
                       _init_stepper
                       _init_timer_0
                       _init_timer_2
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                         _reach_goal
                     _serial_tx_char
                           _snprintf
     _state_translator_fpga_to_micro
     _state_translator_micro_to_fpga
 ---------------------------------------------------------------------------------
 (1) _state_translator_micro_to_fpga                       5     3      2     464
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _state_translator_fpga_to_micro                       3     1      2     384
                                              2 COMRAM     3     1      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            12     4      8   46617
                                             10 BANK0     12     4      8
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   46243
                                            111 COMRAM    12     4      8
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   45480
                                            103 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   45019
                                             66 COMRAM    37    31      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7075
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6115
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    5013
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    5560
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6714
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    2168
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1175
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _serial_tx_char                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _reach_goal                                           7     3      4    1264
                                              6 COMRAM     7     3      4
               _turn_on_current_coil
                _update_current_coil
 ---------------------------------------------------------------------------------
 (2) _update_current_coil                                  6     4      2     274
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _turn_on_current_coil                                 6     4      2     120
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              5     3      2     286
                                              2 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      44
                                              2 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_timer_2                                         4     4      0    7709
                                            110 COMRAM     4     4      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _init_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_stepper                                        16     6     10    1406
                                              0 COMRAM    16     6     10
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ccp1                                            0     0      0    4374
               _update_pwm_duty_ccp1
 ---------------------------------------------------------------------------------
 (2) _update_pwm_duty_ccp1                                 9     5      4    4374
                                            110 COMRAM     9     5      4
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1551
                                             25 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   11258
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   10801
                                             74 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3801
                                             66 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    3478
                                             50 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2200
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                            100 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_reg_value                                        1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _change_direction                                     4     2      2     272
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _rx_char_usart                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _change_direction
   _get_reg_value
   _init_PORTS
   _init_USART
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
         ___flmul (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
       ___flmul (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
           ___flmul (ARG)
         ___flge
         ___flmul
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
             ___flmul (ARG)
     _roundf
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
         ___flmul (ARG)
       ___flge
       ___flmul
       ___flneg
       ___flsub
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
           ___flmul (ARG)
   _init_ccp1
     _update_pwm_duty_ccp1
       ___fldiv
         ___flmul (ARG)
       ___flmul
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
           ___flmul (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
         ___flmul (ARG)
         _roundf (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
             ___flmul (ARG)
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
               ___flmul (ARG)
   _init_interrupts
   _init_stepper
   _init_timer_0
   _init_timer_2
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
       ___flmul (ARG)
     ___fldiv
       ___flmul (ARG)
     ___flmul
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
         ___flmul (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
       ___flmul (ARG)
       _roundf (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
           ___flmul (ARG)
         ___flge
         ___flmul
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
             ___flmul (ARG)
   _lcd_cmd
     _lcd_wr
   _lcd_init
     _lcd_cmd
       _lcd_wr
   _lcd_str
     _lcd_dat
       _lcd_wr
   _reach_goal
     _turn_on_current_coil
     _update_current_coil
   _serial_tx_char
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _state_translator_fpga_to_micro
     _lcd_dat
       _lcd_wr
   _state_translator_micro_to_fpga

 _rx_char_usart (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A1      E5       7       89.5%
BITBANK0            80      0       0       4        0.0%
BANK0               80     16      5B       5       71.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7C      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1BE      15        0.0%
DATA                 0      0     1BE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Jun 08 19:04:11 2023

                                  ?_get_reg_value 0001                                      ___fldiv@aexp 0032  
                                    ___fldiv@bexp 0031                                      ___fldiv@sign 002A  
                                              l21 6CF6                                                l24 6B0E  
                                              l27 6B22                                                l36 6AD2  
                             ___wmul@multiplicand 0003                                               l210 6B90  
                                             l124 1544                                               l301 742A  
                                             l213 6BBA                                               l133 16B2  
                                             l125 15DE                                               l222 72B8  
                                             l207 6AC2                                               l311 6CB6  
                                             l216 7230                                               l152 1A5E  
                                             l128 1626                                               l321 71B0  
                                             l241 7A76                                               l251 7A7A  
                                             l308 7368                                               l325 6C7A  
                                             l317 75CE                                               l237 7978  
                                             l245 7A76                                               l328 6BE4  
                                             l602 6D38                                               l442 3CD4  
                                             l195 6C10                                               l291 74F6  
                                             l294 6B44                                               l198 6AB6  
                                             l455 3E64                                               l288 6B66  
                                             l625 7EE8                                               l910 28F2  
                                             l912 270A                                               l593 7D64  
                                             l921 2760                                               l923 27F0  
                                             l915 26C4                                               l924 27D8  
                                             l773 7C8C                                               l598 7DB2  
                                             l942 210E                                               l766 7C6A  
                                             l951 23AA                                               l783 787E  
                                             l952 2392                                               l856 1CC2  
                                             l776 785C                                               l873 1E06  
                                             l865 201C                                               l857 1CAC  
                                             l946 24C0                                               l882 1F0A  
                                             l858 1C62                                               l883 1EF2  
                                             l949 231A                                               l959 2478  
                                             l898 6E8E                                 ??_init_interrupts 0001  
                                             _PR2 000FCB                                               _abs 6E92  
                                             _pad 76B6                                               wreg 000FE8  
                                  ?_rx_char_usart 0001                                      ___flmul@aexp 0012  
                                    ___flmul@bexp 0013                                      ___flmul@sign 000D  
                                    ___flmul@temp 0018                                      ___flmul@prod 0014  
                                    ___fltol@exp1 006E                                              l1021 6C44  
                                            l1007 2CD8                                              l1120 35B2  
                                            l1113 300A                                              l1034 3F76  
                                            l1211 018E                                              ?_abs 0013  
                                            l1029 3F9C                                              l1118 35A8  
                                            l1127 3712                                              l1080 7794  
                                            l1152 3952                                              l1136 3816  
                                            l1129 3782                                              l1314 3B14  
                                            l1138 3820                                              l1322 6E44  
                                            l1234 1452                                              l1075 7708  
                                            l1147 38F6                                              l1148 3948  
                                            l1172 3052                                              PORTD 000F83  
                                            l1317 3B1E                                              l1093 2D96  
                                            l1157 337E                                              l1181 3100  
                                            PORTE 000F84                                              l1078 7754  
                                            l1342 6DBC                                              l1174 305C  
                                            l1087 6FF0                                              l1095 2DA0  
                                            l1167 3560                                              l1159 3388  
                                            l4000 1BC8                                              l1328 6D7A  
                                            l1336 6F8A                                              l4010 1BDC  
                                            l4002 1BCC                                              l1283 6ECE  
                                            l1195 32CC                                              l4100 1EA2  
                                            l4020 1BF0                                              l4012 1BE0  
                                            l4004 1BD0                                              l1357 76B0  
                                            l1365 6F2A                                              l1197 3336  
                                            l4110 1EE8                                              l4102 1EA4  
                                            l4030 1C5A                                              l4014 1BE4  
                                            l4006 1BD4                                              l4022 1BF4  
                                            l1374 3FFA                                              l1286 6ED8  
                                            l1278 7132                                              l1279 713A  
                                            l4120 1F7C                                              l4104 1EB6  
                                            l4040 1C9E                                              l4032 1C76  
                                            l4024 1BFA                                              l4016 1BE8  
                                            l4008 1BD8                                              l5000 743A  
                                            l1368 6AAA                                              l3400 760C  
                                            l1393 70C8                                              l4130 1FD0  
                                            l4114 1F20                                              l4122 1F7E  
                                            l4106 1EBC                                              l4050 1CFE  
                                            l4042 1CAA                                              l4034 1C82  
                                            l4026 1C28                                              l4018 1BEC  
                                            l5010 6B28                                              l5002 743C  
                                            l3402 7630                                              l3410 6EEC  
                                            l1378 7B80                                              l4210 0300  
                                            l4202 02A8                                              l4140 2008  
                                            l4132 1FE4                                              l4124 1F94  
                                            l4116 1F2C                                              l4108 1ECE  
                                            l4060 1D46                                              l4052 1D10  
                                            l4044 1CD6                                              l4036 1C88  
                                            l4028 1C4A                                              l5012 6B2C  
                                            l5020 6AB0                                              l5004 743E  
                                            l3404 7668                                              l3412 6F00  
                                            l3420 3FB6                                              l3500 3D9E  
                                            l1388 70BE                                              l4212 032A  
                                            l4204 02BC                                              l4142 200A  
                                            l4134 1FEA                                              l4126 1FA6  
                                            l4118 1F3E                                              l4070 1D9A  
                                            l4062 1D5A                                              l4054 1D22  
                                            l4046 1CEA                                              l4038 1C9C  
                                            l5014 6B40                                              l5030 730C  
                                            l5022 72BE                                              l5006 74BA  
                                            l3430 6BC0                                              l3414 6F04  
                                            l3422 3FEE                                              l3510 3E22  
                                            l3502 3DD2                                              l4310 0A7E  
                                            l4222 03E6                                              l4214 0364  
                                            l4206 02E8                                              l4150 00B4  
                                            l5110 79CE                                              l5102 7980  
                                            l1399 6DFE                                              l4136 1FEE  
                                            l4128 1FCC                                              l4080 1E22  
                                            l4072 1DCE                                              l4064 1D5C  
                                            l4056 1D34                                              l5016 6B42  
                                            l5032 7310                                              l5040 71B8  
                                            l3432 6BDC                                              l3408 6EE0  
                                            l3416 3FA4                                              l3440 3B3C  
                                            l3512 3E42                                              l3504 3DF2  
                                            l3520 7BB6                                              l4400 109C  
                                            l4304 09E6                                              l4232 0474  
                                            l4216 0386                                              l4208 02F2  
                                            l4224 03FA                                              l4160 00EE  
                                            l4152 00C6                                              l5120 7A44  
                                            l5112 79F0                                              l5104 799E  
                                            l5200 14E8                                              l4138 1FF6  
                                            l4090 1E68                                              l4082 1E36  
                                            l4074 1DD0                                              l4066 1D68  
                                            l4058 1D40                                              l5034 7330  
                                            l5130 6B56                                              l5050 71FA  
                                            l5042 71C8                                              l3610 6F82  
                                            l3602 6F2E                                              l3418 3FB0  
                                            l3450 3B98                                              l3442 3B5C  
                                            l3506 3E06                                              l3530 7C2E  
                                            l3522 7BBE                                              l3426 6DC0  
                                            l4410 1184                                              l4402 10D2  
                                            l4306 0A22                                              l4314 0A8C  
                                            l4242 056C                                              l4234 04B0  
                                            l4226 0426                                              l4218 0396  
                                            l4154 00CA                                              l4146 007C  
                                            l5122 7A4C                                              l5114 79F8  
                                            l5106 79A6                                              l5210 1528  
                                            l5202 14EA                                              l4092 1E6A  
                                            l4076 1DE4                                              l4068 1D6E  
                                            l4500 254E                                              l5036 7340  
                                            l5028 72C6                                              l5140 6B60  
                                            l5132 6B58                                              l5060 7224  
                                            l5052 720C                                              l5044 71DA  
                                            l3604 6F34                                              l3620 6FC2  
                                            l3460 3BFA                                              l3452 3BA6  
                                            l3444 3B60                                              l3436 3B26  
                                            l3508 3E0C                                              l3700 35E4  
                                            l3532 7C4E                                              l3524 7BD4  
                                            l3516 7B88                                              l3540 77BC  
                                            l4412 11AE                                              l4420 11FE  
                                            l4316 0AC8                                              l4324 0B32  
                                            l4308 0A5A                                              l4252 0630  
                                            l4244 05A8                                              l4236 04E8  
                                            l4228 0458                                              l4180 011C  
                                            l4172 0106                                              l4164 00F6  
                                            l4156 00D6                                              l4148 00A6  
                                            l5124 7A6E                                              l5116 7A1A  
                                            l5108 79C6                                              l5300 1916  
                                            l5220 15A0                                              l5212 153E  
                                            l5204 14F4                                              l4094 1E7E  
                                            l4086 1E4A                                              l4078 1DF4  
                                            l4510 259C                                              l4502 2560  
                                            l5038 7354                                              l5142 6B62  
                                            l5134 6B5A                                              l5062 722A  
                                            l5054 7212                                              l5046 71DC  
                                            l5070 7274                                              l5150 7182  
                                            l3606 6F4C                                              l3622 6FC8  
                                            l3614 6F90                                              l3470 3C76  
                                            l3462 3C0E                                              l3454 3BC8  
                                            l3446 3B74                                              l3438 3B2A  
                                            l3630 2D00                                              l3710 3616  
                                            l3702 35E8                                              l3534 7C50  
                                            l3526 7BE8                                              l3518 7B94  
                                            l3550 7842                                              l3542 77C4  
                                            l4422 122A                                              l4414 11BE  
                                            l4406 1110                                              l4326 0B5E  
                                            l4334 0BC6                                              l4318 0B00  
                                            l4262 06D2                                              l4254 065C  
                                            l4246 05E0                                              l4238 0532  
                                            l4190 0204                                              l4158 00DA  
                                            l4182 0176                                              l5118 7A22  
                                            l5310 198C                                              l5302 1926  
                                            l5230 15D8                                              l5222 15A6  
                                            l5214 154E                                              l5206 150C  
                                            l4096 1E86                                              l4088 1E56  
                                            l4600 28C4                                              l4520 25E6  
                                            l4512 25A0                                              l4504 2562  
                                            l5144 6B64                                              l5136 6B5C  
                                            l5128 6B4A                                              l5056 7218  
                                            l5048 71E2                                              l5064 7236  
                                            l3608 6F7E                                              l3560 76F2  
                                            l3624 6FCC                                              l3616 6FA8  
                                            l3464 3C40                                              l3456 3BD0  
                                            l3472 3C7C                                              l3448 3B94  
                                            l3480 3CDA                                              l3640 2D8A  
                                            l3632 2D32                                              l3720 36C6  
                                            l3712 361C                                              l3704 35F4  
                                            l3536 7C64                                              l3528 7BFC  
                                            l3552 7856                                              l3544 77DA  
                                            l3800 344C                                              l4440 1358  
                                            l4424 1252                                              l4408 114C  
                                            l4360 0DA0                                              l4352 0D1E  
                                            l4336 0C02                                              l4344 0C6C  
                                            l4328 0B94                                              l4280 0854  
                                            l4272 0798                                              l4264 070E  
                                            l4256 0684                                              l4192 0218  
                                            l4184 01A0                                              l4176 010E  
                                            l4168 00FE                                              l5080 78CE  
                                            l5072 7886                                              l5312 19A2  
                                            l5304 193E                                              l5320 1A10  
                                            l5240 162C                                              l5232 15E2  
                                            l5224 15AC                                              l5216 155E  
                                            l5208 1520                                              l5162 6C4A  
                                            l4098 1E8C                                              l4602 28CA  
                                            l4530 261E                                              l4522 25EE  
                                            l4506 2578                                              l4514 25A8  
                                            l5138 6B5E                                              l5058 721E  
                                            l5066 723E                                              l5146 7140  
                                            l3394 75D6                                              l3570 7766  
                                            l3562 76FE                                              l3554 76B8  
                                            l3618 6FB4                                              l3474 3C92  
                                            l3466 3C60                                              l3458 3BE6  
                                            l3490 3D28                                              l3482 3CDE  
                                            l3650 2DE2                                              l3642 2DAA  
                                            l3634 2D52                                              l3730 3742  
                                            l3722 36E4                                              l3714 3622  
                                            l3706 35FC                                              l3546 77EE  
                                            l3538 779A                                              l3810 3526  
                                            l3802 34B0                                              l4450 13D4  
                                            l4442 1368                                              l4426 126C  
                                            l4434 12BA                                              l4370 0E98  
                                            l4362 0DDC                                              l4354 0D4A  
                                            l4346 0C98                                              l4338 0C3A  
                                            l4290 090C                                              l4282 0890  
                                            l4274 07D4                                              l4266 0746  
                                            l4194 0226                                              l4186 01A2  
                                            l5090 793A                                              l5082 78E2  
                                            l5074 788C                                              l5322 1A2A  
                                            l5314 19CC                                              l5306 1968  
                                            l5250 1692                                              l5242 1644  
                                            l5234 15F8                                              l5226 15B8  
                                            l5218 1564                                              l4700 2306  
                                            l4620 2042                                              l4604 28DC  
                                            l4540 265E                                              l4532 261E  
                                            l4524 25F4                                              l4516 25BA  
                                            l4508 258C                                              l5068 7272  
                                            l5148 716E                                              l5156 718E  
                                            l3900 39FC                                              l3396 75EC  
                                            l3572 777A                                              l3564 7716  
                                            l3556 76CA                                              l3476 3CB2  
                                            l3468 3C62                                              l3492 3D48  
                                            l3484 3CF0                                              l3660 2E80  
                                            l3652 2DEA                                              l3644 2DC0  
                                            l3636 2D68                                              l3628 2CE0  
                                            l3732 3752                                              l3724 3702  
                                            l3708 3604                                              l3716 3684  
                                            l3740 379A                                              l3548 7822  
                                            l3804 34C8                                              l3812 3536  
                                            l3580 6D7E                                              l3820 3026  
                                            l4452 13E2                                              l4436 12F6  
                                            l4428 127A                                              l4364 0E22  
                                            l4356 0D80                                              l4348 0CE2  
                                            l4276 081A                                              l4196 0248  
                                            l4188 01CE                                              l5092 7952  
                                            l5084 78FA                                              l5076 78A2  
                                            l5324 1A3E                                              l5316 19D6  
                                            l5308 1972                                              l5260 16FA  
                                            l5252 169E                                              l5244 1650  
                                            l5236 160C                                              l5228 15BE  
                                            l5180 1462                                              l4710 2356  
                                            l4702 2318                                              l4630 2086  
                                            l4622 2044                                              l4606 28E2  
                                            l4550 26B0                                              l4542 266E  
                                            l4518 25D6                                              l5158 71A8  
                                            l3910 3A84                                              l3902 3A06  
                                            l3398 7600                                              l3566 772C  
                                            l3558 76DE                                              l3494 3D6C  
                                            l3486 3D10                                              l3670 2F62  
                                            l3654 2DF2                                              l3662 2EE4  
                                            l3646 2DD0                                              l3638 2D6A  
                                            l3726 3726                                              l3734 3758  
                                            l3718 36A4                                              l3750 37DE  
                                            l3742 37A2                                              l3806 34EA  
                                            l3830 30AA                                              l3822 3046  
                                            l4454 13F6                                              l4438 132E  
                                            l4198 0258                                              l5094 7966  
                                            l5086 790E                                              l5078 78B6  
                                            l5326 1A4A                                              l5318 1A02  
                                            l5270 1776                                              l5262 1712  
                                            l5254 16C6                                              l5246 1664  
                                            l5238 161C                                              l5190 14C6  
                                            l5182 1466                                              l5174 1458  
                                            ?_pad 0011                                              l4720 23DE  
                                            l4712 2388                                              l4704 232C  
                                            l4640 20BA                                              l4632 2098  
                                            l4624 205A                                              l4616 2024  
                                            l4608 28E6                                              l4560 2706  
                                            l4552 26C2                                              l4544 267E  
                                            l4536 2632                                              l4528 2608  
                                            l4480 24D4                                              l3904 3A10  
                                            l3568 7730                                              l3496 3D74  
                                            l3488 3D14                                              l3576 6E94  
                                            l3680 2FB8                                              l3664 2F04  
                                            l3672 2F72                                              l3656 2E74  
                                            l3648 2DD8                                              l3728 373C  
                                            l3760 3862                                              l3752 37F0  
                                            l3744 37B8                                              l3808 3508  
                                            l3584 6E02                                              l3592 709C  
                                            l3840 30F2                                              l3832 30B2  
                                            l3824 3078                                              l3816 3010  
                                            l4448 13A8                                              l4392 0FEE  
                                            l4384 0F62                                              l4376 0EE8  
                                            l4368 0E5C                                              l4296 095A  
                                            l4288 08E0                                              l4464 1418  
                                            l5096 6C16                                              l5088 7926  
                                            l5280 1834                                              l5272 17A0  
                                            l5264 173C                                              l5248 167E  
                                            l5256 16D0                                              l5192 14CA  
                                            l5184 146A                                              l5176 1458  
                                            l4730 2460                                              l4722 2408  
                                            l4706 2340                                              l4650 2124  
                                            l4642 20D0                                              l4634 20A0  
                                            l4626 206E                                              l4618 2030  
                                            l4570 275E                                              l4562 2720  
                                            l4554 26D0                                              l4546 2686  
                                            l4538 264E                                              l4490 2522  
                                            l4482 24E6                                              l3914 3ACC  
                                            l3906 3A4A                                              l3498 3D8A  
                                            l3578 6EB2                                              l3682 2FC4  
                                            l3674 2F8A                                              l3666 2F26  
                                            l3658 2E7A                                              l3690 3566  
                                            l3770 38D2                                              l3762 3884  
                                            l3746 37C0                                              l3738 3788  
                                            l3930 7ABA                                              l3594 70B2  
                                            l3850 3192                                              l3834 30BA  
                                            l3826 3080                                              l3818 3024  
                                            l4466 1440                                              l4458 1404  
                                            l4394 102A                                              l4386 0F9E  
                                            l4378 0F14                                              l4298 0996  
                                            l5098 6C20                                              l5290 18A4  
                                            l5282 1844                                              l5274 17AA  
                                            l5266 1746                                              l5258 16EA  
                                            l5194 14D0                                              l5186 146E  
                                            l5178 145E                                              l4820 7EC6  
                                            l4804 7E5E                                              l4732 247E  
                                            l4740 24AA                                              l4716 23C0  
                                            l4724 240C                                              l4708 2344  
                                            l4660 2164                                              l4652 2136  
                                            l4644 20E4                                              l4636 20A6  
                                            l4628 207E                                              l4580 27CE  
                                            l4564 273A                                              l4572 2772  
                                            l4556 26F4                                              l4548 269C  
                                            l4492 2526                                              l4484 24E8  
                                            l4900 73D6                                              l4476 6ABE  
                                            l3916 3AE2                                              l3684 2FCE  
                                            l3676 2F9A                                              l3668 2F44  
                                            l3692 357A                                              l3764 3892  
                                            l3756 3848                                              l3748 37D6  
                                            l3940 7B56                                              l3932 7ACA  
                                            l3924 7A80                                              l3780 333C  
                                            l3588 7060                                              l3860 31DA  
                                            l3852 31A8                                              l3844 313C  
                                            l3836 30C2                                              l3828 30A2  
                                            l4396 1062                                              l5292 18B4  
                                            l5284 186E                                              l5276 1808  
                                            l5268 1760                                              l5196 14D6  
                                            l5188 149A                                              l4822 7ED6  
                                            l4814 7E8E                                              l4806 7E6A  
                                            l4742 24B0                                              l4734 248E  
                                            l4726 242C                                              l4718 23CC  
                                            l4670 21B6                                              l4662 217A  
                                            l4646 20F4                                              l4638 20B8  
                                            l3950 1A9C                                              l4590 284E  
                                            l4574 2786                                              l4566 2740  
                                            l4558 26F6                                              l4486 24FE  
                                            l4494 252E                                              l4478 24C8  
                                            l4910 740C                                              l4902 73E8  
                                            l3598 6D3C                                              l3918 3AF8  
                                            l3678 2FA2                                              l3686 2FE0  
                                            l3694 357C                                              l3774 390C  
                                            l3766 38CA                                              l3758 385E  
                                            l3934 7AEE                                              l3926 7AAE  
                                            l3790 33BA                                              l3782 3350  
                                            l3870 32BC                                              l3846 3152  
                                            l3854 31BC                                              l3838 30E2  
                                            l3862 323C                                              l4398 108C  
                                            l4830 70E6                                              l5294 18E0  
                                            l5286 187A                                              l5278 181A  
                                            l5198 14DC                                              l4816 7E9C  
                                            l4808 7E74                                              l4760 7D18  
                                            l4752 7C92                                              l4736 24A0  
                                            l4728 2440                                              l4680 21FC  
                                            l4672 21C4                                              l4664 2186  
                                            l4656 214C                                              l4648 20FC  
                                            l3952 1AB2                                              l3960 1AE2  
                                            l3944 1A7C                                              l4840 297E  
                                            l4584 2806                                              l4592 2852  
                                            l4576 278A                                              l4568 274C  
                                            l4496 2540                                              l4488 2512  
                                            l4912 7410                                              l4904 73EE  
                                            l4920 7588                                              l3696 359C  
                                            l3776 3922                                              l3768 38CE  
                                            l3936 7B10                                              l3792 33C2  
                                            l3784 3352                                              l3872 32E0  
                                            l3864 325E                                              l3856 31CE  
                                            l4832 710E                                              l5296 18EC  
                                            l5288 1880                                              l4818 7EB0  
                                            l4770 7DAE                                              l4762 7D2C  
                                            l4754 7CC4                                              l4738 24A2  
                                            l4690 226A                                              l4682 2216  
                                            l4674 21D0                                              l4666 219E  
                                            l4658 215A                                              l3970 1B1C  
                                            l3962 1AF4                                              l3954 1AC6  
                                            l3946 1A88                                              l4746 6E4A  
                                            l4850 2A42                                              l4842 29C4  
                                            l4834 28FA                                              l4594 2872  
                                            l4586 2812                                              l4578 279C  
                                            l4498 2548                                              l4906 73F2  
                                            l4914 6C80                                              l4922 759C  
                                            l3890 399A                                              l3882 3958  
                                            l3698 35DC                                              l3778 3926  
                                            l3938 7B26                                              l3794 33CA  
                                            l3786 3372                                              l3874 32E6  
                                            l3866 3280                                              l3858 31D4  
                                            l5386 0146                                              l4826 70D0  
                                            l4930 3E80                                              l5298 18FC  
                                            l4764 7D3E                                              l4756 7CD4  
                                            l4692 2294                                              l4684 2226  
                                            l4676 21E0                                              l4668 21AA  
                                            l3980 1B6A                                              l3972 1B2E  
                                            l3964 1AFC                                              l3956 1AD6  
                                            l3948 1A9A                                              l4748 6E5A  
                                            l4860 2C5C                                              l4852 2B16  
                                            l4844 29E8                                              l4836 291A  
                                            l4596 2888                                              l4588 2824  
                                            l4908 7406                                              l4924 75BE  
                                            l5388 3A32                                              l3892 39D6  
                                            l3884 396C                                              l3796 3440  
                                            l3788 33B2                                              l3876 32F6  
                                            l3868 329E                                              l4828 70D8  
                                            l4940 3EC4                                              l4932 3E8A  
                                            l4790 7E1A                                              l4782 7DBA  
                                            l4766 7D52                                              l4758 7D08  
                                            l4694 22CE                                              l4686 2242  
                                            l4678 21EC                                              l4774 6CFC  
                                            l3990 1BB2                                              l3982 1B6E  
                                            l3974 1B30                                              l3966 1B12  
                                            l3958 1ADA                                              l4862 2CA2  
                                            l4854 2B82                                              l4846 2A0A  
                                            l4838 296A                                              l4598 28A8  
                                            l4870 6B70                                              l4918 74FC  
                                            l3894 39DA                                              l3886 3972  
                                            l3798 3446                                              l3878 330C  
                                            l4950 3F34                                              l4942 3ED0  
                                            TRISD 000F95                                              TRISE 000F96  
                                            l4792 7E1C                                              l4784 7DD4  
                                            l4768 7DA8                                              l4696 22DC  
                                            l4688 224E                                              l4776 6D16  
                                            l3992 1BB6                                              l3976 1B46  
                                            l3984 1B76                                              l3968 1B14  
                                            l4864 2CC6                                              l4856 2BBA  
                                            l4960 6CBC                                              l4880 6B8E  
                                            l4872 6B76                                              l3888 3978  
                                            l4952 3F66                                              l4944 3EE4  
                                            l4936 3E92                                              l4928 3E6A  
                                            l4794 7E2C                                              l4698 22FA  
                                            l4778 6D26                                              l3994 1BBC  
                                            l3986 1B88                                              l3978 1B5A  
                                            l4858 2C26                                              l4970 6CF0  
                                            l4962 6CE8                                              l4874 6B78  
                                            l4890 6BAC                                              l4882 6B98  
                                            l3898 39E2                                              l4954 3F80  
                                            l4946 3F0A                                              l4938 3EB6  
                                            l4980 6AC8                                              l4796 7E30  
                                            l4788 7DEA                                              l3996 1BC0  
                                            l3988 1BA0                                              l4972 6CF2  
                                            l4964 6CEA                                              l4876 6B82  
                                            l4868 6B6E                                              l4892 6BAE  
                                            l4884 6B9A                                              l4948 3F20  
                                            l4956 3F92                                              l4982 6ACC  
                                            l4990 6C0C                                              l4798 7E42  
                                            l3998 1BC4                                              l4974 6CF4  
                                            l4966 6CEC                                              l4878 6B84  
                                            l4894 6BB8                                              l4886 6BA0  
                                            l4992 6C0E                                              l4968 6CEE  
                                            l4896 736E                                              l4888 6BA2  
                                            l4986 6BEA                                              l4898 73D2  
                                            l4978 6B0A                                              l4988 6C0A  
                                            l4996 7430                                              l4998 7438  
                                            STR_1 7F43                                              STR_2 7F03  
                                            STR_3 7FBA                                              STR_4 7F74  
                                            STR_5 7FB1                                              STR_6 7FC3  
                                            STR_7 7F9B                                              STR_8 7FFB  
                                            STR_9 7FCE                                     _state_changed 01AA  
                                            _LATA 000F89                                              _LATB 000F8A  
                                            _LATC 000F8B                                              u4000 36A2  
                                            u4001 369C                                              u4010 36C4  
                                            u4011 36BE                                              u4020 36E2  
                                            u4100 3810                                              u4021 36DC  
                                            u4101 380A                                              u4030 3700  
                                            u4110 3842                                              u4031 36FA  
                                            u4111 383C                                              u3400 6F28  
                                            u4040 3712                                              u4120 3884  
                                            u4200 34E8                                              u5000 02E6  
                                            u3401 6F22                                              u4041 370C  
                                            u4121 387E                                              u4201 34E2  
                                            u5001 02E0                                              u3410 3FDA  
                                            u4050 3724                                              u4130 38B6  
                                            u4210 3506                                              u5010 0328  
                                            u4051 371E                                              u4211 3500  
                                            u5011 0322                                              u3420 3FEC  
                                            u3500 3C3E                                              u4060 373A  
                                            u4140 38F4                                              u4220 3524  
                                            u4300 3150                                              u5100 065A  
                                            u5020 03DC                                              u3421 3FE6  
                                            u3501 3C38                                              u4061 3734  
                                            u4141 38EE                                              u4221 351E  
                                            u4301 314A                                              u5101 0654  
                                            u5021 03D4                                              u3510 3C90  
                                            u4150 3906                                              u4230 3536  
                                            u3430 6DF4                                              u4310 3188  
                                            u5110 0684                                              u5030 03E0  
                                            u3511 3C8A                                              u4151 3900  
                                            u4071 3792                                              u4231 3530  
                                            u3431 6DEC                                              u4311 3180  
                                            u5111 067E                                              u6000 29C2  
                                            u3360 75EA                                              u3520 3CEE  
                                            u4160 3948                                              u4080 37B6  
                                            u3600 7BE6                                              u3440 6DF8  
                                            u4400 32DE                                              u4320 318C  
                                            u4240 3022                                              u5200 0AC6  
                                            u5120 070C                                              u5040 03FA  
                                            u6001 29BC                                              u3361 75E4  
                                            u3417 3FD0                                              u3521 3CE8  
                                            u4161 3942                                              u4137 38AC  
                                            u4081 37B0                                              u3601 7BE0  
                                            u4401 32D8                                              u4241 301C  
                                            u5201 0AC0                                              u5121 0706  
                                            u5041 03F4                                              u6010 2A08  
                                            u4410 3998                                              u3370 7600  
                                            u3450 3B3A                                              u3530 3D26  
                                            u4090 37EE                                              u3610 7C2C  
                                            u4170 334E                                              u4330 31A6  
                                            u4250 3044                                              u5210 0B2E  
                                            u5130 0746                                              u5050 0424  
                                            u6011 2A02                                              u4411 3992  
                                            u3371 75FA                                              u3451 3B34  
                                            u3531 3D20                                              u4091 37E8  
                                            u3611 7C26                                              u4171 3348  
                                            u4331 31A0                                              u4251 303E  
                                            u5131 0740                                              u5051 041E  
                                            u6020 2B14                                              u4420 39D4  
                                            u3380 762E                                              u3460 3B72  
                                            u3540 3D6A                                              u4500 7B0E  
                                            u3620 77BA                                              u4180 3370  
                                            u3700 6DB2                                              u4340 3214  
                                            u4260 3076                                              u5300 0F12  
                                            u5220 0B5C                                              u5140 07D2  
                                            u5060 04AE                                              u6100 3E7E  
                                            u6021 2B0E                                              u4421 39CE  
                                            u3381 7628                                              u3461 3B6C  
                                            u3541 3D64                                              u4501 7B08  
                                            u3621 77B4                                              u4181 336A  
                                            u3701 6DAA                                              u4261 3070  
                                            u5301 0F0C                                              u5221 0B56  
                                            u5141 07CC                                              u5061 04A8  
                                            u6101 3E78                                              u6030 2BB8  
                                            u4430 39F6                                              u3390 7668  
                                            u3550 3D9C                                              u4510 7B24  
                                            u3630 77EC                                              u4190 34C6  
                                            u3710 6DB6                                              u4350 325C  
                                            u4270 30E0                                              u5310 0F9C  
                                            u5230 0BC2                                              u5150 088E  
                                            u5070 04E8                                              u6110 3EB4  
                                            u6031 2BB2                                              u4431 39F0  
                                            u3391 7662                                              u3471 3BA0  
                                            u3551 3D96                                              u4511 7B1E  
                                            u3631 77E6                                              u4191 34C0  
                                            u4351 3256                                              u4271 30DA  
                                            u5311 0F96                                              u5151 0888  
                                            u5071 04E2                                              u6111 3EAE  
                                            u4600 1B9E                                              u6040 2C80  
                                            u3800 6F7C                                              u4440 3AC2  
                                            u3480 3BC6                                              u3560 3DD0  
                                            u4520 7B56                                              u3640 7820  
                                            u3720 6E3A                                              u4360 327E  
                                            u4280 3132                                              u5400 13D2  
                                            u5320 1028                                              u5240 0C00  
                                            u5160 090A                                              u5080 05A6  
                                            u6120 3F1E                                              u6200 78A0  
                                            u4601 1B98                                              u3801 6F76  
                                            u4441 3ABA                                              u3481 3BC0  
                                            u3561 3DCA                                              u4521 7B50  
                                            u3641 781A                                              u3721 6E32  
                                            u4361 3278                                              u4345 3200  
                                            u4281 312A                                              u5401 13CC  
                                            u5321 1022                                              u5241 0BFA  
                                            u5217 0B1E                                              u5161 0904  
                                            u5081 05A0                                              u6121 3F18  
                                            u6201 789A                                              u4610 1BB0  
                                            u4530 1A98                                              u6050 2CA0  
                                            u5410 24E4                                              u4450 3AC6  
                                            u3650 76C8                                              u3810 6FA6  
                                            u3490 3BF8                                              u3570 3E20  
                                            u3730 6E3E                                              u4370 329C  
                                            u4290 3136                                              u5330 1062  
                                            u5250 0C68                                              u5170 0994  
                                            u5090 05E0                                              u6130 3F32  
                                            u6210 78CC                                              u4611 1BAA  
                                            u4531 1A92                                              u6051 2C9A  
                                            u5411 24DE                                              u3651 76C2  
                                            u3811 6FA0                                              u3491 3BF2  
                                            u3571 3E1A                                              u4371 3296  
                                            u5331 105C                                              u5171 098E  
                                            u5091 05DA                                              u6131 3F2C  
                                            u6211 78C6                                              u4700 1D20  
                                            u4620 1C26                                              u4540 1AB0  
                                            u5500 26C0                                              u5420 24FC  
                                            u6060 73E6                                              u4460 3AE0  
                                            u3660 76F0                                              u3900 2F24  
                                            u3820 2D12                                              u3740 7092  
                                            u4380 32BA                                              u5340 114A  
                                            u5260 0C96                                              u5180 0A20  
                                            u6140 3F64                                              u6220 78F8  
                                            u6300 7A6C                                              u4701 1D1A  
                                            u4621 1C20                                              u4541 1AAA  
                                            u6045 2C74                                              u5501 26BA  
                                            u5421 24F6                                              u6061 73E0  
                                            u4461 3ADA                                              u3661 76EA  
                                            u3901 2F1E                                              u3821 2D0A  
                                            u3581 7B8E                                              u3741 708A  
                                            u4381 32B4                                              u5341 1144  
                                            u5261 0C90                                              u5237 0BB2  
                                            u5181 0A1A                                              u6141 3F5E  
                                            u6221 78F2                                              u6301 7A66  
                                            u4710 1D32                                              u4630 1C42  
                                            u4550 1AC4                                              u5510 26F2  
                                            u5430 2510                                              u6070 7404  
                                            u6310 716C                                              u6150 6B20  
                                            u4470 3AF6                                              u3670 7752  
                                            u3910 2F42                                              u3830 2D16  
                                            u3590 7BB4                                              u3750 7096  
                                            u4390 32CC                                              u5350 1184  
                                            u5270 0D48                                              u5190 0A7E  
                                            u6230 7924                                              u4711 1D2C  
                                            u4631 1C3A                                              u4551 1ABE  
                                            u5511 26EC                                              u5431 250A  
                                            u6071 73FE                                              u6311 7166  
                                            u6151 6B1A                                              u4471 3AF0  
                                            u3671 774C                                              u3911 2F3C  
                                            u3591 7BAE                                              u4391 32C6  
                                            u5351 117E                                              u5271 0D42  
                                            u6231 791E                                              u4800 1EB6  
                                            u4720 1D58                                              u4640 1C46  
                                            u4560 1B10                                              u5600 2822  
                                            u5520 271E                                              u5440 255E  
                                            u6160 732E                                              u6080 7586  
                                            u3680 7764                                              u3920 2F60  
                                            u3840 2D30                                              u4480 7AAC  
                                            u3760 70B0                                              u5360 1228  
                                            u5280 0DDA                                              u6240 7950  
                                            u6400 167C                                              u4801 1EB0  
                                            u4721 1D52                                              u4561 1B0A  
                                            u5601 281C                                              u5521 2718  
                                            u5441 2558                                              u6161 7328  
                                            u6081 7580                                              u3681 775E  
                                            u3921 2F5A                                              u3841 2D2A  
                                            u4481 7AA6                                              u3761 70AA  
                                            u5361 1222                                              u5281 0DD4  
                                            u5257 0C58                                              u6241 794A  
                                            u6401 1676                                              u4810 1ECC  
                                            u4730 1D98                                              u4650 1C74  
                                            u4570 1B2C                                              u5610 2870  
                                            u5530 2738                                              u5450 2576  
                                            u6170 726E                                              u6090 75BC  
                                            u3770 6D70                                              u3690 6EB0  
                                            u3930 2F72                                              u3850 2D66  
                                            u4490 7AEC                                              u5370 1252  
                                            u5290 0E96                                              u6250 799C  
                                            u6410 1690                                              u6330 150A  
                                            u4811 1EC6                                              u4731 1D92  
                                            u4651 1C6E                                              u4571 1B26  
                                            u5611 286A                                              u5531 2732  
                                            u5451 2570                                              u6091 75B6  
                                            u3771 6D68                                              u3691 6EAA  
                                            u3931 2F6C                                              u3851 2D60  
                                            u4491 7AE6                                              u5371 124C  
                                            u5291 0E90                                              u6251 7996  
                                            u6411 168A                                              u6331 1504  
                                            u5700 2122                                              u4900 1FE2  
                                            u4820 1EE6                                              u4740 1DE2  
                                            u4660 1C9A                                              u4580 1B44  
                                            u5620 28A6                                              u5540 275C  
                                            u5460 258A                                              u6180 72A4  
                                            u3780 6D74                                              u3940 2F88  
                                            u3860 2D88                                              u5380 12F4  
                                            u6260 79C4                                              u6500 17C8  
                                            u6420 16C4                                              u6340 151E  
                                            u5701 211C                                              u4901 1FDC  
                                            u4821 1EE0                                              u4741 1DDC  
                                            u4661 1C94                                              u4581 1B3E  
                                            u5621 28A0                                              u5541 2756  
                                            u5461 2584                                              u3941 2F82  
                                            u3861 2D82                                              u5381 12EE  
                                            u5197 0A72                                              u6261 79BE  
                                            u6421 16BE                                              u6341 1518  
                                            u5710 2136                                              u4910 2006  
                                            u4830 1F04                                              u4750 1E20  
                                            u4670 1CC2                                              u4590 1B58  
                                            u5630 28DA                                              u5550 2784  
                                            u5470 25D4                                              u6190 72B6  
                                            u3790 6F4A                                              u3950 2F9A  
                                            u3870 2DBE                                              u5390 132E  
                                            u6270 79EE                                              u6510 17E4  
                                            u6430 16E8                                              u6350 153C  
                                            u5711 2130                                              u4911 2000  
                                            u4831 1EFE                                              u4751 1E1A  
                                            u4671 1CBC                                              u4591 1B52  
                                            u5631 28D4                                              u5551 277E  
                                            u5471 25CE                                              u6191 72B0  
                                            u3791 6F44                                              u3951 2F94  
                                            u3871 2DB8                                              u5391 1328  
                                            u6271 79E8                                              u6511 17DC  
                                            u6431 16E2                                              u6351 1536  
                                            u5800 242A                                              u5720 22B6  
                                            u5640 2040                                              u4840 1F1E  
                                            u4760 1E34                                              u4680 1CD4  
                                            u5560 279A                                              u5480 261C  
                                            u3960 2FB6                                              u3880 2DD0  
                                            u4920 00A4                                              u6280 7A18  
                                            u6600 198A                                              u6520 17E8  
                                            u6440 1710                                              u6360 15D6  
                                            u5801 2424                                              u5641 203A  
                                            u4841 1F18                                              u4761 1E2E  
                                            u4681 1CCE                                              u5561 2794  
                                            u5481 2616                                              u6177 7264  
                                            u3961 2FB0                                              u3881 2DCA  
                                            u4921 009E                                              u6281 7A12  
                                            u6601 1984                                              u6441 170A  
                                            u6361 15D0                                              u5810 245E  
                                            u5730 2316                                              u5650 2058  
                                            u4850 1F3C                                              u4770 1E66  
                                            u4690 1CE8                                              u5570 27CC  
                                            u5490 269A                                              u3890 2F02  
                                            u3970 3578                                              u4930 018C  
                                            u6290 7A42                                              u6610 19A0  
                                            u6530 1806                                              u6450 173A  
                                            u6370 15F6                                              u5811 2458  
                                            u5731 2310                                              u5651 2052  
                                            u4851 1F36                                              u4771 1E60  
                                            u4691 1CE2                                              u5571 27C6  
                                            u5491 2694                                              u6187 729A  
                                            u3891 2EFC                                              u3971 3572  
                                            u4931 0186                                              u6291 7A3C  
                                            u6611 199A                                              u6531 1800  
                                            u6451 1734                                              u6371 15F0  
                                            u5900 7E0E                                              u5820 249E  
                                            u5740 233E                                              u5660 206C  
                                            u4860 1F7A                                              u4780 1E7C  
                                            u5580 27EA                                              u3980 359A  
                                            u4940 019E                                              u6620 19CA  
                                            u6540 1832                                              u6460 175E  
                                            u6380 160A                                              u5821 2498  
                                            u5741 2338                                              u5725 22AA  
                                            u5661 2066                                              u4861 1F74  
                                            u4781 1E76                                              u5581 27E4  
                                            u3981 3594                                              u4941 0198  
                                            u6621 19C4                                              u6541 182C  
                                            u6461 1758                                              u6381 1604  
                                            u5910 7E40                                              u5830 7CC2  
                                            u5750 2354                                              u5670 20B6  
                                            u4870 1F92                                              u4790 1EA0  
                                            u5590 2804                                              u3990 365C  
                                            u4950 01CC                                              u6630 1A00  
                                            u6550 186C                                              u6470 1774  
                                            u6390 1642                                              u5911 7E3A  
                                            u5831 7CBC                                              u5751 234E  
                                            u5671 20B0                                              u4871 1F8C  
                                            u4791 1E9A                                              u5591 27FE  
                                            u4951 01C6                                              u6631 19FA  
                                            u6551 1866                                              u6471 176E  
                                            u6391 163C                                              u5920 7E58  
                                            u5840 7D06                                              u5760 2386  
                                            u5680 20CE                                              u4880 1FA6  
                                            u4960 0216                                              u6640 1A28  
                                            u6560 18A2                                              u6480 179E  
                                            u5921 7E52                                              u5905 7E02  
                                            u5841 7D00                                              u5761 2380  
                                            u5681 20C8                                              u4881 1FA0  
                                            u4961 0210                                              u6641 1A22  
                                            u6561 189C                                              u6481 1798  
                                            u5930 7E88                                              u5850 7D2A  
                                            u5770 23A4                                              u5690 20E2  
                                            u4890 1FCA                                              u4970 029E  
                                            u6650 1A3C                                              u6570 1914  
                                            u6490 17C4                                              u5931 7E82  
                                            u5851 7D24                                              u5771 239E  
                                            u5691 20DC                                              u4891 1FC4  
                                            u3995 3648                                              u4971 0296  
                                            u6651 1A36                                              u6571 190E  
                                            u6491 17BC                                              u5940 7EB0  
                                            u5860 7D50                                              u5780 23BE  
                                            u4980 02A2                                              u6660 1A70  
                                            u6580 193C                                              u5941 7EAA  
                                            u5861 7D4A                                              u5781 23B8  
                                            u6661 1A6A                                              u6581 1936  
                                            u6717 16F0                                              u5950 7EC4  
                                            u5870 7DA6                                              u5790 23DC  
                                            u4990 02BC                                              u6590 1966  
                                            u5951 7EBE                                              u5871 7DA0  
                                            u5791 23D6                                              u6807 6B86  
                                            u4991 02B6                                              u6591 1960  
                                            u6727 183A                                              u5880 6D14  
                                            u5960 7130                                              u5881 6D0E  
                                            u5961 712A                                              u6737 191C  
                                            u5890 7DD2                                              u5970 293C  
                                            u5891 7DCC                                              u6747 6BA4  
                                            u5980 2968                                              u5981 2962  
                                            u6757 6BB0                                              u5990 29A2  
                                            u5975 2930                                              u6767 71CE  
                                            u6777 71E8                                              u5995 2996  
                                            u6787 7200                                              u6797 6B7A  
                                            _TMR2 000FCC                                              abs@a 0013  
                                            _dbuf 0092                                              _atoi 3956  
                                            _ctoa 6F8E                                              _main 1458  
                                            _dtoa 2CDE                                              _fosc 7EFF  
                                            _prec 0088                                              _otoa 3564  
                                            _nout 0084                                              pad@i 0018  
                                            pad@p 0015                                              fsr1h 000FE2  
                                            fsr2h 000FDA                                              indf1 000FE7  
                                            indf2 000FDF                                              fsr1l 000FE1  
                                            pad@w 001A                                              fsr2l 000FD9  
                                            _tosc 00D3                                              _stoa 3786  
                                            btemp 007F                                              _utoa 333A  
                                            _xtoa 300E                       update_pwm_duty_ccp1@time_up 006F  
                                     main@rx_char 01A0                                              prodh 000FF4  
                                            prodl 000FF3                                              start 0076  
                                 ___fldiv@new_exp 002B  state_translator_fpga_to_micro@state_machine_code 0005  
                                    ___param_bank 000000                                             ??_abs 0015  
                            _update_pwm_duty_ccp1 736C                                             ??_pad 0017  
                                   ___fltol@sign1 006D                                   __end_of___aodiv 3CD8  
                                           ?_atoi 0008                                             ?_ctoa 001C  
                                 __end_of___fladd 2022                                             ?_main 0001  
                                           ?_dtoa 001C                                   __end_of___aomod 3E68  
                                 __end_of___fldiv 28F8                                   __end_of___flneg 6D3C  
                                           STR_11 7FCE                                             STR_20 7FCF  
                                           STR_13 7FD2                                             STR_15 7FD2  
                                           STR_31 7FEC                                             STR_24 7FD3  
                                           STR_33 7FEC                                             STR_43 7FDB  
                                           STR_27 7FE9                                             STR_51 7FD6  
                                           STR_36 7FDA                                             STR_29 7FE9  
                                           STR_53 7FD6                                             STR_61 7FEF  
                                           STR_38 7FDA                                             STR_46 7FF2  
                                           STR_63 7FEF                                             STR_48 7FF2  
                                           STR_73 7FDF                                             STR_81 7FE2  
                                           STR_58 7FD7                                             STR_66 7FDE  
                                           STR_83 7FE2                                             STR_68 7FDE  
                                           STR_92 7FE3                                             STR_76 7FF5  
                                           STR_85 7FCA                                             STR_78 7FF5  
                                           STR_87 7FCA                                             STR_96 7FCB  
                                 __end_of___flmul 24C6                                             ?_otoa 001C  
                                           STR_99 7FF8                                   __end_of___flsub 6E92  
                                 __end_of___fltol 7EEE                                             ?_stoa 000A  
                                           ?_utoa 001C                                             _T0CON 000FD5  
                                 __end_of___lodiv 7C90                                             ?_xtoa 001C  
                                           _T2CON 000FCA                                   __end_of___lomod 7882  
                                           i2l168 006E                       __end_of_update_current_coil 75D4  
                                           _RCREG 000FAE                                      vfpfcnvrt@fmt 0045  
                                           _TMR0H 000FD7                                      vfpfcnvrt@llu 0060  
                                           _TMR0L 000FD6                                             _SPBRG 000FAF  
                                           _PORTA 000F80                                             _PORTB 000F81  
                                           _PORTC 000F82                                             _PORTD 000F83  
                                           _TRISA 000F92                                             _TRISB 000F93  
                                           _TXREG 000FAD                                   __end_of_lcd_dat 6BBE  
                                 __end_of_lcd_cmd 6B94                                   __end_of_lcd_str 72BC  
                                           _f_osc 7EFB                                             _flags 007D  
                                           _errno 008A                                             _fputc 75D4  
                                 __end_of_isalpha 6E48                                             _fputs 6EDE  
                                 __end_of_isdigit 6D7E                                             _t_osc 7EF7  
                                           atoi@n 0015                                             pad@fp 0011  
                                           atoi@s 0008                                             _width 0086  
                                           ctoa@c 001E                                             _state 01C7  
                                           _putch 6AA8                                             _toint 7EEF  
                                           ctoa@w 001F                                             dtoa@d 001E  
                                           dtoa@i 003E                                             dtoa@n 0036  
                                           dtoa@p 0030                                             dtoa@s 0034  
                                           dtoa@w 0032                                   __end_of_islower 6E02  
                                 __end_of_isspace 6F8E                                   __end_of_isupper 6DC0  
                                           tablat 000FF5                                             otoa@d 001E  
                                           otoa@i 003C                                             otoa@n 0034  
                                           otoa@p 002E                                             otoa@t 0030  
                                           otoa@w 0032                                             plusw1 000FE3  
                                           plusw2 000FDB                                             stoa@i 0016  
                                           stoa@l 001E                                             stoa@p 001C  
                                           stoa@s 000C                                             stoa@w 0018  
                                           ttemp5 0080                                             ttemp6 0083  
                                           ttemp7 0087                                             utoa@d 001E  
                                           utoa@i 003A                                             utoa@n 0032  
                                           utoa@p 002E                                             utoa@w 0030  
                                           status 000FD8                                             wtemp8 0080  
                                           xtoa@c 0041                                             xtoa@d 001E  
                                           xtoa@i 003F                                             xtoa@n 0037  
                                           xtoa@p 0033                                             xtoa@w 0035  
                                           xtoa@x 0026                                   __end_of_strncmp 7B86  
                                 __end_of_toupper 70CE                                  ___lodiv@dividend 0001  
                              _end_effector_homed 01A1                                   ??_get_reg_value 0001  
                                    _toupper$1766 000D                              get_reg_value@rx_char 0001  
                                 __initialization 6FF4                                      __end_of_atoi 3B24  
                                    __end_of_ctoa 6FF4                                      __end_of_main 1A7A  
                                    __end_of_dtoa 300E                                      __end_of_fosc 7F03  
                                    __end_of_otoa 3786                                      __end_of_stoa 3956  
                                    __end_of_utoa 3564                             ?_update_pwm_duty_ccp1 006F  
                                    __end_of_xtoa 333A                                            ??_atoi 000A  
                                          ??_ctoa 001F                                            ??_main 007C  
                                          ??_dtoa 0026                                            ??_otoa 0026  
                                          ??_stoa 000E                                            ??_utoa 0026  
                                          ??_xtoa 0027                                     __activetblptr 000002  
                                 ??_rx_char_usart 0001                                  ___lodiv@quotient 0011  
                                _change_direction 6C48                                            ?_fputc 0001  
                                          STR_101 7FF8                                            ?_fputs 000A  
                                          STR_103 7FE6                                            STR_105 7FE6  
                    __end_of_turn_on_current_coil 6CBA                                            _CCPR1L 000FBE  
                                          ?_putch 0001                                            i2l5330 000C  
                                          i2l5340 0050                                            i2l5332 001E  
                                          i2l5342 0062                                            i2l5334 0030  
                                          i2l5344 0066                                            i2l5336 0032  
                                          i2l5338 003C                                     main@greet_str 0100  
                                   vfpfcnvrt@done 004F                                     ?_init_timer_0 0001  
                                   ?_init_timer_2 0001            __end_of_state_translator_fpga_to_micro 797E  
         __size_of_state_translator_fpga_to_micro 00FC                    _state_translator_fpga_to_micro 7882  
                                   ?_init_stepper 0001                                      vfprintf@cfmt 006E  
                                __end_of_lcd_init 7234                                            ___flge 7C90  
                               _init_timer_2$2006 006F                                         ??___aodiv 0011  
                                       ??___fladd 003B                                         ??___aomod 0011  
                                          ___wmul 6BBE                                         ??___fldiv 0022  
                                       ??___flneg 0005                                         ??___flmul 0009  
                                       ??___flsub 004B                                         ??___fltol 0069  
                                       ??___lodiv 0011                                         ??___lomod 0011  
                                          _lcd_wr 6ABA                                            clear_0 703A  
                                          clear_1 7046                                            pad@buf 0013  
                                          ctoa@fp 001C                                            _roundf 28F8  
                                       ??_lcd_dat 0002                                         ??_lcd_cmd 0002  
                                          dtoa@fp 001C                                            _strlen 3FA2  
                                       ??_lcd_str 0005                                            fputc@c 0001  
                                          fputs@c 000E                                            fputs@i 000F  
                                          fputs@s 000A                                         ??_isalpha 0003  
                                       ??_isdigit 0003                                         ??_islower 0003  
                                    __mediumconst 7EEE                                         ??_isspace 0003  
                                          otoa@fp 001C                                            tblptrh 000FF7  
                                       ??_isupper 0003                                            tblptrl 000FF6  
                                          tblptru 000FF8                           reach_goal@goal_to_reach 0009  
                                          stoa@cp 001A                                            stoa@fp 000A  
                                          putch@c 0001                                  __end_of_vfprintf 713E  
                                          utoa@fp 001C                                  __end_of_snprintf 6C48  
                                          xtoa@fp 001C                                         ??_strncmp 0007  
                                       ??_toupper 0009                                        ___flge@ff1 0001  
                                      ___flge@ff2 0005                  update_current_coil@stepper_motor 0001  
                                      __accesstop 0080                           __end_of__initialization 7050  
                                      ___flneg@f1 0001                                 serial_tx_char@val 0001  
                                  ??_init_timer_0 0001                                    ??_init_timer_2 006F  
                                   ___rparam_used 000001                                        ___fltol@f1 0065  
                                  ??_init_stepper 000B                                    _tmr2_prescaler 00D7  
                                 _init_interrupts 6AAE                            ??_update_pwm_duty_ccp1 0073  
                                  __pcstackCOMRAM 0001                                      __pidataBANK0 6AD7  
                                    __pidataBANK1 6AEA                                     __end_of_f_osc 7EFF  
                                   __end_of_fputc 76B6                                     __end_of_fputs 6F2E  
                                   __end_of_t_osc 7EFB                                     __end_of_putch 6AAE  
                                   __end_of_toint 7EF3                           __size_of_serial_tx_char 0020  
             state_translator_fpga_to_micro@state 0003                                           ??_fputc 0005  
                                         ??_fputs 000E                                           ??_putch 0001  
                                _mix_current_step 0090                                        __pbssBANK0 0080  
                                      __pbssBANK1 01A1                                __size_of_init_ccp1 0022  
                                         ?___flge 0001                                           ?___wmul 0001  
                                         ?_lcd_wr 0001                                           _CCP1CON 000FBD  
                            _turn_on_current_coil 6C7E                           _hex_end_effector_values 01D5  
                                   _read_new_char 01A8                                           ?_roundf 004B  
                                         ?_strlen 0001                           reach_goal@stepper_motor 0007  
                              __size_of_vfpfcnvrt 13DE                 turn_on_current_coil@stepper_motor 0001  
                                _desired_baudrate 7EF3                                         ?_lcd_init 0001  
                                ___lomod@dividend 0001                           __end_of_init_interrupts 6ABA  
                   change_direction@stepper_motor 0001                                           __Hparam 0000  
                                         __Lparam 0000                                __size_of_vsnprintf 013A  
                                      _init_PORTS 6BE8                                        _init_USART 6CBA  
                                 __size_of___flge 0128                                           ___aodiv 3B24  
                                         ___fladd 1A7A                                           ___aomod 3CD8  
                                         ___fldiv 24C6                                           ___flneg 6CFA  
                                         ___flmul 2022                          __end_of_change_direction 6C7E  
                                         ___flsub 6E48                                           ___fltol 7DB8  
                                 __size_of___wmul 002A                                           ___lodiv 7B86  
                           ?_turn_on_current_coil 0001                                           ___lomod 7798  
                                       ?_vfprintf 0068                                         ?_snprintf 00BC  
                                 __size_of_lcd_wr 000C                                           __pcinit 6FF4  
            init_stepper@hex_coil_register_values 0009                                           __ramtop 0600  
                                      _reach_goal 713E                                           __ptext0 1458  
                                         __ptext1 797E                                           __ptext2 7882  
                                         __ptext3 6C14                                           __ptext4 3E68  
                                         __ptext5 70CE                                           __ptext6 007A  
                                         __ptext7 300E                                           __ptext8 705E  
                                         __ptext9 6DC0                                           _lcd_dat 6B94  
                                         _lcd_cmd 6B6A                                           _lcd_str 7234  
                                       _T0CONbits 000FD5                                   __size_of_roundf 03E6  
                                 __size_of_strlen 005C                                 __end_of_init_ccp1 6B48  
                                       _T2CONbits 000FCA                                      __size_of_abs 004C  
                                    __size_of_pad 00E2                                           _isalpha 6E02  
                                         _isdigit 6D3C                              __end_of_init_timer_0 6B6A  
                            __end_of_init_timer_2 74FA                                           _islower 6DC0  
                                         _isspace 6F2E                                           _isupper 6D7E  
                            __end_of_init_stepper 736C                                           atoi@neg 000E  
                                   _joint_stepper 01B9                                        ??_lcd_init 0003  
                                         _strncmp 7A7E                                           _toupper 705E  
                    __size_of_update_current_coil 00DA                              end_of_initialization 7050  
                                         fputc@fp 0003                                     __Lmediumconst 7EEE  
                                         fputs@fp 000C               state_translator_micro_to_fpga@state 0001  
                               __end_of_vfpfcnvrt 1458                             __end_of_get_reg_value 6AD6  
                                       _RCSTAbits 000FAB                                           postdec1 000FE5  
                                         postdec2 000FDD                                           postinc0 000FEE  
                                         postinc1 000FE6                                           postinc2 000FDE  
                                         roundf@e 0057                                           roundf@u 005D  
                                         roundf@x 004B                                           roundf@y 0061  
                                      ??_vfprintf 006E                                        ??_snprintf 007C  
                                         strlen@a 0003                                           strlen@s 0001  
                                      _timer_done 01A7                                         _PORTEbits 000F84  
                ??_state_translator_fpga_to_micro 0005                   ?_state_translator_fpga_to_micro 0003  
                                     ___fladd@grs 0042                                    _serial_tx_char 6B06  
                           __end_of_rx_char_usart 0076                                         _TRISCbits 000F94  
                                      lcd_dat@val 0002                                 __end_of_vsnprintf 3FA2  
                                      lcd_cmd@val 0002                                       ___fldiv@grs 002D  
                                     ___fldiv@rem 0026                                        _pwm_period 00CF  
                                      _state_msgs 01C9                                     _mix_direction 008E  
                            _end_effector_stepper 01AB                                       ___flmul@grs 000E  
                                ?_init_interrupts 0001                                       _CCP1CONbits 000FBD  
                                       _TXSTAbits 000FAC                                        lcd_str@str 0003  
                                     ?_init_PORTS 0001                                       ?_init_USART 0001  
                          ??_turn_on_current_coil 0003                                    __end_of___flge 7DB8  
          __end_of_state_translator_micro_to_fpga 7A7E           __size_of_state_translator_micro_to_fpga 0100  
                  _state_translator_micro_to_fpga 797E                                       vfpfcnvrt@ap 0047  
                                     vfpfcnvrt@cp 004D                                       vfpfcnvrt@fp 0043  
                                     vfpfcnvrt@ll 0055                                    __end_of___wmul 6BE8  
                                     vfpfcnvrt@vp 005D                                    __end_of_lcd_wr 6AC6  
                                     ?_reach_goal 0007  state_translator_micro_to_fpga@state_machine_code 0005  
                          __end_of_serial_tx_char 6B26                                    __end_of_roundf 2CDE  
                                  __end_of_strlen 3FFE                               start_initialization 6FF4  
                                 ___lodiv@divisor 0009                                   ___lodiv@counter 0019  
                                     __end_of_abs 6EDE                                       __end_of_pad 7798  
                                _hex_joint_values 01DD                          init_stepper@current_coil 0003  
                       init_stepper@stepper_motor 0001                                       vfprintf@fmt 006A  
                                        ??___flge 0009                          __end_of_desired_baudrate 7EF7  
                                        ??___wmul 0005                     __size_of_update_pwm_duty_ccp1 00C2  
                                        ??_lcd_wr 0001                                       __pdataBANK0 00C8  
                                     __pdataBANK1 01C9                             __size_of_init_timer_0 0022  
                           __size_of_init_timer_2 00CC                             __size_of_init_stepper 00B0  
                                        ??_roundf 004F                                          ??_strlen 0003  
                                 ?_serial_tx_char 0001                                         ___fladd@a 0037  
                                       ___fladd@b 0033                                      vsnprintf@cnt 00B4  
                                    vsnprintf@fmt 0074                                         ___fldiv@a 001E  
                                       ___fldiv@b 001A                                         ___flmul@a 0005  
                                       ___flmul@b 0001                                       __pbssCOMRAM 007D  
                                       ___flsub@a 0047                                         ___flsub@b 0043  
                                   __pcstackBANK0 00B2                                     __pcstackBANK1 0100  
                                ___aodiv@dividend 0001                                       snprintf@fmt 00C0  
                             __size_of_init_PORTS 002C                               __size_of_init_USART 0040  
                               __size_of_lcd_init 007E                               __size_of_reach_goal 0078  
                                       _atoi$1680 0012                                         _atoi$1678 0010  
                                       _atoi$1679 0014                                      _init_timer_0 6B48  
                                    _init_timer_2 742E                                         _dtoa$1502 002E  
                                    _init_stepper 72BC                             init_stepper@direction 0007  
                                       __pintcode 0008                                     __pmediumconst 7EEE  
                                        ?___aodiv 0001                                          ?___fladd 0033  
                                        ?___aomod 0001                                          ?___fldiv 001A  
                                ___aodiv@quotient 0013                                          ?___flneg 0001  
                                        ?___flmul 0001                                          ?___flsub 0043  
                                        ?___fltol 0065                                          ?___lodiv 0001  
                                        ?___lomod 0001                               _update_current_coil 74FA  
                               ?_change_direction 0001                                ??_change_direction 0003  
                                        ?_lcd_dat 0001                                          ?_lcd_cmd 0001  
                               __size_of_vfprintf 0070                                          ?_lcd_str 0003  
                               __size_of_snprintf 0034                                   ___lomod@divisor 0009  
                    update_pwm_duty_ccp1@new_duty 0075                                   ___lomod@counter 0011  
                                        ?_isalpha 0001                                          ?_isdigit 0001  
                                _mix_step_counter 008C                                          ?_islower 0001  
                                        ?_isspace 0001                                          ?_isupper 0001  
                                       _init_ccp1 6B26                                    __size_of_fputc 00E2  
                                  __size_of_fputs 0050                              ?_update_current_coil 0001  
                                        ?_strncmp 0001                                          ?_toupper 0007  
                                  __size_of_putch 0006                                    ___wmul@product 0005  
                                        _LATAbits 000F89                                          _PIE1bits 000F9D  
                                        _PIR1bits 000F9E                                          i2u670_40 0060  
                                        i2u670_41 005A                                          i2u667_40 001C  
                                        i2u667_41 0016                                          i2u668_40 002E  
                                        i2u668_41 0028                                          i2u669_40 004E  
                                        i2u669_41 0048                                         _vfpfcnvrt 007A  
                                       _xtoa$1538 002F                                         _xtoa$1539 0031  
                               ___wmul@multiplier 0001                                         lcd_wr@val 0001  
                                    _isspace$1706 0007                                        ?_init_ccp1 0001  
                           ??_update_current_coil 0003                                        vfpfcnvrt@c 005F  
                                       copy_data0 7008                                         copy_data1 7028  
                                       _vsnprintf 3E68                                        roundf@F525 0080  
                                        __Hrparam 0000                                      ??_init_PORTS 0001  
                                    ??_init_USART 006F                                        vfprintf@ap 006C  
                                        __Lrparam 0000                                        vfprintf@fp 0068  
                                __size_of___aodiv 01B4                                  __size_of___fladd 05A8  
                                __size_of___aomod 0190                                  __size_of___fldiv 0432  
                                __size_of___flneg 0042                                       vsnprintf@ap 0076  
                                __size_of___flmul 04A4                                  __size_of___flsub 004A  
                                __size_of___fltol 0136                                  __size_of___lodiv 010A  
                                __size_of___lomod 00EA                                        ?_vfpfcnvrt 0043  
                                    ??_reach_goal 000B                                        snprintf@ap 00C6  
                                 ___aodiv@divisor 0009                                   ___aodiv@counter 0011  
                                __size_of_lcd_dat 002A                                  __size_of_lcd_cmd 002A  
                                __size_of_lcd_str 0088                                  __size_of_isalpha 0046  
                                __size_of_isdigit 0042                                  __size_of_islower 0042  
                                __size_of_isspace 0060                                          __ptext10 6D7E  
                                        __ptext11 6E02                                          __ptext20 3CD8  
                                        __ptext12 333A                                          __ptext21 3B24  
                                        __ptext13 7798                                          __ptext30 6D3C  
                                        __ptext22 6F8E                                          __ptext14 7B86  
                                        __ptext31 6BBE                                          __ptext23 76B6  
                                        __ptext15 7A7E                                          __ptext40 6ABA  
                                        __ptext32 6B06                                          __ptext24 3FA2  
                                        __ptext16 3786                                          __ptext41 742E  
                                        __ptext33 713E                                          __ptext25 6EDE  
                                        __ptext17 3564                                          __ptext50 6E48  
                                        __ptext42 6B48                                          __ptext34 74FA  
                                        __ptext26 75D4                                          __ptext18 2CDE  
                                        __ptext51 1A7A                                          __ptext43 72BC  
                                        __ptext35 6C7E                                          __ptext27 6AA8  
                                        __ptext19 6E92                                          __ptext52 6CFA  
                                        __ptext44 6AAE                                          __ptext36 7234  
                                        __ptext28 3956                                          __ptext53 2022  
                                        __ptext45 6B26                                          __ptext37 6B94  
                                        __ptext29 6F2E                                          __ptext54 7C90  
                                        __ptext46 736C                                          __ptext38 71B6  
                                        __ptext55 7DB8                                          __ptext47 24C6  
                                        __ptext39 6B6A                                          __ptext56 6BE8  
                                        __ptext48 6CBA                                          __ptext57 6AC6  
                                        __ptext49 28F8                                          __ptext58 6C48  
                                __size_of_isupper 0042                  ??_state_translator_micro_to_fpga 0003  
                 ?_state_translator_micro_to_fpga 0001                            __size_of_get_reg_value 0010  
                              __end_of_init_PORTS 6C14                                          _lcd_init 71B6  
                              __end_of_init_USART 6CFA                                  __size_of_strncmp 0108  
                                __size_of_toupper 0070                                        ?_vsnprintf 0070  
                                   __size_of_atoi 01CE                                     __size_of_ctoa 0066  
                                   __size_of_main 0622                                     __size_of_dtoa 0330  
                                   __size_of_otoa 0222                                     __size_of_stoa 01D0  
                                   __size_of_utoa 022A                                       _joint_homed 01A3  
                                   __size_of_xtoa 032C                                __end_of_reach_goal 71B6  
                                        _msg_sent 01A9                                         stoa@F1152 00C8  
                          __size_of_rx_char_usart 006E                          __size_of_init_interrupts 000C  
                                        int$flags 007F                                  ??_serial_tx_char 0001  
                                        _vfprintf 70CE                     __size_of_turn_on_current_coil 003C  
                                        _snprintf 6C14                                          lcd_str@i 0007  
                                     _mix_counter 01A5                                  ___aomod@dividend 0001  
                                  _vfpfcnvrt$1553 0051                                    _vfpfcnvrt$1554 0053  
                                      _INTCONbits 000FF2                                          isalpha@c 0001  
                                        isdigit@c 0001                                       ??_init_ccp1 0078  
                    __end_of_update_pwm_duty_ccp1 742E                                        vsnprintf@f 00B6  
                                      vsnprintf@n 0072                                        vsnprintf@s 0070  
                                       snprintf@n 00BE                                         snprintf@s 00BC  
                                        intlevel2 3FFE                                          islower@c 0001  
                                        isspace@c 0001                                          isupper@c 0001  
                                       strncmp@_l 0001                                         strncmp@_r 0003  
                                   _get_reg_value 6AC6                                     init_stepper@i 000F  
                                 ___aomod@divisor 0009                                       ??_vfpfcnvrt 0049  
                                        stoa@nuls 000F                                   ___aomod@counter 0011  
                                  _vsnprintf$1416 00B2                                          strncmp@l 0008  
                                        strncmp@n 0005                                          strncmp@r 000A  
                                        toupper@c 0007                          init_stepper@step_counter 0005  
                                   _rx_char_usart 0008                         __size_of_change_direction 0036  
                                   ___fladd@signs 003F                     update_pwm_duty_ccp1@lsbs_duty 0077  
                                    ___aodiv@sign 0012                                       ??_vsnprintf 0078  
                                    ___fladd@aexp 0040                                      ___fladd@bexp 0041  
                                    ___aomod@sign 0012                                       _roundf$2007 0059  
                                     _roundf$2008 0053  
