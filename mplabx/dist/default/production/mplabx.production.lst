

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon May 29 19:23:49 2023

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    67                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    68                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    70  0000                     
    71                           ; Version 2.20
    72                           ; Generated 12/02/2020 GMT
    73                           ; 
    74                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F452 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105  0000                     
   106                           	psect	idataBANK0
   107  0078D9                     __pidataBANK0:
   108                           	callstack 0
   109                           
   110                           ;initializer for stoa@F1152
   111  0078D9  28                 	db	40
   112  0078DA  6E                 	db	110
   113  0078DB  75                 	db	117
   114  0078DC  6C                 	db	108
   115  0078DD  6C                 	db	108
   116  0078DE  29                 	db	41
   117  0078DF  00                 	db	0
   118                           
   119                           ;initializer for _tosc
   120  0078E0  37BD               	dw	14269
   121  0078E2  3486               	dw	13446
   122                           
   123                           	psect	smallconst
   124  000600                     __psmallconst:
   125                           	callstack 0
   126  000600  00                 	db	0
   127  000601  0000               	dw	0
   128  000603  4B00               	dw	19200
   129  000605                     __end_of_toint:
   130                           	callstack 0
   131  000605  0000               	dw	0
   132  000607  4616               	dw	17942
   133  000609                     __end_of_desired_baudrate:
   134                           	callstack 0
   135  000609  2400               	dw	9216
   136  00060B  4A74               	dw	19060
   137  00060D                     __end_of_fosc:
   138                           	callstack 0
   139  0000                     _TMR0H	set	4055
   140  0000                     _TMR0L	set	4054
   141  0000                     _PORTEbits	set	3972
   142  0000                     _PORTD	set	3971
   143  0000                     _TRISCbits	set	3988
   144  0000                     _PORTC	set	3970
   145  0000                     _LATC	set	3979
   146  0000                     _TRISB	set	3987
   147  0000                     _PORTB	set	3969
   148  0000                     _LATB	set	3978
   149  0000                     _T0CON	set	4053
   150  0000                     _PIR1bits	set	3998
   151  0000                     _PIE1bits	set	3997
   152  0000                     _T0CONbits	set	4053
   153  0000                     _LATBbits	set	3978
   154  0000                     _INTCONbits	set	4082
   155  0000                     _RCREG	set	4014
   156  0000                     _TXREG	set	4013
   157  0000                     _RCSTAbits	set	4011
   158  0000                     _TXSTAbits	set	4012
   159  0000                     _SPBRG	set	4015
   160  00060D                     STR_1:
   161  00060D  54                 	db	84	;'T'
   162  00060E  68                 	db	104	;'h'
   163  00060F  65                 	db	101	;'e'
   164  000610  20                 	db	32
   165  000611  63                 	db	99	;'c'
   166  000612  75                 	db	117	;'u'
   167  000613  72                 	db	114	;'r'
   168  000614  72                 	db	114	;'r'
   169  000615  65                 	db	101	;'e'
   170  000616  6E                 	db	110	;'n'
   171  000617  74                 	db	116	;'t'
   172  000618  20                 	db	32
   173  000619  73                 	db	115	;'s'
   174  00061A  74                 	db	116	;'t'
   175  00061B  61                 	db	97	;'a'
   176  00061C  74                 	db	116	;'t'
   177  00061D  65                 	db	101	;'e'
   178  00061E  20                 	db	32
   179  00061F  69                 	db	105	;'i'
   180  000620  73                 	db	115	;'s'
   181  000621  20                 	db	32
   182  000622  25                 	db	37
   183  000623  73                 	db	115	;'s'
   184  000624  00                 	db	0
   185  000625                     STR_4:
   186  000625  6D                 	db	109	;'m'
   187  000626  69                 	db	105	;'i'
   188  000627  78                 	db	120	;'x'
   189  000628  69                 	db	105	;'i'
   190  000629  6E                 	db	110	;'n'
   191  00062A  67                 	db	103	;'g'
   192  00062B  5F                 	db	95	;'_'
   193  00062C  70                 	db	112	;'p'
   194  00062D  6F                 	db	111	;'o'
   195  00062E  73                 	db	115	;'s'
   196  00062F  00                 	db	0
   197  000630                     STR_2:
   198  000630  69                 	db	105	;'i'
   199  000631  6E                 	db	110	;'n'
   200  000632  69                 	db	105	;'i'
   201  000633  74                 	db	116	;'t'
   202  000634  5F                 	db	95	;'_'
   203  000635  70                 	db	112	;'p'
   204  000636  6F                 	db	111	;'o'
   205  000637  73                 	db	115	;'s'
   206  000638  00                 	db	0
   207  000639                     STR_6:
   208  000639  6D                 	db	109	;'m'
   209  00063A  6F                 	db	111	;'o'
   210  00063B  76                 	db	118	;'v'
   211  00063C  65                 	db	101	;'e'
   212  00063D  6D                 	db	109	;'m'
   213  00063E  65                 	db	101	;'e'
   214  00063F  6E                 	db	110	;'n'
   215  000640  74                 	db	116	;'t'
   216  000641  00                 	db	0
   217  000642                     STR_7:
   218  000642  4E                 	db	78	;'N'
   219  000643  4F                 	db	79	;'O'
   220  000644  54                 	db	84	;'T'
   221  000645  48                 	db	72	;'H'
   222  000646  49                 	db	73	;'I'
   223  000647  4E                 	db	78	;'N'
   224  000648  47                 	db	71	;'G'
   225  000649  00                 	db	0
   226  00064A                     STR_5:
   227  00064A  70                 	db	112	;'p'
   228  00064B  69                 	db	105	;'i'
   229  00064C  63                 	db	99	;'c'
   230  00064D  6B                 	db	107	;'k'
   231  00064E  5F                 	db	95	;'_'
   232  00064F  75                 	db	117	;'u'
   233  000650  70                 	db	112	;'p'
   234  000651  00                 	db	0
   235  000652                     STR_3:
   236  000652  6F                 	db	111	;'o'
   237  000653  76                 	db	118	;'v'
   238  000654  65                 	db	101	;'e'
   239  000655  6E                 	db	110	;'n'
   240  000656  00                 	db	0
   241  000657                     STR_84:
   242  000657  68                 	db	104	;'h'
   243  000658  68                 	db	104	;'h'
   244  000659  58                 	db	88	;'X'
   245  00065A  00                 	db	0
   246  00065B                     STR_8:
   247  00065B  68                 	db	104	;'h'
   248  00065C  68                 	db	104	;'h'
   249  00065D  64                 	db	100	;'d'
   250  00065E  00                 	db	0
   251  00065F                     STR_12:
   252  00065F  68                 	db	104	;'h'
   253  000660  68                 	db	104	;'h'
   254  000661  69                 	db	105	;'i'
   255  000662  00                 	db	0
   256  000663                     STR_50:
   257  000663  68                 	db	104	;'h'
   258  000664  68                 	db	104	;'h'
   259  000665  6E                 	db	110	;'n'
   260  000666  00                 	db	0
   261  000667                     STR_35:
   262  000667  68                 	db	104	;'h'
   263  000668  68                 	db	104	;'h'
   264  000669  6F                 	db	111	;'o'
   265  00066A  00                 	db	0
   266  00066B                     STR_65:
   267  00066B  68                 	db	104	;'h'
   268  00066C  68                 	db	104	;'h'
   269  00066D  75                 	db	117	;'u'
   270  00066E  00                 	db	0
   271  00066F                     STR_80:
   272  00066F  68                 	db	104	;'h'
   273  000670  68                 	db	104	;'h'
   274  000671  78                 	db	120	;'x'
   275  000672  00                 	db	0
   276  000673                     STR_102:
   277  000673  7A                 	db	122	;'z'
   278  000674  58                 	db	88	;'X'
   279  000675  00                 	db	0
   280  000676                     STR_26:
   281  000676  7A                 	db	122	;'z'
   282  000677  64                 	db	100	;'d'
   283  000678  00                 	db	0
   284  000679                     STR_30:
   285  000679  7A                 	db	122	;'z'
   286  00067A  69                 	db	105	;'i'
   287  00067B  00                 	db	0
   288  00067C                     STR_60:
   289  00067C  7A                 	db	122	;'z'
   290  00067D  6E                 	db	110	;'n'
   291  00067E  00                 	db	0
   292  00067F                     STR_45:
   293  00067F  7A                 	db	122	;'z'
   294  000680  6F                 	db	111	;'o'
   295  000681  00                 	db	0
   296  000682                     STR_75:
   297  000682  7A                 	db	122	;'z'
   298  000683  75                 	db	117	;'u'
   299  000684  00                 	db	0
   300  000685                     STR_98:
   301  000685  7A                 	db	122	;'z'
   302  000686  78                 	db	120	;'x'
   303  000687  00                 	db	0
   304  000688  00                 	db	0	; dummy byte at the end
   305  0000                     
   306                           ; #config settings
   307                           
   308                           	psect	cinit
   309  007B7A                     __pcinit:
   310                           	callstack 0
   311  007B7A                     start_initialization:
   312                           	callstack 0
   313  007B7A                     __initialization:
   314                           	callstack 0
   315                           
   316                           ; Initialize objects allocated to BANK0 (11 bytes)
   317                           ; load TBLPTR registers with __pidataBANK0
   318  007B7A  0ED9               	movlw	low __pidataBANK0
   319  007B7C  6EF6               	movwf	tblptrl,c
   320  007B7E  0E78               	movlw	high __pidataBANK0
   321  007B80  6EF7               	movwf	tblptrh,c
   322  007B82  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   323  007B84  6EF8               	movwf	tblptru,c
   324  007B86  EE00  F0C4         	lfsr	0,__pdataBANK0
   325  007B8A  EE10 F00B          	lfsr	1,11
   326  007B8E                     copy_data0:
   327  007B8E  0009               	tblrd		*+
   328  007B90  CFF5 FFEE          	movff	tablat,postinc0
   329  007B94  50E5               	movf	postdec1,w,c
   330  007B96  50E1               	movf	fsr1l,w,c
   331  007B98  E1FA               	bnz	copy_data0
   332                           
   333                           ; Clear objects allocated to BANK1 (4 bytes)
   334  007B9A  0101               	movlb	1
   335  007B9C  6BA6               	clrf	(__pbssBANK1+3)& (0+255),b
   336  007B9E  6BA5               	clrf	(__pbssBANK1+2)& (0+255),b
   337  007BA0  6BA4               	clrf	(__pbssBANK1+1)& (0+255),b
   338  007BA2  6BA3               	clrf	__pbssBANK1& (0+255),b
   339                           
   340                           ; Clear objects allocated to BANK0 (46 bytes)
   341  007BA4  EE00  F080         	lfsr	0,__pbssBANK0
   342  007BA8  0E2E               	movlw	46
   343  007BAA                     clear_0:
   344  007BAA  6AEE               	clrf	postinc0,c
   345  007BAC  06E8               	decf	wreg,f,c
   346  007BAE  E1FD               	bnz	clear_0
   347  007BB0                     end_of_initialization:
   348                           	callstack 0
   349  007BB0                     __end_of__initialization:
   350                           	callstack 0
   351  007BB0  907E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   352  007BB2  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   353  007BB4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   354  007BB6  6EF8               	movwf	tblptru,c
   355  007BB8  0100               	movlb	0
   356  007BBA  EF7E  F01B         	goto	_main	;jump to C main() function
   357                           
   358                           	psect	bssBANK0
   359  000080                     __pbssBANK0:
   360                           	callstack 0
   361  000080                     roundf@F525:
   362                           	callstack 0
   363  000080                     	ds	4
   364  000084                     _nout:
   365                           	callstack 0
   366  000084                     	ds	2
   367  000086                     _width:
   368                           	callstack 0
   369  000086                     	ds	2
   370  000088                     _prec:
   371                           	callstack 0
   372  000088                     	ds	2
   373  00008A                     _flags:
   374                           	callstack 0
   375  00008A                     	ds	2
   376  00008C                     _errno:
   377                           	callstack 0
   378  00008C                     	ds	2
   379  00008E                     _dbuf:
   380                           	callstack 0
   381  00008E                     	ds	32
   382                           
   383                           	psect	dataBANK0
   384  0000C4                     __pdataBANK0:
   385                           	callstack 0
   386  0000C4                     stoa@F1152:
   387                           	callstack 0
   388  0000C4                     	ds	7
   389  0000CB                     	ds	4
   390                           
   391                           	psect	bssBANK1
   392  0001A3                     __pbssBANK1:
   393                           	callstack 0
   394  0001A3                     _timer_done:
   395                           	callstack 0
   396  0001A3                     	ds	1
   397  0001A4                     _state_changed:
   398                           	callstack 0
   399  0001A4                     	ds	1
   400  0001A5                     _state:
   401                           	callstack 0
   402  0001A5                     	ds	2
   403                           
   404                           	psect	cstackBANK1
   405  000100                     __pcstackBANK1:
   406                           	callstack 0
   407  000100                     main@greet_str:
   408                           	callstack 0
   409                           
   410                           ; 160 bytes @ 0x0
   411  000100                     	ds	160
   412  0001A0                     main@state_msg:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0xA0
   416  0001A0                     	ds	2
   417  0001A2                     main@rx_char:
   418                           	callstack 0
   419                           
   420                           ; 1 bytes @ 0xA2
   421  0001A2                     	ds	1
   422                           
   423                           	psect	cstackBANK0
   424  0000AE                     __pcstackBANK0:
   425                           	callstack 0
   426  0000AE                     _vsnprintf$1214:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x0
   430  0000AE                     	ds	2
   431  0000B0                     vsnprintf@cnt:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x2
   435  0000B0                     	ds	2
   436  0000B2                     vsnprintf@f:
   437                           	callstack 0
   438                           
   439                           ; 6 bytes @ 0x4
   440  0000B2                     	ds	6
   441  0000B8                     ?_snprintf:
   442                           	callstack 0
   443  0000B8                     snprintf@s:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0xA
   447  0000B8                     	ds	2
   448  0000BA                     snprintf@n:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0xC
   452  0000BA                     	ds	2
   453  0000BC                     snprintf@fmt:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0xE
   457  0000BC                     	ds	6
   458  0000C2                     snprintf@ap:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x14
   462  0000C2                     	ds	2
   463                           
   464                           	psect	cstackCOMRAM
   465  000001                     __pcstackCOMRAM:
   466                           	callstack 0
   467  000001                     ?_state_translator_fpga_to_micro:
   468                           	callstack 0
   469  000001                     ?_strlen:
   470                           	callstack 0
   471  000001                     ?_isupper:
   472                           	callstack 0
   473  000001                     ?_isalpha:
   474                           	callstack 0
   475  000001                     ?_isdigit:
   476                           	callstack 0
   477  000001                     ?_strncmp:
   478                           	callstack 0
   479  000001                     ?_isspace:
   480                           	callstack 0
   481  000001                     ?_islower:
   482                           	callstack 0
   483  000001                     ?___wmul:
   484                           	callstack 0
   485  000001                     ?___fladd:
   486                           	callstack 0
   487  000001                     ?___flmul:
   488                           	callstack 0
   489  000001                     ?___flneg:
   490                           	callstack 0
   491  000001                     ?___aodiv:
   492                           	callstack 0
   493  000001                     ?___aomod:
   494                           	callstack 0
   495  000001                     ?___lodiv:
   496                           	callstack 0
   497  000001                     ?___lomod:
   498                           	callstack 0
   499  000001                     serial_tx_char@val:
   500                           	callstack 0
   501  000001                     get_reg_value@rx_char:
   502                           	callstack 0
   503  000001                     lcd_wr@val:
   504                           	callstack 0
   505  000001                     state_translator_fpga_to_micro@state:
   506                           	callstack 0
   507  000001                     ___wmul@multiplier:
   508                           	callstack 0
   509  000001                     isalpha@c:
   510                           	callstack 0
   511  000001                     isdigit@c:
   512                           	callstack 0
   513  000001                     isspace@c:
   514                           	callstack 0
   515  000001                     isupper@c:
   516                           	callstack 0
   517  000001                     fputc@c:
   518                           	callstack 0
   519  000001                     strlen@s:
   520                           	callstack 0
   521  000001                     strncmp@_l:
   522                           	callstack 0
   523  000001                     islower@c:
   524                           	callstack 0
   525  000001                     ___flge@ff1:
   526                           	callstack 0
   527  000001                     ___flneg@f1:
   528                           	callstack 0
   529  000001                     ___fladd@b:
   530                           	callstack 0
   531  000001                     ___flmul@b:
   532                           	callstack 0
   533  000001                     ___aodiv@dividend:
   534                           	callstack 0
   535  000001                     ___aomod@dividend:
   536                           	callstack 0
   537  000001                     ___lodiv@dividend:
   538                           	callstack 0
   539  000001                     ___lomod@dividend:
   540                           	callstack 0
   541                           
   542                           ; 8 bytes @ 0x0
   543  000001                     	ds	1
   544  000002                     ??_lcd_cmd:
   545  000002                     ??_lcd_dat:
   546  000002                     serial_tx_string@val:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x1
   550  000002                     	ds	1
   551  000003                     ??_isupper:
   552  000003                     ??_isalpha:
   553  000003                     ??_isdigit:
   554  000003                     ??_isspace:
   555  000003                     ??_islower:
   556  000003                     lcd_cmd@val:
   557                           	callstack 0
   558  000003                     lcd_dat@val:
   559                           	callstack 0
   560  000003                     state_translator_fpga_to_micro@state_msg:
   561                           	callstack 0
   562  000003                     ___wmul@multiplicand:
   563                           	callstack 0
   564  000003                     fputc@fp:
   565                           	callstack 0
   566  000003                     strlen@a:
   567                           	callstack 0
   568  000003                     strncmp@_r:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x2
   572  000003                     	ds	1
   573  000004                     ??_lcd_init:
   574  000004                     serial_tx_string@i:
   575                           	callstack 0
   576  000004                     lcd_str@str:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x3
   580  000004                     	ds	1
   581  000005                     ??_fputc:
   582  000005                     state_translator_fpga_to_micro@state_machine_code:
   583                           	callstack 0
   584  000005                     ___wmul@product:
   585                           	callstack 0
   586  000005                     strncmp@n:
   587                           	callstack 0
   588  000005                     ___flge@ff2:
   589                           	callstack 0
   590  000005                     ___fladd@a:
   591                           	callstack 0
   592  000005                     ___flmul@a:
   593                           	callstack 0
   594                           
   595                           ; 4 bytes @ 0x4
   596  000005                     	ds	1
   597  000006                     lcd_str@i:
   598                           	callstack 0
   599                           
   600                           ; 1 bytes @ 0x5
   601  000006                     	ds	1
   602  000007                     ??_strncmp:
   603  000007                     ?_toupper:
   604                           	callstack 0
   605  000007                     _isspace$1504:
   606                           	callstack 0
   607  000007                     toupper@c:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x6
   611  000007                     	ds	1
   612  000008                     ?_atoi:
   613                           	callstack 0
   614  000008                     atoi@s:
   615                           	callstack 0
   616  000008                     strncmp@l:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x7
   620  000008                     	ds	1
   621  000009                     ??___fladd:
   622  000009                     ??___flmul:
   623  000009                     ??_toupper:
   624  000009                     ??___flge:
   625  000009                     ___aodiv@divisor:
   626                           	callstack 0
   627  000009                     ___aomod@divisor:
   628                           	callstack 0
   629  000009                     ___lodiv@divisor:
   630                           	callstack 0
   631  000009                     ___lomod@divisor:
   632                           	callstack 0
   633                           
   634                           ; 8 bytes @ 0x8
   635  000009                     	ds	1
   636  00000A                     ??_atoi:
   637  00000A                     ?_stoa:
   638                           	callstack 0
   639  00000A                     stoa@fp:
   640                           	callstack 0
   641  00000A                     fputs@s:
   642                           	callstack 0
   643  00000A                     strncmp@r:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x9
   647  00000A                     	ds	2
   648  00000C                     stoa@s:
   649                           	callstack 0
   650  00000C                     fputs@fp:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0xB
   654  00000C                     	ds	1
   655  00000D                     ___fladd@signs:
   656                           	callstack 0
   657  00000D                     ___flmul@sign:
   658                           	callstack 0
   659  00000D                     _toupper$1564:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0xC
   663  00000D                     	ds	1
   664  00000E                     ??_stoa:
   665  00000E                     ___fladd@aexp:
   666                           	callstack 0
   667  00000E                     fputs@c:
   668                           	callstack 0
   669  00000E                     atoi@neg:
   670                           	callstack 0
   671  00000E                     ___flmul@grs:
   672                           	callstack 0
   673                           
   674                           ; 4 bytes @ 0xD
   675  00000E                     	ds	1
   676  00000F                     ___fladd@bexp:
   677                           	callstack 0
   678  00000F                     fputs@i:
   679                           	callstack 0
   680  00000F                     stoa@nuls:
   681                           	callstack 0
   682                           
   683                           ; 7 bytes @ 0xE
   684  00000F                     	ds	1
   685  000010                     ___fladd@grs:
   686                           	callstack 0
   687  000010                     _atoi$1476:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0xF
   691  000010                     	ds	1
   692  000011                     ?_pad:
   693                           	callstack 0
   694  000011                     ?___flsub:
   695                           	callstack 0
   696  000011                     ___aodiv@counter:
   697                           	callstack 0
   698  000011                     ___aomod@counter:
   699                           	callstack 0
   700  000011                     ___lomod@counter:
   701                           	callstack 0
   702  000011                     pad@fp:
   703                           	callstack 0
   704  000011                     ___flsub@b:
   705                           	callstack 0
   706  000011                     ___lodiv@quotient:
   707                           	callstack 0
   708                           
   709                           ; 8 bytes @ 0x10
   710  000011                     	ds	1
   711  000012                     ___aodiv@sign:
   712                           	callstack 0
   713  000012                     ___aomod@sign:
   714                           	callstack 0
   715  000012                     ___flmul@aexp:
   716                           	callstack 0
   717  000012                     _atoi$1478:
   718                           	callstack 0
   719                           
   720                           ; 2 bytes @ 0x11
   721  000012                     	ds	1
   722  000013                     ?_abs:
   723                           	callstack 0
   724  000013                     ___flmul@bexp:
   725                           	callstack 0
   726  000013                     pad@buf:
   727                           	callstack 0
   728  000013                     abs@a:
   729                           	callstack 0
   730  000013                     ___aodiv@quotient:
   731                           	callstack 0
   732                           
   733                           ; 8 bytes @ 0x12
   734  000013                     	ds	1
   735  000014                     _atoi$1477:
   736                           	callstack 0
   737  000014                     ___flmul@prod:
   738                           	callstack 0
   739                           
   740                           ; 4 bytes @ 0x13
   741  000014                     	ds	1
   742  000015                     ??_abs:
   743  000015                     pad@p:
   744                           	callstack 0
   745  000015                     atoi@n:
   746                           	callstack 0
   747  000015                     ___flsub@a:
   748                           	callstack 0
   749                           
   750                           ; 4 bytes @ 0x14
   751  000015                     	ds	1
   752  000016                     stoa@i:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x15
   756  000016                     	ds	1
   757  000017                     ??_pad:
   758                           
   759                           ; 1 bytes @ 0x16
   760  000017                     	ds	1
   761  000018                     ___flmul@temp:
   762                           	callstack 0
   763  000018                     pad@i:
   764                           	callstack 0
   765  000018                     stoa@w:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x17
   769  000018                     	ds	1
   770  000019                     ___lodiv@counter:
   771                           	callstack 0
   772                           
   773                           ; 1 bytes @ 0x18
   774  000019                     	ds	1
   775  00001A                     ?_roundf:
   776                           	callstack 0
   777  00001A                     pad@w:
   778                           	callstack 0
   779  00001A                     stoa@cp:
   780                           	callstack 0
   781  00001A                     roundf@x:
   782                           	callstack 0
   783                           
   784                           ; 4 bytes @ 0x19
   785  00001A                     	ds	2
   786  00001C                     ?_ctoa:
   787                           	callstack 0
   788  00001C                     ?_dtoa:
   789                           	callstack 0
   790  00001C                     ?_otoa:
   791                           	callstack 0
   792  00001C                     ?_utoa:
   793                           	callstack 0
   794  00001C                     ?_xtoa:
   795                           	callstack 0
   796  00001C                     ctoa@fp:
   797                           	callstack 0
   798  00001C                     dtoa@fp:
   799                           	callstack 0
   800  00001C                     otoa@fp:
   801                           	callstack 0
   802  00001C                     stoa@p:
   803                           	callstack 0
   804  00001C                     utoa@fp:
   805                           	callstack 0
   806  00001C                     xtoa@fp:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x1B
   810  00001C                     	ds	2
   811  00001E                     ??_roundf:
   812  00001E                     ctoa@c:
   813                           	callstack 0
   814  00001E                     stoa@l:
   815                           	callstack 0
   816  00001E                     dtoa@d:
   817                           	callstack 0
   818  00001E                     otoa@d:
   819                           	callstack 0
   820  00001E                     utoa@d:
   821                           	callstack 0
   822  00001E                     xtoa@d:
   823                           	callstack 0
   824                           
   825                           ; 8 bytes @ 0x1D
   826  00001E                     	ds	1
   827  00001F                     ctoa@w:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x1E
   831  00001F                     	ds	3
   832  000022                     _roundf$1796:
   833                           	callstack 0
   834                           
   835                           ; 4 bytes @ 0x21
   836  000022                     	ds	4
   837  000026                     ??_dtoa:
   838  000026                     ??_otoa:
   839  000026                     ??_utoa:
   840  000026                     xtoa@x:
   841                           	callstack 0
   842  000026                     roundf@e:
   843                           	callstack 0
   844                           
   845                           ; 2 bytes @ 0x25
   846  000026                     	ds	1
   847  000027                     ??_xtoa:
   848                           
   849                           ; 1 bytes @ 0x26
   850  000027                     	ds	1
   851  000028                     _roundf$1795:
   852                           	callstack 0
   853                           
   854                           ; 4 bytes @ 0x27
   855  000028                     	ds	4
   856  00002C                     roundf@u:
   857                           	callstack 0
   858                           
   859                           ; 4 bytes @ 0x2B
   860  00002C                     	ds	2
   861  00002E                     _dtoa$1300:
   862                           	callstack 0
   863  00002E                     otoa@p:
   864                           	callstack 0
   865  00002E                     utoa@p:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0x2D
   869  00002E                     	ds	1
   870  00002F                     _xtoa$1336:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x2E
   874  00002F                     	ds	1
   875  000030                     dtoa@p:
   876                           	callstack 0
   877  000030                     otoa@t:
   878                           	callstack 0
   879  000030                     utoa@w:
   880                           	callstack 0
   881  000030                     roundf@y:
   882                           	callstack 0
   883                           
   884                           ; 4 bytes @ 0x2F
   885  000030                     	ds	1
   886  000031                     _xtoa$1337:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x30
   890  000031                     	ds	1
   891  000032                     dtoa@w:
   892                           	callstack 0
   893  000032                     otoa@w:
   894                           	callstack 0
   895  000032                     utoa@n:
   896                           	callstack 0
   897                           
   898                           ; 8 bytes @ 0x31
   899  000032                     	ds	1
   900  000033                     xtoa@p:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0x32
   904  000033                     	ds	1
   905  000034                     ?___fltol:
   906                           	callstack 0
   907  000034                     dtoa@s:
   908                           	callstack 0
   909  000034                     ___fltol@f1:
   910                           	callstack 0
   911  000034                     otoa@n:
   912                           	callstack 0
   913                           
   914                           ; 8 bytes @ 0x33
   915  000034                     	ds	1
   916  000035                     xtoa@w:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x34
   920  000035                     	ds	1
   921  000036                     dtoa@n:
   922                           	callstack 0
   923                           
   924                           ; 8 bytes @ 0x35
   925  000036                     	ds	1
   926  000037                     xtoa@n:
   927                           	callstack 0
   928                           
   929                           ; 8 bytes @ 0x36
   930  000037                     	ds	1
   931  000038                     ??___fltol:
   932                           
   933                           ; 1 bytes @ 0x37
   934  000038                     	ds	2
   935  00003A                     utoa@i:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0x39
   939  00003A                     	ds	2
   940  00003C                     ___fltol@sign1:
   941                           	callstack 0
   942  00003C                     otoa@i:
   943                           	callstack 0
   944                           
   945                           ; 2 bytes @ 0x3B
   946  00003C                     	ds	1
   947  00003D                     ___fltol@exp1:
   948                           	callstack 0
   949                           
   950                           ; 1 bytes @ 0x3C
   951  00003D                     	ds	1
   952  00003E                     dtoa@i:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x3D
   956  00003E                     	ds	1
   957  00003F                     xtoa@i:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0x3E
   961  00003F                     	ds	2
   962  000041                     xtoa@c:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x40
   966  000041                     	ds	2
   967  000043                     ?_vfpfcnvrt:
   968                           	callstack 0
   969  000043                     vfpfcnvrt@fp:
   970                           	callstack 0
   971                           
   972                           ; 2 bytes @ 0x42
   973  000043                     	ds	2
   974  000045                     vfpfcnvrt@fmt:
   975                           	callstack 0
   976                           
   977                           ; 2 bytes @ 0x44
   978  000045                     	ds	2
   979  000047                     vfpfcnvrt@ap:
   980                           	callstack 0
   981                           
   982                           ; 2 bytes @ 0x46
   983  000047                     	ds	2
   984  000049                     ??_vfpfcnvrt:
   985                           
   986                           ; 1 bytes @ 0x48
   987  000049                     	ds	4
   988  00004D                     vfpfcnvrt@cp:
   989                           	callstack 0
   990                           
   991                           ; 2 bytes @ 0x4C
   992  00004D                     	ds	2
   993  00004F                     vfpfcnvrt@done:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0x4E
   997  00004F                     	ds	2
   998  000051                     _vfpfcnvrt$1351:
   999                           	callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x50
  1002  000051                     	ds	2
  1003  000053                     _vfpfcnvrt$1352:
  1004                           	callstack 0
  1005                           
  1006                           ; 2 bytes @ 0x52
  1007  000053                     	ds	2
  1008  000055                     vfpfcnvrt@ll:
  1009                           	callstack 0
  1010                           
  1011                           ; 8 bytes @ 0x54
  1012  000055                     	ds	8
  1013  00005D                     vfpfcnvrt@vp:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x5C
  1017  00005D                     	ds	2
  1018  00005F                     vfpfcnvrt@c:
  1019                           	callstack 0
  1020                           
  1021                           ; 1 bytes @ 0x5E
  1022  00005F                     	ds	1
  1023  000060                     vfpfcnvrt@llu:
  1024                           	callstack 0
  1025                           
  1026                           ; 8 bytes @ 0x5F
  1027  000060                     	ds	8
  1028  000068                     ?_vfprintf:
  1029                           	callstack 0
  1030  000068                     vfprintf@fp:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x67
  1034  000068                     	ds	2
  1035  00006A                     vfprintf@fmt:
  1036                           	callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x69
  1039  00006A                     	ds	2
  1040  00006C                     vfprintf@ap:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x6B
  1044  00006C                     	ds	2
  1045  00006E                     vfprintf@cfmt:
  1046                           	callstack 0
  1047                           
  1048                           ; 2 bytes @ 0x6D
  1049  00006E                     	ds	2
  1050  000070                     ?_vsnprintf:
  1051                           	callstack 0
  1052  000070                     vsnprintf@s:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x6F
  1056  000070                     	ds	2
  1057  000072                     vsnprintf@n:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x71
  1061  000072                     	ds	2
  1062  000074                     vsnprintf@fmt:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x73
  1066  000074                     	ds	2
  1067  000076                     vsnprintf@ap:
  1068                           	callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x75
  1071  000076                     	ds	2
  1072  000078                     ??_vsnprintf:
  1073                           
  1074                           ; 1 bytes @ 0x77
  1075  000078                     	ds	4
  1076  00007C                     ??_main:
  1077                           
  1078                           ; 1 bytes @ 0x7B
  1079  00007C                     	ds	2
  1080                           
  1081 ;;
  1082 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1083 ;;
  1084 ;; *************** function _main *****************
  1085 ;; Defined at:
  1086 ;;		line 30 in file "main.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;		None
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;  greet_str     160    0[BANK1 ] PTR const unsigned char 
  1091 ;;		 -> ?_snprintf(2), STR_7(8), STR_6(9), STR_5(8), 
  1092 ;;		 -> STR_4(11), STR_3(5), STR_2(9), 
  1093 ;;  state_msg       2  160[BANK1 ] PTR const unsigned char 
  1094 ;;		 -> STR_7(8), STR_6(9), STR_5(8), STR_4(11), 
  1095 ;;		 -> STR_3(5), STR_2(9), 
  1096 ;;  rx_char         1  162[BANK1 ] unsigned char 
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  1    wreg      void 
  1099 ;; Registers used:
  1100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1106 ;;      Params:         0       0       0       0       0       0       0
  1107 ;;      Locals:         0       0     163       0       0       0       0
  1108 ;;      Temps:          2       0       0       0       0       0       0
  1109 ;;      Totals:         2       0     163       0       0       0       0
  1110 ;;Total ram usage:      165 bytes
  1111 ;; Hardware stack levels required when called:   10
  1112 ;; This function calls:
  1113 ;;		_get_reg_value
  1114 ;;		_init_PORTS
  1115 ;;		_init_USART
  1116 ;;		_init_interrupts
  1117 ;;		_init_timer_0
  1118 ;;		_lcd_cmd
  1119 ;;		_lcd_init
  1120 ;;		_lcd_str
  1121 ;;		_serial_tx_char
  1122 ;;		_serial_tx_string
  1123 ;;		_snprintf
  1124 ;;		_state_translator_fpga_to_micro
  1125 ;; This function is called by:
  1126 ;;		Startup code after reset
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           	psect	text0
  1131  0036FC                     __ptext0:
  1132                           	callstack 0
  1133  0036FC                     _main:
  1134                           	callstack 21
  1135  0036FC  FFFF               	dw	65535	; assembler added errata NOP
  1136                           
  1137                           ;main.c: 32:     init_PORTS();
  1138  0036FE  EC80  F03C         	call	_init_PORTS	;wreg free
  1139  003702                     
  1140                           ;main.c: 33:     init_USART();
  1141  003702  EC19  F03D         	call	_init_USART	;wreg free
  1142  003706                     
  1143                           ;main.c: 34:     init_interrupts();
  1144  003706  EC72  F03C         	call	_init_interrupts	;wreg free
  1145  00370A                     
  1146                           ;main.c: 35:     lcd_init();
  1147  00370A  ECBB  F002         	call	_lcd_init	;wreg free
  1148  00370E                     
  1149                           ;main.c: 36:     lcd_cmd(0x0C);
  1150  00370E  0E0C               	movlw	12
  1151  003710  ECDF  F03C         	call	_lcd_cmd
  1152  003714                     
  1153                           ;main.c: 38:     (INTCONbits.GIE = 1);
  1154  003714  8EF2               	bsf	242,7,c	;volatile
  1155  003716                     l4455:
  1156  003716  FFFF               	dw	65535	; assembler added errata NOP
  1157                           
  1158                           ;main.c: 42:         if (state_changed){
  1159  003718  0101               	movlb	1	; () banked
  1160  00371A  51A4               	movf	_state_changed& (0+255),w,b
  1161  00371C  B4D8               	btfsc	status,2,c
  1162  00371E  EF93  F01B         	goto	u5351
  1163  003722  EF96  F01B         	goto	u5350
  1164  003726                     u5351:
  1165  003726  FFFF               	dw	65535	; assembler added errata NOP
  1166  003728  EFE4  F01B         	goto	l4477
  1167  00372C                     u5350:
  1168  00372C  FFFF               	dw	65535	; assembler added errata NOP
  1169  00372E                     
  1170                           ; BSR set to: 1
  1171                           ;main.c: 43:             rx_char = get_reg_value();
  1172  00372E  EC78  F03C         	call	_get_reg_value	;wreg free
  1173  003732  0101               	movlb	1	; () banked
  1174  003734  6FA2               	movwf	main@rx_char& (0+255),b
  1175  003736                     
  1176                           ; BSR set to: 1
  1177                           ;main.c: 44:             const char* greet_str[80];;main.c: 45:             const char* 
      +                          state_msg = state_translator_fpga_to_micro(rx_char, &state);
  1178  003736  0EA5               	movlw	low _state
  1179  003738  6E01               	movwf	state_translator_fpga_to_micro@state^0,c
  1180  00373A  0E01               	movlw	high _state
  1181  00373C  6E02               	movwf	(state_translator_fpga_to_micro@state+1)^0,c
  1182  00373E  51A2               	movf	main@rx_char& (0+255),w,b
  1183  003740  EC3B  F000         	call	_state_translator_fpga_to_micro
  1184  003744  C001  F1A0         	movff	?_state_translator_fpga_to_micro,main@state_msg
  1185  003748  C002  F1A1         	movff	?_state_translator_fpga_to_micro+1,main@state_msg+1
  1186  00374C                     
  1187                           ;main.c: 46:             snprintf(greet_str, sizeof(greet_str), "The current state is %s
      +                          ", state_msg);
  1188  00374C  0E00               	movlw	low main@greet_str
  1189  00374E  0100               	movlb	0	; () banked
  1190  003750  6FB8               	movwf	snprintf@s& (0+255),b
  1191  003752  0E01               	movlw	high main@greet_str
  1192  003754  6FB9               	movwf	(snprintf@s+1)& (0+255),b
  1193  003756  0E00               	movlw	0
  1194  003758  6FBB               	movwf	(snprintf@n+1)& (0+255),b
  1195  00375A  0EA0               	movlw	160
  1196  00375C  6FBA               	movwf	snprintf@n& (0+255),b
  1197  00375E  0E0D               	movlw	low STR_1
  1198  003760  6FBC               	movwf	snprintf@fmt& (0+255),b
  1199  003762  0E06               	movlw	high STR_1
  1200  003764  6FBD               	movwf	(snprintf@fmt+1)& (0+255),b
  1201  003766  C1A0  F0BE         	movff	main@state_msg,?_snprintf+6
  1202  00376A  C1A1  F0BF         	movff	main@state_msg+1,?_snprintf+7
  1203  00376E  ECC5  F03C         	call	_snprintf	;wreg free
  1204  003772                     
  1205                           ;main.c: 47:             serial_tx_string(greet_str);
  1206  003772  0E00               	movlw	low main@greet_str
  1207  003774  6E02               	movwf	serial_tx_string@val^0,c
  1208  003776  0E01               	movlw	high main@greet_str
  1209  003778  6E03               	movwf	(serial_tx_string@val+1)^0,c
  1210  00377A  EC4A  F03E         	call	_serial_tx_string	;wreg free
  1211  00377E                     
  1212                           ;main.c: 48:             serial_tx_char(rx_char);
  1213  00377E  0101               	movlb	1	; () banked
  1214  003780  51A2               	movf	main@rx_char& (0+255),w,b
  1215  003782  EC8F  F03C         	call	_serial_tx_char
  1216  003786                     
  1217                           ;main.c: 50:             LATBbits.LATB0 =! LATBbits.LATB0;
  1218  003786  A08A               	btfss	138,0,c	;volatile
  1219  003788  EFC8  F01B         	goto	u5361
  1220  00378C  EFCD  F01B         	goto	u5360
  1221  003790                     u5361:
  1222  003790  FFFF               	dw	65535	; assembler added errata NOP
  1223  003792  6A7C               	clrf	??_main^0,c
  1224  003794  2A7C               	incf	??_main^0,f,c
  1225  003796  EFCF  F01B         	goto	u5378
  1226  00379A                     u5360:
  1227  00379A  FFFF               	dw	65535	; assembler added errata NOP
  1228  00379C  6A7C               	clrf	??_main^0,c
  1229  00379E                     u5378:
  1230  00379E  FFFF               	dw	65535	; assembler added errata NOP
  1231  0037A0  508A               	movf	138,w,c	;volatile
  1232  0037A2  187C               	xorwf	??_main^0,w,c
  1233  0037A4  0BFE               	andlw	-2
  1234  0037A6  187C               	xorwf	??_main^0,w,c
  1235  0037A8  6E8A               	movwf	138,c	;volatile
  1236  0037AA                     
  1237                           ;main.c: 51:             state_changed = 0;
  1238  0037AA  0E00               	movlw	0
  1239  0037AC  0101               	movlb	1	; () banked
  1240  0037AE  6FA4               	movwf	_state_changed& (0+255),b
  1241  0037B0                     
  1242                           ; BSR set to: 1
  1243                           ;main.c: 52:             lcd_cmd(0x01);
  1244  0037B0  0E01               	movlw	1
  1245  0037B2  ECDF  F03C         	call	_lcd_cmd
  1246  0037B6                     
  1247                           ;main.c: 53:             lcd_cmd(0x80);
  1248  0037B6  0E80               	movlw	128
  1249  0037B8  ECDF  F03C         	call	_lcd_cmd
  1250  0037BC                     
  1251                           ;main.c: 54:             lcd_str(greet_str);
  1252  0037BC  0E00               	movlw	low main@greet_str
  1253  0037BE  6E04               	movwf	lcd_str@str^0,c
  1254  0037C0  0E01               	movlw	high main@greet_str
  1255  0037C2  6E05               	movwf	(lcd_str@str+1)^0,c
  1256  0037C4  ECDF  F03D         	call	_lcd_str	;wreg free
  1257  0037C8                     l4477:
  1258  0037C8  FFFF               	dw	65535	; assembler added errata NOP
  1259                           
  1260                           ;main.c: 56:         if (state == 2){
  1261  0037CA  0E02               	movlw	2
  1262  0037CC  0101               	movlb	1	; () banked
  1263  0037CE  19A5               	xorwf	_state& (0+255),w,b
  1264  0037D0  11A6               	iorwf	(_state+1)& (0+255),w,b
  1265  0037D2  A4D8               	btfss	status,2,c
  1266  0037D4  EFEE  F01B         	goto	u5381
  1267  0037D8  EFF1  F01B         	goto	u5380
  1268  0037DC                     u5381:
  1269  0037DC  FFFF               	dw	65535	; assembler added errata NOP
  1270  0037DE  EFF5  F01B         	goto	l87
  1271  0037E2                     u5380:
  1272  0037E2  FFFF               	dw	65535	; assembler added errata NOP
  1273  0037E4                     
  1274                           ; BSR set to: 1
  1275                           ;main.c: 57:             LATBbits.LATB1 = 1;
  1276  0037E4  828A               	bsf	138,1,c	;volatile
  1277                           
  1278                           ;main.c: 58:         } else {
  1279  0037E6  EF8B  F01B         	goto	l4455
  1280  0037EA                     l87:
  1281  0037EA  FFFF               	dw	65535	; assembler added errata NOP
  1282                           
  1283                           ; BSR set to: 1
  1284                           ;main.c: 59:             LATBbits.LATB1 = 0;
  1285  0037EC  928A               	bcf	138,1,c	;volatile
  1286  0037EE                     
  1287                           ; BSR set to: 1
  1288                           ;main.c: 60:             if (state == 3){
  1289  0037EE  0E03               	movlw	3
  1290  0037F0  19A5               	xorwf	_state& (0+255),w,b
  1291  0037F2  11A6               	iorwf	(_state+1)& (0+255),w,b
  1292  0037F4  A4D8               	btfss	status,2,c
  1293  0037F6  EFFF  F01B         	goto	u5391
  1294  0037FA  EF02  F01C         	goto	u5390
  1295  0037FE                     u5391:
  1296  0037FE  FFFF               	dw	65535	; assembler added errata NOP
  1297  003800  EF23  F01C         	goto	l4489
  1298  003804                     u5390:
  1299  003804  FFFF               	dw	65535	; assembler added errata NOP
  1300  003806                     
  1301                           ; BSR set to: 1
  1302                           ;main.c: 61:                 if (timer_done){
  1303  003806  51A3               	movf	_timer_done& (0+255),w,b
  1304  003808  B4D8               	btfsc	status,2,c
  1305  00380A  EF09  F01C         	goto	u5401
  1306  00380E  EF0C  F01C         	goto	u5400
  1307  003812                     u5401:
  1308  003812  FFFF               	dw	65535	; assembler added errata NOP
  1309  003814  EF15  F01C         	goto	l90
  1310  003818                     u5400:
  1311  003818  FFFF               	dw	65535	; assembler added errata NOP
  1312  00381A                     l4485:
  1313  00381A  FFFF               	dw	65535	; assembler added errata NOP
  1314                           
  1315                           ;main.c: 62:                     state = 2;
  1316  00381C  0E00               	movlw	0
  1317  00381E  0101               	movlb	1	; () banked
  1318  003820  6FA6               	movwf	(_state+1)& (0+255),b
  1319  003822  0E02               	movlw	2
  1320  003824  6FA5               	movwf	_state& (0+255),b
  1321                           
  1322                           ;main.c: 63:                 } else {
  1323  003826  EF8B  F01B         	goto	l4455
  1324  00382A                     l90:
  1325  00382A  FFFF               	dw	65535	; assembler added errata NOP
  1326                           
  1327                           ; BSR set to: 1
  1328                           ;main.c: 64:                     if (T0CONbits.TMR0ON == 0){
  1329  00382C  BED5               	btfsc	213,7,c	;volatile
  1330  00382E  EF1B  F01C         	goto	u5411
  1331  003832  EF1E  F01C         	goto	u5410
  1332  003836                     u5411:
  1333  003836  FFFF               	dw	65535	; assembler added errata NOP
  1334  003838  EF5D  F01C         	goto	l88
  1335  00383C                     u5410:
  1336  00383C  FFFF               	dw	65535	; assembler added errata NOP
  1337  00383E                     
  1338                           ; BSR set to: 1
  1339                           ;main.c: 65:                         init_timer_0();
  1340  00383E  EC9F  F03C         	call	_init_timer_0	;wreg free
  1341  003842  EF8B  F01B         	goto	l4455
  1342  003846                     l4489:
  1343  003846  FFFF               	dw	65535	; assembler added errata NOP
  1344                           
  1345                           ; BSR set to: 1
  1346  003848  0E04               	movlw	4
  1347  00384A  19A5               	xorwf	_state& (0+255),w,b
  1348  00384C  11A6               	iorwf	(_state+1)& (0+255),w,b
  1349  00384E  A4D8               	btfss	status,2,c
  1350  003850  EF2C  F01C         	goto	u5421
  1351  003854  EF2F  F01C         	goto	u5420
  1352  003858                     u5421:
  1353  003858  FFFF               	dw	65535	; assembler added errata NOP
  1354  00385A  EF3F  F01C         	goto	l4495
  1355  00385E                     u5420:
  1356  00385E  FFFF               	dw	65535	; assembler added errata NOP
  1357  003860                     l4491:
  1358  003860  FFFF               	dw	65535	; assembler added errata NOP
  1359                           
  1360                           ; BSR set to: 1
  1361                           ;main.c: 69:                 _delay((unsigned long)((2000)*(4000000/4000.0)));
  1362  003862  0E08               	movlw	8
  1363  003864  6E7D               	movwf	(??_main+1)^0,c
  1364  003866  0E9E               	movlw	158
  1365  003868  6E7C               	movwf	??_main^0,c
  1366  00386A  0E4C               	movlw	76
  1367  00386C                     u5497:
  1368  00386C  FFFF               	dw	65535	; errata NOP
  1369  00386E  2EE8               	decfsz	wreg,f,c
  1370  003870  D7FD               	bra	u5497
  1371  003872  2E7C               	decfsz	??_main^0,f,c
  1372  003874  D7FB               	bra	u5497
  1373  003876  2E7D               	decfsz	(??_main+1)^0,f,c
  1374  003878  D7F9               	bra	u5497
  1375  00387A  EF0D  F01C         	goto	l4485
  1376  00387E                     l4495:
  1377  00387E  FFFF               	dw	65535	; assembler added errata NOP
  1378                           
  1379                           ; BSR set to: 1
  1380  003880  0E05               	movlw	5
  1381  003882  19A5               	xorwf	_state& (0+255),w,b
  1382  003884  11A6               	iorwf	(_state+1)& (0+255),w,b
  1383  003886  A4D8               	btfss	status,2,c
  1384  003888  EF48  F01C         	goto	u5431
  1385  00388C  EF4B  F01C         	goto	u5430
  1386  003890                     u5431:
  1387  003890  FFFF               	dw	65535	; assembler added errata NOP
  1388  003892  EF4E  F01C         	goto	l4501
  1389  003896                     u5430:
  1390  003896  FFFF               	dw	65535	; assembler added errata NOP
  1391  003898  EF30  F01C         	goto	l4491
  1392  00389C                     l4501:
  1393  00389C  FFFF               	dw	65535	; assembler added errata NOP
  1394                           
  1395                           ; BSR set to: 1
  1396  00389E  0E06               	movlw	6
  1397  0038A0  19A5               	xorwf	_state& (0+255),w,b
  1398  0038A2  11A6               	iorwf	(_state+1)& (0+255),w,b
  1399  0038A4  A4D8               	btfss	status,2,c
  1400  0038A6  EF57  F01C         	goto	u5441
  1401  0038AA  EF5A  F01C         	goto	u5440
  1402  0038AE                     u5441:
  1403  0038AE  FFFF               	dw	65535	; assembler added errata NOP
  1404  0038B0  EF5D  F01C         	goto	l88
  1405  0038B4                     u5440:
  1406  0038B4  FFFF               	dw	65535	; assembler added errata NOP
  1407  0038B6  EF30  F01C         	goto	l4491
  1408  0038BA                     l88:
  1409  0038BA  FFFF               	dw	65535	; assembler added errata NOP
  1410                           
  1411                           ; BSR set to: 1
  1412  0038BC  EF8B  F01B         	goto	l4455
  1413  0038C0  EF39  F000         	goto	start
  1414  0038C4                     __end_of_main:
  1415                           	callstack 0
  1416                           
  1417 ;; *************** function _state_translator_fpga_to_micro *****************
  1418 ;; Defined at:
  1419 ;;		line 1 in file "utils.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;  state_machin    1    wreg     unsigned char 
  1422 ;;  state           2    0[COMRAM] PTR int 
  1423 ;;		 -> state(2), 
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;  state_machin    1    4[COMRAM] unsigned char 
  1426 ;;  state_msg       2    2[COMRAM] PTR const unsigned char 
  1427 ;;		 -> STR_7(8), STR_6(9), STR_5(8), STR_4(11), 
  1428 ;;		 -> STR_3(5), STR_2(9), 
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  2    0[COMRAM] PTR const unsigned char 
  1431 ;; Registers used:
  1432 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1438 ;;      Params:         2       0       0       0       0       0       0
  1439 ;;      Locals:         3       0       0       0       0       0       0
  1440 ;;      Temps:          0       0       0       0       0       0       0
  1441 ;;      Totals:         5       0       0       0       0       0       0
  1442 ;;Total ram usage:        5 bytes
  1443 ;; Hardware stack levels used:    1
  1444 ;; Hardware stack levels required when called:    1
  1445 ;; This function calls:
  1446 ;;		Nothing
  1447 ;; This function is called by:
  1448 ;;		_main
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           	psect	text1
  1453  000076                     __ptext1:
  1454                           	callstack 0
  1455  000076                     _state_translator_fpga_to_micro:
  1456                           	callstack 0
  1457  000076  FFFF               	dw	65535	; assembler added errata NOP
  1458                           
  1459                           ; BSR set to: 1
  1460                           ;incstack = 0
  1461                           ;state_translator_fpga_to_micro@state_machine_code stored from wreg
  1462  000078  6E05               	movwf	state_translator_fpga_to_micro@state_machine_code^0,c
  1463  00007A                     
  1464                           ;utils.c: 2:     const char* state_msg;;utils.c: 3:     if (state_machine_code == 'A'){
  1465  00007A  0E41               	movlw	65
  1466  00007C  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  1467  00007E  A4D8               	btfss	status,2,c
  1468  000080  EF44  F000         	goto	u5291
  1469  000084  EF47  F000         	goto	u5290
  1470  000088                     u5291:
  1471  000088  FFFF               	dw	65535	; assembler added errata NOP
  1472  00008A  EF56  F000         	goto	l4381
  1473  00008E                     u5290:
  1474  00008E  FFFF               	dw	65535	; assembler added errata NOP
  1475  000090                     
  1476                           ;utils.c: 4:         state_msg = "init_pos";
  1477  000090  0E30               	movlw	low STR_2
  1478  000092  6E03               	movwf	state_translator_fpga_to_micro@state_msg^0,c
  1479  000094  0E06               	movlw	high STR_2
  1480  000096  6E04               	movwf	(state_translator_fpga_to_micro@state_msg+1)^0,c
  1481  000098                     
  1482                           ;utils.c: 5:         *state = 1;
  1483  000098  C001  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  1484  00009C  C002  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  1485  0000A0  0E01               	movlw	1
  1486  0000A2  6EDE               	movwf	postinc2,c
  1487  0000A4  0E00               	movlw	0
  1488  0000A6  6EDD               	movwf	postdec2,c
  1489                           
  1490                           ;utils.c: 6:     } else if (state_machine_code == 'B'){
  1491  0000A8  EFC3  F000         	goto	l160
  1492  0000AC                     l4381:
  1493  0000AC  FFFF               	dw	65535	; assembler added errata NOP
  1494  0000AE  0E42               	movlw	66
  1495  0000B0  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  1496  0000B2  A4D8               	btfss	status,2,c
  1497  0000B4  EF5E  F000         	goto	u5301
  1498  0000B8  EF61  F000         	goto	u5300
  1499  0000BC                     u5301:
  1500  0000BC  FFFF               	dw	65535	; assembler added errata NOP
  1501  0000BE  EF70  F000         	goto	l4387
  1502  0000C2                     u5300:
  1503  0000C2  FFFF               	dw	65535	; assembler added errata NOP
  1504  0000C4                     
  1505                           ;utils.c: 7:         state_msg = "oven";
  1506  0000C4  0E52               	movlw	low STR_3
  1507  0000C6  6E03               	movwf	state_translator_fpga_to_micro@state_msg^0,c
  1508  0000C8  0E06               	movlw	high STR_3
  1509  0000CA  6E04               	movwf	(state_translator_fpga_to_micro@state_msg+1)^0,c
  1510  0000CC                     
  1511                           ;utils.c: 8:         *state = 3;
  1512  0000CC  C001  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  1513  0000D0  C002  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  1514  0000D4  0E03               	movlw	3
  1515  0000D6  6EDE               	movwf	postinc2,c
  1516  0000D8  0E00               	movlw	0
  1517  0000DA  6EDD               	movwf	postdec2,c
  1518                           
  1519                           ;utils.c: 9:     } else if (state_machine_code == 'D'){
  1520  0000DC  EFC3  F000         	goto	l160
  1521  0000E0                     l4387:
  1522  0000E0  FFFF               	dw	65535	; assembler added errata NOP
  1523  0000E2  0E44               	movlw	68
  1524  0000E4  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  1525  0000E6  A4D8               	btfss	status,2,c
  1526  0000E8  EF78  F000         	goto	u5311
  1527  0000EC  EF7B  F000         	goto	u5310
  1528  0000F0                     u5311:
  1529  0000F0  FFFF               	dw	65535	; assembler added errata NOP
  1530  0000F2  EF8A  F000         	goto	l4393
  1531  0000F6                     u5310:
  1532  0000F6  FFFF               	dw	65535	; assembler added errata NOP
  1533  0000F8                     
  1534                           ;utils.c: 10:         state_msg = "mixing_pos";
  1535  0000F8  0E25               	movlw	low STR_4
  1536  0000FA  6E03               	movwf	state_translator_fpga_to_micro@state_msg^0,c
  1537  0000FC  0E06               	movlw	high STR_4
  1538  0000FE  6E04               	movwf	(state_translator_fpga_to_micro@state_msg+1)^0,c
  1539  000100                     
  1540                           ;utils.c: 11:         *state = 4;
  1541  000100  C001  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  1542  000104  C002  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  1543  000108  0E04               	movlw	4
  1544  00010A  6EDE               	movwf	postinc2,c
  1545  00010C  0E00               	movlw	0
  1546  00010E  6EDD               	movwf	postdec2,c
  1547                           
  1548                           ;utils.c: 12:     } else if (state_machine_code == '@'){
  1549  000110  EFC3  F000         	goto	l160
  1550  000114                     l4393:
  1551  000114  FFFF               	dw	65535	; assembler added errata NOP
  1552  000116  0E40               	movlw	64
  1553  000118  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  1554  00011A  A4D8               	btfss	status,2,c
  1555  00011C  EF92  F000         	goto	u5321
  1556  000120  EF95  F000         	goto	u5320
  1557  000124                     u5321:
  1558  000124  FFFF               	dw	65535	; assembler added errata NOP
  1559  000126  EFA4  F000         	goto	l4399
  1560  00012A                     u5320:
  1561  00012A  FFFF               	dw	65535	; assembler added errata NOP
  1562  00012C                     
  1563                           ;utils.c: 13:         state_msg = "pick_up";
  1564  00012C  0E4A               	movlw	low STR_5
  1565  00012E  6E03               	movwf	state_translator_fpga_to_micro@state_msg^0,c
  1566  000130  0E06               	movlw	high STR_5
  1567  000132  6E04               	movwf	(state_translator_fpga_to_micro@state_msg+1)^0,c
  1568  000134                     
  1569                           ;utils.c: 14:         *state = 5;
  1570  000134  C001  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  1571  000138  C002  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  1572  00013C  0E05               	movlw	5
  1573  00013E  6EDE               	movwf	postinc2,c
  1574  000140  0E00               	movlw	0
  1575  000142  6EDD               	movwf	postdec2,c
  1576                           
  1577                           ;utils.c: 15:     } else if (state_machine_code == 'H'){
  1578  000144  EFC3  F000         	goto	l160
  1579  000148                     l4399:
  1580  000148  FFFF               	dw	65535	; assembler added errata NOP
  1581  00014A  0E48               	movlw	72
  1582  00014C  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  1583  00014E  A4D8               	btfss	status,2,c
  1584  000150  EFAC  F000         	goto	u5331
  1585  000154  EFAF  F000         	goto	u5330
  1586  000158                     u5331:
  1587  000158  FFFF               	dw	65535	; assembler added errata NOP
  1588  00015A  EFBE  F000         	goto	l4405
  1589  00015E                     u5330:
  1590  00015E  FFFF               	dw	65535	; assembler added errata NOP
  1591  000160                     
  1592                           ;utils.c: 16:         state_msg = "movement";
  1593  000160  0E39               	movlw	low STR_6
  1594  000162  6E03               	movwf	state_translator_fpga_to_micro@state_msg^0,c
  1595  000164  0E06               	movlw	high STR_6
  1596  000166  6E04               	movwf	(state_translator_fpga_to_micro@state_msg+1)^0,c
  1597  000168                     
  1598                           ;utils.c: 17:         *state = 2;
  1599  000168  C001  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  1600  00016C  C002  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  1601  000170  0E02               	movlw	2
  1602  000172  6EDE               	movwf	postinc2,c
  1603  000174  0E00               	movlw	0
  1604  000176  6EDD               	movwf	postdec2,c
  1605                           
  1606                           ;utils.c: 18:     } else {
  1607  000178  EFC3  F000         	goto	l160
  1608  00017C                     l4405:
  1609  00017C  FFFF               	dw	65535	; assembler added errata NOP
  1610                           
  1611                           ;utils.c: 19:         state_msg = "NOTHING";
  1612  00017E  0E42               	movlw	low STR_7
  1613  000180  6E03               	movwf	state_translator_fpga_to_micro@state_msg^0,c
  1614  000182  0E06               	movlw	high STR_7
  1615  000184  6E04               	movwf	(state_translator_fpga_to_micro@state_msg+1)^0,c
  1616  000186                     l160:
  1617  000186  FFFF               	dw	65535	; assembler added errata NOP
  1618                           
  1619                           ;utils.c: 22:     return state_msg;
  1620  000188  C003  F001         	movff	state_translator_fpga_to_micro@state_msg,?_state_translator_fpga_to_micro
  1621  00018C  C004  F002         	movff	state_translator_fpga_to_micro@state_msg+1,?_state_translator_fpga_to_micro+1
  1622  000190  0012               	return		;funcret
  1623  000192  FFFF               	dw	65535	; errata NOP
  1624  000194                     __end_of_state_translator_fpga_to_micro:
  1625                           	callstack 0
  1626                           
  1627 ;; *************** function _snprintf *****************
  1628 ;; Defined at:
  1629 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\snprintf.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;  s               2   10[BANK0 ] PTR unsigned char 
  1632 ;;		 -> main@greet_str(160), 
  1633 ;;  n               2   12[BANK0 ] unsigned int 
  1634 ;;  fmt             2   14[BANK0 ] PTR const unsigned char 
  1635 ;;		 -> STR_1(24), 
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;  ap              2   20[BANK0 ] PTR void [1]
  1638 ;;		 -> ?_snprintf(2), 
  1639 ;;  ret             2    0        int 
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  2   10[BANK0 ] int 
  1642 ;; Registers used:
  1643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1649 ;;      Params:         0       8       0       0       0       0       0
  1650 ;;      Locals:         0       4       0       0       0       0       0
  1651 ;;      Temps:          0       0       0       0       0       0       0
  1652 ;;      Totals:         0      12       0       0       0       0       0
  1653 ;;Total ram usage:       12 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; Hardware stack levels required when called:    9
  1656 ;; This function calls:
  1657 ;;		_vsnprintf
  1658 ;; This function is called by:
  1659 ;;		_main
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text2
  1664  00798A                     __ptext2:
  1665                           	callstack 0
  1666  00798A                     _snprintf:
  1667                           	callstack 0
  1668  00798A  FFFF               	dw	65535	; assembler added errata NOP
  1669  00798C  0EBE               	movlw	low (?_snprintf+6)
  1670  00798E  0100               	movlb	0	; () banked
  1671  007990  6FC2               	movwf	snprintf@ap& (0+255),b
  1672  007992  0E00               	movlw	high (?_snprintf+6)
  1673  007994  6FC3               	movwf	(snprintf@ap+1)& (0+255),b
  1674  007996                     
  1675                           ; BSR set to: 0
  1676  007996  C0B8  F070         	movff	snprintf@s,vsnprintf@s
  1677  00799A  C0B9  F071         	movff	snprintf@s+1,vsnprintf@s+1
  1678  00799E  C0BA  F072         	movff	snprintf@n,vsnprintf@n
  1679  0079A2  C0BB  F073         	movff	snprintf@n+1,vsnprintf@n+1
  1680  0079A6  C0BC  F074         	movff	snprintf@fmt,vsnprintf@fmt
  1681  0079AA  C0BD  F075         	movff	snprintf@fmt+1,vsnprintf@fmt+1
  1682  0079AE  0EC2               	movlw	low snprintf@ap
  1683  0079B0  6E76               	movwf	vsnprintf@ap^0,c
  1684  0079B2  0E00               	movlw	high snprintf@ap
  1685  0079B4  6E77               	movwf	(vsnprintf@ap+1)^0,c
  1686  0079B6  EC04  F01E         	call	_vsnprintf	;wreg free
  1687  0079BA  0012               	return		;funcret
  1688  0079BC  FFFF               	dw	65535	; errata NOP
  1689  0079BE                     __end_of_snprintf:
  1690                           	callstack 0
  1691                           
  1692 ;; *************** function _vsnprintf *****************
  1693 ;; Defined at:
  1694 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_vsnprintf.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;  s               2  111[COMRAM] PTR unsigned char 
  1697 ;;		 -> main@greet_str(160), 
  1698 ;;  n               2  113[COMRAM] unsigned int 
  1699 ;;  fmt             2  115[COMRAM] PTR const unsigned char 
  1700 ;;		 -> STR_1(24), 
  1701 ;;  ap              2  117[COMRAM] PTR PTR void 
  1702 ;;		 -> snprintf@ap(2), 
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;  f               6    4[BANK0 ] struct _IO_FILE
  1705 ;;  cnt             2    2[BANK0 ] int 
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  2  111[COMRAM] int 
  1708 ;; Registers used:
  1709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1715 ;;      Params:         8       0       0       0       0       0       0
  1716 ;;      Locals:         0      10       0       0       0       0       0
  1717 ;;      Temps:          4       0       0       0       0       0       0
  1718 ;;      Totals:        12      10       0       0       0       0       0
  1719 ;;Total ram usage:       22 bytes
  1720 ;; Hardware stack levels used:    1
  1721 ;; Hardware stack levels required when called:    8
  1722 ;; This function calls:
  1723 ;;		_vfprintf
  1724 ;; This function is called by:
  1725 ;;		_snprintf
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           	psect	text3
  1730  003C08                     __ptext3:
  1731                           	callstack 0
  1732  003C08                     _vsnprintf:
  1733                           	callstack 0
  1734  003C08  FFFF               	dw	65535	; assembler added errata NOP
  1735  003C0A  0E80               	movlw	128
  1736  003C0C  5C73               	subwf	(vsnprintf@n+1)^0,w,c
  1737  003C0E  A0D8               	btfss	status,0,c
  1738  003C10  EF0C  F01E         	goto	u5231
  1739  003C14  EF0F  F01E         	goto	u5230
  1740  003C18                     u5231:
  1741  003C18  FFFF               	dw	65535	; assembler added errata NOP
  1742  003C1A  EF19  F01E         	goto	l4285
  1743  003C1E                     u5230:
  1744  003C1E  FFFF               	dw	65535	; assembler added errata NOP
  1745  003C20  0E00               	movlw	0
  1746  003C22  0100               	movlb	0	; () banked
  1747  003C24  6F8D               	movwf	(_errno+1)& (0+255),b
  1748  003C26  0E4B               	movlw	75
  1749  003C28  6F8C               	movwf	_errno& (0+255),b
  1750  003C2A                     
  1751                           ; BSR set to: 0
  1752  003C2A  6870               	setf	?_vsnprintf^0,c
  1753  003C2C  6871               	setf	(?_vsnprintf+1)^0,c
  1754  003C2E  EF9E  F01E         	goto	l886
  1755  003C32                     l4285:
  1756  003C32  FFFF               	dw	65535	; assembler added errata NOP
  1757  003C34  C070  F0B2         	movff	vsnprintf@s,vsnprintf@f
  1758  003C38  C071  F0B3         	movff	vsnprintf@s+1,vsnprintf@f+1
  1759  003C3C  5073               	movf	(vsnprintf@n+1)^0,w,c
  1760  003C3E  E10A               	bnz	u5240
  1761  003C40  0E02               	movlw	2
  1762  003C42  5C72               	subwf	vsnprintf@n^0,w,c
  1763  003C44  A0D8               	btfss	status,0,c
  1764  003C46  EF27  F01E         	goto	u5241
  1765  003C4A  EF2A  F01E         	goto	u5240
  1766  003C4E                     u5241:
  1767  003C4E  FFFF               	dw	65535	; assembler added errata NOP
  1768  003C50  EF38  F01E         	goto	l4291
  1769  003C54                     u5240:
  1770  003C54  FFFF               	dw	65535	; assembler added errata NOP
  1771  003C56  0EFF               	movlw	255
  1772  003C58  2472               	addwf	vsnprintf@n^0,w,c
  1773  003C5A  0100               	movlb	0	; () banked
  1774  003C5C  6FB6               	movwf	(vsnprintf@f+4)& (0+255),b
  1775  003C5E  0EFF               	movlw	255
  1776  003C60  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  1777  003C62  6FB7               	movwf	(vsnprintf@f+5)& (0+255),b
  1778  003C64                     
  1779                           ; BSR set to: 0
  1780  003C64  0E00               	movlw	0
  1781  003C66  6FB5               	movwf	(vsnprintf@f+3)& (0+255),b
  1782  003C68  0E00               	movlw	0
  1783  003C6A  6FB4               	movwf	(vsnprintf@f+2)& (0+255),b
  1784  003C6C  EF42  F01E         	goto	l4293
  1785  003C70                     l4291:
  1786  003C70  FFFF               	dw	65535	; assembler added errata NOP
  1787  003C72  0E00               	movlw	0
  1788  003C74  0100               	movlb	0	; () banked
  1789  003C76  6FB7               	movwf	(vsnprintf@f+5)& (0+255),b
  1790  003C78  0E01               	movlw	1
  1791  003C7A  6FB6               	movwf	(vsnprintf@f+4)& (0+255),b
  1792  003C7C  0E00               	movlw	0
  1793  003C7E  6FB5               	movwf	(vsnprintf@f+3)& (0+255),b
  1794  003C80  0E01               	movlw	1
  1795  003C82  6FB4               	movwf	(vsnprintf@f+2)& (0+255),b
  1796  003C84                     l4293:
  1797  003C84  FFFF               	dw	65535	; assembler added errata NOP
  1798                           
  1799                           ; BSR set to: 0
  1800  003C86  0EB2               	movlw	low vsnprintf@f
  1801  003C88  6E68               	movwf	vfprintf@fp^0,c
  1802  003C8A  0E00               	movlw	high vsnprintf@f
  1803  003C8C  6E69               	movwf	(vfprintf@fp+1)^0,c
  1804  003C8E  C074  F06A         	movff	vsnprintf@fmt,vfprintf@fmt
  1805  003C92  C075  F06B         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  1806  003C96  C076  F06C         	movff	vsnprintf@ap,vfprintf@ap
  1807  003C9A  C077  F06D         	movff	vsnprintf@ap+1,vfprintf@ap+1
  1808  003C9E  EC57  F03F         	call	_vfprintf	;wreg free
  1809  003CA2  C068  F0B0         	movff	?_vfprintf,vsnprintf@cnt
  1810  003CA6  C069  F0B1         	movff	?_vfprintf+1,vsnprintf@cnt+1
  1811  003CAA  5072               	movf	vsnprintf@n^0,w,c
  1812  003CAC  1073               	iorwf	(vsnprintf@n+1)^0,w,c
  1813  003CAE  B4D8               	btfsc	status,2,c
  1814  003CB0  EF5C  F01E         	goto	u5251
  1815  003CB4  EF5F  F01E         	goto	u5250
  1816  003CB8                     u5251:
  1817  003CB8  FFFF               	dw	65535	; assembler added errata NOP
  1818  003CBA  EF99  F01E         	goto	l4305
  1819  003CBE                     u5250:
  1820  003CBE  FFFF               	dw	65535	; assembler added errata NOP
  1821  003CC0  0100               	movlb	0	; () banked
  1822  003CC2  BFB1               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  1823  003CC4  EF66  F01E         	goto	u5261
  1824  003CC8  EF69  F01E         	goto	u5260
  1825  003CCC                     u5261:
  1826  003CCC  FFFF               	dw	65535	; assembler added errata NOP
  1827  003CCE  EF99  F01E         	goto	l4305
  1828  003CD2                     u5260:
  1829  003CD2  FFFF               	dw	65535	; assembler added errata NOP
  1830  003CD4                     
  1831                           ; BSR set to: 0
  1832  003CD4  0EFF               	movlw	255
  1833  003CD6  6E78               	movwf	??_vsnprintf^0,c
  1834  003CD8  0EFF               	movlw	255
  1835  003CDA  6E79               	movwf	(??_vsnprintf+1)^0,c
  1836  003CDC  C072  F07A         	movff	vsnprintf@n,??_vsnprintf+2
  1837  003CE0  C073  F07B         	movff	vsnprintf@n+1,??_vsnprintf+3
  1838  003CE4  5078               	movf	??_vsnprintf^0,w,c
  1839  003CE6  267A               	addwf	(??_vsnprintf+2)^0,f,c
  1840  003CE8  5079               	movf	(??_vsnprintf+1)^0,w,c
  1841  003CEA  227B               	addwfc	(??_vsnprintf+3)^0,f,c
  1842  003CEC  507A               	movf	(??_vsnprintf+2)^0,w,c
  1843  003CEE  5DB0               	subwf	vsnprintf@cnt& (0+255),w,b
  1844  003CF0  507B               	movf	(??_vsnprintf+3)^0,w,c
  1845  003CF2  59B1               	subwfb	(vsnprintf@cnt+1)& (0+255),w,b
  1846  003CF4  A0D8               	btfss	status,0,c
  1847  003CF6  EF7F  F01E         	goto	u5271
  1848  003CFA  EF82  F01E         	goto	u5270
  1849  003CFE                     u5271:
  1850  003CFE  FFFF               	dw	65535	; assembler added errata NOP
  1851  003D00  EF8B  F01E         	goto	l891
  1852  003D04                     u5270:
  1853  003D04  FFFF               	dw	65535	; assembler added errata NOP
  1854  003D06                     
  1855                           ; BSR set to: 0
  1856  003D06  0EFF               	movlw	255
  1857  003D08  2472               	addwf	vsnprintf@n^0,w,c
  1858  003D0A  6FAE               	movwf	_vsnprintf$1214& (0+255),b
  1859  003D0C  0EFF               	movlw	255
  1860  003D0E  2073               	addwfc	(vsnprintf@n+1)^0,w,c
  1861  003D10  6FAF               	movwf	(_vsnprintf$1214+1)& (0+255),b
  1862  003D12  EF90  F01E         	goto	l4303
  1863  003D16                     l891:
  1864  003D16  FFFF               	dw	65535	; assembler added errata NOP
  1865                           
  1866                           ; BSR set to: 0
  1867  003D18  C0B0  F0AE         	movff	vsnprintf@cnt,_vsnprintf$1214
  1868  003D1C  C0B1  F0AF         	movff	vsnprintf@cnt+1,_vsnprintf$1214+1
  1869  003D20                     l4303:
  1870  003D20  FFFF               	dw	65535	; assembler added errata NOP
  1871                           
  1872                           ; BSR set to: 0
  1873  003D22  51AE               	movf	_vsnprintf$1214& (0+255),w,b
  1874  003D24  2470               	addwf	vsnprintf@s^0,w,c
  1875  003D26  6ED9               	movwf	fsr2l,c
  1876  003D28  51AF               	movf	(_vsnprintf$1214+1)& (0+255),w,b
  1877  003D2A  2071               	addwfc	(vsnprintf@s+1)^0,w,c
  1878  003D2C  6EDA               	movwf	fsr2h,c
  1879  003D2E  0E00               	movlw	0
  1880  003D30  6EDF               	movwf	indf2,c
  1881  003D32                     l4305:
  1882  003D32  FFFF               	dw	65535	; assembler added errata NOP
  1883  003D34  C0B0  F070         	movff	vsnprintf@cnt,?_vsnprintf
  1884  003D38  C0B1  F071         	movff	vsnprintf@cnt+1,?_vsnprintf+1
  1885  003D3C                     l886:
  1886  003D3C  FFFF               	dw	65535	; assembler added errata NOP
  1887  003D3E  0012               	return		;funcret
  1888  003D40  FFFF               	dw	65535	; errata NOP
  1889  003D42                     __end_of_vsnprintf:
  1890                           	callstack 0
  1891                           
  1892 ;; *************** function _vfprintf *****************
  1893 ;; Defined at:
  1894 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;  fp              2  103[COMRAM] PTR struct _IO_FILE
  1897 ;;		 -> vsnprintf@f(6), 
  1898 ;;  fmt             2  105[COMRAM] PTR const unsigned char 
  1899 ;;		 -> STR_1(24), 
  1900 ;;  ap              2  107[COMRAM] PTR PTR void 
  1901 ;;		 -> snprintf@ap(2), 
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;  cfmt            2  109[COMRAM] PTR unsigned char 
  1904 ;;		 -> STR_1(24), 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  2  103[COMRAM] int 
  1907 ;; Registers used:
  1908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1914 ;;      Params:         6       0       0       0       0       0       0
  1915 ;;      Locals:         2       0       0       0       0       0       0
  1916 ;;      Temps:          0       0       0       0       0       0       0
  1917 ;;      Totals:         8       0       0       0       0       0       0
  1918 ;;Total ram usage:        8 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    7
  1921 ;; This function calls:
  1922 ;;		_vfpfcnvrt
  1923 ;; This function is called by:
  1924 ;;		_vsnprintf
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           	psect	text4
  1929  007EAE                     __ptext4:
  1930                           	callstack 0
  1931  007EAE                     _vfprintf:
  1932                           	callstack 0
  1933  007EAE  FFFF               	dw	65535	; assembler added errata NOP
  1934  007EB0                     
  1935                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1936  007EB0  C06A  F06E         	movff	vfprintf@fmt,vfprintf@cfmt
  1937  007EB4  C06B  F06F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1938  007EB8                     
  1939                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  1940  007EB8  0E00               	movlw	0
  1941  007EBA  0100               	movlb	0	; () banked
  1942  007EBC  6F85               	movwf	(_nout+1)& (0+255),b
  1943  007EBE  0E00               	movlw	0
  1944  007EC0  6F84               	movwf	_nout& (0+255),b
  1945                           
  1946                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1947  007EC2  EF77  F03F         	goto	l4167
  1948  007EC6                     l4165:
  1949  007EC6  FFFF               	dw	65535	; assembler added errata NOP
  1950                           
  1951                           ; BSR set to: 0
  1952                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1953  007EC8  C068  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1954  007ECC  C069  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1955  007ED0  0E6E               	movlw	low vfprintf@cfmt
  1956  007ED2  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1957  007ED4  0E00               	movlw	high vfprintf@cfmt
  1958  007ED6  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1959  007ED8  C06C  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1960  007EDC  C06D  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1961  007EE0  EC45  F003         	call	_vfpfcnvrt	;wreg free
  1962  007EE4  5043               	movf	?_vfpfcnvrt^0,w,c
  1963  007EE6  0100               	movlb	0	; () banked
  1964  007EE8  2784               	addwf	_nout& (0+255),f,b
  1965  007EEA  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  1966  007EEC  2385               	addwfc	(_nout+1)& (0+255),f,b
  1967  007EEE                     l4167:
  1968  007EEE  FFFF               	dw	65535	; assembler added errata NOP
  1969                           
  1970                           ; BSR set to: 0
  1971                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1972  007EF0  C06E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1973  007EF4  C06F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1974  007EF8                     	if	0	;tblptru may be non-zero
  1975  007EF8                     	endif
  1976  007EF8                     	if	0	;tblptru may be non-zero
  1977  007EF8                     	endif
  1978  007EF8  0008               	tblrd		*
  1979  007EFA  FFFF               	dw	65535	; errata NOP
  1980  007EFC  50F5               	movf	tablat,w,c
  1981  007EFE  0900               	iorlw	0
  1982  007F00  A4D8               	btfss	status,2,c
  1983  007F02  EF85  F03F         	goto	u5051
  1984  007F06  EF88  F03F         	goto	u5050
  1985  007F0A                     u5051:
  1986  007F0A  FFFF               	dw	65535	; assembler added errata NOP
  1987  007F0C  EF63  F03F         	goto	l4165
  1988  007F10                     u5050:
  1989  007F10  FFFF               	dw	65535	; assembler added errata NOP
  1990  007F12                     
  1991                           ; BSR set to: 0
  1992                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  1993  007F12  C084  F068         	movff	_nout,?_vfprintf
  1994  007F16  C085  F069         	movff	_nout+1,?_vfprintf+1
  1995  007F1A                     
  1996                           ; BSR set to: 0
  1997  007F1A  0012               	return		;funcret
  1998  007F1C  FFFF               	dw	65535	; errata NOP
  1999  007F1E                     __end_of_vfprintf:
  2000                           	callstack 0
  2001                           
  2002 ;; *************** function _vfpfcnvrt *****************
  2003 ;; Defined at:
  2004 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  2007 ;;		 -> vsnprintf@f(6), 
  2008 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  2009 ;;		 -> vfprintf@cfmt(2), 
  2010 ;;  ap              2   70[COMRAM] PTR PTR void 
  2011 ;;		 -> snprintf@ap(2), 
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  llu             8   95[COMRAM] unsigned long long 
  2014 ;;  ll              8   84[COMRAM] long long 
  2015 ;;  f               4    0        long long 
  2016 ;;  ct              3    0        unsigned char [3]
  2017 ;;  vp              2   92[COMRAM] PTR void 
  2018 ;;		 -> ?_snprintf(2), STR_7(8), STR_6(9), STR_5(8), 
  2019 ;;		 -> STR_4(11), STR_3(5), STR_2(9), 
  2020 ;;  done            2   78[COMRAM] int 
  2021 ;;  cp              2   76[COMRAM] PTR unsigned char 
  2022 ;;		 -> ?_snprintf(2), STR_7(8), STR_6(9), STR_5(8), 
  2023 ;;		 -> STR_4(11), STR_3(5), STR_2(9), 
  2024 ;;  i               2    0        int 
  2025 ;;  c               1   94[COMRAM] unsigned char 
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  2   66[COMRAM] int 
  2028 ;; Registers used:
  2029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2035 ;;      Params:         6       0       0       0       0       0       0
  2036 ;;      Locals:        27       0       0       0       0       0       0
  2037 ;;      Temps:          4       0       0       0       0       0       0
  2038 ;;      Totals:        37       0       0       0       0       0       0
  2039 ;;Total ram usage:       37 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    6
  2042 ;; This function calls:
  2043 ;;		_atoi
  2044 ;;		_ctoa
  2045 ;;		_dtoa
  2046 ;;		_fputc
  2047 ;;		_isdigit
  2048 ;;		_otoa
  2049 ;;		_stoa
  2050 ;;		_strncmp
  2051 ;;		_utoa
  2052 ;;		_xtoa
  2053 ;; This function is called by:
  2054 ;;		_vfprintf
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           	psect	text5
  2059  00068A                     __ptext5:
  2060                           	callstack 0
  2061  00068A                     _vfpfcnvrt:
  2062                           	callstack 0
  2063  00068A  FFFF               	dw	65535	; assembler added errata NOP
  2064  00068C                     
  2065                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  2066  00068C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2067  000690  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2068  000694  CFDE FFF6          	movff	postinc2,tblptrl
  2069  000698  CFDD FFF7          	movff	postdec2,tblptrh
  2070  00069C                     	if	0	;tblptru may be non-zero
  2071  00069C                     	endif
  2072  00069C                     	if	0	;tblptru may be non-zero
  2073  00069C                     	endif
  2074  00069C  0008               	tblrd		*
  2075  00069E  FFFF               	dw	65535	; errata NOP
  2076  0006A0  50F5               	movf	tablat,w,c
  2077  0006A2  0A25               	xorlw	37
  2078  0006A4  A4D8               	btfss	status,2,c
  2079  0006A6  EF57  F003         	goto	u4311
  2080  0006AA  EF5A  F003         	goto	u4310
  2081  0006AE                     u4311:
  2082  0006AE  FFFF               	dw	65535	; assembler added errata NOP
  2083  0006B0  EF19  F00D         	goto	l3979
  2084  0006B4                     u4310:
  2085  0006B4  FFFF               	dw	65535	; assembler added errata NOP
  2086  0006B6                     
  2087                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  2088  0006B6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2089  0006BA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2090  0006BE  2ADE               	incf	postinc2,f,c
  2091  0006C0  0E00               	movlw	0
  2092  0006C2  22DD               	addwfc	postdec2,f,c
  2093  0006C4                     
  2094                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  2095  0006C4  0E00               	movlw	0
  2096  0006C6  0100               	movlb	0	; () banked
  2097  0006C8  6F87               	movwf	(_width+1)& (0+255),b
  2098  0006CA  0E00               	movlw	0
  2099  0006CC  6F86               	movwf	_width& (0+255),b
  2100  0006CE  C086  F08A         	movff	_width,_flags
  2101  0006D2  C087  F08B         	movff	_width+1,_flags+1
  2102  0006D6                     
  2103                           ; BSR set to: 0
  2104                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  2105  0006D6  6988               	setf	_prec& (0+255),b
  2106  0006D8  6989               	setf	(_prec+1)& (0+255),b
  2107  0006DA                     
  2108                           ; BSR set to: 0
  2109                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  2110  0006DA  0E00               	movlw	0
  2111  0006DC  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  2112  0006DE  0E00               	movlw	0
  2113  0006E0  6E4F               	movwf	vfpfcnvrt@done^0,c
  2114                           
  2115                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  2116  0006E2  EFC8  F003         	goto	l3697
  2117  0006E6                     l3671:
  2118  0006E6  FFFF               	dw	65535	; assembler added errata NOP
  2119                           
  2120                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  2121  0006E8  0100               	movlb	0	; () banked
  2122  0006EA  818A               	bsf	_flags& (0+255),0,b
  2123  0006EC                     l3673:
  2124  0006EC  FFFF               	dw	65535	; assembler added errata NOP
  2125                           
  2126                           ; BSR set to: 0
  2127                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  2128  0006EE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2129  0006F2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2130  0006F6  2ADE               	incf	postinc2,f,c
  2131  0006F8  0E00               	movlw	0
  2132  0006FA  22DD               	addwfc	postdec2,f,c
  2133                           
  2134                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  2135  0006FC  EFC8  F003         	goto	l3697
  2136  000700                     l3675:
  2137  000700  FFFF               	dw	65535	; assembler added errata NOP
  2138                           
  2139                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  2140  000702  0100               	movlb	0	; () banked
  2141  000704  838A               	bsf	_flags& (0+255),1,b
  2142  000706  EF76  F003         	goto	l3673
  2143  00070A                     l3679:
  2144  00070A  FFFF               	dw	65535	; assembler added errata NOP
  2145                           
  2146                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  2147  00070C  0100               	movlb	0	; () banked
  2148  00070E  858A               	bsf	_flags& (0+255),2,b
  2149  000710  EF76  F003         	goto	l3673
  2150  000714                     l3683:
  2151  000714  FFFF               	dw	65535	; assembler added errata NOP
  2152                           
  2153                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  2154  000716  0100               	movlb	0	; () banked
  2155  000718  878A               	bsf	_flags& (0+255),3,b
  2156  00071A  EF76  F003         	goto	l3673
  2157  00071E                     l3687:
  2158  00071E  FFFF               	dw	65535	; assembler added errata NOP
  2159                           
  2160                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  2161  000720  0100               	movlb	0	; () banked
  2162  000722  898A               	bsf	_flags& (0+255),4,b
  2163  000724  EF76  F003         	goto	l3673
  2164  000728                     l3691:
  2165  000728  FFFF               	dw	65535	; assembler added errata NOP
  2166                           
  2167                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  2168  00072A  0E00               	movlw	0
  2169  00072C  6E50               	movwf	(vfpfcnvrt@done+1)^0,c
  2170  00072E  0E01               	movlw	1
  2171  000730  6E4F               	movwf	vfpfcnvrt@done^0,c
  2172                           
  2173                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  2174  000732  EFC8  F003         	goto	l3697
  2175  000736                     l3695:
  2176  000736  FFFF               	dw	65535	; assembler added errata NOP
  2177  000738  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2178  00073C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2179  000740  CFDE FFF6          	movff	postinc2,tblptrl
  2180  000744  CFDD FFF7          	movff	postdec2,tblptrh
  2181  000748                     	if	0	;tblptru may be non-zero
  2182  000748                     	endif
  2183  000748                     	if	0	;tblptru may be non-zero
  2184  000748                     	endif
  2185  000748  0008               	tblrd		*
  2186  00074A  FFFF               	dw	65535	; errata NOP
  2187  00074C  50F5               	movf	tablat,w,c
  2188  00074E  6E49               	movwf	??_vfpfcnvrt^0,c
  2189  000750  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  2190                           
  2191                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2192                           ; Switch size 1, requested type "simple"
  2193                           ; Number of cases is 1, Range of values is 0 to 0
  2194                           ; switch strategies available:
  2195                           ; Name         Instructions Cycles
  2196                           ; simple_byte            4     3 (average)
  2197                           ;	Chosen strategy is simple_byte
  2198  000752  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  2199  000754  0A00               	xorlw	0	; case 0
  2200  000756  B4D8               	btfsc	status,2,c
  2201  000758  EFB0  F003         	goto	l4573
  2202  00075C  EF94  F003         	goto	l3691
  2203  000760                     l4573:
  2204  000760  FFFF               	dw	65535	; assembler added errata NOP
  2205                           
  2206                           ; Switch size 1, requested type "simple"
  2207                           ; Number of cases is 5, Range of values is 32 to 48
  2208                           ; switch strategies available:
  2209                           ; Name         Instructions Cycles
  2210                           ; simple_byte           16     9 (average)
  2211                           ;	Chosen strategy is simple_byte
  2212  000762  5049               	movf	??_vfpfcnvrt^0,w,c
  2213  000764  0A20               	xorlw	32	; case 32
  2214  000766  B4D8               	btfsc	status,2,c
  2215  000768  EF8A  F003         	goto	l3683
  2216  00076C  0A03               	xorlw	3	; case 35
  2217  00076E  B4D8               	btfsc	status,2,c
  2218  000770  EF8F  F003         	goto	l3687
  2219  000774  0A08               	xorlw	8	; case 43
  2220  000776  B4D8               	btfsc	status,2,c
  2221  000778  EF85  F003         	goto	l3679
  2222  00077C  0A06               	xorlw	6	; case 45
  2223  00077E  B4D8               	btfsc	status,2,c
  2224  000780  EF73  F003         	goto	l3671
  2225  000784  0A1D               	xorlw	29	; case 48
  2226  000786  B4D8               	btfsc	status,2,c
  2227  000788  EF80  F003         	goto	l3675
  2228  00078C  EF94  F003         	goto	l3691
  2229  000790                     l3697:
  2230  000790  FFFF               	dw	65535	; assembler added errata NOP
  2231                           
  2232                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  2233  000792  504F               	movf	vfpfcnvrt@done^0,w,c
  2234  000794  1050               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  2235  000796  B4D8               	btfsc	status,2,c
  2236  000798  EFD0  F003         	goto	u4321
  2237  00079C  EFD3  F003         	goto	u4320
  2238  0007A0                     u4321:
  2239  0007A0  FFFF               	dw	65535	; assembler added errata NOP
  2240  0007A2  EF9B  F003         	goto	l3695
  2241  0007A6                     u4320:
  2242  0007A6  FFFF               	dw	65535	; assembler added errata NOP
  2243  0007A8                     
  2244                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  2245  0007A8  0100               	movlb	0	; () banked
  2246  0007AA  A18A               	btfss	_flags& (0+255),0,b
  2247  0007AC  EFDA  F003         	goto	u4331
  2248  0007B0  EFDD  F003         	goto	u4330
  2249  0007B4                     u4331:
  2250  0007B4  FFFF               	dw	65535	; assembler added errata NOP
  2251  0007B6  EFDF  F003         	goto	l3701
  2252  0007BA                     u4330:
  2253  0007BA  FFFF               	dw	65535	; assembler added errata NOP
  2254  0007BC                     
  2255                           ; BSR set to: 0
  2256                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  2257  0007BC  938A               	bcf	_flags& (0+255),1,b
  2258  0007BE                     l3701:
  2259  0007BE  FFFF               	dw	65535	; assembler added errata NOP
  2260                           
  2261                           ; BSR set to: 0
  2262                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  2263  0007C0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2264  0007C4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2265  0007C8  CFDE FFF6          	movff	postinc2,tblptrl
  2266  0007CC  CFDD FFF7          	movff	postdec2,tblptrh
  2267  0007D0                     	if	0	;tblptru may be non-zero
  2268  0007D0                     	endif
  2269  0007D0                     	if	0	;tblptru may be non-zero
  2270  0007D0                     	endif
  2271  0007D0  0008               	tblrd		*
  2272  0007D2  FFFF               	dw	65535	; errata NOP
  2273  0007D4  50F5               	movf	tablat,w,c
  2274  0007D6  0A2A               	xorlw	42
  2275  0007D8  A4D8               	btfss	status,2,c
  2276  0007DA  EFF1  F003         	goto	u4341
  2277  0007DE  EFF4  F003         	goto	u4340
  2278  0007E2                     u4341:
  2279  0007E2  FFFF               	dw	65535	; assembler added errata NOP
  2280  0007E4  EF20  F004         	goto	l3709
  2281  0007E8                     u4340:
  2282  0007E8  FFFF               	dw	65535	; assembler added errata NOP
  2283  0007EA                     
  2284                           ; BSR set to: 0
  2285                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  2286  0007EA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2287  0007EE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2288  0007F2  2ADE               	incf	postinc2,f,c
  2289  0007F4  0E00               	movlw	0
  2290  0007F6  22DD               	addwfc	postdec2,f,c
  2291                           
  2292                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2293  0007F8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2294  0007FC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2295  000800  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2296  000804  0E02               	movlw	2
  2297  000806  26DE               	addwf	postinc2,f,c
  2298  000808  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2299  00080C  0E00               	movlw	0
  2300  00080E  22DD               	addwfc	postdec2,f,c
  2301  000810  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2302  000814  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2303  000818  CFDE F086          	movff	postinc2,_width
  2304  00081C  CFDD F087          	movff	postdec2,_width+1
  2305  000820                     
  2306                           ; BSR set to: 0
  2307                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  2308  000820  BF87               	btfsc	(_width+1)& (0+255),7,b
  2309  000822  EF18  F004         	goto	u4350
  2310  000826  EF15  F004         	goto	u4351
  2311  00082A                     u4351:
  2312  00082A  FFFF               	dw	65535	; assembler added errata NOP
  2313  00082C  EF6B  F004         	goto	l3719
  2314  000830                     u4350:
  2315  000830  FFFF               	dw	65535	; assembler added errata NOP
  2316  000832                     
  2317                           ; BSR set to: 0
  2318                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  2319  000832  818A               	bsf	_flags& (0+255),0,b
  2320                           
  2321                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  2322  000834  6D86               	negf	_width& (0+255),b
  2323  000836  1F87               	comf	(_width+1)& (0+255),f,b
  2324  000838  B0D8               	btfsc	status,0,c
  2325  00083A  2B87               	incf	(_width+1)& (0+255),f,b
  2326  00083C  EF6B  F004         	goto	l3719
  2327  000840                     l3709:
  2328  000840  FFFF               	dw	65535	; assembler added errata NOP
  2329                           
  2330                           ; BSR set to: 0
  2331                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  2332  000842  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2333  000846  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2334  00084A  CFDE F008          	movff	postinc2,atoi@s
  2335  00084E  CFDD F009          	movff	postdec2,atoi@s+1
  2336  000852  EC97  F01A         	call	_atoi	;wreg free
  2337  000856  C008  F086         	movff	?_atoi,_width
  2338  00085A  C009  F087         	movff	?_atoi+1,_width+1
  2339                           
  2340                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2341  00085E  EF39  F004         	goto	l3713
  2342  000862                     l3711:
  2343  000862  FFFF               	dw	65535	; assembler added errata NOP
  2344                           
  2345                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  2346  000864  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2347  000868  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2348  00086C  2ADE               	incf	postinc2,f,c
  2349  00086E  0E00               	movlw	0
  2350  000870  22DD               	addwfc	postdec2,f,c
  2351  000872                     l3713:
  2352  000872  FFFF               	dw	65535	; assembler added errata NOP
  2353  000874  0ED0               	movlw	208
  2354  000876  6E49               	movwf	??_vfpfcnvrt^0,c
  2355  000878  0EFF               	movlw	255
  2356  00087A  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  2357  00087C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2358  000880  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2359  000884  CFDE FFF6          	movff	postinc2,tblptrl
  2360  000888  CFDD FFF7          	movff	postdec2,tblptrh
  2361  00088C                     	if	0	;tblptru may be non-zero
  2362  00088C                     	endif
  2363  00088C                     	if	0	;tblptru may be non-zero
  2364  00088C                     	endif
  2365  00088C  0008               	tblrd		*
  2366  00088E  FFFF               	dw	65535	; errata NOP
  2367  000890  50F5               	movf	tablat,w,c
  2368  000892  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  2369  000894  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  2370  000896  5049               	movf	??_vfpfcnvrt^0,w,c
  2371  000898  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2372  00089A  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  2373  00089C  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2374  00089E  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  2375  0008A0  E10B               	bnz	u4360
  2376  0008A2  0E0A               	movlw	10
  2377  0008A4  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2378  0008A6  A0D8               	btfss	status,0,c
  2379  0008A8  EF58  F004         	goto	u4361
  2380  0008AC  EF5C  F004         	goto	u4360
  2381  0008B0                     u4361:
  2382  0008B0  FFFF               	dw	65535	; assembler added errata NOP
  2383  0008B2  0E01               	movlw	1
  2384  0008B4  EF5E  F004         	goto	u4370
  2385  0008B8                     u4360:
  2386  0008B8  FFFF               	dw	65535	; assembler added errata NOP
  2387  0008BA  0E00               	movlw	0
  2388  0008BC                     u4370:
  2389  0008BC  FFFF               	dw	65535	; assembler added errata NOP
  2390  0008BE  6E51               	movwf	_vfpfcnvrt$1351^0,c
  2391  0008C0  6A52               	clrf	(_vfpfcnvrt$1351+1)^0,c
  2392  0008C2  5051               	movf	_vfpfcnvrt$1351^0,w,c
  2393  0008C4  1052               	iorwf	(_vfpfcnvrt$1351+1)^0,w,c
  2394  0008C6  A4D8               	btfss	status,2,c
  2395  0008C8  EF68  F004         	goto	u4381
  2396  0008CC  EF6B  F004         	goto	u4380
  2397  0008D0                     u4381:
  2398  0008D0  FFFF               	dw	65535	; assembler added errata NOP
  2399  0008D2  EF31  F004         	goto	l3711
  2400  0008D6                     u4380:
  2401  0008D6                     l3719:
  2402  0008D6  FFFF               	dw	65535	; assembler added errata NOP
  2403                           
  2404                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  2405  0008D8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2406  0008DC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2407  0008E0  CFDE FFF6          	movff	postinc2,tblptrl
  2408  0008E4  CFDD FFF7          	movff	postdec2,tblptrh
  2409  0008E8                     	if	0	;tblptru may be non-zero
  2410  0008E8                     	endif
  2411  0008E8                     	if	0	;tblptru may be non-zero
  2412  0008E8                     	endif
  2413  0008E8  0008               	tblrd		*
  2414  0008EA  FFFF               	dw	65535	; errata NOP
  2415  0008EC  50F5               	movf	tablat,w,c
  2416  0008EE  0A2E               	xorlw	46
  2417  0008F0  A4D8               	btfss	status,2,c
  2418  0008F2  EF7D  F004         	goto	u4391
  2419  0008F6  EF80  F004         	goto	u4390
  2420  0008FA                     u4391:
  2421  0008FA  FFFF               	dw	65535	; assembler added errata NOP
  2422  0008FC  EF0A  F005         	goto	l3739
  2423  000900                     u4390:
  2424  000900  FFFF               	dw	65535	; assembler added errata NOP
  2425  000902                     
  2426                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  2427  000902  0E00               	movlw	0
  2428  000904  0100               	movlb	0	; () banked
  2429  000906  6F89               	movwf	(_prec+1)& (0+255),b
  2430  000908  0E00               	movlw	0
  2431  00090A  6F88               	movwf	_prec& (0+255),b
  2432  00090C                     
  2433                           ; BSR set to: 0
  2434                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  2435  00090C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2436  000910  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2437  000914  2ADE               	incf	postinc2,f,c
  2438  000916  0E00               	movlw	0
  2439  000918  22DD               	addwfc	postdec2,f,c
  2440  00091A                     
  2441                           ; BSR set to: 0
  2442                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  2443  00091A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2444  00091E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2445  000922  CFDE FFF6          	movff	postinc2,tblptrl
  2446  000926  CFDD FFF7          	movff	postdec2,tblptrh
  2447  00092A                     	if	0	;tblptru may be non-zero
  2448  00092A                     	endif
  2449  00092A                     	if	0	;tblptru may be non-zero
  2450  00092A                     	endif
  2451  00092A  0008               	tblrd		*
  2452  00092C  FFFF               	dw	65535	; errata NOP
  2453  00092E  50F5               	movf	tablat,w,c
  2454  000930  0A2A               	xorlw	42
  2455  000932  A4D8               	btfss	status,2,c
  2456  000934  EF9E  F004         	goto	u4401
  2457  000938  EFA1  F004         	goto	u4400
  2458  00093C                     u4401:
  2459  00093C  FFFF               	dw	65535	; assembler added errata NOP
  2460  00093E  EFBF  F004         	goto	l3729
  2461  000942                     u4400:
  2462  000942  FFFF               	dw	65535	; assembler added errata NOP
  2463  000944                     
  2464                           ; BSR set to: 0
  2465                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  2466  000944  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2467  000948  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2468  00094C  2ADE               	incf	postinc2,f,c
  2469  00094E  0E00               	movlw	0
  2470  000950  22DD               	addwfc	postdec2,f,c
  2471                           
  2472                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2473  000952  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2474  000956  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2475  00095A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2476  00095E  0E02               	movlw	2
  2477  000960  26DE               	addwf	postinc2,f,c
  2478  000962  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2479  000966  0E00               	movlw	0
  2480  000968  22DD               	addwfc	postdec2,f,c
  2481  00096A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2482  00096E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2483  000972  CFDE F088          	movff	postinc2,_prec
  2484  000976  CFDD F089          	movff	postdec2,_prec+1
  2485                           
  2486                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  2487  00097A  EF0A  F005         	goto	l3739
  2488  00097E                     l3729:
  2489  00097E  FFFF               	dw	65535	; assembler added errata NOP
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  2493  000980  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2494  000984  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2495  000988  CFDE F008          	movff	postinc2,atoi@s
  2496  00098C  CFDD F009          	movff	postdec2,atoi@s+1
  2497  000990  EC97  F01A         	call	_atoi	;wreg free
  2498  000994  C008  F088         	movff	?_atoi,_prec
  2499  000998  C009  F089         	movff	?_atoi+1,_prec+1
  2500                           
  2501                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2502  00099C  EFD8  F004         	goto	l3733
  2503  0009A0                     l3731:
  2504  0009A0  FFFF               	dw	65535	; assembler added errata NOP
  2505                           
  2506                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  2507  0009A2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2508  0009A6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2509  0009AA  2ADE               	incf	postinc2,f,c
  2510  0009AC  0E00               	movlw	0
  2511  0009AE  22DD               	addwfc	postdec2,f,c
  2512  0009B0                     l3733:
  2513  0009B0  FFFF               	dw	65535	; assembler added errata NOP
  2514  0009B2  0ED0               	movlw	208
  2515  0009B4  6E49               	movwf	??_vfpfcnvrt^0,c
  2516  0009B6  0EFF               	movlw	255
  2517  0009B8  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  2518  0009BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2519  0009BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2520  0009C2  CFDE FFF6          	movff	postinc2,tblptrl
  2521  0009C6  CFDD FFF7          	movff	postdec2,tblptrh
  2522  0009CA                     	if	0	;tblptru may be non-zero
  2523  0009CA                     	endif
  2524  0009CA                     	if	0	;tblptru may be non-zero
  2525  0009CA                     	endif
  2526  0009CA  0008               	tblrd		*
  2527  0009CC  FFFF               	dw	65535	; errata NOP
  2528  0009CE  50F5               	movf	tablat,w,c
  2529  0009D0  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  2530  0009D2  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  2531  0009D4  5049               	movf	??_vfpfcnvrt^0,w,c
  2532  0009D6  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2533  0009D8  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  2534  0009DA  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2535  0009DC  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  2536  0009DE  E10B               	bnz	u4410
  2537  0009E0  0E0A               	movlw	10
  2538  0009E2  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2539  0009E4  A0D8               	btfss	status,0,c
  2540  0009E6  EFF7  F004         	goto	u4411
  2541  0009EA  EFFB  F004         	goto	u4410
  2542  0009EE                     u4411:
  2543  0009EE  FFFF               	dw	65535	; assembler added errata NOP
  2544  0009F0  0E01               	movlw	1
  2545  0009F2  EFFD  F004         	goto	u4420
  2546  0009F6                     u4410:
  2547  0009F6  FFFF               	dw	65535	; assembler added errata NOP
  2548  0009F8  0E00               	movlw	0
  2549  0009FA                     u4420:
  2550  0009FA  FFFF               	dw	65535	; assembler added errata NOP
  2551  0009FC  6E53               	movwf	_vfpfcnvrt$1352^0,c
  2552  0009FE  6A54               	clrf	(_vfpfcnvrt$1352+1)^0,c
  2553  000A00  5053               	movf	_vfpfcnvrt$1352^0,w,c
  2554  000A02  1054               	iorwf	(_vfpfcnvrt$1352+1)^0,w,c
  2555  000A04  A4D8               	btfss	status,2,c
  2556  000A06  EF07  F005         	goto	u4431
  2557  000A0A  EF0A  F005         	goto	u4430
  2558  000A0E                     u4431:
  2559  000A0E  FFFF               	dw	65535	; assembler added errata NOP
  2560  000A10  EFD0  F004         	goto	l3731
  2561  000A14                     u4430:
  2562  000A14                     l3739:
  2563  000A14  FFFF               	dw	65535	; assembler added errata NOP
  2564                           
  2565                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 792:         if (
      +                          *fmt[0] == 'c') {
  2566  000A16  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2567  000A1A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2568  000A1E  CFDE FFF6          	movff	postinc2,tblptrl
  2569  000A22  CFDD FFF7          	movff	postdec2,tblptrh
  2570  000A26                     	if	0	;tblptru may be non-zero
  2571  000A26                     	endif
  2572  000A26                     	if	0	;tblptru may be non-zero
  2573  000A26                     	endif
  2574  000A26  0008               	tblrd		*
  2575  000A28  FFFF               	dw	65535	; errata NOP
  2576  000A2A  50F5               	movf	tablat,w,c
  2577  000A2C  0A63               	xorlw	99
  2578  000A2E  A4D8               	btfss	status,2,c
  2579  000A30  EF1C  F005         	goto	u4441
  2580  000A34  EF1F  F005         	goto	u4440
  2581  000A38                     u4441:
  2582  000A38  FFFF               	dw	65535	; assembler added errata NOP
  2583  000A3A  EF47  F005         	goto	l3747
  2584  000A3E                     u4440:
  2585  000A3E  FFFF               	dw	65535	; assembler added errata NOP
  2586  000A40                     
  2587                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 793:             
      +                          ++*fmt;
  2588  000A40  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2589  000A44  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2590  000A48  2ADE               	incf	postinc2,f,c
  2591  000A4A  0E00               	movlw	0
  2592  000A4C  22DD               	addwfc	postdec2,f,c
  2593                           
  2594                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 794:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2595  000A4E  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2596  000A52  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2597  000A56  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2598  000A5A  0E02               	movlw	2
  2599  000A5C  26DE               	addwf	postinc2,f,c
  2600  000A5E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2601  000A62  0E00               	movlw	0
  2602  000A64  22DD               	addwfc	postdec2,f,c
  2603  000A66  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2604  000A6A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2605  000A6E  50DF               	movf	indf2,w,c
  2606  000A70  6E5F               	movwf	vfpfcnvrt@c^0,c
  2607  000A72                     
  2608                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 795:             
      +                          return ctoa(fp, c);
  2609  000A72  C043  F01C         	movff	vfpfcnvrt@fp,ctoa@fp
  2610  000A76  C044  F01D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2611  000A7A  C05F  F01E         	movff	vfpfcnvrt@c,ctoa@c
  2612  000A7E  ECEC  F03E         	call	_ctoa	;wreg free
  2613  000A82  C01C  F043         	movff	?_ctoa,?_vfpfcnvrt
  2614  000A86  C01D  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2615  000A8A  EF36  F00D         	goto	l1091
  2616  000A8E                     l3747:
  2617  000A8E  FFFF               	dw	65535	; assembler added errata NOP
  2618                           
  2619                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 802:         if (
      +                          !strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi", ((s
      +                          izeof("hhi")/sizeof("hhi"[0]))-1))) {
  2620  000A90  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2621  000A94  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2622  000A98  CFDE F001          	movff	postinc2,strncmp@_l
  2623  000A9C  CFDD F002          	movff	postdec2,strncmp@_l+1
  2624  000AA0  0E5B               	movlw	low STR_8
  2625  000AA2  6E03               	movwf	strncmp@_r^0,c
  2626  000AA4  0E06               	movlw	high STR_8
  2627  000AA6  6E04               	movwf	(strncmp@_r+1)^0,c
  2628  000AA8  0E00               	movlw	0
  2629  000AAA  6E06               	movwf	(strncmp@n+1)^0,c
  2630  000AAC  0E03               	movlw	3
  2631  000AAE  6E05               	movwf	strncmp@n^0,c
  2632  000AB0  EC4F  F001         	call	_strncmp	;wreg free
  2633  000AB4  5001               	movf	?_strncmp^0,w,c
  2634  000AB6  1002               	iorwf	(?_strncmp+1)^0,w,c
  2635  000AB8  B4D8               	btfsc	status,2,c
  2636  000ABA  EF61  F005         	goto	u4451
  2637  000ABE  EF64  F005         	goto	u4450
  2638  000AC2                     u4451:
  2639  000AC2  FFFF               	dw	65535	; assembler added errata NOP
  2640  000AC4  EF81  F005         	goto	l3751
  2641  000AC8                     u4450:
  2642  000AC8  FFFF               	dw	65535	; assembler added errata NOP
  2643  000ACA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2644  000ACE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2645  000AD2  CFDE F001          	movff	postinc2,strncmp@_l
  2646  000AD6  CFDD F002          	movff	postdec2,strncmp@_l+1
  2647  000ADA  0E5F               	movlw	low STR_12
  2648  000ADC  6E03               	movwf	strncmp@_r^0,c
  2649  000ADE  0E06               	movlw	high STR_12
  2650  000AE0  6E04               	movwf	(strncmp@_r+1)^0,c
  2651  000AE2  0E00               	movlw	0
  2652  000AE4  6E06               	movwf	(strncmp@n+1)^0,c
  2653  000AE6  0E03               	movlw	3
  2654  000AE8  6E05               	movwf	strncmp@n^0,c
  2655  000AEA  EC4F  F001         	call	_strncmp	;wreg free
  2656  000AEE  5001               	movf	?_strncmp^0,w,c
  2657  000AF0  1002               	iorwf	(?_strncmp+1)^0,w,c
  2658  000AF2  A4D8               	btfss	status,2,c
  2659  000AF4  EF7E  F005         	goto	u4461
  2660  000AF8  EF81  F005         	goto	u4460
  2661  000AFC                     u4461:
  2662  000AFC  FFFF               	dw	65535	; assembler added errata NOP
  2663  000AFE  EFC3  F005         	goto	l3757
  2664  000B02                     u4460:
  2665  000B02                     l3751:
  2666  000B02  FFFF               	dw	65535	; assembler added errata NOP
  2667                           
  2668                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 803: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 805:             *fmt += ((si
      +                          zeof("hhd")/sizeof("hhd"[0]))-1);
  2669  000B04  0E03               	movlw	3
  2670  000B06  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2671  000B0A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2672  000B0E  26DE               	addwf	postinc2,f,c
  2673  000B10  0E00               	movlw	0
  2674  000B12  22DD               	addwfc	postdec2,f,c
  2675                           
  2676                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 806:             
      +                          ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2677  000B14  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2678  000B18  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2679  000B1C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2680  000B20  0E02               	movlw	2
  2681  000B22  26DE               	addwf	postinc2,f,c
  2682  000B24  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2683  000B28  0E00               	movlw	0
  2684  000B2A  22DD               	addwfc	postdec2,f,c
  2685  000B2C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2686  000B30  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2687  000B34  50DF               	movf	indf2,w,c
  2688  000B36  6E55               	movwf	vfpfcnvrt@ll^0,c
  2689  000B38  0E00               	movlw	0
  2690  000B3A  BE55               	btfsc	vfpfcnvrt@ll^0,7,c
  2691  000B3C  0EFF               	movlw	-1
  2692  000B3E  6E56               	movwf	(vfpfcnvrt@ll+1)^0,c
  2693  000B40  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  2694  000B42  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  2695  000B44  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  2696  000B46  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  2697  000B48  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  2698  000B4A  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  2699  000B4C                     l3753:
  2700  000B4C  FFFF               	dw	65535	; assembler added errata NOP
  2701                           
  2702                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 808:             
      +                          return dtoa(fp, ll);
  2703  000B4E  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2704  000B52  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2705  000B56  C055  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2706  000B5A  C056  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2707  000B5E  C057  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2708  000B62  C058  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2709  000B66  C059  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2710  000B6A  C05A  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2711  000B6E  C05B  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2712  000B72  C05C  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2713  000B76  EC52  F014         	call	_dtoa	;wreg free
  2714  000B7A  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  2715  000B7E  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2716  000B82  EF36  F00D         	goto	l1091
  2717  000B86                     l3757:
  2718  000B86  FFFF               	dw	65535	; assembler added errata NOP
  2719                           
  2720                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          !strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", ((sizeo
      +                          f("hi")/sizeof("hi"[0]))-1))) {
  2721  000B88  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2722  000B8C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2723  000B90  CFDE F001          	movff	postinc2,strncmp@_l
  2724  000B94  CFDD F002          	movff	postdec2,strncmp@_l+1
  2725  000B98  0E5C               	movlw	low (STR_8+1)
  2726  000B9A  6E03               	movwf	strncmp@_r^0,c
  2727  000B9C  0E06               	movlw	high (STR_8+1)
  2728  000B9E  6E04               	movwf	(strncmp@_r+1)^0,c
  2729  000BA0  0E00               	movlw	0
  2730  000BA2  6E06               	movwf	(strncmp@n+1)^0,c
  2731  000BA4  0E02               	movlw	2
  2732  000BA6  6E05               	movwf	strncmp@n^0,c
  2733  000BA8  EC4F  F001         	call	_strncmp	;wreg free
  2734  000BAC  5001               	movf	?_strncmp^0,w,c
  2735  000BAE  1002               	iorwf	(?_strncmp+1)^0,w,c
  2736  000BB0  B4D8               	btfsc	status,2,c
  2737  000BB2  EFDD  F005         	goto	u4471
  2738  000BB6  EFE0  F005         	goto	u4470
  2739  000BBA                     u4471:
  2740  000BBA  FFFF               	dw	65535	; assembler added errata NOP
  2741  000BBC  EFFD  F005         	goto	l3761
  2742  000BC0                     u4470:
  2743  000BC0  FFFF               	dw	65535	; assembler added errata NOP
  2744  000BC2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2745  000BC6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2746  000BCA  CFDE F001          	movff	postinc2,strncmp@_l
  2747  000BCE  CFDD F002          	movff	postdec2,strncmp@_l+1
  2748  000BD2  0E60               	movlw	low (STR_12+1)
  2749  000BD4  6E03               	movwf	strncmp@_r^0,c
  2750  000BD6  0E06               	movlw	high (STR_12+1)
  2751  000BD8  6E04               	movwf	(strncmp@_r+1)^0,c
  2752  000BDA  0E00               	movlw	0
  2753  000BDC  6E06               	movwf	(strncmp@n+1)^0,c
  2754  000BDE  0E02               	movlw	2
  2755  000BE0  6E05               	movwf	strncmp@n^0,c
  2756  000BE2  EC4F  F001         	call	_strncmp	;wreg free
  2757  000BE6  5001               	movf	?_strncmp^0,w,c
  2758  000BE8  1002               	iorwf	(?_strncmp+1)^0,w,c
  2759  000BEA  A4D8               	btfss	status,2,c
  2760  000BEC  EFFA  F005         	goto	u4481
  2761  000BF0  EFFD  F005         	goto	u4480
  2762  000BF4                     u4481:
  2763  000BF4  FFFF               	dw	65535	; assembler added errata NOP
  2764  000BF6  EF25  F006         	goto	l3767
  2765  000BFA                     u4480:
  2766  000BFA                     l3761:
  2767  000BFA  FFFF               	dw	65535	; assembler added errata NOP
  2768                           
  2769                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 815: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 817:             *fmt += ((si
      +                          zeof("hd")/sizeof("hd"[0]))-1);
  2770  000BFC  0E02               	movlw	2
  2771  000BFE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2772  000C02  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2773  000C06  26DE               	addwf	postinc2,f,c
  2774  000C08  0E00               	movlw	0
  2775  000C0A  22DD               	addwfc	postdec2,f,c
  2776                           
  2777                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 818:             
      +                          ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  2778  000C0C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2779  000C10  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2780  000C14  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2781  000C18  0E02               	movlw	2
  2782  000C1A  26DE               	addwf	postinc2,f,c
  2783  000C1C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2784  000C20  0E00               	movlw	0
  2785  000C22  22DD               	addwfc	postdec2,f,c
  2786  000C24  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2787  000C28  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2788  000C2C  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  2789  000C30  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  2790  000C34  0E00               	movlw	0
  2791  000C36  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2792  000C38  0EFF               	movlw	-1
  2793  000C3A  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  2794  000C3C  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  2795  000C3E  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  2796  000C40  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  2797  000C42  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  2798  000C44  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  2799  000C46  EFA6  F005         	goto	l3753
  2800  000C4A                     l3767:
  2801  000C4A  FFFF               	dw	65535	; assembler added errata NOP
  2802                           
  2803                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2804  000C4C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2805  000C50  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2806  000C54  CFDE FFF6          	movff	postinc2,tblptrl
  2807  000C58  CFDD FFF7          	movff	postdec2,tblptrh
  2808  000C5C                     	if	0	;tblptru may be non-zero
  2809  000C5C                     	endif
  2810  000C5C                     	if	0	;tblptru may be non-zero
  2811  000C5C                     	endif
  2812  000C5C  0008               	tblrd		*
  2813  000C5E  FFFF               	dw	65535	; errata NOP
  2814  000C60  50F5               	movf	tablat,w,c
  2815  000C62  0A64               	xorlw	100
  2816  000C64  B4D8               	btfsc	status,2,c
  2817  000C66  EF37  F006         	goto	u4491
  2818  000C6A  EF3A  F006         	goto	u4490
  2819  000C6E                     u4491:
  2820  000C6E  FFFF               	dw	65535	; assembler added errata NOP
  2821  000C70  EF4F  F006         	goto	l3771
  2822  000C74                     u4490:
  2823  000C74  FFFF               	dw	65535	; assembler added errata NOP
  2824  000C76  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2825  000C7A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2826  000C7E  CFDE FFF6          	movff	postinc2,tblptrl
  2827  000C82  CFDD FFF7          	movff	postdec2,tblptrh
  2828  000C86                     	if	0	;tblptru may be non-zero
  2829  000C86                     	endif
  2830  000C86                     	if	0	;tblptru may be non-zero
  2831  000C86                     	endif
  2832  000C86  0008               	tblrd		*
  2833  000C88  FFFF               	dw	65535	; errata NOP
  2834  000C8A  50F5               	movf	tablat,w,c
  2835  000C8C  0A69               	xorlw	105
  2836  000C8E  A4D8               	btfss	status,2,c
  2837  000C90  EF4C  F006         	goto	u4501
  2838  000C94  EF4F  F006         	goto	u4500
  2839  000C98                     u4501:
  2840  000C98  FFFF               	dw	65535	; assembler added errata NOP
  2841  000C9A  EF76  F006         	goto	l3777
  2842  000C9E                     u4500:
  2843  000C9E                     l3771:
  2844  000C9E  FFFF               	dw	65535	; assembler added errata NOP
  2845                           
  2846                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  2847  000CA0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2848  000CA4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2849  000CA8  2ADE               	incf	postinc2,f,c
  2850  000CAA  0E00               	movlw	0
  2851  000CAC  22DD               	addwfc	postdec2,f,c
  2852                           
  2853                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2854  000CAE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2855  000CB2  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2856  000CB6  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2857  000CBA  0E02               	movlw	2
  2858  000CBC  26DE               	addwf	postinc2,f,c
  2859  000CBE  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2860  000CC2  0E00               	movlw	0
  2861  000CC4  22DD               	addwfc	postdec2,f,c
  2862  000CC6  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2863  000CCA  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2864  000CCE  CFDE F055          	movff	postinc2,vfpfcnvrt@ll
  2865  000CD2  CFDD F056          	movff	postdec2,vfpfcnvrt@ll+1
  2866  000CD6  0E00               	movlw	0
  2867  000CD8  BE56               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2868  000CDA  0EFF               	movlw	-1
  2869  000CDC  6E57               	movwf	(vfpfcnvrt@ll+2)^0,c
  2870  000CDE  6E58               	movwf	(vfpfcnvrt@ll+3)^0,c
  2871  000CE0  6E59               	movwf	(vfpfcnvrt@ll+4)^0,c
  2872  000CE2  6E5A               	movwf	(vfpfcnvrt@ll+5)^0,c
  2873  000CE4  6E5B               	movwf	(vfpfcnvrt@ll+6)^0,c
  2874  000CE6  6E5C               	movwf	(vfpfcnvrt@ll+7)^0,c
  2875  000CE8  EFA6  F005         	goto	l3753
  2876  000CEC                     l3777:
  2877  000CEC  FFFF               	dw	65535	; assembler added errata NOP
  2878                           
  2879                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 883:         if (
      +                          !strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", ((sizeo
      +                          f("zi")/sizeof("zi"[0]))-1))) {
  2880  000CEE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2881  000CF2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2882  000CF6  CFDE F001          	movff	postinc2,strncmp@_l
  2883  000CFA  CFDD F002          	movff	postdec2,strncmp@_l+1
  2884  000CFE  0E76               	movlw	low STR_26
  2885  000D00  6E03               	movwf	strncmp@_r^0,c
  2886  000D02  0E06               	movlw	high STR_26
  2887  000D04  6E04               	movwf	(strncmp@_r+1)^0,c
  2888  000D06  0E00               	movlw	0
  2889  000D08  6E06               	movwf	(strncmp@n+1)^0,c
  2890  000D0A  0E02               	movlw	2
  2891  000D0C  6E05               	movwf	strncmp@n^0,c
  2892  000D0E  EC4F  F001         	call	_strncmp	;wreg free
  2893  000D12  5001               	movf	?_strncmp^0,w,c
  2894  000D14  1002               	iorwf	(?_strncmp+1)^0,w,c
  2895  000D16  B4D8               	btfsc	status,2,c
  2896  000D18  EF90  F006         	goto	u4511
  2897  000D1C  EF93  F006         	goto	u4510
  2898  000D20                     u4511:
  2899  000D20  FFFF               	dw	65535	; assembler added errata NOP
  2900  000D22  EFB0  F006         	goto	l3781
  2901  000D26                     u4510:
  2902  000D26  FFFF               	dw	65535	; assembler added errata NOP
  2903  000D28  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2904  000D2C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2905  000D30  CFDE F001          	movff	postinc2,strncmp@_l
  2906  000D34  CFDD F002          	movff	postdec2,strncmp@_l+1
  2907  000D38  0E79               	movlw	low STR_30
  2908  000D3A  6E03               	movwf	strncmp@_r^0,c
  2909  000D3C  0E06               	movlw	high STR_30
  2910  000D3E  6E04               	movwf	(strncmp@_r+1)^0,c
  2911  000D40  0E00               	movlw	0
  2912  000D42  6E06               	movwf	(strncmp@n+1)^0,c
  2913  000D44  0E02               	movlw	2
  2914  000D46  6E05               	movwf	strncmp@n^0,c
  2915  000D48  EC4F  F001         	call	_strncmp	;wreg free
  2916  000D4C  5001               	movf	?_strncmp^0,w,c
  2917  000D4E  1002               	iorwf	(?_strncmp+1)^0,w,c
  2918  000D50  A4D8               	btfss	status,2,c
  2919  000D52  EFAD  F006         	goto	u4521
  2920  000D56  EFB0  F006         	goto	u4520
  2921  000D5A                     u4521:
  2922  000D5A  FFFF               	dw	65535	; assembler added errata NOP
  2923  000D5C  EFD9  F006         	goto	l3787
  2924  000D60                     u4520:
  2925  000D60                     l3781:
  2926  000D60  FFFF               	dw	65535	; assembler added errata NOP
  2927                           
  2928                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 884: ;C:\Program 
      +                          Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 886:             *fmt += ((si
      +                          zeof("zd")/sizeof("zd"[0]))-1);
  2929  000D62  0E02               	movlw	2
  2930  000D64  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2931  000D68  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2932  000D6C  26DE               	addwf	postinc2,f,c
  2933  000D6E  0E00               	movlw	0
  2934  000D70  22DD               	addwfc	postdec2,f,c
  2935                           
  2936                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 887:             
      +                          ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  2937  000D72  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2938  000D76  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2939  000D7A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2940  000D7E  0E02               	movlw	2
  2941  000D80  26DE               	addwf	postinc2,f,c
  2942  000D82  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2943  000D86  0E00               	movlw	0
  2944  000D88  22DD               	addwfc	postdec2,f,c
  2945  000D8A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2946  000D8E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2947  000D92  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2948  000D96  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2949  000D9A  C04B  F055         	movff	??_vfpfcnvrt+2,vfpfcnvrt@ll
  2950  000D9E  C04C  F056         	movff	??_vfpfcnvrt+3,vfpfcnvrt@ll+1
  2951  000DA2  6A57               	clrf	(vfpfcnvrt@ll+2)^0,c
  2952  000DA4  6A58               	clrf	(vfpfcnvrt@ll+3)^0,c
  2953  000DA6  6A59               	clrf	(vfpfcnvrt@ll+4)^0,c
  2954  000DA8  6A5A               	clrf	(vfpfcnvrt@ll+5)^0,c
  2955  000DAA  6A5B               	clrf	(vfpfcnvrt@ll+6)^0,c
  2956  000DAC  6A5C               	clrf	(vfpfcnvrt@ll+7)^0,c
  2957  000DAE  EFA6  F005         	goto	l3753
  2958  000DB2                     l3787:
  2959  000DB2  FFFF               	dw	65535	; assembler added errata NOP
  2960                           
  2961                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 969:         if (
      +                          !strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
  2962  000DB4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2963  000DB8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2964  000DBC  CFDE F001          	movff	postinc2,strncmp@_l
  2965  000DC0  CFDD F002          	movff	postdec2,strncmp@_l+1
  2966  000DC4  0E67               	movlw	low STR_35
  2967  000DC6  6E03               	movwf	strncmp@_r^0,c
  2968  000DC8  0E06               	movlw	high STR_35
  2969  000DCA  6E04               	movwf	(strncmp@_r+1)^0,c
  2970  000DCC  0E00               	movlw	0
  2971  000DCE  6E06               	movwf	(strncmp@n+1)^0,c
  2972  000DD0  0E03               	movlw	3
  2973  000DD2  6E05               	movwf	strncmp@n^0,c
  2974  000DD4  EC4F  F001         	call	_strncmp	;wreg free
  2975  000DD8  5001               	movf	?_strncmp^0,w,c
  2976  000DDA  1002               	iorwf	(?_strncmp+1)^0,w,c
  2977  000DDC  A4D8               	btfss	status,2,c
  2978  000DDE  EFF3  F006         	goto	u4531
  2979  000DE2  EFF6  F006         	goto	u4530
  2980  000DE6                     u4531:
  2981  000DE6  FFFF               	dw	65535	; assembler added errata NOP
  2982  000DE8  EF37  F007         	goto	l3795
  2983  000DEC                     u4530:
  2984  000DEC  FFFF               	dw	65535	; assembler added errata NOP
  2985  000DEE                     
  2986                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 971:             
      +                          *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
  2987  000DEE  0E03               	movlw	3
  2988  000DF0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2989  000DF4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2990  000DF8  26DE               	addwf	postinc2,f,c
  2991  000DFA  0E00               	movlw	0
  2992  000DFC  22DD               	addwfc	postdec2,f,c
  2993                           
  2994                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 972:             
      +                          llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2995  000DFE  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2996  000E02  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2997  000E06  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2998  000E0A  0E02               	movlw	2
  2999  000E0C  26DE               	addwf	postinc2,f,c
  3000  000E0E  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3001  000E12  0E00               	movlw	0
  3002  000E14  22DD               	addwfc	postdec2,f,c
  3003  000E16  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3004  000E1A  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3005  000E1E  50DF               	movf	indf2,w,c
  3006  000E20  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3007  000E22  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  3008  000E24  6E60               	movwf	vfpfcnvrt@llu^0,c
  3009  000E26  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  3010  000E28  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3011  000E2A  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3012  000E2C  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3013  000E2E  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3014  000E30  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3015  000E32  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3016  000E34                     l3791:
  3017  000E34  FFFF               	dw	65535	; assembler added errata NOP
  3018                           
  3019                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 974:             
      +                          return otoa(fp, llu);
  3020  000E36  C043  F01C         	movff	vfpfcnvrt@fp,otoa@fp
  3021  000E3A  C044  F01D         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  3022  000E3E  C060  F01E         	movff	vfpfcnvrt@llu,otoa@d
  3023  000E42  C061  F01F         	movff	vfpfcnvrt@llu+1,otoa@d+1
  3024  000E46  C062  F020         	movff	vfpfcnvrt@llu+2,otoa@d+2
  3025  000E4A  C063  F021         	movff	vfpfcnvrt@llu+3,otoa@d+3
  3026  000E4E  C064  F022         	movff	vfpfcnvrt@llu+4,otoa@d+4
  3027  000E52  C065  F023         	movff	vfpfcnvrt@llu+5,otoa@d+5
  3028  000E56  C066  F024         	movff	vfpfcnvrt@llu+6,otoa@d+6
  3029  000E5A  C067  F025         	movff	vfpfcnvrt@llu+7,otoa@d+7
  3030  000E5E  EC9A  F018         	call	_otoa	;wreg free
  3031  000E62  C01C  F043         	movff	?_otoa,?_vfpfcnvrt
  3032  000E66  C01D  F044         	movff	?_otoa+1,?_vfpfcnvrt+1
  3033  000E6A  EF36  F00D         	goto	l1091
  3034  000E6E                     l3795:
  3035  000E6E  FFFF               	dw	65535	; assembler added errata NOP
  3036                           
  3037                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 980:         if (
      +                          !strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
  3038  000E70  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3039  000E74  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3040  000E78  CFDE F001          	movff	postinc2,strncmp@_l
  3041  000E7C  CFDD F002          	movff	postdec2,strncmp@_l+1
  3042  000E80  0E68               	movlw	low (STR_35+1)
  3043  000E82  6E03               	movwf	strncmp@_r^0,c
  3044  000E84  0E06               	movlw	high (STR_35+1)
  3045  000E86  6E04               	movwf	(strncmp@_r+1)^0,c
  3046  000E88  0E00               	movlw	0
  3047  000E8A  6E06               	movwf	(strncmp@n+1)^0,c
  3048  000E8C  0E02               	movlw	2
  3049  000E8E  6E05               	movwf	strncmp@n^0,c
  3050  000E90  EC4F  F001         	call	_strncmp	;wreg free
  3051  000E94  5001               	movf	?_strncmp^0,w,c
  3052  000E96  1002               	iorwf	(?_strncmp+1)^0,w,c
  3053  000E98  A4D8               	btfss	status,2,c
  3054  000E9A  EF51  F007         	goto	u4541
  3055  000E9E  EF54  F007         	goto	u4540
  3056  000EA2                     u4541:
  3057  000EA2  FFFF               	dw	65535	; assembler added errata NOP
  3058  000EA4  EF7D  F007         	goto	l3803
  3059  000EA8                     u4540:
  3060  000EA8  FFFF               	dw	65535	; assembler added errata NOP
  3061  000EAA                     
  3062                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 982:             
      +                          *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
  3063  000EAA  0E02               	movlw	2
  3064  000EAC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3065  000EB0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3066  000EB4  26DE               	addwf	postinc2,f,c
  3067  000EB6  0E00               	movlw	0
  3068  000EB8  22DD               	addwfc	postdec2,f,c
  3069                           
  3070                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 983:             
      +                          llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  3071  000EBA  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3072  000EBE  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3073  000EC2  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3074  000EC6  0E02               	movlw	2
  3075  000EC8  26DE               	addwf	postinc2,f,c
  3076  000ECA  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3077  000ECE  0E00               	movlw	0
  3078  000ED0  22DD               	addwfc	postdec2,f,c
  3079  000ED2  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3080  000ED6  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3081  000EDA  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3082  000EDE  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3083  000EE2  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3084  000EE6  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3085  000EEA  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3086  000EEC  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3087  000EEE  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3088  000EF0  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3089  000EF2  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3090  000EF4  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3091  000EF6  EF1A  F007         	goto	l3791
  3092  000EFA                     l3803:
  3093  000EFA  FFFF               	dw	65535	; assembler added errata NOP
  3094                           
  3095                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 990:         if (
      +                          *fmt[0] == 'o') {
  3096  000EFC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3097  000F00  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3098  000F04  CFDE FFF6          	movff	postinc2,tblptrl
  3099  000F08  CFDD FFF7          	movff	postdec2,tblptrh
  3100  000F0C                     	if	0	;tblptru may be non-zero
  3101  000F0C                     	endif
  3102  000F0C                     	if	0	;tblptru may be non-zero
  3103  000F0C                     	endif
  3104  000F0C  0008               	tblrd		*
  3105  000F0E  FFFF               	dw	65535	; errata NOP
  3106  000F10  50F5               	movf	tablat,w,c
  3107  000F12  0A6F               	xorlw	111
  3108  000F14  A4D8               	btfss	status,2,c
  3109  000F16  EF8F  F007         	goto	u4551
  3110  000F1A  EF92  F007         	goto	u4550
  3111  000F1E                     u4551:
  3112  000F1E  FFFF               	dw	65535	; assembler added errata NOP
  3113  000F20  EFBA  F007         	goto	l3811
  3114  000F24                     u4550:
  3115  000F24  FFFF               	dw	65535	; assembler added errata NOP
  3116  000F26                     
  3117                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 992:             
      +                          ++*fmt;
  3118  000F26  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3119  000F2A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3120  000F2E  2ADE               	incf	postinc2,f,c
  3121  000F30  0E00               	movlw	0
  3122  000F32  22DD               	addwfc	postdec2,f,c
  3123                           
  3124                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 993:             
      +                          llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int
      +                          )0));
  3125  000F34  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3126  000F38  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3127  000F3C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3128  000F40  0E02               	movlw	2
  3129  000F42  26DE               	addwf	postinc2,f,c
  3130  000F44  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3131  000F48  0E00               	movlw	0
  3132  000F4A  22DD               	addwfc	postdec2,f,c
  3133  000F4C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3134  000F50  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3135  000F54  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3136  000F58  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3137  000F5C  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3138  000F60  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3139  000F64  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3140  000F66  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3141  000F68  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3142  000F6A  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3143  000F6C  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3144  000F6E  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3145  000F70  EF1A  F007         	goto	l3791
  3146  000F74                     l3811:
  3147  000F74  FFFF               	dw	65535	; assembler added errata NOP
  3148                           
  3149                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1044:         if 
      +                          (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
  3150  000F76  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3151  000F7A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3152  000F7E  CFDE F001          	movff	postinc2,strncmp@_l
  3153  000F82  CFDD F002          	movff	postdec2,strncmp@_l+1
  3154  000F86  0E7F               	movlw	low STR_45
  3155  000F88  6E03               	movwf	strncmp@_r^0,c
  3156  000F8A  0E06               	movlw	high STR_45
  3157  000F8C  6E04               	movwf	(strncmp@_r+1)^0,c
  3158  000F8E  0E00               	movlw	0
  3159  000F90  6E06               	movwf	(strncmp@n+1)^0,c
  3160  000F92  0E02               	movlw	2
  3161  000F94  6E05               	movwf	strncmp@n^0,c
  3162  000F96  EC4F  F001         	call	_strncmp	;wreg free
  3163  000F9A  5001               	movf	?_strncmp^0,w,c
  3164  000F9C  1002               	iorwf	(?_strncmp+1)^0,w,c
  3165  000F9E  A4D8               	btfss	status,2,c
  3166  000FA0  EFD4  F007         	goto	u4561
  3167  000FA4  EFD7  F007         	goto	u4560
  3168  000FA8                     u4561:
  3169  000FA8  FFFF               	dw	65535	; assembler added errata NOP
  3170  000FAA  EF00  F008         	goto	l3819
  3171  000FAE                     u4560:
  3172  000FAE  FFFF               	dw	65535	; assembler added errata NOP
  3173  000FB0                     
  3174                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1046:            
      +                           *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
  3175  000FB0  0E02               	movlw	2
  3176  000FB2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3177  000FB6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3178  000FBA  26DE               	addwf	postinc2,f,c
  3179  000FBC  0E00               	movlw	0
  3180  000FBE  22DD               	addwfc	postdec2,f,c
  3181                           
  3182                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1047:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3183  000FC0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3184  000FC4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3185  000FC8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3186  000FCC  0E02               	movlw	2
  3187  000FCE  26DE               	addwf	postinc2,f,c
  3188  000FD0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3189  000FD4  0E00               	movlw	0
  3190  000FD6  22DD               	addwfc	postdec2,f,c
  3191  000FD8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3192  000FDC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3193  000FE0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3194  000FE4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3195  000FE8  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3196  000FEC  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3197  000FF0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3198  000FF2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3199  000FF4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3200  000FF6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3201  000FF8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3202  000FFA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3203  000FFC  EF1A  F007         	goto	l3791
  3204  001000                     l3819:
  3205  001000  FFFF               	dw	65535	; assembler added errata NOP
  3206                           
  3207                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1058:         if 
      +                          (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
  3208  001002  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3209  001006  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3210  00100A  CFDE F001          	movff	postinc2,strncmp@_l
  3211  00100E  CFDD F002          	movff	postdec2,strncmp@_l+1
  3212  001012  0E63               	movlw	low STR_50
  3213  001014  6E03               	movwf	strncmp@_r^0,c
  3214  001016  0E06               	movlw	high STR_50
  3215  001018  6E04               	movwf	(strncmp@_r+1)^0,c
  3216  00101A  0E00               	movlw	0
  3217  00101C  6E06               	movwf	(strncmp@n+1)^0,c
  3218  00101E  0E03               	movlw	3
  3219  001020  6E05               	movwf	strncmp@n^0,c
  3220  001022  EC4F  F001         	call	_strncmp	;wreg free
  3221  001026  5001               	movf	?_strncmp^0,w,c
  3222  001028  1002               	iorwf	(?_strncmp+1)^0,w,c
  3223  00102A  A4D8               	btfss	status,2,c
  3224  00102C  EF1A  F008         	goto	u4571
  3225  001030  EF1D  F008         	goto	u4570
  3226  001034                     u4571:
  3227  001034  FFFF               	dw	65535	; assembler added errata NOP
  3228  001036  EF53  F008         	goto	l3829
  3229  00103A                     u4570:
  3230  00103A  FFFF               	dw	65535	; assembler added errata NOP
  3231  00103C                     
  3232                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1060:            
      +                           *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
  3233  00103C  0E03               	movlw	3
  3234  00103E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3235  001042  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3236  001046  26DE               	addwf	postinc2,f,c
  3237  001048  0E00               	movlw	0
  3238  00104A  22DD               	addwfc	postdec2,f,c
  3239                           
  3240                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1061:            
      +                           vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
  3241  00104C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3242  001050  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3243  001054  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3244  001058  0E02               	movlw	2
  3245  00105A  26DE               	addwf	postinc2,f,c
  3246  00105C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3247  001060  0E00               	movlw	0
  3248  001062  22DD               	addwfc	postdec2,f,c
  3249  001064  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3250  001068  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3251  00106C  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  3252  001070  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  3253  001074                     
  3254                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1062:            
      +                           *(char *)vp = (char)nout;
  3255  001074  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  3256  001078  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  3257  00107C  6AF8               	clrf	tblptru,c
  3258  00107E  0E05               	movlw	(high __ramtop+-1)
  3259  001080  64F7               	cpfsgt	tblptrh,c
  3260  001082  D004               	bra	u4587
  3261  001084  C084  FFF5         	movff	_nout,tablat
  3262  001088  000C               	tblwt		*
  3263  00108A  D006               	bra	u4580
  3264  00108C                     u4587:
  3265  00108C  CFF6 FFE1          	movff	tblptrl,fsr1l
  3266  001090  CFF7 FFE2          	movff	tblptrh,fsr1h
  3267  001094  C084  FFE7         	movff	_nout,indf1
  3268  001098                     u4580:
  3269  001098                     l3825:
  3270  001098  FFFF               	dw	65535	; assembler added errata NOP
  3271                           
  3272                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1063:            
      +                           return 0;
  3273  00109A  0E00               	movlw	0
  3274  00109C  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  3275  00109E  0E00               	movlw	0
  3276  0010A0  6E43               	movwf	?_vfpfcnvrt^0,c
  3277  0010A2  EF36  F00D         	goto	l1091
  3278  0010A6                     l3829:
  3279  0010A6  FFFF               	dw	65535	; assembler added errata NOP
  3280                           
  3281                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1068:         if 
      +                          (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
  3282  0010A8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3283  0010AC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3284  0010B0  CFDE F001          	movff	postinc2,strncmp@_l
  3285  0010B4  CFDD F002          	movff	postdec2,strncmp@_l+1
  3286  0010B8  0E64               	movlw	low (STR_50+1)
  3287  0010BA  6E03               	movwf	strncmp@_r^0,c
  3288  0010BC  0E06               	movlw	high (STR_50+1)
  3289  0010BE  6E04               	movwf	(strncmp@_r+1)^0,c
  3290  0010C0  0E00               	movlw	0
  3291  0010C2  6E06               	movwf	(strncmp@n+1)^0,c
  3292  0010C4  0E02               	movlw	2
  3293  0010C6  6E05               	movwf	strncmp@n^0,c
  3294  0010C8  EC4F  F001         	call	_strncmp	;wreg free
  3295  0010CC  5001               	movf	?_strncmp^0,w,c
  3296  0010CE  1002               	iorwf	(?_strncmp+1)^0,w,c
  3297  0010D0  A4D8               	btfss	status,2,c
  3298  0010D2  EF6D  F008         	goto	u4591
  3299  0010D6  EF70  F008         	goto	u4590
  3300  0010DA                     u4591:
  3301  0010DA  FFFF               	dw	65535	; assembler added errata NOP
  3302  0010DC  EFA6  F008         	goto	l3839
  3303  0010E0                     u4590:
  3304  0010E0  FFFF               	dw	65535	; assembler added errata NOP
  3305  0010E2                     
  3306                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1070:            
      +                           *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
  3307  0010E2  0E02               	movlw	2
  3308  0010E4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3309  0010E8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3310  0010EC  26DE               	addwf	postinc2,f,c
  3311  0010EE  0E00               	movlw	0
  3312  0010F0  22DD               	addwfc	postdec2,f,c
  3313                           
  3314                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1071:            
      +                           vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
  3315  0010F2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3316  0010F6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3317  0010FA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3318  0010FE  0E02               	movlw	2
  3319  001100  26DE               	addwf	postinc2,f,c
  3320  001102  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3321  001106  0E00               	movlw	0
  3322  001108  22DD               	addwfc	postdec2,f,c
  3323  00110A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3324  00110E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3325  001112  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  3326  001116  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  3327  00111A                     
  3328                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1072:            
      +                           *(short *)vp = (short)nout;
  3329  00111A  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  3330  00111E  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  3331  001122  6AF8               	clrf	tblptru,c
  3332  001124  0E05               	movlw	(high __ramtop+-1)
  3333  001126  64F7               	cpfsgt	tblptrh,c
  3334  001128  D007               	bra	u4607
  3335  00112A  C084  FFF5         	movff	_nout,tablat
  3336  00112E  000D               	tblwt		*+
  3337  001130  C085  FFF5         	movff	_nout+1,tablat
  3338  001134  000C               	tblwt		*
  3339  001136  D008               	bra	u4600
  3340  001138                     u4607:
  3341  001138  CFF6 FFE1          	movff	tblptrl,fsr1l
  3342  00113C  CFF7 FFE2          	movff	tblptrh,fsr1h
  3343  001140  C084  FFE6         	movff	_nout,postinc1
  3344  001144  C085  FFE7         	movff	_nout+1,indf1
  3345  001148                     u4600:
  3346  001148  EF4C  F008         	goto	l3825
  3347  00114C                     l3839:
  3348  00114C  FFFF               	dw	65535	; assembler added errata NOP
  3349                           
  3350                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1077:         if 
      +                          (*fmt[0] == 'n') {
  3351  00114E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3352  001152  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3353  001156  CFDE FFF6          	movff	postinc2,tblptrl
  3354  00115A  CFDD FFF7          	movff	postdec2,tblptrh
  3355  00115E                     	if	0	;tblptru may be non-zero
  3356  00115E                     	endif
  3357  00115E                     	if	0	;tblptru may be non-zero
  3358  00115E                     	endif
  3359  00115E  0008               	tblrd		*
  3360  001160  FFFF               	dw	65535	; errata NOP
  3361  001162  50F5               	movf	tablat,w,c
  3362  001164  0A6E               	xorlw	110
  3363  001166  A4D8               	btfss	status,2,c
  3364  001168  EFB8  F008         	goto	u4611
  3365  00116C  EFBB  F008         	goto	u4610
  3366  001170                     u4611:
  3367  001170  FFFF               	dw	65535	; assembler added errata NOP
  3368  001172  EFF0  F008         	goto	l3849
  3369  001176                     u4610:
  3370  001176  FFFF               	dw	65535	; assembler added errata NOP
  3371  001178                     
  3372                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1078:            
      +                           ++*fmt;
  3373  001178  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3374  00117C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3375  001180  2ADE               	incf	postinc2,f,c
  3376  001182  0E00               	movlw	0
  3377  001184  22DD               	addwfc	postdec2,f,c
  3378                           
  3379                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1079:            
      +                           vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
  3380  001186  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3381  00118A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3382  00118E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3383  001192  0E02               	movlw	2
  3384  001194  26DE               	addwf	postinc2,f,c
  3385  001196  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3386  00119A  0E00               	movlw	0
  3387  00119C  22DD               	addwfc	postdec2,f,c
  3388  00119E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3389  0011A2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3390  0011A6  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  3391  0011AA  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  3392  0011AE                     
  3393                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1080:            
      +                           *(int *)vp = nout;
  3394  0011AE  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  3395  0011B2  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  3396  0011B6  6AF8               	clrf	tblptru,c
  3397  0011B8  0E05               	movlw	(high __ramtop+-1)
  3398  0011BA  64F7               	cpfsgt	tblptrh,c
  3399  0011BC  D007               	bra	u4627
  3400  0011BE  C084  FFF5         	movff	_nout,tablat
  3401  0011C2  000D               	tblwt		*+
  3402  0011C4  C085  FFF5         	movff	_nout+1,tablat
  3403  0011C8  000C               	tblwt		*
  3404  0011CA  D008               	bra	u4620
  3405  0011CC                     u4627:
  3406  0011CC  CFF6 FFE1          	movff	tblptrl,fsr1l
  3407  0011D0  CFF7 FFE2          	movff	tblptrh,fsr1h
  3408  0011D4  C084  FFE6         	movff	_nout,postinc1
  3409  0011D8  C085  FFE7         	movff	_nout+1,indf1
  3410  0011DC                     u4620:
  3411  0011DC  EF4C  F008         	goto	l3825
  3412  0011E0                     l3849:
  3413  0011E0  FFFF               	dw	65535	; assembler added errata NOP
  3414                           
  3415                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1125:         if 
      +                          (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
  3416  0011E2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3417  0011E6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3418  0011EA  CFDE F001          	movff	postinc2,strncmp@_l
  3419  0011EE  CFDD F002          	movff	postdec2,strncmp@_l+1
  3420  0011F2  0E7C               	movlw	low STR_60
  3421  0011F4  6E03               	movwf	strncmp@_r^0,c
  3422  0011F6  0E06               	movlw	high STR_60
  3423  0011F8  6E04               	movwf	(strncmp@_r+1)^0,c
  3424  0011FA  0E00               	movlw	0
  3425  0011FC  6E06               	movwf	(strncmp@n+1)^0,c
  3426  0011FE  0E02               	movlw	2
  3427  001200  6E05               	movwf	strncmp@n^0,c
  3428  001202  EC4F  F001         	call	_strncmp	;wreg free
  3429  001206  5001               	movf	?_strncmp^0,w,c
  3430  001208  1002               	iorwf	(?_strncmp+1)^0,w,c
  3431  00120A  A4D8               	btfss	status,2,c
  3432  00120C  EF0A  F009         	goto	u4631
  3433  001210  EF0D  F009         	goto	u4630
  3434  001214                     u4631:
  3435  001214  FFFF               	dw	65535	; assembler added errata NOP
  3436  001216  EF43  F009         	goto	l3859
  3437  00121A                     u4630:
  3438  00121A  FFFF               	dw	65535	; assembler added errata NOP
  3439  00121C                     
  3440                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1127:            
      +                           *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
  3441  00121C  0E02               	movlw	2
  3442  00121E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3443  001222  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3444  001226  26DE               	addwf	postinc2,f,c
  3445  001228  0E00               	movlw	0
  3446  00122A  22DD               	addwfc	postdec2,f,c
  3447                           
  3448                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1128:            
      +                           vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
  3449  00122C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3450  001230  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3451  001234  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3452  001238  0E02               	movlw	2
  3453  00123A  26DE               	addwf	postinc2,f,c
  3454  00123C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3455  001240  0E00               	movlw	0
  3456  001242  22DD               	addwfc	postdec2,f,c
  3457  001244  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3458  001248  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3459  00124C  CFDE F05D          	movff	postinc2,vfpfcnvrt@vp
  3460  001250  CFDD F05E          	movff	postdec2,vfpfcnvrt@vp+1
  3461  001254                     
  3462                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1129:            
      +                           *(size_t *)vp = (size_t)nout;
  3463  001254  C05D  FFF6         	movff	vfpfcnvrt@vp,tblptrl
  3464  001258  C05E  FFF7         	movff	vfpfcnvrt@vp+1,tblptrh
  3465  00125C  6AF8               	clrf	tblptru,c
  3466  00125E  0E05               	movlw	(high __ramtop+-1)
  3467  001260  64F7               	cpfsgt	tblptrh,c
  3468  001262  D007               	bra	u4647
  3469  001264  C084  FFF5         	movff	_nout,tablat
  3470  001268  000D               	tblwt		*+
  3471  00126A  C085  FFF5         	movff	_nout+1,tablat
  3472  00126E  000C               	tblwt		*
  3473  001270  D008               	bra	u4640
  3474  001272                     u4647:
  3475  001272  CFF6 FFE1          	movff	tblptrl,fsr1l
  3476  001276  CFF7 FFE2          	movff	tblptrh,fsr1h
  3477  00127A  C084  FFE6         	movff	_nout,postinc1
  3478  00127E  C085  FFE7         	movff	_nout+1,indf1
  3479  001282                     u4640:
  3480  001282  EF4C  F008         	goto	l3825
  3481  001286                     l3859:
  3482  001286  FFFF               	dw	65535	; assembler added errata NOP
  3483                           
  3484                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1138:         if 
      +                          (*fmt[0] == 'p') {
  3485  001288  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3486  00128C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3487  001290  CFDE FFF6          	movff	postinc2,tblptrl
  3488  001294  CFDD FFF7          	movff	postdec2,tblptrh
  3489  001298                     	if	0	;tblptru may be non-zero
  3490  001298                     	endif
  3491  001298                     	if	0	;tblptru may be non-zero
  3492  001298                     	endif
  3493  001298  0008               	tblrd		*
  3494  00129A  FFFF               	dw	65535	; errata NOP
  3495  00129C  50F5               	movf	tablat,w,c
  3496  00129E  0A70               	xorlw	112
  3497  0012A0  A4D8               	btfss	status,2,c
  3498  0012A2  EF55  F009         	goto	u4651
  3499  0012A6  EF58  F009         	goto	u4650
  3500  0012AA                     u4651:
  3501  0012AA  FFFF               	dw	65535	; assembler added errata NOP
  3502  0012AC  EF9C  F009         	goto	l3867
  3503  0012B0                     u4650:
  3504  0012B0  FFFF               	dw	65535	; assembler added errata NOP
  3505  0012B2                     
  3506                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1140:            
      +                           ++*fmt;
  3507  0012B2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3508  0012B6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3509  0012BA  2ADE               	incf	postinc2,f,c
  3510  0012BC  0E00               	movlw	0
  3511  0012BE  22DD               	addwfc	postdec2,f,c
  3512                           
  3513                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1141:            
      +                           llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0));
  3514  0012C0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3515  0012C4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3516  0012C8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3517  0012CC  0E02               	movlw	2
  3518  0012CE  26DE               	addwf	postinc2,f,c
  3519  0012D0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3520  0012D4  0E00               	movlw	0
  3521  0012D6  22DD               	addwfc	postdec2,f,c
  3522  0012D8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3523  0012DC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3524  0012E0  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3525  0012E4  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3526  0012E8  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3527  0012EC  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3528  0012F0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3529  0012F2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3530  0012F4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3531  0012F6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3532  0012F8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3533  0012FA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3534  0012FC                     
  3535                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1143:            
      +                           return xtoa(fp, llu, 'x');
  3536  0012FC  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  3537  001300  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3538  001304  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  3539  001308  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3540  00130C  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3541  001310  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3542  001314  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3543  001318  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3544  00131C  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3545  001320  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3546  001324  0E78               	movlw	120
  3547  001326  6E26               	movwf	xtoa@x^0,c
  3548  001328  ECEC  F015         	call	_xtoa	;wreg free
  3549  00132C  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  3550  001330  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3551  001334  EF36  F00D         	goto	l1091
  3552  001338                     l3867:
  3553  001338  FFFF               	dw	65535	; assembler added errata NOP
  3554                           
  3555                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1149:         if 
      +                          (*fmt[0] == 's') {
  3556  00133A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3557  00133E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3558  001342  CFDE FFF6          	movff	postinc2,tblptrl
  3559  001346  CFDD FFF7          	movff	postdec2,tblptrh
  3560  00134A                     	if	0	;tblptru may be non-zero
  3561  00134A                     	endif
  3562  00134A                     	if	0	;tblptru may be non-zero
  3563  00134A                     	endif
  3564  00134A  0008               	tblrd		*
  3565  00134C  FFFF               	dw	65535	; errata NOP
  3566  00134E  50F5               	movf	tablat,w,c
  3567  001350  0A73               	xorlw	115
  3568  001352  A4D8               	btfss	status,2,c
  3569  001354  EFAE  F009         	goto	u4661
  3570  001358  EFB1  F009         	goto	u4660
  3571  00135C                     u4661:
  3572  00135C  FFFF               	dw	65535	; assembler added errata NOP
  3573  00135E  EFDD  F009         	goto	l3875
  3574  001362                     u4660:
  3575  001362  FFFF               	dw	65535	; assembler added errata NOP
  3576  001364                     
  3577                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1151:            
      +                           ++*fmt;
  3578  001364  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3579  001368  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3580  00136C  2ADE               	incf	postinc2,f,c
  3581  00136E  0E00               	movlw	0
  3582  001370  22DD               	addwfc	postdec2,f,c
  3583                           
  3584                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1152:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  3585  001372  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3586  001376  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3587  00137A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3588  00137E  0E02               	movlw	2
  3589  001380  26DE               	addwf	postinc2,f,c
  3590  001382  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3591  001386  0E00               	movlw	0
  3592  001388  22DD               	addwfc	postdec2,f,c
  3593  00138A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3594  00138E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3595  001392  CFDE F04D          	movff	postinc2,vfpfcnvrt@cp
  3596  001396  CFDD F04E          	movff	postdec2,vfpfcnvrt@cp+1
  3597  00139A                     
  3598                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1154:            
      +                           return stoa(fp, cp);
  3599  00139A  C043  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  3600  00139E  C044  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  3601  0013A2  C04D  F00C         	movff	vfpfcnvrt@cp,stoa@s
  3602  0013A6  C04E  F00D         	movff	vfpfcnvrt@cp+1,stoa@s+1
  3603  0013AA  ECAD  F019         	call	_stoa	;wreg free
  3604  0013AE  C00A  F043         	movff	?_stoa,?_vfpfcnvrt
  3605  0013B2  C00B  F044         	movff	?_stoa+1,?_vfpfcnvrt+1
  3606  0013B6  EF36  F00D         	goto	l1091
  3607  0013BA                     l3875:
  3608  0013BA  FFFF               	dw	65535	; assembler added errata NOP
  3609                           
  3610                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1161:         if 
      +                          (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
  3611  0013BC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3612  0013C0  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3613  0013C4  CFDE F001          	movff	postinc2,strncmp@_l
  3614  0013C8  CFDD F002          	movff	postdec2,strncmp@_l+1
  3615  0013CC  0E6B               	movlw	low STR_65
  3616  0013CE  6E03               	movwf	strncmp@_r^0,c
  3617  0013D0  0E06               	movlw	high STR_65
  3618  0013D2  6E04               	movwf	(strncmp@_r+1)^0,c
  3619  0013D4  0E00               	movlw	0
  3620  0013D6  6E06               	movwf	(strncmp@n+1)^0,c
  3621  0013D8  0E03               	movlw	3
  3622  0013DA  6E05               	movwf	strncmp@n^0,c
  3623  0013DC  EC4F  F001         	call	_strncmp	;wreg free
  3624  0013E0  5001               	movf	?_strncmp^0,w,c
  3625  0013E2  1002               	iorwf	(?_strncmp+1)^0,w,c
  3626  0013E4  A4D8               	btfss	status,2,c
  3627  0013E6  EFF7  F009         	goto	u4671
  3628  0013EA  EFFA  F009         	goto	u4670
  3629  0013EE                     u4671:
  3630  0013EE  FFFF               	dw	65535	; assembler added errata NOP
  3631  0013F0  EF3B  F00A         	goto	l3883
  3632  0013F4                     u4670:
  3633  0013F4  FFFF               	dw	65535	; assembler added errata NOP
  3634  0013F6                     
  3635                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1163:            
      +                           *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
  3636  0013F6  0E03               	movlw	3
  3637  0013F8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3638  0013FC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3639  001400  26DE               	addwf	postinc2,f,c
  3640  001402  0E00               	movlw	0
  3641  001404  22DD               	addwfc	postdec2,f,c
  3642                           
  3643                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1164:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3644  001406  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3645  00140A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3646  00140E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3647  001412  0E02               	movlw	2
  3648  001414  26DE               	addwf	postinc2,f,c
  3649  001416  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3650  00141A  0E00               	movlw	0
  3651  00141C  22DD               	addwfc	postdec2,f,c
  3652  00141E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3653  001422  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3654  001426  50DF               	movf	indf2,w,c
  3655  001428  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3656  00142A  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  3657  00142C  6E60               	movwf	vfpfcnvrt@llu^0,c
  3658  00142E  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  3659  001430  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3660  001432  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3661  001434  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3662  001436  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3663  001438  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3664  00143A  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3665  00143C                     l3879:
  3666  00143C  FFFF               	dw	65535	; assembler added errata NOP
  3667                           
  3668                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1166:            
      +                           return utoa(fp, llu);
  3669  00143E  C043  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  3670  001442  C044  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3671  001446  C060  F01E         	movff	vfpfcnvrt@llu,utoa@d
  3672  00144A  C061  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  3673  00144E  C062  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  3674  001452  C063  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  3675  001456  C064  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  3676  00145A  C065  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  3677  00145E  C066  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  3678  001462  C067  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  3679  001466  EC84  F017         	call	_utoa	;wreg free
  3680  00146A  C01C  F043         	movff	?_utoa,?_vfpfcnvrt
  3681  00146E  C01D  F044         	movff	?_utoa+1,?_vfpfcnvrt+1
  3682  001472  EF36  F00D         	goto	l1091
  3683  001476                     l3883:
  3684  001476  FFFF               	dw	65535	; assembler added errata NOP
  3685                           
  3686                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1172:         if 
      +                          (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
  3687  001478  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3688  00147C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3689  001480  CFDE F001          	movff	postinc2,strncmp@_l
  3690  001484  CFDD F002          	movff	postdec2,strncmp@_l+1
  3691  001488  0E6C               	movlw	low (STR_65+1)
  3692  00148A  6E03               	movwf	strncmp@_r^0,c
  3693  00148C  0E06               	movlw	high (STR_65+1)
  3694  00148E  6E04               	movwf	(strncmp@_r+1)^0,c
  3695  001490  0E00               	movlw	0
  3696  001492  6E06               	movwf	(strncmp@n+1)^0,c
  3697  001494  0E02               	movlw	2
  3698  001496  6E05               	movwf	strncmp@n^0,c
  3699  001498  EC4F  F001         	call	_strncmp	;wreg free
  3700  00149C  5001               	movf	?_strncmp^0,w,c
  3701  00149E  1002               	iorwf	(?_strncmp+1)^0,w,c
  3702  0014A0  A4D8               	btfss	status,2,c
  3703  0014A2  EF55  F00A         	goto	u4681
  3704  0014A6  EF58  F00A         	goto	u4680
  3705  0014AA                     u4681:
  3706  0014AA  FFFF               	dw	65535	; assembler added errata NOP
  3707  0014AC  EF81  F00A         	goto	l3891
  3708  0014B0                     u4680:
  3709  0014B0  FFFF               	dw	65535	; assembler added errata NOP
  3710  0014B2                     
  3711                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1174:            
      +                           *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
  3712  0014B2  0E02               	movlw	2
  3713  0014B4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3714  0014B8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3715  0014BC  26DE               	addwf	postinc2,f,c
  3716  0014BE  0E00               	movlw	0
  3717  0014C0  22DD               	addwfc	postdec2,f,c
  3718                           
  3719                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1175:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  3720  0014C2  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3721  0014C6  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3722  0014CA  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3723  0014CE  0E02               	movlw	2
  3724  0014D0  26DE               	addwf	postinc2,f,c
  3725  0014D2  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3726  0014D6  0E00               	movlw	0
  3727  0014D8  22DD               	addwfc	postdec2,f,c
  3728  0014DA  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3729  0014DE  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3730  0014E2  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3731  0014E6  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3732  0014EA  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3733  0014EE  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3734  0014F2  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3735  0014F4  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3736  0014F6  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3737  0014F8  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3738  0014FA  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3739  0014FC  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3740  0014FE  EF1E  F00A         	goto	l3879
  3741  001502                     l3891:
  3742  001502  FFFF               	dw	65535	; assembler added errata NOP
  3743                           
  3744                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1182:         if 
      +                          (*fmt[0] == 'u') {
  3745  001504  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3746  001508  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3747  00150C  CFDE FFF6          	movff	postinc2,tblptrl
  3748  001510  CFDD FFF7          	movff	postdec2,tblptrh
  3749  001514                     	if	0	;tblptru may be non-zero
  3750  001514                     	endif
  3751  001514                     	if	0	;tblptru may be non-zero
  3752  001514                     	endif
  3753  001514  0008               	tblrd		*
  3754  001516  FFFF               	dw	65535	; errata NOP
  3755  001518  50F5               	movf	tablat,w,c
  3756  00151A  0A75               	xorlw	117
  3757  00151C  A4D8               	btfss	status,2,c
  3758  00151E  EF93  F00A         	goto	u4691
  3759  001522  EF96  F00A         	goto	u4690
  3760  001526                     u4691:
  3761  001526  FFFF               	dw	65535	; assembler added errata NOP
  3762  001528  EFBE  F00A         	goto	l3899
  3763  00152C                     u4690:
  3764  00152C  FFFF               	dw	65535	; assembler added errata NOP
  3765  00152E                     
  3766                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1184:            
      +                           ++*fmt;
  3767  00152E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3768  001532  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3769  001536  2ADE               	incf	postinc2,f,c
  3770  001538  0E00               	movlw	0
  3771  00153A  22DD               	addwfc	postdec2,f,c
  3772                           
  3773                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1185:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  3774  00153C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3775  001540  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3776  001544  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3777  001548  0E02               	movlw	2
  3778  00154A  26DE               	addwf	postinc2,f,c
  3779  00154C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3780  001550  0E00               	movlw	0
  3781  001552  22DD               	addwfc	postdec2,f,c
  3782  001554  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3783  001558  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3784  00155C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3785  001560  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3786  001564  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3787  001568  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3788  00156C  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3789  00156E  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3790  001570  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3791  001572  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3792  001574  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3793  001576  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3794  001578  EF1E  F00A         	goto	l3879
  3795  00157C                     l3899:
  3796  00157C  FFFF               	dw	65535	; assembler added errata NOP
  3797                           
  3798                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1236:         if 
      +                          (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
  3799  00157E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3800  001582  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3801  001586  CFDE F001          	movff	postinc2,strncmp@_l
  3802  00158A  CFDD F002          	movff	postdec2,strncmp@_l+1
  3803  00158E  0E82               	movlw	low STR_75
  3804  001590  6E03               	movwf	strncmp@_r^0,c
  3805  001592  0E06               	movlw	high STR_75
  3806  001594  6E04               	movwf	(strncmp@_r+1)^0,c
  3807  001596  0E00               	movlw	0
  3808  001598  6E06               	movwf	(strncmp@n+1)^0,c
  3809  00159A  0E02               	movlw	2
  3810  00159C  6E05               	movwf	strncmp@n^0,c
  3811  00159E  EC4F  F001         	call	_strncmp	;wreg free
  3812  0015A2  5001               	movf	?_strncmp^0,w,c
  3813  0015A4  1002               	iorwf	(?_strncmp+1)^0,w,c
  3814  0015A6  A4D8               	btfss	status,2,c
  3815  0015A8  EFD8  F00A         	goto	u4701
  3816  0015AC  EFDB  F00A         	goto	u4700
  3817  0015B0                     u4701:
  3818  0015B0  FFFF               	dw	65535	; assembler added errata NOP
  3819  0015B2  EF04  F00B         	goto	l3907
  3820  0015B6                     u4700:
  3821  0015B6  FFFF               	dw	65535	; assembler added errata NOP
  3822  0015B8                     
  3823                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1238:            
      +                           *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
  3824  0015B8  0E02               	movlw	2
  3825  0015BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3826  0015BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3827  0015C2  26DE               	addwf	postinc2,f,c
  3828  0015C4  0E00               	movlw	0
  3829  0015C6  22DD               	addwfc	postdec2,f,c
  3830                           
  3831                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1239:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  3832  0015C8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3833  0015CC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3834  0015D0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3835  0015D4  0E02               	movlw	2
  3836  0015D6  26DE               	addwf	postinc2,f,c
  3837  0015D8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3838  0015DC  0E00               	movlw	0
  3839  0015DE  22DD               	addwfc	postdec2,f,c
  3840  0015E0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3841  0015E4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3842  0015E8  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  3843  0015EC  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  3844  0015F0  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  3845  0015F4  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  3846  0015F8  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3847  0015FA  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3848  0015FC  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3849  0015FE  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3850  001600  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3851  001602  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3852  001604  EF1E  F00A         	goto	l3879
  3853  001608                     l3907:
  3854  001608  FFFF               	dw	65535	; assembler added errata NOP
  3855                           
  3856                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1249:         if 
      +                          (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hhX", ((
      +                          sizeof("hhX")/sizeof("hhX"[0]))-1))) {
  3857  00160A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3858  00160E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3859  001612  CFDE F001          	movff	postinc2,strncmp@_l
  3860  001616  CFDD F002          	movff	postdec2,strncmp@_l+1
  3861  00161A  0E6F               	movlw	low STR_80
  3862  00161C  6E03               	movwf	strncmp@_r^0,c
  3863  00161E  0E06               	movlw	high STR_80
  3864  001620  6E04               	movwf	(strncmp@_r+1)^0,c
  3865  001622  0E00               	movlw	0
  3866  001624  6E06               	movwf	(strncmp@n+1)^0,c
  3867  001626  0E03               	movlw	3
  3868  001628  6E05               	movwf	strncmp@n^0,c
  3869  00162A  EC4F  F001         	call	_strncmp	;wreg free
  3870  00162E  5001               	movf	?_strncmp^0,w,c
  3871  001630  1002               	iorwf	(?_strncmp+1)^0,w,c
  3872  001632  B4D8               	btfsc	status,2,c
  3873  001634  EF1E  F00B         	goto	u4711
  3874  001638  EF21  F00B         	goto	u4710
  3875  00163C                     u4711:
  3876  00163C  FFFF               	dw	65535	; assembler added errata NOP
  3877  00163E  EF3E  F00B         	goto	l3911
  3878  001642                     u4710:
  3879  001642  FFFF               	dw	65535	; assembler added errata NOP
  3880  001644  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3881  001648  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3882  00164C  CFDE F001          	movff	postinc2,strncmp@_l
  3883  001650  CFDD F002          	movff	postdec2,strncmp@_l+1
  3884  001654  0E57               	movlw	low STR_84
  3885  001656  6E03               	movwf	strncmp@_r^0,c
  3886  001658  0E06               	movlw	high STR_84
  3887  00165A  6E04               	movwf	(strncmp@_r+1)^0,c
  3888  00165C  0E00               	movlw	0
  3889  00165E  6E06               	movwf	(strncmp@n+1)^0,c
  3890  001660  0E03               	movlw	3
  3891  001662  6E05               	movwf	strncmp@n^0,c
  3892  001664  EC4F  F001         	call	_strncmp	;wreg free
  3893  001668  5001               	movf	?_strncmp^0,w,c
  3894  00166A  1002               	iorwf	(?_strncmp+1)^0,w,c
  3895  00166C  A4D8               	btfss	status,2,c
  3896  00166E  EF3B  F00B         	goto	u4721
  3897  001672  EF3E  F00B         	goto	u4720
  3898  001676                     u4721:
  3899  001676  FFFF               	dw	65535	; assembler added errata NOP
  3900  001678  EF95  F00B         	goto	l3921
  3901  00167C                     u4720:
  3902  00167C                     l3911:
  3903  00167C  FFFF               	dw	65535	; assembler added errata NOP
  3904                           
  3905                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1250: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1252:             c = (*fmt)
      +                          [2];
  3906  00167E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3907  001682  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3908  001686  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  3909  00168A  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  3910  00168E  0E02               	movlw	2
  3911  001690  2649               	addwf	??_vfpfcnvrt^0,f,c
  3912  001692  0E00               	movlw	0
  3913  001694  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3914  001696  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3915  00169A  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3916  00169E                     	if	0	;tblptru may be non-zero
  3917  00169E                     	endif
  3918  00169E                     	if	0	;tblptru may be non-zero
  3919  00169E                     	endif
  3920  00169E  0008               	tblrd		*
  3921  0016A0  FFFF               	dw	65535	; errata NOP
  3922  0016A2  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  3923  0016A6                     
  3924                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1253:            
      +                           *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
  3925  0016A6  0E03               	movlw	3
  3926  0016A8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3927  0016AC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3928  0016B0  26DE               	addwf	postinc2,f,c
  3929  0016B2  0E00               	movlw	0
  3930  0016B4  22DD               	addwfc	postdec2,f,c
  3931  0016B6                     
  3932                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1254:            
      +                           llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3933  0016B6  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3934  0016BA  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3935  0016BE  CFDF F049          	movff	indf2,??_vfpfcnvrt
  3936  0016C2  0E02               	movlw	2
  3937  0016C4  26DE               	addwf	postinc2,f,c
  3938  0016C6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  3939  0016CA  0E00               	movlw	0
  3940  0016CC  22DD               	addwfc	postdec2,f,c
  3941  0016CE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3942  0016D2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3943  0016D6  50DF               	movf	indf2,w,c
  3944  0016D8  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  3945  0016DA  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  3946  0016DC  6E60               	movwf	vfpfcnvrt@llu^0,c
  3947  0016DE  6A61               	clrf	(vfpfcnvrt@llu+1)^0,c
  3948  0016E0  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  3949  0016E2  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  3950  0016E4  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  3951  0016E6  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  3952  0016E8  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  3953  0016EA  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  3954  0016EC                     l3917:
  3955  0016EC  FFFF               	dw	65535	; assembler added errata NOP
  3956                           
  3957                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1256:            
      +                           return xtoa(fp, llu, c);
  3958  0016EE  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  3959  0016F2  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3960  0016F6  C060  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  3961  0016FA  C061  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  3962  0016FE  C062  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  3963  001702  C063  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  3964  001706  C064  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  3965  00170A  C065  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  3966  00170E  C066  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  3967  001712  C067  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  3968  001716  C05F  F026         	movff	vfpfcnvrt@c,xtoa@x
  3969  00171A  ECEC  F015         	call	_xtoa	;wreg free
  3970  00171E  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  3971  001722  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  3972  001726  EF36  F00D         	goto	l1091
  3973  00172A                     l3921:
  3974  00172A  FFFF               	dw	65535	; assembler added errata NOP
  3975                           
  3976                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1262:         if 
      +                          (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", ((size
      +                          of("hX")/sizeof("hX"[0]))-1))) {
  3977  00172C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3978  001730  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3979  001734  CFDE F001          	movff	postinc2,strncmp@_l
  3980  001738  CFDD F002          	movff	postdec2,strncmp@_l+1
  3981  00173C  0E70               	movlw	low (STR_80+1)
  3982  00173E  6E03               	movwf	strncmp@_r^0,c
  3983  001740  0E06               	movlw	high (STR_80+1)
  3984  001742  6E04               	movwf	(strncmp@_r+1)^0,c
  3985  001744  0E00               	movlw	0
  3986  001746  6E06               	movwf	(strncmp@n+1)^0,c
  3987  001748  0E02               	movlw	2
  3988  00174A  6E05               	movwf	strncmp@n^0,c
  3989  00174C  EC4F  F001         	call	_strncmp	;wreg free
  3990  001750  5001               	movf	?_strncmp^0,w,c
  3991  001752  1002               	iorwf	(?_strncmp+1)^0,w,c
  3992  001754  B4D8               	btfsc	status,2,c
  3993  001756  EFAF  F00B         	goto	u4731
  3994  00175A  EFB2  F00B         	goto	u4730
  3995  00175E                     u4731:
  3996  00175E  FFFF               	dw	65535	; assembler added errata NOP
  3997  001760  EFCF  F00B         	goto	l3925
  3998  001764                     u4730:
  3999  001764  FFFF               	dw	65535	; assembler added errata NOP
  4000  001766  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4001  00176A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4002  00176E  CFDE F001          	movff	postinc2,strncmp@_l
  4003  001772  CFDD F002          	movff	postdec2,strncmp@_l+1
  4004  001776  0E58               	movlw	low (STR_84+1)
  4005  001778  6E03               	movwf	strncmp@_r^0,c
  4006  00177A  0E06               	movlw	high (STR_84+1)
  4007  00177C  6E04               	movwf	(strncmp@_r+1)^0,c
  4008  00177E  0E00               	movlw	0
  4009  001780  6E06               	movwf	(strncmp@n+1)^0,c
  4010  001782  0E02               	movlw	2
  4011  001784  6E05               	movwf	strncmp@n^0,c
  4012  001786  EC4F  F001         	call	_strncmp	;wreg free
  4013  00178A  5001               	movf	?_strncmp^0,w,c
  4014  00178C  1002               	iorwf	(?_strncmp+1)^0,w,c
  4015  00178E  A4D8               	btfss	status,2,c
  4016  001790  EFCC  F00B         	goto	u4741
  4017  001794  EFCF  F00B         	goto	u4740
  4018  001798                     u4741:
  4019  001798  FFFF               	dw	65535	; assembler added errata NOP
  4020  00179A  EF0C  F00C         	goto	l3935
  4021  00179E                     u4740:
  4022  00179E                     l3925:
  4023  00179E  FFFF               	dw	65535	; assembler added errata NOP
  4024                           
  4025                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1263: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1265:             c = (*fmt)
      +                          [1];
  4026  0017A0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4027  0017A4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4028  0017A8  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  4029  0017AC  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  4030  0017B0  0E01               	movlw	1
  4031  0017B2  2649               	addwf	??_vfpfcnvrt^0,f,c
  4032  0017B4  0E00               	movlw	0
  4033  0017B6  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4034  0017B8  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4035  0017BC  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4036  0017C0                     	if	0	;tblptru may be non-zero
  4037  0017C0                     	endif
  4038  0017C0                     	if	0	;tblptru may be non-zero
  4039  0017C0                     	endif
  4040  0017C0  0008               	tblrd		*
  4041  0017C2  FFFF               	dw	65535	; errata NOP
  4042  0017C4  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  4043  0017C8                     
  4044                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1266:            
      +                           *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
  4045  0017C8  0E02               	movlw	2
  4046  0017CA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4047  0017CE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4048  0017D2  26DE               	addwf	postinc2,f,c
  4049  0017D4  0E00               	movlw	0
  4050  0017D6  22DD               	addwfc	postdec2,f,c
  4051  0017D8                     
  4052                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1267:            
      +                           llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
  4053  0017D8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4054  0017DC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4055  0017E0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4056  0017E4  0E02               	movlw	2
  4057  0017E6  26DE               	addwf	postinc2,f,c
  4058  0017E8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4059  0017EC  0E00               	movlw	0
  4060  0017EE  22DD               	addwfc	postdec2,f,c
  4061  0017F0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4062  0017F4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4063  0017F8  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4064  0017FC  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4065  001800  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4066  001804  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4067  001808  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4068  00180A  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4069  00180C  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4070  00180E  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4071  001810  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4072  001812  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4073  001814  EF76  F00B         	goto	l3917
  4074  001818                     l3935:
  4075  001818  FFFF               	dw	65535	; assembler added errata NOP
  4076                           
  4077                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1274:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  4078  00181A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4079  00181E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4080  001822  CFDE FFF6          	movff	postinc2,tblptrl
  4081  001826  CFDD FFF7          	movff	postdec2,tblptrh
  4082  00182A                     	if	0	;tblptru may be non-zero
  4083  00182A                     	endif
  4084  00182A                     	if	0	;tblptru may be non-zero
  4085  00182A                     	endif
  4086  00182A  0008               	tblrd		*
  4087  00182C  FFFF               	dw	65535	; errata NOP
  4088  00182E  50F5               	movf	tablat,w,c
  4089  001830  0A78               	xorlw	120
  4090  001832  B4D8               	btfsc	status,2,c
  4091  001834  EF1E  F00C         	goto	u4751
  4092  001838  EF21  F00C         	goto	u4750
  4093  00183C                     u4751:
  4094  00183C  FFFF               	dw	65535	; assembler added errata NOP
  4095  00183E  EF36  F00C         	goto	l3939
  4096  001842                     u4750:
  4097  001842  FFFF               	dw	65535	; assembler added errata NOP
  4098  001844  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4099  001848  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4100  00184C  CFDE FFF6          	movff	postinc2,tblptrl
  4101  001850  CFDD FFF7          	movff	postdec2,tblptrh
  4102  001854                     	if	0	;tblptru may be non-zero
  4103  001854                     	endif
  4104  001854                     	if	0	;tblptru may be non-zero
  4105  001854                     	endif
  4106  001854  0008               	tblrd		*
  4107  001856  FFFF               	dw	65535	; errata NOP
  4108  001858  50F5               	movf	tablat,w,c
  4109  00185A  0A58               	xorlw	88
  4110  00185C  A4D8               	btfss	status,2,c
  4111  00185E  EF33  F00C         	goto	u4761
  4112  001862  EF36  F00C         	goto	u4760
  4113  001866                     u4761:
  4114  001866  FFFF               	dw	65535	; assembler added errata NOP
  4115  001868  EF6A  F00C         	goto	l3949
  4116  00186C                     u4760:
  4117  00186C                     l3939:
  4118  00186C  FFFF               	dw	65535	; assembler added errata NOP
  4119                           
  4120                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1276:            
      +                           c = (*fmt)[0];
  4121  00186E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4122  001872  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4123  001876  CFDE FFF6          	movff	postinc2,tblptrl
  4124  00187A  CFDD FFF7          	movff	postdec2,tblptrh
  4125  00187E                     	if	0	;tblptru may be non-zero
  4126  00187E                     	endif
  4127  00187E                     	if	0	;tblptru may be non-zero
  4128  00187E                     	endif
  4129  00187E  0008               	tblrd		*
  4130  001880  FFFF               	dw	65535	; errata NOP
  4131  001882  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  4132  001886                     
  4133                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1277:            
      +                           ++*fmt;
  4134  001886  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4135  00188A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4136  00188E  2ADE               	incf	postinc2,f,c
  4137  001890  0E00               	movlw	0
  4138  001892  22DD               	addwfc	postdec2,f,c
  4139  001894                     
  4140                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1278:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  4141  001894  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4142  001898  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4143  00189C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4144  0018A0  0E02               	movlw	2
  4145  0018A2  26DE               	addwf	postinc2,f,c
  4146  0018A4  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4147  0018A8  0E00               	movlw	0
  4148  0018AA  22DD               	addwfc	postdec2,f,c
  4149  0018AC  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4150  0018B0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4151  0018B4  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4152  0018B8  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4153  0018BC  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4154  0018C0  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4155  0018C4  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4156  0018C6  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4157  0018C8  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4158  0018CA  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4159  0018CC  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4160  0018CE  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4161  0018D0  EF76  F00B         	goto	l3917
  4162  0018D4                     l3949:
  4163  0018D4  FFFF               	dw	65535	; assembler added errata NOP
  4164                           
  4165                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1337:         if 
      +                          (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", ((size
      +                          of("zX")/sizeof("zX"[0]))-1))) {
  4166  0018D6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4167  0018DA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4168  0018DE  CFDE F001          	movff	postinc2,strncmp@_l
  4169  0018E2  CFDD F002          	movff	postdec2,strncmp@_l+1
  4170  0018E6  0E85               	movlw	low STR_98
  4171  0018E8  6E03               	movwf	strncmp@_r^0,c
  4172  0018EA  0E06               	movlw	high STR_98
  4173  0018EC  6E04               	movwf	(strncmp@_r+1)^0,c
  4174  0018EE  0E00               	movlw	0
  4175  0018F0  6E06               	movwf	(strncmp@n+1)^0,c
  4176  0018F2  0E02               	movlw	2
  4177  0018F4  6E05               	movwf	strncmp@n^0,c
  4178  0018F6  EC4F  F001         	call	_strncmp	;wreg free
  4179  0018FA  5001               	movf	?_strncmp^0,w,c
  4180  0018FC  1002               	iorwf	(?_strncmp+1)^0,w,c
  4181  0018FE  B4D8               	btfsc	status,2,c
  4182  001900  EF84  F00C         	goto	u4771
  4183  001904  EF87  F00C         	goto	u4770
  4184  001908                     u4771:
  4185  001908  FFFF               	dw	65535	; assembler added errata NOP
  4186  00190A  EFA4  F00C         	goto	l3953
  4187  00190E                     u4770:
  4188  00190E  FFFF               	dw	65535	; assembler added errata NOP
  4189  001910  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4190  001914  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4191  001918  CFDE F001          	movff	postinc2,strncmp@_l
  4192  00191C  CFDD F002          	movff	postdec2,strncmp@_l+1
  4193  001920  0E73               	movlw	low STR_102
  4194  001922  6E03               	movwf	strncmp@_r^0,c
  4195  001924  0E06               	movlw	high STR_102
  4196  001926  6E04               	movwf	(strncmp@_r+1)^0,c
  4197  001928  0E00               	movlw	0
  4198  00192A  6E06               	movwf	(strncmp@n+1)^0,c
  4199  00192C  0E02               	movlw	2
  4200  00192E  6E05               	movwf	strncmp@n^0,c
  4201  001930  EC4F  F001         	call	_strncmp	;wreg free
  4202  001934  5001               	movf	?_strncmp^0,w,c
  4203  001936  1002               	iorwf	(?_strncmp+1)^0,w,c
  4204  001938  A4D8               	btfss	status,2,c
  4205  00193A  EFA1  F00C         	goto	u4781
  4206  00193E  EFA4  F00C         	goto	u4780
  4207  001942                     u4781:
  4208  001942  FFFF               	dw	65535	; assembler added errata NOP
  4209  001944  EFE1  F00C         	goto	l3963
  4210  001948                     u4780:
  4211  001948                     l3953:
  4212  001948  FFFF               	dw	65535	; assembler added errata NOP
  4213                           
  4214                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1338: ;C:\Program
      +                           Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1340:             c = (*fmt)
      +                          [1];
  4215  00194A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4216  00194E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4217  001952  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  4218  001956  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  4219  00195A  0E01               	movlw	1
  4220  00195C  2649               	addwf	??_vfpfcnvrt^0,f,c
  4221  00195E  0E00               	movlw	0
  4222  001960  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4223  001962  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4224  001966  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4225  00196A                     	if	0	;tblptru may be non-zero
  4226  00196A                     	endif
  4227  00196A                     	if	0	;tblptru may be non-zero
  4228  00196A                     	endif
  4229  00196A  0008               	tblrd		*
  4230  00196C  FFFF               	dw	65535	; errata NOP
  4231  00196E  CFF5 F05F          	movff	tablat,vfpfcnvrt@c
  4232  001972                     
  4233                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1341:            
      +                           *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
  4234  001972  0E02               	movlw	2
  4235  001974  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4236  001978  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4237  00197C  26DE               	addwf	postinc2,f,c
  4238  00197E  0E00               	movlw	0
  4239  001980  22DD               	addwfc	postdec2,f,c
  4240  001982                     
  4241                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1342:            
      +                           llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  4242  001982  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4243  001986  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4244  00198A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  4245  00198E  0E02               	movlw	2
  4246  001990  26DE               	addwf	postinc2,f,c
  4247  001992  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  4248  001996  0E00               	movlw	0
  4249  001998  22DD               	addwfc	postdec2,f,c
  4250  00199A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4251  00199E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4252  0019A2  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  4253  0019A6  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  4254  0019AA  C04B  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4255  0019AE  C04C  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4256  0019B2  6A62               	clrf	(vfpfcnvrt@llu+2)^0,c
  4257  0019B4  6A63               	clrf	(vfpfcnvrt@llu+3)^0,c
  4258  0019B6  6A64               	clrf	(vfpfcnvrt@llu+4)^0,c
  4259  0019B8  6A65               	clrf	(vfpfcnvrt@llu+5)^0,c
  4260  0019BA  6A66               	clrf	(vfpfcnvrt@llu+6)^0,c
  4261  0019BC  6A67               	clrf	(vfpfcnvrt@llu+7)^0,c
  4262  0019BE  EF76  F00B         	goto	l3917
  4263  0019C2                     l3963:
  4264  0019C2  FFFF               	dw	65535	; assembler added errata NOP
  4265                           
  4266                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  4267  0019C4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4268  0019C8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4269  0019CC  CFDE FFF6          	movff	postinc2,tblptrl
  4270  0019D0  CFDD FFF7          	movff	postdec2,tblptrh
  4271  0019D4                     	if	0	;tblptru may be non-zero
  4272  0019D4                     	endif
  4273  0019D4                     	if	0	;tblptru may be non-zero
  4274  0019D4                     	endif
  4275  0019D4  0008               	tblrd		*
  4276  0019D6  FFFF               	dw	65535	; errata NOP
  4277  0019D8  50F5               	movf	tablat,w,c
  4278  0019DA  0A25               	xorlw	37
  4279  0019DC  A4D8               	btfss	status,2,c
  4280  0019DE  EFF3  F00C         	goto	u4791
  4281  0019E2  EFF6  F00C         	goto	u4790
  4282  0019E6                     u4791:
  4283  0019E6  FFFF               	dw	65535	; assembler added errata NOP
  4284  0019E8  EF0F  F00D         	goto	l3973
  4285  0019EC                     u4790:
  4286  0019EC  FFFF               	dw	65535	; assembler added errata NOP
  4287  0019EE                     
  4288                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  4289  0019EE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4290  0019F2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4291  0019F6  2ADE               	incf	postinc2,f,c
  4292  0019F8  0E00               	movlw	0
  4293  0019FA  22DD               	addwfc	postdec2,f,c
  4294  0019FC                     
  4295                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  4296  0019FC  0E00               	movlw	0
  4297  0019FE  6E02               	movwf	(fputc@c+1)^0,c
  4298  001A00  0E25               	movlw	37
  4299  001A02  6E01               	movwf	fputc@c^0,c
  4300  001A04  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4301  001A08  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4302  001A0C  EC8F  F03F         	call	_fputc	;wreg free
  4303  001A10                     l3969:
  4304  001A10  FFFF               	dw	65535	; assembler added errata NOP
  4305                           
  4306                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  4307  001A12  0E00               	movlw	0
  4308  001A14  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  4309  001A16  0E01               	movlw	1
  4310  001A18  6E43               	movwf	?_vfpfcnvrt^0,c
  4311  001A1A  EF36  F00D         	goto	l1091
  4312  001A1E                     l3973:
  4313  001A1E  FFFF               	dw	65535	; assembler added errata NOP
  4314                           
  4315                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  4316  001A20  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4317  001A24  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4318  001A28  2ADE               	incf	postinc2,f,c
  4319  001A2A  0E00               	movlw	0
  4320  001A2C  22DD               	addwfc	postdec2,f,c
  4321  001A2E  EF4C  F008         	goto	l3825
  4322  001A32                     l3979:
  4323  001A32  FFFF               	dw	65535	; assembler added errata NOP
  4324                           
  4325                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  4326  001A34  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4327  001A38  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4328  001A3C  CFDE FFF6          	movff	postinc2,tblptrl
  4329  001A40  CFDD FFF7          	movff	postdec2,tblptrh
  4330  001A44                     	if	0	;tblptru may be non-zero
  4331  001A44                     	endif
  4332  001A44                     	if	0	;tblptru may be non-zero
  4333  001A44                     	endif
  4334  001A44  0008               	tblrd		*
  4335  001A46  FFFF               	dw	65535	; errata NOP
  4336  001A48  50F5               	movf	tablat,w,c
  4337  001A4A  6E01               	movwf	fputc@c^0,c
  4338  001A4C  6A02               	clrf	(fputc@c+1)^0,c
  4339  001A4E  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4340  001A52  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4341  001A56  EC8F  F03F         	call	_fputc	;wreg free
  4342  001A5A                     
  4343                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  4344  001A5A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4345  001A5E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4346  001A62  2ADE               	incf	postinc2,f,c
  4347  001A64  0E00               	movlw	0
  4348  001A66  22DD               	addwfc	postdec2,f,c
  4349  001A68  EF08  F00D         	goto	l3969
  4350  001A6C                     l1091:
  4351  001A6C  FFFF               	dw	65535	; assembler added errata NOP
  4352  001A6E  0012               	return		;funcret
  4353  001A70  FFFF               	dw	65535	; errata NOP
  4354  001A72                     __end_of_vfpfcnvrt:
  4355                           	callstack 0
  4356                           
  4357 ;; *************** function _xtoa *****************
  4358 ;; Defined at:
  4359 ;;		line 623 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4362 ;;		 -> vsnprintf@f(6), 
  4363 ;;  d               8   29[COMRAM] unsigned long long 
  4364 ;;  x               1   37[COMRAM] unsigned char 
  4365 ;; Auto vars:     Size  Location     Type
  4366 ;;  n               8   54[COMRAM] unsigned long long 
  4367 ;;  c               2   64[COMRAM] int 
  4368 ;;  i               2   62[COMRAM] int 
  4369 ;;  w               2   52[COMRAM] int 
  4370 ;;  p               2   50[COMRAM] int 
  4371 ;; Return value:  Size  Location     Type
  4372 ;;                  2   27[COMRAM] int 
  4373 ;; Registers used:
  4374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4375 ;; Tracked objects:
  4376 ;;		On entry : 0/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4380 ;;      Params:        11       0       0       0       0       0       0
  4381 ;;      Locals:        20       0       0       0       0       0       0
  4382 ;;      Temps:          8       0       0       0       0       0       0
  4383 ;;      Totals:        39       0       0       0       0       0       0
  4384 ;;Total ram usage:       39 bytes
  4385 ;; Hardware stack levels used:    1
  4386 ;; Hardware stack levels required when called:    5
  4387 ;; This function calls:
  4388 ;;		_isalpha
  4389 ;;		_isupper
  4390 ;;		_pad
  4391 ;;		_toupper
  4392 ;; This function is called by:
  4393 ;;		_vfpfcnvrt
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text6
  4398  002BD8                     __ptext6:
  4399                           	callstack 0
  4400  002BD8                     _xtoa:
  4401                           	callstack 0
  4402  002BD8  FFFF               	dw	65535	; assembler added errata NOP
  4403  002BDA                     
  4404                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 623: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 624: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 625:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources
      +                          \c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0)) {
  4405  002BDA  0100               	movlb	0	; () banked
  4406  002BDC  BF89               	btfsc	(_prec+1)& (0+255),7,b
  4407  002BDE  EFF3  F015         	goto	u3631
  4408  002BE2  EFF6  F015         	goto	u3630
  4409  002BE6                     u3631:
  4410  002BE6  FFFF               	dw	65535	; assembler added errata NOP
  4411  002BE8  EFF8  F015         	goto	l3335
  4412  002BEC                     u3630:
  4413  002BEC  FFFF               	dw	65535	; assembler added errata NOP
  4414  002BEE                     
  4415                           ; BSR set to: 0
  4416                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 630:         flag
      +                          s &= ~(1 << 1);
  4417  002BEE  938A               	bcf	_flags& (0+255),1,b
  4418  002BF0                     l3335:
  4419  002BF0  FFFF               	dw	65535	; assembler added errata NOP
  4420                           
  4421                           ; BSR set to: 0
  4422                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 632:     p = (0 <
      +                           prec) ? prec : 1;
  4423  002BF2  BF89               	btfsc	(_prec+1)& (0+255),7,b
  4424  002BF4  EF07  F016         	goto	u3640
  4425  002BF8  5189               	movf	(_prec+1)& (0+255),w,b
  4426  002BFA  E106               	bnz	u3641
  4427  002BFC  0588               	decf	_prec& (0+255),w,b
  4428  002BFE  B0D8               	btfsc	status,0,c
  4429  002C00  EF04  F016         	goto	u3641
  4430  002C04  EF07  F016         	goto	u3640
  4431  002C08                     u3641:
  4432  002C08  FFFF               	dw	65535	; assembler added errata NOP
  4433  002C0A  EF0E  F016         	goto	l1029
  4434  002C0E                     u3640:
  4435  002C0E  FFFF               	dw	65535	; assembler added errata NOP
  4436  002C10                     
  4437                           ; BSR set to: 0
  4438  002C10  0E00               	movlw	0
  4439  002C12  6E34               	movwf	(xtoa@p+1)^0,c
  4440  002C14  0E01               	movlw	1
  4441  002C16  6E33               	movwf	xtoa@p^0,c
  4442  002C18  EF13  F016         	goto	l1031
  4443  002C1C                     l1029:
  4444  002C1C  FFFF               	dw	65535	; assembler added errata NOP
  4445                           
  4446                           ; BSR set to: 0
  4447  002C1E  C088  F033         	movff	_prec,xtoa@p
  4448  002C22  C089  F034         	movff	_prec+1,xtoa@p+1
  4449  002C26                     l1031:
  4450  002C26  FFFF               	dw	65535	; assembler added errata NOP
  4451                           
  4452                           ; BSR set to: 0
  4453                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 633:     w = widt
      +                          h;
  4454  002C28  C086  F035         	movff	_width,xtoa@w
  4455  002C2C  C087  F036         	movff	_width+1,xtoa@w+1
  4456                           
  4457                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 634:     if (flag
      +                          s & (1 << 4)) {
  4458  002C30  A98A               	btfss	_flags& (0+255),4,b
  4459  002C32  EF1D  F016         	goto	u3651
  4460  002C36  EF20  F016         	goto	u3650
  4461  002C3A                     u3651:
  4462  002C3A  FFFF               	dw	65535	; assembler added errata NOP
  4463  002C3C  EF25  F016         	goto	l3341
  4464  002C40                     u3650:
  4465  002C40  FFFF               	dw	65535	; assembler added errata NOP
  4466  002C42                     
  4467                           ; BSR set to: 0
  4468                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 635:         w -=
      +                           2;
  4469  002C42  0EFE               	movlw	254
  4470  002C44  2635               	addwf	xtoa@w^0,f,c
  4471  002C46  0EFF               	movlw	255
  4472  002C48  2236               	addwfc	(xtoa@w+1)^0,f,c
  4473  002C4A                     l3341:
  4474  002C4A  FFFF               	dw	65535	; assembler added errata NOP
  4475                           
  4476                           ; BSR set to: 0
  4477                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 639:     n = d;
  4478  002C4C  C01E  F037         	movff	xtoa@d,xtoa@n
  4479  002C50  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  4480  002C54  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  4481  002C58  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  4482  002C5C  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  4483  002C60  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  4484  002C64  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  4485  002C68  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  4486  002C6C                     
  4487                           ; BSR set to: 0
  4488                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 640:     i = size
      +                          of(dbuf) - 1;
  4489  002C6C  0E00               	movlw	0
  4490  002C6E  6E40               	movwf	(xtoa@i+1)^0,c
  4491  002C70  0E1F               	movlw	31
  4492  002C72  6E3F               	movwf	xtoa@i^0,c
  4493  002C74                     
  4494                           ; BSR set to: 0
  4495                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 641:     dbuf[i] 
      +                          = '\0';
  4496  002C74  0E00               	movlw	0
  4497  002C76  6FAD               	movwf	(_dbuf+31)& (0+255),b
  4498                           
  4499                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4500  002C78  EF03  F017         	goto	l3377
  4501  002C7C                     l3347:
  4502  002C7C  FFFF               	dw	65535	; assembler added errata NOP
  4503                           
  4504                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 643:         --i;
  4505  002C7E  063F               	decf	xtoa@i^0,f,c
  4506  002C80  A0D8               	btfss	status,0,c
  4507  002C82  0640               	decf	(xtoa@i+1)^0,f,c
  4508  002C84                     
  4509                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 644:         c = 
      +                          n & 0x0f;
  4510  002C84  0E0F               	movlw	15
  4511  002C86  1437               	andwf	xtoa@n^0,w,c
  4512  002C88  6E41               	movwf	xtoa@c^0,c
  4513  002C8A  6A42               	clrf	(xtoa@c+1)^0,c
  4514  002C8C                     
  4515                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 645:         c = 
      +                          (c < 10) ? '0' + c : 'a' + (c - 10);
  4516  002C8C  BE42               	btfsc	(xtoa@c+1)^0,7,c
  4517  002C8E  EF52  F016         	goto	u3661
  4518  002C92  5042               	movf	(xtoa@c+1)^0,w,c
  4519  002C94  E10A               	bnz	u3660
  4520  002C96  0E0A               	movlw	10
  4521  002C98  5C41               	subwf	xtoa@c^0,w,c
  4522  002C9A  A0D8               	btfss	status,0,c
  4523  002C9C  EF52  F016         	goto	u3661
  4524  002CA0  EF55  F016         	goto	u3660
  4525  002CA4                     u3661:
  4526  002CA4  FFFF               	dw	65535	; assembler added errata NOP
  4527  002CA6  EF5E  F016         	goto	l3355
  4528  002CAA                     u3660:
  4529  002CAA  FFFF               	dw	65535	; assembler added errata NOP
  4530  002CAC  0E57               	movlw	87
  4531  002CAE  2441               	addwf	xtoa@c^0,w,c
  4532  002CB0  6E41               	movwf	xtoa@c^0,c
  4533  002CB2  0E00               	movlw	0
  4534  002CB4  2042               	addwfc	(xtoa@c+1)^0,w,c
  4535  002CB6  6E42               	movwf	(xtoa@c+1)^0,c
  4536  002CB8  EF65  F016         	goto	l1038
  4537  002CBC                     l3355:
  4538  002CBC  FFFF               	dw	65535	; assembler added errata NOP
  4539  002CBE  0E30               	movlw	48
  4540  002CC0  2441               	addwf	xtoa@c^0,w,c
  4541  002CC2  6E41               	movwf	xtoa@c^0,c
  4542  002CC4  0E00               	movlw	0
  4543  002CC6  2042               	addwfc	(xtoa@c+1)^0,w,c
  4544  002CC8  6E42               	movwf	(xtoa@c+1)^0,c
  4545  002CCA                     l1038:
  4546  002CCA  FFFF               	dw	65535	; assembler added errata NOP
  4547  002CCC  0EBF               	movlw	191
  4548  002CCE  6E27               	movwf	??_xtoa^0,c
  4549  002CD0  0EFF               	movlw	255
  4550  002CD2  6E28               	movwf	(??_xtoa+1)^0,c
  4551  002CD4  5026               	movf	xtoa@x^0,w,c
  4552  002CD6  6E29               	movwf	(??_xtoa+2)^0,c
  4553  002CD8  6A2A               	clrf	(??_xtoa+3)^0,c
  4554  002CDA  5027               	movf	??_xtoa^0,w,c
  4555  002CDC  2629               	addwf	(??_xtoa+2)^0,f,c
  4556  002CDE  5028               	movf	(??_xtoa+1)^0,w,c
  4557  002CE0  222A               	addwfc	(??_xtoa+3)^0,f,c
  4558  002CE2  502A               	movf	(??_xtoa+3)^0,w,c
  4559  002CE4  E10B               	bnz	u3670
  4560  002CE6  0E1A               	movlw	26
  4561  002CE8  5C29               	subwf	(??_xtoa+2)^0,w,c
  4562  002CEA  A0D8               	btfss	status,0,c
  4563  002CEC  EF7A  F016         	goto	u3671
  4564  002CF0  EF7E  F016         	goto	u3670
  4565  002CF4                     u3671:
  4566  002CF4  FFFF               	dw	65535	; assembler added errata NOP
  4567  002CF6  0E01               	movlw	1
  4568  002CF8  EF80  F016         	goto	u3680
  4569  002CFC                     u3670:
  4570  002CFC  FFFF               	dw	65535	; assembler added errata NOP
  4571  002CFE  0E00               	movlw	0
  4572  002D00                     u3680:
  4573  002D00  FFFF               	dw	65535	; assembler added errata NOP
  4574  002D02  6E2F               	movwf	_xtoa$1336^0,c
  4575  002D04  6A30               	clrf	(_xtoa$1336+1)^0,c
  4576  002D06  502F               	movf	_xtoa$1336^0,w,c
  4577  002D08  1030               	iorwf	(_xtoa$1336+1)^0,w,c
  4578  002D0A  B4D8               	btfsc	status,2,c
  4579  002D0C  EF8A  F016         	goto	u3691
  4580  002D10  EF8D  F016         	goto	u3690
  4581  002D14                     u3691:
  4582  002D14  FFFF               	dw	65535	; assembler added errata NOP
  4583  002D16  EFC3  F016         	goto	l3369
  4584  002D1A                     u3690:
  4585  002D1A  FFFF               	dw	65535	; assembler added errata NOP
  4586  002D1C  0E9F               	movlw	159
  4587  002D1E  6E27               	movwf	??_xtoa^0,c
  4588  002D20  0EFF               	movlw	255
  4589  002D22  6E28               	movwf	(??_xtoa+1)^0,c
  4590  002D24  0E20               	movlw	32
  4591  002D26  1041               	iorwf	xtoa@c^0,w,c
  4592  002D28  6E29               	movwf	(??_xtoa+2)^0,c
  4593  002D2A  0E00               	movlw	0
  4594  002D2C  1042               	iorwf	(xtoa@c+1)^0,w,c
  4595  002D2E  6E2A               	movwf	(??_xtoa+3)^0,c
  4596  002D30  5027               	movf	??_xtoa^0,w,c
  4597  002D32  2629               	addwf	(??_xtoa+2)^0,f,c
  4598  002D34  5028               	movf	(??_xtoa+1)^0,w,c
  4599  002D36  222A               	addwfc	(??_xtoa+3)^0,f,c
  4600  002D38  502A               	movf	(??_xtoa+3)^0,w,c
  4601  002D3A  E10B               	bnz	u3700
  4602  002D3C  0E1A               	movlw	26
  4603  002D3E  5C29               	subwf	(??_xtoa+2)^0,w,c
  4604  002D40  A0D8               	btfss	status,0,c
  4605  002D42  EFA5  F016         	goto	u3701
  4606  002D46  EFA9  F016         	goto	u3700
  4607  002D4A                     u3701:
  4608  002D4A  FFFF               	dw	65535	; assembler added errata NOP
  4609  002D4C  0E01               	movlw	1
  4610  002D4E  EFAB  F016         	goto	u3710
  4611  002D52                     u3700:
  4612  002D52  FFFF               	dw	65535	; assembler added errata NOP
  4613  002D54  0E00               	movlw	0
  4614  002D56                     u3710:
  4615  002D56  FFFF               	dw	65535	; assembler added errata NOP
  4616  002D58  6E31               	movwf	_xtoa$1337^0,c
  4617  002D5A  6A32               	clrf	(_xtoa$1337+1)^0,c
  4618  002D5C  5031               	movf	_xtoa$1337^0,w,c
  4619  002D5E  1032               	iorwf	(_xtoa$1337+1)^0,w,c
  4620  002D60  B4D8               	btfsc	status,2,c
  4621  002D62  EFB5  F016         	goto	u3721
  4622  002D66  EFB8  F016         	goto	u3720
  4623  002D6A                     u3721:
  4624  002D6A  FFFF               	dw	65535	; assembler added errata NOP
  4625  002D6C  EFC3  F016         	goto	l3369
  4626  002D70                     u3720:
  4627  002D70  FFFF               	dw	65535	; assembler added errata NOP
  4628  002D72                     
  4629                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 647:             
      +                          c = toupper(c);
  4630  002D72  C041  F007         	movff	xtoa@c,toupper@c
  4631  002D76  C042  F008         	movff	xtoa@c+1,toupper@c+1
  4632  002D7A  EC1F  F03F         	call	_toupper	;wreg free
  4633  002D7E  C007  F041         	movff	?_toupper,xtoa@c
  4634  002D82  C008  F042         	movff	?_toupper+1,xtoa@c+1
  4635  002D86                     l3369:
  4636  002D86  FFFF               	dw	65535	; assembler added errata NOP
  4637                           
  4638                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 649:         dbuf
      +                          [i] = (char)c;
  4639  002D88  0E8E               	movlw	low _dbuf
  4640  002D8A  243F               	addwf	xtoa@i^0,w,c
  4641  002D8C  6ED9               	movwf	fsr2l,c
  4642  002D8E  0E00               	movlw	high _dbuf
  4643  002D90  2040               	addwfc	(xtoa@i+1)^0,w,c
  4644  002D92  6EDA               	movwf	fsr2h,c
  4645  002D94  C041  FFDF         	movff	xtoa@c,indf2
  4646  002D98                     
  4647                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 650:         --p;
  4648  002D98  0633               	decf	xtoa@p^0,f,c
  4649  002D9A  A0D8               	btfss	status,0,c
  4650  002D9C  0634               	decf	(xtoa@p+1)^0,f,c
  4651  002D9E                     
  4652                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 651:         --w;
  4653  002D9E  0635               	decf	xtoa@w^0,f,c
  4654  002DA0  A0D8               	btfss	status,0,c
  4655  002DA2  0636               	decf	(xtoa@w+1)^0,f,c
  4656  002DA4                     
  4657                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 652:         n = 
      +                          n >> 4;
  4658  002DA4  C037  F027         	movff	xtoa@n,??_xtoa
  4659  002DA8  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  4660  002DAC  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  4661  002DB0  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  4662  002DB4  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  4663  002DB8  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  4664  002DBC  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  4665  002DC0  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  4666  002DC4  0E05               	movlw	5
  4667  002DC6  EFEF  F016         	goto	u3730
  4668  002DCA                     u3735:
  4669  002DCA  FFFF               	dw	65535	; assembler added errata NOP
  4670  002DCC  90D8               	bcf	status,0,c
  4671  002DCE  322E               	rrcf	(??_xtoa+7)^0,f,c
  4672  002DD0  322D               	rrcf	(??_xtoa+6)^0,f,c
  4673  002DD2  322C               	rrcf	(??_xtoa+5)^0,f,c
  4674  002DD4  322B               	rrcf	(??_xtoa+4)^0,f,c
  4675  002DD6  322A               	rrcf	(??_xtoa+3)^0,f,c
  4676  002DD8  3229               	rrcf	(??_xtoa+2)^0,f,c
  4677  002DDA  3228               	rrcf	(??_xtoa+1)^0,f,c
  4678  002DDC  3227               	rrcf	??_xtoa^0,f,c
  4679  002DDE                     u3730:
  4680  002DDE  FFFF               	dw	65535	; assembler added errata NOP
  4681  002DE0  2EE8               	decfsz	wreg,f,c
  4682  002DE2  EFE5  F016         	goto	u3735
  4683  002DE6  C027  F037         	movff	??_xtoa,xtoa@n
  4684  002DEA  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  4685  002DEE  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  4686  002DF2  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  4687  002DF6  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  4688  002DFA  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  4689  002DFE  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  4690  002E02  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  4691  002E06                     l3377:
  4692  002E06  FFFF               	dw	65535	; assembler added errata NOP
  4693                           
  4694                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4695  002E08  BE40               	btfsc	(xtoa@i+1)^0,7,c
  4696  002E0A  EF10  F017         	goto	u3741
  4697  002E0E  5040               	movf	(xtoa@i+1)^0,w,c
  4698  002E10  E10A               	bnz	u3740
  4699  002E12  0E02               	movlw	2
  4700  002E14  5C3F               	subwf	xtoa@i^0,w,c
  4701  002E16  A0D8               	btfss	status,0,c
  4702  002E18  EF10  F017         	goto	u3741
  4703  002E1C  EF13  F017         	goto	u3740
  4704  002E20                     u3741:
  4705  002E20  FFFF               	dw	65535	; assembler added errata NOP
  4706  002E22  EF4C  F017         	goto	l1052
  4707  002E26                     u3740:
  4708  002E26  FFFF               	dw	65535	; assembler added errata NOP
  4709  002E28  5037               	movf	xtoa@n^0,w,c
  4710  002E2A  1038               	iorwf	(xtoa@n+1)^0,w,c
  4711  002E2C  1039               	iorwf	(xtoa@n+2)^0,w,c
  4712  002E2E  103A               	iorwf	(xtoa@n+3)^0,w,c
  4713  002E30  103B               	iorwf	(xtoa@n+4)^0,w,c
  4714  002E32  103C               	iorwf	(xtoa@n+5)^0,w,c
  4715  002E34  103D               	iorwf	(xtoa@n+6)^0,w,c
  4716  002E36  103E               	iorwf	(xtoa@n+7)^0,w,c
  4717  002E38  A4D8               	btfss	status,2,c
  4718  002E3A  EF21  F017         	goto	u3751
  4719  002E3E  EF24  F017         	goto	u3750
  4720  002E42                     u3751:
  4721  002E42  FFFF               	dw	65535	; assembler added errata NOP
  4722  002E44  EF3E  F016         	goto	l3347
  4723  002E48                     u3750:
  4724  002E48  FFFF               	dw	65535	; assembler added errata NOP
  4725  002E4A  BE34               	btfsc	(xtoa@p+1)^0,7,c
  4726  002E4C  EF33  F017         	goto	u3760
  4727  002E50  5034               	movf	(xtoa@p+1)^0,w,c
  4728  002E52  E106               	bnz	u3761
  4729  002E54  0433               	decf	xtoa@p^0,w,c
  4730  002E56  B0D8               	btfsc	status,0,c
  4731  002E58  EF30  F017         	goto	u3761
  4732  002E5C  EF33  F017         	goto	u3760
  4733  002E60                     u3761:
  4734  002E60  FFFF               	dw	65535	; assembler added errata NOP
  4735  002E62  EF3E  F016         	goto	l3347
  4736  002E66                     u3760:
  4737  002E66  FFFF               	dw	65535	; assembler added errata NOP
  4738  002E68  BE36               	btfsc	(xtoa@w+1)^0,7,c
  4739  002E6A  EF3F  F017         	goto	u3771
  4740  002E6E  5036               	movf	(xtoa@w+1)^0,w,c
  4741  002E70  E109               	bnz	u3770
  4742  002E72  0435               	decf	xtoa@w^0,w,c
  4743  002E74  A0D8               	btfss	status,0,c
  4744  002E76  EF3F  F017         	goto	u3771
  4745  002E7A  EF42  F017         	goto	u3770
  4746  002E7E                     u3771:
  4747  002E7E  FFFF               	dw	65535	; assembler added errata NOP
  4748  002E80  EF4C  F017         	goto	l1052
  4749  002E84                     u3770:
  4750  002E84  FFFF               	dw	65535	; assembler added errata NOP
  4751  002E86  0100               	movlb	0	; () banked
  4752  002E88  B38A               	btfsc	_flags& (0+255),1,b
  4753  002E8A  EF49  F017         	goto	u3781
  4754  002E8E  EF4C  F017         	goto	u3780
  4755  002E92                     u3781:
  4756  002E92  FFFF               	dw	65535	; assembler added errata NOP
  4757  002E94  EF3E  F016         	goto	l3347
  4758  002E98                     u3780:
  4759  002E98                     l1052:
  4760  002E98  FFFF               	dw	65535	; assembler added errata NOP
  4761                           
  4762                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  4763  002E9A  0100               	movlb	0	; () banked
  4764  002E9C  A98A               	btfss	_flags& (0+255),4,b
  4765  002E9E  EF53  F017         	goto	u3791
  4766  002EA2  EF56  F017         	goto	u3790
  4767  002EA6                     u3791:
  4768  002EA6  FFFF               	dw	65535	; assembler added errata NOP
  4769  002EA8  EF6D  F017         	goto	l3393
  4770  002EAC                     u3790:
  4771  002EAC  FFFF               	dw	65535	; assembler added errata NOP
  4772  002EAE                     
  4773                           ; BSR set to: 0
  4774                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 657:         --i;
  4775  002EAE  063F               	decf	xtoa@i^0,f,c
  4776  002EB0  A0D8               	btfss	status,0,c
  4777  002EB2  0640               	decf	(xtoa@i+1)^0,f,c
  4778  002EB4                     
  4779                           ; BSR set to: 0
  4780                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 658:         dbuf
      +                          [i] = x;
  4781  002EB4  0E8E               	movlw	low _dbuf
  4782  002EB6  243F               	addwf	xtoa@i^0,w,c
  4783  002EB8  6ED9               	movwf	fsr2l,c
  4784  002EBA  0E00               	movlw	high _dbuf
  4785  002EBC  2040               	addwfc	(xtoa@i+1)^0,w,c
  4786  002EBE  6EDA               	movwf	fsr2h,c
  4787  002EC0  C026  FFDF         	movff	xtoa@x,indf2
  4788  002EC4                     
  4789                           ; BSR set to: 0
  4790                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 659:         --i;
  4791  002EC4  063F               	decf	xtoa@i^0,f,c
  4792  002EC6  A0D8               	btfss	status,0,c
  4793  002EC8  0640               	decf	(xtoa@i+1)^0,f,c
  4794                           
  4795                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 660:         dbuf
      +                          [i] = '0';
  4796  002ECA  0E8E               	movlw	low _dbuf
  4797  002ECC  243F               	addwf	xtoa@i^0,w,c
  4798  002ECE  6ED9               	movwf	fsr2l,c
  4799  002ED0  0E00               	movlw	high _dbuf
  4800  002ED2  2040               	addwfc	(xtoa@i+1)^0,w,c
  4801  002ED4  6EDA               	movwf	fsr2h,c
  4802  002ED6  0E30               	movlw	48
  4803  002ED8  6EDF               	movwf	indf2,c
  4804  002EDA                     l3393:
  4805  002EDA  FFFF               	dw	65535	; assembler added errata NOP
  4806                           
  4807                           ; BSR set to: 0
  4808                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 664:     return p
      +                          ad(fp, &dbuf[i], w);
  4809  002EDC  C01C  F011         	movff	xtoa@fp,pad@fp
  4810  002EE0  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  4811  002EE4  0E8E               	movlw	low _dbuf
  4812  002EE6  243F               	addwf	xtoa@i^0,w,c
  4813  002EE8  6E13               	movwf	pad@buf^0,c
  4814  002EEA  0E00               	movlw	high _dbuf
  4815  002EEC  2040               	addwfc	(xtoa@i+1)^0,w,c
  4816  002EEE  6E14               	movwf	(pad@buf+1)^0,c
  4817  002EF0  C035  F015         	movff	xtoa@w,pad@p
  4818  002EF4  C036  F016         	movff	xtoa@w+1,pad@p+1
  4819  002EF8  EC48  F002         	call	_pad	;wreg free
  4820  002EFC  C011  F01C         	movff	?_pad,?_xtoa
  4821  002F00  C012  F01D         	movff	?_pad+1,?_xtoa+1
  4822  002F04  0012               	return		;funcret
  4823  002F06  FFFF               	dw	65535	; errata NOP
  4824  002F08                     __end_of_xtoa:
  4825                           	callstack 0
  4826                           
  4827 ;; *************** function _toupper *****************
  4828 ;; Defined at:
  4829 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\toupper.c"
  4830 ;; Parameters:    Size  Location     Type
  4831 ;;  c               2    6[COMRAM] int 
  4832 ;; Auto vars:     Size  Location     Type
  4833 ;;		None
  4834 ;; Return value:  Size  Location     Type
  4835 ;;                  2    6[COMRAM] int 
  4836 ;; Registers used:
  4837 ;;		wreg, status,2, status,0
  4838 ;; Tracked objects:
  4839 ;;		On entry : 0/0
  4840 ;;		On exit  : 0/0
  4841 ;;		Unchanged: 0/0
  4842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4843 ;;      Params:         2       0       0       0       0       0       0
  4844 ;;      Locals:         2       0       0       0       0       0       0
  4845 ;;      Temps:          4       0       0       0       0       0       0
  4846 ;;      Totals:         8       0       0       0       0       0       0
  4847 ;;Total ram usage:        8 bytes
  4848 ;; Hardware stack levels used:    1
  4849 ;; Hardware stack levels required when called:    2
  4850 ;; This function calls:
  4851 ;;		_islower
  4852 ;; This function is called by:
  4853 ;;		_xtoa
  4854 ;; This function uses a non-reentrant model
  4855 ;;
  4856                           
  4857                           	psect	text7
  4858  007E3E                     __ptext7:
  4859                           	callstack 0
  4860  007E3E                     _toupper:
  4861                           	callstack 0
  4862  007E3E  FFFF               	dw	65535	; assembler added errata NOP
  4863  007E40  0E9F               	movlw	159
  4864  007E42  6E09               	movwf	??_toupper^0,c
  4865  007E44  0EFF               	movlw	255
  4866  007E46  6E0A               	movwf	(??_toupper+1)^0,c
  4867  007E48  C007  F00B         	movff	toupper@c,??_toupper+2
  4868  007E4C  C008  F00C         	movff	toupper@c+1,??_toupper+3
  4869  007E50  5009               	movf	??_toupper^0,w,c
  4870  007E52  260B               	addwf	(??_toupper+2)^0,f,c
  4871  007E54  500A               	movf	(??_toupper+1)^0,w,c
  4872  007E56  220C               	addwfc	(??_toupper+3)^0,f,c
  4873  007E58  500C               	movf	(??_toupper+3)^0,w,c
  4874  007E5A  E10B               	bnz	u3130
  4875  007E5C  0E1A               	movlw	26
  4876  007E5E  5C0B               	subwf	(??_toupper+2)^0,w,c
  4877  007E60  A0D8               	btfss	status,0,c
  4878  007E62  EF35  F03F         	goto	u3131
  4879  007E66  EF39  F03F         	goto	u3130
  4880  007E6A                     u3131:
  4881  007E6A  FFFF               	dw	65535	; assembler added errata NOP
  4882  007E6C  0E01               	movlw	1
  4883  007E6E  EF3B  F03F         	goto	u3140
  4884  007E72                     u3130:
  4885  007E72  FFFF               	dw	65535	; assembler added errata NOP
  4886  007E74  0E00               	movlw	0
  4887  007E76                     u3140:
  4888  007E76  FFFF               	dw	65535	; assembler added errata NOP
  4889  007E78  6E0D               	movwf	_toupper$1564^0,c
  4890  007E7A  6A0E               	clrf	(_toupper$1564+1)^0,c
  4891  007E7C  500D               	movf	_toupper$1564^0,w,c
  4892  007E7E  100E               	iorwf	(_toupper$1564+1)^0,w,c
  4893  007E80  B4D8               	btfsc	status,2,c
  4894  007E82  EF45  F03F         	goto	u3151
  4895  007E86  EF48  F03F         	goto	u3150
  4896  007E8A                     u3151:
  4897  007E8A  FFFF               	dw	65535	; assembler added errata NOP
  4898  007E8C  EF4F  F03F         	goto	l1245
  4899  007E90                     u3150:
  4900  007E90  FFFF               	dw	65535	; assembler added errata NOP
  4901  007E92  0E5F               	movlw	95
  4902  007E94  1407               	andwf	toupper@c^0,w,c
  4903  007E96  6E07               	movwf	?_toupper^0,c
  4904  007E98  6A08               	clrf	(?_toupper+1)^0,c
  4905  007E9A  EF54  F03F         	goto	l1250
  4906  007E9E                     l1245:
  4907  007E9E  FFFF               	dw	65535	; assembler added errata NOP
  4908  007EA0  C007  F007         	movff	toupper@c,?_toupper
  4909  007EA4  C008  F008         	movff	toupper@c+1,?_toupper+1
  4910  007EA8                     l1250:
  4911  007EA8  FFFF               	dw	65535	; assembler added errata NOP
  4912  007EAA  0012               	return		;funcret
  4913  007EAC  FFFF               	dw	65535	; errata NOP
  4914  007EAE                     __end_of_toupper:
  4915                           	callstack 0
  4916                           
  4917 ;; *************** function _islower *****************
  4918 ;; Defined at:
  4919 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\islower.c"
  4920 ;; Parameters:    Size  Location     Type
  4921 ;;  c               2    0[COMRAM] int 
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;		None
  4924 ;; Return value:  Size  Location     Type
  4925 ;;                  2    0[COMRAM] int 
  4926 ;; Registers used:
  4927 ;;		wreg, status,2, status,0
  4928 ;; Tracked objects:
  4929 ;;		On entry : 0/0
  4930 ;;		On exit  : 0/0
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4933 ;;      Params:         2       0       0       0       0       0       0
  4934 ;;      Locals:         0       0       0       0       0       0       0
  4935 ;;      Temps:          4       0       0       0       0       0       0
  4936 ;;      Totals:         6       0       0       0       0       0       0
  4937 ;;Total ram usage:        6 bytes
  4938 ;; Hardware stack levels used:    1
  4939 ;; Hardware stack levels required when called:    1
  4940 ;; This function calls:
  4941 ;;		Nothing
  4942 ;; This function is called by:
  4943 ;;		_toupper
  4944 ;; This function uses a non-reentrant model
  4945 ;;
  4946                           
  4947                           	psect	text8
  4948  007B38                     __ptext8:
  4949                           	callstack 0
  4950  007B38                     _islower:
  4951                           	callstack 23
  4952  007B38  FFFF               	dw	65535	; assembler added errata NOP
  4953  007B3A  0E9F               	movlw	159
  4954  007B3C  6E03               	movwf	??_islower^0,c
  4955  007B3E  0EFF               	movlw	255
  4956  007B40  6E04               	movwf	(??_islower+1)^0,c
  4957  007B42  C001  F005         	movff	islower@c,??_islower+2
  4958  007B46  C002  F006         	movff	islower@c+1,??_islower+3
  4959  007B4A  5003               	movf	??_islower^0,w,c
  4960  007B4C  2605               	addwf	(??_islower+2)^0,f,c
  4961  007B4E  5004               	movf	(??_islower+1)^0,w,c
  4962  007B50  2206               	addwfc	(??_islower+3)^0,f,c
  4963  007B52  5006               	movf	(??_islower+3)^0,w,c
  4964  007B54  E10B               	bnz	u2820
  4965  007B56  0E1A               	movlw	26
  4966  007B58  5C05               	subwf	(??_islower+2)^0,w,c
  4967  007B5A  A0D8               	btfss	status,0,c
  4968  007B5C  EFB2  F03D         	goto	u2821
  4969  007B60  EFB6  F03D         	goto	u2820
  4970  007B64                     u2821:
  4971  007B64  FFFF               	dw	65535	; assembler added errata NOP
  4972  007B66  0E01               	movlw	1
  4973  007B68  EFB8  F03D         	goto	u2830
  4974  007B6C                     u2820:
  4975  007B6C  FFFF               	dw	65535	; assembler added errata NOP
  4976  007B6E  0E00               	movlw	0
  4977  007B70                     u2830:
  4978  007B70  FFFF               	dw	65535	; assembler added errata NOP
  4979  007B72  6E01               	movwf	?_islower^0,c
  4980  007B74  6A02               	clrf	(?_islower+1)^0,c
  4981  007B76  0012               	return		;funcret
  4982  007B78  FFFF               	dw	65535	; errata NOP
  4983  007B7A                     __end_of_islower:
  4984                           	callstack 0
  4985                           
  4986 ;; *************** function _isupper *****************
  4987 ;; Defined at:
  4988 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  4989 ;; Parameters:    Size  Location     Type
  4990 ;;  c               2    0[COMRAM] int 
  4991 ;; Auto vars:     Size  Location     Type
  4992 ;;		None
  4993 ;; Return value:  Size  Location     Type
  4994 ;;                  2    0[COMRAM] int 
  4995 ;; Registers used:
  4996 ;;		wreg, status,2, status,0
  4997 ;; Tracked objects:
  4998 ;;		On entry : 0/0
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5002 ;;      Params:         2       0       0       0       0       0       0
  5003 ;;      Locals:         0       0       0       0       0       0       0
  5004 ;;      Temps:          4       0       0       0       0       0       0
  5005 ;;      Totals:         6       0       0       0       0       0       0
  5006 ;;Total ram usage:        6 bytes
  5007 ;; Hardware stack levels used:    1
  5008 ;; Hardware stack levels required when called:    1
  5009 ;; This function calls:
  5010 ;;		Nothing
  5011 ;; This function is called by:
  5012 ;;		_xtoa
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016                           	psect	text9
  5017  007AF6                     __ptext9:
  5018                           	callstack 0
  5019  007AF6                     _isupper:
  5020                           	callstack 24
  5021  007AF6  FFFF               	dw	65535	; assembler added errata NOP
  5022  007AF8  0EBF               	movlw	191
  5023  007AFA  6E03               	movwf	??_isupper^0,c
  5024  007AFC  0EFF               	movlw	255
  5025  007AFE  6E04               	movwf	(??_isupper+1)^0,c
  5026  007B00  C001  F005         	movff	isupper@c,??_isupper+2
  5027  007B04  C002  F006         	movff	isupper@c+1,??_isupper+3
  5028  007B08  5003               	movf	??_isupper^0,w,c
  5029  007B0A  2605               	addwf	(??_isupper+2)^0,f,c
  5030  007B0C  5004               	movf	(??_isupper+1)^0,w,c
  5031  007B0E  2206               	addwfc	(??_isupper+3)^0,f,c
  5032  007B10  5006               	movf	(??_isupper+3)^0,w,c
  5033  007B12  E10B               	bnz	u3090
  5034  007B14  0E1A               	movlw	26
  5035  007B16  5C05               	subwf	(??_isupper+2)^0,w,c
  5036  007B18  A0D8               	btfss	status,0,c
  5037  007B1A  EF91  F03D         	goto	u3091
  5038  007B1E  EF95  F03D         	goto	u3090
  5039  007B22                     u3091:
  5040  007B22  FFFF               	dw	65535	; assembler added errata NOP
  5041  007B24  0E01               	movlw	1
  5042  007B26  EF97  F03D         	goto	u3100
  5043  007B2A                     u3090:
  5044  007B2A  FFFF               	dw	65535	; assembler added errata NOP
  5045  007B2C  0E00               	movlw	0
  5046  007B2E                     u3100:
  5047  007B2E  FFFF               	dw	65535	; assembler added errata NOP
  5048  007B30  6E01               	movwf	?_isupper^0,c
  5049  007B32  6A02               	clrf	(?_isupper+1)^0,c
  5050  007B34  0012               	return		;funcret
  5051  007B36  FFFF               	dw	65535	; errata NOP
  5052  007B38                     __end_of_isupper:
  5053                           	callstack 0
  5054                           
  5055 ;; *************** function _isalpha *****************
  5056 ;; Defined at:
  5057 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isalpha.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;  c               2    0[COMRAM] int 
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;		None
  5062 ;; Return value:  Size  Location     Type
  5063 ;;                  2    0[COMRAM] int 
  5064 ;; Registers used:
  5065 ;;		wreg, status,2, status,0
  5066 ;; Tracked objects:
  5067 ;;		On entry : 0/0
  5068 ;;		On exit  : 0/0
  5069 ;;		Unchanged: 0/0
  5070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5071 ;;      Params:         2       0       0       0       0       0       0
  5072 ;;      Locals:         0       0       0       0       0       0       0
  5073 ;;      Temps:          4       0       0       0       0       0       0
  5074 ;;      Totals:         6       0       0       0       0       0       0
  5075 ;;Total ram usage:        6 bytes
  5076 ;; Hardware stack levels used:    1
  5077 ;; Hardware stack levels required when called:    1
  5078 ;; This function calls:
  5079 ;;		Nothing
  5080 ;; This function is called by:
  5081 ;;		_xtoa
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           
  5085                           	psect	text10
  5086  007C04                     __ptext10:
  5087                           	callstack 0
  5088  007C04                     _isalpha:
  5089                           	callstack 24
  5090  007C04  FFFF               	dw	65535	; assembler added errata NOP
  5091  007C06  0E9F               	movlw	159
  5092  007C08  6E03               	movwf	??_isalpha^0,c
  5093  007C0A  0EFF               	movlw	255
  5094  007C0C  6E04               	movwf	(??_isalpha+1)^0,c
  5095  007C0E  0E20               	movlw	32
  5096  007C10  1001               	iorwf	isalpha@c^0,w,c
  5097  007C12  6E05               	movwf	(??_isalpha+2)^0,c
  5098  007C14  0E00               	movlw	0
  5099  007C16  1002               	iorwf	(isalpha@c+1)^0,w,c
  5100  007C18  6E06               	movwf	(??_isalpha+3)^0,c
  5101  007C1A  5003               	movf	??_isalpha^0,w,c
  5102  007C1C  2605               	addwf	(??_isalpha+2)^0,f,c
  5103  007C1E  5004               	movf	(??_isalpha+1)^0,w,c
  5104  007C20  2206               	addwfc	(??_isalpha+3)^0,f,c
  5105  007C22  5006               	movf	(??_isalpha+3)^0,w,c
  5106  007C24  E10B               	bnz	u3110
  5107  007C26  0E1A               	movlw	26
  5108  007C28  5C05               	subwf	(??_isalpha+2)^0,w,c
  5109  007C2A  A0D8               	btfss	status,0,c
  5110  007C2C  EF1A  F03E         	goto	u3111
  5111  007C30  EF1E  F03E         	goto	u3110
  5112  007C34                     u3111:
  5113  007C34  FFFF               	dw	65535	; assembler added errata NOP
  5114  007C36  0E01               	movlw	1
  5115  007C38  EF20  F03E         	goto	u3120
  5116  007C3C                     u3110:
  5117  007C3C  FFFF               	dw	65535	; assembler added errata NOP
  5118  007C3E  0E00               	movlw	0
  5119  007C40                     u3120:
  5120  007C40  FFFF               	dw	65535	; assembler added errata NOP
  5121  007C42  6E01               	movwf	?_isalpha^0,c
  5122  007C44  6A02               	clrf	(?_isalpha+1)^0,c
  5123  007C46  0012               	return		;funcret
  5124  007C48  FFFF               	dw	65535	; errata NOP
  5125  007C4A                     __end_of_isalpha:
  5126                           	callstack 0
  5127                           
  5128 ;; *************** function _utoa *****************
  5129 ;; Defined at:
  5130 ;;		line 593 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5133 ;;		 -> vsnprintf@f(6), 
  5134 ;;  d               8   29[COMRAM] unsigned long long 
  5135 ;; Auto vars:     Size  Location     Type
  5136 ;;  n               8   49[COMRAM] unsigned long long 
  5137 ;;  i               2   57[COMRAM] int 
  5138 ;;  w               2   47[COMRAM] int 
  5139 ;;  p               2   45[COMRAM] int 
  5140 ;; Return value:  Size  Location     Type
  5141 ;;                  2   27[COMRAM] int 
  5142 ;; Registers used:
  5143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5144 ;; Tracked objects:
  5145 ;;		On entry : 0/0
  5146 ;;		On exit  : 0/0
  5147 ;;		Unchanged: 0/0
  5148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5149 ;;      Params:        10       0       0       0       0       0       0
  5150 ;;      Locals:        14       0       0       0       0       0       0
  5151 ;;      Temps:          8       0       0       0       0       0       0
  5152 ;;      Totals:        32       0       0       0       0       0       0
  5153 ;;Total ram usage:       32 bytes
  5154 ;; Hardware stack levels used:    1
  5155 ;; Hardware stack levels required when called:    5
  5156 ;; This function calls:
  5157 ;;		___lodiv
  5158 ;;		___lomod
  5159 ;;		_pad
  5160 ;; This function is called by:
  5161 ;;		_vfpfcnvrt
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           	psect	text11
  5166  002F08                     __ptext11:
  5167                           	callstack 0
  5168  002F08                     _utoa:
  5169                           	callstack 0
  5170  002F08  FFFF               	dw	65535	; assembler added errata NOP
  5171  002F0A                     
  5172                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 593: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 594: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 595:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common
      +                          \doprnt.c: 596:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sourc
      +                          es\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  5173  002F0A  0100               	movlb	0	; () banked
  5174  002F0C  BF89               	btfsc	(_prec+1)& (0+255),7,b
  5175  002F0E  EF8B  F017         	goto	u3561
  5176  002F12  EF8E  F017         	goto	u3560
  5177  002F16                     u3561:
  5178  002F16  FFFF               	dw	65535	; assembler added errata NOP
  5179  002F18  EF90  F017         	goto	l3299
  5180  002F1C                     u3560:
  5181  002F1C  FFFF               	dw	65535	; assembler added errata NOP
  5182  002F1E                     
  5183                           ; BSR set to: 0
  5184                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 600:         flag
      +                          s &= ~(1 << 1);
  5185  002F1E  938A               	bcf	_flags& (0+255),1,b
  5186  002F20                     l3299:
  5187  002F20  FFFF               	dw	65535	; assembler added errata NOP
  5188                           
  5189                           ; BSR set to: 0
  5190                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 602:     p = (0 <
      +                           prec) ? prec : 1;
  5191  002F22  BF89               	btfsc	(_prec+1)& (0+255),7,b
  5192  002F24  EF9F  F017         	goto	u3570
  5193  002F28  5189               	movf	(_prec+1)& (0+255),w,b
  5194  002F2A  E106               	bnz	u3571
  5195  002F2C  0588               	decf	_prec& (0+255),w,b
  5196  002F2E  B0D8               	btfsc	status,0,c
  5197  002F30  EF9C  F017         	goto	u3571
  5198  002F34  EF9F  F017         	goto	u3570
  5199  002F38                     u3571:
  5200  002F38  FFFF               	dw	65535	; assembler added errata NOP
  5201  002F3A  EFA6  F017         	goto	l1014
  5202  002F3E                     u3570:
  5203  002F3E  FFFF               	dw	65535	; assembler added errata NOP
  5204  002F40                     
  5205                           ; BSR set to: 0
  5206  002F40  0E00               	movlw	0
  5207  002F42  6E2F               	movwf	(utoa@p+1)^0,c
  5208  002F44  0E01               	movlw	1
  5209  002F46  6E2E               	movwf	utoa@p^0,c
  5210  002F48  EFAB  F017         	goto	l1016
  5211  002F4C                     l1014:
  5212  002F4C  FFFF               	dw	65535	; assembler added errata NOP
  5213                           
  5214                           ; BSR set to: 0
  5215  002F4E  C088  F02E         	movff	_prec,utoa@p
  5216  002F52  C089  F02F         	movff	_prec+1,utoa@p+1
  5217  002F56                     l1016:
  5218  002F56  FFFF               	dw	65535	; assembler added errata NOP
  5219                           
  5220                           ; BSR set to: 0
  5221                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 603:     w = widt
      +                          h;
  5222  002F58  C086  F030         	movff	_width,utoa@w
  5223  002F5C  C087  F031         	movff	_width+1,utoa@w+1
  5224                           
  5225                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 606:     n = d;
  5226  002F60  C01E  F032         	movff	utoa@d,utoa@n
  5227  002F64  C01F  F033         	movff	utoa@d+1,utoa@n+1
  5228  002F68  C020  F034         	movff	utoa@d+2,utoa@n+2
  5229  002F6C  C021  F035         	movff	utoa@d+3,utoa@n+3
  5230  002F70  C022  F036         	movff	utoa@d+4,utoa@n+4
  5231  002F74  C023  F037         	movff	utoa@d+5,utoa@n+5
  5232  002F78  C024  F038         	movff	utoa@d+6,utoa@n+6
  5233  002F7C  C025  F039         	movff	utoa@d+7,utoa@n+7
  5234  002F80                     
  5235                           ; BSR set to: 0
  5236                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 607:     i = size
      +                          of(dbuf) - 1;
  5237  002F80  0E00               	movlw	0
  5238  002F82  6E3B               	movwf	(utoa@i+1)^0,c
  5239  002F84  0E1F               	movlw	31
  5240  002F86  6E3A               	movwf	utoa@i^0,c
  5241  002F88                     
  5242                           ; BSR set to: 0
  5243                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 608:     dbuf[i] 
      +                          = '\0';
  5244  002F88  0E00               	movlw	0
  5245  002F8A  6FAD               	movwf	(_dbuf+31)& (0+255),b
  5246                           
  5247                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5248  002F8C  EF3F  F018         	goto	l3317
  5249  002F90                     l3307:
  5250  002F90  FFFF               	dw	65535	; assembler added errata NOP
  5251                           
  5252                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 610:         --i;
  5253  002F92  063A               	decf	utoa@i^0,f,c
  5254  002F94  A0D8               	btfss	status,0,c
  5255  002F96  063B               	decf	(utoa@i+1)^0,f,c
  5256  002F98                     
  5257                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 611:         dbuf
      +                          [i] = '0' + (n % 10);
  5258  002F98  0E8E               	movlw	low _dbuf
  5259  002F9A  243A               	addwf	utoa@i^0,w,c
  5260  002F9C  6ED9               	movwf	fsr2l,c
  5261  002F9E  0E00               	movlw	high _dbuf
  5262  002FA0  203B               	addwfc	(utoa@i+1)^0,w,c
  5263  002FA2  6EDA               	movwf	fsr2h,c
  5264  002FA4  C032  F001         	movff	utoa@n,___lomod@dividend
  5265  002FA8  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  5266  002FAC  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  5267  002FB0  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  5268  002FB4  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  5269  002FB8  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  5270  002FBC  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  5271  002FC0  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  5272  002FC4  0E0A               	movlw	10
  5273  002FC6  6E09               	movwf	___lomod@divisor^0,c
  5274  002FC8  0E00               	movlw	0
  5275  002FCA  6E0A               	movwf	(___lomod@divisor+1)^0,c
  5276  002FCC  0E00               	movlw	0
  5277  002FCE  6E0B               	movwf	(___lomod@divisor+2)^0,c
  5278  002FD0  0E00               	movlw	0
  5279  002FD2  6E0C               	movwf	(___lomod@divisor+3)^0,c
  5280  002FD4  0E00               	movlw	0
  5281  002FD6  6E0D               	movwf	(___lomod@divisor+4)^0,c
  5282  002FD8  0E00               	movlw	0
  5283  002FDA  6E0E               	movwf	(___lomod@divisor+5)^0,c
  5284  002FDC  0E00               	movlw	0
  5285  002FDE  6E0F               	movwf	(___lomod@divisor+6)^0,c
  5286  002FE0  0E00               	movlw	0
  5287  002FE2  6E10               	movwf	(___lomod@divisor+7)^0,c
  5288  002FE4  ECD3  F001         	call	___lomod	;wreg free
  5289  002FE8  C001  F026         	movff	?___lomod,??_utoa
  5290  002FEC  C002  F027         	movff	?___lomod+1,??_utoa+1
  5291  002FF0  C003  F028         	movff	?___lomod+2,??_utoa+2
  5292  002FF4  C004  F029         	movff	?___lomod+3,??_utoa+3
  5293  002FF8  C005  F02A         	movff	?___lomod+4,??_utoa+4
  5294  002FFC  C006  F02B         	movff	?___lomod+5,??_utoa+5
  5295  003000  C007  F02C         	movff	?___lomod+6,??_utoa+6
  5296  003004  C008  F02D         	movff	?___lomod+7,??_utoa+7
  5297  003008  5026               	movf	??_utoa^0,w,c
  5298  00300A  0F30               	addlw	48
  5299  00300C  6EDF               	movwf	indf2,c
  5300  00300E                     
  5301                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 612:         --p;
  5302  00300E  062E               	decf	utoa@p^0,f,c
  5303  003010  A0D8               	btfss	status,0,c
  5304  003012  062F               	decf	(utoa@p+1)^0,f,c
  5305  003014                     
  5306                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 613:         --w;
  5307  003014  0630               	decf	utoa@w^0,f,c
  5308  003016  A0D8               	btfss	status,0,c
  5309  003018  0631               	decf	(utoa@w+1)^0,f,c
  5310  00301A                     
  5311                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 614:         n = 
      +                          n / 10;
  5312  00301A  C032  F001         	movff	utoa@n,___lodiv@dividend
  5313  00301E  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  5314  003022  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  5315  003026  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  5316  00302A  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  5317  00302E  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  5318  003032  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  5319  003036  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  5320  00303A  0E0A               	movlw	10
  5321  00303C  6E09               	movwf	___lodiv@divisor^0,c
  5322  00303E  0E00               	movlw	0
  5323  003040  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  5324  003042  0E00               	movlw	0
  5325  003044  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  5326  003046  0E00               	movlw	0
  5327  003048  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  5328  00304A  0E00               	movlw	0
  5329  00304C  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  5330  00304E  0E00               	movlw	0
  5331  003050  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  5332  003052  0E00               	movlw	0
  5333  003054  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  5334  003056  0E00               	movlw	0
  5335  003058  6E10               	movwf	(___lodiv@divisor+7)^0,c
  5336  00305A  ECCA  F000         	call	___lodiv	;wreg free
  5337  00305E  C001  F032         	movff	?___lodiv,utoa@n
  5338  003062  C002  F033         	movff	?___lodiv+1,utoa@n+1
  5339  003066  C003  F034         	movff	?___lodiv+2,utoa@n+2
  5340  00306A  C004  F035         	movff	?___lodiv+3,utoa@n+3
  5341  00306E  C005  F036         	movff	?___lodiv+4,utoa@n+4
  5342  003072  C006  F037         	movff	?___lodiv+5,utoa@n+5
  5343  003076  C007  F038         	movff	?___lodiv+6,utoa@n+6
  5344  00307A  C008  F039         	movff	?___lodiv+7,utoa@n+7
  5345  00307E                     l3317:
  5346  00307E  FFFF               	dw	65535	; assembler added errata NOP
  5347                           
  5348                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5349  003080  503A               	movf	utoa@i^0,w,c
  5350  003082  103B               	iorwf	(utoa@i+1)^0,w,c
  5351  003084  B4D8               	btfsc	status,2,c
  5352  003086  EF47  F018         	goto	u3581
  5353  00308A  EF4A  F018         	goto	u3580
  5354  00308E                     u3581:
  5355  00308E  FFFF               	dw	65535	; assembler added errata NOP
  5356  003090  EF83  F018         	goto	l3327
  5357  003094                     u3580:
  5358  003094  FFFF               	dw	65535	; assembler added errata NOP
  5359  003096  5032               	movf	utoa@n^0,w,c
  5360  003098  1033               	iorwf	(utoa@n+1)^0,w,c
  5361  00309A  1034               	iorwf	(utoa@n+2)^0,w,c
  5362  00309C  1035               	iorwf	(utoa@n+3)^0,w,c
  5363  00309E  1036               	iorwf	(utoa@n+4)^0,w,c
  5364  0030A0  1037               	iorwf	(utoa@n+5)^0,w,c
  5365  0030A2  1038               	iorwf	(utoa@n+6)^0,w,c
  5366  0030A4  1039               	iorwf	(utoa@n+7)^0,w,c
  5367  0030A6  A4D8               	btfss	status,2,c
  5368  0030A8  EF58  F018         	goto	u3591
  5369  0030AC  EF5B  F018         	goto	u3590
  5370  0030B0                     u3591:
  5371  0030B0  FFFF               	dw	65535	; assembler added errata NOP
  5372  0030B2  EFC8  F017         	goto	l3307
  5373  0030B6                     u3590:
  5374  0030B6  FFFF               	dw	65535	; assembler added errata NOP
  5375  0030B8  BE2F               	btfsc	(utoa@p+1)^0,7,c
  5376  0030BA  EF6A  F018         	goto	u3600
  5377  0030BE  502F               	movf	(utoa@p+1)^0,w,c
  5378  0030C0  E106               	bnz	u3601
  5379  0030C2  042E               	decf	utoa@p^0,w,c
  5380  0030C4  B0D8               	btfsc	status,0,c
  5381  0030C6  EF67  F018         	goto	u3601
  5382  0030CA  EF6A  F018         	goto	u3600
  5383  0030CE                     u3601:
  5384  0030CE  FFFF               	dw	65535	; assembler added errata NOP
  5385  0030D0  EFC8  F017         	goto	l3307
  5386  0030D4                     u3600:
  5387  0030D4  FFFF               	dw	65535	; assembler added errata NOP
  5388  0030D6  BE31               	btfsc	(utoa@w+1)^0,7,c
  5389  0030D8  EF76  F018         	goto	u3611
  5390  0030DC  5031               	movf	(utoa@w+1)^0,w,c
  5391  0030DE  E109               	bnz	u3610
  5392  0030E0  0430               	decf	utoa@w^0,w,c
  5393  0030E2  A0D8               	btfss	status,0,c
  5394  0030E4  EF76  F018         	goto	u3611
  5395  0030E8  EF79  F018         	goto	u3610
  5396  0030EC                     u3611:
  5397  0030EC  FFFF               	dw	65535	; assembler added errata NOP
  5398  0030EE  EF83  F018         	goto	l3327
  5399  0030F2                     u3610:
  5400  0030F2  FFFF               	dw	65535	; assembler added errata NOP
  5401  0030F4  0100               	movlb	0	; () banked
  5402  0030F6  B38A               	btfsc	_flags& (0+255),1,b
  5403  0030F8  EF80  F018         	goto	u3621
  5404  0030FC  EF83  F018         	goto	u3620
  5405  003100                     u3621:
  5406  003100  FFFF               	dw	65535	; assembler added errata NOP
  5407  003102  EFC8  F017         	goto	l3307
  5408  003106                     u3620:
  5409  003106                     l3327:
  5410  003106  FFFF               	dw	65535	; assembler added errata NOP
  5411                           
  5412                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 618:     return p
      +                          ad(fp, &dbuf[i], w);
  5413  003108  C01C  F011         	movff	utoa@fp,pad@fp
  5414  00310C  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  5415  003110  0E8E               	movlw	low _dbuf
  5416  003112  243A               	addwf	utoa@i^0,w,c
  5417  003114  6E13               	movwf	pad@buf^0,c
  5418  003116  0E00               	movlw	high _dbuf
  5419  003118  203B               	addwfc	(utoa@i+1)^0,w,c
  5420  00311A  6E14               	movwf	(pad@buf+1)^0,c
  5421  00311C  C030  F015         	movff	utoa@w,pad@p
  5422  003120  C031  F016         	movff	utoa@w+1,pad@p+1
  5423  003124  EC48  F002         	call	_pad	;wreg free
  5424  003128  C011  F01C         	movff	?_pad,?_utoa
  5425  00312C  C012  F01D         	movff	?_pad+1,?_utoa+1
  5426  003130  0012               	return		;funcret
  5427  003132  FFFF               	dw	65535	; errata NOP
  5428  003134                     __end_of_utoa:
  5429                           	callstack 0
  5430                           
  5431 ;; *************** function ___lomod *****************
  5432 ;; Defined at:
  5433 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lomod.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;  dividend        8    0[COMRAM] unsigned long long 
  5436 ;;  divisor         8    8[COMRAM] unsigned long long 
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;  counter         1   16[COMRAM] unsigned char 
  5439 ;; Return value:  Size  Location     Type
  5440 ;;                  8    0[COMRAM] unsigned long long 
  5441 ;; Registers used:
  5442 ;;		wreg, status,2, status,0
  5443 ;; Tracked objects:
  5444 ;;		On entry : 0/0
  5445 ;;		On exit  : 0/0
  5446 ;;		Unchanged: 0/0
  5447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5448 ;;      Params:        16       0       0       0       0       0       0
  5449 ;;      Locals:         1       0       0       0       0       0       0
  5450 ;;      Temps:          0       0       0       0       0       0       0
  5451 ;;      Totals:        17       0       0       0       0       0       0
  5452 ;;Total ram usage:       17 bytes
  5453 ;; Hardware stack levels used:    1
  5454 ;; Hardware stack levels required when called:    1
  5455 ;; This function calls:
  5456 ;;		Nothing
  5457 ;; This function is called by:
  5458 ;;		_utoa
  5459 ;; This function uses a non-reentrant model
  5460 ;;
  5461                           
  5462                           	psect	text12
  5463  0003A6                     __ptext12:
  5464                           	callstack 0
  5465  0003A6                     ___lomod:
  5466                           	callstack 0
  5467  0003A6  FFFF               	dw	65535	; assembler added errata NOP
  5468  0003A8  5009               	movf	___lomod@divisor^0,w,c
  5469  0003AA  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  5470  0003AC  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  5471  0003AE  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  5472  0003B0  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  5473  0003B2  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  5474  0003B4  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  5475  0003B6  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  5476  0003B8  B4D8               	btfsc	status,2,c
  5477  0003BA  EFE1  F001         	goto	u3011
  5478  0003BE  EFE4  F001         	goto	u3010
  5479  0003C2                     u3011:
  5480  0003C2  FFFF               	dw	65535	; assembler added errata NOP
  5481  0003C4  EF35  F002         	goto	l633
  5482  0003C8                     u3010:
  5483  0003C8  FFFF               	dw	65535	; assembler added errata NOP
  5484  0003CA  0E01               	movlw	1
  5485  0003CC  6E11               	movwf	___lomod@counter^0,c
  5486  0003CE  EFF4  F001         	goto	l3059
  5487  0003D2                     l3057:
  5488  0003D2  FFFF               	dw	65535	; assembler added errata NOP
  5489  0003D4  90D8               	bcf	status,0,c
  5490  0003D6  3609               	rlcf	___lomod@divisor^0,f,c
  5491  0003D8  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  5492  0003DA  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  5493  0003DC  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  5494  0003DE  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  5495  0003E0  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  5496  0003E2  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  5497  0003E4  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  5498  0003E6  2A11               	incf	___lomod@counter^0,f,c
  5499  0003E8                     l3059:
  5500  0003E8  FFFF               	dw	65535	; assembler added errata NOP
  5501  0003EA  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  5502  0003EC  EFFA  F001         	goto	u3021
  5503  0003F0  EFFD  F001         	goto	u3020
  5504  0003F4                     u3021:
  5505  0003F4  FFFF               	dw	65535	; assembler added errata NOP
  5506  0003F6  EFE9  F001         	goto	l3057
  5507  0003FA                     u3020:
  5508  0003FA  FFFF               	dw	65535	; assembler added errata NOP
  5509  0003FC                     l3061:
  5510  0003FC  FFFF               	dw	65535	; assembler added errata NOP
  5511  0003FE  5009               	movf	___lomod@divisor^0,w,c
  5512  000400  5C01               	subwf	___lomod@dividend^0,w,c
  5513  000402  500A               	movf	(___lomod@divisor+1)^0,w,c
  5514  000404  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  5515  000406  500B               	movf	(___lomod@divisor+2)^0,w,c
  5516  000408  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  5517  00040A  500C               	movf	(___lomod@divisor+3)^0,w,c
  5518  00040C  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  5519  00040E  500D               	movf	(___lomod@divisor+4)^0,w,c
  5520  000410  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  5521  000412  500E               	movf	(___lomod@divisor+5)^0,w,c
  5522  000414  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  5523  000416  500F               	movf	(___lomod@divisor+6)^0,w,c
  5524  000418  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  5525  00041A  5010               	movf	(___lomod@divisor+7)^0,w,c
  5526  00041C  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  5527  00041E  A0D8               	btfss	status,0,c
  5528  000420  EF14  F002         	goto	u3031
  5529  000424  EF17  F002         	goto	u3030
  5530  000428                     u3031:
  5531  000428  FFFF               	dw	65535	; assembler added errata NOP
  5532  00042A  EF28  F002         	goto	l3065
  5533  00042E                     u3030:
  5534  00042E  FFFF               	dw	65535	; assembler added errata NOP
  5535  000430  5009               	movf	___lomod@divisor^0,w,c
  5536  000432  5E01               	subwf	___lomod@dividend^0,f,c
  5537  000434  500A               	movf	(___lomod@divisor+1)^0,w,c
  5538  000436  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  5539  000438  500B               	movf	(___lomod@divisor+2)^0,w,c
  5540  00043A  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  5541  00043C  500C               	movf	(___lomod@divisor+3)^0,w,c
  5542  00043E  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  5543  000440  500D               	movf	(___lomod@divisor+4)^0,w,c
  5544  000442  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  5545  000444  500E               	movf	(___lomod@divisor+5)^0,w,c
  5546  000446  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  5547  000448  500F               	movf	(___lomod@divisor+6)^0,w,c
  5548  00044A  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  5549  00044C  5010               	movf	(___lomod@divisor+7)^0,w,c
  5550  00044E  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  5551  000450                     l3065:
  5552  000450  FFFF               	dw	65535	; assembler added errata NOP
  5553  000452  90D8               	bcf	status,0,c
  5554  000454  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  5555  000456  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  5556  000458  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  5557  00045A  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  5558  00045C  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  5559  00045E  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  5560  000460  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  5561  000462  3209               	rrcf	___lomod@divisor^0,f,c
  5562  000464  2E11               	decfsz	___lomod@counter^0,f,c
  5563  000466  EFFE  F001         	goto	l3061
  5564  00046A                     l633:
  5565  00046A  FFFF               	dw	65535	; assembler added errata NOP
  5566  00046C  C001  F001         	movff	___lomod@dividend,?___lomod
  5567  000470  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  5568  000474  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  5569  000478  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  5570  00047C  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  5571  000480  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  5572  000484  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  5573  000488  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  5574  00048C  0012               	return		;funcret
  5575  00048E  FFFF               	dw	65535	; errata NOP
  5576  000490                     __end_of___lomod:
  5577                           	callstack 0
  5578                           
  5579 ;; *************** function ___lodiv *****************
  5580 ;; Defined at:
  5581 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lodiv.c"
  5582 ;; Parameters:    Size  Location     Type
  5583 ;;  dividend        8    0[COMRAM] unsigned long long 
  5584 ;;  divisor         8    8[COMRAM] unsigned long long 
  5585 ;; Auto vars:     Size  Location     Type
  5586 ;;  quotient        8   16[COMRAM] unsigned long long 
  5587 ;;  counter         1   24[COMRAM] unsigned char 
  5588 ;; Return value:  Size  Location     Type
  5589 ;;                  8    0[COMRAM] unsigned long long 
  5590 ;; Registers used:
  5591 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5597 ;;      Params:        16       0       0       0       0       0       0
  5598 ;;      Locals:         9       0       0       0       0       0       0
  5599 ;;      Temps:          0       0       0       0       0       0       0
  5600 ;;      Totals:        25       0       0       0       0       0       0
  5601 ;;Total ram usage:       25 bytes
  5602 ;; Hardware stack levels used:    1
  5603 ;; Hardware stack levels required when called:    1
  5604 ;; This function calls:
  5605 ;;		Nothing
  5606 ;; This function is called by:
  5607 ;;		_utoa
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611                           	psect	text13
  5612  000194                     __ptext13:
  5613                           	callstack 0
  5614  000194                     ___lodiv:
  5615                           	callstack 0
  5616  000194  FFFF               	dw	65535	; assembler added errata NOP
  5617  000196  EE20  F011         	lfsr	2,___lodiv@quotient
  5618  00019A  0E07               	movlw	7
  5619  00019C                     u2971:
  5620  00019C  6ADE               	clrf	postinc2,c
  5621  00019E  06E8               	decf	wreg,f,c
  5622  0001A0  E2FD               	bc	u2971
  5623  0001A2  5009               	movf	___lodiv@divisor^0,w,c
  5624  0001A4  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  5625  0001A6  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  5626  0001A8  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  5627  0001AA  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  5628  0001AC  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  5629  0001AE  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  5630  0001B0  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  5631  0001B2  B4D8               	btfsc	status,2,c
  5632  0001B4  EFDE  F000         	goto	u2981
  5633  0001B8  EFE1  F000         	goto	u2980
  5634  0001BC                     u2981:
  5635  0001BC  FFFF               	dw	65535	; assembler added errata NOP
  5636  0001BE  EF3C  F001         	goto	l623
  5637  0001C2                     u2980:
  5638  0001C2  FFFF               	dw	65535	; assembler added errata NOP
  5639  0001C4  0E01               	movlw	1
  5640  0001C6  6E19               	movwf	___lodiv@counter^0,c
  5641  0001C8  EFF1  F000         	goto	l3039
  5642  0001CC                     l3037:
  5643  0001CC  FFFF               	dw	65535	; assembler added errata NOP
  5644  0001CE  90D8               	bcf	status,0,c
  5645  0001D0  3609               	rlcf	___lodiv@divisor^0,f,c
  5646  0001D2  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  5647  0001D4  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  5648  0001D6  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  5649  0001D8  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  5650  0001DA  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  5651  0001DC  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  5652  0001DE  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  5653  0001E0  2A19               	incf	___lodiv@counter^0,f,c
  5654  0001E2                     l3039:
  5655  0001E2  FFFF               	dw	65535	; assembler added errata NOP
  5656  0001E4  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  5657  0001E6  EFF7  F000         	goto	u2991
  5658  0001EA  EFFA  F000         	goto	u2990
  5659  0001EE                     u2991:
  5660  0001EE  FFFF               	dw	65535	; assembler added errata NOP
  5661  0001F0  EFE6  F000         	goto	l3037
  5662  0001F4                     u2990:
  5663  0001F4  FFFF               	dw	65535	; assembler added errata NOP
  5664  0001F6                     l3041:
  5665  0001F6  FFFF               	dw	65535	; assembler added errata NOP
  5666  0001F8  90D8               	bcf	status,0,c
  5667  0001FA  3611               	rlcf	___lodiv@quotient^0,f,c
  5668  0001FC  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  5669  0001FE  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  5670  000200  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  5671  000202  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  5672  000204  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  5673  000206  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  5674  000208  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  5675  00020A  5009               	movf	___lodiv@divisor^0,w,c
  5676  00020C  5C01               	subwf	___lodiv@dividend^0,w,c
  5677  00020E  500A               	movf	(___lodiv@divisor+1)^0,w,c
  5678  000210  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  5679  000212  500B               	movf	(___lodiv@divisor+2)^0,w,c
  5680  000214  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  5681  000216  500C               	movf	(___lodiv@divisor+3)^0,w,c
  5682  000218  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  5683  00021A  500D               	movf	(___lodiv@divisor+4)^0,w,c
  5684  00021C  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  5685  00021E  500E               	movf	(___lodiv@divisor+5)^0,w,c
  5686  000220  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  5687  000222  500F               	movf	(___lodiv@divisor+6)^0,w,c
  5688  000224  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  5689  000226  5010               	movf	(___lodiv@divisor+7)^0,w,c
  5690  000228  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  5691  00022A  A0D8               	btfss	status,0,c
  5692  00022C  EF1A  F001         	goto	u3001
  5693  000230  EF1D  F001         	goto	u3000
  5694  000234                     u3001:
  5695  000234  FFFF               	dw	65535	; assembler added errata NOP
  5696  000236  EF2F  F001         	goto	l3049
  5697  00023A                     u3000:
  5698  00023A  FFFF               	dw	65535	; assembler added errata NOP
  5699  00023C  5009               	movf	___lodiv@divisor^0,w,c
  5700  00023E  5E01               	subwf	___lodiv@dividend^0,f,c
  5701  000240  500A               	movf	(___lodiv@divisor+1)^0,w,c
  5702  000242  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  5703  000244  500B               	movf	(___lodiv@divisor+2)^0,w,c
  5704  000246  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  5705  000248  500C               	movf	(___lodiv@divisor+3)^0,w,c
  5706  00024A  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  5707  00024C  500D               	movf	(___lodiv@divisor+4)^0,w,c
  5708  00024E  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  5709  000250  500E               	movf	(___lodiv@divisor+5)^0,w,c
  5710  000252  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  5711  000254  500F               	movf	(___lodiv@divisor+6)^0,w,c
  5712  000256  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  5713  000258  5010               	movf	(___lodiv@divisor+7)^0,w,c
  5714  00025A  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  5715  00025C  8011               	bsf	___lodiv@quotient^0,0,c
  5716  00025E                     l3049:
  5717  00025E  FFFF               	dw	65535	; assembler added errata NOP
  5718  000260  90D8               	bcf	status,0,c
  5719  000262  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  5720  000264  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  5721  000266  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  5722  000268  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  5723  00026A  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  5724  00026C  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  5725  00026E  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  5726  000270  3209               	rrcf	___lodiv@divisor^0,f,c
  5727  000272  2E19               	decfsz	___lodiv@counter^0,f,c
  5728  000274  EFFB  F000         	goto	l3041
  5729  000278                     l623:
  5730  000278  FFFF               	dw	65535	; assembler added errata NOP
  5731  00027A  C011  F001         	movff	___lodiv@quotient,?___lodiv
  5732  00027E  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  5733  000282  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  5734  000286  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  5735  00028A  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  5736  00028E  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  5737  000292  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  5738  000296  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  5739  00029A  0012               	return		;funcret
  5740  00029C  FFFF               	dw	65535	; errata NOP
  5741  00029E                     __end_of___lodiv:
  5742                           	callstack 0
  5743                           
  5744 ;; *************** function _strncmp *****************
  5745 ;; Defined at:
  5746 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  5749 ;;		 -> STR_1(24), 
  5750 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  5751 ;;		 -> STR_104(3), STR_100(3), STR_95(3), STR_91(3), 
  5752 ;;		 -> STR_86(4), STR_82(4), STR_77(3), STR_72(3), 
  5753 ;;		 -> STR_67(4), STR_62(3), STR_57(3), STR_52(4), 
  5754 ;;		 -> STR_47(3), STR_42(3), STR_37(4), STR_32(3), 
  5755 ;;		 -> STR_28(3), STR_23(3), STR_19(3), STR_14(4), 
  5756 ;;		 -> STR_10(4), 
  5757 ;;  n               2    4[COMRAM] unsigned int 
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;  r               2    9[COMRAM] PTR const unsigned char 
  5760 ;;		 -> STR_104(3), STR_100(3), STR_95(3), STR_91(3), 
  5761 ;;		 -> STR_86(4), STR_82(4), STR_77(3), STR_72(3), 
  5762 ;;		 -> STR_67(4), STR_62(3), STR_57(3), STR_52(4), 
  5763 ;;		 -> STR_47(3), STR_42(3), STR_37(4), STR_32(3), 
  5764 ;;		 -> STR_28(3), STR_23(3), STR_19(3), STR_14(4), 
  5765 ;;		 -> STR_10(4), 
  5766 ;;  l               2    7[COMRAM] PTR const unsigned char 
  5767 ;;		 -> STR_1(24), 
  5768 ;; Return value:  Size  Location     Type
  5769 ;;                  2    0[COMRAM] int 
  5770 ;; Registers used:
  5771 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5772 ;; Tracked objects:
  5773 ;;		On entry : 0/0
  5774 ;;		On exit  : 0/0
  5775 ;;		Unchanged: 0/0
  5776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5777 ;;      Params:         6       0       0       0       0       0       0
  5778 ;;      Locals:         4       0       0       0       0       0       0
  5779 ;;      Temps:          1       0       0       0       0       0       0
  5780 ;;      Totals:        11       0       0       0       0       0       0
  5781 ;;Total ram usage:       11 bytes
  5782 ;; Hardware stack levels used:    1
  5783 ;; Hardware stack levels required when called:    1
  5784 ;; This function calls:
  5785 ;;		Nothing
  5786 ;; This function is called by:
  5787 ;;		_vfpfcnvrt
  5788 ;; This function uses a non-reentrant model
  5789 ;;
  5790                           
  5791                           	psect	text14
  5792  00029E                     __ptext14:
  5793                           	callstack 0
  5794  00029E                     _strncmp:
  5795                           	callstack 0
  5796  00029E  FFFF               	dw	65535	; assembler added errata NOP
  5797  0002A0  C001  F008         	movff	strncmp@_l,strncmp@l
  5798  0002A4  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  5799  0002A8  C003  F00A         	movff	strncmp@_r,strncmp@r
  5800  0002AC  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  5801  0002B0  0605               	decf	strncmp@n^0,f,c
  5802  0002B2  A0D8               	btfss	status,0,c
  5803  0002B4  0606               	decf	(strncmp@n+1)^0,f,c
  5804  0002B6  2805               	incf	strncmp@n^0,w,c
  5805  0002B8  E106               	bnz	u3871
  5806  0002BA  2806               	incf	(strncmp@n+1)^0,w,c
  5807  0002BC  A4D8               	btfss	status,2,c
  5808  0002BE  EF63  F001         	goto	u3871
  5809  0002C2  EF66  F001         	goto	u3870
  5810  0002C6                     u3871:
  5811  0002C6  FFFF               	dw	65535	; assembler added errata NOP
  5812  0002C8  EF75  F001         	goto	l3447
  5813  0002CC                     u3870:
  5814  0002CC  FFFF               	dw	65535	; assembler added errata NOP
  5815  0002CE  0E00               	movlw	0
  5816  0002D0  6E02               	movwf	(?_strncmp+1)^0,c
  5817  0002D2  0E00               	movlw	0
  5818  0002D4  6E01               	movwf	?_strncmp^0,c
  5819  0002D6  EFD0  F001         	goto	l1235
  5820  0002DA                     l3445:
  5821  0002DA  FFFF               	dw	65535	; assembler added errata NOP
  5822  0002DC  4A08               	infsnz	strncmp@l^0,f,c
  5823  0002DE  2A09               	incf	(strncmp@l+1)^0,f,c
  5824  0002E0  4A0A               	infsnz	strncmp@r^0,f,c
  5825  0002E2  2A0B               	incf	(strncmp@r+1)^0,f,c
  5826  0002E4  0605               	decf	strncmp@n^0,f,c
  5827  0002E6  A0D8               	btfss	status,0,c
  5828  0002E8  0606               	decf	(strncmp@n+1)^0,f,c
  5829  0002EA                     l3447:
  5830  0002EA  FFFF               	dw	65535	; assembler added errata NOP
  5831  0002EC  C008  FFF6         	movff	strncmp@l,tblptrl
  5832  0002F0  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5833  0002F4                     	if	0	;tblptru may be non-zero
  5834  0002F4                     	endif
  5835  0002F4                     	if	0	;tblptru may be non-zero
  5836  0002F4                     	endif
  5837  0002F4  0008               	tblrd		*
  5838  0002F6  FFFF               	dw	65535	; errata NOP
  5839  0002F8  50F5               	movf	tablat,w,c
  5840  0002FA  0900               	iorlw	0
  5841  0002FC  B4D8               	btfsc	status,2,c
  5842  0002FE  EF83  F001         	goto	u3881
  5843  000302  EF86  F001         	goto	u3880
  5844  000306                     u3881:
  5845  000306  FFFF               	dw	65535	; assembler added errata NOP
  5846  000308  EFBB  F001         	goto	l3455
  5847  00030C                     u3880:
  5848  00030C  FFFF               	dw	65535	; assembler added errata NOP
  5849  00030E  C00A  FFF6         	movff	strncmp@r,tblptrl
  5850  000312  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5851  000316                     	if	0	;tblptru may be non-zero
  5852  000316                     	endif
  5853  000316                     	if	0	;tblptru may be non-zero
  5854  000316                     	endif
  5855  000316  0008               	tblrd		*
  5856  000318  FFFF               	dw	65535	; errata NOP
  5857  00031A  50F5               	movf	tablat,w,c
  5858  00031C  0900               	iorlw	0
  5859  00031E  B4D8               	btfsc	status,2,c
  5860  000320  EF94  F001         	goto	u3891
  5861  000324  EF97  F001         	goto	u3890
  5862  000328                     u3891:
  5863  000328  FFFF               	dw	65535	; assembler added errata NOP
  5864  00032A  EFBB  F001         	goto	l3455
  5865  00032E                     u3890:
  5866  00032E  FFFF               	dw	65535	; assembler added errata NOP
  5867  000330  5005               	movf	strncmp@n^0,w,c
  5868  000332  1006               	iorwf	(strncmp@n+1)^0,w,c
  5869  000334  B4D8               	btfsc	status,2,c
  5870  000336  EF9F  F001         	goto	u3901
  5871  00033A  EFA2  F001         	goto	u3900
  5872  00033E                     u3901:
  5873  00033E  FFFF               	dw	65535	; assembler added errata NOP
  5874  000340  EFBB  F001         	goto	l3455
  5875  000344                     u3900:
  5876  000344  FFFF               	dw	65535	; assembler added errata NOP
  5877  000346  C008  FFF6         	movff	strncmp@l,tblptrl
  5878  00034A  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5879  00034E                     	if	0	;tblptru may be non-zero
  5880  00034E                     	endif
  5881  00034E                     	if	0	;tblptru may be non-zero
  5882  00034E                     	endif
  5883  00034E  0008               	tblrd		*
  5884  000350  FFFF               	dw	65535	; errata NOP
  5885  000352  CFF5 F007          	movff	tablat,??_strncmp
  5886  000356  C00A  FFF6         	movff	strncmp@r,tblptrl
  5887  00035A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5888  00035E                     	if	0	;tblptru may be non-zero
  5889  00035E                     	endif
  5890  00035E                     	if	0	;tblptru may be non-zero
  5891  00035E                     	endif
  5892  00035E  0008               	tblrd		*
  5893  000360  FFFF               	dw	65535	; errata NOP
  5894  000362  50F5               	movf	tablat,w,c
  5895  000364  1807               	xorwf	??_strncmp^0,w,c
  5896  000366  B4D8               	btfsc	status,2,c
  5897  000368  EFB8  F001         	goto	u3911
  5898  00036C  EFBB  F001         	goto	u3910
  5899  000370                     u3911:
  5900  000370  FFFF               	dw	65535	; assembler added errata NOP
  5901  000372  EF6D  F001         	goto	l3445
  5902  000376                     u3910:
  5903  000376                     l3455:
  5904  000376  FFFF               	dw	65535	; assembler added errata NOP
  5905  000378  C008  FFF6         	movff	strncmp@l,tblptrl
  5906  00037C  C009  FFF7         	movff	strncmp@l+1,tblptrh
  5907  000380                     	if	0	;tblptru may be non-zero
  5908  000380                     	endif
  5909  000380                     	if	0	;tblptru may be non-zero
  5910  000380                     	endif
  5911  000380  0008               	tblrd		*
  5912  000382  FFFF               	dw	65535	; errata NOP
  5913  000384  CFF5 F007          	movff	tablat,??_strncmp
  5914  000388  C00A  FFF6         	movff	strncmp@r,tblptrl
  5915  00038C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  5916  000390                     	if	0	;tblptru may be non-zero
  5917  000390                     	endif
  5918  000390                     	if	0	;tblptru may be non-zero
  5919  000390                     	endif
  5920  000390  0008               	tblrd		*
  5921  000392  FFFF               	dw	65535	; errata NOP
  5922  000394  50F5               	movf	tablat,w,c
  5923  000396  5C07               	subwf	??_strncmp^0,w,c
  5924  000398  6E01               	movwf	?_strncmp^0,c
  5925  00039A  6A02               	clrf	(?_strncmp+1)^0,c
  5926  00039C  A0D8               	btfss	status,0,c
  5927  00039E  0602               	decf	(?_strncmp+1)^0,f,c
  5928  0003A0                     l1235:
  5929  0003A0  FFFF               	dw	65535	; assembler added errata NOP
  5930  0003A2  0012               	return		;funcret
  5931  0003A4  FFFF               	dw	65535	; errata NOP
  5932  0003A6                     __end_of_strncmp:
  5933                           	callstack 0
  5934                           
  5935 ;; *************** function _stoa *****************
  5936 ;; Defined at:
  5937 ;;		line 546 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5938 ;; Parameters:    Size  Location     Type
  5939 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  5940 ;;		 -> vsnprintf@f(6), 
  5941 ;;  s               2   11[COMRAM] PTR unsigned char 
  5942 ;;		 -> ?_snprintf(2), STR_7(8), STR_6(9), STR_5(8), 
  5943 ;;		 -> STR_4(11), STR_3(5), STR_2(9), 
  5944 ;; Auto vars:     Size  Location     Type
  5945 ;;  nuls            7   14[COMRAM] unsigned char [7]
  5946 ;;  l               2   29[COMRAM] int 
  5947 ;;  p               2   27[COMRAM] int 
  5948 ;;  cp              2   25[COMRAM] PTR unsigned char 
  5949 ;;		 -> stoa@nuls(7), ?_snprintf(2), STR_7(8), STR_6(9), 
  5950 ;;		 -> STR_5(8), STR_4(11), STR_3(5), STR_2(9), 
  5951 ;;  w               2   23[COMRAM] int 
  5952 ;;  i               2   21[COMRAM] int 
  5953 ;; Return value:  Size  Location     Type
  5954 ;;                  2    9[COMRAM] int 
  5955 ;; Registers used:
  5956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5957 ;; Tracked objects:
  5958 ;;		On entry : 0/0
  5959 ;;		On exit  : 0/0
  5960 ;;		Unchanged: 0/0
  5961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5962 ;;      Params:         4       0       0       0       0       0       0
  5963 ;;      Locals:        17       0       0       0       0       0       0
  5964 ;;      Temps:          1       0       0       0       0       0       0
  5965 ;;      Totals:        22       0       0       0       0       0       0
  5966 ;;Total ram usage:       22 bytes
  5967 ;; Hardware stack levels used:    1
  5968 ;; Hardware stack levels required when called:    3
  5969 ;; This function calls:
  5970 ;;		_fputc
  5971 ;;		_strlen
  5972 ;; This function is called by:
  5973 ;;		_vfpfcnvrt
  5974 ;; This function uses a non-reentrant model
  5975 ;;
  5976                           
  5977                           	psect	text15
  5978  00335A                     __ptext15:
  5979                           	callstack 0
  5980  00335A                     _stoa:
  5981                           	callstack 0
  5982  00335A  FFFF               	dw	65535	; assembler added errata NOP
  5983  00335C                     
  5984                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 546: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 547: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 548:  
      +                             char *cp, nuls[] = "(null)";
  5985  00335C  EE20  F0C4         	lfsr	2,stoa@F1152
  5986  003360  EE10  F00F         	lfsr	1,stoa@nuls
  5987  003364  0E06               	movlw	6
  5988  003366                     u3461:
  5989  003366  CFDB FFE3          	movff	plusw2,plusw1
  5990  00336A  06E8               	decf	wreg,f,c
  5991  00336C  E2FC               	bc	u3461
  5992  00336E                     
  5993                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 549:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 552:     c
      +                          p = s;
  5994  00336E  C00C  F01A         	movff	stoa@s,stoa@cp
  5995  003372  C00D  F01B         	movff	stoa@s+1,stoa@cp+1
  5996  003376                     
  5997                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 553:     if (!cp)
      +                           {
  5998  003376  501A               	movf	stoa@cp^0,w,c
  5999  003378  101B               	iorwf	(stoa@cp+1)^0,w,c
  6000  00337A  A4D8               	btfss	status,2,c
  6001  00337C  EFC2  F019         	goto	u3471
  6002  003380  EFC5  F019         	goto	u3470
  6003  003384                     u3471:
  6004  003384  FFFF               	dw	65535	; assembler added errata NOP
  6005  003386  EFCA  F019         	goto	l3261
  6006  00338A                     u3470:
  6007  00338A  FFFF               	dw	65535	; assembler added errata NOP
  6008  00338C                     
  6009                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 554:         cp =
      +                           nuls;
  6010  00338C  0E0F               	movlw	low stoa@nuls
  6011  00338E  6E1A               	movwf	stoa@cp^0,c
  6012  003390  0E00               	movlw	high stoa@nuls
  6013  003392  6E1B               	movwf	(stoa@cp+1)^0,c
  6014  003394                     l3261:
  6015  003394  FFFF               	dw	65535	; assembler added errata NOP
  6016                           
  6017                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 558:     l = strl
      +                          en(cp);
  6018  003396  C01A  F001         	movff	stoa@cp,strlen@s
  6019  00339A  C01B  F002         	movff	stoa@cp+1,strlen@s+1
  6020  00339E  ECBE  F03E         	call	_strlen	;wreg free
  6021  0033A2  C001  F01E         	movff	?_strlen,stoa@l
  6022  0033A6  C002  F01F         	movff	?_strlen+1,stoa@l+1
  6023  0033AA                     
  6024                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 559:     p = prec
      +                          ;
  6025  0033AA  C088  F01C         	movff	_prec,stoa@p
  6026  0033AE  C089  F01D         	movff	_prec+1,stoa@p+1
  6027  0033B2                     
  6028                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 560:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  6029  0033B2  BE1D               	btfsc	(stoa@p+1)^0,7,c
  6030  0033B4  EFDE  F019         	goto	u3481
  6031  0033B8  EFE1  F019         	goto	u3480
  6032  0033BC                     u3481:
  6033  0033BC  FFFF               	dw	65535	; assembler added errata NOP
  6034  0033BE  EFFA  F019         	goto	l995
  6035  0033C2                     u3480:
  6036  0033C2  FFFF               	dw	65535	; assembler added errata NOP
  6037  0033C4  501E               	movf	stoa@l^0,w,c
  6038  0033C6  5C1C               	subwf	stoa@p^0,w,c
  6039  0033C8  501D               	movf	(stoa@p+1)^0,w,c
  6040  0033CA  0A80               	xorlw	128
  6041  0033CC  6E0E               	movwf	??_stoa^0,c
  6042  0033CE  501F               	movf	(stoa@l+1)^0,w,c
  6043  0033D0  0A80               	xorlw	128
  6044  0033D2  580E               	subwfb	??_stoa^0,w,c
  6045  0033D4  A0D8               	btfss	status,0,c
  6046  0033D6  EFEF  F019         	goto	u3491
  6047  0033DA  EFF2  F019         	goto	u3490
  6048  0033DE                     u3491:
  6049  0033DE  FFFF               	dw	65535	; assembler added errata NOP
  6050  0033E0  EFF5  F019         	goto	l993
  6051  0033E4                     u3490:
  6052  0033E4  FFFF               	dw	65535	; assembler added errata NOP
  6053  0033E6  EFFA  F019         	goto	l995
  6054  0033EA                     l993:
  6055  0033EA  FFFF               	dw	65535	; assembler added errata NOP
  6056  0033EC  C01C  F01E         	movff	stoa@p,stoa@l
  6057  0033F0  C01D  F01F         	movff	stoa@p+1,stoa@l+1
  6058  0033F4                     l995:
  6059  0033F4  FFFF               	dw	65535	; assembler added errata NOP
  6060                           
  6061                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 561:     p = l;
  6062  0033F6  C01E  F01C         	movff	stoa@l,stoa@p
  6063  0033FA  C01F  F01D         	movff	stoa@l+1,stoa@p+1
  6064                           
  6065                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 562:     w = widt
      +                          h;
  6066  0033FE  C086  F018         	movff	_width,stoa@w
  6067  003402  C087  F019         	movff	_width+1,stoa@w+1
  6068                           
  6069                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 565:     if (!(fl
      +                          ags & (1 << 0))) {
  6070  003406  0100               	movlb	0	; () banked
  6071  003408  B18A               	btfsc	_flags& (0+255),0,b
  6072  00340A  EF09  F01A         	goto	u3501
  6073  00340E  EF0C  F01A         	goto	u3500
  6074  003412                     u3501:
  6075  003412  FFFF               	dw	65535	; assembler added errata NOP
  6076  003414  EF2D  F01A         	goto	l3277
  6077  003418                     u3500:
  6078  003418  FFFF               	dw	65535	; assembler added errata NOP
  6079  00341A  EF1C  F01A         	goto	l3275
  6080  00341E                     l3271:
  6081  00341E  FFFF               	dw	65535	; assembler added errata NOP
  6082                           
  6083                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 567:             
      +                          fputc(' ', fp);
  6084  003420  0E00               	movlw	0
  6085  003422  6E02               	movwf	(fputc@c+1)^0,c
  6086  003424  0E20               	movlw	32
  6087  003426  6E01               	movwf	fputc@c^0,c
  6088  003428  C00A  F003         	movff	stoa@fp,fputc@fp
  6089  00342C  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  6090  003430  EC8F  F03F         	call	_fputc	;wreg free
  6091  003434                     
  6092                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 568:             
      +                          ++l;
  6093  003434  4A1E               	infsnz	stoa@l^0,f,c
  6094  003436  2A1F               	incf	(stoa@l+1)^0,f,c
  6095  003438                     l3275:
  6096  003438  FFFF               	dw	65535	; assembler added errata NOP
  6097                           
  6098                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 566:         whil
      +                          e (l < w) {
  6099  00343A  5018               	movf	stoa@w^0,w,c
  6100  00343C  5C1E               	subwf	stoa@l^0,w,c
  6101  00343E  501F               	movf	(stoa@l+1)^0,w,c
  6102  003440  0A80               	xorlw	128
  6103  003442  6E0E               	movwf	??_stoa^0,c
  6104  003444  5019               	movf	(stoa@w+1)^0,w,c
  6105  003446  0A80               	xorlw	128
  6106  003448  580E               	subwfb	??_stoa^0,w,c
  6107  00344A  A0D8               	btfss	status,0,c
  6108  00344C  EF2A  F01A         	goto	u3511
  6109  003450  EF2D  F01A         	goto	u3510
  6110  003454                     u3511:
  6111  003454  FFFF               	dw	65535	; assembler added errata NOP
  6112  003456  EF0F  F01A         	goto	l3271
  6113  00345A                     u3510:
  6114  00345A                     l3277:
  6115  00345A  FFFF               	dw	65535	; assembler added errata NOP
  6116                           
  6117                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 573:     i = 0;
  6118  00345C  0E00               	movlw	0
  6119  00345E  6E17               	movwf	(stoa@i+1)^0,c
  6120  003460  0E00               	movlw	0
  6121  003462  6E16               	movwf	stoa@i^0,c
  6122                           
  6123                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  6124  003464  EF54  F01A         	goto	l3285
  6125  003468                     l3279:
  6126  003468  FFFF               	dw	65535	; assembler added errata NOP
  6127                           
  6128                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 575:         fput
      +                          c(*cp, fp);
  6129  00346A  C01A  FFF6         	movff	stoa@cp,tblptrl
  6130  00346E  C01B  FFF7         	movff	stoa@cp+1,tblptrh
  6131  003472  6AF8               	clrf	tblptru,c
  6132  003474  0E05               	movlw	(high __ramtop+-1)
  6133  003476  64F7               	cpfsgt	tblptrh,c
  6134  003478  D004               	bra	u3527
  6135  00347A  0008               	tblrd		*
  6136  00347C  FFFF               	dw	65535	; errata NOP
  6137  00347E  50F5               	movf	tablat,w,c
  6138  003480  D005               	bra	u3520
  6139  003482                     u3527:
  6140  003482  CFF6 FFE1          	movff	tblptrl,fsr1l
  6141  003486  CFF7 FFE2          	movff	tblptrh,fsr1h
  6142  00348A  50E7               	movf	indf1,w,c
  6143  00348C                     u3520:
  6144  00348C  6E0E               	movwf	??_stoa^0,c
  6145  00348E  500E               	movf	??_stoa^0,w,c
  6146  003490  6E01               	movwf	fputc@c^0,c
  6147  003492  6A02               	clrf	(fputc@c+1)^0,c
  6148  003494  C00A  F003         	movff	stoa@fp,fputc@fp
  6149  003498  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  6150  00349C  EC8F  F03F         	call	_fputc	;wreg free
  6151  0034A0                     
  6152                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 576:         ++cp
      +                          ;
  6153  0034A0  4A1A               	infsnz	stoa@cp^0,f,c
  6154  0034A2  2A1B               	incf	(stoa@cp+1)^0,f,c
  6155  0034A4                     
  6156                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 577:         ++i;
  6157  0034A4  4A16               	infsnz	stoa@i^0,f,c
  6158  0034A6  2A17               	incf	(stoa@i+1)^0,f,c
  6159  0034A8                     l3285:
  6160  0034A8  FFFF               	dw	65535	; assembler added errata NOP
  6161                           
  6162                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 574:     while (i
      +                           < p) {
  6163  0034AA  501C               	movf	stoa@p^0,w,c
  6164  0034AC  5C16               	subwf	stoa@i^0,w,c
  6165  0034AE  5017               	movf	(stoa@i+1)^0,w,c
  6166  0034B0  0A80               	xorlw	128
  6167  0034B2  6E0E               	movwf	??_stoa^0,c
  6168  0034B4  501D               	movf	(stoa@p+1)^0,w,c
  6169  0034B6  0A80               	xorlw	128
  6170  0034B8  580E               	subwfb	??_stoa^0,w,c
  6171  0034BA  A0D8               	btfss	status,0,c
  6172  0034BC  EF62  F01A         	goto	u3531
  6173  0034C0  EF65  F01A         	goto	u3530
  6174  0034C4                     u3531:
  6175  0034C4  FFFF               	dw	65535	; assembler added errata NOP
  6176  0034C6  EF34  F01A         	goto	l3279
  6177  0034CA                     u3530:
  6178  0034CA  FFFF               	dw	65535	; assembler added errata NOP
  6179  0034CC                     
  6180                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 581:     if (flag
      +                          s & (1 << 0)) {
  6181  0034CC  0100               	movlb	0	; () banked
  6182  0034CE  A18A               	btfss	_flags& (0+255),0,b
  6183  0034D0  EF6C  F01A         	goto	u3541
  6184  0034D4  EF6F  F01A         	goto	u3540
  6185  0034D8                     u3541:
  6186  0034D8  FFFF               	dw	65535	; assembler added errata NOP
  6187  0034DA  EF90  F01A         	goto	l1005
  6188  0034DE                     u3540:
  6189  0034DE  FFFF               	dw	65535	; assembler added errata NOP
  6190  0034E0  EF7F  F01A         	goto	l3293
  6191  0034E4                     l3289:
  6192  0034E4  FFFF               	dw	65535	; assembler added errata NOP
  6193                           
  6194                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 583:             
      +                          fputc(' ', fp);
  6195  0034E6  0E00               	movlw	0
  6196  0034E8  6E02               	movwf	(fputc@c+1)^0,c
  6197  0034EA  0E20               	movlw	32
  6198  0034EC  6E01               	movwf	fputc@c^0,c
  6199  0034EE  C00A  F003         	movff	stoa@fp,fputc@fp
  6200  0034F2  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
  6201  0034F6  EC8F  F03F         	call	_fputc	;wreg free
  6202  0034FA                     
  6203                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 584:             
      +                          ++l;
  6204  0034FA  4A1E               	infsnz	stoa@l^0,f,c
  6205  0034FC  2A1F               	incf	(stoa@l+1)^0,f,c
  6206  0034FE                     l3293:
  6207  0034FE  FFFF               	dw	65535	; assembler added errata NOP
  6208                           
  6209                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 582:         whil
      +                          e (l < w) {
  6210  003500  5018               	movf	stoa@w^0,w,c
  6211  003502  5C1E               	subwf	stoa@l^0,w,c
  6212  003504  501F               	movf	(stoa@l+1)^0,w,c
  6213  003506  0A80               	xorlw	128
  6214  003508  6E0E               	movwf	??_stoa^0,c
  6215  00350A  5019               	movf	(stoa@w+1)^0,w,c
  6216  00350C  0A80               	xorlw	128
  6217  00350E  580E               	subwfb	??_stoa^0,w,c
  6218  003510  A0D8               	btfss	status,0,c
  6219  003512  EF8D  F01A         	goto	u3551
  6220  003516  EF90  F01A         	goto	u3550
  6221  00351A                     u3551:
  6222  00351A  FFFF               	dw	65535	; assembler added errata NOP
  6223  00351C  EF72  F01A         	goto	l3289
  6224  003520                     u3550:
  6225  003520                     l1005:
  6226  003520  FFFF               	dw	65535	; assembler added errata NOP
  6227                           
  6228                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 588:     return l
      +                          ;
  6229  003522  C01E  F00A         	movff	stoa@l,?_stoa
  6230  003526  C01F  F00B         	movff	stoa@l+1,?_stoa+1
  6231  00352A  0012               	return		;funcret
  6232  00352C  FFFF               	dw	65535	; errata NOP
  6233  00352E                     __end_of_stoa:
  6234                           	callstack 0
  6235                           
  6236 ;; *************** function _otoa *****************
  6237 ;; Defined at:
  6238 ;;		line 507 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6241 ;;		 -> vsnprintf@f(6), 
  6242 ;;  d               8   29[COMRAM] unsigned long long 
  6243 ;; Auto vars:     Size  Location     Type
  6244 ;;  n               8   51[COMRAM] unsigned long long 
  6245 ;;  i               2   59[COMRAM] int 
  6246 ;;  w               2   49[COMRAM] int 
  6247 ;;  t               2   47[COMRAM] int 
  6248 ;;  p               2   45[COMRAM] int 
  6249 ;; Return value:  Size  Location     Type
  6250 ;;                  2   27[COMRAM] int 
  6251 ;; Registers used:
  6252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6258 ;;      Params:        10       0       0       0       0       0       0
  6259 ;;      Locals:        16       0       0       0       0       0       0
  6260 ;;      Temps:          8       0       0       0       0       0       0
  6261 ;;      Totals:        34       0       0       0       0       0       0
  6262 ;;Total ram usage:       34 bytes
  6263 ;; Hardware stack levels used:    1
  6264 ;; Hardware stack levels required when called:    5
  6265 ;; This function calls:
  6266 ;;		_pad
  6267 ;; This function is called by:
  6268 ;;		_vfpfcnvrt
  6269 ;; This function uses a non-reentrant model
  6270 ;;
  6271                           
  6272                           	psect	text16
  6273  003134                     __ptext16:
  6274                           	callstack 0
  6275  003134                     _otoa:
  6276                           	callstack 0
  6277  003134  FFFF               	dw	65535	; assembler added errata NOP
  6278  003136                     
  6279                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 507: static int o
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 508: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 509:     int i, p, t, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\com
      +                          mon\doprnt.c: 510:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\so
      +                          urces\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  6280  003136  0100               	movlb	0	; () banked
  6281  003138  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6282  00313A  EFA1  F018         	goto	u3361
  6283  00313E  EFA4  F018         	goto	u3360
  6284  003142                     u3361:
  6285  003142  FFFF               	dw	65535	; assembler added errata NOP
  6286  003144  EFA6  F018         	goto	l3209
  6287  003148                     u3360:
  6288  003148  FFFF               	dw	65535	; assembler added errata NOP
  6289  00314A                     
  6290                           ; BSR set to: 0
  6291                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 514:         flag
      +                          s &= ~(1 << 1);
  6292  00314A  938A               	bcf	_flags& (0+255),1,b
  6293  00314C                     l3209:
  6294  00314C  FFFF               	dw	65535	; assembler added errata NOP
  6295                           
  6296                           ; BSR set to: 0
  6297                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 516:     p = (0 <
      +                           prec) ? prec : 1;
  6298  00314E  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6299  003150  EFB5  F018         	goto	u3370
  6300  003154  5189               	movf	(_prec+1)& (0+255),w,b
  6301  003156  E106               	bnz	u3371
  6302  003158  0588               	decf	_prec& (0+255),w,b
  6303  00315A  B0D8               	btfsc	status,0,c
  6304  00315C  EFB2  F018         	goto	u3371
  6305  003160  EFB5  F018         	goto	u3370
  6306  003164                     u3371:
  6307  003164  FFFF               	dw	65535	; assembler added errata NOP
  6308  003166  EFBC  F018         	goto	l975
  6309  00316A                     u3370:
  6310  00316A  FFFF               	dw	65535	; assembler added errata NOP
  6311  00316C                     
  6312                           ; BSR set to: 0
  6313  00316C  0E00               	movlw	0
  6314  00316E  6E2F               	movwf	(otoa@p+1)^0,c
  6315  003170  0E01               	movlw	1
  6316  003172  6E2E               	movwf	otoa@p^0,c
  6317  003174  EFC1  F018         	goto	l977
  6318  003178                     l975:
  6319  003178  FFFF               	dw	65535	; assembler added errata NOP
  6320                           
  6321                           ; BSR set to: 0
  6322  00317A  C088  F02E         	movff	_prec,otoa@p
  6323  00317E  C089  F02F         	movff	_prec+1,otoa@p+1
  6324  003182                     l977:
  6325  003182  FFFF               	dw	65535	; assembler added errata NOP
  6326                           
  6327                           ; BSR set to: 0
  6328                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 517:     w = widt
      +                          h;
  6329  003184  C086  F032         	movff	_width,otoa@w
  6330  003188  C087  F033         	movff	_width+1,otoa@w+1
  6331                           
  6332                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 520:     n = d;
  6333  00318C  C01E  F034         	movff	otoa@d,otoa@n
  6334  003190  C01F  F035         	movff	otoa@d+1,otoa@n+1
  6335  003194  C020  F036         	movff	otoa@d+2,otoa@n+2
  6336  003198  C021  F037         	movff	otoa@d+3,otoa@n+3
  6337  00319C  C022  F038         	movff	otoa@d+4,otoa@n+4
  6338  0031A0  C023  F039         	movff	otoa@d+5,otoa@n+5
  6339  0031A4  C024  F03A         	movff	otoa@d+6,otoa@n+6
  6340  0031A8  C025  F03B         	movff	otoa@d+7,otoa@n+7
  6341  0031AC                     
  6342                           ; BSR set to: 0
  6343                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 521:     i = size
      +                          of(dbuf) - 1;
  6344  0031AC  0E00               	movlw	0
  6345  0031AE  6E3D               	movwf	(otoa@i+1)^0,c
  6346  0031B0  0E1F               	movlw	31
  6347  0031B2  6E3C               	movwf	otoa@i^0,c
  6348  0031B4                     
  6349                           ; BSR set to: 0
  6350                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 522:     dbuf[i] 
      +                          = '\0';
  6351  0031B4  0E00               	movlw	0
  6352  0031B6  6FAD               	movwf	(_dbuf+31)& (0+255),b
  6353  0031B8                     
  6354                           ; BSR set to: 0
  6355                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 523:     t = 0;
  6356  0031B8  0E00               	movlw	0
  6357  0031BA  6E31               	movwf	(otoa@t+1)^0,c
  6358  0031BC  0E00               	movlw	0
  6359  0031BE  6E30               	movwf	otoa@t^0,c
  6360                           
  6361                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 524:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6362  0031C0  EF2A  F019         	goto	l3231
  6363  0031C4                     l3219:
  6364  0031C4  FFFF               	dw	65535	; assembler added errata NOP
  6365                           
  6366                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 525:         --i;
  6367  0031C6  063C               	decf	otoa@i^0,f,c
  6368  0031C8  A0D8               	btfss	status,0,c
  6369  0031CA  063D               	decf	(otoa@i+1)^0,f,c
  6370  0031CC                     
  6371                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 526:         t = 
      +                          n & 07;
  6372  0031CC  0E07               	movlw	7
  6373  0031CE  1434               	andwf	otoa@n^0,w,c
  6374  0031D0  6E30               	movwf	otoa@t^0,c
  6375  0031D2  6A31               	clrf	(otoa@t+1)^0,c
  6376  0031D4                     
  6377                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 527:         dbuf
      +                          [i] = '0' + t;
  6378  0031D4  0E8E               	movlw	low _dbuf
  6379  0031D6  243C               	addwf	otoa@i^0,w,c
  6380  0031D8  6ED9               	movwf	fsr2l,c
  6381  0031DA  0E00               	movlw	high _dbuf
  6382  0031DC  203D               	addwfc	(otoa@i+1)^0,w,c
  6383  0031DE  6EDA               	movwf	fsr2h,c
  6384  0031E0  5030               	movf	otoa@t^0,w,c
  6385  0031E2  0F30               	addlw	48
  6386  0031E4  6EDF               	movwf	indf2,c
  6387  0031E6                     
  6388                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 528:         --p;
  6389  0031E6  062E               	decf	otoa@p^0,f,c
  6390  0031E8  A0D8               	btfss	status,0,c
  6391  0031EA  062F               	decf	(otoa@p+1)^0,f,c
  6392  0031EC                     
  6393                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 529:         --w;
  6394  0031EC  0632               	decf	otoa@w^0,f,c
  6395  0031EE  A0D8               	btfss	status,0,c
  6396  0031F0  0633               	decf	(otoa@w+1)^0,f,c
  6397  0031F2                     
  6398                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 530:         n = 
      +                          n >> 3;
  6399  0031F2  C034  F026         	movff	otoa@n,??_otoa
  6400  0031F6  C035  F027         	movff	otoa@n+1,??_otoa+1
  6401  0031FA  C036  F028         	movff	otoa@n+2,??_otoa+2
  6402  0031FE  C037  F029         	movff	otoa@n+3,??_otoa+3
  6403  003202  C038  F02A         	movff	otoa@n+4,??_otoa+4
  6404  003206  C039  F02B         	movff	otoa@n+5,??_otoa+5
  6405  00320A  C03A  F02C         	movff	otoa@n+6,??_otoa+6
  6406  00320E  C03B  F02D         	movff	otoa@n+7,??_otoa+7
  6407  003212  0E04               	movlw	4
  6408  003214  EF16  F019         	goto	u3380
  6409  003218                     u3385:
  6410  003218  FFFF               	dw	65535	; assembler added errata NOP
  6411  00321A  90D8               	bcf	status,0,c
  6412  00321C  322D               	rrcf	(??_otoa+7)^0,f,c
  6413  00321E  322C               	rrcf	(??_otoa+6)^0,f,c
  6414  003220  322B               	rrcf	(??_otoa+5)^0,f,c
  6415  003222  322A               	rrcf	(??_otoa+4)^0,f,c
  6416  003224  3229               	rrcf	(??_otoa+3)^0,f,c
  6417  003226  3228               	rrcf	(??_otoa+2)^0,f,c
  6418  003228  3227               	rrcf	(??_otoa+1)^0,f,c
  6419  00322A  3226               	rrcf	??_otoa^0,f,c
  6420  00322C                     u3380:
  6421  00322C  FFFF               	dw	65535	; assembler added errata NOP
  6422  00322E  2EE8               	decfsz	wreg,f,c
  6423  003230  EF0C  F019         	goto	u3385
  6424  003234  C026  F034         	movff	??_otoa,otoa@n
  6425  003238  C027  F035         	movff	??_otoa+1,otoa@n+1
  6426  00323C  C028  F036         	movff	??_otoa+2,otoa@n+2
  6427  003240  C029  F037         	movff	??_otoa+3,otoa@n+3
  6428  003244  C02A  F038         	movff	??_otoa+4,otoa@n+4
  6429  003248  C02B  F039         	movff	??_otoa+5,otoa@n+5
  6430  00324C  C02C  F03A         	movff	??_otoa+6,otoa@n+6
  6431  003250  C02D  F03B         	movff	??_otoa+7,otoa@n+7
  6432  003254                     l3231:
  6433  003254  FFFF               	dw	65535	; assembler added errata NOP
  6434                           
  6435                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 524:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6436  003256  BE3D               	btfsc	(otoa@i+1)^0,7,c
  6437  003258  EF36  F019         	goto	u3391
  6438  00325C  503D               	movf	(otoa@i+1)^0,w,c
  6439  00325E  E109               	bnz	u3390
  6440  003260  043C               	decf	otoa@i^0,w,c
  6441  003262  A0D8               	btfss	status,0,c
  6442  003264  EF36  F019         	goto	u3391
  6443  003268  EF39  F019         	goto	u3390
  6444  00326C                     u3391:
  6445  00326C  FFFF               	dw	65535	; assembler added errata NOP
  6446  00326E  EF72  F019         	goto	l984
  6447  003272                     u3390:
  6448  003272  FFFF               	dw	65535	; assembler added errata NOP
  6449  003274  5034               	movf	otoa@n^0,w,c
  6450  003276  1035               	iorwf	(otoa@n+1)^0,w,c
  6451  003278  1036               	iorwf	(otoa@n+2)^0,w,c
  6452  00327A  1037               	iorwf	(otoa@n+3)^0,w,c
  6453  00327C  1038               	iorwf	(otoa@n+4)^0,w,c
  6454  00327E  1039               	iorwf	(otoa@n+5)^0,w,c
  6455  003280  103A               	iorwf	(otoa@n+6)^0,w,c
  6456  003282  103B               	iorwf	(otoa@n+7)^0,w,c
  6457  003284  A4D8               	btfss	status,2,c
  6458  003286  EF47  F019         	goto	u3401
  6459  00328A  EF4A  F019         	goto	u3400
  6460  00328E                     u3401:
  6461  00328E  FFFF               	dw	65535	; assembler added errata NOP
  6462  003290  EFE2  F018         	goto	l3219
  6463  003294                     u3400:
  6464  003294  FFFF               	dw	65535	; assembler added errata NOP
  6465  003296  BE2F               	btfsc	(otoa@p+1)^0,7,c
  6466  003298  EF59  F019         	goto	u3410
  6467  00329C  502F               	movf	(otoa@p+1)^0,w,c
  6468  00329E  E106               	bnz	u3411
  6469  0032A0  042E               	decf	otoa@p^0,w,c
  6470  0032A2  B0D8               	btfsc	status,0,c
  6471  0032A4  EF56  F019         	goto	u3411
  6472  0032A8  EF59  F019         	goto	u3410
  6473  0032AC                     u3411:
  6474  0032AC  FFFF               	dw	65535	; assembler added errata NOP
  6475  0032AE  EFE2  F018         	goto	l3219
  6476  0032B2                     u3410:
  6477  0032B2  FFFF               	dw	65535	; assembler added errata NOP
  6478  0032B4  BE33               	btfsc	(otoa@w+1)^0,7,c
  6479  0032B6  EF65  F019         	goto	u3421
  6480  0032BA  5033               	movf	(otoa@w+1)^0,w,c
  6481  0032BC  E109               	bnz	u3420
  6482  0032BE  0432               	decf	otoa@w^0,w,c
  6483  0032C0  A0D8               	btfss	status,0,c
  6484  0032C2  EF65  F019         	goto	u3421
  6485  0032C6  EF68  F019         	goto	u3420
  6486  0032CA                     u3421:
  6487  0032CA  FFFF               	dw	65535	; assembler added errata NOP
  6488  0032CC  EF72  F019         	goto	l984
  6489  0032D0                     u3420:
  6490  0032D0  FFFF               	dw	65535	; assembler added errata NOP
  6491  0032D2  0100               	movlb	0	; () banked
  6492  0032D4  B38A               	btfsc	_flags& (0+255),1,b
  6493  0032D6  EF6F  F019         	goto	u3431
  6494  0032DA  EF72  F019         	goto	u3430
  6495  0032DE                     u3431:
  6496  0032DE  FFFF               	dw	65535	; assembler added errata NOP
  6497  0032E0  EFE2  F018         	goto	l3219
  6498  0032E4                     u3430:
  6499  0032E4                     l984:
  6500  0032E4  FFFF               	dw	65535	; assembler added errata NOP
  6501                           
  6502                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 534:     if ((fla
      +                          gs & (1 << 4)) && t) {
  6503  0032E6  0100               	movlb	0	; () banked
  6504  0032E8  A98A               	btfss	_flags& (0+255),4,b
  6505  0032EA  EF79  F019         	goto	u3441
  6506  0032EE  EF7C  F019         	goto	u3440
  6507  0032F2                     u3441:
  6508  0032F2  FFFF               	dw	65535	; assembler added errata NOP
  6509  0032F4  EF96  F019         	goto	l3249
  6510  0032F8                     u3440:
  6511  0032F8  FFFF               	dw	65535	; assembler added errata NOP
  6512  0032FA                     
  6513                           ; BSR set to: 0
  6514  0032FA  5030               	movf	otoa@t^0,w,c
  6515  0032FC  1031               	iorwf	(otoa@t+1)^0,w,c
  6516  0032FE  B4D8               	btfsc	status,2,c
  6517  003300  EF84  F019         	goto	u3451
  6518  003304  EF87  F019         	goto	u3450
  6519  003308                     u3451:
  6520  003308  FFFF               	dw	65535	; assembler added errata NOP
  6521  00330A  EF96  F019         	goto	l3249
  6522  00330E                     u3450:
  6523  00330E  FFFF               	dw	65535	; assembler added errata NOP
  6524  003310                     
  6525                           ; BSR set to: 0
  6526                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 535:         --i;
  6527  003310  063C               	decf	otoa@i^0,f,c
  6528  003312  A0D8               	btfss	status,0,c
  6529  003314  063D               	decf	(otoa@i+1)^0,f,c
  6530  003316                     
  6531                           ; BSR set to: 0
  6532                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 536:         dbuf
      +                          [i] = '0';
  6533  003316  0E8E               	movlw	low _dbuf
  6534  003318  243C               	addwf	otoa@i^0,w,c
  6535  00331A  6ED9               	movwf	fsr2l,c
  6536  00331C  0E00               	movlw	high _dbuf
  6537  00331E  203D               	addwfc	(otoa@i+1)^0,w,c
  6538  003320  6EDA               	movwf	fsr2h,c
  6539  003322  0E30               	movlw	48
  6540  003324  6EDF               	movwf	indf2,c
  6541  003326                     
  6542                           ; BSR set to: 0
  6543                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 537:         --w;
  6544  003326  0632               	decf	otoa@w^0,f,c
  6545  003328  A0D8               	btfss	status,0,c
  6546  00332A  0633               	decf	(otoa@w+1)^0,f,c
  6547  00332C                     l3249:
  6548  00332C  FFFF               	dw	65535	; assembler added errata NOP
  6549                           
  6550                           ; BSR set to: 0
  6551                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 541:     return p
      +                          ad(fp, &dbuf[i], w);
  6552  00332E  C01C  F011         	movff	otoa@fp,pad@fp
  6553  003332  C01D  F012         	movff	otoa@fp+1,pad@fp+1
  6554  003336  0E8E               	movlw	low _dbuf
  6555  003338  243C               	addwf	otoa@i^0,w,c
  6556  00333A  6E13               	movwf	pad@buf^0,c
  6557  00333C  0E00               	movlw	high _dbuf
  6558  00333E  203D               	addwfc	(otoa@i+1)^0,w,c
  6559  003340  6E14               	movwf	(pad@buf+1)^0,c
  6560  003342  C032  F015         	movff	otoa@w,pad@p
  6561  003346  C033  F016         	movff	otoa@w+1,pad@p+1
  6562  00334A  EC48  F002         	call	_pad	;wreg free
  6563  00334E  C011  F01C         	movff	?_pad,?_otoa
  6564  003352  C012  F01D         	movff	?_pad+1,?_otoa+1
  6565  003356  0012               	return		;funcret
  6566  003358  FFFF               	dw	65535	; errata NOP
  6567  00335A                     __end_of_otoa:
  6568                           	callstack 0
  6569                           
  6570 ;; *************** function _dtoa *****************
  6571 ;; Defined at:
  6572 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6573 ;; Parameters:    Size  Location     Type
  6574 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6575 ;;		 -> vsnprintf@f(6), 
  6576 ;;  d               8   29[COMRAM] long long 
  6577 ;; Auto vars:     Size  Location     Type
  6578 ;;  n               8   53[COMRAM] long long 
  6579 ;;  i               2   61[COMRAM] int 
  6580 ;;  s               2   51[COMRAM] int 
  6581 ;;  w               2   49[COMRAM] int 
  6582 ;;  p               2   47[COMRAM] int 
  6583 ;; Return value:  Size  Location     Type
  6584 ;;                  2   27[COMRAM] int 
  6585 ;; Registers used:
  6586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6587 ;; Tracked objects:
  6588 ;;		On entry : 0/0
  6589 ;;		On exit  : 0/0
  6590 ;;		Unchanged: 0/0
  6591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6592 ;;      Params:        10       0       0       0       0       0       0
  6593 ;;      Locals:        18       0       0       0       0       0       0
  6594 ;;      Temps:          8       0       0       0       0       0       0
  6595 ;;      Totals:        36       0       0       0       0       0       0
  6596 ;;Total ram usage:       36 bytes
  6597 ;; Hardware stack levels used:    1
  6598 ;; Hardware stack levels required when called:    5
  6599 ;; This function calls:
  6600 ;;		___aodiv
  6601 ;;		___aomod
  6602 ;;		_abs
  6603 ;;		_pad
  6604 ;; This function is called by:
  6605 ;;		_vfpfcnvrt
  6606 ;; This function uses a non-reentrant model
  6607 ;;
  6608                           
  6609                           	psect	text17
  6610  0028A4                     __ptext17:
  6611                           	callstack 0
  6612  0028A4                     _dtoa:
  6613                           	callstack 0
  6614  0028A4  FFFF               	dw	65535	; assembler added errata NOP
  6615  0028A6                     
  6616                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  6617  0028A6  C01E  F036         	movff	dtoa@d,dtoa@n
  6618  0028AA  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  6619  0028AE  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  6620  0028B2  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  6621  0028B6  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  6622  0028BA  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  6623  0028BE  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  6624  0028C2  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  6625  0028C6                     
  6626                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  6627  0028C6  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  6628  0028C8  EF68  F014         	goto	u3211
  6629  0028CC  EF6C  F014         	goto	u3210
  6630  0028D0                     u3211:
  6631  0028D0  FFFF               	dw	65535	; assembler added errata NOP
  6632  0028D2  0E01               	movlw	1
  6633  0028D4  EF6E  F014         	goto	u3220
  6634  0028D8                     u3210:
  6635  0028D8  FFFF               	dw	65535	; assembler added errata NOP
  6636  0028DA  0E00               	movlw	0
  6637  0028DC                     u3220:
  6638  0028DC  FFFF               	dw	65535	; assembler added errata NOP
  6639  0028DE  6E34               	movwf	dtoa@s^0,c
  6640  0028E0  6A35               	clrf	(dtoa@s+1)^0,c
  6641                           
  6642                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  6643  0028E2  5034               	movf	dtoa@s^0,w,c
  6644  0028E4  1035               	iorwf	(dtoa@s+1)^0,w,c
  6645  0028E6  B4D8               	btfsc	status,2,c
  6646  0028E8  EF78  F014         	goto	u3231
  6647  0028EC  EF7B  F014         	goto	u3230
  6648  0028F0                     u3231:
  6649  0028F0  FFFF               	dw	65535	; assembler added errata NOP
  6650  0028F2  EF8C  F014         	goto	l3149
  6651  0028F6                     u3230:
  6652  0028F6  FFFF               	dw	65535	; assembler added errata NOP
  6653  0028F8                     
  6654                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  6655  0028F8  1E3D               	comf	(dtoa@n+7)^0,f,c
  6656  0028FA  1E3C               	comf	(dtoa@n+6)^0,f,c
  6657  0028FC  1E3B               	comf	(dtoa@n+5)^0,f,c
  6658  0028FE  1E3A               	comf	(dtoa@n+4)^0,f,c
  6659  002900  1E39               	comf	(dtoa@n+3)^0,f,c
  6660  002902  1E38               	comf	(dtoa@n+2)^0,f,c
  6661  002904  1E37               	comf	(dtoa@n+1)^0,f,c
  6662  002906  6C36               	negf	dtoa@n^0,c
  6663  002908  0E00               	movlw	0
  6664  00290A  2237               	addwfc	(dtoa@n+1)^0,f,c
  6665  00290C  2238               	addwfc	(dtoa@n+2)^0,f,c
  6666  00290E  2239               	addwfc	(dtoa@n+3)^0,f,c
  6667  002910  223A               	addwfc	(dtoa@n+4)^0,f,c
  6668  002912  223B               	addwfc	(dtoa@n+5)^0,f,c
  6669  002914  223C               	addwfc	(dtoa@n+6)^0,f,c
  6670  002916  223D               	addwfc	(dtoa@n+7)^0,f,c
  6671  002918                     l3149:
  6672  002918  FFFF               	dw	65535	; assembler added errata NOP
  6673                           
  6674                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  6675  00291A  0100               	movlb	0	; () banked
  6676  00291C  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6677  00291E  EF93  F014         	goto	u3241
  6678  002922  EF96  F014         	goto	u3240
  6679  002926                     u3241:
  6680  002926  FFFF               	dw	65535	; assembler added errata NOP
  6681  002928  EF98  F014         	goto	l3153
  6682  00292C                     u3240:
  6683  00292C  FFFF               	dw	65535	; assembler added errata NOP
  6684  00292E                     
  6685                           ; BSR set to: 0
  6686                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  6687  00292E  938A               	bcf	_flags& (0+255),1,b
  6688  002930                     l3153:
  6689  002930  FFFF               	dw	65535	; assembler added errata NOP
  6690                           
  6691                           ; BSR set to: 0
  6692                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  6693  002932  BF89               	btfsc	(_prec+1)& (0+255),7,b
  6694  002934  EFA7  F014         	goto	u3250
  6695  002938  5189               	movf	(_prec+1)& (0+255),w,b
  6696  00293A  E106               	bnz	u3251
  6697  00293C  0588               	decf	_prec& (0+255),w,b
  6698  00293E  B0D8               	btfsc	status,0,c
  6699  002940  EFA4  F014         	goto	u3251
  6700  002944  EFA7  F014         	goto	u3250
  6701  002948                     u3251:
  6702  002948  FFFF               	dw	65535	; assembler added errata NOP
  6703  00294A  EFAE  F014         	goto	l950
  6704  00294E                     u3250:
  6705  00294E  FFFF               	dw	65535	; assembler added errata NOP
  6706  002950                     
  6707                           ; BSR set to: 0
  6708  002950  0E00               	movlw	0
  6709  002952  6E31               	movwf	(dtoa@p+1)^0,c
  6710  002954  0E01               	movlw	1
  6711  002956  6E30               	movwf	dtoa@p^0,c
  6712  002958  EFB3  F014         	goto	l952
  6713  00295C                     l950:
  6714  00295C  FFFF               	dw	65535	; assembler added errata NOP
  6715                           
  6716                           ; BSR set to: 0
  6717  00295E  C088  F030         	movff	_prec,dtoa@p
  6718  002962  C089  F031         	movff	_prec+1,dtoa@p+1
  6719  002966                     l952:
  6720  002966  FFFF               	dw	65535	; assembler added errata NOP
  6721                           
  6722                           ; BSR set to: 0
  6723                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  6724  002968  C086  F032         	movff	_width,dtoa@w
  6725  00296C  C087  F033         	movff	_width+1,dtoa@w+1
  6726  002970                     
  6727                           ; BSR set to: 0
  6728                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  6729  002970  5034               	movf	dtoa@s^0,w,c
  6730  002972  1035               	iorwf	(dtoa@s+1)^0,w,c
  6731  002974  A4D8               	btfss	status,2,c
  6732  002976  EFBF  F014         	goto	u3261
  6733  00297A  EFC2  F014         	goto	u3260
  6734  00297E                     u3261:
  6735  00297E  FFFF               	dw	65535	; assembler added errata NOP
  6736  002980  EFCB  F014         	goto	l3161
  6737  002984                     u3260:
  6738  002984  FFFF               	dw	65535	; assembler added errata NOP
  6739  002986                     
  6740                           ; BSR set to: 0
  6741  002986  A58A               	btfss	_flags& (0+255),2,b
  6742  002988  EFC8  F014         	goto	u3271
  6743  00298C  EFCB  F014         	goto	u3270
  6744  002990                     u3271:
  6745  002990  FFFF               	dw	65535	; assembler added errata NOP
  6746  002992  EFCF  F014         	goto	l3163
  6747  002996                     u3270:
  6748  002996                     l3161:
  6749  002996  FFFF               	dw	65535	; assembler added errata NOP
  6750                           
  6751                           ; BSR set to: 0
  6752                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  6753  002998  0632               	decf	dtoa@w^0,f,c
  6754  00299A  A0D8               	btfss	status,0,c
  6755  00299C  0633               	decf	(dtoa@w+1)^0,f,c
  6756  00299E                     l3163:
  6757  00299E  FFFF               	dw	65535	; assembler added errata NOP
  6758                           
  6759                           ; BSR set to: 0
  6760                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  6761  0029A0  0E00               	movlw	0
  6762  0029A2  6E3F               	movwf	(dtoa@i+1)^0,c
  6763  0029A4  0E1F               	movlw	31
  6764  0029A6  6E3E               	movwf	dtoa@i^0,c
  6765  0029A8                     
  6766                           ; BSR set to: 0
  6767                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  6768  0029A8  0E00               	movlw	0
  6769  0029AA  6FAD               	movwf	(_dbuf+31)& (0+255),b
  6770                           
  6771                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6772  0029AC  EF55  F015         	goto	l3177
  6773  0029B0                     l3167:
  6774  0029B0  FFFF               	dw	65535	; assembler added errata NOP
  6775                           
  6776                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  6777  0029B2  063E               	decf	dtoa@i^0,f,c
  6778  0029B4  A0D8               	btfss	status,0,c
  6779  0029B6  063F               	decf	(dtoa@i+1)^0,f,c
  6780  0029B8                     
  6781                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  6782  0029B8  0E8E               	movlw	low _dbuf
  6783  0029BA  243E               	addwf	dtoa@i^0,w,c
  6784  0029BC  6ED9               	movwf	fsr2l,c
  6785  0029BE  0E00               	movlw	high _dbuf
  6786  0029C0  203F               	addwfc	(dtoa@i+1)^0,w,c
  6787  0029C2  6EDA               	movwf	fsr2h,c
  6788  0029C4  C036  F001         	movff	dtoa@n,___aomod@dividend
  6789  0029C8  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6790  0029CC  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6791  0029D0  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6792  0029D4  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6793  0029D8  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6794  0029DC  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6795  0029E0  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6796  0029E4  0E0A               	movlw	10
  6797  0029E6  6E09               	movwf	___aomod@divisor^0,c
  6798  0029E8  0E00               	movlw	0
  6799  0029EA  6E0A               	movwf	(___aomod@divisor+1)^0,c
  6800  0029EC  0E00               	movlw	0
  6801  0029EE  6E0B               	movwf	(___aomod@divisor+2)^0,c
  6802  0029F0  0E00               	movlw	0
  6803  0029F2  6E0C               	movwf	(___aomod@divisor+3)^0,c
  6804  0029F4  0E00               	movlw	0
  6805  0029F6  6E0D               	movwf	(___aomod@divisor+4)^0,c
  6806  0029F8  0E00               	movlw	0
  6807  0029FA  6E0E               	movwf	(___aomod@divisor+5)^0,c
  6808  0029FC  0E00               	movlw	0
  6809  0029FE  6E0F               	movwf	(___aomod@divisor+6)^0,c
  6810  002A00  0E00               	movlw	0
  6811  002A02  6E10               	movwf	(___aomod@divisor+7)^0,c
  6812  002A04  EC3C  F01D         	call	___aomod	;wreg free
  6813  002A08  C001  F026         	movff	?___aomod,??_dtoa
  6814  002A0C  C002  F027         	movff	?___aomod+1,??_dtoa+1
  6815  002A10  C003  F028         	movff	?___aomod+2,??_dtoa+2
  6816  002A14  C004  F029         	movff	?___aomod+3,??_dtoa+3
  6817  002A18  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  6818  002A1C  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  6819  002A20  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  6820  002A24  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  6821  002A28  C026  F013         	movff	??_dtoa,abs@a
  6822  002A2C  C028  F014         	movff	??_dtoa+2,abs@a+1
  6823  002A30  EC70  F03E         	call	_abs	;wreg free
  6824  002A34  5013               	movf	?_abs^0,w,c
  6825  002A36  0F30               	addlw	48
  6826  002A38  6EDF               	movwf	indf2,c
  6827  002A3A                     
  6828                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  6829  002A3A  0630               	decf	dtoa@p^0,f,c
  6830  002A3C  A0D8               	btfss	status,0,c
  6831  002A3E  0631               	decf	(dtoa@p+1)^0,f,c
  6832  002A40                     
  6833                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  6834  002A40  0632               	decf	dtoa@w^0,f,c
  6835  002A42  A0D8               	btfss	status,0,c
  6836  002A44  0633               	decf	(dtoa@w+1)^0,f,c
  6837  002A46                     
  6838                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  6839  002A46  C036  F001         	movff	dtoa@n,___aodiv@dividend
  6840  002A4A  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  6841  002A4E  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  6842  002A52  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  6843  002A56  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  6844  002A5A  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  6845  002A5E  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  6846  002A62  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  6847  002A66  0E0A               	movlw	10
  6848  002A68  6E09               	movwf	___aodiv@divisor^0,c
  6849  002A6A  0E00               	movlw	0
  6850  002A6C  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  6851  002A6E  0E00               	movlw	0
  6852  002A70  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  6853  002A72  0E00               	movlw	0
  6854  002A74  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  6855  002A76  0E00               	movlw	0
  6856  002A78  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  6857  002A7A  0E00               	movlw	0
  6858  002A7C  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  6859  002A7E  0E00               	movlw	0
  6860  002A80  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  6861  002A82  0E00               	movlw	0
  6862  002A84  6E10               	movwf	(___aodiv@divisor+7)^0,c
  6863  002A86  EC62  F01C         	call	___aodiv	;wreg free
  6864  002A8A  C001  F036         	movff	?___aodiv,dtoa@n
  6865  002A8E  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  6866  002A92  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  6867  002A96  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  6868  002A9A  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  6869  002A9E  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  6870  002AA2  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  6871  002AA6  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  6872  002AAA                     l3177:
  6873  002AAA  FFFF               	dw	65535	; assembler added errata NOP
  6874                           
  6875                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6876  002AAC  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  6877  002AAE  EF61  F015         	goto	u3281
  6878  002AB2  503F               	movf	(dtoa@i+1)^0,w,c
  6879  002AB4  E109               	bnz	u3280
  6880  002AB6  043E               	decf	dtoa@i^0,w,c
  6881  002AB8  A0D8               	btfss	status,0,c
  6882  002ABA  EF61  F015         	goto	u3281
  6883  002ABE  EF64  F015         	goto	u3280
  6884  002AC2                     u3281:
  6885  002AC2  FFFF               	dw	65535	; assembler added errata NOP
  6886  002AC4  EF9D  F015         	goto	l3187
  6887  002AC8                     u3280:
  6888  002AC8  FFFF               	dw	65535	; assembler added errata NOP
  6889  002ACA  5036               	movf	dtoa@n^0,w,c
  6890  002ACC  1037               	iorwf	(dtoa@n+1)^0,w,c
  6891  002ACE  1038               	iorwf	(dtoa@n+2)^0,w,c
  6892  002AD0  1039               	iorwf	(dtoa@n+3)^0,w,c
  6893  002AD2  103A               	iorwf	(dtoa@n+4)^0,w,c
  6894  002AD4  103B               	iorwf	(dtoa@n+5)^0,w,c
  6895  002AD6  103C               	iorwf	(dtoa@n+6)^0,w,c
  6896  002AD8  103D               	iorwf	(dtoa@n+7)^0,w,c
  6897  002ADA  A4D8               	btfss	status,2,c
  6898  002ADC  EF72  F015         	goto	u3291
  6899  002AE0  EF75  F015         	goto	u3290
  6900  002AE4                     u3291:
  6901  002AE4  FFFF               	dw	65535	; assembler added errata NOP
  6902  002AE6  EFD8  F014         	goto	l3167
  6903  002AEA                     u3290:
  6904  002AEA  FFFF               	dw	65535	; assembler added errata NOP
  6905  002AEC  BE31               	btfsc	(dtoa@p+1)^0,7,c
  6906  002AEE  EF84  F015         	goto	u3300
  6907  002AF2  5031               	movf	(dtoa@p+1)^0,w,c
  6908  002AF4  E106               	bnz	u3301
  6909  002AF6  0430               	decf	dtoa@p^0,w,c
  6910  002AF8  B0D8               	btfsc	status,0,c
  6911  002AFA  EF81  F015         	goto	u3301
  6912  002AFE  EF84  F015         	goto	u3300
  6913  002B02                     u3301:
  6914  002B02  FFFF               	dw	65535	; assembler added errata NOP
  6915  002B04  EFD8  F014         	goto	l3167
  6916  002B08                     u3300:
  6917  002B08  FFFF               	dw	65535	; assembler added errata NOP
  6918  002B0A  BE33               	btfsc	(dtoa@w+1)^0,7,c
  6919  002B0C  EF90  F015         	goto	u3311
  6920  002B10  5033               	movf	(dtoa@w+1)^0,w,c
  6921  002B12  E109               	bnz	u3310
  6922  002B14  0432               	decf	dtoa@w^0,w,c
  6923  002B16  A0D8               	btfss	status,0,c
  6924  002B18  EF90  F015         	goto	u3311
  6925  002B1C  EF93  F015         	goto	u3310
  6926  002B20                     u3311:
  6927  002B20  FFFF               	dw	65535	; assembler added errata NOP
  6928  002B22  EF9D  F015         	goto	l3187
  6929  002B26                     u3310:
  6930  002B26  FFFF               	dw	65535	; assembler added errata NOP
  6931  002B28  0100               	movlb	0	; () banked
  6932  002B2A  B38A               	btfsc	_flags& (0+255),1,b
  6933  002B2C  EF9A  F015         	goto	u3321
  6934  002B30  EF9D  F015         	goto	u3320
  6935  002B34                     u3321:
  6936  002B34  FFFF               	dw	65535	; assembler added errata NOP
  6937  002B36  EFD8  F014         	goto	l3167
  6938  002B3A                     u3320:
  6939  002B3A                     l3187:
  6940  002B3A  FFFF               	dw	65535	; assembler added errata NOP
  6941                           
  6942                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  6943  002B3C  5034               	movf	dtoa@s^0,w,c
  6944  002B3E  1035               	iorwf	(dtoa@s+1)^0,w,c
  6945  002B40  A4D8               	btfss	status,2,c
  6946  002B42  EFA5  F015         	goto	u3331
  6947  002B46  EFA8  F015         	goto	u3330
  6948  002B4A                     u3331:
  6949  002B4A  FFFF               	dw	65535	; assembler added errata NOP
  6950  002B4C  EFB2  F015         	goto	l3191
  6951  002B50                     u3330:
  6952  002B50  FFFF               	dw	65535	; assembler added errata NOP
  6953  002B52  0100               	movlb	0	; () banked
  6954  002B54  A58A               	btfss	_flags& (0+255),2,b
  6955  002B56  EFAF  F015         	goto	u3341
  6956  002B5A  EFB2  F015         	goto	u3340
  6957  002B5E                     u3341:
  6958  002B5E  FFFF               	dw	65535	; assembler added errata NOP
  6959  002B60  EFD5  F015         	goto	l3201
  6960  002B64                     u3340:
  6961  002B64                     l3191:
  6962  002B64  FFFF               	dw	65535	; assembler added errata NOP
  6963                           
  6964                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  6965  002B66  063E               	decf	dtoa@i^0,f,c
  6966  002B68  A0D8               	btfss	status,0,c
  6967  002B6A  063F               	decf	(dtoa@i+1)^0,f,c
  6968  002B6C                     
  6969                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  6970  002B6C  5034               	movf	dtoa@s^0,w,c
  6971  002B6E  1035               	iorwf	(dtoa@s+1)^0,w,c
  6972  002B70  A4D8               	btfss	status,2,c
  6973  002B72  EFBD  F015         	goto	u3351
  6974  002B76  EFC0  F015         	goto	u3350
  6975  002B7A                     u3351:
  6976  002B7A  FFFF               	dw	65535	; assembler added errata NOP
  6977  002B7C  EFC7  F015         	goto	l3197
  6978  002B80                     u3350:
  6979  002B80  FFFF               	dw	65535	; assembler added errata NOP
  6980  002B82  0E00               	movlw	0
  6981  002B84  6E2F               	movwf	(_dtoa$1300+1)^0,c
  6982  002B86  0E2B               	movlw	43
  6983  002B88  6E2E               	movwf	_dtoa$1300^0,c
  6984  002B8A  EFCC  F015         	goto	l3199
  6985  002B8E                     l3197:
  6986  002B8E  FFFF               	dw	65535	; assembler added errata NOP
  6987  002B90  0E00               	movlw	0
  6988  002B92  6E2F               	movwf	(_dtoa$1300+1)^0,c
  6989  002B94  0E2D               	movlw	45
  6990  002B96  6E2E               	movwf	_dtoa$1300^0,c
  6991  002B98                     l3199:
  6992  002B98  FFFF               	dw	65535	; assembler added errata NOP
  6993  002B9A  0E8E               	movlw	low _dbuf
  6994  002B9C  243E               	addwf	dtoa@i^0,w,c
  6995  002B9E  6ED9               	movwf	fsr2l,c
  6996  002BA0  0E00               	movlw	high _dbuf
  6997  002BA2  203F               	addwfc	(dtoa@i+1)^0,w,c
  6998  002BA4  6EDA               	movwf	fsr2h,c
  6999  002BA6  C02E  FFDF         	movff	_dtoa$1300,indf2
  7000  002BAA                     l3201:
  7001  002BAA  FFFF               	dw	65535	; assembler added errata NOP
  7002                           
  7003                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  7004  002BAC  C01C  F011         	movff	dtoa@fp,pad@fp
  7005  002BB0  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  7006  002BB4  0E8E               	movlw	low _dbuf
  7007  002BB6  243E               	addwf	dtoa@i^0,w,c
  7008  002BB8  6E13               	movwf	pad@buf^0,c
  7009  002BBA  0E00               	movlw	high _dbuf
  7010  002BBC  203F               	addwfc	(dtoa@i+1)^0,w,c
  7011  002BBE  6E14               	movwf	(pad@buf+1)^0,c
  7012  002BC0  C032  F015         	movff	dtoa@w,pad@p
  7013  002BC4  C033  F016         	movff	dtoa@w+1,pad@p+1
  7014  002BC8  EC48  F002         	call	_pad	;wreg free
  7015  002BCC  C011  F01C         	movff	?_pad,?_dtoa
  7016  002BD0  C012  F01D         	movff	?_pad+1,?_dtoa+1
  7017  002BD4  0012               	return		;funcret
  7018  002BD6  FFFF               	dw	65535	; errata NOP
  7019  002BD8                     __end_of_dtoa:
  7020                           	callstack 0
  7021                           
  7022 ;; *************** function _abs *****************
  7023 ;; Defined at:
  7024 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  7025 ;; Parameters:    Size  Location     Type
  7026 ;;  a               2   18[COMRAM] int 
  7027 ;; Auto vars:     Size  Location     Type
  7028 ;;		None
  7029 ;; Return value:  Size  Location     Type
  7030 ;;                  2   18[COMRAM] int 
  7031 ;; Registers used:
  7032 ;;		wreg, status,2, status,0
  7033 ;; Tracked objects:
  7034 ;;		On entry : 0/0
  7035 ;;		On exit  : 0/0
  7036 ;;		Unchanged: 0/0
  7037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7038 ;;      Params:         2       0       0       0       0       0       0
  7039 ;;      Locals:         0       0       0       0       0       0       0
  7040 ;;      Temps:          2       0       0       0       0       0       0
  7041 ;;      Totals:         4       0       0       0       0       0       0
  7042 ;;Total ram usage:        4 bytes
  7043 ;; Hardware stack levels used:    1
  7044 ;; Hardware stack levels required when called:    1
  7045 ;; This function calls:
  7046 ;;		Nothing
  7047 ;; This function is called by:
  7048 ;;		_dtoa
  7049 ;; This function uses a non-reentrant model
  7050 ;;
  7051                           
  7052                           	psect	text18
  7053  007CE0                     __ptext18:
  7054                           	callstack 0
  7055  007CE0                     _abs:
  7056                           	callstack 0
  7057  007CE0  FFFF               	dw	65535	; assembler added errata NOP
  7058  007CE2  BE14               	btfsc	(abs@a+1)^0,7,c
  7059  007CE4  EF7F  F03E         	goto	u3080
  7060  007CE8  5014               	movf	(abs@a+1)^0,w,c
  7061  007CEA  E106               	bnz	u3081
  7062  007CEC  0413               	decf	abs@a^0,w,c
  7063  007CEE  B0D8               	btfsc	status,0,c
  7064  007CF0  EF7C  F03E         	goto	u3081
  7065  007CF4  EF7F  F03E         	goto	u3080
  7066  007CF8                     u3081:
  7067  007CF8  FFFF               	dw	65535	; assembler added errata NOP
  7068  007CFA  EF8E  F03E         	goto	l1140
  7069  007CFE                     u3080:
  7070  007CFE  FFFF               	dw	65535	; assembler added errata NOP
  7071  007D00  C013  F015         	movff	abs@a,??_abs
  7072  007D04  C014  F016         	movff	abs@a+1,??_abs+1
  7073  007D08  1E15               	comf	??_abs^0,f,c
  7074  007D0A  1E16               	comf	(??_abs+1)^0,f,c
  7075  007D0C  4A15               	infsnz	??_abs^0,f,c
  7076  007D0E  2A16               	incf	(??_abs+1)^0,f,c
  7077  007D10  C015  F013         	movff	??_abs,?_abs
  7078  007D14  C016  F014         	movff	??_abs+1,?_abs+1
  7079  007D18  EF93  F03E         	goto	l1143
  7080  007D1C                     l1140:
  7081  007D1C  FFFF               	dw	65535	; assembler added errata NOP
  7082  007D1E  C013  F013         	movff	abs@a,?_abs
  7083  007D22  C014  F014         	movff	abs@a+1,?_abs+1
  7084  007D26                     l1143:
  7085  007D26  FFFF               	dw	65535	; assembler added errata NOP
  7086  007D28  0012               	return		;funcret
  7087  007D2A  FFFF               	dw	65535	; errata NOP
  7088  007D2C                     __end_of_abs:
  7089                           	callstack 0
  7090                           
  7091 ;; *************** function ___aomod *****************
  7092 ;; Defined at:
  7093 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  7094 ;; Parameters:    Size  Location     Type
  7095 ;;  dividend        8    0[COMRAM] long long 
  7096 ;;  divisor         8    8[COMRAM] long long 
  7097 ;; Auto vars:     Size  Location     Type
  7098 ;;  sign            1   17[COMRAM] unsigned char 
  7099 ;;  counter         1   16[COMRAM] unsigned char 
  7100 ;; Return value:  Size  Location     Type
  7101 ;;                  8    0[COMRAM] long long 
  7102 ;; Registers used:
  7103 ;;		wreg, status,2, status,0
  7104 ;; Tracked objects:
  7105 ;;		On entry : 0/0
  7106 ;;		On exit  : 0/0
  7107 ;;		Unchanged: 0/0
  7108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7109 ;;      Params:        16       0       0       0       0       0       0
  7110 ;;      Locals:         2       0       0       0       0       0       0
  7111 ;;      Temps:          0       0       0       0       0       0       0
  7112 ;;      Totals:        18       0       0       0       0       0       0
  7113 ;;Total ram usage:       18 bytes
  7114 ;; Hardware stack levels used:    1
  7115 ;; Hardware stack levels required when called:    1
  7116 ;; This function calls:
  7117 ;;		Nothing
  7118 ;; This function is called by:
  7119 ;;		_dtoa
  7120 ;; This function uses a non-reentrant model
  7121 ;;
  7122                           
  7123                           	psect	text19
  7124  003A78                     __ptext19:
  7125                           	callstack 0
  7126  003A78                     ___aomod:
  7127                           	callstack 0
  7128  003A78  FFFF               	dw	65535	; assembler added errata NOP
  7129  003A7A  0E00               	movlw	0
  7130  003A7C  6E12               	movwf	___aomod@sign^0,c
  7131  003A7E  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  7132  003A80  EF47  F01D         	goto	u2910
  7133  003A84  EF44  F01D         	goto	u2911
  7134  003A88                     u2911:
  7135  003A88  FFFF               	dw	65535	; assembler added errata NOP
  7136  003A8A  EF5A  F01D         	goto	l3003
  7137  003A8E                     u2910:
  7138  003A8E  FFFF               	dw	65535	; assembler added errata NOP
  7139  003A90  1E08               	comf	(___aomod@dividend+7)^0,f,c
  7140  003A92  1E07               	comf	(___aomod@dividend+6)^0,f,c
  7141  003A94  1E06               	comf	(___aomod@dividend+5)^0,f,c
  7142  003A96  1E05               	comf	(___aomod@dividend+4)^0,f,c
  7143  003A98  1E04               	comf	(___aomod@dividend+3)^0,f,c
  7144  003A9A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  7145  003A9C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  7146  003A9E  6C01               	negf	___aomod@dividend^0,c
  7147  003AA0  0E00               	movlw	0
  7148  003AA2  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  7149  003AA4  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  7150  003AA6  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  7151  003AA8  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  7152  003AAA  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  7153  003AAC  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  7154  003AAE  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  7155  003AB0  0E01               	movlw	1
  7156  003AB2  6E12               	movwf	___aomod@sign^0,c
  7157  003AB4                     l3003:
  7158  003AB4  FFFF               	dw	65535	; assembler added errata NOP
  7159  003AB6  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  7160  003AB8  EF63  F01D         	goto	u2920
  7161  003ABC  EF60  F01D         	goto	u2921
  7162  003AC0                     u2921:
  7163  003AC0  FFFF               	dw	65535	; assembler added errata NOP
  7164  003AC2  EF74  F01D         	goto	l3007
  7165  003AC6                     u2920:
  7166  003AC6  FFFF               	dw	65535	; assembler added errata NOP
  7167  003AC8  1E10               	comf	(___aomod@divisor+7)^0,f,c
  7168  003ACA  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  7169  003ACC  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  7170  003ACE  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  7171  003AD0  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  7172  003AD2  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  7173  003AD4  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  7174  003AD6  6C09               	negf	___aomod@divisor^0,c
  7175  003AD8  0E00               	movlw	0
  7176  003ADA  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  7177  003ADC  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  7178  003ADE  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  7179  003AE0  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  7180  003AE2  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  7181  003AE4  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  7182  003AE6  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  7183  003AE8                     l3007:
  7184  003AE8  FFFF               	dw	65535	; assembler added errata NOP
  7185  003AEA  5009               	movf	___aomod@divisor^0,w,c
  7186  003AEC  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  7187  003AEE  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  7188  003AF0  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  7189  003AF2  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  7190  003AF4  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  7191  003AF6  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  7192  003AF8  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  7193  003AFA  B4D8               	btfsc	status,2,c
  7194  003AFC  EF82  F01D         	goto	u2931
  7195  003B00  EF85  F01D         	goto	u2930
  7196  003B04                     u2931:
  7197  003B04  FFFF               	dw	65535	; assembler added errata NOP
  7198  003B06  EFD6  F01D         	goto	l3023
  7199  003B0A                     u2930:
  7200  003B0A  FFFF               	dw	65535	; assembler added errata NOP
  7201  003B0C  0E01               	movlw	1
  7202  003B0E  6E11               	movwf	___aomod@counter^0,c
  7203  003B10  EF95  F01D         	goto	l3013
  7204  003B14                     l3011:
  7205  003B14  FFFF               	dw	65535	; assembler added errata NOP
  7206  003B16  90D8               	bcf	status,0,c
  7207  003B18  3609               	rlcf	___aomod@divisor^0,f,c
  7208  003B1A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  7209  003B1C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  7210  003B1E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  7211  003B20  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  7212  003B22  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  7213  003B24  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  7214  003B26  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  7215  003B28  2A11               	incf	___aomod@counter^0,f,c
  7216  003B2A                     l3013:
  7217  003B2A  FFFF               	dw	65535	; assembler added errata NOP
  7218  003B2C  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  7219  003B2E  EF9B  F01D         	goto	u2941
  7220  003B32  EF9E  F01D         	goto	u2940
  7221  003B36                     u2941:
  7222  003B36  FFFF               	dw	65535	; assembler added errata NOP
  7223  003B38  EF8A  F01D         	goto	l3011
  7224  003B3C                     u2940:
  7225  003B3C  FFFF               	dw	65535	; assembler added errata NOP
  7226  003B3E                     l3015:
  7227  003B3E  FFFF               	dw	65535	; assembler added errata NOP
  7228  003B40  5009               	movf	___aomod@divisor^0,w,c
  7229  003B42  5C01               	subwf	___aomod@dividend^0,w,c
  7230  003B44  500A               	movf	(___aomod@divisor+1)^0,w,c
  7231  003B46  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  7232  003B48  500B               	movf	(___aomod@divisor+2)^0,w,c
  7233  003B4A  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  7234  003B4C  500C               	movf	(___aomod@divisor+3)^0,w,c
  7235  003B4E  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  7236  003B50  500D               	movf	(___aomod@divisor+4)^0,w,c
  7237  003B52  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  7238  003B54  500E               	movf	(___aomod@divisor+5)^0,w,c
  7239  003B56  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  7240  003B58  500F               	movf	(___aomod@divisor+6)^0,w,c
  7241  003B5A  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  7242  003B5C  5010               	movf	(___aomod@divisor+7)^0,w,c
  7243  003B5E  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  7244  003B60  A0D8               	btfss	status,0,c
  7245  003B62  EFB5  F01D         	goto	u2951
  7246  003B66  EFB8  F01D         	goto	u2950
  7247  003B6A                     u2951:
  7248  003B6A  FFFF               	dw	65535	; assembler added errata NOP
  7249  003B6C  EFC9  F01D         	goto	l3019
  7250  003B70                     u2950:
  7251  003B70  FFFF               	dw	65535	; assembler added errata NOP
  7252  003B72  5009               	movf	___aomod@divisor^0,w,c
  7253  003B74  5E01               	subwf	___aomod@dividend^0,f,c
  7254  003B76  500A               	movf	(___aomod@divisor+1)^0,w,c
  7255  003B78  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  7256  003B7A  500B               	movf	(___aomod@divisor+2)^0,w,c
  7257  003B7C  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  7258  003B7E  500C               	movf	(___aomod@divisor+3)^0,w,c
  7259  003B80  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  7260  003B82  500D               	movf	(___aomod@divisor+4)^0,w,c
  7261  003B84  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  7262  003B86  500E               	movf	(___aomod@divisor+5)^0,w,c
  7263  003B88  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  7264  003B8A  500F               	movf	(___aomod@divisor+6)^0,w,c
  7265  003B8C  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  7266  003B8E  5010               	movf	(___aomod@divisor+7)^0,w,c
  7267  003B90  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  7268  003B92                     l3019:
  7269  003B92  FFFF               	dw	65535	; assembler added errata NOP
  7270  003B94  90D8               	bcf	status,0,c
  7271  003B96  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  7272  003B98  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  7273  003B9A  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  7274  003B9C  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  7275  003B9E  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  7276  003BA0  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  7277  003BA2  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  7278  003BA4  3209               	rrcf	___aomod@divisor^0,f,c
  7279  003BA6  2E11               	decfsz	___aomod@counter^0,f,c
  7280  003BA8  EF9F  F01D         	goto	l3015
  7281  003BAC                     l3023:
  7282  003BAC  FFFF               	dw	65535	; assembler added errata NOP
  7283  003BAE  5012               	movf	___aomod@sign^0,w,c
  7284  003BB0  B4D8               	btfsc	status,2,c
  7285  003BB2  EFDD  F01D         	goto	u2961
  7286  003BB6  EFE0  F01D         	goto	u2960
  7287  003BBA                     u2961:
  7288  003BBA  FFFF               	dw	65535	; assembler added errata NOP
  7289  003BBC  EFF1  F01D         	goto	l3027
  7290  003BC0                     u2960:
  7291  003BC0  FFFF               	dw	65535	; assembler added errata NOP
  7292  003BC2  1E08               	comf	(___aomod@dividend+7)^0,f,c
  7293  003BC4  1E07               	comf	(___aomod@dividend+6)^0,f,c
  7294  003BC6  1E06               	comf	(___aomod@dividend+5)^0,f,c
  7295  003BC8  1E05               	comf	(___aomod@dividend+4)^0,f,c
  7296  003BCA  1E04               	comf	(___aomod@dividend+3)^0,f,c
  7297  003BCC  1E03               	comf	(___aomod@dividend+2)^0,f,c
  7298  003BCE  1E02               	comf	(___aomod@dividend+1)^0,f,c
  7299  003BD0  6C01               	negf	___aomod@dividend^0,c
  7300  003BD2  0E00               	movlw	0
  7301  003BD4  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  7302  003BD6  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  7303  003BD8  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  7304  003BDA  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  7305  003BDC  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  7306  003BDE  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  7307  003BE0  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  7308  003BE2                     l3027:
  7309  003BE2  FFFF               	dw	65535	; assembler added errata NOP
  7310  003BE4  C001  F001         	movff	___aomod@dividend,?___aomod
  7311  003BE8  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  7312  003BEC  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  7313  003BF0  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  7314  003BF4  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  7315  003BF8  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  7316  003BFC  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  7317  003C00  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  7318  003C04  0012               	return		;funcret
  7319  003C06  FFFF               	dw	65535	; errata NOP
  7320  003C08                     __end_of___aomod:
  7321                           	callstack 0
  7322                           
  7323 ;; *************** function ___aodiv *****************
  7324 ;; Defined at:
  7325 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  7326 ;; Parameters:    Size  Location     Type
  7327 ;;  dividend        8    0[COMRAM] long long 
  7328 ;;  divisor         8    8[COMRAM] long long 
  7329 ;; Auto vars:     Size  Location     Type
  7330 ;;  quotient        8   18[COMRAM] long long 
  7331 ;;  sign            1   17[COMRAM] unsigned char 
  7332 ;;  counter         1   16[COMRAM] unsigned char 
  7333 ;; Return value:  Size  Location     Type
  7334 ;;                  8    0[COMRAM] long long 
  7335 ;; Registers used:
  7336 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7337 ;; Tracked objects:
  7338 ;;		On entry : 0/0
  7339 ;;		On exit  : 0/0
  7340 ;;		Unchanged: 0/0
  7341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7342 ;;      Params:        16       0       0       0       0       0       0
  7343 ;;      Locals:        10       0       0       0       0       0       0
  7344 ;;      Temps:          0       0       0       0       0       0       0
  7345 ;;      Totals:        26       0       0       0       0       0       0
  7346 ;;Total ram usage:       26 bytes
  7347 ;; Hardware stack levels used:    1
  7348 ;; Hardware stack levels required when called:    1
  7349 ;; This function calls:
  7350 ;;		Nothing
  7351 ;; This function is called by:
  7352 ;;		_dtoa
  7353 ;; This function uses a non-reentrant model
  7354 ;;
  7355                           
  7356                           	psect	text20
  7357  0038C4                     __ptext20:
  7358                           	callstack 0
  7359  0038C4                     ___aodiv:
  7360                           	callstack 0
  7361  0038C4  FFFF               	dw	65535	; assembler added errata NOP
  7362  0038C6  0E00               	movlw	0
  7363  0038C8  6E12               	movwf	___aodiv@sign^0,c
  7364  0038CA  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  7365  0038CC  EF6D  F01C         	goto	u2840
  7366  0038D0  EF6A  F01C         	goto	u2841
  7367  0038D4                     u2841:
  7368  0038D4  FFFF               	dw	65535	; assembler added errata NOP
  7369  0038D6  EF80  F01C         	goto	l2959
  7370  0038DA                     u2840:
  7371  0038DA  FFFF               	dw	65535	; assembler added errata NOP
  7372  0038DC  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  7373  0038DE  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  7374  0038E0  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  7375  0038E2  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  7376  0038E4  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  7377  0038E6  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  7378  0038E8  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  7379  0038EA  6C09               	negf	___aodiv@divisor^0,c
  7380  0038EC  0E00               	movlw	0
  7381  0038EE  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  7382  0038F0  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  7383  0038F2  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  7384  0038F4  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  7385  0038F6  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  7386  0038F8  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  7387  0038FA  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  7388  0038FC  0E01               	movlw	1
  7389  0038FE  6E12               	movwf	___aodiv@sign^0,c
  7390  003900                     l2959:
  7391  003900  FFFF               	dw	65535	; assembler added errata NOP
  7392  003902  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  7393  003904  EF89  F01C         	goto	u2850
  7394  003908  EF86  F01C         	goto	u2851
  7395  00390C                     u2851:
  7396  00390C  FFFF               	dw	65535	; assembler added errata NOP
  7397  00390E  EF9C  F01C         	goto	l2965
  7398  003912                     u2850:
  7399  003912  FFFF               	dw	65535	; assembler added errata NOP
  7400  003914  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  7401  003916  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  7402  003918  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  7403  00391A  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  7404  00391C  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  7405  00391E  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  7406  003920  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  7407  003922  6C01               	negf	___aodiv@dividend^0,c
  7408  003924  0E00               	movlw	0
  7409  003926  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  7410  003928  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  7411  00392A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  7412  00392C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  7413  00392E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  7414  003930  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  7415  003932  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  7416  003934  0E01               	movlw	1
  7417  003936  1A12               	xorwf	___aodiv@sign^0,f,c
  7418  003938                     l2965:
  7419  003938  FFFF               	dw	65535	; assembler added errata NOP
  7420  00393A  EE20  F013         	lfsr	2,___aodiv@quotient
  7421  00393E  0E07               	movlw	7
  7422  003940                     u2861:
  7423  003940  6ADE               	clrf	postinc2,c
  7424  003942  06E8               	decf	wreg,f,c
  7425  003944  E2FD               	bc	u2861
  7426  003946  5009               	movf	___aodiv@divisor^0,w,c
  7427  003948  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  7428  00394A  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  7429  00394C  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  7430  00394E  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  7431  003950  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  7432  003952  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  7433  003954  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  7434  003956  B4D8               	btfsc	status,2,c
  7435  003958  EFB0  F01C         	goto	u2871
  7436  00395C  EFB3  F01C         	goto	u2870
  7437  003960                     u2871:
  7438  003960  FFFF               	dw	65535	; assembler added errata NOP
  7439  003962  EF0E  F01D         	goto	l2987
  7440  003966                     u2870:
  7441  003966  FFFF               	dw	65535	; assembler added errata NOP
  7442  003968  0E01               	movlw	1
  7443  00396A  6E11               	movwf	___aodiv@counter^0,c
  7444  00396C  EFC3  F01C         	goto	l2973
  7445  003970                     l2971:
  7446  003970  FFFF               	dw	65535	; assembler added errata NOP
  7447  003972  90D8               	bcf	status,0,c
  7448  003974  3609               	rlcf	___aodiv@divisor^0,f,c
  7449  003976  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  7450  003978  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  7451  00397A  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  7452  00397C  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  7453  00397E  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  7454  003980  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  7455  003982  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  7456  003984  2A11               	incf	___aodiv@counter^0,f,c
  7457  003986                     l2973:
  7458  003986  FFFF               	dw	65535	; assembler added errata NOP
  7459  003988  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  7460  00398A  EFC9  F01C         	goto	u2881
  7461  00398E  EFCC  F01C         	goto	u2880
  7462  003992                     u2881:
  7463  003992  FFFF               	dw	65535	; assembler added errata NOP
  7464  003994  EFB8  F01C         	goto	l2971
  7465  003998                     u2880:
  7466  003998  FFFF               	dw	65535	; assembler added errata NOP
  7467  00399A                     l2975:
  7468  00399A  FFFF               	dw	65535	; assembler added errata NOP
  7469  00399C  90D8               	bcf	status,0,c
  7470  00399E  3613               	rlcf	___aodiv@quotient^0,f,c
  7471  0039A0  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  7472  0039A2  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  7473  0039A4  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  7474  0039A6  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  7475  0039A8  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  7476  0039AA  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  7477  0039AC  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  7478  0039AE  5009               	movf	___aodiv@divisor^0,w,c
  7479  0039B0  5C01               	subwf	___aodiv@dividend^0,w,c
  7480  0039B2  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7481  0039B4  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  7482  0039B6  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7483  0039B8  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  7484  0039BA  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7485  0039BC  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  7486  0039BE  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7487  0039C0  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  7488  0039C2  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7489  0039C4  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  7490  0039C6  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7491  0039C8  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  7492  0039CA  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7493  0039CC  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  7494  0039CE  A0D8               	btfss	status,0,c
  7495  0039D0  EFEC  F01C         	goto	u2891
  7496  0039D4  EFEF  F01C         	goto	u2890
  7497  0039D8                     u2891:
  7498  0039D8  FFFF               	dw	65535	; assembler added errata NOP
  7499  0039DA  EF01  F01D         	goto	l2983
  7500  0039DE                     u2890:
  7501  0039DE  FFFF               	dw	65535	; assembler added errata NOP
  7502  0039E0  5009               	movf	___aodiv@divisor^0,w,c
  7503  0039E2  5E01               	subwf	___aodiv@dividend^0,f,c
  7504  0039E4  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7505  0039E6  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  7506  0039E8  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7507  0039EA  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  7508  0039EC  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7509  0039EE  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  7510  0039F0  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7511  0039F2  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  7512  0039F4  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7513  0039F6  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  7514  0039F8  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7515  0039FA  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  7516  0039FC  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7517  0039FE  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  7518  003A00  8013               	bsf	___aodiv@quotient^0,0,c
  7519  003A02                     l2983:
  7520  003A02  FFFF               	dw	65535	; assembler added errata NOP
  7521  003A04  90D8               	bcf	status,0,c
  7522  003A06  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  7523  003A08  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  7524  003A0A  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  7525  003A0C  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  7526  003A0E  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  7527  003A10  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  7528  003A12  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  7529  003A14  3209               	rrcf	___aodiv@divisor^0,f,c
  7530  003A16  2E11               	decfsz	___aodiv@counter^0,f,c
  7531  003A18  EFCD  F01C         	goto	l2975
  7532  003A1C                     l2987:
  7533  003A1C  FFFF               	dw	65535	; assembler added errata NOP
  7534  003A1E  5012               	movf	___aodiv@sign^0,w,c
  7535  003A20  B4D8               	btfsc	status,2,c
  7536  003A22  EF15  F01D         	goto	u2901
  7537  003A26  EF18  F01D         	goto	u2900
  7538  003A2A                     u2901:
  7539  003A2A  FFFF               	dw	65535	; assembler added errata NOP
  7540  003A2C  EF29  F01D         	goto	l2991
  7541  003A30                     u2900:
  7542  003A30  FFFF               	dw	65535	; assembler added errata NOP
  7543  003A32  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  7544  003A34  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  7545  003A36  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  7546  003A38  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  7547  003A3A  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  7548  003A3C  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  7549  003A3E  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  7550  003A40  6C13               	negf	___aodiv@quotient^0,c
  7551  003A42  0E00               	movlw	0
  7552  003A44  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  7553  003A46  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  7554  003A48  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  7555  003A4A  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  7556  003A4C  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  7557  003A4E  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  7558  003A50  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  7559  003A52                     l2991:
  7560  003A52  FFFF               	dw	65535	; assembler added errata NOP
  7561  003A54  C013  F001         	movff	___aodiv@quotient,?___aodiv
  7562  003A58  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  7563  003A5C  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  7564  003A60  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  7565  003A64  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  7566  003A68  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  7567  003A6C  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  7568  003A70  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  7569  003A74  0012               	return		;funcret
  7570  003A76  FFFF               	dw	65535	; errata NOP
  7571  003A78                     __end_of___aodiv:
  7572                           	callstack 0
  7573                           
  7574 ;; *************** function _ctoa *****************
  7575 ;; Defined at:
  7576 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7577 ;; Parameters:    Size  Location     Type
  7578 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7579 ;;		 -> vsnprintf@f(6), 
  7580 ;;  c               1   29[COMRAM] unsigned char 
  7581 ;; Auto vars:     Size  Location     Type
  7582 ;;  w               2   30[COMRAM] int 
  7583 ;;  l               2    0        int 
  7584 ;; Return value:  Size  Location     Type
  7585 ;;                  2   27[COMRAM] int 
  7586 ;; Registers used:
  7587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7588 ;; Tracked objects:
  7589 ;;		On entry : 0/0
  7590 ;;		On exit  : 0/0
  7591 ;;		Unchanged: 0/0
  7592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7593 ;;      Params:         3       0       0       0       0       0       0
  7594 ;;      Locals:         2       0       0       0       0       0       0
  7595 ;;      Temps:          0       0       0       0       0       0       0
  7596 ;;      Totals:         5       0       0       0       0       0       0
  7597 ;;Total ram usage:        5 bytes
  7598 ;; Hardware stack levels used:    1
  7599 ;; Hardware stack levels required when called:    5
  7600 ;; This function calls:
  7601 ;;		_pad
  7602 ;; This function is called by:
  7603 ;;		_vfpfcnvrt
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           
  7607                           	psect	text21
  7608  007DD8                     __ptext21:
  7609                           	callstack 0
  7610  007DD8                     _ctoa:
  7611                           	callstack 0
  7612  007DD8  FFFF               	dw	65535	; assembler added errata NOP
  7613  007DDA                     
  7614                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  7615  007DDA  0100               	movlb	0	; () banked
  7616  007DDC  5186               	movf	_width& (0+255),w,b
  7617  007DDE  1187               	iorwf	(_width+1)& (0+255),w,b
  7618  007DE0  A4D8               	btfss	status,2,c
  7619  007DE2  EFF5  F03E         	goto	u3201
  7620  007DE6  EFF8  F03E         	goto	u3200
  7621  007DEA                     u3201:
  7622  007DEA  FFFF               	dw	65535	; assembler added errata NOP
  7623  007DEC  EFFF  F03E         	goto	l3133
  7624  007DF0                     u3200:
  7625  007DF0  FFFF               	dw	65535	; assembler added errata NOP
  7626  007DF2                     
  7627                           ; BSR set to: 0
  7628  007DF2  C086  F01F         	movff	_width,ctoa@w
  7629  007DF6  C087  F020         	movff	_width+1,ctoa@w+1
  7630  007DFA  EF06  F03F         	goto	l3135
  7631  007DFE                     l3133:
  7632  007DFE  FFFF               	dw	65535	; assembler added errata NOP
  7633                           
  7634                           ; BSR set to: 0
  7635  007E00  0EFF               	movlw	255
  7636  007E02  2586               	addwf	_width& (0+255),w,b
  7637  007E04  6E1F               	movwf	ctoa@w^0,c
  7638  007E06  0EFF               	movlw	255
  7639  007E08  2187               	addwfc	(_width+1)& (0+255),w,b
  7640  007E0A  6E20               	movwf	(ctoa@w+1)^0,c
  7641  007E0C                     l3135:
  7642  007E0C  FFFF               	dw	65535	; assembler added errata NOP
  7643                           
  7644                           ; BSR set to: 0
  7645                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 267:     dbuf[0] 
      +                          = c;
  7646  007E0E  C01E  F08E         	movff	ctoa@c,_dbuf
  7647  007E12                     
  7648                           ; BSR set to: 0
  7649                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 268:     dbuf[1] 
      +                          = '\0';
  7650  007E12  0E00               	movlw	0
  7651  007E14  6F8F               	movwf	(_dbuf+1)& (0+255),b
  7652  007E16                     
  7653                           ; BSR set to: 0
  7654                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 269:     return p
      +                          ad(fp, &dbuf[0], w);
  7655  007E16  C01C  F011         	movff	ctoa@fp,pad@fp
  7656  007E1A  C01D  F012         	movff	ctoa@fp+1,pad@fp+1
  7657  007E1E  0E8E               	movlw	low _dbuf
  7658  007E20  6E13               	movwf	pad@buf^0,c
  7659  007E22  0E00               	movlw	high _dbuf
  7660  007E24  6E14               	movwf	(pad@buf+1)^0,c
  7661  007E26  C01F  F015         	movff	ctoa@w,pad@p
  7662  007E2A  C020  F016         	movff	ctoa@w+1,pad@p+1
  7663  007E2E  EC48  F002         	call	_pad	;wreg free
  7664  007E32  C011  F01C         	movff	?_pad,?_ctoa
  7665  007E36  C012  F01D         	movff	?_pad+1,?_ctoa+1
  7666  007E3A  0012               	return		;funcret
  7667  007E3C  FFFF               	dw	65535	; errata NOP
  7668  007E3E                     __end_of_ctoa:
  7669                           	callstack 0
  7670                           
  7671 ;; *************** function _pad *****************
  7672 ;; Defined at:
  7673 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7674 ;; Parameters:    Size  Location     Type
  7675 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7676 ;;		 -> vsnprintf@f(6), 
  7677 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7678 ;;		 -> dbuf(32), 
  7679 ;;  p               2   20[COMRAM] int 
  7680 ;; Auto vars:     Size  Location     Type
  7681 ;;  w               2   25[COMRAM] int 
  7682 ;;  i               2   23[COMRAM] int 
  7683 ;; Return value:  Size  Location     Type
  7684 ;;                  2   16[COMRAM] int 
  7685 ;; Registers used:
  7686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7687 ;; Tracked objects:
  7688 ;;		On entry : 0/0
  7689 ;;		On exit  : 0/0
  7690 ;;		Unchanged: 0/0
  7691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7692 ;;      Params:         6       0       0       0       0       0       0
  7693 ;;      Locals:         4       0       0       0       0       0       0
  7694 ;;      Temps:          1       0       0       0       0       0       0
  7695 ;;      Totals:        11       0       0       0       0       0       0
  7696 ;;Total ram usage:       11 bytes
  7697 ;; Hardware stack levels used:    1
  7698 ;; Hardware stack levels required when called:    4
  7699 ;; This function calls:
  7700 ;;		_fputc
  7701 ;;		_fputs
  7702 ;;		_strlen
  7703 ;; This function is called by:
  7704 ;;		_ctoa
  7705 ;;		_dtoa
  7706 ;;		_otoa
  7707 ;;		_utoa
  7708 ;;		_xtoa
  7709 ;; This function uses a non-reentrant model
  7710 ;;
  7711                           
  7712                           	psect	text22
  7713  000490                     __ptext22:
  7714                           	callstack 0
  7715  000490                     _pad:
  7716                           	callstack 0
  7717  000490  FFFF               	dw	65535	; assembler added errata NOP
  7718  000492                     
  7719                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7720  000492  0100               	movlb	0	; () banked
  7721  000494  A18A               	btfss	_flags& (0+255),0,b
  7722  000496  EF4F  F002         	goto	u3041
  7723  00049A  EF52  F002         	goto	u3040
  7724  00049E                     u3041:
  7725  00049E  FFFF               	dw	65535	; assembler added errata NOP
  7726  0004A0  EF5D  F002         	goto	l3073
  7727  0004A4                     u3040:
  7728  0004A4  FFFF               	dw	65535	; assembler added errata NOP
  7729  0004A6                     
  7730                           ; BSR set to: 0
  7731                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7732  0004A6  C013  F00A         	movff	pad@buf,fputs@s
  7733  0004AA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7734  0004AE  C011  F00C         	movff	pad@fp,fputs@fp
  7735  0004B2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7736  0004B6  EC96  F03E         	call	_fputs	;wreg free
  7737  0004BA                     l3073:
  7738  0004BA  FFFF               	dw	65535	; assembler added errata NOP
  7739                           
  7740                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7741  0004BC  BE16               	btfsc	(pad@p+1)^0,7,c
  7742  0004BE  EF63  F002         	goto	u3051
  7743  0004C2  EF66  F002         	goto	u3050
  7744  0004C6                     u3051:
  7745  0004C6  FFFF               	dw	65535	; assembler added errata NOP
  7746  0004C8  EF6D  F002         	goto	l3077
  7747  0004CC                     u3050:
  7748  0004CC  FFFF               	dw	65535	; assembler added errata NOP
  7749  0004CE  C015  F01A         	movff	pad@p,pad@w
  7750  0004D2  C016  F01B         	movff	pad@p+1,pad@w+1
  7751  0004D6  EF72  F002         	goto	l932
  7752  0004DA                     l3077:
  7753  0004DA  FFFF               	dw	65535	; assembler added errata NOP
  7754  0004DC  0E00               	movlw	0
  7755  0004DE  6E1B               	movwf	(pad@w+1)^0,c
  7756  0004E0  0E00               	movlw	0
  7757  0004E2  6E1A               	movwf	pad@w^0,c
  7758  0004E4                     l932:
  7759  0004E4  FFFF               	dw	65535	; assembler added errata NOP
  7760                           
  7761                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7762  0004E6  0E00               	movlw	0
  7763  0004E8  6E19               	movwf	(pad@i+1)^0,c
  7764  0004EA  0E00               	movlw	0
  7765  0004EC  6E18               	movwf	pad@i^0,c
  7766                           
  7767                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7768  0004EE  EF86  F002         	goto	l3083
  7769  0004F2                     l3079:
  7770  0004F2  FFFF               	dw	65535	; assembler added errata NOP
  7771                           
  7772                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7773  0004F4  0E00               	movlw	0
  7774  0004F6  6E02               	movwf	(fputc@c+1)^0,c
  7775  0004F8  0E20               	movlw	32
  7776  0004FA  6E01               	movwf	fputc@c^0,c
  7777  0004FC  C011  F003         	movff	pad@fp,fputc@fp
  7778  000500  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7779  000504  EC8F  F03F         	call	_fputc	;wreg free
  7780  000508                     
  7781                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7782  000508  4A18               	infsnz	pad@i^0,f,c
  7783  00050A  2A19               	incf	(pad@i+1)^0,f,c
  7784  00050C                     l3083:
  7785  00050C  FFFF               	dw	65535	; assembler added errata NOP
  7786                           
  7787                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7788  00050E  501A               	movf	pad@w^0,w,c
  7789  000510  5C18               	subwf	pad@i^0,w,c
  7790  000512  5019               	movf	(pad@i+1)^0,w,c
  7791  000514  0A80               	xorlw	128
  7792  000516  6E17               	movwf	??_pad^0,c
  7793  000518  501B               	movf	(pad@w+1)^0,w,c
  7794  00051A  0A80               	xorlw	128
  7795  00051C  5817               	subwfb	??_pad^0,w,c
  7796  00051E  A0D8               	btfss	status,0,c
  7797  000520  EF94  F002         	goto	u3061
  7798  000524  EF97  F002         	goto	u3060
  7799  000528                     u3061:
  7800  000528  FFFF               	dw	65535	; assembler added errata NOP
  7801  00052A  EF79  F002         	goto	l3079
  7802  00052E                     u3060:
  7803  00052E  FFFF               	dw	65535	; assembler added errata NOP
  7804  000530                     
  7805                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7806  000530  0100               	movlb	0	; () banked
  7807  000532  B18A               	btfsc	_flags& (0+255),0,b
  7808  000534  EF9E  F002         	goto	u3071
  7809  000538  EFA1  F002         	goto	u3070
  7810  00053C                     u3071:
  7811  00053C  FFFF               	dw	65535	; assembler added errata NOP
  7812  00053E  EFAC  F002         	goto	l3087
  7813  000542                     u3070:
  7814  000542  FFFF               	dw	65535	; assembler added errata NOP
  7815  000544                     
  7816                           ; BSR set to: 0
  7817                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7818  000544  C013  F00A         	movff	pad@buf,fputs@s
  7819  000548  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7820  00054C  C011  F00C         	movff	pad@fp,fputs@fp
  7821  000550  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7822  000554  EC96  F03E         	call	_fputs	;wreg free
  7823  000558                     l3087:
  7824  000558  FFFF               	dw	65535	; assembler added errata NOP
  7825                           
  7826                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  7827  00055A  C013  F001         	movff	pad@buf,strlen@s
  7828  00055E  C014  F002         	movff	pad@buf+1,strlen@s+1
  7829  000562  ECBE  F03E         	call	_strlen	;wreg free
  7830  000566  501A               	movf	pad@w^0,w,c
  7831  000568  2401               	addwf	?_strlen^0,w,c
  7832  00056A  6E11               	movwf	?_pad^0,c
  7833  00056C  501B               	movf	(pad@w+1)^0,w,c
  7834  00056E  2002               	addwfc	(?_strlen+1)^0,w,c
  7835  000570  6E12               	movwf	(?_pad+1)^0,c
  7836  000572  0012               	return		;funcret
  7837  000574  FFFF               	dw	65535	; errata NOP
  7838  000576                     __end_of_pad:
  7839                           	callstack 0
  7840                           
  7841 ;; *************** function _strlen *****************
  7842 ;; Defined at:
  7843 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  7844 ;; Parameters:    Size  Location     Type
  7845 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7846 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), STR_7(8), 
  7847 ;;		 -> STR_6(9), STR_5(8), STR_4(11), STR_3(5), 
  7848 ;;		 -> STR_2(9), 
  7849 ;; Auto vars:     Size  Location     Type
  7850 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7851 ;;		 -> stoa@nuls(7), dbuf(32), ?_snprintf(2), STR_7(8), 
  7852 ;;		 -> STR_6(9), STR_5(8), STR_4(11), STR_3(5), 
  7853 ;;		 -> STR_2(9), 
  7854 ;; Return value:  Size  Location     Type
  7855 ;;                  2    0[COMRAM] unsigned int 
  7856 ;; Registers used:
  7857 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7858 ;; Tracked objects:
  7859 ;;		On entry : 0/0
  7860 ;;		On exit  : 0/0
  7861 ;;		Unchanged: 0/0
  7862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7863 ;;      Params:         2       0       0       0       0       0       0
  7864 ;;      Locals:         2       0       0       0       0       0       0
  7865 ;;      Temps:          0       0       0       0       0       0       0
  7866 ;;      Totals:         4       0       0       0       0       0       0
  7867 ;;Total ram usage:        4 bytes
  7868 ;; Hardware stack levels used:    1
  7869 ;; Hardware stack levels required when called:    1
  7870 ;; This function calls:
  7871 ;;		Nothing
  7872 ;; This function is called by:
  7873 ;;		_pad
  7874 ;;		_stoa
  7875 ;; This function uses a non-reentrant model
  7876 ;;
  7877                           
  7878                           	psect	text23
  7879  007D7C                     __ptext23:
  7880                           	callstack 0
  7881  007D7C                     _strlen:
  7882                           	callstack 0
  7883  007D7C  FFFF               	dw	65535	; assembler added errata NOP
  7884  007D7E  C001  F003         	movff	strlen@s,strlen@a
  7885  007D82  C002  F004         	movff	strlen@s+1,strlen@a+1
  7886  007D86  EFC8  F03E         	goto	l2935
  7887  007D8A                     l2933:
  7888  007D8A  FFFF               	dw	65535	; assembler added errata NOP
  7889  007D8C  4A01               	infsnz	strlen@s^0,f,c
  7890  007D8E  2A02               	incf	(strlen@s+1)^0,f,c
  7891  007D90                     l2935:
  7892  007D90  FFFF               	dw	65535	; assembler added errata NOP
  7893  007D92  C001  FFF6         	movff	strlen@s,tblptrl
  7894  007D96  C002  FFF7         	movff	strlen@s+1,tblptrh
  7895  007D9A  6AF8               	clrf	tblptru,c
  7896  007D9C  0E05               	movlw	(high __ramtop+-1)
  7897  007D9E  64F7               	cpfsgt	tblptrh,c
  7898  007DA0  D004               	bra	u2807
  7899  007DA2  0008               	tblrd		*
  7900  007DA4  FFFF               	dw	65535	; errata NOP
  7901  007DA6  50F5               	movf	tablat,w,c
  7902  007DA8  D005               	bra	u2800
  7903  007DAA                     u2807:
  7904  007DAA  CFF6 FFE1          	movff	tblptrl,fsr1l
  7905  007DAE  CFF7 FFE2          	movff	tblptrh,fsr1h
  7906  007DB2  50E7               	movf	indf1,w,c
  7907  007DB4                     u2800:
  7908  007DB4  0900               	iorlw	0
  7909  007DB6  A4D8               	btfss	status,2,c
  7910  007DB8  EFE0  F03E         	goto	u2811
  7911  007DBC  EFE3  F03E         	goto	u2810
  7912  007DC0                     u2811:
  7913  007DC0  FFFF               	dw	65535	; assembler added errata NOP
  7914  007DC2  EFC5  F03E         	goto	l2933
  7915  007DC6                     u2810:
  7916  007DC6  FFFF               	dw	65535	; assembler added errata NOP
  7917  007DC8  5003               	movf	strlen@a^0,w,c
  7918  007DCA  5C01               	subwf	strlen@s^0,w,c
  7919  007DCC  6E01               	movwf	?_strlen^0,c
  7920  007DCE  5004               	movf	(strlen@a+1)^0,w,c
  7921  007DD0  5802               	subwfb	(strlen@s+1)^0,w,c
  7922  007DD2  6E02               	movwf	(?_strlen+1)^0,c
  7923  007DD4  0012               	return		;funcret
  7924  007DD6  FFFF               	dw	65535	; errata NOP
  7925  007DD8                     __end_of_strlen:
  7926                           	callstack 0
  7927                           
  7928 ;; *************** function _fputs *****************
  7929 ;; Defined at:
  7930 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  7931 ;; Parameters:    Size  Location     Type
  7932 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7933 ;;		 -> dbuf(32), 
  7934 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7935 ;;		 -> vsnprintf@f(6), 
  7936 ;; Auto vars:     Size  Location     Type
  7937 ;;  i               2   14[COMRAM] int 
  7938 ;;  c               1   13[COMRAM] unsigned char 
  7939 ;; Return value:  Size  Location     Type
  7940 ;;                  2    9[COMRAM] int 
  7941 ;; Registers used:
  7942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7943 ;; Tracked objects:
  7944 ;;		On entry : 0/0
  7945 ;;		On exit  : 0/0
  7946 ;;		Unchanged: 0/0
  7947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7948 ;;      Params:         4       0       0       0       0       0       0
  7949 ;;      Locals:         3       0       0       0       0       0       0
  7950 ;;      Temps:          0       0       0       0       0       0       0
  7951 ;;      Totals:         7       0       0       0       0       0       0
  7952 ;;Total ram usage:        7 bytes
  7953 ;; Hardware stack levels used:    1
  7954 ;; Hardware stack levels required when called:    3
  7955 ;; This function calls:
  7956 ;;		_fputc
  7957 ;; This function is called by:
  7958 ;;		_pad
  7959 ;; This function uses a non-reentrant model
  7960 ;;
  7961                           
  7962                           	psect	text24
  7963  007D2C                     __ptext24:
  7964                           	callstack 0
  7965  007D2C                     _fputs:
  7966                           	callstack 0
  7967  007D2C  FFFF               	dw	65535	; assembler added errata NOP
  7968  007D2E  0E00               	movlw	0
  7969  007D30  6E10               	movwf	(fputs@i+1)^0,c
  7970  007D32  0E00               	movlw	0
  7971  007D34  6E0F               	movwf	fputs@i^0,c
  7972  007D36  EFA9  F03E         	goto	l2929
  7973  007D3A                     l2925:
  7974  007D3A  FFFF               	dw	65535	; assembler added errata NOP
  7975  007D3C  C00E  F001         	movff	fputs@c,fputc@c
  7976  007D40  6A02               	clrf	(fputc@c+1)^0,c
  7977  007D42  C00C  F003         	movff	fputs@fp,fputc@fp
  7978  007D46  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  7979  007D4A  EC8F  F03F         	call	_fputc	;wreg free
  7980  007D4E  4A0F               	infsnz	fputs@i^0,f,c
  7981  007D50  2A10               	incf	(fputs@i+1)^0,f,c
  7982  007D52                     l2929:
  7983  007D52  FFFF               	dw	65535	; assembler added errata NOP
  7984  007D54  500F               	movf	fputs@i^0,w,c
  7985  007D56  240A               	addwf	fputs@s^0,w,c
  7986  007D58  6ED9               	movwf	fsr2l,c
  7987  007D5A  5010               	movf	(fputs@i+1)^0,w,c
  7988  007D5C  200B               	addwfc	(fputs@s+1)^0,w,c
  7989  007D5E  6EDA               	movwf	fsr2h,c
  7990  007D60  50DF               	movf	indf2,w,c
  7991  007D62  6E0E               	movwf	fputs@c^0,c
  7992  007D64  500E               	movf	fputs@c^0,w,c
  7993  007D66  A4D8               	btfss	status,2,c
  7994  007D68  EFB8  F03E         	goto	u2791
  7995  007D6C  EFBB  F03E         	goto	u2790
  7996  007D70                     u2791:
  7997  007D70  FFFF               	dw	65535	; assembler added errata NOP
  7998  007D72  EF9D  F03E         	goto	l2925
  7999  007D76                     u2790:
  8000  007D76  FFFF               	dw	65535	; assembler added errata NOP
  8001  007D78  0012               	return		;funcret
  8002  007D7A  FFFF               	dw	65535	; errata NOP
  8003  007D7C                     __end_of_fputs:
  8004                           	callstack 0
  8005                           
  8006 ;; *************** function _fputc *****************
  8007 ;; Defined at:
  8008 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  8009 ;; Parameters:    Size  Location     Type
  8010 ;;  c               2    0[COMRAM] int 
  8011 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8012 ;;		 -> vsnprintf@f(6), 
  8013 ;; Auto vars:     Size  Location     Type
  8014 ;;		None
  8015 ;; Return value:  Size  Location     Type
  8016 ;;                  2    0[COMRAM] int 
  8017 ;; Registers used:
  8018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8019 ;; Tracked objects:
  8020 ;;		On entry : 0/0
  8021 ;;		On exit  : 0/0
  8022 ;;		Unchanged: 0/0
  8023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8024 ;;      Params:         4       0       0       0       0       0       0
  8025 ;;      Locals:         0       0       0       0       0       0       0
  8026 ;;      Temps:          5       0       0       0       0       0       0
  8027 ;;      Totals:         9       0       0       0       0       0       0
  8028 ;;Total ram usage:        9 bytes
  8029 ;; Hardware stack levels used:    1
  8030 ;; Hardware stack levels required when called:    2
  8031 ;; This function calls:
  8032 ;;		_putch
  8033 ;; This function is called by:
  8034 ;;		_pad
  8035 ;;		_stoa
  8036 ;;		_vfpfcnvrt
  8037 ;;		_fputs
  8038 ;; This function uses a non-reentrant model
  8039 ;;
  8040                           
  8041                           	psect	text25
  8042  007F1E                     __ptext25:
  8043                           	callstack 0
  8044  007F1E                     _fputc:
  8045                           	callstack 0
  8046  007F1E  FFFF               	dw	65535	; assembler added errata NOP
  8047  007F20  5003               	movf	fputc@fp^0,w,c
  8048  007F22  1004               	iorwf	(fputc@fp+1)^0,w,c
  8049  007F24  B4D8               	btfsc	status,2,c
  8050  007F26  EF97  F03F         	goto	u2751
  8051  007F2A  EF9A  F03F         	goto	u2750
  8052  007F2E                     u2751:
  8053  007F2E  FFFF               	dw	65535	; assembler added errata NOP
  8054  007F30  EFA5  F03F         	goto	l2913
  8055  007F34                     u2750:
  8056  007F34  FFFF               	dw	65535	; assembler added errata NOP
  8057  007F36  5003               	movf	fputc@fp^0,w,c
  8058  007F38  1004               	iorwf	(fputc@fp+1)^0,w,c
  8059  007F3A  A4D8               	btfss	status,2,c
  8060  007F3C  EFA2  F03F         	goto	u2761
  8061  007F40  EFA5  F03F         	goto	u2760
  8062  007F44                     u2761:
  8063  007F44  FFFF               	dw	65535	; assembler added errata NOP
  8064  007F46  EFAB  F03F         	goto	l2915
  8065  007F4A                     u2760:
  8066  007F4A                     l2913:
  8067  007F4A  FFFF               	dw	65535	; assembler added errata NOP
  8068  007F4C  5001               	movf	fputc@c^0,w,c
  8069  007F4E  EC69  F03C         	call	_putch
  8070  007F52  EFFD  F03F         	goto	l1214
  8071  007F56                     l2915:
  8072  007F56  FFFF               	dw	65535	; assembler added errata NOP
  8073  007F58  EE20 F004          	lfsr	2,4
  8074  007F5C  5003               	movf	fputc@fp^0,w,c
  8075  007F5E  26D9               	addwf	fsr2l,f,c
  8076  007F60  5004               	movf	(fputc@fp+1)^0,w,c
  8077  007F62  22DA               	addwfc	fsr2h,f,c
  8078  007F64  50DE               	movf	postinc2,w,c
  8079  007F66  10DE               	iorwf	postinc2,w,c
  8080  007F68  B4D8               	btfsc	status,2,c
  8081  007F6A  EFB9  F03F         	goto	u2771
  8082  007F6E  EFBC  F03F         	goto	u2770
  8083  007F72                     u2771:
  8084  007F72  FFFF               	dw	65535	; assembler added errata NOP
  8085  007F74  EFD9  F03F         	goto	l2919
  8086  007F78                     u2770:
  8087  007F78  FFFF               	dw	65535	; assembler added errata NOP
  8088  007F7A  EE20 F004          	lfsr	2,4
  8089  007F7E  5003               	movf	fputc@fp^0,w,c
  8090  007F80  26D9               	addwf	fsr2l,f,c
  8091  007F82  5004               	movf	(fputc@fp+1)^0,w,c
  8092  007F84  22DA               	addwfc	fsr2h,f,c
  8093  007F86  EE10 F002          	lfsr	1,2
  8094  007F8A  5003               	movf	fputc@fp^0,w,c
  8095  007F8C  26E1               	addwf	fsr1l,f,c
  8096  007F8E  5004               	movf	(fputc@fp+1)^0,w,c
  8097  007F90  22E2               	addwfc	fsr1h,f,c
  8098  007F92  50DE               	movf	postinc2,w,c
  8099  007F94  5CE6               	subwf	postinc1,w,c
  8100  007F96  50E6               	movf	postinc1,w,c
  8101  007F98  0A80               	xorlw	128
  8102  007F9A  6E09               	movwf	(??_fputc+4)^0,c
  8103  007F9C  50DE               	movf	postinc2,w,c
  8104  007F9E  0A80               	xorlw	128
  8105  007FA0  5809               	subwfb	(??_fputc+4)^0,w,c
  8106  007FA2  B0D8               	btfsc	status,0,c
  8107  007FA4  EFD6  F03F         	goto	u2781
  8108  007FA8  EFD9  F03F         	goto	u2780
  8109  007FAC                     u2781:
  8110  007FAC  FFFF               	dw	65535	; assembler added errata NOP
  8111  007FAE  EFFD  F03F         	goto	l1214
  8112  007FB2                     u2780:
  8113  007FB2                     l2919:
  8114  007FB2  FFFF               	dw	65535	; assembler added errata NOP
  8115  007FB4  EE20 F002          	lfsr	2,2
  8116  007FB8  5003               	movf	fputc@fp^0,w,c
  8117  007FBA  26D9               	addwf	fsr2l,f,c
  8118  007FBC  5004               	movf	(fputc@fp+1)^0,w,c
  8119  007FBE  22DA               	addwfc	fsr2h,f,c
  8120  007FC0  CFDE F005          	movff	postinc2,??_fputc
  8121  007FC4  CFDD F006          	movff	postdec2,??_fputc+1
  8122  007FC8  C003  FFD9         	movff	fputc@fp,fsr2l
  8123  007FCC  C004  FFDA         	movff	fputc@fp+1,fsr2h
  8124  007FD0  CFDE F007          	movff	postinc2,??_fputc+2
  8125  007FD4  CFDD F008          	movff	postdec2,??_fputc+3
  8126  007FD8  5005               	movf	??_fputc^0,w,c
  8127  007FDA  2407               	addwf	(??_fputc+2)^0,w,c
  8128  007FDC  6ED9               	movwf	fsr2l,c
  8129  007FDE  5006               	movf	(??_fputc+1)^0,w,c
  8130  007FE0  2008               	addwfc	(??_fputc+3)^0,w,c
  8131  007FE2  6EDA               	movwf	fsr2h,c
  8132  007FE4  C001  FFDF         	movff	fputc@c,indf2
  8133  007FE8  EE20 F002          	lfsr	2,2
  8134  007FEC  5003               	movf	fputc@fp^0,w,c
  8135  007FEE  26D9               	addwf	fsr2l,f,c
  8136  007FF0  5004               	movf	(fputc@fp+1)^0,w,c
  8137  007FF2  22DA               	addwfc	fsr2h,f,c
  8138  007FF4  2ADE               	incf	postinc2,f,c
  8139  007FF6  0E00               	movlw	0
  8140  007FF8  22DD               	addwfc	postdec2,f,c
  8141  007FFA                     l1214:
  8142  007FFA  FFFF               	dw	65535	; assembler added errata NOP
  8143  007FFC  0012               	return		;funcret
  8144  007FFE  FFFF               	dw	65535	; errata NOP
  8145  008000                     __end_of_fputc:
  8146                           	callstack 0
  8147                           
  8148 ;; *************** function _putch *****************
  8149 ;; Defined at:
  8150 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  8151 ;; Parameters:    Size  Location     Type
  8152 ;;  c               1    wreg     unsigned char 
  8153 ;; Auto vars:     Size  Location     Type
  8154 ;;  c               1    0[COMRAM] unsigned char 
  8155 ;; Return value:  Size  Location     Type
  8156 ;;                  1    wreg      void 
  8157 ;; Registers used:
  8158 ;;		wreg
  8159 ;; Tracked objects:
  8160 ;;		On entry : 0/0
  8161 ;;		On exit  : 0/0
  8162 ;;		Unchanged: 0/0
  8163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8164 ;;      Params:         0       0       0       0       0       0       0
  8165 ;;      Locals:         0       0       0       0       0       0       0
  8166 ;;      Temps:          0       0       0       0       0       0       0
  8167 ;;      Totals:         0       0       0       0       0       0       0
  8168 ;;Total ram usage:        0 bytes
  8169 ;; Hardware stack levels used:    1
  8170 ;; Hardware stack levels required when called:    1
  8171 ;; This function calls:
  8172 ;;		Nothing
  8173 ;; This function is called by:
  8174 ;;		_fputc
  8175 ;; This function uses a non-reentrant model
  8176 ;;
  8177                           
  8178                           	psect	text26
  8179  0078D2                     __ptext26:
  8180                           	callstack 0
  8181  0078D2                     _putch:
  8182                           	callstack 0
  8183  0078D2  FFFF               	dw	65535	; assembler added errata NOP
  8184  0078D4  0012               	return		;funcret
  8185  0078D6  FFFF               	dw	65535	; errata NOP
  8186  0078D8                     __end_of_putch:
  8187                           	callstack 0
  8188                           
  8189 ;; *************** function _atoi *****************
  8190 ;; Defined at:
  8191 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  8192 ;; Parameters:    Size  Location     Type
  8193 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8194 ;;		 -> STR_1(24), 
  8195 ;; Auto vars:     Size  Location     Type
  8196 ;;  n               2   20[COMRAM] int 
  8197 ;;  neg             2   13[COMRAM] int 
  8198 ;; Return value:  Size  Location     Type
  8199 ;;                  2    7[COMRAM] int 
  8200 ;; Registers used:
  8201 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8202 ;; Tracked objects:
  8203 ;;		On entry : 0/0
  8204 ;;		On exit  : 0/0
  8205 ;;		Unchanged: 0/0
  8206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8207 ;;      Params:         2       0       0       0       0       0       0
  8208 ;;      Locals:         9       0       0       0       0       0       0
  8209 ;;      Temps:          4       0       0       0       0       0       0
  8210 ;;      Totals:        15       0       0       0       0       0       0
  8211 ;;Total ram usage:       15 bytes
  8212 ;; Hardware stack levels used:    1
  8213 ;; Hardware stack levels required when called:    2
  8214 ;; This function calls:
  8215 ;;		___wmul
  8216 ;;		_isdigit
  8217 ;;		_isspace
  8218 ;; This function is called by:
  8219 ;;		_vfpfcnvrt
  8220 ;; This function uses a non-reentrant model
  8221 ;;
  8222                           
  8223                           	psect	text27
  8224  00352E                     __ptext27:
  8225                           	callstack 0
  8226  00352E                     _atoi:
  8227                           	callstack 0
  8228  00352E  FFFF               	dw	65535	; assembler added errata NOP
  8229  003530  0E00               	movlw	0
  8230  003532  6E16               	movwf	(atoi@n+1)^0,c
  8231  003534  0E00               	movlw	0
  8232  003536  6E15               	movwf	atoi@n^0,c
  8233  003538  0E00               	movlw	0
  8234  00353A  6E0F               	movwf	(atoi@neg+1)^0,c
  8235  00353C  0E00               	movlw	0
  8236  00353E  6E0E               	movwf	atoi@neg^0,c
  8237  003540  EFA5  F01A         	goto	l3401
  8238  003544                     l3399:
  8239  003544  FFFF               	dw	65535	; assembler added errata NOP
  8240  003546  4A08               	infsnz	atoi@s^0,f,c
  8241  003548  2A09               	incf	(atoi@s+1)^0,f,c
  8242  00354A                     l3401:
  8243  00354A  FFFF               	dw	65535	; assembler added errata NOP
  8244  00354C  0E01               	movlw	1
  8245  00354E  6E14               	movwf	_atoi$1477^0,c
  8246  003550  C008  FFF6         	movff	atoi@s,tblptrl
  8247  003554  C009  FFF7         	movff	atoi@s+1,tblptrh
  8248  003558                     	if	0	;tblptru may be non-zero
  8249  003558                     	endif
  8250  003558                     	if	0	;tblptru may be non-zero
  8251  003558                     	endif
  8252  003558  0008               	tblrd		*
  8253  00355A  FFFF               	dw	65535	; errata NOP
  8254  00355C  50F5               	movf	tablat,w,c
  8255  00355E  0A20               	xorlw	32
  8256  003560  B4D8               	btfsc	status,2,c
  8257  003562  EFB5  F01A         	goto	u3801
  8258  003566  EFB8  F01A         	goto	u3800
  8259  00356A                     u3801:
  8260  00356A  FFFF               	dw	65535	; assembler added errata NOP
  8261  00356C  EFD9  F01A         	goto	l3409
  8262  003570                     u3800:
  8263  003570  FFFF               	dw	65535	; assembler added errata NOP
  8264  003572  0EF7               	movlw	247
  8265  003574  6E0A               	movwf	??_atoi^0,c
  8266  003576  0EFF               	movlw	255
  8267  003578  6E0B               	movwf	(??_atoi+1)^0,c
  8268  00357A  C008  FFF6         	movff	atoi@s,tblptrl
  8269  00357E  C009  FFF7         	movff	atoi@s+1,tblptrh
  8270  003582                     	if	0	;tblptru may be non-zero
  8271  003582                     	endif
  8272  003582                     	if	0	;tblptru may be non-zero
  8273  003582                     	endif
  8274  003582  0008               	tblrd		*
  8275  003584  FFFF               	dw	65535	; errata NOP
  8276  003586  50F5               	movf	tablat,w,c
  8277  003588  6E0C               	movwf	(??_atoi+2)^0,c
  8278  00358A  6A0D               	clrf	(??_atoi+3)^0,c
  8279  00358C  500A               	movf	??_atoi^0,w,c
  8280  00358E  260C               	addwf	(??_atoi+2)^0,f,c
  8281  003590  500B               	movf	(??_atoi+1)^0,w,c
  8282  003592  220D               	addwfc	(??_atoi+3)^0,f,c
  8283  003594  500D               	movf	(??_atoi+3)^0,w,c
  8284  003596  E10A               	bnz	u3810
  8285  003598  0E05               	movlw	5
  8286  00359A  5C0C               	subwf	(??_atoi+2)^0,w,c
  8287  00359C  A0D8               	btfss	status,0,c
  8288  00359E  EFD3  F01A         	goto	u3811
  8289  0035A2  EFD6  F01A         	goto	u3810
  8290  0035A6                     u3811:
  8291  0035A6  FFFF               	dw	65535	; assembler added errata NOP
  8292  0035A8  EFD9  F01A         	goto	l3409
  8293  0035AC                     u3810:
  8294  0035AC  FFFF               	dw	65535	; assembler added errata NOP
  8295  0035AE  0E00               	movlw	0
  8296  0035B0  6E14               	movwf	_atoi$1477^0,c
  8297  0035B2                     l3409:
  8298  0035B2  FFFF               	dw	65535	; assembler added errata NOP
  8299  0035B4  C014  F010         	movff	_atoi$1477,_atoi$1476
  8300  0035B8  6A11               	clrf	(_atoi$1476+1)^0,c
  8301  0035BA  5010               	movf	_atoi$1476^0,w,c
  8302  0035BC  1011               	iorwf	(_atoi$1476+1)^0,w,c
  8303  0035BE  A4D8               	btfss	status,2,c
  8304  0035C0  EFE4  F01A         	goto	u3821
  8305  0035C4  EFE7  F01A         	goto	u3820
  8306  0035C8                     u3821:
  8307  0035C8  FFFF               	dw	65535	; assembler added errata NOP
  8308  0035CA  EFA2  F01A         	goto	l3399
  8309  0035CE                     u3820:
  8310  0035CE  FFFF               	dw	65535	; assembler added errata NOP
  8311  0035D0  EFF4  F01A         	goto	l3419
  8312  0035D4                     l3415:
  8313  0035D4  FFFF               	dw	65535	; assembler added errata NOP
  8314  0035D6  0E00               	movlw	0
  8315  0035D8  6E0F               	movwf	(atoi@neg+1)^0,c
  8316  0035DA  0E01               	movlw	1
  8317  0035DC  6E0E               	movwf	atoi@neg^0,c
  8318  0035DE                     l3417:
  8319  0035DE  FFFF               	dw	65535	; assembler added errata NOP
  8320  0035E0  4A08               	infsnz	atoi@s^0,f,c
  8321  0035E2  2A09               	incf	(atoi@s+1)^0,f,c
  8322  0035E4  EF2E  F01B         	goto	l3425
  8323  0035E8                     l3419:
  8324  0035E8  FFFF               	dw	65535	; assembler added errata NOP
  8325  0035EA  C008  FFF6         	movff	atoi@s,tblptrl
  8326  0035EE  C009  FFF7         	movff	atoi@s+1,tblptrh
  8327  0035F2                     	if	0	;tblptru may be non-zero
  8328  0035F2                     	endif
  8329  0035F2                     	if	0	;tblptru may be non-zero
  8330  0035F2                     	endif
  8331  0035F2  0008               	tblrd		*
  8332  0035F4  FFFF               	dw	65535	; errata NOP
  8333  0035F6  50F5               	movf	tablat,w,c
  8334  0035F8  6E0A               	movwf	??_atoi^0,c
  8335  0035FA  6A0B               	clrf	(??_atoi+1)^0,c
  8336                           
  8337                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8338                           ; Switch size 1, requested type "simple"
  8339                           ; Number of cases is 1, Range of values is 0 to 0
  8340                           ; switch strategies available:
  8341                           ; Name         Instructions Cycles
  8342                           ; simple_byte            4     3 (average)
  8343                           ;	Chosen strategy is simple_byte
  8344  0035FC  500B               	movf	(??_atoi+1)^0,w,c
  8345  0035FE  0A00               	xorlw	0	; case 0
  8346  003600  B4D8               	btfsc	status,2,c
  8347  003602  EF05  F01B         	goto	l4575
  8348  003606  EF2E  F01B         	goto	l3425
  8349  00360A                     l4575:
  8350  00360A  FFFF               	dw	65535	; assembler added errata NOP
  8351                           
  8352                           ; Switch size 1, requested type "simple"
  8353                           ; Number of cases is 2, Range of values is 43 to 45
  8354                           ; switch strategies available:
  8355                           ; Name         Instructions Cycles
  8356                           ; simple_byte            7     4 (average)
  8357                           ;	Chosen strategy is simple_byte
  8358  00360C  500A               	movf	??_atoi^0,w,c
  8359  00360E  0A2B               	xorlw	43	; case 43
  8360  003610  B4D8               	btfsc	status,2,c
  8361  003612  EFEF  F01A         	goto	l3417
  8362  003616  0A06               	xorlw	6	; case 45
  8363  003618  B4D8               	btfsc	status,2,c
  8364  00361A  EFEA  F01A         	goto	l3415
  8365  00361E  EF2E  F01B         	goto	l3425
  8366  003622                     l3421:
  8367  003622  FFFF               	dw	65535	; assembler added errata NOP
  8368  003624  C015  F001         	movff	atoi@n,___wmul@multiplier
  8369  003628  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  8370  00362C  0E00               	movlw	0
  8371  00362E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8372  003630  0E0A               	movlw	10
  8373  003632  6E03               	movwf	___wmul@multiplicand^0,c
  8374  003634  ECB0  F03C         	call	___wmul	;wreg free
  8375  003638  C008  FFF6         	movff	atoi@s,tblptrl
  8376  00363C  C009  FFF7         	movff	atoi@s+1,tblptrh
  8377  003640                     	if	0	;tblptru may be non-zero
  8378  003640                     	endif
  8379  003640                     	if	0	;tblptru may be non-zero
  8380  003640                     	endif
  8381  003640  0008               	tblrd		*
  8382  003642  FFFF               	dw	65535	; errata NOP
  8383  003644  50F5               	movf	tablat,w,c
  8384  003646  5E01               	subwf	?___wmul^0,f,c
  8385  003648  0E00               	movlw	0
  8386  00364A  5A02               	subwfb	(?___wmul+1)^0,f,c
  8387  00364C  0E30               	movlw	48
  8388  00364E  2401               	addwf	?___wmul^0,w,c
  8389  003650  6E15               	movwf	atoi@n^0,c
  8390  003652  0E00               	movlw	0
  8391  003654  2002               	addwfc	(?___wmul+1)^0,w,c
  8392  003656  6E16               	movwf	(atoi@n+1)^0,c
  8393  003658  EFEF  F01A         	goto	l3417
  8394  00365C                     l3425:
  8395  00365C  FFFF               	dw	65535	; assembler added errata NOP
  8396  00365E  0ED0               	movlw	208
  8397  003660  6E0A               	movwf	??_atoi^0,c
  8398  003662  0EFF               	movlw	255
  8399  003664  6E0B               	movwf	(??_atoi+1)^0,c
  8400  003666  C008  FFF6         	movff	atoi@s,tblptrl
  8401  00366A  C009  FFF7         	movff	atoi@s+1,tblptrh
  8402  00366E                     	if	0	;tblptru may be non-zero
  8403  00366E                     	endif
  8404  00366E                     	if	0	;tblptru may be non-zero
  8405  00366E                     	endif
  8406  00366E  0008               	tblrd		*
  8407  003670  FFFF               	dw	65535	; errata NOP
  8408  003672  50F5               	movf	tablat,w,c
  8409  003674  6E0C               	movwf	(??_atoi+2)^0,c
  8410  003676  6A0D               	clrf	(??_atoi+3)^0,c
  8411  003678  500A               	movf	??_atoi^0,w,c
  8412  00367A  260C               	addwf	(??_atoi+2)^0,f,c
  8413  00367C  500B               	movf	(??_atoi+1)^0,w,c
  8414  00367E  220D               	addwfc	(??_atoi+3)^0,f,c
  8415  003680  500D               	movf	(??_atoi+3)^0,w,c
  8416  003682  E10B               	bnz	u3830
  8417  003684  0E0A               	movlw	10
  8418  003686  5C0C               	subwf	(??_atoi+2)^0,w,c
  8419  003688  A0D8               	btfss	status,0,c
  8420  00368A  EF49  F01B         	goto	u3831
  8421  00368E  EF4D  F01B         	goto	u3830
  8422  003692                     u3831:
  8423  003692  FFFF               	dw	65535	; assembler added errata NOP
  8424  003694  0E01               	movlw	1
  8425  003696  EF4F  F01B         	goto	u3840
  8426  00369A                     u3830:
  8427  00369A  FFFF               	dw	65535	; assembler added errata NOP
  8428  00369C  0E00               	movlw	0
  8429  00369E                     u3840:
  8430  00369E  FFFF               	dw	65535	; assembler added errata NOP
  8431  0036A0  6E12               	movwf	_atoi$1478^0,c
  8432  0036A2  6A13               	clrf	(_atoi$1478+1)^0,c
  8433  0036A4  5012               	movf	_atoi$1478^0,w,c
  8434  0036A6  1013               	iorwf	(_atoi$1478+1)^0,w,c
  8435  0036A8  A4D8               	btfss	status,2,c
  8436  0036AA  EF59  F01B         	goto	u3851
  8437  0036AE  EF5C  F01B         	goto	u3850
  8438  0036B2                     u3851:
  8439  0036B2  FFFF               	dw	65535	; assembler added errata NOP
  8440  0036B4  EF11  F01B         	goto	l3421
  8441  0036B8                     u3850:
  8442  0036B8  FFFF               	dw	65535	; assembler added errata NOP
  8443  0036BA  500E               	movf	atoi@neg^0,w,c
  8444  0036BC  100F               	iorwf	(atoi@neg+1)^0,w,c
  8445  0036BE  A4D8               	btfss	status,2,c
  8446  0036C0  EF64  F01B         	goto	u3861
  8447  0036C4  EF67  F01B         	goto	u3860
  8448  0036C8                     u3861:
  8449  0036C8  FFFF               	dw	65535	; assembler added errata NOP
  8450  0036CA  EF76  F01B         	goto	l1171
  8451  0036CE                     u3860:
  8452  0036CE  FFFF               	dw	65535	; assembler added errata NOP
  8453  0036D0  C015  F00A         	movff	atoi@n,??_atoi
  8454  0036D4  C016  F00B         	movff	atoi@n+1,??_atoi+1
  8455  0036D8  1E0A               	comf	??_atoi^0,f,c
  8456  0036DA  1E0B               	comf	(??_atoi+1)^0,f,c
  8457  0036DC  4A0A               	infsnz	??_atoi^0,f,c
  8458  0036DE  2A0B               	incf	(??_atoi+1)^0,f,c
  8459  0036E0  C00A  F008         	movff	??_atoi,?_atoi
  8460  0036E4  C00B  F009         	movff	??_atoi+1,?_atoi+1
  8461  0036E8  EF7B  F01B         	goto	l1174
  8462  0036EC                     l1171:
  8463  0036EC  FFFF               	dw	65535	; assembler added errata NOP
  8464  0036EE  C015  F008         	movff	atoi@n,?_atoi
  8465  0036F2  C016  F009         	movff	atoi@n+1,?_atoi+1
  8466  0036F6                     l1174:
  8467  0036F6  FFFF               	dw	65535	; assembler added errata NOP
  8468  0036F8  0012               	return		;funcret
  8469  0036FA  FFFF               	dw	65535	; errata NOP
  8470  0036FC                     __end_of_atoi:
  8471                           	callstack 0
  8472                           
  8473 ;; *************** function _isspace *****************
  8474 ;; Defined at:
  8475 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
  8476 ;; Parameters:    Size  Location     Type
  8477 ;;  c               2    0[COMRAM] int 
  8478 ;; Auto vars:     Size  Location     Type
  8479 ;;		None
  8480 ;; Return value:  Size  Location     Type
  8481 ;;                  2    0[COMRAM] int 
  8482 ;; Registers used:
  8483 ;;		wreg, status,2, status,0
  8484 ;; Tracked objects:
  8485 ;;		On entry : 0/0
  8486 ;;		On exit  : 0/0
  8487 ;;		Unchanged: 0/0
  8488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8489 ;;      Params:         2       0       0       0       0       0       0
  8490 ;;      Locals:         1       0       0       0       0       0       0
  8491 ;;      Temps:          4       0       0       0       0       0       0
  8492 ;;      Totals:         7       0       0       0       0       0       0
  8493 ;;Total ram usage:        7 bytes
  8494 ;; Hardware stack levels used:    1
  8495 ;; Hardware stack levels required when called:    1
  8496 ;; This function calls:
  8497 ;;		Nothing
  8498 ;; This function is called by:
  8499 ;;		_atoi
  8500 ;; This function uses a non-reentrant model
  8501 ;;
  8502                           
  8503                           	psect	text28
  8504  003FA0                     __ptext28:
  8505                           	callstack 0
  8506  003FA0                     _isspace:
  8507                           	callstack 24
  8508  003FA0  FFFF               	dw	65535	; assembler added errata NOP
  8509  003FA2  0E01               	movlw	1
  8510  003FA4  6E07               	movwf	_isspace$1504^0,c
  8511  003FA6  0E20               	movlw	32
  8512  003FA8  1801               	xorwf	isspace@c^0,w,c
  8513  003FAA  1002               	iorwf	(isspace@c+1)^0,w,c
  8514  003FAC  B4D8               	btfsc	status,2,c
  8515  003FAE  EFDB  F01F         	goto	u3181
  8516  003FB2  EFDE  F01F         	goto	u3180
  8517  003FB6                     u3181:
  8518  003FB6  FFFF               	dw	65535	; assembler added errata NOP
  8519  003FB8  EFFA  F01F         	goto	l3125
  8520  003FBC                     u3180:
  8521  003FBC  FFFF               	dw	65535	; assembler added errata NOP
  8522  003FBE  0EF7               	movlw	247
  8523  003FC0  6E03               	movwf	??_isspace^0,c
  8524  003FC2  0EFF               	movlw	255
  8525  003FC4  6E04               	movwf	(??_isspace+1)^0,c
  8526  003FC6  C001  F005         	movff	isspace@c,??_isspace+2
  8527  003FCA  C002  F006         	movff	isspace@c+1,??_isspace+3
  8528  003FCE  5003               	movf	??_isspace^0,w,c
  8529  003FD0  2605               	addwf	(??_isspace+2)^0,f,c
  8530  003FD2  5004               	movf	(??_isspace+1)^0,w,c
  8531  003FD4  2206               	addwfc	(??_isspace+3)^0,f,c
  8532  003FD6  5006               	movf	(??_isspace+3)^0,w,c
  8533  003FD8  E10A               	bnz	u3190
  8534  003FDA  0E05               	movlw	5
  8535  003FDC  5C05               	subwf	(??_isspace+2)^0,w,c
  8536  003FDE  A0D8               	btfss	status,0,c
  8537  003FE0  EFF4  F01F         	goto	u3191
  8538  003FE4  EFF7  F01F         	goto	u3190
  8539  003FE8                     u3191:
  8540  003FE8  FFFF               	dw	65535	; assembler added errata NOP
  8541  003FEA  EFFA  F01F         	goto	l3125
  8542  003FEE                     u3190:
  8543  003FEE  FFFF               	dw	65535	; assembler added errata NOP
  8544  003FF0  0E00               	movlw	0
  8545  003FF2  6E07               	movwf	_isspace$1504^0,c
  8546  003FF4                     l3125:
  8547  003FF4  FFFF               	dw	65535	; assembler added errata NOP
  8548  003FF6  C007  F001         	movff	_isspace$1504,?_isspace
  8549  003FFA  6A02               	clrf	(?_isspace+1)^0,c
  8550  003FFC  0012               	return		;funcret
  8551  003FFE  FFFF               	dw	65535	; errata NOP
  8552  004000                     __end_of_isspace:
  8553                           	callstack 0
  8554                           
  8555 ;; *************** function _isdigit *****************
  8556 ;; Defined at:
  8557 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  8558 ;; Parameters:    Size  Location     Type
  8559 ;;  c               2    0[COMRAM] int 
  8560 ;; Auto vars:     Size  Location     Type
  8561 ;;		None
  8562 ;; Return value:  Size  Location     Type
  8563 ;;                  2    0[COMRAM] int 
  8564 ;; Registers used:
  8565 ;;		wreg, status,2, status,0
  8566 ;; Tracked objects:
  8567 ;;		On entry : 0/0
  8568 ;;		On exit  : 0/0
  8569 ;;		Unchanged: 0/0
  8570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8571 ;;      Params:         2       0       0       0       0       0       0
  8572 ;;      Locals:         0       0       0       0       0       0       0
  8573 ;;      Temps:          4       0       0       0       0       0       0
  8574 ;;      Totals:         6       0       0       0       0       0       0
  8575 ;;Total ram usage:        6 bytes
  8576 ;; Hardware stack levels used:    1
  8577 ;; Hardware stack levels required when called:    1
  8578 ;; This function calls:
  8579 ;;		Nothing
  8580 ;; This function is called by:
  8581 ;;		_vfpfcnvrt
  8582 ;;		_atoi
  8583 ;; This function uses a non-reentrant model
  8584 ;;
  8585                           
  8586                           	psect	text29
  8587  007AB4                     __ptext29:
  8588                           	callstack 0
  8589  007AB4                     _isdigit:
  8590                           	callstack 25
  8591  007AB4  FFFF               	dw	65535	; assembler added errata NOP
  8592  007AB6  0ED0               	movlw	208
  8593  007AB8  6E03               	movwf	??_isdigit^0,c
  8594  007ABA  0EFF               	movlw	255
  8595  007ABC  6E04               	movwf	(??_isdigit+1)^0,c
  8596  007ABE  C001  F005         	movff	isdigit@c,??_isdigit+2
  8597  007AC2  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  8598  007AC6  5003               	movf	??_isdigit^0,w,c
  8599  007AC8  2605               	addwf	(??_isdigit+2)^0,f,c
  8600  007ACA  5004               	movf	(??_isdigit+1)^0,w,c
  8601  007ACC  2206               	addwfc	(??_isdigit+3)^0,f,c
  8602  007ACE  5006               	movf	(??_isdigit+3)^0,w,c
  8603  007AD0  E10B               	bnz	u3160
  8604  007AD2  0E0A               	movlw	10
  8605  007AD4  5C05               	subwf	(??_isdigit+2)^0,w,c
  8606  007AD6  A0D8               	btfss	status,0,c
  8607  007AD8  EF70  F03D         	goto	u3161
  8608  007ADC  EF74  F03D         	goto	u3160
  8609  007AE0                     u3161:
  8610  007AE0  FFFF               	dw	65535	; assembler added errata NOP
  8611  007AE2  0E01               	movlw	1
  8612  007AE4  EF76  F03D         	goto	u3170
  8613  007AE8                     u3160:
  8614  007AE8  FFFF               	dw	65535	; assembler added errata NOP
  8615  007AEA  0E00               	movlw	0
  8616  007AEC                     u3170:
  8617  007AEC  FFFF               	dw	65535	; assembler added errata NOP
  8618  007AEE  6E01               	movwf	?_isdigit^0,c
  8619  007AF0  6A02               	clrf	(?_isdigit+1)^0,c
  8620  007AF2  0012               	return		;funcret
  8621  007AF4  FFFF               	dw	65535	; errata NOP
  8622  007AF6                     __end_of_isdigit:
  8623                           	callstack 0
  8624                           
  8625 ;; *************** function ___wmul *****************
  8626 ;; Defined at:
  8627 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  8628 ;; Parameters:    Size  Location     Type
  8629 ;;  multiplier      2    0[COMRAM] unsigned int 
  8630 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8631 ;; Auto vars:     Size  Location     Type
  8632 ;;  product         2    4[COMRAM] unsigned int 
  8633 ;; Return value:  Size  Location     Type
  8634 ;;                  2    0[COMRAM] unsigned int 
  8635 ;; Registers used:
  8636 ;;		wreg, status,2, status,0, prodl, prodh
  8637 ;; Tracked objects:
  8638 ;;		On entry : 0/0
  8639 ;;		On exit  : 0/0
  8640 ;;		Unchanged: 0/0
  8641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8642 ;;      Params:         4       0       0       0       0       0       0
  8643 ;;      Locals:         2       0       0       0       0       0       0
  8644 ;;      Temps:          0       0       0       0       0       0       0
  8645 ;;      Totals:         6       0       0       0       0       0       0
  8646 ;;Total ram usage:        6 bytes
  8647 ;; Hardware stack levels used:    1
  8648 ;; Hardware stack levels required when called:    1
  8649 ;; This function calls:
  8650 ;;		Nothing
  8651 ;; This function is called by:
  8652 ;;		_atoi
  8653 ;; This function uses a non-reentrant model
  8654 ;;
  8655                           
  8656                           	psect	text30
  8657  007960                     __ptext30:
  8658                           	callstack 0
  8659  007960                     ___wmul:
  8660                           	callstack 0
  8661  007960  FFFF               	dw	65535	; assembler added errata NOP
  8662  007962  5001               	movf	___wmul@multiplier^0,w,c
  8663  007964  0203               	mulwf	___wmul@multiplicand^0,c
  8664  007966  CFF3 F005          	movff	prodl,___wmul@product
  8665  00796A  CFF4 F006          	movff	prodh,___wmul@product+1
  8666  00796E  5001               	movf	___wmul@multiplier^0,w,c
  8667  007970  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8668  007972  50F3               	movf	243,w,c
  8669  007974  2606               	addwf	(___wmul@product+1)^0,f,c
  8670  007976  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8671  007978  0203               	mulwf	___wmul@multiplicand^0,c
  8672  00797A  50F3               	movf	243,w,c
  8673  00797C  2606               	addwf	(___wmul@product+1)^0,f,c
  8674  00797E  C005  F001         	movff	___wmul@product,?___wmul
  8675  007982  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8676  007986  0012               	return		;funcret
  8677  007988  FFFF               	dw	65535	; errata NOP
  8678  00798A                     __end_of___wmul:
  8679                           	callstack 0
  8680                           
  8681 ;; *************** function _serial_tx_string *****************
  8682 ;; Defined at:
  8683 ;;		line 45 in file "serial_rs232.c"
  8684 ;; Parameters:    Size  Location     Type
  8685 ;;  val             2    1[COMRAM] PTR const unsigned char 
  8686 ;;		 -> main@greet_str(160), 
  8687 ;; Auto vars:     Size  Location     Type
  8688 ;;  i               2    3[COMRAM] int 
  8689 ;; Return value:  Size  Location     Type
  8690 ;;                  1    wreg      void 
  8691 ;; Registers used:
  8692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8693 ;; Tracked objects:
  8694 ;;		On entry : 0/0
  8695 ;;		On exit  : 0/0
  8696 ;;		Unchanged: 0/0
  8697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8698 ;;      Params:         2       0       0       0       0       0       0
  8699 ;;      Locals:         2       0       0       0       0       0       0
  8700 ;;      Temps:          0       0       0       0       0       0       0
  8701 ;;      Totals:         4       0       0       0       0       0       0
  8702 ;;Total ram usage:        4 bytes
  8703 ;; Hardware stack levels used:    1
  8704 ;; Hardware stack levels required when called:    2
  8705 ;; This function calls:
  8706 ;;		_serial_tx_char
  8707 ;; This function is called by:
  8708 ;;		_main
  8709 ;; This function uses a non-reentrant model
  8710 ;;
  8711                           
  8712                           	psect	text31
  8713  007C94                     __ptext31:
  8714                           	callstack 0
  8715  007C94                     _serial_tx_string:
  8716                           	callstack 0
  8717  007C94  FFFF               	dw	65535	; assembler added errata NOP
  8718  007C96                     
  8719                           ;serial_rs232.c: 46:     for (int i=0; val[i] != 0; i++){
  8720  007C96  0E00               	movlw	0
  8721  007C98  6E05               	movwf	(serial_tx_string@i+1)^0,c
  8722  007C9A  0E00               	movlw	0
  8723  007C9C  6E04               	movwf	serial_tx_string@i^0,c
  8724  007C9E  EF5D  F03E         	goto	l4333
  8725  007CA2                     l4329:
  8726  007CA2  FFFF               	dw	65535	; assembler added errata NOP
  8727                           
  8728                           ;serial_rs232.c: 47:         serial_tx_char(val[i]);
  8729  007CA4  5004               	movf	serial_tx_string@i^0,w,c
  8730  007CA6  2402               	addwf	serial_tx_string@val^0,w,c
  8731  007CA8  6ED9               	movwf	fsr2l,c
  8732  007CAA  5005               	movf	(serial_tx_string@i+1)^0,w,c
  8733  007CAC  2003               	addwfc	(serial_tx_string@val+1)^0,w,c
  8734  007CAE  6EDA               	movwf	fsr2h,c
  8735  007CB0  50DF               	movf	indf2,w,c
  8736  007CB2  EC8F  F03C         	call	_serial_tx_char
  8737  007CB6                     
  8738                           ;serial_rs232.c: 48:     }
  8739  007CB6  4A04               	infsnz	serial_tx_string@i^0,f,c
  8740  007CB8  2A05               	incf	(serial_tx_string@i+1)^0,f,c
  8741  007CBA                     l4333:
  8742  007CBA  FFFF               	dw	65535	; assembler added errata NOP
  8743  007CBC  5004               	movf	serial_tx_string@i^0,w,c
  8744  007CBE  2402               	addwf	serial_tx_string@val^0,w,c
  8745  007CC0  6ED9               	movwf	fsr2l,c
  8746  007CC2  5005               	movf	(serial_tx_string@i+1)^0,w,c
  8747  007CC4  2003               	addwfc	(serial_tx_string@val+1)^0,w,c
  8748  007CC6  6EDA               	movwf	fsr2h,c
  8749  007CC8  50DF               	movf	indf2,w,c
  8750  007CCA  A4D8               	btfss	status,2,c
  8751  007CCC  EF6A  F03E         	goto	u5281
  8752  007CD0  EF6D  F03E         	goto	u5280
  8753  007CD4                     u5281:
  8754  007CD4  FFFF               	dw	65535	; assembler added errata NOP
  8755  007CD6  EF51  F03E         	goto	l4329
  8756  007CDA                     u5280:
  8757  007CDA  FFFF               	dw	65535	; assembler added errata NOP
  8758  007CDC  0012               	return		;funcret
  8759  007CDE  FFFF               	dw	65535	; errata NOP
  8760  007CE0                     __end_of_serial_tx_string:
  8761                           	callstack 0
  8762                           
  8763 ;; *************** function _serial_tx_char *****************
  8764 ;; Defined at:
  8765 ;;		line 39 in file "serial_rs232.c"
  8766 ;; Parameters:    Size  Location     Type
  8767 ;;  val             1    wreg     unsigned char 
  8768 ;; Auto vars:     Size  Location     Type
  8769 ;;  val             1    0[COMRAM] unsigned char 
  8770 ;; Return value:  Size  Location     Type
  8771 ;;                  1    wreg      void 
  8772 ;; Registers used:
  8773 ;;		wreg
  8774 ;; Tracked objects:
  8775 ;;		On entry : 0/0
  8776 ;;		On exit  : 0/0
  8777 ;;		Unchanged: 0/0
  8778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8779 ;;      Params:         0       0       0       0       0       0       0
  8780 ;;      Locals:         1       0       0       0       0       0       0
  8781 ;;      Temps:          0       0       0       0       0       0       0
  8782 ;;      Totals:         1       0       0       0       0       0       0
  8783 ;;Total ram usage:        1 bytes
  8784 ;; Hardware stack levels used:    1
  8785 ;; Hardware stack levels required when called:    1
  8786 ;; This function calls:
  8787 ;;		Nothing
  8788 ;; This function is called by:
  8789 ;;		_serial_tx_string
  8790 ;;		_main
  8791 ;; This function uses a non-reentrant model
  8792 ;;
  8793                           
  8794                           	psect	text32
  8795  00791E                     __ptext32:
  8796                           	callstack 0
  8797  00791E                     _serial_tx_char:
  8798                           	callstack 0
  8799  00791E  FFFF               	dw	65535	; assembler added errata NOP
  8800                           
  8801                           ;incstack = 0
  8802                           ;serial_tx_char@val stored from wreg
  8803  007920  6E01               	movwf	serial_tx_char@val^0,c
  8804  007922                     
  8805                           ;serial_rs232.c: 40:     TXREG = val;
  8806  007922  C001  FFAD         	movff	serial_tx_char@val,4013	;volatile
  8807  007926                     l24:
  8808  007926  FFFF               	dw	65535	; assembler added errata NOP
  8809  007928  A2AC               	btfss	172,1,c	;volatile
  8810  00792A  EF99  F03C         	goto	u5151
  8811  00792E  EF9C  F03C         	goto	u5150
  8812  007932                     u5151:
  8813  007932  FFFF               	dw	65535	; assembler added errata NOP
  8814  007934  EF93  F03C         	goto	l24
  8815  007938                     u5150:
  8816  007938  FFFF               	dw	65535	; assembler added errata NOP
  8817  00793A  0012               	return		;funcret
  8818  00793C  FFFF               	dw	65535	; errata NOP
  8819  00793E                     __end_of_serial_tx_char:
  8820                           	callstack 0
  8821                           
  8822 ;; *************** function _lcd_str *****************
  8823 ;; Defined at:
  8824 ;;		line 62 in file "lcd.c"
  8825 ;; Parameters:    Size  Location     Type
  8826 ;;  str             2    3[COMRAM] PTR const unsigned char 
  8827 ;;		 -> main@greet_str(160), 
  8828 ;; Auto vars:     Size  Location     Type
  8829 ;;  i               1    5[COMRAM] unsigned char 
  8830 ;; Return value:  Size  Location     Type
  8831 ;;                  1    wreg      void 
  8832 ;; Registers used:
  8833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8834 ;; Tracked objects:
  8835 ;;		On entry : 0/0
  8836 ;;		On exit  : 0/0
  8837 ;;		Unchanged: 0/0
  8838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8839 ;;      Params:         2       0       0       0       0       0       0
  8840 ;;      Locals:         1       0       0       0       0       0       0
  8841 ;;      Temps:          0       0       0       0       0       0       0
  8842 ;;      Totals:         3       0       0       0       0       0       0
  8843 ;;Total ram usage:        3 bytes
  8844 ;; Hardware stack levels used:    1
  8845 ;; Hardware stack levels required when called:    3
  8846 ;; This function calls:
  8847 ;;		_lcd_dat
  8848 ;; This function is called by:
  8849 ;;		_main
  8850 ;; This function uses a non-reentrant model
  8851 ;;
  8852                           
  8853                           	psect	text33
  8854  007BBE                     __ptext33:
  8855                           	callstack 0
  8856  007BBE                     _lcd_str:
  8857                           	callstack 0
  8858  007BBE  FFFF               	dw	65535	; assembler added errata NOP
  8859  007BC0                     
  8860                           ;lcd.c: 62: void lcd_str(const char* str);lcd.c: 63: {;lcd.c: 64:     unsigned char i=0;
  8861  007BC0  0E00               	movlw	0
  8862  007BC2  6E06               	movwf	lcd_str@i^0,c
  8863                           
  8864                           ;lcd.c: 66:     while(str[i] != 0 )
  8865  007BC4  EFEF  F03D         	goto	l4421
  8866  007BC8                     l4417:
  8867  007BC8  FFFF               	dw	65535	; assembler added errata NOP
  8868                           
  8869                           ;lcd.c: 67:     {;lcd.c: 68:       lcd_dat(str[i]);
  8870  007BCA  5006               	movf	lcd_str@i^0,w,c
  8871  007BCC  2404               	addwf	lcd_str@str^0,w,c
  8872  007BCE  6ED9               	movwf	fsr2l,c
  8873  007BD0  0E00               	movlw	0
  8874  007BD2  2005               	addwfc	(lcd_str@str+1)^0,w,c
  8875  007BD4  6EDA               	movwf	fsr2h,c
  8876  007BD6  50DF               	movf	indf2,w,c
  8877  007BD8  ECFC  F03C         	call	_lcd_dat
  8878  007BDC                     
  8879                           ;lcd.c: 69:       i++;
  8880  007BDC  2A06               	incf	lcd_str@i^0,f,c
  8881  007BDE                     l4421:
  8882  007BDE  FFFF               	dw	65535	; assembler added errata NOP
  8883                           
  8884                           ;lcd.c: 66:     while(str[i] != 0 )
  8885  007BE0  5006               	movf	lcd_str@i^0,w,c
  8886  007BE2  2404               	addwf	lcd_str@str^0,w,c
  8887  007BE4  6ED9               	movwf	fsr2l,c
  8888  007BE6  0E00               	movlw	0
  8889  007BE8  2005               	addwfc	(lcd_str@str+1)^0,w,c
  8890  007BEA  6EDA               	movwf	fsr2h,c
  8891  007BEC  50DF               	movf	indf2,w,c
  8892  007BEE  A4D8               	btfss	status,2,c
  8893  007BF0  EFFC  F03D         	goto	u5341
  8894  007BF4  EFFF  F03D         	goto	u5340
  8895  007BF8                     u5341:
  8896  007BF8  FFFF               	dw	65535	; assembler added errata NOP
  8897  007BFA  EFE4  F03D         	goto	l4417
  8898  007BFE                     u5340:
  8899  007BFE  FFFF               	dw	65535	; assembler added errata NOP
  8900  007C00  0012               	return		;funcret
  8901  007C02  FFFF               	dw	65535	; errata NOP
  8902  007C04                     __end_of_lcd_str:
  8903                           	callstack 0
  8904                           
  8905 ;; *************** function _lcd_dat *****************
  8906 ;; Defined at:
  8907 ;;		line 21 in file "lcd.c"
  8908 ;; Parameters:    Size  Location     Type
  8909 ;;  val             1    wreg     unsigned char 
  8910 ;; Auto vars:     Size  Location     Type
  8911 ;;  val             1    2[COMRAM] unsigned char 
  8912 ;; Return value:  Size  Location     Type
  8913 ;;                  1    wreg      void 
  8914 ;; Registers used:
  8915 ;;		wreg, status,2, cstack
  8916 ;; Tracked objects:
  8917 ;;		On entry : 0/0
  8918 ;;		On exit  : 0/0
  8919 ;;		Unchanged: 0/0
  8920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8921 ;;      Params:         0       0       0       0       0       0       0
  8922 ;;      Locals:         1       0       0       0       0       0       0
  8923 ;;      Temps:          1       0       0       0       0       0       0
  8924 ;;      Totals:         2       0       0       0       0       0       0
  8925 ;;Total ram usage:        2 bytes
  8926 ;; Hardware stack levels used:    1
  8927 ;; Hardware stack levels required when called:    2
  8928 ;; This function calls:
  8929 ;;		_lcd_wr
  8930 ;; This function is called by:
  8931 ;;		_lcd_str
  8932 ;; This function uses a non-reentrant model
  8933 ;;
  8934                           
  8935                           	psect	text34
  8936  0079F8                     __ptext34:
  8937                           	callstack 0
  8938  0079F8                     _lcd_dat:
  8939                           	callstack 0
  8940  0079F8  FFFF               	dw	65535	; assembler added errata NOP
  8941                           
  8942                           ;incstack = 0
  8943                           ;lcd_dat@val stored from wreg
  8944  0079FA  6E03               	movwf	lcd_dat@val^0,c
  8945  0079FC                     
  8946                           ;lcd.c: 21: void lcd_dat(unsigned char val);lcd.c: 22: {;lcd.c: 23:  PORTEbits.RE1=1;
  8947  0079FC  8284               	bsf	132,1,c	;volatile
  8948  0079FE                     
  8949                           ;lcd.c: 24:     lcd_wr(val);
  8950  0079FE  5003               	movf	lcd_dat@val^0,w,c
  8951  007A00  ECFA  F002         	call	_lcd_wr
  8952  007A04                     
  8953                           ;lcd.c: 25:     PORTEbits.RE2=1;
  8954  007A04  8484               	bsf	132,2,c	;volatile
  8955  007A06                     
  8956                           ;lcd.c: 26:     _delay((unsigned long)((30)*(4000000/4000.0)));
  8957  007A06  0E1E               	movlw	30
  8958  007A08  6E02               	movwf	??_lcd_dat^0,c
  8959  007A0A  0E3C               	movlw	60
  8960  007A0C                     u5507:
  8961  007A0C  FFFF               	dw	65535	; errata NOP
  8962  007A0E  2EE8               	decfsz	wreg,f,c
  8963  007A10  D7FD               	bra	u5507
  8964  007A12  2E02               	decfsz	??_lcd_dat^0,f,c
  8965  007A14  D7FB               	bra	u5507
  8966  007A16  D000               	nop2	
  8967  007A18                     
  8968                           ;lcd.c: 27:     PORTEbits.RE1=0;
  8969  007A18  9284               	bcf	132,1,c	;volatile
  8970  007A1A                     
  8971                           ;lcd.c: 28:     _delay((unsigned long)((30)*(4000000/4000.0)));
  8972  007A1A  0E1E               	movlw	30
  8973  007A1C  6E02               	movwf	??_lcd_dat^0,c
  8974  007A1E  0E3C               	movlw	60
  8975  007A20                     u5517:
  8976  007A20  FFFF               	dw	65535	; errata NOP
  8977  007A22  2EE8               	decfsz	wreg,f,c
  8978  007A24  D7FD               	bra	u5517
  8979  007A26  2E02               	decfsz	??_lcd_dat^0,f,c
  8980  007A28  D7FB               	bra	u5517
  8981  007A2A  D000               	nop2	
  8982  007A2C                     
  8983                           ;lcd.c: 29:  PORTEbits.RE1=1;
  8984  007A2C  8284               	bsf	132,1,c	;volatile
  8985  007A2E  0012               	return		;funcret
  8986  007A30  FFFF               	dw	65535	; errata NOP
  8987  007A32                     __end_of_lcd_dat:
  8988                           	callstack 0
  8989                           
  8990 ;; *************** function _lcd_init *****************
  8991 ;; Defined at:
  8992 ;;		line 32 in file "lcd.c"
  8993 ;; Parameters:    Size  Location     Type
  8994 ;;		None
  8995 ;; Auto vars:     Size  Location     Type
  8996 ;;		None
  8997 ;; Return value:  Size  Location     Type
  8998 ;;                  1    wreg      void 
  8999 ;; Registers used:
  9000 ;;		wreg, status,2, cstack
  9001 ;; Tracked objects:
  9002 ;;		On entry : 0/0
  9003 ;;		On exit  : 0/0
  9004 ;;		Unchanged: 0/0
  9005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9006 ;;      Params:         0       0       0       0       0       0       0
  9007 ;;      Locals:         0       0       0       0       0       0       0
  9008 ;;      Temps:          1       0       0       0       0       0       0
  9009 ;;      Totals:         1       0       0       0       0       0       0
  9010 ;;Total ram usage:        1 bytes
  9011 ;; Hardware stack levels used:    1
  9012 ;; Hardware stack levels required when called:    3
  9013 ;; This function calls:
  9014 ;;		_lcd_cmd
  9015 ;; This function is called by:
  9016 ;;		_main
  9017 ;; This function uses a non-reentrant model
  9018 ;;
  9019                           
  9020                           	psect	text35
  9021  000576                     __ptext35:
  9022                           	callstack 0
  9023  000576                     _lcd_init:
  9024                           	callstack 0
  9025  000576  FFFF               	dw	65535	; assembler added errata NOP
  9026  000578  6A83               	clrf	3971,c	;# 
  9027  00057A  0E00               	movlw	0	;# 
  9028  00057C  6E95               	movwf	3989,c	;# 
  9029  00057E  6A84               	clrf	3972,c	;# 
  9030  000580  0E00               	movlw	0	;# 
  9031  000582  6E96               	movwf	3990,c	;# 
  9032                           
  9033                           ;lcd.c: 45:  PORTEbits.RE1=0;
  9034  000584  9284               	bcf	132,1,c	;volatile
  9035                           
  9036                           ;lcd.c: 46:  PORTEbits.RE2=0;
  9037  000586  9484               	bcf	132,2,c	;volatile
  9038  000588                     
  9039                           ;lcd.c: 47:  _delay((unsigned long)((30)*(4000000/4000.0)));
  9040  000588  0E1E               	movlw	30
  9041  00058A  6E04               	movwf	??_lcd_init^0,c
  9042  00058C  0E3C               	movlw	60
  9043  00058E                     u5527:
  9044  00058E  FFFF               	dw	65535	; errata NOP
  9045  000590  2EE8               	decfsz	wreg,f,c
  9046  000592  D7FD               	bra	u5527
  9047  000594  2E04               	decfsz	??_lcd_init^0,f,c
  9048  000596  D7FB               	bra	u5527
  9049  000598  D000               	nop2	
  9050  00059A                     
  9051                           ;lcd.c: 48:  PORTEbits.RE1=1;
  9052  00059A  8284               	bsf	132,1,c	;volatile
  9053  00059C                     
  9054                           ;lcd.c: 50:  lcd_cmd(0x38);
  9055  00059C  0E38               	movlw	56
  9056  00059E  ECDF  F03C         	call	_lcd_cmd
  9057  0005A2                     
  9058                           ;lcd.c: 51:  _delay((unsigned long)((30)*(4000000/4000.0)));
  9059  0005A2  0E1E               	movlw	30
  9060  0005A4  6E04               	movwf	??_lcd_init^0,c
  9061  0005A6  0E3C               	movlw	60
  9062  0005A8                     u5537:
  9063  0005A8  FFFF               	dw	65535	; errata NOP
  9064  0005AA  2EE8               	decfsz	wreg,f,c
  9065  0005AC  D7FD               	bra	u5537
  9066  0005AE  2E04               	decfsz	??_lcd_init^0,f,c
  9067  0005B0  D7FB               	bra	u5537
  9068  0005B2  D000               	nop2	
  9069                           
  9070                           ;lcd.c: 52:  lcd_cmd(0x38);
  9071  0005B4  0E38               	movlw	56
  9072  0005B6  ECDF  F03C         	call	_lcd_cmd
  9073  0005BA                     
  9074                           ;lcd.c: 53:     _delay((unsigned long)((30)*(4000000/4000.0)));
  9075  0005BA  0E1E               	movlw	30
  9076  0005BC  6E04               	movwf	??_lcd_init^0,c
  9077  0005BE  0E3C               	movlw	60
  9078  0005C0                     u5547:
  9079  0005C0  FFFF               	dw	65535	; errata NOP
  9080  0005C2  2EE8               	decfsz	wreg,f,c
  9081  0005C4  D7FD               	bra	u5547
  9082  0005C6  2E04               	decfsz	??_lcd_init^0,f,c
  9083  0005C8  D7FB               	bra	u5547
  9084  0005CA  D000               	nop2	
  9085  0005CC                     
  9086                           ;lcd.c: 54:  lcd_cmd(0x38);
  9087  0005CC  0E38               	movlw	56
  9088  0005CE  ECDF  F03C         	call	_lcd_cmd
  9089  0005D2                     
  9090                           ;lcd.c: 55:  lcd_cmd(0x08);
  9091  0005D2  0E08               	movlw	8
  9092  0005D4  ECDF  F03C         	call	_lcd_cmd
  9093  0005D8                     
  9094                           ;lcd.c: 56:  lcd_cmd(0x0F);
  9095  0005D8  0E0F               	movlw	15
  9096  0005DA  ECDF  F03C         	call	_lcd_cmd
  9097  0005DE                     
  9098                           ;lcd.c: 57:  lcd_cmd(0x01);
  9099  0005DE  0E01               	movlw	1
  9100  0005E0  ECDF  F03C         	call	_lcd_cmd
  9101  0005E4                     
  9102                           ;lcd.c: 58:  lcd_cmd(0x38);
  9103  0005E4  0E38               	movlw	56
  9104  0005E6  ECDF  F03C         	call	_lcd_cmd
  9105  0005EA                     
  9106                           ;lcd.c: 59:     lcd_cmd(0x80);
  9107  0005EA  0E80               	movlw	128
  9108  0005EC  ECDF  F03C         	call	_lcd_cmd
  9109  0005F0  0012               	return		;funcret
  9110  0005F2  FFFF               	dw	65535	; errata NOP
  9111  0005F4                     __end_of_lcd_init:
  9112                           	callstack 0
  9113                           
  9114 ;; *************** function _lcd_cmd *****************
  9115 ;; Defined at:
  9116 ;;		line 10 in file "lcd.c"
  9117 ;; Parameters:    Size  Location     Type
  9118 ;;  val             1    wreg     unsigned char 
  9119 ;; Auto vars:     Size  Location     Type
  9120 ;;  val             1    2[COMRAM] unsigned char 
  9121 ;; Return value:  Size  Location     Type
  9122 ;;                  1    wreg      void 
  9123 ;; Registers used:
  9124 ;;		wreg, status,2, cstack
  9125 ;; Tracked objects:
  9126 ;;		On entry : 0/0
  9127 ;;		On exit  : 0/0
  9128 ;;		Unchanged: 0/0
  9129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9130 ;;      Params:         0       0       0       0       0       0       0
  9131 ;;      Locals:         1       0       0       0       0       0       0
  9132 ;;      Temps:          1       0       0       0       0       0       0
  9133 ;;      Totals:         2       0       0       0       0       0       0
  9134 ;;Total ram usage:        2 bytes
  9135 ;; Hardware stack levels used:    1
  9136 ;; Hardware stack levels required when called:    2
  9137 ;; This function calls:
  9138 ;;		_lcd_wr
  9139 ;; This function is called by:
  9140 ;;		_main
  9141 ;;		_lcd_init
  9142 ;; This function uses a non-reentrant model
  9143 ;;
  9144                           
  9145                           	psect	text36
  9146  0079BE                     __ptext36:
  9147                           	callstack 0
  9148  0079BE                     _lcd_cmd:
  9149                           	callstack 0
  9150  0079BE  FFFF               	dw	65535	; assembler added errata NOP
  9151                           
  9152                           ;incstack = 0
  9153                           ;lcd_cmd@val stored from wreg
  9154  0079C0  6E03               	movwf	lcd_cmd@val^0,c
  9155  0079C2                     
  9156                           ;lcd.c: 10: void lcd_cmd(unsigned char val);lcd.c: 11: {;lcd.c: 12:  PORTEbits.RE1=1;
  9157  0079C2  8284               	bsf	132,1,c	;volatile
  9158  0079C4                     
  9159                           ;lcd.c: 13:     lcd_wr(val);
  9160  0079C4  5003               	movf	lcd_cmd@val^0,w,c
  9161  0079C6  ECFA  F002         	call	_lcd_wr
  9162  0079CA                     
  9163                           ;lcd.c: 14:     PORTEbits.RE2=0;
  9164  0079CA  9484               	bcf	132,2,c	;volatile
  9165  0079CC                     
  9166                           ;lcd.c: 15:     _delay((unsigned long)((30)*(4000000/4000.0)));
  9167  0079CC  0E1E               	movlw	30
  9168  0079CE  6E02               	movwf	??_lcd_cmd^0,c
  9169  0079D0  0E3C               	movlw	60
  9170  0079D2                     u5557:
  9171  0079D2  FFFF               	dw	65535	; errata NOP
  9172  0079D4  2EE8               	decfsz	wreg,f,c
  9173  0079D6  D7FD               	bra	u5557
  9174  0079D8  2E02               	decfsz	??_lcd_cmd^0,f,c
  9175  0079DA  D7FB               	bra	u5557
  9176  0079DC  D000               	nop2	
  9177  0079DE                     
  9178                           ;lcd.c: 16:     PORTEbits.RE1=0;
  9179  0079DE  9284               	bcf	132,1,c	;volatile
  9180  0079E0                     
  9181                           ;lcd.c: 17:     _delay((unsigned long)((30)*(4000000/4000.0)));
  9182  0079E0  0E1E               	movlw	30
  9183  0079E2  6E02               	movwf	??_lcd_cmd^0,c
  9184  0079E4  0E3C               	movlw	60
  9185  0079E6                     u5567:
  9186  0079E6  FFFF               	dw	65535	; errata NOP
  9187  0079E8  2EE8               	decfsz	wreg,f,c
  9188  0079EA  D7FD               	bra	u5567
  9189  0079EC  2E02               	decfsz	??_lcd_cmd^0,f,c
  9190  0079EE  D7FB               	bra	u5567
  9191  0079F0  D000               	nop2	
  9192  0079F2                     
  9193                           ;lcd.c: 18:  PORTEbits.RE1=1;
  9194  0079F2  8284               	bsf	132,1,c	;volatile
  9195  0079F4  0012               	return		;funcret
  9196  0079F6  FFFF               	dw	65535	; errata NOP
  9197  0079F8                     __end_of_lcd_cmd:
  9198                           	callstack 0
  9199                           
  9200 ;; *************** function _lcd_wr *****************
  9201 ;; Defined at:
  9202 ;;		line 5 in file "lcd.c"
  9203 ;; Parameters:    Size  Location     Type
  9204 ;;  val             1    wreg     unsigned char 
  9205 ;; Auto vars:     Size  Location     Type
  9206 ;;  val             1    0[COMRAM] unsigned char 
  9207 ;; Return value:  Size  Location     Type
  9208 ;;                  1    wreg      void 
  9209 ;; Registers used:
  9210 ;;		wreg
  9211 ;; Tracked objects:
  9212 ;;		On entry : 0/0
  9213 ;;		On exit  : 0/0
  9214 ;;		Unchanged: 0/0
  9215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9216 ;;      Params:         0       0       0       0       0       0       0
  9217 ;;      Locals:         1       0       0       0       0       0       0
  9218 ;;      Temps:          0       0       0       0       0       0       0
  9219 ;;      Totals:         1       0       0       0       0       0       0
  9220 ;;Total ram usage:        1 bytes
  9221 ;; Hardware stack levels used:    1
  9222 ;; Hardware stack levels required when called:    1
  9223 ;; This function calls:
  9224 ;;		Nothing
  9225 ;; This function is called by:
  9226 ;;		_lcd_cmd
  9227 ;;		_lcd_dat
  9228 ;; This function uses a non-reentrant model
  9229 ;;
  9230                           
  9231                           	psect	text37
  9232  0005F4                     __ptext37:
  9233                           	callstack 0
  9234  0005F4                     _lcd_wr:
  9235                           	callstack 0
  9236  0005F4  FFFF               	dw	65535	; assembler added errata NOP
  9237                           
  9238                           ;incstack = 0
  9239                           ;lcd_wr@val stored from wreg
  9240  0005F6  6E01               	movwf	lcd_wr@val^0,c
  9241  0005F8                     
  9242                           ;lcd.c: 5: void lcd_wr(unsigned char val);lcd.c: 6: {;lcd.c: 7:     PORTD=val;
  9243  0005F8  C001  FF83         	movff	lcd_wr@val,3971	;volatile
  9244  0005FC  0012               	return		;funcret
  9245  0005FE  FFFF               	dw	65535	; errata NOP
  9246  000600                     __end_of_lcd_wr:
  9247                           	callstack 0
  9248                           
  9249 ;; *************** function _init_timer_0 *****************
  9250 ;; Defined at:
  9251 ;;		line 5 in file "timer.c"
  9252 ;; Parameters:    Size  Location     Type
  9253 ;;		None
  9254 ;; Auto vars:     Size  Location     Type
  9255 ;;		None
  9256 ;; Return value:  Size  Location     Type
  9257 ;;                  1    wreg      void 
  9258 ;; Registers used:
  9259 ;;		wreg, status,2
  9260 ;; Tracked objects:
  9261 ;;		On entry : 0/0
  9262 ;;		On exit  : 0/0
  9263 ;;		Unchanged: 0/0
  9264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9265 ;;      Params:         0       0       0       0       0       0       0
  9266 ;;      Locals:         0       0       0       0       0       0       0
  9267 ;;      Temps:          0       0       0       0       0       0       0
  9268 ;;      Totals:         0       0       0       0       0       0       0
  9269 ;;Total ram usage:        0 bytes
  9270 ;; Hardware stack levels used:    1
  9271 ;; Hardware stack levels required when called:    1
  9272 ;; This function calls:
  9273 ;;		Nothing
  9274 ;; This function is called by:
  9275 ;;		_main
  9276 ;; This function uses a non-reentrant model
  9277 ;;
  9278                           
  9279                           	psect	text38
  9280  00793E                     __ptext38:
  9281                           	callstack 0
  9282  00793E                     _init_timer_0:
  9283                           	callstack 0
  9284  00793E  FFFF               	dw	65535	; assembler added errata NOP
  9285  007940                     
  9286                           ;timer.c: 7:     T0CON = 0;
  9287  007940  0E00               	movlw	0
  9288  007942  6ED5               	movwf	213,c	;volatile
  9289                           
  9290                           ;timer.c: 9:     TMR0L = 0x96;
  9291  007944  0E96               	movlw	150
  9292  007946  6ED6               	movwf	214,c	;volatile
  9293                           
  9294                           ;timer.c: 10:     TMR0H = 0x98;
  9295  007948  0E98               	movlw	152
  9296  00794A  6ED7               	movwf	215,c	;volatile
  9297  00794C                     
  9298                           ;timer.c: 11:     INTCONbits.TMR0IE = 1;
  9299  00794C  8AF2               	bsf	242,5,c	;volatile
  9300  00794E                     
  9301                           ;timer.c: 12:     T0CONbits.T08BIT = 0;
  9302  00794E  9CD5               	bcf	213,6,c	;volatile
  9303  007950                     
  9304                           ;timer.c: 13:     T0CONbits.T0CS = 0;
  9305  007950  9AD5               	bcf	213,5,c	;volatile
  9306  007952                     
  9307                           ;timer.c: 14:     T0CONbits.PSA = 0;
  9308  007952  96D5               	bcf	213,3,c	;volatile
  9309  007954                     
  9310                           ;timer.c: 15:     T0CONbits.T0PS0 = 1;
  9311  007954  80D5               	bsf	213,0,c	;volatile
  9312  007956                     
  9313                           ;timer.c: 16:     T0CONbits.T0PS1 = 1;
  9314  007956  82D5               	bsf	213,1,c	;volatile
  9315  007958                     
  9316                           ;timer.c: 17:     T0CONbits.T0PS2 = 1;
  9317  007958  84D5               	bsf	213,2,c	;volatile
  9318  00795A                     
  9319                           ;timer.c: 18:     T0CONbits.TMR0ON = 1;
  9320  00795A  8ED5               	bsf	213,7,c	;volatile
  9321  00795C  0012               	return		;funcret
  9322  00795E  FFFF               	dw	65535	; errata NOP
  9323  007960                     __end_of_init_timer_0:
  9324                           	callstack 0
  9325                           
  9326 ;; *************** function _init_interrupts *****************
  9327 ;; Defined at:
  9328 ;;		line 76 in file "init_PIC.c"
  9329 ;; Parameters:    Size  Location     Type
  9330 ;;		None
  9331 ;; Auto vars:     Size  Location     Type
  9332 ;;		None
  9333 ;; Return value:  Size  Location     Type
  9334 ;;                  1    wreg      void 
  9335 ;; Registers used:
  9336 ;;		None
  9337 ;; Tracked objects:
  9338 ;;		On entry : 0/0
  9339 ;;		On exit  : 0/0
  9340 ;;		Unchanged: 0/0
  9341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9342 ;;      Params:         0       0       0       0       0       0       0
  9343 ;;      Locals:         0       0       0       0       0       0       0
  9344 ;;      Temps:          0       0       0       0       0       0       0
  9345 ;;      Totals:         0       0       0       0       0       0       0
  9346 ;;Total ram usage:        0 bytes
  9347 ;; Hardware stack levels used:    1
  9348 ;; Hardware stack levels required when called:    1
  9349 ;; This function calls:
  9350 ;;		Nothing
  9351 ;; This function is called by:
  9352 ;;		_main
  9353 ;; This function uses a non-reentrant model
  9354 ;;
  9355                           
  9356                           	psect	text39
  9357  0078E4                     __ptext39:
  9358                           	callstack 0
  9359  0078E4                     _init_interrupts:
  9360                           	callstack 0
  9361  0078E4  FFFF               	dw	65535	; assembler added errata NOP
  9362  0078E6                     
  9363                           ;init_PIC.c: 78:     PIR1bits.RCIF = 0;
  9364  0078E6  9A9E               	bcf	158,5,c	;volatile
  9365                           
  9366                           ;init_PIC.c: 79:     PIE1bits.RCIE = 1;
  9367  0078E8  8A9D               	bsf	157,5,c	;volatile
  9368                           
  9369                           ;init_PIC.c: 80:     INTCONbits.PEIE = 1;
  9370  0078EA  8CF2               	bsf	242,6,c	;volatile
  9371  0078EC  0012               	return		;funcret
  9372  0078EE  FFFF               	dw	65535	; errata NOP
  9373  0078F0                     __end_of_init_interrupts:
  9374                           	callstack 0
  9375                           
  9376 ;; *************** function _init_USART *****************
  9377 ;; Defined at:
  9378 ;;		line 13 in file "serial_rs232.c"
  9379 ;; Parameters:    Size  Location     Type
  9380 ;;		None
  9381 ;; Auto vars:     Size  Location     Type
  9382 ;;		None
  9383 ;; Return value:  Size  Location     Type
  9384 ;;                  1    wreg      void 
  9385 ;; Registers used:
  9386 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9387 ;; Tracked objects:
  9388 ;;		On entry : 0/0
  9389 ;;		On exit  : 0/0
  9390 ;;		Unchanged: 0/0
  9391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9392 ;;      Params:         0       0       0       0       0       0       0
  9393 ;;      Locals:         0       0       0       0       0       0       0
  9394 ;;      Temps:          0       0       0       0       0       0       0
  9395 ;;      Totals:         0       0       0       0       0       0       0
  9396 ;;Total ram usage:        0 bytes
  9397 ;; Hardware stack levels used:    1
  9398 ;; Hardware stack levels required when called:    4
  9399 ;; This function calls:
  9400 ;;		___fltol
  9401 ;;		_roundf
  9402 ;; This function is called by:
  9403 ;;		_main
  9404 ;; This function uses a non-reentrant model
  9405 ;;
  9406                           
  9407                           	psect	text40
  9408  007A32                     __ptext40:
  9409                           	callstack 0
  9410  007A32                     _init_USART:
  9411                           	callstack 0
  9412  007A32  FFFF               	dw	65535	; assembler added errata NOP
  9413  007A34                     
  9414                           ;serial_rs232.c: 24:     SPBRG = roundf(((fosc / desired_baudrate) / 16) - 1);
  9415  007A34  0E55               	movlw	85
  9416  007A36  6E1A               	movwf	roundf@x^0,c
  9417  007A38  0E55               	movlw	85
  9418  007A3A  6E1B               	movwf	(roundf@x+1)^0,c
  9419  007A3C  0EC8               	movlw	200
  9420  007A3E  6E1C               	movwf	(roundf@x+2)^0,c
  9421  007A40  0E41               	movlw	65
  9422  007A42  6E1D               	movwf	(roundf@x+3)^0,c
  9423  007A44  EC5F  F012         	call	_roundf	;wreg free
  9424  007A48  C01A  F034         	movff	?_roundf,___fltol@f1
  9425  007A4C  C01B  F035         	movff	?_roundf+1,___fltol@f1+1
  9426  007A50  C01C  F036         	movff	?_roundf+2,___fltol@f1+2
  9427  007A54  C01D  F037         	movff	?_roundf+3,___fltol@f1+3
  9428  007A58  ECA1  F01E         	call	___fltol	;wreg free
  9429  007A5C  5034               	movf	?___fltol^0,w,c
  9430  007A5E  6EAF               	movwf	175,c	;volatile
  9431  007A60                     
  9432                           ;serial_rs232.c: 28:     TXSTAbits.TX9 = 0;
  9433  007A60  9CAC               	bcf	172,6,c	;volatile
  9434  007A62                     
  9435                           ;serial_rs232.c: 29:     TXSTAbits.TXEN = 1;
  9436  007A62  8AAC               	bsf	172,5,c	;volatile
  9437  007A64                     
  9438                           ;serial_rs232.c: 30:     TXSTAbits.SYNC =0;
  9439  007A64  98AC               	bcf	172,4,c	;volatile
  9440  007A66                     
  9441                           ;serial_rs232.c: 31:     TXSTAbits.BRGH = 1;
  9442  007A66  84AC               	bsf	172,2,c	;volatile
  9443  007A68                     
  9444                           ;serial_rs232.c: 33:     RCSTAbits.SPEN = 1;
  9445  007A68  8EAB               	bsf	171,7,c	;volatile
  9446  007A6A                     
  9447                           ;serial_rs232.c: 34:     RCSTAbits.RX9 = 0;
  9448  007A6A  9CAB               	bcf	171,6,c	;volatile
  9449  007A6C                     
  9450                           ;serial_rs232.c: 35:     RCSTAbits.CREN = 1;
  9451  007A6C  88AB               	bsf	171,4,c	;volatile
  9452  007A6E  0012               	return		;funcret
  9453  007A70  FFFF               	dw	65535	; errata NOP
  9454  007A72                     __end_of_init_USART:
  9455                           	callstack 0
  9456                           
  9457 ;; *************** function _roundf *****************
  9458 ;; Defined at:
  9459 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\roundf.c"
  9460 ;; Parameters:    Size  Location     Type
  9461 ;;  x               4   25[COMRAM] float 
  9462 ;; Auto vars:     Size  Location     Type
  9463 ;;  y               4   47[COMRAM] float 
  9464 ;;  u               4   43[COMRAM] struct .
  9465 ;;  e               2   37[COMRAM] int 
  9466 ;; Return value:  Size  Location     Type
  9467 ;;                  4   25[COMRAM] float 
  9468 ;; Registers used:
  9469 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9470 ;; Tracked objects:
  9471 ;;		On entry : 0/0
  9472 ;;		On exit  : 0/0
  9473 ;;		Unchanged: 0/0
  9474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9475 ;;      Params:         4       0       0       0       0       0       0
  9476 ;;      Locals:        18       0       0       0       0       0       0
  9477 ;;      Temps:          4       0       0       0       0       0       0
  9478 ;;      Totals:        26       0       0       0       0       0       0
  9479 ;;Total ram usage:       26 bytes
  9480 ;; Hardware stack levels used:    1
  9481 ;; Hardware stack levels required when called:    3
  9482 ;; This function calls:
  9483 ;;		___fladd
  9484 ;;		___flge
  9485 ;;		___flmul
  9486 ;;		___flneg
  9487 ;;		___flsub
  9488 ;; This function is called by:
  9489 ;;		_init_USART
  9490 ;; This function uses a non-reentrant model
  9491 ;;
  9492                           
  9493                           	psect	text41
  9494  0024BE                     __ptext41:
  9495                           	callstack 0
  9496  0024BE                     _roundf:
  9497                           	callstack 0
  9498  0024BE  FFFF               	dw	65535	; assembler added errata NOP
  9499  0024C0  C080  F02C         	movff	roundf@F525,roundf@u
  9500  0024C4  C081  F02D         	movff	roundf@F525+1,roundf@u+1
  9501  0024C8  C082  F02E         	movff	roundf@F525+2,roundf@u+2
  9502  0024CC  C083  F02F         	movff	roundf@F525+3,roundf@u+3
  9503  0024D0  C01A  F02C         	movff	roundf@x,roundf@u
  9504  0024D4  C01B  F02D         	movff	roundf@x+1,roundf@u+1
  9505  0024D8  C01C  F02E         	movff	roundf@x+2,roundf@u+2
  9506  0024DC  C01D  F02F         	movff	roundf@x+3,roundf@u+3
  9507  0024E0  C02C  F01E         	movff	roundf@u,??_roundf
  9508  0024E4  C02D  F01F         	movff	roundf@u+1,??_roundf+1
  9509  0024E8  C02E  F020         	movff	roundf@u+2,??_roundf+2
  9510  0024EC  C02F  F021         	movff	roundf@u+3,??_roundf+3
  9511  0024F0  0E18               	movlw	24
  9512  0024F2  EF81  F012         	goto	u5060
  9513  0024F6                     u5065:
  9514  0024F6  FFFF               	dw	65535	; assembler added errata NOP
  9515  0024F8  90D8               	bcf	status,0,c
  9516  0024FA  3221               	rrcf	(??_roundf+3)^0,f,c
  9517  0024FC  3220               	rrcf	(??_roundf+2)^0,f,c
  9518  0024FE  321F               	rrcf	(??_roundf+1)^0,f,c
  9519  002500  321E               	rrcf	??_roundf^0,f,c
  9520  002502                     u5060:
  9521  002502  FFFF               	dw	65535	; assembler added errata NOP
  9522  002504  2EE8               	decfsz	wreg,f,c
  9523  002506  EF7B  F012         	goto	u5065
  9524  00250A  501E               	movf	??_roundf^0,w,c
  9525  00250C  6E26               	movwf	roundf@e^0,c
  9526  00250E  6A27               	clrf	(roundf@e+1)^0,c
  9527  002510  BE27               	btfsc	(roundf@e+1)^0,7,c
  9528  002512  EF94  F012         	goto	u5071
  9529  002516  5027               	movf	(roundf@e+1)^0,w,c
  9530  002518  E10A               	bnz	u5070
  9531  00251A  0E96               	movlw	150
  9532  00251C  5C26               	subwf	roundf@e^0,w,c
  9533  00251E  A0D8               	btfss	status,0,c
  9534  002520  EF94  F012         	goto	u5071
  9535  002524  EF97  F012         	goto	u5070
  9536  002528                     u5071:
  9537  002528  FFFF               	dw	65535	; assembler added errata NOP
  9538  00252A  EFA2  F012         	goto	l4175
  9539  00252E                     u5070:
  9540  00252E  FFFF               	dw	65535	; assembler added errata NOP
  9541  002530  C01A  F01A         	movff	roundf@x,?_roundf
  9542  002534  C01B  F01B         	movff	roundf@x+1,?_roundf+1
  9543  002538  C01C  F01C         	movff	roundf@x+2,?_roundf+2
  9544  00253C  C01D  F01D         	movff	roundf@x+3,?_roundf+3
  9545  002540  EF4F  F014         	goto	l864
  9546  002544                     l4175:
  9547  002544  FFFF               	dw	65535	; assembler added errata NOP
  9548  002546  C02C  F01E         	movff	roundf@u,??_roundf
  9549  00254A  C02D  F01F         	movff	roundf@u+1,??_roundf+1
  9550  00254E  C02E  F020         	movff	roundf@u+2,??_roundf+2
  9551  002552  C02F  F021         	movff	roundf@u+3,??_roundf+3
  9552  002556  0E20               	movlw	32
  9553  002558  EFB4  F012         	goto	u5080
  9554  00255C                     u5085:
  9555  00255C  FFFF               	dw	65535	; assembler added errata NOP
  9556  00255E  90D8               	bcf	status,0,c
  9557  002560  3221               	rrcf	(??_roundf+3)^0,f,c
  9558  002562  3220               	rrcf	(??_roundf+2)^0,f,c
  9559  002564  321F               	rrcf	(??_roundf+1)^0,f,c
  9560  002566  321E               	rrcf	??_roundf^0,f,c
  9561  002568                     u5080:
  9562  002568  FFFF               	dw	65535	; assembler added errata NOP
  9563  00256A  2EE8               	decfsz	wreg,f,c
  9564  00256C  EFAE  F012         	goto	u5085
  9565  002570  501E               	movf	??_roundf^0,w,c
  9566  002572  101F               	iorwf	(??_roundf+1)^0,w,c
  9567  002574  1020               	iorwf	(??_roundf+2)^0,w,c
  9568  002576  1021               	iorwf	(??_roundf+3)^0,w,c
  9569  002578  B4D8               	btfsc	status,2,c
  9570  00257A  EFC1  F012         	goto	u5091
  9571  00257E  EFC4  F012         	goto	u5090
  9572  002582                     u5091:
  9573  002582  FFFF               	dw	65535	; assembler added errata NOP
  9574  002584  EFD7  F012         	goto	l4179
  9575  002588                     u5090:
  9576  002588  FFFF               	dw	65535	; assembler added errata NOP
  9577  00258A  C01A  F001         	movff	roundf@x,___flneg@f1
  9578  00258E  C01B  F002         	movff	roundf@x+1,___flneg@f1+1
  9579  002592  C01C  F003         	movff	roundf@x+2,___flneg@f1+2
  9580  002596  C01D  F004         	movff	roundf@x+3,___flneg@f1+3
  9581  00259A  EC39  F03D         	call	___flneg	;wreg free
  9582  00259E  C001  F01A         	movff	?___flneg,roundf@x
  9583  0025A2  C002  F01B         	movff	?___flneg+1,roundf@x+1
  9584  0025A6  C003  F01C         	movff	?___flneg+2,roundf@x+2
  9585  0025AA  C004  F01D         	movff	?___flneg+3,roundf@x+3
  9586  0025AE                     l4179:
  9587  0025AE  FFFF               	dw	65535	; assembler added errata NOP
  9588  0025B0  BE27               	btfsc	(roundf@e+1)^0,7,c
  9589  0025B2  EFE7  F012         	goto	u5100
  9590  0025B6  5027               	movf	(roundf@e+1)^0,w,c
  9591  0025B8  E107               	bnz	u5101
  9592  0025BA  0E7E               	movlw	126
  9593  0025BC  5C26               	subwf	roundf@e^0,w,c
  9594  0025BE  B0D8               	btfsc	status,0,c
  9595  0025C0  EFE4  F012         	goto	u5101
  9596  0025C4  EFE7  F012         	goto	u5100
  9597  0025C8                     u5101:
  9598  0025C8  FFFF               	dw	65535	; assembler added errata NOP
  9599  0025CA  EF04  F013         	goto	l4185
  9600  0025CE                     u5100:
  9601  0025CE  FFFF               	dw	65535	; assembler added errata NOP
  9602  0025D0  C02C  F001         	movff	roundf@u,___flmul@b
  9603  0025D4  C02D  F002         	movff	roundf@u+1,___flmul@b+1
  9604  0025D8  C02E  F003         	movff	roundf@u+2,___flmul@b+2
  9605  0025DC  C02F  F004         	movff	roundf@u+3,___flmul@b+3
  9606  0025E0  0E00               	movlw	0
  9607  0025E2  6E05               	movwf	___flmul@a^0,c
  9608  0025E4  0E00               	movlw	0
  9609  0025E6  6E06               	movwf	(___flmul@a+1)^0,c
  9610  0025E8  0E00               	movlw	0
  9611  0025EA  6E07               	movwf	(___flmul@a+2)^0,c
  9612  0025EC  0E00               	movlw	0
  9613  0025EE  6E08               	movwf	(___flmul@a+3)^0,c
  9614  0025F0  EC0D  F010         	call	___flmul	;wreg free
  9615  0025F4  C001  F01A         	movff	?___flmul,?_roundf
  9616  0025F8  C002  F01B         	movff	?___flmul+1,?_roundf+1
  9617  0025FC  C003  F01C         	movff	?___flmul+2,?_roundf+2
  9618  002600  C004  F01D         	movff	?___flmul+3,?_roundf+3
  9619  002604  EF4F  F014         	goto	l864
  9620  002608                     l4185:
  9621  002608  FFFF               	dw	65535	; assembler added errata NOP
  9622  00260A  0E00               	movlw	0
  9623  00260C  6E05               	movwf	___fladd@a^0,c
  9624  00260E  0E00               	movlw	0
  9625  002610  6E06               	movwf	(___fladd@a+1)^0,c
  9626  002612  0E00               	movlw	0
  9627  002614  6E07               	movwf	(___fladd@a+2)^0,c
  9628  002616  0E4B               	movlw	75
  9629  002618  6E08               	movwf	(___fladd@a+3)^0,c
  9630  00261A  C01A  F001         	movff	roundf@x,___fladd@b
  9631  00261E  C01B  F002         	movff	roundf@x+1,___fladd@b+1
  9632  002622  C01C  F003         	movff	roundf@x+2,___fladd@b+2
  9633  002626  C01D  F004         	movff	roundf@x+3,___fladd@b+3
  9634  00262A  EC39  F00D         	call	___fladd	;wreg free
  9635  00262E  C001  F028         	movff	?___fladd,_roundf$1795
  9636  002632  C002  F029         	movff	?___fladd+1,_roundf$1795+1
  9637  002636  C003  F02A         	movff	?___fladd+2,_roundf$1795+2
  9638  00263A  C004  F02B         	movff	?___fladd+3,_roundf$1795+3
  9639  00263E  0E00               	movlw	0
  9640  002640  6E05               	movwf	___fladd@a^0,c
  9641  002642  0E00               	movlw	0
  9642  002644  6E06               	movwf	(___fladd@a+1)^0,c
  9643  002646  0E00               	movlw	0
  9644  002648  6E07               	movwf	(___fladd@a+2)^0,c
  9645  00264A  0ECB               	movlw	203
  9646  00264C  6E08               	movwf	(___fladd@a+3)^0,c
  9647  00264E  C028  F001         	movff	_roundf$1795,___fladd@b
  9648  002652  C029  F002         	movff	_roundf$1795+1,___fladd@b+1
  9649  002656  C02A  F003         	movff	_roundf$1795+2,___fladd@b+2
  9650  00265A  C02B  F004         	movff	_roundf$1795+3,___fladd@b+3
  9651  00265E  EC39  F00D         	call	___fladd	;wreg free
  9652  002662  C001  F022         	movff	?___fladd,_roundf$1796
  9653  002666  C002  F023         	movff	?___fladd+1,_roundf$1796+1
  9654  00266A  C003  F024         	movff	?___fladd+2,_roundf$1796+2
  9655  00266E  C004  F025         	movff	?___fladd+3,_roundf$1796+3
  9656  002672  C022  F011         	movff	_roundf$1796,___flsub@b
  9657  002676  C023  F012         	movff	_roundf$1796+1,___flsub@b+1
  9658  00267A  C024  F013         	movff	_roundf$1796+2,___flsub@b+2
  9659  00267E  C025  F014         	movff	_roundf$1796+3,___flsub@b+3
  9660  002682  C01A  F015         	movff	roundf@x,___flsub@a
  9661  002686  C01B  F016         	movff	roundf@x+1,___flsub@a+1
  9662  00268A  C01C  F017         	movff	roundf@x+2,___flsub@a+2
  9663  00268E  C01D  F018         	movff	roundf@x+3,___flsub@a+3
  9664  002692  EC25  F03E         	call	___flsub	;wreg free
  9665  002696  C011  F030         	movff	?___flsub,roundf@y
  9666  00269A  C012  F031         	movff	?___flsub+1,roundf@y+1
  9667  00269E  C013  F032         	movff	?___flsub+2,roundf@y+2
  9668  0026A2  C014  F033         	movff	?___flsub+3,roundf@y+3
  9669  0026A6  0E00               	movlw	0
  9670  0026A8  6E01               	movwf	___flge@ff1^0,c
  9671  0026AA  0E00               	movlw	0
  9672  0026AC  6E02               	movwf	(___flge@ff1+1)^0,c
  9673  0026AE  0E00               	movlw	0
  9674  0026B0  6E03               	movwf	(___flge@ff1+2)^0,c
  9675  0026B2  0E3F               	movlw	63
  9676  0026B4  6E04               	movwf	(___flge@ff1+3)^0,c
  9677  0026B6  C030  F005         	movff	roundf@y,___flge@ff2
  9678  0026BA  C031  F006         	movff	roundf@y+1,___flge@ff2+1
  9679  0026BE  C032  F007         	movff	roundf@y+2,___flge@ff2+2
  9680  0026C2  C033  F008         	movff	roundf@y+3,___flge@ff2+3
  9681  0026C6  EC3C  F01F         	call	___flge	;wreg free
  9682  0026CA  B0D8               	btfsc	status,0,c
  9683  0026CC  EF6A  F013         	goto	u5111
  9684  0026D0  EF6D  F013         	goto	u5110
  9685  0026D4                     u5111:
  9686  0026D4  FFFF               	dw	65535	; assembler added errata NOP
  9687  0026D6  EFA4  F013         	goto	l4189
  9688  0026DA                     u5110:
  9689  0026DA  FFFF               	dw	65535	; assembler added errata NOP
  9690  0026DC  C01A  F005         	movff	roundf@x,___fladd@a
  9691  0026E0  C01B  F006         	movff	roundf@x+1,___fladd@a+1
  9692  0026E4  C01C  F007         	movff	roundf@x+2,___fladd@a+2
  9693  0026E8  C01D  F008         	movff	roundf@x+3,___fladd@a+3
  9694  0026EC  C030  F001         	movff	roundf@y,___fladd@b
  9695  0026F0  C031  F002         	movff	roundf@y+1,___fladd@b+1
  9696  0026F4  C032  F003         	movff	roundf@y+2,___fladd@b+2
  9697  0026F8  C033  F004         	movff	roundf@y+3,___fladd@b+3
  9698  0026FC  EC39  F00D         	call	___fladd	;wreg free
  9699  002700  C001  F028         	movff	?___fladd,_roundf$1795
  9700  002704  C002  F029         	movff	?___fladd+1,_roundf$1795+1
  9701  002708  C003  F02A         	movff	?___fladd+2,_roundf$1795+2
  9702  00270C  C004  F02B         	movff	?___fladd+3,_roundf$1795+3
  9703  002710  C028  F001         	movff	_roundf$1795,___fladd@b
  9704  002714  C029  F002         	movff	_roundf$1795+1,___fladd@b+1
  9705  002718  C02A  F003         	movff	_roundf$1795+2,___fladd@b+2
  9706  00271C  C02B  F004         	movff	_roundf$1795+3,___fladd@b+3
  9707  002720  0E00               	movlw	0
  9708  002722  6E05               	movwf	___fladd@a^0,c
  9709  002724  0E00               	movlw	0
  9710  002726  6E06               	movwf	(___fladd@a+1)^0,c
  9711  002728  0E80               	movlw	128
  9712  00272A  6E07               	movwf	(___fladd@a+2)^0,c
  9713  00272C  0EBF               	movlw	191
  9714  00272E  6E08               	movwf	(___fladd@a+3)^0,c
  9715  002730  EC39  F00D         	call	___fladd	;wreg free
  9716  002734  C001  F030         	movff	?___fladd,roundf@y
  9717  002738  C002  F031         	movff	?___fladd+1,roundf@y+1
  9718  00273C  C003  F032         	movff	?___fladd+2,roundf@y+2
  9719  002740  C004  F033         	movff	?___fladd+3,roundf@y+3
  9720  002744  EF11  F014         	goto	l4195
  9721  002748                     l4189:
  9722  002748  FFFF               	dw	65535	; assembler added errata NOP
  9723  00274A  0E00               	movlw	0
  9724  00274C  6E01               	movwf	___flge@ff1^0,c
  9725  00274E  0E00               	movlw	0
  9726  002750  6E02               	movwf	(___flge@ff1+1)^0,c
  9727  002752  0E00               	movlw	0
  9728  002754  6E03               	movwf	(___flge@ff1+2)^0,c
  9729  002756  0EBF               	movlw	191
  9730  002758  6E04               	movwf	(___flge@ff1+3)^0,c
  9731  00275A  C030  F005         	movff	roundf@y,___flge@ff2
  9732  00275E  C031  F006         	movff	roundf@y+1,___flge@ff2+1
  9733  002762  C032  F007         	movff	roundf@y+2,___flge@ff2+2
  9734  002766  C033  F008         	movff	roundf@y+3,___flge@ff2+3
  9735  00276A  EC3C  F01F         	call	___flge	;wreg free
  9736  00276E  A0D8               	btfss	status,0,c
  9737  002770  EFBC  F013         	goto	u5121
  9738  002774  EFBF  F013         	goto	u5120
  9739  002778                     u5121:
  9740  002778  FFFF               	dw	65535	; assembler added errata NOP
  9741  00277A  EFF6  F013         	goto	l4193
  9742  00277E                     u5120:
  9743  00277E  FFFF               	dw	65535	; assembler added errata NOP
  9744  002780  C01A  F005         	movff	roundf@x,___fladd@a
  9745  002784  C01B  F006         	movff	roundf@x+1,___fladd@a+1
  9746  002788  C01C  F007         	movff	roundf@x+2,___fladd@a+2
  9747  00278C  C01D  F008         	movff	roundf@x+3,___fladd@a+3
  9748  002790  C030  F001         	movff	roundf@y,___fladd@b
  9749  002794  C031  F002         	movff	roundf@y+1,___fladd@b+1
  9750  002798  C032  F003         	movff	roundf@y+2,___fladd@b+2
  9751  00279C  C033  F004         	movff	roundf@y+3,___fladd@b+3
  9752  0027A0  EC39  F00D         	call	___fladd	;wreg free
  9753  0027A4  C001  F028         	movff	?___fladd,_roundf$1795
  9754  0027A8  C002  F029         	movff	?___fladd+1,_roundf$1795+1
  9755  0027AC  C003  F02A         	movff	?___fladd+2,_roundf$1795+2
  9756  0027B0  C004  F02B         	movff	?___fladd+3,_roundf$1795+3
  9757  0027B4  C028  F001         	movff	_roundf$1795,___fladd@b
  9758  0027B8  C029  F002         	movff	_roundf$1795+1,___fladd@b+1
  9759  0027BC  C02A  F003         	movff	_roundf$1795+2,___fladd@b+2
  9760  0027C0  C02B  F004         	movff	_roundf$1795+3,___fladd@b+3
  9761  0027C4  0E00               	movlw	0
  9762  0027C6  6E05               	movwf	___fladd@a^0,c
  9763  0027C8  0E00               	movlw	0
  9764  0027CA  6E06               	movwf	(___fladd@a+1)^0,c
  9765  0027CC  0E80               	movlw	128
  9766  0027CE  6E07               	movwf	(___fladd@a+2)^0,c
  9767  0027D0  0E3F               	movlw	63
  9768  0027D2  6E08               	movwf	(___fladd@a+3)^0,c
  9769  0027D4  EC39  F00D         	call	___fladd	;wreg free
  9770  0027D8  C001  F030         	movff	?___fladd,roundf@y
  9771  0027DC  C002  F031         	movff	?___fladd+1,roundf@y+1
  9772  0027E0  C003  F032         	movff	?___fladd+2,roundf@y+2
  9773  0027E4  C004  F033         	movff	?___fladd+3,roundf@y+3
  9774  0027E8  EF11  F014         	goto	l4195
  9775  0027EC                     l4193:
  9776  0027EC  FFFF               	dw	65535	; assembler added errata NOP
  9777  0027EE  C030  F001         	movff	roundf@y,___fladd@b
  9778  0027F2  C031  F002         	movff	roundf@y+1,___fladd@b+1
  9779  0027F6  C032  F003         	movff	roundf@y+2,___fladd@b+2
  9780  0027FA  C033  F004         	movff	roundf@y+3,___fladd@b+3
  9781  0027FE  C01A  F005         	movff	roundf@x,___fladd@a
  9782  002802  C01B  F006         	movff	roundf@x+1,___fladd@a+1
  9783  002806  C01C  F007         	movff	roundf@x+2,___fladd@a+2
  9784  00280A  C01D  F008         	movff	roundf@x+3,___fladd@a+3
  9785  00280E  EC39  F00D         	call	___fladd	;wreg free
  9786  002812  C001  F030         	movff	?___fladd,roundf@y
  9787  002816  C002  F031         	movff	?___fladd+1,roundf@y+1
  9788  00281A  C003  F032         	movff	?___fladd+2,roundf@y+2
  9789  00281E  C004  F033         	movff	?___fladd+3,roundf@y+3
  9790  002822                     l4195:
  9791  002822  FFFF               	dw	65535	; assembler added errata NOP
  9792  002824  C02C  F01E         	movff	roundf@u,??_roundf
  9793  002828  C02D  F01F         	movff	roundf@u+1,??_roundf+1
  9794  00282C  C02E  F020         	movff	roundf@u+2,??_roundf+2
  9795  002830  C02F  F021         	movff	roundf@u+3,??_roundf+3
  9796  002834  0E20               	movlw	32
  9797  002836  EF23  F014         	goto	u5130
  9798  00283A                     u5135:
  9799  00283A  FFFF               	dw	65535	; assembler added errata NOP
  9800  00283C  90D8               	bcf	status,0,c
  9801  00283E  3221               	rrcf	(??_roundf+3)^0,f,c
  9802  002840  3220               	rrcf	(??_roundf+2)^0,f,c
  9803  002842  321F               	rrcf	(??_roundf+1)^0,f,c
  9804  002844  321E               	rrcf	??_roundf^0,f,c
  9805  002846                     u5130:
  9806  002846  FFFF               	dw	65535	; assembler added errata NOP
  9807  002848  2EE8               	decfsz	wreg,f,c
  9808  00284A  EF1D  F014         	goto	u5135
  9809  00284E  501E               	movf	??_roundf^0,w,c
  9810  002850  101F               	iorwf	(??_roundf+1)^0,w,c
  9811  002852  1020               	iorwf	(??_roundf+2)^0,w,c
  9812  002854  1021               	iorwf	(??_roundf+3)^0,w,c
  9813  002856  B4D8               	btfsc	status,2,c
  9814  002858  EF30  F014         	goto	u5141
  9815  00285C  EF33  F014         	goto	u5140
  9816  002860                     u5141:
  9817  002860  FFFF               	dw	65535	; assembler added errata NOP
  9818  002862  EF46  F014         	goto	l4199
  9819  002866                     u5140:
  9820  002866  FFFF               	dw	65535	; assembler added errata NOP
  9821  002868  C030  F001         	movff	roundf@y,___flneg@f1
  9822  00286C  C031  F002         	movff	roundf@y+1,___flneg@f1+1
  9823  002870  C032  F003         	movff	roundf@y+2,___flneg@f1+2
  9824  002874  C033  F004         	movff	roundf@y+3,___flneg@f1+3
  9825  002878  EC39  F03D         	call	___flneg	;wreg free
  9826  00287C  C001  F030         	movff	?___flneg,roundf@y
  9827  002880  C002  F031         	movff	?___flneg+1,roundf@y+1
  9828  002884  C003  F032         	movff	?___flneg+2,roundf@y+2
  9829  002888  C004  F033         	movff	?___flneg+3,roundf@y+3
  9830  00288C                     l4199:
  9831  00288C  FFFF               	dw	65535	; assembler added errata NOP
  9832  00288E  C030  F01A         	movff	roundf@y,?_roundf
  9833  002892  C031  F01B         	movff	roundf@y+1,?_roundf+1
  9834  002896  C032  F01C         	movff	roundf@y+2,?_roundf+2
  9835  00289A  C033  F01D         	movff	roundf@y+3,?_roundf+3
  9836  00289E                     l864:
  9837  00289E  FFFF               	dw	65535	; assembler added errata NOP
  9838  0028A0  0012               	return		;funcret
  9839  0028A2  FFFF               	dw	65535	; errata NOP
  9840  0028A4                     __end_of_roundf:
  9841                           	callstack 0
  9842                           
  9843 ;; *************** function ___flsub *****************
  9844 ;; Defined at:
  9845 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  9846 ;; Parameters:    Size  Location     Type
  9847 ;;  b               4   16[COMRAM] float 
  9848 ;;  a               4   20[COMRAM] float 
  9849 ;; Auto vars:     Size  Location     Type
  9850 ;;		None
  9851 ;; Return value:  Size  Location     Type
  9852 ;;                  4   16[COMRAM] float 
  9853 ;; Registers used:
  9854 ;;		wreg, status,2, status,0, cstack
  9855 ;; Tracked objects:
  9856 ;;		On entry : 0/0
  9857 ;;		On exit  : 0/0
  9858 ;;		Unchanged: 0/0
  9859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9860 ;;      Params:         8       0       0       0       0       0       0
  9861 ;;      Locals:         0       0       0       0       0       0       0
  9862 ;;      Temps:          0       0       0       0       0       0       0
  9863 ;;      Totals:         8       0       0       0       0       0       0
  9864 ;;Total ram usage:        8 bytes
  9865 ;; Hardware stack levels used:    1
  9866 ;; Hardware stack levels required when called:    2
  9867 ;; This function calls:
  9868 ;;		___fladd
  9869 ;; This function is called by:
  9870 ;;		_roundf
  9871 ;; This function uses a non-reentrant model
  9872 ;;
  9873                           
  9874                           	psect	text42
  9875  007C4A                     __ptext42:
  9876                           	callstack 0
  9877  007C4A                     ___flsub:
  9878                           	callstack 0
  9879  007C4A  FFFF               	dw	65535	; assembler added errata NOP
  9880  007C4C  0E00               	movlw	0
  9881  007C4E  1A15               	xorwf	___flsub@a^0,f,c
  9882  007C50  0E00               	movlw	0
  9883  007C52  1A16               	xorwf	(___flsub@a+1)^0,f,c
  9884  007C54  0E00               	movlw	0
  9885  007C56  1A17               	xorwf	(___flsub@a+2)^0,f,c
  9886  007C58  0E80               	movlw	128
  9887  007C5A  1A18               	xorwf	(___flsub@a+3)^0,f,c
  9888  007C5C  C011  F001         	movff	___flsub@b,___fladd@b
  9889  007C60  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  9890  007C64  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  9891  007C68  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  9892  007C6C  C015  F005         	movff	___flsub@a,___fladd@a
  9893  007C70  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  9894  007C74  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  9895  007C78  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  9896  007C7C  EC39  F00D         	call	___fladd	;wreg free
  9897  007C80  C001  F011         	movff	?___fladd,?___flsub
  9898  007C84  C002  F012         	movff	?___fladd+1,?___flsub+1
  9899  007C88  C003  F013         	movff	?___fladd+2,?___flsub+2
  9900  007C8C  C004  F014         	movff	?___fladd+3,?___flsub+3
  9901  007C90  0012               	return		;funcret
  9902  007C92  FFFF               	dw	65535	; errata NOP
  9903  007C94                     __end_of___flsub:
  9904                           	callstack 0
  9905                           
  9906 ;; *************** function ___fladd *****************
  9907 ;; Defined at:
  9908 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  9909 ;; Parameters:    Size  Location     Type
  9910 ;;  b               4    0[COMRAM] float 
  9911 ;;  a               4    4[COMRAM] float 
  9912 ;; Auto vars:     Size  Location     Type
  9913 ;;  grs             1   15[COMRAM] unsigned char 
  9914 ;;  bexp            1   14[COMRAM] unsigned char 
  9915 ;;  aexp            1   13[COMRAM] unsigned char 
  9916 ;;  signs           1   12[COMRAM] unsigned char 
  9917 ;; Return value:  Size  Location     Type
  9918 ;;                  4    0[COMRAM] unsigned char 
  9919 ;; Registers used:
  9920 ;;		wreg, status,2, status,0
  9921 ;; Tracked objects:
  9922 ;;		On entry : 0/0
  9923 ;;		On exit  : 0/0
  9924 ;;		Unchanged: 0/0
  9925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9926 ;;      Params:         8       0       0       0       0       0       0
  9927 ;;      Locals:         4       0       0       0       0       0       0
  9928 ;;      Temps:          4       0       0       0       0       0       0
  9929 ;;      Totals:        16       0       0       0       0       0       0
  9930 ;;Total ram usage:       16 bytes
  9931 ;; Hardware stack levels used:    1
  9932 ;; Hardware stack levels required when called:    1
  9933 ;; This function calls:
  9934 ;;		Nothing
  9935 ;; This function is called by:
  9936 ;;		___flsub
  9937 ;;		_roundf
  9938 ;; This function uses a non-reentrant model
  9939 ;;
  9940                           
  9941                           	psect	text43
  9942  001A72                     __ptext43:
  9943                           	callstack 0
  9944  001A72                     ___fladd:
  9945                           	callstack 0
  9946  001A72  FFFF               	dw	65535	; assembler added errata NOP
  9947  001A74  5004               	movf	(___fladd@b+3)^0,w,c
  9948  001A76  0B80               	andlw	128
  9949  001A78  6E0D               	movwf	___fladd@signs^0,c
  9950  001A7A  5004               	movf	(___fladd@b+3)^0,w,c
  9951  001A7C  2404               	addwf	(___fladd@b+3)^0,w,c
  9952  001A7E  6E0F               	movwf	___fladd@bexp^0,c
  9953  001A80  AE03               	btfss	(___fladd@b+2)^0,7,c
  9954  001A82  EF45  F00D         	goto	u3921
  9955  001A86  EF48  F00D         	goto	u3920
  9956  001A8A                     u3921:
  9957  001A8A  FFFF               	dw	65535	; assembler added errata NOP
  9958  001A8C  EF4A  F00D         	goto	l3465
  9959  001A90                     u3920:
  9960  001A90  FFFF               	dw	65535	; assembler added errata NOP
  9961  001A92  800F               	bsf	___fladd@bexp^0,0,c
  9962  001A94                     l3465:
  9963  001A94  FFFF               	dw	65535	; assembler added errata NOP
  9964  001A96  500F               	movf	___fladd@bexp^0,w,c
  9965  001A98  B4D8               	btfsc	status,2,c
  9966  001A9A  EF51  F00D         	goto	u3931
  9967  001A9E  EF54  F00D         	goto	u3930
  9968  001AA2                     u3931:
  9969  001AA2  FFFF               	dw	65535	; assembler added errata NOP
  9970  001AA4  EF6D  F00D         	goto	l3475
  9971  001AA8                     u3930:
  9972  001AA8  FFFF               	dw	65535	; assembler added errata NOP
  9973  001AAA  280F               	incf	___fladd@bexp^0,w,c
  9974  001AAC  A4D8               	btfss	status,2,c
  9975  001AAE  EF5B  F00D         	goto	u3941
  9976  001AB2  EF5E  F00D         	goto	u3940
  9977  001AB6                     u3941:
  9978  001AB6  FFFF               	dw	65535	; assembler added errata NOP
  9979  001AB8  EF67  F00D         	goto	l3471
  9980  001ABC                     u3940:
  9981  001ABC  FFFF               	dw	65535	; assembler added errata NOP
  9982  001ABE  0E00               	movlw	0
  9983  001AC0  6E01               	movwf	___fladd@b^0,c
  9984  001AC2  0E00               	movlw	0
  9985  001AC4  6E02               	movwf	(___fladd@b+1)^0,c
  9986  001AC6  0E00               	movlw	0
  9987  001AC8  6E03               	movwf	(___fladd@b+2)^0,c
  9988  001ACA  0E00               	movlw	0
  9989  001ACC  6E04               	movwf	(___fladd@b+3)^0,c
  9990  001ACE                     l3471:
  9991  001ACE  FFFF               	dw	65535	; assembler added errata NOP
  9992  001AD0  8E03               	bsf	(___fladd@b+2)^0,7,c
  9993  001AD2  0E00               	movlw	0
  9994  001AD4  6E04               	movwf	(___fladd@b+3)^0,c
  9995  001AD6  EF76  F00D         	goto	l3477
  9996  001ADA                     l3475:
  9997  001ADA  FFFF               	dw	65535	; assembler added errata NOP
  9998  001ADC  0E00               	movlw	0
  9999  001ADE  6E01               	movwf	___fladd@b^0,c
 10000  001AE0  0E00               	movlw	0
 10001  001AE2  6E02               	movwf	(___fladd@b+1)^0,c
 10002  001AE4  0E00               	movlw	0
 10003  001AE6  6E03               	movwf	(___fladd@b+2)^0,c
 10004  001AE8  0E00               	movlw	0
 10005  001AEA  6E04               	movwf	(___fladd@b+3)^0,c
 10006  001AEC                     l3477:
 10007  001AEC  FFFF               	dw	65535	; assembler added errata NOP
 10008  001AEE  5008               	movf	(___fladd@a+3)^0,w,c
 10009  001AF0  0B80               	andlw	128
 10010  001AF2  6E0E               	movwf	___fladd@aexp^0,c
 10011  001AF4  500D               	movf	___fladd@signs^0,w,c
 10012  001AF6  180E               	xorwf	___fladd@aexp^0,w,c
 10013  001AF8  B4D8               	btfsc	status,2,c
 10014  001AFA  EF81  F00D         	goto	u3951
 10015  001AFE  EF84  F00D         	goto	u3950
 10016  001B02                     u3951:
 10017  001B02  FFFF               	dw	65535	; assembler added errata NOP
 10018  001B04  EF86  F00D         	goto	l3483
 10019  001B08                     u3950:
 10020  001B08  FFFF               	dw	65535	; assembler added errata NOP
 10021  001B0A  8C0D               	bsf	___fladd@signs^0,6,c
 10022  001B0C                     l3483:
 10023  001B0C  FFFF               	dw	65535	; assembler added errata NOP
 10024  001B0E  5008               	movf	(___fladd@a+3)^0,w,c
 10025  001B10  2408               	addwf	(___fladd@a+3)^0,w,c
 10026  001B12  6E0E               	movwf	___fladd@aexp^0,c
 10027  001B14  AE07               	btfss	(___fladd@a+2)^0,7,c
 10028  001B16  EF8F  F00D         	goto	u3961
 10029  001B1A  EF92  F00D         	goto	u3960
 10030  001B1E                     u3961:
 10031  001B1E  FFFF               	dw	65535	; assembler added errata NOP
 10032  001B20  EF94  F00D         	goto	l3489
 10033  001B24                     u3960:
 10034  001B24  FFFF               	dw	65535	; assembler added errata NOP
 10035  001B26  800E               	bsf	___fladd@aexp^0,0,c
 10036  001B28                     l3489:
 10037  001B28  FFFF               	dw	65535	; assembler added errata NOP
 10038  001B2A  500E               	movf	___fladd@aexp^0,w,c
 10039  001B2C  B4D8               	btfsc	status,2,c
 10040  001B2E  EF9B  F00D         	goto	u3971
 10041  001B32  EF9E  F00D         	goto	u3970
 10042  001B36                     u3971:
 10043  001B36  FFFF               	dw	65535	; assembler added errata NOP
 10044  001B38  EFB7  F00D         	goto	l3499
 10045  001B3C                     u3970:
 10046  001B3C  FFFF               	dw	65535	; assembler added errata NOP
 10047  001B3E  280E               	incf	___fladd@aexp^0,w,c
 10048  001B40  A4D8               	btfss	status,2,c
 10049  001B42  EFA5  F00D         	goto	u3981
 10050  001B46  EFA8  F00D         	goto	u3980
 10051  001B4A                     u3981:
 10052  001B4A  FFFF               	dw	65535	; assembler added errata NOP
 10053  001B4C  EFB1  F00D         	goto	l3495
 10054  001B50                     u3980:
 10055  001B50  FFFF               	dw	65535	; assembler added errata NOP
 10056  001B52  0E00               	movlw	0
 10057  001B54  6E05               	movwf	___fladd@a^0,c
 10058  001B56  0E00               	movlw	0
 10059  001B58  6E06               	movwf	(___fladd@a+1)^0,c
 10060  001B5A  0E00               	movlw	0
 10061  001B5C  6E07               	movwf	(___fladd@a+2)^0,c
 10062  001B5E  0E00               	movlw	0
 10063  001B60  6E08               	movwf	(___fladd@a+3)^0,c
 10064  001B62                     l3495:
 10065  001B62  FFFF               	dw	65535	; assembler added errata NOP
 10066  001B64  8E07               	bsf	(___fladd@a+2)^0,7,c
 10067  001B66  0E00               	movlw	0
 10068  001B68  6E08               	movwf	(___fladd@a+3)^0,c
 10069  001B6A  EFC0  F00D         	goto	l3501
 10070  001B6E                     l3499:
 10071  001B6E  FFFF               	dw	65535	; assembler added errata NOP
 10072  001B70  0E00               	movlw	0
 10073  001B72  6E05               	movwf	___fladd@a^0,c
 10074  001B74  0E00               	movlw	0
 10075  001B76  6E06               	movwf	(___fladd@a+1)^0,c
 10076  001B78  0E00               	movlw	0
 10077  001B7A  6E07               	movwf	(___fladd@a+2)^0,c
 10078  001B7C  0E00               	movlw	0
 10079  001B7E  6E08               	movwf	(___fladd@a+3)^0,c
 10080  001B80                     l3501:
 10081  001B80  FFFF               	dw	65535	; assembler added errata NOP
 10082  001B82  500F               	movf	___fladd@bexp^0,w,c
 10083  001B84  5C0E               	subwf	___fladd@aexp^0,w,c
 10084  001B86  B0D8               	btfsc	status,0,c
 10085  001B88  EFC8  F00D         	goto	u3991
 10086  001B8C  EFCB  F00D         	goto	u3990
 10087  001B90                     u3991:
 10088  001B90  FFFF               	dw	65535	; assembler added errata NOP
 10089  001B92  EFF6  F00D         	goto	l3537
 10090  001B96                     u3990:
 10091  001B96  FFFF               	dw	65535	; assembler added errata NOP
 10092  001B98  AC0D               	btfss	___fladd@signs^0,6,c
 10093  001B9A  EFD1  F00D         	goto	u4001
 10094  001B9E  EFD4  F00D         	goto	u4000
 10095  001BA2                     u4001:
 10096  001BA2  FFFF               	dw	65535	; assembler added errata NOP
 10097  001BA4  EFD7  F00D         	goto	l3507
 10098  001BA8                     u4000:
 10099  001BA8  FFFF               	dw	65535	; assembler added errata NOP
 10100  001BAA  0E80               	movlw	128
 10101  001BAC  1A0D               	xorwf	___fladd@signs^0,f,c
 10102  001BAE                     l3507:
 10103  001BAE  FFFF               	dw	65535	; assembler added errata NOP
 10104  001BB0  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 10105  001BB4  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10106  001BB8  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 10107  001BBC  C001  F010         	movff	___fladd@b,___fladd@grs
 10108  001BC0  C005  F001         	movff	___fladd@a,___fladd@b
 10109  001BC4  C010  F005         	movff	___fladd@grs,___fladd@a
 10110  001BC8  C002  F010         	movff	___fladd@b+1,___fladd@grs
 10111  001BCC  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 10112  001BD0  C010  F006         	movff	___fladd@grs,___fladd@a+1
 10113  001BD4  C003  F010         	movff	___fladd@b+2,___fladd@grs
 10114  001BD8  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 10115  001BDC  C010  F007         	movff	___fladd@grs,___fladd@a+2
 10116  001BE0  C004  F010         	movff	___fladd@b+3,___fladd@grs
 10117  001BE4  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 10118  001BE8  C010  F008         	movff	___fladd@grs,___fladd@a+3
 10119  001BEC                     l3537:
 10120  001BEC  FFFF               	dw	65535	; assembler added errata NOP
 10121  001BEE  0E00               	movlw	0
 10122  001BF0  6E10               	movwf	___fladd@grs^0,c
 10123  001BF2  500F               	movf	___fladd@bexp^0,w,c
 10124  001BF4  C00E  F009         	movff	___fladd@aexp,??___fladd
 10125  001BF8  6A0A               	clrf	(??___fladd+1)^0,c
 10126  001BFA  5E09               	subwf	??___fladd^0,f,c
 10127  001BFC  0E00               	movlw	0
 10128  001BFE  5A0A               	subwfb	(??___fladd+1)^0,f,c
 10129  001C00  BE0A               	btfsc	(??___fladd+1)^0,7,c
 10130  001C02  EF0C  F00E         	goto	u4011
 10131  001C06  500A               	movf	(??___fladd+1)^0,w,c
 10132  001C08  E10A               	bnz	u4010
 10133  001C0A  0E1A               	movlw	26
 10134  001C0C  5C09               	subwf	??___fladd^0,w,c
 10135  001C0E  A0D8               	btfss	status,0,c
 10136  001C10  EF0C  F00E         	goto	u4011
 10137  001C14  EF0F  F00E         	goto	u4010
 10138  001C18                     u4011:
 10139  001C18  FFFF               	dw	65535	; assembler added errata NOP
 10140  001C1A  EF52  F00E         	goto	l714
 10141  001C1E                     u4010:
 10142  001C1E  FFFF               	dw	65535	; assembler added errata NOP
 10143  001C20  5001               	movf	___fladd@b^0,w,c
 10144  001C22  1002               	iorwf	(___fladd@b+1)^0,w,c
 10145  001C24  1003               	iorwf	(___fladd@b+2)^0,w,c
 10146  001C26  1004               	iorwf	(___fladd@b+3)^0,w,c
 10147  001C28  A4D8               	btfss	status,2,c
 10148  001C2A  EF19  F00E         	goto	u4021
 10149  001C2E  EF1D  F00E         	goto	u4020
 10150  001C32                     u4021:
 10151  001C32  FFFF               	dw	65535	; assembler added errata NOP
 10152  001C34  0E01               	movlw	1
 10153  001C36  EF1F  F00E         	goto	u4030
 10154  001C3A                     u4020:
 10155  001C3A  FFFF               	dw	65535	; assembler added errata NOP
 10156  001C3C  0E00               	movlw	0
 10157  001C3E                     u4030:
 10158  001C3E  FFFF               	dw	65535	; assembler added errata NOP
 10159  001C40  6E10               	movwf	___fladd@grs^0,c
 10160  001C42  0E00               	movlw	0
 10161  001C44  6E01               	movwf	___fladd@b^0,c
 10162  001C46  0E00               	movlw	0
 10163  001C48  6E02               	movwf	(___fladd@b+1)^0,c
 10164  001C4A  0E00               	movlw	0
 10165  001C4C  6E03               	movwf	(___fladd@b+2)^0,c
 10166  001C4E  0E00               	movlw	0
 10167  001C50  6E04               	movwf	(___fladd@b+3)^0,c
 10168  001C52  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10169  001C56  EF5D  F00E         	goto	l713
 10170  001C5A                     l715:
 10171  001C5A  FFFF               	dw	65535	; assembler added errata NOP
 10172  001C5C  A010               	btfss	___fladd@grs^0,0,c
 10173  001C5E  EF33  F00E         	goto	u4041
 10174  001C62  EF36  F00E         	goto	u4040
 10175  001C66                     u4041:
 10176  001C66  FFFF               	dw	65535	; assembler added errata NOP
 10177  001C68  EF3D  F00E         	goto	l3549
 10178  001C6C                     u4040:
 10179  001C6C  FFFF               	dw	65535	; assembler added errata NOP
 10180  001C6E  90D8               	bcf	status,0,c
 10181  001C70  3010               	rrcf	___fladd@grs^0,w,c
 10182  001C72  0901               	iorlw	1
 10183  001C74  6E10               	movwf	___fladd@grs^0,c
 10184  001C76  EF40  F00E         	goto	l3551
 10185  001C7A                     l3549:
 10186  001C7A  FFFF               	dw	65535	; assembler added errata NOP
 10187  001C7C  90D8               	bcf	status,0,c
 10188  001C7E  3210               	rrcf	___fladd@grs^0,f,c
 10189  001C80                     l3551:
 10190  001C80  FFFF               	dw	65535	; assembler added errata NOP
 10191  001C82  A001               	btfss	___fladd@b^0,0,c
 10192  001C84  EF46  F00E         	goto	u4051
 10193  001C88  EF49  F00E         	goto	u4050
 10194  001C8C                     u4051:
 10195  001C8C  FFFF               	dw	65535	; assembler added errata NOP
 10196  001C8E  EF4B  F00E         	goto	l3555
 10197  001C92                     u4050:
 10198  001C92  FFFF               	dw	65535	; assembler added errata NOP
 10199  001C94  8E10               	bsf	___fladd@grs^0,7,c
 10200  001C96                     l3555:
 10201  001C96  FFFF               	dw	65535	; assembler added errata NOP
 10202  001C98  3404               	rlcf	(___fladd@b+3)^0,w,c
 10203  001C9A  3204               	rrcf	(___fladd@b+3)^0,f,c
 10204  001C9C  3203               	rrcf	(___fladd@b+2)^0,f,c
 10205  001C9E  3202               	rrcf	(___fladd@b+1)^0,f,c
 10206  001CA0  3201               	rrcf	___fladd@b^0,f,c
 10207  001CA2  2A0F               	incf	___fladd@bexp^0,f,c
 10208  001CA4                     l714:
 10209  001CA4  FFFF               	dw	65535	; assembler added errata NOP
 10210  001CA6  500E               	movf	___fladd@aexp^0,w,c
 10211  001CA8  5C0F               	subwf	___fladd@bexp^0,w,c
 10212  001CAA  A0D8               	btfss	status,0,c
 10213  001CAC  EF5A  F00E         	goto	u4061
 10214  001CB0  EF5D  F00E         	goto	u4060
 10215  001CB4                     u4061:
 10216  001CB4  FFFF               	dw	65535	; assembler added errata NOP
 10217  001CB6  EF2D  F00E         	goto	l715
 10218  001CBA                     u4060:
 10219  001CBA                     l713:
 10220  001CBA  FFFF               	dw	65535	; assembler added errata NOP
 10221  001CBC  BC0D               	btfsc	___fladd@signs^0,6,c
 10222  001CBE  EF63  F00E         	goto	u4071
 10223  001CC2  EF66  F00E         	goto	u4070
 10224  001CC6                     u4071:
 10225  001CC6  FFFF               	dw	65535	; assembler added errata NOP
 10226  001CC8  EFB3  F00E         	goto	l3583
 10227  001CCC                     u4070:
 10228  001CCC  FFFF               	dw	65535	; assembler added errata NOP
 10229  001CCE  500F               	movf	___fladd@bexp^0,w,c
 10230  001CD0  A4D8               	btfss	status,2,c
 10231  001CD2  EF6D  F00E         	goto	u4081
 10232  001CD6  EF70  F00E         	goto	u4080
 10233  001CDA                     u4081:
 10234  001CDA  FFFF               	dw	65535	; assembler added errata NOP
 10235  001CDC  EF7B  F00E         	goto	l3565
 10236  001CE0                     u4080:
 10237  001CE0  FFFF               	dw	65535	; assembler added errata NOP
 10238  001CE2  0E00               	movlw	0
 10239  001CE4  6E01               	movwf	?___fladd^0,c
 10240  001CE6  0E00               	movlw	0
 10241  001CE8  6E02               	movwf	(?___fladd+1)^0,c
 10242  001CEA  0E00               	movlw	0
 10243  001CEC  6E03               	movwf	(?___fladd+2)^0,c
 10244  001CEE  0E00               	movlw	0
 10245  001CF0  6E04               	movwf	(?___fladd+3)^0,c
 10246  001CF2  EF0A  F010         	goto	l722
 10247  001CF6                     l3565:
 10248  001CF6  FFFF               	dw	65535	; assembler added errata NOP
 10249  001CF8  5005               	movf	___fladd@a^0,w,c
 10250  001CFA  2601               	addwf	___fladd@b^0,f,c
 10251  001CFC  5006               	movf	(___fladd@a+1)^0,w,c
 10252  001CFE  2202               	addwfc	(___fladd@b+1)^0,f,c
 10253  001D00  5007               	movf	(___fladd@a+2)^0,w,c
 10254  001D02  2203               	addwfc	(___fladd@b+2)^0,f,c
 10255  001D04  5008               	movf	(___fladd@a+3)^0,w,c
 10256  001D06  2204               	addwfc	(___fladd@b+3)^0,f,c
 10257  001D08  A004               	btfss	(___fladd@b+3)^0,0,c
 10258  001D0A  EF89  F00E         	goto	u4091
 10259  001D0E  EF8C  F00E         	goto	u4090
 10260  001D12                     u4091:
 10261  001D12  FFFF               	dw	65535	; assembler added errata NOP
 10262  001D14  EF57  F00F         	goto	l3619
 10263  001D18                     u4090:
 10264  001D18  FFFF               	dw	65535	; assembler added errata NOP
 10265  001D1A  A010               	btfss	___fladd@grs^0,0,c
 10266  001D1C  EF92  F00E         	goto	u4101
 10267  001D20  EF95  F00E         	goto	u4100
 10268  001D24                     u4101:
 10269  001D24  FFFF               	dw	65535	; assembler added errata NOP
 10270  001D26  EF9C  F00E         	goto	l3573
 10271  001D2A                     u4100:
 10272  001D2A  FFFF               	dw	65535	; assembler added errata NOP
 10273  001D2C  90D8               	bcf	status,0,c
 10274  001D2E  3010               	rrcf	___fladd@grs^0,w,c
 10275  001D30  0901               	iorlw	1
 10276  001D32  6E10               	movwf	___fladd@grs^0,c
 10277  001D34  EF9F  F00E         	goto	l3575
 10278  001D38                     l3573:
 10279  001D38  FFFF               	dw	65535	; assembler added errata NOP
 10280  001D3A  90D8               	bcf	status,0,c
 10281  001D3C  3210               	rrcf	___fladd@grs^0,f,c
 10282  001D3E                     l3575:
 10283  001D3E  FFFF               	dw	65535	; assembler added errata NOP
 10284  001D40  A001               	btfss	___fladd@b^0,0,c
 10285  001D42  EFA5  F00E         	goto	u4111
 10286  001D46  EFA8  F00E         	goto	u4110
 10287  001D4A                     u4111:
 10288  001D4A  FFFF               	dw	65535	; assembler added errata NOP
 10289  001D4C  EFAA  F00E         	goto	l3579
 10290  001D50                     u4110:
 10291  001D50  FFFF               	dw	65535	; assembler added errata NOP
 10292  001D52  8E10               	bsf	___fladd@grs^0,7,c
 10293  001D54                     l3579:
 10294  001D54  FFFF               	dw	65535	; assembler added errata NOP
 10295  001D56  3404               	rlcf	(___fladd@b+3)^0,w,c
 10296  001D58  3204               	rrcf	(___fladd@b+3)^0,f,c
 10297  001D5A  3203               	rrcf	(___fladd@b+2)^0,f,c
 10298  001D5C  3202               	rrcf	(___fladd@b+1)^0,f,c
 10299  001D5E  3201               	rrcf	___fladd@b^0,f,c
 10300  001D60  2A0F               	incf	___fladd@bexp^0,f,c
 10301  001D62  EF57  F00F         	goto	l3619
 10302  001D66                     l3583:
 10303  001D66  FFFF               	dw	65535	; assembler added errata NOP
 10304  001D68  5005               	movf	___fladd@a^0,w,c
 10305  001D6A  5C01               	subwf	___fladd@b^0,w,c
 10306  001D6C  5006               	movf	(___fladd@a+1)^0,w,c
 10307  001D6E  5802               	subwfb	(___fladd@b+1)^0,w,c
 10308  001D70  5007               	movf	(___fladd@a+2)^0,w,c
 10309  001D72  5803               	subwfb	(___fladd@b+2)^0,w,c
 10310  001D74  5004               	movf	(___fladd@b+3)^0,w,c
 10311  001D76  0A80               	xorlw	128
 10312  001D78  6E09               	movwf	??___fladd^0,c
 10313  001D7A  5008               	movf	(___fladd@a+3)^0,w,c
 10314  001D7C  0A80               	xorlw	128
 10315  001D7E  5809               	subwfb	??___fladd^0,w,c
 10316  001D80  B0D8               	btfsc	status,0,c
 10317  001D82  EFC5  F00E         	goto	u4121
 10318  001D86  EFC8  F00E         	goto	u4120
 10319  001D8A                     u4121:
 10320  001D8A  FFFF               	dw	65535	; assembler added errata NOP
 10321  001D8C  EFF6  F00E         	goto	l3593
 10322  001D90                     u4120:
 10323  001D90  FFFF               	dw	65535	; assembler added errata NOP
 10324  001D92  5001               	movf	___fladd@b^0,w,c
 10325  001D94  5C05               	subwf	___fladd@a^0,w,c
 10326  001D96  6E09               	movwf	??___fladd^0,c
 10327  001D98  5002               	movf	(___fladd@b+1)^0,w,c
 10328  001D9A  5806               	subwfb	(___fladd@a+1)^0,w,c
 10329  001D9C  6E0A               	movwf	(??___fladd+1)^0,c
 10330  001D9E  5003               	movf	(___fladd@b+2)^0,w,c
 10331  001DA0  5807               	subwfb	(___fladd@a+2)^0,w,c
 10332  001DA2  6E0B               	movwf	(??___fladd+2)^0,c
 10333  001DA4  5004               	movf	(___fladd@b+3)^0,w,c
 10334  001DA6  5808               	subwfb	(___fladd@a+3)^0,w,c
 10335  001DA8  6E0C               	movwf	(??___fladd+3)^0,c
 10336  001DAA  0EFF               	movlw	255
 10337  001DAC  2409               	addwf	??___fladd^0,w,c
 10338  001DAE  6E01               	movwf	___fladd@b^0,c
 10339  001DB0  0EFF               	movlw	255
 10340  001DB2  200A               	addwfc	(??___fladd+1)^0,w,c
 10341  001DB4  6E02               	movwf	(___fladd@b+1)^0,c
 10342  001DB6  0EFF               	movlw	255
 10343  001DB8  200B               	addwfc	(??___fladd+2)^0,w,c
 10344  001DBA  6E03               	movwf	(___fladd@b+2)^0,c
 10345  001DBC  0EFF               	movlw	255
 10346  001DBE  200C               	addwfc	(??___fladd+3)^0,w,c
 10347  001DC0  6E04               	movwf	(___fladd@b+3)^0,c
 10348  001DC2  0E80               	movlw	128
 10349  001DC4  1A0D               	xorwf	___fladd@signs^0,f,c
 10350  001DC6  6C10               	negf	___fladd@grs^0,c
 10351  001DC8  5010               	movf	___fladd@grs^0,w,c
 10352  001DCA  A4D8               	btfss	status,2,c
 10353  001DCC  EFEA  F00E         	goto	u4131
 10354  001DD0  EFED  F00E         	goto	u4130
 10355  001DD4                     u4131:
 10356  001DD4  FFFF               	dw	65535	; assembler added errata NOP
 10357  001DD6  EFFF  F00E         	goto	l730
 10358  001DDA                     u4130:
 10359  001DDA  FFFF               	dw	65535	; assembler added errata NOP
 10360  001DDC  0E01               	movlw	1
 10361  001DDE  2601               	addwf	___fladd@b^0,f,c
 10362  001DE0  0E00               	movlw	0
 10363  001DE2  2202               	addwfc	(___fladd@b+1)^0,f,c
 10364  001DE4  2203               	addwfc	(___fladd@b+2)^0,f,c
 10365  001DE6  2204               	addwfc	(___fladd@b+3)^0,f,c
 10366  001DE8  EFFF  F00E         	goto	l730
 10367  001DEC                     l3593:
 10368  001DEC  FFFF               	dw	65535	; assembler added errata NOP
 10369  001DEE  5005               	movf	___fladd@a^0,w,c
 10370  001DF0  5E01               	subwf	___fladd@b^0,f,c
 10371  001DF2  5006               	movf	(___fladd@a+1)^0,w,c
 10372  001DF4  5A02               	subwfb	(___fladd@b+1)^0,f,c
 10373  001DF6  5007               	movf	(___fladd@a+2)^0,w,c
 10374  001DF8  5A03               	subwfb	(___fladd@b+2)^0,f,c
 10375  001DFA  5008               	movf	(___fladd@a+3)^0,w,c
 10376  001DFC  5A04               	subwfb	(___fladd@b+3)^0,f,c
 10377  001DFE                     l730:
 10378  001DFE  FFFF               	dw	65535	; assembler added errata NOP
 10379  001E00  5001               	movf	___fladd@b^0,w,c
 10380  001E02  1002               	iorwf	(___fladd@b+1)^0,w,c
 10381  001E04  1003               	iorwf	(___fladd@b+2)^0,w,c
 10382  001E06  1004               	iorwf	(___fladd@b+3)^0,w,c
 10383  001E08  A4D8               	btfss	status,2,c
 10384  001E0A  EF09  F00F         	goto	u4141
 10385  001E0E  EF0C  F00F         	goto	u4140
 10386  001E12                     u4141:
 10387  001E12  FFFF               	dw	65535	; assembler added errata NOP
 10388  001E14  EF4E  F00F         	goto	l3617
 10389  001E18                     u4140:
 10390  001E18  FFFF               	dw	65535	; assembler added errata NOP
 10391  001E1A  5010               	movf	___fladd@grs^0,w,c
 10392  001E1C  A4D8               	btfss	status,2,c
 10393  001E1E  EF13  F00F         	goto	u4151
 10394  001E22  EF16  F00F         	goto	u4150
 10395  001E26                     u4151:
 10396  001E26  FFFF               	dw	65535	; assembler added errata NOP
 10397  001E28  EF4E  F00F         	goto	l3617
 10398  001E2C                     u4150:
 10399  001E2C  FFFF               	dw	65535	; assembler added errata NOP
 10400  001E2E  0E00               	movlw	0
 10401  001E30  6E01               	movwf	?___fladd^0,c
 10402  001E32  0E00               	movlw	0
 10403  001E34  6E02               	movwf	(?___fladd+1)^0,c
 10404  001E36  0E00               	movlw	0
 10405  001E38  6E03               	movwf	(?___fladd+2)^0,c
 10406  001E3A  0E00               	movlw	0
 10407  001E3C  6E04               	movwf	(?___fladd+3)^0,c
 10408  001E3E  EF0A  F010         	goto	l722
 10409  001E42                     l3601:
 10410  001E42  FFFF               	dw	65535	; assembler added errata NOP
 10411  001E44  90D8               	bcf	status,0,c
 10412  001E46  3601               	rlcf	___fladd@b^0,f,c
 10413  001E48  3602               	rlcf	(___fladd@b+1)^0,f,c
 10414  001E4A  3603               	rlcf	(___fladd@b+2)^0,f,c
 10415  001E4C  3604               	rlcf	(___fladd@b+3)^0,f,c
 10416  001E4E  AE10               	btfss	___fladd@grs^0,7,c
 10417  001E50  EF2C  F00F         	goto	u4161
 10418  001E54  EF2F  F00F         	goto	u4160
 10419  001E58                     u4161:
 10420  001E58  FFFF               	dw	65535	; assembler added errata NOP
 10421  001E5A  EF31  F00F         	goto	l3607
 10422  001E5E                     u4160:
 10423  001E5E  FFFF               	dw	65535	; assembler added errata NOP
 10424  001E60  8001               	bsf	___fladd@b^0,0,c
 10425  001E62                     l3607:
 10426  001E62  FFFF               	dw	65535	; assembler added errata NOP
 10427  001E64  A010               	btfss	___fladd@grs^0,0,c
 10428  001E66  EF37  F00F         	goto	u4171
 10429  001E6A  EF3A  F00F         	goto	u4170
 10430  001E6E                     u4171:
 10431  001E6E  FFFF               	dw	65535	; assembler added errata NOP
 10432  001E70  EF3F  F00F         	goto	l3611
 10433  001E74                     u4170:
 10434  001E74  FFFF               	dw	65535	; assembler added errata NOP
 10435  001E76  80D8               	bsf	status,0,c
 10436  001E78  3610               	rlcf	___fladd@grs^0,f,c
 10437  001E7A  EF42  F00F         	goto	l3613
 10438  001E7E                     l3611:
 10439  001E7E  FFFF               	dw	65535	; assembler added errata NOP
 10440  001E80  90D8               	bcf	status,0,c
 10441  001E82  3610               	rlcf	___fladd@grs^0,f,c
 10442  001E84                     l3613:
 10443  001E84  FFFF               	dw	65535	; assembler added errata NOP
 10444  001E86  500F               	movf	___fladd@bexp^0,w,c
 10445  001E88  B4D8               	btfsc	status,2,c
 10446  001E8A  EF49  F00F         	goto	u4181
 10447  001E8E  EF4C  F00F         	goto	u4180
 10448  001E92                     u4181:
 10449  001E92  FFFF               	dw	65535	; assembler added errata NOP
 10450  001E94  EF4E  F00F         	goto	l3617
 10451  001E98                     u4180:
 10452  001E98  FFFF               	dw	65535	; assembler added errata NOP
 10453  001E9A  060F               	decf	___fladd@bexp^0,f,c
 10454  001E9C                     l3617:
 10455  001E9C  FFFF               	dw	65535	; assembler added errata NOP
 10456  001E9E  AE03               	btfss	(___fladd@b+2)^0,7,c
 10457  001EA0  EF54  F00F         	goto	u4191
 10458  001EA4  EF57  F00F         	goto	u4190
 10459  001EA8                     u4191:
 10460  001EA8  FFFF               	dw	65535	; assembler added errata NOP
 10461  001EAA  EF21  F00F         	goto	l3601
 10462  001EAE                     u4190:
 10463  001EAE                     l3619:
 10464  001EAE  FFFF               	dw	65535	; assembler added errata NOP
 10465  001EB0  0E00               	movlw	0
 10466  001EB2  6E0E               	movwf	___fladd@aexp^0,c
 10467  001EB4  AE10               	btfss	___fladd@grs^0,7,c
 10468  001EB6  EF5F  F00F         	goto	u4201
 10469  001EBA  EF62  F00F         	goto	u4200
 10470  001EBE                     u4201:
 10471  001EBE  FFFF               	dw	65535	; assembler added errata NOP
 10472  001EC0  EF81  F00F         	goto	l739
 10473  001EC4                     u4200:
 10474  001EC4  FFFF               	dw	65535	; assembler added errata NOP
 10475  001EC6  C010  F009         	movff	___fladd@grs,??___fladd
 10476  001ECA  0E7F               	movlw	127
 10477  001ECC  1609               	andwf	??___fladd^0,f,c
 10478  001ECE  B4D8               	btfsc	status,2,c
 10479  001ED0  EF6C  F00F         	goto	u4211
 10480  001ED4  EF6F  F00F         	goto	u4210
 10481  001ED8                     u4211:
 10482  001ED8  FFFF               	dw	65535	; assembler added errata NOP
 10483  001EDA  EF75  F00F         	goto	l740
 10484  001EDE                     u4210:
 10485  001EDE  FFFF               	dw	65535	; assembler added errata NOP
 10486  001EE0                     l3625:
 10487  001EE0  FFFF               	dw	65535	; assembler added errata NOP
 10488  001EE2  0E01               	movlw	1
 10489  001EE4  6E0E               	movwf	___fladd@aexp^0,c
 10490  001EE6  EF81  F00F         	goto	l739
 10491  001EEA                     l740:
 10492  001EEA  FFFF               	dw	65535	; assembler added errata NOP
 10493  001EEC  A001               	btfss	___fladd@b^0,0,c
 10494  001EEE  EF7B  F00F         	goto	u4221
 10495  001EF2  EF7E  F00F         	goto	u4220
 10496  001EF6                     u4221:
 10497  001EF6  FFFF               	dw	65535	; assembler added errata NOP
 10498  001EF8  EF81  F00F         	goto	l739
 10499  001EFC                     u4220:
 10500  001EFC  FFFF               	dw	65535	; assembler added errata NOP
 10501  001EFE  EF70  F00F         	goto	l3625
 10502  001F02                     l739:
 10503  001F02  FFFF               	dw	65535	; assembler added errata NOP
 10504  001F04  500E               	movf	___fladd@aexp^0,w,c
 10505  001F06  B4D8               	btfsc	status,2,c
 10506  001F08  EF88  F00F         	goto	u4231
 10507  001F0C  EF8B  F00F         	goto	u4230
 10508  001F10                     u4231:
 10509  001F10  FFFF               	dw	65535	; assembler added errata NOP
 10510  001F12  EFBB  F00F         	goto	l3637
 10511  001F16                     u4230:
 10512  001F16  FFFF               	dw	65535	; assembler added errata NOP
 10513  001F18  0E01               	movlw	1
 10514  001F1A  2601               	addwf	___fladd@b^0,f,c
 10515  001F1C  0E00               	movlw	0
 10516  001F1E  2202               	addwfc	(___fladd@b+1)^0,f,c
 10517  001F20  2203               	addwfc	(___fladd@b+2)^0,f,c
 10518  001F22  2204               	addwfc	(___fladd@b+3)^0,f,c
 10519  001F24  A004               	btfss	(___fladd@b+3)^0,0,c
 10520  001F26  EF97  F00F         	goto	u4241
 10521  001F2A  EF9A  F00F         	goto	u4240
 10522  001F2E                     u4241:
 10523  001F2E  FFFF               	dw	65535	; assembler added errata NOP
 10524  001F30  EFBB  F00F         	goto	l3637
 10525  001F34                     u4240:
 10526  001F34  FFFF               	dw	65535	; assembler added errata NOP
 10527  001F36  C001  F009         	movff	___fladd@b,??___fladd
 10528  001F3A  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 10529  001F3E  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 10530  001F42  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 10531  001F46  340C               	rlcf	(??___fladd+3)^0,w,c
 10532  001F48  320C               	rrcf	(??___fladd+3)^0,f,c
 10533  001F4A  320B               	rrcf	(??___fladd+2)^0,f,c
 10534  001F4C  320A               	rrcf	(??___fladd+1)^0,f,c
 10535  001F4E  3209               	rrcf	??___fladd^0,f,c
 10536  001F50  C009  F001         	movff	??___fladd,___fladd@b
 10537  001F54  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 10538  001F58  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 10539  001F5C  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 10540  001F60  280F               	incf	___fladd@bexp^0,w,c
 10541  001F62  B4D8               	btfsc	status,2,c
 10542  001F64  EFB6  F00F         	goto	u4251
 10543  001F68  EFB9  F00F         	goto	u4250
 10544  001F6C                     u4251:
 10545  001F6C  FFFF               	dw	65535	; assembler added errata NOP
 10546  001F6E  EFBB  F00F         	goto	l3637
 10547  001F72                     u4250:
 10548  001F72  FFFF               	dw	65535	; assembler added errata NOP
 10549  001F74  2A0F               	incf	___fladd@bexp^0,f,c
 10550  001F76                     l3637:
 10551  001F76  FFFF               	dw	65535	; assembler added errata NOP
 10552  001F78  280F               	incf	___fladd@bexp^0,w,c
 10553  001F7A  B4D8               	btfsc	status,2,c
 10554  001F7C  EFC2  F00F         	goto	u4261
 10555  001F80  EFC5  F00F         	goto	u4260
 10556  001F84                     u4261:
 10557  001F84  FFFF               	dw	65535	; assembler added errata NOP
 10558  001F86  EFCF  F00F         	goto	l3641
 10559  001F8A                     u4260:
 10560  001F8A  FFFF               	dw	65535	; assembler added errata NOP
 10561  001F8C  500F               	movf	___fladd@bexp^0,w,c
 10562  001F8E  A4D8               	btfss	status,2,c
 10563  001F90  EFCC  F00F         	goto	u4271
 10564  001F94  EFCF  F00F         	goto	u4270
 10565  001F98                     u4271:
 10566  001F98  FFFF               	dw	65535	; assembler added errata NOP
 10567  001F9A  EFE4  F00F         	goto	l3645
 10568  001F9E                     u4270:
 10569  001F9E                     l3641:
 10570  001F9E  FFFF               	dw	65535	; assembler added errata NOP
 10571  001FA0  0E00               	movlw	0
 10572  001FA2  6E01               	movwf	___fladd@b^0,c
 10573  001FA4  0E00               	movlw	0
 10574  001FA6  6E02               	movwf	(___fladd@b+1)^0,c
 10575  001FA8  0E00               	movlw	0
 10576  001FAA  6E03               	movwf	(___fladd@b+2)^0,c
 10577  001FAC  0E00               	movlw	0
 10578  001FAE  6E04               	movwf	(___fladd@b+3)^0,c
 10579  001FB0  500F               	movf	___fladd@bexp^0,w,c
 10580  001FB2  A4D8               	btfss	status,2,c
 10581  001FB4  EFDE  F00F         	goto	u4281
 10582  001FB8  EFE1  F00F         	goto	u4280
 10583  001FBC                     u4281:
 10584  001FBC  FFFF               	dw	65535	; assembler added errata NOP
 10585  001FBE  EFE4  F00F         	goto	l3645
 10586  001FC2                     u4280:
 10587  001FC2  FFFF               	dw	65535	; assembler added errata NOP
 10588  001FC4  0E00               	movlw	0
 10589  001FC6  6E0D               	movwf	___fladd@signs^0,c
 10590  001FC8                     l3645:
 10591  001FC8  FFFF               	dw	65535	; assembler added errata NOP
 10592  001FCA  A00F               	btfss	___fladd@bexp^0,0,c
 10593  001FCC  EFEA  F00F         	goto	u4291
 10594  001FD0  EFED  F00F         	goto	u4290
 10595  001FD4                     u4291:
 10596  001FD4  FFFF               	dw	65535	; assembler added errata NOP
 10597  001FD6  EFF1  F00F         	goto	l3649
 10598  001FDA                     u4290:
 10599  001FDA  FFFF               	dw	65535	; assembler added errata NOP
 10600  001FDC  8E03               	bsf	(___fladd@b+2)^0,7,c
 10601  001FDE  EFF3  F00F         	goto	l3651
 10602  001FE2                     l3649:
 10603  001FE2  FFFF               	dw	65535	; assembler added errata NOP
 10604  001FE4  9E03               	bcf	(___fladd@b+2)^0,7,c
 10605  001FE6                     l3651:
 10606  001FE6  FFFF               	dw	65535	; assembler added errata NOP
 10607  001FE8  90D8               	bcf	status,0,c
 10608  001FEA  300F               	rrcf	___fladd@bexp^0,w,c
 10609  001FEC  6E04               	movwf	(___fladd@b+3)^0,c
 10610  001FEE  AE0D               	btfss	___fladd@signs^0,7,c
 10611  001FF0  EFFC  F00F         	goto	u4301
 10612  001FF4  EFFF  F00F         	goto	u4300
 10613  001FF8                     u4301:
 10614  001FF8  FFFF               	dw	65535	; assembler added errata NOP
 10615  001FFA  EF01  F010         	goto	l3657
 10616  001FFE                     u4300:
 10617  001FFE  FFFF               	dw	65535	; assembler added errata NOP
 10618  002000  8E04               	bsf	(___fladd@b+3)^0,7,c
 10619  002002                     l3657:
 10620  002002  FFFF               	dw	65535	; assembler added errata NOP
 10621  002004  C001  F001         	movff	___fladd@b,?___fladd
 10622  002008  C002  F002         	movff	___fladd@b+1,?___fladd+1
 10623  00200C  C003  F003         	movff	___fladd@b+2,?___fladd+2
 10624  002010  C004  F004         	movff	___fladd@b+3,?___fladd+3
 10625  002014                     l722:
 10626  002014  FFFF               	dw	65535	; assembler added errata NOP
 10627  002016  0012               	return		;funcret
 10628  002018  FFFF               	dw	65535	; errata NOP
 10629  00201A                     __end_of___fladd:
 10630                           	callstack 0
 10631                           
 10632 ;; *************** function ___flneg *****************
 10633 ;; Defined at:
 10634 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
 10635 ;; Parameters:    Size  Location     Type
 10636 ;;  f1              4    0[COMRAM] unsigned char 
 10637 ;; Auto vars:     Size  Location     Type
 10638 ;;		None
 10639 ;; Return value:  Size  Location     Type
 10640 ;;                  4    0[COMRAM] unsigned char 
 10641 ;; Registers used:
 10642 ;;		wreg, status,2, status,0
 10643 ;; Tracked objects:
 10644 ;;		On entry : 0/0
 10645 ;;		On exit  : 0/0
 10646 ;;		Unchanged: 0/0
 10647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10648 ;;      Params:         4       0       0       0       0       0       0
 10649 ;;      Locals:         0       0       0       0       0       0       0
 10650 ;;      Temps:          0       0       0       0       0       0       0
 10651 ;;      Totals:         4       0       0       0       0       0       0
 10652 ;;Total ram usage:        4 bytes
 10653 ;; Hardware stack levels used:    1
 10654 ;; Hardware stack levels required when called:    1
 10655 ;; This function calls:
 10656 ;;		Nothing
 10657 ;; This function is called by:
 10658 ;;		_roundf
 10659 ;; This function uses a non-reentrant model
 10660 ;;
 10661                           
 10662                           	psect	text44
 10663  007A72                     __ptext44:
 10664                           	callstack 0
 10665  007A72                     ___flneg:
 10666                           	callstack 0
 10667  007A72  FFFF               	dw	65535	; assembler added errata NOP
 10668  007A74  5001               	movf	___flneg@f1^0,w,c
 10669  007A76  1002               	iorwf	(___flneg@f1+1)^0,w,c
 10670  007A78  1003               	iorwf	(___flneg@f1+2)^0,w,c
 10671  007A7A  1004               	iorwf	(___flneg@f1+3)^0,w,c
 10672  007A7C  B4D8               	btfsc	status,2,c
 10673  007A7E  EF43  F03D         	goto	u5041
 10674  007A82  EF46  F03D         	goto	u5040
 10675  007A86                     u5041:
 10676  007A86  FFFF               	dw	65535	; assembler added errata NOP
 10677  007A88  EF4F  F03D         	goto	l4157
 10678  007A8C                     u5040:
 10679  007A8C  FFFF               	dw	65535	; assembler added errata NOP
 10680  007A8E  0E00               	movlw	0
 10681  007A90  1A01               	xorwf	___flneg@f1^0,f,c
 10682  007A92  0E00               	movlw	0
 10683  007A94  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 10684  007A96  0E00               	movlw	0
 10685  007A98  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 10686  007A9A  0E80               	movlw	128
 10687  007A9C  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 10688  007A9E                     l4157:
 10689  007A9E  FFFF               	dw	65535	; assembler added errata NOP
 10690  007AA0  C001  F001         	movff	___flneg@f1,?___flneg
 10691  007AA4  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 10692  007AA8  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 10693  007AAC  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 10694  007AB0  0012               	return		;funcret
 10695  007AB2  FFFF               	dw	65535	; errata NOP
 10696  007AB4                     __end_of___flneg:
 10697                           	callstack 0
 10698                           
 10699 ;; *************** function ___flmul *****************
 10700 ;; Defined at:
 10701 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 10702 ;; Parameters:    Size  Location     Type
 10703 ;;  b               4    0[COMRAM] unsigned char 
 10704 ;;  a               4    4[COMRAM] unsigned char 
 10705 ;; Auto vars:     Size  Location     Type
 10706 ;;  prod            4   19[COMRAM] struct .
 10707 ;;  grs             4   13[COMRAM] unsigned long 
 10708 ;;  temp            2   23[COMRAM] struct .
 10709 ;;  bexp            1   18[COMRAM] unsigned char 
 10710 ;;  aexp            1   17[COMRAM] unsigned char 
 10711 ;;  sign            1   12[COMRAM] unsigned char 
 10712 ;; Return value:  Size  Location     Type
 10713 ;;                  4    0[COMRAM] unsigned char 
 10714 ;; Registers used:
 10715 ;;		wreg, status,2, status,0, prodl, prodh
 10716 ;; Tracked objects:
 10717 ;;		On entry : 0/0
 10718 ;;		On exit  : 0/0
 10719 ;;		Unchanged: 0/0
 10720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10721 ;;      Params:         8       0       0       0       0       0       0
 10722 ;;      Locals:        13       0       0       0       0       0       0
 10723 ;;      Temps:          4       0       0       0       0       0       0
 10724 ;;      Totals:        25       0       0       0       0       0       0
 10725 ;;Total ram usage:       25 bytes
 10726 ;; Hardware stack levels used:    1
 10727 ;; Hardware stack levels required when called:    1
 10728 ;; This function calls:
 10729 ;;		Nothing
 10730 ;; This function is called by:
 10731 ;;		_roundf
 10732 ;; This function uses a non-reentrant model
 10733 ;;
 10734                           
 10735                           	psect	text45
 10736  00201A                     __ptext45:
 10737                           	callstack 0
 10738  00201A                     ___flmul:
 10739                           	callstack 0
 10740  00201A  FFFF               	dw	65535	; assembler added errata NOP
 10741  00201C  5004               	movf	(___flmul@b+3)^0,w,c
 10742  00201E  0B80               	andlw	128
 10743  002020  6E0D               	movwf	___flmul@sign^0,c
 10744  002022  5004               	movf	(___flmul@b+3)^0,w,c
 10745  002024  2404               	addwf	(___flmul@b+3)^0,w,c
 10746  002026  6E13               	movwf	___flmul@bexp^0,c
 10747  002028  AE03               	btfss	(___flmul@b+2)^0,7,c
 10748  00202A  EF19  F010         	goto	u4801
 10749  00202E  EF1C  F010         	goto	u4800
 10750  002032                     u4801:
 10751  002032  FFFF               	dw	65535	; assembler added errata NOP
 10752  002034  EF1E  F010         	goto	l4001
 10753  002038                     u4800:
 10754  002038  FFFF               	dw	65535	; assembler added errata NOP
 10755  00203A  8013               	bsf	___flmul@bexp^0,0,c
 10756  00203C                     l4001:
 10757  00203C  FFFF               	dw	65535	; assembler added errata NOP
 10758  00203E  5013               	movf	___flmul@bexp^0,w,c
 10759  002040  B4D8               	btfsc	status,2,c
 10760  002042  EF25  F010         	goto	u4811
 10761  002046  EF28  F010         	goto	u4810
 10762  00204A                     u4811:
 10763  00204A  FFFF               	dw	65535	; assembler added errata NOP
 10764  00204C  EF3F  F010         	goto	l4009
 10765  002050                     u4810:
 10766  002050  FFFF               	dw	65535	; assembler added errata NOP
 10767  002052  2813               	incf	___flmul@bexp^0,w,c
 10768  002054  A4D8               	btfss	status,2,c
 10769  002056  EF2F  F010         	goto	u4821
 10770  00205A  EF32  F010         	goto	u4820
 10771  00205E                     u4821:
 10772  00205E  FFFF               	dw	65535	; assembler added errata NOP
 10773  002060  EF3B  F010         	goto	l4007
 10774  002064                     u4820:
 10775  002064  FFFF               	dw	65535	; assembler added errata NOP
 10776  002066  0E00               	movlw	0
 10777  002068  6E01               	movwf	___flmul@b^0,c
 10778  00206A  0E00               	movlw	0
 10779  00206C  6E02               	movwf	(___flmul@b+1)^0,c
 10780  00206E  0E00               	movlw	0
 10781  002070  6E03               	movwf	(___flmul@b+2)^0,c
 10782  002072  0E00               	movlw	0
 10783  002074  6E04               	movwf	(___flmul@b+3)^0,c
 10784  002076                     l4007:
 10785  002076  FFFF               	dw	65535	; assembler added errata NOP
 10786  002078  8E03               	bsf	(___flmul@b+2)^0,7,c
 10787  00207A  EF48  F010         	goto	l4011
 10788  00207E                     l4009:
 10789  00207E  FFFF               	dw	65535	; assembler added errata NOP
 10790  002080  0E00               	movlw	0
 10791  002082  6E01               	movwf	___flmul@b^0,c
 10792  002084  0E00               	movlw	0
 10793  002086  6E02               	movwf	(___flmul@b+1)^0,c
 10794  002088  0E00               	movlw	0
 10795  00208A  6E03               	movwf	(___flmul@b+2)^0,c
 10796  00208C  0E00               	movlw	0
 10797  00208E  6E04               	movwf	(___flmul@b+3)^0,c
 10798  002090                     l4011:
 10799  002090  FFFF               	dw	65535	; assembler added errata NOP
 10800  002092  5008               	movf	(___flmul@a+3)^0,w,c
 10801  002094  0B80               	andlw	128
 10802  002096  1A0D               	xorwf	___flmul@sign^0,f,c
 10803  002098  5008               	movf	(___flmul@a+3)^0,w,c
 10804  00209A  2408               	addwf	(___flmul@a+3)^0,w,c
 10805  00209C  6E12               	movwf	___flmul@aexp^0,c
 10806  00209E  AE07               	btfss	(___flmul@a+2)^0,7,c
 10807  0020A0  EF54  F010         	goto	u4831
 10808  0020A4  EF57  F010         	goto	u4830
 10809  0020A8                     u4831:
 10810  0020A8  FFFF               	dw	65535	; assembler added errata NOP
 10811  0020AA  EF59  F010         	goto	l4019
 10812  0020AE                     u4830:
 10813  0020AE  FFFF               	dw	65535	; assembler added errata NOP
 10814  0020B0  8012               	bsf	___flmul@aexp^0,0,c
 10815  0020B2                     l4019:
 10816  0020B2  FFFF               	dw	65535	; assembler added errata NOP
 10817  0020B4  5012               	movf	___flmul@aexp^0,w,c
 10818  0020B6  B4D8               	btfsc	status,2,c
 10819  0020B8  EF60  F010         	goto	u4841
 10820  0020BC  EF63  F010         	goto	u4840
 10821  0020C0                     u4841:
 10822  0020C0  FFFF               	dw	65535	; assembler added errata NOP
 10823  0020C2  EF7A  F010         	goto	l4027
 10824  0020C6                     u4840:
 10825  0020C6  FFFF               	dw	65535	; assembler added errata NOP
 10826  0020C8  2812               	incf	___flmul@aexp^0,w,c
 10827  0020CA  A4D8               	btfss	status,2,c
 10828  0020CC  EF6A  F010         	goto	u4851
 10829  0020D0  EF6D  F010         	goto	u4850
 10830  0020D4                     u4851:
 10831  0020D4  FFFF               	dw	65535	; assembler added errata NOP
 10832  0020D6  EF76  F010         	goto	l4025
 10833  0020DA                     u4850:
 10834  0020DA  FFFF               	dw	65535	; assembler added errata NOP
 10835  0020DC  0E00               	movlw	0
 10836  0020DE  6E05               	movwf	___flmul@a^0,c
 10837  0020E0  0E00               	movlw	0
 10838  0020E2  6E06               	movwf	(___flmul@a+1)^0,c
 10839  0020E4  0E00               	movlw	0
 10840  0020E6  6E07               	movwf	(___flmul@a+2)^0,c
 10841  0020E8  0E00               	movlw	0
 10842  0020EA  6E08               	movwf	(___flmul@a+3)^0,c
 10843  0020EC                     l4025:
 10844  0020EC  FFFF               	dw	65535	; assembler added errata NOP
 10845  0020EE  8E07               	bsf	(___flmul@a+2)^0,7,c
 10846  0020F0  EF83  F010         	goto	l799
 10847  0020F4                     l4027:
 10848  0020F4  FFFF               	dw	65535	; assembler added errata NOP
 10849  0020F6  0E00               	movlw	0
 10850  0020F8  6E05               	movwf	___flmul@a^0,c
 10851  0020FA  0E00               	movlw	0
 10852  0020FC  6E06               	movwf	(___flmul@a+1)^0,c
 10853  0020FE  0E00               	movlw	0
 10854  002100  6E07               	movwf	(___flmul@a+2)^0,c
 10855  002102  0E00               	movlw	0
 10856  002104  6E08               	movwf	(___flmul@a+3)^0,c
 10857  002106                     l799:
 10858  002106  FFFF               	dw	65535	; assembler added errata NOP
 10859  002108  5012               	movf	___flmul@aexp^0,w,c
 10860  00210A  B4D8               	btfsc	status,2,c
 10861  00210C  EF8A  F010         	goto	u4861
 10862  002110  EF8D  F010         	goto	u4860
 10863  002114                     u4861:
 10864  002114  FFFF               	dw	65535	; assembler added errata NOP
 10865  002116  EF97  F010         	goto	l4031
 10866  00211A                     u4860:
 10867  00211A  FFFF               	dw	65535	; assembler added errata NOP
 10868  00211C  5013               	movf	___flmul@bexp^0,w,c
 10869  00211E  A4D8               	btfss	status,2,c
 10870  002120  EF94  F010         	goto	u4871
 10871  002124  EF97  F010         	goto	u4870
 10872  002128                     u4871:
 10873  002128  FFFF               	dw	65535	; assembler added errata NOP
 10874  00212A  EFA2  F010         	goto	l4035
 10875  00212E                     u4870:
 10876  00212E                     l4031:
 10877  00212E  FFFF               	dw	65535	; assembler added errata NOP
 10878  002130  0E00               	movlw	0
 10879  002132  6E01               	movwf	?___flmul^0,c
 10880  002134  0E00               	movlw	0
 10881  002136  6E02               	movwf	(?___flmul+1)^0,c
 10882  002138  0E00               	movlw	0
 10883  00213A  6E03               	movwf	(?___flmul+2)^0,c
 10884  00213C  0E00               	movlw	0
 10885  00213E  6E04               	movwf	(?___flmul+3)^0,c
 10886  002140  EF5C  F012         	goto	l803
 10887  002144                     l4035:
 10888  002144  FFFF               	dw	65535	; assembler added errata NOP
 10889  002146  5007               	movf	(___flmul@a+2)^0,w,c
 10890  002148  0201               	mulwf	___flmul@b^0,c
 10891  00214A  CFF3 F018          	movff	prodl,___flmul@temp
 10892  00214E  CFF4 F019          	movff	prodh,___flmul@temp+1
 10893  002152  5018               	movf	___flmul@temp^0,w,c
 10894  002154  6E0E               	movwf	___flmul@grs^0,c
 10895  002156  6A0F               	clrf	(___flmul@grs+1)^0,c
 10896  002158  6A10               	clrf	(___flmul@grs+2)^0,c
 10897  00215A  6A11               	clrf	(___flmul@grs+3)^0,c
 10898  00215C  5019               	movf	(___flmul@temp+1)^0,w,c
 10899  00215E  6E14               	movwf	___flmul@prod^0,c
 10900  002160  6A15               	clrf	(___flmul@prod+1)^0,c
 10901  002162  6A16               	clrf	(___flmul@prod+2)^0,c
 10902  002164  6A17               	clrf	(___flmul@prod+3)^0,c
 10903  002166  5006               	movf	(___flmul@a+1)^0,w,c
 10904  002168  0202               	mulwf	(___flmul@b+1)^0,c
 10905  00216A  CFF3 F018          	movff	prodl,___flmul@temp
 10906  00216E  CFF4 F019          	movff	prodh,___flmul@temp+1
 10907  002172  5018               	movf	___flmul@temp^0,w,c
 10908  002174  260E               	addwf	___flmul@grs^0,f,c
 10909  002176  0E00               	movlw	0
 10910  002178  220F               	addwfc	(___flmul@grs+1)^0,f,c
 10911  00217A  2210               	addwfc	(___flmul@grs+2)^0,f,c
 10912  00217C  2211               	addwfc	(___flmul@grs+3)^0,f,c
 10913  00217E  5019               	movf	(___flmul@temp+1)^0,w,c
 10914  002180  2614               	addwf	___flmul@prod^0,f,c
 10915  002182  0E00               	movlw	0
 10916  002184  2215               	addwfc	(___flmul@prod+1)^0,f,c
 10917  002186  2216               	addwfc	(___flmul@prod+2)^0,f,c
 10918  002188  2217               	addwfc	(___flmul@prod+3)^0,f,c
 10919  00218A  5005               	movf	___flmul@a^0,w,c
 10920  00218C  0203               	mulwf	(___flmul@b+2)^0,c
 10921  00218E  CFF3 F018          	movff	prodl,___flmul@temp
 10922  002192  CFF4 F019          	movff	prodh,___flmul@temp+1
 10923  002196  5018               	movf	___flmul@temp^0,w,c
 10924  002198  260E               	addwf	___flmul@grs^0,f,c
 10925  00219A  0E00               	movlw	0
 10926  00219C  220F               	addwfc	(___flmul@grs+1)^0,f,c
 10927  00219E  2210               	addwfc	(___flmul@grs+2)^0,f,c
 10928  0021A0  2211               	addwfc	(___flmul@grs+3)^0,f,c
 10929  0021A2  5019               	movf	(___flmul@temp+1)^0,w,c
 10930  0021A4  2614               	addwf	___flmul@prod^0,f,c
 10931  0021A6  0E00               	movlw	0
 10932  0021A8  2215               	addwfc	(___flmul@prod+1)^0,f,c
 10933  0021AA  2216               	addwfc	(___flmul@prod+2)^0,f,c
 10934  0021AC  2217               	addwfc	(___flmul@prod+3)^0,f,c
 10935  0021AE  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
 10936  0021B2  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
 10937  0021B6  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
 10938  0021BA  6A0E               	clrf	___flmul@grs^0,c
 10939  0021BC  5005               	movf	___flmul@a^0,w,c
 10940  0021BE  0202               	mulwf	(___flmul@b+1)^0,c
 10941  0021C0  CFF3 F018          	movff	prodl,___flmul@temp
 10942  0021C4  CFF4 F019          	movff	prodh,___flmul@temp+1
 10943  0021C8  5018               	movf	___flmul@temp^0,w,c
 10944  0021CA  260E               	addwf	___flmul@grs^0,f,c
 10945  0021CC  5019               	movf	(___flmul@temp+1)^0,w,c
 10946  0021CE  220F               	addwfc	(___flmul@grs+1)^0,f,c
 10947  0021D0  0E00               	movlw	0
 10948  0021D2  2210               	addwfc	(___flmul@grs+2)^0,f,c
 10949  0021D4  0E00               	movlw	0
 10950  0021D6  2211               	addwfc	(___flmul@grs+3)^0,f,c
 10951  0021D8  5006               	movf	(___flmul@a+1)^0,w,c
 10952  0021DA  0201               	mulwf	___flmul@b^0,c
 10953  0021DC  CFF3 F018          	movff	prodl,___flmul@temp
 10954  0021E0  CFF4 F019          	movff	prodh,___flmul@temp+1
 10955  0021E4  5018               	movf	___flmul@temp^0,w,c
 10956  0021E6  260E               	addwf	___flmul@grs^0,f,c
 10957  0021E8  5019               	movf	(___flmul@temp+1)^0,w,c
 10958  0021EA  220F               	addwfc	(___flmul@grs+1)^0,f,c
 10959  0021EC  0E00               	movlw	0
 10960  0021EE  2210               	addwfc	(___flmul@grs+2)^0,f,c
 10961  0021F0  0E00               	movlw	0
 10962  0021F2  2211               	addwfc	(___flmul@grs+3)^0,f,c
 10963  0021F4  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
 10964  0021F8  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
 10965  0021FC  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
 10966  002200  6A0E               	clrf	___flmul@grs^0,c
 10967  002202  5005               	movf	___flmul@a^0,w,c
 10968  002204  0201               	mulwf	___flmul@b^0,c
 10969  002206  CFF3 F018          	movff	prodl,___flmul@temp
 10970  00220A  CFF4 F019          	movff	prodh,___flmul@temp+1
 10971  00220E  5018               	movf	___flmul@temp^0,w,c
 10972  002210  260E               	addwf	___flmul@grs^0,f,c
 10973  002212  5019               	movf	(___flmul@temp+1)^0,w,c
 10974  002214  220F               	addwfc	(___flmul@grs+1)^0,f,c
 10975  002216  0E00               	movlw	0
 10976  002218  2210               	addwfc	(___flmul@grs+2)^0,f,c
 10977  00221A  0E00               	movlw	0
 10978  00221C  2211               	addwfc	(___flmul@grs+3)^0,f,c
 10979  00221E  5007               	movf	(___flmul@a+2)^0,w,c
 10980  002220  0202               	mulwf	(___flmul@b+1)^0,c
 10981  002222  CFF3 F018          	movff	prodl,___flmul@temp
 10982  002226  CFF4 F019          	movff	prodh,___flmul@temp+1
 10983  00222A  5018               	movf	___flmul@temp^0,w,c
 10984  00222C  2614               	addwf	___flmul@prod^0,f,c
 10985  00222E  5019               	movf	(___flmul@temp+1)^0,w,c
 10986  002230  2215               	addwfc	(___flmul@prod+1)^0,f,c
 10987  002232  0E00               	movlw	0
 10988  002234  2216               	addwfc	(___flmul@prod+2)^0,f,c
 10989  002236  0E00               	movlw	0
 10990  002238  2217               	addwfc	(___flmul@prod+3)^0,f,c
 10991  00223A  5006               	movf	(___flmul@a+1)^0,w,c
 10992  00223C  0203               	mulwf	(___flmul@b+2)^0,c
 10993  00223E  CFF3 F018          	movff	prodl,___flmul@temp
 10994  002242  CFF4 F019          	movff	prodh,___flmul@temp+1
 10995  002246  5018               	movf	___flmul@temp^0,w,c
 10996  002248  2614               	addwf	___flmul@prod^0,f,c
 10997  00224A  5019               	movf	(___flmul@temp+1)^0,w,c
 10998  00224C  2215               	addwfc	(___flmul@prod+1)^0,f,c
 10999  00224E  0E00               	movlw	0
 11000  002250  2216               	addwfc	(___flmul@prod+2)^0,f,c
 11001  002252  0E00               	movlw	0
 11002  002254  2217               	addwfc	(___flmul@prod+3)^0,f,c
 11003  002256  5007               	movf	(___flmul@a+2)^0,w,c
 11004  002258  0203               	mulwf	(___flmul@b+2)^0,c
 11005  00225A  CFF3 F018          	movff	prodl,___flmul@temp
 11006  00225E  CFF4 F019          	movff	prodh,___flmul@temp+1
 11007  002262  5018               	movf	___flmul@temp^0,w,c
 11008  002264  6E09               	movwf	??___flmul^0,c
 11009  002266  5019               	movf	(___flmul@temp+1)^0,w,c
 11010  002268  6E0A               	movwf	(??___flmul+1)^0,c
 11011  00226A  6A0B               	clrf	(??___flmul+2)^0,c
 11012  00226C  6A0C               	clrf	(??___flmul+3)^0,c
 11013  00226E  C00B  F00C         	movff	??___flmul+2,??___flmul+3
 11014  002272  C00A  F00B         	movff	??___flmul+1,??___flmul+2
 11015  002276  C009  F00A         	movff	??___flmul,??___flmul+1
 11016  00227A  6A09               	clrf	??___flmul^0,c
 11017  00227C  5009               	movf	??___flmul^0,w,c
 11018  00227E  2614               	addwf	___flmul@prod^0,f,c
 11019  002280  500A               	movf	(??___flmul+1)^0,w,c
 11020  002282  2215               	addwfc	(___flmul@prod+1)^0,f,c
 11021  002284  500B               	movf	(??___flmul+2)^0,w,c
 11022  002286  2216               	addwfc	(___flmul@prod+2)^0,f,c
 11023  002288  500C               	movf	(??___flmul+3)^0,w,c
 11024  00228A  2217               	addwfc	(___flmul@prod+3)^0,f,c
 11025  00228C  C00E  F009         	movff	___flmul@grs,??___flmul
 11026  002290  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
 11027  002294  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
 11028  002298  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
 11029  00229C  0E19               	movlw	25
 11030  00229E  EF57  F011         	goto	u4880
 11031  0022A2                     u4885:
 11032  0022A2  FFFF               	dw	65535	; assembler added errata NOP
 11033  0022A4  90D8               	bcf	status,0,c
 11034  0022A6  320C               	rrcf	(??___flmul+3)^0,f,c
 11035  0022A8  320B               	rrcf	(??___flmul+2)^0,f,c
 11036  0022AA  320A               	rrcf	(??___flmul+1)^0,f,c
 11037  0022AC  3209               	rrcf	??___flmul^0,f,c
 11038  0022AE                     u4880:
 11039  0022AE  FFFF               	dw	65535	; assembler added errata NOP
 11040  0022B0  2EE8               	decfsz	wreg,f,c
 11041  0022B2  EF51  F011         	goto	u4885
 11042  0022B6  5009               	movf	??___flmul^0,w,c
 11043  0022B8  2614               	addwf	___flmul@prod^0,f,c
 11044  0022BA  500A               	movf	(??___flmul+1)^0,w,c
 11045  0022BC  2215               	addwfc	(___flmul@prod+1)^0,f,c
 11046  0022BE  500B               	movf	(??___flmul+2)^0,w,c
 11047  0022C0  2216               	addwfc	(___flmul@prod+2)^0,f,c
 11048  0022C2  500C               	movf	(??___flmul+3)^0,w,c
 11049  0022C4  2217               	addwfc	(___flmul@prod+3)^0,f,c
 11050  0022C6  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
 11051  0022CA  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
 11052  0022CE  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
 11053  0022D2  6A0E               	clrf	___flmul@grs^0,c
 11054  0022D4  5012               	movf	___flmul@aexp^0,w,c
 11055  0022D6  C013  F009         	movff	___flmul@bexp,??___flmul
 11056  0022DA  6A0A               	clrf	(??___flmul+1)^0,c
 11057  0022DC  2609               	addwf	??___flmul^0,f,c
 11058  0022DE  0E00               	movlw	0
 11059  0022E0  220A               	addwfc	(??___flmul+1)^0,f,c
 11060  0022E2  0E82               	movlw	130
 11061  0022E4  2409               	addwf	??___flmul^0,w,c
 11062  0022E6  6E18               	movwf	___flmul@temp^0,c
 11063  0022E8  0EFF               	movlw	255
 11064  0022EA  200A               	addwfc	(??___flmul+1)^0,w,c
 11065  0022EC  6E19               	movwf	(___flmul@temp+1)^0,c
 11066  0022EE  EF92  F011         	goto	l4083
 11067  0022F2                     l4077:
 11068  0022F2  FFFF               	dw	65535	; assembler added errata NOP
 11069  0022F4  90D8               	bcf	status,0,c
 11070  0022F6  3614               	rlcf	___flmul@prod^0,f,c
 11071  0022F8  3615               	rlcf	(___flmul@prod+1)^0,f,c
 11072  0022FA  3616               	rlcf	(___flmul@prod+2)^0,f,c
 11073  0022FC  3617               	rlcf	(___flmul@prod+3)^0,f,c
 11074  0022FE  AE11               	btfss	(___flmul@grs+3)^0,7,c
 11075  002300  EF84  F011         	goto	u4891
 11076  002304  EF87  F011         	goto	u4890
 11077  002308                     u4891:
 11078  002308  FFFF               	dw	65535	; assembler added errata NOP
 11079  00230A  EF89  F011         	goto	l806
 11080  00230E                     u4890:
 11081  00230E  FFFF               	dw	65535	; assembler added errata NOP
 11082  002310  8014               	bsf	___flmul@prod^0,0,c
 11083  002312                     l806:
 11084  002312  FFFF               	dw	65535	; assembler added errata NOP
 11085  002314  90D8               	bcf	status,0,c
 11086  002316  360E               	rlcf	___flmul@grs^0,f,c
 11087  002318  360F               	rlcf	(___flmul@grs+1)^0,f,c
 11088  00231A  3610               	rlcf	(___flmul@grs+2)^0,f,c
 11089  00231C  3611               	rlcf	(___flmul@grs+3)^0,f,c
 11090  00231E  0618               	decf	___flmul@temp^0,f,c
 11091  002320  A0D8               	btfss	status,0,c
 11092  002322  0619               	decf	(___flmul@temp+1)^0,f,c
 11093  002324                     l4083:
 11094  002324  FFFF               	dw	65535	; assembler added errata NOP
 11095  002326  AE16               	btfss	(___flmul@prod+2)^0,7,c
 11096  002328  EF98  F011         	goto	u4901
 11097  00232C  EF9B  F011         	goto	u4900
 11098  002330                     u4901:
 11099  002330  FFFF               	dw	65535	; assembler added errata NOP
 11100  002332  EF79  F011         	goto	l4077
 11101  002336                     u4900:
 11102  002336  FFFF               	dw	65535	; assembler added errata NOP
 11103  002338  0E00               	movlw	0
 11104  00233A  6E12               	movwf	___flmul@aexp^0,c
 11105  00233C  AE11               	btfss	(___flmul@grs+3)^0,7,c
 11106  00233E  EFA3  F011         	goto	u4911
 11107  002342  EFA6  F011         	goto	u4910
 11108  002346                     u4911:
 11109  002346  FFFF               	dw	65535	; assembler added errata NOP
 11110  002348  EFD1  F011         	goto	l808
 11111  00234C                     u4910:
 11112  00234C  FFFF               	dw	65535	; assembler added errata NOP
 11113  00234E  0EFF               	movlw	255
 11114  002350  140E               	andwf	___flmul@grs^0,w,c
 11115  002352  6E09               	movwf	??___flmul^0,c
 11116  002354  0EFF               	movlw	255
 11117  002356  140F               	andwf	(___flmul@grs+1)^0,w,c
 11118  002358  6E0A               	movwf	(??___flmul+1)^0,c
 11119  00235A  0EFF               	movlw	255
 11120  00235C  1410               	andwf	(___flmul@grs+2)^0,w,c
 11121  00235E  6E0B               	movwf	(??___flmul+2)^0,c
 11122  002360  0E7F               	movlw	127
 11123  002362  1411               	andwf	(___flmul@grs+3)^0,w,c
 11124  002364  6E0C               	movwf	(??___flmul+3)^0,c
 11125  002366  5009               	movf	??___flmul^0,w,c
 11126  002368  100A               	iorwf	(??___flmul+1)^0,w,c
 11127  00236A  100B               	iorwf	(??___flmul+2)^0,w,c
 11128  00236C  100C               	iorwf	(??___flmul+3)^0,w,c
 11129  00236E  B4D8               	btfsc	status,2,c
 11130  002370  EFBC  F011         	goto	u4921
 11131  002374  EFBF  F011         	goto	u4920
 11132  002378                     u4921:
 11133  002378  FFFF               	dw	65535	; assembler added errata NOP
 11134  00237A  EFC5  F011         	goto	l809
 11135  00237E                     u4920:
 11136  00237E  FFFF               	dw	65535	; assembler added errata NOP
 11137  002380                     l4091:
 11138  002380  FFFF               	dw	65535	; assembler added errata NOP
 11139  002382  0E01               	movlw	1
 11140  002384  6E12               	movwf	___flmul@aexp^0,c
 11141  002386  EFD1  F011         	goto	l808
 11142  00238A                     l809:
 11143  00238A  FFFF               	dw	65535	; assembler added errata NOP
 11144  00238C  A014               	btfss	___flmul@prod^0,0,c
 11145  00238E  EFCB  F011         	goto	u4931
 11146  002392  EFCE  F011         	goto	u4930
 11147  002396                     u4931:
 11148  002396  FFFF               	dw	65535	; assembler added errata NOP
 11149  002398  EFD1  F011         	goto	l808
 11150  00239C                     u4930:
 11151  00239C  FFFF               	dw	65535	; assembler added errata NOP
 11152  00239E  EFC0  F011         	goto	l4091
 11153  0023A2                     l808:
 11154  0023A2  FFFF               	dw	65535	; assembler added errata NOP
 11155  0023A4  5012               	movf	___flmul@aexp^0,w,c
 11156  0023A6  B4D8               	btfsc	status,2,c
 11157  0023A8  EFD8  F011         	goto	u4941
 11158  0023AC  EFDB  F011         	goto	u4940
 11159  0023B0                     u4941:
 11160  0023B0  FFFF               	dw	65535	; assembler added errata NOP
 11161  0023B2  EF02  F012         	goto	l4103
 11162  0023B6                     u4940:
 11163  0023B6  FFFF               	dw	65535	; assembler added errata NOP
 11164  0023B8  0E01               	movlw	1
 11165  0023BA  2614               	addwf	___flmul@prod^0,f,c
 11166  0023BC  0E00               	movlw	0
 11167  0023BE  2215               	addwfc	(___flmul@prod+1)^0,f,c
 11168  0023C0  2216               	addwfc	(___flmul@prod+2)^0,f,c
 11169  0023C2  2217               	addwfc	(___flmul@prod+3)^0,f,c
 11170  0023C4  A017               	btfss	(___flmul@prod+3)^0,0,c
 11171  0023C6  EFE7  F011         	goto	u4951
 11172  0023CA  EFEA  F011         	goto	u4950
 11173  0023CE                     u4951:
 11174  0023CE  FFFF               	dw	65535	; assembler added errata NOP
 11175  0023D0  EF02  F012         	goto	l4103
 11176  0023D4                     u4950:
 11177  0023D4  FFFF               	dw	65535	; assembler added errata NOP
 11178  0023D6  C014  F009         	movff	___flmul@prod,??___flmul
 11179  0023DA  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
 11180  0023DE  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
 11181  0023E2  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
 11182  0023E6  340C               	rlcf	(??___flmul+3)^0,w,c
 11183  0023E8  320C               	rrcf	(??___flmul+3)^0,f,c
 11184  0023EA  320B               	rrcf	(??___flmul+2)^0,f,c
 11185  0023EC  320A               	rrcf	(??___flmul+1)^0,f,c
 11186  0023EE  3209               	rrcf	??___flmul^0,f,c
 11187  0023F0  C009  F014         	movff	??___flmul,___flmul@prod
 11188  0023F4  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
 11189  0023F8  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
 11190  0023FC  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
 11191  002400  4A18               	infsnz	___flmul@temp^0,f,c
 11192  002402  2A19               	incf	(___flmul@temp+1)^0,f,c
 11193  002404                     l4103:
 11194  002404  FFFF               	dw	65535	; assembler added errata NOP
 11195  002406  BE19               	btfsc	(___flmul@temp+1)^0,7,c
 11196  002408  EF0E  F012         	goto	u4961
 11197  00240C  5019               	movf	(___flmul@temp+1)^0,w,c
 11198  00240E  E109               	bnz	u4960
 11199  002410  2818               	incf	___flmul@temp^0,w,c
 11200  002412  A0D8               	btfss	status,0,c
 11201  002414  EF0E  F012         	goto	u4961
 11202  002418  EF11  F012         	goto	u4960
 11203  00241C                     u4961:
 11204  00241C  FFFF               	dw	65535	; assembler added errata NOP
 11205  00241E  EF1C  F012         	goto	l4107
 11206  002422                     u4960:
 11207  002422  FFFF               	dw	65535	; assembler added errata NOP
 11208  002424  0E00               	movlw	0
 11209  002426  6E14               	movwf	___flmul@prod^0,c
 11210  002428  0E00               	movlw	0
 11211  00242A  6E15               	movwf	(___flmul@prod+1)^0,c
 11212  00242C  0E80               	movlw	128
 11213  00242E  6E16               	movwf	(___flmul@prod+2)^0,c
 11214  002430  0E7F               	movlw	127
 11215  002432  6E17               	movwf	(___flmul@prod+3)^0,c
 11216  002434  EF51  F012         	goto	l4119
 11217  002438                     l4107:
 11218  002438  FFFF               	dw	65535	; assembler added errata NOP
 11219  00243A  BE19               	btfsc	(___flmul@temp+1)^0,7,c
 11220  00243C  EF2B  F012         	goto	u4970
 11221  002440  5019               	movf	(___flmul@temp+1)^0,w,c
 11222  002442  E106               	bnz	u4971
 11223  002444  0418               	decf	___flmul@temp^0,w,c
 11224  002446  B0D8               	btfsc	status,0,c
 11225  002448  EF28  F012         	goto	u4971
 11226  00244C  EF2B  F012         	goto	u4970
 11227  002450                     u4971:
 11228  002450  FFFF               	dw	65535	; assembler added errata NOP
 11229  002452  EF38  F012         	goto	l816
 11230  002456                     u4970:
 11231  002456  FFFF               	dw	65535	; assembler added errata NOP
 11232  002458  0E00               	movlw	0
 11233  00245A  6E14               	movwf	___flmul@prod^0,c
 11234  00245C  0E00               	movlw	0
 11235  00245E  6E15               	movwf	(___flmul@prod+1)^0,c
 11236  002460  0E00               	movlw	0
 11237  002462  6E16               	movwf	(___flmul@prod+2)^0,c
 11238  002464  0E00               	movlw	0
 11239  002466  6E17               	movwf	(___flmul@prod+3)^0,c
 11240  002468  0E00               	movlw	0
 11241  00246A  6E0D               	movwf	___flmul@sign^0,c
 11242  00246C  EF51  F012         	goto	l4119
 11243  002470                     l816:
 11244  002470  FFFF               	dw	65535	; assembler added errata NOP
 11245  002472  C018  F013         	movff	___flmul@temp,___flmul@bexp
 11246  002476  0EFF               	movlw	255
 11247  002478  1614               	andwf	___flmul@prod^0,f,c
 11248  00247A  0EFF               	movlw	255
 11249  00247C  1615               	andwf	(___flmul@prod+1)^0,f,c
 11250  00247E  0E7F               	movlw	127
 11251  002480  1616               	andwf	(___flmul@prod+2)^0,f,c
 11252  002482  0E00               	movlw	0
 11253  002484  1617               	andwf	(___flmul@prod+3)^0,f,c
 11254  002486  A013               	btfss	___flmul@bexp^0,0,c
 11255  002488  EF48  F012         	goto	u4981
 11256  00248C  EF4B  F012         	goto	u4980
 11257  002490                     u4981:
 11258  002490  FFFF               	dw	65535	; assembler added errata NOP
 11259  002492  EF4D  F012         	goto	l4117
 11260  002496                     u4980:
 11261  002496  FFFF               	dw	65535	; assembler added errata NOP
 11262  002498  8E16               	bsf	(___flmul@prod+2)^0,7,c
 11263  00249A                     l4117:
 11264  00249A  FFFF               	dw	65535	; assembler added errata NOP
 11265  00249C  90D8               	bcf	status,0,c
 11266  00249E  3013               	rrcf	___flmul@bexp^0,w,c
 11267  0024A0  6E17               	movwf	(___flmul@prod+3)^0,c
 11268  0024A2                     l4119:
 11269  0024A2  FFFF               	dw	65535	; assembler added errata NOP
 11270  0024A4  500D               	movf	___flmul@sign^0,w,c
 11271  0024A6  1217               	iorwf	(___flmul@prod+3)^0,f,c
 11272  0024A8  C014  F001         	movff	___flmul@prod,?___flmul
 11273  0024AC  C015  F002         	movff	___flmul@prod+1,?___flmul+1
 11274  0024B0  C016  F003         	movff	___flmul@prod+2,?___flmul+2
 11275  0024B4  C017  F004         	movff	___flmul@prod+3,?___flmul+3
 11276  0024B8                     l803:
 11277  0024B8  FFFF               	dw	65535	; assembler added errata NOP
 11278  0024BA  0012               	return		;funcret
 11279  0024BC  FFFF               	dw	65535	; errata NOP
 11280  0024BE                     __end_of___flmul:
 11281                           	callstack 0
 11282                           
 11283 ;; *************** function ___flge *****************
 11284 ;; Defined at:
 11285 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 11286 ;; Parameters:    Size  Location     Type
 11287 ;;  ff1             4    0[COMRAM] unsigned char 
 11288 ;;  ff2             4    4[COMRAM] unsigned char 
 11289 ;; Auto vars:     Size  Location     Type
 11290 ;;		None
 11291 ;; Return value:  Size  Location     Type
 11292 ;;		None               void
 11293 ;; Registers used:
 11294 ;;		wreg, status,2, status,0
 11295 ;; Tracked objects:
 11296 ;;		On entry : 0/0
 11297 ;;		On exit  : 0/0
 11298 ;;		Unchanged: 0/0
 11299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11300 ;;      Params:         8       0       0       0       0       0       0
 11301 ;;      Locals:         0       0       0       0       0       0       0
 11302 ;;      Temps:          4       0       0       0       0       0       0
 11303 ;;      Totals:        12       0       0       0       0       0       0
 11304 ;;Total ram usage:       12 bytes
 11305 ;; Hardware stack levels used:    1
 11306 ;; Hardware stack levels required when called:    1
 11307 ;; This function calls:
 11308 ;;		Nothing
 11309 ;; This function is called by:
 11310 ;;		_roundf
 11311 ;; This function uses a non-reentrant model
 11312 ;;
 11313                           
 11314                           	psect	text46
 11315  003E78                     __ptext46:
 11316                           	callstack 0
 11317  003E78                     ___flge:
 11318                           	callstack 0
 11319  003E78  FFFF               	dw	65535	; assembler added errata NOP
 11320  003E7A  0E00               	movlw	0
 11321  003E7C  1401               	andwf	___flge@ff1^0,w,c
 11322  003E7E  6E09               	movwf	??___flge^0,c
 11323  003E80  0E00               	movlw	0
 11324  003E82  1402               	andwf	(___flge@ff1+1)^0,w,c
 11325  003E84  6E0A               	movwf	(??___flge+1)^0,c
 11326  003E86  0E80               	movlw	128
 11327  003E88  1403               	andwf	(___flge@ff1+2)^0,w,c
 11328  003E8A  6E0B               	movwf	(??___flge+2)^0,c
 11329  003E8C  0E7F               	movlw	127
 11330  003E8E  1404               	andwf	(___flge@ff1+3)^0,w,c
 11331  003E90  6E0C               	movwf	(??___flge+3)^0,c
 11332  003E92  5009               	movf	??___flge^0,w,c
 11333  003E94  100A               	iorwf	(??___flge+1)^0,w,c
 11334  003E96  100B               	iorwf	(??___flge+2)^0,w,c
 11335  003E98  100C               	iorwf	(??___flge+3)^0,w,c
 11336  003E9A  A4D8               	btfss	status,2,c
 11337  003E9C  EF52  F01F         	goto	u4991
 11338  003EA0  EF55  F01F         	goto	u4990
 11339  003EA4                     u4991:
 11340  003EA4  FFFF               	dw	65535	; assembler added errata NOP
 11341  003EA6  EF5E  F01F         	goto	l4135
 11342  003EAA                     u4990:
 11343  003EAA  FFFF               	dw	65535	; assembler added errata NOP
 11344  003EAC  0E00               	movlw	0
 11345  003EAE  6E01               	movwf	___flge@ff1^0,c
 11346  003EB0  0E00               	movlw	0
 11347  003EB2  6E02               	movwf	(___flge@ff1+1)^0,c
 11348  003EB4  0E00               	movlw	0
 11349  003EB6  6E03               	movwf	(___flge@ff1+2)^0,c
 11350  003EB8  0E00               	movlw	0
 11351  003EBA  6E04               	movwf	(___flge@ff1+3)^0,c
 11352  003EBC                     l4135:
 11353  003EBC  FFFF               	dw	65535	; assembler added errata NOP
 11354  003EBE  0E00               	movlw	0
 11355  003EC0  1405               	andwf	___flge@ff2^0,w,c
 11356  003EC2  6E09               	movwf	??___flge^0,c
 11357  003EC4  0E00               	movlw	0
 11358  003EC6  1406               	andwf	(___flge@ff2+1)^0,w,c
 11359  003EC8  6E0A               	movwf	(??___flge+1)^0,c
 11360  003ECA  0E80               	movlw	128
 11361  003ECC  1407               	andwf	(___flge@ff2+2)^0,w,c
 11362  003ECE  6E0B               	movwf	(??___flge+2)^0,c
 11363  003ED0  0E7F               	movlw	127
 11364  003ED2  1408               	andwf	(___flge@ff2+3)^0,w,c
 11365  003ED4  6E0C               	movwf	(??___flge+3)^0,c
 11366  003ED6  5009               	movf	??___flge^0,w,c
 11367  003ED8  100A               	iorwf	(??___flge+1)^0,w,c
 11368  003EDA  100B               	iorwf	(??___flge+2)^0,w,c
 11369  003EDC  100C               	iorwf	(??___flge+3)^0,w,c
 11370  003EDE  A4D8               	btfss	status,2,c
 11371  003EE0  EF74  F01F         	goto	u5001
 11372  003EE4  EF77  F01F         	goto	u5000
 11373  003EE8                     u5001:
 11374  003EE8  FFFF               	dw	65535	; assembler added errata NOP
 11375  003EEA  EF80  F01F         	goto	l4139
 11376  003EEE                     u5000:
 11377  003EEE  FFFF               	dw	65535	; assembler added errata NOP
 11378  003EF0  0E00               	movlw	0
 11379  003EF2  6E05               	movwf	___flge@ff2^0,c
 11380  003EF4  0E00               	movlw	0
 11381  003EF6  6E06               	movwf	(___flge@ff2+1)^0,c
 11382  003EF8  0E00               	movlw	0
 11383  003EFA  6E07               	movwf	(___flge@ff2+2)^0,c
 11384  003EFC  0E00               	movlw	0
 11385  003EFE  6E08               	movwf	(___flge@ff2+3)^0,c
 11386  003F00                     l4139:
 11387  003F00  FFFF               	dw	65535	; assembler added errata NOP
 11388  003F02  AE04               	btfss	(___flge@ff1+3)^0,7,c
 11389  003F04  EF86  F01F         	goto	u5011
 11390  003F08  EF89  F01F         	goto	u5010
 11391  003F0C                     u5011:
 11392  003F0C  FFFF               	dw	65535	; assembler added errata NOP
 11393  003F0E  EF93  F01F         	goto	l4143
 11394  003F12                     u5010:
 11395  003F12  FFFF               	dw	65535	; assembler added errata NOP
 11396  003F14  6C01               	negf	___flge@ff1^0,c
 11397  003F16  1E02               	comf	(___flge@ff1+1)^0,f,c
 11398  003F18  B0D8               	btfsc	status,0,c
 11399  003F1A  2A02               	incf	(___flge@ff1+1)^0,f,c
 11400  003F1C  1E03               	comf	(___flge@ff1+2)^0,f,c
 11401  003F1E  B0D8               	btfsc	status,0,c
 11402  003F20  2A03               	incf	(___flge@ff1+2)^0,f,c
 11403  003F22  0E80               	movlw	128
 11404  003F24  5604               	subfwb	(___flge@ff1+3)^0,f,c
 11405  003F26                     l4143:
 11406  003F26  FFFF               	dw	65535	; assembler added errata NOP
 11407  003F28  AE08               	btfss	(___flge@ff2+3)^0,7,c
 11408  003F2A  EF99  F01F         	goto	u5021
 11409  003F2E  EF9C  F01F         	goto	u5020
 11410  003F32                     u5021:
 11411  003F32  FFFF               	dw	65535	; assembler added errata NOP
 11412  003F34  EFA6  F01F         	goto	l450
 11413  003F38                     u5020:
 11414  003F38  FFFF               	dw	65535	; assembler added errata NOP
 11415  003F3A  6C05               	negf	___flge@ff2^0,c
 11416  003F3C  1E06               	comf	(___flge@ff2+1)^0,f,c
 11417  003F3E  B0D8               	btfsc	status,0,c
 11418  003F40  2A06               	incf	(___flge@ff2+1)^0,f,c
 11419  003F42  1E07               	comf	(___flge@ff2+2)^0,f,c
 11420  003F44  B0D8               	btfsc	status,0,c
 11421  003F46  2A07               	incf	(___flge@ff2+2)^0,f,c
 11422  003F48  0E80               	movlw	128
 11423  003F4A  5608               	subfwb	(___flge@ff2+3)^0,f,c
 11424  003F4C                     l450:
 11425  003F4C  FFFF               	dw	65535	; assembler added errata NOP
 11426  003F4E  0E00               	movlw	0
 11427  003F50  1A01               	xorwf	___flge@ff1^0,f,c
 11428  003F52  0E00               	movlw	0
 11429  003F54  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 11430  003F56  0E00               	movlw	0
 11431  003F58  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 11432  003F5A  0E80               	movlw	128
 11433  003F5C  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 11434  003F5E  0E00               	movlw	0
 11435  003F60  1A05               	xorwf	___flge@ff2^0,f,c
 11436  003F62  0E00               	movlw	0
 11437  003F64  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 11438  003F66  0E00               	movlw	0
 11439  003F68  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 11440  003F6A  0E80               	movlw	128
 11441  003F6C  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 11442  003F6E  5005               	movf	___flge@ff2^0,w,c
 11443  003F70  5C01               	subwf	___flge@ff1^0,w,c
 11444  003F72  5006               	movf	(___flge@ff2+1)^0,w,c
 11445  003F74  5802               	subwfb	(___flge@ff1+1)^0,w,c
 11446  003F76  5007               	movf	(___flge@ff2+2)^0,w,c
 11447  003F78  5803               	subwfb	(___flge@ff1+2)^0,w,c
 11448  003F7A  5008               	movf	(___flge@ff2+3)^0,w,c
 11449  003F7C  5804               	subwfb	(___flge@ff1+3)^0,w,c
 11450  003F7E  B0D8               	btfsc	status,0,c
 11451  003F80  EFC4  F01F         	goto	u5031
 11452  003F84  EFC7  F01F         	goto	u5030
 11453  003F88                     u5031:
 11454  003F88  FFFF               	dw	65535	; assembler added errata NOP
 11455  003F8A  EFCB  F01F         	goto	l4149
 11456  003F8E                     u5030:
 11457  003F8E  FFFF               	dw	65535	; assembler added errata NOP
 11458  003F90  90D8               	bcf	status,0,c
 11459  003F92  EFCD  F01F         	goto	l455
 11460  003F96                     l4149:
 11461  003F96  FFFF               	dw	65535	; assembler added errata NOP
 11462  003F98  80D8               	bsf	status,0,c
 11463  003F9A                     l455:
 11464  003F9A  FFFF               	dw	65535	; assembler added errata NOP
 11465  003F9C  0012               	return		;funcret
 11466  003F9E  FFFF               	dw	65535	; errata NOP
 11467  003FA0                     __end_of___flge:
 11468                           	callstack 0
 11469                           
 11470 ;; *************** function ___fltol *****************
 11471 ;; Defined at:
 11472 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
 11473 ;; Parameters:    Size  Location     Type
 11474 ;;  f1              4   51[COMRAM] unsigned char 
 11475 ;; Auto vars:     Size  Location     Type
 11476 ;;  exp1            1   60[COMRAM] unsigned char 
 11477 ;;  sign1           1   59[COMRAM] unsigned char 
 11478 ;; Return value:  Size  Location     Type
 11479 ;;                  4   51[COMRAM] long 
 11480 ;; Registers used:
 11481 ;;		wreg, status,2, status,0
 11482 ;; Tracked objects:
 11483 ;;		On entry : 0/0
 11484 ;;		On exit  : 0/0
 11485 ;;		Unchanged: 0/0
 11486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11487 ;;      Params:         4       0       0       0       0       0       0
 11488 ;;      Locals:         2       0       0       0       0       0       0
 11489 ;;      Temps:          4       0       0       0       0       0       0
 11490 ;;      Totals:        10       0       0       0       0       0       0
 11491 ;;Total ram usage:       10 bytes
 11492 ;; Hardware stack levels used:    1
 11493 ;; Hardware stack levels required when called:    1
 11494 ;; This function calls:
 11495 ;;		Nothing
 11496 ;; This function is called by:
 11497 ;;		_init_USART
 11498 ;; This function uses a non-reentrant model
 11499 ;;
 11500                           
 11501                           	psect	text47
 11502  003D42                     __ptext47:
 11503                           	callstack 0
 11504  003D42                     ___fltol:
 11505                           	callstack 0
 11506  003D42  FFFF               	dw	65535	; assembler added errata NOP
 11507  003D44  3436               	rlcf	(___fltol@f1+2)^0,w,c
 11508  003D46  3437               	rlcf	(___fltol@f1+3)^0,w,c
 11509  003D48  6E3D               	movwf	___fltol@exp1^0,c
 11510  003D4A  503D               	movf	___fltol@exp1^0,w,c
 11511  003D4C  A4D8               	btfss	status,2,c
 11512  003D4E  EFAB  F01E         	goto	u5161
 11513  003D52  EFAE  F01E         	goto	u5160
 11514  003D56                     u5161:
 11515  003D56  FFFF               	dw	65535	; assembler added errata NOP
 11516  003D58  EFBA  F01E         	goto	l4239
 11517  003D5C                     u5160:
 11518  003D5C  FFFF               	dw	65535	; assembler added errata NOP
 11519  003D5E                     l4235:
 11520  003D5E  FFFF               	dw	65535	; assembler added errata NOP
 11521  003D60  0E00               	movlw	0
 11522  003D62  6E34               	movwf	?___fltol^0,c
 11523  003D64  0E00               	movlw	0
 11524  003D66  6E35               	movwf	(?___fltol+1)^0,c
 11525  003D68  0E00               	movlw	0
 11526  003D6A  6E36               	movwf	(?___fltol+2)^0,c
 11527  003D6C  0E00               	movlw	0
 11528  003D6E  6E37               	movwf	(?___fltol+3)^0,c
 11529  003D70  EF39  F01F         	goto	l482
 11530  003D74                     l4239:
 11531  003D74  FFFF               	dw	65535	; assembler added errata NOP
 11532  003D76  C034  F038         	movff	___fltol@f1,??___fltol
 11533  003D7A  C035  F039         	movff	___fltol@f1+1,??___fltol+1
 11534  003D7E  C036  F03A         	movff	___fltol@f1+2,??___fltol+2
 11535  003D82  C037  F03B         	movff	___fltol@f1+3,??___fltol+3
 11536  003D86  0E20               	movlw	32
 11537  003D88  EFCC  F01E         	goto	u5170
 11538  003D8C                     u5175:
 11539  003D8C  FFFF               	dw	65535	; assembler added errata NOP
 11540  003D8E  90D8               	bcf	status,0,c
 11541  003D90  323B               	rrcf	(??___fltol+3)^0,f,c
 11542  003D92  323A               	rrcf	(??___fltol+2)^0,f,c
 11543  003D94  3239               	rrcf	(??___fltol+1)^0,f,c
 11544  003D96  3238               	rrcf	??___fltol^0,f,c
 11545  003D98                     u5170:
 11546  003D98  FFFF               	dw	65535	; assembler added errata NOP
 11547  003D9A  2EE8               	decfsz	wreg,f,c
 11548  003D9C  EFC6  F01E         	goto	u5175
 11549  003DA0  5038               	movf	??___fltol^0,w,c
 11550  003DA2  6E3C               	movwf	___fltol@sign1^0,c
 11551  003DA4  8E36               	bsf	(___fltol@f1+2)^0,7,c
 11552  003DA6  0EFF               	movlw	255
 11553  003DA8  1634               	andwf	___fltol@f1^0,f,c
 11554  003DAA  0EFF               	movlw	255
 11555  003DAC  1635               	andwf	(___fltol@f1+1)^0,f,c
 11556  003DAE  0EFF               	movlw	255
 11557  003DB0  1636               	andwf	(___fltol@f1+2)^0,f,c
 11558  003DB2  0E00               	movlw	0
 11559  003DB4  1637               	andwf	(___fltol@f1+3)^0,f,c
 11560  003DB6  0E96               	movlw	150
 11561  003DB8  5E3D               	subwf	___fltol@exp1^0,f,c
 11562  003DBA  BE3D               	btfsc	___fltol@exp1^0,7,c
 11563  003DBC  EFE5  F01E         	goto	u5180
 11564  003DC0  EFE2  F01E         	goto	u5181
 11565  003DC4                     u5181:
 11566  003DC4  FFFF               	dw	65535	; assembler added errata NOP
 11567  003DC6  EFFF  F01E         	goto	l4259
 11568  003DCA                     u5180:
 11569  003DCA  FFFF               	dw	65535	; assembler added errata NOP
 11570  003DCC  503D               	movf	___fltol@exp1^0,w,c
 11571  003DCE  0A80               	xorlw	128
 11572  003DD0  0F97               	addlw	151
 11573  003DD2  B0D8               	btfsc	status,0,c
 11574  003DD4  EFEE  F01E         	goto	u5191
 11575  003DD8  EFF1  F01E         	goto	u5190
 11576  003DDC                     u5191:
 11577  003DDC  FFFF               	dw	65535	; assembler added errata NOP
 11578  003DDE  EFF4  F01E         	goto	l4255
 11579  003DE2                     u5190:
 11580  003DE2  FFFF               	dw	65535	; assembler added errata NOP
 11581  003DE4  EFAF  F01E         	goto	l4235
 11582  003DE8                     l4255:
 11583  003DE8  FFFF               	dw	65535	; assembler added errata NOP
 11584  003DEA  90D8               	bcf	status,0,c
 11585  003DEC  3237               	rrcf	(___fltol@f1+3)^0,f,c
 11586  003DEE  3236               	rrcf	(___fltol@f1+2)^0,f,c
 11587  003DF0  3235               	rrcf	(___fltol@f1+1)^0,f,c
 11588  003DF2  3234               	rrcf	___fltol@f1^0,f,c
 11589  003DF4  3E3D               	incfsz	___fltol@exp1^0,f,c
 11590  003DF6  EFF4  F01E         	goto	l4255
 11591  003DFA  EF1D  F01F         	goto	l4269
 11592  003DFE                     l4259:
 11593  003DFE  FFFF               	dw	65535	; assembler added errata NOP
 11594  003E00  0E1F               	movlw	31
 11595  003E02  643D               	cpfsgt	___fltol@exp1^0,c
 11596  003E04  EF06  F01F         	goto	u5201
 11597  003E08  EF09  F01F         	goto	u5200
 11598  003E0C                     u5201:
 11599  003E0C  FFFF               	dw	65535	; assembler added errata NOP
 11600  003E0E  EF13  F01F         	goto	l4267
 11601  003E12                     u5200:
 11602  003E12  FFFF               	dw	65535	; assembler added errata NOP
 11603  003E14  EFAF  F01E         	goto	l4235
 11604  003E18                     l4265:
 11605  003E18  FFFF               	dw	65535	; assembler added errata NOP
 11606  003E1A  90D8               	bcf	status,0,c
 11607  003E1C  3634               	rlcf	___fltol@f1^0,f,c
 11608  003E1E  3635               	rlcf	(___fltol@f1+1)^0,f,c
 11609  003E20  3636               	rlcf	(___fltol@f1+2)^0,f,c
 11610  003E22  3637               	rlcf	(___fltol@f1+3)^0,f,c
 11611  003E24  063D               	decf	___fltol@exp1^0,f,c
 11612  003E26                     l4267:
 11613  003E26  FFFF               	dw	65535	; assembler added errata NOP
 11614  003E28  503D               	movf	___fltol@exp1^0,w,c
 11615  003E2A  A4D8               	btfss	status,2,c
 11616  003E2C  EF1A  F01F         	goto	u5211
 11617  003E30  EF1D  F01F         	goto	u5210
 11618  003E34                     u5211:
 11619  003E34  FFFF               	dw	65535	; assembler added errata NOP
 11620  003E36  EF0C  F01F         	goto	l4265
 11621  003E3A                     u5210:
 11622  003E3A                     l4269:
 11623  003E3A  FFFF               	dw	65535	; assembler added errata NOP
 11624  003E3C  503C               	movf	___fltol@sign1^0,w,c
 11625  003E3E  B4D8               	btfsc	status,2,c
 11626  003E40  EF24  F01F         	goto	u5221
 11627  003E44  EF27  F01F         	goto	u5220
 11628  003E48                     u5221:
 11629  003E48  FFFF               	dw	65535	; assembler added errata NOP
 11630  003E4A  EF30  F01F         	goto	l4273
 11631  003E4E                     u5220:
 11632  003E4E  FFFF               	dw	65535	; assembler added errata NOP
 11633  003E50  1E37               	comf	(___fltol@f1+3)^0,f,c
 11634  003E52  1E36               	comf	(___fltol@f1+2)^0,f,c
 11635  003E54  1E35               	comf	(___fltol@f1+1)^0,f,c
 11636  003E56  6C34               	negf	___fltol@f1^0,c
 11637  003E58  0E00               	movlw	0
 11638  003E5A  2235               	addwfc	(___fltol@f1+1)^0,f,c
 11639  003E5C  2236               	addwfc	(___fltol@f1+2)^0,f,c
 11640  003E5E  2237               	addwfc	(___fltol@f1+3)^0,f,c
 11641  003E60                     l4273:
 11642  003E60  FFFF               	dw	65535	; assembler added errata NOP
 11643  003E62  C034  F034         	movff	___fltol@f1,?___fltol
 11644  003E66  C035  F035         	movff	___fltol@f1+1,?___fltol+1
 11645  003E6A  C036  F036         	movff	___fltol@f1+2,?___fltol+2
 11646  003E6E  C037  F037         	movff	___fltol@f1+3,?___fltol+3
 11647  003E72                     l482:
 11648  003E72  FFFF               	dw	65535	; assembler added errata NOP
 11649  003E74  0012               	return		;funcret
 11650  003E76  FFFF               	dw	65535	; errata NOP
 11651  003E78                     __end_of___fltol:
 11652                           	callstack 0
 11653                           
 11654 ;; *************** function _init_PORTS *****************
 11655 ;; Defined at:
 11656 ;;		line 61 in file "init_PIC.c"
 11657 ;; Parameters:    Size  Location     Type
 11658 ;;		None
 11659 ;; Auto vars:     Size  Location     Type
 11660 ;;		None
 11661 ;; Return value:  Size  Location     Type
 11662 ;;                  1    wreg      void 
 11663 ;; Registers used:
 11664 ;;		wreg, status,2
 11665 ;; Tracked objects:
 11666 ;;		On entry : 0/0
 11667 ;;		On exit  : 0/0
 11668 ;;		Unchanged: 0/0
 11669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11670 ;;      Params:         0       0       0       0       0       0       0
 11671 ;;      Locals:         0       0       0       0       0       0       0
 11672 ;;      Temps:          0       0       0       0       0       0       0
 11673 ;;      Totals:         0       0       0       0       0       0       0
 11674 ;;Total ram usage:        0 bytes
 11675 ;; Hardware stack levels used:    1
 11676 ;; Hardware stack levels required when called:    1
 11677 ;; This function calls:
 11678 ;;		Nothing
 11679 ;; This function is called by:
 11680 ;;		_main
 11681 ;; This function uses a non-reentrant model
 11682 ;;
 11683                           
 11684                           	psect	text48
 11685  007900                     __ptext48:
 11686                           	callstack 0
 11687  007900                     _init_PORTS:
 11688                           	callstack 0
 11689  007900  FFFF               	dw	65535	; assembler added errata NOP
 11690  007902                     
 11691                           ;init_PIC.c: 63:     LATB = 0;
 11692  007902  0E00               	movlw	0
 11693  007904  6E8A               	movwf	138,c	;volatile
 11694                           
 11695                           ;init_PIC.c: 64:     PORTB = 0;
 11696  007906  0E00               	movlw	0
 11697  007908  6E81               	movwf	129,c	;volatile
 11698                           
 11699                           ;init_PIC.c: 65:     TRISB = 0xF0;
 11700  00790A  0EF0               	movlw	240
 11701  00790C  6E93               	movwf	147,c	;volatile
 11702                           
 11703                           ;init_PIC.c: 68:     LATC = 0;
 11704  00790E  0E00               	movlw	0
 11705  007910  6E8B               	movwf	139,c	;volatile
 11706                           
 11707                           ;init_PIC.c: 69:     PORTC = 0;
 11708  007912  0E00               	movlw	0
 11709  007914  6E82               	movwf	130,c	;volatile
 11710  007916                     
 11711                           ;init_PIC.c: 70:     TRISCbits.RC7 = 1;
 11712  007916  8E94               	bsf	148,7,c	;volatile
 11713  007918                     
 11714                           ;init_PIC.c: 71:     TRISCbits.RC6 = 0;
 11715  007918  9C94               	bcf	148,6,c	;volatile
 11716  00791A  0012               	return		;funcret
 11717  00791C  FFFF               	dw	65535	; errata NOP
 11718  00791E                     __end_of_init_PORTS:
 11719                           	callstack 0
 11720                           
 11721 ;; *************** function _get_reg_value *****************
 11722 ;; Defined at:
 11723 ;;		line 51 in file "serial_rs232.c"
 11724 ;; Parameters:    Size  Location     Type
 11725 ;;		None
 11726 ;; Auto vars:     Size  Location     Type
 11727 ;;  rx_char         1    0[COMRAM] unsigned char 
 11728 ;; Return value:  Size  Location     Type
 11729 ;;                  1    wreg      unsigned char 
 11730 ;; Registers used:
 11731 ;;		wreg, status,2
 11732 ;; Tracked objects:
 11733 ;;		On entry : 0/0
 11734 ;;		On exit  : 0/0
 11735 ;;		Unchanged: 0/0
 11736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11737 ;;      Params:         0       0       0       0       0       0       0
 11738 ;;      Locals:         1       0       0       0       0       0       0
 11739 ;;      Temps:          0       0       0       0       0       0       0
 11740 ;;      Totals:         1       0       0       0       0       0       0
 11741 ;;Total ram usage:        1 bytes
 11742 ;; Hardware stack levels used:    1
 11743 ;; Hardware stack levels required when called:    1
 11744 ;; This function calls:
 11745 ;;		Nothing
 11746 ;; This function is called by:
 11747 ;;		_main
 11748 ;; This function uses a non-reentrant model
 11749 ;;
 11750                           
 11751                           	psect	text49
 11752  0078F0                     __ptext49:
 11753                           	callstack 0
 11754  0078F0                     _get_reg_value:
 11755                           	callstack 0
 11756  0078F0  FFFF               	dw	65535	; assembler added errata NOP
 11757  0078F2                     
 11758                           ;serial_rs232.c: 52:     unsigned char rx_char = RCREG;
 11759  0078F2  CFAE F001          	movff	4014,get_reg_value@rx_char	;volatile
 11760  0078F6                     
 11761                           ;serial_rs232.c: 53:     RCREG = 0;
 11762  0078F6  0E00               	movlw	0
 11763  0078F8  6EAE               	movwf	174,c	;volatile
 11764                           
 11765                           ;serial_rs232.c: 54:     return rx_char;
 11766  0078FA  5001               	movf	get_reg_value@rx_char^0,w,c
 11767  0078FC  0012               	return		;funcret
 11768  0078FE  FFFF               	dw	65535	; errata NOP
 11769  007900                     __end_of_get_reg_value:
 11770                           	callstack 0
 11771                           
 11772 ;; *************** function _rx_char_usart *****************
 11773 ;; Defined at:
 11774 ;;		line 81 in file "main.c"
 11775 ;; Parameters:    Size  Location     Type
 11776 ;;		None
 11777 ;; Auto vars:     Size  Location     Type
 11778 ;;		None
 11779 ;; Return value:  Size  Location     Type
 11780 ;;                  1    wreg      void 
 11781 ;; Registers used:
 11782 ;;		wreg, status,2
 11783 ;; Tracked objects:
 11784 ;;		On entry : 0/0
 11785 ;;		On exit  : 0/0
 11786 ;;		Unchanged: 0/0
 11787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11788 ;;      Params:         0       0       0       0       0       0       0
 11789 ;;      Locals:         0       0       0       0       0       0       0
 11790 ;;      Temps:          0       0       0       0       0       0       0
 11791 ;;      Totals:         0       0       0       0       0       0       0
 11792 ;;Total ram usage:        0 bytes
 11793 ;; Hardware stack levels used:    1
 11794 ;; This function calls:
 11795 ;;		Nothing
 11796 ;; This function is called by:
 11797 ;;		Interrupt level 2
 11798 ;; This function uses a non-reentrant model
 11799 ;;
 11800                           
 11801                           	psect	intcode
 11802  000008                     __pintcode:
 11803                           	callstack 0
 11804  000008                     _rx_char_usart:
 11805                           	callstack 0
 11806  000008  FFFF               	dw	65535	; assembler added errata NOP
 11807                           
 11808                           ;incstack = 0
 11809  00000A  827E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11810  00000C                     
 11811                           ;main.c: 82:     if(PIE1bits.RCIE && PIR1bits.RCIF){
 11812  00000C  AA9D               	btfss	157,5,c	;volatile
 11813  00000E  EF0B  F000         	goto	i2u545_41
 11814  000012  EF0E  F000         	goto	i2u545_40
 11815  000016                     i2u545_41:
 11816  000016  FFFF               	dw	65535	; assembler added errata NOP
 11817  000018  EF1C  F000         	goto	i2l4515
 11818  00001C                     i2u545_40:
 11819  00001C  FFFF               	dw	65535	; assembler added errata NOP
 11820  00001E  AA9E               	btfss	158,5,c	;volatile
 11821  000020  EF14  F000         	goto	i2u546_41
 11822  000024  EF17  F000         	goto	i2u546_40
 11823  000028                     i2u546_41:
 11824  000028  FFFF               	dw	65535	; assembler added errata NOP
 11825  00002A  EF1C  F000         	goto	i2l4515
 11826  00002E                     i2u546_40:
 11827  00002E  FFFF               	dw	65535	; assembler added errata NOP
 11828  000030                     
 11829                           ;main.c: 83:         PIR1bits.RCIF = 0;
 11830  000030  9A9E               	bcf	158,5,c	;volatile
 11831  000032                     
 11832                           ;main.c: 84:         state_changed = 1;
 11833  000032  0E01               	movlw	1
 11834  000034  0101               	movlb	1	; () banked
 11835  000036  6FA4               	movwf	_state_changed& (0+255),b
 11836  000038                     i2l4515:
 11837  000038  FFFF               	dw	65535	; assembler added errata NOP
 11838                           
 11839                           ;main.c: 86:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF){
 11840  00003A  AAF2               	btfss	242,5,c	;volatile
 11841  00003C  EF22  F000         	goto	i2u547_41
 11842  000040  EF25  F000         	goto	i2u547_40
 11843  000044                     i2u547_41:
 11844  000044  FFFF               	dw	65535	; assembler added errata NOP
 11845  000046  EF35  F000         	goto	i2l108
 11846  00004A                     i2u547_40:
 11847  00004A  FFFF               	dw	65535	; assembler added errata NOP
 11848  00004C  A4F2               	btfss	242,2,c	;volatile
 11849  00004E  EF2B  F000         	goto	i2u548_41
 11850  000052  EF2E  F000         	goto	i2u548_40
 11851  000056                     i2u548_41:
 11852  000056  FFFF               	dw	65535	; assembler added errata NOP
 11853  000058  EF35  F000         	goto	i2l108
 11854  00005C                     i2u548_40:
 11855  00005C  FFFF               	dw	65535	; assembler added errata NOP
 11856  00005E                     
 11857                           ;main.c: 87:         T0CON = 0;
 11858  00005E  0E00               	movlw	0
 11859  000060  6ED5               	movwf	213,c	;volatile
 11860  000062                     
 11861                           ;main.c: 88:         INTCONbits.TMR0IF = 0;
 11862  000062  94F2               	bcf	242,2,c	;volatile
 11863                           
 11864                           ;main.c: 89:         timer_done = 1;
 11865  000064  0E01               	movlw	1
 11866  000066  0101               	movlb	1	; () banked
 11867  000068  6FA3               	movwf	_timer_done& (0+255),b
 11868  00006A                     i2l108:
 11869  00006A  FFFF               	dw	65535	; assembler added errata NOP
 11870  00006C  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11871  00006E  0011               	retfie		f
 11872  000070  FFFF               	dw	65535	; errata NOP
 11873  000072                     __end_of_rx_char_usart:
 11874                           	callstack 0
 11875                           
 11876                           	psect	rparam
 11877  0000                     
 11878                           	psect	temp
 11879  00007E                     btemp:
 11880                           	callstack 0
 11881  00007E                     	ds	1
 11882  0000                     int$flags	set	btemp
 11883  0000                     wtemp8	set	btemp+1
 11884  0000                     ttemp5	set	btemp+1
 11885  0000                     ttemp6	set	btemp+4
 11886  0000                     ttemp7	set	btemp+8
 11887                           
 11888                           	psect	idloc
 11889                           
 11890                           ;Config register IDLOC0 @ 0x200000
 11891                           ;	unspecified, using default values
 11892  200000                     	org	2097152
 11893  200000  FF                 	db	255
 11894                           
 11895                           ;Config register IDLOC1 @ 0x200001
 11896                           ;	unspecified, using default values
 11897  200001                     	org	2097153
 11898  200001  FF                 	db	255
 11899                           
 11900                           ;Config register IDLOC2 @ 0x200002
 11901                           ;	unspecified, using default values
 11902  200002                     	org	2097154
 11903  200002  FF                 	db	255
 11904                           
 11905                           ;Config register IDLOC3 @ 0x200003
 11906                           ;	unspecified, using default values
 11907  200003                     	org	2097155
 11908  200003  FF                 	db	255
 11909                           
 11910                           ;Config register IDLOC4 @ 0x200004
 11911                           ;	unspecified, using default values
 11912  200004                     	org	2097156
 11913  200004  FF                 	db	255
 11914                           
 11915                           ;Config register IDLOC5 @ 0x200005
 11916                           ;	unspecified, using default values
 11917  200005                     	org	2097157
 11918  200005  FF                 	db	255
 11919                           
 11920                           ;Config register IDLOC6 @ 0x200006
 11921                           ;	unspecified, using default values
 11922  200006                     	org	2097158
 11923  200006  FF                 	db	255
 11924                           
 11925                           ;Config register IDLOC7 @ 0x200007
 11926                           ;	unspecified, using default values
 11927  200007                     	org	2097159
 11928  200007  FF                 	db	255
 11929                           
 11930                           	psect	config
 11931                           
 11932                           ; Padding undefined space
 11933  300000                     	org	3145728
 11934  300000  FF                 	db	255
 11935                           
 11936                           ;Config register CONFIG1H @ 0x300001
 11937                           ;	Oscillator Selection bits
 11938                           ;	OSC = RCIO, RC oscillator w/ OSC2 configured as RA6
 11939                           ;	Oscillator System Clock Switch Enable bit
 11940                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
 11941  300001                     	org	3145729
 11942  300001  27                 	db	39
 11943                           
 11944                           ;Config register CONFIG2L @ 0x300002
 11945                           ;	Power-up Timer Enable bit
 11946                           ;	PWRT = OFF, PWRT disabled
 11947                           ;	Brown-out Reset Enable bit
 11948                           ;	BOR = ON, Brown-out Reset enabled
 11949                           ;	Brown-out Reset Voltage bits
 11950                           ;	BORV = 20, VBOR set to 2.0V
 11951  300002                     	org	3145730
 11952  300002  0F                 	db	15
 11953                           
 11954                           ;Config register CONFIG2H @ 0x300003
 11955                           ;	Watchdog Timer Enable bit
 11956                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 11957                           ;	Watchdog Timer Postscale Select bits
 11958                           ;	WDTPS = 128, 1:128
 11959  300003                     	org	3145731
 11960  300003  0E                 	db	14
 11961                           
 11962                           ; Padding undefined space
 11963  300004                     	org	3145732
 11964  300004  FF                 	db	255
 11965                           
 11966                           ;Config register CONFIG3H @ 0x300005
 11967                           ;	CCP2 Mux bit
 11968                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
 11969  300005                     	org	3145733
 11970  300005  01                 	db	1
 11971                           
 11972                           ;Config register CONFIG4L @ 0x300006
 11973                           ;	Stack Full/Underflow Reset Enable bit
 11974                           ;	STVR = ON, Stack Full/Underflow will cause RESET
 11975                           ;	Low Voltage ICSP Enable bit
 11976                           ;	LVP = ON, Low Voltage ICSP enabled
 11977                           ;	Background Debugger Enable bit
 11978                           ;	DEBUG = 0x1, unprogrammed default
 11979  300006                     	org	3145734
 11980  300006  85                 	db	133
 11981                           
 11982                           ; Padding undefined space
 11983  300007                     	org	3145735
 11984  300007  FF                 	db	255
 11985                           
 11986                           ;Config register CONFIG5L @ 0x300008
 11987                           ;	Code Protection bit
 11988                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
 11989                           ;	Code Protection bit
 11990                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
 11991                           ;	Code Protection bit
 11992                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
 11993                           ;	Code Protection bit
 11994                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
 11995  300008                     	org	3145736
 11996  300008  0F                 	db	15
 11997                           
 11998                           ;Config register CONFIG5H @ 0x300009
 11999                           ;	Boot Block Code Protection bit
 12000                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
 12001                           ;	Data EEPROM Code Protection bit
 12002                           ;	CPD = OFF, Data EEPROM not code protected
 12003  300009                     	org	3145737
 12004  300009  C0                 	db	192
 12005                           
 12006                           ;Config register CONFIG6L @ 0x30000A
 12007                           ;	Write Protection bit
 12008                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
 12009                           ;	Write Protection bit
 12010                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
 12011                           ;	Write Protection bit
 12012                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
 12013                           ;	Write Protection bit
 12014                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
 12015  30000A                     	org	3145738
 12016  30000A  0F                 	db	15
 12017                           
 12018                           ;Config register CONFIG6H @ 0x30000B
 12019                           ;	Configuration Register Write Protection bit
 12020                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
 12021                           ;	Boot Block Write Protection bit
 12022                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
 12023                           ;	Data EEPROM Write Protection bit
 12024                           ;	WRTD = OFF, Data EEPROM not write protected
 12025  30000B                     	org	3145739
 12026  30000B  E0                 	db	224
 12027                           
 12028                           ;Config register CONFIG7L @ 0x30000C
 12029                           ;	Table Read Protection bit
 12030                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
 12031                           ;	Table Read Protection bit
 12032                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
 12033                           ;	Table Read Protection bit
 12034                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
 12035                           ;	Table Read Protection bit
 12036                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
 12037  30000C                     	org	3145740
 12038  30000C  0F                 	db	15
 12039                           
 12040                           ;Config register CONFIG7H @ 0x30000D
 12041                           ;	Boot Block Table Read Protection bit
 12042                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
 12043  30000D                     	org	3145741
 12044  30000D  40                 	db	64
 12045                           tosu	equ	0xFFF
 12046                           tosh	equ	0xFFE
 12047                           tosl	equ	0xFFD
 12048                           stkptr	equ	0xFFC
 12049                           pclatu	equ	0xFFB
 12050                           pclath	equ	0xFFA
 12051                           pcl	equ	0xFF9
 12052                           tblptru	equ	0xFF8
 12053                           tblptrh	equ	0xFF7
 12054                           tblptrl	equ	0xFF6
 12055                           tablat	equ	0xFF5
 12056                           prodh	equ	0xFF4
 12057                           prodl	equ	0xFF3
 12058                           indf0	equ	0xFEF
 12059                           postinc0	equ	0xFEE
 12060                           postdec0	equ	0xFED
 12061                           preinc0	equ	0xFEC
 12062                           plusw0	equ	0xFEB
 12063                           fsr0h	equ	0xFEA
 12064                           fsr0l	equ	0xFE9
 12065                           wreg	equ	0xFE8
 12066                           indf1	equ	0xFE7
 12067                           postinc1	equ	0xFE6
 12068                           postdec1	equ	0xFE5
 12069                           preinc1	equ	0xFE4
 12070                           plusw1	equ	0xFE3
 12071                           fsr1h	equ	0xFE2
 12072                           fsr1l	equ	0xFE1
 12073                           bsr	equ	0xFE0
 12074                           indf2	equ	0xFDF
 12075                           postinc2	equ	0xFDE
 12076                           postdec2	equ	0xFDD
 12077                           preinc2	equ	0xFDC
 12078                           plusw2	equ	0xFDB
 12079                           fsr2h	equ	0xFDA
 12080                           fsr2l	equ	0xFD9
 12081                           status	equ	0xFD8

Data Sizes:
    Strings     123
    Constant    12
    Data        11
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    125     125
    BANK0           128     22      79
    BANK1           256    163     167
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_104(CODE[3]), STR_100(CODE[3]), STR_95(CODE[3]), STR_91(CODE[3]), 
		 -> STR_86(CODE[4]), STR_82(CODE[4]), STR_77(CODE[3]), STR_72(CODE[3]), 
		 -> STR_67(CODE[4]), STR_62(CODE[3]), STR_57(CODE[3]), STR_52(CODE[4]), 
		 -> STR_47(CODE[3]), STR_42(CODE[3]), STR_37(CODE[4]), STR_32(CODE[3]), 
		 -> STR_28(CODE[3]), STR_23(CODE[3]), STR_19(CODE[3]), STR_14(CODE[4]), 
		 -> STR_10(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_104(CODE[3]), STR_100(CODE[3]), STR_95(CODE[3]), STR_91(CODE[3]), 
		 -> STR_86(CODE[4]), STR_82(CODE[4]), STR_77(CODE[3]), STR_72(CODE[3]), 
		 -> STR_67(CODE[4]), STR_62(CODE[3]), STR_57(CODE[3]), STR_52(CODE[4]), 
		 -> STR_47(CODE[3]), STR_42(CODE[3]), STR_37(CODE[4]), STR_32(CODE[3]), 
		 -> STR_28(CODE[3]), STR_23(CODE[3]), STR_19(CODE[3]), STR_14(CODE[4]), 
		 -> STR_10(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_1(CODE[24]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_1(CODE[24]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[8]), STR_4(CODE[11]), STR_3(CODE[5]), 
		 -> STR_2(CODE[9]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> stoa@nuls(COMRAM[7]), dbuf(BANK0[32]), ?_snprintf(BANK0[2]), STR_7(CODE[8]), 
		 -> STR_6(CODE[9]), STR_5(CODE[8]), STR_4(CODE[11]), STR_3(CODE[5]), 
		 -> STR_2(CODE[9]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_1(CODE[24]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_1(CODE[24]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_1(CODE[24]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_7(CODE[8]), STR_6(CODE[9]), STR_5(CODE[8]), 
		 -> STR_4(CODE[11]), STR_3(CODE[5]), STR_2(CODE[9]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_7(CODE[8]), STR_6(CODE[9]), STR_5(CODE[8]), 
		 -> STR_4(CODE[11]), STR_3(CODE[5]), STR_2(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), STR_7(CODE[8]), STR_6(CODE[9]), STR_5(CODE[8]), 
		 -> STR_4(CODE[11]), STR_3(CODE[5]), STR_2(CODE[9]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_snprintf(BANK0[2]), STR_7(CODE[8]), STR_6(CODE[9]), 
		 -> STR_5(CODE[8]), STR_4(CODE[11]), STR_3(CODE[5]), STR_2(CODE[9]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> vsnprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    vsnprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> snprintf@ap(BANK0[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_1(CODE[24]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    S1190_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_1(CODE[24]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    snprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_snprintf(BANK0[2]), 

    state_translator_fpga_to_micro@state	PTR int  size(2) Largest target is 2
		 -> state(BANK1[2]), 

    state_translator_fpga_to_micro@state_msg	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[8]), STR_6(CODE[9]), STR_5(CODE[8]), STR_4(CODE[11]), 
		 -> STR_3(CODE[5]), STR_2(CODE[9]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 

    main@greet_str	PTR const unsigned char [80] size(2) Largest target is 11
		 -> ?_snprintf(BANK0[2]), STR_7(CODE[8]), STR_6(CODE[9]), STR_5(CODE[8]), 
		 -> STR_4(CODE[11]), STR_3(CODE[5]), STR_2(CODE[9]), 

    sp__state_translator_fpga_to_micro	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[8]), STR_6(CODE[9]), STR_5(CODE[8]), STR_4(CODE[11]), 
		 -> STR_3(CODE[5]), STR_2(CODE[9]), 

    main@state_msg	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_7(CODE[8]), STR_6(CODE[9]), STR_5(CODE[8]), STR_4(CODE[11]), 
		 -> STR_3(CODE[5]), STR_2(CODE[9]), 

    serial_tx_string@val	PTR const unsigned char  size(2) Largest target is 160
		 -> main@greet_str(BANK1[160]), 


Critical Paths under _main in COMRAM

    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _stoa->_fputc
    _otoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _atoi->_isspace
    _serial_tx_string->_serial_tx_char
    _lcd_str->_lcd_dat
    _lcd_dat->_lcd_wr
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_wr
    _init_USART->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___fltol->_roundf

Critical Paths under _rx_char_usart in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_snprintf
    _snprintf->_vsnprintf

Critical Paths under _rx_char_usart in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rx_char_usart in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rx_char_usart in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rx_char_usart in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rx_char_usart in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rx_char_usart in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               165   165      0   57557
                                            123 COMRAM     2     2      0
                                              0 BANK1    163   163      0
                      _get_reg_value
                         _init_PORTS
                         _init_USART
                    _init_interrupts
                       _init_timer_0
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                     _serial_tx_char
                   _serial_tx_string
                           _snprintf
     _state_translator_fpga_to_micro
 ---------------------------------------------------------------------------------
 (1) _state_translator_fpga_to_micro                       5     3      2     324
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _snprintf                                            12     4      8   46213
                                             10 BANK0     12     4      8
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (2) _vsnprintf                                           22    14      8   45839
                                            111 COMRAM    12     4      8
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   45076
                                            103 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           46    40      6   44615
                                             66 COMRAM    37    31      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    7075
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6115
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6    5013
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2139
                                              9 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _otoa                                                34    24     10    5560
                                             27 COMRAM    34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6714
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 7     4      3    4829
                                             27 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4609
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1691
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1290
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1764
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     771
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _serial_tx_string                                     4     2      2     188
                                              1 COMRAM     4     2      2
                     _serial_tx_char
 ---------------------------------------------------------------------------------
 (2) _serial_tx_char                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              3     1      2     210
                                              3 COMRAM     3     1      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              2     2      0      44
                                              1 COMRAM     2     2      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      44
                                              3 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0      44
                                              1 COMRAM     2     2      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   10346
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   10041
                                             25 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1744
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                             51 COMRAM    10     6      4
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_reg_value                                        1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _rx_char_usart                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _get_reg_value
   _init_PORTS
   _init_USART
     ___fltol
       _roundf (ARG)
         ___fladd
         ___flge
         ___flmul
         ___flneg
         ___flsub
           ___fladd
     _roundf
       ___fladd
       ___flge
       ___flmul
       ___flneg
       ___flsub
         ___fladd
   _init_interrupts
   _init_timer_0
   _lcd_cmd
     _lcd_wr
   _lcd_init
     _lcd_cmd
       _lcd_wr
   _lcd_str
     _lcd_dat
       _lcd_wr
   _serial_tx_char
   _serial_tx_string
     _serial_tx_char
   _snprintf
     _vsnprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _otoa
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _stoa
             _fputc
               _putch
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _state_translator_fpga_to_micro

 _rx_char_usart (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A3      A7       7       65.2%
BITBANK0            80      0       0       4        0.0%
BANK0               80     16      4F       5       61.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7D      7D       1       99.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     173      15        0.0%
DATA                 0      0     173       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon May 29 19:23:49 2023

                                           ?_get_reg_value 0001  
                                                       l21 7A6E  
                                                       l24 7926  
                                                       l33 7CDC  
                                                       l27 793A  
                                                       l36 78FC  
                                                       l90 382A  
                                                       l87 37EA  
                                                       l88 38BA  
                                      ___wmul@multiplicand 0003  
                                                      l132 78EC  
                                                      l141 05FC  
                                                      l150 05F0  
                                                      l144 79F4  
                                                      l312 3C04  
                                                      l160 0186  
                                                      l129 791A  
                                                      l147 7A2E  
                                                      l156 7C00  
                                                      l182 795C  
                                                      l185 7986  
                                                      l169 0190  
                                                      l450 3F4C  
                                                      l630 029A  
                                                      l455 3F9A  
                                                      l623 0278  
                                                      l640 048C  
                                                      l713 1CBA  
                                                      l633 046A  
                                                      l482 3E72  
                                                      l730 1DFE  
                                                      l722 2014  
                                                      l714 1CA4  
                                                      l803 24B8  
                                                      l459 7AB0  
                                                      l715 1C5A  
                                                      l299 3A74  
                                                      l740 1EEA  
                                                      l806 2312  
                                                      l816 2470  
                                                      l808 23A2  
                                                      l809 238A  
                                                      l739 1F02  
                                                      l755 7C90  
                                                      l932 04E4  
                                                      l950 295C  
                                                      l935 0530  
                                                      l864 289E  
                                                      l944 7E3A  
                                                      l952 2966  
                                                      l937 0572  
                                                      l970 2BD4  
                                                      l891 3D16  
                                                      l886 3D3C  
                                                      l878 79BA  
                                                      l799 2106  
                                                      l975 3178  
                                                      l984 32E4  
                                                      l977 3182  
                                                      l993 33EA  
                                                      l986 3356  
                                                      l995 33F4  
                                        ??_init_interrupts 0001  
                                                      _abs 7CE0  
                                                      _pad 0490  
                                                      wreg 000FE8  
                                           ?_rx_char_usart 0001  
                                             ___flmul@aexp 0012  
                                             ___flmul@bexp 0013  
                                             ___flmul@sign 000D  
                                             ___flmul@temp 0018  
                                             ___flmul@prod 0014  
                                             ___fltol@exp1 003D  
                                                     l1004 34CC  
                                                     l1005 3520  
                                                     l1014 2F4C  
                                                     l1031 2C26  
                                                     l1024 3130  
                                                     l1016 2F56  
                                                     l1009 352A  
                                                     ?_abs 0013  
                                                     l1140 7D1C  
                                                     l1052 2E98  
                                                     l1029 2C1C  
                                                     l1214 7FFA  
                                                     l1222 7D78  
                                                     l1054 2F04  
                                                     l1038 2CCA  
                                                     l1231 7DD4  
                                                     l1143 7D26  
                                                     l1135 7F12  
                                                     l1136 7F1A  
                                                     l1225 78D4  
                                                     l3001 3AB0  
                                                     l1250 7EA8  
                                                     l1171 36EC  
                                                     l3011 3B14  
                                                     l3003 3AB4  
                                                     l1235 03A0  
                                                     l1091 1A6C  
                                                     l1068 07A8  
                                                     PORTD 000F83  
                                                     l3021 3BA6  
                                                     l3013 3B2A  
                                                     l3005 3AC8  
                                                     l1245 7E9E  
                                                     PORTE 000F84  
                                                     l1174 36F6  
                                                     l3015 3B3E  
                                                     l3023 3BAC  
                                                     l3007 3AE8  
                                                     l3031 0196  
                                                     l3103 7E40  
                                                     l1256 7B76  
                                                     l4001 203C  
                                                     l1185 7AF2  
                                                     l3113 7AB4  
                                                     l1193 3FFC  
                                                     l3121 3FBE  
                                                     l3025 3BC2  
                                                     l3017 3B72  
                                                     l3009 3B0C  
                                                     l3201 2BAA  
                                                     l3041 01F6  
                                                     l3033 01A2  
                                                     l4011 2090  
                                                     l4003 2052  
                                                     l3123 3FF0  
                                                     l3131 7DF2  
                                                     l3027 3BE2  
                                                     l3019 3B92  
                                                     l3211 316C  
                                                     l3051 0272  
                                                     l3043 020A  
                                                     l3035 01C4  
                                                     l1179 7C46  
                                                     l3107 7E7C  
                                                     l4101 2400  
                                                     l4021 20C8  
                                                     l4013 2098  
                                                     l4005 2066  
                                                     l3125 3FF4  
                                                     l3117 3FA0  
                                                     l3133 7DFE  
                                                     l3221 31CC  
                                                     l3213 31AC  
                                                     l3205 3136  
                                                     l3045 023C  
                                                     l3037 01CC  
                                                     l3061 03FC  
                                                     l3053 03A8  
                                                     l3301 2F40  
                                                     l3109 7E92  
                                                     l4111 2476  
                                                     l4103 2404  
                                                     l4031 212E  
                                                     l4023 20DC  
                                                     l4015 209E  
                                                     l4007 2076  
                                                     l3119 3FA6  
                                                     l3071 04A6  
                                                     l3135 7E0C  
                                                     l3151 292E  
                                                     l3143 28A6  
                                                     l3223 31D4  
                                                     l3231 3254  
                                                     l3215 31B4  
                                                     l3207 314A  
                                                     l3047 025C  
                                                     l3039 01E2  
                                                     l3063 0430  
                                                     l3055 03CA  
                                                     l3311 300E  
                                                     l3303 2F80  
                                                     l1199 7B34  
                                                     l4121 24A8  
                                                     l4113 2486  
                                                     l4105 2424  
                                                     l4041 2172  
                                                     l4025 20EC  
                                                     l4017 20B0  
                                                     l4009 207E  
                                                     l3401 354A  
                                                     l3081 0508  
                                                     l3073 04BA  
                                                     l3137 7E12  
                                                     l3129 7DDA  
                                                     l3161 2996  
                                                     l3153 2930  
                                                     l3145 28C6  
                                                     l3241 32FA  
                                                     l3233 3274  
                                                     l3225 31E6  
                                                     l3217 31B8  
                                                     l3209 314C  
                                                     l3049 025E  
                                                     l3065 0450  
                                                     l3057 03D2  
                                                     l3321 30B8  
                                                     l3313 3014  
                                                     l3305 2F88  
                                                     l4131 3E7A  
                                                     l4115 2498  
                                                     l4107 2438  
                                                     l4051 21BC  
                                                     l4043 217E  
                                                     l4035 2144  
                                                     l4027 20F4  
                                                     l4019 20B2  
                                                     l4211 79CC  
                                                     l4203 7922  
                                                     l3403 3550  
                                                     l3083 050C  
                                                     l3075 04CE  
                                                     l3139 7E16  
                                                     l3091 7CE2  
                                                     l3171 2A3A  
                                                     l3163 299E  
                                                     l3155 2950  
                                                     l3147 28F8  
                                                     l3243 3310  
                                                     l3235 3296  
                                                     l3227 31EC  
                                                     l3219 31C4  
                                                     l3067 0464  
                                                     l3059 03E8  
                                                     l3323 30D6  
                                                     l3315 301A  
                                                     l3307 2F90  
                                                     l3331 2BDA  
                                                     l4141 3F14  
                                                     l4133 3EAC  
                                                     l4117 249A  
                                                     l4109 2458  
                                                     l4061 220E  
                                                     l4053 21C8  
                                                     l4045 2196  
                                                     l4037 2152  
                                                     l4029 211C  
                                                     l3501 1B80  
                                                     l4125 7C4C  
                                                     l4213 79DE  
                                                     l4205 79C2  
                                                     l4221 79FE  
                                                     l3421 3622  
                                                     l3413 35BA  
                                                     l3405 3572  
                                                     l3085 0544  
                                                     l3077 04DA  
                                                     l3069 0492  
                                                     l3093 7D00  
                                                     l3181 2AEC  
                                                     l3173 2A40  
                                                     l3165 29A8  
                                                     l3157 2970  
                                                     l3149 2918  
                                                     l3245 3316  
                                                     l3237 32B4  
                                                     l3229 31F2  
                                                     l3261 3394  
                                                     l3253 335C  
                                                     l3325 30F4  
                                                     l3309 2F98  
                                                     l3317 307E  
                                                     l3341 2C4A  
                                                     l3333 2BEE  
                                                     l4301 3D06  
                                                     l4143 3F26  
                                                     l4135 3EBC  
                                                     l4119 24A2  
                                                     l4071 228C  
                                                     l4063 221E  
                                                     l4055 21D8  
                                                     l4047 21A2  
                                                     l4039 215C  
                                                     l3511 1BB8  
                                                     l3503 1B98  
                                                     l4127 7C5C  
                                                     l4311 7A60  
                                                     l4215 79E0  
                                                     l4207 79C4  
                                                     l4231 7A2C  
                                                     l4223 7A04  
                                                     l3431 36BA  
                                                     l3415 35D4  
                                                     l3407 35AE  
                                                     l3087 0558  
                                                     l3079 04F2  
                                                     l3191 2B64  
                                                     l3183 2B0A  
                                                     l3175 2A46  
                                                     l3167 29B0  
                                                     l3159 2986  
                                                     l3247 3326  
                                                     l3239 32D2  
                                                     l3271 341E  
                                                     l3263 33AA  
                                                     l3255 336E  
                                                     l3319 3096  
                                                     l3327 3106  
                                                     l3095 7AF6  
                                                     l3351 2C8C  
                                                     l3343 2C6C  
                                                     l3335 2BF0  
                                                     l4303 3D20  
                                                     l4241 3DA4  
                                                     l4233 3D44  
                                                     l4145 3F3A  
                                                     l4137 3EF0  
                                                     l4081 2310  
                                                     l4073 22C6  
                                                     l4065 223A  
                                                     l4057 21E4  
                                                     l4049 21AE  
                                                     l4153 7A74  
                                                     l3601 1E42  
                                                     l3521 1BCC  
                                                     l3513 1BBC  
                                                     l3505 1BAA  
                                                     l4321 7A6A  
                                                     l4313 7A62  
                                                     l4217 79F2  
                                                     l4209 79CA  
                                                     l4225 7A06  
                                                     l3433 36D0  
                                                     l3425 365C  
                                                     l3417 35DE  
                                                     l3409 35B2  
                                                     l3193 2B6C  
                                                     l3185 2B28  
                                                     l3169 29B8  
                                                     l3177 2AAA  
                                                     l3249 332C  
                                                     l3281 34A0  
                                                     l3273 3434  
                                                     l3265 33B2  
                                                     l3257 3376  
                                                     l3441 02CE  
                                                     l3361 2D1C  
                                                     l3353 2CAC  
                                                     l3345 2C74  
                                                     l3337 2C10  
                                                     l4161 7EB0  
                                                     l4305 3D32  
                                                     l4401 0160  
                                                     l4243 3DA6  
                                                     l4235 3D5E  
                                                     l4147 3F90  
                                                     l4139 3F00  
                                                     l4091 2380  
                                                     l4083 2324  
                                                     l4075 22D4  
                                                     l4067 2246  
                                                     l4059 21F4  
                                                     l4155 7A8E  
                                                     l3611 1E7E  
                                                     l3603 1E4E  
                                                     l3531 1BE0  
                                                     l3523 1BD0  
                                                     l3515 1BC0  
                                                     l3507 1BAE  
                                                     l4171 24E0  
                                                     l4323 7A6C  
                                                     l4315 7A64  
                                                     l4227 7A18  
                                                     l4219 79FC  
                                                     l4331 7CB6  
                                                     l3419 35E8  
                                                     l3195 2B82  
                                                     l3179 2ACA  
                                                     l3187 2B3A  
                                                     l3291 34FA  
                                                     l3283 34A4  
                                                     l3275 3438  
                                                     l3267 33C4  
                                                     l3259 338C  
                                                     l3451 0330  
                                                     l3099 7C04  
                                                     l3371 2D98  
                                                     l3355 2CBC  
                                                     l3347 2C7C  
                                                     l3339 2C42  
                                                     l4163 7EB8  
                                                     l4411 7996  
                                                     l4403 0168  
                                                     l4341 7902  
                                                     l4245 3DB6  
                                                     l4149 3F96  
                                                     l4085 2338  
                                                     l4077 22F2  
                                                     l4069 2262  
                                                     l4157 7A9E  
                                                     l3621 1EB4  
                                                     l3613 1E84  
                                                     l3605 1E60  
                                                     l3541 1C20  
                                                     l3533 1BE4  
                                                     l3525 1BD4  
                                                     l3517 1BC4  
                                                     l3509 1BB4  
                                                     l3461 1A80  
                                                     l4181 25D0  
                                                     l4173 2530  
                                                     l4317 7A66  
                                                     l4309 7A34  
                                                     l4229 7A1A  
                                                     l4421 7BDE  
                                                     l4333 7CBA  
                                                     l3429 36A4  
                                                     l3197 2B8E  
                                                     l3189 2B52  
                                                     l3293 34FE  
                                                     l3285 34A8  
                                                     l3277 345A  
                                                     l3453 0346  
                                                     l3445 02DA  
                                                     l3381 2E4A  
                                                     l3373 2D9E  
                                                     l3365 2D5C  
                                                     l3349 2C84  
                                                     l3701 07BE  
                                                     l4165 7EC6  
                                                     l4405 017C  
                                                     l4501 389C  
                                                     l4335 78F2  
                                                     l4343 7916  
                                                     l4271 3E50  
                                                     l4255 3DE8  
                                                     l4247 3DBA  
                                                     l4239 3D74  
                                                     l4095 23B8  
                                                     l4087 233C  
                                                     l4079 22FE  
                                                     l3631 1F24  
                                                     l3623 1EC6  
                                                     l3615 1E9A  
                                                     l3607 1E62  
                                                     l3551 1C80  
                                                     l3543 1C42  
                                                     l3535 1BE8  
                                                     l3527 1BD8  
                                                     l3519 1BC8  
                                                     l3471 1ACE  
                                                     l3463 1A92  
                                                     l4191 2780  
                                                     l4175 2544  
                                                     l4319 7A68  
                                                     l4431 7952  
                                                     l4423 7940  
                                                     l4351 0578  
                                                     l4415 7BC0  
                                                     l4327 7C96  
                                                     l2911 7F36  
                                                     l3199 2B98  
                                                     l3279 3468  
                                                     l3455 0376  
                                                     l3447 02EA  
                                                     l3439 02A0  
                                                     l3295 2F0A  
                                                     l3391 2EC4  
                                                     l3383 2E68  
                                                     l3375 2DA4  
                                                     l3367 2D72  
                                                     l3359 2D06  
                                                     l3711 0862  
                                                     l3703 07EA  
                                                     l4167 7EEE  
                                                     l4337 78F6  
                                                     l4345 7918  
                                                     l4273 3E60  
                                                     l4265 3E18  
                                                     l4257 3DF4  
                                                     l4249 3DCC  
                                                     l4097 23C4  
                                                     l4089 234E  
                                                     l3641 1F9E  
                                                     l3633 1F36  
                                                     l3625 1EE0  
                                                     l3609 1E76  
                                                     l3617 1E9C  
                                                     l3561 1CE2  
                                                     l3553 1C94  
                                                     l3545 1C52  
                                                     l3529 1BDC  
                                                     l3537 1BEC  
                                                     l3481 1B0A  
                                                     l3473 1AD2  
                                                     l3465 1A94  
                                                     l4193 27EC  
                                                     l4185 2608  
                                                     l4177 258A  
                                                     l4169 24C0  
                                                     l4433 7954  
                                                     l4425 794C  
                                                     l4361 05BA  
                                                     l4353 0588  
                                                     l4417 7BC8  
                                                     l4329 7CA2  
                                                     l2913 7F4A  
                                                     l3289 34E4  
                                                     l3449 030E  
                                                     l3297 2F1E  
                                                     l3393 2EDA  
                                                     l3385 2E86  
                                                     l3369 2D86  
                                                     l3377 2E06  
                                                     l3721 0902  
                                                     l3713 0872  
                                                     l3705 0820  
                                                     l4281 3C2A  
                                                     l4409 798C  
                                                     l4441 36FC  
                                                     l4267 3E26  
                                                     l4259 3DFE  
                                                     l4099 23D6  
                                                     l3651 1FE6  
                                                     l3643 1FC4  
                                                     l3635 1F74  
                                                     l3571 1D2C  
                                                     l3619 1EAE  
                                                     l3555 1C96  
                                                     l3547 1C6E  
                                                     l3539 1BF2  
                                                     l3491 1B3E  
                                                     l3483 1B0C  
                                                     l3467 1AAA  
                                                     l3475 1ADA  
                                                     l3459 1A74  
                                                     l4195 2822  
                                                     l4187 26DC  
                                                     l4179 25AE  
                                                     l4435 7956  
                                                     l4427 794E  
                                                     l4371 05E4  
                                                     l4363 05CC  
                                                     l4355 059A  
                                                     l4419 7BDC  
                                                     l2915 7F56  
                                                     l2923 7D2E  
                                                     l2931 7D7E  
                                                     l3299 2F20  
                                                     l3387 2EAE  
                                                     l3379 2E28  
                                                     l3811 0F74  
                                                     l3803 0EFA  
                                                     l3731 09A0  
                                                     l3723 090C  
                                                     l3707 0832  
                                                     l4291 3C70  
                                                     l4451 370E  
                                                     l4443 36FC  
                                                     l4269 3E3A  
                                                     l3653 1FEE  
                                                     l3645 1FC8  
                                                     l3629 1F18  
                                                     l3637 1F76  
                                                     l3581 1D60  
                                                     l3573 1D38  
                                                     l3565 1CF6  
                                                     l3557 1CA2  
                                                     l3549 1C7A  
                                                     l3493 1B52  
                                                     l3485 1B14  
                                                     l3477 1AEC  
                                                     l3469 1ABE  
                                                     l4197 2868  
                                                     l4189 2748  
                                                     l4349 78E6  
                                                     l4437 7958  
                                                     l4429 7950  
                                                     l4373 05EA  
                                                     l4365 05D2  
                                                     l4357 059C  
                                                     l3397 3530  
                                                     l2917 7F7A  
                                                     l2909 7F20  
                                                     l2925 7D3A  
                                                     l2933 7D8A  
                                                     l2941 7B38  
                                                     l3389 2EB4  
                                                     l3901 15B8  
                                                     l3821 103C  
                                                     l3813 0FB0  
                                                     l3805 0F26  
                                                     l3741 0A40  
                                                     l3733 09B0  
                                                     l3725 091A  
                                                     l3717 08C2  
                                                     l3709 0840  
                                                     l3661 068C  
                                                     l4293 3C84  
                                                     l4285 3C32  
                                                     l4277 3C0A  
                                                     l4381 00AC  
                                                     l4461 374C  
                                                     l4453 3714  
                                                     l4445 3702  
                                                     ?_pad 0011  
                                                     l3655 2000  
                                                     l3647 1FDC  
                                                     l3639 1F8C  
                                                     l3591 1DDC  
                                                     l3575 1D3E  
                                                     l3567 1D08  
                                                     l3559 1CCE  
                                                     l3583 1D66  
                                                     l3495 1B62  
                                                     l3487 1B26  
                                                     l3479 1AF4  
                                                     l4199 288C  
                                                     l4439 795A  
                                                     l4367 05D8  
                                                     l4359 05A2  
                                                     l3399 3544  
                                                     l2919 7FB2  
                                                     l2927 7D4E  
                                                     l2935 7D90  
                                                     l2951 38C6  
                                                     l3911 167C  
                                                     l3831 10E2  
                                                     l3823 1074  
                                                     l3751 0B02  
                                                     l3743 0A72  
                                                     l3727 0944  
                                                     l3719 08D6  
                                                     l3671 06E6  
                                                     l3663 06B6  
                                                     l4295 3CAA  
                                                     l4287 3C56  
                                                     l4279 3C20  
                                                     l4391 0100  
                                                     l4383 00C4  
                                                     l4375 007A  
                                                     l4471 37B0  
                                                     l4463 3772  
                                                     l4455 3716  
                                                     l4447 3706  
                                                     l3657 2002  
                                                     l3649 1FE2  
                                                     l3585 1D92  
                                                     l3593 1DEC  
                                                     l3577 1D52  
                                                     l3569 1D1A  
                                                     l3497 1B66  
                                                     l3489 1B28  
                                                     l4369 05DE  
                                                     l2945 7962  
                                                     l2929 7D52  
                                                     l2937 7DC8  
                                                     l2961 3914  
                                                     l2953 38CA  
                                                     l3913 16A6  
                                                     l3921 172A  
                                                     l3841 1178  
                                                     l3833 111A  
                                                     l3825 1098  
                                                     l3761 0BFA  
                                                     l3753 0B4C  
                                                     l3737 0A00  
                                                     l3729 097E  
                                                     l3673 06EC  
                                                     l3665 06C4  
                                                     l4297 3CC0  
                                                     l4289 3C64  
                                                     l4393 0114  
                                                     l4385 00CC  
                                                     l4377 0090  
                                                     l4481 37EE  
                                                     l4473 37B6  
                                                     l4465 377E  
                                                     l4457 372E  
                                                     l4449 370A  
                                                     l3595 1E1A  
                                                     l3587 1DC6  
                                                     l3579 1D54  
                                                     l3499 1B6E  
                                                     l2947 797E  
                                                     l2971 3970  
                                                     l2963 3934  
                                                     l2955 38DC  
                                                     l3923 1766  
                                                     l3915 16B6  
                                                     l3907 1608  
                                                     l3851 121C  
                                                     l3843 11AE  
                                                     l3819 1000  
                                                     l3771 0C9E  
                                                     l3747 0A8E  
                                                     l3739 0A14  
                                                     l3691 0728  
                                                     l3683 0714  
                                                     l3675 0700  
                                                     l3667 06D6  
                                                     l4299 3CD4  
                                                     l4395 012C  
                                                     l4387 00E0  
                                                     l4379 0098  
                                                     l4491 3860  
                                                     l4483 3806  
                                                     l4475 37BC  
                                                     l4467 3786  
                                                     l4459 3736  
                                                     l3597 1E2E  
                                                     l3589 1DC8  
                                                     l2981 3A00  
                                                     l2973 3986  
                                                     l2965 3938  
                                                     l2957 38FC  
                                                     l3941 1886  
                                                     l3925 179E  
                                                     l3917 16EC  
                                                     l3909 1644  
                                                     l3861 12B2  
                                                     l3853 1254  
                                                     l3829 10A6  
                                                     l3781 0D60  
                                                     l3757 0B86  
                                                     l3749 0ACA  
                                                     l4573 0760  
                                                     l3669 06DA  
                                                     l4397 0134  
                                                     l4389 00F8  
                                                     l4485 381A  
                                                     l4469 37AA  
                                                     l4477 37C8  
                                                     l4575 360A  
                                                     l2991 3A52  
                                                     l2983 3A02  
                                                     l2975 399A  
                                                     l2967 3946  
                                                     l2959 3900  
                                                     l3951 1910  
                                                     l3943 1894  
                                                     l3927 17C8  
                                                     l3935 1818  
                                                     l3871 139A  
                                                     l3863 12FC  
                                                     l3839 114C  
                                                     l3791 0E34  
                                                     l3767 0C4A  
                                                     l3759 0BC2  
                                                     l3695 0736  
                                                     l3687 071E  
                                                     l3679 070A  
                                                     l4399 0148  
                                                     l4495 387E  
                                                     l4487 383E  
                                                     l4479 37E4  
                                                     l2985 3A16  
                                                     l2977 39AE  
                                                     l2969 3968  
                                                     l3953 1948  
                                                     l3937 1844  
                                                     l3929 17D8  
                                                     l3849 11E0  
                                                     l3777 0CEC  
                                                     l3769 0C76  
                                                     l3697 0790  
                                                     l4489 3846  
                                                     l2979 39E0  
                                                     l2987 3A1C  
                                                     l2995 3A7A  
                                                     l3955 1972  
                                                     l3963 19C2  
                                                     l3939 186C  
                                                     l3891 1502  
                                                     l3883 1476  
                                                     l3875 13BA  
                                                     l3867 1338  
                                                     l3859 1286  
                                                     l3795 0E6E  
                                                     l3787 0DB2  
                                                     l3779 0D28  
                                                     l3699 07BC  
                                                     l2989 3A32  
                                                     l2997 3A7E  
                                                     l3981 1A5A  
                                                     l3965 19EE  
                                                     l3973 1A1E  
                                                     l3957 1982  
                                                     l3949 18D4  
                                                     l3893 152E  
                                                     l3885 14B2  
                                                     l3877 13F6  
                                                     l3869 1364  
                                                     l3797 0EAA  
                                                     l3789 0DEE  
                                                     TRISD 000F95  
                                                     l2999 3A90  
                                                     l3967 19FC  
                                                     l3879 143C  
                                                     TRISE 000F96  
                                                     l3993 05F8  
                                                     l3969 1A10  
                                                     l3995 201C  
                                                     l3899 157C  
                                                     l3979 1A32  
                                                     l3997 2028  
                                                     l3999 203A  
                                                     STR_1 060D  
                                                     STR_2 0630  
                                                     STR_3 0652  
                                                     STR_4 0625  
                                                     STR_5 064A  
                                                     STR_6 0639  
                                                     STR_7 0642  
                                                     STR_8 065B  
                                            _state_changed 01A4  
                                                     u3000 023A  
                                                     u3001 0234  
                                                     u3010 03C8  
                                                     u3011 03C2  
                                                     u3020 03FA  
                                                     u3100 7B2E  
                                                     u3021 03F4  
                                                     u3030 042E  
                                                     u3110 7C3C  
                                                     _LATB 000F8A  
                                                     u3031 0428  
                                                     u3111 7C34  
                                                     _LATC 000F8B  
                                                     u4000 1BA8  
                                                     u3040 04A4  
                                                     u3200 7DF0  
                                                     u3120 7C40  
                                                     u4001 1BA2  
                                                     u3041 049E  
                                                     u3201 7DEA  
                                                     u4010 1C1E  
                                                     u3050 04CC  
                                                     u3210 28D8  
                                                     u3130 7E72  
                                                     u4011 1C18  
                                                     u3051 04C6  
                                                     u3211 28D0  
                                                     u3131 7E6A  
                                                     u4100 1D2A  
                                                     u4020 1C3A  
                                                     u3060 052E  
                                                     u3300 2B08  
                                                     u3220 28DC  
                                                     u3140 7E76  
                                                     u4101 1D24  
                                                     u4021 1C32  
                                                     u3061 0528  
                                                     u3301 2B02  
                                                     u4110 1D50  
                                                     u4030 1C3E  
                                                     u3070 0542  
                                                     u3310 2B26  
                                                     u3230 28F6  
                                                     u3150 7E90  
                                                     u4111 1D4A  
                                                     u3071 053C  
                                                     u3311 2B20  
                                                     u3231 28F0  
                                                     u3151 7E8A  
                                                     u5000 3EEE  
                                                     u4200 1EC4  
                                                     u4120 1D90  
                                                     u4040 1C6C  
                                                     u3160 7AE8  
                                                     u3080 7CFE  
                                                     u3320 2B3A  
                                                     u3240 292C  
                                                     u3400 3294  
                                                     u5001 3EE8  
                                                     u4201 1EBE  
                                                     u4121 1D8A  
                                                     u4041 1C66  
                                                     u3161 7AE0  
                                                     u3081 7CF8  
                                                     u3321 2B34  
                                                     u3241 2926  
                                                     u3401 328E  
                                                     u5010 3F12  
                                                     u4210 1EDE  
                                                     u4130 1DDA  
                                                     u4050 1C92  
                                                     u3170 7AEC  
                                                     u3330 2B50  
                                                     u3250 294E  
                                                     u3410 32B2  
                                                     u3090 7B2A  
                                                     u5011 3F0C  
                                                     u4211 1ED8  
                                                     u4131 1DD4  
                                                     u4051 1C8C  
                                                     u3331 2B4A  
                                                     u3251 2948  
                                                     u3411 32AC  
                                                     u3091 7B22  
                                                     u5020 3F38  
                                                     u4300 1FFE  
                                                     u4220 1EFC  
                                                     u4140 1E18  
                                                     u4060 1CBA  
                                                     u5100 25CE  
                                                     u3180 3FBC  
                                                     u3340 2B64  
                                                     u3260 2984  
                                                     u3420 32D0  
                                                     u3500 3418  
                                                     u5021 3F32  
                                                     u4301 1FF8  
                                                     u4221 1EF6  
                                                     u4141 1E12  
                                                     u4061 1CB4  
                                                     u5101 25C8  
                                                     u3181 3FB6  
                                                     u3341 2B5E  
                                                     u3261 297E  
                                                     u3421 32CA  
                                                     u3501 3412  
                                                     u5030 3F8E  
                                                     u4230 1F16  
                                                     u4150 1E2C  
                                                     u4070 1CCC  
                                                     u5110 26DA  
                                                     u3190 3FEE  
                                                     u3350 2B80  
                                                     u3270 2996  
                                                     u3430 32E4  
                                                     u3510 345A  
                                                     u4310 06B4  
                                                     u5031 3F88  
                                                     u4231 1F10  
                                                     u4151 1E26  
                                                     u4071 1CC6  
                                                     u5111 26D4  
                                                     u3191 3FE8  
                                                     u3351 2B7A  
                                                     u3271 2990  
                                                     u3431 32DE  
                                                     u3511 3454  
                                                     u4311 06AE  
                                                     u5200 3E12  
                                                     u5040 7A8C  
                                                     u4240 1F34  
                                                     u4160 1E5E  
                                                     u4080 1CE0  
                                                     u5120 277E  
                                                     u2800 7DB4  
                                                     u3280 2AC8  
                                                     u3440 32F8  
                                                     u3360 3148  
                                                     u3520 348C  
                                                     u3600 30D4  
                                                     u4400 0942  
                                                     u4320 07A6  
                                                     u5201 3E0C  
                                                     u5041 7A86  
                                                     u4241 1F2E  
                                                     u4161 1E58  
                                                     u4081 1CDA  
                                                     u5121 2778  
                                                     u3281 2AC2  
                                                     u3441 32F2  
                                                     u3361 3142  
                                                     u3601 30CE  
                                                     u4401 093C  
                                                     u4321 07A0  
                                                     u5210 3E3A  
                                                     u4250 1F72  
                                                     u4170 1E74  
                                                     u4090 1D18  
                                                     u5130 2846  
                                                     u2810 7DC6  
                                                     u3290 2AEA  
                                                     u3450 330E  
                                                     u3370 316A  
                                                     u3530 34CA  
                                                     u3610 30F2  
                                                     u4410 09F6  
                                                     u4330 07BA  
                                                     u5050 7F10  
                                                     u5211 3E34  
                                                     u4251 1F6C  
                                                     u4171 1E6E  
                                                     u4091 1D12  
                                                     u2811 7DC0  
                                                     u3291 2AE4  
                                                     u3451 3308  
                                                     u3371 3164  
                                                     u3531 34C4  
                                                     u3611 30EC  
                                                     u4411 09EE  
                                                     u4331 07B4  
                                                     u5051 7F0A  
                                                     u5220 3E4E  
                                                     u4260 1F8A  
                                                     u4180 1E98  
                                                     u5140 2866  
                                                     u5060 2502  
                                                     u2900 3A30  
                                                     u3380 322C  
                                                     u3540 34DE  
                                                     u3620 3106  
                                                     u2820 7B6C  
                                                     u3700 2D52  
                                                     u4500 0C9E  
                                                     u4420 09FA  
                                                     u4340 07E8  
                                                     u5300 00C2  
                                                     u5221 3E48  
                                                     u4261 1F84  
                                                     u4181 1E92  
                                                     u5141 2860  
                                                     u2901 3A2A  
                                                     u3541 34D8  
                                                     u3461 3366  
                                                     u3621 3100  
                                                     u2821 7B64  
                                                     u3701 2D4A  
                                                     u4501 0C98  
                                                     u4341 07E2  
                                                     u5301 00BC  
                                                     u4270 1F9E  
                                                     u4190 1EAE  
                                                     u5070 252E  
                                                     u5150 7938  
                                                     u2750 7F34  
                                                     u2910 3A8E  
                                                     u3390 3272  
                                                     u3550 3520  
                                                     u3470 338A  
                                                     u2830 7B70  
                                                     u3710 2D56  
                                                     u3630 2BEC  
                                                     u4510 0D26  
                                                     u4430 0A14  
                                                     u4350 0830  
                                                     u5230 3C1E  
                                                     u5310 00F6  
                                                     u4271 1F98  
                                                     u4191 1EA8  
                                                     u5135 283A  
                                                     u5071 2528  
                                                     u5151 7932  
                                                     u2751 7F2E  
                                                     u2807 7DAA  
                                                     u2911 3A88  
                                                     u3391 326C  
                                                     u3551 351A  
                                                     u3527 3482  
                                                     u3471 3384  
                                                     u3631 2BE6  
                                                     u4511 0D20  
                                                     u4431 0A0E  
                                                     u4351 082A  
                                                     u5231 3C18  
                                                     u5311 00F0  
                                                     u5160 3D5C  
                                                     u4280 1FC2  
                                                     u5080 2568  
                                                     u3800 3570  
                                                     u2760 7F4A  
                                                     u2840 38DA  
                                                     u2920 3AC6  
                                                     u3480 33C2  
                                                     u3560 2F1C  
                                                     u3720 2D70  
                                                     u3640 2C0E  
                                                     u4600 1148  
                                                     u4520 0D60  
                                                     u4440 0A3E  
                                                     u4360 08B8  
                                                     u5240 3C54  
                                                     u5320 012A  
                                                     u5400 3818  
                                                     u5161 3D56  
                                                     u4281 1FBC  
                                                     u5065 24F6  
                                                     u3801 356A  
                                                     u2761 7F44  
                                                     u2841 38D4  
                                                     u2921 3AC0  
                                                     u3385 3218  
                                                     u3481 33BC  
                                                     u3561 2F16  
                                                     u3721 2D6A  
                                                     u3641 2C08  
                                                     u4521 0D5A  
                                                     u4441 0A38  
                                                     u4361 08B0  
                                                     u5241 3C4E  
                                                     u5321 0124  
                                                     u5401 3812  
                                                     u5170 3D98  
                                                     u4290 1FDA  
                                                     u5090 2588  
                                                     u3810 35AC  
                                                     u2770 7F78  
                                                     u2850 3912  
                                                     u2930 3B0A  
                                                     u3490 33E4  
                                                     u3570 2F3E  
                                                     u3730 2DDE  
                                                     u3650 2C40  
                                                     u4610 1176  
                                                     u4530 0DEC  
                                                     u4450 0AC8  
                                                     u4370 08BC  
                                                     u5250 3CBE  
                                                     u5330 015E  
                                                     u5410 383C  
                                                     u4291 1FD4  
                                                     u5091 2582  
                                                     u3811 35A6  
                                                     u2771 7F72  
                                                     u2851 390C  
                                                     u2931 3B04  
                                                     u3491 33DE  
                                                     u3571 2F38  
                                                     u3651 2C3A  
                                                     u4611 1170  
                                                     u4531 0DE6  
                                                     u4451 0AC2  
                                                     u5251 3CB8  
                                                     u5331 0158  
                                                     u5411 3836  
                                                     u5180 3DCA  
                                                     u5340 7BFE  
                                                     u3820 35CE  
                                                     u2780 7FB2  
                                                     u2940 3B3C  
                                                     u3900 0344  
                                                     u3580 3094  
                                                     u3740 2E26  
                                                     u3660 2CAA  
                                                     u4700 15B6  
                                                     u4620 11DC  
                                                     u4540 0EA8  
                                                     u4460 0B02  
                                                     u4380 08D6  
                                                     u5260 3CD2  
                                                     u5420 385E  
                                                     u5181 3DC4  
                                                     u5085 255C  
                                                     u5341 7BF8  
                                                     u3821 35C8  
                                                     u2781 7FAC  
                                                     u2861 3940  
                                                     u2941 3B36  
                                                     u3901 033E  
                                                     u3581 308E  
                                                     u3741 2E20  
                                                     u3661 2CA4  
                                                     u4701 15B0  
                                                     u4541 0EA2  
                                                     u4461 0AFC  
                                                     u4381 08D0  
                                                     u5261 3CCC  
                                                     u5421 3858  
                                                     u5190 3DE2  
                                                     u3830 369A  
                                                     u2790 7D76  
                                                     u2870 3966  
                                                     u2950 3B70  
                                                     u3910 0376  
                                                     u3590 30B6  
                                                     u3750 2E48  
                                                     u3670 2CFC  
                                                     u4710 1642  
                                                     u4630 121A  
                                                     u4550 0F24  
                                                     u4470 0BC0  
                                                     u4390 0900  
                                                     u5270 3D04  
                                                     u5430 3896  
                                                     u5350 372C  
                                                     u5191 3DDC  
                                                     u5175 3D8C  
                                                     u3831 3692  
                                                     u2791 7D70  
                                                     u2871 3960  
                                                     u2951 3B6A  
                                                     u3911 0370  
                                                     u3591 30B0  
                                                     u3751 2E42  
                                                     u3735 2DCA  
                                                     u3671 2CF4  
                                                     u4711 163C  
                                                     u4631 1214  
                                                     u4607 1138  
                                                     u4551 0F1E  
                                                     u4471 0BBA  
                                                     u4391 08FA  
                                                     u5271 3CFE  
                                                     u5431 3890  
                                                     u5351 3726  
                                                     u4800 2038  
                                                     u3920 1A90  
                                                     u5280 7CDA  
                                                     u3840 369E  
                                                     u2880 3998  
                                                     u2960 3BC0  
                                                     u3760 2E66  
                                                     u3680 2D00  
                                                     u4720 167C  
                                                     u4640 1282  
                                                     u4560 0FAE  
                                                     u4480 0BFA  
                                                     u5440 38B4  
                                                     u5360 379A  
                                                     u4801 2032  
                                                     u3921 1A8A  
                                                     u5281 7CD4  
                                                     u2881 3992  
                                                     u2961 3BBA  
                                                     u3761 2E60  
                                                     u4721 1676  
                                                     u4561 0FA8  
                                                     u4481 0BF4  
                                                     u5441 38AE  
                                                     u5361 3790  
                                                     u4810 2050  
                                                     u3930 1AA8  
                                                     u3850 36B8  
                                                     u2890 39DE  
                                                     u3770 2E84  
                                                     u3690 2D1A  
                                                     u4730 1764  
                                                     u4650 12B0  
                                                     u4570 103A  
                                                     u4490 0C74  
                                                     u5290 008E  
                                                     u4811 204A  
                                                     u3931 1AA2  
                                                     u5507 7A0C  
                                                     u3851 36B2  
                                                     u2891 39D8  
                                                     u2971 019C  
                                                     u3771 2E7E  
                                                     u3691 2D14  
                                                     u4731 175E  
                                                     u4651 12AA  
                                                     u4627 11CC  
                                                     u4571 1034  
                                                     u4491 0C6E  
                                                     u5291 0088  
                                                     u4900 2336  
                                                     u4820 2064  
                                                     u3940 1ABC  
                                                     u3860 36CE  
                                                     u2980 01C2  
                                                     u3780 2E98  
                                                     u4740 179E  
                                                     u4660 1362  
                                                     u4580 1098  
                                                     u5380 37E2  
                                                     u4901 2330  
                                                     u4821 205E  
                                                     u3941 1AB6  
                                                     u5517 7A20  
                                                     u3861 36C8  
                                                     u2981 01BC  
                                                     u3781 2E92  
                                                     u4741 1798  
                                                     u4661 135C  
                                                     u5381 37DC  
                                                     u4910 234C  
                                                     u4830 20AE  
                                                     u3950 1B08  
                                                     u3870 02CC  
                                                     u2990 01F4  
                                                     u3790 2EAC  
                                                     u4750 1842  
                                                     u4670 13F4  
                                                     u4590 10E0  
                                                     u5390 3804  
                                                     u4911 2346  
                                                     u4831 20A8  
                                                     u3951 1B02  
                                                     u5527 058E  
                                                     u3871 02C6  
                                                     u2991 01EE  
                                                     u3791 2EA6  
                                                     u4751 183C  
                                                     u4671 13EE  
                                                     u4647 1272  
                                                     u4591 10DA  
                                                     u5391 37FE  
                                                     u4920 237E  
                                                     u4840 20C6  
                                                     u3960 1B24  
                                                     u3880 030C  
                                                     u4760 186C  
                                                     u4680 14B0  
                                                     u4921 2378  
                                                     u4841 20C0  
                                                     u3961 1B1E  
                                                     u5537 05A8  
                                                     u3881 0306  
                                                     u4761 1866  
                                                     u4681 14AA  
                                                     u4930 239C  
                                                     u4850 20DA  
                                                     u3970 1B3C  
                                                     u3890 032E  
                                                     u4770 190E  
                                                     u4690 152C  
                                                     u5378 379E  
                                                     u4931 2396  
                                                     u4851 20D4  
                                                     u3971 1B36  
                                                     u5547 05C0  
                                                     u3891 0328  
                                                     u4771 1908  
                                                     u4691 1526  
                                                     u4587 108C  
                                                     u4940 23B6  
                                                     u4860 211A  
                                                     u3980 1B50  
                                                     u4780 1948  
                                                     u4941 23B0  
                                                     u4861 2114  
                                                     u3981 1B4A  
                                                     u5557 79D2  
                                                     u4781 1942  
                                                     u4950 23D4  
                                                     u4870 212E  
                                                     u3990 1B96  
                                                     u4790 19EC  
                                                     u4951 23CE  
                                                     u4871 2128  
                                                     u3991 1B90  
                                                     u5567 79E6  
                                                     u4791 19E6  
                                                     u4960 2422  
                                                     u4880 22AE  
                                                     u4961 241C  
                                                     u5497 386C  
                                                     u4970 2456  
                                                     u4890 230E  
                                                     u4971 2450  
                                                     u4891 2308  
                                                     u4980 2496  
                                                     u4981 2490  
                                                     u4885 22A2  
                                                     u4990 3EAA  
                                                     u4991 3EA4  
                                                     abs@a 0013  
                                                     _dbuf 008E  
                                                     _atoi 352E  
                                                     _ctoa 7DD8  
                                                     _main 36FC  
                                                     _dtoa 28A4  
                                                     _fosc 0609  
                                                     _prec 0088  
                                                     _otoa 3134  
                                                     _nout 0084  
                                                     pad@i 0018  
                                                     pad@p 0015  
                                                     fsr1h 000FE2  
                                                     fsr2h 000FDA  
                                                     indf1 000FE7  
                                                     indf2 000FDF  
                                                     fsr1l 000FE1  
                                                     pad@w 001A  
                                                     fsr2l 000FD9  
                                                     _tosc 00CB  
                                                     _stoa 335A  
                                                     btemp 007E  
                                                     _utoa 2F08  
                                                     _xtoa 2BD8  
                                              main@rx_char 01A2  
                                                     prodh 000FF4  
                                                     prodl 000FF3  
                                                     start 0072  
         state_translator_fpga_to_micro@state_machine_code 0005  
                                             ___param_bank 000000  
                                                    ??_abs 0015  
                                                    ??_pad 0017  
                                            ___fltol@sign1 003C  
                                          __end_of___aodiv 3A78  
                                                    ?_atoi 0008  
                                                    ?_ctoa 001C  
                                          __end_of___fladd 201A  
                                                    ?_main 0001  
                                                    ?_dtoa 001C  
                                          __end_of___aomod 3C08  
                                          __end_of___flneg 7AB4  
                                                    STR_10 065B  
                                                    STR_12 065F  
                                                    STR_14 065F  
                                                    STR_30 0679  
                                                    STR_23 0660  
                                                    STR_32 0679  
                                                    STR_42 0668  
                                                    STR_26 0676  
                                                    STR_50 0663  
                                                    STR_19 065C  
                                                    STR_35 0667  
                                                    STR_28 0676  
                                                    STR_52 0663  
                                                    STR_60 067C  
                                                    STR_37 0667  
                                                    STR_45 067F  
                                                    STR_62 067C  
                                                    STR_47 067F  
                                                    STR_72 066C  
                                                    STR_80 066F  
                                                    STR_57 0664  
                                                    STR_65 066B  
                                                    STR_82 066F  
                                                    STR_67 066B  
                                                    STR_91 0670  
                                                    STR_75 0682  
                                                    STR_84 0657  
                                                    STR_77 0682  
                                                    STR_86 0657  
                                                    STR_95 0658  
                                          __end_of___flmul 24BE  
                                                    STR_98 0685  
                                                    ?_otoa 001C  
                                          __end_of___flsub 7C94  
                                          __end_of___fltol 3E78  
                                                    ?_stoa 000A  
                                                    ?_utoa 001C  
                                                    _T0CON 000FD5  
                                          __end_of___lodiv 029E  
                                                    ?_xtoa 001C  
                                          __end_of___lomod 0490  
                                                    i2l108 006A  
                                                    _RCREG 000FAE  
                                             vfpfcnvrt@fmt 0045  
                                                    _TMR0H 000FD7  
                                             vfpfcnvrt@llu 0060  
                                                    _TMR0L 000FD6  
                                                    _SPBRG 000FAF  
                                                    _PORTB 000F81  
                                                    _PORTC 000F82  
                                                    _PORTD 000F83  
                                                    _TRISB 000F93  
                                                    _TXREG 000FAD  
                                          __end_of_lcd_dat 7A32  
                                          __end_of_lcd_cmd 79F8  
                                          __end_of_lcd_str 7C04  
                                                    _flags 008A  
                                                    _errno 008C  
                                                    _fputc 7F1E  
                                          __end_of_isalpha 7C4A  
                                                    _fputs 7D2C  
                                          __end_of_isdigit 7AF6  
                                                    atoi@n 0015  
                                                    pad@fp 0011  
                                                    atoi@s 0008  
                                                    _width 0086  
                                                    ctoa@c 001E  
                                                    _state 01A5  
                                                    _putch 78D2  
                                                    _toint 0601  
                                                    ctoa@w 001F  
                                                    dtoa@d 001E  
                                                    dtoa@i 003E  
                                                    dtoa@n 0036  
                                                    dtoa@p 0030  
                                                    dtoa@s 0034  
                                                    dtoa@w 0032  
                                          __end_of_islower 7B7A  
                                          __end_of_isspace 4000  
                                          __end_of_isupper 7B38  
                                                    tablat 000FF5  
                                                    otoa@d 001E  
                                                    otoa@i 003C  
                                                    otoa@n 0034  
                                                    otoa@p 002E  
                                                    otoa@t 0030  
                                                    otoa@w 0032  
                                                    plusw1 000FE3  
                                                    plusw2 000FDB  
                                                    stoa@i 0016  
                                                    stoa@l 001E  
                                                    stoa@p 001C  
                                                    stoa@s 000C  
                                                    stoa@w 0018  
                                                    ttemp5 007F  
                                                    ttemp6 0082  
                                                    ttemp7 0086  
                                                    utoa@d 001E  
                                                    utoa@i 003A  
                                                    utoa@n 0032  
                                                    utoa@p 002E  
                                                    utoa@w 0030  
                                                    status 000FD8  
                                                    wtemp8 007F  
                                                    xtoa@c 0041  
                                                    xtoa@d 001E  
                                                    xtoa@i 003F  
                                                    xtoa@n 0037  
                                                    xtoa@p 0033  
                                                    xtoa@w 0035  
                                                    xtoa@x 0026  
                                          __end_of_strncmp 03A6  
                                          __end_of_toupper 7EAE  
                                         ___lodiv@dividend 0001  
                                          ??_get_reg_value 0001  
                                             _toupper$1564 000D  
                                     get_reg_value@rx_char 0001  
                                          __initialization 7B7A  
                                             __end_of_atoi 36FC  
                                             __end_of_ctoa 7E3E  
                                             __end_of_main 38C4  
                                             __end_of_dtoa 2BD8  
                                             __end_of_fosc 060D  
                                             __end_of_otoa 335A  
                                             __end_of_stoa 352E  
                                             __end_of_utoa 3134  
                                             __end_of_xtoa 2F08  
                                                   ??_atoi 000A  
                                                   ??_ctoa 001F  
                                                   ??_main 007C  
                                                   ??_dtoa 0026  
                                                   ??_otoa 0026  
                                                   ??_stoa 000E  
                                                   ??_utoa 0026  
                                                   ??_xtoa 0027  
                                            __activetblptr 000002  
                                          ??_rx_char_usart 0001  
                                         ___lodiv@quotient 0011  
                                                   ?_fputc 0001  
                                                   STR_100 0685  
                                                   STR_102 0673  
                                                   ?_fputs 000A  
                                                   STR_104 0673  
                                                   ?_putch 0001  
                                                   i2l4511 0030  
                                                   i2l4521 0062  
                                                   i2l4513 0032  
                                                   i2l4515 0038  
                                                   i2l4507 000C  
                                                   i2l4517 004C  
                                                   i2l4509 001E  
                                                   i2l4519 005E  
                                            main@greet_str 0100  
                                            vfpfcnvrt@done 004F  
                                            ?_init_timer_0 0001  
                   __end_of_state_translator_fpga_to_micro 0194  
                  __size_of_state_translator_fpga_to_micro 011E  
                           _state_translator_fpga_to_micro 0076  
                                             vfprintf@cfmt 006E  
                                         __end_of_lcd_init 05F4  
                                                   ___flge 3E78  
                                                ??___aodiv 0011  
                                                ??___fladd 0009  
                                                ??___aomod 0011  
                                                   ___wmul 7960  
                                                ??___flneg 0005  
                                                ??___flmul 0009  
                                                ??___flsub 0019  
                                                ??___fltol 0038  
                                                ??___lodiv 0011  
                                                ??___lomod 0011  
                                                   _lcd_wr 05F4  
                                                   clear_0 7BAA  
                                                   pad@buf 0013  
                                                   ctoa@fp 001C  
                                                   _roundf 24BE  
                                                ??_lcd_dat 0002  
                                                ??_lcd_cmd 0002  
                                                   dtoa@fp 001C  
                                                   _strlen 7D7C  
                                                ??_lcd_str 0006  
                                                   fputc@c 0001  
                                                   fputs@c 000E  
                                                   fputs@i 000F  
                                                   fputs@s 000A  
                                                ??_isalpha 0003  
                                                ??_isdigit 0003  
                                                ??_islower 0003  
                                             __mediumconst 0000  
                                                ??_isspace 0003  
                                 __end_of_serial_tx_string 7CE0  
                                                   otoa@fp 001C  
                                                   tblptrh 000FF7  
                                                ??_isupper 0003  
                                                   tblptrl 000FF6  
                                                   tblptru 000FF8  
                                                   stoa@cp 001A  
                                                   stoa@fp 000A  
                                                   putch@c 0001  
                                            main@state_msg 01A0  
                                         __end_of_vfprintf 7F1E  
                                                   utoa@fp 001C  
                                         __end_of_snprintf 79BE  
                                                   xtoa@fp 001C  
                                                ??_strncmp 0007  
                                                ??_toupper 0009  
                                      serial_tx_string@val 0002  
                                               ___flge@ff1 0001  
                                               ___flge@ff2 0005  
                                               __accesstop 0080  
                                  __end_of__initialization 7BB0  
                                               ___flneg@f1 0001  
                                        serial_tx_char@val 0001  
                                           ??_init_timer_0 0001  
                                            ___rparam_used 000001  
                                               ___fltol@f1 0034  
                                          _init_interrupts 78E4  
                                           __pcstackCOMRAM 0001  
                                             __pidataBANK0 78D9  
                                            __end_of_fputc 8000  
                                            __end_of_fputs 7D7C  
                                            __end_of_putch 78D8  
                                            __end_of_toint 0605  
                                  __size_of_serial_tx_char 0020  
                      state_translator_fpga_to_micro@state 0001  
                                                  ??_fputc 0005  
                                                  ??_fputs 000E  
                                                  ??_putch 0001  
                                        serial_tx_string@i 0004  
                                               __pbssBANK0 0080  
                                               __pbssBANK1 01A3  
                                                  ?___flge 0001  
                                                  ?___wmul 0001  
                                                  ?_lcd_wr 0001  
                                                  ?_roundf 001A  
                                                  ?_strlen 0001  
                                       __size_of_vfpfcnvrt 13E8  
                                         _desired_baudrate 0605  
                                                ?_lcd_init 0001  
                                         ___lomod@dividend 0001  
                                  __end_of_init_interrupts 78F0  
                                                  __Hparam 0000  
                                                  __Lparam 0000  
                                       __size_of_vsnprintf 013A  
                                               _init_PORTS 7900  
                                               _init_USART 7A32  
                                          __size_of___flge 0128  
                                                  ___aodiv 38C4  
                                                  ___fladd 1A72  
                                                  ___aomod 3A78  
                                                  ___flneg 7A72  
                                                  ___flmul 201A  
                                                  ___flsub 7C4A  
                                                  ___fltol 3D42  
                                          __size_of___wmul 002A  
                                                  ___lodiv 0194  
                                                  ___lomod 03A6  
                                                ?_vfprintf 0068  
                                             __psmallconst 0600  
                                                ?_snprintf 00B8  
                                          __size_of_lcd_wr 000C  
                                                  __pcinit 7B7A  
                                                  __ramtop 0600  
                                                  __ptext0 36FC  
                                                  __ptext1 0076  
                                                  __ptext2 798A  
                                                  __ptext3 3C08  
                                                  __ptext4 7EAE  
                                                  __ptext5 068A  
                                                  __ptext6 2BD8  
                                                  __ptext7 7E3E  
                                                  __ptext8 7B38  
                                                  __ptext9 7AF6  
                                                  _lcd_dat 79F8  
                                                  _lcd_cmd 79BE  
                                                  _lcd_str 7BBE  
                                                _T0CONbits 000FD5  
                                          __size_of_roundf 03E6  
                                          __size_of_strlen 005C  
                                             __size_of_abs 004C  
                                             __size_of_pad 00E6  
                                                  _isalpha 7C04  
                                                  _isdigit 7AB4  
                                     __end_of_init_timer_0 7960  
                                                  _islower 7B38  
                                                  _isspace 3FA0  
                                                  _isupper 7AF6  
                                                  atoi@neg 000E  
                                               ??_lcd_init 0004  
                                                  _strncmp 029E  
                                                  _toupper 7E3E  
                                     end_of_initialization 7BB0  
                                                  fputc@fp 0003  
                                            __Lmediumconst 0000  
                                                  fputs@fp 000C  
                                        __end_of_vfpfcnvrt 1A72  
                                    __end_of_get_reg_value 7900  
                                                _RCSTAbits 000FAB  
                                                  postdec1 000FE5  
                                                  postdec2 000FDD  
                                                  postinc0 000FEE  
                                                  postinc1 000FE6  
                                                  postinc2 000FDE  
                                                  roundf@e 0026  
                                                  roundf@u 002C  
                                                  roundf@x 001A  
                                                  roundf@y 0030  
                                               ??_vfprintf 006E  
                                               ??_snprintf 007C  
                                                  strlen@a 0003  
                                                  strlen@s 0001  
                                               _timer_done 01A3  
                                                _PORTEbits 000F84  
                         ??_state_translator_fpga_to_micro 0003  
                          ?_state_translator_fpga_to_micro 0001  
                                              ___fladd@grs 0010  
                                           _serial_tx_char 791E  
                                    __end_of_rx_char_usart 0072  
                                                _TRISCbits 000F94  
                                               lcd_dat@val 0003  
                                        __end_of_vsnprintf 3D42  
                                        ?_serial_tx_string 0002  
                                               lcd_cmd@val 0003  
                                       ??_serial_tx_string 0004  
                                              ___flmul@grs 000E  
                                         ?_init_interrupts 0001  
                                                _TXSTAbits 000FAC  
                                               lcd_str@str 0004  
                                              ?_init_PORTS 0001  
                                              ?_init_USART 0001  
                                           __end_of___flge 3FA0  
                                              vfpfcnvrt@ap 0047  
                                              vfpfcnvrt@cp 004D  
                                              vfpfcnvrt@fp 0043  
                                              vfpfcnvrt@ll 0055  
                                           __end_of___wmul 798A  
                                              vfpfcnvrt@vp 005D  
                                           __end_of_lcd_wr 0600  
                                   __end_of_serial_tx_char 793E  
                                           __end_of_roundf 28A4  
                                           __end_of_strlen 7DD8  
                                      start_initialization 7B7A  
                                          ___lodiv@divisor 0009  
                                          ___lodiv@counter 0019  
                                              __end_of_abs 7D2C  
                                              __end_of_pad 0576  
                                              vfprintf@fmt 006A  
                                                 ??___flge 0009  
                                 __end_of_desired_baudrate 0609  
                                                 ??___wmul 0005  
                                                 ??_lcd_wr 0001  
                                              __pdataBANK0 00C4  
                                    __size_of_init_timer_0 0022  
                                                 ??_roundf 001E  
                                                 ??_strlen 0003  
                                          ?_serial_tx_char 0001  
                                                ___fladd@a 0005  
                                                ___fladd@b 0001  
                                             vsnprintf@cnt 00B0  
                                             vsnprintf@fmt 0074  
                                                ___flmul@a 0005  
                                                ___flmul@b 0001  
                                                ___flsub@a 0015  
                                                ___flsub@b 0011  
                                            __pcstackBANK0 00AE  
                                            __pcstackBANK1 0100  
                                         ___aodiv@dividend 0001  
                                              snprintf@fmt 00BC  
                                      __size_of_init_PORTS 001E  
                                      __size_of_init_USART 0040  
                                        __size_of_lcd_init 007E  
                                                _atoi$1476 0010  
                                                _atoi$1477 0014  
                                                _atoi$1478 0012  
                                             _init_timer_0 793E  
                                                _dtoa$1300 002E  
                                                __pintcode 0008  
                                                 ?___aodiv 0001  
                                                 ?___fladd 0001  
                                                 ?___aomod 0001  
                                         ___aodiv@quotient 0013  
                                                 ?___flneg 0001  
                                                 ?___flmul 0001  
                                                 ?___flsub 0011  
                                                 ?___fltol 0034  
                                                 ?___lodiv 0001  
                                                 ?___lomod 0001  
                                                 ?_lcd_dat 0001  
                                                 ?_lcd_cmd 0001  
                                        __size_of_vfprintf 0070  
                                                 ?_lcd_str 0004  
                                        __size_of_snprintf 0034  
                                          ___lomod@divisor 0009  
                                              __smallconst 0600  
                                          ___lomod@counter 0011  
                                                 ?_isalpha 0001  
                                                 ?_isdigit 0001  
                                                 ?_islower 0001  
                                                 ?_isspace 0001  
                                                 ?_isupper 0001  
                                           __size_of_fputc 00E2  
                                           __size_of_fputs 0050  
                                                 ?_strncmp 0001  
                                                 ?_toupper 0007  
                                           __size_of_putch 0006  
                                           ___wmul@product 0005  
                                                 _LATBbits 000F8A  
                                                 _PIE1bits 000F9D  
                                                 _PIR1bits 000F9E  
                                                 i2u545_40 001C  
                                                 i2u545_41 0016  
                                                 i2u546_40 002E  
                                                 i2u546_41 0028  
                                                 i2u547_40 004A  
                                                 i2u547_41 0044  
                                                 i2u548_40 005C  
                                                 i2u548_41 0056  
                                                _vfpfcnvrt 068A  
                                                _xtoa$1336 002F  
                                                _xtoa$1337 0031  
                                        ___wmul@multiplier 0001  
                                                lcd_wr@val 0001  
                                             _isspace$1504 0007  
                                               vfpfcnvrt@c 005F  
                  state_translator_fpga_to_micro@state_msg 0003  
                                                copy_data0 7B8E  
                                                _vsnprintf 3C08  
                                               roundf@F525 0080  
                                                 __Hrparam 0000  
                                __size_of_serial_tx_string 004C  
                                             ??_init_PORTS 0001  
                                             ??_init_USART 003E  
                                               vfprintf@ap 006C  
                                                 __Lrparam 0000  
                                               vfprintf@fp 0068  
                                         __size_of___aodiv 01B4  
                                         __size_of___fladd 05A8  
                                         __size_of___aomod 0190  
                                         __size_of___flneg 0042  
                                              vsnprintf@ap 0076  
                                         __size_of___flmul 04A4  
                                         __size_of___flsub 004A  
                                         __size_of___fltol 0136  
                                         __size_of___lodiv 010A  
                                         __size_of___lomod 00EA  
                                               ?_vfpfcnvrt 0043  
                                               snprintf@ap 00C2  
                                          ___aodiv@divisor 0009  
                                          ___aodiv@counter 0011  
                                         __size_of_lcd_dat 003A  
                                         __size_of_lcd_cmd 003A  
                                         __size_of_lcd_str 0046  
                                         __size_of_isalpha 0046  
                                         __size_of_isdigit 0042  
                                         __size_of_islower 0042  
                                         __size_of_isspace 0060  
                                                 __ptext10 7C04  
                                                 __ptext11 2F08  
                                                 __ptext20 38C4  
                                                 __ptext12 03A6  
                                                 __ptext21 7DD8  
                                                 __ptext13 0194  
                                                 __ptext30 7960  
                                                 __ptext22 0490  
                                                 __ptext14 029E  
                                                 __ptext31 7C94  
                                                 __ptext23 7D7C  
                                                 __ptext15 335A  
                                                 __ptext40 7A32  
                                                 __ptext32 791E  
                                                 __ptext24 7D2C  
                                                 __ptext16 3134  
                                                 __ptext41 24BE  
                                                 __ptext33 7BBE  
                                                 __ptext25 7F1E  
                                                 __ptext17 28A4  
                                                 __ptext42 7C4A  
                                                 __ptext34 79F8  
                                                 __ptext26 78D2  
                                                 __ptext18 7CE0  
                                                 __ptext43 1A72  
                                                 __ptext35 0576  
                                                 __ptext27 352E  
                                                 __ptext19 3A78  
                                                 __ptext44 7A72  
                                                 __ptext36 79BE  
                                                 __ptext28 3FA0  
                                                 __ptext45 201A  
                                                 __ptext37 05F4  
                                                 __ptext29 7AB4  
                                                 __ptext46 3E78  
                                                 __ptext38 793E  
                                                 __ptext47 3D42  
                                                 __ptext39 78E4  
                                                 __ptext48 7900  
                                                 __ptext49 78F0  
                                         __size_of_isupper 0042  
                                   __size_of_get_reg_value 0010  
                                       __end_of_init_PORTS 791E  
                                                 _lcd_init 0576  
                                       __end_of_init_USART 7A72  
                                         __size_of_strncmp 0108  
                                         __size_of_toupper 0070  
                                               ?_vsnprintf 0070  
                                            __size_of_atoi 01CE  
                                            __size_of_ctoa 0066  
                                            __size_of_main 01C8  
                                            __size_of_dtoa 0334  
                                            __size_of_otoa 0226  
                                            __size_of_stoa 01D4  
                                            __size_of_utoa 022C  
                                            __size_of_xtoa 0330  
                                                stoa@F1152 00C4  
                                   __size_of_rx_char_usart 006A  
                                 __size_of_init_interrupts 000C  
                                                 int$flags 007E  
                                         ??_serial_tx_char 0001  
                                                 _vfprintf 7EAE  
                                                 _snprintf 798A  
                                                 lcd_str@i 0006  
                                         ___aomod@dividend 0001  
                                           _vfpfcnvrt$1351 0051  
                                           _vfpfcnvrt$1352 0053  
                                               _INTCONbits 000FF2  
                                                 isalpha@c 0001  
                                                 isdigit@c 0001  
                                               vsnprintf@f 00B2  
                                               vsnprintf@n 0072  
                                               vsnprintf@s 0070  
                                                snprintf@n 00BA  
                                                snprintf@s 00B8  
                                                 intlevel2 0006  
                                                 islower@c 0001  
                                                 isspace@c 0001  
                                                 isupper@c 0001  
                                                strncmp@_l 0001  
                                                strncmp@_r 0003  
                                            _get_reg_value 78F0  
                                          ___aomod@divisor 0009  
                                              ??_vfpfcnvrt 0049  
                                                 stoa@nuls 000F  
                                          ___aomod@counter 0011  
                                           _vsnprintf$1214 00AE  
                                                 strncmp@l 0008  
                                                 strncmp@n 0005  
                                                 strncmp@r 000A  
                                                 toupper@c 0007  
                                            _rx_char_usart 0008  
                                            ___fladd@signs 000D  
                                             ___aodiv@sign 0012  
                                              ??_vsnprintf 0078  
                                             ___fladd@aexp 000E  
                                             ___fladd@bexp 000F  
                                             ___aomod@sign 0012  
                                              _roundf$1795 0028  
                                              _roundf$1796 0022  
                                         _serial_tx_string 7C94  
