

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Jun 17 23:39:57 2023

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60  0000                     
    61                           ; Version 2.20
    62                           ; Generated 12/02/2020 GMT
    63                           ; 
    64                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F452 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     
    96                           	psect	idataBANK0
    97  002D76                     __pidataBANK0:
    98                           	callstack 0
    99                           
   100                           ;initializer for _pwm_period
   101                           ;timer.c: 5: static double const f_osc = 1000000;;timer.c: 6: static double const t_osc 
      +                          = 1/f_osc;;timer.c: 7: static double pwm_period = 20e-3;
   102  002D76  D70A               	dw	55050
   103  002D78  3CA3               	dw	15523
   104                           
   105                           ;initializer for _tosc
   106  002D7A  37BD               	dw	14269
   107  002D7C  3486               	dw	13446
   108                           
   109                           ;initializer for _state_before_error
   110  002D7E  0008               	dw	8
   111                           
   112                           ;initializer for _tmr2_prescaler
   113  002D80  0000               	dw	0
   114  002D82  4180               	dw	16768
   115                           
   116                           ;initializer for _hex_end_effector_values
   117  002D84  10                 	db	16
   118  002D85  20                 	db	32
   119  002D86  40                 	db	64
   120  002D87  80                 	db	128
   121                           
   122                           ;initializer for _hex_joint_values
   123  002D88  01                 	db	1
   124  002D89  02                 	db	2
   125  002D8A  04                 	db	4
   126  002D8B  08                 	db	8
   127                           
   128                           	psect	mediumconst
   129  007B20                     __pmediumconst:
   130                           	callstack 0
   131  007B20  00                 	db	0
   132  007B21  0000               	dw	0
   133  007B23  4B00               	dw	19200
   134  007B25                     __end_of_toint:
   135                           	callstack 0
   136  007B25                     lcd_update@F2151:
   137                           	callstack 0
   138  007B25  80                 	db	128
   139  007B26  C0                 	db	192
   140  007B27  94                 	db	148
   141  007B28  D4                 	db	212
   142  007B29                     __end_oflcd_update@F2151:
   143                           	callstack 0
   144  007B29  0000               	dw	0
   145  007B2B  4616               	dw	17942
   146  007B2D                     __end_of_desired_baudrate:
   147                           	callstack 0
   148  007B2D                     _const_msgs:
   149                           	callstack 0
   150  007B2D  49                 	db	73
   151  007B2E  44                 	db	68
   152  007B2F  4C                 	db	76
   153  007B30  45                 	db	69
   154  007B31  3A                 	db	58
   155  007B32  20                 	db	32
   156  007B33  77                 	db	119
   157  007B34  61                 	db	97
   158  007B35  69                 	db	105
   159  007B36  74                 	db	116
   160  007B37  69                 	db	105
   161  007B38  6E                 	db	110
   162  007B39  67                 	db	103
   163  007B3A  20                 	db	32
   164  007B3B  66                 	db	102
   165  007B3C  6F                 	db	111
   166  007B3D  72                 	db	114
   167  007B3E  00                 	db	0
   168  007B3F  00                 	db	0
   169  007B40  00                 	db	0
   170  007B41  76                 	db	118
   171  007B42  69                 	db	105
   172  007B43  61                 	db	97
   173  007B44  6C                 	db	108
   174  007B45  20                 	db	32
   175  007B46  74                 	db	116
   176  007B47  6F                 	db	111
   177  007B48  20                 	db	32
   178  007B49  62                 	db	98
   179  007B4A  65                 	db	101
   180  007B4B  20                 	db	32
   181  007B4C  70                 	db	112
   182  007B4D  6C                 	db	108
   183  007B4E  61                 	db	97
   184  007B4F  63                 	db	99
   185  007B50  65                 	db	101
   186  007B51  64                 	db	100
   187  007B52  00                 	db	0
   188  007B53  00                 	db	0
   189  007B54  00                 	db	0
   190  007B55  69                 	db	105
   191  007B56  6E                 	db	110
   192  007B57  20                 	db	32
   193  007B58  69                 	db	105
   194  007B59  6E                 	db	110
   195  007B5A  69                 	db	105
   196  007B5B  74                 	db	116
   197  007B5C  20                 	db	32
   198  007B5D  70                 	db	112
   199  007B5E  6F                 	db	111
   200  007B5F  73                 	db	115
   201  007B60  00                 	db	0
   202  007B61  00                 	db	0
   203  007B62  00                 	db	0
   204  007B63  00                 	db	0
   205  007B64  00                 	db	0
   206  007B65  00                 	db	0
   207  007B66  00                 	db	0
   208  007B67  00                 	db	0
   209  007B68  00                 	db	0
   210  007B69  00                 	db	0
   211  007B6A  00                 	db	0
   212  007B6B  00                 	db	0
   213  007B6C  00                 	db	0
   214  007B6D  00                 	db	0
   215  007B6E  00                 	db	0
   216  007B6F  00                 	db	0
   217  007B70  00                 	db	0
   218  007B71  00                 	db	0
   219  007B72  00                 	db	0
   220  007B73  00                 	db	0
   221  007B74  00                 	db	0
   222  007B75  00                 	db	0
   223  007B76  00                 	db	0
   224  007B77  00                 	db	0
   225  007B78  00                 	db	0
   226  007B79  00                 	db	0
   227  007B7A  00                 	db	0
   228  007B7B  00                 	db	0
   229  007B7C  00                 	db	0
   230  007B7D  49                 	db	73
   231  007B7E  4E                 	db	78
   232  007B7F  49                 	db	73
   233  007B80  54                 	db	84
   234  007B81  5F                 	db	95
   235  007B82  50                 	db	80
   236  007B83  4F                 	db	79
   237  007B84  53                 	db	83
   238  007B85  3A                 	db	58
   239  007B86  20                 	db	32
   240  007B87  74                 	db	116
   241  007B88  68                 	db	104
   242  007B89  65                 	db	101
   243  007B8A  20                 	db	32
   244  007B8B  76                 	db	118
   245  007B8C  69                 	db	105
   246  007B8D  61                 	db	97
   247  007B8E  6C                 	db	108
   248  007B8F  00                 	db	0
   249  007B90  00                 	db	0
   250  007B91  69                 	db	105
   251  007B92  73                 	db	115
   252  007B93  20                 	db	32
   253  007B94  61                 	db	97
   254  007B95  74                 	db	116
   255  007B96  20                 	db	32
   256  007B97  74                 	db	116
   257  007B98  68                 	db	104
   258  007B99  65                 	db	101
   259  007B9A  20                 	db	32
   260  007B9B  69                 	db	105
   261  007B9C  6E                 	db	110
   262  007B9D  69                 	db	105
   263  007B9E  74                 	db	116
   264  007B9F  20                 	db	32
   265  007BA0  70                 	db	112
   266  007BA1  6F                 	db	111
   267  007BA2  73                 	db	115
   268  007BA3  00                 	db	0
   269  007BA4  00                 	db	0
   270  007BA5  70                 	db	112
   271  007BA6  72                 	db	114
   272  007BA7  6F                 	db	111
   273  007BA8  63                 	db	99
   274  007BA9  65                 	db	101
   275  007BAA  73                 	db	115
   276  007BAB  73                 	db	115
   277  007BAC  20                 	db	32
   278  007BAD  69                 	db	105
   279  007BAE  73                 	db	115
   280  007BAF  20                 	db	32
   281  007BB0  73                 	db	115
   282  007BB1  74                 	db	116
   283  007BB2  61                 	db	97
   284  007BB3  72                 	db	114
   285  007BB4  74                 	db	116
   286  007BB5  69                 	db	105
   287  007BB6  6E                 	db	110
   288  007BB7  67                 	db	103
   289  007BB8  00                 	db	0
   290  007BB9  00                 	db	0
   291  007BBA  00                 	db	0
   292  007BBB  00                 	db	0
   293  007BBC  00                 	db	0
   294  007BBD  00                 	db	0
   295  007BBE  00                 	db	0
   296  007BBF  00                 	db	0
   297  007BC0  00                 	db	0
   298  007BC1  00                 	db	0
   299  007BC2  00                 	db	0
   300  007BC3  00                 	db	0
   301  007BC4  00                 	db	0
   302  007BC5  00                 	db	0
   303  007BC6  00                 	db	0
   304  007BC7  00                 	db	0
   305  007BC8  00                 	db	0
   306  007BC9  00                 	db	0
   307  007BCA  00                 	db	0
   308  007BCB  00                 	db	0
   309  007BCC  00                 	db	0
   310  007BCD  4D                 	db	77
   311  007BCE  4F                 	db	79
   312  007BCF  56                 	db	86
   313  007BD0  45                 	db	69
   314  007BD1  4D                 	db	77
   315  007BD2  45                 	db	69
   316  007BD3  4E                 	db	78
   317  007BD4  54                 	db	84
   318  007BD5  00                 	db	0
   319  007BD6  00                 	db	0
   320  007BD7  00                 	db	0
   321  007BD8  00                 	db	0
   322  007BD9  00                 	db	0
   323  007BDA  00                 	db	0
   324  007BDB  00                 	db	0
   325  007BDC  00                 	db	0
   326  007BDD  00                 	db	0
   327  007BDE  00                 	db	0
   328  007BDF  00                 	db	0
   329  007BE0  00                 	db	0
   330  007BE1  00                 	db	0
   331  007BE2  00                 	db	0
   332  007BE3  00                 	db	0
   333  007BE4  00                 	db	0
   334  007BE5  00                 	db	0
   335  007BE6  00                 	db	0
   336  007BE7  00                 	db	0
   337  007BE8  00                 	db	0
   338  007BE9  00                 	db	0
   339  007BEA  00                 	db	0
   340  007BEB  00                 	db	0
   341  007BEC  00                 	db	0
   342  007BED  00                 	db	0
   343  007BEE  00                 	db	0
   344  007BEF  00                 	db	0
   345  007BF0  00                 	db	0
   346  007BF1  00                 	db	0
   347  007BF2  00                 	db	0
   348  007BF3  00                 	db	0
   349  007BF4  00                 	db	0
   350  007BF5  00                 	db	0
   351  007BF6  00                 	db	0
   352  007BF7  00                 	db	0
   353  007BF8  00                 	db	0
   354  007BF9  00                 	db	0
   355  007BFA  00                 	db	0
   356  007BFB  00                 	db	0
   357  007BFC  00                 	db	0
   358  007BFD  00                 	db	0
   359  007BFE  00                 	db	0
   360  007BFF  00                 	db	0
   361  007C00  00                 	db	0
   362  007C01  00                 	db	0
   363  007C02  00                 	db	0
   364  007C03  00                 	db	0
   365  007C04  00                 	db	0
   366  007C05  00                 	db	0
   367  007C06  00                 	db	0
   368  007C07  00                 	db	0
   369  007C08  00                 	db	0
   370  007C09  00                 	db	0
   371  007C0A  00                 	db	0
   372  007C0B  00                 	db	0
   373  007C0C  00                 	db	0
   374  007C0D  00                 	db	0
   375  007C0E  00                 	db	0
   376  007C0F  00                 	db	0
   377  007C10  00                 	db	0
   378  007C11  00                 	db	0
   379  007C12  00                 	db	0
   380  007C13  00                 	db	0
   381  007C14  00                 	db	0
   382  007C15  00                 	db	0
   383  007C16  00                 	db	0
   384  007C17  00                 	db	0
   385  007C18  00                 	db	0
   386  007C19  00                 	db	0
   387  007C1A  00                 	db	0
   388  007C1B  00                 	db	0
   389  007C1C  00                 	db	0
   390  007C1D  4F                 	db	79
   391  007C1E  56                 	db	86
   392  007C1F  45                 	db	69
   393  007C20  4E                 	db	78
   394  007C21  3A                 	db	58
   395  007C22  00                 	db	0
   396  007C23  00                 	db	0
   397  007C24  00                 	db	0
   398  007C25  00                 	db	0
   399  007C26  00                 	db	0
   400  007C27  00                 	db	0
   401  007C28  00                 	db	0
   402  007C29  00                 	db	0
   403  007C2A  00                 	db	0
   404  007C2B  00                 	db	0
   405  007C2C  00                 	db	0
   406  007C2D  00                 	db	0
   407  007C2E  00                 	db	0
   408  007C2F  00                 	db	0
   409  007C30  00                 	db	0
   410  007C31  76                 	db	118
   411  007C32  69                 	db	105
   412  007C33  61                 	db	97
   413  007C34  6C                 	db	108
   414  007C35  20                 	db	32
   415  007C36  68                 	db	104
   416  007C37  61                 	db	97
   417  007C38  73                 	db	115
   418  007C39  20                 	db	32
   419  007C3A  72                 	db	114
   420  007C3B  65                 	db	101
   421  007C3C  61                 	db	97
   422  007C3D  63                 	db	99
   423  007C3E  68                 	db	104
   424  007C3F  65                 	db	101
   425  007C40  64                 	db	100
   426  007C41  00                 	db	0
   427  007C42  00                 	db	0
   428  007C43  00                 	db	0
   429  007C44  00                 	db	0
   430  007C45  74                 	db	116
   431  007C46  68                 	db	104
   432  007C47  65                 	db	101
   433  007C48  20                 	db	32
   434  007C49  6F                 	db	111
   435  007C4A  76                 	db	118
   436  007C4B  65                 	db	101
   437  007C4C  6E                 	db	110
   438  007C4D  00                 	db	0
   439  007C4E  00                 	db	0
   440  007C4F  00                 	db	0
   441  007C50  00                 	db	0
   442  007C51  00                 	db	0
   443  007C52  00                 	db	0
   444  007C53  00                 	db	0
   445  007C54  00                 	db	0
   446  007C55  00                 	db	0
   447  007C56  00                 	db	0
   448  007C57  00                 	db	0
   449  007C58  00                 	db	0
   450  007C59  00                 	db	0
   451  007C5A  00                 	db	0
   452  007C5B  00                 	db	0
   453  007C5C  00                 	db	0
   454  007C5D  00                 	db	0
   455  007C5E  00                 	db	0
   456  007C5F  00                 	db	0
   457  007C60  00                 	db	0
   458  007C61  00                 	db	0
   459  007C62  00                 	db	0
   460  007C63  00                 	db	0
   461  007C64  00                 	db	0
   462  007C65  00                 	db	0
   463  007C66  00                 	db	0
   464  007C67  00                 	db	0
   465  007C68  00                 	db	0
   466  007C69  00                 	db	0
   467  007C6A  00                 	db	0
   468  007C6B  00                 	db	0
   469  007C6C  00                 	db	0
   470  007C6D  4F                 	db	79
   471  007C6E  56                 	db	86
   472  007C6F  45                 	db	69
   473  007C70  4E                 	db	78
   474  007C71  3A                 	db	58
   475  007C72  20                 	db	32
   476  007C73  72                 	db	114
   477  007C74  65                 	db	101
   478  007C75  61                 	db	97
   479  007C76  63                 	db	99
   480  007C77  68                 	db	104
   481  007C78  69                 	db	105
   482  007C79  6E                 	db	110
   483  007C7A  67                 	db	103
   484  007C7B  20                 	db	32
   485  007C7C  74                 	db	116
   486  007C7D  68                 	db	104
   487  007C7E  65                 	db	101
   488  007C7F  00                 	db	0
   489  007C80  00                 	db	0
   490  007C81  63                 	db	99
   491  007C82  6F                 	db	111
   492  007C83  72                 	db	114
   493  007C84  72                 	db	114
   494  007C85  65                 	db	101
   495  007C86  63                 	db	99
   496  007C87  74                 	db	116
   497  007C88  20                 	db	32
   498  007C89  74                 	db	116
   499  007C8A  65                 	db	101
   500  007C8B  6D                 	db	109
   501  007C8C  70                 	db	112
   502  007C8D  65                 	db	101
   503  007C8E  72                 	db	114
   504  007C8F  61                 	db	97
   505  007C90  74                 	db	116
   506  007C91  75                 	db	117
   507  007C92  72                 	db	114
   508  007C93  65                 	db	101
   509  007C94  00                 	db	0
   510  007C95  00                 	db	0
   511  007C96  00                 	db	0
   512  007C97  00                 	db	0
   513  007C98  00                 	db	0
   514  007C99  00                 	db	0
   515  007C9A  00                 	db	0
   516  007C9B  00                 	db	0
   517  007C9C  00                 	db	0
   518  007C9D  00                 	db	0
   519  007C9E  00                 	db	0
   520  007C9F  00                 	db	0
   521  007CA0  00                 	db	0
   522  007CA1  00                 	db	0
   523  007CA2  00                 	db	0
   524  007CA3  00                 	db	0
   525  007CA4  00                 	db	0
   526  007CA5  00                 	db	0
   527  007CA6  00                 	db	0
   528  007CA7  00                 	db	0
   529  007CA8  00                 	db	0
   530  007CA9  00                 	db	0
   531  007CAA  00                 	db	0
   532  007CAB  00                 	db	0
   533  007CAC  00                 	db	0
   534  007CAD  00                 	db	0
   535  007CAE  00                 	db	0
   536  007CAF  00                 	db	0
   537  007CB0  00                 	db	0
   538  007CB1  00                 	db	0
   539  007CB2  00                 	db	0
   540  007CB3  00                 	db	0
   541  007CB4  00                 	db	0
   542  007CB5  00                 	db	0
   543  007CB6  00                 	db	0
   544  007CB7  00                 	db	0
   545  007CB8  00                 	db	0
   546  007CB9  00                 	db	0
   547  007CBA  00                 	db	0
   548  007CBB  00                 	db	0
   549  007CBC  00                 	db	0
   550  007CBD  47                 	db	71
   551  007CBE  52                 	db	82
   552  007CBF  41                 	db	65
   553  007CC0  53                 	db	83
   554  007CC1  50                 	db	80
   555  007CC2  49                 	db	73
   556  007CC3  4E                 	db	78
   557  007CC4  47                 	db	71
   558  007CC5  3A                 	db	58
   559  007CC6  20                 	db	32
   560  007CC7  74                 	db	116
   561  007CC8  68                 	db	104
   562  007CC9  65                 	db	101
   563  007CCA  20                 	db	32
   564  007CCB  76                 	db	118
   565  007CCC  69                 	db	105
   566  007CCD  61                 	db	97
   567  007CCE  6C                 	db	108
   568  007CCF  00                 	db	0
   569  007CD0  00                 	db	0
   570  007CD1  68                 	db	104
   571  007CD2  61                 	db	97
   572  007CD3  73                 	db	115
   573  007CD4  20                 	db	32
   574  007CD5  72                 	db	114
   575  007CD6  65                 	db	101
   576  007CD7  61                 	db	97
   577  007CD8  63                 	db	99
   578  007CD9  68                 	db	104
   579  007CDA  65                 	db	101
   580  007CDB  64                 	db	100
   581  007CDC  20                 	db	32
   582  007CDD  74                 	db	116
   583  007CDE  68                 	db	104
   584  007CDF  65                 	db	101
   585  007CE0  00                 	db	0
   586  007CE1  00                 	db	0
   587  007CE2  00                 	db	0
   588  007CE3  00                 	db	0
   589  007CE4  00                 	db	0
   590  007CE5  6D                 	db	109
   591  007CE6  69                 	db	105
   592  007CE7  78                 	db	120
   593  007CE8  69                 	db	105
   594  007CE9  6E                 	db	110
   595  007CEA  67                 	db	103
   596  007CEB  20                 	db	32
   597  007CEC  73                 	db	115
   598  007CED  74                 	db	116
   599  007CEE  61                 	db	97
   600  007CEF  74                 	db	116
   601  007CF0  69                 	db	105
   602  007CF1  6F                 	db	111
   603  007CF2  6E                 	db	110
   604  007CF3  00                 	db	0
   605  007CF4  00                 	db	0
   606  007CF5  00                 	db	0
   607  007CF6  00                 	db	0
   608  007CF7  00                 	db	0
   609  007CF8  00                 	db	0
   610  007CF9  00                 	db	0
   611  007CFA  00                 	db	0
   612  007CFB  00                 	db	0
   613  007CFC  00                 	db	0
   614  007CFD  00                 	db	0
   615  007CFE  00                 	db	0
   616  007CFF  00                 	db	0
   617  007D00  00                 	db	0
   618  007D01  00                 	db	0
   619  007D02  00                 	db	0
   620  007D03  00                 	db	0
   621  007D04  00                 	db	0
   622  007D05  00                 	db	0
   623  007D06  00                 	db	0
   624  007D07  00                 	db	0
   625  007D08  00                 	db	0
   626  007D09  00                 	db	0
   627  007D0A  00                 	db	0
   628  007D0B  00                 	db	0
   629  007D0C  00                 	db	0
   630  007D0D  47                 	db	71
   631  007D0E  52                 	db	82
   632  007D0F  41                 	db	65
   633  007D10  53                 	db	83
   634  007D11  50                 	db	80
   635  007D12  49                 	db	73
   636  007D13  4E                 	db	78
   637  007D14  47                 	db	71
   638  007D15  3A                 	db	58
   639  007D16  00                 	db	0
   640  007D17  00                 	db	0
   641  007D18  00                 	db	0
   642  007D19  00                 	db	0
   643  007D1A  00                 	db	0
   644  007D1B  00                 	db	0
   645  007D1C  00                 	db	0
   646  007D1D  00                 	db	0
   647  007D1E  00                 	db	0
   648  007D1F  00                 	db	0
   649  007D20  00                 	db	0
   650  007D21  67                 	db	103
   651  007D22  72                 	db	114
   652  007D23  61                 	db	97
   653  007D24  73                 	db	115
   654  007D25  70                 	db	112
   655  007D26  69                 	db	105
   656  007D27  6E                 	db	110
   657  007D28  67                 	db	103
   658  007D29  20                 	db	32
   659  007D2A  68                 	db	104
   660  007D2B  61                 	db	97
   661  007D2C  73                 	db	115
   662  007D2D  00                 	db	0
   663  007D2E  00                 	db	0
   664  007D2F  00                 	db	0
   665  007D30  00                 	db	0
   666  007D31  00                 	db	0
   667  007D32  00                 	db	0
   668  007D33  00                 	db	0
   669  007D34  00                 	db	0
   670  007D35  73                 	db	115
   671  007D36  74                 	db	116
   672  007D37  61                 	db	97
   673  007D38  72                 	db	114
   674  007D39  74                 	db	116
   675  007D3A  65                 	db	101
   676  007D3B  64                 	db	100
   677  007D3C  00                 	db	0
   678  007D3D  00                 	db	0
   679  007D3E  00                 	db	0
   680  007D3F  00                 	db	0
   681  007D40  00                 	db	0
   682  007D41  00                 	db	0
   683  007D42  00                 	db	0
   684  007D43  00                 	db	0
   685  007D44  00                 	db	0
   686  007D45  00                 	db	0
   687  007D46  00                 	db	0
   688  007D47  00                 	db	0
   689  007D48  00                 	db	0
   690  007D49  00                 	db	0
   691  007D4A  00                 	db	0
   692  007D4B  00                 	db	0
   693  007D4C  00                 	db	0
   694  007D4D  00                 	db	0
   695  007D4E  00                 	db	0
   696  007D4F  00                 	db	0
   697  007D50  00                 	db	0
   698  007D51  00                 	db	0
   699  007D52  00                 	db	0
   700  007D53  00                 	db	0
   701  007D54  00                 	db	0
   702  007D55  00                 	db	0
   703  007D56  00                 	db	0
   704  007D57  00                 	db	0
   705  007D58  00                 	db	0
   706  007D59  00                 	db	0
   707  007D5A  00                 	db	0
   708  007D5B  00                 	db	0
   709  007D5C  00                 	db	0
   710  007D5D  4D                 	db	77
   711  007D5E  49                 	db	73
   712  007D5F  58                 	db	88
   713  007D60  49                 	db	73
   714  007D61  4E                 	db	78
   715  007D62  47                 	db	71
   716  007D63  3A                 	db	58
   717  007D64  20                 	db	32
   718  007D65  74                 	db	116
   719  007D66  68                 	db	104
   720  007D67  65                 	db	101
   721  007D68  20                 	db	32
   722  007D69  76                 	db	118
   723  007D6A  69                 	db	105
   724  007D6B  61                 	db	97
   725  007D6C  6C                 	db	108
   726  007D6D  00                 	db	0
   727  007D6E  00                 	db	0
   728  007D6F  00                 	db	0
   729  007D70  00                 	db	0
   730  007D71  77                 	db	119
   731  007D72  69                 	db	105
   732  007D73  6C                 	db	108
   733  007D74  6C                 	db	108
   734  007D75  20                 	db	32
   735  007D76  6E                 	db	110
   736  007D77  6F                 	db	111
   737  007D78  77                 	db	119
   738  007D79  20                 	db	32
   739  007D7A  62                 	db	98
   740  007D7B  65                 	db	101
   741  007D7C  00                 	db	0
   742  007D7D  00                 	db	0
   743  007D7E  00                 	db	0
   744  007D7F  00                 	db	0
   745  007D80  00                 	db	0
   746  007D81  00                 	db	0
   747  007D82  00                 	db	0
   748  007D83  00                 	db	0
   749  007D84  00                 	db	0
   750  007D85  74                 	db	116
   751  007D86  69                 	db	105
   752  007D87  6C                 	db	108
   753  007D88  74                 	db	116
   754  007D89  65                 	db	101
   755  007D8A  64                 	db	100
   756  007D8B  20                 	db	32
   757  007D8C  31                 	db	49
   758  007D8D  30                 	db	48
   759  007D8E  20                 	db	32
   760  007D8F  74                 	db	116
   761  007D90  69                 	db	105
   762  007D91  6D                 	db	109
   763  007D92  65                 	db	101
   764  007D93  73                 	db	115
   765  007D94  00                 	db	0
   766  007D95  00                 	db	0
   767  007D96  00                 	db	0
   768  007D97  00                 	db	0
   769  007D98  00                 	db	0
   770  007D99  00                 	db	0
   771  007D9A  00                 	db	0
   772  007D9B  00                 	db	0
   773  007D9C  00                 	db	0
   774  007D9D  00                 	db	0
   775  007D9E  00                 	db	0
   776  007D9F  00                 	db	0
   777  007DA0  00                 	db	0
   778  007DA1  00                 	db	0
   779  007DA2  00                 	db	0
   780  007DA3  00                 	db	0
   781  007DA4  00                 	db	0
   782  007DA5  00                 	db	0
   783  007DA6  00                 	db	0
   784  007DA7  00                 	db	0
   785  007DA8  00                 	db	0
   786  007DA9  00                 	db	0
   787  007DAA  00                 	db	0
   788  007DAB  00                 	db	0
   789  007DAC  00                 	db	0
   790  007DAD  44                 	db	68
   791  007DAE  49                 	db	73
   792  007DAF  4C                 	db	76
   793  007DB0  55                 	db	85
   794  007DB1  54                 	db	84
   795  007DB2  49                 	db	73
   796  007DB3  4E                 	db	78
   797  007DB4  47                 	db	71
   798  007DB5  3A                 	db	58
   799  007DB6  20                 	db	32
   800  007DB7  74                 	db	116
   801  007DB8  68                 	db	104
   802  007DB9  65                 	db	101
   803  007DBA  00                 	db	0
   804  007DBB  00                 	db	0
   805  007DBC  00                 	db	0
   806  007DBD  00                 	db	0
   807  007DBE  00                 	db	0
   808  007DBF  00                 	db	0
   809  007DC0  00                 	db	0
   810  007DC1  76                 	db	118
   811  007DC2  61                 	db	97
   812  007DC3  63                 	db	99
   813  007DC4  63                 	db	99
   814  007DC5  69                 	db	105
   815  007DC6  6E                 	db	110
   816  007DC7  65                 	db	101
   817  007DC8  20                 	db	32
   818  007DC9  77                 	db	119
   819  007DCA  69                 	db	105
   820  007DCB  6C                 	db	108
   821  007DCC  6C                 	db	108
   822  007DCD  20                 	db	32
   823  007DCE  6E                 	db	110
   824  007DCF  6F                 	db	111
   825  007DD0  77                 	db	119
   826  007DD1  00                 	db	0
   827  007DD2  00                 	db	0
   828  007DD3  00                 	db	0
   829  007DD4  00                 	db	0
   830  007DD5  62                 	db	98
   831  007DD6  65                 	db	101
   832  007DD7  20                 	db	32
   833  007DD8  64                 	db	100
   834  007DD9  69                 	db	105
   835  007DDA  6C                 	db	108
   836  007DDB  75                 	db	117
   837  007DDC  74                 	db	116
   838  007DDD  65                 	db	101
   839  007DDE  64                 	db	100
   840  007DDF  00                 	db	0
   841  007DE0  00                 	db	0
   842  007DE1  00                 	db	0
   843  007DE2  00                 	db	0
   844  007DE3  00                 	db	0
   845  007DE4  00                 	db	0
   846  007DE5  00                 	db	0
   847  007DE6  00                 	db	0
   848  007DE7  00                 	db	0
   849  007DE8  00                 	db	0
   850  007DE9  00                 	db	0
   851  007DEA  00                 	db	0
   852  007DEB  00                 	db	0
   853  007DEC  00                 	db	0
   854  007DED  00                 	db	0
   855  007DEE  00                 	db	0
   856  007DEF  00                 	db	0
   857  007DF0  00                 	db	0
   858  007DF1  00                 	db	0
   859  007DF2  00                 	db	0
   860  007DF3  00                 	db	0
   861  007DF4  00                 	db	0
   862  007DF5  00                 	db	0
   863  007DF6  00                 	db	0
   864  007DF7  00                 	db	0
   865  007DF8  00                 	db	0
   866  007DF9  00                 	db	0
   867  007DFA  00                 	db	0
   868  007DFB  00                 	db	0
   869  007DFC  00                 	db	0
   870  007DFD  52                 	db	82
   871  007DFE  45                 	db	69
   872  007DFF  4C                 	db	76
   873  007E00  45                 	db	69
   874  007E01  41                 	db	65
   875  007E02  53                 	db	83
   876  007E03  49                 	db	73
   877  007E04  4E                 	db	78
   878  007E05  47                 	db	71
   879  007E06  3A                 	db	58
   880  007E07  00                 	db	0
   881  007E08  00                 	db	0
   882  007E09  00                 	db	0
   883  007E0A  00                 	db	0
   884  007E0B  00                 	db	0
   885  007E0C  00                 	db	0
   886  007E0D  00                 	db	0
   887  007E0E  00                 	db	0
   888  007E0F  00                 	db	0
   889  007E10  00                 	db	0
   890  007E11  72                 	db	114
   891  007E12  65                 	db	101
   892  007E13  6C                 	db	108
   893  007E14  65                 	db	101
   894  007E15  61                 	db	97
   895  007E16  73                 	db	115
   896  007E17  69                 	db	105
   897  007E18  6E                 	db	110
   898  007E19  67                 	db	103
   899  007E1A  20                 	db	32
   900  007E1B  68                 	db	104
   901  007E1C  61                 	db	97
   902  007E1D  73                 	db	115
   903  007E1E  00                 	db	0
   904  007E1F  00                 	db	0
   905  007E20  00                 	db	0
   906  007E21  00                 	db	0
   907  007E22  00                 	db	0
   908  007E23  00                 	db	0
   909  007E24  00                 	db	0
   910  007E25  73                 	db	115
   911  007E26  74                 	db	116
   912  007E27  61                 	db	97
   913  007E28  72                 	db	114
   914  007E29  74                 	db	116
   915  007E2A  65                 	db	101
   916  007E2B  64                 	db	100
   917  007E2C  00                 	db	0
   918  007E2D  00                 	db	0
   919  007E2E  00                 	db	0
   920  007E2F  00                 	db	0
   921  007E30  00                 	db	0
   922  007E31  00                 	db	0
   923  007E32  00                 	db	0
   924  007E33  00                 	db	0
   925  007E34  00                 	db	0
   926  007E35  00                 	db	0
   927  007E36  00                 	db	0
   928  007E37  00                 	db	0
   929  007E38  00                 	db	0
   930  007E39  00                 	db	0
   931  007E3A  00                 	db	0
   932  007E3B  00                 	db	0
   933  007E3C  00                 	db	0
   934  007E3D  00                 	db	0
   935  007E3E  00                 	db	0
   936  007E3F  00                 	db	0
   937  007E40  00                 	db	0
   938  007E41  00                 	db	0
   939  007E42  00                 	db	0
   940  007E43  00                 	db	0
   941  007E44  00                 	db	0
   942  007E45  00                 	db	0
   943  007E46  00                 	db	0
   944  007E47  00                 	db	0
   945  007E48  00                 	db	0
   946  007E49  00                 	db	0
   947  007E4A  00                 	db	0
   948  007E4B  00                 	db	0
   949  007E4C  00                 	db	0
   950  007E4D  50                 	db	80
   951  007E4E  49                 	db	73
   952  007E4F  43                 	db	67
   953  007E50  4B                 	db	75
   954  007E51  5F                 	db	95
   955  007E52  55                 	db	85
   956  007E53  50                 	db	80
   957  007E54  3A                 	db	58
   958  007E55  20                 	db	32
   959  007E56  74                 	db	116
   960  007E57  68                 	db	104
   961  007E58  65                 	db	101
   962  007E59  20                 	db	32
   963  007E5A  76                 	db	118
   964  007E5B  69                 	db	105
   965  007E5C  61                 	db	97
   966  007E5D  6C                 	db	108
   967  007E5E  00                 	db	0
   968  007E5F  00                 	db	0
   969  007E60  00                 	db	0
   970  007E61  68                 	db	104
   971  007E62  61                 	db	97
   972  007E63  73                 	db	115
   973  007E64  20                 	db	32
   974  007E65  72                 	db	114
   975  007E66  65                 	db	101
   976  007E67  61                 	db	97
   977  007E68  63                 	db	99
   978  007E69  68                 	db	104
   979  007E6A  65                 	db	101
   980  007E6B  64                 	db	100
   981  007E6C  20                 	db	32
   982  007E6D  74                 	db	116
   983  007E6E  68                 	db	104
   984  007E6F  65                 	db	101
   985  007E70  00                 	db	0
   986  007E71  00                 	db	0
   987  007E72  00                 	db	0
   988  007E73  00                 	db	0
   989  007E74  00                 	db	0
   990  007E75  70                 	db	112
   991  007E76  69                 	db	105
   992  007E77  63                 	db	99
   993  007E78  6B                 	db	107
   994  007E79  20                 	db	32
   995  007E7A  75                 	db	117
   996  007E7B  70                 	db	112
   997  007E7C  20                 	db	32
   998  007E7D  73                 	db	115
   999  007E7E  74                 	db	116
  1000  007E7F  61                 	db	97
  1001  007E80  74                 	db	116
  1002  007E81  69                 	db	105
  1003  007E82  6F                 	db	111
  1004  007E83  6E                 	db	110
  1005  007E84  00                 	db	0
  1006  007E85  00                 	db	0
  1007  007E86  00                 	db	0
  1008  007E87  00                 	db	0
  1009  007E88  00                 	db	0
  1010  007E89  00                 	db	0
  1011  007E8A  00                 	db	0
  1012  007E8B  00                 	db	0
  1013  007E8C  00                 	db	0
  1014  007E8D  00                 	db	0
  1015  007E8E  00                 	db	0
  1016  007E8F  00                 	db	0
  1017  007E90  00                 	db	0
  1018  007E91  00                 	db	0
  1019  007E92  00                 	db	0
  1020  007E93  00                 	db	0
  1021  007E94  00                 	db	0
  1022  007E95  00                 	db	0
  1023  007E96  00                 	db	0
  1024  007E97  00                 	db	0
  1025  007E98  00                 	db	0
  1026  007E99  00                 	db	0
  1027  007E9A  00                 	db	0
  1028  007E9B  00                 	db	0
  1029  007E9C  00                 	db	0
  1030  007E9D  50                 	db	80
  1031  007E9E  49                 	db	73
  1032  007E9F  43                 	db	67
  1033  007EA0  4B                 	db	75
  1034  007EA1  5F                 	db	95
  1035  007EA2  55                 	db	85
  1036  007EA3  50                 	db	80
  1037  007EA4  3A                 	db	58
  1038  007EA5  20                 	db	32
  1039  007EA6  70                 	db	112
  1040  007EA7  6C                 	db	108
  1041  007EA8  65                 	db	101
  1042  007EA9  61                 	db	97
  1043  007EAA  73                 	db	115
  1044  007EAB  65                 	db	101
  1045  007EAC  00                 	db	0
  1046  007EAD  00                 	db	0
  1047  007EAE  00                 	db	0
  1048  007EAF  00                 	db	0
  1049  007EB0  00                 	db	0
  1050  007EB1  70                 	db	112
  1051  007EB2  69                 	db	105
  1052  007EB3  63                 	db	99
  1053  007EB4  6B                 	db	107
  1054  007EB5  20                 	db	32
  1055  007EB6  75                 	db	117
  1056  007EB7  70                 	db	112
  1057  007EB8  20                 	db	32
  1058  007EB9  74                 	db	116
  1059  007EBA  68                 	db	104
  1060  007EBB  65                 	db	101
  1061  007EBC  00                 	db	0
  1062  007EBD  00                 	db	0
  1063  007EBE  00                 	db	0
  1064  007EBF  00                 	db	0
  1065  007EC0  00                 	db	0
  1066  007EC1  00                 	db	0
  1067  007EC2  00                 	db	0
  1068  007EC3  00                 	db	0
  1069  007EC4  00                 	db	0
  1070  007EC5  76                 	db	118
  1071  007EC6  69                 	db	105
  1072  007EC7  61                 	db	97
  1073  007EC8  6C                 	db	108
  1074  007EC9  20                 	db	32
  1075  007ECA  62                 	db	98
  1076  007ECB  65                 	db	101
  1077  007ECC  66                 	db	102
  1078  007ECD  6F                 	db	111
  1079  007ECE  72                 	db	114
  1080  007ECF  65                 	db	101
  1081  007ED0  00                 	db	0
  1082  007ED1  00                 	db	0
  1083  007ED2  00                 	db	0
  1084  007ED3  00                 	db	0
  1085  007ED4  00                 	db	0
  1086  007ED5  00                 	db	0
  1087  007ED6  00                 	db	0
  1088  007ED7  00                 	db	0
  1089  007ED8  00                 	db	0
  1090  007ED9  74                 	db	116
  1091  007EDA  69                 	db	105
  1092  007EDB  6D                 	db	109
  1093  007EDC  65                 	db	101
  1094  007EDD  6F                 	db	111
  1095  007EDE  75                 	db	117
  1096  007EDF  74                 	db	116
  1097  007EE0  00                 	db	0
  1098  007EE1  00                 	db	0
  1099  007EE2  00                 	db	0
  1100  007EE3  00                 	db	0
  1101  007EE4  00                 	db	0
  1102  007EE5  00                 	db	0
  1103  007EE6  00                 	db	0
  1104  007EE7  00                 	db	0
  1105  007EE8  00                 	db	0
  1106  007EE9  00                 	db	0
  1107  007EEA  00                 	db	0
  1108  007EEB  00                 	db	0
  1109  007EEC  00                 	db	0
  1110  007EED  50                 	db	80
  1111  007EEE  49                 	db	73
  1112  007EEF  43                 	db	67
  1113  007EF0  4B                 	db	75
  1114  007EF1  5F                 	db	95
  1115  007EF2  55                 	db	85
  1116  007EF3  50                 	db	80
  1117  007EF4  3A                 	db	58
  1118  007EF5  20                 	db	32
  1119  007EF6  74                 	db	116
  1120  007EF7  68                 	db	104
  1121  007EF8  65                 	db	101
  1122  007EF9  20                 	db	32
  1123  007EFA  76                 	db	118
  1124  007EFB  69                 	db	105
  1125  007EFC  61                 	db	97
  1126  007EFD  6C                 	db	108
  1127  007EFE  00                 	db	0
  1128  007EFF  00                 	db	0
  1129  007F00  00                 	db	0
  1130  007F01  68                 	db	104
  1131  007F02  61                 	db	97
  1132  007F03  73                 	db	115
  1133  007F04  20                 	db	32
  1134  007F05  62                 	db	98
  1135  007F06  65                 	db	101
  1136  007F07  65                 	db	101
  1137  007F08  6E                 	db	110
  1138  007F09  20                 	db	32
  1139  007F0A  70                 	db	112
  1140  007F0B  69                 	db	105
  1141  007F0C  63                 	db	99
  1142  007F0D  6B                 	db	107
  1143  007F0E  65                 	db	101
  1144  007F0F  64                 	db	100
  1145  007F10  00                 	db	0
  1146  007F11  00                 	db	0
  1147  007F12  00                 	db	0
  1148  007F13  00                 	db	0
  1149  007F14  00                 	db	0
  1150  007F15  67                 	db	103
  1151  007F16  6F                 	db	111
  1152  007F17  69                 	db	105
  1153  007F18  6E                 	db	110
  1154  007F19  67                 	db	103
  1155  007F1A  20                 	db	32
  1156  007F1B  62                 	db	98
  1157  007F1C  61                 	db	97
  1158  007F1D  63                 	db	99
  1159  007F1E  6B                 	db	107
  1160  007F1F  20                 	db	32
  1161  007F20  74                 	db	116
  1162  007F21  6F                 	db	111
  1163  007F22  00                 	db	0
  1164  007F23  00                 	db	0
  1165  007F24  00                 	db	0
  1166  007F25  00                 	db	0
  1167  007F26  00                 	db	0
  1168  007F27  00                 	db	0
  1169  007F28  00                 	db	0
  1170  007F29  69                 	db	105
  1171  007F2A  64                 	db	100
  1172  007F2B  6C                 	db	108
  1173  007F2C  65                 	db	101
  1174  007F2D  00                 	db	0
  1175  007F2E  00                 	db	0
  1176  007F2F  00                 	db	0
  1177  007F30  00                 	db	0
  1178  007F31  00                 	db	0
  1179  007F32  00                 	db	0
  1180  007F33  00                 	db	0
  1181  007F34  00                 	db	0
  1182  007F35  00                 	db	0
  1183  007F36  00                 	db	0
  1184  007F37  00                 	db	0
  1185  007F38  00                 	db	0
  1186  007F39  00                 	db	0
  1187  007F3A  00                 	db	0
  1188  007F3B  00                 	db	0
  1189  007F3C  00                 	db	0
  1190  007F3D  54                 	db	84
  1191  007F3E  52                 	db	82
  1192  007F3F  41                 	db	65
  1193  007F40  53                 	db	83
  1194  007F41  48                 	db	72
  1195  007F42  3A                 	db	58
  1196  007F43  20                 	db	32
  1197  007F44  74                 	db	116
  1198  007F45  69                 	db	105
  1199  007F46  6D                 	db	109
  1200  007F47  65                 	db	101
  1201  007F48  6F                 	db	111
  1202  007F49  75                 	db	117
  1203  007F4A  74                 	db	116
  1204  007F4B  00                 	db	0
  1205  007F4C  00                 	db	0
  1206  007F4D  00                 	db	0
  1207  007F4E  00                 	db	0
  1208  007F4F  00                 	db	0
  1209  007F50  00                 	db	0
  1210  007F51  65                 	db	101
  1211  007F52  78                 	db	120
  1212  007F53  63                 	db	99
  1213  007F54  65                 	db	101
  1214  007F55  65                 	db	101
  1215  007F56  64                 	db	100
  1216  007F57  65                 	db	101
  1217  007F58  64                 	db	100
  1218  007F59  20                 	db	32
  1219  007F5A  74                 	db	116
  1220  007F5B  68                 	db	104
  1221  007F5C  65                 	db	101
  1222  007F5D  00                 	db	0
  1223  007F5E  00                 	db	0
  1224  007F5F  00                 	db	0
  1225  007F60  00                 	db	0
  1226  007F61  00                 	db	0
  1227  007F62  00                 	db	0
  1228  007F63  00                 	db	0
  1229  007F64  00                 	db	0
  1230  007F65  76                 	db	118
  1231  007F66  69                 	db	105
  1232  007F67  61                 	db	97
  1233  007F68  6C                 	db	108
  1234  007F69  20                 	db	32
  1235  007F6A  77                 	db	119
  1236  007F6B  69                 	db	105
  1237  007F6C  6C                 	db	108
  1238  007F6D  6C                 	db	108
  1239  007F6E  20                 	db	32
  1240  007F6F  62                 	db	98
  1241  007F70  65                 	db	101
  1242  007F71  00                 	db	0
  1243  007F72  00                 	db	0
  1244  007F73  00                 	db	0
  1245  007F74  00                 	db	0
  1246  007F75  00                 	db	0
  1247  007F76  00                 	db	0
  1248  007F77  00                 	db	0
  1249  007F78  00                 	db	0
  1250  007F79  74                 	db	116
  1251  007F7A  72                 	db	114
  1252  007F7B  61                 	db	97
  1253  007F7C  73                 	db	115
  1254  007F7D  68                 	db	104
  1255  007F7E  65                 	db	101
  1256  007F7F  64                 	db	100
  1257  007F80  00                 	db	0
  1258  007F81  00                 	db	0
  1259  007F82  00                 	db	0
  1260  007F83  00                 	db	0
  1261  007F84  00                 	db	0
  1262  007F85  00                 	db	0
  1263  007F86  00                 	db	0
  1264  007F87  00                 	db	0
  1265  007F88  00                 	db	0
  1266  007F89  00                 	db	0
  1267  007F8A  00                 	db	0
  1268  007F8B  00                 	db	0
  1269  007F8C  00                 	db	0
  1270  007F8D  45                 	db	69
  1271  007F8E  52                 	db	82
  1272  007F8F  52                 	db	82
  1273  007F90  4F                 	db	79
  1274  007F91  52                 	db	82
  1275  007F92  00                 	db	0
  1276  007F93  00                 	db	0
  1277  007F94  00                 	db	0
  1278  007F95  00                 	db	0
  1279  007F96  00                 	db	0
  1280  007F97  00                 	db	0
  1281  007F98  00                 	db	0
  1282  007F99  00                 	db	0
  1283  007F9A  00                 	db	0
  1284  007F9B  00                 	db	0
  1285  007F9C  00                 	db	0
  1286  007F9D  00                 	db	0
  1287  007F9E  00                 	db	0
  1288  007F9F  00                 	db	0
  1289  007FA0  00                 	db	0
  1290  007FA1  00                 	db	0
  1291  007FA2  00                 	db	0
  1292  007FA3  00                 	db	0
  1293  007FA4  00                 	db	0
  1294  007FA5  00                 	db	0
  1295  007FA6  00                 	db	0
  1296  007FA7  00                 	db	0
  1297  007FA8  00                 	db	0
  1298  007FA9  00                 	db	0
  1299  007FAA  00                 	db	0
  1300  007FAB  00                 	db	0
  1301  007FAC  00                 	db	0
  1302  007FAD  00                 	db	0
  1303  007FAE  00                 	db	0
  1304  007FAF  00                 	db	0
  1305  007FB0  00                 	db	0
  1306  007FB1  00                 	db	0
  1307  007FB2  00                 	db	0
  1308  007FB3  00                 	db	0
  1309  007FB4  00                 	db	0
  1310  007FB5  00                 	db	0
  1311  007FB6  00                 	db	0
  1312  007FB7  00                 	db	0
  1313  007FB8  00                 	db	0
  1314  007FB9  00                 	db	0
  1315  007FBA  00                 	db	0
  1316  007FBB  00                 	db	0
  1317  007FBC  00                 	db	0
  1318  007FBD  00                 	db	0
  1319  007FBE  00                 	db	0
  1320  007FBF  00                 	db	0
  1321  007FC0  00                 	db	0
  1322  007FC1  00                 	db	0
  1323  007FC2  00                 	db	0
  1324  007FC3  00                 	db	0
  1325  007FC4  00                 	db	0
  1326  007FC5  00                 	db	0
  1327  007FC6  00                 	db	0
  1328  007FC7  00                 	db	0
  1329  007FC8  00                 	db	0
  1330  007FC9  00                 	db	0
  1331  007FCA  00                 	db	0
  1332  007FCB  00                 	db	0
  1333  007FCC  00                 	db	0
  1334  007FCD  00                 	db	0
  1335  007FCE  00                 	db	0
  1336  007FCF  00                 	db	0
  1337  007FD0  00                 	db	0
  1338  007FD1  00                 	db	0
  1339  007FD2  00                 	db	0
  1340  007FD3  00                 	db	0
  1341  007FD4  00                 	db	0
  1342  007FD5  00                 	db	0
  1343  007FD6  00                 	db	0
  1344  007FD7  00                 	db	0
  1345  007FD8  00                 	db	0
  1346  007FD9  00                 	db	0
  1347  007FDA  00                 	db	0
  1348  007FDB  00                 	db	0
  1349  007FDC  00                 	db	0
  1350  007FDD                     __end_of_const_msgs:
  1351                           	callstack 0
  1352  007FDD  37BD               	dw	14269
  1353  007FDF  3586               	dw	13702
  1354  007FE1                     __end_of_t_osc:
  1355                           	callstack 0
  1356  007FE1  2400               	dw	9216
  1357  007FE3  4974               	dw	18804
  1358  007FE5                     __end_of_f_osc:
  1359                           	callstack 0
  1360  007FE5  2400               	dw	9216
  1361  007FE7  4A74               	dw	19060
  1362  007FE9                     __end_of_fosc:
  1363                           	callstack 0
  1364  0000                     _ADCON1	set	4033
  1365  0000                     _ADRESL	set	4035
  1366  0000                     _ADRESH	set	4036
  1367  0000                     _ADCON0bits	set	4034
  1368  0000                     _ADCON0	set	4034
  1369  0000                     _CCPR1L	set	4030
  1370  0000                     _CCP1CONbits	set	4029
  1371  0000                     _CCP1CON	set	4029
  1372  0000                     _PR2	set	4043
  1373  0000                     _T2CONbits	set	4042
  1374  0000                     _TMR2	set	4044
  1375  0000                     _T2CON	set	4042
  1376  0000                     _TMR0H	set	4055
  1377  0000                     _TMR0L	set	4054
  1378  0000                     _PORTEbits	set	3972
  1379  0000                     _PORTD	set	3971
  1380  0000                     _TRISCbits	set	3988
  1381  0000                     _TRISC	set	3988
  1382  0000                     _PORTC	set	3970
  1383  0000                     _TRISB	set	3987
  1384  0000                     _PORTB	set	3969
  1385  0000                     _TRISA	set	3986
  1386  0000                     _PORTA	set	3968
  1387  0000                     _LATA	set	3977
  1388  0000                     _T0CON	set	4053
  1389  0000                     _PIR1bits	set	3998
  1390  0000                     _PIE1bits	set	3997
  1391  0000                     _T0CONbits	set	4053
  1392  0000                     _LATAbits	set	3977
  1393  0000                     _INTCONbits	set	4082
  1394  0000                     _RCREG	set	4014
  1395  0000                     _TXREG	set	4013
  1396  0000                     _RCSTAbits	set	4011
  1397  0000                     _TXSTAbits	set	4012
  1398  0000                     _SPBRG	set	4015
  1399  0000                     _LATC	set	3979
  1400  0000                     _LATB	set	3978
  1401  007FE9                     STR_1:
  1402  007FE9  44                 	db	68	;'D'
  1403  007FEA  65                 	db	101	;'e'
  1404  007FEB  76                 	db	118	;'v'
  1405  007FEC  69                 	db	105	;'i'
  1406  007FED  63                 	db	99	;'c'
  1407  007FEE  65                 	db	101	;'e'
  1408  007FEF  20                 	db	32
  1409  007FF0  68                 	db	104	;'h'
  1410  007FF1  61                 	db	97	;'a'
  1411  007FF2  73                 	db	115	;'s'
  1412  007FF3  20                 	db	32
  1413  007FF4  62                 	db	98	;'b'
  1414  007FF5  65                 	db	101	;'e'
  1415  007FF6  65                 	db	101	;'e'
  1416  007FF7  6E                 	db	110	;'n'
  1417  007FF8  20                 	db	32
  1418  007FF9  72                 	db	114	;'r'
  1419  007FFA  65                 	db	101	;'e'
  1420  007FFB  73                 	db	115	;'s'
  1421  007FFC  65                 	db	101	;'e'
  1422  007FFD  74                 	db	116	;'t'
  1423  007FFE  00                 	db	0
  1424  007FFF  00                 	db	0	; dummy byte at the end
  1425  0000                     
  1426                           ; #config settings
  1427                           
  1428                           	psect	cinit
  1429  002B06                     __pcinit:
  1430                           	callstack 0
  1431  002B06                     start_initialization:
  1432                           	callstack 0
  1433  002B06                     __initialization:
  1434                           	callstack 0
  1435                           
  1436                           ; Initialize objects allocated to BANK0 (22 bytes)
  1437                           ; load TBLPTR registers with __pidataBANK0
  1438  002B06  0E76               	movlw	low __pidataBANK0
  1439  002B08  6EF6               	movwf	tblptrl,c
  1440  002B0A  0E2D               	movlw	high __pidataBANK0
  1441  002B0C  6EF7               	movwf	tblptrh,c
  1442  002B0E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1443  002B10  6EF8               	movwf	tblptru,c
  1444  002B12  EE00  F0E5         	lfsr	0,__pdataBANK0
  1445  002B16  EE10 F016          	lfsr	1,22
  1446  002B1A                     copy_data0:
  1447  002B1A  0009               	tblrd		*+
  1448  002B1C  CFF5 FFEE          	movff	tablat,postinc0
  1449  002B20  50E5               	movf	postdec1,w,c
  1450  002B22  50E1               	movf	fsr1l,w,c
  1451  002B24  E1FA               	bnz	copy_data0
  1452                           
  1453                           ; Clear objects allocated to BANK1 (12 bytes)
  1454  002B26  EE01  F000         	lfsr	0,__pbssBANK1
  1455  002B2A  0E0C               	movlw	12
  1456  002B2C                     clear_0:
  1457  002B2C  6AEE               	clrf	postinc0,c
  1458  002B2E  06E8               	decf	wreg,f,c
  1459  002B30  E1FD               	bnz	clear_0
  1460                           
  1461                           ; Clear objects allocated to BANK0 (66 bytes)
  1462  002B32  EE00  F080         	lfsr	0,__pbssBANK0
  1463  002B36  0E42               	movlw	66
  1464  002B38                     clear_1:
  1465  002B38  6AEE               	clrf	postinc0,c
  1466  002B3A  06E8               	decf	wreg,f,c
  1467  002B3C  E1FD               	bnz	clear_1
  1468  002B3E                     end_of_initialization:
  1469                           	callstack 0
  1470  002B3E                     __end_of__initialization:
  1471                           	callstack 0
  1472  002B3E  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1473  002B40  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1474  002B42  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1475  002B44  6EF8               	movwf	tblptru,c
  1476  002B46  0100               	movlb	0
  1477  002B48  EF3D  F000         	goto	_main	;jump to C main() function
  1478                           
  1479                           	psect	bssBANK0
  1480  000080                     __pbssBANK0:
  1481                           	callstack 0
  1482  000080                     roundf@F525:
  1483                           	callstack 0
  1484  000080                     	ds	4
  1485  000084                     _temperature_scaled:
  1486                           	callstack 0
  1487  000084                     	ds	2
  1488  000086                     _temperature_int:
  1489                           	callstack 0
  1490  000086                     	ds	2
  1491  000088                     _tank_error:
  1492                           	callstack 0
  1493  000088                     	ds	2
  1494  00008A                     _joint_dilutor_homed:
  1495                           	callstack 0
  1496  00008A                     	ds	2
  1497  00008C                     _end_effector_homed:
  1498                           	callstack 0
  1499  00008C                     	ds	2
  1500  00008E                     _joint_homed:
  1501                           	callstack 0
  1502  00008E                     	ds	2
  1503  000090                     _diluting_position_reached:
  1504                           	callstack 0
  1505  000090                     	ds	2
  1506  000092                     _grasping_ee_position_reached:
  1507                           	callstack 0
  1508  000092                     	ds	2
  1509  000094                     _grasping_joint_position_reached:
  1510                           	callstack 0
  1511  000094                     	ds	2
  1512  000096                     _move_to_trash:
  1513                           	callstack 0
  1514  000096                     	ds	2
  1515  000098                     _trash_counter:
  1516                           	callstack 0
  1517  000098                     	ds	2
  1518  00009A                     _dilution_done:
  1519                           	callstack 0
  1520  00009A                     	ds	2
  1521  00009C                     _mix_counter:
  1522                           	callstack 0
  1523  00009C                     	ds	2
  1524  00009E                     _mix_step_counter:
  1525                           	callstack 0
  1526  00009E                     	ds	2
  1527  0000A0                     _mix_direction:
  1528                           	callstack 0
  1529  0000A0                     	ds	2
  1530  0000A2                     _mix_current_step:
  1531                           	callstack 0
  1532  0000A2                     	ds	2
  1533  0000A4                     _timer_done:
  1534                           	callstack 0
  1535  0000A4                     	ds	1
  1536  0000A5                     _read_new_char:
  1537                           	callstack 0
  1538  0000A5                     	ds	1
  1539  0000A6                     _idle_msg_sent:
  1540                           	callstack 0
  1541  0000A6                     	ds	1
  1542  0000A7                     _state_changed:
  1543                           	callstack 0
  1544  0000A7                     	ds	1
  1545  0000A8                     _end_effector_stepper:
  1546                           	callstack 0
  1547  0000A8                     	ds	12
  1548  0000B4                     _joint_stepper:
  1549                           	callstack 0
  1550  0000B4                     	ds	12
  1551  0000C0                     _state:
  1552                           	callstack 0
  1553  0000C0                     	ds	2
  1554                           
  1555                           	psect	dataBANK0
  1556  0000E5                     __pdataBANK0:
  1557                           	callstack 0
  1558  0000E5                     	ds	4
  1559  0000E9                     	ds	4
  1560  0000ED                     _state_before_error:
  1561                           	callstack 0
  1562  0000ED                     	ds	2
  1563  0000EF                     _tmr2_prescaler:
  1564                           	callstack 0
  1565  0000EF                     	ds	4
  1566  0000F3                     _hex_end_effector_values:
  1567                           	callstack 0
  1568  0000F3                     	ds	4
  1569  0000F7                     _hex_joint_values:
  1570                           	callstack 0
  1571  0000F7                     	ds	4
  1572                           
  1573                           	psect	bssBANK1
  1574  000100                     __pbssBANK1:
  1575                           	callstack 0
  1576  000100                     _joint_dilutor_stepper:
  1577                           	callstack 0
  1578  000100                     	ds	12
  1579                           
  1580                           	psect	cstackBANK0
  1581  0000C2                     __pcstackBANK0:
  1582                           	callstack 0
  1583  0000C2                     ?_roundf:
  1584                           	callstack 0
  1585  0000C2                     check_temperature@grad:
  1586                           	callstack 0
  1587  0000C2                     roundf@x:
  1588                           	callstack 0
  1589                           
  1590                           ; 4 bytes @ 0x0
  1591  0000C2                     	ds	4
  1592  0000C6                     ??_roundf:
  1593                           
  1594                           ; 1 bytes @ 0x4
  1595  0000C6                     	ds	4
  1596  0000CA                     _roundf$1739:
  1597                           	callstack 0
  1598                           
  1599                           ; 4 bytes @ 0x8
  1600  0000CA                     	ds	4
  1601  0000CE                     roundf@e:
  1602                           	callstack 0
  1603                           
  1604                           ; 2 bytes @ 0xC
  1605  0000CE                     	ds	2
  1606  0000D0                     _roundf$1738:
  1607                           	callstack 0
  1608                           
  1609                           ; 4 bytes @ 0xE
  1610  0000D0                     	ds	4
  1611  0000D4                     roundf@u:
  1612                           	callstack 0
  1613                           
  1614                           ; 4 bytes @ 0x12
  1615  0000D4                     	ds	4
  1616  0000D8                     roundf@y:
  1617                           	callstack 0
  1618                           
  1619                           ; 4 bytes @ 0x16
  1620  0000D8                     	ds	4
  1621  0000DC                     ??_main:
  1622                           
  1623                           ; 1 bytes @ 0x1A
  1624  0000DC                     	ds	2
  1625  0000DE                     main@current_temp:
  1626                           	callstack 0
  1627                           
  1628                           ; 2 bytes @ 0x1C
  1629  0000DE                     	ds	2
  1630  0000E0                     _main$1736:
  1631                           	callstack 0
  1632                           
  1633                           ; 4 bytes @ 0x1E
  1634  0000E0                     	ds	4
  1635  0000E4                     main@rx_char:
  1636                           	callstack 0
  1637                           
  1638                           ; 1 bytes @ 0x22
  1639  0000E4                     	ds	1
  1640                           
  1641                           	psect	cstackCOMRAM
  1642  000001                     __pcstackCOMRAM:
  1643                           	callstack 0
  1644  000001                     ?_abs:
  1645                           	callstack 0
  1646  000001                     ?___wmul:
  1647                           	callstack 0
  1648  000001                     ?___flneg:
  1649                           	callstack 0
  1650  000001                     serial_tx_char@val:
  1651                           	callstack 0
  1652  000001                     get_reg_value@rx_char:
  1653                           	callstack 0
  1654  000001                     lcd_wr@val:
  1655                           	callstack 0
  1656  000001                     state_translator_micro_to_fpga@state:
  1657                           	callstack 0
  1658  000001                     init_stepper@stepper_motor:
  1659                           	callstack 0
  1660  000001                     turn_on_current_coil@stepper_motor:
  1661                           	callstack 0
  1662  000001                     update_current_coil@stepper_motor:
  1663                           	callstack 0
  1664  000001                     change_direction@stepper_motor:
  1665                           	callstack 0
  1666  000001                     ___wmul@multiplier:
  1667                           	callstack 0
  1668  000001                     abs@a:
  1669                           	callstack 0
  1670  000001                     ___flneg@f1:
  1671                           	callstack 0
  1672                           
  1673                           ; 4 bytes @ 0x0
  1674  000001                     	ds	1
  1675  000002                     lcd_cmd@val:
  1676                           	callstack 0
  1677  000002                     lcd_dat@val:
  1678                           	callstack 0
  1679                           
  1680                           ; 1 bytes @ 0x1
  1681  000002                     	ds	1
  1682  000003                     ??_lcd_init:
  1683  000003                     ??_change_direction:
  1684  000003                     ??_abs:
  1685  000003                     ??_turn_on_current_coil:
  1686  000003                     ??_update_current_coil:
  1687  000003                     state_translator_fpga_to_micro@state:
  1688                           	callstack 0
  1689  000003                     init_stepper@current_coil:
  1690                           	callstack 0
  1691  000003                     ___wmul@multiplicand:
  1692                           	callstack 0
  1693                           
  1694                           ; 2 bytes @ 0x2
  1695  000003                     	ds	2
  1696  000005                     ?___awdiv:
  1697                           	callstack 0
  1698  000005                     state_translator_fpga_to_micro@state_machine_code:
  1699                           	callstack 0
  1700  000005                     state_translator_micro_to_fpga@state_machine_code:
  1701                           	callstack 0
  1702  000005                     init_stepper@step_counter:
  1703                           	callstack 0
  1704  000005                     ___wmul@product:
  1705                           	callstack 0
  1706  000005                     ___awdiv@dividend:
  1707                           	callstack 0
  1708                           
  1709                           ; 2 bytes @ 0x4
  1710  000005                     	ds	2
  1711  000007                     lcd_str@str:
  1712                           	callstack 0
  1713  000007                     init_stepper@direction:
  1714                           	callstack 0
  1715  000007                     ___awdiv@divisor:
  1716                           	callstack 0
  1717                           
  1718                           ; 2 bytes @ 0x6
  1719  000007                     	ds	2
  1720  000009                     ??_lcd_str:
  1721  000009                     ?_reach_goal:
  1722                           	callstack 0
  1723  000009                     ___awdiv@counter:
  1724                           	callstack 0
  1725  000009                     init_stepper@hex_coil_register_values:
  1726                           	callstack 0
  1727  000009                     reach_goal@stepper_motor:
  1728                           	callstack 0
  1729                           
  1730                           ; 2 bytes @ 0x8
  1731  000009                     	ds	1
  1732  00000A                     ___awdiv@sign:
  1733                           	callstack 0
  1734                           
  1735                           ; 1 bytes @ 0x9
  1736  00000A                     	ds	1
  1737  00000B                     lcd_str@i:
  1738                           	callstack 0
  1739  00000B                     init_stepper@register_name:
  1740                           	callstack 0
  1741  00000B                     reach_goal@goal_to_reach:
  1742                           	callstack 0
  1743  00000B                     ___awdiv@quotient:
  1744                           	callstack 0
  1745                           
  1746                           ; 2 bytes @ 0xA
  1747  00000B                     	ds	1
  1748  00000C                     lcd_update@state:
  1749                           	callstack 0
  1750                           
  1751                           ; 2 bytes @ 0xB
  1752  00000C                     	ds	1
  1753  00000D                     ??_init_stepper:
  1754  00000D                     ??_reach_goal:
  1755  00000D                     ?___xxtofl:
  1756                           	callstack 0
  1757  00000D                     ___xxtofl@val:
  1758                           	callstack 0
  1759                           
  1760                           ; 4 bytes @ 0xC
  1761  00000D                     	ds	1
  1762  00000E                     ??_lcd_update:
  1763                           
  1764                           ; 1 bytes @ 0xD
  1765  00000E                     	ds	1
  1766  00000F                     init_stepper@i:
  1767                           	callstack 0
  1768                           
  1769                           ; 2 bytes @ 0xE
  1770  00000F                     	ds	1
  1771  000010                     lcd_update@line_select:
  1772                           	callstack 0
  1773                           
  1774                           ; 4 bytes @ 0xF
  1775  000010                     	ds	1
  1776  000011                     ??___xxtofl:
  1777                           
  1778                           ; 1 bytes @ 0x10
  1779  000011                     	ds	3
  1780  000014                     lcd_update@i:
  1781                           	callstack 0
  1782                           
  1783                           ; 2 bytes @ 0x13
  1784  000014                     	ds	1
  1785  000015                     ___xxtofl@sign:
  1786                           	callstack 0
  1787                           
  1788                           ; 1 bytes @ 0x14
  1789  000015                     	ds	1
  1790  000016                     ___xxtofl@exp:
  1791                           	callstack 0
  1792                           
  1793                           ; 1 bytes @ 0x15
  1794  000016                     	ds	1
  1795  000017                     ___xxtofl@arg:
  1796                           	callstack 0
  1797                           
  1798                           ; 4 bytes @ 0x16
  1799  000017                     	ds	4
  1800  00001B                     ?___flmul:
  1801                           	callstack 0
  1802  00001B                     ___flmul@b:
  1803                           	callstack 0
  1804                           
  1805                           ; 4 bytes @ 0x1A
  1806  00001B                     	ds	4
  1807  00001F                     ___flmul@a:
  1808                           	callstack 0
  1809                           
  1810                           ; 4 bytes @ 0x1E
  1811  00001F                     	ds	4
  1812  000023                     ??___flmul:
  1813                           
  1814                           ; 1 bytes @ 0x22
  1815  000023                     	ds	4
  1816  000027                     ___flmul@sign:
  1817                           	callstack 0
  1818                           
  1819                           ; 1 bytes @ 0x26
  1820  000027                     	ds	1
  1821  000028                     ___flmul@grs:
  1822                           	callstack 0
  1823                           
  1824                           ; 4 bytes @ 0x27
  1825  000028                     	ds	4
  1826  00002C                     ___flmul@aexp:
  1827                           	callstack 0
  1828                           
  1829                           ; 1 bytes @ 0x2B
  1830  00002C                     	ds	1
  1831  00002D                     ___flmul@bexp:
  1832                           	callstack 0
  1833                           
  1834                           ; 1 bytes @ 0x2C
  1835  00002D                     	ds	1
  1836  00002E                     ___flmul@prod:
  1837                           	callstack 0
  1838                           
  1839                           ; 4 bytes @ 0x2D
  1840  00002E                     	ds	4
  1841  000032                     ___flmul@temp:
  1842                           	callstack 0
  1843                           
  1844                           ; 2 bytes @ 0x31
  1845  000032                     	ds	2
  1846  000034                     ?___fldiv:
  1847                           	callstack 0
  1848  000034                     ___fldiv@b:
  1849                           	callstack 0
  1850                           
  1851                           ; 4 bytes @ 0x33
  1852  000034                     	ds	4
  1853  000038                     ___fldiv@a:
  1854                           	callstack 0
  1855                           
  1856                           ; 4 bytes @ 0x37
  1857  000038                     	ds	4
  1858  00003C                     ??___fldiv:
  1859                           
  1860                           ; 1 bytes @ 0x3B
  1861  00003C                     	ds	4
  1862  000040                     ___fldiv@rem:
  1863                           	callstack 0
  1864                           
  1865                           ; 4 bytes @ 0x3F
  1866  000040                     	ds	4
  1867  000044                     ___fldiv@sign:
  1868                           	callstack 0
  1869                           
  1870                           ; 1 bytes @ 0x43
  1871  000044                     	ds	1
  1872  000045                     ___fldiv@new_exp:
  1873                           	callstack 0
  1874                           
  1875                           ; 2 bytes @ 0x44
  1876  000045                     	ds	2
  1877  000047                     ___fldiv@grs:
  1878                           	callstack 0
  1879                           
  1880                           ; 4 bytes @ 0x46
  1881  000047                     	ds	4
  1882  00004B                     ___fldiv@bexp:
  1883                           	callstack 0
  1884                           
  1885                           ; 1 bytes @ 0x4A
  1886  00004B                     	ds	1
  1887  00004C                     ___fldiv@aexp:
  1888                           	callstack 0
  1889                           
  1890                           ; 1 bytes @ 0x4B
  1891  00004C                     	ds	1
  1892  00004D                     ?___fladd:
  1893                           	callstack 0
  1894  00004D                     ___fladd@b:
  1895                           	callstack 0
  1896                           
  1897                           ; 4 bytes @ 0x4C
  1898  00004D                     	ds	4
  1899  000051                     ___fladd@a:
  1900                           	callstack 0
  1901                           
  1902                           ; 4 bytes @ 0x50
  1903  000051                     	ds	4
  1904  000055                     ??___fladd:
  1905                           
  1906                           ; 1 bytes @ 0x54
  1907  000055                     	ds	4
  1908  000059                     ___fladd@signs:
  1909                           	callstack 0
  1910                           
  1911                           ; 1 bytes @ 0x58
  1912  000059                     	ds	1
  1913  00005A                     ___fladd@aexp:
  1914                           	callstack 0
  1915                           
  1916                           ; 1 bytes @ 0x59
  1917  00005A                     	ds	1
  1918  00005B                     ___fladd@bexp:
  1919                           	callstack 0
  1920                           
  1921                           ; 1 bytes @ 0x5A
  1922  00005B                     	ds	1
  1923  00005C                     ___fladd@grs:
  1924                           	callstack 0
  1925                           
  1926                           ; 1 bytes @ 0x5B
  1927  00005C                     	ds	1
  1928  00005D                     ?___flsub:
  1929                           	callstack 0
  1930  00005D                     ___flsub@b:
  1931                           	callstack 0
  1932                           
  1933                           ; 4 bytes @ 0x5C
  1934  00005D                     	ds	4
  1935  000061                     ___flsub@a:
  1936                           	callstack 0
  1937                           
  1938                           ; 4 bytes @ 0x60
  1939  000061                     	ds	4
  1940  000065                     ?___fltol:
  1941                           	callstack 0
  1942  000065                     ___fltol@f1:
  1943                           	callstack 0
  1944                           
  1945                           ; 4 bytes @ 0x64
  1946  000065                     	ds	4
  1947  000069                     ??___fltol:
  1948                           
  1949                           ; 1 bytes @ 0x68
  1950  000069                     	ds	4
  1951  00006D                     ___fltol@sign1:
  1952                           	callstack 0
  1953                           
  1954                           ; 1 bytes @ 0x6C
  1955  00006D                     	ds	1
  1956  00006E                     ___fltol@exp1:
  1957                           	callstack 0
  1958                           
  1959                           ; 1 bytes @ 0x6D
  1960  00006E                     	ds	1
  1961  00006F                     ?_get_liters:
  1962                           	callstack 0
  1963  00006F                     ?_get_temperature:
  1964                           	callstack 0
  1965  00006F                     update_pwm_duty_ccp1@time_up:
  1966                           	callstack 0
  1967  00006F                     _init_timer_2$1737:
  1968                           	callstack 0
  1969                           
  1970                           ; 4 bytes @ 0x6E
  1971  00006F                     	ds	2
  1972  000071                     ___flge@ff1:
  1973                           	callstack 0
  1974                           
  1975                           ; 4 bytes @ 0x70
  1976  000071                     	ds	2
  1977  000073                     ??_update_pwm_duty_ccp1:
  1978                           
  1979                           ; 1 bytes @ 0x72
  1980  000073                     	ds	2
  1981  000075                     update_pwm_duty_ccp1@new_duty:
  1982                           	callstack 0
  1983  000075                     ___flge@ff2:
  1984                           	callstack 0
  1985                           
  1986                           ; 4 bytes @ 0x74
  1987  000075                     	ds	2
  1988  000077                     update_pwm_duty_ccp1@lsbs_duty:
  1989                           	callstack 0
  1990                           
  1991                           ; 1 bytes @ 0x76
  1992  000077                     	ds	1
  1993  000078                     
  1994                           ; 1 bytes @ 0x77
  1995  000078                     	ds	1
  1996  000079                     ??___flge:
  1997                           
  1998                           ; 1 bytes @ 0x78
  1999  000079                     	ds	4
  2000  00007D                     ?_check_temperature:
  2001                           	callstack 0
  2002  00007D                     check_temperature@temp_to_be_checked:
  2003                           	callstack 0
  2004                           
  2005                           ; 2 bytes @ 0x7C
  2006  00007D                     	ds	2
  2007  00007F                     
  2008                           ; 1 bytes @ 0x7E
  2009 ;;
  2010 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2011 ;;
  2012 ;; *************** function _main *****************
  2013 ;; Defined at:
  2014 ;;		line 58 in file "main.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;		None
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;  current_temp    2   28[BANK0 ] int 
  2019 ;;  greet_str     240    0        PTR const unsigned char 
  2020 ;;  rx_char         1   34[BANK0 ] unsigned char 
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      void 
  2023 ;; Registers used:
  2024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2030 ;;      Params:         0       0       0       0       0       0       0
  2031 ;;      Locals:         0       7       0       0       0       0       0
  2032 ;;      Temps:          0       2       0       0       0       0       0
  2033 ;;      Totals:         0       9       0       0       0       0       0
  2034 ;;Total ram usage:        9 bytes
  2035 ;; Hardware stack levels required when called:    5
  2036 ;; This function calls:
  2037 ;;		___flge
  2038 ;;		___wmul
  2039 ;;		___xxtofl
  2040 ;;		_change_direction
  2041 ;;		_check_temperature
  2042 ;;		_configure_ad_conversion_oven
  2043 ;;		_configure_ad_conversion_tank
  2044 ;;		_get_liters
  2045 ;;		_get_reg_value
  2046 ;;		_get_temperature
  2047 ;;		_init_PORTS
  2048 ;;		_init_USART
  2049 ;;		_init_ccp1
  2050 ;;		_init_interrupts
  2051 ;;		_init_stepper
  2052 ;;		_init_timer_0
  2053 ;;		_init_timer_2
  2054 ;;		_lcd_cmd
  2055 ;;		_lcd_init
  2056 ;;		_lcd_str
  2057 ;;		_lcd_update
  2058 ;;		_reach_goal
  2059 ;;		_serial_tx_char
  2060 ;;		_state_translator_fpga_to_micro
  2061 ;;		_state_translator_micro_to_fpga
  2062 ;;		_wait_for_zero
  2063 ;; This function is called by:
  2064 ;;		Startup code after reset
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	text0
  2069  00007A                     __ptext0:
  2070                           	callstack 0
  2071  00007A                     _main:
  2072                           	callstack 26
  2073  00007A  FFFF               	dw	65535	; assembler added errata NOP
  2074                           
  2075                           ;main.c: 60:     init_PORTS();
  2076  00007C  EC03  F016         	call	_init_PORTS	;wreg free
  2077  000080                     
  2078                           ;main.c: 61:     init_USART();
  2079  000080  ECA6  F015         	call	_init_USART	;wreg free
  2080  000084                     
  2081                           ;main.c: 62:     init_timer_2();
  2082  000084  EC38  F012         	call	_init_timer_2	;wreg free
  2083  000088                     
  2084                           ;main.c: 63:     init_ccp1();
  2085  000088  EC7C  F016         	call	_init_ccp1	;wreg free
  2086  00008C                     
  2087                           ;main.c: 64:     init_interrupts();
  2088  00008C  ECD4  F016         	call	_init_interrupts	;wreg free
  2089  000090                     
  2090                           ;main.c: 66:     init_stepper(&joint_stepper, 0, 0, 1, hex_joint_values, &LATB);
  2091  000090  0EB4               	movlw	low _joint_stepper
  2092  000092  6E01               	movwf	init_stepper@stepper_motor^0,c
  2093  000094  0E00               	movlw	high _joint_stepper
  2094  000096  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  2095  000098  0E00               	movlw	0
  2096  00009A  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  2097  00009C  0E00               	movlw	0
  2098  00009E  6E03               	movwf	init_stepper@current_coil^0,c
  2099  0000A0  0E00               	movlw	0
  2100  0000A2  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  2101  0000A4  0E00               	movlw	0
  2102  0000A6  6E05               	movwf	init_stepper@step_counter^0,c
  2103  0000A8  0E00               	movlw	0
  2104  0000AA  6E08               	movwf	(init_stepper@direction+1)^0,c
  2105  0000AC  0E01               	movlw	1
  2106  0000AE  6E07               	movwf	init_stepper@direction^0,c
  2107  0000B0  0EF7               	movlw	low _hex_joint_values
  2108  0000B2  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  2109  0000B4  0E00               	movlw	high _hex_joint_values
  2110  0000B6  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  2111  0000B8  0E8A               	movlw	138
  2112  0000BA  6E0B               	movwf	init_stepper@register_name^0,c
  2113  0000BC  0E0F               	movlw	15
  2114  0000BE  6E0C               	movwf	(init_stepper@register_name+1)^0,c
  2115  0000C0  EC5D  F013         	call	_init_stepper	;wreg free
  2116  0000C4                     
  2117                           ;main.c: 67:     init_stepper(&end_effector_stepper, 0, 0, 1, hex_end_effector_values, &
      +                          LATB);
  2118  0000C4  0EA8               	movlw	low _end_effector_stepper
  2119  0000C6  6E01               	movwf	init_stepper@stepper_motor^0,c
  2120  0000C8  0E00               	movlw	high _end_effector_stepper
  2121  0000CA  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  2122  0000CC  0E00               	movlw	0
  2123  0000CE  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  2124  0000D0  0E00               	movlw	0
  2125  0000D2  6E03               	movwf	init_stepper@current_coil^0,c
  2126  0000D4  0E00               	movlw	0
  2127  0000D6  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  2128  0000D8  0E00               	movlw	0
  2129  0000DA  6E05               	movwf	init_stepper@step_counter^0,c
  2130  0000DC  0E00               	movlw	0
  2131  0000DE  6E08               	movwf	(init_stepper@direction+1)^0,c
  2132  0000E0  0E01               	movlw	1
  2133  0000E2  6E07               	movwf	init_stepper@direction^0,c
  2134  0000E4  0EF3               	movlw	low _hex_end_effector_values
  2135  0000E6  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  2136  0000E8  0E00               	movlw	high _hex_end_effector_values
  2137  0000EA  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  2138  0000EC  0E8A               	movlw	138
  2139  0000EE  6E0B               	movwf	init_stepper@register_name^0,c
  2140  0000F0  0E0F               	movlw	15
  2141  0000F2  6E0C               	movwf	(init_stepper@register_name+1)^0,c
  2142  0000F4  EC5D  F013         	call	_init_stepper	;wreg free
  2143  0000F8                     
  2144                           ;main.c: 68:     init_stepper(&joint_dilutor_stepper, 0, 0, 1, hex_joint_values, &LATC);
  2145  0000F8  0E00               	movlw	low _joint_dilutor_stepper
  2146  0000FA  6E01               	movwf	init_stepper@stepper_motor^0,c
  2147  0000FC  0E01               	movlw	high _joint_dilutor_stepper
  2148  0000FE  6E02               	movwf	(init_stepper@stepper_motor+1)^0,c
  2149  000100  0E00               	movlw	0
  2150  000102  6E04               	movwf	(init_stepper@current_coil+1)^0,c
  2151  000104  0E00               	movlw	0
  2152  000106  6E03               	movwf	init_stepper@current_coil^0,c
  2153  000108  0E00               	movlw	0
  2154  00010A  6E06               	movwf	(init_stepper@step_counter+1)^0,c
  2155  00010C  0E00               	movlw	0
  2156  00010E  6E05               	movwf	init_stepper@step_counter^0,c
  2157  000110  0E00               	movlw	0
  2158  000112  6E08               	movwf	(init_stepper@direction+1)^0,c
  2159  000114  0E01               	movlw	1
  2160  000116  6E07               	movwf	init_stepper@direction^0,c
  2161  000118  0EF7               	movlw	low _hex_joint_values
  2162  00011A  6E09               	movwf	init_stepper@hex_coil_register_values^0,c
  2163  00011C  0E00               	movlw	high _hex_joint_values
  2164  00011E  6E0A               	movwf	(init_stepper@hex_coil_register_values+1)^0,c
  2165  000120  0E8B               	movlw	139
  2166  000122  6E0B               	movwf	init_stepper@register_name^0,c
  2167  000124  0E0F               	movlw	15
  2168  000126  6E0C               	movwf	(init_stepper@register_name+1)^0,c
  2169  000128  EC5D  F013         	call	_init_stepper	;wreg free
  2170  00012C                     
  2171                           ;main.c: 70:     lcd_init();
  2172  00012C  ECF6  F013         	call	_lcd_init	;wreg free
  2173  000130                     
  2174                           ;main.c: 71:     lcd_cmd(0x0C);
  2175  000130  0E0C               	movlw	12
  2176  000132  EC43  F016         	call	_lcd_cmd
  2177  000136                     
  2178                           ;main.c: 73:     lcd_cmd(0x01);
  2179  000136  0E01               	movlw	1
  2180  000138  EC43  F016         	call	_lcd_cmd
  2181  00013C                     
  2182                           ;main.c: 74:     lcd_cmd(0x80);
  2183  00013C  0E80               	movlw	128
  2184  00013E  EC43  F016         	call	_lcd_cmd
  2185  000142                     
  2186                           ;main.c: 75:     lcd_str("Device has been reset");
  2187  000142  0EE9               	movlw	low STR_1
  2188  000144  6E07               	movwf	lcd_str@str^0,c
  2189  000146  0E7F               	movlw	high STR_1
  2190  000148  6E08               	movwf	(lcd_str@str+1)^0,c
  2191  00014A  ECDF  F014         	call	_lcd_str	;wreg free
  2192  00014E                     
  2193                           ;main.c: 77:     (INTCONbits.GIE = 1);
  2194  00014E  8EF2               	bsf	242,7,c	;volatile
  2195  000150                     
  2196                           ;main.c: 79:     mix_counter = 0;
  2197  000150  0E00               	movlw	0
  2198  000152  0100               	movlb	0	; () banked
  2199  000154  6F9D               	movwf	(_mix_counter+1)& (0+255),b
  2200  000156  0E00               	movlw	0
  2201  000158  6F9C               	movwf	_mix_counter& (0+255),b
  2202  00015A                     l3464:
  2203  00015A  FFFF               	dw	65535	; assembler added errata NOP
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;main.c: 82:         if (state_changed){
  2207  00015C  51A7               	movf	_state_changed& (0+255),w,b
  2208  00015E  B4D8               	btfsc	status,2,c
  2209  000160  EFB4  F000         	goto	u3441
  2210  000164  EFB7  F000         	goto	u3440
  2211  000168                     u3441:
  2212  000168  FFFF               	dw	65535	; assembler added errata NOP
  2213  00016A  EFE7  F000         	goto	l3482
  2214  00016E                     u3440:
  2215  00016E  FFFF               	dw	65535	; assembler added errata NOP
  2216  000170                     
  2217                           ; BSR set to: 0
  2218                           ;main.c: 83:             const char* greet_str[80];;main.c: 84:             if (read_new
      +                          _char){
  2219  000170  51A5               	movf	_read_new_char& (0+255),w,b
  2220  000172  B4D8               	btfsc	status,2,c
  2221  000174  EFBE  F000         	goto	u3451
  2222  000178  EFC1  F000         	goto	u3450
  2223  00017C                     u3451:
  2224  00017C  FFFF               	dw	65535	; assembler added errata NOP
  2225  00017E  EFD2  F000         	goto	l3474
  2226  000182                     u3450:
  2227  000182  FFFF               	dw	65535	; assembler added errata NOP
  2228  000184                     
  2229                           ; BSR set to: 0
  2230                           ;main.c: 85:                 rx_char = get_reg_value();
  2231  000184  ECC6  F016         	call	_get_reg_value	;wreg free
  2232  000188  0100               	movlb	0	; () banked
  2233  00018A  6FE4               	movwf	main@rx_char& (0+255),b
  2234  00018C                     
  2235                           ; BSR set to: 0
  2236                           ;main.c: 86:                 state_translator_fpga_to_micro(rx_char, &state);
  2237  00018C  0EC0               	movlw	low _state
  2238  00018E  6E03               	movwf	state_translator_fpga_to_micro@state^0,c
  2239  000190  0E00               	movlw	high _state
  2240  000192  6E04               	movwf	(state_translator_fpga_to_micro@state+1)^0,c
  2241  000194  51E4               	movf	main@rx_char& (0+255),w,b
  2242  000196  EC02  F00F         	call	_state_translator_fpga_to_micro
  2243  00019A                     
  2244                           ;main.c: 87:                 read_new_char = 0;
  2245  00019A  0E00               	movlw	0
  2246  00019C  0100               	movlb	0	; () banked
  2247  00019E  6FA5               	movwf	_read_new_char& (0+255),b
  2248                           
  2249                           ;main.c: 88:             } else {
  2250  0001A0  EFDB  F000         	goto	l3476
  2251  0001A4                     l3474:
  2252  0001A4  FFFF               	dw	65535	; assembler added errata NOP
  2253                           
  2254                           ; BSR set to: 0
  2255                           ;main.c: 89:                 serial_tx_char(state_translator_micro_to_fpga(&state));
  2256  0001A6  0EC0               	movlw	low _state
  2257  0001A8  6E01               	movwf	state_translator_micro_to_fpga@state^0,c
  2258  0001AA  0E00               	movlw	high _state
  2259  0001AC  6E02               	movwf	(state_translator_micro_to_fpga@state+1)^0,c
  2260  0001AE  ECB1  F013         	call	_state_translator_micro_to_fpga	;wreg free
  2261  0001B2  EC8D  F016         	call	_serial_tx_char
  2262  0001B6                     l3476:
  2263  0001B6  FFFF               	dw	65535	; assembler added errata NOP
  2264                           
  2265                           ;main.c: 91:             lcd_update(state);
  2266  0001B8  C0C0  F00C         	movff	_state,lcd_update@state
  2267  0001BC  C0C1  F00D         	movff	_state+1,lcd_update@state+1
  2268  0001C0  ECFF  F012         	call	_lcd_update	;wreg free
  2269  0001C4                     
  2270                           ;main.c: 92:             state_changed = 0;
  2271  0001C4  0E00               	movlw	0
  2272  0001C6  0100               	movlb	0	; () banked
  2273  0001C8  6FA7               	movwf	_state_changed& (0+255),b
  2274  0001CA                     
  2275                           ; BSR set to: 0
  2276                           ;main.c: 93:             idle_msg_sent = 0;
  2277  0001CA  0E00               	movlw	0
  2278  0001CC  6FA6               	movwf	_idle_msg_sent& (0+255),b
  2279  0001CE                     l3482:
  2280  0001CE  FFFF               	dw	65535	; assembler added errata NOP
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;main.c: 96:         tank_error = 0;
  2284  0001D0  0E00               	movlw	0
  2285  0001D2  6F89               	movwf	(_tank_error+1)& (0+255),b
  2286  0001D4  0E00               	movlw	0
  2287  0001D6  6F88               	movwf	_tank_error& (0+255),b
  2288  0001D8                     
  2289                           ; BSR set to: 0
  2290                           ;main.c: 108:         if (state == 2){
  2291  0001D8  0E02               	movlw	2
  2292  0001DA  19C0               	xorwf	_state& (0+255),w,b
  2293  0001DC  11C1               	iorwf	(_state+1)& (0+255),w,b
  2294  0001DE  A4D8               	btfss	status,2,c
  2295  0001E0  EFF4  F000         	goto	u3461
  2296  0001E4  EFF7  F000         	goto	u3460
  2297  0001E8                     u3461:
  2298  0001E8  FFFF               	dw	65535	; assembler added errata NOP
  2299  0001EA  EFFB  F000         	goto	l159
  2300  0001EE                     u3460:
  2301  0001EE  FFFF               	dw	65535	; assembler added errata NOP
  2302  0001F0                     
  2303                           ; BSR set to: 0
  2304                           ;main.c: 109:             LATAbits.LATA1 = 1;
  2305  0001F0  8289               	bsf	137,1,c	;volatile
  2306                           
  2307                           ;main.c: 110:         } else {
  2308  0001F2  EFAD  F000         	goto	l3464
  2309  0001F6                     l159:
  2310  0001F6  FFFF               	dw	65535	; assembler added errata NOP
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;main.c: 111:             LATAbits.LATA1 = 0;
  2314  0001F8  9289               	bcf	137,1,c	;volatile
  2315  0001FA                     
  2316                           ; BSR set to: 0
  2317                           ;main.c: 112:             if (state == 0) {
  2318  0001FA  51C0               	movf	_state& (0+255),w,b
  2319  0001FC  11C1               	iorwf	(_state+1)& (0+255),w,b
  2320  0001FE  A4D8               	btfss	status,2,c
  2321  000200  EF04  F001         	goto	u3471
  2322  000204  EF07  F001         	goto	u3470
  2323  000208                     u3471:
  2324  000208  FFFF               	dw	65535	; assembler added errata NOP
  2325  00020A  EF50  F001         	goto	l3498
  2326  00020E                     u3470:
  2327  00020E  FFFF               	dw	65535	; assembler added errata NOP
  2328  000210                     
  2329                           ; BSR set to: 0
  2330                           ;main.c: 114:                 configure_ad_conversion_tank();
  2331  000210  EC9D  F016         	call	_configure_ad_conversion_tank	;wreg free
  2332  000214                     
  2333                           ;main.c: 115:                 if (get_liters() < 0.1){
  2334  000214  ECA9  F014         	call	_get_liters	;wreg free
  2335  000218  C06F  F0E0         	movff	?_get_liters,_main$1736
  2336  00021C  C070  F0E1         	movff	?_get_liters+1,_main$1736+1
  2337  000220  0100               	movlb	0	; () banked
  2338  000222  0E00               	movlw	0
  2339  000224  BFE1               	btfsc	(_main$1736+1)& (0+255),7,b
  2340  000226  0EFF               	movlw	-1
  2341  000228  6FE2               	movwf	(_main$1736+2)& (0+255),b
  2342  00022A  6FE3               	movwf	(_main$1736+3)& (0+255),b
  2343  00022C                     
  2344                           ; BSR set to: 0
  2345                           ;main.c: 115:                 if (get_liters() < 0.1){
  2346  00022C  C0E0  F00D         	movff	_main$1736,___xxtofl@val
  2347  000230  C0E1  F00E         	movff	_main$1736+1,___xxtofl@val+1
  2348  000234  C0E2  F00F         	movff	_main$1736+2,___xxtofl@val+2
  2349  000238  C0E3  F010         	movff	_main$1736+3,___xxtofl@val+3
  2350  00023C  0E01               	movlw	1
  2351  00023E  EC06  F00E         	call	___xxtofl
  2352  000242  C00D  F071         	movff	?___xxtofl,___flge@ff1
  2353  000246  C00E  F072         	movff	?___xxtofl+1,___flge@ff1+1
  2354  00024A  C00F  F073         	movff	?___xxtofl+2,___flge@ff1+2
  2355  00024E  C010  F074         	movff	?___xxtofl+3,___flge@ff1+3
  2356  000252  0ECD               	movlw	205
  2357  000254  6E75               	movwf	___flge@ff2^0,c
  2358  000256  0ECC               	movlw	204
  2359  000258  6E76               	movwf	(___flge@ff2+1)^0,c
  2360  00025A  0ECC               	movlw	204
  2361  00025C  6E77               	movwf	(___flge@ff2+2)^0,c
  2362  00025E  0E3D               	movlw	61
  2363  000260  6E78               	movwf	(___flge@ff2+3)^0,c
  2364  000262  EC54  F010         	call	___flge	;wreg free
  2365  000266  B0D8               	btfsc	status,0,c
  2366  000268  EF38  F001         	goto	u3481
  2367  00026C  EF3B  F001         	goto	u3480
  2368  000270                     u3481:
  2369  000270  FFFF               	dw	65535	; assembler added errata NOP
  2370  000272  EFAD  F004         	goto	l3650
  2371  000276                     u3480:
  2372  000276  FFFF               	dw	65535	; assembler added errata NOP
  2373  000278                     
  2374                           ;main.c: 116:                     state = 14;
  2375  000278  0E00               	movlw	0
  2376  00027A  0100               	movlb	0	; () banked
  2377  00027C  6FC1               	movwf	(_state+1)& (0+255),b
  2378  00027E  0E0E               	movlw	14
  2379  000280  6FC0               	movwf	_state& (0+255),b
  2380                           
  2381                           ;main.c: 117:                     state_changed = 1;
  2382  000282  0E01               	movlw	1
  2383  000284  6FA7               	movwf	_state_changed& (0+255),b
  2384                           
  2385                           ;main.c: 118:                     tank_error = 1;
  2386  000286  0E00               	movlw	0
  2387  000288  6F89               	movwf	(_tank_error+1)& (0+255),b
  2388  00028A  0E01               	movlw	1
  2389  00028C  6F88               	movwf	_tank_error& (0+255),b
  2390                           
  2391                           ;main.c: 119:                     state_before_error = 0;
  2392  00028E  0E00               	movlw	0
  2393  000290  6FEE               	movwf	(_state_before_error+1)& (0+255),b
  2394  000292  0E00               	movlw	0
  2395  000294  6FED               	movwf	_state_before_error& (0+255),b
  2396  000296  EFAD  F004         	goto	l3650
  2397  00029A                     l162:
  2398  00029A  FFFF               	dw	65535	; assembler added errata NOP
  2399                           
  2400                           ;main.c: 121:             } else if (state == 1){
  2401  00029C  EFAD  F004         	goto	l3650
  2402  0002A0                     l3498:
  2403  0002A0  FFFF               	dw	65535	; assembler added errata NOP
  2404                           
  2405                           ; BSR set to: 0
  2406  0002A2  05C0               	decf	_state& (0+255),w,b
  2407  0002A4  11C1               	iorwf	(_state+1)& (0+255),w,b
  2408  0002A6  A4D8               	btfss	status,2,c
  2409  0002A8  EF58  F001         	goto	u3491
  2410  0002AC  EF5B  F001         	goto	u3490
  2411  0002B0                     u3491:
  2412  0002B0  FFFF               	dw	65535	; assembler added errata NOP
  2413  0002B2  EF66  F001         	goto	l3502
  2414  0002B6                     u3490:
  2415  0002B6  FFFF               	dw	65535	; assembler added errata NOP
  2416  0002B8                     l3500:
  2417  0002B8  FFFF               	dw	65535	; assembler added errata NOP
  2418                           
  2419                           ;main.c: 122:                 state = 2;
  2420  0002BA  0E00               	movlw	0
  2421  0002BC  0100               	movlb	0	; () banked
  2422  0002BE  6FC1               	movwf	(_state+1)& (0+255),b
  2423  0002C0  0E02               	movlw	2
  2424  0002C2  6FC0               	movwf	_state& (0+255),b
  2425                           
  2426                           ;main.c: 123:                 state_changed = 1;
  2427  0002C4  0E01               	movlw	1
  2428  0002C6  6FA7               	movwf	_state_changed& (0+255),b
  2429                           
  2430                           ;main.c: 124:             } else if (state == 3){
  2431  0002C8  EFAD  F004         	goto	l3650
  2432  0002CC                     l3502:
  2433  0002CC  FFFF               	dw	65535	; assembler added errata NOP
  2434                           
  2435                           ; BSR set to: 0
  2436  0002CE  0E03               	movlw	3
  2437  0002D0  19C0               	xorwf	_state& (0+255),w,b
  2438  0002D2  11C1               	iorwf	(_state+1)& (0+255),w,b
  2439  0002D4  A4D8               	btfss	status,2,c
  2440  0002D6  EF6F  F001         	goto	u3501
  2441  0002DA  EF72  F001         	goto	u3500
  2442  0002DE                     u3501:
  2443  0002DE  FFFF               	dw	65535	; assembler added errata NOP
  2444  0002E0  EF7B  F001         	goto	l3506
  2445  0002E4                     u3500:
  2446  0002E4  FFFF               	dw	65535	; assembler added errata NOP
  2447  0002E6                     
  2448                           ; BSR set to: 0
  2449                           ;main.c: 125:                 state = 4;
  2450  0002E6  0E00               	movlw	0
  2451  0002E8  6FC1               	movwf	(_state+1)& (0+255),b
  2452  0002EA  0E04               	movlw	4
  2453  0002EC  6FC0               	movwf	_state& (0+255),b
  2454                           
  2455                           ;main.c: 126:                 state_changed = 1;
  2456  0002EE  0E01               	movlw	1
  2457  0002F0  6FA7               	movwf	_state_changed& (0+255),b
  2458                           
  2459                           ;main.c: 127:             } else if (state == 4){
  2460  0002F2  EFAD  F004         	goto	l3650
  2461  0002F6                     l3506:
  2462  0002F6  FFFF               	dw	65535	; assembler added errata NOP
  2463                           
  2464                           ; BSR set to: 0
  2465  0002F8  0E04               	movlw	4
  2466  0002FA  19C0               	xorwf	_state& (0+255),w,b
  2467  0002FC  11C1               	iorwf	(_state+1)& (0+255),w,b
  2468  0002FE  A4D8               	btfss	status,2,c
  2469  000300  EF84  F001         	goto	u3511
  2470  000304  EF87  F001         	goto	u3510
  2471  000308                     u3511:
  2472  000308  FFFF               	dw	65535	; assembler added errata NOP
  2473  00030A  EFC9  F001         	goto	l3520
  2474  00030E                     u3510:
  2475  00030E  FFFF               	dw	65535	; assembler added errata NOP
  2476  000310                     
  2477                           ; BSR set to: 0
  2478                           ;main.c: 128:                 if (timer_done){
  2479  000310  51A4               	movf	_timer_done& (0+255),w,b
  2480  000312  B4D8               	btfsc	status,2,c
  2481  000314  EF8E  F001         	goto	u3521
  2482  000318  EF91  F001         	goto	u3520
  2483  00031C                     u3521:
  2484  00031C  FFFF               	dw	65535	; assembler added errata NOP
  2485  00031E  EFB0  F001         	goto	l169
  2486  000322                     u3520:
  2487  000322  FFFF               	dw	65535	; assembler added errata NOP
  2488  000324                     
  2489                           ; BSR set to: 0
  2490                           ;main.c: 129:                     if(check_temperature(get_temperature())){
  2491  000324  EC71  F014         	call	_get_temperature	;wreg free
  2492  000328  C06F  F07D         	movff	?_get_temperature,check_temperature@temp_to_be_checked
  2493  00032C  C070  F07E         	movff	?_get_temperature+1,check_temperature@temp_to_be_checked+1
  2494  000330  ECCD  F011         	call	_check_temperature	;wreg free
  2495  000334  507D               	movf	?_check_temperature^0,w,c
  2496  000336  107E               	iorwf	(?_check_temperature+1)^0,w,c
  2497  000338  B4D8               	btfsc	status,2,c
  2498  00033A  EFA1  F001         	goto	u3531
  2499  00033E  EFA4  F001         	goto	u3530
  2500  000342                     u3531:
  2501  000342  FFFF               	dw	65535	; assembler added errata NOP
  2502  000344  EF4D  F001         	goto	l162
  2503  000348                     u3530:
  2504  000348  FFFF               	dw	65535	; assembler added errata NOP
  2505  00034A                     
  2506                           ;main.c: 130:                         state = 2;
  2507  00034A  0E00               	movlw	0
  2508  00034C  0100               	movlb	0	; () banked
  2509  00034E  6FC1               	movwf	(_state+1)& (0+255),b
  2510  000350  0E02               	movlw	2
  2511  000352  6FC0               	movwf	_state& (0+255),b
  2512                           
  2513                           ;main.c: 131:                         state_changed = 1;
  2514  000354  0E01               	movlw	1
  2515  000356  6FA7               	movwf	_state_changed& (0+255),b
  2516                           
  2517                           ;main.c: 132:                         timer_done = 0;
  2518  000358  0E00               	movlw	0
  2519  00035A  6FA4               	movwf	_timer_done& (0+255),b
  2520                           
  2521                           ;main.c: 133:                     } else{
  2522  00035C  EFAD  F004         	goto	l3650
  2523  000360                     l169:
  2524  000360  FFFF               	dw	65535	; assembler added errata NOP
  2525                           
  2526                           ; BSR set to: 0
  2527                           ;main.c: 138:                     if (T0CONbits.TMR0ON == 0){
  2528  000362  BED5               	btfsc	213,7,c	;volatile
  2529  000364  EFB6  F001         	goto	u3541
  2530  000368  EFB9  F001         	goto	u3540
  2531  00036C                     u3541:
  2532  00036C  FFFF               	dw	65535	; assembler added errata NOP
  2533  00036E  EFC0  F001         	goto	l173
  2534  000372                     u3540:
  2535  000372  FFFF               	dw	65535	; assembler added errata NOP
  2536  000374                     
  2537                           ; BSR set to: 0
  2538                           ;main.c: 139:                         configure_ad_conversion_oven();
  2539  000374  ECAC  F016         	call	_configure_ad_conversion_oven	;wreg free
  2540  000378                     
  2541                           ;main.c: 140:                         wait_for_zero();
  2542  000378  EC58  F016         	call	_wait_for_zero	;wreg free
  2543  00037C                     
  2544                           ;main.c: 141:                         init_timer_0();
  2545  00037C  EC6B  F016         	call	_init_timer_0	;wreg free
  2546  000380                     l173:
  2547  000380  FFFF               	dw	65535	; assembler added errata NOP
  2548                           
  2549                           ;main.c: 143:                     int current_temp = get_temperature();
  2550  000382  EC71  F014         	call	_get_temperature	;wreg free
  2551  000386  C06F  F0DE         	movff	?_get_temperature,main@current_temp
  2552  00038A  C070  F0DF         	movff	?_get_temperature+1,main@current_temp+1
  2553  00038E  EFAD  F004         	goto	l3650
  2554  000392                     l3520:
  2555  000392  FFFF               	dw	65535	; assembler added errata NOP
  2556                           
  2557                           ; BSR set to: 0
  2558  000394  0E05               	movlw	5
  2559  000396  19C0               	xorwf	_state& (0+255),w,b
  2560  000398  11C1               	iorwf	(_state+1)& (0+255),w,b
  2561  00039A  A4D8               	btfss	status,2,c
  2562  00039C  EFD2  F001         	goto	u3551
  2563  0003A0  EFD5  F001         	goto	u3550
  2564  0003A4                     u3551:
  2565  0003A4  FFFF               	dw	65535	; assembler added errata NOP
  2566  0003A6  EFDE  F001         	goto	l3524
  2567  0003AA                     u3550:
  2568  0003AA  FFFF               	dw	65535	; assembler added errata NOP
  2569  0003AC                     
  2570                           ; BSR set to: 0
  2571                           ;main.c: 147:                 state = 6;
  2572  0003AC  0E00               	movlw	0
  2573  0003AE  6FC1               	movwf	(_state+1)& (0+255),b
  2574  0003B0  0E06               	movlw	6
  2575  0003B2  6FC0               	movwf	_state& (0+255),b
  2576                           
  2577                           ;main.c: 148:                 state_changed = 1;
  2578  0003B4  0E01               	movlw	1
  2579  0003B6  6FA7               	movwf	_state_changed& (0+255),b
  2580                           
  2581                           ;main.c: 149:             }else if (state == 6){
  2582  0003B8  EFAD  F004         	goto	l3650
  2583  0003BC                     l3524:
  2584  0003BC  FFFF               	dw	65535	; assembler added errata NOP
  2585                           
  2586                           ; BSR set to: 0
  2587  0003BE  0E06               	movlw	6
  2588  0003C0  19C0               	xorwf	_state& (0+255),w,b
  2589  0003C2  11C1               	iorwf	(_state+1)& (0+255),w,b
  2590  0003C4  A4D8               	btfss	status,2,c
  2591  0003C6  EFE7  F001         	goto	u3561
  2592  0003CA  EFEA  F001         	goto	u3560
  2593  0003CE                     u3561:
  2594  0003CE  FFFF               	dw	65535	; assembler added errata NOP
  2595  0003D0  EF55  F002         	goto	l3542
  2596  0003D4                     u3560:
  2597  0003D4  FFFF               	dw	65535	; assembler added errata NOP
  2598  0003D6                     
  2599                           ; BSR set to: 0
  2600                           ;main.c: 150:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2601  0003D6  0E03               	movlw	3
  2602  0003D8  0100               	movlb	0	; () banked
  2603  0003DA  6FDC               	movwf	??_main& (0+255),b
  2604  0003DC  0EEB               	movlw	235
  2605  0003DE                     u3957:
  2606  0003DE  FFFF               	dw	65535	; errata NOP
  2607  0003E0  2EE8               	decfsz	wreg,f,c
  2608  0003E2  D7FD               	bra	u3957
  2609  0003E4  2FDC               	decfsz	??_main& (0+255),f,b
  2610  0003E6  D7FB               	bra	u3957
  2611  0003E8  D000               	nop2	
  2612  0003EA  F000               	nop	
  2613  0003EC                     
  2614                           ;main.c: 151:                 if (!grasping_joint_position_reached){
  2615  0003EC  0100               	movlb	0	; () banked
  2616  0003EE  5194               	movf	_grasping_joint_position_reached& (0+255),w,b
  2617  0003F0  1195               	iorwf	(_grasping_joint_position_reached+1)& (0+255),w,b
  2618  0003F2  A4D8               	btfss	status,2,c
  2619  0003F4  EFFE  F001         	goto	u3571
  2620  0003F8  EF01  F002         	goto	u3570
  2621  0003FC                     u3571:
  2622  0003FC  FFFF               	dw	65535	; assembler added errata NOP
  2623  0003FE  EF10  F002         	goto	l3532
  2624  000402                     u3570:
  2625  000402  FFFF               	dw	65535	; assembler added errata NOP
  2626  000404                     
  2627                           ; BSR set to: 0
  2628                           ;main.c: 152:                     grasping_joint_position_reached = reach_goal(&joint_st
      +                          epper, 50);
  2629  000404  0EB4               	movlw	low _joint_stepper
  2630  000406  6E09               	movwf	reach_goal@stepper_motor^0,c
  2631  000408  0E00               	movlw	high _joint_stepper
  2632  00040A  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2633  00040C  0E00               	movlw	0
  2634  00040E  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2635  000410  0E32               	movlw	50
  2636  000412  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2637  000414  EC35  F014         	call	_reach_goal	;wreg free
  2638  000418  C009  F094         	movff	?_reach_goal,_grasping_joint_position_reached
  2639  00041C  C00A  F095         	movff	?_reach_goal+1,_grasping_joint_position_reached+1
  2640  000420                     l3532:
  2641  000420  FFFF               	dw	65535	; assembler added errata NOP
  2642                           
  2643                           ;main.c: 155:                 if (grasping_joint_position_reached && !grasping_ee_positi
      +                          on_reached){
  2644  000422  0100               	movlb	0	; () banked
  2645  000424  5194               	movf	_grasping_joint_position_reached& (0+255),w,b
  2646  000426  1195               	iorwf	(_grasping_joint_position_reached+1)& (0+255),w,b
  2647  000428  B4D8               	btfsc	status,2,c
  2648  00042A  EF19  F002         	goto	u3581
  2649  00042E  EF1C  F002         	goto	u3580
  2650  000432                     u3581:
  2651  000432  FFFF               	dw	65535	; assembler added errata NOP
  2652  000434  EF36  F002         	goto	l3538
  2653  000438                     u3580:
  2654  000438  FFFF               	dw	65535	; assembler added errata NOP
  2655  00043A                     
  2656                           ; BSR set to: 0
  2657  00043A  5192               	movf	_grasping_ee_position_reached& (0+255),w,b
  2658  00043C  1193               	iorwf	(_grasping_ee_position_reached+1)& (0+255),w,b
  2659  00043E  A4D8               	btfss	status,2,c
  2660  000440  EF24  F002         	goto	u3591
  2661  000444  EF27  F002         	goto	u3590
  2662  000448                     u3591:
  2663  000448  FFFF               	dw	65535	; assembler added errata NOP
  2664  00044A  EF36  F002         	goto	l3538
  2665  00044E                     u3590:
  2666  00044E  FFFF               	dw	65535	; assembler added errata NOP
  2667  000450                     
  2668                           ; BSR set to: 0
  2669                           ;main.c: 156:                     grasping_ee_position_reached = reach_goal(&end_effecto
      +                          r_stepper, 100);
  2670  000450  0EA8               	movlw	low _end_effector_stepper
  2671  000452  6E09               	movwf	reach_goal@stepper_motor^0,c
  2672  000454  0E00               	movlw	high _end_effector_stepper
  2673  000456  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2674  000458  0E00               	movlw	0
  2675  00045A  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2676  00045C  0E64               	movlw	100
  2677  00045E  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2678  000460  EC35  F014         	call	_reach_goal	;wreg free
  2679  000464  C009  F092         	movff	?_reach_goal,_grasping_ee_position_reached
  2680  000468  C00A  F093         	movff	?_reach_goal+1,_grasping_ee_position_reached+1
  2681  00046C                     l3538:
  2682  00046C  FFFF               	dw	65535	; assembler added errata NOP
  2683                           
  2684                           ;main.c: 158:                 if (grasping_joint_position_reached * grasping_ee_position
      +                          _reached){
  2685  00046E  C094  F001         	movff	_grasping_joint_position_reached,___wmul@multiplier
  2686  000472  C095  F002         	movff	_grasping_joint_position_reached+1,___wmul@multiplier+1
  2687  000476  C092  F003         	movff	_grasping_ee_position_reached,___wmul@multiplicand
  2688  00047A  C093  F004         	movff	_grasping_ee_position_reached+1,___wmul@multiplicand+1
  2689  00047E  EC2E  F016         	call	___wmul	;wreg free
  2690  000482  5001               	movf	?___wmul^0,w,c
  2691  000484  1002               	iorwf	(?___wmul+1)^0,w,c
  2692  000486  B4D8               	btfsc	status,2,c
  2693  000488  EF48  F002         	goto	u3601
  2694  00048C  EF4B  F002         	goto	u3600
  2695  000490                     u3601:
  2696  000490  FFFF               	dw	65535	; assembler added errata NOP
  2697  000492  EFAD  F004         	goto	l3650
  2698  000496                     u3600:
  2699  000496  FFFF               	dw	65535	; assembler added errata NOP
  2700  000498                     
  2701                           ;main.c: 159:                     state = 7;
  2702  000498  0E00               	movlw	0
  2703  00049A  0100               	movlb	0	; () banked
  2704  00049C  6FC1               	movwf	(_state+1)& (0+255),b
  2705  00049E  0E07               	movlw	7
  2706  0004A0  6FC0               	movwf	_state& (0+255),b
  2707                           
  2708                           ;main.c: 160:                     state_changed = 1;
  2709  0004A2  0E01               	movlw	1
  2710  0004A4  6FA7               	movwf	_state_changed& (0+255),b
  2711  0004A6  EFAD  F004         	goto	l3650
  2712  0004AA                     l3542:
  2713  0004AA  FFFF               	dw	65535	; assembler added errata NOP
  2714                           
  2715                           ; BSR set to: 0
  2716  0004AC  0E07               	movlw	7
  2717  0004AE  19C0               	xorwf	_state& (0+255),w,b
  2718  0004B0  11C1               	iorwf	(_state+1)& (0+255),w,b
  2719  0004B2  A4D8               	btfss	status,2,c
  2720  0004B4  EF5E  F002         	goto	u3611
  2721  0004B8  EF61  F002         	goto	u3610
  2722  0004BC                     u3611:
  2723  0004BC  FFFF               	dw	65535	; assembler added errata NOP
  2724  0004BE  EFD5  F002         	goto	l3566
  2725  0004C2                     u3610:
  2726  0004C2  FFFF               	dw	65535	; assembler added errata NOP
  2727  0004C4                     
  2728                           ; BSR set to: 0
  2729                           ;main.c: 163:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2730  0004C4  0E03               	movlw	3
  2731  0004C6  0100               	movlb	0	; () banked
  2732  0004C8  6FDC               	movwf	??_main& (0+255),b
  2733  0004CA  0EEB               	movlw	235
  2734  0004CC                     u3967:
  2735  0004CC  FFFF               	dw	65535	; errata NOP
  2736  0004CE  2EE8               	decfsz	wreg,f,c
  2737  0004D0  D7FD               	bra	u3967
  2738  0004D2  2FDC               	decfsz	??_main& (0+255),f,b
  2739  0004D4  D7FB               	bra	u3967
  2740  0004D6  D000               	nop2	
  2741  0004D8  F000               	nop	
  2742  0004DA                     
  2743                           ;main.c: 164:                 if (reach_goal(&joint_stepper, 100)) {
  2744  0004DA  0EB4               	movlw	low _joint_stepper
  2745  0004DC  6E09               	movwf	reach_goal@stepper_motor^0,c
  2746  0004DE  0E00               	movlw	high _joint_stepper
  2747  0004E0  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2748  0004E2  0E00               	movlw	0
  2749  0004E4  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2750  0004E6  0E64               	movlw	100
  2751  0004E8  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2752  0004EA  EC35  F014         	call	_reach_goal	;wreg free
  2753  0004EE  5009               	movf	?_reach_goal^0,w,c
  2754  0004F0  100A               	iorwf	(?_reach_goal+1)^0,w,c
  2755  0004F2  B4D8               	btfsc	status,2,c
  2756  0004F4  EF7E  F002         	goto	u3621
  2757  0004F8  EF81  F002         	goto	u3620
  2758  0004FC                     u3621:
  2759  0004FC  FFFF               	dw	65535	; assembler added errata NOP
  2760  0004FE  EF8B  F002         	goto	l3552
  2761  000502                     u3620:
  2762  000502  FFFF               	dw	65535	; assembler added errata NOP
  2763  000504                     
  2764                           ;main.c: 165:                     change_direction(&joint_stepper);
  2765  000504  0EB4               	movlw	low _joint_stepper
  2766  000506  6E01               	movwf	change_direction@stepper_motor^0,c
  2767  000508  0E00               	movlw	high _joint_stepper
  2768  00050A  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2769  00050C  ECE8  F015         	call	_change_direction	;wreg free
  2770  000510                     
  2771                           ;main.c: 166:                     mix_counter++;
  2772  000510  0100               	movlb	0	; () banked
  2773  000512  4B9C               	infsnz	_mix_counter& (0+255),f,b
  2774  000514  2B9D               	incf	(_mix_counter+1)& (0+255),f,b
  2775  000516                     l3552:
  2776  000516  FFFF               	dw	65535	; assembler added errata NOP
  2777                           
  2778                           ;main.c: 169:                 if (mix_counter == 20 && !dilution_done){
  2779  000518  0E14               	movlw	20
  2780  00051A  0100               	movlb	0	; () banked
  2781  00051C  199C               	xorwf	_mix_counter& (0+255),w,b
  2782  00051E  119D               	iorwf	(_mix_counter+1)& (0+255),w,b
  2783  000520  A4D8               	btfss	status,2,c
  2784  000522  EF95  F002         	goto	u3631
  2785  000526  EF98  F002         	goto	u3630
  2786  00052A                     u3631:
  2787  00052A  FFFF               	dw	65535	; assembler added errata NOP
  2788  00052C  EFAC  F002         	goto	l3558
  2789  000530                     u3630:
  2790  000530  FFFF               	dw	65535	; assembler added errata NOP
  2791  000532                     
  2792                           ; BSR set to: 0
  2793  000532  519A               	movf	_dilution_done& (0+255),w,b
  2794  000534  119B               	iorwf	(_dilution_done+1)& (0+255),w,b
  2795  000536  A4D8               	btfss	status,2,c
  2796  000538  EFA0  F002         	goto	u3641
  2797  00053C  EFA3  F002         	goto	u3640
  2798  000540                     u3641:
  2799  000540  FFFF               	dw	65535	; assembler added errata NOP
  2800  000542  EFAC  F002         	goto	l3558
  2801  000546                     u3640:
  2802  000546  FFFF               	dw	65535	; assembler added errata NOP
  2803  000548                     
  2804                           ; BSR set to: 0
  2805                           ;main.c: 170:                     state = 8;
  2806  000548  0E00               	movlw	0
  2807  00054A  6FC1               	movwf	(_state+1)& (0+255),b
  2808  00054C  0E08               	movlw	8
  2809  00054E  6FC0               	movwf	_state& (0+255),b
  2810                           
  2811                           ;main.c: 171:                     state_changed = 1;
  2812  000550  0E01               	movlw	1
  2813  000552  6FA7               	movwf	_state_changed& (0+255),b
  2814                           
  2815                           ;main.c: 172:                 } else if (mix_counter == 40) {
  2816  000554  EFAD  F004         	goto	l3650
  2817  000558                     l3558:
  2818  000558  FFFF               	dw	65535	; assembler added errata NOP
  2819                           
  2820                           ; BSR set to: 0
  2821  00055A  0E28               	movlw	40
  2822  00055C  199C               	xorwf	_mix_counter& (0+255),w,b
  2823  00055E  119D               	iorwf	(_mix_counter+1)& (0+255),w,b
  2824  000560  A4D8               	btfss	status,2,c
  2825  000562  EFB5  F002         	goto	u3651
  2826  000566  EFB8  F002         	goto	u3650
  2827  00056A                     u3651:
  2828  00056A  FFFF               	dw	65535	; assembler added errata NOP
  2829  00056C  EF4D  F001         	goto	l162
  2830  000570                     u3650:
  2831  000570  FFFF               	dw	65535	; assembler added errata NOP
  2832  000572                     
  2833                           ; BSR set to: 0
  2834                           ;main.c: 173:                     dilution_done = 0;
  2835  000572  0E00               	movlw	0
  2836  000574  6F9B               	movwf	(_dilution_done+1)& (0+255),b
  2837  000576  0E00               	movlw	0
  2838  000578  6F9A               	movwf	_dilution_done& (0+255),b
  2839                           
  2840                           ;main.c: 174:                     state = 9;
  2841  00057A  0E00               	movlw	0
  2842  00057C  6FC1               	movwf	(_state+1)& (0+255),b
  2843  00057E  0E09               	movlw	9
  2844  000580  6FC0               	movwf	_state& (0+255),b
  2845                           
  2846                           ;main.c: 175:                     state_changed = 1;
  2847  000582  0E01               	movlw	1
  2848  000584  6FA7               	movwf	_state_changed& (0+255),b
  2849                           
  2850                           ;main.c: 176:                     mix_counter = 0;
  2851  000586  0E00               	movlw	0
  2852  000588  6F9D               	movwf	(_mix_counter+1)& (0+255),b
  2853  00058A  0E00               	movlw	0
  2854  00058C  6F9C               	movwf	_mix_counter& (0+255),b
  2855  00058E                     
  2856                           ; BSR set to: 0
  2857                           ;main.c: 178:                     change_direction(&joint_stepper);
  2858  00058E  0EB4               	movlw	low _joint_stepper
  2859  000590  6E01               	movwf	change_direction@stepper_motor^0,c
  2860  000592  0E00               	movlw	high _joint_stepper
  2861  000594  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2862  000596  ECE8  F015         	call	_change_direction	;wreg free
  2863  00059A                     
  2864                           ;main.c: 179:                     change_direction(&end_effector_stepper);
  2865  00059A  0EA8               	movlw	low _end_effector_stepper
  2866  00059C  6E01               	movwf	change_direction@stepper_motor^0,c
  2867  00059E  0E00               	movlw	high _end_effector_stepper
  2868  0005A0  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2869  0005A2  ECE8  F015         	call	_change_direction	;wreg free
  2870  0005A6  EFAD  F004         	goto	l3650
  2871  0005AA                     l3566:
  2872  0005AA  FFFF               	dw	65535	; assembler added errata NOP
  2873                           
  2874                           ; BSR set to: 0
  2875  0005AC  0E08               	movlw	8
  2876  0005AE  19C0               	xorwf	_state& (0+255),w,b
  2877  0005B0  11C1               	iorwf	(_state+1)& (0+255),w,b
  2878  0005B2  A4D8               	btfss	status,2,c
  2879  0005B4  EFDE  F002         	goto	u3661
  2880  0005B8  EFE1  F002         	goto	u3660
  2881  0005BC                     u3661:
  2882  0005BC  FFFF               	dw	65535	; assembler added errata NOP
  2883  0005BE  EF83  F003         	goto	l3596
  2884  0005C2                     u3660:
  2885  0005C2  FFFF               	dw	65535	; assembler added errata NOP
  2886  0005C4                     
  2887                           ; BSR set to: 0
  2888                           ;main.c: 182:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  2889  0005C4  0E03               	movlw	3
  2890  0005C6  0100               	movlb	0	; () banked
  2891  0005C8  6FDC               	movwf	??_main& (0+255),b
  2892  0005CA  0EEB               	movlw	235
  2893  0005CC                     u3977:
  2894  0005CC  FFFF               	dw	65535	; errata NOP
  2895  0005CE  2EE8               	decfsz	wreg,f,c
  2896  0005D0  D7FD               	bra	u3977
  2897  0005D2  2FDC               	decfsz	??_main& (0+255),f,b
  2898  0005D4  D7FB               	bra	u3977
  2899  0005D6  D000               	nop2	
  2900  0005D8  F000               	nop	
  2901  0005DA                     
  2902                           ;main.c: 183:                 if (!diluting_position_reached){
  2903  0005DA  0100               	movlb	0	; () banked
  2904  0005DC  5190               	movf	_diluting_position_reached& (0+255),w,b
  2905  0005DE  1191               	iorwf	(_diluting_position_reached+1)& (0+255),w,b
  2906  0005E0  A4D8               	btfss	status,2,c
  2907  0005E2  EFF5  F002         	goto	u3671
  2908  0005E6  EFF8  F002         	goto	u3670
  2909  0005EA                     u3671:
  2910  0005EA  FFFF               	dw	65535	; assembler added errata NOP
  2911  0005EC  EF09  F003         	goto	l3574
  2912  0005F0                     u3670:
  2913  0005F0  FFFF               	dw	65535	; assembler added errata NOP
  2914  0005F2                     
  2915                           ; BSR set to: 0
  2916                           ;main.c: 184:                     diluting_position_reached = reach_goal(&joint_dilutor_
      +                          stepper, 200);
  2917  0005F2  0E00               	movlw	low _joint_dilutor_stepper
  2918  0005F4  6E09               	movwf	reach_goal@stepper_motor^0,c
  2919  0005F6  0E01               	movlw	high _joint_dilutor_stepper
  2920  0005F8  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  2921  0005FA  0E00               	movlw	0
  2922  0005FC  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  2923  0005FE  0EC8               	movlw	200
  2924  000600  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  2925  000602  EC35  F014         	call	_reach_goal	;wreg free
  2926  000606  C009  F090         	movff	?_reach_goal,_diluting_position_reached
  2927  00060A  C00A  F091         	movff	?_reach_goal+1,_diluting_position_reached+1
  2928                           
  2929                           ;main.c: 185:                 } else if (!dilution_done && diluting_position_reached){
  2930  00060E  EFAD  F004         	goto	l3650
  2931  000612                     l3574:
  2932  000612  FFFF               	dw	65535	; assembler added errata NOP
  2933                           
  2934                           ; BSR set to: 0
  2935  000614  519A               	movf	_dilution_done& (0+255),w,b
  2936  000616  119B               	iorwf	(_dilution_done+1)& (0+255),w,b
  2937  000618  A4D8               	btfss	status,2,c
  2938  00061A  EF11  F003         	goto	u3681
  2939  00061E  EF14  F003         	goto	u3680
  2940  000622                     u3681:
  2941  000622  FFFF               	dw	65535	; assembler added errata NOP
  2942  000624  EF3B  F003         	goto	l3584
  2943  000628                     u3680:
  2944  000628  FFFF               	dw	65535	; assembler added errata NOP
  2945  00062A                     
  2946                           ; BSR set to: 0
  2947  00062A  5190               	movf	_diluting_position_reached& (0+255),w,b
  2948  00062C  1191               	iorwf	(_diluting_position_reached+1)& (0+255),w,b
  2949  00062E  B4D8               	btfsc	status,2,c
  2950  000630  EF1C  F003         	goto	u3691
  2951  000634  EF1F  F003         	goto	u3690
  2952  000638                     u3691:
  2953  000638  FFFF               	dw	65535	; assembler added errata NOP
  2954  00063A  EF3B  F003         	goto	l3584
  2955  00063E                     u3690:
  2956  00063E  FFFF               	dw	65535	; assembler added errata NOP
  2957  000640                     
  2958                           ; BSR set to: 0
  2959                           ;main.c: 188:                     _delay((unsigned long)((1000)*(4000000/4000.0)));
  2960  000640  0E04               	movlw	4
  2961  000642  0100               	movlb	0	; () banked
  2962  000644  6FDD               	movwf	(??_main+1)& (0+255),b
  2963  000646  0ECF               	movlw	207
  2964  000648  6FDC               	movwf	??_main& (0+255),b
  2965  00064A  0EA5               	movlw	165
  2966  00064C                     u3987:
  2967  00064C  FFFF               	dw	65535	; errata NOP
  2968  00064E  2EE8               	decfsz	wreg,f,c
  2969  000650  D7FD               	bra	u3987
  2970  000652  2FDC               	decfsz	??_main& (0+255),f,b
  2971  000654  D7FB               	bra	u3987
  2972  000656  2FDD               	decfsz	(??_main+1)& (0+255),f,b
  2973  000658  D7F9               	bra	u3987
  2974  00065A  F000               	nop	
  2975  00065C                     
  2976                           ;main.c: 189:                     dilution_done = 1;
  2977  00065C  0E00               	movlw	0
  2978  00065E  0100               	movlb	0	; () banked
  2979  000660  6F9B               	movwf	(_dilution_done+1)& (0+255),b
  2980  000662  0E01               	movlw	1
  2981  000664  6F9A               	movwf	_dilution_done& (0+255),b
  2982  000666                     
  2983                           ; BSR set to: 0
  2984                           ;main.c: 190:                     change_direction(&joint_dilutor_stepper);
  2985  000666  0E00               	movlw	low _joint_dilutor_stepper
  2986  000668  6E01               	movwf	change_direction@stepper_motor^0,c
  2987  00066A  0E01               	movlw	high _joint_dilutor_stepper
  2988  00066C  6E02               	movwf	(change_direction@stepper_motor+1)^0,c
  2989  00066E  ECE8  F015         	call	_change_direction	;wreg free
  2990                           
  2991                           ;main.c: 191:                 } else if (dilution_done && !joint_dilutor_homed){
  2992  000672  EFAD  F004         	goto	l3650
  2993  000676                     l3584:
  2994  000676  FFFF               	dw	65535	; assembler added errata NOP
  2995                           
  2996                           ; BSR set to: 0
  2997  000678  519A               	movf	_dilution_done& (0+255),w,b
  2998  00067A  119B               	iorwf	(_dilution_done+1)& (0+255),w,b
  2999  00067C  B4D8               	btfsc	status,2,c
  3000  00067E  EF43  F003         	goto	u3701
  3001  000682  EF46  F003         	goto	u3700
  3002  000686                     u3701:
  3003  000686  FFFF               	dw	65535	; assembler added errata NOP
  3004  000688  EF62  F003         	goto	l3590
  3005  00068C                     u3700:
  3006  00068C  FFFF               	dw	65535	; assembler added errata NOP
  3007  00068E                     
  3008                           ; BSR set to: 0
  3009  00068E  518A               	movf	_joint_dilutor_homed& (0+255),w,b
  3010  000690  118B               	iorwf	(_joint_dilutor_homed+1)& (0+255),w,b
  3011  000692  A4D8               	btfss	status,2,c
  3012  000694  EF4E  F003         	goto	u3711
  3013  000698  EF51  F003         	goto	u3710
  3014  00069C                     u3711:
  3015  00069C  FFFF               	dw	65535	; assembler added errata NOP
  3016  00069E  EF62  F003         	goto	l3590
  3017  0006A2                     u3710:
  3018  0006A2  FFFF               	dw	65535	; assembler added errata NOP
  3019  0006A4                     
  3020                           ; BSR set to: 0
  3021                           ;main.c: 192:                     joint_dilutor_homed = reach_goal(&joint_dilutor_steppe
      +                          r, 200);
  3022  0006A4  0E00               	movlw	low _joint_dilutor_stepper
  3023  0006A6  6E09               	movwf	reach_goal@stepper_motor^0,c
  3024  0006A8  0E01               	movlw	high _joint_dilutor_stepper
  3025  0006AA  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  3026  0006AC  0E00               	movlw	0
  3027  0006AE  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  3028  0006B0  0EC8               	movlw	200
  3029  0006B2  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  3030  0006B4  EC35  F014         	call	_reach_goal	;wreg free
  3031  0006B8  C009  F08A         	movff	?_reach_goal,_joint_dilutor_homed
  3032  0006BC  C00A  F08B         	movff	?_reach_goal+1,_joint_dilutor_homed+1
  3033                           
  3034                           ;main.c: 193:                 } else if (dilution_done && joint_dilutor_homed){
  3035  0006C0  EFAD  F004         	goto	l3650
  3036  0006C4                     l3590:
  3037  0006C4  FFFF               	dw	65535	; assembler added errata NOP
  3038                           
  3039                           ; BSR set to: 0
  3040  0006C6  519A               	movf	_dilution_done& (0+255),w,b
  3041  0006C8  119B               	iorwf	(_dilution_done+1)& (0+255),w,b
  3042  0006CA  B4D8               	btfsc	status,2,c
  3043  0006CC  EF6A  F003         	goto	u3721
  3044  0006D0  EF6D  F003         	goto	u3720
  3045  0006D4                     u3721:
  3046  0006D4  FFFF               	dw	65535	; assembler added errata NOP
  3047  0006D6  EF4D  F001         	goto	l162
  3048  0006DA                     u3720:
  3049  0006DA  FFFF               	dw	65535	; assembler added errata NOP
  3050  0006DC                     
  3051                           ; BSR set to: 0
  3052  0006DC  518A               	movf	_joint_dilutor_homed& (0+255),w,b
  3053  0006DE  118B               	iorwf	(_joint_dilutor_homed+1)& (0+255),w,b
  3054  0006E0  B4D8               	btfsc	status,2,c
  3055  0006E2  EF75  F003         	goto	u3731
  3056  0006E6  EF78  F003         	goto	u3730
  3057  0006EA                     u3731:
  3058  0006EA  FFFF               	dw	65535	; assembler added errata NOP
  3059  0006EC  EF4D  F001         	goto	l162
  3060  0006F0                     u3730:
  3061  0006F0  FFFF               	dw	65535	; assembler added errata NOP
  3062  0006F2                     
  3063                           ; BSR set to: 0
  3064                           ;main.c: 194:                     state = 7;
  3065  0006F2  0E00               	movlw	0
  3066  0006F4  6FC1               	movwf	(_state+1)& (0+255),b
  3067  0006F6  0E07               	movlw	7
  3068  0006F8  6FC0               	movwf	_state& (0+255),b
  3069                           
  3070                           ;main.c: 195:                     diluting_position_reached = 0;
  3071  0006FA  0E00               	movlw	0
  3072  0006FC  6F91               	movwf	(_diluting_position_reached+1)& (0+255),b
  3073  0006FE  0E00               	movlw	0
  3074  000700  6F90               	movwf	_diluting_position_reached& (0+255),b
  3075  000702  EFAD  F004         	goto	l3650
  3076  000706                     l3596:
  3077  000706  FFFF               	dw	65535	; assembler added errata NOP
  3078                           
  3079                           ; BSR set to: 0
  3080  000708  0E09               	movlw	9
  3081  00070A  19C0               	xorwf	_state& (0+255),w,b
  3082  00070C  11C1               	iorwf	(_state+1)& (0+255),w,b
  3083  00070E  A4D8               	btfss	status,2,c
  3084  000710  EF8C  F003         	goto	u3741
  3085  000714  EF8F  F003         	goto	u3740
  3086  000718                     u3741:
  3087  000718  FFFF               	dw	65535	; assembler added errata NOP
  3088  00071A  EFF3  F003         	goto	l3614
  3089  00071E                     u3740:
  3090  00071E  FFFF               	dw	65535	; assembler added errata NOP
  3091  000720                     
  3092                           ; BSR set to: 0
  3093                           ;main.c: 199:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  3094  000720  0E03               	movlw	3
  3095  000722  0100               	movlb	0	; () banked
  3096  000724  6FDC               	movwf	??_main& (0+255),b
  3097  000726  0EEB               	movlw	235
  3098  000728                     u3997:
  3099  000728  FFFF               	dw	65535	; errata NOP
  3100  00072A  2EE8               	decfsz	wreg,f,c
  3101  00072C  D7FD               	bra	u3997
  3102  00072E  2FDC               	decfsz	??_main& (0+255),f,b
  3103  000730  D7FB               	bra	u3997
  3104  000732  D000               	nop2	
  3105  000734  F000               	nop	
  3106  000736                     
  3107                           ;main.c: 201:                 if (!end_effector_homed){
  3108  000736  0100               	movlb	0	; () banked
  3109  000738  518C               	movf	_end_effector_homed& (0+255),w,b
  3110  00073A  118D               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  3111  00073C  A4D8               	btfss	status,2,c
  3112  00073E  EFA3  F003         	goto	u3751
  3113  000742  EFA6  F003         	goto	u3750
  3114  000746                     u3751:
  3115  000746  FFFF               	dw	65535	; assembler added errata NOP
  3116  000748  EFB5  F003         	goto	l3604
  3117  00074C                     u3750:
  3118  00074C  FFFF               	dw	65535	; assembler added errata NOP
  3119  00074E                     
  3120                           ; BSR set to: 0
  3121                           ;main.c: 202:                     end_effector_homed = reach_goal(&end_effector_stepper,
      +                           100);
  3122  00074E  0EA8               	movlw	low _end_effector_stepper
  3123  000750  6E09               	movwf	reach_goal@stepper_motor^0,c
  3124  000752  0E00               	movlw	high _end_effector_stepper
  3125  000754  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  3126  000756  0E00               	movlw	0
  3127  000758  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  3128  00075A  0E64               	movlw	100
  3129  00075C  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  3130  00075E  EC35  F014         	call	_reach_goal	;wreg free
  3131  000762  C009  F08C         	movff	?_reach_goal,_end_effector_homed
  3132  000766  C00A  F08D         	movff	?_reach_goal+1,_end_effector_homed+1
  3133  00076A                     l3604:
  3134  00076A  FFFF               	dw	65535	; assembler added errata NOP
  3135                           
  3136                           ;main.c: 205:                 if (end_effector_homed && !joint_homed){
  3137  00076C  0100               	movlb	0	; () banked
  3138  00076E  518C               	movf	_end_effector_homed& (0+255),w,b
  3139  000770  118D               	iorwf	(_end_effector_homed+1)& (0+255),w,b
  3140  000772  B4D8               	btfsc	status,2,c
  3141  000774  EFBE  F003         	goto	u3761
  3142  000778  EFC1  F003         	goto	u3760
  3143  00077C                     u3761:
  3144  00077C  FFFF               	dw	65535	; assembler added errata NOP
  3145  00077E  EFDB  F003         	goto	l3610
  3146  000782                     u3760:
  3147  000782  FFFF               	dw	65535	; assembler added errata NOP
  3148  000784                     
  3149                           ; BSR set to: 0
  3150  000784  518E               	movf	_joint_homed& (0+255),w,b
  3151  000786  118F               	iorwf	(_joint_homed+1)& (0+255),w,b
  3152  000788  A4D8               	btfss	status,2,c
  3153  00078A  EFC9  F003         	goto	u3771
  3154  00078E  EFCC  F003         	goto	u3770
  3155  000792                     u3771:
  3156  000792  FFFF               	dw	65535	; assembler added errata NOP
  3157  000794  EFDB  F003         	goto	l3610
  3158  000798                     u3770:
  3159  000798  FFFF               	dw	65535	; assembler added errata NOP
  3160  00079A                     
  3161                           ; BSR set to: 0
  3162                           ;main.c: 206:                     joint_homed = reach_goal(&joint_stepper, 50);
  3163  00079A  0EB4               	movlw	low _joint_stepper
  3164  00079C  6E09               	movwf	reach_goal@stepper_motor^0,c
  3165  00079E  0E00               	movlw	high _joint_stepper
  3166  0007A0  6E0A               	movwf	(reach_goal@stepper_motor+1)^0,c
  3167  0007A2  0E00               	movlw	0
  3168  0007A4  6E0C               	movwf	(reach_goal@goal_to_reach+1)^0,c
  3169  0007A6  0E32               	movlw	50
  3170  0007A8  6E0B               	movwf	reach_goal@goal_to_reach^0,c
  3171  0007AA  EC35  F014         	call	_reach_goal	;wreg free
  3172  0007AE  C009  F08E         	movff	?_reach_goal,_joint_homed
  3173  0007B2  C00A  F08F         	movff	?_reach_goal+1,_joint_homed+1
  3174  0007B6                     l3610:
  3175  0007B6  FFFF               	dw	65535	; assembler added errata NOP
  3176                           
  3177                           ;main.c: 209:                 if (end_effector_homed * joint_homed){
  3178  0007B8  C08C  F001         	movff	_end_effector_homed,___wmul@multiplier
  3179  0007BC  C08D  F002         	movff	_end_effector_homed+1,___wmul@multiplier+1
  3180  0007C0  C08E  F003         	movff	_joint_homed,___wmul@multiplicand
  3181  0007C4  C08F  F004         	movff	_joint_homed+1,___wmul@multiplicand+1
  3182  0007C8  EC2E  F016         	call	___wmul	;wreg free
  3183  0007CC  5001               	movf	?___wmul^0,w,c
  3184  0007CE  1002               	iorwf	(?___wmul+1)^0,w,c
  3185  0007D0  B4D8               	btfsc	status,2,c
  3186  0007D2  EFED  F003         	goto	u3781
  3187  0007D6  EFF0  F003         	goto	u3780
  3188  0007DA                     u3781:
  3189  0007DA  FFFF               	dw	65535	; assembler added errata NOP
  3190  0007DC  EFAD  F004         	goto	l3650
  3191  0007E0                     u3780:
  3192  0007E0  FFFF               	dw	65535	; assembler added errata NOP
  3193  0007E2  EF5C  F001         	goto	l3500
  3194  0007E6                     l3614:
  3195  0007E6  FFFF               	dw	65535	; assembler added errata NOP
  3196                           
  3197                           ; BSR set to: 0
  3198  0007E8  0E0A               	movlw	10
  3199  0007EA  19C0               	xorwf	_state& (0+255),w,b
  3200  0007EC  11C1               	iorwf	(_state+1)& (0+255),w,b
  3201  0007EE  A4D8               	btfss	status,2,c
  3202  0007F0  EFFC  F003         	goto	u3791
  3203  0007F4  EFFF  F003         	goto	u3790
  3204  0007F8                     u3791:
  3205  0007F8  FFFF               	dw	65535	; assembler added errata NOP
  3206  0007FA  EF08  F004         	goto	l3618
  3207  0007FE                     u3790:
  3208  0007FE  FFFF               	dw	65535	; assembler added errata NOP
  3209  000800                     
  3210                           ; BSR set to: 0
  3211                           ;main.c: 214:                 state = 11;
  3212  000800  0E00               	movlw	0
  3213  000802  6FC1               	movwf	(_state+1)& (0+255),b
  3214  000804  0E0B               	movlw	11
  3215  000806  6FC0               	movwf	_state& (0+255),b
  3216                           
  3217                           ;main.c: 215:                 state_changed = 1;
  3218  000808  0E01               	movlw	1
  3219  00080A  6FA7               	movwf	_state_changed& (0+255),b
  3220                           
  3221                           ;main.c: 216:             }else if (state == 11){
  3222  00080C  EFAD  F004         	goto	l3650
  3223  000810                     l3618:
  3224  000810  FFFF               	dw	65535	; assembler added errata NOP
  3225                           
  3226                           ; BSR set to: 0
  3227  000812  0E0B               	movlw	11
  3228  000814  19C0               	xorwf	_state& (0+255),w,b
  3229  000816  11C1               	iorwf	(_state+1)& (0+255),w,b
  3230  000818  A4D8               	btfss	status,2,c
  3231  00081A  EF11  F004         	goto	u3801
  3232  00081E  EF14  F004         	goto	u3800
  3233  000822                     u3801:
  3234  000822  FFFF               	dw	65535	; assembler added errata NOP
  3235  000824  EF39  F004         	goto	l3626
  3236  000828                     u3800:
  3237  000828  FFFF               	dw	65535	; assembler added errata NOP
  3238  00082A                     
  3239                           ; BSR set to: 0
  3240                           ;main.c: 217:                 if (timer_done){
  3241  00082A  51A4               	movf	_timer_done& (0+255),w,b
  3242  00082C  B4D8               	btfsc	status,2,c
  3243  00082E  EF1B  F004         	goto	u3811
  3244  000832  EF1E  F004         	goto	u3810
  3245  000836                     u3811:
  3246  000836  FFFF               	dw	65535	; assembler added errata NOP
  3247  000838  EF2B  F004         	goto	l205
  3248  00083C                     u3810:
  3249  00083C  FFFF               	dw	65535	; assembler added errata NOP
  3250  00083E                     
  3251                           ; BSR set to: 0
  3252                           ;main.c: 218:                     state_changed = 1;
  3253  00083E  0E01               	movlw	1
  3254  000840  6FA7               	movwf	_state_changed& (0+255),b
  3255                           
  3256                           ;main.c: 219:                     state = 13;
  3257  000842  0E00               	movlw	0
  3258  000844  6FC1               	movwf	(_state+1)& (0+255),b
  3259  000846  0E0D               	movlw	13
  3260  000848  6FC0               	movwf	_state& (0+255),b
  3261                           
  3262                           ;main.c: 220:                     trash_counter = 0;
  3263  00084A  0E00               	movlw	0
  3264  00084C  6F99               	movwf	(_trash_counter+1)& (0+255),b
  3265  00084E  0E00               	movlw	0
  3266  000850  6F98               	movwf	_trash_counter& (0+255),b
  3267                           
  3268                           ;main.c: 221:                 } else {
  3269  000852  EFAD  F004         	goto	l3650
  3270  000856                     l205:
  3271  000856  FFFF               	dw	65535	; assembler added errata NOP
  3272                           
  3273                           ; BSR set to: 0
  3274                           ;main.c: 222:                     if (T0CONbits.TMR0ON == 0){
  3275  000858  BED5               	btfsc	213,7,c	;volatile
  3276  00085A  EF31  F004         	goto	u3821
  3277  00085E  EF34  F004         	goto	u3820
  3278  000862                     u3821:
  3279  000862  FFFF               	dw	65535	; assembler added errata NOP
  3280  000864  EF4D  F001         	goto	l162
  3281  000868                     u3820:
  3282  000868  FFFF               	dw	65535	; assembler added errata NOP
  3283  00086A                     
  3284                           ; BSR set to: 0
  3285                           ;main.c: 223:                         init_timer_0();
  3286  00086A  EC6B  F016         	call	_init_timer_0	;wreg free
  3287  00086E  EFAD  F004         	goto	l3650
  3288  000872                     l3626:
  3289  000872  FFFF               	dw	65535	; assembler added errata NOP
  3290                           
  3291                           ; BSR set to: 0
  3292  000874  0E0C               	movlw	12
  3293  000876  19C0               	xorwf	_state& (0+255),w,b
  3294  000878  11C1               	iorwf	(_state+1)& (0+255),w,b
  3295  00087A  A4D8               	btfss	status,2,c
  3296  00087C  EF42  F004         	goto	u3831
  3297  000880  EF45  F004         	goto	u3830
  3298  000884                     u3831:
  3299  000884  FFFF               	dw	65535	; assembler added errata NOP
  3300  000886  EF4F  F004         	goto	l3632
  3301  00088A                     u3830:
  3302  00088A  FFFF               	dw	65535	; assembler added errata NOP
  3303  00088C                     
  3304                           ; BSR set to: 0
  3305                           ;main.c: 228:                 state = 0;
  3306  00088C  0E00               	movlw	0
  3307  00088E  6FC1               	movwf	(_state+1)& (0+255),b
  3308  000890  0E00               	movlw	0
  3309  000892  6FC0               	movwf	_state& (0+255),b
  3310                           
  3311                           ;main.c: 229:                 state_changed = 1;
  3312  000894  0E01               	movlw	1
  3313  000896  6FA7               	movwf	_state_changed& (0+255),b
  3314  000898                     
  3315                           ; BSR set to: 0
  3316                           ;main.c: 230:                 T0CONbits.TMR0ON = 0;
  3317  000898  9ED5               	bcf	213,7,c	;volatile
  3318                           
  3319                           ;main.c: 231:             } else if (state == 13){
  3320  00089A  EFAD  F004         	goto	l3650
  3321  00089E                     l3632:
  3322  00089E  FFFF               	dw	65535	; assembler added errata NOP
  3323                           
  3324                           ; BSR set to: 0
  3325  0008A0  0E0D               	movlw	13
  3326  0008A2  19C0               	xorwf	_state& (0+255),w,b
  3327  0008A4  11C1               	iorwf	(_state+1)& (0+255),w,b
  3328  0008A6  A4D8               	btfss	status,2,c
  3329  0008A8  EF58  F004         	goto	u3841
  3330  0008AC  EF5B  F004         	goto	u3840
  3331  0008B0                     u3841:
  3332  0008B0  FFFF               	dw	65535	; assembler added errata NOP
  3333  0008B2  EFAD  F004         	goto	l3650
  3334  0008B6                     u3840:
  3335  0008B6  FFFF               	dw	65535	; assembler added errata NOP
  3336  0008B8                     
  3337                           ; BSR set to: 0
  3338                           ;main.c: 232:                 LATAbits.LATA1 = 1;
  3339  0008B8  8289               	bsf	137,1,c	;volatile
  3340  0008BA                     
  3341                           ; BSR set to: 0
  3342                           ;main.c: 233:                 if (move_to_trash && trash_counter < 100){
  3343  0008BA  5196               	movf	_move_to_trash& (0+255),w,b
  3344  0008BC  1197               	iorwf	(_move_to_trash+1)& (0+255),w,b
  3345  0008BE  B4D8               	btfsc	status,2,c
  3346  0008C0  EF64  F004         	goto	u3851
  3347  0008C4  EF67  F004         	goto	u3850
  3348  0008C8                     u3851:
  3349  0008C8  FFFF               	dw	65535	; assembler added errata NOP
  3350  0008CA  EF87  F004         	goto	l3644
  3351  0008CE                     u3850:
  3352  0008CE  FFFF               	dw	65535	; assembler added errata NOP
  3353  0008D0                     
  3354                           ; BSR set to: 0
  3355  0008D0  BF99               	btfsc	(_trash_counter+1)& (0+255),7,b
  3356  0008D2  EF77  F004         	goto	u3860
  3357  0008D6  5199               	movf	(_trash_counter+1)& (0+255),w,b
  3358  0008D8  E107               	bnz	u3861
  3359  0008DA  0E64               	movlw	100
  3360  0008DC  5D98               	subwf	_trash_counter& (0+255),w,b
  3361  0008DE  B0D8               	btfsc	status,0,c
  3362  0008E0  EF74  F004         	goto	u3861
  3363  0008E4  EF77  F004         	goto	u3860
  3364  0008E8                     u3861:
  3365  0008E8  FFFF               	dw	65535	; assembler added errata NOP
  3366  0008EA  EF87  F004         	goto	l3644
  3367  0008EE                     u3860:
  3368  0008EE  FFFF               	dw	65535	; assembler added errata NOP
  3369  0008F0                     
  3370                           ; BSR set to: 0
  3371                           ;main.c: 234:                     _delay((unsigned long)((10)*(4000000/4000.0)));
  3372  0008F0  0E0A               	movlw	10
  3373  0008F2  0100               	movlb	0	; () banked
  3374  0008F4  6FDC               	movwf	??_main& (0+255),b
  3375  0008F6  0EBE               	movlw	190
  3376  0008F8                     u4007:
  3377  0008F8  FFFF               	dw	65535	; errata NOP
  3378  0008FA  2EE8               	decfsz	wreg,f,c
  3379  0008FC  D7FD               	bra	u4007
  3380  0008FE  2FDC               	decfsz	??_main& (0+255),f,b
  3381  000900  D7FB               	bra	u4007
  3382  000902  F000               	nop	
  3383  000904                     
  3384                           ;main.c: 235:                     trash_counter++;
  3385  000904  0100               	movlb	0	; () banked
  3386  000906  4B98               	infsnz	_trash_counter& (0+255),f,b
  3387  000908  2B99               	incf	(_trash_counter+1)& (0+255),f,b
  3388                           
  3389                           ;main.c: 236:                 } else if (move_to_trash && trash_counter >= 100){
  3390  00090A  EFAD  F004         	goto	l3650
  3391  00090E                     l3644:
  3392  00090E  FFFF               	dw	65535	; assembler added errata NOP
  3393                           
  3394                           ; BSR set to: 0
  3395  000910  5196               	movf	_move_to_trash& (0+255),w,b
  3396  000912  1197               	iorwf	(_move_to_trash+1)& (0+255),w,b
  3397  000914  B4D8               	btfsc	status,2,c
  3398  000916  EF8F  F004         	goto	u3871
  3399  00091A  EF92  F004         	goto	u3870
  3400  00091E                     u3871:
  3401  00091E  FFFF               	dw	65535	; assembler added errata NOP
  3402  000920  EF4D  F001         	goto	l162
  3403  000924                     u3870:
  3404  000924  FFFF               	dw	65535	; assembler added errata NOP
  3405  000926                     
  3406                           ; BSR set to: 0
  3407  000926  BF99               	btfsc	(_trash_counter+1)& (0+255),7,b
  3408  000928  EF9F  F004         	goto	u3881
  3409  00092C  5199               	movf	(_trash_counter+1)& (0+255),w,b
  3410  00092E  E10A               	bnz	u3880
  3411  000930  0E64               	movlw	100
  3412  000932  5D98               	subwf	_trash_counter& (0+255),w,b
  3413  000934  A0D8               	btfss	status,0,c
  3414  000936  EF9F  F004         	goto	u3881
  3415  00093A  EFA2  F004         	goto	u3880
  3416  00093E                     u3881:
  3417  00093E  FFFF               	dw	65535	; assembler added errata NOP
  3418  000940  EF4D  F001         	goto	l162
  3419  000944                     u3880:
  3420  000944  FFFF               	dw	65535	; assembler added errata NOP
  3421  000946                     
  3422                           ; BSR set to: 0
  3423                           ;main.c: 237:                     move_to_trash = 0;
  3424  000946  0E00               	movlw	0
  3425  000948  6F97               	movwf	(_move_to_trash+1)& (0+255),b
  3426  00094A  0E00               	movlw	0
  3427  00094C  6F96               	movwf	_move_to_trash& (0+255),b
  3428                           
  3429                           ;main.c: 238:                     state = 0;
  3430  00094E  0E00               	movlw	0
  3431  000950  6FC1               	movwf	(_state+1)& (0+255),b
  3432  000952  0E00               	movlw	0
  3433  000954  6FC0               	movwf	_state& (0+255),b
  3434                           
  3435                           ;main.c: 239:                     state_changed = 1;
  3436  000956  0E01               	movlw	1
  3437  000958  6FA7               	movwf	_state_changed& (0+255),b
  3438  00095A                     l3650:
  3439  00095A  FFFF               	dw	65535	; assembler added errata NOP
  3440  00095C  0E0E               	movlw	14
  3441  00095E  0100               	movlb	0	; () banked
  3442  000960  19C0               	xorwf	_state& (0+255),w,b
  3443  000962  11C1               	iorwf	(_state+1)& (0+255),w,b
  3444  000964  A4D8               	btfss	status,2,c
  3445  000966  EFB7  F004         	goto	u3891
  3446  00096A  EFBA  F004         	goto	u3890
  3447  00096E                     u3891:
  3448  00096E  FFFF               	dw	65535	; assembler added errata NOP
  3449  000970  EFAD  F000         	goto	l3464
  3450  000974                     u3890:
  3451  000974  FFFF               	dw	65535	; assembler added errata NOP
  3452  000976                     
  3453                           ; BSR set to: 0
  3454                           ;main.c: 243:                 if (tank_error == 0){
  3455  000976  5188               	movf	_tank_error& (0+255),w,b
  3456  000978  1189               	iorwf	(_tank_error+1)& (0+255),w,b
  3457  00097A  A4D8               	btfss	status,2,c
  3458  00097C  EFC2  F004         	goto	u3901
  3459  000980  EFC5  F004         	goto	u3900
  3460  000984                     u3901:
  3461  000984  FFFF               	dw	65535	; assembler added errata NOP
  3462  000986  EFCC  F004         	goto	l160
  3463  00098A                     u3900:
  3464  00098A  FFFF               	dw	65535	; assembler added errata NOP
  3465  00098C                     
  3466                           ; BSR set to: 0
  3467                           ;main.c: 244:                     state = state_before_error;
  3468  00098C  C0ED  F0C0         	movff	_state_before_error,_state
  3469  000990  C0EE  F0C1         	movff	_state_before_error+1,_state+1
  3470  000994  EFAD  F000         	goto	l3464
  3471  000998                     l160:
  3472  000998  FFFF               	dw	65535	; assembler added errata NOP
  3473                           
  3474                           ; BSR set to: 0
  3475  00099A  EFAD  F000         	goto	l3464
  3476  00099E  EF3B  F000         	goto	start
  3477  0009A2                     __end_of_main:
  3478                           	callstack 0
  3479                           
  3480 ;; *************** function _wait_for_zero *****************
  3481 ;; Defined at:
  3482 ;;		line 42 in file "oven.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;		None
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;		None
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  1    wreg      void 
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3496 ;;      Params:         0       0       0       0       0       0       0
  3497 ;;      Locals:         0       0       0       0       0       0       0
  3498 ;;      Temps:          0       0       0       0       0       0       0
  3499 ;;      Totals:         0       0       0       0       0       0       0
  3500 ;;Total ram usage:        0 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; Hardware stack levels required when called:    3
  3503 ;; This function calls:
  3504 ;;		_get_temperature
  3505 ;; This function is called by:
  3506 ;;		_main
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           	psect	text1
  3511  002CB0                     __ptext1:
  3512                           	callstack 0
  3513  002CB0                     _wait_for_zero:
  3514                           	callstack 0
  3515  002CB0  FFFF               	dw	65535	; assembler added errata NOP
  3516  002CB2                     l433:
  3517  002CB2  FFFF               	dw	65535	; assembler added errata NOP
  3518  002CB4                     
  3519                           ;oven.c: 44:         if (get_temperature() == -55){
  3520  002CB4  EC71  F014         	call	_get_temperature	;wreg free
  3521  002CB8  0EC9               	movlw	201
  3522  002CBA  186F               	xorwf	?_get_temperature^0,w,c
  3523  002CBC  E106               	bnz	u3411
  3524  002CBE  2870               	incf	(?_get_temperature+1)^0,w,c
  3525  002CC0  A4D8               	btfss	status,2,c
  3526  002CC2  EF65  F016         	goto	u3411
  3527  002CC6  EF68  F016         	goto	u3410
  3528  002CCA                     u3411:
  3529  002CCA  FFFF               	dw	65535	; assembler added errata NOP
  3530  002CCC  EF59  F016         	goto	l433
  3531  002CD0                     u3410:
  3532  002CD0  FFFF               	dw	65535	; assembler added errata NOP
  3533  002CD2  0012               	return		;funcret
  3534  002CD4  FFFF               	dw	65535	; errata NOP
  3535  002CD6                     __end_of_wait_for_zero:
  3536                           	callstack 0
  3537                           
  3538 ;; *************** function _get_temperature *****************
  3539 ;; Defined at:
  3540 ;;		line 30 in file "oven.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;		None
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;		None
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  2  110[COMRAM] int 
  3547 ;; Registers used:
  3548 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3554 ;;      Params:         2       0       0       0       0       0       0
  3555 ;;      Locals:         0       0       0       0       0       0       0
  3556 ;;      Temps:          0       0       0       0       0       0       0
  3557 ;;      Totals:         2       0       0       0       0       0       0
  3558 ;;Total ram usage:        2 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; Hardware stack levels required when called:    2
  3561 ;; This function calls:
  3562 ;;		___flmul
  3563 ;;		___fltol
  3564 ;;		___xxtofl
  3565 ;; This function is called by:
  3566 ;;		_main
  3567 ;;		_wait_for_zero
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           	psect	text2
  3572  0028E2                     __ptext2:
  3573                           	callstack 0
  3574  0028E2                     _get_temperature:
  3575                           	callstack 0
  3576  0028E2  FFFF               	dw	65535	; assembler added errata NOP
  3577  0028E4                     
  3578                           ;oven.c: 31:     ADCON0bits.GO = 1;
  3579  0028E4  84C2               	bsf	194,2,c	;volatile
  3580  0028E6                     l421:
  3581  0028E6  FFFF               	dw	65535	; assembler added errata NOP
  3582  0028E8  B4C2               	btfsc	194,2,c	;volatile
  3583  0028EA  EF79  F014         	goto	u3121
  3584  0028EE  EF7C  F014         	goto	u3120
  3585  0028F2                     u3121:
  3586  0028F2  FFFF               	dw	65535	; assembler added errata NOP
  3587  0028F4  EF73  F014         	goto	l421
  3588  0028F8                     u3120:
  3589  0028F8  FFFF               	dw	65535	; assembler added errata NOP
  3590  0028FA                     
  3591                           ;oven.c: 33:     return (int) (ADRESH * 0.25) + -55;
  3592  0028FA  0E00               	movlw	0
  3593  0028FC  6E1F               	movwf	___flmul@a^0,c
  3594  0028FE  0E00               	movlw	0
  3595  002900  6E20               	movwf	(___flmul@a+1)^0,c
  3596  002902  0E80               	movlw	128
  3597  002904  6E21               	movwf	(___flmul@a+2)^0,c
  3598  002906  0E3E               	movlw	62
  3599  002908  6E22               	movwf	(___flmul@a+3)^0,c
  3600  00290A  50C4               	movf	196,w,c	;volatile
  3601  00290C  6E0D               	movwf	___xxtofl@val^0,c
  3602  00290E  6A0E               	clrf	(___xxtofl@val+1)^0,c
  3603  002910  6A0F               	clrf	(___xxtofl@val+2)^0,c
  3604  002912  6A10               	clrf	(___xxtofl@val+3)^0,c
  3605  002914  0E01               	movlw	1
  3606  002916  EC06  F00E         	call	___xxtofl
  3607  00291A  C00D  F01B         	movff	?___xxtofl,___flmul@b
  3608  00291E  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  3609  002922  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  3610  002926  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  3611  00292A  ECA5  F007         	call	___flmul	;wreg free
  3612  00292E  C01B  F065         	movff	?___flmul,___fltol@f1
  3613  002932  C01C  F066         	movff	?___flmul+1,___fltol@f1+1
  3614  002936  C01D  F067         	movff	?___flmul+2,___fltol@f1+2
  3615  00293A  C01E  F068         	movff	?___flmul+3,___fltol@f1+3
  3616  00293E  ECB9  F00F         	call	___fltol	;wreg free
  3617  002942  0EC9               	movlw	201
  3618  002944  2465               	addwf	?___fltol^0,w,c
  3619  002946  6E6F               	movwf	?_get_temperature^0,c
  3620  002948  0EFF               	movlw	255
  3621  00294A  2066               	addwfc	(?___fltol+1)^0,w,c
  3622  00294C  6E70               	movwf	(?_get_temperature+1)^0,c
  3623  00294E  0012               	return		;funcret
  3624  002950  FFFF               	dw	65535	; errata NOP
  3625  002952                     __end_of_get_temperature:
  3626                           	callstack 0
  3627                           
  3628 ;; *************** function _state_translator_micro_to_fpga *****************
  3629 ;; Defined at:
  3630 ;;		line 26 in file "utils.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  state           2    0[COMRAM] PTR int 
  3633 ;;		 -> state(2), 
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  state_machin    1    4[COMRAM] unsigned char 
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  1    wreg      unsigned char 
  3638 ;; Registers used:
  3639 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3645 ;;      Params:         2       0       0       0       0       0       0
  3646 ;;      Locals:         1       0       0       0       0       0       0
  3647 ;;      Temps:          2       0       0       0       0       0       0
  3648 ;;      Totals:         5       0       0       0       0       0       0
  3649 ;;Total ram usage:        5 bytes
  3650 ;; Hardware stack levels used:    1
  3651 ;; Hardware stack levels required when called:    1
  3652 ;; This function calls:
  3653 ;;		Nothing
  3654 ;; This function is called by:
  3655 ;;		_main
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           	psect	text3
  3660  002762                     __ptext3:
  3661                           	callstack 0
  3662  002762                     _state_translator_micro_to_fpga:
  3663                           	callstack 0
  3664  002762  FFFF               	dw	65535	; assembler added errata NOP
  3665  002764                     
  3666                           ;utils.c: 27:     unsigned char state_machine_code;;utils.c: 28:     if (*state == 2){
  3667  002764  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  3668  002768  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  3669  00276C  0E02               	movlw	2
  3670  00276E  18DE               	xorwf	postinc2,w,c
  3671  002770  10DE               	iorwf	postinc2,w,c
  3672  002772  A4D8               	btfss	status,2,c
  3673  002774  EFBE  F013         	goto	u3341
  3674  002778  EFC1  F013         	goto	u3340
  3675  00277C                     u3341:
  3676  00277C  FFFF               	dw	65535	; assembler added errata NOP
  3677  00277E  EFC6  F013         	goto	l3310
  3678  002782                     u3340:
  3679  002782  FFFF               	dw	65535	; assembler added errata NOP
  3680  002784                     
  3681                           ;utils.c: 29:         state_machine_code = 0x10;
  3682  002784  0E10               	movlw	16
  3683  002786  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3684                           
  3685                           ;utils.c: 30:     } else if (*state == 0) {
  3686  002788  EFF2  F013         	goto	l319
  3687  00278C                     l3310:
  3688  00278C  FFFF               	dw	65535	; assembler added errata NOP
  3689  00278E  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  3690  002792  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  3691  002796  50DE               	movf	postinc2,w,c
  3692  002798  10DE               	iorwf	postinc2,w,c
  3693  00279A  A4D8               	btfss	status,2,c
  3694  00279C  EFD2  F013         	goto	u3351
  3695  0027A0  EFD5  F013         	goto	u3350
  3696  0027A4                     u3351:
  3697  0027A4  FFFF               	dw	65535	; assembler added errata NOP
  3698  0027A6  EFDA  F013         	goto	l3314
  3699  0027AA                     u3350:
  3700  0027AA  FFFF               	dw	65535	; assembler added errata NOP
  3701  0027AC                     
  3702                           ;utils.c: 31:         state_machine_code = 0x09;
  3703  0027AC  0E09               	movlw	9
  3704  0027AE  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3705                           
  3706                           ;utils.c: 32:     } else if (*state == 14) {
  3707  0027B0  EFF2  F013         	goto	l319
  3708  0027B4                     l3314:
  3709  0027B4  FFFF               	dw	65535	; assembler added errata NOP
  3710  0027B6  C001  FFD9         	movff	state_translator_micro_to_fpga@state,fsr2l
  3711  0027BA  C002  FFDA         	movff	state_translator_micro_to_fpga@state+1,fsr2h
  3712  0027BE  0E0E               	movlw	14
  3713  0027C0  18DE               	xorwf	postinc2,w,c
  3714  0027C2  10DE               	iorwf	postinc2,w,c
  3715  0027C4  A4D8               	btfss	status,2,c
  3716  0027C6  EFE7  F013         	goto	u3361
  3717  0027CA  EFEA  F013         	goto	u3360
  3718  0027CE                     u3361:
  3719  0027CE  FFFF               	dw	65535	; assembler added errata NOP
  3720  0027D0  EFEF  F013         	goto	l3318
  3721  0027D4                     u3360:
  3722  0027D4  FFFF               	dw	65535	; assembler added errata NOP
  3723  0027D6                     
  3724                           ;utils.c: 33:         state_machine_code = 0x40;
  3725  0027D6  0E40               	movlw	64
  3726  0027D8  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3727                           
  3728                           ;utils.c: 34:     } else {
  3729  0027DA  EFF2  F013         	goto	l319
  3730  0027DE                     l3318:
  3731  0027DE  FFFF               	dw	65535	; assembler added errata NOP
  3732                           
  3733                           ;utils.c: 35:         state_machine_code = 0x80;
  3734  0027E0  0E80               	movlw	128
  3735  0027E2  6E05               	movwf	state_translator_micro_to_fpga@state_machine_code^0,c
  3736  0027E4                     l319:
  3737  0027E4  FFFF               	dw	65535	; assembler added errata NOP
  3738                           
  3739                           ;utils.c: 37:     return state_machine_code;
  3740  0027E6  5005               	movf	state_translator_micro_to_fpga@state_machine_code^0,w,c
  3741  0027E8  0012               	return		;funcret
  3742  0027EA  FFFF               	dw	65535	; errata NOP
  3743  0027EC                     __end_of_state_translator_micro_to_fpga:
  3744                           	callstack 0
  3745                           
  3746 ;; *************** function _state_translator_fpga_to_micro *****************
  3747 ;; Defined at:
  3748 ;;		line 2 in file "utils.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;  state_machin    1    wreg     unsigned char 
  3751 ;;  state           2    2[COMRAM] PTR int 
  3752 ;;		 -> state(2), 
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;  state_machin    1    4[COMRAM] unsigned char 
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  1    wreg      void 
  3757 ;; Registers used:
  3758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3764 ;;      Params:         2       0       0       0       0       0       0
  3765 ;;      Locals:         1       0       0       0       0       0       0
  3766 ;;      Temps:          0       0       0       0       0       0       0
  3767 ;;      Totals:         3       0       0       0       0       0       0
  3768 ;;Total ram usage:        3 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; Hardware stack levels required when called:    3
  3771 ;; This function calls:
  3772 ;;		_lcd_dat
  3773 ;; This function is called by:
  3774 ;;		_main
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           
  3778                           	psect	text4
  3779  001E04                     __ptext4:
  3780                           	callstack 0
  3781  001E04                     _state_translator_fpga_to_micro:
  3782                           	callstack 0
  3783  001E04  FFFF               	dw	65535	; assembler added errata NOP
  3784                           
  3785                           ;incstack = 0
  3786                           ;state_translator_fpga_to_micro@state_machine_code stored from wreg
  3787  001E06  6E05               	movwf	state_translator_fpga_to_micro@state_machine_code^0,c
  3788  001E08                     
  3789                           ;utils.c: 3:     lcd_dat(state_machine_code);
  3790  001E08  5005               	movf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3791  001E0A  EC19  F016         	call	_lcd_dat
  3792  001E0E                     
  3793                           ;utils.c: 4:     if (state_machine_code == 0x01){
  3794  001E0E  0405               	decf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3795  001E10  A4D8               	btfss	status,2,c
  3796  001E12  EF0D  F00F         	goto	u3261
  3797  001E16  EF10  F00F         	goto	u3260
  3798  001E1A                     u3261:
  3799  001E1A  FFFF               	dw	65535	; assembler added errata NOP
  3800  001E1C  EF1B  F00F         	goto	l3274
  3801  001E20                     u3260:
  3802  001E20  FFFF               	dw	65535	; assembler added errata NOP
  3803  001E22                     
  3804                           ;utils.c: 5:         *state = 1;
  3805  001E22  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3806  001E26  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3807  001E2A  0E01               	movlw	1
  3808  001E2C  6EDE               	movwf	postinc2,c
  3809  001E2E  0E00               	movlw	0
  3810  001E30  6EDD               	movwf	postdec2,c
  3811                           
  3812                           ;utils.c: 6:     } else if (state_machine_code == 0x02){
  3813  001E32  EFB6  F00F         	goto	l315
  3814  001E36                     l3274:
  3815  001E36  FFFF               	dw	65535	; assembler added errata NOP
  3816  001E38  0E02               	movlw	2
  3817  001E3A  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3818  001E3C  A4D8               	btfss	status,2,c
  3819  001E3E  EF23  F00F         	goto	u3271
  3820  001E42  EF26  F00F         	goto	u3270
  3821  001E46                     u3271:
  3822  001E46  FFFF               	dw	65535	; assembler added errata NOP
  3823  001E48  EF31  F00F         	goto	l3278
  3824  001E4C                     u3270:
  3825  001E4C  FFFF               	dw	65535	; assembler added errata NOP
  3826  001E4E                     
  3827                           ;utils.c: 7:         *state = 3;
  3828  001E4E  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3829  001E52  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3830  001E56  0E03               	movlw	3
  3831  001E58  6EDE               	movwf	postinc2,c
  3832  001E5A  0E00               	movlw	0
  3833  001E5C  6EDD               	movwf	postdec2,c
  3834                           
  3835                           ;utils.c: 8:     } else if (state_machine_code == 0x04){
  3836  001E5E  EFB6  F00F         	goto	l315
  3837  001E62                     l3278:
  3838  001E62  FFFF               	dw	65535	; assembler added errata NOP
  3839  001E64  0E04               	movlw	4
  3840  001E66  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3841  001E68  A4D8               	btfss	status,2,c
  3842  001E6A  EF39  F00F         	goto	u3281
  3843  001E6E  EF3C  F00F         	goto	u3280
  3844  001E72                     u3281:
  3845  001E72  FFFF               	dw	65535	; assembler added errata NOP
  3846  001E74  EF47  F00F         	goto	l3282
  3847  001E78                     u3280:
  3848  001E78  FFFF               	dw	65535	; assembler added errata NOP
  3849  001E7A                     
  3850                           ;utils.c: 9:         *state = 5;
  3851  001E7A  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3852  001E7E  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3853  001E82  0E05               	movlw	5
  3854  001E84  6EDE               	movwf	postinc2,c
  3855  001E86  0E00               	movlw	0
  3856  001E88  6EDD               	movwf	postdec2,c
  3857                           
  3858                           ;utils.c: 10:     } else if (state_machine_code == 0x08){
  3859  001E8A  EFB6  F00F         	goto	l315
  3860  001E8E                     l3282:
  3861  001E8E  FFFF               	dw	65535	; assembler added errata NOP
  3862  001E90  0E08               	movlw	8
  3863  001E92  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3864  001E94  A4D8               	btfss	status,2,c
  3865  001E96  EF4F  F00F         	goto	u3291
  3866  001E9A  EF52  F00F         	goto	u3290
  3867  001E9E                     u3291:
  3868  001E9E  FFFF               	dw	65535	; assembler added errata NOP
  3869  001EA0  EF5D  F00F         	goto	l3286
  3870  001EA4                     u3290:
  3871  001EA4  FFFF               	dw	65535	; assembler added errata NOP
  3872  001EA6                     
  3873                           ;utils.c: 11:         *state = 10;
  3874  001EA6  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3875  001EAA  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3876  001EAE  0E0A               	movlw	10
  3877  001EB0  6EDE               	movwf	postinc2,c
  3878  001EB2  0E00               	movlw	0
  3879  001EB4  6EDD               	movwf	postdec2,c
  3880                           
  3881                           ;utils.c: 12:     } else if (state_machine_code == 0x10){
  3882  001EB6  EFB6  F00F         	goto	l315
  3883  001EBA                     l3286:
  3884  001EBA  FFFF               	dw	65535	; assembler added errata NOP
  3885  001EBC  0E10               	movlw	16
  3886  001EBE  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3887  001EC0  A4D8               	btfss	status,2,c
  3888  001EC2  EF65  F00F         	goto	u3301
  3889  001EC6  EF68  F00F         	goto	u3300
  3890  001ECA                     u3301:
  3891  001ECA  FFFF               	dw	65535	; assembler added errata NOP
  3892  001ECC  EF73  F00F         	goto	l3290
  3893  001ED0                     u3300:
  3894  001ED0  FFFF               	dw	65535	; assembler added errata NOP
  3895  001ED2                     
  3896                           ;utils.c: 13:         *state = 2;
  3897  001ED2  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3898  001ED6  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3899  001EDA  0E02               	movlw	2
  3900  001EDC  6EDE               	movwf	postinc2,c
  3901  001EDE  0E00               	movlw	0
  3902  001EE0  6EDD               	movwf	postdec2,c
  3903                           
  3904                           ;utils.c: 14:     } else if (state_machine_code == 0x40){
  3905  001EE2  EFB6  F00F         	goto	l315
  3906  001EE6                     l3290:
  3907  001EE6  FFFF               	dw	65535	; assembler added errata NOP
  3908  001EE8  0E40               	movlw	64
  3909  001EEA  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3910  001EEC  A4D8               	btfss	status,2,c
  3911  001EEE  EF7B  F00F         	goto	u3311
  3912  001EF2  EF7E  F00F         	goto	u3310
  3913  001EF6                     u3311:
  3914  001EF6  FFFF               	dw	65535	; assembler added errata NOP
  3915  001EF8  EF89  F00F         	goto	l3294
  3916  001EFC                     u3310:
  3917  001EFC  FFFF               	dw	65535	; assembler added errata NOP
  3918  001EFE                     
  3919                           ;utils.c: 15:         *state = 14;
  3920  001EFE  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3921  001F02  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3922  001F06  0E0E               	movlw	14
  3923  001F08  6EDE               	movwf	postinc2,c
  3924  001F0A  0E00               	movlw	0
  3925  001F0C  6EDD               	movwf	postdec2,c
  3926                           
  3927                           ;utils.c: 16:     } else if (state_machine_code == 0x80){
  3928  001F0E  EFB6  F00F         	goto	l315
  3929  001F12                     l3294:
  3930  001F12  FFFF               	dw	65535	; assembler added errata NOP
  3931  001F14  0E80               	movlw	128
  3932  001F16  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3933  001F18  A4D8               	btfss	status,2,c
  3934  001F1A  EF91  F00F         	goto	u3321
  3935  001F1E  EF94  F00F         	goto	u3320
  3936  001F22                     u3321:
  3937  001F22  FFFF               	dw	65535	; assembler added errata NOP
  3938  001F24  EF97  F00F         	goto	l3298
  3939  001F28                     u3320:
  3940  001F28  FFFF               	dw	65535	; assembler added errata NOP
  3941  001F2A  EFB6  F00F         	goto	l315
  3942  001F2E                     l3298:
  3943  001F2E  FFFF               	dw	65535	; assembler added errata NOP
  3944  001F30  0E20               	movlw	32
  3945  001F32  1805               	xorwf	state_translator_fpga_to_micro@state_machine_code^0,w,c
  3946  001F34  A4D8               	btfss	status,2,c
  3947  001F36  EF9F  F00F         	goto	u3331
  3948  001F3A  EFA2  F00F         	goto	u3330
  3949  001F3E                     u3331:
  3950  001F3E  FFFF               	dw	65535	; assembler added errata NOP
  3951  001F40  EFAD  F00F         	goto	l3302
  3952  001F44                     u3330:
  3953  001F44  FFFF               	dw	65535	; assembler added errata NOP
  3954  001F46                     
  3955                           ;utils.c: 19:         *state = 12;
  3956  001F46  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3957  001F4A  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3958  001F4E  0E0C               	movlw	12
  3959  001F50  6EDE               	movwf	postinc2,c
  3960  001F52  0E00               	movlw	0
  3961  001F54  6EDD               	movwf	postdec2,c
  3962                           
  3963                           ;utils.c: 20:     } else {
  3964  001F56  EFB6  F00F         	goto	l315
  3965  001F5A                     l3302:
  3966  001F5A  FFFF               	dw	65535	; assembler added errata NOP
  3967                           
  3968                           ;utils.c: 21:         *state = 0;
  3969  001F5C  C003  FFD9         	movff	state_translator_fpga_to_micro@state,fsr2l
  3970  001F60  C004  FFDA         	movff	state_translator_fpga_to_micro@state+1,fsr2h
  3971  001F64  0E00               	movlw	0
  3972  001F66  6EDE               	movwf	postinc2,c
  3973  001F68  0E00               	movlw	0
  3974  001F6A  6EDD               	movwf	postdec2,c
  3975  001F6C                     l315:
  3976  001F6C  FFFF               	dw	65535	; assembler added errata NOP
  3977  001F6E  0012               	return		;funcret
  3978  001F70  FFFF               	dw	65535	; errata NOP
  3979  001F72                     __end_of_state_translator_fpga_to_micro:
  3980                           	callstack 0
  3981                           
  3982 ;; *************** function _serial_tx_char *****************
  3983 ;; Defined at:
  3984 ;;		line 39 in file "serial_rs232.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;  val             1    wreg     unsigned char 
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;  val             1    0[COMRAM] unsigned char 
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  1    wreg      void 
  3991 ;; Registers used:
  3992 ;;		wreg
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3998 ;;      Params:         0       0       0       0       0       0       0
  3999 ;;      Locals:         1       0       0       0       0       0       0
  4000 ;;      Temps:          0       0       0       0       0       0       0
  4001 ;;      Totals:         1       0       0       0       0       0       0
  4002 ;;Total ram usage:        1 bytes
  4003 ;; Hardware stack levels used:    1
  4004 ;; Hardware stack levels required when called:    1
  4005 ;; This function calls:
  4006 ;;		Nothing
  4007 ;; This function is called by:
  4008 ;;		_main
  4009 ;;		_serial_tx_string
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           	psect	text5
  4014  002D1A                     __ptext5:
  4015                           	callstack 0
  4016  002D1A                     _serial_tx_char:
  4017                           	callstack 0
  4018  002D1A  FFFF               	dw	65535	; assembler added errata NOP
  4019                           
  4020                           ;incstack = 0
  4021                           ;serial_tx_char@val stored from wreg
  4022  002D1C  6E01               	movwf	serial_tx_char@val^0,c
  4023  002D1E                     
  4024                           ;serial_rs232.c: 40:     TXREG = val;
  4025  002D1E  C001  FFAD         	movff	serial_tx_char@val,4013	;volatile
  4026  002D22                     l24:
  4027  002D22  FFFF               	dw	65535	; assembler added errata NOP
  4028  002D24  A2AC               	btfss	172,1,c	;volatile
  4029  002D26  EF97  F016         	goto	u3241
  4030  002D2A  EF9A  F016         	goto	u3240
  4031  002D2E                     u3241:
  4032  002D2E  FFFF               	dw	65535	; assembler added errata NOP
  4033  002D30  EF91  F016         	goto	l24
  4034  002D34                     u3240:
  4035  002D34  FFFF               	dw	65535	; assembler added errata NOP
  4036  002D36  0012               	return		;funcret
  4037  002D38  FFFF               	dw	65535	; errata NOP
  4038  002D3A                     __end_of_serial_tx_char:
  4039                           	callstack 0
  4040                           
  4041 ;; *************** function _reach_goal *****************
  4042 ;; Defined at:
  4043 ;;		line 30 in file "stepper_motor.c"
  4044 ;; Parameters:    Size  Location     Type
  4045 ;;  stepper_moto    2    8[COMRAM] PTR struct .
  4046 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
  4047 ;;  goal_to_reac    2   10[COMRAM] int 
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;		None
  4050 ;; Return value:  Size  Location     Type
  4051 ;;                  2    8[COMRAM] int 
  4052 ;; Registers used:
  4053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4059 ;;      Params:         4       0       0       0       0       0       0
  4060 ;;      Locals:         0       0       0       0       0       0       0
  4061 ;;      Temps:          3       0       0       0       0       0       0
  4062 ;;      Totals:         7       0       0       0       0       0       0
  4063 ;;Total ram usage:        7 bytes
  4064 ;; Hardware stack levels used:    1
  4065 ;; Hardware stack levels required when called:    2
  4066 ;; This function calls:
  4067 ;;		_turn_on_current_coil
  4068 ;;		_update_current_coil
  4069 ;; This function is called by:
  4070 ;;		_main
  4071 ;; This function uses a non-reentrant model
  4072 ;;
  4073                           
  4074                           	psect	text6
  4075  00286A                     __ptext6:
  4076                           	callstack 0
  4077  00286A                     _reach_goal:
  4078                           	callstack 0
  4079  00286A  FFFF               	dw	65535	; assembler added errata NOP
  4080  00286C                     
  4081                           ;stepper_motor.c: 31:     if(stepper_motor -> step_counter >= goal_to_reach){
  4082  00286C  EE20 F002          	lfsr	2,2
  4083  002870  5009               	movf	reach_goal@stepper_motor^0,w,c
  4084  002872  26D9               	addwf	fsr2l,f,c
  4085  002874  500A               	movf	(reach_goal@stepper_motor+1)^0,w,c
  4086  002876  22DA               	addwfc	fsr2h,f,c
  4087  002878  500B               	movf	reach_goal@goal_to_reach^0,w,c
  4088  00287A  5CDE               	subwf	postinc2,w,c
  4089  00287C  50DE               	movf	postinc2,w,c
  4090  00287E  0A80               	xorlw	128
  4091  002880  6E0F               	movwf	(??_reach_goal+2)^0,c
  4092  002882  500C               	movf	(reach_goal@goal_to_reach+1)^0,w,c
  4093  002884  0A80               	xorlw	128
  4094  002886  580F               	subwfb	(??_reach_goal+2)^0,w,c
  4095  002888  A0D8               	btfss	status,0,c
  4096  00288A  EF49  F014         	goto	u3421
  4097  00288E  EF4C  F014         	goto	u3420
  4098  002892                     u3421:
  4099  002892  FFFF               	dw	65535	; assembler added errata NOP
  4100  002894  EF5D  F014         	goto	l3412
  4101  002898                     u3420:
  4102  002898  FFFF               	dw	65535	; assembler added errata NOP
  4103  00289A                     
  4104                           ;stepper_motor.c: 32:         stepper_motor -> step_counter = 0;
  4105  00289A  EE20 F002          	lfsr	2,2
  4106  00289E  5009               	movf	reach_goal@stepper_motor^0,w,c
  4107  0028A0  26D9               	addwf	fsr2l,f,c
  4108  0028A2  500A               	movf	(reach_goal@stepper_motor+1)^0,w,c
  4109  0028A4  22DA               	addwfc	fsr2h,f,c
  4110  0028A6  0E00               	movlw	0
  4111  0028A8  6EDE               	movwf	postinc2,c
  4112  0028AA  0E00               	movlw	0
  4113  0028AC  6EDD               	movwf	postdec2,c
  4114  0028AE                     
  4115                           ;stepper_motor.c: 33:         return 1;
  4116  0028AE  0E00               	movlw	0
  4117  0028B0  6E0A               	movwf	(?_reach_goal+1)^0,c
  4118  0028B2  0E01               	movlw	1
  4119  0028B4  6E09               	movwf	?_reach_goal^0,c
  4120  0028B6  EF6E  F014         	goto	l392
  4121  0028BA                     l3412:
  4122  0028BA  FFFF               	dw	65535	; assembler added errata NOP
  4123                           
  4124                           ;stepper_motor.c: 35:         turn_on_current_coil(stepper_motor);
  4125  0028BC  C009  F001         	movff	reach_goal@stepper_motor,turn_on_current_coil@stepper_motor
  4126  0028C0  C00A  F002         	movff	reach_goal@stepper_motor+1,turn_on_current_coil@stepper_motor+1
  4127  0028C4  EC0F  F015         	call	_turn_on_current_coil	;wreg free
  4128  0028C8                     
  4129                           ;stepper_motor.c: 36:         update_current_coil(stepper_motor);
  4130  0028C8  C009  F001         	movff	reach_goal@stepper_motor,update_current_coil@stepper_motor
  4131  0028CC  C00A  F002         	movff	reach_goal@stepper_motor+1,update_current_coil@stepper_motor+1
  4132  0028D0  EC60  F011         	call	_update_current_coil	;wreg free
  4133  0028D4                     
  4134                           ;stepper_motor.c: 37:         return 0;
  4135  0028D4  0E00               	movlw	0
  4136  0028D6  6E0A               	movwf	(?_reach_goal+1)^0,c
  4137  0028D8  0E00               	movlw	0
  4138  0028DA  6E09               	movwf	?_reach_goal^0,c
  4139  0028DC                     l392:
  4140  0028DC  FFFF               	dw	65535	; assembler added errata NOP
  4141  0028DE  0012               	return		;funcret
  4142  0028E0  FFFF               	dw	65535	; errata NOP
  4143  0028E2                     __end_of_reach_goal:
  4144                           	callstack 0
  4145                           
  4146 ;; *************** function _update_current_coil *****************
  4147 ;; Defined at:
  4148 ;;		line 19 in file "stepper_motor.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;  stepper_moto    2    0[COMRAM] PTR struct .
  4151 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
  4152 ;; Auto vars:     Size  Location     Type
  4153 ;;		None
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  1    wreg      void 
  4156 ;; Registers used:
  4157 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/0
  4160 ;;		On exit  : 0/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4163 ;;      Params:         2       0       0       0       0       0       0
  4164 ;;      Locals:         0       0       0       0       0       0       0
  4165 ;;      Temps:          4       0       0       0       0       0       0
  4166 ;;      Totals:         6       0       0       0       0       0       0
  4167 ;;Total ram usage:        6 bytes
  4168 ;; Hardware stack levels used:    1
  4169 ;; Hardware stack levels required when called:    1
  4170 ;; This function calls:
  4171 ;;		Nothing
  4172 ;; This function is called by:
  4173 ;;		_reach_goal
  4174 ;; This function uses a non-reentrant model
  4175 ;;
  4176                           
  4177                           	psect	text7
  4178  0022C0                     __ptext7:
  4179                           	callstack 0
  4180  0022C0                     _update_current_coil:
  4181                           	callstack 0
  4182  0022C0  FFFF               	dw	65535	; assembler added errata NOP
  4183  0022C2                     
  4184                           ;stepper_motor.c: 20:     stepper_motor -> current_coil = stepper_motor -> current_coil 
      +                          + stepper_motor -> direction;
  4185  0022C2  EE20 F004          	lfsr	2,4
  4186  0022C6  5001               	movf	update_current_coil@stepper_motor^0,w,c
  4187  0022C8  26D9               	addwf	fsr2l,f,c
  4188  0022CA  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
  4189  0022CC  22DA               	addwfc	fsr2h,f,c
  4190  0022CE  CFDE F003          	movff	postinc2,??_update_current_coil
  4191  0022D2  CFDD F004          	movff	postdec2,??_update_current_coil+1
  4192  0022D6  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4193  0022DA  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4194  0022DE  CFDE F005          	movff	postinc2,??_update_current_coil+2
  4195  0022E2  CFDD F006          	movff	postdec2,??_update_current_coil+3
  4196  0022E6  5003               	movf	??_update_current_coil^0,w,c
  4197  0022E8  2605               	addwf	(??_update_current_coil+2)^0,f,c
  4198  0022EA  5004               	movf	(??_update_current_coil+1)^0,w,c
  4199  0022EC  2206               	addwfc	(??_update_current_coil+3)^0,f,c
  4200  0022EE  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4201  0022F2  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4202  0022F6  C005  FFDE         	movff	??_update_current_coil+2,postinc2
  4203  0022FA  C006  FFDD         	movff	??_update_current_coil+3,postdec2
  4204                           
  4205                           ;stepper_motor.c: 21:     stepper_motor -> step_counter = stepper_motor -> step_counter 
      +                          + 1;
  4206  0022FE  EE20 F002          	lfsr	2,2
  4207  002302  5001               	movf	update_current_coil@stepper_motor^0,w,c
  4208  002304  26D9               	addwf	fsr2l,f,c
  4209  002306  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
  4210  002308  22DA               	addwfc	fsr2h,f,c
  4211  00230A  CFDE F003          	movff	postinc2,??_update_current_coil
  4212  00230E  CFDD F004          	movff	postdec2,??_update_current_coil+1
  4213  002312  0E01               	movlw	1
  4214  002314  2603               	addwf	??_update_current_coil^0,f,c
  4215  002316  0E00               	movlw	0
  4216  002318  2204               	addwfc	(??_update_current_coil+1)^0,f,c
  4217  00231A  EE20 F002          	lfsr	2,2
  4218  00231E  5001               	movf	update_current_coil@stepper_motor^0,w,c
  4219  002320  26D9               	addwf	fsr2l,f,c
  4220  002322  5002               	movf	(update_current_coil@stepper_motor+1)^0,w,c
  4221  002324  22DA               	addwfc	fsr2h,f,c
  4222  002326  C003  FFDE         	movff	??_update_current_coil,postinc2
  4223  00232A  C004  FFDD         	movff	??_update_current_coil+1,postdec2
  4224                           
  4225                           ;stepper_motor.c: 22:     if (stepper_motor -> current_coil == -1) {
  4226  00232E  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4227  002332  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4228  002336  28DE               	incf	postinc2,w,c
  4229  002338  E106               	bnz	u3151
  4230  00233A  28DE               	incf	postinc2,w,c
  4231  00233C  A4D8               	btfss	status,2,c
  4232  00233E  EFA3  F011         	goto	u3151
  4233  002342  EFA6  F011         	goto	u3150
  4234  002346                     u3151:
  4235  002346  FFFF               	dw	65535	; assembler added errata NOP
  4236  002348  EFB1  F011         	goto	l3106
  4237  00234C                     u3150:
  4238  00234C  FFFF               	dw	65535	; assembler added errata NOP
  4239  00234E                     
  4240                           ;stepper_motor.c: 23:         stepper_motor -> current_coil = 3;
  4241  00234E  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4242  002352  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4243  002356  0E03               	movlw	3
  4244  002358  6EDE               	movwf	postinc2,c
  4245  00235A  0E00               	movlw	0
  4246  00235C  6EDD               	movwf	postdec2,c
  4247                           
  4248                           ;stepper_motor.c: 24:     } else if(stepper_motor -> current_coil == 4) {
  4249  00235E  EFCA  F011         	goto	l388
  4250  002362                     l3106:
  4251  002362  FFFF               	dw	65535	; assembler added errata NOP
  4252  002364  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4253  002368  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4254  00236C  0E04               	movlw	4
  4255  00236E  18DE               	xorwf	postinc2,w,c
  4256  002370  10DE               	iorwf	postinc2,w,c
  4257  002372  A4D8               	btfss	status,2,c
  4258  002374  EFBE  F011         	goto	u3161
  4259  002378  EFC1  F011         	goto	u3160
  4260  00237C                     u3161:
  4261  00237C  FFFF               	dw	65535	; assembler added errata NOP
  4262  00237E  EFCA  F011         	goto	l388
  4263  002382                     u3160:
  4264  002382  FFFF               	dw	65535	; assembler added errata NOP
  4265  002384                     
  4266                           ;stepper_motor.c: 25:         stepper_motor -> current_coil = 0;
  4267  002384  C001  FFD9         	movff	update_current_coil@stepper_motor,fsr2l
  4268  002388  C002  FFDA         	movff	update_current_coil@stepper_motor+1,fsr2h
  4269  00238C  0E00               	movlw	0
  4270  00238E  6EDE               	movwf	postinc2,c
  4271  002390  0E00               	movlw	0
  4272  002392  6EDD               	movwf	postdec2,c
  4273  002394                     l388:
  4274  002394  FFFF               	dw	65535	; assembler added errata NOP
  4275  002396  0012               	return		;funcret
  4276  002398  FFFF               	dw	65535	; errata NOP
  4277  00239A                     __end_of_update_current_coil:
  4278                           	callstack 0
  4279                           
  4280 ;; *************** function _turn_on_current_coil *****************
  4281 ;; Defined at:
  4282 ;;		line 14 in file "stepper_motor.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;  stepper_moto    2    0[COMRAM] PTR struct .
  4285 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
  4286 ;; Auto vars:     Size  Location     Type
  4287 ;;		None
  4288 ;; Return value:  Size  Location     Type
  4289 ;;                  1    wreg      void 
  4290 ;; Registers used:
  4291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4292 ;; Tracked objects:
  4293 ;;		On entry : 0/0
  4294 ;;		On exit  : 0/0
  4295 ;;		Unchanged: 0/0
  4296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4297 ;;      Params:         2       0       0       0       0       0       0
  4298 ;;      Locals:         0       0       0       0       0       0       0
  4299 ;;      Temps:          6       0       0       0       0       0       0
  4300 ;;      Totals:         8       0       0       0       0       0       0
  4301 ;;Total ram usage:        8 bytes
  4302 ;; Hardware stack levels used:    1
  4303 ;; Hardware stack levels required when called:    1
  4304 ;; This function calls:
  4305 ;;		Nothing
  4306 ;; This function is called by:
  4307 ;;		_reach_goal
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311                           	psect	text8
  4312  002A1E                     __ptext8:
  4313                           	callstack 0
  4314  002A1E                     _turn_on_current_coil:
  4315                           	callstack 0
  4316  002A1E  FFFF               	dw	65535	; assembler added errata NOP
  4317  002A20                     
  4318                           ;stepper_motor.c: 15:     *(stepper_motor -> register_name) = stepper_motor -> hex_coil_
      +                          register_values[stepper_motor -> current_coil];
  4319  002A20  C001  FFD9         	movff	turn_on_current_coil@stepper_motor,fsr2l
  4320  002A24  C002  FFDA         	movff	turn_on_current_coil@stepper_motor+1,fsr2h
  4321  002A28  CFDE F003          	movff	postinc2,??_turn_on_current_coil
  4322  002A2C  CFDD F004          	movff	postdec2,??_turn_on_current_coil+1
  4323  002A30  C001  F005         	movff	turn_on_current_coil@stepper_motor,??_turn_on_current_coil+2
  4324  002A34  C002  F006         	movff	turn_on_current_coil@stepper_motor+1,??_turn_on_current_coil+3
  4325  002A38  5003               	movf	??_turn_on_current_coil^0,w,c
  4326  002A3A  2605               	addwf	(??_turn_on_current_coil+2)^0,f,c
  4327  002A3C  5004               	movf	(??_turn_on_current_coil+1)^0,w,c
  4328  002A3E  2206               	addwfc	(??_turn_on_current_coil+3)^0,f,c
  4329  002A40  0E06               	movlw	6
  4330  002A42  2405               	addwf	(??_turn_on_current_coil+2)^0,w,c
  4331  002A44  6ED9               	movwf	fsr2l,c
  4332  002A46  0E00               	movlw	0
  4333  002A48  2006               	addwfc	(??_turn_on_current_coil+3)^0,w,c
  4334  002A4A  6EDA               	movwf	fsr2h,c
  4335  002A4C  EE10 F00A          	lfsr	1,10
  4336  002A50  5001               	movf	turn_on_current_coil@stepper_motor^0,w,c
  4337  002A52  26E1               	addwf	fsr1l,f,c
  4338  002A54  5002               	movf	(turn_on_current_coil@stepper_motor+1)^0,w,c
  4339  002A56  22E2               	addwfc	fsr1h,f,c
  4340  002A58  CFE6 F007          	movff	postinc1,??_turn_on_current_coil+4
  4341  002A5C  CFE5 F008          	movff	postdec1,??_turn_on_current_coil+5
  4342  002A60  C007  FFE1         	movff	??_turn_on_current_coil+4,fsr1l
  4343  002A64  C008  FFE2         	movff	??_turn_on_current_coil+5,fsr1h
  4344  002A68  CFDF FFE7          	movff	indf2,indf1
  4345  002A6C  0012               	return		;funcret
  4346  002A6E  FFFF               	dw	65535	; errata NOP
  4347  002A70                     __end_of_turn_on_current_coil:
  4348                           	callstack 0
  4349                           
  4350 ;; *************** function _lcd_update *****************
  4351 ;; Defined at:
  4352 ;;		line 108 in file "lcd.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;  state           2   11[COMRAM] int 
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;  i               2   19[COMRAM] int 
  4357 ;;  line_select     4   15[COMRAM] const unsigned char [4]
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  1    wreg      void 
  4360 ;; Registers used:
  4361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4367 ;;      Params:         2       0       0       0       0       0       0
  4368 ;;      Locals:         6       0       0       0       0       0       0
  4369 ;;      Temps:          2       0       0       0       0       0       0
  4370 ;;      Totals:        10       0       0       0       0       0       0
  4371 ;;Total ram usage:       10 bytes
  4372 ;; Hardware stack levels used:    1
  4373 ;; Hardware stack levels required when called:    4
  4374 ;; This function calls:
  4375 ;;		___wmul
  4376 ;;		_lcd_cmd
  4377 ;;		_lcd_str
  4378 ;; This function is called by:
  4379 ;;		_main
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           	psect	text9
  4384  0025FE                     __ptext9:
  4385                           	callstack 0
  4386  0025FE                     _lcd_update:
  4387                           	callstack 0
  4388  0025FE  FFFF               	dw	65535	; assembler added errata NOP
  4389  002600                     
  4390                           ;lcd.c: 109:     lcd_cmd(0x01);
  4391  002600  0E01               	movlw	1
  4392  002602  EC43  F016         	call	_lcd_cmd
  4393  002606                     
  4394                           ;lcd.c: 110:     const char line_select[4] = {0x80, 0xC0, 0x94, 0xD4};
  4395  002606  0E25               	movlw	low lcd_update@F2151
  4396  002608  6EF6               	movwf	tblptrl,c
  4397  00260A                     	if	1	;There is more than 1 active tblptr byte
  4398  00260A  0E7B               	movlw	high lcd_update@F2151
  4399  00260C  6EF7               	movwf	tblptrh,c
  4400  00260E                     	endif
  4401  00260E                     	if	0	;There are less than 3 active tblptr bytes
  4402  00260E                     	endif
  4403  00260E  0009               	tblrd		*+
  4404  002610  FFFF               	dw	65535	; errata NOP
  4405  002612  CFF5 F010          	movff	tablat,lcd_update@line_select
  4406  002616  0009               	tblrd		*+
  4407  002618  FFFF               	dw	65535	; errata NOP
  4408  00261A  CFF5 F011          	movff	tablat,lcd_update@line_select+1
  4409  00261E  0009               	tblrd		*+
  4410  002620  FFFF               	dw	65535	; errata NOP
  4411  002622  CFF5 F012          	movff	tablat,lcd_update@line_select+2
  4412  002626  000A               	tblrd		*-
  4413  002628  FFFF               	dw	65535	; errata NOP
  4414  00262A  CFF5 F013          	movff	tablat,lcd_update@line_select+3
  4415  00262E                     
  4416                           ;lcd.c: 111:     for (int i=0;i<4;i++ ){
  4417  00262E  0E00               	movlw	0
  4418  002630  6E15               	movwf	(lcd_update@i+1)^0,c
  4419  002632  0E00               	movlw	0
  4420  002634  6E14               	movwf	lcd_update@i^0,c
  4421  002636                     l3332:
  4422  002636  FFFF               	dw	65535	; assembler added errata NOP
  4423                           
  4424                           ;lcd.c: 112:         lcd_cmd(line_select[i]);
  4425  002638  0E10               	movlw	low lcd_update@line_select
  4426  00263A  2414               	addwf	lcd_update@i^0,w,c
  4427  00263C  6ED9               	movwf	fsr2l,c
  4428  00263E  0E00               	movlw	high lcd_update@line_select
  4429  002640  2015               	addwfc	(lcd_update@i+1)^0,w,c
  4430  002642  6EDA               	movwf	fsr2h,c
  4431  002644  50DF               	movf	indf2,w,c
  4432  002646  EC43  F016         	call	_lcd_cmd
  4433  00264A                     
  4434                           ;lcd.c: 113:         lcd_str(const_msgs[state][i]);
  4435  00264A  C00C  F001         	movff	lcd_update@state,___wmul@multiplier
  4436  00264E  C00D  F002         	movff	lcd_update@state+1,___wmul@multiplier+1
  4437  002652  0E00               	movlw	0
  4438  002654  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4439  002656  0E50               	movlw	80
  4440  002658  6E03               	movwf	___wmul@multiplicand^0,c
  4441  00265A  EC2E  F016         	call	___wmul	;wreg free
  4442  00265E  0E2D               	movlw	low _const_msgs
  4443  002660  6E0E               	movwf	??_lcd_update^0,c
  4444  002662  0E7B               	movlw	high _const_msgs
  4445  002664  6E0F               	movwf	(??_lcd_update+1)^0,c
  4446  002666  5001               	movf	?___wmul^0,w,c
  4447  002668  260E               	addwf	??_lcd_update^0,f,c
  4448  00266A  5002               	movf	(?___wmul+1)^0,w,c
  4449  00266C  220F               	addwfc	(??_lcd_update+1)^0,f,c
  4450  00266E  C014  F001         	movff	lcd_update@i,___wmul@multiplier
  4451  002672  C015  F002         	movff	lcd_update@i+1,___wmul@multiplier+1
  4452  002676  0E00               	movlw	0
  4453  002678  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4454  00267A  0E14               	movlw	20
  4455  00267C  6E03               	movwf	___wmul@multiplicand^0,c
  4456  00267E  EC2E  F016         	call	___wmul	;wreg free
  4457  002682  5001               	movf	?___wmul^0,w,c
  4458  002684  240E               	addwf	??_lcd_update^0,w,c
  4459  002686  6E07               	movwf	lcd_str@str^0,c
  4460  002688  5002               	movf	(?___wmul+1)^0,w,c
  4461  00268A  200F               	addwfc	(??_lcd_update+1)^0,w,c
  4462  00268C  6E08               	movwf	(lcd_str@str+1)^0,c
  4463  00268E  ECDF  F014         	call	_lcd_str	;wreg free
  4464  002692                     
  4465                           ;lcd.c: 114:     }
  4466  002692  4A14               	infsnz	lcd_update@i^0,f,c
  4467  002694  2A15               	incf	(lcd_update@i+1)^0,f,c
  4468  002696  BE15               	btfsc	(lcd_update@i+1)^0,7,c
  4469  002698  EF57  F013         	goto	u3371
  4470  00269C  5015               	movf	(lcd_update@i+1)^0,w,c
  4471  00269E  E10A               	bnz	u3370
  4472  0026A0  0E04               	movlw	4
  4473  0026A2  5C14               	subwf	lcd_update@i^0,w,c
  4474  0026A4  A0D8               	btfss	status,0,c
  4475  0026A6  EF57  F013         	goto	u3371
  4476  0026AA  EF5A  F013         	goto	u3370
  4477  0026AE                     u3371:
  4478  0026AE  FFFF               	dw	65535	; assembler added errata NOP
  4479  0026B0  EF1B  F013         	goto	l3332
  4480  0026B4                     u3370:
  4481  0026B4  FFFF               	dw	65535	; assembler added errata NOP
  4482  0026B6  0012               	return		;funcret
  4483  0026B8  FFFF               	dw	65535	; errata NOP
  4484  0026BA                     __end_of_lcd_update:
  4485                           	callstack 0
  4486                           
  4487 ;; *************** function _lcd_str *****************
  4488 ;; Defined at:
  4489 ;;		line 80 in file "lcd.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;  str             2    6[COMRAM] PTR const unsigned char 
  4492 ;;		 -> const_msgs(1200), STR_1(22), 
  4493 ;; Auto vars:     Size  Location     Type
  4494 ;;  i               1   10[COMRAM] unsigned char 
  4495 ;; Return value:  Size  Location     Type
  4496 ;;                  1    wreg      void 
  4497 ;; Registers used:
  4498 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4504 ;;      Params:         2       0       0       0       0       0       0
  4505 ;;      Locals:         1       0       0       0       0       0       0
  4506 ;;      Temps:          2       0       0       0       0       0       0
  4507 ;;      Totals:         5       0       0       0       0       0       0
  4508 ;;Total ram usage:        5 bytes
  4509 ;; Hardware stack levels used:    1
  4510 ;; Hardware stack levels required when called:    3
  4511 ;; This function calls:
  4512 ;;		_lcd_dat
  4513 ;; This function is called by:
  4514 ;;		_main
  4515 ;;		_lcd_update
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           	psect	text10
  4520  0029BE                     __ptext10:
  4521                           	callstack 0
  4522  0029BE                     _lcd_str:
  4523                           	callstack 0
  4524  0029BE  FFFF               	dw	65535	; assembler added errata NOP
  4525  0029C0                     
  4526                           ;lcd.c: 80: void lcd_str(const char* str);lcd.c: 81: {;lcd.c: 82:     unsigned char i=0;
  4527  0029C0  0E00               	movlw	0
  4528  0029C2  6E0B               	movwf	lcd_str@i^0,c
  4529                           
  4530                           ;lcd.c: 84:     while(str[i] != 0 )
  4531  0029C4  EFF5  F014         	goto	l3072
  4532  0029C8                     l3068:
  4533  0029C8  FFFF               	dw	65535	; assembler added errata NOP
  4534                           
  4535                           ;lcd.c: 85:     {;lcd.c: 86:       lcd_dat(str[i]);
  4536  0029CA  500B               	movf	lcd_str@i^0,w,c
  4537  0029CC  2407               	addwf	lcd_str@str^0,w,c
  4538  0029CE  6E09               	movwf	??_lcd_str^0,c
  4539  0029D0  0E00               	movlw	0
  4540  0029D2  2008               	addwfc	(lcd_str@str+1)^0,w,c
  4541  0029D4  6E0A               	movwf	(??_lcd_str+1)^0,c
  4542  0029D6  C009  FFF6         	movff	??_lcd_str,tblptrl
  4543  0029DA  C00A  FFF7         	movff	??_lcd_str+1,tblptrh
  4544  0029DE                     	if	0	;tblptru may be non-zero
  4545  0029DE                     	endif
  4546  0029DE                     	if	0	;tblptru may be non-zero
  4547  0029DE                     	endif
  4548  0029DE  0008               	tblrd		*
  4549  0029E0  FFFF               	dw	65535	; errata NOP
  4550  0029E2  50F5               	movf	tablat,w,c
  4551  0029E4  EC19  F016         	call	_lcd_dat
  4552  0029E8                     
  4553                           ;lcd.c: 87:       i++;
  4554  0029E8  2A0B               	incf	lcd_str@i^0,f,c
  4555  0029EA                     l3072:
  4556  0029EA  FFFF               	dw	65535	; assembler added errata NOP
  4557                           
  4558                           ;lcd.c: 84:     while(str[i] != 0 )
  4559  0029EC  500B               	movf	lcd_str@i^0,w,c
  4560  0029EE  2407               	addwf	lcd_str@str^0,w,c
  4561  0029F0  6E09               	movwf	??_lcd_str^0,c
  4562  0029F2  0E00               	movlw	0
  4563  0029F4  2008               	addwfc	(lcd_str@str+1)^0,w,c
  4564  0029F6  6E0A               	movwf	(??_lcd_str+1)^0,c
  4565  0029F8  C009  FFF6         	movff	??_lcd_str,tblptrl
  4566  0029FC  C00A  FFF7         	movff	??_lcd_str+1,tblptrh
  4567  002A00                     	if	0	;tblptru may be non-zero
  4568  002A00                     	endif
  4569  002A00                     	if	0	;tblptru may be non-zero
  4570  002A00                     	endif
  4571  002A00  0008               	tblrd		*
  4572  002A02  FFFF               	dw	65535	; errata NOP
  4573  002A04  50F5               	movf	tablat,w,c
  4574  002A06  0900               	iorlw	0
  4575  002A08  A4D8               	btfss	status,2,c
  4576  002A0A  EF09  F015         	goto	u3111
  4577  002A0E  EF0C  F015         	goto	u3110
  4578  002A12                     u3111:
  4579  002A12  FFFF               	dw	65535	; assembler added errata NOP
  4580  002A14  EFE4  F014         	goto	l3068
  4581  002A18                     u3110:
  4582  002A18  FFFF               	dw	65535	; assembler added errata NOP
  4583  002A1A  0012               	return		;funcret
  4584  002A1C  FFFF               	dw	65535	; errata NOP
  4585  002A1E                     __end_of_lcd_str:
  4586                           	callstack 0
  4587                           
  4588 ;; *************** function _lcd_dat *****************
  4589 ;; Defined at:
  4590 ;;		line 39 in file "lcd.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  val             1    wreg     unsigned char 
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;  val             1    1[COMRAM] unsigned char 
  4595 ;; Return value:  Size  Location     Type
  4596 ;;                  1    wreg      void 
  4597 ;; Registers used:
  4598 ;;		wreg, status,2, cstack
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/0
  4601 ;;		On exit  : 0/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4604 ;;      Params:         0       0       0       0       0       0       0
  4605 ;;      Locals:         1       0       0       0       0       0       0
  4606 ;;      Temps:          0       0       0       0       0       0       0
  4607 ;;      Totals:         1       0       0       0       0       0       0
  4608 ;;Total ram usage:        1 bytes
  4609 ;; Hardware stack levels used:    1
  4610 ;; Hardware stack levels required when called:    2
  4611 ;; This function calls:
  4612 ;;		_lcd_wr
  4613 ;; This function is called by:
  4614 ;;		_lcd_str
  4615 ;;		_state_translator_fpga_to_micro
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           	psect	text11
  4620  002C32                     __ptext11:
  4621                           	callstack 0
  4622  002C32                     _lcd_dat:
  4623                           	callstack 0
  4624  002C32  FFFF               	dw	65535	; assembler added errata NOP
  4625                           
  4626                           ;incstack = 0
  4627                           ;lcd_dat@val stored from wreg
  4628  002C34  6E02               	movwf	lcd_dat@val^0,c
  4629  002C36                     
  4630                           ;lcd.c: 39: void lcd_dat(unsigned char val);lcd.c: 40: {;lcd.c: 41:  PORTEbits.RE1=1;
  4631  002C36  8284               	bsf	132,1,c	;volatile
  4632  002C38                     
  4633                           ;lcd.c: 42:     lcd_wr(val);
  4634  002C38  5002               	movf	lcd_dat@val^0,w,c
  4635  002C3A  ECCE  F016         	call	_lcd_wr
  4636  002C3E                     
  4637                           ;lcd.c: 43:     PORTEbits.RE2=1;
  4638  002C3E  8484               	bsf	132,2,c	;volatile
  4639  002C40                     
  4640                           ;lcd.c: 44:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4641  002C40  0EC8               	movlw	200
  4642  002C42                     u4017:
  4643  002C42  FFFF               	dw	65535	; errata NOP
  4644  002C44  F000               	nop	
  4645  002C46  2EE8               	decfsz	wreg,f,c
  4646  002C48  D7FC               	bra	u4017
  4647  002C4A                     
  4648                           ;lcd.c: 45:     PORTEbits.RE1=0;
  4649  002C4A  9284               	bcf	132,1,c	;volatile
  4650  002C4C                     
  4651                           ;lcd.c: 46:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4652  002C4C  0EC8               	movlw	200
  4653  002C4E                     u4027:
  4654  002C4E  FFFF               	dw	65535	; errata NOP
  4655  002C50  F000               	nop	
  4656  002C52  2EE8               	decfsz	wreg,f,c
  4657  002C54  D7FC               	bra	u4027
  4658  002C56                     
  4659                           ;lcd.c: 47:  PORTEbits.RE1=1;
  4660  002C56  8284               	bsf	132,1,c	;volatile
  4661  002C58  0012               	return		;funcret
  4662  002C5A  FFFF               	dw	65535	; errata NOP
  4663  002C5C                     __end_of_lcd_dat:
  4664                           	callstack 0
  4665                           
  4666 ;; *************** function ___wmul *****************
  4667 ;; Defined at:
  4668 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;  multiplier      2    0[COMRAM] unsigned int 
  4671 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;  product         2    4[COMRAM] unsigned int 
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  2    0[COMRAM] unsigned int 
  4676 ;; Registers used:
  4677 ;;		wreg, status,2, status,0, prodl, prodh
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4683 ;;      Params:         4       0       0       0       0       0       0
  4684 ;;      Locals:         2       0       0       0       0       0       0
  4685 ;;      Temps:          0       0       0       0       0       0       0
  4686 ;;      Totals:         6       0       0       0       0       0       0
  4687 ;;Total ram usage:        6 bytes
  4688 ;; Hardware stack levels used:    1
  4689 ;; Hardware stack levels required when called:    1
  4690 ;; This function calls:
  4691 ;;		Nothing
  4692 ;; This function is called by:
  4693 ;;		_main
  4694 ;;		_lcd_update
  4695 ;; This function uses a non-reentrant model
  4696 ;;
  4697                           
  4698                           	psect	text12
  4699  002C5C                     __ptext12:
  4700                           	callstack 0
  4701  002C5C                     ___wmul:
  4702                           	callstack 0
  4703  002C5C  FFFF               	dw	65535	; assembler added errata NOP
  4704  002C5E  5001               	movf	___wmul@multiplier^0,w,c
  4705  002C60  0203               	mulwf	___wmul@multiplicand^0,c
  4706  002C62  CFF3 F005          	movff	prodl,___wmul@product
  4707  002C66  CFF4 F006          	movff	prodh,___wmul@product+1
  4708  002C6A  5001               	movf	___wmul@multiplier^0,w,c
  4709  002C6C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  4710  002C6E  50F3               	movf	243,w,c
  4711  002C70  2606               	addwf	(___wmul@product+1)^0,f,c
  4712  002C72  5002               	movf	(___wmul@multiplier+1)^0,w,c
  4713  002C74  0203               	mulwf	___wmul@multiplicand^0,c
  4714  002C76  50F3               	movf	243,w,c
  4715  002C78  2606               	addwf	(___wmul@product+1)^0,f,c
  4716  002C7A  C005  F001         	movff	___wmul@product,?___wmul
  4717  002C7E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4718  002C82  0012               	return		;funcret
  4719  002C84  FFFF               	dw	65535	; errata NOP
  4720  002C86                     __end_of___wmul:
  4721                           	callstack 0
  4722                           
  4723 ;; *************** function _lcd_init *****************
  4724 ;; Defined at:
  4725 ;;		line 50 in file "lcd.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;		None
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;		None
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  1    wreg      void 
  4732 ;; Registers used:
  4733 ;;		wreg, status,2, cstack
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4739 ;;      Params:         0       0       0       0       0       0       0
  4740 ;;      Locals:         0       0       0       0       0       0       0
  4741 ;;      Temps:          1       0       0       0       0       0       0
  4742 ;;      Totals:         1       0       0       0       0       0       0
  4743 ;;Total ram usage:        1 bytes
  4744 ;; Hardware stack levels used:    1
  4745 ;; Hardware stack levels required when called:    3
  4746 ;; This function calls:
  4747 ;;		_lcd_cmd
  4748 ;; This function is called by:
  4749 ;;		_main
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753                           	psect	text13
  4754  0027EC                     __ptext13:
  4755                           	callstack 0
  4756  0027EC                     _lcd_init:
  4757                           	callstack 0
  4758  0027EC  FFFF               	dw	65535	; assembler added errata NOP
  4759  0027EE  6A83               	clrf	3971,c	;# 
  4760  0027F0  0E00               	movlw	0	;# 
  4761  0027F2  6E95               	movwf	3989,c	;# 
  4762  0027F4  6A84               	clrf	3972,c	;# 
  4763  0027F6  0E00               	movlw	0	;# 
  4764  0027F8  6E96               	movwf	3990,c	;# 
  4765                           
  4766                           ;lcd.c: 63:  PORTEbits.RE1=0;
  4767  0027FA  9284               	bcf	132,1,c	;volatile
  4768                           
  4769                           ;lcd.c: 64:  PORTEbits.RE2=0;
  4770  0027FC  9484               	bcf	132,2,c	;volatile
  4771  0027FE                     
  4772                           ;lcd.c: 65:  _delay((unsigned long)((30)*(4000000/4000.0)));
  4773  0027FE  0E1E               	movlw	30
  4774  002800  6E03               	movwf	??_lcd_init^0,c
  4775  002802  0E3C               	movlw	60
  4776  002804                     u4037:
  4777  002804  FFFF               	dw	65535	; errata NOP
  4778  002806  2EE8               	decfsz	wreg,f,c
  4779  002808  D7FD               	bra	u4037
  4780  00280A  2E03               	decfsz	??_lcd_init^0,f,c
  4781  00280C  D7FB               	bra	u4037
  4782  00280E  D000               	nop2	
  4783  002810                     
  4784                           ;lcd.c: 66:  PORTEbits.RE1=1;
  4785  002810  8284               	bsf	132,1,c	;volatile
  4786  002812                     
  4787                           ;lcd.c: 68:  lcd_cmd(0x38);
  4788  002812  0E38               	movlw	56
  4789  002814  EC43  F016         	call	_lcd_cmd
  4790  002818                     
  4791                           ;lcd.c: 69:  _delay((unsigned long)((30)*(4000000/4000.0)));
  4792  002818  0E1E               	movlw	30
  4793  00281A  6E03               	movwf	??_lcd_init^0,c
  4794  00281C  0E3C               	movlw	60
  4795  00281E                     u4047:
  4796  00281E  FFFF               	dw	65535	; errata NOP
  4797  002820  2EE8               	decfsz	wreg,f,c
  4798  002822  D7FD               	bra	u4047
  4799  002824  2E03               	decfsz	??_lcd_init^0,f,c
  4800  002826  D7FB               	bra	u4047
  4801  002828  D000               	nop2	
  4802                           
  4803                           ;lcd.c: 70:  lcd_cmd(0x38);
  4804  00282A  0E38               	movlw	56
  4805  00282C  EC43  F016         	call	_lcd_cmd
  4806  002830                     
  4807                           ;lcd.c: 71:     _delay((unsigned long)((30)*(4000000/4000.0)));
  4808  002830  0E1E               	movlw	30
  4809  002832  6E03               	movwf	??_lcd_init^0,c
  4810  002834  0E3C               	movlw	60
  4811  002836                     u4057:
  4812  002836  FFFF               	dw	65535	; errata NOP
  4813  002838  2EE8               	decfsz	wreg,f,c
  4814  00283A  D7FD               	bra	u4057
  4815  00283C  2E03               	decfsz	??_lcd_init^0,f,c
  4816  00283E  D7FB               	bra	u4057
  4817  002840  D000               	nop2	
  4818  002842                     
  4819                           ;lcd.c: 72:  lcd_cmd(0x38);
  4820  002842  0E38               	movlw	56
  4821  002844  EC43  F016         	call	_lcd_cmd
  4822  002848                     
  4823                           ;lcd.c: 73:  lcd_cmd(0x08);
  4824  002848  0E08               	movlw	8
  4825  00284A  EC43  F016         	call	_lcd_cmd
  4826  00284E                     
  4827                           ;lcd.c: 74:  lcd_cmd(0x0F);
  4828  00284E  0E0F               	movlw	15
  4829  002850  EC43  F016         	call	_lcd_cmd
  4830  002854                     
  4831                           ;lcd.c: 75:  lcd_cmd(0x01);
  4832  002854  0E01               	movlw	1
  4833  002856  EC43  F016         	call	_lcd_cmd
  4834  00285A                     
  4835                           ;lcd.c: 76:  lcd_cmd(0x38);
  4836  00285A  0E38               	movlw	56
  4837  00285C  EC43  F016         	call	_lcd_cmd
  4838  002860                     
  4839                           ;lcd.c: 77:     lcd_cmd(0x80);
  4840  002860  0E80               	movlw	128
  4841  002862  EC43  F016         	call	_lcd_cmd
  4842  002866  0012               	return		;funcret
  4843  002868  FFFF               	dw	65535	; errata NOP
  4844  00286A                     __end_of_lcd_init:
  4845                           	callstack 0
  4846                           
  4847 ;; *************** function _lcd_cmd *****************
  4848 ;; Defined at:
  4849 ;;		line 28 in file "lcd.c"
  4850 ;; Parameters:    Size  Location     Type
  4851 ;;  val             1    wreg     unsigned char 
  4852 ;; Auto vars:     Size  Location     Type
  4853 ;;  val             1    1[COMRAM] unsigned char 
  4854 ;; Return value:  Size  Location     Type
  4855 ;;                  1    wreg      void 
  4856 ;; Registers used:
  4857 ;;		wreg, status,2, cstack
  4858 ;; Tracked objects:
  4859 ;;		On entry : 0/0
  4860 ;;		On exit  : 0/0
  4861 ;;		Unchanged: 0/0
  4862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4863 ;;      Params:         0       0       0       0       0       0       0
  4864 ;;      Locals:         1       0       0       0       0       0       0
  4865 ;;      Temps:          0       0       0       0       0       0       0
  4866 ;;      Totals:         1       0       0       0       0       0       0
  4867 ;;Total ram usage:        1 bytes
  4868 ;; Hardware stack levels used:    1
  4869 ;; Hardware stack levels required when called:    2
  4870 ;; This function calls:
  4871 ;;		_lcd_wr
  4872 ;; This function is called by:
  4873 ;;		_main
  4874 ;;		_lcd_init
  4875 ;;		_lcd_update
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879                           	psect	text14
  4880  002C86                     __ptext14:
  4881                           	callstack 0
  4882  002C86                     _lcd_cmd:
  4883                           	callstack 0
  4884  002C86  FFFF               	dw	65535	; assembler added errata NOP
  4885                           
  4886                           ;incstack = 0
  4887                           ;lcd_cmd@val stored from wreg
  4888  002C88  6E02               	movwf	lcd_cmd@val^0,c
  4889  002C8A                     
  4890                           ;lcd.c: 28: void lcd_cmd(unsigned char val);lcd.c: 29: {;lcd.c: 30:  PORTEbits.RE1=1;
  4891  002C8A  8284               	bsf	132,1,c	;volatile
  4892  002C8C                     
  4893                           ;lcd.c: 31:     lcd_wr(val);
  4894  002C8C  5002               	movf	lcd_cmd@val^0,w,c
  4895  002C8E  ECCE  F016         	call	_lcd_wr
  4896  002C92                     
  4897                           ;lcd.c: 32:     PORTEbits.RE2=0;
  4898  002C92  9484               	bcf	132,2,c	;volatile
  4899  002C94                     
  4900                           ;lcd.c: 33:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4901  002C94  0EC8               	movlw	200
  4902  002C96                     u4067:
  4903  002C96  FFFF               	dw	65535	; errata NOP
  4904  002C98  F000               	nop	
  4905  002C9A  2EE8               	decfsz	wreg,f,c
  4906  002C9C  D7FC               	bra	u4067
  4907  002C9E                     
  4908                           ;lcd.c: 34:     PORTEbits.RE1=0;
  4909  002C9E  9284               	bcf	132,1,c	;volatile
  4910  002CA0                     
  4911                           ;lcd.c: 35:     _delay((unsigned long)((1)*(4000000/4000.0)));
  4912  002CA0  0EC8               	movlw	200
  4913  002CA2                     u4077:
  4914  002CA2  FFFF               	dw	65535	; errata NOP
  4915  002CA4  F000               	nop	
  4916  002CA6  2EE8               	decfsz	wreg,f,c
  4917  002CA8  D7FC               	bra	u4077
  4918  002CAA                     
  4919                           ;lcd.c: 36:  PORTEbits.RE1=1;
  4920  002CAA  8284               	bsf	132,1,c	;volatile
  4921  002CAC  0012               	return		;funcret
  4922  002CAE  FFFF               	dw	65535	; errata NOP
  4923  002CB0                     __end_of_lcd_cmd:
  4924                           	callstack 0
  4925                           
  4926 ;; *************** function _lcd_wr *****************
  4927 ;; Defined at:
  4928 ;;		line 23 in file "lcd.c"
  4929 ;; Parameters:    Size  Location     Type
  4930 ;;  val             1    wreg     unsigned char 
  4931 ;; Auto vars:     Size  Location     Type
  4932 ;;  val             1    0[COMRAM] unsigned char 
  4933 ;; Return value:  Size  Location     Type
  4934 ;;                  1    wreg      void 
  4935 ;; Registers used:
  4936 ;;		wreg
  4937 ;; Tracked objects:
  4938 ;;		On entry : 0/0
  4939 ;;		On exit  : 0/0
  4940 ;;		Unchanged: 0/0
  4941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4942 ;;      Params:         0       0       0       0       0       0       0
  4943 ;;      Locals:         1       0       0       0       0       0       0
  4944 ;;      Temps:          0       0       0       0       0       0       0
  4945 ;;      Totals:         1       0       0       0       0       0       0
  4946 ;;Total ram usage:        1 bytes
  4947 ;; Hardware stack levels used:    1
  4948 ;; Hardware stack levels required when called:    1
  4949 ;; This function calls:
  4950 ;;		Nothing
  4951 ;; This function is called by:
  4952 ;;		_lcd_cmd
  4953 ;;		_lcd_dat
  4954 ;; This function uses a non-reentrant model
  4955 ;;
  4956                           
  4957                           	psect	text15
  4958  002D9C                     __ptext15:
  4959                           	callstack 0
  4960  002D9C                     _lcd_wr:
  4961                           	callstack 0
  4962  002D9C  FFFF               	dw	65535	; assembler added errata NOP
  4963                           
  4964                           ;incstack = 0
  4965                           ;lcd_wr@val stored from wreg
  4966  002D9E  6E01               	movwf	lcd_wr@val^0,c
  4967  002DA0                     
  4968                           ;lcd.c: 23: void lcd_wr(unsigned char val);lcd.c: 24: {;lcd.c: 25:     PORTD=val;
  4969  002DA0  C001  FF83         	movff	lcd_wr@val,3971	;volatile
  4970  002DA4  0012               	return		;funcret
  4971  002DA6  FFFF               	dw	65535	; errata NOP
  4972  002DA8                     __end_of_lcd_wr:
  4973                           	callstack 0
  4974                           
  4975 ;; *************** function _init_timer_2 *****************
  4976 ;; Defined at:
  4977 ;;		line 27 in file "timer.c"
  4978 ;; Parameters:    Size  Location     Type
  4979 ;;		None
  4980 ;; Auto vars:     Size  Location     Type
  4981 ;;		None
  4982 ;; Return value:  Size  Location     Type
  4983 ;;                  1    wreg      void 
  4984 ;; Registers used:
  4985 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4986 ;; Tracked objects:
  4987 ;;		On entry : 0/0
  4988 ;;		On exit  : 0/0
  4989 ;;		Unchanged: 0/0
  4990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4991 ;;      Params:         0       0       0       0       0       0       0
  4992 ;;      Locals:         4       0       0       0       0       0       0
  4993 ;;      Temps:          0       0       0       0       0       0       0
  4994 ;;      Totals:         4       0       0       0       0       0       0
  4995 ;;Total ram usage:        4 bytes
  4996 ;; Hardware stack levels used:    1
  4997 ;; Hardware stack levels required when called:    2
  4998 ;; This function calls:
  4999 ;;		___fladd
  5000 ;;		___fldiv
  5001 ;;		___flmul
  5002 ;;		___fltol
  5003 ;; This function is called by:
  5004 ;;		_main
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           	psect	text16
  5009  002470                     __ptext16:
  5010                           	callstack 0
  5011  002470                     _init_timer_2:
  5012                           	callstack 0
  5013  002470  FFFF               	dw	65535	; assembler added errata NOP
  5014  002472                     
  5015                           ;timer.c: 29:     T2CON = 0;
  5016  002472  0E00               	movlw	0
  5017  002474  6ECA               	movwf	202,c	;volatile
  5018                           
  5019                           ;timer.c: 30:     TMR2 = 0;
  5020  002476  0E00               	movlw	0
  5021  002478  6ECC               	movwf	204,c	;volatile
  5022  00247A                     
  5023                           ;timer.c: 32:     T2CONbits.TMR2ON = 1;
  5024  00247A  84CA               	bsf	202,2,c	;volatile
  5025  00247C                     
  5026                           ;timer.c: 33:     T2CONbits.T2CKPS0 = 1;
  5027  00247C  80CA               	bsf	202,0,c	;volatile
  5028  00247E                     
  5029                           ;timer.c: 34:     T2CONbits.T2CKPS1 = 1;
  5030  00247E  82CA               	bsf	202,1,c	;volatile
  5031  002480                     
  5032                           ;timer.c: 36:     PR2 = (uint8_t) (((pwm_period / (4*t_osc*tmr2_prescaler)) - 1)*4);
  5033  002480  0E00               	movlw	0
  5034  002482  6E51               	movwf	___fladd@a^0,c
  5035  002484  0E00               	movlw	0
  5036  002486  6E52               	movwf	(___fladd@a+1)^0,c
  5037  002488  0E80               	movlw	128
  5038  00248A  6E53               	movwf	(___fladd@a+2)^0,c
  5039  00248C  0EBF               	movlw	191
  5040  00248E  6E54               	movwf	(___fladd@a+3)^0,c
  5041  002490  0EBD               	movlw	189
  5042  002492  6E1F               	movwf	___flmul@a^0,c
  5043  002494  0E37               	movlw	55
  5044  002496  6E20               	movwf	(___flmul@a+1)^0,c
  5045  002498  0E86               	movlw	134
  5046  00249A  6E21               	movwf	(___flmul@a+2)^0,c
  5047  00249C  0E36               	movlw	54
  5048  00249E  6E22               	movwf	(___flmul@a+3)^0,c
  5049  0024A0  C0EF  F01B         	movff	_tmr2_prescaler,___flmul@b
  5050  0024A4  C0F0  F01C         	movff	_tmr2_prescaler+1,___flmul@b+1
  5051  0024A8  C0F1  F01D         	movff	_tmr2_prescaler+2,___flmul@b+2
  5052  0024AC  C0F2  F01E         	movff	_tmr2_prescaler+3,___flmul@b+3
  5053  0024B0  ECA5  F007         	call	___flmul	;wreg free
  5054  0024B4  C01B  F038         	movff	?___flmul,___fldiv@a
  5055  0024B8  C01C  F039         	movff	?___flmul+1,___fldiv@a+1
  5056  0024BC  C01D  F03A         	movff	?___flmul+2,___fldiv@a+2
  5057  0024C0  C01E  F03B         	movff	?___flmul+3,___fldiv@a+3
  5058  0024C4  0E0A               	movlw	10
  5059  0024C6  6E34               	movwf	___fldiv@b^0,c
  5060  0024C8  0ED7               	movlw	215
  5061  0024CA  6E35               	movwf	(___fldiv@b+1)^0,c
  5062  0024CC  0EA3               	movlw	163
  5063  0024CE  6E36               	movwf	(___fldiv@b+2)^0,c
  5064  0024D0  0E3C               	movlw	60
  5065  0024D2  6E37               	movwf	(___fldiv@b+3)^0,c
  5066  0024D4  ECF7  F009         	call	___fldiv	;wreg free
  5067  0024D8  C034  F04D         	movff	?___fldiv,___fladd@b
  5068  0024DC  C035  F04E         	movff	?___fldiv+1,___fladd@b+1
  5069  0024E0  C036  F04F         	movff	?___fldiv+2,___fladd@b+2
  5070  0024E4  C037  F050         	movff	?___fldiv+3,___fladd@b+3
  5071  0024E8  ECD1  F004         	call	___fladd	;wreg free
  5072  0024EC  C04D  F06F         	movff	?___fladd,_init_timer_2$1737
  5073  0024F0  C04E  F070         	movff	?___fladd+1,_init_timer_2$1737+1
  5074  0024F4  C04F  F071         	movff	?___fladd+2,_init_timer_2$1737+2
  5075  0024F8  C050  F072         	movff	?___fladd+3,_init_timer_2$1737+3
  5076  0024FC                     
  5077                           ;timer.c: 36:     PR2 = (uint8_t) (((pwm_period / (4*t_osc*tmr2_prescaler)) - 1)*4);
  5078  0024FC  0E00               	movlw	0
  5079  0024FE  6E1F               	movwf	___flmul@a^0,c
  5080  002500  0E00               	movlw	0
  5081  002502  6E20               	movwf	(___flmul@a+1)^0,c
  5082  002504  0E80               	movlw	128
  5083  002506  6E21               	movwf	(___flmul@a+2)^0,c
  5084  002508  0E40               	movlw	64
  5085  00250A  6E22               	movwf	(___flmul@a+3)^0,c
  5086  00250C  C06F  F01B         	movff	_init_timer_2$1737,___flmul@b
  5087  002510  C070  F01C         	movff	_init_timer_2$1737+1,___flmul@b+1
  5088  002514  C071  F01D         	movff	_init_timer_2$1737+2,___flmul@b+2
  5089  002518  C072  F01E         	movff	_init_timer_2$1737+3,___flmul@b+3
  5090  00251C  ECA5  F007         	call	___flmul	;wreg free
  5091  002520  C01B  F065         	movff	?___flmul,___fltol@f1
  5092  002524  C01C  F066         	movff	?___flmul+1,___fltol@f1+1
  5093  002528  C01D  F067         	movff	?___flmul+2,___fltol@f1+2
  5094  00252C  C01E  F068         	movff	?___flmul+3,___fltol@f1+3
  5095  002530  ECB9  F00F         	call	___fltol	;wreg free
  5096  002534  5065               	movf	?___fltol^0,w,c
  5097  002536  6ECB               	movwf	203,c	;volatile
  5098  002538  0012               	return		;funcret
  5099  00253A  FFFF               	dw	65535	; errata NOP
  5100  00253C                     __end_of_init_timer_2:
  5101                           	callstack 0
  5102                           
  5103 ;; *************** function _init_timer_0 *****************
  5104 ;; Defined at:
  5105 ;;		line 11 in file "timer.c"
  5106 ;; Parameters:    Size  Location     Type
  5107 ;;		None
  5108 ;; Auto vars:     Size  Location     Type
  5109 ;;		None
  5110 ;; Return value:  Size  Location     Type
  5111 ;;                  1    wreg      void 
  5112 ;; Registers used:
  5113 ;;		wreg, status,2
  5114 ;; Tracked objects:
  5115 ;;		On entry : 0/0
  5116 ;;		On exit  : 0/0
  5117 ;;		Unchanged: 0/0
  5118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5119 ;;      Params:         0       0       0       0       0       0       0
  5120 ;;      Locals:         0       0       0       0       0       0       0
  5121 ;;      Temps:          0       0       0       0       0       0       0
  5122 ;;      Totals:         0       0       0       0       0       0       0
  5123 ;;Total ram usage:        0 bytes
  5124 ;; Hardware stack levels used:    1
  5125 ;; Hardware stack levels required when called:    1
  5126 ;; This function calls:
  5127 ;;		Nothing
  5128 ;; This function is called by:
  5129 ;;		_main
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132                           
  5133                           	psect	text17
  5134  002CD6                     __ptext17:
  5135                           	callstack 0
  5136  002CD6                     _init_timer_0:
  5137                           	callstack 0
  5138  002CD6  FFFF               	dw	65535	; assembler added errata NOP
  5139  002CD8                     
  5140                           ;timer.c: 13:     T0CON = 0;
  5141  002CD8  0E00               	movlw	0
  5142  002CDA  6ED5               	movwf	213,c	;volatile
  5143                           
  5144                           ;timer.c: 15:     TMR0L = 0x96;
  5145  002CDC  0E96               	movlw	150
  5146  002CDE  6ED6               	movwf	214,c	;volatile
  5147                           
  5148                           ;timer.c: 16:     TMR0H = 0x98;
  5149  002CE0  0E98               	movlw	152
  5150  002CE2  6ED7               	movwf	215,c	;volatile
  5151  002CE4                     
  5152                           ;timer.c: 17:     INTCONbits.TMR0IE = 1;
  5153  002CE4  8AF2               	bsf	242,5,c	;volatile
  5154  002CE6                     
  5155                           ;timer.c: 18:     T0CONbits.T08BIT = 0;
  5156  002CE6  9CD5               	bcf	213,6,c	;volatile
  5157  002CE8                     
  5158                           ;timer.c: 19:     T0CONbits.T0CS = 0;
  5159  002CE8  9AD5               	bcf	213,5,c	;volatile
  5160  002CEA                     
  5161                           ;timer.c: 20:     T0CONbits.PSA = 0;
  5162  002CEA  96D5               	bcf	213,3,c	;volatile
  5163  002CEC                     
  5164                           ;timer.c: 21:     T0CONbits.T0PS0 = 1;
  5165  002CEC  80D5               	bsf	213,0,c	;volatile
  5166  002CEE                     
  5167                           ;timer.c: 22:     T0CONbits.T0PS1 = 1;
  5168  002CEE  82D5               	bsf	213,1,c	;volatile
  5169  002CF0                     
  5170                           ;timer.c: 23:     T0CONbits.T0PS2 = 1;
  5171  002CF0  84D5               	bsf	213,2,c	;volatile
  5172  002CF2                     
  5173                           ;timer.c: 24:     T0CONbits.TMR0ON = 1;
  5174  002CF2  8ED5               	bsf	213,7,c	;volatile
  5175  002CF4  0012               	return		;funcret
  5176  002CF6  FFFF               	dw	65535	; errata NOP
  5177  002CF8                     __end_of_init_timer_0:
  5178                           	callstack 0
  5179                           
  5180 ;; *************** function _init_stepper *****************
  5181 ;; Defined at:
  5182 ;;		line 4 in file "stepper_motor.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;  stepper_moto    2    0[COMRAM] PTR struct .
  5185 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
  5186 ;;  current_coil    2    2[COMRAM] int 
  5187 ;;  step_counter    2    4[COMRAM] int 
  5188 ;;  direction       2    6[COMRAM] int 
  5189 ;;  hex_coil_reg    2    8[COMRAM] PTR unsigned char 
  5190 ;;		 -> hex_end_effector_values(4), hex_joint_values(4), 
  5191 ;;  register_nam    2   10[COMRAM] PTR volatile unsigned ch
  5192 ;;		 -> LATC(1), LATB(1), 
  5193 ;; Auto vars:     Size  Location     Type
  5194 ;;  i               2   14[COMRAM] int 
  5195 ;; Return value:  Size  Location     Type
  5196 ;;                  1    wreg      void 
  5197 ;; Registers used:
  5198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5199 ;; Tracked objects:
  5200 ;;		On entry : 0/0
  5201 ;;		On exit  : 0/0
  5202 ;;		Unchanged: 0/0
  5203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5204 ;;      Params:        12       0       0       0       0       0       0
  5205 ;;      Locals:         2       0       0       0       0       0       0
  5206 ;;      Temps:          2       0       0       0       0       0       0
  5207 ;;      Totals:        16       0       0       0       0       0       0
  5208 ;;Total ram usage:       16 bytes
  5209 ;; Hardware stack levels used:    1
  5210 ;; Hardware stack levels required when called:    1
  5211 ;; This function calls:
  5212 ;;		Nothing
  5213 ;; This function is called by:
  5214 ;;		_main
  5215 ;; This function uses a non-reentrant model
  5216 ;;
  5217                           
  5218                           	psect	text18
  5219  0026BA                     __ptext18:
  5220                           	callstack 0
  5221  0026BA                     _init_stepper:
  5222                           	callstack 0
  5223  0026BA  FFFF               	dw	65535	; assembler added errata NOP
  5224  0026BC                     
  5225                           ;stepper_motor.c: 5:     for (int i = 0; i < 4; i++) {
  5226  0026BC  0E00               	movlw	0
  5227  0026BE  6E10               	movwf	(init_stepper@i+1)^0,c
  5228  0026C0  0E00               	movlw	0
  5229  0026C2  6E0F               	movwf	init_stepper@i^0,c
  5230  0026C4                     l3230:
  5231  0026C4  FFFF               	dw	65535	; assembler added errata NOP
  5232                           
  5233                           ;stepper_motor.c: 6:        stepper_motor -> hex_coil_register_values[i] = hex_coil_regi
      +                          ster_values[i];
  5234  0026C6  500F               	movf	init_stepper@i^0,w,c
  5235  0026C8  2409               	addwf	init_stepper@hex_coil_register_values^0,w,c
  5236  0026CA  6ED9               	movwf	fsr2l,c
  5237  0026CC  5010               	movf	(init_stepper@i+1)^0,w,c
  5238  0026CE  200A               	addwfc	(init_stepper@hex_coil_register_values+1)^0,w,c
  5239  0026D0  6EDA               	movwf	fsr2h,c
  5240  0026D2  500F               	movf	init_stepper@i^0,w,c
  5241  0026D4  2401               	addwf	init_stepper@stepper_motor^0,w,c
  5242  0026D6  6E0D               	movwf	??_init_stepper^0,c
  5243  0026D8  5010               	movf	(init_stepper@i+1)^0,w,c
  5244  0026DA  2002               	addwfc	(init_stepper@stepper_motor+1)^0,w,c
  5245  0026DC  6E0E               	movwf	(??_init_stepper+1)^0,c
  5246  0026DE  0E06               	movlw	6
  5247  0026E0  240D               	addwf	??_init_stepper^0,w,c
  5248  0026E2  6EE1               	movwf	fsr1l,c
  5249  0026E4  0E00               	movlw	0
  5250  0026E6  200E               	addwfc	(??_init_stepper+1)^0,w,c
  5251  0026E8  6EE2               	movwf	fsr1h,c
  5252  0026EA  CFDF FFE7          	movff	indf2,indf1
  5253  0026EE                     
  5254                           ;stepper_motor.c: 7:     }
  5255  0026EE  4A0F               	infsnz	init_stepper@i^0,f,c
  5256  0026F0  2A10               	incf	(init_stepper@i+1)^0,f,c
  5257  0026F2  BE10               	btfsc	(init_stepper@i+1)^0,7,c
  5258  0026F4  EF85  F013         	goto	u3251
  5259  0026F8  5010               	movf	(init_stepper@i+1)^0,w,c
  5260  0026FA  E10A               	bnz	u3250
  5261  0026FC  0E04               	movlw	4
  5262  0026FE  5C0F               	subwf	init_stepper@i^0,w,c
  5263  002700  A0D8               	btfss	status,0,c
  5264  002702  EF85  F013         	goto	u3251
  5265  002706  EF88  F013         	goto	u3250
  5266  00270A                     u3251:
  5267  00270A  FFFF               	dw	65535	; assembler added errata NOP
  5268  00270C  EF62  F013         	goto	l3230
  5269  002710                     u3250:
  5270  002710  FFFF               	dw	65535	; assembler added errata NOP
  5271  002712                     
  5272                           ;stepper_motor.c: 8:     stepper_motor -> current_coil = current_coil;
  5273  002712  C001  FFD9         	movff	init_stepper@stepper_motor,fsr2l
  5274  002716  C002  FFDA         	movff	init_stepper@stepper_motor+1,fsr2h
  5275  00271A  C003  FFDE         	movff	init_stepper@current_coil,postinc2
  5276  00271E  C004  FFDD         	movff	init_stepper@current_coil+1,postdec2
  5277  002722                     
  5278                           ;stepper_motor.c: 9:     stepper_motor -> step_counter = step_counter;
  5279  002722  EE20 F002          	lfsr	2,2
  5280  002726  5001               	movf	init_stepper@stepper_motor^0,w,c
  5281  002728  26D9               	addwf	fsr2l,f,c
  5282  00272A  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
  5283  00272C  22DA               	addwfc	fsr2h,f,c
  5284  00272E  C005  FFDE         	movff	init_stepper@step_counter,postinc2
  5285  002732  C006  FFDD         	movff	init_stepper@step_counter+1,postdec2
  5286  002736                     
  5287                           ;stepper_motor.c: 10:     stepper_motor -> direction = direction;
  5288  002736  EE20 F004          	lfsr	2,4
  5289  00273A  5001               	movf	init_stepper@stepper_motor^0,w,c
  5290  00273C  26D9               	addwf	fsr2l,f,c
  5291  00273E  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
  5292  002740  22DA               	addwfc	fsr2h,f,c
  5293  002742  C007  FFDE         	movff	init_stepper@direction,postinc2
  5294  002746  C008  FFDD         	movff	init_stepper@direction+1,postdec2
  5295  00274A                     
  5296                           ;stepper_motor.c: 11:     stepper_motor -> register_name = register_name;
  5297  00274A  EE20 F00A          	lfsr	2,10
  5298  00274E  5001               	movf	init_stepper@stepper_motor^0,w,c
  5299  002750  26D9               	addwf	fsr2l,f,c
  5300  002752  5002               	movf	(init_stepper@stepper_motor+1)^0,w,c
  5301  002754  22DA               	addwfc	fsr2h,f,c
  5302  002756  C00B  FFDE         	movff	init_stepper@register_name,postinc2
  5303  00275A  C00C  FFDD         	movff	init_stepper@register_name+1,postdec2
  5304  00275E  0012               	return		;funcret
  5305  002760  FFFF               	dw	65535	; errata NOP
  5306  002762                     __end_of_init_stepper:
  5307                           	callstack 0
  5308                           
  5309 ;; *************** function _init_interrupts *****************
  5310 ;; Defined at:
  5311 ;;		line 80 in file "init_PIC.c"
  5312 ;; Parameters:    Size  Location     Type
  5313 ;;		None
  5314 ;; Auto vars:     Size  Location     Type
  5315 ;;		None
  5316 ;; Return value:  Size  Location     Type
  5317 ;;                  1    wreg      void 
  5318 ;; Registers used:
  5319 ;;		None
  5320 ;; Tracked objects:
  5321 ;;		On entry : 0/0
  5322 ;;		On exit  : 0/0
  5323 ;;		Unchanged: 0/0
  5324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5325 ;;      Params:         0       0       0       0       0       0       0
  5326 ;;      Locals:         0       0       0       0       0       0       0
  5327 ;;      Temps:          0       0       0       0       0       0       0
  5328 ;;      Totals:         0       0       0       0       0       0       0
  5329 ;;Total ram usage:        0 bytes
  5330 ;; Hardware stack levels used:    1
  5331 ;; Hardware stack levels required when called:    1
  5332 ;; This function calls:
  5333 ;;		Nothing
  5334 ;; This function is called by:
  5335 ;;		_main
  5336 ;; This function uses a non-reentrant model
  5337 ;;
  5338                           
  5339                           	psect	text19
  5340  002DA8                     __ptext19:
  5341                           	callstack 0
  5342  002DA8                     _init_interrupts:
  5343                           	callstack 0
  5344  002DA8  FFFF               	dw	65535	; assembler added errata NOP
  5345  002DAA                     
  5346                           ;init_PIC.c: 82:     PIR1bits.RCIF = 0;
  5347  002DAA  9A9E               	bcf	158,5,c	;volatile
  5348                           
  5349                           ;init_PIC.c: 83:     PIE1bits.RCIE = 1;
  5350  002DAC  8A9D               	bsf	157,5,c	;volatile
  5351                           
  5352                           ;init_PIC.c: 84:     INTCONbits.PEIE = 1;
  5353  002DAE  8CF2               	bsf	242,6,c	;volatile
  5354  002DB0  0012               	return		;funcret
  5355  002DB2  FFFF               	dw	65535	; errata NOP
  5356  002DB4                     __end_of_init_interrupts:
  5357                           	callstack 0
  5358                           
  5359 ;; *************** function _init_ccp1 *****************
  5360 ;; Defined at:
  5361 ;;		line 41 in file "timer.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;		None
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;		None
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  1    wreg      void 
  5368 ;; Registers used:
  5369 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5375 ;;      Params:         0       0       0       0       0       0       0
  5376 ;;      Locals:         0       0       0       0       0       0       0
  5377 ;;      Temps:          0       0       0       0       0       0       0
  5378 ;;      Totals:         0       0       0       0       0       0       0
  5379 ;;Total ram usage:        0 bytes
  5380 ;; Hardware stack levels used:    1
  5381 ;; Hardware stack levels required when called:    3
  5382 ;; This function calls:
  5383 ;;		_update_pwm_duty_ccp1
  5384 ;; This function is called by:
  5385 ;;		_main
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           
  5389                           	psect	text20
  5390  002CF8                     __ptext20:
  5391                           	callstack 0
  5392  002CF8                     _init_ccp1:
  5393                           	callstack 0
  5394  002CF8  FFFF               	dw	65535	; assembler added errata NOP
  5395  002CFA                     
  5396                           ;timer.c: 42:     CCP1CON = 0x00;
  5397  002CFA  0E00               	movlw	0
  5398  002CFC  6EBD               	movwf	189,c	;volatile
  5399  002CFE                     
  5400                           ;timer.c: 45:     update_pwm_duty_ccp1(5e-3);
  5401  002CFE  0E0A               	movlw	10
  5402  002D00  6E6F               	movwf	update_pwm_duty_ccp1@time_up^0,c
  5403  002D02  0ED7               	movlw	215
  5404  002D04  6E70               	movwf	(update_pwm_duty_ccp1@time_up+1)^0,c
  5405  002D06  0EA3               	movlw	163
  5406  002D08  6E71               	movwf	(update_pwm_duty_ccp1@time_up+2)^0,c
  5407  002D0A  0E3B               	movlw	59
  5408  002D0C  6E72               	movwf	(update_pwm_duty_ccp1@time_up+3)^0,c
  5409  002D0E  EC9E  F012         	call	_update_pwm_duty_ccp1	;wreg free
  5410  002D12                     
  5411                           ;timer.c: 48:     CCP1CONbits.CCP1M3 = 1;
  5412  002D12  86BD               	bsf	189,3,c	;volatile
  5413  002D14                     
  5414                           ;timer.c: 49:     CCP1CONbits.CCP1M2 = 1;
  5415  002D14  84BD               	bsf	189,2,c	;volatile
  5416  002D16  0012               	return		;funcret
  5417  002D18  FFFF               	dw	65535	; errata NOP
  5418  002D1A                     __end_of_init_ccp1:
  5419                           	callstack 0
  5420                           
  5421 ;; *************** function _update_pwm_duty_ccp1 *****************
  5422 ;; Defined at:
  5423 ;;		line 53 in file "timer.c"
  5424 ;; Parameters:    Size  Location     Type
  5425 ;;  time_up         4  110[COMRAM] void 
  5426 ;; Auto vars:     Size  Location     Type
  5427 ;;  new_duty        2  116[COMRAM] unsigned short 
  5428 ;;  lsbs_duty       1  118[COMRAM] unsigned char 
  5429 ;; Return value:  Size  Location     Type
  5430 ;;                  1    wreg      void 
  5431 ;; Registers used:
  5432 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5433 ;; Tracked objects:
  5434 ;;		On entry : 0/0
  5435 ;;		On exit  : 0/0
  5436 ;;		Unchanged: 0/0
  5437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5438 ;;      Params:         4       0       0       0       0       0       0
  5439 ;;      Locals:         3       0       0       0       0       0       0
  5440 ;;      Temps:          2       0       0       0       0       0       0
  5441 ;;      Totals:         9       0       0       0       0       0       0
  5442 ;;Total ram usage:        9 bytes
  5443 ;; Hardware stack levels used:    1
  5444 ;; Hardware stack levels required when called:    2
  5445 ;; This function calls:
  5446 ;;		___fldiv
  5447 ;;		___flmul
  5448 ;;		___fltol
  5449 ;; This function is called by:
  5450 ;;		_init_ccp1
  5451 ;; This function uses a non-reentrant model
  5452 ;;
  5453                           
  5454                           	psect	text21
  5455  00253C                     __ptext21:
  5456                           	callstack 0
  5457  00253C                     _update_pwm_duty_ccp1:
  5458                           	callstack 0
  5459  00253C  FFFF               	dw	65535	; assembler added errata NOP
  5460  00253E                     
  5461                           ;timer.c: 56:     uint16_t new_duty;;timer.c: 57:     uint8_t lsbs_duty;;timer.c: 59:   
      +                            new_duty = (0.001) / (t_osc * tmr2_prescaler);
  5462  00253E  0EBD               	movlw	189
  5463  002540  6E1F               	movwf	___flmul@a^0,c
  5464  002542  0E37               	movlw	55
  5465  002544  6E20               	movwf	(___flmul@a+1)^0,c
  5466  002546  0E86               	movlw	134
  5467  002548  6E21               	movwf	(___flmul@a+2)^0,c
  5468  00254A  0E35               	movlw	53
  5469  00254C  6E22               	movwf	(___flmul@a+3)^0,c
  5470  00254E  C0EF  F01B         	movff	_tmr2_prescaler,___flmul@b
  5471  002552  C0F0  F01C         	movff	_tmr2_prescaler+1,___flmul@b+1
  5472  002556  C0F1  F01D         	movff	_tmr2_prescaler+2,___flmul@b+2
  5473  00255A  C0F2  F01E         	movff	_tmr2_prescaler+3,___flmul@b+3
  5474  00255E  ECA5  F007         	call	___flmul	;wreg free
  5475  002562  C01B  F038         	movff	?___flmul,___fldiv@a
  5476  002566  C01C  F039         	movff	?___flmul+1,___fldiv@a+1
  5477  00256A  C01D  F03A         	movff	?___flmul+2,___fldiv@a+2
  5478  00256E  C01E  F03B         	movff	?___flmul+3,___fldiv@a+3
  5479  002572  0E6F               	movlw	111
  5480  002574  6E34               	movwf	___fldiv@b^0,c
  5481  002576  0E12               	movlw	18
  5482  002578  6E35               	movwf	(___fldiv@b+1)^0,c
  5483  00257A  0E83               	movlw	131
  5484  00257C  6E36               	movwf	(___fldiv@b+2)^0,c
  5485  00257E  0E3A               	movlw	58
  5486  002580  6E37               	movwf	(___fldiv@b+3)^0,c
  5487  002582  ECF7  F009         	call	___fldiv	;wreg free
  5488  002586  C034  F065         	movff	?___fldiv,___fltol@f1
  5489  00258A  C035  F066         	movff	?___fldiv+1,___fltol@f1+1
  5490  00258E  C036  F067         	movff	?___fldiv+2,___fltol@f1+2
  5491  002592  C037  F068         	movff	?___fldiv+3,___fltol@f1+3
  5492  002596  ECB9  F00F         	call	___fltol	;wreg free
  5493  00259A  C065  F075         	movff	?___fltol,update_pwm_duty_ccp1@new_duty
  5494  00259E  C066  F076         	movff	?___fltol+1,update_pwm_duty_ccp1@new_duty+1
  5495  0025A2                     
  5496                           ;timer.c: 60:     lsbs_duty = (uint8_t) new_duty;
  5497  0025A2  C075  F077         	movff	update_pwm_duty_ccp1@new_duty,update_pwm_duty_ccp1@lsbs_duty
  5498  0025A6                     
  5499                           ;timer.c: 64:     if (lsbs_duty & 0x01) CCP1CON |= (1u << 4);
  5500  0025A6  A077               	btfss	update_pwm_duty_ccp1@lsbs_duty^0,0,c
  5501  0025A8  EFD8  F012         	goto	u3131
  5502  0025AC  EFDB  F012         	goto	u3130
  5503  0025B0                     u3131:
  5504  0025B0  FFFF               	dw	65535	; assembler added errata NOP
  5505  0025B2  EFDF  F012         	goto	l3088
  5506  0025B6                     u3130:
  5507  0025B6  FFFF               	dw	65535	; assembler added errata NOP
  5508  0025B8  88BD               	bsf	189,4,c	;volatile
  5509  0025BA  EFE1  F012         	goto	l3090
  5510  0025BE                     l3088:
  5511  0025BE  FFFF               	dw	65535	; assembler added errata NOP
  5512  0025C0  98BD               	bcf	189,4,c	;volatile
  5513  0025C2                     l3090:
  5514  0025C2  FFFF               	dw	65535	; assembler added errata NOP
  5515                           
  5516                           ;timer.c: 67:     if (lsbs_duty & 0x02) CCP1CON |= (1u << 5);
  5517  0025C4  A277               	btfss	update_pwm_duty_ccp1@lsbs_duty^0,1,c
  5518  0025C6  EFE7  F012         	goto	u3141
  5519  0025CA  EFEA  F012         	goto	u3140
  5520  0025CE                     u3141:
  5521  0025CE  FFFF               	dw	65535	; assembler added errata NOP
  5522  0025D0  EFEE  F012         	goto	l3094
  5523  0025D4                     u3140:
  5524  0025D4  FFFF               	dw	65535	; assembler added errata NOP
  5525  0025D6  8ABD               	bsf	189,5,c	;volatile
  5526  0025D8  EFF0  F012         	goto	l3096
  5527  0025DC                     l3094:
  5528  0025DC  FFFF               	dw	65535	; assembler added errata NOP
  5529  0025DE  9ABD               	bcf	189,5,c	;volatile
  5530  0025E0                     l3096:
  5531  0025E0  FFFF               	dw	65535	; assembler added errata NOP
  5532                           
  5533                           ;timer.c: 71:     CCPR1L = (uint8_t) (new_duty >> 2);
  5534  0025E2  C075  F073         	movff	update_pwm_duty_ccp1@new_duty,??_update_pwm_duty_ccp1
  5535  0025E6  C076  F074         	movff	update_pwm_duty_ccp1@new_duty+1,??_update_pwm_duty_ccp1+1
  5536  0025EA  90D8               	bcf	status,0,c
  5537  0025EC  3274               	rrcf	(??_update_pwm_duty_ccp1+1)^0,f,c
  5538  0025EE  3273               	rrcf	??_update_pwm_duty_ccp1^0,f,c
  5539  0025F0  90D8               	bcf	status,0,c
  5540  0025F2  3274               	rrcf	(??_update_pwm_duty_ccp1+1)^0,f,c
  5541  0025F4  3273               	rrcf	??_update_pwm_duty_ccp1^0,f,c
  5542  0025F6  5073               	movf	??_update_pwm_duty_ccp1^0,w,c
  5543  0025F8  6EBE               	movwf	190,c	;volatile
  5544  0025FA  0012               	return		;funcret
  5545  0025FC  FFFF               	dw	65535	; errata NOP
  5546  0025FE                     __end_of_update_pwm_duty_ccp1:
  5547                           	callstack 0
  5548                           
  5549 ;; *************** function ___fldiv *****************
  5550 ;; Defined at:
  5551 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  5552 ;; Parameters:    Size  Location     Type
  5553 ;;  b               4   51[COMRAM] void 
  5554 ;;  a               4   55[COMRAM] void 
  5555 ;; Auto vars:     Size  Location     Type
  5556 ;;  grs             4   70[COMRAM] unsigned long 
  5557 ;;  rem             4   63[COMRAM] unsigned long 
  5558 ;;  new_exp         2   68[COMRAM] short 
  5559 ;;  aexp            1   75[COMRAM] unsigned char 
  5560 ;;  bexp            1   74[COMRAM] unsigned char 
  5561 ;;  sign            1   67[COMRAM] unsigned char 
  5562 ;; Return value:  Size  Location     Type
  5563 ;;                  4   51[COMRAM] unsigned char 
  5564 ;; Registers used:
  5565 ;;		wreg, status,2, status,0
  5566 ;; Tracked objects:
  5567 ;;		On entry : 0/0
  5568 ;;		On exit  : 0/0
  5569 ;;		Unchanged: 0/0
  5570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5571 ;;      Params:         8       0       0       0       0       0       0
  5572 ;;      Locals:        13       0       0       0       0       0       0
  5573 ;;      Temps:          4       0       0       0       0       0       0
  5574 ;;      Totals:        25       0       0       0       0       0       0
  5575 ;;Total ram usage:       25 bytes
  5576 ;; Hardware stack levels used:    1
  5577 ;; Hardware stack levels required when called:    1
  5578 ;; This function calls:
  5579 ;;		Nothing
  5580 ;; This function is called by:
  5581 ;;		_init_timer_2
  5582 ;;		_update_pwm_duty_ccp1
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           	psect	text22
  5587  0013EE                     __ptext22:
  5588                           	callstack 0
  5589  0013EE                     ___fldiv:
  5590                           	callstack 0
  5591  0013EE  FFFF               	dw	65535	; assembler added errata NOP
  5592  0013F0  5037               	movf	(___fldiv@b+3)^0,w,c
  5593  0013F2  0B80               	andlw	128
  5594  0013F4  6E44               	movwf	___fldiv@sign^0,c
  5595  0013F6  5037               	movf	(___fldiv@b+3)^0,w,c
  5596  0013F8  2437               	addwf	(___fldiv@b+3)^0,w,c
  5597  0013FA  6E4B               	movwf	___fldiv@bexp^0,c
  5598  0013FC  AE36               	btfss	(___fldiv@b+2)^0,7,c
  5599  0013FE  EF03  F00A         	goto	u2371
  5600  001402  EF06  F00A         	goto	u2370
  5601  001406                     u2371:
  5602  001406  FFFF               	dw	65535	; assembler added errata NOP
  5603  001408  EF08  F00A         	goto	l2630
  5604  00140C                     u2370:
  5605  00140C  FFFF               	dw	65535	; assembler added errata NOP
  5606  00140E  804B               	bsf	___fldiv@bexp^0,0,c
  5607  001410                     l2630:
  5608  001410  FFFF               	dw	65535	; assembler added errata NOP
  5609  001412  504B               	movf	___fldiv@bexp^0,w,c
  5610  001414  B4D8               	btfsc	status,2,c
  5611  001416  EF0F  F00A         	goto	u2381
  5612  00141A  EF12  F00A         	goto	u2380
  5613  00141E                     u2381:
  5614  00141E  FFFF               	dw	65535	; assembler added errata NOP
  5615  001420  EF2B  F00A         	goto	l2640
  5616  001424                     u2380:
  5617  001424  FFFF               	dw	65535	; assembler added errata NOP
  5618  001426  284B               	incf	___fldiv@bexp^0,w,c
  5619  001428  A4D8               	btfss	status,2,c
  5620  00142A  EF19  F00A         	goto	u2391
  5621  00142E  EF1C  F00A         	goto	u2390
  5622  001432                     u2391:
  5623  001432  FFFF               	dw	65535	; assembler added errata NOP
  5624  001434  EF25  F00A         	goto	l2636
  5625  001438                     u2390:
  5626  001438  FFFF               	dw	65535	; assembler added errata NOP
  5627  00143A  0E00               	movlw	0
  5628  00143C  6E34               	movwf	___fldiv@b^0,c
  5629  00143E  0E00               	movlw	0
  5630  001440  6E35               	movwf	(___fldiv@b+1)^0,c
  5631  001442  0E00               	movlw	0
  5632  001444  6E36               	movwf	(___fldiv@b+2)^0,c
  5633  001446  0E00               	movlw	0
  5634  001448  6E37               	movwf	(___fldiv@b+3)^0,c
  5635  00144A                     l2636:
  5636  00144A  FFFF               	dw	65535	; assembler added errata NOP
  5637  00144C  8E36               	bsf	(___fldiv@b+2)^0,7,c
  5638  00144E  0E00               	movlw	0
  5639  001450  6E37               	movwf	(___fldiv@b+3)^0,c
  5640  001452  EF34  F00A         	goto	l2642
  5641  001456                     l2640:
  5642  001456  FFFF               	dw	65535	; assembler added errata NOP
  5643  001458  0E00               	movlw	0
  5644  00145A  6E34               	movwf	___fldiv@b^0,c
  5645  00145C  0E00               	movlw	0
  5646  00145E  6E35               	movwf	(___fldiv@b+1)^0,c
  5647  001460  0E00               	movlw	0
  5648  001462  6E36               	movwf	(___fldiv@b+2)^0,c
  5649  001464  0E00               	movlw	0
  5650  001466  6E37               	movwf	(___fldiv@b+3)^0,c
  5651  001468                     l2642:
  5652  001468  FFFF               	dw	65535	; assembler added errata NOP
  5653  00146A  503B               	movf	(___fldiv@a+3)^0,w,c
  5654  00146C  0B80               	andlw	128
  5655  00146E  1A44               	xorwf	___fldiv@sign^0,f,c
  5656  001470  503B               	movf	(___fldiv@a+3)^0,w,c
  5657  001472  243B               	addwf	(___fldiv@a+3)^0,w,c
  5658  001474  6E4C               	movwf	___fldiv@aexp^0,c
  5659  001476  AE3A               	btfss	(___fldiv@a+2)^0,7,c
  5660  001478  EF40  F00A         	goto	u2401
  5661  00147C  EF43  F00A         	goto	u2400
  5662  001480                     u2401:
  5663  001480  FFFF               	dw	65535	; assembler added errata NOP
  5664  001482  EF45  F00A         	goto	l2650
  5665  001486                     u2400:
  5666  001486  FFFF               	dw	65535	; assembler added errata NOP
  5667  001488  804C               	bsf	___fldiv@aexp^0,0,c
  5668  00148A                     l2650:
  5669  00148A  FFFF               	dw	65535	; assembler added errata NOP
  5670  00148C  504C               	movf	___fldiv@aexp^0,w,c
  5671  00148E  B4D8               	btfsc	status,2,c
  5672  001490  EF4C  F00A         	goto	u2411
  5673  001494  EF4F  F00A         	goto	u2410
  5674  001498                     u2411:
  5675  001498  FFFF               	dw	65535	; assembler added errata NOP
  5676  00149A  EF68  F00A         	goto	l2660
  5677  00149E                     u2410:
  5678  00149E  FFFF               	dw	65535	; assembler added errata NOP
  5679  0014A0  284C               	incf	___fldiv@aexp^0,w,c
  5680  0014A2  A4D8               	btfss	status,2,c
  5681  0014A4  EF56  F00A         	goto	u2421
  5682  0014A8  EF59  F00A         	goto	u2420
  5683  0014AC                     u2421:
  5684  0014AC  FFFF               	dw	65535	; assembler added errata NOP
  5685  0014AE  EF62  F00A         	goto	l2656
  5686  0014B2                     u2420:
  5687  0014B2  FFFF               	dw	65535	; assembler added errata NOP
  5688  0014B4  0E00               	movlw	0
  5689  0014B6  6E38               	movwf	___fldiv@a^0,c
  5690  0014B8  0E00               	movlw	0
  5691  0014BA  6E39               	movwf	(___fldiv@a+1)^0,c
  5692  0014BC  0E00               	movlw	0
  5693  0014BE  6E3A               	movwf	(___fldiv@a+2)^0,c
  5694  0014C0  0E00               	movlw	0
  5695  0014C2  6E3B               	movwf	(___fldiv@a+3)^0,c
  5696  0014C4                     l2656:
  5697  0014C4  FFFF               	dw	65535	; assembler added errata NOP
  5698  0014C6  8E3A               	bsf	(___fldiv@a+2)^0,7,c
  5699  0014C8  0E00               	movlw	0
  5700  0014CA  6E3B               	movwf	(___fldiv@a+3)^0,c
  5701  0014CC  EF71  F00A         	goto	l2662
  5702  0014D0                     l2660:
  5703  0014D0  FFFF               	dw	65535	; assembler added errata NOP
  5704  0014D2  0E00               	movlw	0
  5705  0014D4  6E38               	movwf	___fldiv@a^0,c
  5706  0014D6  0E00               	movlw	0
  5707  0014D8  6E39               	movwf	(___fldiv@a+1)^0,c
  5708  0014DA  0E00               	movlw	0
  5709  0014DC  6E3A               	movwf	(___fldiv@a+2)^0,c
  5710  0014DE  0E00               	movlw	0
  5711  0014E0  6E3B               	movwf	(___fldiv@a+3)^0,c
  5712  0014E2                     l2662:
  5713  0014E2  FFFF               	dw	65535	; assembler added errata NOP
  5714  0014E4  5038               	movf	___fldiv@a^0,w,c
  5715  0014E6  1039               	iorwf	(___fldiv@a+1)^0,w,c
  5716  0014E8  103A               	iorwf	(___fldiv@a+2)^0,w,c
  5717  0014EA  103B               	iorwf	(___fldiv@a+3)^0,w,c
  5718  0014EC  A4D8               	btfss	status,2,c
  5719  0014EE  EF7B  F00A         	goto	u2431
  5720  0014F2  EF7E  F00A         	goto	u2430
  5721  0014F6                     u2431:
  5722  0014F6  FFFF               	dw	65535	; assembler added errata NOP
  5723  0014F8  EF98  F00A         	goto	l2674
  5724  0014FC                     u2430:
  5725  0014FC  FFFF               	dw	65535	; assembler added errata NOP
  5726  0014FE  0E00               	movlw	0
  5727  001500  6E34               	movwf	___fldiv@b^0,c
  5728  001502  0E00               	movlw	0
  5729  001504  6E35               	movwf	(___fldiv@b+1)^0,c
  5730  001506  0E00               	movlw	0
  5731  001508  6E36               	movwf	(___fldiv@b+2)^0,c
  5732  00150A  0E00               	movlw	0
  5733  00150C  6E37               	movwf	(___fldiv@b+3)^0,c
  5734  00150E  0E80               	movlw	128
  5735  001510  1236               	iorwf	(___fldiv@b+2)^0,f,c
  5736  001512  0E7F               	movlw	127
  5737  001514  1237               	iorwf	(___fldiv@b+3)^0,f,c
  5738  001516                     l2668:
  5739  001516  FFFF               	dw	65535	; assembler added errata NOP
  5740  001518  5044               	movf	___fldiv@sign^0,w,c
  5741  00151A  1237               	iorwf	(___fldiv@b+3)^0,f,c
  5742  00151C  C034  F034         	movff	___fldiv@b,?___fldiv
  5743  001520  C035  F035         	movff	___fldiv@b+1,?___fldiv+1
  5744  001524  C036  F036         	movff	___fldiv@b+2,?___fldiv+2
  5745  001528  C037  F037         	movff	___fldiv@b+3,?___fldiv+3
  5746  00152C  EF0D  F00C         	goto	l1027
  5747  001530                     l2674:
  5748  001530  FFFF               	dw	65535	; assembler added errata NOP
  5749  001532  504B               	movf	___fldiv@bexp^0,w,c
  5750  001534  A4D8               	btfss	status,2,c
  5751  001536  EF9F  F00A         	goto	u2441
  5752  00153A  EFA2  F00A         	goto	u2440
  5753  00153E                     u2441:
  5754  00153E  FFFF               	dw	65535	; assembler added errata NOP
  5755  001540  EFAD  F00A         	goto	l2682
  5756  001544                     u2440:
  5757  001544  FFFF               	dw	65535	; assembler added errata NOP
  5758  001546  0E00               	movlw	0
  5759  001548  6E34               	movwf	?___fldiv^0,c
  5760  00154A  0E00               	movlw	0
  5761  00154C  6E35               	movwf	(?___fldiv+1)^0,c
  5762  00154E  0E00               	movlw	0
  5763  001550  6E36               	movwf	(?___fldiv+2)^0,c
  5764  001552  0E00               	movlw	0
  5765  001554  6E37               	movwf	(?___fldiv+3)^0,c
  5766  001556  EF0D  F00C         	goto	l1027
  5767  00155A                     l2682:
  5768  00155A  FFFF               	dw	65535	; assembler added errata NOP
  5769  00155C  504C               	movf	___fldiv@aexp^0,w,c
  5770  00155E  C04B  F03C         	movff	___fldiv@bexp,??___fldiv
  5771  001562  6A3D               	clrf	(??___fldiv+1)^0,c
  5772  001564  5E3C               	subwf	??___fldiv^0,f,c
  5773  001566  0E00               	movlw	0
  5774  001568  5A3D               	subwfb	(??___fldiv+1)^0,f,c
  5775  00156A  0E7F               	movlw	127
  5776  00156C  243C               	addwf	??___fldiv^0,w,c
  5777  00156E  6E45               	movwf	___fldiv@new_exp^0,c
  5778  001570  0E00               	movlw	0
  5779  001572  203D               	addwfc	(??___fldiv+1)^0,w,c
  5780  001574  6E46               	movwf	(___fldiv@new_exp+1)^0,c
  5781  001576  C034  F040         	movff	___fldiv@b,___fldiv@rem
  5782  00157A  C035  F041         	movff	___fldiv@b+1,___fldiv@rem+1
  5783  00157E  C036  F042         	movff	___fldiv@b+2,___fldiv@rem+2
  5784  001582  C037  F043         	movff	___fldiv@b+3,___fldiv@rem+3
  5785  001586  0E00               	movlw	0
  5786  001588  6E34               	movwf	___fldiv@b^0,c
  5787  00158A  0E00               	movlw	0
  5788  00158C  6E35               	movwf	(___fldiv@b+1)^0,c
  5789  00158E  0E00               	movlw	0
  5790  001590  6E36               	movwf	(___fldiv@b+2)^0,c
  5791  001592  0E00               	movlw	0
  5792  001594  6E37               	movwf	(___fldiv@b+3)^0,c
  5793  001596  0E00               	movlw	0
  5794  001598  6E47               	movwf	___fldiv@grs^0,c
  5795  00159A  0E00               	movlw	0
  5796  00159C  6E48               	movwf	(___fldiv@grs+1)^0,c
  5797  00159E  0E00               	movlw	0
  5798  0015A0  6E49               	movwf	(___fldiv@grs+2)^0,c
  5799  0015A2  0E00               	movlw	0
  5800  0015A4  6E4A               	movwf	(___fldiv@grs+3)^0,c
  5801  0015A6  0E00               	movlw	0
  5802  0015A8  6E4C               	movwf	___fldiv@aexp^0,c
  5803  0015AA  EF19  F00B         	goto	l1029
  5804  0015AE                     l2692:
  5805  0015AE  FFFF               	dw	65535	; assembler added errata NOP
  5806  0015B0  504C               	movf	___fldiv@aexp^0,w,c
  5807  0015B2  B4D8               	btfsc	status,2,c
  5808  0015B4  EFDE  F00A         	goto	u2451
  5809  0015B8  EFE1  F00A         	goto	u2450
  5810  0015BC                     u2451:
  5811  0015BC  FFFF               	dw	65535	; assembler added errata NOP
  5812  0015BE  EFFC  F00A         	goto	l2700
  5813  0015C2                     u2450:
  5814  0015C2  FFFF               	dw	65535	; assembler added errata NOP
  5815  0015C4  90D8               	bcf	status,0,c
  5816  0015C6  3640               	rlcf	___fldiv@rem^0,f,c
  5817  0015C8  3641               	rlcf	(___fldiv@rem+1)^0,f,c
  5818  0015CA  3642               	rlcf	(___fldiv@rem+2)^0,f,c
  5819  0015CC  3643               	rlcf	(___fldiv@rem+3)^0,f,c
  5820  0015CE  90D8               	bcf	status,0,c
  5821  0015D0  3634               	rlcf	___fldiv@b^0,f,c
  5822  0015D2  3635               	rlcf	(___fldiv@b+1)^0,f,c
  5823  0015D4  3636               	rlcf	(___fldiv@b+2)^0,f,c
  5824  0015D6  3637               	rlcf	(___fldiv@b+3)^0,f,c
  5825  0015D8  AE4A               	btfss	(___fldiv@grs+3)^0,7,c
  5826  0015DA  EFF1  F00A         	goto	u2461
  5827  0015DE  EFF4  F00A         	goto	u2460
  5828  0015E2                     u2461:
  5829  0015E2  FFFF               	dw	65535	; assembler added errata NOP
  5830  0015E4  EFF6  F00A         	goto	l1032
  5831  0015E8                     u2460:
  5832  0015E8  FFFF               	dw	65535	; assembler added errata NOP
  5833  0015EA  8034               	bsf	___fldiv@b^0,0,c
  5834  0015EC                     l1032:
  5835  0015EC  FFFF               	dw	65535	; assembler added errata NOP
  5836  0015EE  90D8               	bcf	status,0,c
  5837  0015F0  3647               	rlcf	___fldiv@grs^0,f,c
  5838  0015F2  3648               	rlcf	(___fldiv@grs+1)^0,f,c
  5839  0015F4  3649               	rlcf	(___fldiv@grs+2)^0,f,c
  5840  0015F6  364A               	rlcf	(___fldiv@grs+3)^0,f,c
  5841  0015F8                     l2700:
  5842  0015F8  FFFF               	dw	65535	; assembler added errata NOP
  5843  0015FA  5038               	movf	___fldiv@a^0,w,c
  5844  0015FC  5C40               	subwf	___fldiv@rem^0,w,c
  5845  0015FE  5039               	movf	(___fldiv@a+1)^0,w,c
  5846  001600  5841               	subwfb	(___fldiv@rem+1)^0,w,c
  5847  001602  503A               	movf	(___fldiv@a+2)^0,w,c
  5848  001604  5842               	subwfb	(___fldiv@rem+2)^0,w,c
  5849  001606  503B               	movf	(___fldiv@a+3)^0,w,c
  5850  001608  5843               	subwfb	(___fldiv@rem+3)^0,w,c
  5851  00160A  A0D8               	btfss	status,0,c
  5852  00160C  EF0A  F00B         	goto	u2471
  5853  001610  EF0D  F00B         	goto	u2470
  5854  001614                     u2471:
  5855  001614  FFFF               	dw	65535	; assembler added errata NOP
  5856  001616  EF17  F00B         	goto	l2706
  5857  00161A                     u2470:
  5858  00161A  FFFF               	dw	65535	; assembler added errata NOP
  5859  00161C  8C4A               	bsf	(___fldiv@grs+3)^0,6,c
  5860  00161E  5038               	movf	___fldiv@a^0,w,c
  5861  001620  5E40               	subwf	___fldiv@rem^0,f,c
  5862  001622  5039               	movf	(___fldiv@a+1)^0,w,c
  5863  001624  5A41               	subwfb	(___fldiv@rem+1)^0,f,c
  5864  001626  503A               	movf	(___fldiv@a+2)^0,w,c
  5865  001628  5A42               	subwfb	(___fldiv@rem+2)^0,f,c
  5866  00162A  503B               	movf	(___fldiv@a+3)^0,w,c
  5867  00162C  5A43               	subwfb	(___fldiv@rem+3)^0,f,c
  5868  00162E                     l2706:
  5869  00162E  FFFF               	dw	65535	; assembler added errata NOP
  5870  001630  2A4C               	incf	___fldiv@aexp^0,f,c
  5871  001632                     l1029:
  5872  001632  FFFF               	dw	65535	; assembler added errata NOP
  5873  001634  0E19               	movlw	25
  5874  001636  644C               	cpfsgt	___fldiv@aexp^0,c
  5875  001638  EF20  F00B         	goto	u2481
  5876  00163C  EF23  F00B         	goto	u2480
  5877  001640                     u2481:
  5878  001640  FFFF               	dw	65535	; assembler added errata NOP
  5879  001642  EFD7  F00A         	goto	l2692
  5880  001646                     u2480:
  5881  001646  FFFF               	dw	65535	; assembler added errata NOP
  5882  001648  5040               	movf	___fldiv@rem^0,w,c
  5883  00164A  1041               	iorwf	(___fldiv@rem+1)^0,w,c
  5884  00164C  1042               	iorwf	(___fldiv@rem+2)^0,w,c
  5885  00164E  1043               	iorwf	(___fldiv@rem+3)^0,w,c
  5886  001650  B4D8               	btfsc	status,2,c
  5887  001652  EF2D  F00B         	goto	u2491
  5888  001656  EF30  F00B         	goto	u2490
  5889  00165A                     u2491:
  5890  00165A  FFFF               	dw	65535	; assembler added errata NOP
  5891  00165C  EF4D  F00B         	goto	l2718
  5892  001660                     u2490:
  5893  001660  FFFF               	dw	65535	; assembler added errata NOP
  5894  001662  8047               	bsf	___fldiv@grs^0,0,c
  5895  001664  EF4D  F00B         	goto	l2718
  5896  001668                     l2712:
  5897  001668  FFFF               	dw	65535	; assembler added errata NOP
  5898  00166A  90D8               	bcf	status,0,c
  5899  00166C  3634               	rlcf	___fldiv@b^0,f,c
  5900  00166E  3635               	rlcf	(___fldiv@b+1)^0,f,c
  5901  001670  3636               	rlcf	(___fldiv@b+2)^0,f,c
  5902  001672  3637               	rlcf	(___fldiv@b+3)^0,f,c
  5903  001674  AE4A               	btfss	(___fldiv@grs+3)^0,7,c
  5904  001676  EF3F  F00B         	goto	u2501
  5905  00167A  EF42  F00B         	goto	u2500
  5906  00167E                     u2501:
  5907  00167E  FFFF               	dw	65535	; assembler added errata NOP
  5908  001680  EF44  F00B         	goto	l1038
  5909  001684                     u2500:
  5910  001684  FFFF               	dw	65535	; assembler added errata NOP
  5911  001686  8034               	bsf	___fldiv@b^0,0,c
  5912  001688                     l1038:
  5913  001688  FFFF               	dw	65535	; assembler added errata NOP
  5914  00168A  90D8               	bcf	status,0,c
  5915  00168C  3647               	rlcf	___fldiv@grs^0,f,c
  5916  00168E  3648               	rlcf	(___fldiv@grs+1)^0,f,c
  5917  001690  3649               	rlcf	(___fldiv@grs+2)^0,f,c
  5918  001692  364A               	rlcf	(___fldiv@grs+3)^0,f,c
  5919  001694  0645               	decf	___fldiv@new_exp^0,f,c
  5920  001696  A0D8               	btfss	status,0,c
  5921  001698  0646               	decf	(___fldiv@new_exp+1)^0,f,c
  5922  00169A                     l2718:
  5923  00169A  FFFF               	dw	65535	; assembler added errata NOP
  5924  00169C  AE36               	btfss	(___fldiv@b+2)^0,7,c
  5925  00169E  EF53  F00B         	goto	u2511
  5926  0016A2  EF56  F00B         	goto	u2510
  5927  0016A6                     u2511:
  5928  0016A6  FFFF               	dw	65535	; assembler added errata NOP
  5929  0016A8  EF34  F00B         	goto	l2712
  5930  0016AC                     u2510:
  5931  0016AC  FFFF               	dw	65535	; assembler added errata NOP
  5932  0016AE  0E00               	movlw	0
  5933  0016B0  6E4C               	movwf	___fldiv@aexp^0,c
  5934  0016B2  AE4A               	btfss	(___fldiv@grs+3)^0,7,c
  5935  0016B4  EF5E  F00B         	goto	u2521
  5936  0016B8  EF61  F00B         	goto	u2520
  5937  0016BC                     u2521:
  5938  0016BC  FFFF               	dw	65535	; assembler added errata NOP
  5939  0016BE  EF8C  F00B         	goto	l1040
  5940  0016C2                     u2520:
  5941  0016C2  FFFF               	dw	65535	; assembler added errata NOP
  5942  0016C4  0EFF               	movlw	255
  5943  0016C6  1447               	andwf	___fldiv@grs^0,w,c
  5944  0016C8  6E3C               	movwf	??___fldiv^0,c
  5945  0016CA  0EFF               	movlw	255
  5946  0016CC  1448               	andwf	(___fldiv@grs+1)^0,w,c
  5947  0016CE  6E3D               	movwf	(??___fldiv+1)^0,c
  5948  0016D0  0EFF               	movlw	255
  5949  0016D2  1449               	andwf	(___fldiv@grs+2)^0,w,c
  5950  0016D4  6E3E               	movwf	(??___fldiv+2)^0,c
  5951  0016D6  0E7F               	movlw	127
  5952  0016D8  144A               	andwf	(___fldiv@grs+3)^0,w,c
  5953  0016DA  6E3F               	movwf	(??___fldiv+3)^0,c
  5954  0016DC  503C               	movf	??___fldiv^0,w,c
  5955  0016DE  103D               	iorwf	(??___fldiv+1)^0,w,c
  5956  0016E0  103E               	iorwf	(??___fldiv+2)^0,w,c
  5957  0016E2  103F               	iorwf	(??___fldiv+3)^0,w,c
  5958  0016E4  B4D8               	btfsc	status,2,c
  5959  0016E6  EF77  F00B         	goto	u2531
  5960  0016EA  EF7A  F00B         	goto	u2530
  5961  0016EE                     u2531:
  5962  0016EE  FFFF               	dw	65535	; assembler added errata NOP
  5963  0016F0  EF80  F00B         	goto	l1041
  5964  0016F4                     u2530:
  5965  0016F4  FFFF               	dw	65535	; assembler added errata NOP
  5966  0016F6                     l2726:
  5967  0016F6  FFFF               	dw	65535	; assembler added errata NOP
  5968  0016F8  0E01               	movlw	1
  5969  0016FA  6E4C               	movwf	___fldiv@aexp^0,c
  5970  0016FC  EF8C  F00B         	goto	l1040
  5971  001700                     l1041:
  5972  001700  FFFF               	dw	65535	; assembler added errata NOP
  5973  001702  A034               	btfss	___fldiv@b^0,0,c
  5974  001704  EF86  F00B         	goto	u2541
  5975  001708  EF89  F00B         	goto	u2540
  5976  00170C                     u2541:
  5977  00170C  FFFF               	dw	65535	; assembler added errata NOP
  5978  00170E  EF8C  F00B         	goto	l1040
  5979  001712                     u2540:
  5980  001712  FFFF               	dw	65535	; assembler added errata NOP
  5981  001714  EF7B  F00B         	goto	l2726
  5982  001718                     l1040:
  5983  001718  FFFF               	dw	65535	; assembler added errata NOP
  5984  00171A  504C               	movf	___fldiv@aexp^0,w,c
  5985  00171C  B4D8               	btfsc	status,2,c
  5986  00171E  EF93  F00B         	goto	u2551
  5987  001722  EF96  F00B         	goto	u2550
  5988  001726                     u2551:
  5989  001726  FFFF               	dw	65535	; assembler added errata NOP
  5990  001728  EFBD  F00B         	goto	l2738
  5991  00172C                     u2550:
  5992  00172C  FFFF               	dw	65535	; assembler added errata NOP
  5993  00172E  0E01               	movlw	1
  5994  001730  2634               	addwf	___fldiv@b^0,f,c
  5995  001732  0E00               	movlw	0
  5996  001734  2235               	addwfc	(___fldiv@b+1)^0,f,c
  5997  001736  2236               	addwfc	(___fldiv@b+2)^0,f,c
  5998  001738  2237               	addwfc	(___fldiv@b+3)^0,f,c
  5999  00173A  A037               	btfss	(___fldiv@b+3)^0,0,c
  6000  00173C  EFA2  F00B         	goto	u2561
  6001  001740  EFA5  F00B         	goto	u2560
  6002  001744                     u2561:
  6003  001744  FFFF               	dw	65535	; assembler added errata NOP
  6004  001746  EFBD  F00B         	goto	l2738
  6005  00174A                     u2560:
  6006  00174A  FFFF               	dw	65535	; assembler added errata NOP
  6007  00174C  C034  F03C         	movff	___fldiv@b,??___fldiv
  6008  001750  C035  F03D         	movff	___fldiv@b+1,??___fldiv+1
  6009  001754  C036  F03E         	movff	___fldiv@b+2,??___fldiv+2
  6010  001758  C037  F03F         	movff	___fldiv@b+3,??___fldiv+3
  6011  00175C  343F               	rlcf	(??___fldiv+3)^0,w,c
  6012  00175E  323F               	rrcf	(??___fldiv+3)^0,f,c
  6013  001760  323E               	rrcf	(??___fldiv+2)^0,f,c
  6014  001762  323D               	rrcf	(??___fldiv+1)^0,f,c
  6015  001764  323C               	rrcf	??___fldiv^0,f,c
  6016  001766  C03C  F034         	movff	??___fldiv,___fldiv@b
  6017  00176A  C03D  F035         	movff	??___fldiv+1,___fldiv@b+1
  6018  00176E  C03E  F036         	movff	??___fldiv+2,___fldiv@b+2
  6019  001772  C03F  F037         	movff	??___fldiv+3,___fldiv@b+3
  6020  001776  4A45               	infsnz	___fldiv@new_exp^0,f,c
  6021  001778  2A46               	incf	(___fldiv@new_exp+1)^0,f,c
  6022  00177A                     l2738:
  6023  00177A  FFFF               	dw	65535	; assembler added errata NOP
  6024  00177C  BE46               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6025  00177E  EFC9  F00B         	goto	u2571
  6026  001782  5046               	movf	(___fldiv@new_exp+1)^0,w,c
  6027  001784  E109               	bnz	u2570
  6028  001786  2845               	incf	___fldiv@new_exp^0,w,c
  6029  001788  A0D8               	btfss	status,0,c
  6030  00178A  EFC9  F00B         	goto	u2571
  6031  00178E  EFCC  F00B         	goto	u2570
  6032  001792                     u2571:
  6033  001792  FFFF               	dw	65535	; assembler added errata NOP
  6034  001794  EFD8  F00B         	goto	l2742
  6035  001798                     u2570:
  6036  001798  FFFF               	dw	65535	; assembler added errata NOP
  6037  00179A  0E00               	movlw	0
  6038  00179C  6E46               	movwf	(___fldiv@new_exp+1)^0,c
  6039  00179E  6845               	setf	___fldiv@new_exp^0,c
  6040  0017A0  0E00               	movlw	0
  6041  0017A2  6E34               	movwf	___fldiv@b^0,c
  6042  0017A4  0E00               	movlw	0
  6043  0017A6  6E35               	movwf	(___fldiv@b+1)^0,c
  6044  0017A8  0E00               	movlw	0
  6045  0017AA  6E36               	movwf	(___fldiv@b+2)^0,c
  6046  0017AC  0E00               	movlw	0
  6047  0017AE  6E37               	movwf	(___fldiv@b+3)^0,c
  6048  0017B0                     l2742:
  6049  0017B0  FFFF               	dw	65535	; assembler added errata NOP
  6050  0017B2  BE46               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6051  0017B4  EFE7  F00B         	goto	u2580
  6052  0017B8  5046               	movf	(___fldiv@new_exp+1)^0,w,c
  6053  0017BA  E106               	bnz	u2581
  6054  0017BC  0445               	decf	___fldiv@new_exp^0,w,c
  6055  0017BE  B0D8               	btfsc	status,0,c
  6056  0017C0  EFE4  F00B         	goto	u2581
  6057  0017C4  EFE7  F00B         	goto	u2580
  6058  0017C8                     u2581:
  6059  0017C8  FFFF               	dw	65535	; assembler added errata NOP
  6060  0017CA  EFF6  F00B         	goto	l2746
  6061  0017CE                     u2580:
  6062  0017CE  FFFF               	dw	65535	; assembler added errata NOP
  6063  0017D0  0E00               	movlw	0
  6064  0017D2  6E46               	movwf	(___fldiv@new_exp+1)^0,c
  6065  0017D4  0E00               	movlw	0
  6066  0017D6  6E45               	movwf	___fldiv@new_exp^0,c
  6067  0017D8  0E00               	movlw	0
  6068  0017DA  6E34               	movwf	___fldiv@b^0,c
  6069  0017DC  0E00               	movlw	0
  6070  0017DE  6E35               	movwf	(___fldiv@b+1)^0,c
  6071  0017E0  0E00               	movlw	0
  6072  0017E2  6E36               	movwf	(___fldiv@b+2)^0,c
  6073  0017E4  0E00               	movlw	0
  6074  0017E6  6E37               	movwf	(___fldiv@b+3)^0,c
  6075  0017E8  0E00               	movlw	0
  6076  0017EA  6E44               	movwf	___fldiv@sign^0,c
  6077  0017EC                     l2746:
  6078  0017EC  FFFF               	dw	65535	; assembler added errata NOP
  6079  0017EE  C045  F04B         	movff	___fldiv@new_exp,___fldiv@bexp
  6080  0017F2  A04B               	btfss	___fldiv@bexp^0,0,c
  6081  0017F4  EFFE  F00B         	goto	u2591
  6082  0017F8  EF01  F00C         	goto	u2590
  6083  0017FC                     u2591:
  6084  0017FC  FFFF               	dw	65535	; assembler added errata NOP
  6085  0017FE  EF05  F00C         	goto	l2752
  6086  001802                     u2590:
  6087  001802  FFFF               	dw	65535	; assembler added errata NOP
  6088  001804  8E36               	bsf	(___fldiv@b+2)^0,7,c
  6089  001806  EF07  F00C         	goto	l2754
  6090  00180A                     l2752:
  6091  00180A  FFFF               	dw	65535	; assembler added errata NOP
  6092  00180C  9E36               	bcf	(___fldiv@b+2)^0,7,c
  6093  00180E                     l2754:
  6094  00180E  FFFF               	dw	65535	; assembler added errata NOP
  6095  001810  90D8               	bcf	status,0,c
  6096  001812  304B               	rrcf	___fldiv@bexp^0,w,c
  6097  001814  6E37               	movwf	(___fldiv@b+3)^0,c
  6098  001816  EF8B  F00A         	goto	l2668
  6099  00181A                     l1027:
  6100  00181A  FFFF               	dw	65535	; assembler added errata NOP
  6101  00181C  0012               	return		;funcret
  6102  00181E  FFFF               	dw	65535	; errata NOP
  6103  001820                     __end_of___fldiv:
  6104                           	callstack 0
  6105                           
  6106 ;; *************** function _init_USART *****************
  6107 ;; Defined at:
  6108 ;;		line 13 in file "serial_rs232.c"
  6109 ;; Parameters:    Size  Location     Type
  6110 ;;		None
  6111 ;; Auto vars:     Size  Location     Type
  6112 ;;		None
  6113 ;; Return value:  Size  Location     Type
  6114 ;;                  1    wreg      void 
  6115 ;; Registers used:
  6116 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6117 ;; Tracked objects:
  6118 ;;		On entry : 0/0
  6119 ;;		On exit  : 0/0
  6120 ;;		Unchanged: 0/0
  6121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6122 ;;      Params:         0       0       0       0       0       0       0
  6123 ;;      Locals:         0       0       0       0       0       0       0
  6124 ;;      Temps:          0       0       0       0       0       0       0
  6125 ;;      Totals:         0       0       0       0       0       0       0
  6126 ;;Total ram usage:        0 bytes
  6127 ;; Hardware stack levels used:    1
  6128 ;; Hardware stack levels required when called:    4
  6129 ;; This function calls:
  6130 ;;		___fltol
  6131 ;;		_roundf
  6132 ;; This function is called by:
  6133 ;;		_main
  6134 ;; This function uses a non-reentrant model
  6135 ;;
  6136                           
  6137                           	psect	text23
  6138  002B4C                     __ptext23:
  6139                           	callstack 0
  6140  002B4C                     _init_USART:
  6141                           	callstack 0
  6142  002B4C  FFFF               	dw	65535	; assembler added errata NOP
  6143  002B4E                     
  6144                           ;serial_rs232.c: 24:     SPBRG = roundf(((fosc / desired_baudrate) / 16) - 1);
  6145  002B4E  0E55               	movlw	85
  6146  002B50  0100               	movlb	0	; () banked
  6147  002B52  6FC2               	movwf	roundf@x& (0+255),b
  6148  002B54  0E55               	movlw	85
  6149  002B56  6FC3               	movwf	(roundf@x+1)& (0+255),b
  6150  002B58  0EC8               	movlw	200
  6151  002B5A  6FC4               	movwf	(roundf@x+2)& (0+255),b
  6152  002B5C  0E41               	movlw	65
  6153  002B5E  6FC5               	movwf	(roundf@x+3)& (0+255),b
  6154  002B60  EC10  F00C         	call	_roundf	;wreg free
  6155  002B64  C0C2  F065         	movff	?_roundf,___fltol@f1
  6156  002B68  C0C3  F066         	movff	?_roundf+1,___fltol@f1+1
  6157  002B6C  C0C4  F067         	movff	?_roundf+2,___fltol@f1+2
  6158  002B70  C0C5  F068         	movff	?_roundf+3,___fltol@f1+3
  6159  002B74  ECB9  F00F         	call	___fltol	;wreg free
  6160  002B78  5065               	movf	?___fltol^0,w,c
  6161  002B7A  6EAF               	movwf	175,c	;volatile
  6162  002B7C                     
  6163                           ;serial_rs232.c: 28:     TXSTAbits.TX9 = 0;
  6164  002B7C  9CAC               	bcf	172,6,c	;volatile
  6165  002B7E                     
  6166                           ;serial_rs232.c: 29:     TXSTAbits.TXEN = 1;
  6167  002B7E  8AAC               	bsf	172,5,c	;volatile
  6168  002B80                     
  6169                           ;serial_rs232.c: 30:     TXSTAbits.SYNC =0;
  6170  002B80  98AC               	bcf	172,4,c	;volatile
  6171  002B82                     
  6172                           ;serial_rs232.c: 31:     TXSTAbits.BRGH = 1;
  6173  002B82  84AC               	bsf	172,2,c	;volatile
  6174  002B84                     
  6175                           ;serial_rs232.c: 33:     RCSTAbits.SPEN = 1;
  6176  002B84  8EAB               	bsf	171,7,c	;volatile
  6177  002B86                     
  6178                           ;serial_rs232.c: 34:     RCSTAbits.RX9 = 0;
  6179  002B86  9CAB               	bcf	171,6,c	;volatile
  6180  002B88                     
  6181                           ;serial_rs232.c: 35:     RCSTAbits.CREN = 1;
  6182  002B88  88AB               	bsf	171,4,c	;volatile
  6183  002B8A  0012               	return		;funcret
  6184  002B8C  FFFF               	dw	65535	; errata NOP
  6185  002B8E                     __end_of_init_USART:
  6186                           	callstack 0
  6187                           
  6188 ;; *************** function _roundf *****************
  6189 ;; Defined at:
  6190 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\roundf.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;  x               4    0[BANK0 ] float 
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;  y               4   22[BANK0 ] float 
  6195 ;;  u               4   18[BANK0 ] struct .
  6196 ;;  e               2   12[BANK0 ] int 
  6197 ;; Return value:  Size  Location     Type
  6198 ;;                  4    0[BANK0 ] float 
  6199 ;; Registers used:
  6200 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6201 ;; Tracked objects:
  6202 ;;		On entry : 0/0
  6203 ;;		On exit  : 0/0
  6204 ;;		Unchanged: 0/0
  6205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6206 ;;      Params:         0       4       0       0       0       0       0
  6207 ;;      Locals:         0      18       0       0       0       0       0
  6208 ;;      Temps:          0       4       0       0       0       0       0
  6209 ;;      Totals:         0      26       0       0       0       0       0
  6210 ;;Total ram usage:       26 bytes
  6211 ;; Hardware stack levels used:    1
  6212 ;; Hardware stack levels required when called:    3
  6213 ;; This function calls:
  6214 ;;		___fladd
  6215 ;;		___flge
  6216 ;;		___flmul
  6217 ;;		___flneg
  6218 ;;		___flsub
  6219 ;; This function is called by:
  6220 ;;		_init_USART
  6221 ;; This function uses a non-reentrant model
  6222 ;;
  6223                           
  6224                           	psect	text24
  6225  001820                     __ptext24:
  6226                           	callstack 0
  6227  001820                     _roundf:
  6228                           	callstack 0
  6229  001820  FFFF               	dw	65535	; assembler added errata NOP
  6230  001822  C080  F0D4         	movff	roundf@F525,roundf@u
  6231  001826  C081  F0D5         	movff	roundf@F525+1,roundf@u+1
  6232  00182A  C082  F0D6         	movff	roundf@F525+2,roundf@u+2
  6233  00182E  C083  F0D7         	movff	roundf@F525+3,roundf@u+3
  6234  001832  C0C2  F0D4         	movff	roundf@x,roundf@u
  6235  001836  C0C3  F0D5         	movff	roundf@x+1,roundf@u+1
  6236  00183A  C0C4  F0D6         	movff	roundf@x+2,roundf@u+2
  6237  00183E  C0C5  F0D7         	movff	roundf@x+3,roundf@u+3
  6238  001842  C0D4  F0C6         	movff	roundf@u,??_roundf
  6239  001846  C0D5  F0C7         	movff	roundf@u+1,??_roundf+1
  6240  00184A  C0D6  F0C8         	movff	roundf@u+2,??_roundf+2
  6241  00184E  C0D7  F0C9         	movff	roundf@u+3,??_roundf+3
  6242  001852  0E18               	movlw	24
  6243  001854  EF33  F00C         	goto	u3020
  6244  001858                     u3025:
  6245  001858  FFFF               	dw	65535	; assembler added errata NOP
  6246  00185A  0100               	movlb	0	; () banked
  6247  00185C  90D8               	bcf	status,0,c
  6248  00185E  33C9               	rrcf	(??_roundf+3)& (0+255),f,b
  6249  001860  33C8               	rrcf	(??_roundf+2)& (0+255),f,b
  6250  001862  33C7               	rrcf	(??_roundf+1)& (0+255),f,b
  6251  001864  33C6               	rrcf	??_roundf& (0+255),f,b
  6252  001866                     u3020:
  6253  001866  FFFF               	dw	65535	; assembler added errata NOP
  6254  001868  2EE8               	decfsz	wreg,f,c
  6255  00186A  EF2C  F00C         	goto	u3025
  6256  00186E  51C6               	movf	??_roundf& (0+255),w,b
  6257  001870  6FCE               	movwf	roundf@e& (0+255),b
  6258  001872  6BCF               	clrf	(roundf@e+1)& (0+255),b
  6259  001874  BFCF               	btfsc	(roundf@e+1)& (0+255),7,b
  6260  001876  EF46  F00C         	goto	u3031
  6261  00187A  51CF               	movf	(roundf@e+1)& (0+255),w,b
  6262  00187C  E10A               	bnz	u3030
  6263  00187E  0E96               	movlw	150
  6264  001880  5DCE               	subwf	roundf@e& (0+255),w,b
  6265  001882  A0D8               	btfss	status,0,c
  6266  001884  EF46  F00C         	goto	u3031
  6267  001888  EF49  F00C         	goto	u3030
  6268  00188C                     u3031:
  6269  00188C  FFFF               	dw	65535	; assembler added errata NOP
  6270  00188E  EF54  F00C         	goto	l3024
  6271  001892                     u3030:
  6272  001892  FFFF               	dw	65535	; assembler added errata NOP
  6273  001894                     
  6274                           ; BSR set to: 0
  6275  001894  C0C2  F0C2         	movff	roundf@x,?_roundf
  6276  001898  C0C3  F0C3         	movff	roundf@x+1,?_roundf+1
  6277  00189C  C0C4  F0C4         	movff	roundf@x+2,?_roundf+2
  6278  0018A0  C0C5  F0C5         	movff	roundf@x+3,?_roundf+3
  6279  0018A4  EF03  F00E         	goto	l1131
  6280  0018A8                     l3024:
  6281  0018A8  FFFF               	dw	65535	; assembler added errata NOP
  6282                           
  6283                           ; BSR set to: 0
  6284  0018AA  C0D4  F0C6         	movff	roundf@u,??_roundf
  6285  0018AE  C0D5  F0C7         	movff	roundf@u+1,??_roundf+1
  6286  0018B2  C0D6  F0C8         	movff	roundf@u+2,??_roundf+2
  6287  0018B6  C0D7  F0C9         	movff	roundf@u+3,??_roundf+3
  6288  0018BA  0E20               	movlw	32
  6289  0018BC  EF66  F00C         	goto	u3040
  6290  0018C0                     u3045:
  6291  0018C0  FFFF               	dw	65535	; assembler added errata NOP
  6292  0018C2  90D8               	bcf	status,0,c
  6293  0018C4  33C9               	rrcf	(??_roundf+3)& (0+255),f,b
  6294  0018C6  33C8               	rrcf	(??_roundf+2)& (0+255),f,b
  6295  0018C8  33C7               	rrcf	(??_roundf+1)& (0+255),f,b
  6296  0018CA  33C6               	rrcf	??_roundf& (0+255),f,b
  6297  0018CC                     u3040:
  6298  0018CC  FFFF               	dw	65535	; assembler added errata NOP
  6299  0018CE  2EE8               	decfsz	wreg,f,c
  6300  0018D0  EF60  F00C         	goto	u3045
  6301  0018D4  51C6               	movf	??_roundf& (0+255),w,b
  6302  0018D6  11C7               	iorwf	(??_roundf+1)& (0+255),w,b
  6303  0018D8  11C8               	iorwf	(??_roundf+2)& (0+255),w,b
  6304  0018DA  11C9               	iorwf	(??_roundf+3)& (0+255),w,b
  6305  0018DC  B4D8               	btfsc	status,2,c
  6306  0018DE  EF73  F00C         	goto	u3051
  6307  0018E2  EF76  F00C         	goto	u3050
  6308  0018E6                     u3051:
  6309  0018E6  FFFF               	dw	65535	; assembler added errata NOP
  6310  0018E8  EF89  F00C         	goto	l3028
  6311  0018EC                     u3050:
  6312  0018EC  FFFF               	dw	65535	; assembler added errata NOP
  6313  0018EE                     
  6314                           ; BSR set to: 0
  6315  0018EE  C0C2  F001         	movff	roundf@x,___flneg@f1
  6316  0018F2  C0C3  F002         	movff	roundf@x+1,___flneg@f1+1
  6317  0018F6  C0C4  F003         	movff	roundf@x+2,___flneg@f1+2
  6318  0018FA  C0C5  F004         	movff	roundf@x+3,___flneg@f1+3
  6319  0018FE  ECC7  F015         	call	___flneg	;wreg free
  6320  001902  C001  F0C2         	movff	?___flneg,roundf@x
  6321  001906  C002  F0C3         	movff	?___flneg+1,roundf@x+1
  6322  00190A  C003  F0C4         	movff	?___flneg+2,roundf@x+2
  6323  00190E  C004  F0C5         	movff	?___flneg+3,roundf@x+3
  6324  001912                     l3028:
  6325  001912  FFFF               	dw	65535	; assembler added errata NOP
  6326  001914  0100               	movlb	0	; () banked
  6327  001916  BFCF               	btfsc	(roundf@e+1)& (0+255),7,b
  6328  001918  EF9A  F00C         	goto	u3060
  6329  00191C  51CF               	movf	(roundf@e+1)& (0+255),w,b
  6330  00191E  E107               	bnz	u3061
  6331  001920  0E7E               	movlw	126
  6332  001922  5DCE               	subwf	roundf@e& (0+255),w,b
  6333  001924  B0D8               	btfsc	status,0,c
  6334  001926  EF97  F00C         	goto	u3061
  6335  00192A  EF9A  F00C         	goto	u3060
  6336  00192E                     u3061:
  6337  00192E  FFFF               	dw	65535	; assembler added errata NOP
  6338  001930  EFB7  F00C         	goto	l3034
  6339  001934                     u3060:
  6340  001934  FFFF               	dw	65535	; assembler added errata NOP
  6341  001936                     
  6342                           ; BSR set to: 0
  6343  001936  C0D4  F01B         	movff	roundf@u,___flmul@b
  6344  00193A  C0D5  F01C         	movff	roundf@u+1,___flmul@b+1
  6345  00193E  C0D6  F01D         	movff	roundf@u+2,___flmul@b+2
  6346  001942  C0D7  F01E         	movff	roundf@u+3,___flmul@b+3
  6347  001946  0E00               	movlw	0
  6348  001948  6E1F               	movwf	___flmul@a^0,c
  6349  00194A  0E00               	movlw	0
  6350  00194C  6E20               	movwf	(___flmul@a+1)^0,c
  6351  00194E  0E00               	movlw	0
  6352  001950  6E21               	movwf	(___flmul@a+2)^0,c
  6353  001952  0E00               	movlw	0
  6354  001954  6E22               	movwf	(___flmul@a+3)^0,c
  6355  001956  ECA5  F007         	call	___flmul	;wreg free
  6356  00195A  C01B  F0C2         	movff	?___flmul,?_roundf
  6357  00195E  C01C  F0C3         	movff	?___flmul+1,?_roundf+1
  6358  001962  C01D  F0C4         	movff	?___flmul+2,?_roundf+2
  6359  001966  C01E  F0C5         	movff	?___flmul+3,?_roundf+3
  6360  00196A  EF03  F00E         	goto	l1131
  6361  00196E                     l3034:
  6362  00196E  FFFF               	dw	65535	; assembler added errata NOP
  6363                           
  6364                           ; BSR set to: 0
  6365  001970  0E00               	movlw	0
  6366  001972  6E51               	movwf	___fladd@a^0,c
  6367  001974  0E00               	movlw	0
  6368  001976  6E52               	movwf	(___fladd@a+1)^0,c
  6369  001978  0E00               	movlw	0
  6370  00197A  6E53               	movwf	(___fladd@a+2)^0,c
  6371  00197C  0E4B               	movlw	75
  6372  00197E  6E54               	movwf	(___fladd@a+3)^0,c
  6373  001980  C0C2  F04D         	movff	roundf@x,___fladd@b
  6374  001984  C0C3  F04E         	movff	roundf@x+1,___fladd@b+1
  6375  001988  C0C4  F04F         	movff	roundf@x+2,___fladd@b+2
  6376  00198C  C0C5  F050         	movff	roundf@x+3,___fladd@b+3
  6377  001990  ECD1  F004         	call	___fladd	;wreg free
  6378  001994  C04D  F0D0         	movff	?___fladd,_roundf$1738
  6379  001998  C04E  F0D1         	movff	?___fladd+1,_roundf$1738+1
  6380  00199C  C04F  F0D2         	movff	?___fladd+2,_roundf$1738+2
  6381  0019A0  C050  F0D3         	movff	?___fladd+3,_roundf$1738+3
  6382  0019A4  0E00               	movlw	0
  6383  0019A6  6E51               	movwf	___fladd@a^0,c
  6384  0019A8  0E00               	movlw	0
  6385  0019AA  6E52               	movwf	(___fladd@a+1)^0,c
  6386  0019AC  0E00               	movlw	0
  6387  0019AE  6E53               	movwf	(___fladd@a+2)^0,c
  6388  0019B0  0ECB               	movlw	203
  6389  0019B2  6E54               	movwf	(___fladd@a+3)^0,c
  6390  0019B4  C0D0  F04D         	movff	_roundf$1738,___fladd@b
  6391  0019B8  C0D1  F04E         	movff	_roundf$1738+1,___fladd@b+1
  6392  0019BC  C0D2  F04F         	movff	_roundf$1738+2,___fladd@b+2
  6393  0019C0  C0D3  F050         	movff	_roundf$1738+3,___fladd@b+3
  6394  0019C4  ECD1  F004         	call	___fladd	;wreg free
  6395  0019C8  C04D  F0CA         	movff	?___fladd,_roundf$1739
  6396  0019CC  C04E  F0CB         	movff	?___fladd+1,_roundf$1739+1
  6397  0019D0  C04F  F0CC         	movff	?___fladd+2,_roundf$1739+2
  6398  0019D4  C050  F0CD         	movff	?___fladd+3,_roundf$1739+3
  6399  0019D8  C0CA  F05D         	movff	_roundf$1739,___flsub@b
  6400  0019DC  C0CB  F05E         	movff	_roundf$1739+1,___flsub@b+1
  6401  0019E0  C0CC  F05F         	movff	_roundf$1739+2,___flsub@b+2
  6402  0019E4  C0CD  F060         	movff	_roundf$1739+3,___flsub@b+3
  6403  0019E8  C0C2  F061         	movff	roundf@x,___flsub@a
  6404  0019EC  C0C3  F062         	movff	roundf@x+1,___flsub@a+1
  6405  0019F0  C0C4  F063         	movff	roundf@x+2,___flsub@a+2
  6406  0019F4  C0C5  F064         	movff	roundf@x+3,___flsub@a+3
  6407  0019F8  EC5E  F015         	call	___flsub	;wreg free
  6408  0019FC  C05D  F0D8         	movff	?___flsub,roundf@y
  6409  001A00  C05E  F0D9         	movff	?___flsub+1,roundf@y+1
  6410  001A04  C05F  F0DA         	movff	?___flsub+2,roundf@y+2
  6411  001A08  C060  F0DB         	movff	?___flsub+3,roundf@y+3
  6412  001A0C  0E00               	movlw	0
  6413  001A0E  6E71               	movwf	___flge@ff1^0,c
  6414  001A10  0E00               	movlw	0
  6415  001A12  6E72               	movwf	(___flge@ff1+1)^0,c
  6416  001A14  0E00               	movlw	0
  6417  001A16  6E73               	movwf	(___flge@ff1+2)^0,c
  6418  001A18  0E3F               	movlw	63
  6419  001A1A  6E74               	movwf	(___flge@ff1+3)^0,c
  6420  001A1C  C0D8  F075         	movff	roundf@y,___flge@ff2
  6421  001A20  C0D9  F076         	movff	roundf@y+1,___flge@ff2+1
  6422  001A24  C0DA  F077         	movff	roundf@y+2,___flge@ff2+2
  6423  001A28  C0DB  F078         	movff	roundf@y+3,___flge@ff2+3
  6424  001A2C  EC54  F010         	call	___flge	;wreg free
  6425  001A30  B0D8               	btfsc	status,0,c
  6426  001A32  EF1D  F00D         	goto	u3071
  6427  001A36  EF20  F00D         	goto	u3070
  6428  001A3A                     u3071:
  6429  001A3A  FFFF               	dw	65535	; assembler added errata NOP
  6430  001A3C  EF57  F00D         	goto	l3038
  6431  001A40                     u3070:
  6432  001A40  FFFF               	dw	65535	; assembler added errata NOP
  6433  001A42  C0C2  F051         	movff	roundf@x,___fladd@a
  6434  001A46  C0C3  F052         	movff	roundf@x+1,___fladd@a+1
  6435  001A4A  C0C4  F053         	movff	roundf@x+2,___fladd@a+2
  6436  001A4E  C0C5  F054         	movff	roundf@x+3,___fladd@a+3
  6437  001A52  C0D8  F04D         	movff	roundf@y,___fladd@b
  6438  001A56  C0D9  F04E         	movff	roundf@y+1,___fladd@b+1
  6439  001A5A  C0DA  F04F         	movff	roundf@y+2,___fladd@b+2
  6440  001A5E  C0DB  F050         	movff	roundf@y+3,___fladd@b+3
  6441  001A62  ECD1  F004         	call	___fladd	;wreg free
  6442  001A66  C04D  F0D0         	movff	?___fladd,_roundf$1738
  6443  001A6A  C04E  F0D1         	movff	?___fladd+1,_roundf$1738+1
  6444  001A6E  C04F  F0D2         	movff	?___fladd+2,_roundf$1738+2
  6445  001A72  C050  F0D3         	movff	?___fladd+3,_roundf$1738+3
  6446  001A76  C0D0  F04D         	movff	_roundf$1738,___fladd@b
  6447  001A7A  C0D1  F04E         	movff	_roundf$1738+1,___fladd@b+1
  6448  001A7E  C0D2  F04F         	movff	_roundf$1738+2,___fladd@b+2
  6449  001A82  C0D3  F050         	movff	_roundf$1738+3,___fladd@b+3
  6450  001A86  0E00               	movlw	0
  6451  001A88  6E51               	movwf	___fladd@a^0,c
  6452  001A8A  0E00               	movlw	0
  6453  001A8C  6E52               	movwf	(___fladd@a+1)^0,c
  6454  001A8E  0E80               	movlw	128
  6455  001A90  6E53               	movwf	(___fladd@a+2)^0,c
  6456  001A92  0EBF               	movlw	191
  6457  001A94  6E54               	movwf	(___fladd@a+3)^0,c
  6458  001A96  ECD1  F004         	call	___fladd	;wreg free
  6459  001A9A  C04D  F0D8         	movff	?___fladd,roundf@y
  6460  001A9E  C04E  F0D9         	movff	?___fladd+1,roundf@y+1
  6461  001AA2  C04F  F0DA         	movff	?___fladd+2,roundf@y+2
  6462  001AA6  C050  F0DB         	movff	?___fladd+3,roundf@y+3
  6463  001AAA  EFC4  F00D         	goto	l3044
  6464  001AAE                     l3038:
  6465  001AAE  FFFF               	dw	65535	; assembler added errata NOP
  6466  001AB0  0E00               	movlw	0
  6467  001AB2  6E71               	movwf	___flge@ff1^0,c
  6468  001AB4  0E00               	movlw	0
  6469  001AB6  6E72               	movwf	(___flge@ff1+1)^0,c
  6470  001AB8  0E00               	movlw	0
  6471  001ABA  6E73               	movwf	(___flge@ff1+2)^0,c
  6472  001ABC  0EBF               	movlw	191
  6473  001ABE  6E74               	movwf	(___flge@ff1+3)^0,c
  6474  001AC0  C0D8  F075         	movff	roundf@y,___flge@ff2
  6475  001AC4  C0D9  F076         	movff	roundf@y+1,___flge@ff2+1
  6476  001AC8  C0DA  F077         	movff	roundf@y+2,___flge@ff2+2
  6477  001ACC  C0DB  F078         	movff	roundf@y+3,___flge@ff2+3
  6478  001AD0  EC54  F010         	call	___flge	;wreg free
  6479  001AD4  A0D8               	btfss	status,0,c
  6480  001AD6  EF6F  F00D         	goto	u3081
  6481  001ADA  EF72  F00D         	goto	u3080
  6482  001ADE                     u3081:
  6483  001ADE  FFFF               	dw	65535	; assembler added errata NOP
  6484  001AE0  EFA9  F00D         	goto	l3042
  6485  001AE4                     u3080:
  6486  001AE4  FFFF               	dw	65535	; assembler added errata NOP
  6487  001AE6  C0C2  F051         	movff	roundf@x,___fladd@a
  6488  001AEA  C0C3  F052         	movff	roundf@x+1,___fladd@a+1
  6489  001AEE  C0C4  F053         	movff	roundf@x+2,___fladd@a+2
  6490  001AF2  C0C5  F054         	movff	roundf@x+3,___fladd@a+3
  6491  001AF6  C0D8  F04D         	movff	roundf@y,___fladd@b
  6492  001AFA  C0D9  F04E         	movff	roundf@y+1,___fladd@b+1
  6493  001AFE  C0DA  F04F         	movff	roundf@y+2,___fladd@b+2
  6494  001B02  C0DB  F050         	movff	roundf@y+3,___fladd@b+3
  6495  001B06  ECD1  F004         	call	___fladd	;wreg free
  6496  001B0A  C04D  F0D0         	movff	?___fladd,_roundf$1738
  6497  001B0E  C04E  F0D1         	movff	?___fladd+1,_roundf$1738+1
  6498  001B12  C04F  F0D2         	movff	?___fladd+2,_roundf$1738+2
  6499  001B16  C050  F0D3         	movff	?___fladd+3,_roundf$1738+3
  6500  001B1A  C0D0  F04D         	movff	_roundf$1738,___fladd@b
  6501  001B1E  C0D1  F04E         	movff	_roundf$1738+1,___fladd@b+1
  6502  001B22  C0D2  F04F         	movff	_roundf$1738+2,___fladd@b+2
  6503  001B26  C0D3  F050         	movff	_roundf$1738+3,___fladd@b+3
  6504  001B2A  0E00               	movlw	0
  6505  001B2C  6E51               	movwf	___fladd@a^0,c
  6506  001B2E  0E00               	movlw	0
  6507  001B30  6E52               	movwf	(___fladd@a+1)^0,c
  6508  001B32  0E80               	movlw	128
  6509  001B34  6E53               	movwf	(___fladd@a+2)^0,c
  6510  001B36  0E3F               	movlw	63
  6511  001B38  6E54               	movwf	(___fladd@a+3)^0,c
  6512  001B3A  ECD1  F004         	call	___fladd	;wreg free
  6513  001B3E  C04D  F0D8         	movff	?___fladd,roundf@y
  6514  001B42  C04E  F0D9         	movff	?___fladd+1,roundf@y+1
  6515  001B46  C04F  F0DA         	movff	?___fladd+2,roundf@y+2
  6516  001B4A  C050  F0DB         	movff	?___fladd+3,roundf@y+3
  6517  001B4E  EFC4  F00D         	goto	l3044
  6518  001B52                     l3042:
  6519  001B52  FFFF               	dw	65535	; assembler added errata NOP
  6520  001B54  C0D8  F04D         	movff	roundf@y,___fladd@b
  6521  001B58  C0D9  F04E         	movff	roundf@y+1,___fladd@b+1
  6522  001B5C  C0DA  F04F         	movff	roundf@y+2,___fladd@b+2
  6523  001B60  C0DB  F050         	movff	roundf@y+3,___fladd@b+3
  6524  001B64  C0C2  F051         	movff	roundf@x,___fladd@a
  6525  001B68  C0C3  F052         	movff	roundf@x+1,___fladd@a+1
  6526  001B6C  C0C4  F053         	movff	roundf@x+2,___fladd@a+2
  6527  001B70  C0C5  F054         	movff	roundf@x+3,___fladd@a+3
  6528  001B74  ECD1  F004         	call	___fladd	;wreg free
  6529  001B78  C04D  F0D8         	movff	?___fladd,roundf@y
  6530  001B7C  C04E  F0D9         	movff	?___fladd+1,roundf@y+1
  6531  001B80  C04F  F0DA         	movff	?___fladd+2,roundf@y+2
  6532  001B84  C050  F0DB         	movff	?___fladd+3,roundf@y+3
  6533  001B88                     l3044:
  6534  001B88  FFFF               	dw	65535	; assembler added errata NOP
  6535  001B8A  C0D4  F0C6         	movff	roundf@u,??_roundf
  6536  001B8E  C0D5  F0C7         	movff	roundf@u+1,??_roundf+1
  6537  001B92  C0D6  F0C8         	movff	roundf@u+2,??_roundf+2
  6538  001B96  C0D7  F0C9         	movff	roundf@u+3,??_roundf+3
  6539  001B9A  0E20               	movlw	32
  6540  001B9C  EFD7  F00D         	goto	u3090
  6541  001BA0                     u3095:
  6542  001BA0  FFFF               	dw	65535	; assembler added errata NOP
  6543  001BA2  0100               	movlb	0	; () banked
  6544  001BA4  90D8               	bcf	status,0,c
  6545  001BA6  33C9               	rrcf	(??_roundf+3)& (0+255),f,b
  6546  001BA8  33C8               	rrcf	(??_roundf+2)& (0+255),f,b
  6547  001BAA  33C7               	rrcf	(??_roundf+1)& (0+255),f,b
  6548  001BAC  33C6               	rrcf	??_roundf& (0+255),f,b
  6549  001BAE                     u3090:
  6550  001BAE  FFFF               	dw	65535	; assembler added errata NOP
  6551  001BB0  2EE8               	decfsz	wreg,f,c
  6552  001BB2  EFD0  F00D         	goto	u3095
  6553  001BB6  51C6               	movf	??_roundf& (0+255),w,b
  6554  001BB8  11C7               	iorwf	(??_roundf+1)& (0+255),w,b
  6555  001BBA  11C8               	iorwf	(??_roundf+2)& (0+255),w,b
  6556  001BBC  11C9               	iorwf	(??_roundf+3)& (0+255),w,b
  6557  001BBE  B4D8               	btfsc	status,2,c
  6558  001BC0  EFE4  F00D         	goto	u3101
  6559  001BC4  EFE7  F00D         	goto	u3100
  6560  001BC8                     u3101:
  6561  001BC8  FFFF               	dw	65535	; assembler added errata NOP
  6562  001BCA  EFFA  F00D         	goto	l3048
  6563  001BCE                     u3100:
  6564  001BCE  FFFF               	dw	65535	; assembler added errata NOP
  6565  001BD0                     
  6566                           ; BSR set to: 0
  6567  001BD0  C0D8  F001         	movff	roundf@y,___flneg@f1
  6568  001BD4  C0D9  F002         	movff	roundf@y+1,___flneg@f1+1
  6569  001BD8  C0DA  F003         	movff	roundf@y+2,___flneg@f1+2
  6570  001BDC  C0DB  F004         	movff	roundf@y+3,___flneg@f1+3
  6571  001BE0  ECC7  F015         	call	___flneg	;wreg free
  6572  001BE4  C001  F0D8         	movff	?___flneg,roundf@y
  6573  001BE8  C002  F0D9         	movff	?___flneg+1,roundf@y+1
  6574  001BEC  C003  F0DA         	movff	?___flneg+2,roundf@y+2
  6575  001BF0  C004  F0DB         	movff	?___flneg+3,roundf@y+3
  6576  001BF4                     l3048:
  6577  001BF4  FFFF               	dw	65535	; assembler added errata NOP
  6578  001BF6  C0D8  F0C2         	movff	roundf@y,?_roundf
  6579  001BFA  C0D9  F0C3         	movff	roundf@y+1,?_roundf+1
  6580  001BFE  C0DA  F0C4         	movff	roundf@y+2,?_roundf+2
  6581  001C02  C0DB  F0C5         	movff	roundf@y+3,?_roundf+3
  6582  001C06                     l1131:
  6583  001C06  FFFF               	dw	65535	; assembler added errata NOP
  6584  001C08  0012               	return		;funcret
  6585  001C0A  FFFF               	dw	65535	; errata NOP
  6586  001C0C                     __end_of_roundf:
  6587                           	callstack 0
  6588                           
  6589 ;; *************** function ___flsub *****************
  6590 ;; Defined at:
  6591 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  6592 ;; Parameters:    Size  Location     Type
  6593 ;;  b               4   92[COMRAM] float 
  6594 ;;  a               4   96[COMRAM] float 
  6595 ;; Auto vars:     Size  Location     Type
  6596 ;;		None
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  4   92[COMRAM] float 
  6599 ;; Registers used:
  6600 ;;		wreg, status,2, status,0, cstack
  6601 ;; Tracked objects:
  6602 ;;		On entry : 0/0
  6603 ;;		On exit  : 0/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6606 ;;      Params:         8       0       0       0       0       0       0
  6607 ;;      Locals:         0       0       0       0       0       0       0
  6608 ;;      Temps:          0       0       0       0       0       0       0
  6609 ;;      Totals:         8       0       0       0       0       0       0
  6610 ;;Total ram usage:        8 bytes
  6611 ;; Hardware stack levels used:    1
  6612 ;; Hardware stack levels required when called:    2
  6613 ;; This function calls:
  6614 ;;		___fladd
  6615 ;; This function is called by:
  6616 ;;		_roundf
  6617 ;; This function uses a non-reentrant model
  6618 ;;
  6619                           
  6620                           	psect	text25
  6621  002ABC                     __ptext25:
  6622                           	callstack 0
  6623  002ABC                     ___flsub:
  6624                           	callstack 0
  6625  002ABC  FFFF               	dw	65535	; assembler added errata NOP
  6626  002ABE  0E00               	movlw	0
  6627  002AC0  1A61               	xorwf	___flsub@a^0,f,c
  6628  002AC2  0E00               	movlw	0
  6629  002AC4  1A62               	xorwf	(___flsub@a+1)^0,f,c
  6630  002AC6  0E00               	movlw	0
  6631  002AC8  1A63               	xorwf	(___flsub@a+2)^0,f,c
  6632  002ACA  0E80               	movlw	128
  6633  002ACC  1A64               	xorwf	(___flsub@a+3)^0,f,c
  6634  002ACE  C05D  F04D         	movff	___flsub@b,___fladd@b
  6635  002AD2  C05E  F04E         	movff	___flsub@b+1,___fladd@b+1
  6636  002AD6  C05F  F04F         	movff	___flsub@b+2,___fladd@b+2
  6637  002ADA  C060  F050         	movff	___flsub@b+3,___fladd@b+3
  6638  002ADE  C061  F051         	movff	___flsub@a,___fladd@a
  6639  002AE2  C062  F052         	movff	___flsub@a+1,___fladd@a+1
  6640  002AE6  C063  F053         	movff	___flsub@a+2,___fladd@a+2
  6641  002AEA  C064  F054         	movff	___flsub@a+3,___fladd@a+3
  6642  002AEE  ECD1  F004         	call	___fladd	;wreg free
  6643  002AF2  C04D  F05D         	movff	?___fladd,?___flsub
  6644  002AF6  C04E  F05E         	movff	?___fladd+1,?___flsub+1
  6645  002AFA  C04F  F05F         	movff	?___fladd+2,?___flsub+2
  6646  002AFE  C050  F060         	movff	?___fladd+3,?___flsub+3
  6647  002B02  0012               	return		;funcret
  6648  002B04  FFFF               	dw	65535	; errata NOP
  6649  002B06                     __end_of___flsub:
  6650                           	callstack 0
  6651                           
  6652 ;; *************** function ___fladd *****************
  6653 ;; Defined at:
  6654 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  6655 ;; Parameters:    Size  Location     Type
  6656 ;;  b               4   76[COMRAM] float 
  6657 ;;  a               4   80[COMRAM] float 
  6658 ;; Auto vars:     Size  Location     Type
  6659 ;;  grs             1   91[COMRAM] unsigned char 
  6660 ;;  bexp            1   90[COMRAM] unsigned char 
  6661 ;;  aexp            1   89[COMRAM] unsigned char 
  6662 ;;  signs           1   88[COMRAM] unsigned char 
  6663 ;; Return value:  Size  Location     Type
  6664 ;;                  4   76[COMRAM] unsigned char 
  6665 ;; Registers used:
  6666 ;;		wreg, status,2, status,0
  6667 ;; Tracked objects:
  6668 ;;		On entry : 0/0
  6669 ;;		On exit  : 0/0
  6670 ;;		Unchanged: 0/0
  6671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6672 ;;      Params:         8       0       0       0       0       0       0
  6673 ;;      Locals:         4       0       0       0       0       0       0
  6674 ;;      Temps:          4       0       0       0       0       0       0
  6675 ;;      Totals:        16       0       0       0       0       0       0
  6676 ;;Total ram usage:       16 bytes
  6677 ;; Hardware stack levels used:    1
  6678 ;; Hardware stack levels required when called:    1
  6679 ;; This function calls:
  6680 ;;		Nothing
  6681 ;; This function is called by:
  6682 ;;		_init_timer_2
  6683 ;;		___flsub
  6684 ;;		_roundf
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           	psect	text26
  6689  0009A2                     __ptext26:
  6690                           	callstack 0
  6691  0009A2                     ___fladd:
  6692                           	callstack 0
  6693  0009A2  FFFF               	dw	65535	; assembler added errata NOP
  6694  0009A4  5050               	movf	(___fladd@b+3)^0,w,c
  6695  0009A6  0B80               	andlw	128
  6696  0009A8  6E59               	movwf	___fladd@signs^0,c
  6697  0009AA  5050               	movf	(___fladd@b+3)^0,w,c
  6698  0009AC  2450               	addwf	(___fladd@b+3)^0,w,c
  6699  0009AE  6E5B               	movwf	___fladd@bexp^0,c
  6700  0009B0  AE4F               	btfss	(___fladd@b+2)^0,7,c
  6701  0009B2  EFDD  F004         	goto	u1981
  6702  0009B6  EFE0  F004         	goto	u1980
  6703  0009BA                     u1981:
  6704  0009BA  FFFF               	dw	65535	; assembler added errata NOP
  6705  0009BC  EFE2  F004         	goto	l2414
  6706  0009C0                     u1980:
  6707  0009C0  FFFF               	dw	65535	; assembler added errata NOP
  6708  0009C2  805B               	bsf	___fladd@bexp^0,0,c
  6709  0009C4                     l2414:
  6710  0009C4  FFFF               	dw	65535	; assembler added errata NOP
  6711  0009C6  505B               	movf	___fladd@bexp^0,w,c
  6712  0009C8  B4D8               	btfsc	status,2,c
  6713  0009CA  EFE9  F004         	goto	u1991
  6714  0009CE  EFEC  F004         	goto	u1990
  6715  0009D2                     u1991:
  6716  0009D2  FFFF               	dw	65535	; assembler added errata NOP
  6717  0009D4  EF05  F005         	goto	l2424
  6718  0009D8                     u1990:
  6719  0009D8  FFFF               	dw	65535	; assembler added errata NOP
  6720  0009DA  285B               	incf	___fladd@bexp^0,w,c
  6721  0009DC  A4D8               	btfss	status,2,c
  6722  0009DE  EFF3  F004         	goto	u2001
  6723  0009E2  EFF6  F004         	goto	u2000
  6724  0009E6                     u2001:
  6725  0009E6  FFFF               	dw	65535	; assembler added errata NOP
  6726  0009E8  EFFF  F004         	goto	l2420
  6727  0009EC                     u2000:
  6728  0009EC  FFFF               	dw	65535	; assembler added errata NOP
  6729  0009EE  0E00               	movlw	0
  6730  0009F0  6E4D               	movwf	___fladd@b^0,c
  6731  0009F2  0E00               	movlw	0
  6732  0009F4  6E4E               	movwf	(___fladd@b+1)^0,c
  6733  0009F6  0E00               	movlw	0
  6734  0009F8  6E4F               	movwf	(___fladd@b+2)^0,c
  6735  0009FA  0E00               	movlw	0
  6736  0009FC  6E50               	movwf	(___fladd@b+3)^0,c
  6737  0009FE                     l2420:
  6738  0009FE  FFFF               	dw	65535	; assembler added errata NOP
  6739  000A00  8E4F               	bsf	(___fladd@b+2)^0,7,c
  6740  000A02  0E00               	movlw	0
  6741  000A04  6E50               	movwf	(___fladd@b+3)^0,c
  6742  000A06  EF0E  F005         	goto	l2426
  6743  000A0A                     l2424:
  6744  000A0A  FFFF               	dw	65535	; assembler added errata NOP
  6745  000A0C  0E00               	movlw	0
  6746  000A0E  6E4D               	movwf	___fladd@b^0,c
  6747  000A10  0E00               	movlw	0
  6748  000A12  6E4E               	movwf	(___fladd@b+1)^0,c
  6749  000A14  0E00               	movlw	0
  6750  000A16  6E4F               	movwf	(___fladd@b+2)^0,c
  6751  000A18  0E00               	movlw	0
  6752  000A1A  6E50               	movwf	(___fladd@b+3)^0,c
  6753  000A1C                     l2426:
  6754  000A1C  FFFF               	dw	65535	; assembler added errata NOP
  6755  000A1E  5054               	movf	(___fladd@a+3)^0,w,c
  6756  000A20  0B80               	andlw	128
  6757  000A22  6E5A               	movwf	___fladd@aexp^0,c
  6758  000A24  5059               	movf	___fladd@signs^0,w,c
  6759  000A26  185A               	xorwf	___fladd@aexp^0,w,c
  6760  000A28  B4D8               	btfsc	status,2,c
  6761  000A2A  EF19  F005         	goto	u2011
  6762  000A2E  EF1C  F005         	goto	u2010
  6763  000A32                     u2011:
  6764  000A32  FFFF               	dw	65535	; assembler added errata NOP
  6765  000A34  EF1E  F005         	goto	l2432
  6766  000A38                     u2010:
  6767  000A38  FFFF               	dw	65535	; assembler added errata NOP
  6768  000A3A  8C59               	bsf	___fladd@signs^0,6,c
  6769  000A3C                     l2432:
  6770  000A3C  FFFF               	dw	65535	; assembler added errata NOP
  6771  000A3E  5054               	movf	(___fladd@a+3)^0,w,c
  6772  000A40  2454               	addwf	(___fladd@a+3)^0,w,c
  6773  000A42  6E5A               	movwf	___fladd@aexp^0,c
  6774  000A44  AE53               	btfss	(___fladd@a+2)^0,7,c
  6775  000A46  EF27  F005         	goto	u2021
  6776  000A4A  EF2A  F005         	goto	u2020
  6777  000A4E                     u2021:
  6778  000A4E  FFFF               	dw	65535	; assembler added errata NOP
  6779  000A50  EF2C  F005         	goto	l2438
  6780  000A54                     u2020:
  6781  000A54  FFFF               	dw	65535	; assembler added errata NOP
  6782  000A56  805A               	bsf	___fladd@aexp^0,0,c
  6783  000A58                     l2438:
  6784  000A58  FFFF               	dw	65535	; assembler added errata NOP
  6785  000A5A  505A               	movf	___fladd@aexp^0,w,c
  6786  000A5C  B4D8               	btfsc	status,2,c
  6787  000A5E  EF33  F005         	goto	u2031
  6788  000A62  EF36  F005         	goto	u2030
  6789  000A66                     u2031:
  6790  000A66  FFFF               	dw	65535	; assembler added errata NOP
  6791  000A68  EF4F  F005         	goto	l2448
  6792  000A6C                     u2030:
  6793  000A6C  FFFF               	dw	65535	; assembler added errata NOP
  6794  000A6E  285A               	incf	___fladd@aexp^0,w,c
  6795  000A70  A4D8               	btfss	status,2,c
  6796  000A72  EF3D  F005         	goto	u2041
  6797  000A76  EF40  F005         	goto	u2040
  6798  000A7A                     u2041:
  6799  000A7A  FFFF               	dw	65535	; assembler added errata NOP
  6800  000A7C  EF49  F005         	goto	l2444
  6801  000A80                     u2040:
  6802  000A80  FFFF               	dw	65535	; assembler added errata NOP
  6803  000A82  0E00               	movlw	0
  6804  000A84  6E51               	movwf	___fladd@a^0,c
  6805  000A86  0E00               	movlw	0
  6806  000A88  6E52               	movwf	(___fladd@a+1)^0,c
  6807  000A8A  0E00               	movlw	0
  6808  000A8C  6E53               	movwf	(___fladd@a+2)^0,c
  6809  000A8E  0E00               	movlw	0
  6810  000A90  6E54               	movwf	(___fladd@a+3)^0,c
  6811  000A92                     l2444:
  6812  000A92  FFFF               	dw	65535	; assembler added errata NOP
  6813  000A94  8E53               	bsf	(___fladd@a+2)^0,7,c
  6814  000A96  0E00               	movlw	0
  6815  000A98  6E54               	movwf	(___fladd@a+3)^0,c
  6816  000A9A  EF58  F005         	goto	l2450
  6817  000A9E                     l2448:
  6818  000A9E  FFFF               	dw	65535	; assembler added errata NOP
  6819  000AA0  0E00               	movlw	0
  6820  000AA2  6E51               	movwf	___fladd@a^0,c
  6821  000AA4  0E00               	movlw	0
  6822  000AA6  6E52               	movwf	(___fladd@a+1)^0,c
  6823  000AA8  0E00               	movlw	0
  6824  000AAA  6E53               	movwf	(___fladd@a+2)^0,c
  6825  000AAC  0E00               	movlw	0
  6826  000AAE  6E54               	movwf	(___fladd@a+3)^0,c
  6827  000AB0                     l2450:
  6828  000AB0  FFFF               	dw	65535	; assembler added errata NOP
  6829  000AB2  505B               	movf	___fladd@bexp^0,w,c
  6830  000AB4  5C5A               	subwf	___fladd@aexp^0,w,c
  6831  000AB6  B0D8               	btfsc	status,0,c
  6832  000AB8  EF60  F005         	goto	u2051
  6833  000ABC  EF63  F005         	goto	u2050
  6834  000AC0                     u2051:
  6835  000AC0  FFFF               	dw	65535	; assembler added errata NOP
  6836  000AC2  EF8E  F005         	goto	l2486
  6837  000AC6                     u2050:
  6838  000AC6  FFFF               	dw	65535	; assembler added errata NOP
  6839  000AC8  AC59               	btfss	___fladd@signs^0,6,c
  6840  000ACA  EF69  F005         	goto	u2061
  6841  000ACE  EF6C  F005         	goto	u2060
  6842  000AD2                     u2061:
  6843  000AD2  FFFF               	dw	65535	; assembler added errata NOP
  6844  000AD4  EF6F  F005         	goto	l2456
  6845  000AD8                     u2060:
  6846  000AD8  FFFF               	dw	65535	; assembler added errata NOP
  6847  000ADA  0E80               	movlw	128
  6848  000ADC  1A59               	xorwf	___fladd@signs^0,f,c
  6849  000ADE                     l2456:
  6850  000ADE  FFFF               	dw	65535	; assembler added errata NOP
  6851  000AE0  C05B  F05C         	movff	___fladd@bexp,___fladd@grs
  6852  000AE4  C05A  F05B         	movff	___fladd@aexp,___fladd@bexp
  6853  000AE8  C05C  F05A         	movff	___fladd@grs,___fladd@aexp
  6854  000AEC  C04D  F05C         	movff	___fladd@b,___fladd@grs
  6855  000AF0  C051  F04D         	movff	___fladd@a,___fladd@b
  6856  000AF4  C05C  F051         	movff	___fladd@grs,___fladd@a
  6857  000AF8  C04E  F05C         	movff	___fladd@b+1,___fladd@grs
  6858  000AFC  C052  F04E         	movff	___fladd@a+1,___fladd@b+1
  6859  000B00  C05C  F052         	movff	___fladd@grs,___fladd@a+1
  6860  000B04  C04F  F05C         	movff	___fladd@b+2,___fladd@grs
  6861  000B08  C053  F04F         	movff	___fladd@a+2,___fladd@b+2
  6862  000B0C  C05C  F053         	movff	___fladd@grs,___fladd@a+2
  6863  000B10  C050  F05C         	movff	___fladd@b+3,___fladd@grs
  6864  000B14  C054  F050         	movff	___fladd@a+3,___fladd@b+3
  6865  000B18  C05C  F054         	movff	___fladd@grs,___fladd@a+3
  6866  000B1C                     l2486:
  6867  000B1C  FFFF               	dw	65535	; assembler added errata NOP
  6868  000B1E  0E00               	movlw	0
  6869  000B20  6E5C               	movwf	___fladd@grs^0,c
  6870  000B22  505B               	movf	___fladd@bexp^0,w,c
  6871  000B24  C05A  F055         	movff	___fladd@aexp,??___fladd
  6872  000B28  6A56               	clrf	(??___fladd+1)^0,c
  6873  000B2A  5E55               	subwf	??___fladd^0,f,c
  6874  000B2C  0E00               	movlw	0
  6875  000B2E  5A56               	subwfb	(??___fladd+1)^0,f,c
  6876  000B30  BE56               	btfsc	(??___fladd+1)^0,7,c
  6877  000B32  EFA4  F005         	goto	u2071
  6878  000B36  5056               	movf	(??___fladd+1)^0,w,c
  6879  000B38  E10A               	bnz	u2070
  6880  000B3A  0E1A               	movlw	26
  6881  000B3C  5C55               	subwf	??___fladd^0,w,c
  6882  000B3E  A0D8               	btfss	status,0,c
  6883  000B40  EFA4  F005         	goto	u2071
  6884  000B44  EFA7  F005         	goto	u2070
  6885  000B48                     u2071:
  6886  000B48  FFFF               	dw	65535	; assembler added errata NOP
  6887  000B4A  EFEA  F005         	goto	l974
  6888  000B4E                     u2070:
  6889  000B4E  FFFF               	dw	65535	; assembler added errata NOP
  6890  000B50  504D               	movf	___fladd@b^0,w,c
  6891  000B52  104E               	iorwf	(___fladd@b+1)^0,w,c
  6892  000B54  104F               	iorwf	(___fladd@b+2)^0,w,c
  6893  000B56  1050               	iorwf	(___fladd@b+3)^0,w,c
  6894  000B58  A4D8               	btfss	status,2,c
  6895  000B5A  EFB1  F005         	goto	u2081
  6896  000B5E  EFB5  F005         	goto	u2080
  6897  000B62                     u2081:
  6898  000B62  FFFF               	dw	65535	; assembler added errata NOP
  6899  000B64  0E01               	movlw	1
  6900  000B66  EFB7  F005         	goto	u2090
  6901  000B6A                     u2080:
  6902  000B6A  FFFF               	dw	65535	; assembler added errata NOP
  6903  000B6C  0E00               	movlw	0
  6904  000B6E                     u2090:
  6905  000B6E  FFFF               	dw	65535	; assembler added errata NOP
  6906  000B70  6E5C               	movwf	___fladd@grs^0,c
  6907  000B72  0E00               	movlw	0
  6908  000B74  6E4D               	movwf	___fladd@b^0,c
  6909  000B76  0E00               	movlw	0
  6910  000B78  6E4E               	movwf	(___fladd@b+1)^0,c
  6911  000B7A  0E00               	movlw	0
  6912  000B7C  6E4F               	movwf	(___fladd@b+2)^0,c
  6913  000B7E  0E00               	movlw	0
  6914  000B80  6E50               	movwf	(___fladd@b+3)^0,c
  6915  000B82  C05A  F05B         	movff	___fladd@aexp,___fladd@bexp
  6916  000B86  EFF5  F005         	goto	l973
  6917  000B8A                     l975:
  6918  000B8A  FFFF               	dw	65535	; assembler added errata NOP
  6919  000B8C  A05C               	btfss	___fladd@grs^0,0,c
  6920  000B8E  EFCB  F005         	goto	u2101
  6921  000B92  EFCE  F005         	goto	u2100
  6922  000B96                     u2101:
  6923  000B96  FFFF               	dw	65535	; assembler added errata NOP
  6924  000B98  EFD5  F005         	goto	l2498
  6925  000B9C                     u2100:
  6926  000B9C  FFFF               	dw	65535	; assembler added errata NOP
  6927  000B9E  90D8               	bcf	status,0,c
  6928  000BA0  305C               	rrcf	___fladd@grs^0,w,c
  6929  000BA2  0901               	iorlw	1
  6930  000BA4  6E5C               	movwf	___fladd@grs^0,c
  6931  000BA6  EFD8  F005         	goto	l2500
  6932  000BAA                     l2498:
  6933  000BAA  FFFF               	dw	65535	; assembler added errata NOP
  6934  000BAC  90D8               	bcf	status,0,c
  6935  000BAE  325C               	rrcf	___fladd@grs^0,f,c
  6936  000BB0                     l2500:
  6937  000BB0  FFFF               	dw	65535	; assembler added errata NOP
  6938  000BB2  A04D               	btfss	___fladd@b^0,0,c
  6939  000BB4  EFDE  F005         	goto	u2111
  6940  000BB8  EFE1  F005         	goto	u2110
  6941  000BBC                     u2111:
  6942  000BBC  FFFF               	dw	65535	; assembler added errata NOP
  6943  000BBE  EFE3  F005         	goto	l2504
  6944  000BC2                     u2110:
  6945  000BC2  FFFF               	dw	65535	; assembler added errata NOP
  6946  000BC4  8E5C               	bsf	___fladd@grs^0,7,c
  6947  000BC6                     l2504:
  6948  000BC6  FFFF               	dw	65535	; assembler added errata NOP
  6949  000BC8  3450               	rlcf	(___fladd@b+3)^0,w,c
  6950  000BCA  3250               	rrcf	(___fladd@b+3)^0,f,c
  6951  000BCC  324F               	rrcf	(___fladd@b+2)^0,f,c
  6952  000BCE  324E               	rrcf	(___fladd@b+1)^0,f,c
  6953  000BD0  324D               	rrcf	___fladd@b^0,f,c
  6954  000BD2  2A5B               	incf	___fladd@bexp^0,f,c
  6955  000BD4                     l974:
  6956  000BD4  FFFF               	dw	65535	; assembler added errata NOP
  6957  000BD6  505A               	movf	___fladd@aexp^0,w,c
  6958  000BD8  5C5B               	subwf	___fladd@bexp^0,w,c
  6959  000BDA  A0D8               	btfss	status,0,c
  6960  000BDC  EFF2  F005         	goto	u2121
  6961  000BE0  EFF5  F005         	goto	u2120
  6962  000BE4                     u2121:
  6963  000BE4  FFFF               	dw	65535	; assembler added errata NOP
  6964  000BE6  EFC5  F005         	goto	l975
  6965  000BEA                     u2120:
  6966  000BEA                     l973:
  6967  000BEA  FFFF               	dw	65535	; assembler added errata NOP
  6968  000BEC  BC59               	btfsc	___fladd@signs^0,6,c
  6969  000BEE  EFFB  F005         	goto	u2131
  6970  000BF2  EFFE  F005         	goto	u2130
  6971  000BF6                     u2131:
  6972  000BF6  FFFF               	dw	65535	; assembler added errata NOP
  6973  000BF8  EF4B  F006         	goto	l2532
  6974  000BFC                     u2130:
  6975  000BFC  FFFF               	dw	65535	; assembler added errata NOP
  6976  000BFE  505B               	movf	___fladd@bexp^0,w,c
  6977  000C00  A4D8               	btfss	status,2,c
  6978  000C02  EF05  F006         	goto	u2141
  6979  000C06  EF08  F006         	goto	u2140
  6980  000C0A                     u2141:
  6981  000C0A  FFFF               	dw	65535	; assembler added errata NOP
  6982  000C0C  EF13  F006         	goto	l2514
  6983  000C10                     u2140:
  6984  000C10  FFFF               	dw	65535	; assembler added errata NOP
  6985  000C12  0E00               	movlw	0
  6986  000C14  6E4D               	movwf	?___fladd^0,c
  6987  000C16  0E00               	movlw	0
  6988  000C18  6E4E               	movwf	(?___fladd+1)^0,c
  6989  000C1A  0E00               	movlw	0
  6990  000C1C  6E4F               	movwf	(?___fladd+2)^0,c
  6991  000C1E  0E00               	movlw	0
  6992  000C20  6E50               	movwf	(?___fladd+3)^0,c
  6993  000C22  EFA2  F007         	goto	l982
  6994  000C26                     l2514:
  6995  000C26  FFFF               	dw	65535	; assembler added errata NOP
  6996  000C28  5051               	movf	___fladd@a^0,w,c
  6997  000C2A  264D               	addwf	___fladd@b^0,f,c
  6998  000C2C  5052               	movf	(___fladd@a+1)^0,w,c
  6999  000C2E  224E               	addwfc	(___fladd@b+1)^0,f,c
  7000  000C30  5053               	movf	(___fladd@a+2)^0,w,c
  7001  000C32  224F               	addwfc	(___fladd@b+2)^0,f,c
  7002  000C34  5054               	movf	(___fladd@a+3)^0,w,c
  7003  000C36  2250               	addwfc	(___fladd@b+3)^0,f,c
  7004  000C38  A050               	btfss	(___fladd@b+3)^0,0,c
  7005  000C3A  EF21  F006         	goto	u2151
  7006  000C3E  EF24  F006         	goto	u2150
  7007  000C42                     u2151:
  7008  000C42  FFFF               	dw	65535	; assembler added errata NOP
  7009  000C44  EFEF  F006         	goto	l2568
  7010  000C48                     u2150:
  7011  000C48  FFFF               	dw	65535	; assembler added errata NOP
  7012  000C4A  A05C               	btfss	___fladd@grs^0,0,c
  7013  000C4C  EF2A  F006         	goto	u2161
  7014  000C50  EF2D  F006         	goto	u2160
  7015  000C54                     u2161:
  7016  000C54  FFFF               	dw	65535	; assembler added errata NOP
  7017  000C56  EF34  F006         	goto	l2522
  7018  000C5A                     u2160:
  7019  000C5A  FFFF               	dw	65535	; assembler added errata NOP
  7020  000C5C  90D8               	bcf	status,0,c
  7021  000C5E  305C               	rrcf	___fladd@grs^0,w,c
  7022  000C60  0901               	iorlw	1
  7023  000C62  6E5C               	movwf	___fladd@grs^0,c
  7024  000C64  EF37  F006         	goto	l2524
  7025  000C68                     l2522:
  7026  000C68  FFFF               	dw	65535	; assembler added errata NOP
  7027  000C6A  90D8               	bcf	status,0,c
  7028  000C6C  325C               	rrcf	___fladd@grs^0,f,c
  7029  000C6E                     l2524:
  7030  000C6E  FFFF               	dw	65535	; assembler added errata NOP
  7031  000C70  A04D               	btfss	___fladd@b^0,0,c
  7032  000C72  EF3D  F006         	goto	u2171
  7033  000C76  EF40  F006         	goto	u2170
  7034  000C7A                     u2171:
  7035  000C7A  FFFF               	dw	65535	; assembler added errata NOP
  7036  000C7C  EF42  F006         	goto	l2528
  7037  000C80                     u2170:
  7038  000C80  FFFF               	dw	65535	; assembler added errata NOP
  7039  000C82  8E5C               	bsf	___fladd@grs^0,7,c
  7040  000C84                     l2528:
  7041  000C84  FFFF               	dw	65535	; assembler added errata NOP
  7042  000C86  3450               	rlcf	(___fladd@b+3)^0,w,c
  7043  000C88  3250               	rrcf	(___fladd@b+3)^0,f,c
  7044  000C8A  324F               	rrcf	(___fladd@b+2)^0,f,c
  7045  000C8C  324E               	rrcf	(___fladd@b+1)^0,f,c
  7046  000C8E  324D               	rrcf	___fladd@b^0,f,c
  7047  000C90  2A5B               	incf	___fladd@bexp^0,f,c
  7048  000C92  EFEF  F006         	goto	l2568
  7049  000C96                     l2532:
  7050  000C96  FFFF               	dw	65535	; assembler added errata NOP
  7051  000C98  5051               	movf	___fladd@a^0,w,c
  7052  000C9A  5C4D               	subwf	___fladd@b^0,w,c
  7053  000C9C  5052               	movf	(___fladd@a+1)^0,w,c
  7054  000C9E  584E               	subwfb	(___fladd@b+1)^0,w,c
  7055  000CA0  5053               	movf	(___fladd@a+2)^0,w,c
  7056  000CA2  584F               	subwfb	(___fladd@b+2)^0,w,c
  7057  000CA4  5050               	movf	(___fladd@b+3)^0,w,c
  7058  000CA6  0A80               	xorlw	128
  7059  000CA8  6E55               	movwf	??___fladd^0,c
  7060  000CAA  5054               	movf	(___fladd@a+3)^0,w,c
  7061  000CAC  0A80               	xorlw	128
  7062  000CAE  5855               	subwfb	??___fladd^0,w,c
  7063  000CB0  B0D8               	btfsc	status,0,c
  7064  000CB2  EF5D  F006         	goto	u2181
  7065  000CB6  EF60  F006         	goto	u2180
  7066  000CBA                     u2181:
  7067  000CBA  FFFF               	dw	65535	; assembler added errata NOP
  7068  000CBC  EF8E  F006         	goto	l2542
  7069  000CC0                     u2180:
  7070  000CC0  FFFF               	dw	65535	; assembler added errata NOP
  7071  000CC2  504D               	movf	___fladd@b^0,w,c
  7072  000CC4  5C51               	subwf	___fladd@a^0,w,c
  7073  000CC6  6E55               	movwf	??___fladd^0,c
  7074  000CC8  504E               	movf	(___fladd@b+1)^0,w,c
  7075  000CCA  5852               	subwfb	(___fladd@a+1)^0,w,c
  7076  000CCC  6E56               	movwf	(??___fladd+1)^0,c
  7077  000CCE  504F               	movf	(___fladd@b+2)^0,w,c
  7078  000CD0  5853               	subwfb	(___fladd@a+2)^0,w,c
  7079  000CD2  6E57               	movwf	(??___fladd+2)^0,c
  7080  000CD4  5050               	movf	(___fladd@b+3)^0,w,c
  7081  000CD6  5854               	subwfb	(___fladd@a+3)^0,w,c
  7082  000CD8  6E58               	movwf	(??___fladd+3)^0,c
  7083  000CDA  0EFF               	movlw	255
  7084  000CDC  2455               	addwf	??___fladd^0,w,c
  7085  000CDE  6E4D               	movwf	___fladd@b^0,c
  7086  000CE0  0EFF               	movlw	255
  7087  000CE2  2056               	addwfc	(??___fladd+1)^0,w,c
  7088  000CE4  6E4E               	movwf	(___fladd@b+1)^0,c
  7089  000CE6  0EFF               	movlw	255
  7090  000CE8  2057               	addwfc	(??___fladd+2)^0,w,c
  7091  000CEA  6E4F               	movwf	(___fladd@b+2)^0,c
  7092  000CEC  0EFF               	movlw	255
  7093  000CEE  2058               	addwfc	(??___fladd+3)^0,w,c
  7094  000CF0  6E50               	movwf	(___fladd@b+3)^0,c
  7095  000CF2  0E80               	movlw	128
  7096  000CF4  1A59               	xorwf	___fladd@signs^0,f,c
  7097  000CF6  6C5C               	negf	___fladd@grs^0,c
  7098  000CF8  505C               	movf	___fladd@grs^0,w,c
  7099  000CFA  A4D8               	btfss	status,2,c
  7100  000CFC  EF82  F006         	goto	u2191
  7101  000D00  EF85  F006         	goto	u2190
  7102  000D04                     u2191:
  7103  000D04  FFFF               	dw	65535	; assembler added errata NOP
  7104  000D06  EF97  F006         	goto	l990
  7105  000D0A                     u2190:
  7106  000D0A  FFFF               	dw	65535	; assembler added errata NOP
  7107  000D0C  0E01               	movlw	1
  7108  000D0E  264D               	addwf	___fladd@b^0,f,c
  7109  000D10  0E00               	movlw	0
  7110  000D12  224E               	addwfc	(___fladd@b+1)^0,f,c
  7111  000D14  224F               	addwfc	(___fladd@b+2)^0,f,c
  7112  000D16  2250               	addwfc	(___fladd@b+3)^0,f,c
  7113  000D18  EF97  F006         	goto	l990
  7114  000D1C                     l2542:
  7115  000D1C  FFFF               	dw	65535	; assembler added errata NOP
  7116  000D1E  5051               	movf	___fladd@a^0,w,c
  7117  000D20  5E4D               	subwf	___fladd@b^0,f,c
  7118  000D22  5052               	movf	(___fladd@a+1)^0,w,c
  7119  000D24  5A4E               	subwfb	(___fladd@b+1)^0,f,c
  7120  000D26  5053               	movf	(___fladd@a+2)^0,w,c
  7121  000D28  5A4F               	subwfb	(___fladd@b+2)^0,f,c
  7122  000D2A  5054               	movf	(___fladd@a+3)^0,w,c
  7123  000D2C  5A50               	subwfb	(___fladd@b+3)^0,f,c
  7124  000D2E                     l990:
  7125  000D2E  FFFF               	dw	65535	; assembler added errata NOP
  7126  000D30  504D               	movf	___fladd@b^0,w,c
  7127  000D32  104E               	iorwf	(___fladd@b+1)^0,w,c
  7128  000D34  104F               	iorwf	(___fladd@b+2)^0,w,c
  7129  000D36  1050               	iorwf	(___fladd@b+3)^0,w,c
  7130  000D38  A4D8               	btfss	status,2,c
  7131  000D3A  EFA1  F006         	goto	u2201
  7132  000D3E  EFA4  F006         	goto	u2200
  7133  000D42                     u2201:
  7134  000D42  FFFF               	dw	65535	; assembler added errata NOP
  7135  000D44  EFE6  F006         	goto	l2566
  7136  000D48                     u2200:
  7137  000D48  FFFF               	dw	65535	; assembler added errata NOP
  7138  000D4A  505C               	movf	___fladd@grs^0,w,c
  7139  000D4C  A4D8               	btfss	status,2,c
  7140  000D4E  EFAB  F006         	goto	u2211
  7141  000D52  EFAE  F006         	goto	u2210
  7142  000D56                     u2211:
  7143  000D56  FFFF               	dw	65535	; assembler added errata NOP
  7144  000D58  EFE6  F006         	goto	l2566
  7145  000D5C                     u2210:
  7146  000D5C  FFFF               	dw	65535	; assembler added errata NOP
  7147  000D5E  0E00               	movlw	0
  7148  000D60  6E4D               	movwf	?___fladd^0,c
  7149  000D62  0E00               	movlw	0
  7150  000D64  6E4E               	movwf	(?___fladd+1)^0,c
  7151  000D66  0E00               	movlw	0
  7152  000D68  6E4F               	movwf	(?___fladd+2)^0,c
  7153  000D6A  0E00               	movlw	0
  7154  000D6C  6E50               	movwf	(?___fladd+3)^0,c
  7155  000D6E  EFA2  F007         	goto	l982
  7156  000D72                     l2550:
  7157  000D72  FFFF               	dw	65535	; assembler added errata NOP
  7158  000D74  90D8               	bcf	status,0,c
  7159  000D76  364D               	rlcf	___fladd@b^0,f,c
  7160  000D78  364E               	rlcf	(___fladd@b+1)^0,f,c
  7161  000D7A  364F               	rlcf	(___fladd@b+2)^0,f,c
  7162  000D7C  3650               	rlcf	(___fladd@b+3)^0,f,c
  7163  000D7E  AE5C               	btfss	___fladd@grs^0,7,c
  7164  000D80  EFC4  F006         	goto	u2221
  7165  000D84  EFC7  F006         	goto	u2220
  7166  000D88                     u2221:
  7167  000D88  FFFF               	dw	65535	; assembler added errata NOP
  7168  000D8A  EFC9  F006         	goto	l2556
  7169  000D8E                     u2220:
  7170  000D8E  FFFF               	dw	65535	; assembler added errata NOP
  7171  000D90  804D               	bsf	___fladd@b^0,0,c
  7172  000D92                     l2556:
  7173  000D92  FFFF               	dw	65535	; assembler added errata NOP
  7174  000D94  A05C               	btfss	___fladd@grs^0,0,c
  7175  000D96  EFCF  F006         	goto	u2231
  7176  000D9A  EFD2  F006         	goto	u2230
  7177  000D9E                     u2231:
  7178  000D9E  FFFF               	dw	65535	; assembler added errata NOP
  7179  000DA0  EFD7  F006         	goto	l2560
  7180  000DA4                     u2230:
  7181  000DA4  FFFF               	dw	65535	; assembler added errata NOP
  7182  000DA6  80D8               	bsf	status,0,c
  7183  000DA8  365C               	rlcf	___fladd@grs^0,f,c
  7184  000DAA  EFDA  F006         	goto	l2562
  7185  000DAE                     l2560:
  7186  000DAE  FFFF               	dw	65535	; assembler added errata NOP
  7187  000DB0  90D8               	bcf	status,0,c
  7188  000DB2  365C               	rlcf	___fladd@grs^0,f,c
  7189  000DB4                     l2562:
  7190  000DB4  FFFF               	dw	65535	; assembler added errata NOP
  7191  000DB6  505B               	movf	___fladd@bexp^0,w,c
  7192  000DB8  B4D8               	btfsc	status,2,c
  7193  000DBA  EFE1  F006         	goto	u2241
  7194  000DBE  EFE4  F006         	goto	u2240
  7195  000DC2                     u2241:
  7196  000DC2  FFFF               	dw	65535	; assembler added errata NOP
  7197  000DC4  EFE6  F006         	goto	l2566
  7198  000DC8                     u2240:
  7199  000DC8  FFFF               	dw	65535	; assembler added errata NOP
  7200  000DCA  065B               	decf	___fladd@bexp^0,f,c
  7201  000DCC                     l2566:
  7202  000DCC  FFFF               	dw	65535	; assembler added errata NOP
  7203  000DCE  AE4F               	btfss	(___fladd@b+2)^0,7,c
  7204  000DD0  EFEC  F006         	goto	u2251
  7205  000DD4  EFEF  F006         	goto	u2250
  7206  000DD8                     u2251:
  7207  000DD8  FFFF               	dw	65535	; assembler added errata NOP
  7208  000DDA  EFB9  F006         	goto	l2550
  7209  000DDE                     u2250:
  7210  000DDE                     l2568:
  7211  000DDE  FFFF               	dw	65535	; assembler added errata NOP
  7212  000DE0  0E00               	movlw	0
  7213  000DE2  6E5A               	movwf	___fladd@aexp^0,c
  7214  000DE4  AE5C               	btfss	___fladd@grs^0,7,c
  7215  000DE6  EFF7  F006         	goto	u2261
  7216  000DEA  EFFA  F006         	goto	u2260
  7217  000DEE                     u2261:
  7218  000DEE  FFFF               	dw	65535	; assembler added errata NOP
  7219  000DF0  EF19  F007         	goto	l999
  7220  000DF4                     u2260:
  7221  000DF4  FFFF               	dw	65535	; assembler added errata NOP
  7222  000DF6  C05C  F055         	movff	___fladd@grs,??___fladd
  7223  000DFA  0E7F               	movlw	127
  7224  000DFC  1655               	andwf	??___fladd^0,f,c
  7225  000DFE  B4D8               	btfsc	status,2,c
  7226  000E00  EF04  F007         	goto	u2271
  7227  000E04  EF07  F007         	goto	u2270
  7228  000E08                     u2271:
  7229  000E08  FFFF               	dw	65535	; assembler added errata NOP
  7230  000E0A  EF0D  F007         	goto	l1000
  7231  000E0E                     u2270:
  7232  000E0E  FFFF               	dw	65535	; assembler added errata NOP
  7233  000E10                     l2574:
  7234  000E10  FFFF               	dw	65535	; assembler added errata NOP
  7235  000E12  0E01               	movlw	1
  7236  000E14  6E5A               	movwf	___fladd@aexp^0,c
  7237  000E16  EF19  F007         	goto	l999
  7238  000E1A                     l1000:
  7239  000E1A  FFFF               	dw	65535	; assembler added errata NOP
  7240  000E1C  A04D               	btfss	___fladd@b^0,0,c
  7241  000E1E  EF13  F007         	goto	u2281
  7242  000E22  EF16  F007         	goto	u2280
  7243  000E26                     u2281:
  7244  000E26  FFFF               	dw	65535	; assembler added errata NOP
  7245  000E28  EF19  F007         	goto	l999
  7246  000E2C                     u2280:
  7247  000E2C  FFFF               	dw	65535	; assembler added errata NOP
  7248  000E2E  EF08  F007         	goto	l2574
  7249  000E32                     l999:
  7250  000E32  FFFF               	dw	65535	; assembler added errata NOP
  7251  000E34  505A               	movf	___fladd@aexp^0,w,c
  7252  000E36  B4D8               	btfsc	status,2,c
  7253  000E38  EF20  F007         	goto	u2291
  7254  000E3C  EF23  F007         	goto	u2290
  7255  000E40                     u2291:
  7256  000E40  FFFF               	dw	65535	; assembler added errata NOP
  7257  000E42  EF53  F007         	goto	l2586
  7258  000E46                     u2290:
  7259  000E46  FFFF               	dw	65535	; assembler added errata NOP
  7260  000E48  0E01               	movlw	1
  7261  000E4A  264D               	addwf	___fladd@b^0,f,c
  7262  000E4C  0E00               	movlw	0
  7263  000E4E  224E               	addwfc	(___fladd@b+1)^0,f,c
  7264  000E50  224F               	addwfc	(___fladd@b+2)^0,f,c
  7265  000E52  2250               	addwfc	(___fladd@b+3)^0,f,c
  7266  000E54  A050               	btfss	(___fladd@b+3)^0,0,c
  7267  000E56  EF2F  F007         	goto	u2301
  7268  000E5A  EF32  F007         	goto	u2300
  7269  000E5E                     u2301:
  7270  000E5E  FFFF               	dw	65535	; assembler added errata NOP
  7271  000E60  EF53  F007         	goto	l2586
  7272  000E64                     u2300:
  7273  000E64  FFFF               	dw	65535	; assembler added errata NOP
  7274  000E66  C04D  F055         	movff	___fladd@b,??___fladd
  7275  000E6A  C04E  F056         	movff	___fladd@b+1,??___fladd+1
  7276  000E6E  C04F  F057         	movff	___fladd@b+2,??___fladd+2
  7277  000E72  C050  F058         	movff	___fladd@b+3,??___fladd+3
  7278  000E76  3458               	rlcf	(??___fladd+3)^0,w,c
  7279  000E78  3258               	rrcf	(??___fladd+3)^0,f,c
  7280  000E7A  3257               	rrcf	(??___fladd+2)^0,f,c
  7281  000E7C  3256               	rrcf	(??___fladd+1)^0,f,c
  7282  000E7E  3255               	rrcf	??___fladd^0,f,c
  7283  000E80  C055  F04D         	movff	??___fladd,___fladd@b
  7284  000E84  C056  F04E         	movff	??___fladd+1,___fladd@b+1
  7285  000E88  C057  F04F         	movff	??___fladd+2,___fladd@b+2
  7286  000E8C  C058  F050         	movff	??___fladd+3,___fladd@b+3
  7287  000E90  285B               	incf	___fladd@bexp^0,w,c
  7288  000E92  B4D8               	btfsc	status,2,c
  7289  000E94  EF4E  F007         	goto	u2311
  7290  000E98  EF51  F007         	goto	u2310
  7291  000E9C                     u2311:
  7292  000E9C  FFFF               	dw	65535	; assembler added errata NOP
  7293  000E9E  EF53  F007         	goto	l2586
  7294  000EA2                     u2310:
  7295  000EA2  FFFF               	dw	65535	; assembler added errata NOP
  7296  000EA4  2A5B               	incf	___fladd@bexp^0,f,c
  7297  000EA6                     l2586:
  7298  000EA6  FFFF               	dw	65535	; assembler added errata NOP
  7299  000EA8  285B               	incf	___fladd@bexp^0,w,c
  7300  000EAA  B4D8               	btfsc	status,2,c
  7301  000EAC  EF5A  F007         	goto	u2321
  7302  000EB0  EF5D  F007         	goto	u2320
  7303  000EB4                     u2321:
  7304  000EB4  FFFF               	dw	65535	; assembler added errata NOP
  7305  000EB6  EF67  F007         	goto	l2590
  7306  000EBA                     u2320:
  7307  000EBA  FFFF               	dw	65535	; assembler added errata NOP
  7308  000EBC  505B               	movf	___fladd@bexp^0,w,c
  7309  000EBE  A4D8               	btfss	status,2,c
  7310  000EC0  EF64  F007         	goto	u2331
  7311  000EC4  EF67  F007         	goto	u2330
  7312  000EC8                     u2331:
  7313  000EC8  FFFF               	dw	65535	; assembler added errata NOP
  7314  000ECA  EF7C  F007         	goto	l2594
  7315  000ECE                     u2330:
  7316  000ECE                     l2590:
  7317  000ECE  FFFF               	dw	65535	; assembler added errata NOP
  7318  000ED0  0E00               	movlw	0
  7319  000ED2  6E4D               	movwf	___fladd@b^0,c
  7320  000ED4  0E00               	movlw	0
  7321  000ED6  6E4E               	movwf	(___fladd@b+1)^0,c
  7322  000ED8  0E00               	movlw	0
  7323  000EDA  6E4F               	movwf	(___fladd@b+2)^0,c
  7324  000EDC  0E00               	movlw	0
  7325  000EDE  6E50               	movwf	(___fladd@b+3)^0,c
  7326  000EE0  505B               	movf	___fladd@bexp^0,w,c
  7327  000EE2  A4D8               	btfss	status,2,c
  7328  000EE4  EF76  F007         	goto	u2341
  7329  000EE8  EF79  F007         	goto	u2340
  7330  000EEC                     u2341:
  7331  000EEC  FFFF               	dw	65535	; assembler added errata NOP
  7332  000EEE  EF7C  F007         	goto	l2594
  7333  000EF2                     u2340:
  7334  000EF2  FFFF               	dw	65535	; assembler added errata NOP
  7335  000EF4  0E00               	movlw	0
  7336  000EF6  6E59               	movwf	___fladd@signs^0,c
  7337  000EF8                     l2594:
  7338  000EF8  FFFF               	dw	65535	; assembler added errata NOP
  7339  000EFA  A05B               	btfss	___fladd@bexp^0,0,c
  7340  000EFC  EF82  F007         	goto	u2351
  7341  000F00  EF85  F007         	goto	u2350
  7342  000F04                     u2351:
  7343  000F04  FFFF               	dw	65535	; assembler added errata NOP
  7344  000F06  EF89  F007         	goto	l2598
  7345  000F0A                     u2350:
  7346  000F0A  FFFF               	dw	65535	; assembler added errata NOP
  7347  000F0C  8E4F               	bsf	(___fladd@b+2)^0,7,c
  7348  000F0E  EF8B  F007         	goto	l2600
  7349  000F12                     l2598:
  7350  000F12  FFFF               	dw	65535	; assembler added errata NOP
  7351  000F14  9E4F               	bcf	(___fladd@b+2)^0,7,c
  7352  000F16                     l2600:
  7353  000F16  FFFF               	dw	65535	; assembler added errata NOP
  7354  000F18  90D8               	bcf	status,0,c
  7355  000F1A  305B               	rrcf	___fladd@bexp^0,w,c
  7356  000F1C  6E50               	movwf	(___fladd@b+3)^0,c
  7357  000F1E  AE59               	btfss	___fladd@signs^0,7,c
  7358  000F20  EF94  F007         	goto	u2361
  7359  000F24  EF97  F007         	goto	u2360
  7360  000F28                     u2361:
  7361  000F28  FFFF               	dw	65535	; assembler added errata NOP
  7362  000F2A  EF99  F007         	goto	l2606
  7363  000F2E                     u2360:
  7364  000F2E  FFFF               	dw	65535	; assembler added errata NOP
  7365  000F30  8E50               	bsf	(___fladd@b+3)^0,7,c
  7366  000F32                     l2606:
  7367  000F32  FFFF               	dw	65535	; assembler added errata NOP
  7368  000F34  C04D  F04D         	movff	___fladd@b,?___fladd
  7369  000F38  C04E  F04E         	movff	___fladd@b+1,?___fladd+1
  7370  000F3C  C04F  F04F         	movff	___fladd@b+2,?___fladd+2
  7371  000F40  C050  F050         	movff	___fladd@b+3,?___fladd+3
  7372  000F44                     l982:
  7373  000F44  FFFF               	dw	65535	; assembler added errata NOP
  7374  000F46  0012               	return		;funcret
  7375  000F48  FFFF               	dw	65535	; errata NOP
  7376  000F4A                     __end_of___fladd:
  7377                           	callstack 0
  7378                           
  7379 ;; *************** function ___flneg *****************
  7380 ;; Defined at:
  7381 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
  7382 ;; Parameters:    Size  Location     Type
  7383 ;;  f1              4    0[COMRAM] unsigned char 
  7384 ;; Auto vars:     Size  Location     Type
  7385 ;;		None
  7386 ;; Return value:  Size  Location     Type
  7387 ;;                  4    0[COMRAM] unsigned char 
  7388 ;; Registers used:
  7389 ;;		wreg, status,2, status,0
  7390 ;; Tracked objects:
  7391 ;;		On entry : 0/0
  7392 ;;		On exit  : 0/0
  7393 ;;		Unchanged: 0/0
  7394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7395 ;;      Params:         4       0       0       0       0       0       0
  7396 ;;      Locals:         0       0       0       0       0       0       0
  7397 ;;      Temps:          0       0       0       0       0       0       0
  7398 ;;      Totals:         4       0       0       0       0       0       0
  7399 ;;Total ram usage:        4 bytes
  7400 ;; Hardware stack levels used:    1
  7401 ;; Hardware stack levels required when called:    1
  7402 ;; This function calls:
  7403 ;;		Nothing
  7404 ;; This function is called by:
  7405 ;;		_roundf
  7406 ;; This function uses a non-reentrant model
  7407 ;;
  7408                           
  7409                           	psect	text27
  7410  002B8E                     __ptext27:
  7411                           	callstack 0
  7412  002B8E                     ___flneg:
  7413                           	callstack 0
  7414  002B8E  FFFF               	dw	65535	; assembler added errata NOP
  7415  002B90  5001               	movf	___flneg@f1^0,w,c
  7416  002B92  1002               	iorwf	(___flneg@f1+1)^0,w,c
  7417  002B94  1003               	iorwf	(___flneg@f1+2)^0,w,c
  7418  002B96  1004               	iorwf	(___flneg@f1+3)^0,w,c
  7419  002B98  B4D8               	btfsc	status,2,c
  7420  002B9A  EFD1  F015         	goto	u2841
  7421  002B9E  EFD4  F015         	goto	u2840
  7422  002BA2                     u2841:
  7423  002BA2  FFFF               	dw	65535	; assembler added errata NOP
  7424  002BA4  EFDD  F015         	goto	l2924
  7425  002BA8                     u2840:
  7426  002BA8  FFFF               	dw	65535	; assembler added errata NOP
  7427  002BAA  0E00               	movlw	0
  7428  002BAC  1A01               	xorwf	___flneg@f1^0,f,c
  7429  002BAE  0E00               	movlw	0
  7430  002BB0  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  7431  002BB2  0E00               	movlw	0
  7432  002BB4  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  7433  002BB6  0E80               	movlw	128
  7434  002BB8  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  7435  002BBA                     l2924:
  7436  002BBA  FFFF               	dw	65535	; assembler added errata NOP
  7437  002BBC  C001  F001         	movff	___flneg@f1,?___flneg
  7438  002BC0  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  7439  002BC4  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  7440  002BC8  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  7441  002BCC  0012               	return		;funcret
  7442  002BCE  FFFF               	dw	65535	; errata NOP
  7443  002BD0                     __end_of___flneg:
  7444                           	callstack 0
  7445                           
  7446 ;; *************** function _init_PORTS *****************
  7447 ;; Defined at:
  7448 ;;		line 61 in file "init_PIC.c"
  7449 ;; Parameters:    Size  Location     Type
  7450 ;;		None
  7451 ;; Auto vars:     Size  Location     Type
  7452 ;;		None
  7453 ;; Return value:  Size  Location     Type
  7454 ;;                  1    wreg      void 
  7455 ;; Registers used:
  7456 ;;		wreg, status,2
  7457 ;; Tracked objects:
  7458 ;;		On entry : 0/0
  7459 ;;		On exit  : 0/0
  7460 ;;		Unchanged: 0/0
  7461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7462 ;;      Params:         0       0       0       0       0       0       0
  7463 ;;      Locals:         0       0       0       0       0       0       0
  7464 ;;      Temps:          0       0       0       0       0       0       0
  7465 ;;      Totals:         0       0       0       0       0       0       0
  7466 ;;Total ram usage:        0 bytes
  7467 ;; Hardware stack levels used:    1
  7468 ;; Hardware stack levels required when called:    1
  7469 ;; This function calls:
  7470 ;;		Nothing
  7471 ;; This function is called by:
  7472 ;;		_main
  7473 ;; This function uses a non-reentrant model
  7474 ;;
  7475                           
  7476                           	psect	text28
  7477  002C06                     __ptext28:
  7478                           	callstack 0
  7479  002C06                     _init_PORTS:
  7480                           	callstack 0
  7481  002C06  FFFF               	dw	65535	; assembler added errata NOP
  7482  002C08                     
  7483                           ;init_PIC.c: 63:     LATA = 0;
  7484  002C08  0E00               	movlw	0
  7485  002C0A  6E89               	movwf	137,c	;volatile
  7486                           
  7487                           ;init_PIC.c: 64:     PORTA = 0;
  7488  002C0C  0E00               	movlw	0
  7489  002C0E  6E80               	movwf	128,c	;volatile
  7490                           
  7491                           ;init_PIC.c: 65:     TRISA = 0xF1;
  7492  002C10  0EF1               	movlw	241
  7493  002C12  6E92               	movwf	146,c	;volatile
  7494                           
  7495                           ;init_PIC.c: 67:     LATB = 0;
  7496  002C14  0E00               	movlw	0
  7497  002C16  6E8A               	movwf	138,c	;volatile
  7498                           
  7499                           ;init_PIC.c: 68:     PORTB = 0;
  7500  002C18  0E00               	movlw	0
  7501  002C1A  6E81               	movwf	129,c	;volatile
  7502                           
  7503                           ;init_PIC.c: 69:     TRISB = 0x00;
  7504  002C1C  0E00               	movlw	0
  7505  002C1E  6E93               	movwf	147,c	;volatile
  7506                           
  7507                           ;init_PIC.c: 72:     LATC = 0;
  7508  002C20  0E00               	movlw	0
  7509  002C22  6E8B               	movwf	139,c	;volatile
  7510                           
  7511                           ;init_PIC.c: 73:     PORTC = 0;
  7512  002C24  0E00               	movlw	0
  7513  002C26  6E82               	movwf	130,c	;volatile
  7514                           
  7515                           ;init_PIC.c: 74:     TRISC = 0xF0;
  7516  002C28  0EF0               	movlw	240
  7517  002C2A  6E94               	movwf	148,c	;volatile
  7518  002C2C                     
  7519                           ;init_PIC.c: 75:     TRISCbits.RC6 = 0;
  7520  002C2C  9C94               	bcf	148,6,c	;volatile
  7521  002C2E  0012               	return		;funcret
  7522  002C30  FFFF               	dw	65535	; errata NOP
  7523  002C32                     __end_of_init_PORTS:
  7524                           	callstack 0
  7525                           
  7526 ;; *************** function _get_reg_value *****************
  7527 ;; Defined at:
  7528 ;;		line 51 in file "serial_rs232.c"
  7529 ;; Parameters:    Size  Location     Type
  7530 ;;		None
  7531 ;; Auto vars:     Size  Location     Type
  7532 ;;  rx_char         1    0[COMRAM] unsigned char 
  7533 ;; Return value:  Size  Location     Type
  7534 ;;                  1    wreg      unsigned char 
  7535 ;; Registers used:
  7536 ;;		wreg, status,2
  7537 ;; Tracked objects:
  7538 ;;		On entry : 0/0
  7539 ;;		On exit  : 0/0
  7540 ;;		Unchanged: 0/0
  7541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7542 ;;      Params:         0       0       0       0       0       0       0
  7543 ;;      Locals:         1       0       0       0       0       0       0
  7544 ;;      Temps:          0       0       0       0       0       0       0
  7545 ;;      Totals:         1       0       0       0       0       0       0
  7546 ;;Total ram usage:        1 bytes
  7547 ;; Hardware stack levels used:    1
  7548 ;; Hardware stack levels required when called:    1
  7549 ;; This function calls:
  7550 ;;		Nothing
  7551 ;; This function is called by:
  7552 ;;		_main
  7553 ;; This function uses a non-reentrant model
  7554 ;;
  7555                           
  7556                           	psect	text29
  7557  002D8C                     __ptext29:
  7558                           	callstack 0
  7559  002D8C                     _get_reg_value:
  7560                           	callstack 0
  7561  002D8C  FFFF               	dw	65535	; assembler added errata NOP
  7562  002D8E                     
  7563                           ;serial_rs232.c: 52:     unsigned char rx_char = RCREG;
  7564  002D8E  CFAE F001          	movff	4014,get_reg_value@rx_char	;volatile
  7565  002D92                     
  7566                           ;serial_rs232.c: 53:     RCREG = 0;
  7567  002D92  0E00               	movlw	0
  7568  002D94  6EAE               	movwf	174,c	;volatile
  7569                           
  7570                           ;serial_rs232.c: 54:     return rx_char;
  7571  002D96  5001               	movf	get_reg_value@rx_char^0,w,c
  7572  002D98  0012               	return		;funcret
  7573  002D9A  FFFF               	dw	65535	; errata NOP
  7574  002D9C                     __end_of_get_reg_value:
  7575                           	callstack 0
  7576                           
  7577 ;; *************** function _get_liters *****************
  7578 ;; Defined at:
  7579 ;;		line 36 in file "oven.c"
  7580 ;; Parameters:    Size  Location     Type
  7581 ;;		None
  7582 ;; Auto vars:     Size  Location     Type
  7583 ;;		None
  7584 ;; Return value:  Size  Location     Type
  7585 ;;                  2  110[COMRAM] int 
  7586 ;; Registers used:
  7587 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7588 ;; Tracked objects:
  7589 ;;		On entry : 0/0
  7590 ;;		On exit  : 0/0
  7591 ;;		Unchanged: 0/0
  7592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7593 ;;      Params:         2       0       0       0       0       0       0
  7594 ;;      Locals:         0       0       0       0       0       0       0
  7595 ;;      Temps:          0       0       0       0       0       0       0
  7596 ;;      Totals:         2       0       0       0       0       0       0
  7597 ;;Total ram usage:        2 bytes
  7598 ;; Hardware stack levels used:    1
  7599 ;; Hardware stack levels required when called:    2
  7600 ;; This function calls:
  7601 ;;		___flmul
  7602 ;;		___fltol
  7603 ;;		___xxtofl
  7604 ;; This function is called by:
  7605 ;;		_main
  7606 ;; This function uses a non-reentrant model
  7607 ;;
  7608                           
  7609                           	psect	text30
  7610  002952                     __ptext30:
  7611                           	callstack 0
  7612  002952                     _get_liters:
  7613                           	callstack 0
  7614  002952  FFFF               	dw	65535	; assembler added errata NOP
  7615  002954                     
  7616                           ;oven.c: 37:     ADCON0bits.GO = 1;
  7617  002954  84C2               	bsf	194,2,c	;volatile
  7618  002956                     l427:
  7619  002956  FFFF               	dw	65535	; assembler added errata NOP
  7620  002958  B4C2               	btfsc	194,2,c	;volatile
  7621  00295A  EFB1  F014         	goto	u3381
  7622  00295E  EFB4  F014         	goto	u3380
  7623  002962                     u3381:
  7624  002962  FFFF               	dw	65535	; assembler added errata NOP
  7625  002964  EFAB  F014         	goto	l427
  7626  002968                     u3380:
  7627  002968  FFFF               	dw	65535	; assembler added errata NOP
  7628  00296A                     
  7629                           ;oven.c: 39:     return (int) (ADRESH * 0.01);
  7630  00296A  0E0A               	movlw	10
  7631  00296C  6E1F               	movwf	___flmul@a^0,c
  7632  00296E  0ED7               	movlw	215
  7633  002970  6E20               	movwf	(___flmul@a+1)^0,c
  7634  002972  0E23               	movlw	35
  7635  002974  6E21               	movwf	(___flmul@a+2)^0,c
  7636  002976  0E3C               	movlw	60
  7637  002978  6E22               	movwf	(___flmul@a+3)^0,c
  7638  00297A  50C4               	movf	196,w,c	;volatile
  7639  00297C  6E0D               	movwf	___xxtofl@val^0,c
  7640  00297E  6A0E               	clrf	(___xxtofl@val+1)^0,c
  7641  002980  6A0F               	clrf	(___xxtofl@val+2)^0,c
  7642  002982  6A10               	clrf	(___xxtofl@val+3)^0,c
  7643  002984  0E01               	movlw	1
  7644  002986  EC06  F00E         	call	___xxtofl
  7645  00298A  C00D  F01B         	movff	?___xxtofl,___flmul@b
  7646  00298E  C00E  F01C         	movff	?___xxtofl+1,___flmul@b+1
  7647  002992  C00F  F01D         	movff	?___xxtofl+2,___flmul@b+2
  7648  002996  C010  F01E         	movff	?___xxtofl+3,___flmul@b+3
  7649  00299A  ECA5  F007         	call	___flmul	;wreg free
  7650  00299E  C01B  F065         	movff	?___flmul,___fltol@f1
  7651  0029A2  C01C  F066         	movff	?___flmul+1,___fltol@f1+1
  7652  0029A6  C01D  F067         	movff	?___flmul+2,___fltol@f1+2
  7653  0029AA  C01E  F068         	movff	?___flmul+3,___fltol@f1+3
  7654  0029AE  ECB9  F00F         	call	___fltol	;wreg free
  7655  0029B2  C065  F06F         	movff	?___fltol,?_get_liters
  7656  0029B6  C066  F070         	movff	?___fltol+1,?_get_liters+1
  7657  0029BA  0012               	return		;funcret
  7658  0029BC  FFFF               	dw	65535	; errata NOP
  7659  0029BE                     __end_of_get_liters:
  7660                           	callstack 0
  7661                           
  7662 ;; *************** function ___fltol *****************
  7663 ;; Defined at:
  7664 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  7665 ;; Parameters:    Size  Location     Type
  7666 ;;  f1              4  100[COMRAM] int 
  7667 ;; Auto vars:     Size  Location     Type
  7668 ;;  exp1            1  109[COMRAM] unsigned char 
  7669 ;;  sign1           1  108[COMRAM] unsigned char 
  7670 ;; Return value:  Size  Location     Type
  7671 ;;                  4  100[COMRAM] long 
  7672 ;; Registers used:
  7673 ;;		wreg, status,2, status,0
  7674 ;; Tracked objects:
  7675 ;;		On entry : 0/0
  7676 ;;		On exit  : 0/0
  7677 ;;		Unchanged: 0/0
  7678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7679 ;;      Params:         4       0       0       0       0       0       0
  7680 ;;      Locals:         2       0       0       0       0       0       0
  7681 ;;      Temps:          4       0       0       0       0       0       0
  7682 ;;      Totals:        10       0       0       0       0       0       0
  7683 ;;Total ram usage:       10 bytes
  7684 ;; Hardware stack levels used:    1
  7685 ;; Hardware stack levels required when called:    1
  7686 ;; This function calls:
  7687 ;;		Nothing
  7688 ;; This function is called by:
  7689 ;;		_init_USART
  7690 ;;		_init_timer_2
  7691 ;;		_update_pwm_duty_ccp1
  7692 ;;		_get_temperature
  7693 ;;		_get_liters
  7694 ;; This function uses a non-reentrant model
  7695 ;;
  7696                           
  7697                           	psect	text31
  7698  001F72                     __ptext31:
  7699                           	callstack 0
  7700  001F72                     ___fltol:
  7701                           	callstack 0
  7702  001F72  FFFF               	dw	65535	; assembler added errata NOP
  7703  001F74  3467               	rlcf	(___fltol@f1+2)^0,w,c
  7704  001F76  3468               	rlcf	(___fltol@f1+3)^0,w,c
  7705  001F78  6E6E               	movwf	___fltol@exp1^0,c
  7706  001F7A  506E               	movf	___fltol@exp1^0,w,c
  7707  001F7C  A4D8               	btfss	status,2,c
  7708  001F7E  EFC3  F00F         	goto	u2851
  7709  001F82  EFC6  F00F         	goto	u2850
  7710  001F86                     u2851:
  7711  001F86  FFFF               	dw	65535	; assembler added errata NOP
  7712  001F88  EFD2  F00F         	goto	l2934
  7713  001F8C                     u2850:
  7714  001F8C  FFFF               	dw	65535	; assembler added errata NOP
  7715  001F8E                     l2930:
  7716  001F8E  FFFF               	dw	65535	; assembler added errata NOP
  7717  001F90  0E00               	movlw	0
  7718  001F92  6E65               	movwf	?___fltol^0,c
  7719  001F94  0E00               	movlw	0
  7720  001F96  6E66               	movwf	(?___fltol+1)^0,c
  7721  001F98  0E00               	movlw	0
  7722  001F9A  6E67               	movwf	(?___fltol+2)^0,c
  7723  001F9C  0E00               	movlw	0
  7724  001F9E  6E68               	movwf	(?___fltol+3)^0,c
  7725  001FA0  EF51  F010         	goto	l742
  7726  001FA4                     l2934:
  7727  001FA4  FFFF               	dw	65535	; assembler added errata NOP
  7728  001FA6  C065  F069         	movff	___fltol@f1,??___fltol
  7729  001FAA  C066  F06A         	movff	___fltol@f1+1,??___fltol+1
  7730  001FAE  C067  F06B         	movff	___fltol@f1+2,??___fltol+2
  7731  001FB2  C068  F06C         	movff	___fltol@f1+3,??___fltol+3
  7732  001FB6  0E20               	movlw	32
  7733  001FB8  EFE4  F00F         	goto	u2860
  7734  001FBC                     u2865:
  7735  001FBC  FFFF               	dw	65535	; assembler added errata NOP
  7736  001FBE  90D8               	bcf	status,0,c
  7737  001FC0  326C               	rrcf	(??___fltol+3)^0,f,c
  7738  001FC2  326B               	rrcf	(??___fltol+2)^0,f,c
  7739  001FC4  326A               	rrcf	(??___fltol+1)^0,f,c
  7740  001FC6  3269               	rrcf	??___fltol^0,f,c
  7741  001FC8                     u2860:
  7742  001FC8  FFFF               	dw	65535	; assembler added errata NOP
  7743  001FCA  2EE8               	decfsz	wreg,f,c
  7744  001FCC  EFDE  F00F         	goto	u2865
  7745  001FD0  5069               	movf	??___fltol^0,w,c
  7746  001FD2  6E6D               	movwf	___fltol@sign1^0,c
  7747  001FD4  8E67               	bsf	(___fltol@f1+2)^0,7,c
  7748  001FD6  0EFF               	movlw	255
  7749  001FD8  1665               	andwf	___fltol@f1^0,f,c
  7750  001FDA  0EFF               	movlw	255
  7751  001FDC  1666               	andwf	(___fltol@f1+1)^0,f,c
  7752  001FDE  0EFF               	movlw	255
  7753  001FE0  1667               	andwf	(___fltol@f1+2)^0,f,c
  7754  001FE2  0E00               	movlw	0
  7755  001FE4  1668               	andwf	(___fltol@f1+3)^0,f,c
  7756  001FE6  0E96               	movlw	150
  7757  001FE8  5E6E               	subwf	___fltol@exp1^0,f,c
  7758  001FEA  BE6E               	btfsc	___fltol@exp1^0,7,c
  7759  001FEC  EFFD  F00F         	goto	u2870
  7760  001FF0  EFFA  F00F         	goto	u2871
  7761  001FF4                     u2871:
  7762  001FF4  FFFF               	dw	65535	; assembler added errata NOP
  7763  001FF6  EF17  F010         	goto	l2954
  7764  001FFA                     u2870:
  7765  001FFA  FFFF               	dw	65535	; assembler added errata NOP
  7766  001FFC  506E               	movf	___fltol@exp1^0,w,c
  7767  001FFE  0A80               	xorlw	128
  7768  002000  0F97               	addlw	151
  7769  002002  B0D8               	btfsc	status,0,c
  7770  002004  EF06  F010         	goto	u2881
  7771  002008  EF09  F010         	goto	u2880
  7772  00200C                     u2881:
  7773  00200C  FFFF               	dw	65535	; assembler added errata NOP
  7774  00200E  EF0C  F010         	goto	l2950
  7775  002012                     u2880:
  7776  002012  FFFF               	dw	65535	; assembler added errata NOP
  7777  002014  EFC7  F00F         	goto	l2930
  7778  002018                     l2950:
  7779  002018  FFFF               	dw	65535	; assembler added errata NOP
  7780  00201A  90D8               	bcf	status,0,c
  7781  00201C  3268               	rrcf	(___fltol@f1+3)^0,f,c
  7782  00201E  3267               	rrcf	(___fltol@f1+2)^0,f,c
  7783  002020  3266               	rrcf	(___fltol@f1+1)^0,f,c
  7784  002022  3265               	rrcf	___fltol@f1^0,f,c
  7785  002024  3E6E               	incfsz	___fltol@exp1^0,f,c
  7786  002026  EF0C  F010         	goto	l2950
  7787  00202A  EF35  F010         	goto	l2964
  7788  00202E                     l2954:
  7789  00202E  FFFF               	dw	65535	; assembler added errata NOP
  7790  002030  0E1F               	movlw	31
  7791  002032  646E               	cpfsgt	___fltol@exp1^0,c
  7792  002034  EF1E  F010         	goto	u2891
  7793  002038  EF21  F010         	goto	u2890
  7794  00203C                     u2891:
  7795  00203C  FFFF               	dw	65535	; assembler added errata NOP
  7796  00203E  EF2B  F010         	goto	l2962
  7797  002042                     u2890:
  7798  002042  FFFF               	dw	65535	; assembler added errata NOP
  7799  002044  EFC7  F00F         	goto	l2930
  7800  002048                     l2960:
  7801  002048  FFFF               	dw	65535	; assembler added errata NOP
  7802  00204A  90D8               	bcf	status,0,c
  7803  00204C  3665               	rlcf	___fltol@f1^0,f,c
  7804  00204E  3666               	rlcf	(___fltol@f1+1)^0,f,c
  7805  002050  3667               	rlcf	(___fltol@f1+2)^0,f,c
  7806  002052  3668               	rlcf	(___fltol@f1+3)^0,f,c
  7807  002054  066E               	decf	___fltol@exp1^0,f,c
  7808  002056                     l2962:
  7809  002056  FFFF               	dw	65535	; assembler added errata NOP
  7810  002058  506E               	movf	___fltol@exp1^0,w,c
  7811  00205A  A4D8               	btfss	status,2,c
  7812  00205C  EF32  F010         	goto	u2901
  7813  002060  EF35  F010         	goto	u2900
  7814  002064                     u2901:
  7815  002064  FFFF               	dw	65535	; assembler added errata NOP
  7816  002066  EF24  F010         	goto	l2960
  7817  00206A                     u2900:
  7818  00206A                     l2964:
  7819  00206A  FFFF               	dw	65535	; assembler added errata NOP
  7820  00206C  506D               	movf	___fltol@sign1^0,w,c
  7821  00206E  B4D8               	btfsc	status,2,c
  7822  002070  EF3C  F010         	goto	u2911
  7823  002074  EF3F  F010         	goto	u2910
  7824  002078                     u2911:
  7825  002078  FFFF               	dw	65535	; assembler added errata NOP
  7826  00207A  EF48  F010         	goto	l2968
  7827  00207E                     u2910:
  7828  00207E  FFFF               	dw	65535	; assembler added errata NOP
  7829  002080  1E68               	comf	(___fltol@f1+3)^0,f,c
  7830  002082  1E67               	comf	(___fltol@f1+2)^0,f,c
  7831  002084  1E66               	comf	(___fltol@f1+1)^0,f,c
  7832  002086  6C65               	negf	___fltol@f1^0,c
  7833  002088  0E00               	movlw	0
  7834  00208A  2266               	addwfc	(___fltol@f1+1)^0,f,c
  7835  00208C  2267               	addwfc	(___fltol@f1+2)^0,f,c
  7836  00208E  2268               	addwfc	(___fltol@f1+3)^0,f,c
  7837  002090                     l2968:
  7838  002090  FFFF               	dw	65535	; assembler added errata NOP
  7839  002092  C065  F065         	movff	___fltol@f1,?___fltol
  7840  002096  C066  F066         	movff	___fltol@f1+1,?___fltol+1
  7841  00209A  C067  F067         	movff	___fltol@f1+2,?___fltol+2
  7842  00209E  C068  F068         	movff	___fltol@f1+3,?___fltol+3
  7843  0020A2                     l742:
  7844  0020A2  FFFF               	dw	65535	; assembler added errata NOP
  7845  0020A4  0012               	return		;funcret
  7846  0020A6  FFFF               	dw	65535	; errata NOP
  7847  0020A8                     __end_of___fltol:
  7848                           	callstack 0
  7849                           
  7850 ;; *************** function ___flmul *****************
  7851 ;; Defined at:
  7852 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  7853 ;; Parameters:    Size  Location     Type
  7854 ;;  b               4   26[COMRAM] long 
  7855 ;;  a               4   30[COMRAM] long 
  7856 ;; Auto vars:     Size  Location     Type
  7857 ;;  prod            4   45[COMRAM] struct .
  7858 ;;  grs             4   39[COMRAM] unsigned long 
  7859 ;;  temp            2   49[COMRAM] struct .
  7860 ;;  bexp            1   44[COMRAM] unsigned char 
  7861 ;;  aexp            1   43[COMRAM] unsigned char 
  7862 ;;  sign            1   38[COMRAM] unsigned char 
  7863 ;; Return value:  Size  Location     Type
  7864 ;;                  4   26[COMRAM] unsigned char 
  7865 ;; Registers used:
  7866 ;;		wreg, status,2, status,0, prodl, prodh
  7867 ;; Tracked objects:
  7868 ;;		On entry : 0/0
  7869 ;;		On exit  : 0/0
  7870 ;;		Unchanged: 0/0
  7871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7872 ;;      Params:         8       0       0       0       0       0       0
  7873 ;;      Locals:        13       0       0       0       0       0       0
  7874 ;;      Temps:          4       0       0       0       0       0       0
  7875 ;;      Totals:        25       0       0       0       0       0       0
  7876 ;;Total ram usage:       25 bytes
  7877 ;; Hardware stack levels used:    1
  7878 ;; Hardware stack levels required when called:    1
  7879 ;; This function calls:
  7880 ;;		Nothing
  7881 ;; This function is called by:
  7882 ;;		_init_timer_2
  7883 ;;		_update_pwm_duty_ccp1
  7884 ;;		_get_temperature
  7885 ;;		_get_liters
  7886 ;;		_roundf
  7887 ;; This function uses a non-reentrant model
  7888 ;;
  7889                           
  7890                           	psect	text32
  7891  000F4A                     __ptext32:
  7892                           	callstack 0
  7893  000F4A                     ___flmul:
  7894                           	callstack 0
  7895  000F4A  FFFF               	dw	65535	; assembler added errata NOP
  7896  000F4C  501E               	movf	(___flmul@b+3)^0,w,c
  7897  000F4E  0B80               	andlw	128
  7898  000F50  6E27               	movwf	___flmul@sign^0,c
  7899  000F52  501E               	movf	(___flmul@b+3)^0,w,c
  7900  000F54  241E               	addwf	(___flmul@b+3)^0,w,c
  7901  000F56  6E2D               	movwf	___flmul@bexp^0,c
  7902  000F58  AE1D               	btfss	(___flmul@b+2)^0,7,c
  7903  000F5A  EFB1  F007         	goto	u2601
  7904  000F5E  EFB4  F007         	goto	u2600
  7905  000F62                     u2601:
  7906  000F62  FFFF               	dw	65535	; assembler added errata NOP
  7907  000F64  EFB6  F007         	goto	l2768
  7908  000F68                     u2600:
  7909  000F68  FFFF               	dw	65535	; assembler added errata NOP
  7910  000F6A  802D               	bsf	___flmul@bexp^0,0,c
  7911  000F6C                     l2768:
  7912  000F6C  FFFF               	dw	65535	; assembler added errata NOP
  7913  000F6E  502D               	movf	___flmul@bexp^0,w,c
  7914  000F70  B4D8               	btfsc	status,2,c
  7915  000F72  EFBD  F007         	goto	u2611
  7916  000F76  EFC0  F007         	goto	u2610
  7917  000F7A                     u2611:
  7918  000F7A  FFFF               	dw	65535	; assembler added errata NOP
  7919  000F7C  EFD7  F007         	goto	l2776
  7920  000F80                     u2610:
  7921  000F80  FFFF               	dw	65535	; assembler added errata NOP
  7922  000F82  282D               	incf	___flmul@bexp^0,w,c
  7923  000F84  A4D8               	btfss	status,2,c
  7924  000F86  EFC7  F007         	goto	u2621
  7925  000F8A  EFCA  F007         	goto	u2620
  7926  000F8E                     u2621:
  7927  000F8E  FFFF               	dw	65535	; assembler added errata NOP
  7928  000F90  EFD3  F007         	goto	l2774
  7929  000F94                     u2620:
  7930  000F94  FFFF               	dw	65535	; assembler added errata NOP
  7931  000F96  0E00               	movlw	0
  7932  000F98  6E1B               	movwf	___flmul@b^0,c
  7933  000F9A  0E00               	movlw	0
  7934  000F9C  6E1C               	movwf	(___flmul@b+1)^0,c
  7935  000F9E  0E00               	movlw	0
  7936  000FA0  6E1D               	movwf	(___flmul@b+2)^0,c
  7937  000FA2  0E00               	movlw	0
  7938  000FA4  6E1E               	movwf	(___flmul@b+3)^0,c
  7939  000FA6                     l2774:
  7940  000FA6  FFFF               	dw	65535	; assembler added errata NOP
  7941  000FA8  8E1D               	bsf	(___flmul@b+2)^0,7,c
  7942  000FAA  EFE0  F007         	goto	l2778
  7943  000FAE                     l2776:
  7944  000FAE  FFFF               	dw	65535	; assembler added errata NOP
  7945  000FB0  0E00               	movlw	0
  7946  000FB2  6E1B               	movwf	___flmul@b^0,c
  7947  000FB4  0E00               	movlw	0
  7948  000FB6  6E1C               	movwf	(___flmul@b+1)^0,c
  7949  000FB8  0E00               	movlw	0
  7950  000FBA  6E1D               	movwf	(___flmul@b+2)^0,c
  7951  000FBC  0E00               	movlw	0
  7952  000FBE  6E1E               	movwf	(___flmul@b+3)^0,c
  7953  000FC0                     l2778:
  7954  000FC0  FFFF               	dw	65535	; assembler added errata NOP
  7955  000FC2  5022               	movf	(___flmul@a+3)^0,w,c
  7956  000FC4  0B80               	andlw	128
  7957  000FC6  1A27               	xorwf	___flmul@sign^0,f,c
  7958  000FC8  5022               	movf	(___flmul@a+3)^0,w,c
  7959  000FCA  2422               	addwf	(___flmul@a+3)^0,w,c
  7960  000FCC  6E2C               	movwf	___flmul@aexp^0,c
  7961  000FCE  AE21               	btfss	(___flmul@a+2)^0,7,c
  7962  000FD0  EFEC  F007         	goto	u2631
  7963  000FD4  EFEF  F007         	goto	u2630
  7964  000FD8                     u2631:
  7965  000FD8  FFFF               	dw	65535	; assembler added errata NOP
  7966  000FDA  EFF1  F007         	goto	l2786
  7967  000FDE                     u2630:
  7968  000FDE  FFFF               	dw	65535	; assembler added errata NOP
  7969  000FE0  802C               	bsf	___flmul@aexp^0,0,c
  7970  000FE2                     l2786:
  7971  000FE2  FFFF               	dw	65535	; assembler added errata NOP
  7972  000FE4  502C               	movf	___flmul@aexp^0,w,c
  7973  000FE6  B4D8               	btfsc	status,2,c
  7974  000FE8  EFF8  F007         	goto	u2641
  7975  000FEC  EFFB  F007         	goto	u2640
  7976  000FF0                     u2641:
  7977  000FF0  FFFF               	dw	65535	; assembler added errata NOP
  7978  000FF2  EF12  F008         	goto	l2794
  7979  000FF6                     u2640:
  7980  000FF6  FFFF               	dw	65535	; assembler added errata NOP
  7981  000FF8  282C               	incf	___flmul@aexp^0,w,c
  7982  000FFA  A4D8               	btfss	status,2,c
  7983  000FFC  EF02  F008         	goto	u2651
  7984  001000  EF05  F008         	goto	u2650
  7985  001004                     u2651:
  7986  001004  FFFF               	dw	65535	; assembler added errata NOP
  7987  001006  EF0E  F008         	goto	l2792
  7988  00100A                     u2650:
  7989  00100A  FFFF               	dw	65535	; assembler added errata NOP
  7990  00100C  0E00               	movlw	0
  7991  00100E  6E1F               	movwf	___flmul@a^0,c
  7992  001010  0E00               	movlw	0
  7993  001012  6E20               	movwf	(___flmul@a+1)^0,c
  7994  001014  0E00               	movlw	0
  7995  001016  6E21               	movwf	(___flmul@a+2)^0,c
  7996  001018  0E00               	movlw	0
  7997  00101A  6E22               	movwf	(___flmul@a+3)^0,c
  7998  00101C                     l2792:
  7999  00101C  FFFF               	dw	65535	; assembler added errata NOP
  8000  00101E  8E21               	bsf	(___flmul@a+2)^0,7,c
  8001  001020  EF1B  F008         	goto	l1059
  8002  001024                     l2794:
  8003  001024  FFFF               	dw	65535	; assembler added errata NOP
  8004  001026  0E00               	movlw	0
  8005  001028  6E1F               	movwf	___flmul@a^0,c
  8006  00102A  0E00               	movlw	0
  8007  00102C  6E20               	movwf	(___flmul@a+1)^0,c
  8008  00102E  0E00               	movlw	0
  8009  001030  6E21               	movwf	(___flmul@a+2)^0,c
  8010  001032  0E00               	movlw	0
  8011  001034  6E22               	movwf	(___flmul@a+3)^0,c
  8012  001036                     l1059:
  8013  001036  FFFF               	dw	65535	; assembler added errata NOP
  8014  001038  502C               	movf	___flmul@aexp^0,w,c
  8015  00103A  B4D8               	btfsc	status,2,c
  8016  00103C  EF22  F008         	goto	u2661
  8017  001040  EF25  F008         	goto	u2660
  8018  001044                     u2661:
  8019  001044  FFFF               	dw	65535	; assembler added errata NOP
  8020  001046  EF2F  F008         	goto	l2798
  8021  00104A                     u2660:
  8022  00104A  FFFF               	dw	65535	; assembler added errata NOP
  8023  00104C  502D               	movf	___flmul@bexp^0,w,c
  8024  00104E  A4D8               	btfss	status,2,c
  8025  001050  EF2C  F008         	goto	u2671
  8026  001054  EF2F  F008         	goto	u2670
  8027  001058                     u2671:
  8028  001058  FFFF               	dw	65535	; assembler added errata NOP
  8029  00105A  EF3A  F008         	goto	l2802
  8030  00105E                     u2670:
  8031  00105E                     l2798:
  8032  00105E  FFFF               	dw	65535	; assembler added errata NOP
  8033  001060  0E00               	movlw	0
  8034  001062  6E1B               	movwf	?___flmul^0,c
  8035  001064  0E00               	movlw	0
  8036  001066  6E1C               	movwf	(?___flmul+1)^0,c
  8037  001068  0E00               	movlw	0
  8038  00106A  6E1D               	movwf	(?___flmul+2)^0,c
  8039  00106C  0E00               	movlw	0
  8040  00106E  6E1E               	movwf	(?___flmul+3)^0,c
  8041  001070  EFF4  F009         	goto	l1063
  8042  001074                     l2802:
  8043  001074  FFFF               	dw	65535	; assembler added errata NOP
  8044  001076  5021               	movf	(___flmul@a+2)^0,w,c
  8045  001078  021B               	mulwf	___flmul@b^0,c
  8046  00107A  CFF3 F032          	movff	prodl,___flmul@temp
  8047  00107E  CFF4 F033          	movff	prodh,___flmul@temp+1
  8048  001082  5032               	movf	___flmul@temp^0,w,c
  8049  001084  6E28               	movwf	___flmul@grs^0,c
  8050  001086  6A29               	clrf	(___flmul@grs+1)^0,c
  8051  001088  6A2A               	clrf	(___flmul@grs+2)^0,c
  8052  00108A  6A2B               	clrf	(___flmul@grs+3)^0,c
  8053  00108C  5033               	movf	(___flmul@temp+1)^0,w,c
  8054  00108E  6E2E               	movwf	___flmul@prod^0,c
  8055  001090  6A2F               	clrf	(___flmul@prod+1)^0,c
  8056  001092  6A30               	clrf	(___flmul@prod+2)^0,c
  8057  001094  6A31               	clrf	(___flmul@prod+3)^0,c
  8058  001096  5020               	movf	(___flmul@a+1)^0,w,c
  8059  001098  021C               	mulwf	(___flmul@b+1)^0,c
  8060  00109A  CFF3 F032          	movff	prodl,___flmul@temp
  8061  00109E  CFF4 F033          	movff	prodh,___flmul@temp+1
  8062  0010A2  5032               	movf	___flmul@temp^0,w,c
  8063  0010A4  2628               	addwf	___flmul@grs^0,f,c
  8064  0010A6  0E00               	movlw	0
  8065  0010A8  2229               	addwfc	(___flmul@grs+1)^0,f,c
  8066  0010AA  222A               	addwfc	(___flmul@grs+2)^0,f,c
  8067  0010AC  222B               	addwfc	(___flmul@grs+3)^0,f,c
  8068  0010AE  5033               	movf	(___flmul@temp+1)^0,w,c
  8069  0010B0  262E               	addwf	___flmul@prod^0,f,c
  8070  0010B2  0E00               	movlw	0
  8071  0010B4  222F               	addwfc	(___flmul@prod+1)^0,f,c
  8072  0010B6  2230               	addwfc	(___flmul@prod+2)^0,f,c
  8073  0010B8  2231               	addwfc	(___flmul@prod+3)^0,f,c
  8074  0010BA  501F               	movf	___flmul@a^0,w,c
  8075  0010BC  021D               	mulwf	(___flmul@b+2)^0,c
  8076  0010BE  CFF3 F032          	movff	prodl,___flmul@temp
  8077  0010C2  CFF4 F033          	movff	prodh,___flmul@temp+1
  8078  0010C6  5032               	movf	___flmul@temp^0,w,c
  8079  0010C8  2628               	addwf	___flmul@grs^0,f,c
  8080  0010CA  0E00               	movlw	0
  8081  0010CC  2229               	addwfc	(___flmul@grs+1)^0,f,c
  8082  0010CE  222A               	addwfc	(___flmul@grs+2)^0,f,c
  8083  0010D0  222B               	addwfc	(___flmul@grs+3)^0,f,c
  8084  0010D2  5033               	movf	(___flmul@temp+1)^0,w,c
  8085  0010D4  262E               	addwf	___flmul@prod^0,f,c
  8086  0010D6  0E00               	movlw	0
  8087  0010D8  222F               	addwfc	(___flmul@prod+1)^0,f,c
  8088  0010DA  2230               	addwfc	(___flmul@prod+2)^0,f,c
  8089  0010DC  2231               	addwfc	(___flmul@prod+3)^0,f,c
  8090  0010DE  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  8091  0010E2  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  8092  0010E6  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  8093  0010EA  6A28               	clrf	___flmul@grs^0,c
  8094  0010EC  501F               	movf	___flmul@a^0,w,c
  8095  0010EE  021C               	mulwf	(___flmul@b+1)^0,c
  8096  0010F0  CFF3 F032          	movff	prodl,___flmul@temp
  8097  0010F4  CFF4 F033          	movff	prodh,___flmul@temp+1
  8098  0010F8  5032               	movf	___flmul@temp^0,w,c
  8099  0010FA  2628               	addwf	___flmul@grs^0,f,c
  8100  0010FC  5033               	movf	(___flmul@temp+1)^0,w,c
  8101  0010FE  2229               	addwfc	(___flmul@grs+1)^0,f,c
  8102  001100  0E00               	movlw	0
  8103  001102  222A               	addwfc	(___flmul@grs+2)^0,f,c
  8104  001104  0E00               	movlw	0
  8105  001106  222B               	addwfc	(___flmul@grs+3)^0,f,c
  8106  001108  5020               	movf	(___flmul@a+1)^0,w,c
  8107  00110A  021B               	mulwf	___flmul@b^0,c
  8108  00110C  CFF3 F032          	movff	prodl,___flmul@temp
  8109  001110  CFF4 F033          	movff	prodh,___flmul@temp+1
  8110  001114  5032               	movf	___flmul@temp^0,w,c
  8111  001116  2628               	addwf	___flmul@grs^0,f,c
  8112  001118  5033               	movf	(___flmul@temp+1)^0,w,c
  8113  00111A  2229               	addwfc	(___flmul@grs+1)^0,f,c
  8114  00111C  0E00               	movlw	0
  8115  00111E  222A               	addwfc	(___flmul@grs+2)^0,f,c
  8116  001120  0E00               	movlw	0
  8117  001122  222B               	addwfc	(___flmul@grs+3)^0,f,c
  8118  001124  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  8119  001128  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  8120  00112C  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  8121  001130  6A28               	clrf	___flmul@grs^0,c
  8122  001132  501F               	movf	___flmul@a^0,w,c
  8123  001134  021B               	mulwf	___flmul@b^0,c
  8124  001136  CFF3 F032          	movff	prodl,___flmul@temp
  8125  00113A  CFF4 F033          	movff	prodh,___flmul@temp+1
  8126  00113E  5032               	movf	___flmul@temp^0,w,c
  8127  001140  2628               	addwf	___flmul@grs^0,f,c
  8128  001142  5033               	movf	(___flmul@temp+1)^0,w,c
  8129  001144  2229               	addwfc	(___flmul@grs+1)^0,f,c
  8130  001146  0E00               	movlw	0
  8131  001148  222A               	addwfc	(___flmul@grs+2)^0,f,c
  8132  00114A  0E00               	movlw	0
  8133  00114C  222B               	addwfc	(___flmul@grs+3)^0,f,c
  8134  00114E  5021               	movf	(___flmul@a+2)^0,w,c
  8135  001150  021C               	mulwf	(___flmul@b+1)^0,c
  8136  001152  CFF3 F032          	movff	prodl,___flmul@temp
  8137  001156  CFF4 F033          	movff	prodh,___flmul@temp+1
  8138  00115A  5032               	movf	___flmul@temp^0,w,c
  8139  00115C  262E               	addwf	___flmul@prod^0,f,c
  8140  00115E  5033               	movf	(___flmul@temp+1)^0,w,c
  8141  001160  222F               	addwfc	(___flmul@prod+1)^0,f,c
  8142  001162  0E00               	movlw	0
  8143  001164  2230               	addwfc	(___flmul@prod+2)^0,f,c
  8144  001166  0E00               	movlw	0
  8145  001168  2231               	addwfc	(___flmul@prod+3)^0,f,c
  8146  00116A  5020               	movf	(___flmul@a+1)^0,w,c
  8147  00116C  021D               	mulwf	(___flmul@b+2)^0,c
  8148  00116E  CFF3 F032          	movff	prodl,___flmul@temp
  8149  001172  CFF4 F033          	movff	prodh,___flmul@temp+1
  8150  001176  5032               	movf	___flmul@temp^0,w,c
  8151  001178  262E               	addwf	___flmul@prod^0,f,c
  8152  00117A  5033               	movf	(___flmul@temp+1)^0,w,c
  8153  00117C  222F               	addwfc	(___flmul@prod+1)^0,f,c
  8154  00117E  0E00               	movlw	0
  8155  001180  2230               	addwfc	(___flmul@prod+2)^0,f,c
  8156  001182  0E00               	movlw	0
  8157  001184  2231               	addwfc	(___flmul@prod+3)^0,f,c
  8158  001186  5021               	movf	(___flmul@a+2)^0,w,c
  8159  001188  021D               	mulwf	(___flmul@b+2)^0,c
  8160  00118A  CFF3 F032          	movff	prodl,___flmul@temp
  8161  00118E  CFF4 F033          	movff	prodh,___flmul@temp+1
  8162  001192  5032               	movf	___flmul@temp^0,w,c
  8163  001194  6E23               	movwf	??___flmul^0,c
  8164  001196  5033               	movf	(___flmul@temp+1)^0,w,c
  8165  001198  6E24               	movwf	(??___flmul+1)^0,c
  8166  00119A  6A25               	clrf	(??___flmul+2)^0,c
  8167  00119C  6A26               	clrf	(??___flmul+3)^0,c
  8168  00119E  C025  F026         	movff	??___flmul+2,??___flmul+3
  8169  0011A2  C024  F025         	movff	??___flmul+1,??___flmul+2
  8170  0011A6  C023  F024         	movff	??___flmul,??___flmul+1
  8171  0011AA  6A23               	clrf	??___flmul^0,c
  8172  0011AC  5023               	movf	??___flmul^0,w,c
  8173  0011AE  262E               	addwf	___flmul@prod^0,f,c
  8174  0011B0  5024               	movf	(??___flmul+1)^0,w,c
  8175  0011B2  222F               	addwfc	(___flmul@prod+1)^0,f,c
  8176  0011B4  5025               	movf	(??___flmul+2)^0,w,c
  8177  0011B6  2230               	addwfc	(___flmul@prod+2)^0,f,c
  8178  0011B8  5026               	movf	(??___flmul+3)^0,w,c
  8179  0011BA  2231               	addwfc	(___flmul@prod+3)^0,f,c
  8180  0011BC  C028  F023         	movff	___flmul@grs,??___flmul
  8181  0011C0  C029  F024         	movff	___flmul@grs+1,??___flmul+1
  8182  0011C4  C02A  F025         	movff	___flmul@grs+2,??___flmul+2
  8183  0011C8  C02B  F026         	movff	___flmul@grs+3,??___flmul+3
  8184  0011CC  0E19               	movlw	25
  8185  0011CE  EFEF  F008         	goto	u2680
  8186  0011D2                     u2685:
  8187  0011D2  FFFF               	dw	65535	; assembler added errata NOP
  8188  0011D4  90D8               	bcf	status,0,c
  8189  0011D6  3226               	rrcf	(??___flmul+3)^0,f,c
  8190  0011D8  3225               	rrcf	(??___flmul+2)^0,f,c
  8191  0011DA  3224               	rrcf	(??___flmul+1)^0,f,c
  8192  0011DC  3223               	rrcf	??___flmul^0,f,c
  8193  0011DE                     u2680:
  8194  0011DE  FFFF               	dw	65535	; assembler added errata NOP
  8195  0011E0  2EE8               	decfsz	wreg,f,c
  8196  0011E2  EFE9  F008         	goto	u2685
  8197  0011E6  5023               	movf	??___flmul^0,w,c
  8198  0011E8  262E               	addwf	___flmul@prod^0,f,c
  8199  0011EA  5024               	movf	(??___flmul+1)^0,w,c
  8200  0011EC  222F               	addwfc	(___flmul@prod+1)^0,f,c
  8201  0011EE  5025               	movf	(??___flmul+2)^0,w,c
  8202  0011F0  2230               	addwfc	(___flmul@prod+2)^0,f,c
  8203  0011F2  5026               	movf	(??___flmul+3)^0,w,c
  8204  0011F4  2231               	addwfc	(___flmul@prod+3)^0,f,c
  8205  0011F6  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  8206  0011FA  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  8207  0011FE  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  8208  001202  6A28               	clrf	___flmul@grs^0,c
  8209  001204  502C               	movf	___flmul@aexp^0,w,c
  8210  001206  C02D  F023         	movff	___flmul@bexp,??___flmul
  8211  00120A  6A24               	clrf	(??___flmul+1)^0,c
  8212  00120C  2623               	addwf	??___flmul^0,f,c
  8213  00120E  0E00               	movlw	0
  8214  001210  2224               	addwfc	(??___flmul+1)^0,f,c
  8215  001212  0E82               	movlw	130
  8216  001214  2423               	addwf	??___flmul^0,w,c
  8217  001216  6E32               	movwf	___flmul@temp^0,c
  8218  001218  0EFF               	movlw	255
  8219  00121A  2024               	addwfc	(??___flmul+1)^0,w,c
  8220  00121C  6E33               	movwf	(___flmul@temp+1)^0,c
  8221  00121E  EF2A  F009         	goto	l2850
  8222  001222                     l2844:
  8223  001222  FFFF               	dw	65535	; assembler added errata NOP
  8224  001224  90D8               	bcf	status,0,c
  8225  001226  362E               	rlcf	___flmul@prod^0,f,c
  8226  001228  362F               	rlcf	(___flmul@prod+1)^0,f,c
  8227  00122A  3630               	rlcf	(___flmul@prod+2)^0,f,c
  8228  00122C  3631               	rlcf	(___flmul@prod+3)^0,f,c
  8229  00122E  AE2B               	btfss	(___flmul@grs+3)^0,7,c
  8230  001230  EF1C  F009         	goto	u2691
  8231  001234  EF1F  F009         	goto	u2690
  8232  001238                     u2691:
  8233  001238  FFFF               	dw	65535	; assembler added errata NOP
  8234  00123A  EF21  F009         	goto	l1066
  8235  00123E                     u2690:
  8236  00123E  FFFF               	dw	65535	; assembler added errata NOP
  8237  001240  802E               	bsf	___flmul@prod^0,0,c
  8238  001242                     l1066:
  8239  001242  FFFF               	dw	65535	; assembler added errata NOP
  8240  001244  90D8               	bcf	status,0,c
  8241  001246  3628               	rlcf	___flmul@grs^0,f,c
  8242  001248  3629               	rlcf	(___flmul@grs+1)^0,f,c
  8243  00124A  362A               	rlcf	(___flmul@grs+2)^0,f,c
  8244  00124C  362B               	rlcf	(___flmul@grs+3)^0,f,c
  8245  00124E  0632               	decf	___flmul@temp^0,f,c
  8246  001250  A0D8               	btfss	status,0,c
  8247  001252  0633               	decf	(___flmul@temp+1)^0,f,c
  8248  001254                     l2850:
  8249  001254  FFFF               	dw	65535	; assembler added errata NOP
  8250  001256  AE30               	btfss	(___flmul@prod+2)^0,7,c
  8251  001258  EF30  F009         	goto	u2701
  8252  00125C  EF33  F009         	goto	u2700
  8253  001260                     u2701:
  8254  001260  FFFF               	dw	65535	; assembler added errata NOP
  8255  001262  EF11  F009         	goto	l2844
  8256  001266                     u2700:
  8257  001266  FFFF               	dw	65535	; assembler added errata NOP
  8258  001268  0E00               	movlw	0
  8259  00126A  6E2C               	movwf	___flmul@aexp^0,c
  8260  00126C  AE2B               	btfss	(___flmul@grs+3)^0,7,c
  8261  00126E  EF3B  F009         	goto	u2711
  8262  001272  EF3E  F009         	goto	u2710
  8263  001276                     u2711:
  8264  001276  FFFF               	dw	65535	; assembler added errata NOP
  8265  001278  EF69  F009         	goto	l1068
  8266  00127C                     u2710:
  8267  00127C  FFFF               	dw	65535	; assembler added errata NOP
  8268  00127E  0EFF               	movlw	255
  8269  001280  1428               	andwf	___flmul@grs^0,w,c
  8270  001282  6E23               	movwf	??___flmul^0,c
  8271  001284  0EFF               	movlw	255
  8272  001286  1429               	andwf	(___flmul@grs+1)^0,w,c
  8273  001288  6E24               	movwf	(??___flmul+1)^0,c
  8274  00128A  0EFF               	movlw	255
  8275  00128C  142A               	andwf	(___flmul@grs+2)^0,w,c
  8276  00128E  6E25               	movwf	(??___flmul+2)^0,c
  8277  001290  0E7F               	movlw	127
  8278  001292  142B               	andwf	(___flmul@grs+3)^0,w,c
  8279  001294  6E26               	movwf	(??___flmul+3)^0,c
  8280  001296  5023               	movf	??___flmul^0,w,c
  8281  001298  1024               	iorwf	(??___flmul+1)^0,w,c
  8282  00129A  1025               	iorwf	(??___flmul+2)^0,w,c
  8283  00129C  1026               	iorwf	(??___flmul+3)^0,w,c
  8284  00129E  B4D8               	btfsc	status,2,c
  8285  0012A0  EF54  F009         	goto	u2721
  8286  0012A4  EF57  F009         	goto	u2720
  8287  0012A8                     u2721:
  8288  0012A8  FFFF               	dw	65535	; assembler added errata NOP
  8289  0012AA  EF5D  F009         	goto	l1069
  8290  0012AE                     u2720:
  8291  0012AE  FFFF               	dw	65535	; assembler added errata NOP
  8292  0012B0                     l2858:
  8293  0012B0  FFFF               	dw	65535	; assembler added errata NOP
  8294  0012B2  0E01               	movlw	1
  8295  0012B4  6E2C               	movwf	___flmul@aexp^0,c
  8296  0012B6  EF69  F009         	goto	l1068
  8297  0012BA                     l1069:
  8298  0012BA  FFFF               	dw	65535	; assembler added errata NOP
  8299  0012BC  A02E               	btfss	___flmul@prod^0,0,c
  8300  0012BE  EF63  F009         	goto	u2731
  8301  0012C2  EF66  F009         	goto	u2730
  8302  0012C6                     u2731:
  8303  0012C6  FFFF               	dw	65535	; assembler added errata NOP
  8304  0012C8  EF69  F009         	goto	l1068
  8305  0012CC                     u2730:
  8306  0012CC  FFFF               	dw	65535	; assembler added errata NOP
  8307  0012CE  EF58  F009         	goto	l2858
  8308  0012D2                     l1068:
  8309  0012D2  FFFF               	dw	65535	; assembler added errata NOP
  8310  0012D4  502C               	movf	___flmul@aexp^0,w,c
  8311  0012D6  B4D8               	btfsc	status,2,c
  8312  0012D8  EF70  F009         	goto	u2741
  8313  0012DC  EF73  F009         	goto	u2740
  8314  0012E0                     u2741:
  8315  0012E0  FFFF               	dw	65535	; assembler added errata NOP
  8316  0012E2  EF9A  F009         	goto	l2870
  8317  0012E6                     u2740:
  8318  0012E6  FFFF               	dw	65535	; assembler added errata NOP
  8319  0012E8  0E01               	movlw	1
  8320  0012EA  262E               	addwf	___flmul@prod^0,f,c
  8321  0012EC  0E00               	movlw	0
  8322  0012EE  222F               	addwfc	(___flmul@prod+1)^0,f,c
  8323  0012F0  2230               	addwfc	(___flmul@prod+2)^0,f,c
  8324  0012F2  2231               	addwfc	(___flmul@prod+3)^0,f,c
  8325  0012F4  A031               	btfss	(___flmul@prod+3)^0,0,c
  8326  0012F6  EF7F  F009         	goto	u2751
  8327  0012FA  EF82  F009         	goto	u2750
  8328  0012FE                     u2751:
  8329  0012FE  FFFF               	dw	65535	; assembler added errata NOP
  8330  001300  EF9A  F009         	goto	l2870
  8331  001304                     u2750:
  8332  001304  FFFF               	dw	65535	; assembler added errata NOP
  8333  001306  C02E  F023         	movff	___flmul@prod,??___flmul
  8334  00130A  C02F  F024         	movff	___flmul@prod+1,??___flmul+1
  8335  00130E  C030  F025         	movff	___flmul@prod+2,??___flmul+2
  8336  001312  C031  F026         	movff	___flmul@prod+3,??___flmul+3
  8337  001316  3426               	rlcf	(??___flmul+3)^0,w,c
  8338  001318  3226               	rrcf	(??___flmul+3)^0,f,c
  8339  00131A  3225               	rrcf	(??___flmul+2)^0,f,c
  8340  00131C  3224               	rrcf	(??___flmul+1)^0,f,c
  8341  00131E  3223               	rrcf	??___flmul^0,f,c
  8342  001320  C023  F02E         	movff	??___flmul,___flmul@prod
  8343  001324  C024  F02F         	movff	??___flmul+1,___flmul@prod+1
  8344  001328  C025  F030         	movff	??___flmul+2,___flmul@prod+2
  8345  00132C  C026  F031         	movff	??___flmul+3,___flmul@prod+3
  8346  001330  4A32               	infsnz	___flmul@temp^0,f,c
  8347  001332  2A33               	incf	(___flmul@temp+1)^0,f,c
  8348  001334                     l2870:
  8349  001334  FFFF               	dw	65535	; assembler added errata NOP
  8350  001336  BE33               	btfsc	(___flmul@temp+1)^0,7,c
  8351  001338  EFA6  F009         	goto	u2761
  8352  00133C  5033               	movf	(___flmul@temp+1)^0,w,c
  8353  00133E  E109               	bnz	u2760
  8354  001340  2832               	incf	___flmul@temp^0,w,c
  8355  001342  A0D8               	btfss	status,0,c
  8356  001344  EFA6  F009         	goto	u2761
  8357  001348  EFA9  F009         	goto	u2760
  8358  00134C                     u2761:
  8359  00134C  FFFF               	dw	65535	; assembler added errata NOP
  8360  00134E  EFB4  F009         	goto	l2874
  8361  001352                     u2760:
  8362  001352  FFFF               	dw	65535	; assembler added errata NOP
  8363  001354  0E00               	movlw	0
  8364  001356  6E2E               	movwf	___flmul@prod^0,c
  8365  001358  0E00               	movlw	0
  8366  00135A  6E2F               	movwf	(___flmul@prod+1)^0,c
  8367  00135C  0E80               	movlw	128
  8368  00135E  6E30               	movwf	(___flmul@prod+2)^0,c
  8369  001360  0E7F               	movlw	127
  8370  001362  6E31               	movwf	(___flmul@prod+3)^0,c
  8371  001364  EFE9  F009         	goto	l2886
  8372  001368                     l2874:
  8373  001368  FFFF               	dw	65535	; assembler added errata NOP
  8374  00136A  BE33               	btfsc	(___flmul@temp+1)^0,7,c
  8375  00136C  EFC3  F009         	goto	u2770
  8376  001370  5033               	movf	(___flmul@temp+1)^0,w,c
  8377  001372  E106               	bnz	u2771
  8378  001374  0432               	decf	___flmul@temp^0,w,c
  8379  001376  B0D8               	btfsc	status,0,c
  8380  001378  EFC0  F009         	goto	u2771
  8381  00137C  EFC3  F009         	goto	u2770
  8382  001380                     u2771:
  8383  001380  FFFF               	dw	65535	; assembler added errata NOP
  8384  001382  EFD0  F009         	goto	l1076
  8385  001386                     u2770:
  8386  001386  FFFF               	dw	65535	; assembler added errata NOP
  8387  001388  0E00               	movlw	0
  8388  00138A  6E2E               	movwf	___flmul@prod^0,c
  8389  00138C  0E00               	movlw	0
  8390  00138E  6E2F               	movwf	(___flmul@prod+1)^0,c
  8391  001390  0E00               	movlw	0
  8392  001392  6E30               	movwf	(___flmul@prod+2)^0,c
  8393  001394  0E00               	movlw	0
  8394  001396  6E31               	movwf	(___flmul@prod+3)^0,c
  8395  001398  0E00               	movlw	0
  8396  00139A  6E27               	movwf	___flmul@sign^0,c
  8397  00139C  EFE9  F009         	goto	l2886
  8398  0013A0                     l1076:
  8399  0013A0  FFFF               	dw	65535	; assembler added errata NOP
  8400  0013A2  C032  F02D         	movff	___flmul@temp,___flmul@bexp
  8401  0013A6  0EFF               	movlw	255
  8402  0013A8  162E               	andwf	___flmul@prod^0,f,c
  8403  0013AA  0EFF               	movlw	255
  8404  0013AC  162F               	andwf	(___flmul@prod+1)^0,f,c
  8405  0013AE  0E7F               	movlw	127
  8406  0013B0  1630               	andwf	(___flmul@prod+2)^0,f,c
  8407  0013B2  0E00               	movlw	0
  8408  0013B4  1631               	andwf	(___flmul@prod+3)^0,f,c
  8409  0013B6  A02D               	btfss	___flmul@bexp^0,0,c
  8410  0013B8  EFE0  F009         	goto	u2781
  8411  0013BC  EFE3  F009         	goto	u2780
  8412  0013C0                     u2781:
  8413  0013C0  FFFF               	dw	65535	; assembler added errata NOP
  8414  0013C2  EFE5  F009         	goto	l2884
  8415  0013C6                     u2780:
  8416  0013C6  FFFF               	dw	65535	; assembler added errata NOP
  8417  0013C8  8E30               	bsf	(___flmul@prod+2)^0,7,c
  8418  0013CA                     l2884:
  8419  0013CA  FFFF               	dw	65535	; assembler added errata NOP
  8420  0013CC  90D8               	bcf	status,0,c
  8421  0013CE  302D               	rrcf	___flmul@bexp^0,w,c
  8422  0013D0  6E31               	movwf	(___flmul@prod+3)^0,c
  8423  0013D2                     l2886:
  8424  0013D2  FFFF               	dw	65535	; assembler added errata NOP
  8425  0013D4  5027               	movf	___flmul@sign^0,w,c
  8426  0013D6  1231               	iorwf	(___flmul@prod+3)^0,f,c
  8427  0013D8  C02E  F01B         	movff	___flmul@prod,?___flmul
  8428  0013DC  C02F  F01C         	movff	___flmul@prod+1,?___flmul+1
  8429  0013E0  C030  F01D         	movff	___flmul@prod+2,?___flmul+2
  8430  0013E4  C031  F01E         	movff	___flmul@prod+3,?___flmul+3
  8431  0013E8                     l1063:
  8432  0013E8  FFFF               	dw	65535	; assembler added errata NOP
  8433  0013EA  0012               	return		;funcret
  8434  0013EC  FFFF               	dw	65535	; errata NOP
  8435  0013EE                     __end_of___flmul:
  8436                           	callstack 0
  8437                           
  8438 ;; *************** function _configure_ad_conversion_tank *****************
  8439 ;; Defined at:
  8440 ;;		line 19 in file "oven.c"
  8441 ;; Parameters:    Size  Location     Type
  8442 ;;		None
  8443 ;; Auto vars:     Size  Location     Type
  8444 ;;		None
  8445 ;; Return value:  Size  Location     Type
  8446 ;;                  1    wreg      void 
  8447 ;; Registers used:
  8448 ;;		wreg, status,2
  8449 ;; Tracked objects:
  8450 ;;		On entry : 0/0
  8451 ;;		On exit  : 0/0
  8452 ;;		Unchanged: 0/0
  8453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8454 ;;      Params:         0       0       0       0       0       0       0
  8455 ;;      Locals:         0       0       0       0       0       0       0
  8456 ;;      Temps:          0       0       0       0       0       0       0
  8457 ;;      Totals:         0       0       0       0       0       0       0
  8458 ;;Total ram usage:        0 bytes
  8459 ;; Hardware stack levels used:    1
  8460 ;; Hardware stack levels required when called:    1
  8461 ;; This function calls:
  8462 ;;		Nothing
  8463 ;; This function is called by:
  8464 ;;		_main
  8465 ;; This function uses a non-reentrant model
  8466 ;;
  8467                           
  8468                           	psect	text33
  8469  002D3A                     __ptext33:
  8470                           	callstack 0
  8471  002D3A                     _configure_ad_conversion_tank:
  8472                           	callstack 0
  8473  002D3A  FFFF               	dw	65535	; assembler added errata NOP
  8474  002D3C                     
  8475                           ;oven.c: 20:     ADCON0 = 0;
  8476  002D3C  0E00               	movlw	0
  8477  002D3E  6EC2               	movwf	194,c	;volatile
  8478  002D40                     
  8479                           ;oven.c: 21:     ADCON0bits.CHS0 = 0;
  8480  002D40  96C2               	bcf	194,3,c	;volatile
  8481  002D42                     
  8482                           ;oven.c: 22:     ADCON0bits.CHS1 = 0;
  8483  002D42  98C2               	bcf	194,4,c	;volatile
  8484  002D44                     
  8485                           ;oven.c: 23:     ADCON0bits.CHS2 = 0;
  8486  002D44  9AC2               	bcf	194,5,c	;volatile
  8487  002D46                     
  8488                           ;oven.c: 24:     ADCON0bits.ADON = 1;
  8489  002D46  80C2               	bsf	194,0,c	;volatile
  8490                           
  8491                           ;oven.c: 25:     ADRESH = 0;
  8492  002D48  0E00               	movlw	0
  8493  002D4A  6EC4               	movwf	196,c	;volatile
  8494                           
  8495                           ;oven.c: 26:     ADRESL = 0;
  8496  002D4C  0E00               	movlw	0
  8497  002D4E  6EC3               	movwf	195,c	;volatile
  8498                           
  8499                           ;oven.c: 27:     ADCON1 = 0;
  8500  002D50  0E00               	movlw	0
  8501  002D52  6EC1               	movwf	193,c	;volatile
  8502  002D54  0012               	return		;funcret
  8503  002D56  FFFF               	dw	65535	; errata NOP
  8504  002D58                     __end_of_configure_ad_conversion_tank:
  8505                           	callstack 0
  8506                           
  8507 ;; *************** function _configure_ad_conversion_oven *****************
  8508 ;; Defined at:
  8509 ;;		line 8 in file "oven.c"
  8510 ;; Parameters:    Size  Location     Type
  8511 ;;		None
  8512 ;; Auto vars:     Size  Location     Type
  8513 ;;		None
  8514 ;; Return value:  Size  Location     Type
  8515 ;;                  1    wreg      void 
  8516 ;; Registers used:
  8517 ;;		wreg, status,2
  8518 ;; Tracked objects:
  8519 ;;		On entry : 0/0
  8520 ;;		On exit  : 0/0
  8521 ;;		Unchanged: 0/0
  8522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8523 ;;      Params:         0       0       0       0       0       0       0
  8524 ;;      Locals:         0       0       0       0       0       0       0
  8525 ;;      Temps:          0       0       0       0       0       0       0
  8526 ;;      Totals:         0       0       0       0       0       0       0
  8527 ;;Total ram usage:        0 bytes
  8528 ;; Hardware stack levels used:    1
  8529 ;; Hardware stack levels required when called:    1
  8530 ;; This function calls:
  8531 ;;		Nothing
  8532 ;; This function is called by:
  8533 ;;		_main
  8534 ;; This function uses a non-reentrant model
  8535 ;;
  8536                           
  8537                           	psect	text34
  8538  002D58                     __ptext34:
  8539                           	callstack 0
  8540  002D58                     _configure_ad_conversion_oven:
  8541                           	callstack 0
  8542  002D58  FFFF               	dw	65535	; assembler added errata NOP
  8543  002D5A                     
  8544                           ;oven.c: 9:     ADCON0 = 0;
  8545  002D5A  0E00               	movlw	0
  8546  002D5C  6EC2               	movwf	194,c	;volatile
  8547  002D5E                     
  8548                           ;oven.c: 10:     ADCON0bits.CHS0 = 0;
  8549  002D5E  96C2               	bcf	194,3,c	;volatile
  8550  002D60                     
  8551                           ;oven.c: 11:     ADCON0bits.CHS1 = 0;
  8552  002D60  98C2               	bcf	194,4,c	;volatile
  8553  002D62                     
  8554                           ;oven.c: 12:     ADCON0bits.CHS2 = 1;
  8555  002D62  8AC2               	bsf	194,5,c	;volatile
  8556  002D64                     
  8557                           ;oven.c: 13:     ADCON0bits.ADON = 1;
  8558  002D64  80C2               	bsf	194,0,c	;volatile
  8559                           
  8560                           ;oven.c: 14:     ADRESH = 0;
  8561  002D66  0E00               	movlw	0
  8562  002D68  6EC4               	movwf	196,c	;volatile
  8563                           
  8564                           ;oven.c: 15:     ADRESL = 0;
  8565  002D6A  0E00               	movlw	0
  8566  002D6C  6EC3               	movwf	195,c	;volatile
  8567                           
  8568                           ;oven.c: 16:     ADCON1 = 0;
  8569  002D6E  0E00               	movlw	0
  8570  002D70  6EC1               	movwf	193,c	;volatile
  8571  002D72  0012               	return		;funcret
  8572  002D74  FFFF               	dw	65535	; errata NOP
  8573  002D76                     __end_of_configure_ad_conversion_oven:
  8574                           	callstack 0
  8575                           
  8576 ;; *************** function _check_temperature *****************
  8577 ;; Defined at:
  8578 ;;		line 50 in file "oven.c"
  8579 ;; Parameters:    Size  Location     Type
  8580 ;;  temp_to_be_c    2  124[COMRAM] int 
  8581 ;; Auto vars:     Size  Location     Type
  8582 ;;  grad            4    0[BANK0 ] float 
  8583 ;; Return value:  Size  Location     Type
  8584 ;;                  2  124[COMRAM] int 
  8585 ;; Registers used:
  8586 ;;		wreg, status,2, status,0, cstack
  8587 ;; Tracked objects:
  8588 ;;		On entry : 0/0
  8589 ;;		On exit  : 0/0
  8590 ;;		Unchanged: 0/0
  8591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8592 ;;      Params:         2       0       0       0       0       0       0
  8593 ;;      Locals:         0       4       0       0       0       0       0
  8594 ;;      Temps:          0       0       0       0       0       0       0
  8595 ;;      Totals:         2       4       0       0       0       0       0
  8596 ;;Total ram usage:        6 bytes
  8597 ;; Hardware stack levels used:    1
  8598 ;; Hardware stack levels required when called:    2
  8599 ;; This function calls:
  8600 ;;		___awdiv
  8601 ;;		___flge
  8602 ;;		___xxtofl
  8603 ;;		_abs
  8604 ;; This function is called by:
  8605 ;;		_main
  8606 ;; This function uses a non-reentrant model
  8607 ;;
  8608                           
  8609                           	psect	text35
  8610  00239A                     __ptext35:
  8611                           	callstack 0
  8612  00239A                     _check_temperature:
  8613                           	callstack 0
  8614  00239A  FFFF               	dw	65535	; assembler added errata NOP
  8615  00239C                     
  8616                           ;oven.c: 51:     float grad = abs(temp_to_be_checked - (-63))/5;
  8617  00239C  0E00               	movlw	0
  8618  00239E  6E08               	movwf	(___awdiv@divisor+1)^0,c
  8619  0023A0  0E05               	movlw	5
  8620  0023A2  6E07               	movwf	___awdiv@divisor^0,c
  8621  0023A4  0E3F               	movlw	63
  8622  0023A6  247D               	addwf	check_temperature@temp_to_be_checked^0,w,c
  8623  0023A8  6E01               	movwf	abs@a^0,c
  8624  0023AA  0E00               	movlw	0
  8625  0023AC  207E               	addwfc	(check_temperature@temp_to_be_checked+1)^0,w,c
  8626  0023AE  6E02               	movwf	(abs@a+1)^0,c
  8627  0023B0  EC38  F015         	call	_abs	;wreg free
  8628  0023B4  C001  F005         	movff	?_abs,___awdiv@dividend
  8629  0023B8  C002  F006         	movff	?_abs+1,___awdiv@dividend+1
  8630  0023BC  ECE8  F010         	call	___awdiv	;wreg free
  8631  0023C0  C005  F00D         	movff	?___awdiv,___xxtofl@val
  8632  0023C4  C006  F00E         	movff	?___awdiv+1,___xxtofl@val+1
  8633  0023C8  0E00               	movlw	0
  8634  0023CA  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
  8635  0023CC  0EFF               	movlw	-1
  8636  0023CE  6E0F               	movwf	(___xxtofl@val+2)^0,c
  8637  0023D0  6E10               	movwf	(___xxtofl@val+3)^0,c
  8638  0023D2  0E01               	movlw	1
  8639  0023D4  EC06  F00E         	call	___xxtofl
  8640  0023D8  C00D  F0C2         	movff	?___xxtofl,check_temperature@grad
  8641  0023DC  C00E  F0C3         	movff	?___xxtofl+1,check_temperature@grad+1
  8642  0023E0  C00F  F0C4         	movff	?___xxtofl+2,check_temperature@grad+2
  8643  0023E4  C010  F0C5         	movff	?___xxtofl+3,check_temperature@grad+3
  8644                           
  8645                           ;oven.c: 52:     if (grad >= 12 && grad <= 13){
  8646  0023E8  C0C2  F071         	movff	check_temperature@grad,___flge@ff1
  8647  0023EC  C0C3  F072         	movff	check_temperature@grad+1,___flge@ff1+1
  8648  0023F0  C0C4  F073         	movff	check_temperature@grad+2,___flge@ff1+2
  8649  0023F4  C0C5  F074         	movff	check_temperature@grad+3,___flge@ff1+3
  8650  0023F8  0E00               	movlw	0
  8651  0023FA  6E75               	movwf	___flge@ff2^0,c
  8652  0023FC  0E00               	movlw	0
  8653  0023FE  6E76               	movwf	(___flge@ff2+1)^0,c
  8654  002400  0E40               	movlw	64
  8655  002402  6E77               	movwf	(___flge@ff2+2)^0,c
  8656  002404  0E41               	movlw	65
  8657  002406  6E78               	movwf	(___flge@ff2+3)^0,c
  8658  002408  EC54  F010         	call	___flge	;wreg free
  8659  00240C  A0D8               	btfss	status,0,c
  8660  00240E  EF0B  F012         	goto	u3391
  8661  002412  EF0E  F012         	goto	u3390
  8662  002416                     u3391:
  8663  002416  FFFF               	dw	65535	; assembler added errata NOP
  8664  002418  EF30  F012         	goto	l3366
  8665  00241C                     u3390:
  8666  00241C  FFFF               	dw	65535	; assembler added errata NOP
  8667  00241E  0E00               	movlw	0
  8668  002420  6E71               	movwf	___flge@ff1^0,c
  8669  002422  0E00               	movlw	0
  8670  002424  6E72               	movwf	(___flge@ff1+1)^0,c
  8671  002426  0E50               	movlw	80
  8672  002428  6E73               	movwf	(___flge@ff1+2)^0,c
  8673  00242A  0E41               	movlw	65
  8674  00242C  6E74               	movwf	(___flge@ff1+3)^0,c
  8675  00242E  C0C2  F075         	movff	check_temperature@grad,___flge@ff2
  8676  002432  C0C3  F076         	movff	check_temperature@grad+1,___flge@ff2+1
  8677  002436  C0C4  F077         	movff	check_temperature@grad+2,___flge@ff2+2
  8678  00243A  C0C5  F078         	movff	check_temperature@grad+3,___flge@ff2+3
  8679  00243E  EC54  F010         	call	___flge	;wreg free
  8680  002442  A0D8               	btfss	status,0,c
  8681  002444  EF26  F012         	goto	u3401
  8682  002448  EF29  F012         	goto	u3400
  8683  00244C                     u3401:
  8684  00244C  FFFF               	dw	65535	; assembler added errata NOP
  8685  00244E  EF30  F012         	goto	l3366
  8686  002452                     u3400:
  8687  002452  FFFF               	dw	65535	; assembler added errata NOP
  8688  002454                     
  8689                           ;oven.c: 53:         return 1;
  8690  002454  0E00               	movlw	0
  8691  002456  6E7E               	movwf	(?_check_temperature+1)^0,c
  8692  002458  0E01               	movlw	1
  8693  00245A  6E7D               	movwf	?_check_temperature^0,c
  8694  00245C  EF35  F012         	goto	l441
  8695  002460                     l3366:
  8696  002460  FFFF               	dw	65535	; assembler added errata NOP
  8697                           
  8698                           ;oven.c: 55:         return 0;
  8699  002462  0E00               	movlw	0
  8700  002464  6E7E               	movwf	(?_check_temperature+1)^0,c
  8701  002466  0E00               	movlw	0
  8702  002468  6E7D               	movwf	?_check_temperature^0,c
  8703  00246A                     l441:
  8704  00246A  FFFF               	dw	65535	; assembler added errata NOP
  8705  00246C  0012               	return		;funcret
  8706  00246E  FFFF               	dw	65535	; errata NOP
  8707  002470                     __end_of_check_temperature:
  8708                           	callstack 0
  8709                           
  8710 ;; *************** function _abs *****************
  8711 ;; Defined at:
  8712 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  8713 ;; Parameters:    Size  Location     Type
  8714 ;;  a               2    0[COMRAM] int 
  8715 ;; Auto vars:     Size  Location     Type
  8716 ;;		None
  8717 ;; Return value:  Size  Location     Type
  8718 ;;                  2    0[COMRAM] int 
  8719 ;; Registers used:
  8720 ;;		wreg, status,2, status,0
  8721 ;; Tracked objects:
  8722 ;;		On entry : 0/0
  8723 ;;		On exit  : 0/0
  8724 ;;		Unchanged: 0/0
  8725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8726 ;;      Params:         2       0       0       0       0       0       0
  8727 ;;      Locals:         0       0       0       0       0       0       0
  8728 ;;      Temps:          2       0       0       0       0       0       0
  8729 ;;      Totals:         4       0       0       0       0       0       0
  8730 ;;Total ram usage:        4 bytes
  8731 ;; Hardware stack levels used:    1
  8732 ;; Hardware stack levels required when called:    1
  8733 ;; This function calls:
  8734 ;;		Nothing
  8735 ;; This function is called by:
  8736 ;;		_check_temperature
  8737 ;; This function uses a non-reentrant model
  8738 ;;
  8739                           
  8740                           	psect	text36
  8741  002A70                     __ptext36:
  8742                           	callstack 0
  8743  002A70                     _abs:
  8744                           	callstack 0
  8745  002A70  FFFF               	dw	65535	; assembler added errata NOP
  8746  002A72  BE02               	btfsc	(abs@a+1)^0,7,c
  8747  002A74  EF47  F015         	goto	u3170
  8748  002A78  5002               	movf	(abs@a+1)^0,w,c
  8749  002A7A  E106               	bnz	u3171
  8750  002A7C  0401               	decf	abs@a^0,w,c
  8751  002A7E  B0D8               	btfsc	status,0,c
  8752  002A80  EF44  F015         	goto	u3171
  8753  002A84  EF47  F015         	goto	u3170
  8754  002A88                     u3171:
  8755  002A88  FFFF               	dw	65535	; assembler added errata NOP
  8756  002A8A  EF56  F015         	goto	l1120
  8757  002A8E                     u3170:
  8758  002A8E  FFFF               	dw	65535	; assembler added errata NOP
  8759  002A90  C001  F003         	movff	abs@a,??_abs
  8760  002A94  C002  F004         	movff	abs@a+1,??_abs+1
  8761  002A98  1E03               	comf	??_abs^0,f,c
  8762  002A9A  1E04               	comf	(??_abs+1)^0,f,c
  8763  002A9C  4A03               	infsnz	??_abs^0,f,c
  8764  002A9E  2A04               	incf	(??_abs+1)^0,f,c
  8765  002AA0  C003  F001         	movff	??_abs,?_abs
  8766  002AA4  C004  F002         	movff	??_abs+1,?_abs+1
  8767  002AA8  EF5B  F015         	goto	l1123
  8768  002AAC                     l1120:
  8769  002AAC  FFFF               	dw	65535	; assembler added errata NOP
  8770  002AAE  C001  F001         	movff	abs@a,?_abs
  8771  002AB2  C002  F002         	movff	abs@a+1,?_abs+1
  8772  002AB6                     l1123:
  8773  002AB6  FFFF               	dw	65535	; assembler added errata NOP
  8774  002AB8  0012               	return		;funcret
  8775  002ABA  FFFF               	dw	65535	; errata NOP
  8776  002ABC                     __end_of_abs:
  8777                           	callstack 0
  8778                           
  8779 ;; *************** function ___xxtofl *****************
  8780 ;; Defined at:
  8781 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  8782 ;; Parameters:    Size  Location     Type
  8783 ;;  sign            1    wreg     unsigned char 
  8784 ;;  val             4   12[COMRAM] long 
  8785 ;; Auto vars:     Size  Location     Type
  8786 ;;  sign            1   20[COMRAM] unsigned char 
  8787 ;;  arg             4   22[COMRAM] unsigned long 
  8788 ;;  exp             1   21[COMRAM] unsigned char 
  8789 ;; Return value:  Size  Location     Type
  8790 ;;                  4   12[COMRAM] unsigned char 
  8791 ;; Registers used:
  8792 ;;		wreg, status,2, status,0
  8793 ;; Tracked objects:
  8794 ;;		On entry : 0/0
  8795 ;;		On exit  : 0/0
  8796 ;;		Unchanged: 0/0
  8797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8798 ;;      Params:         4       0       0       0       0       0       0
  8799 ;;      Locals:         6       0       0       0       0       0       0
  8800 ;;      Temps:          4       0       0       0       0       0       0
  8801 ;;      Totals:        14       0       0       0       0       0       0
  8802 ;;Total ram usage:       14 bytes
  8803 ;; Hardware stack levels used:    1
  8804 ;; Hardware stack levels required when called:    1
  8805 ;; This function calls:
  8806 ;;		Nothing
  8807 ;; This function is called by:
  8808 ;;		_main
  8809 ;;		_get_temperature
  8810 ;;		_get_liters
  8811 ;;		_check_temperature
  8812 ;; This function uses a non-reentrant model
  8813 ;;
  8814                           
  8815                           	psect	text37
  8816  001C0C                     __ptext37:
  8817                           	callstack 0
  8818  001C0C                     ___xxtofl:
  8819                           	callstack 0
  8820  001C0C  FFFF               	dw	65535	; assembler added errata NOP
  8821                           
  8822                           ;incstack = 0
  8823                           ;___xxtofl@sign stored from wreg
  8824  001C0E  6E15               	movwf	___xxtofl@sign^0,c
  8825  001C10  5015               	movf	___xxtofl@sign^0,w,c
  8826  001C12  B4D8               	btfsc	status,2,c
  8827  001C14  EF0E  F00E         	goto	u2921
  8828  001C18  EF11  F00E         	goto	u2920
  8829  001C1C                     u2921:
  8830  001C1C  FFFF               	dw	65535	; assembler added errata NOP
  8831  001C1E  EF36  F00E         	goto	l1100
  8832  001C22                     u2920:
  8833  001C22  FFFF               	dw	65535	; assembler added errata NOP
  8834  001C24  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  8835  001C26  EF1A  F00E         	goto	u2930
  8836  001C2A  EF17  F00E         	goto	u2931
  8837  001C2E                     u2931:
  8838  001C2E  FFFF               	dw	65535	; assembler added errata NOP
  8839  001C30  EF36  F00E         	goto	l1100
  8840  001C34                     u2930:
  8841  001C34  FFFF               	dw	65535	; assembler added errata NOP
  8842  001C36  C00D  F011         	movff	___xxtofl@val,??___xxtofl
  8843  001C3A  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
  8844  001C3E  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
  8845  001C42  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
  8846  001C46  1E11               	comf	??___xxtofl^0,f,c
  8847  001C48  1E12               	comf	(??___xxtofl+1)^0,f,c
  8848  001C4A  1E13               	comf	(??___xxtofl+2)^0,f,c
  8849  001C4C  1E14               	comf	(??___xxtofl+3)^0,f,c
  8850  001C4E  2A11               	incf	??___xxtofl^0,f,c
  8851  001C50  0E00               	movlw	0
  8852  001C52  2212               	addwfc	(??___xxtofl+1)^0,f,c
  8853  001C54  2213               	addwfc	(??___xxtofl+2)^0,f,c
  8854  001C56  2214               	addwfc	(??___xxtofl+3)^0,f,c
  8855  001C58  C011  F017         	movff	??___xxtofl,___xxtofl@arg
  8856  001C5C  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
  8857  001C60  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
  8858  001C64  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
  8859  001C68  EF3F  F00E         	goto	l2978
  8860  001C6C                     l1100:
  8861  001C6C  FFFF               	dw	65535	; assembler added errata NOP
  8862  001C6E  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
  8863  001C72  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8864  001C76  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8865  001C7A  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8866  001C7E                     l2978:
  8867  001C7E  FFFF               	dw	65535	; assembler added errata NOP
  8868  001C80  500D               	movf	___xxtofl@val^0,w,c
  8869  001C82  100E               	iorwf	(___xxtofl@val+1)^0,w,c
  8870  001C84  100F               	iorwf	(___xxtofl@val+2)^0,w,c
  8871  001C86  1010               	iorwf	(___xxtofl@val+3)^0,w,c
  8872  001C88  A4D8               	btfss	status,2,c
  8873  001C8A  EF49  F00E         	goto	u2941
  8874  001C8E  EF4C  F00E         	goto	u2940
  8875  001C92                     u2941:
  8876  001C92  FFFF               	dw	65535	; assembler added errata NOP
  8877  001C94  EF57  F00E         	goto	l2984
  8878  001C98                     u2940:
  8879  001C98  FFFF               	dw	65535	; assembler added errata NOP
  8880  001C9A  0E00               	movlw	0
  8881  001C9C  6E0D               	movwf	?___xxtofl^0,c
  8882  001C9E  0E00               	movlw	0
  8883  001CA0  6E0E               	movwf	(?___xxtofl+1)^0,c
  8884  001CA2  0E00               	movlw	0
  8885  001CA4  6E0F               	movwf	(?___xxtofl+2)^0,c
  8886  001CA6  0E00               	movlw	0
  8887  001CA8  6E10               	movwf	(?___xxtofl+3)^0,c
  8888  001CAA  EFFF  F00E         	goto	l1103
  8889  001CAE                     l2984:
  8890  001CAE  FFFF               	dw	65535	; assembler added errata NOP
  8891  001CB0  0E96               	movlw	150
  8892  001CB2  6E16               	movwf	___xxtofl@exp^0,c
  8893  001CB4  EF63  F00E         	goto	l2988
  8894  001CB8                     l2986:
  8895  001CB8  FFFF               	dw	65535	; assembler added errata NOP
  8896  001CBA  2A16               	incf	___xxtofl@exp^0,f,c
  8897  001CBC  90D8               	bcf	status,0,c
  8898  001CBE  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  8899  001CC0  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  8900  001CC2  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  8901  001CC4  3217               	rrcf	___xxtofl@arg^0,f,c
  8902  001CC6                     l2988:
  8903  001CC6  FFFF               	dw	65535	; assembler added errata NOP
  8904  001CC8  0E00               	movlw	0
  8905  001CCA  1417               	andwf	___xxtofl@arg^0,w,c
  8906  001CCC  6E11               	movwf	??___xxtofl^0,c
  8907  001CCE  0E00               	movlw	0
  8908  001CD0  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  8909  001CD2  6E12               	movwf	(??___xxtofl+1)^0,c
  8910  001CD4  0E00               	movlw	0
  8911  001CD6  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  8912  001CD8  6E13               	movwf	(??___xxtofl+2)^0,c
  8913  001CDA  0EFE               	movlw	254
  8914  001CDC  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  8915  001CDE  6E14               	movwf	(??___xxtofl+3)^0,c
  8916  001CE0  5011               	movf	??___xxtofl^0,w,c
  8917  001CE2  1012               	iorwf	(??___xxtofl+1)^0,w,c
  8918  001CE4  1013               	iorwf	(??___xxtofl+2)^0,w,c
  8919  001CE6  1014               	iorwf	(??___xxtofl+3)^0,w,c
  8920  001CE8  A4D8               	btfss	status,2,c
  8921  001CEA  EF79  F00E         	goto	u2951
  8922  001CEE  EF7C  F00E         	goto	u2950
  8923  001CF2                     u2951:
  8924  001CF2  FFFF               	dw	65535	; assembler added errata NOP
  8925  001CF4  EF5C  F00E         	goto	l2986
  8926  001CF8                     u2950:
  8927  001CF8  FFFF               	dw	65535	; assembler added errata NOP
  8928  001CFA  EF8C  F00E         	goto	l1107
  8929  001CFE                     l2990:
  8930  001CFE  FFFF               	dw	65535	; assembler added errata NOP
  8931  001D00  2A16               	incf	___xxtofl@exp^0,f,c
  8932  001D02  0E01               	movlw	1
  8933  001D04  2617               	addwf	___xxtofl@arg^0,f,c
  8934  001D06  0E00               	movlw	0
  8935  001D08  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
  8936  001D0A  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
  8937  001D0C  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
  8938  001D0E  90D8               	bcf	status,0,c
  8939  001D10  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  8940  001D12  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  8941  001D14  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  8942  001D16  3217               	rrcf	___xxtofl@arg^0,f,c
  8943  001D18                     l1107:
  8944  001D18  FFFF               	dw	65535	; assembler added errata NOP
  8945  001D1A  0E00               	movlw	0
  8946  001D1C  1417               	andwf	___xxtofl@arg^0,w,c
  8947  001D1E  6E11               	movwf	??___xxtofl^0,c
  8948  001D20  0E00               	movlw	0
  8949  001D22  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  8950  001D24  6E12               	movwf	(??___xxtofl+1)^0,c
  8951  001D26  0E00               	movlw	0
  8952  001D28  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  8953  001D2A  6E13               	movwf	(??___xxtofl+2)^0,c
  8954  001D2C  0EFF               	movlw	255
  8955  001D2E  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  8956  001D30  6E14               	movwf	(??___xxtofl+3)^0,c
  8957  001D32  5011               	movf	??___xxtofl^0,w,c
  8958  001D34  1012               	iorwf	(??___xxtofl+1)^0,w,c
  8959  001D36  1013               	iorwf	(??___xxtofl+2)^0,w,c
  8960  001D38  1014               	iorwf	(??___xxtofl+3)^0,w,c
  8961  001D3A  A4D8               	btfss	status,2,c
  8962  001D3C  EFA2  F00E         	goto	u2961
  8963  001D40  EFA5  F00E         	goto	u2960
  8964  001D44                     u2961:
  8965  001D44  FFFF               	dw	65535	; assembler added errata NOP
  8966  001D46  EF7F  F00E         	goto	l2990
  8967  001D4A                     u2960:
  8968  001D4A  FFFF               	dw	65535	; assembler added errata NOP
  8969  001D4C  EFAF  F00E         	goto	l2998
  8970  001D50                     l2996:
  8971  001D50  FFFF               	dw	65535	; assembler added errata NOP
  8972  001D52  0616               	decf	___xxtofl@exp^0,f,c
  8973  001D54  90D8               	bcf	status,0,c
  8974  001D56  3617               	rlcf	___xxtofl@arg^0,f,c
  8975  001D58  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
  8976  001D5A  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
  8977  001D5C  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
  8978  001D5E                     l2998:
  8979  001D5E  FFFF               	dw	65535	; assembler added errata NOP
  8980  001D60  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
  8981  001D62  EFB5  F00E         	goto	u2971
  8982  001D66  EFB8  F00E         	goto	u2970
  8983  001D6A                     u2971:
  8984  001D6A  FFFF               	dw	65535	; assembler added errata NOP
  8985  001D6C  EFC2  F00E         	goto	l1114
  8986  001D70                     u2970:
  8987  001D70  FFFF               	dw	65535	; assembler added errata NOP
  8988  001D72  0E02               	movlw	2
  8989  001D74  6016               	cpfslt	___xxtofl@exp^0,c
  8990  001D76  EFBF  F00E         	goto	u2981
  8991  001D7A  EFC2  F00E         	goto	u2980
  8992  001D7E                     u2981:
  8993  001D7E  FFFF               	dw	65535	; assembler added errata NOP
  8994  001D80  EFA8  F00E         	goto	l2996
  8995  001D84                     u2980:
  8996  001D84                     l1114:
  8997  001D84  FFFF               	dw	65535	; assembler added errata NOP
  8998  001D86  B016               	btfsc	___xxtofl@exp^0,0,c
  8999  001D88  EFC8  F00E         	goto	u2991
  9000  001D8C  EFCB  F00E         	goto	u2990
  9001  001D90                     u2991:
  9002  001D90  FFFF               	dw	65535	; assembler added errata NOP
  9003  001D92  EFCD  F00E         	goto	l3004
  9004  001D96                     u2990:
  9005  001D96  FFFF               	dw	65535	; assembler added errata NOP
  9006  001D98  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
  9007  001D9A                     l3004:
  9008  001D9A  FFFF               	dw	65535	; assembler added errata NOP
  9009  001D9C  90D8               	bcf	status,0,c
  9010  001D9E  3216               	rrcf	___xxtofl@exp^0,f,c
  9011  001DA0  C016  F011         	movff	___xxtofl@exp,??___xxtofl
  9012  001DA4  6A12               	clrf	(??___xxtofl+1)^0,c
  9013  001DA6  6A13               	clrf	(??___xxtofl+2)^0,c
  9014  001DA8  6A14               	clrf	(??___xxtofl+3)^0,c
  9015  001DAA  C011  F014         	movff	??___xxtofl,??___xxtofl+3
  9016  001DAE  6A13               	clrf	(??___xxtofl+2)^0,c
  9017  001DB0  6A12               	clrf	(??___xxtofl+1)^0,c
  9018  001DB2  6A11               	clrf	??___xxtofl^0,c
  9019  001DB4  5011               	movf	??___xxtofl^0,w,c
  9020  001DB6  1217               	iorwf	___xxtofl@arg^0,f,c
  9021  001DB8  5012               	movf	(??___xxtofl+1)^0,w,c
  9022  001DBA  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
  9023  001DBC  5013               	movf	(??___xxtofl+2)^0,w,c
  9024  001DBE  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
  9025  001DC0  5014               	movf	(??___xxtofl+3)^0,w,c
  9026  001DC2  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
  9027  001DC4  5015               	movf	___xxtofl@sign^0,w,c
  9028  001DC6  B4D8               	btfsc	status,2,c
  9029  001DC8  EFE8  F00E         	goto	u3001
  9030  001DCC  EFEB  F00E         	goto	u3000
  9031  001DD0                     u3001:
  9032  001DD0  FFFF               	dw	65535	; assembler added errata NOP
  9033  001DD2  EFF6  F00E         	goto	l3014
  9034  001DD6                     u3000:
  9035  001DD6  FFFF               	dw	65535	; assembler added errata NOP
  9036  001DD8  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  9037  001DDA  EFF4  F00E         	goto	u3010
  9038  001DDE  EFF1  F00E         	goto	u3011
  9039  001DE2                     u3011:
  9040  001DE2  FFFF               	dw	65535	; assembler added errata NOP
  9041  001DE4  EFF6  F00E         	goto	l3014
  9042  001DE8                     u3010:
  9043  001DE8  FFFF               	dw	65535	; assembler added errata NOP
  9044  001DEA  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
  9045  001DEC                     l3014:
  9046  001DEC  FFFF               	dw	65535	; assembler added errata NOP
  9047  001DEE  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
  9048  001DF2  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
  9049  001DF6  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
  9050  001DFA  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
  9051  001DFE                     l1103:
  9052  001DFE  FFFF               	dw	65535	; assembler added errata NOP
  9053  001E00  0012               	return		;funcret
  9054  001E02  FFFF               	dw	65535	; errata NOP
  9055  001E04                     __end_of___xxtofl:
  9056                           	callstack 0
  9057                           
  9058 ;; *************** function ___flge *****************
  9059 ;; Defined at:
  9060 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
  9061 ;; Parameters:    Size  Location     Type
  9062 ;;  ff1             4  112[COMRAM] unsigned char 
  9063 ;;  ff2             4  116[COMRAM] unsigned char 
  9064 ;; Auto vars:     Size  Location     Type
  9065 ;;		None
  9066 ;; Return value:  Size  Location     Type
  9067 ;;		None               void
  9068 ;; Registers used:
  9069 ;;		wreg, status,2, status,0
  9070 ;; Tracked objects:
  9071 ;;		On entry : 0/0
  9072 ;;		On exit  : 0/0
  9073 ;;		Unchanged: 0/0
  9074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9075 ;;      Params:         8       0       0       0       0       0       0
  9076 ;;      Locals:         0       0       0       0       0       0       0
  9077 ;;      Temps:          4       0       0       0       0       0       0
  9078 ;;      Totals:        12       0       0       0       0       0       0
  9079 ;;Total ram usage:       12 bytes
  9080 ;; Hardware stack levels used:    1
  9081 ;; Hardware stack levels required when called:    1
  9082 ;; This function calls:
  9083 ;;		Nothing
  9084 ;; This function is called by:
  9085 ;;		_main
  9086 ;;		_check_temperature
  9087 ;;		_roundf
  9088 ;; This function uses a non-reentrant model
  9089 ;;
  9090                           
  9091                           	psect	text38
  9092  0020A8                     __ptext38:
  9093                           	callstack 0
  9094  0020A8                     ___flge:
  9095                           	callstack 0
  9096  0020A8  FFFF               	dw	65535	; assembler added errata NOP
  9097  0020AA  0E00               	movlw	0
  9098  0020AC  1471               	andwf	___flge@ff1^0,w,c
  9099  0020AE  6E79               	movwf	??___flge^0,c
  9100  0020B0  0E00               	movlw	0
  9101  0020B2  1472               	andwf	(___flge@ff1+1)^0,w,c
  9102  0020B4  6E7A               	movwf	(??___flge+1)^0,c
  9103  0020B6  0E80               	movlw	128
  9104  0020B8  1473               	andwf	(___flge@ff1+2)^0,w,c
  9105  0020BA  6E7B               	movwf	(??___flge+2)^0,c
  9106  0020BC  0E7F               	movlw	127
  9107  0020BE  1474               	andwf	(___flge@ff1+3)^0,w,c
  9108  0020C0  6E7C               	movwf	(??___flge+3)^0,c
  9109  0020C2  5079               	movf	??___flge^0,w,c
  9110  0020C4  107A               	iorwf	(??___flge+1)^0,w,c
  9111  0020C6  107B               	iorwf	(??___flge+2)^0,w,c
  9112  0020C8  107C               	iorwf	(??___flge+3)^0,w,c
  9113  0020CA  A4D8               	btfss	status,2,c
  9114  0020CC  EF6A  F010         	goto	u2791
  9115  0020D0  EF6D  F010         	goto	u2790
  9116  0020D4                     u2791:
  9117  0020D4  FFFF               	dw	65535	; assembler added errata NOP
  9118  0020D6  EF76  F010         	goto	l2902
  9119  0020DA                     u2790:
  9120  0020DA  FFFF               	dw	65535	; assembler added errata NOP
  9121  0020DC  0E00               	movlw	0
  9122  0020DE  6E71               	movwf	___flge@ff1^0,c
  9123  0020E0  0E00               	movlw	0
  9124  0020E2  6E72               	movwf	(___flge@ff1+1)^0,c
  9125  0020E4  0E00               	movlw	0
  9126  0020E6  6E73               	movwf	(___flge@ff1+2)^0,c
  9127  0020E8  0E00               	movlw	0
  9128  0020EA  6E74               	movwf	(___flge@ff1+3)^0,c
  9129  0020EC                     l2902:
  9130  0020EC  FFFF               	dw	65535	; assembler added errata NOP
  9131  0020EE  0E00               	movlw	0
  9132  0020F0  1475               	andwf	___flge@ff2^0,w,c
  9133  0020F2  6E79               	movwf	??___flge^0,c
  9134  0020F4  0E00               	movlw	0
  9135  0020F6  1476               	andwf	(___flge@ff2+1)^0,w,c
  9136  0020F8  6E7A               	movwf	(??___flge+1)^0,c
  9137  0020FA  0E80               	movlw	128
  9138  0020FC  1477               	andwf	(___flge@ff2+2)^0,w,c
  9139  0020FE  6E7B               	movwf	(??___flge+2)^0,c
  9140  002100  0E7F               	movlw	127
  9141  002102  1478               	andwf	(___flge@ff2+3)^0,w,c
  9142  002104  6E7C               	movwf	(??___flge+3)^0,c
  9143  002106  5079               	movf	??___flge^0,w,c
  9144  002108  107A               	iorwf	(??___flge+1)^0,w,c
  9145  00210A  107B               	iorwf	(??___flge+2)^0,w,c
  9146  00210C  107C               	iorwf	(??___flge+3)^0,w,c
  9147  00210E  A4D8               	btfss	status,2,c
  9148  002110  EF8C  F010         	goto	u2801
  9149  002114  EF8F  F010         	goto	u2800
  9150  002118                     u2801:
  9151  002118  FFFF               	dw	65535	; assembler added errata NOP
  9152  00211A  EF98  F010         	goto	l2906
  9153  00211E                     u2800:
  9154  00211E  FFFF               	dw	65535	; assembler added errata NOP
  9155  002120  0E00               	movlw	0
  9156  002122  6E75               	movwf	___flge@ff2^0,c
  9157  002124  0E00               	movlw	0
  9158  002126  6E76               	movwf	(___flge@ff2+1)^0,c
  9159  002128  0E00               	movlw	0
  9160  00212A  6E77               	movwf	(___flge@ff2+2)^0,c
  9161  00212C  0E00               	movlw	0
  9162  00212E  6E78               	movwf	(___flge@ff2+3)^0,c
  9163  002130                     l2906:
  9164  002130  FFFF               	dw	65535	; assembler added errata NOP
  9165  002132  AE74               	btfss	(___flge@ff1+3)^0,7,c
  9166  002134  EF9E  F010         	goto	u2811
  9167  002138  EFA1  F010         	goto	u2810
  9168  00213C                     u2811:
  9169  00213C  FFFF               	dw	65535	; assembler added errata NOP
  9170  00213E  EFAB  F010         	goto	l2910
  9171  002142                     u2810:
  9172  002142  FFFF               	dw	65535	; assembler added errata NOP
  9173  002144  6C71               	negf	___flge@ff1^0,c
  9174  002146  1E72               	comf	(___flge@ff1+1)^0,f,c
  9175  002148  B0D8               	btfsc	status,0,c
  9176  00214A  2A72               	incf	(___flge@ff1+1)^0,f,c
  9177  00214C  1E73               	comf	(___flge@ff1+2)^0,f,c
  9178  00214E  B0D8               	btfsc	status,0,c
  9179  002150  2A73               	incf	(___flge@ff1+2)^0,f,c
  9180  002152  0E80               	movlw	128
  9181  002154  5674               	subfwb	(___flge@ff1+3)^0,f,c
  9182  002156                     l2910:
  9183  002156  FFFF               	dw	65535	; assembler added errata NOP
  9184  002158  AE78               	btfss	(___flge@ff2+3)^0,7,c
  9185  00215A  EFB1  F010         	goto	u2821
  9186  00215E  EFB4  F010         	goto	u2820
  9187  002162                     u2821:
  9188  002162  FFFF               	dw	65535	; assembler added errata NOP
  9189  002164  EFBE  F010         	goto	l710
  9190  002168                     u2820:
  9191  002168  FFFF               	dw	65535	; assembler added errata NOP
  9192  00216A  6C75               	negf	___flge@ff2^0,c
  9193  00216C  1E76               	comf	(___flge@ff2+1)^0,f,c
  9194  00216E  B0D8               	btfsc	status,0,c
  9195  002170  2A76               	incf	(___flge@ff2+1)^0,f,c
  9196  002172  1E77               	comf	(___flge@ff2+2)^0,f,c
  9197  002174  B0D8               	btfsc	status,0,c
  9198  002176  2A77               	incf	(___flge@ff2+2)^0,f,c
  9199  002178  0E80               	movlw	128
  9200  00217A  5678               	subfwb	(___flge@ff2+3)^0,f,c
  9201  00217C                     l710:
  9202  00217C  FFFF               	dw	65535	; assembler added errata NOP
  9203  00217E  0E00               	movlw	0
  9204  002180  1A71               	xorwf	___flge@ff1^0,f,c
  9205  002182  0E00               	movlw	0
  9206  002184  1A72               	xorwf	(___flge@ff1+1)^0,f,c
  9207  002186  0E00               	movlw	0
  9208  002188  1A73               	xorwf	(___flge@ff1+2)^0,f,c
  9209  00218A  0E80               	movlw	128
  9210  00218C  1A74               	xorwf	(___flge@ff1+3)^0,f,c
  9211  00218E  0E00               	movlw	0
  9212  002190  1A75               	xorwf	___flge@ff2^0,f,c
  9213  002192  0E00               	movlw	0
  9214  002194  1A76               	xorwf	(___flge@ff2+1)^0,f,c
  9215  002196  0E00               	movlw	0
  9216  002198  1A77               	xorwf	(___flge@ff2+2)^0,f,c
  9217  00219A  0E80               	movlw	128
  9218  00219C  1A78               	xorwf	(___flge@ff2+3)^0,f,c
  9219  00219E  5075               	movf	___flge@ff2^0,w,c
  9220  0021A0  5C71               	subwf	___flge@ff1^0,w,c
  9221  0021A2  5076               	movf	(___flge@ff2+1)^0,w,c
  9222  0021A4  5872               	subwfb	(___flge@ff1+1)^0,w,c
  9223  0021A6  5077               	movf	(___flge@ff2+2)^0,w,c
  9224  0021A8  5873               	subwfb	(___flge@ff1+2)^0,w,c
  9225  0021AA  5078               	movf	(___flge@ff2+3)^0,w,c
  9226  0021AC  5874               	subwfb	(___flge@ff1+3)^0,w,c
  9227  0021AE  B0D8               	btfsc	status,0,c
  9228  0021B0  EFDC  F010         	goto	u2831
  9229  0021B4  EFDF  F010         	goto	u2830
  9230  0021B8                     u2831:
  9231  0021B8  FFFF               	dw	65535	; assembler added errata NOP
  9232  0021BA  EFE3  F010         	goto	l2916
  9233  0021BE                     u2830:
  9234  0021BE  FFFF               	dw	65535	; assembler added errata NOP
  9235  0021C0  90D8               	bcf	status,0,c
  9236  0021C2  EFE5  F010         	goto	l715
  9237  0021C6                     l2916:
  9238  0021C6  FFFF               	dw	65535	; assembler added errata NOP
  9239  0021C8  80D8               	bsf	status,0,c
  9240  0021CA                     l715:
  9241  0021CA  FFFF               	dw	65535	; assembler added errata NOP
  9242  0021CC  0012               	return		;funcret
  9243  0021CE  FFFF               	dw	65535	; errata NOP
  9244  0021D0                     __end_of___flge:
  9245                           	callstack 0
  9246                           
  9247 ;; *************** function ___awdiv *****************
  9248 ;; Defined at:
  9249 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  9250 ;; Parameters:    Size  Location     Type
  9251 ;;  dividend        2    4[COMRAM] int 
  9252 ;;  divisor         2    6[COMRAM] int 
  9253 ;; Auto vars:     Size  Location     Type
  9254 ;;  quotient        2   10[COMRAM] int 
  9255 ;;  sign            1    9[COMRAM] unsigned char 
  9256 ;;  counter         1    8[COMRAM] unsigned char 
  9257 ;; Return value:  Size  Location     Type
  9258 ;;                  2    4[COMRAM] int 
  9259 ;; Registers used:
  9260 ;;		wreg, status,2, status,0
  9261 ;; Tracked objects:
  9262 ;;		On entry : 0/0
  9263 ;;		On exit  : 0/0
  9264 ;;		Unchanged: 0/0
  9265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9266 ;;      Params:         4       0       0       0       0       0       0
  9267 ;;      Locals:         4       0       0       0       0       0       0
  9268 ;;      Temps:          0       0       0       0       0       0       0
  9269 ;;      Totals:         8       0       0       0       0       0       0
  9270 ;;Total ram usage:        8 bytes
  9271 ;; Hardware stack levels used:    1
  9272 ;; Hardware stack levels required when called:    1
  9273 ;; This function calls:
  9274 ;;		Nothing
  9275 ;; This function is called by:
  9276 ;;		_check_temperature
  9277 ;; This function uses a non-reentrant model
  9278 ;;
  9279                           
  9280                           	psect	text39
  9281  0021D0                     __ptext39:
  9282                           	callstack 0
  9283  0021D0                     ___awdiv:
  9284                           	callstack 0
  9285  0021D0  FFFF               	dw	65535	; assembler added errata NOP
  9286  0021D2  0E00               	movlw	0
  9287  0021D4  6E0A               	movwf	___awdiv@sign^0,c
  9288  0021D6  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  9289  0021D8  EFF3  F010         	goto	u3180
  9290  0021DC  EFF0  F010         	goto	u3181
  9291  0021E0                     u3181:
  9292  0021E0  FFFF               	dw	65535	; assembler added errata NOP
  9293  0021E2  EFFA  F010         	goto	l3130
  9294  0021E6                     u3180:
  9295  0021E6  FFFF               	dw	65535	; assembler added errata NOP
  9296  0021E8  6C07               	negf	___awdiv@divisor^0,c
  9297  0021EA  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  9298  0021EC  B0D8               	btfsc	status,0,c
  9299  0021EE  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  9300  0021F0  0E01               	movlw	1
  9301  0021F2  6E0A               	movwf	___awdiv@sign^0,c
  9302  0021F4                     l3130:
  9303  0021F4  FFFF               	dw	65535	; assembler added errata NOP
  9304  0021F6  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  9305  0021F8  EF03  F011         	goto	u3190
  9306  0021FC  EF00  F011         	goto	u3191
  9307  002200                     u3191:
  9308  002200  FFFF               	dw	65535	; assembler added errata NOP
  9309  002202  EF0A  F011         	goto	l3136
  9310  002206                     u3190:
  9311  002206  FFFF               	dw	65535	; assembler added errata NOP
  9312  002208  6C05               	negf	___awdiv@dividend^0,c
  9313  00220A  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  9314  00220C  B0D8               	btfsc	status,0,c
  9315  00220E  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  9316  002210  0E01               	movlw	1
  9317  002212  1A0A               	xorwf	___awdiv@sign^0,f,c
  9318  002214                     l3136:
  9319  002214  FFFF               	dw	65535	; assembler added errata NOP
  9320  002216  0E00               	movlw	0
  9321  002218  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  9322  00221A  0E00               	movlw	0
  9323  00221C  6E0B               	movwf	___awdiv@quotient^0,c
  9324  00221E  5007               	movf	___awdiv@divisor^0,w,c
  9325  002220  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  9326  002222  B4D8               	btfsc	status,2,c
  9327  002224  EF16  F011         	goto	u3201
  9328  002228  EF19  F011         	goto	u3200
  9329  00222C                     u3201:
  9330  00222C  FFFF               	dw	65535	; assembler added errata NOP
  9331  00222E  EF4A  F011         	goto	l3158
  9332  002232                     u3200:
  9333  002232  FFFF               	dw	65535	; assembler added errata NOP
  9334  002234  0E01               	movlw	1
  9335  002236  6E09               	movwf	___awdiv@counter^0,c
  9336  002238  EF23  F011         	goto	l3144
  9337  00223C                     l3142:
  9338  00223C  FFFF               	dw	65535	; assembler added errata NOP
  9339  00223E  90D8               	bcf	status,0,c
  9340  002240  3607               	rlcf	___awdiv@divisor^0,f,c
  9341  002242  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  9342  002244  2A09               	incf	___awdiv@counter^0,f,c
  9343  002246                     l3144:
  9344  002246  FFFF               	dw	65535	; assembler added errata NOP
  9345  002248  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  9346  00224A  EF29  F011         	goto	u3211
  9347  00224E  EF2C  F011         	goto	u3210
  9348  002252                     u3211:
  9349  002252  FFFF               	dw	65535	; assembler added errata NOP
  9350  002254  EF1E  F011         	goto	l3142
  9351  002258                     u3210:
  9352  002258  FFFF               	dw	65535	; assembler added errata NOP
  9353  00225A                     l3146:
  9354  00225A  FFFF               	dw	65535	; assembler added errata NOP
  9355  00225C  90D8               	bcf	status,0,c
  9356  00225E  360B               	rlcf	___awdiv@quotient^0,f,c
  9357  002260  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  9358  002262  5007               	movf	___awdiv@divisor^0,w,c
  9359  002264  5C05               	subwf	___awdiv@dividend^0,w,c
  9360  002266  5008               	movf	(___awdiv@divisor+1)^0,w,c
  9361  002268  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  9362  00226A  A0D8               	btfss	status,0,c
  9363  00226C  EF3A  F011         	goto	u3221
  9364  002270  EF3D  F011         	goto	u3220
  9365  002274                     u3221:
  9366  002274  FFFF               	dw	65535	; assembler added errata NOP
  9367  002276  EF43  F011         	goto	l3154
  9368  00227A                     u3220:
  9369  00227A  FFFF               	dw	65535	; assembler added errata NOP
  9370  00227C  5007               	movf	___awdiv@divisor^0,w,c
  9371  00227E  5E05               	subwf	___awdiv@dividend^0,f,c
  9372  002280  5008               	movf	(___awdiv@divisor+1)^0,w,c
  9373  002282  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  9374  002284  800B               	bsf	___awdiv@quotient^0,0,c
  9375  002286                     l3154:
  9376  002286  FFFF               	dw	65535	; assembler added errata NOP
  9377  002288  90D8               	bcf	status,0,c
  9378  00228A  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  9379  00228C  3207               	rrcf	___awdiv@divisor^0,f,c
  9380  00228E  2E09               	decfsz	___awdiv@counter^0,f,c
  9381  002290  EF2D  F011         	goto	l3146
  9382  002294                     l3158:
  9383  002294  FFFF               	dw	65535	; assembler added errata NOP
  9384  002296  500A               	movf	___awdiv@sign^0,w,c
  9385  002298  B4D8               	btfsc	status,2,c
  9386  00229A  EF51  F011         	goto	u3231
  9387  00229E  EF54  F011         	goto	u3230
  9388  0022A2                     u3231:
  9389  0022A2  FFFF               	dw	65535	; assembler added errata NOP
  9390  0022A4  EF59  F011         	goto	l3162
  9391  0022A8                     u3230:
  9392  0022A8  FFFF               	dw	65535	; assembler added errata NOP
  9393  0022AA  6C0B               	negf	___awdiv@quotient^0,c
  9394  0022AC  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  9395  0022AE  B0D8               	btfsc	status,0,c
  9396  0022B0  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  9397  0022B2                     l3162:
  9398  0022B2  FFFF               	dw	65535	; assembler added errata NOP
  9399  0022B4  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  9400  0022B8  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  9401  0022BC  0012               	return		;funcret
  9402  0022BE  FFFF               	dw	65535	; errata NOP
  9403  0022C0                     __end_of___awdiv:
  9404                           	callstack 0
  9405                           
  9406 ;; *************** function _change_direction *****************
  9407 ;; Defined at:
  9408 ;;		line 41 in file "stepper_motor.c"
  9409 ;; Parameters:    Size  Location     Type
  9410 ;;  stepper_moto    2    0[COMRAM] PTR struct .
  9411 ;;		 -> joint_dilutor_stepper(12), end_effector_stepper(12), joint_stepper(12), 
  9412 ;; Auto vars:     Size  Location     Type
  9413 ;;		None
  9414 ;; Return value:  Size  Location     Type
  9415 ;;                  1    wreg      void 
  9416 ;; Registers used:
  9417 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9418 ;; Tracked objects:
  9419 ;;		On entry : 0/0
  9420 ;;		On exit  : 0/0
  9421 ;;		Unchanged: 0/0
  9422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9423 ;;      Params:         2       0       0       0       0       0       0
  9424 ;;      Locals:         0       0       0       0       0       0       0
  9425 ;;      Temps:          2       0       0       0       0       0       0
  9426 ;;      Totals:         4       0       0       0       0       0       0
  9427 ;;Total ram usage:        4 bytes
  9428 ;; Hardware stack levels used:    1
  9429 ;; Hardware stack levels required when called:    1
  9430 ;; This function calls:
  9431 ;;		Nothing
  9432 ;; This function is called by:
  9433 ;;		_main
  9434 ;; This function uses a non-reentrant model
  9435 ;;
  9436                           
  9437                           	psect	text40
  9438  002BD0                     __ptext40:
  9439                           	callstack 0
  9440  002BD0                     _change_direction:
  9441                           	callstack 0
  9442  002BD0  FFFF               	dw	65535	; assembler added errata NOP
  9443  002BD2                     
  9444                           ;stepper_motor.c: 42:     stepper_motor -> direction = stepper_motor -> direction*(-1);
  9445  002BD2  EE20 F004          	lfsr	2,4
  9446  002BD6  5001               	movf	change_direction@stepper_motor^0,w,c
  9447  002BD8  26D9               	addwf	fsr2l,f,c
  9448  002BDA  5002               	movf	(change_direction@stepper_motor+1)^0,w,c
  9449  002BDC  22DA               	addwfc	fsr2h,f,c
  9450  002BDE  CFDE F003          	movff	postinc2,??_change_direction
  9451  002BE2  CFDD F004          	movff	postdec2,??_change_direction+1
  9452  002BE6  1E03               	comf	??_change_direction^0,f,c
  9453  002BE8  1E04               	comf	(??_change_direction+1)^0,f,c
  9454  002BEA  4A03               	infsnz	??_change_direction^0,f,c
  9455  002BEC  2A04               	incf	(??_change_direction+1)^0,f,c
  9456  002BEE  EE20 F004          	lfsr	2,4
  9457  002BF2  5001               	movf	change_direction@stepper_motor^0,w,c
  9458  002BF4  26D9               	addwf	fsr2l,f,c
  9459  002BF6  5002               	movf	(change_direction@stepper_motor+1)^0,w,c
  9460  002BF8  22DA               	addwfc	fsr2h,f,c
  9461  002BFA  C003  FFDE         	movff	??_change_direction,postinc2
  9462  002BFE  C004  FFDD         	movff	??_change_direction+1,postdec2
  9463  002C02  0012               	return		;funcret
  9464  002C04  FFFF               	dw	65535	; errata NOP
  9465  002C06                     __end_of_change_direction:
  9466                           	callstack 0
  9467                           
  9468 ;; *************** function _rx_char_usart *****************
  9469 ;; Defined at:
  9470 ;;		line 253 in file "main.c"
  9471 ;; Parameters:    Size  Location     Type
  9472 ;;		None
  9473 ;; Auto vars:     Size  Location     Type
  9474 ;;		None
  9475 ;; Return value:  Size  Location     Type
  9476 ;;                  1    wreg      void 
  9477 ;; Registers used:
  9478 ;;		wreg, status,2
  9479 ;; Tracked objects:
  9480 ;;		On entry : 0/0
  9481 ;;		On exit  : 0/0
  9482 ;;		Unchanged: 0/0
  9483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9484 ;;      Params:         0       0       0       0       0       0       0
  9485 ;;      Locals:         0       0       0       0       0       0       0
  9486 ;;      Temps:          0       0       0       0       0       0       0
  9487 ;;      Totals:         0       0       0       0       0       0       0
  9488 ;;Total ram usage:        0 bytes
  9489 ;; Hardware stack levels used:    1
  9490 ;; This function calls:
  9491 ;;		Nothing
  9492 ;; This function is called by:
  9493 ;;		Interrupt level 2
  9494 ;; This function uses a non-reentrant model
  9495 ;;
  9496                           
  9497                           	psect	intcode
  9498  000008                     __pintcode:
  9499                           	callstack 0
  9500  000008                     _rx_char_usart:
  9501                           	callstack 0
  9502  000008  FFFF               	dw	65535	; assembler added errata NOP
  9503                           
  9504                           ;incstack = 0
  9505  00000A  827F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9506  00000C                     
  9507                           ;main.c: 254:     if(PIE1bits.RCIE && PIR1bits.RCIF){
  9508  00000C  AA9D               	btfss	157,5,c	;volatile
  9509  00000E  EF0B  F000         	goto	i2u391_41
  9510  000012  EF0E  F000         	goto	i2u391_40
  9511  000016                     i2u391_41:
  9512  000016  FFFF               	dw	65535	; assembler added errata NOP
  9513  000018  EF1E  F000         	goto	i2l3664
  9514  00001C                     i2u391_40:
  9515  00001C  FFFF               	dw	65535	; assembler added errata NOP
  9516  00001E  AA9E               	btfss	158,5,c	;volatile
  9517  000020  EF14  F000         	goto	i2u392_41
  9518  000024  EF17  F000         	goto	i2u392_40
  9519  000028                     i2u392_41:
  9520  000028  FFFF               	dw	65535	; assembler added errata NOP
  9521  00002A  EF1E  F000         	goto	i2l3664
  9522  00002E                     i2u392_40:
  9523  00002E  FFFF               	dw	65535	; assembler added errata NOP
  9524  000030                     
  9525                           ;main.c: 255:         PIR1bits.RCIF = 0;
  9526  000030  9A9E               	bcf	158,5,c	;volatile
  9527  000032                     
  9528                           ;main.c: 256:         state_changed = 1;
  9529  000032  0E01               	movlw	1
  9530  000034  0100               	movlb	0	; () banked
  9531  000036  6FA7               	movwf	_state_changed& (0+255),b
  9532                           
  9533                           ;main.c: 257:         read_new_char = 1;
  9534  000038  0E01               	movlw	1
  9535  00003A  6FA5               	movwf	_read_new_char& (0+255),b
  9536  00003C                     i2l3664:
  9537  00003C  FFFF               	dw	65535	; assembler added errata NOP
  9538                           
  9539                           ;main.c: 259:     if(INTCONbits.TMR0IE && INTCONbits.TMR0IF){
  9540  00003E  AAF2               	btfss	242,5,c	;volatile
  9541  000040  EF24  F000         	goto	i2u393_41
  9542  000044  EF27  F000         	goto	i2u393_40
  9543  000048                     i2u393_41:
  9544  000048  FFFF               	dw	65535	; assembler added errata NOP
  9545  00004A  EF37  F000         	goto	i2l226
  9546  00004E                     i2u393_40:
  9547  00004E  FFFF               	dw	65535	; assembler added errata NOP
  9548  000050  A4F2               	btfss	242,2,c	;volatile
  9549  000052  EF2D  F000         	goto	i2u394_41
  9550  000056  EF30  F000         	goto	i2u394_40
  9551  00005A                     i2u394_41:
  9552  00005A  FFFF               	dw	65535	; assembler added errata NOP
  9553  00005C  EF37  F000         	goto	i2l226
  9554  000060                     i2u394_40:
  9555  000060  FFFF               	dw	65535	; assembler added errata NOP
  9556  000062                     
  9557                           ;main.c: 260:         T0CON = 0;
  9558  000062  0E00               	movlw	0
  9559  000064  6ED5               	movwf	213,c	;volatile
  9560  000066                     
  9561                           ;main.c: 261:         INTCONbits.TMR0IF = 0;
  9562  000066  94F2               	bcf	242,2,c	;volatile
  9563                           
  9564                           ;main.c: 262:         timer_done = 1;
  9565  000068  0E01               	movlw	1
  9566  00006A  0100               	movlb	0	; () banked
  9567  00006C  6FA4               	movwf	_timer_done& (0+255),b
  9568  00006E                     i2l226:
  9569  00006E  FFFF               	dw	65535	; assembler added errata NOP
  9570  000070  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9571  000072  0011               	retfie		f
  9572  000074  FFFF               	dw	65535	; errata NOP
  9573  000076                     __end_of_rx_char_usart:
  9574                           	callstack 0
  9575                           
  9576                           	psect	rparam
  9577  0000                     
  9578                           	psect	temp
  9579  00007F                     btemp:
  9580                           	callstack 0
  9581  00007F                     	ds	1
  9582  0000                     int$flags	set	btemp
  9583  0000                     wtemp8	set	btemp+1
  9584  0000                     ttemp5	set	btemp+1
  9585  0000                     ttemp6	set	btemp+4
  9586  0000                     ttemp7	set	btemp+8
  9587                           
  9588                           	psect	idloc
  9589                           
  9590                           ;Config register IDLOC0 @ 0x200000
  9591                           ;	unspecified, using default values
  9592  200000                     	org	2097152
  9593  200000  FF                 	db	255
  9594                           
  9595                           ;Config register IDLOC1 @ 0x200001
  9596                           ;	unspecified, using default values
  9597  200001                     	org	2097153
  9598  200001  FF                 	db	255
  9599                           
  9600                           ;Config register IDLOC2 @ 0x200002
  9601                           ;	unspecified, using default values
  9602  200002                     	org	2097154
  9603  200002  FF                 	db	255
  9604                           
  9605                           ;Config register IDLOC3 @ 0x200003
  9606                           ;	unspecified, using default values
  9607  200003                     	org	2097155
  9608  200003  FF                 	db	255
  9609                           
  9610                           ;Config register IDLOC4 @ 0x200004
  9611                           ;	unspecified, using default values
  9612  200004                     	org	2097156
  9613  200004  FF                 	db	255
  9614                           
  9615                           ;Config register IDLOC5 @ 0x200005
  9616                           ;	unspecified, using default values
  9617  200005                     	org	2097157
  9618  200005  FF                 	db	255
  9619                           
  9620                           ;Config register IDLOC6 @ 0x200006
  9621                           ;	unspecified, using default values
  9622  200006                     	org	2097158
  9623  200006  FF                 	db	255
  9624                           
  9625                           ;Config register IDLOC7 @ 0x200007
  9626                           ;	unspecified, using default values
  9627  200007                     	org	2097159
  9628  200007  FF                 	db	255
  9629                           
  9630                           	psect	config
  9631                           
  9632                           ; Padding undefined space
  9633  300000                     	org	3145728
  9634  300000  FF                 	db	255
  9635                           
  9636                           ;Config register CONFIG1H @ 0x300001
  9637                           ;	Oscillator Selection bits
  9638                           ;	OSC = RCIO, RC oscillator w/ OSC2 configured as RA6
  9639                           ;	Oscillator System Clock Switch Enable bit
  9640                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  9641  300001                     	org	3145729
  9642  300001  27                 	db	39
  9643                           
  9644                           ;Config register CONFIG2L @ 0x300002
  9645                           ;	Power-up Timer Enable bit
  9646                           ;	PWRT = OFF, PWRT disabled
  9647                           ;	Brown-out Reset Enable bit
  9648                           ;	BOR = ON, Brown-out Reset enabled
  9649                           ;	Brown-out Reset Voltage bits
  9650                           ;	BORV = 20, VBOR set to 2.0V
  9651  300002                     	org	3145730
  9652  300002  0F                 	db	15
  9653                           
  9654                           ;Config register CONFIG2H @ 0x300003
  9655                           ;	Watchdog Timer Enable bit
  9656                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9657                           ;	Watchdog Timer Postscale Select bits
  9658                           ;	WDTPS = 128, 1:128
  9659  300003                     	org	3145731
  9660  300003  0E                 	db	14
  9661                           
  9662                           ; Padding undefined space
  9663  300004                     	org	3145732
  9664  300004  FF                 	db	255
  9665                           
  9666                           ;Config register CONFIG3H @ 0x300005
  9667                           ;	CCP2 Mux bit
  9668                           ;	CCP2MUX = ON, CCP2 input/output is multiplexed with RC1
  9669  300005                     	org	3145733
  9670  300005  01                 	db	1
  9671                           
  9672                           ;Config register CONFIG4L @ 0x300006
  9673                           ;	Stack Full/Underflow Reset Enable bit
  9674                           ;	STVR = ON, Stack Full/Underflow will cause RESET
  9675                           ;	Low Voltage ICSP Enable bit
  9676                           ;	LVP = ON, Low Voltage ICSP enabled
  9677                           ;	Background Debugger Enable bit
  9678                           ;	DEBUG = 0x1, unprogrammed default
  9679  300006                     	org	3145734
  9680  300006  85                 	db	133
  9681                           
  9682                           ; Padding undefined space
  9683  300007                     	org	3145735
  9684  300007  FF                 	db	255
  9685                           
  9686                           ;Config register CONFIG5L @ 0x300008
  9687                           ;	Code Protection bit
  9688                           ;	CP0 = OFF, Block 0 (000200-001FFFh) not code protected
  9689                           ;	Code Protection bit
  9690                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  9691                           ;	Code Protection bit
  9692                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  9693                           ;	Code Protection bit
  9694                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  9695  300008                     	org	3145736
  9696  300008  0F                 	db	15
  9697                           
  9698                           ;Config register CONFIG5H @ 0x300009
  9699                           ;	Boot Block Code Protection bit
  9700                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  9701                           ;	Data EEPROM Code Protection bit
  9702                           ;	CPD = OFF, Data EEPROM not code protected
  9703  300009                     	org	3145737
  9704  300009  C0                 	db	192
  9705                           
  9706                           ;Config register CONFIG6L @ 0x30000A
  9707                           ;	Write Protection bit
  9708                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  9709                           ;	Write Protection bit
  9710                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  9711                           ;	Write Protection bit
  9712                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  9713                           ;	Write Protection bit
  9714                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  9715  30000A                     	org	3145738
  9716  30000A  0F                 	db	15
  9717                           
  9718                           ;Config register CONFIG6H @ 0x30000B
  9719                           ;	Configuration Register Write Protection bit
  9720                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  9721                           ;	Boot Block Write Protection bit
  9722                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  9723                           ;	Data EEPROM Write Protection bit
  9724                           ;	WRTD = OFF, Data EEPROM not write protected
  9725  30000B                     	org	3145739
  9726  30000B  E0                 	db	224
  9727                           
  9728                           ;Config register CONFIG7L @ 0x30000C
  9729                           ;	Table Read Protection bit
  9730                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  9731                           ;	Table Read Protection bit
  9732                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  9733                           ;	Table Read Protection bit
  9734                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  9735                           ;	Table Read Protection bit
  9736                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  9737  30000C                     	org	3145740
  9738  30000C  0F                 	db	15
  9739                           
  9740                           ;Config register CONFIG7H @ 0x30000D
  9741                           ;	Boot Block Table Read Protection bit
  9742                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  9743  30000D                     	org	3145741
  9744  30000D  40                 	db	64
  9745                           tosu	equ	0xFFF
  9746                           tosh	equ	0xFFE
  9747                           tosl	equ	0xFFD
  9748                           stkptr	equ	0xFFC
  9749                           pclatu	equ	0xFFB
  9750                           pclath	equ	0xFFA
  9751                           pcl	equ	0xFF9
  9752                           tblptru	equ	0xFF8
  9753                           tblptrh	equ	0xFF7
  9754                           tblptrl	equ	0xFF6
  9755                           tablat	equ	0xFF5
  9756                           prodh	equ	0xFF4
  9757                           prodl	equ	0xFF3
  9758                           indf0	equ	0xFEF
  9759                           postinc0	equ	0xFEE
  9760                           postdec0	equ	0xFED
  9761                           preinc0	equ	0xFEC
  9762                           plusw0	equ	0xFEB
  9763                           fsr0h	equ	0xFEA
  9764                           fsr0l	equ	0xFE9
  9765                           wreg	equ	0xFE8
  9766                           indf1	equ	0xFE7
  9767                           postinc1	equ	0xFE6
  9768                           postdec1	equ	0xFE5
  9769                           preinc1	equ	0xFE4
  9770                           plusw1	equ	0xFE3
  9771                           fsr1h	equ	0xFE2
  9772                           fsr1l	equ	0xFE1
  9773                           bsr	equ	0xFE0
  9774                           indf2	equ	0xFDF
  9775                           postinc2	equ	0xFDE
  9776                           postdec2	equ	0xFDD
  9777                           preinc2	equ	0xFDC
  9778                           plusw2	equ	0xFDB
  9779                           fsr2h	equ	0xFDA
  9780                           fsr2l	equ	0xFD9
  9781                           status	equ	0xFD8

Data Sizes:
    Strings     22
    Constant    1224
    Data        22
    BSS         78
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    126     126
    BANK0           128     35     123
    BANK1           256      0      12
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    change_direction@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    change_direction@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK1[12]), end_effector_stepper(BANK0[12]), joint_stepper(BANK0[12]), 

    reach_goal@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    reach_goal@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK1[12]), end_effector_stepper(BANK0[12]), joint_stepper(BANK0[12]), 

    update_current_coil@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    update_current_coil@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK1[12]), end_effector_stepper(BANK0[12]), joint_stepper(BANK0[12]), 

    turn_on_current_coil@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    turn_on_current_coil@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK1[12]), end_effector_stepper(BANK0[12]), joint_stepper(BANK0[12]), 

    init_stepper@register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    init_stepper@stepper_motor.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    init_stepper@hex_coil_register_values	PTR unsigned char  size(2) Largest target is 4
		 -> hex_end_effector_values(BANK0[4]), hex_joint_values(BANK0[4]), 

    init_stepper@stepper_motor	PTR struct . size(2) Largest target is 13
		 -> joint_dilutor_stepper(BANK1[12]), end_effector_stepper(BANK0[12]), joint_stepper(BANK0[12]), 

    state_translator_micro_to_fpga@state	PTR int  size(2) Largest target is 2
		 -> state(BANK0[2]), 

    state_translator_fpga_to_micro@state	PTR int  size(2) Largest target is 2
		 -> state(BANK0[2]), 

    S744$current_msg	PTR unsigned char  size(2) Largest target is 0

    lcd_manager_init@lcd_manager.current_msg	PTR unsigned char  size(2) Largest target is 0

    S744$new_msg	PTR unsigned char  size(2) Largest target is 0

    lcd_manager_init@lcd_manager.new_msg	PTR unsigned char  size(2) Largest target is 0

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 1200
		 -> const_msgs(CODE[1200]), STR_1(CODE[22]), 

    joint_dilutor_stepper.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    end_effector_stepper.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    S181$register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 

    joint_stepper.register_name	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATC(SFR[1]), LATB(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_check_temperature
    _wait_for_zero->_get_temperature
    _get_temperature->___fltol
    _state_translator_fpga_to_micro->_lcd_dat
    _reach_goal->_turn_on_current_coil
    _lcd_update->_lcd_str
    _lcd_str->___wmul
    _lcd_dat->_lcd_wr
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_wr
    _init_timer_2->___fltol
    _init_ccp1->_update_pwm_duty_ccp1
    _update_pwm_duty_ccp1->___fltol
    ___fldiv->___flmul
    _roundf->___flge
    ___flsub->___fladd
    ___fladd->___fldiv
    _get_liters->___fltol
    ___fltol->___flsub
    ___flmul->___xxtofl
    _check_temperature->___flge
    ___xxtofl->___awdiv
    ___flge->_get_liters
    ___awdiv->_abs

Critical Paths under _rx_char_usart in COMRAM

    None.

Critical Paths under _main in BANK0

    _init_USART->_roundf

Critical Paths under _rx_char_usart in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rx_char_usart in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rx_char_usart in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rx_char_usart in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rx_char_usart in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rx_char_usart in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               249   249      0   47076
                                             26 BANK0      9     9      0
                             ___flge
                             ___wmul
                           ___xxtofl
                   _change_direction
                  _check_temperature
       _configure_ad_conversion_oven
       _configure_ad_conversion_tank
                         _get_liters
                      _get_reg_value
                    _get_temperature
                         _init_PORTS
                         _init_USART
                          _init_ccp1
                    _init_interrupts
                       _init_stepper
                       _init_timer_0
                       _init_timer_2
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                         _lcd_update
                         _reach_goal
                     _serial_tx_char
     _state_translator_fpga_to_micro
     _state_translator_micro_to_fpga
                      _wait_for_zero
 ---------------------------------------------------------------------------------
 (1) _wait_for_zero                                        0     0      0    3739
                    _get_temperature
 ---------------------------------------------------------------------------------
 (2) _get_temperature                                      2     0      2    3739
                                            110 COMRAM     2     0      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _state_translator_micro_to_fpga                       5     3      2     168
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _state_translator_fpga_to_micro                       3     1      2     494
                                              2 COMRAM     3     1      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (1) _serial_tx_char                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _reach_goal                                           7     3      4    1590
                                              8 COMRAM     7     3      4
               _turn_on_current_coil
                _update_current_coil
 ---------------------------------------------------------------------------------
 (2) _update_current_coil                                  6     4      2     274
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _turn_on_current_coil                                 8     6      2     142
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _lcd_update                                          10     8      2    1309
                                             11 COMRAM    10     8      2
                             ___wmul
                            _lcd_cmd
                            _lcd_str
 ---------------------------------------------------------------------------------
 (2) _lcd_str                                              5     3      2     286
                                              6 COMRAM     5     3      2
                             ___wmul (ARG)
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     767
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      44
                                              2 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0      44
                                              1 COMRAM     1     1      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_timer_2                                         4     4      0    8165
                                            110 COMRAM     4     4      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _init_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_stepper                                        16     4     12    1678
                                              0 COMRAM    16     4     12
 ---------------------------------------------------------------------------------
 (1) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ccp1                                            0     0      0    4830
               _update_pwm_duty_ccp1
 ---------------------------------------------------------------------------------
 (2) _update_pwm_duty_ccp1                                 9     5      4    4830
                                            110 COMRAM     9     5      4
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1551
                                             51 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           0     0      0   12170
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (2) _roundf                                              26    22      4   11561
                                              0 BANK0     26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3801
                                             92 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    3478
                                             76 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _init_PORTS                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_reg_value                                        1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _get_liters                                           2     0      2    3739
                                            110 COMRAM     2     0      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     609
                                            100 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2504
                                             26 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _configure_ad_conversion_tank                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configure_ad_conversion_oven                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_temperature                                    6     4      2    2305
                                            124 COMRAM     2     0      2
                                              0 BANK0      4     4      0
                            ___awdiv
                             ___flge
                           ___xxtofl
                                _abs
                    _get_temperature (ARG)
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     142
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     626
                                             12 COMRAM    14    10      4
                            ___awdiv (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     942
                                            112 COMRAM    12     4      8
                            ___fltol (ARG)
                           ___xxtofl (ARG)
                         _get_liters (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              4 COMRAM     8     4      4
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (1) _change_direction                                     4     2      2     348
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _rx_char_usart                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flge
     ___fltol (ARG)
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     ___xxtofl (ARG)
       ___awdiv (ARG)
         _abs (ARG)
       _abs (ARG)
     _get_liters (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                   _abs (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
   ___wmul
   ___xxtofl
     ___awdiv (ARG)
       _abs (ARG)
     _abs (ARG)
   _change_direction
   _check_temperature
     ___awdiv
       _abs (ARG)
     ___flge
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                   _abs (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
       _get_liters (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                   _abs (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
           ___flneg (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                     _abs (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                   _abs (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___xxtofl
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
       _abs (ARG)
     _abs
     _get_temperature (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                   _abs (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
   _configure_ad_conversion_oven
   _configure_ad_conversion_tank
   _get_liters
     ___flmul
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
       _abs (ARG)
   _get_reg_value
   _get_temperature
     ___flmul
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     ___xxtofl
       ___awdiv (ARG)
         _abs (ARG)
       _abs (ARG)
   _init_PORTS
   _init_USART
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     _roundf
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___flge
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                   _abs (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
           ___flneg (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                     _abs (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                   _abs (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
         _get_liters (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                     _abs (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                   _abs (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                   _abs (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
             ___flneg (ARG)
             ___flsub (ARG)
               ___fladd
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___awdiv (ARG)
                         _abs (ARG)
                       _abs (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___awdiv (ARG)
                       _abs (ARG)
                     _abs (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
           ___xxtofl
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                   _abs (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
   _init_ccp1
     _update_pwm_duty_ccp1
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                   _abs (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
   _init_interrupts
   _init_stepper
   _init_timer_0
   _init_timer_2
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
     ___flmul
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___flneg (ARG)
       ___flsub (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)
   _lcd_cmd
     _lcd_wr
   _lcd_init
     _lcd_cmd
       _lcd_wr
   _lcd_str
     ___wmul (ARG)
     _lcd_dat (ARG)
       _lcd_wr
   _lcd_update
     ___wmul
     _lcd_cmd
       _lcd_wr
     _lcd_str
       ___wmul (ARG)
       _lcd_dat (ARG)
         _lcd_wr
   _reach_goal
     _turn_on_current_coil
     _update_current_coil
   _serial_tx_char
   _state_translator_fpga_to_micro
     _lcd_dat
       _lcd_wr
   _state_translator_micro_to_fpga
   _wait_for_zero
     _get_temperature
       ___flmul
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 _abs (ARG)
               _abs (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               _abs (ARG)
             _abs (ARG)
         ___flneg (ARG)
         ___flsub (ARG)
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___awdiv (ARG)
                     _abs (ARG)
                   _abs (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   _abs (ARG)
                 _abs (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             _abs (ARG)
           _abs (ARG)
       ___xxtofl
         ___awdiv (ARG)
           _abs (ARG)
         _abs (ARG)

 _rx_char_usart (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       C       7        4.7%
BITBANK0            80      0       0       4        0.0%
BANK0               80     23      7B       5       96.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7E      7E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     105      15        0.0%
DATA                 0      0     105       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Jun 17 23:39:57 2023

                                           ?_get_reg_value 0001  
                                          ??_wait_for_zero 0071  
                                             ___fldiv@aexp 004C  
                                             ___fldiv@bexp 004B  
                                             ___fldiv@sign 0044  
                                                       l21 2B8A  
                                                       l24 2D22  
                                                       l27 2D36  
                                                       l36 2D98  
                                             ___awdiv@sign 000A  
                                      ___wmul@multiplicand 0003  
                                                      l205 0856  
                                                      l160 0998  
                                                      l162 029A  
                                                      l315 1F6C  
                                                      l324 27E8  
                                                      l421 28E6  
                                                      l173 0380  
                                                      l430 29BA  
                                                      l415 2D72  
                                                      l255 2C2E  
                                                      l319 27E4  
                                                      l159 01F6  
                                                      l272 2CAC  
                                                      l424 294E  
                                                      l441 246A  
                                                      l361 2CF4  
                                                      l433 2CB2  
                                                      l169 0360  
                                                      l418 2D54  
                                                      l258 2DB0  
                                                      l427 2956  
                                                      l275 2C58  
                                                      l364 2538  
                                                      l284 2A1A  
                                                      l269 2DA4  
                                                      l445 2C82  
                                                      l437 2CD2  
                                                      l710 217C  
                                                      l374 25FA  
                                                      l278 2866  
                                                      l294 26B6  
                                                      l382 2A6C  
                                                      l367 2D16  
                                                      l392 28DC  
                                                      l715 21CA  
                                                      l379 275E  
                                                      l396 2C02  
                                                      l388 2394  
                                                      l742 20A2  
                                                      l719 2BCC  
                                                      l676 22BC  
                                                      l973 0BEA  
                                                      l990 0D2E  
                                                      l982 0F44  
                                                      l974 0BD4  
                                                      l975 0B8A  
                                                      l999 0E32  
                                        ??_init_interrupts 0001  
                                                      _PR2 000FCB  
                                                      _abs 2A70  
                                init_stepper@register_name 000B  
                                                      wreg 000FE8  
                                           ?_rx_char_usart 0001  
                                             ___flmul@aexp 002C  
                                             ___flmul@bexp 002D  
                                             ___flmul@sign 0027  
                                             ___flmul@temp 0032  
                                             ___flmul@prod 002E  
                                             ___fltol@exp1 006E  
                                                     l1000 0E1A  
                                                     l1100 1C6C  
                                                     l1103 1DFE  
                                                     l1015 2B02  
                                                     l1120 2AAC  
                                                     l1040 1718  
                                                     l1032 15EC  
                                                     l1041 1700  
                                                     l1114 1D84  
                                                     l1107 1D18  
                                                     l1123 2AB6  
                                                     l1131 1C06  
                                                     l1027 181A  
                                                     ?_abs 0001  
                                                     l1029 1632  
                                                     l1038 1688  
                                                     l1063 13E8  
                                                     l3000 1D72  
                                                     l3010 1DD8  
                                                     l3002 1D98  
                                                     l1066 1242  
                                                     l1059 1036  
                                                     l3012 1DEA  
                                                     l3004 1D9A  
                                                     l1076 13A0  
                                                     l1068 12D2  
                                                     l3020 1842  
                                                     PORTD 000F83  
                                                     l1069 12BA  
                                                     PORTE 000F84  
                                                     l3014 1DEC  
                                                     l3006 1DA0  
                                                     l3030 1936  
                                                     l3022 1894  
                                                     l3102 22C2  
                                                     l3008 1DC4  
                                                     l3112 2A72  
                                                     l3040 1AE6  
                                                     l3024 18A8  
                                                     l3200 247A  
                                                     l3104 234E  
                                                     l3130 21F4  
                                                     l3122 21D2  
                                                     l3114 2A90  
                                                     l2410 09B0  
                                                     l3042 1B52  
                                                     l3034 196E  
                                                     l3026 18EE  
                                                     l3018 1822  
                                                     l3202 247C  
                                                     l3106 2362  
                                                     l3140 2234  
                                                     l3132 2208  
                                                     l3124 21D6  
                                                     l2500 0BB0  
                                                     l2420 09FE  
                                                     l2412 09C2  
                                                     l3044 1B88  
                                                     l3036 1A42  
                                                     l3028 1912  
                                                     l3212 2CFA  
                                                     l3204 247E  
                                                     l3060 2C9E  
                                                     l3052 2C8A  
                                                     l3116 2C5E  
                                                     l3108 2384  
                                                     l3300 1F46  
                                                     l3150 227C  
                                                     l3142 223C  
                                                     l3134 2210  
                                                     l3126 21E8  
                                                     l2510 0C12  
                                                     l2502 0BC4  
                                                     l2430 0A3A  
                                                     l2422 0A02  
                                                     l2414 09C4  
                                                     l3046 1BD0  
                                                     l3038 1AAE  
                                                     l3214 2CFE  
                                                     l3222 2DAA  
                                                     l3230 26C4  
                                                     l3206 2480  
                                                     l2406 2DA0  
                                                     l3062 2CA0  
                                                     l3054 2C8C  
                                                     l3118 2C7A  
                                                     l3070 29E8  
                                                     l3302 1F5A  
                                                     l3310 278C  
                                                     l3160 22AA  
                                                     l3152 2284  
                                                     l3144 2246  
                                                     l3136 2214  
                                                     l3128 21F0  
                                                     l2600 0F16  
                                                     l2520 0C5C  
                                                     l2504 0BC6  
                                                     l2440 0A6E  
                                                     l2432 0A3C  
                                                     l2416 09DA  
                                                     l2424 0A0A  
                                                     l2408 09A4  
                                                     l3048 1BF4  
                                                     l3080 253E  
                                                     l3216 2D12  
                                                     l3240 2736  
                                                     l3232 26EE  
                                                     l3224 26BC  
                                                     l3400 2CF2  
                                                     l3208 24FC  
                                                     l3064 2CAA  
                                                     l3056 2C92  
                                                     l3072 29EA  
                                                     l3312 27AC  
                                                     l3162 22B2  
                                                     l3154 2286  
                                                     l3146 225A  
                                                     l3138 221E  
                                                     l2602 0F1E  
                                                     l2530 0C90  
                                                     l2522 0C68  
                                                     l2514 0C26  
                                                     l2506 0BD2  
                                                     l2450 0AB0  
                                                     l2442 0A82  
                                                     l2434 0A44  
                                                     l2426 0A1C  
                                                     l2418 09EE  
                                                     l3170 2B7E  
                                                     l3090 25C2  
                                                     l3082 25A2  
                                                     l3218 2D14  
                                                     l3242 274A  
                                                     l3234 26F2  
                                                     l3058 2C94  
                                                     l3250 2812  
                                                     l2610 2C36  
                                                     l3066 29C0  
                                                     l3322 2600  
                                                     l3402 286C  
                                                     l3314 27B4  
                                                     l3306 2764  
                                                     l3074 28E4  
                                                     l3420 2BD2  
                                                     l3156 228E  
                                                     l3148 2262  
                                                     l3340 2D3C  
                                                     l2604 0F30  
                                                     l2540 0D0C  
                                                     l2524 0C6E  
                                                     l2516 0C38  
                                                     l2508 0BFE  
                                                     l2532 0C96  
                                                     l2460 0AE8  
                                                     l2452 0AC8  
                                                     l2444 0A92  
                                                     l2436 0A56  
                                                     l2428 0A24  
                                                     l3180 2B88  
                                                     l3172 2B80  
                                                     l2700 15F8  
                                                     l3092 25D6  
                                                     l3084 25A6  
                                                     l3236 2712  
                                                     l3260 284E  
                                                     l3252 2818  
                                                     l3244 27EE  
                                                     l2620 2C4C  
                                                     l2612 2C38  
                                                     l3068 29C8  
                                                     l3332 2636  
                                                     l3324 2606  
                                                     l3404 289A  
                                                     l3412 28BA  
                                                     l3316 27D6  
                                                     l3308 2784  
                                                     l3076 28FA  
                                                     l3500 02B8  
                                                     l3158 2294  
                                                     l3342 2D40  
                                                     l3350 2954  
                                                     l2606 0F32  
                                                     l2550 0D72  
                                                     l2534 0CC2  
                                                     l2542 0D1C  
                                                     l2526 0C82  
                                                     l2518 0C4A  
                                                     l2470 0AFC  
                                                     l2462 0AEC  
                                                     l2454 0ADA  
                                                     l2446 0A96  
                                                     l2438 0A58  
                                                     l3174 2B82  
                                                     l3166 2B4E  
                                                     l2710 1662  
                                                     l2702 161C  
                                                     l2630 1410  
                                                     l3094 25DC  
                                                     l3086 25B8  
                                                     l3238 2722  
                                                     l3262 2854  
                                                     l3254 2830  
                                                     l3246 27FE  
                                                     l2622 2C56  
                                                     l2614 2C3E  
                                                     l3334 264A  
                                                     l3326 262E  
                                                     l3414 28C8  
                                                     l3406 28AE  
                                                     l3270 1E0E  
                                                     l3318 27DE  
                                                     l3510 0324  
                                                     l3502 02CC  
                                                     l3360 2454  
                                                     l3344 2D42  
                                                     l3352 296A  
                                                     l3192 2C08  
                                                     l2560 0DAE  
                                                     l2552 0D7E  
                                                     l2544 0D4A  
                                                     l2536 0CF6  
                                                     l2528 0C84  
                                                     l2480 0B10  
                                                     l2472 0B00  
                                                     l2464 0AF0  
                                                     l2456 0ADE  
                                                     l2448 0A9E  
                                                     l3176 2B84  
                                                     l3168 2B7C  
                                                     l2720 16AE  
                                                     l2712 1668  
                                                     l2704 161E  
                                                     l2632 1426  
                                                     l2640 1456  
                                                     l2624 13F0  
                                                     l3096 25E0  
                                                     l3088 25BE  
                                                     l3264 285A  
                                                     l3256 2842  
                                                     l3248 2810  
                                                     l2616 2C40  
                                                     l3336 2692  
                                                     l3416 28D4  
                                                     l3184 2D1E  
                                                     l3280 1E7A  
                                                     l3272 1E22  
                                                     l3600 0736  
                                                     l3512 034A  
                                                     l3520 0392  
                                                     l3504 02E6  
                                                     l3440 0088  
                                                     l3432 007A  
                                                     l3370 2D5A  
                                                     l3346 2D44  
                                                     l2810 10AE  
                                                     l2802 1074  
                                                     l3186 2D8E  
                                                     l3194 2C2C  
                                                     l2570 0DE4  
                                                     l2562 0DB4  
                                                     l2554 0D90  
                                                     l2546 0D5E  
                                                     l2538 0CF8  
                                                     l2490 0B50  
                                                     l2482 0B14  
                                                     l2474 0B04  
                                                     l2466 0AF4  
                                                     l2458 0AE4  
                                                     l3178 2B86  
                                                     l2730 172E  
                                                     l2722 16B2  
                                                     l2714 1674  
                                                     l2706 162E  
                                                     l2650 148A  
                                                     l2642 1468  
                                                     l2634 143A  
                                                     l2626 13FC  
                                                     l3266 2860  
                                                     l3258 2848  
                                                     l2618 2C4A  
                                                     l3338 2696  
                                                     l3098 2A20  
                                                     l3290 1EE6  
                                                     l3282 1E8E  
                                                     l3274 1E36  
                                                     l3610 07B6  
                                                     l3602 074E  
                                                     l3530 0404  
                                                     l3522 03AC  
                                                     l3514 0374  
                                                     l3506 02F6  
                                                     l3450 012C  
                                                     l3442 008C  
                                                     l3434 007A  
                                                     l2900 20DC  
                                                     l3356 239C  
                                                     l3372 2D5E  
                                                     l3348 2D46  
                                                     l2820 10F8  
                                                     l2812 10C6  
                                                     l2804 1082  
                                                     l3188 2D92  
                                                     l2580 0E54  
                                                     l2572 0DF6  
                                                     l2564 0DCA  
                                                     l2556 0D92  
                                                     l2492 0B72  
                                                     l2484 0B18  
                                                     l2476 0B08  
                                                     l2468 0AF8  
                                                     l2740 179A  
                                                     l2732 173A  
                                                     l2724 16C4  
                                                     l2716 1686  
                                                     l2708 1648  
                                                     l2652 14A0  
                                                     l2660 14D0  
                                                     l2644 1470  
                                                     l2636 144A  
                                                     l2628 140E  
                                                     l3292 1EFE  
                                                     l3284 1EA6  
                                                     l3276 1E4E  
                                                     l3268 1E08  
                                                     l3380 2CB4  
                                                     l3620 082A  
                                                     l3604 076A  
                                                     l3540 0498  
                                                     l3532 0420  
                                                     l3524 03BC  
                                                     l3516 0378  
                                                     l3508 0310  
                                                     l3460 014E  
                                                     l3452 0130  
                                                     l3444 0090  
                                                     l3436 0080  
                                                     l2910 2156  
                                                     l2902 20EC  
                                                     l3358 241E  
                                                     l3366 2460  
                                                     l3374 2D60  
                                                     l2830 114E  
                                                     l2822 1108  
                                                     l2814 10D2  
                                                     l2806 108C  
                                                     l2590 0ECE  
                                                     l2582 0E66  
                                                     l2574 0E10  
                                                     l2558 0DA6  
                                                     l2566 0DCC  
                                                     l2494 0B82  
                                                     l2478 0B0C  
                                                     l2486 0B1C  
                                                     l2750 1804  
                                                     l2742 17B0  
                                                     l2734 174C  
                                                     l2726 16F6  
                                                     l2718 169A  
                                                     l2670 151C  
                                                     l2662 14E2  
                                                     l2654 14B4  
                                                     l2646 1476  
                                                     l2638 144E  
                                                     l3390 2CE8  
                                                     l3198 2472  
                                                     l3294 1F12  
                                                     l3286 1EBA  
                                                     l3278 1E62  
                                                     l3630 0898  
                                                     l3622 083E  
                                                     l3606 0784  
                                                     l3614 07E6  
                                                     l3550 0510  
                                                     l3534 043A  
                                                     l3526 03D6  
                                                     l3542 04AA  
                                                     l3518 037C  
                                                     l3470 018C  
                                                     l3462 0150  
                                                     l3454 0136  
                                                     l3446 00C4  
                                                     l3438 0084  
                                                     l2912 216A  
                                                     l2904 2120  
                                                     l3376 2D62  
                                                     l2840 11F6  
                                                     l2832 116A  
                                                     l2824 1114  
                                                     l2816 10DE  
                                                     l2808 10A2  
                                                     l2920 2B90  
                                                     l2592 0EF4  
                                                     l2584 0EA4  
                                                     l2568 0DDE  
                                                     l2496 0B9E  
                                                     l2488 0B22  
                                                     l2752 180A  
                                                     l2744 17D0  
                                                     l2736 1776  
                                                     l2664 14FE  
                                                     l2656 14C4  
                                                     l2648 1488  
                                                     l3392 2CEA  
                                                     l3384 2CD8  
                                                     l3288 1ED2  
                                                     l3640 08F0  
                                                     l3632 089E  
                                                     l3624 086A  
                                                     l3616 0800  
                                                     l3608 079A  
                                                     l3560 0572  
                                                     l3552 0516  
                                                     l3544 04C4  
                                                     l3536 0450  
                                                     l3528 03EC  
                                                     l3480 01CA  
                                                     l3472 019A  
                                                     l3464 015A  
                                                     l3456 013C  
                                                     l3448 00F8  
                                                     l2914 21C0  
                                                     l2906 2130  
                                                     l3378 2D64  
                                                     l2850 1254  
                                                     l2842 1204  
                                                     l2834 1176  
                                                     l2826 1124  
                                                     l2818 10EC  
                                                     l2770 0F82  
                                                     l2762 0F4C  
                                                     l2930 1F8E  
                                                     l2922 2BAA  
                                                     l2594 0EF8  
                                                     l2578 0E48  
                                                     l2586 0EA6  
                                                     l2498 0BAA  
                                                     l2754 180E  
                                                     l2746 17EC  
                                                     l2738 177A  
                                                     l2690 15A6  
                                                     l2682 155A  
                                                     l2666 150E  
                                                     l2674 1530  
                                                     l2658 14C8  
                                                     l3394 2CEC  
                                                     l3386 2CE4  
                                                     l3298 1F2E  
                                                     l3642 0904  
                                                     l3634 08B8  
                                                     l3626 0872  
                                                     l3618 0810  
                                                     l3570 05DA  
                                                     l3562 058E  
                                                     l3554 0532  
                                                     l3546 04DA  
                                                     l3538 046C  
                                                     l3650 095A  
                                                     l3490 0210  
                                                     l3474 01A4  
                                                     l3466 0170  
                                                     l3482 01CE  
                                                     l3458 0142  
                                                     l2916 21C6  
                                                     l2908 2144  
                                                     l2852 1268  
                                                     l2844 1222  
                                                     l2836 1192  
                                                     l2828 113E  
                                                     l2780 0FC8  
                                                     l2772 0F96  
                                                     l2764 0F58  
                                                     l2940 1FE6  
                                                     l2924 2BBA  
                                                     l2596 0F0C  
                                                     l2588 0EBC  
                                                     l2748 17F2  
                                                     l2692 15AE  
                                                     l2684 1576  
                                                     l2676 1546  
                                                     l2668 1516  
                                                     l3396 2CEE  
                                                     l3388 2CE6  
                                                     l3652 0976  
                                                     l3644 090E  
                                                     l3636 08BA  
                                                     l3628 088C  
                                                     l3580 065C  
                                                     l3572 05F2  
                                                     l3564 059A  
                                                     l3556 0548  
                                                     l3548 0504  
                                                     l3492 0214  
                                                     l3484 01D8  
                                                     l3476 01B6  
                                                     l3468 0184  
                                                     l2862 12E8  
                                                     l2870 1334  
                                                     l2854 126C  
                                                     l2846 122E  
                                                     l2838 11BC  
                                                     l2790 100C  
                                                     l2782 0FCE  
                                                     l2774 0FA6  
                                                     l2766 0F6A  
                                                     l2950 2018  
                                                     l2942 1FEA  
                                                     l2934 1FA4  
                                                     l2598 0F12  
                                                     l2694 15C4  
                                                     l2686 1586  
                                                     l2678 1546  
                                                     l3398 2CF0  
                                                     l3654 098C  
                                                     l3646 0926  
                                                     l3638 08D0  
                                                     l3590 06C4  
                                                     l3582 0666  
                                                     l3574 0612  
                                                     l3558 0558  
                                                     l3566 05AA  
                                                     l3494 022C  
                                                     l3486 01F0  
                                                     l3478 01C4  
                                                     l2880 13B6  
                                                     l2872 1354  
                                                     l2864 12F4  
                                                     l2856 127E  
                                                     l2848 1240  
                                                     l2792 101C  
                                                     l2784 0FE0  
                                                     l2776 0FAE  
                                                     l2768 0F6C  
                                                     l2960 2048  
                                                     l2952 2024  
                                                     l2944 1FFC  
                                                     l2936 1FD4  
                                                     l2928 1F74  
                                                     l2696 15D8  
                                                     l2688 1596  
                                                     l3648 0946  
                                                     l3592 06DC  
                                                     l3576 062A  
                                                     l3584 0676  
                                                     l3568 05C4  
                                                     l3496 0278  
                                                     l3488 01FA  
                                                     l2882 13C8  
                                                     l2874 1368  
                                                     l2866 1306  
                                                     l2858 12B0  
                                                     l2794 1024  
                                                     l2786 0FE2  
                                                     l2778 0FC0  
                                                     l2962 2056  
                                                     l2954 202E  
                                                     l2938 1FD6  
                                                     l2698 15EA  
                                                     l3594 06F2  
                                                     l3586 068E  
                                                     l3578 0640  
                                                     l3498 02A0  
                                                     l2980 1C9A  
                                                     l2972 1C10  
                                                     l2884 13CA  
                                                     l2876 1388  
                                                     l2868 1330  
                                                     l2796 104C  
                                                     l2788 0FF8  
                                                     l2964 206A  
                                                     l2892 2ABE  
                                                     l3588 06A4  
                                                     l3596 0706  
                                                     l2990 1CFE  
                                                     l2974 1C24  
                                                     l2878 13A6  
                                                     l2886 13D2  
                                                     l2798 105E  
                                                     l2966 2080  
                                                     l2894 2ACE  
                                                     l3598 0720  
                                                     l2992 1D02  
                                                     l2984 1CAE  
                                                     l2976 1C36  
                                                     l2888 13D8  
                                                     l2968 2090  
                                                     l2898 20AA  
                                                     l2994 1D0E  
                                                     l2986 1CB8  
                                                     l2978 1C7E  
                                                     l2996 1D50  
                                                     l2988 1CC6  
                                                     l2998 1D5E  
                                                     TRISD 000F95  
                                                     TRISE 000F96  
                                                     STR_1 7FE9  
                                            _state_changed 00A7  
                                                     u2000 09EC  
                                                     u2001 09E6  
                                                     u2010 0A38  
                                                     u2011 0A32  
                                                     u2100 0B9C  
                                                     u2020 0A54  
                                                     u2101 0B96  
                                                     u2021 0A4E  
                                                     u2110 0BC2  
                                                     u2030 0A6C  
                                                     u2111 0BBC  
                                                     u2031 0A66  
                                                     u3000 1DD6  
                                                     u2200 0D48  
                                                     u2120 0BEA  
                                                     u2040 0A80  
                                                     u3001 1DD0  
                                                     u2201 0D42  
                                                     u2121 0BE4  
                                                     u2041 0A7A  
                                                     u3010 1DE8  
                                                     u2210 0D5C  
                                                     u2130 0BFC  
                                                     u2050 0AC6  
                                                     u3011 1DE2  
                                                     u2211 0D56  
                                                     u2131 0BF6  
                                                     u2051 0AC0  
                                                     u2300 0E64  
                                                     u2220 0D8E  
                                                     u2140 0C10  
                                                     u2060 0AD8  
                                                     u3100 1BCE  
                                                     u3020 1866  
                                                     u2301 0E5E  
                                                     u2221 0D88  
                                                     u2141 0C0A  
                                                     u2061 0AD2  
                                                     u3101 1BC8  
                                                     _LATA 000F89  
                                                     u2310 0EA2  
                                                     u2230 0DA4  
                                                     u2150 0C48  
                                                     u2070 0B4E  
                                                     u3030 1892  
                                                     u3110 2A18  
                                                     _LATB 000F8A  
                                                     u2311 0E9C  
                                                     u2231 0D9E  
                                                     u2151 0C42  
                                                     u2071 0B48  
                                                     u3031 188C  
                                                     u3111 2A12  
                                                     _LATC 000F8B  
                                                     u3200 2232  
                                                     u2320 0EBA  
                                                     u2240 0DC8  
                                                     u2160 0C5A  
                                                     u2080 0B6A  
                                                     u3040 18CC  
                                                     u2400 1486  
                                                     u3120 28F8  
                                                     u3201 222C  
                                                     u2321 0EB4  
                                                     u2241 0DC2  
                                                     u2161 0C54  
                                                     u2081 0B62  
                                                     u3025 1858  
                                                     u2401 1480  
                                                     u3121 28F2  
                                                     u3210 2258  
                                                     u2330 0ECE  
                                                     u2250 0DDE  
                                                     u2170 0C80  
                                                     u2090 0B6E  
                                                     u3050 18EC  
                                                     u2410 149E  
                                                     u3130 25B6  
                                                     u3211 2252  
                                                     u2331 0EC8  
                                                     u2251 0DD8  
                                                     u2171 0C7A  
                                                     u3051 18E6  
                                                     u2411 1498  
                                                     u3131 25B0  
                                                     u3220 227A  
                                                     u2340 0EF2  
                                                     u2260 0DF4  
                                                     u2180 0CC0  
                                                     u3060 1934  
                                                     u2500 1684  
                                                     u2420 14B2  
                                                     u3140 25D4  
                                                     u3300 1ED0  
                                                     u3221 2274  
                                                     u2341 0EEC  
                                                     u2261 0DEE  
                                                     u2181 0CBA  
                                                     u3061 192E  
                                                     u3045 18C0  
                                                     u2501 167E  
                                                     u2421 14AC  
                                                     u3141 25CE  
                                                     u3301 1ECA  
                                                     u3230 22A8  
                                                     u2350 0F0A  
                                                     u2270 0E0E  
                                                     u2190 0D0A  
                                                     u3070 1A40  
                                                     u2510 16AC  
                                                     u2430 14FC  
                                                     u3150 234C  
                                                     u3310 1EFC  
                                                     u3231 22A2  
                                                     u2351 0F04  
                                                     u2271 0E08  
                                                     u2191 0D04  
                                                     u3071 1A3A  
                                                     u2511 16A6  
                                                     u2431 14F6  
                                                     u3151 2346  
                                                     u3311 1EF6  
                                                     u4007 08F8  
                                                     u3400 2452  
                                                     u2600 0F68  
                                                     u2360 0F2E  
                                                     u2280 0E2C  
                                                     u3080 1AE4  
                                                     u2520 16C2  
                                                     u2440 1544  
                                                     u3160 2382  
                                                     u3240 2D34  
                                                     u3320 1F28  
                                                     u3401 244C  
                                                     u2601 0F62  
                                                     u2361 0F28  
                                                     u2281 0E26  
                                                     u3081 1ADE  
                                                     u2521 16BC  
                                                     u2441 153E  
                                                     u4017 2C42  
                                                     u3161 237C  
                                                     u3241 2D2E  
                                                     u3321 1F22  
                                                     u3170 2A8E  
                                                     u2610 0F80  
                                                     u2290 0E46  
                                                     u3090 1BAE  
                                                     u2530 16F4  
                                                     u2450 15C2  
                                                     u2370 140C  
                                                     u3250 2710  
                                                     u3330 1F44  
                                                     u3410 2CD0  
                                                     u3171 2A88  
                                                     u2611 0F7A  
                                                     u2291 0E40  
                                                     u2531 16EE  
                                                     u2451 15BC  
                                                     u2371 1406  
                                                     u3251 270A  
                                                     u4027 2C4E  
                                                     u3331 1F3E  
                                                     u3411 2CCA  
                                                     u3180 21E6  
                                                     u2700 1266  
                                                     u2620 0F94  
                                                     u2540 1712  
                                                     u2460 15E8  
                                                     u2380 1424  
                                                     u3420 2898  
                                                     u3260 1E20  
                                                     u3340 2782  
                                                     u3500 02E4  
                                                     u3181 21E0  
                                                     u2701 1260  
                                                     u2621 0F8E  
                                                     u2541 170C  
                                                     u2461 15E2  
                                                     u2381 141E  
                                                     u4037 2804  
                                                     u3421 2892  
                                                     u3261 1E1A  
                                                     u3341 277C  
                                                     u3501 02DE  
                                                     u3190 2206  
                                                     u2710 127C  
                                                     u2630 0FDE  
                                                     u2550 172C  
                                                     u2470 161A  
                                                     u2390 1438  
                                                     u3270 1E4C  
                                                     u3350 27AA  
                                                     u3510 030E  
                                                     u3191 2200  
                                                     u2711 1276  
                                                     u2631 0FD8  
                                                     u3095 1BA0  
                                                     u2551 1726  
                                                     u2471 1614  
                                                     u2391 1432  
                                                     u4047 281E  
                                                     u3271 1E46  
                                                     u3351 27A4  
                                                     u3511 0308  
                                                     u2800 211E  
                                                     u2720 12AE  
                                                     u2640 0FF6  
                                                     u2560 174A  
                                                     u2480 1646  
                                                     u3280 1E78  
                                                     u3360 27D4  
                                                     u3600 0496  
                                                     u3520 0322  
                                                     u3440 016E  
                                                     u2801 2118  
                                                     u2721 12A8  
                                                     u2641 0FF0  
                                                     u2561 1744  
                                                     u2481 1640  
                                                     u4057 2836  
                                                     u3281 1E72  
                                                     u3361 27CE  
                                                     u3601 0490  
                                                     u3521 031C  
                                                     u3441 0168  
                                                     u2810 2142  
                                                     u2730 12CC  
                                                     u2650 100A  
                                                     u2570 1798  
                                                     u2490 1660  
                                                     u3370 26B4  
                                                     u3290 1EA4  
                                                     u3610 04C2  
                                                     u3530 0348  
                                                     u3450 0182  
                                                     u2811 213C  
                                                     u2731 12C6  
                                                     u2651 1004  
                                                     u2571 1792  
                                                     u2491 165A  
                                                     u4067 2C96  
                                                     u3371 26AE  
                                                     u3291 1E9E  
                                                     u3611 04BC  
                                                     u3531 0342  
                                                     u3451 017C  
                                                     u2820 2168  
                                                     u2740 12E6  
                                                     u2660 104A  
                                                     u2900 206A  
                                                     u3380 2968  
                                                     u2580 17CE  
                                                     u3700 068C  
                                                     u3620 0502  
                                                     u3540 0372  
                                                     u3460 01EE  
                                                     u2821 2162  
                                                     u2741 12E0  
                                                     u2661 1044  
                                                     u2901 2064  
                                                     u3381 2962  
                                                     u2581 17C8  
                                                     u4077 2CA2  
                                                     u3701 0686  
                                                     u3621 04FC  
                                                     u3541 036C  
                                                     u3461 01E8  
                                                     u2830 21BE  
                                                     u3390 241C  
                                                     u2750 1304  
                                                     u2670 105E  
                                                     u2910 207E  
                                                     u2590 1802  
                                                     u3710 06A2  
                                                     u3630 0530  
                                                     u3550 03AA  
                                                     u3470 020E  
                                                     u2831 21B8  
                                                     u3391 2416  
                                                     u2751 12FE  
                                                     u2671 1058  
                                                     u2911 2078  
                                                     u2591 17FC  
                                                     u3711 069C  
                                                     u3631 052A  
                                                     u3551 03A4  
                                                     u3471 0208  
                                                     u2920 1C22  
                                                     u2760 1352  
                                                     u2680 11DE  
                                                     u2840 2BA8  
                                                     u3800 0828  
                                                     u3720 06DA  
                                                     u3640 0546  
                                                     u3560 03D4  
                                                     u3480 0276  
                                                     u2921 1C1C  
                                                     u2761 134C  
                                                     u2841 2BA2  
                                                     u3801 0822  
                                                     u3721 06D4  
                                                     u3641 0540  
                                                     u3561 03CE  
                                                     u3481 0270  
                                                     u2930 1C34  
                                                     u2770 1386  
                                                     u2690 123E  
                                                     u2850 1F8C  
                                                     u3810 083C  
                                                     u3730 06F0  
                                                     u3650 0570  
                                                     u3570 0402  
                                                     u3490 02B6  
                                                     u2931 1C2E  
                                                     u2771 1380  
                                                     u2691 1238  
                                                     u2851 1F86  
                                                     u3811 0836  
                                                     u3731 06EA  
                                                     u3651 056A  
                                                     u3571 03FC  
                                                     u3491 02B0  
                                                     u2940 1C98  
                                                     u2780 13C6  
                                                     u2860 1FC8  
                                                     u1980 09C0  
                                                     u3900 098A  
                                                     u3820 0868  
                                                     u3740 071E  
                                                     u3660 05C2  
                                                     u3580 0438  
                                                     u2941 1C92  
                                                     u2781 13C0  
                                                     u2685 11D2  
                                                     u1981 09BA  
                                                     u3901 0984  
                                                     u3821 0862  
                                                     u3741 0718  
                                                     u3661 05BC  
                                                     u3581 0432  
                                                     u2790 20DA  
                                                     u2950 1CF8  
                                                     u2870 1FFA  
                                                     u1990 09D8  
                                                     u3830 088A  
                                                     u3750 074C  
                                                     u3670 05F0  
                                                     u3590 044E  
                                                     u2791 20D4  
                                                     u2951 1CF2  
                                                     u2871 1FF4  
                                                     u1991 09D2  
                                                     u3831 0884  
                                                     u3751 0746  
                                                     u3671 05EA  
                                                     u3591 0448  
                                                     u2960 1D4A  
                                                     u2880 2012  
                                                     u3840 08B6  
                                                     u3760 0782  
                                                     u3680 0628  
                                                     u2961 1D44  
                                                     u2881 200C  
                                                     u2865 1FBC  
                                                     u3841 08B0  
                                                     u3761 077C  
                                                     u3681 0622  
                                                     u2970 1D70  
                                                     u2890 2042  
                                                     u3850 08CE  
                                                     u3770 0798  
                                                     u3690 063E  
                                                     u2971 1D6A  
                                                     u2891 203C  
                                                     u3851 08C8  
                                                     u3771 0792  
                                                     u3691 0638  
                                                     u2980 1D84  
                                                     u3860 08EE  
                                                     u3780 07E0  
                                                     u2981 1D7E  
                                                     u3861 08E8  
                                                     u3781 07DA  
                                                     u2990 1D96  
                                                     u3870 0924  
                                                     u3790 07FE  
                                                     u2991 1D90  
                                                     u3871 091E  
                                                     u3791 07F8  
                                                     u3880 0944  
                                                     u3881 093E  
                                                     u3890 0974  
                                                     u3891 096E  
                                                     u3957 03DE  
                                                     u3967 04CC  
                                                     u3977 05CC  
                                                     u3987 064C  
                                                     u3997 0728  
                                                     _TMR2 000FCC  
                                                     abs@a 0001  
                                              lcd_update@i 0014  
                                                     _main 007A  
                                                     _fosc 7FE5  
                                                     fsr1h 000FE2  
                                                     fsr2h 000FDA  
                                                     indf1 000FE7  
                                                     indf2 000FDF  
                                                     fsr1l 000FE1  
                                                     fsr2l 000FD9  
                                                     _tosc 00E9  
                                                     btemp 007F  
                              update_pwm_duty_ccp1@time_up 006F  
                                              main@rx_char 00E4  
                                                     prodh 000FF4  
                                            _trash_counter 0098  
                                                     prodl 000FF3  
                                                     start 0076  
                                          ___fldiv@new_exp 0045  
         state_translator_fpga_to_micro@state_machine_code 0005  
                                             ___param_bank 000000  
                                                    ??_abs 0003  
                                     _update_pwm_duty_ccp1 253C  
                                            ___fltol@sign1 006D  
                                          __end_of___fladd 0F4A  
                                                    ?_main 0001  
                                          __end_of___fldiv 1820  
                                          __end_of___awdiv 22C0  
                                          __end_of___flneg 2BD0  
                                          __end_of___flmul 13EE  
                                          __end_of___flsub 2B06  
                                          __end_of___fltol 20A8  
                                                    _T0CON 000FD5  
                                          ___awdiv@divisor 0007  
                                                    _T2CON 000FCA  
                                                    i2l226 006E  
                              __end_of_update_current_coil 239A  
                                          ___awdiv@counter 0009  
                                                    _RCREG 000FAE  
                                                    _TMR0H 000FD7  
                                                    _TMR0L 000FD6  
                                                    _SPBRG 000FAF  
                                                    _PORTA 000F80  
                                                    _PORTB 000F81  
                                                    _PORTC 000F82  
                                                    _PORTD 000F83  
                                                    _TRISA 000F92  
                                                    _TRISB 000F93  
                                                    _TRISC 000F94  
                                                    _TXREG 000FAD  
                                         ?_get_temperature 006F  
                                          __end_of_lcd_dat 2C5C  
                                          __end_of_lcd_cmd 2CB0  
                     __end_of_configure_ad_conversion_tank 2D58  
                    __size_of_configure_ad_conversion_tank 001E  
                             _configure_ad_conversion_tank 2D3A  
                     __end_of_configure_ad_conversion_oven 2D76  
                    __size_of_configure_ad_conversion_oven 001E  
                             _configure_ad_conversion_oven 2D58  
                                          __end_of_lcd_str 2A1E  
                                                    _f_osc 7FE1  
                                                    _t_osc 7FDD  
                                                    _state 00C0  
                                                    _toint 7B21  
                                                    tablat 000FF5  
                                                    ttemp5 0080  
                                                    ttemp6 0083  
                                                    ttemp7 0087  
                                                    status 000FD8  
                                                    wtemp8 0080  
                                       _end_effector_homed 008C  
                                          ??_get_reg_value 0001  
                                     get_reg_value@rx_char 0001  
                                          __initialization 2B06  
                                             __end_of_main 09A2  
                                             __end_of_fosc 7FE9  
                                    ?_update_pwm_duty_ccp1 006F  
                                    lcd_update@line_select 0010  
                                                   ??_main 00DC  
                                            __activetblptr 000002  
                                          ??_rx_char_usart 0001  
                                                   _ADCON0 000FC2  
                                                   _ADCON1 000FC1  
                                         _change_direction 2BD0  
                                                   _ADRESH 000FC4  
                                                   _ADRESL 000FC3  
                             __end_of_turn_on_current_coil 2A70  
                                                   _CCPR1L 000FBE  
                            ?_configure_ad_conversion_tank 0001  
                                         ___awdiv@dividend 0005  
                            ?_configure_ad_conversion_oven 0001  
                                                   i2l3660 0030  
                                                   i2l3670 0066  
                                                   i2l3662 0032  
                                                   i2l3664 003C  
                                                   i2l3656 000C  
                                                   i2l3666 0050  
                                                   i2l3658 001E  
                                                   i2l3668 0062  
                                         __end_of___xxtofl 1E04  
                                            ?_init_timer_0 0001  
                                            ?_init_timer_2 0001  
                   __end_of_state_translator_fpga_to_micro 1F72  
                  __size_of_state_translator_fpga_to_micro 016E  
                           _state_translator_fpga_to_micro 1E04  
                                            ?_init_stepper 0001  
                                         __end_of_lcd_init 286A  
                                                   ___flge 20A8  
                                        _init_timer_2$1737 006F  
                                                ??___fladd 0055  
                                                   ___wmul 2C5C  
                                                ??___fldiv 003C  
                                                ??___awdiv 0009  
                                                ??___flneg 0005  
                                                ??___flmul 0023  
                                                ??___flsub 0065  
                                                ??___fltol 0069  
                                                   _lcd_wr 2D9C  
                                                   clear_0 2B2C  
                                                   clear_1 2B38  
                                         ___awdiv@quotient 000B  
                                                   _roundf 1820  
                                                ??_lcd_dat 0002  
                                                ??_lcd_cmd 0002  
                                                ??_lcd_str 0009  
                                             __mediumconst 7B20  
                                                   tblptrh 000FF7  
                                                   tblptrl 000FF6  
                                                   tblptru 000FF8  
                                  reach_goal@goal_to_reach 000B  
                                               ___flge@ff1 0071  
                                               ___flge@ff2 0075  
                         update_current_coil@stepper_motor 0001  
                                             ___xxtofl@arg 0017  
                                             ___xxtofl@exp 0016  
                                             ___xxtofl@val 000D  
                                               __accesstop 0080  
                                  __end_of__initialization 2B3E  
                                               ___flneg@f1 0001  
                                        serial_tx_char@val 0001  
                                           ??_init_timer_0 0001  
                                           ??_init_timer_2 006F  
                                            ___rparam_used 000001  
                                               ___fltol@f1 0065  
                                           ??_init_stepper 000D  
                                           _tmr2_prescaler 00EF  
                                          _init_interrupts 2DA8  
                                   ??_update_pwm_duty_ccp1 0073  
                                           __pcstackCOMRAM 0001  
                                             __pidataBANK0 2D76  
                                            __end_of_f_osc 7FE5  
                                            __end_of_t_osc 7FE1  
                                            __end_of_toint 7B25  
                                          _temperature_int 0086  
                                  __size_of_serial_tx_char 0020  
                      state_translator_fpga_to_micro@state 0003  
                                         _mix_current_step 00A2  
                                               __pbssBANK0 0080  
                                               __pbssBANK1 0100  
                           ??_configure_ad_conversion_tank 0001  
                           ??_configure_ad_conversion_oven 0001  
                                       __size_of_init_ccp1 0022  
                                                  ?___flge 0071  
                                                  ?___wmul 0001  
                      check_temperature@temp_to_be_checked 007D  
                                                  ?_lcd_wr 0001  
                                                  _CCP1CON 000FBD  
                                     _turn_on_current_coil 2A1E  
                                    __end_of_wait_for_zero 2CD6  
                                  _hex_end_effector_values 00F3  
                                            _read_new_char 00A5  
                          _grasping_joint_position_reached 0094  
                                                  ?_roundf 00C2  
                                       _temperature_scaled 0084  
                                                ?___xxtofl 000D  
                                  reach_goal@stepper_motor 0009  
                                               _get_liters 2952  
                        turn_on_current_coil@stepper_motor 0001  
                                         _desired_baudrate 7B29  
                                               _lcd_update 25FE  
                                                ?_lcd_init 0001  
                                  __end_of_init_interrupts 2DB4  
                                               _const_msgs 7B2D  
                                        _check_temperature 239A  
                            change_direction@stepper_motor 0001  
                                                  __Hparam 0000  
                                       ?_check_temperature 007D  
                                                  __Lparam 0000  
                                               _init_PORTS 2C06  
                                               _init_USART 2B4C  
                                          __size_of___flge 0128  
                                                  ___fladd 09A2  
                                                  ___fldiv 13EE  
                                                  ___awdiv 21D0  
                                                  ___flneg 2B8E  
                                                  ___flmul 0F4A  
                                 __end_of_change_direction 2C06  
                                                  ___flsub 2ABC  
                                                  ___fltol 1F72  
                                          __size_of___wmul 002A  
                                    ?_turn_on_current_coil 0001  
                                       _state_before_error 00ED  
                                          __size_of_lcd_wr 000C  
                                      ??_check_temperature 007F  
                                                  __pcinit 2B06  
                     init_stepper@hex_coil_register_values 0009  
                                                  __ramtop 0600  
                                               _reach_goal 286A  
                                                  __ptext0 007A  
                                                  __ptext1 2CB0  
                                                  __ptext2 28E2  
                                                  __ptext3 2762  
                                                  __ptext4 1E04  
                                                  __ptext5 2D1A  
                                                  __ptext6 286A  
                                                  __ptext7 22C0  
                                                  __ptext8 2A1E  
                                                  __ptext9 25FE  
                                                  _lcd_dat 2C32  
                                                  _lcd_cmd 2C86  
                                                  _lcd_str 29BE  
                                                _T0CONbits 000FD5  
                                          __size_of_roundf 03EC  
                                        __end_of_init_ccp1 2D1A  
                                                _T2CONbits 000FCA  
                                             __size_of_abs 004C  
                                               ??___xxtofl 0011  
                                     __end_of_init_timer_0 2CF8  
                                     __end_of_init_timer_2 253C  
                                     __end_of_init_stepper 2762  
                                            _joint_stepper 00B4  
                                               ??_lcd_init 0003  
                             __size_of_update_current_coil 00DA  
                                     end_of_initialization 2B3E  
                                __end_of_check_temperature 2470  
                                 __size_of_get_temperature 0070  
                                            __Lmediumconst 7B20  
                                               _tank_error 0088  
                      state_translator_micro_to_fpga@state 0001  
                                    __end_of_get_reg_value 2D9C  
                                                _RCSTAbits 000FAB  
                                                  postdec1 000FE5  
                                                  postdec2 000FDD  
                                                  postinc0 000FEE  
                                                  postinc1 000FE6  
                                                  postinc2 000FDE  
                                                  roundf@e 00CE  
                                                  roundf@u 00D4  
                                                  roundf@x 00C2  
                                                  roundf@y 00D8  
                                               _timer_done 00A4  
                                                _PORTEbits 000F84  
                         ??_state_translator_fpga_to_micro 0005  
                          ?_state_translator_fpga_to_micro 0003  
                                              ___fladd@grs 005C  
                                           _serial_tx_char 2D1A  
                                            ___xxtofl@sign 0015  
                                    __end_of_rx_char_usart 0076  
                                                _TRISCbits 000F94  
                                              ?_get_liters 006F  
                                               lcd_dat@val 0002  
                                               lcd_cmd@val 0002  
                                              ___fldiv@grs 0047  
                                              ___fldiv@rem 0040  
                                              ?_lcd_update 000C  
                                               _pwm_period 00E5  
                                            _mix_direction 00A0  
                                     _end_effector_stepper 00A8  
                                              ___flmul@grs 0028  
                                         ?_init_interrupts 0001  
                                              _CCP1CONbits 000FBD  
                                                _TXSTAbits 000FAC  
                                         main@current_temp 00DE  
                                               lcd_str@str 0007  
                                              ?_init_PORTS 0001  
                                              ?_init_USART 0001  
                                   ??_turn_on_current_coil 0003  
                                           __end_of___flge 21D0  
                   __end_of_state_translator_micro_to_fpga 27EC  
                  __size_of_state_translator_micro_to_fpga 008A  
                           _state_translator_micro_to_fpga 2762  
                             _grasping_ee_position_reached 0092  
                                           __end_of___wmul 2C86  
                                           __end_of_lcd_wr 2DA8  
                                              ?_reach_goal 0009  
         state_translator_micro_to_fpga@state_machine_code 0005  
                                   __end_of_serial_tx_char 2D3A  
                                           __end_of_roundf 1C0C  
                                      start_initialization 2B06  
                                              __end_of_abs 2ABC  
                                         _hex_joint_values 00F7  
                               __size_of_check_temperature 00D6  
                                 init_stepper@current_coil 0003  
                                init_stepper@stepper_motor 0001  
                                        ??_get_temperature 0071  
                                                 ??___flge 0079  
                                 __end_of_desired_baudrate 7B2D  
                                      __size_of_get_liters 006C  
                                                 ??___wmul 0005  
                                      __size_of_lcd_update 00BC  
                            __size_of_update_pwm_duty_ccp1 00C2  
                                                 ??_lcd_wr 0001  
                                              __pdataBANK0 00E5  
                                    check_temperature@grad 00C2  
                                    __size_of_init_timer_0 0022  
                                    __size_of_init_timer_2 00CC  
                                    __size_of_init_stepper 00A8  
                                                 ??_roundf 00C6  
                                          ?_serial_tx_char 0001  
                                                ___fladd@a 0051  
                                                ___fladd@b 004D  
                                                ___fldiv@a 0038  
                                                ___fldiv@b 0034  
                                                ___flmul@a 001F  
                                                ___flmul@b 001B  
                                                ___flsub@a 0061  
                                                ___flsub@b 005D  
                                            __pcstackBANK0 00C2  
                                        __size_of___xxtofl 01F8  
                                      __size_of_init_PORTS 002C  
                                      __size_of_init_USART 0042  
                                        __size_of_lcd_init 007E  
                                      __size_of_reach_goal 0078  
                                             _init_timer_0 2CD6  
                                             _init_timer_2 2470  
                                                _main$1736 00E0  
                                             _init_stepper 26BA  
                                    init_stepper@direction 0007  
                                                __pintcode 0008  
                                            __pmediumconst 7B20  
                                                 ?___fladd 004D  
                                                 ?___fldiv 0034  
                                                 ?___awdiv 0005  
                                                 ?___flneg 0001  
                                                 ?___flmul 001B  
                                                 ?___flsub 005D  
                                                 ?___fltol 0065  
                                      _update_current_coil 22C0  
                                        ?_change_direction 0001  
                                       ??_change_direction 0003  
                                                 ?_lcd_dat 0001  
                                                 ?_lcd_cmd 0001  
                                                 ?_lcd_str 0007  
                             update_pwm_duty_ccp1@new_duty 0075  
                                         _mix_step_counter 009E  
                                                _init_ccp1 2CF8  
                                     ?_update_current_coil 0001  
                                   __size_of_wait_for_zero 0026  
                                           ___wmul@product 0005  
                                                 _LATAbits 000F89  
                                                 _PIE1bits 000F9D  
                                            _move_to_trash 0096  
                                    _joint_dilutor_stepper 0100  
                                                 _PIR1bits 000F9E  
                                                 i2u391_40 001C  
                                                 i2u391_41 0016  
                                                 i2u392_40 002E  
                                                 i2u392_41 0028  
                                                 i2u393_40 004E  
                                                 i2u393_41 0048  
                                                 i2u394_40 0060  
                                                 i2u394_41 005A  
                                               _ADCON0bits 000FC2  
                                        ___wmul@multiplier 0001  
                                                lcd_wr@val 0001  
                                             ??_get_liters 0071  
                                             ??_lcd_update 000E  
                                               ?_init_ccp1 0001  
                                    ??_update_current_coil 0003  
                                                copy_data0 2B1A  
                                               roundf@F525 0080  
                                                 __Hrparam 0000  
                                             ??_init_PORTS 0001  
                                             ??_init_USART 007D  
                                                 __Lrparam 0000  
                                       __end_of_get_liters 29BE  
                                         __size_of___fladd 05A8  
                                         __size_of___fldiv 0432  
                                         __size_of___awdiv 00F0  
                                         __size_of___flneg 0042  
                                         __size_of___flmul 04A4  
                                         __size_of___flsub 004A  
                                         __size_of___fltol 0136  
                                       __end_of_lcd_update 26BA  
                                            _wait_for_zero 2CB0  
                                             ??_reach_goal 000D  
                                          lcd_update@F2151 7B25  
                                         __size_of_lcd_dat 002A  
                                         __size_of_lcd_cmd 002A  
                                         __size_of_lcd_str 0060  
                                       __end_of_const_msgs 7FDD  
                                                 ___xxtofl 1C0C  
                                                 __ptext10 29BE  
                                                 __ptext11 2C32  
                                                 __ptext20 2CF8  
                                                 __ptext12 2C5C  
                                                 __ptext21 253C  
                                                 __ptext13 27EC  
                                                 __ptext30 2952  
                                                 __ptext22 13EE  
                                                 __ptext14 2C86  
                                                 __ptext31 1F72  
                                                 __ptext23 2B4C  
                                                 __ptext15 2D9C  
                                                 __ptext40 2BD0  
                                                 __ptext32 0F4A  
                                                 __ptext24 1820  
                                                 __ptext16 2470  
                                                 __ptext33 2D3A  
                                                 __ptext25 2ABC  
                                                 __ptext17 2CD6  
                                                 __ptext34 2D58  
                                                 __ptext26 09A2  
                                                 __ptext18 26BA  
                                                 __ptext35 239A  
                                                 __ptext27 2B8E  
                                                 __ptext19 2DA8  
                                                 __ptext36 2A70  
                                                 __ptext28 2C06  
                                                 __ptext37 1C0C  
                                                 __ptext29 2D8C  
                                                 __ptext38 20A8  
                                                 __ptext39 21D0  
                         ??_state_translator_micro_to_fpga 0003  
                          ?_state_translator_micro_to_fpga 0001  
                                   __size_of_get_reg_value 0010  
                                       __end_of_init_PORTS 2C32  
                                                 _lcd_init 27EC  
                                       __end_of_init_USART 2B8E  
                                          _get_temperature 28E2  
                                          lcd_update@state 000C  
                                _diluting_position_reached 0090  
                                            __size_of_main 0928  
                                              _joint_homed 008E  
                                       __end_of_reach_goal 28E2  
                                   __size_of_rx_char_usart 006E  
                                 __size_of_init_interrupts 000C  
                                                 int$flags 007F  
                                         ??_serial_tx_char 0001  
                            __size_of_turn_on_current_coil 0052  
                                           ?_wait_for_zero 0001  
                                                 lcd_str@i 000B  
                                              _mix_counter 009C  
                                               _INTCONbits 000FF2  
                                              ??_init_ccp1 0078  
                             __end_of_update_pwm_duty_ccp1 25FE  
                                            _idle_msg_sent 00A6  
                                                 intlevel2 2DB4  
                                      _joint_dilutor_homed 008A  
                                  __end_oflcd_update@F2151 7B29  
                                            _get_reg_value 2D8C  
                                            init_stepper@i 000F  
                                            _dilution_done 009A  
                                  __end_of_get_temperature 2952  
                                 init_stepper@step_counter 0005  
                                            _rx_char_usart 0008  
                                __size_of_change_direction 0036  
                                            ___fladd@signs 0059  
                            update_pwm_duty_ccp1@lsbs_duty 0077  
                                             ___fladd@aexp 005A  
                                             ___fladd@bexp 005B  
                                              _roundf$1738 00D0  
                                              _roundf$1739 00CA  
